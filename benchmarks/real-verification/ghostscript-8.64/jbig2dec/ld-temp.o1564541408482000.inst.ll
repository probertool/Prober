; ModuleID = 'ld-temp.o'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct._Jbig2Allocator.1 = type { {}*, void (%struct._Jbig2Allocator.1*, i8*)*, i8* (%struct._Jbig2Allocator.1*, i8*, i64)* }
%struct.mmr_table_node = type { i16, i16 }
%struct.Jbig2ArithQe = type { i16, i8, i8 }
%struct._Jbig2HuffmanLine = type { i32, i32, i32 }
%struct._Jbig2HuffmanParams = type { i32, i32, %struct._Jbig2HuffmanLine* }
%struct._Jbig2Ctx = type { %struct._Jbig2Allocator.1*, i32, %struct._Jbig2Ctx*, i32 (i8*, i8*, i32, i32)*, i8*, i8*, i64, i32, i32, i32, i8, i32, i32, %struct._Jbig2Segment**, i32, i32, i32, i32, %struct._Jbig2Page* }
%struct._Jbig2Segment = type { i32, i8, i32, i64, i32, i32*, i8* }
%struct._Jbig2Page = type { i32, i32, i32, i32, i32, i32, i16, i32, i32, i8, %struct._Jbig2Image* }
%struct._Jbig2Image = type { i32, i32, i32, i8*, i32 }
%struct.jbig2dec_params_t = type { i32, i32, i32, %struct.SHA1_CTX*, i8*, i32 }
%struct.SHA1_CTX = type { [5 x i32], [2 x i32], [64 x i8] }
%struct._Jbig2GlobalCtx = type opaque
%struct._Jbig2Allocator = type { i8* (%struct._Jbig2Allocator*, i64)*, void (%struct._Jbig2Allocator*, i8*)*, i8* (%struct._Jbig2Allocator*, i8*, i64)* }
%union.CHAR64LONG16 = type { [16 x i32] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._Jbig2WordStream = type { i32 (%struct._Jbig2WordStream*, i32)* }
%struct.Jbig2WordStreamBuf = type { %struct._Jbig2WordStream, i8*, i64 }
%struct._Jbig2Ctx.11 = type { %struct._Jbig2Allocator*, i32, %struct._Jbig2Ctx.11*, i32 (i8*, i8*, i32, i32)*, i8*, i8*, i64, i32, i32, i32, i8, i32, i32, %struct._Jbig2Segment**, i32, i32, i32, i32, %struct._Jbig2Page* }
%struct.Jbig2SymbolDict = type { i32, %struct._Jbig2Image** }
%struct._Jbig2Metadata = type { i32, i8**, i8**, i32, i32 }
%struct.Jbig2RegionSegmentInfo = type { i32, i32, i32, i32, i32, i8 }
%struct.Jbig2SymbolDictParams = type { i32, i32, i32, %struct.Jbig2SymbolDict*, i32, i32, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, i32, [8 x i8], i32, [4 x i8] }
%struct._Jbig2HuffmanTable = type { i32, %struct._Jbig2HuffmanEntry* }
%struct._Jbig2HuffmanEntry = type { %union.anon, i8, i8, i8 }
%union.anon = type { %struct._Jbig2HuffmanTable* }
%struct._Jbig2HuffmanState = type { i32, i32, i32, i32, %struct._Jbig2WordStream* }
%struct._Jbig2ArithState = type { i32, i32, i32, i32, i32, %struct._Jbig2WordStream*, i32 }
%struct._Jbig2ArithIntCtx = type { [512 x i8] }
%struct._Jbig2ArithIaidCtx = type { i32, i8* }
%struct.Jbig2TextRegionParams = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx*, i32, [4 x i8] }
%struct.Jbig2GenericRegionParams = type { i32, i32, i32, i32, [8 x i8] }
%struct.Jbig2RefinementRegionParams = type { i32, %struct._Jbig2Image*, i32, i32, i32, [4 x i8] }
%struct.Jbig2MmrCtx = type { i32, i32, i8*, i64, i32, i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [41 x i8] c"Sorry, segment dump not yet implemented\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"error opening %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".pbm\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.33 = private unnamed_addr constant [27 x i8] c"Hash of decoded document: \00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"unsupported output format.\0A\00", align 1
@.str.32 = private unnamed_addr constant [29 x i8] c"saving decoded page as '%s'\0A\00", align 1
@.str.27 = private unnamed_addr constant [48 x i8] c"make_output_filename called with no extension!\0A\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.29 = private unnamed_addr constant [46 x i8] c"couldn't allocate memory for output_filename\0A\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"DEBUG\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"FATAL ERROR\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"unknown message\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"(segment 0x%02x)\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"jbig2dec %s %s %s\0A\00", align 1
@.str.19 = private unnamed_addr constant [1000 x i8] c"Usage: jbig2dec [options] <file.jbig2>\0A   or  jbig2dec [options] <global_stream> <page_stream>\0A\0A  When invoked with a single file, it attempts to parse it as\0A  a normal jbig2 file. Invoked with two files, it treats the\0A  first as the global segments, and the second as the segment\0A  stream for a particular page. This is useful for examining\0A  embedded streams.\0A\0A  available options:\0A    -h --help\09this usage summary\0A    -q --quiet     suppress diagnostic output\0A    -v --verbose   set the verbosity level\0A    -d --dump      print the structure of the jbig2 file\0A                   rather than explicitly decoding\0A       --version   program name and version information\0A       --hash      print a hash of the decode document\0A    -o <file>      send decoded output to <file>\0A                   Defaults to the the input with a different\0A                   extension. Pass '-' for stdout.\0A    -t <type>      force a particular output file format\0A                   the only supported option is 'pbm'\0A\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"unable to allocate hash state\0A\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"Vh?qvdo:t:\00", align 1
@parse_options.long_options = internal global [9 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 2, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i32 0, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.13 = private unnamed_addr constant [27 x i8] c"unrecognized option: --%s\0A\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.14 = private unnamed_addr constant [26 x i8] c"unrecognized option: -%c\0A\00", align 1
@optind = external dso_local global i32, align 4
@.str.15 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"jbig2dec\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"0.9pre\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"\80\00", align 1
@.str.1.38 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.39 = private unnamed_addr constant [46 x i8] c"jbig2_error: error in generating error string\00", align 1
@jbig2_default_allocator = internal global { i8* (%struct._Jbig2Allocator.1*, i64)*, void (%struct._Jbig2Allocator.1*, i8*)*, i8* (%struct._Jbig2Allocator.1*, i8*, i64)* } { i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_default_alloc, void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_default_free, i8* (%struct._Jbig2Allocator.1*, i8*, i64)* @jbig2_default_realloc }, align 8, !dbg !84
@.str.1.42 = private unnamed_addr constant [35 x i8] c"initial context allocation failed!\00", align 1
@.str.10.43 = private unnamed_addr constant [30 x i8] c"jbig2 decoder FATAL ERROR: %s\00", align 1
@.str.11.44 = private unnamed_addr constant [18 x i8] c" (segment 0x%02x)\00", align 1
@.str.12.45 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@__const.jbig2_data_in.jbig2_id_string = private unnamed_addr constant [8 x i8] c"\97JB2\0D\0A\1A\0A", align 1
@.str.2.48 = private unnamed_addr constant [24 x i8] c"Not a JBIG2 file header\00", align 1
@.str.3.49 = private unnamed_addr constant [63 x i8] c"reserved bits (2-7) of file header flags are not zero (0x%02x)\00", align 1
@.str.4.50 = private unnamed_addr constant [45 x i8] c"file header indicates a single page document\00", align 1
@.str.5.51 = private unnamed_addr constant [41 x i8] c"file header indicates a %d page document\00", align 1
@.str.6.52 = private unnamed_addr constant [46 x i8] c"file header indicates sequential organization\00", align 1
@.str.7.53 = private unnamed_addr constant [49 x i8] c"file header indicates random-access organization\00", align 1
@.str.8.54 = private unnamed_addr constant [27 x i8] c"Garbage beyond end of file\00", align 1
@.str.63 = private unnamed_addr constant [59 x i8] c"jbig2_parse_segment_header() called with insufficient data\00", align 1
@.str.1.64 = private unnamed_addr constant [32 x i8] c"segment %d refers to segment %d\00", align 1
@.str.2.65 = private unnamed_addr constant [38 x i8] c"segment %d is associated with page %d\00", align 1
@.str.3.68 = private unnamed_addr constant [78 x i8] c"extension segment is marked 'necessary' but not 'reservered' contrary to spec\00", align 1
@.str.4.69 = private unnamed_addr constant [50 x i8] c"unhandled necessary extension segment type 0x%08x\00", align 1
@.str.5.70 = private unnamed_addr constant [28 x i8] c"unhandled extension segment\00", align 1
@.str.6.73 = private unnamed_addr constant [46 x i8] c"Segment %d, flags=%x, type=%d, data_length=%d\00", align 1
@.str.7.74 = private unnamed_addr constant [44 x i8] c"unhandled segment type 'pattern dictionary'\00", align 1
@.str.8.75 = private unnamed_addr constant [54 x i8] c"unhandled segment type 'intermediate halftone region'\00", align 1
@.str.9.76 = private unnamed_addr constant [51 x i8] c"unhandled segment type 'immediate halftone region'\00", align 1
@.str.10.77 = private unnamed_addr constant [60 x i8] c"unhandled segment type 'immediate lossless halftone region'\00", align 1
@.str.11.78 = private unnamed_addr constant [53 x i8] c"unhandled segment type 'intermediate generic region'\00", align 1
@.str.12.79 = private unnamed_addr constant [12 x i8] c"end of file\00", align 1
@.str.13.80 = private unnamed_addr constant [33 x i8] c"unhandled segment type 'profile'\00", align 1
@.str.14.81 = private unnamed_addr constant [24 x i8] c"unhandled table segment\00", align 1
@.str.15.82 = private unnamed_addr constant [24 x i8] c"unknown segment type %d\00", align 1
@.str.85 = private unnamed_addr constant [61 x i8] c"unexpected page info segment, marking previous page finished\00", align 1
@.str.1.86 = private unnamed_addr constant [18 x i8] c"segment too short\00", align 1
@.str.2.87 = private unnamed_addr constant [56 x i8] c"height is unspecified but page is not markes as striped\00", align 1
@.str.3.88 = private unnamed_addr constant [22 x i8] c"extra data in segment\00", align 1
@.str.4.89 = private unnamed_addr constant [41 x i8] c"failed to allocate buffer for page image\00", align 1
@.str.5.90 = private unnamed_addr constant [38 x i8] c"allocated %dx%d page image (%d bytes)\00", align 1
@.str.15.91 = private unnamed_addr constant [37 x i8] c"page %d image is %dx%d (unknown res)\00", align 1
@.str.16.92 = private unnamed_addr constant [32 x i8] c"page %d image is %dx%d (%d ppm)\00", align 1
@.str.17.93 = private unnamed_addr constant [35 x i8] c"page %d image is %dx%d (%dx%d ppm)\00", align 1
@.str.18.94 = private unnamed_addr constant [25 x i8] c"\09maximum stripe size: %d\00", align 1
@.str.6.97 = private unnamed_addr constant [94 x i8] c"end of stripe segment with non-positive end row advance(new end row %d vs current end row %d)\00", align 1
@.str.7.98 = private unnamed_addr constant [39 x i8] c"end of stripe: advancing end row to %d\00", align 1
@.str.8.101 = private unnamed_addr constant [84 x i8] c"File has an invalid segment data length! Trying to decode using the available data.\00", align 1
@.str.9.104 = private unnamed_addr constant [68 x i8] c"end of page marker for page %d doesn't match current page number %d\00", align 1
@.str.10.105 = private unnamed_addr constant [15 x i8] c"end of page %d\00", align 1
@.str.11.106 = private unnamed_addr constant [56 x i8] c"growing page buffer to %d rows to accomodate new stripe\00", align 1
@.str.12.109 = private unnamed_addr constant [31 x i8] c"page %d returned to the client\00", align 1
@.str.13.112 = private unnamed_addr constant [31 x i8] c"page %d released by the client\00", align 1
@.str.14.113 = private unnamed_addr constant [42 x i8] c"jbig2_release_page called on unknown page\00", align 1
@.str.116 = private unnamed_addr constant [58 x i8] c"counted %d symbol dictionaries but build a list with %d.\0A\00", align 1
@.str.1.119 = private unnamed_addr constant [53 x i8] c"symbol dictionary uses custom DH huffman table (NYI)\00", align 1
@.str.2.120 = private unnamed_addr constant [50 x i8] c"symbol dictionary specified invalid huffman table\00", align 1
@.str.3.121 = private unnamed_addr constant [53 x i8] c"symbol dictionary uses custom DW huffman table (NYI)\00", align 1
@.str.4.122 = private unnamed_addr constant [57 x i8] c"symbol dictionary uses custom BMSIZE huffman table (NYI)\00", align 1
@.str.5.123 = private unnamed_addr constant [57 x i8] c"symbol dictionary uses custom REFAGG huffman table (NYI)\00", align 1
@.str.6.124 = private unnamed_addr constant [54 x i8] c"SDHUFF is zero, but contrary to spec SDHUFFDH is not.\00", align 1
@.str.7.125 = private unnamed_addr constant [54 x i8] c"SDHUFF is zero, but contrary to spec SDHUFFDW is not.\00", align 1
@.str.8.126 = private unnamed_addr constant [70 x i8] c"bitmap coding context is used (NYI) symbol data likely to be garbage!\00", align 1
@.str.9.127 = private unnamed_addr constant [61 x i8] c"symbol dictionary, flags=%04x, %d exported syms, %d new syms\00", align 1
@.str.10.128 = private unnamed_addr constant [54 x i8] c"segment marks bitmap coding context as retained (NYI)\00", align 1
@.str.11.129 = private unnamed_addr constant [18 x i8] c"Segment too short\00", align 1
@.str.12.130 = private unnamed_addr constant [32 x i8] c"huffman coded symbol dictionary\00", align 1
@.str.13.131 = private unnamed_addr constant [45 x i8] c"could not allocate storage for symbol widths\00", align 1
@.str.14.132 = private unnamed_addr constant [47 x i8] c"error or OOB decoding height class delta (%d)\0A\00", align 1
@.str.15.133 = private unnamed_addr constant [23 x i8] c"Invalid HCHEIGHT value\00", align 1
@.str.16.134 = private unnamed_addr constant [46 x i8] c"decoding height class %d with %d syms decoded\00", align 1
@.str.17.135 = private unnamed_addr constant [41 x i8] c"No OOB signalling end of height class %d\00", align 1
@.str.18.136 = private unnamed_addr constant [36 x i8] c" OOB signals end of height class %d\00", align 1
@.str.19.137 = private unnamed_addr constant [41 x i8] c"Invalid SYMWIDTH value (%d) at symbol %d\00", align 1
@.str.20.138 = private unnamed_addr constant [52 x i8] c"invalid number of symbols or OOB in aggregate glyph\00", align 1
@.str.21.139 = private unnamed_addr constant [39 x i8] c"aggregate symbol coding (%d instances)\00", align 1
@.str.22.140 = private unnamed_addr constant [42 x i8] c"Out of memory allocating dictionary array\00", align 1
@.str.23.141 = private unnamed_addr constant [43 x i8] c"Out of memory allocating symbol dictionary\00", align 1
@.str.24.142 = private unnamed_addr constant [42 x i8] c"Out of memory creating text region params\00", align 1
@.str.25.143 = private unnamed_addr constant [36 x i8] c"Out of memory creating symbol image\00", align 1
@.str.26.144 = private unnamed_addr constant [40 x i8] c"refinement references unknown symbol %d\00", align 1
@.str.27.145 = private unnamed_addr constant [71 x i8] c"symbol is a refinement of id %d with the refinement applied at (%d,%d)\00", align 1
@.str.28.146 = private unnamed_addr constant [32 x i8] c"decoded symbol %d of %d (%dx%d)\00", align 1
@.str.29.147 = private unnamed_addr constant [42 x i8] c"error decoding size of collective bitmap!\00", align 1
@.str.30.148 = private unnamed_addr constant [44 x i8] c"could not allocate collective bitmap image!\00", align 1
@.str.31.149 = private unnamed_addr constant [60 x i8] c"reading %dx%d uncompressed bitmap for %d symbols (%d bytes)\00", align 1
@.str.32.150 = private unnamed_addr constant [58 x i8] c"reading %dx%d collective bitmap for %d symbols (%d bytes)\00", align 1
@.str.33.151 = private unnamed_addr constant [33 x i8] c"error decoding MMR bitmap image!\00", align 1
@.str.154 = private unnamed_addr constant [50 x i8] c"symbol list contains %d glyphs in %d dictionaries\00", align 1
@.str.1.155 = private unnamed_addr constant [26 x i8] c"huffman coded text region\00", align 1
@.str.2.156 = private unnamed_addr constant [27 x i8] c"  read runcode%d length %d\00", align 1
@.str.3.157 = private unnamed_addr constant [44 x i8] c"error constructing symbol id runcode table!\00", align 1
@.str.4.158 = private unnamed_addr constant [59 x i8] c"memory allocation failure reading symbol ID huffman table!\00", align 1
@.str.5.159 = private unnamed_addr constant [39 x i8] c"error reading symbol ID huffman table!\00", align 1
@.str.6.160 = private unnamed_addr constant [63 x i8] c"error decoding symbol id table: run length with no antecedent!\00", align 1
@.str.7.161 = private unnamed_addr constant [50 x i8] c"  read runcode%d at index %d (length %d range %d)\00", align 1
@.str.8.162 = private unnamed_addr constant [64 x i8] c"runlength extends %d entries beyond the end of symbol id table!\00", align 1
@.str.9.163 = private unnamed_addr constant [54 x i8] c"runlength codes do not cover the available symbol set\00", align 1
@.str.10.164 = private unnamed_addr constant [45 x i8] c"could not construct Symbol ID huffman table!\00", align 1
@.str.11.165 = private unnamed_addr constant [32 x i8] c"symbol id out of range! (%d/%d)\00", align 1
@.str.12.168 = private unnamed_addr constant [32 x i8] c"text region header flags 0x%04x\00", align 1
@.str.13.169 = private unnamed_addr constant [30 x i8] c"text region has SBDSOFFSET %d\00", align 1
@.str.14.170 = private unnamed_addr constant [57 x i8] c"reserved bit 15 of text region huffman flags is not zero\00", align 1
@.str.15.171 = private unnamed_addr constant [47 x i8] c"text region uses custom FS huffman table (NYI)\00", align 1
@.str.16.172 = private unnamed_addr constant [47 x i8] c"text region specified invalid FS huffman table\00", align 1
@.str.17.173 = private unnamed_addr constant [47 x i8] c"text region uses custom DS huffman table (NYI)\00", align 1
@.str.18.174 = private unnamed_addr constant [47 x i8] c"text region uses custom DT huffman table (NYI)\00", align 1
@.str.19.175 = private unnamed_addr constant [48 x i8] c"text region uses custom RDW huffman table (NYI)\00", align 1
@.str.20.176 = private unnamed_addr constant [48 x i8] c"text region specified invalid RDW huffman table\00", align 1
@.str.21.177 = private unnamed_addr constant [48 x i8] c"text region uses custom RDH huffman table (NYI)\00", align 1
@.str.22.178 = private unnamed_addr constant [48 x i8] c"text region specified invalid RDH huffman table\00", align 1
@.str.23.179 = private unnamed_addr constant [48 x i8] c"text region uses custom RDX huffman table (NYI)\00", align 1
@.str.24.180 = private unnamed_addr constant [48 x i8] c"text region specified invalid RDX huffman table\00", align 1
@.str.25.181 = private unnamed_addr constant [48 x i8] c"text region uses custom RDY huffman table (NYI)\00", align 1
@.str.26.182 = private unnamed_addr constant [48 x i8] c"text region specified invalid RDY huffman table\00", align 1
@.str.27.183 = private unnamed_addr constant [50 x i8] c"text region uses custom RSIZE huffman table (NYI)\00", align 1
@.str.28.184 = private unnamed_addr constant [58 x i8] c"text region huffman flags bit 15 is set, contrary to spec\00", align 1
@.str.29.185 = private unnamed_addr constant [42 x i8] c"text region: %d x %d @ (%d,%d) %d symbols\00", align 1
@.str.30.186 = private unnamed_addr constant [46 x i8] c"text region refers to no symbol dictionaries!\00", align 1
@.str.31.187 = private unnamed_addr constant [63 x i8] c"unable to retrive symbol dictionaries! previous parsing error?\00", align 1
@.str.32.188 = private unnamed_addr constant [51 x i8] c"unable to find first referenced symbol dictionary!\00", align 1
@.str.33.189 = private unnamed_addr constant [51 x i8] c"unable to find all referenced symbol dictionaries!\00", align 1
@.str.34.190 = private unnamed_addr constant [58 x i8] c"composing %dx%d decoded text region onto page at (%d, %d)\00", align 1
@.str.35.191 = private unnamed_addr constant [18 x i8] c"Segment too short\00", align 1
@.str.194 = private unnamed_addr constant [14 x i8] c"gbat[%d] = %d\00", align 1
@.str.1.195 = private unnamed_addr constant [49 x i8] c"decode_generic_region: MMR=%d, GBTEMPLATE=%d NYI\00", align 1
@.str.2.198 = private unnamed_addr constant [18 x i8] c"Segment too short\00", align 1
@.str.3.199 = private unnamed_addr constant [49 x i8] c"generic region: %d x %d @ (%d, %d), flags = %02x\00", align 1
@.str.4.200 = private unnamed_addr constant [21 x i8] c"segment flags = %02x\00", align 1
@.str.5.201 = private unnamed_addr constant [34 x i8] c"MMR is 1, but GBTEMPLATE is not 0\00", align 1
@.str.6.202 = private unnamed_addr constant [13 x i8] c"gbat: %d, %d\00", align 1
@.str.7.203 = private unnamed_addr constant [57 x i8] c"allocated %d x %d image buffer for region decode results\00", align 1
@.str.206 = private unnamed_addr constant [107 x i8] c"decoding generic refinement region with offset %d,%x,\0A  GRTEMPLATE=%d, TPGRON=%d, RA1=(%d,%d) RA2=(%d,%d)\0A\00", align 1
@.str.1.207 = private unnamed_addr constant [56 x i8] c"decode_refinement_region: typical prediction coding NYI\00", align 1
@.str.2.208 = private unnamed_addr constant [38 x i8] c"could not find referred to segment %d\00", align 1
@.str.3.211 = private unnamed_addr constant [18 x i8] c"Segment too short\00", align 1
@.str.4.212 = private unnamed_addr constant [49 x i8] c"generic region: %d x %d @ (%d, %d), flags = %02x\00", align 1
@.str.6.213 = private unnamed_addr constant [12 x i8] c" GRTEMPLATE\00", align 1
@.str.7.214 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8.215 = private unnamed_addr constant [8 x i8] c" TPGRON\00", align 1
@.str.5.216 = private unnamed_addr constant [26 x i8] c"segment flags = %02x %s%s\00", align 1
@.str.9.217 = private unnamed_addr constant [40 x i8] c"reserved segment flag bits are non-zero\00", align 1
@.str.10.218 = private unnamed_addr constant [32 x i8] c"grat1: (%d, %d) grat2: (%d, %d)\00", align 1
@.str.11.219 = private unnamed_addr constant [33 x i8] c"could not find reference bitmap!\00", align 1
@.str.12.220 = private unnamed_addr constant [37 x i8] c"found reference bitmap in segment %d\00", align 1
@.str.13.221 = private unnamed_addr constant [33 x i8] c"unable to allocate image storage\00", align 1
@.str.14.222 = private unnamed_addr constant [57 x i8] c"allocated %d x %d image buffer for region decode results\00", align 1
@.str.15.223 = private unnamed_addr constant [64 x i8] c"composing %dx%d decoded refinement region onto page at (%d, %d)\00", align 1
@jbig2_mmr_white_decode = dso_local constant [304 x %struct.mmr_table_node] [%struct.mmr_table_node { i16 256, i16 12 }, %struct.mmr_table_node { i16 272, i16 12 }, %struct.mmr_table_node { i16 29, i16 8 }, %struct.mmr_table_node { i16 30, i16 8 }, %struct.mmr_table_node { i16 45, i16 8 }, %struct.mmr_table_node { i16 46, i16 8 }, %struct.mmr_table_node { i16 22, i16 7 }, %struct.mmr_table_node { i16 22, i16 7 }, %struct.mmr_table_node { i16 23, i16 7 }, %struct.mmr_table_node { i16 23, i16 7 }, %struct.mmr_table_node { i16 47, i16 8 }, %struct.mmr_table_node { i16 48, i16 8 }, %struct.mmr_table_node { i16 13, i16 6 }, %struct.mmr_table_node { i16 13, i16 6 }, %struct.mmr_table_node { i16 13, i16 6 }, %struct.mmr_table_node { i16 13, i16 6 }, %struct.mmr_table_node { i16 20, i16 7 }, %struct.mmr_table_node { i16 20, i16 7 }, %struct.mmr_table_node { i16 33, i16 8 }, %struct.mmr_table_node { i16 34, i16 8 }, %struct.mmr_table_node { i16 35, i16 8 }, %struct.mmr_table_node { i16 36, i16 8 }, %struct.mmr_table_node { i16 37, i16 8 }, %struct.mmr_table_node { i16 38, i16 8 }, %struct.mmr_table_node { i16 19, i16 7 }, %struct.mmr_table_node { i16 19, i16 7 }, %struct.mmr_table_node { i16 31, i16 8 }, %struct.mmr_table_node { i16 32, i16 8 }, %struct.mmr_table_node { i16 1, i16 6 }, %struct.mmr_table_node { i16 1, i16 6 }, %struct.mmr_table_node { i16 1, i16 6 }, %struct.mmr_table_node { i16 1, i16 6 }, %struct.mmr_table_node { i16 12, i16 6 }, %struct.mmr_table_node { i16 12, i16 6 }, %struct.mmr_table_node { i16 12, i16 6 }, %struct.mmr_table_node { i16 12, i16 6 }, %struct.mmr_table_node { i16 53, i16 8 }, %struct.mmr_table_node { i16 54, i16 8 }, %struct.mmr_table_node { i16 26, i16 7 }, %struct.mmr_table_node { i16 26, i16 7 }, %struct.mmr_table_node { i16 39, i16 8 }, %struct.mmr_table_node { i16 40, i16 8 }, %struct.mmr_table_node { i16 41, i16 8 }, %struct.mmr_table_node { i16 42, i16 8 }, %struct.mmr_table_node { i16 43, i16 8 }, %struct.mmr_table_node { i16 44, i16 8 }, %struct.mmr_table_node { i16 21, i16 7 }, %struct.mmr_table_node { i16 21, i16 7 }, %struct.mmr_table_node { i16 28, i16 7 }, %struct.mmr_table_node { i16 28, i16 7 }, %struct.mmr_table_node { i16 61, i16 8 }, %struct.mmr_table_node { i16 62, i16 8 }, %struct.mmr_table_node { i16 63, i16 8 }, %struct.mmr_table_node { i16 0, i16 8 }, %struct.mmr_table_node { i16 320, i16 8 }, %struct.mmr_table_node { i16 384, i16 8 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 10, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 11, i16 5 }, %struct.mmr_table_node { i16 27, i16 7 }, %struct.mmr_table_node { i16 27, i16 7 }, %struct.mmr_table_node { i16 59, i16 8 }, %struct.mmr_table_node { i16 60, i16 8 }, %struct.mmr_table_node { i16 288, i16 9 }, %struct.mmr_table_node { i16 290, i16 9 }, %struct.mmr_table_node { i16 18, i16 7 }, %struct.mmr_table_node { i16 18, i16 7 }, %struct.mmr_table_node { i16 24, i16 7 }, %struct.mmr_table_node { i16 24, i16 7 }, %struct.mmr_table_node { i16 49, i16 8 }, %struct.mmr_table_node { i16 50, i16 8 }, %struct.mmr_table_node { i16 51, i16 8 }, %struct.mmr_table_node { i16 52, i16 8 }, %struct.mmr_table_node { i16 25, i16 7 }, %struct.mmr_table_node { i16 25, i16 7 }, %struct.mmr_table_node { i16 55, i16 8 }, %struct.mmr_table_node { i16 56, i16 8 }, %struct.mmr_table_node { i16 57, i16 8 }, %struct.mmr_table_node { i16 58, i16 8 }, %struct.mmr_table_node { i16 192, i16 6 }, %struct.mmr_table_node { i16 192, i16 6 }, %struct.mmr_table_node { i16 192, i16 6 }, %struct.mmr_table_node { i16 192, i16 6 }, %struct.mmr_table_node { i16 1664, i16 6 }, %struct.mmr_table_node { i16 1664, i16 6 }, %struct.mmr_table_node { i16 1664, i16 6 }, %struct.mmr_table_node { i16 1664, i16 6 }, %struct.mmr_table_node { i16 448, i16 8 }, %struct.mmr_table_node { i16 512, i16 8 }, %struct.mmr_table_node { i16 292, i16 9 }, %struct.mmr_table_node { i16 640, i16 8 }, %struct.mmr_table_node { i16 576, i16 8 }, %struct.mmr_table_node { i16 294, i16 9 }, %struct.mmr_table_node { i16 296, i16 9 }, %struct.mmr_table_node { i16 298, i16 9 }, %struct.mmr_table_node { i16 300, i16 9 }, %struct.mmr_table_node { i16 302, i16 9 }, %struct.mmr_table_node { i16 256, i16 7 }, %struct.mmr_table_node { i16 256, i16 7 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 2, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 3, i16 4 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 8, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 9, i16 5 }, %struct.mmr_table_node { i16 16, i16 6 }, %struct.mmr_table_node { i16 16, i16 6 }, %struct.mmr_table_node { i16 16, i16 6 }, %struct.mmr_table_node { i16 16, i16 6 }, %struct.mmr_table_node { i16 17, i16 6 }, %struct.mmr_table_node { i16 17, i16 6 }, %struct.mmr_table_node { i16 17, i16 6 }, %struct.mmr_table_node { i16 17, i16 6 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 4, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 14, i16 6 }, %struct.mmr_table_node { i16 14, i16 6 }, %struct.mmr_table_node { i16 14, i16 6 }, %struct.mmr_table_node { i16 14, i16 6 }, %struct.mmr_table_node { i16 15, i16 6 }, %struct.mmr_table_node { i16 15, i16 6 }, %struct.mmr_table_node { i16 15, i16 6 }, %struct.mmr_table_node { i16 15, i16 6 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 64, i16 5 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 7, i16 4 }, %struct.mmr_table_node { i16 -2, i16 3 }, %struct.mmr_table_node { i16 -2, i16 3 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -3, i16 4 }, %struct.mmr_table_node { i16 1792, i16 3 }, %struct.mmr_table_node { i16 1792, i16 3 }, %struct.mmr_table_node { i16 1984, i16 4 }, %struct.mmr_table_node { i16 2048, i16 4 }, %struct.mmr_table_node { i16 2112, i16 4 }, %struct.mmr_table_node { i16 2176, i16 4 }, %struct.mmr_table_node { i16 2240, i16 4 }, %struct.mmr_table_node { i16 2304, i16 4 }, %struct.mmr_table_node { i16 1856, i16 3 }, %struct.mmr_table_node { i16 1856, i16 3 }, %struct.mmr_table_node { i16 1920, i16 3 }, %struct.mmr_table_node { i16 1920, i16 3 }, %struct.mmr_table_node { i16 2368, i16 4 }, %struct.mmr_table_node { i16 2432, i16 4 }, %struct.mmr_table_node { i16 2496, i16 4 }, %struct.mmr_table_node { i16 2560, i16 4 }, %struct.mmr_table_node { i16 1472, i16 1 }, %struct.mmr_table_node { i16 1536, i16 1 }, %struct.mmr_table_node { i16 1600, i16 1 }, %struct.mmr_table_node { i16 1728, i16 1 }, %struct.mmr_table_node { i16 704, i16 1 }, %struct.mmr_table_node { i16 768, i16 1 }, %struct.mmr_table_node { i16 832, i16 1 }, %struct.mmr_table_node { i16 896, i16 1 }, %struct.mmr_table_node { i16 960, i16 1 }, %struct.mmr_table_node { i16 1024, i16 1 }, %struct.mmr_table_node { i16 1088, i16 1 }, %struct.mmr_table_node { i16 1152, i16 1 }, %struct.mmr_table_node { i16 1216, i16 1 }, %struct.mmr_table_node { i16 1280, i16 1 }, %struct.mmr_table_node { i16 1344, i16 1 }, %struct.mmr_table_node { i16 1408, i16 1 }], align 16, !dbg !223
@jbig2_mmr_black_decode = dso_local constant [320 x %struct.mmr_table_node] [%struct.mmr_table_node { i16 128, i16 12 }, %struct.mmr_table_node { i16 160, i16 13 }, %struct.mmr_table_node { i16 224, i16 12 }, %struct.mmr_table_node { i16 256, i16 12 }, %struct.mmr_table_node { i16 10, i16 7 }, %struct.mmr_table_node { i16 11, i16 7 }, %struct.mmr_table_node { i16 288, i16 12 }, %struct.mmr_table_node { i16 12, i16 7 }, %struct.mmr_table_node { i16 9, i16 6 }, %struct.mmr_table_node { i16 9, i16 6 }, %struct.mmr_table_node { i16 8, i16 6 }, %struct.mmr_table_node { i16 8, i16 6 }, %struct.mmr_table_node { i16 7, i16 5 }, %struct.mmr_table_node { i16 7, i16 5 }, %struct.mmr_table_node { i16 7, i16 5 }, %struct.mmr_table_node { i16 7, i16 5 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 6, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 5, i16 4 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 1, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 4, i16 3 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 3, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 2, i16 2 }, %struct.mmr_table_node { i16 -2, i16 4 }, %struct.mmr_table_node { i16 -2, i16 4 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -1, i16 0 }, %struct.mmr_table_node { i16 -3, i16 5 }, %struct.mmr_table_node { i16 1792, i16 4 }, %struct.mmr_table_node { i16 1792, i16 4 }, %struct.mmr_table_node { i16 1984, i16 5 }, %struct.mmr_table_node { i16 2048, i16 5 }, %struct.mmr_table_node { i16 2112, i16 5 }, %struct.mmr_table_node { i16 2176, i16 5 }, %struct.mmr_table_node { i16 2240, i16 5 }, %struct.mmr_table_node { i16 2304, i16 5 }, %struct.mmr_table_node { i16 1856, i16 4 }, %struct.mmr_table_node { i16 1856, i16 4 }, %struct.mmr_table_node { i16 1920, i16 4 }, %struct.mmr_table_node { i16 1920, i16 4 }, %struct.mmr_table_node { i16 2368, i16 5 }, %struct.mmr_table_node { i16 2432, i16 5 }, %struct.mmr_table_node { i16 2496, i16 5 }, %struct.mmr_table_node { i16 2560, i16 5 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 18, i16 3 }, %struct.mmr_table_node { i16 52, i16 5 }, %struct.mmr_table_node { i16 52, i16 5 }, %struct.mmr_table_node { i16 640, i16 6 }, %struct.mmr_table_node { i16 704, i16 6 }, %struct.mmr_table_node { i16 768, i16 6 }, %struct.mmr_table_node { i16 832, i16 6 }, %struct.mmr_table_node { i16 55, i16 5 }, %struct.mmr_table_node { i16 55, i16 5 }, %struct.mmr_table_node { i16 56, i16 5 }, %struct.mmr_table_node { i16 56, i16 5 }, %struct.mmr_table_node { i16 1280, i16 6 }, %struct.mmr_table_node { i16 1344, i16 6 }, %struct.mmr_table_node { i16 1408, i16 6 }, %struct.mmr_table_node { i16 1472, i16 6 }, %struct.mmr_table_node { i16 59, i16 5 }, %struct.mmr_table_node { i16 59, i16 5 }, %struct.mmr_table_node { i16 60, i16 5 }, %struct.mmr_table_node { i16 60, i16 5 }, %struct.mmr_table_node { i16 1536, i16 6 }, %struct.mmr_table_node { i16 1600, i16 6 }, %struct.mmr_table_node { i16 24, i16 4 }, %struct.mmr_table_node { i16 24, i16 4 }, %struct.mmr_table_node { i16 24, i16 4 }, %struct.mmr_table_node { i16 24, i16 4 }, %struct.mmr_table_node { i16 25, i16 4 }, %struct.mmr_table_node { i16 25, i16 4 }, %struct.mmr_table_node { i16 25, i16 4 }, %struct.mmr_table_node { i16 25, i16 4 }, %struct.mmr_table_node { i16 1664, i16 6 }, %struct.mmr_table_node { i16 1728, i16 6 }, %struct.mmr_table_node { i16 320, i16 5 }, %struct.mmr_table_node { i16 320, i16 5 }, %struct.mmr_table_node { i16 384, i16 5 }, %struct.mmr_table_node { i16 384, i16 5 }, %struct.mmr_table_node { i16 448, i16 5 }, %struct.mmr_table_node { i16 448, i16 5 }, %struct.mmr_table_node { i16 512, i16 6 }, %struct.mmr_table_node { i16 576, i16 6 }, %struct.mmr_table_node { i16 53, i16 5 }, %struct.mmr_table_node { i16 53, i16 5 }, %struct.mmr_table_node { i16 54, i16 5 }, %struct.mmr_table_node { i16 54, i16 5 }, %struct.mmr_table_node { i16 896, i16 6 }, %struct.mmr_table_node { i16 960, i16 6 }, %struct.mmr_table_node { i16 1024, i16 6 }, %struct.mmr_table_node { i16 1088, i16 6 }, %struct.mmr_table_node { i16 1152, i16 6 }, %struct.mmr_table_node { i16 1216, i16 6 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 64, i16 3 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 13, i16 1 }, %struct.mmr_table_node { i16 23, i16 4 }, %struct.mmr_table_node { i16 23, i16 4 }, %struct.mmr_table_node { i16 50, i16 5 }, %struct.mmr_table_node { i16 51, i16 5 }, %struct.mmr_table_node { i16 44, i16 5 }, %struct.mmr_table_node { i16 45, i16 5 }, %struct.mmr_table_node { i16 46, i16 5 }, %struct.mmr_table_node { i16 47, i16 5 }, %struct.mmr_table_node { i16 57, i16 5 }, %struct.mmr_table_node { i16 58, i16 5 }, %struct.mmr_table_node { i16 61, i16 5 }, %struct.mmr_table_node { i16 256, i16 5 }, %struct.mmr_table_node { i16 16, i16 3 }, %struct.mmr_table_node { i16 16, i16 3 }, %struct.mmr_table_node { i16 16, i16 3 }, %struct.mmr_table_node { i16 16, i16 3 }, %struct.mmr_table_node { i16 17, i16 3 }, %struct.mmr_table_node { i16 17, i16 3 }, %struct.mmr_table_node { i16 17, i16 3 }, %struct.mmr_table_node { i16 17, i16 3 }, %struct.mmr_table_node { i16 48, i16 5 }, %struct.mmr_table_node { i16 49, i16 5 }, %struct.mmr_table_node { i16 62, i16 5 }, %struct.mmr_table_node { i16 63, i16 5 }, %struct.mmr_table_node { i16 30, i16 5 }, %struct.mmr_table_node { i16 31, i16 5 }, %struct.mmr_table_node { i16 32, i16 5 }, %struct.mmr_table_node { i16 33, i16 5 }, %struct.mmr_table_node { i16 40, i16 5 }, %struct.mmr_table_node { i16 41, i16 5 }, %struct.mmr_table_node { i16 22, i16 4 }, %struct.mmr_table_node { i16 22, i16 4 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 14, i16 1 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 15, i16 2 }, %struct.mmr_table_node { i16 128, i16 5 }, %struct.mmr_table_node { i16 192, i16 5 }, %struct.mmr_table_node { i16 26, i16 5 }, %struct.mmr_table_node { i16 27, i16 5 }, %struct.mmr_table_node { i16 28, i16 5 }, %struct.mmr_table_node { i16 29, i16 5 }, %struct.mmr_table_node { i16 19, i16 4 }, %struct.mmr_table_node { i16 19, i16 4 }, %struct.mmr_table_node { i16 20, i16 4 }, %struct.mmr_table_node { i16 20, i16 4 }, %struct.mmr_table_node { i16 34, i16 5 }, %struct.mmr_table_node { i16 35, i16 5 }, %struct.mmr_table_node { i16 36, i16 5 }, %struct.mmr_table_node { i16 37, i16 5 }, %struct.mmr_table_node { i16 38, i16 5 }, %struct.mmr_table_node { i16 39, i16 5 }, %struct.mmr_table_node { i16 21, i16 4 }, %struct.mmr_table_node { i16 21, i16 4 }, %struct.mmr_table_node { i16 42, i16 5 }, %struct.mmr_table_node { i16 43, i16 5 }, %struct.mmr_table_node { i16 0, i16 3 }, %struct.mmr_table_node { i16 0, i16 3 }, %struct.mmr_table_node { i16 0, i16 3 }, %struct.mmr_table_node { i16 0, i16 3 }], align 16, !dbg !228
@lm = internal constant [8 x i8] c"\FF\7F?\1F\0F\07\03\01", align 1, !dbg !240
@rm = internal constant [8 x i8] c"\00\80\C0\E0\F0\F8\FC\FE", align 1, !dbg !245
@.str.228 = private unnamed_addr constant [35 x i8] c"could not allocate image structure\00", align 1
@.str.1.229 = private unnamed_addr constant [50 x i8] c"could not allocate image data buffer! [%d bytes]\0A\00", align 1
@.str.2.236 = private unnamed_addr constant [31 x i8] c"could not resize image buffer!\00", align 1
@.str.3.237 = private unnamed_addr constant [55 x i8] c"jbig2_image_resize called with a different width (NYI)\00", align 1
@.str.248 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.1.249 = private unnamed_addr constant [32 x i8] c"unable to open '%s' for writing\00", align 1
@.str.2.252 = private unnamed_addr constant [10 x i8] c"P4\0A%d %d\0A\00", align 1
@.str.3.253 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.4.254 = private unnamed_addr constant [33 x i8] c"unable to open '%s' for reading\0A\00", align 1
@.str.5.255 = private unnamed_addr constant [24 x i8] c"not a binary pbm file.\0A\00", align 1
@.str.6.256 = private unnamed_addr constant [19 x i8] c"pbm parsing error\0A\00", align 1
@.str.7.257 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.8.258 = private unnamed_addr constant [45 x i8] c"could not allocate %dx%d image for pbm file\0A\00", align 1
@.str.9.259 = private unnamed_addr constant [29 x i8] c"unexpected end of pbm file.\0A\00", align 1
@.str.262 = private unnamed_addr constant [36 x i8] c"unable to resize metadata structure\00", align 1
@.str.6.263 = private unnamed_addr constant [35 x i8] c"unable to duplicate comment string\00", align 1
@.str.1.266 = private unnamed_addr constant [19 x i8] c"ASCII comment data\00", align 1
@.str.2.267 = private unnamed_addr constant [37 x i8] c"unable to allocate comment structure\00", align 1
@.str.3.268 = private unnamed_addr constant [10 x i8] c"'%s'\09'%s'\00", align 1
@.str.4.269 = private unnamed_addr constant [34 x i8] c"unexpected end of comment segment\00", align 1
@.str.5.272 = private unnamed_addr constant [34 x i8] c"unhandled unicode comment segment\00", align 1
@jbig2_arith_Qe = dso_local constant [47 x %struct.Jbig2ArithQe] [%struct.Jbig2ArithQe { i16 22017, i8 1, i8 -127 }, %struct.Jbig2ArithQe { i16 13313, i8 3, i8 7 }, %struct.Jbig2ArithQe { i16 6145, i8 1, i8 11 }, %struct.Jbig2ArithQe { i16 2753, i8 7, i8 15 }, %struct.Jbig2ArithQe { i16 1313, i8 1, i8 25 }, %struct.Jbig2ArithQe { i16 545, i8 35, i8 36 }, %struct.Jbig2ArithQe { i16 22017, i8 1, i8 -128 }, %struct.Jbig2ArithQe { i16 21505, i8 15, i8 9 }, %struct.Jbig2ArithQe { i16 18433, i8 1, i8 6 }, %struct.Jbig2ArithQe { i16 14337, i8 3, i8 7 }, %struct.Jbig2ArithQe { i16 12289, i8 1, i8 27 }, %struct.Jbig2ArithQe { i16 9217, i8 7, i8 25 }, %struct.Jbig2ArithQe { i16 7169, i8 1, i8 24 }, %struct.Jbig2ArithQe { i16 5633, i8 16, i8 24 }, %struct.Jbig2ArithQe { i16 22017, i8 1, i8 -128 }, %struct.Jbig2ArithQe { i16 21505, i8 31, i8 1 }, %struct.Jbig2ArithQe { i16 20737, i8 1, i8 31 }, %struct.Jbig2ArithQe { i16 18433, i8 3, i8 1 }, %struct.Jbig2ArithQe { i16 14337, i8 1, i8 3 }, %struct.Jbig2ArithQe { i16 13313, i8 7, i8 1 }, %struct.Jbig2ArithQe { i16 12289, i8 1, i8 7 }, %struct.Jbig2ArithQe { i16 10241, i8 3, i8 6 }, %struct.Jbig2ArithQe { i16 9217, i8 1, i8 2 }, %struct.Jbig2ArithQe { i16 8705, i8 15, i8 2 }, %struct.Jbig2ArithQe { i16 7169, i8 1, i8 14 }, %struct.Jbig2ArithQe { i16 6145, i8 3, i8 14 }, %struct.Jbig2ArithQe { i16 5633, i8 1, i8 2 }, %struct.Jbig2ArithQe { i16 5121, i8 7, i8 2 }, %struct.Jbig2ArithQe { i16 4609, i8 1, i8 6 }, %struct.Jbig2ArithQe { i16 4353, i8 3, i8 6 }, %struct.Jbig2ArithQe { i16 2753, i8 1, i8 2 }, %struct.Jbig2ArithQe { i16 2497, i8 63, i8 2 }, %struct.Jbig2ArithQe { i16 2209, i8 1, i8 62 }, %struct.Jbig2ArithQe { i16 1313, i8 3, i8 62 }, %struct.Jbig2ArithQe { i16 1089, i8 1, i8 2 }, %struct.Jbig2ArithQe { i16 673, i8 7, i8 2 }, %struct.Jbig2ArithQe { i16 545, i8 1, i8 6 }, %struct.Jbig2ArithQe { i16 321, i8 3, i8 6 }, %struct.Jbig2ArithQe { i16 273, i8 1, i8 2 }, %struct.Jbig2ArithQe { i16 133, i8 15, i8 2 }, %struct.Jbig2ArithQe { i16 73, i8 1, i8 14 }, %struct.Jbig2ArithQe { i16 37, i8 3, i8 14 }, %struct.Jbig2ArithQe { i16 21, i8 1, i8 2 }, %struct.Jbig2ArithQe { i16 9, i8 7, i8 2 }, %struct.Jbig2ArithQe { i16 5, i8 1, i8 6 }, %struct.Jbig2ArithQe { i16 1, i8 0, i8 6 }, %struct.Jbig2ArithQe { i16 22017, i8 0, i8 0 }], align 16, !dbg !250
@.str.303 = private unnamed_addr constant [39 x i8] c"constructing huffman table log size %d\00", align 1
@.str.1.304 = private unnamed_addr constant [49 x i8] c"ran off the end of the entries table! (%d >= %d)\00", align 1
@jbig2_huffman_lines_A = dso_local constant [5 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 1, i32 4, i32 0 }, %struct._Jbig2HuffmanLine { i32 2, i32 8, i32 16 }, %struct._Jbig2HuffmanLine { i32 3, i32 16, i32 272 }, %struct._Jbig2HuffmanLine { i32 0, i32 32, i32 -1 }, %struct._Jbig2HuffmanLine { i32 3, i32 32, i32 65808 }], align 16, !dbg !286
@jbig2_huffman_params_A = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 5, %struct._Jbig2HuffmanLine* getelementptr inbounds ([5 x %struct._Jbig2HuffmanLine], [5 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_A, i32 0, i32 0) }, align 8, !dbg !328
@jbig2_huffman_lines_B = dso_local constant [8 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 1, i32 0, i32 0 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 4, i32 3, i32 3 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 11 }, %struct._Jbig2HuffmanLine { i32 0, i32 32, i32 -1 }, %struct._Jbig2HuffmanLine { i32 6, i32 32, i32 75 }, %struct._Jbig2HuffmanLine { i32 6, i32 0, i32 0 }], align 16, !dbg !346
@jbig2_huffman_params_B = dso_local constant %struct._Jbig2HuffmanParams { i32 1, i32 8, %struct._Jbig2HuffmanLine* getelementptr inbounds ([8 x %struct._Jbig2HuffmanLine], [8 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_B, i32 0, i32 0) }, align 8, !dbg !349
@jbig2_huffman_lines_C = dso_local constant [9 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 8, i32 8, i32 -256 }, %struct._Jbig2HuffmanLine { i32 1, i32 0, i32 0 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 4, i32 3, i32 3 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 11 }, %struct._Jbig2HuffmanLine { i32 8, i32 32, i32 -257 }, %struct._Jbig2HuffmanLine { i32 7, i32 32, i32 75 }, %struct._Jbig2HuffmanLine { i32 6, i32 0, i32 0 }], align 16, !dbg !351
@jbig2_huffman_params_C = dso_local constant %struct._Jbig2HuffmanParams { i32 1, i32 9, %struct._Jbig2HuffmanLine* getelementptr inbounds ([9 x %struct._Jbig2HuffmanLine], [9 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_C, i32 0, i32 0) }, align 8, !dbg !354
@jbig2_huffman_lines_D = dso_local constant [7 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 1, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 3 }, %struct._Jbig2HuffmanLine { i32 4, i32 3, i32 4 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 12 }, %struct._Jbig2HuffmanLine { i32 0, i32 32, i32 -1 }, %struct._Jbig2HuffmanLine { i32 5, i32 32, i32 76 }], align 16, !dbg !356
@jbig2_huffman_params_D = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 7, %struct._Jbig2HuffmanLine* getelementptr inbounds ([7 x %struct._Jbig2HuffmanLine], [7 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_D, i32 0, i32 0) }, align 8, !dbg !361
@jbig2_huffman_lines_E = dso_local constant [8 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 7, i32 8, i32 -255 }, %struct._Jbig2HuffmanLine { i32 1, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 3 }, %struct._Jbig2HuffmanLine { i32 4, i32 3, i32 4 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 12 }, %struct._Jbig2HuffmanLine { i32 7, i32 32, i32 -256 }, %struct._Jbig2HuffmanLine { i32 6, i32 32, i32 76 }], align 16, !dbg !363
@jbig2_huffman_params_E = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 8, %struct._Jbig2HuffmanLine* getelementptr inbounds ([8 x %struct._Jbig2HuffmanLine], [8 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_E, i32 0, i32 0) }, align 8, !dbg !365
@jbig2_huffman_lines_F = dso_local constant [14 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 5, i32 10, i32 -2048 }, %struct._Jbig2HuffmanLine { i32 4, i32 9, i32 -1024 }, %struct._Jbig2HuffmanLine { i32 4, i32 8, i32 -512 }, %struct._Jbig2HuffmanLine { i32 4, i32 7, i32 -256 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 -128 }, %struct._Jbig2HuffmanLine { i32 5, i32 5, i32 -64 }, %struct._Jbig2HuffmanLine { i32 4, i32 5, i32 -32 }, %struct._Jbig2HuffmanLine { i32 2, i32 7, i32 0 }, %struct._Jbig2HuffmanLine { i32 3, i32 7, i32 128 }, %struct._Jbig2HuffmanLine { i32 3, i32 8, i32 256 }, %struct._Jbig2HuffmanLine { i32 4, i32 9, i32 512 }, %struct._Jbig2HuffmanLine { i32 4, i32 10, i32 1024 }, %struct._Jbig2HuffmanLine { i32 6, i32 32, i32 -2049 }, %struct._Jbig2HuffmanLine { i32 6, i32 32, i32 2048 }], align 16, !dbg !367
@jbig2_huffman_params_F = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 14, %struct._Jbig2HuffmanLine* getelementptr inbounds ([14 x %struct._Jbig2HuffmanLine], [14 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_F, i32 0, i32 0) }, align 8, !dbg !372
@jbig2_huffman_lines_G = dso_local constant [15 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 4, i32 9, i32 -1024 }, %struct._Jbig2HuffmanLine { i32 3, i32 8, i32 -512 }, %struct._Jbig2HuffmanLine { i32 4, i32 7, i32 -256 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 -128 }, %struct._Jbig2HuffmanLine { i32 5, i32 5, i32 -64 }, %struct._Jbig2HuffmanLine { i32 4, i32 5, i32 -32 }, %struct._Jbig2HuffmanLine { i32 4, i32 5, i32 0 }, %struct._Jbig2HuffmanLine { i32 5, i32 5, i32 32 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 64 }, %struct._Jbig2HuffmanLine { i32 4, i32 7, i32 128 }, %struct._Jbig2HuffmanLine { i32 3, i32 8, i32 256 }, %struct._Jbig2HuffmanLine { i32 3, i32 9, i32 512 }, %struct._Jbig2HuffmanLine { i32 3, i32 10, i32 1024 }, %struct._Jbig2HuffmanLine { i32 5, i32 32, i32 -1025 }, %struct._Jbig2HuffmanLine { i32 5, i32 32, i32 2048 }], align 16, !dbg !374
@jbig2_huffman_params_G = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 15, %struct._Jbig2HuffmanLine* getelementptr inbounds ([15 x %struct._Jbig2HuffmanLine], [15 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_G, i32 0, i32 0) }, align 8, !dbg !379
@jbig2_huffman_lines_H = dso_local constant [21 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 8, i32 3, i32 -15 }, %struct._Jbig2HuffmanLine { i32 9, i32 1, i32 -7 }, %struct._Jbig2HuffmanLine { i32 8, i32 1, i32 -5 }, %struct._Jbig2HuffmanLine { i32 9, i32 0, i32 -3 }, %struct._Jbig2HuffmanLine { i32 7, i32 0, i32 -2 }, %struct._Jbig2HuffmanLine { i32 4, i32 0, i32 -1 }, %struct._Jbig2HuffmanLine { i32 2, i32 1, i32 0 }, %struct._Jbig2HuffmanLine { i32 5, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 6, i32 0, i32 3 }, %struct._Jbig2HuffmanLine { i32 3, i32 4, i32 4 }, %struct._Jbig2HuffmanLine { i32 6, i32 1, i32 20 }, %struct._Jbig2HuffmanLine { i32 4, i32 4, i32 22 }, %struct._Jbig2HuffmanLine { i32 4, i32 5, i32 38 }, %struct._Jbig2HuffmanLine { i32 5, i32 6, i32 70 }, %struct._Jbig2HuffmanLine { i32 5, i32 7, i32 134 }, %struct._Jbig2HuffmanLine { i32 6, i32 7, i32 262 }, %struct._Jbig2HuffmanLine { i32 7, i32 8, i32 390 }, %struct._Jbig2HuffmanLine { i32 6, i32 10, i32 646 }, %struct._Jbig2HuffmanLine { i32 9, i32 32, i32 -16 }, %struct._Jbig2HuffmanLine { i32 9, i32 32, i32 1670 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 0 }], align 16, !dbg !381
@jbig2_huffman_params_H = dso_local constant %struct._Jbig2HuffmanParams { i32 1, i32 21, %struct._Jbig2HuffmanLine* getelementptr inbounds ([21 x %struct._Jbig2HuffmanLine], [21 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_H, i32 0, i32 0) }, align 8, !dbg !386
@jbig2_huffman_lines_I = dso_local constant [22 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 8, i32 4, i32 -31 }, %struct._Jbig2HuffmanLine { i32 9, i32 2, i32 -15 }, %struct._Jbig2HuffmanLine { i32 8, i32 2, i32 -11 }, %struct._Jbig2HuffmanLine { i32 9, i32 1, i32 -7 }, %struct._Jbig2HuffmanLine { i32 7, i32 1, i32 -5 }, %struct._Jbig2HuffmanLine { i32 4, i32 1, i32 -3 }, %struct._Jbig2HuffmanLine { i32 3, i32 1, i32 -1 }, %struct._Jbig2HuffmanLine { i32 3, i32 1, i32 1 }, %struct._Jbig2HuffmanLine { i32 5, i32 1, i32 3 }, %struct._Jbig2HuffmanLine { i32 6, i32 1, i32 5 }, %struct._Jbig2HuffmanLine { i32 3, i32 5, i32 7 }, %struct._Jbig2HuffmanLine { i32 6, i32 2, i32 39 }, %struct._Jbig2HuffmanLine { i32 4, i32 5, i32 43 }, %struct._Jbig2HuffmanLine { i32 4, i32 6, i32 75 }, %struct._Jbig2HuffmanLine { i32 5, i32 7, i32 139 }, %struct._Jbig2HuffmanLine { i32 5, i32 8, i32 267 }, %struct._Jbig2HuffmanLine { i32 6, i32 8, i32 523 }, %struct._Jbig2HuffmanLine { i32 7, i32 9, i32 779 }, %struct._Jbig2HuffmanLine { i32 6, i32 11, i32 1291 }, %struct._Jbig2HuffmanLine { i32 9, i32 32, i32 -32 }, %struct._Jbig2HuffmanLine { i32 9, i32 32, i32 3339 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 0 }], align 16, !dbg !388
@jbig2_huffman_params_I = dso_local constant %struct._Jbig2HuffmanParams { i32 1, i32 22, %struct._Jbig2HuffmanLine* getelementptr inbounds ([22 x %struct._Jbig2HuffmanLine], [22 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_I, i32 0, i32 0) }, align 8, !dbg !393
@jbig2_huffman_lines_J = dso_local constant [21 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 7, i32 4, i32 -21 }, %struct._Jbig2HuffmanLine { i32 8, i32 0, i32 -5 }, %struct._Jbig2HuffmanLine { i32 7, i32 0, i32 -4 }, %struct._Jbig2HuffmanLine { i32 5, i32 0, i32 -3 }, %struct._Jbig2HuffmanLine { i32 2, i32 2, i32 -2 }, %struct._Jbig2HuffmanLine { i32 5, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 6, i32 0, i32 3 }, %struct._Jbig2HuffmanLine { i32 7, i32 0, i32 4 }, %struct._Jbig2HuffmanLine { i32 8, i32 0, i32 5 }, %struct._Jbig2HuffmanLine { i32 2, i32 6, i32 6 }, %struct._Jbig2HuffmanLine { i32 5, i32 5, i32 70 }, %struct._Jbig2HuffmanLine { i32 6, i32 5, i32 102 }, %struct._Jbig2HuffmanLine { i32 6, i32 6, i32 134 }, %struct._Jbig2HuffmanLine { i32 6, i32 7, i32 198 }, %struct._Jbig2HuffmanLine { i32 6, i32 8, i32 326 }, %struct._Jbig2HuffmanLine { i32 6, i32 9, i32 582 }, %struct._Jbig2HuffmanLine { i32 6, i32 10, i32 1094 }, %struct._Jbig2HuffmanLine { i32 7, i32 11, i32 2118 }, %struct._Jbig2HuffmanLine { i32 8, i32 32, i32 -22 }, %struct._Jbig2HuffmanLine { i32 8, i32 32, i32 4166 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 0 }], align 16, !dbg !395
@jbig2_huffman_params_J = dso_local constant %struct._Jbig2HuffmanParams { i32 1, i32 21, %struct._Jbig2HuffmanLine* getelementptr inbounds ([21 x %struct._Jbig2HuffmanLine], [21 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_J, i32 0, i32 0) }, align 8, !dbg !397
@jbig2_huffman_lines_K = dso_local constant [13 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 1, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 2, i32 1, i32 2 }, %struct._Jbig2HuffmanLine { i32 4, i32 0, i32 3 }, %struct._Jbig2HuffmanLine { i32 4, i32 1, i32 5 }, %struct._Jbig2HuffmanLine { i32 5, i32 1, i32 7 }, %struct._Jbig2HuffmanLine { i32 5, i32 2, i32 9 }, %struct._Jbig2HuffmanLine { i32 6, i32 2, i32 13 }, %struct._Jbig2HuffmanLine { i32 7, i32 2, i32 17 }, %struct._Jbig2HuffmanLine { i32 7, i32 3, i32 21 }, %struct._Jbig2HuffmanLine { i32 7, i32 4, i32 29 }, %struct._Jbig2HuffmanLine { i32 7, i32 5, i32 45 }, %struct._Jbig2HuffmanLine { i32 7, i32 6, i32 77 }, %struct._Jbig2HuffmanLine { i32 7, i32 32, i32 141 }], align 16, !dbg !399
@jbig2_huffman_params_K = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 13, %struct._Jbig2HuffmanLine* getelementptr inbounds ([13 x %struct._Jbig2HuffmanLine], [13 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_K, i32 0, i32 0) }, align 8, !dbg !404
@jbig2_huffman_lines_L = dso_local constant [13 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 1, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 2, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 3, i32 1, i32 3 }, %struct._Jbig2HuffmanLine { i32 5, i32 0, i32 5 }, %struct._Jbig2HuffmanLine { i32 5, i32 1, i32 6 }, %struct._Jbig2HuffmanLine { i32 6, i32 1, i32 8 }, %struct._Jbig2HuffmanLine { i32 7, i32 0, i32 10 }, %struct._Jbig2HuffmanLine { i32 7, i32 1, i32 11 }, %struct._Jbig2HuffmanLine { i32 7, i32 2, i32 13 }, %struct._Jbig2HuffmanLine { i32 7, i32 3, i32 17 }, %struct._Jbig2HuffmanLine { i32 7, i32 4, i32 25 }, %struct._Jbig2HuffmanLine { i32 8, i32 5, i32 41 }, %struct._Jbig2HuffmanLine { i32 8, i32 32, i32 73 }], align 16, !dbg !406
@jbig2_huffman_params_L = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 13, %struct._Jbig2HuffmanLine* getelementptr inbounds ([13 x %struct._Jbig2HuffmanLine], [13 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_L, i32 0, i32 0) }, align 8, !dbg !408
@jbig2_huffman_lines_M = dso_local constant [13 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 1, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 4, i32 0, i32 3 }, %struct._Jbig2HuffmanLine { i32 5, i32 0, i32 4 }, %struct._Jbig2HuffmanLine { i32 4, i32 1, i32 5 }, %struct._Jbig2HuffmanLine { i32 3, i32 3, i32 7 }, %struct._Jbig2HuffmanLine { i32 6, i32 1, i32 15 }, %struct._Jbig2HuffmanLine { i32 6, i32 2, i32 17 }, %struct._Jbig2HuffmanLine { i32 6, i32 3, i32 21 }, %struct._Jbig2HuffmanLine { i32 6, i32 4, i32 29 }, %struct._Jbig2HuffmanLine { i32 6, i32 5, i32 45 }, %struct._Jbig2HuffmanLine { i32 7, i32 6, i32 77 }, %struct._Jbig2HuffmanLine { i32 7, i32 32, i32 141 }], align 16, !dbg !410
@jbig2_huffman_params_M = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 13, %struct._Jbig2HuffmanLine* getelementptr inbounds ([13 x %struct._Jbig2HuffmanLine], [13 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_M, i32 0, i32 0) }, align 8, !dbg !412
@jbig2_huffman_lines_N = dso_local constant [7 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 3, i32 0, i32 -2 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 -1 }, %struct._Jbig2HuffmanLine { i32 1, i32 0, i32 0 }, %struct._Jbig2HuffmanLine { i32 3, i32 3, i32 1 }, %struct._Jbig2HuffmanLine { i32 3, i32 6, i32 2 }, %struct._Jbig2HuffmanLine { i32 0, i32 32, i32 -1 }, %struct._Jbig2HuffmanLine { i32 0, i32 32, i32 3 }], align 16, !dbg !414
@jbig2_huffman_params_N = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 7, %struct._Jbig2HuffmanLine* getelementptr inbounds ([7 x %struct._Jbig2HuffmanLine], [7 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_N, i32 0, i32 0) }, align 8, !dbg !416
@jbig2_huffman_lines_O = dso_local constant [13 x %struct._Jbig2HuffmanLine] [%struct._Jbig2HuffmanLine { i32 7, i32 4, i32 -24 }, %struct._Jbig2HuffmanLine { i32 6, i32 2, i32 -8 }, %struct._Jbig2HuffmanLine { i32 5, i32 1, i32 -4 }, %struct._Jbig2HuffmanLine { i32 4, i32 0, i32 -2 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 -1 }, %struct._Jbig2HuffmanLine { i32 1, i32 0, i32 0 }, %struct._Jbig2HuffmanLine { i32 3, i32 0, i32 1 }, %struct._Jbig2HuffmanLine { i32 4, i32 0, i32 2 }, %struct._Jbig2HuffmanLine { i32 5, i32 1, i32 3 }, %struct._Jbig2HuffmanLine { i32 6, i32 2, i32 5 }, %struct._Jbig2HuffmanLine { i32 7, i32 4, i32 9 }, %struct._Jbig2HuffmanLine { i32 7, i32 32, i32 -25 }, %struct._Jbig2HuffmanLine { i32 7, i32 32, i32 25 }], align 16, !dbg !418
@jbig2_huffman_params_O = dso_local constant %struct._Jbig2HuffmanParams { i32 0, i32 13, %struct._Jbig2HuffmanLine* getelementptr inbounds ([13 x %struct._Jbig2HuffmanLine], [13 x %struct._Jbig2HuffmanLine]* @jbig2_huffman_lines_O, i32 0, i32 0) }, align 8, !dbg !420
@specialMalloc = external thread_local global i8, align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #0 !dbg !602 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca %struct._Jbig2Ctx*, align 8
  %9 = alloca [4096 x i8], align 16
  %10 = alloca %struct.jbig2dec_params_t, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct._Jbig2GlobalCtx*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct._Jbig2Image*, align 8
  %19 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !605, metadata !DIExpression()), !dbg !606
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !607, metadata !DIExpression()), !dbg !608
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !609, metadata !DIExpression()), !dbg !665
  store %struct._IO_FILE* null, %struct._IO_FILE** %6, align 8, !dbg !665
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !666, metadata !DIExpression()), !dbg !667
  store %struct._IO_FILE* null, %struct._IO_FILE** %7, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %8, metadata !668, metadata !DIExpression()), !dbg !672
  call void @llvm.dbg.declare(metadata [4096 x i8]* %9, metadata !673, metadata !DIExpression()), !dbg !677
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t* %10, metadata !678, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.declare(metadata i32* %11, metadata !680, metadata !DIExpression()), !dbg !681
  %20 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 0, !dbg !682
  store i32 2, i32* %20, align 8, !dbg !683
  %21 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 1, !dbg !684
  store i32 1, i32* %21, align 4, !dbg !685
  %22 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 2, !dbg !686
  store i32 0, i32* %22, align 8, !dbg !687
  %23 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !688
  store i8* null, i8** %23, align 8, !dbg !689
  %24 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 5, !dbg !690
  store i32 3, i32* %24, align 8, !dbg !691
  %25 = load i32, i32* %4, align 4, !dbg !692
  %26 = load i8**, i8*** %5, align 8, !dbg !693
  %27 = call i32 @parse_options(i32 %25, i8** %26, %struct.jbig2dec_params_t* %10), !dbg !694
  store i32 %27, i32* %11, align 4, !dbg !695
  %28 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 2, !dbg !696
  %29 = load i32, i32* %28, align 8, !dbg !696
  %30 = icmp ne i32 %29, 0, !dbg !698
  br i1 %30, label %31, label %32, !dbg !699

; <label>:31:                                     ; preds = %2
  call void @hash_init(%struct.jbig2dec_params_t* %10), !dbg !700
  br label %32, !dbg !700

; <label>:32:                                     ; preds = %31, %2
  %33 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 0, !dbg !701
  %34 = load i32, i32* %33, align 8, !dbg !701
  switch i32 %34, label %212 [
    i32 0, label %35
    i32 1, label %37
    i32 2, label %40
  ], !dbg !702

; <label>:35:                                     ; preds = %32
  %36 = call i32 @print_usage(), !dbg !703
  call void @exit(i32 0) #9, !dbg !705
  unreachable, !dbg !705

; <label>:37:                                     ; preds = %32
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !706
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i32 0, i32 0)), !dbg !707
  br label %212, !dbg !708

; <label>:40:                                     ; preds = %32
  %41 = load i32, i32* %4, align 4, !dbg !709
  %42 = load i32, i32* %11, align 4, !dbg !711
  %43 = sub nsw i32 %41, %42, !dbg !712
  %44 = icmp eq i32 %43, 1, !dbg !713
  br i1 %44, label %45, label %60, !dbg !714

; <label>:45:                                     ; preds = %40
  call void @llvm.dbg.declare(metadata i8** %12, metadata !715, metadata !DIExpression()), !dbg !717
  %46 = load i8**, i8*** %5, align 8, !dbg !718
  %47 = load i32, i32* %11, align 4, !dbg !719
  %48 = sext i32 %47 to i64, !dbg !718
  %49 = getelementptr inbounds i8*, i8** %46, i64 %48, !dbg !718
  %50 = load i8*, i8** %49, align 8, !dbg !718
  store i8* %50, i8** %12, align 8, !dbg !717
  %51 = load i8*, i8** %12, align 8, !dbg !720
  %52 = call %struct._IO_FILE* @fopen(i8* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0)), !dbg !721
  store %struct._IO_FILE* %52, %struct._IO_FILE** %6, align 8, !dbg !722
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !723
  %54 = icmp eq %struct._IO_FILE* %53, null, !dbg !725
  br i1 %54, label %55, label %59, !dbg !726

; <label>:55:                                     ; preds = %45
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !727
  %57 = load i8*, i8** %12, align 8, !dbg !729
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i8* %57), !dbg !730
  store i32 1, i32* %3, align 4, !dbg !731
  br label %225, !dbg !731

; <label>:59:                                     ; preds = %45
  br label %98, !dbg !732

; <label>:60:                                     ; preds = %40
  %61 = load i32, i32* %4, align 4, !dbg !733
  %62 = load i32, i32* %11, align 4, !dbg !735
  %63 = sub nsw i32 %61, %62, !dbg !736
  %64 = icmp eq i32 %63, 2, !dbg !737
  br i1 %64, label %65, label %95, !dbg !738

; <label>:65:                                     ; preds = %60
  call void @llvm.dbg.declare(metadata i8** %13, metadata !739, metadata !DIExpression()), !dbg !741
  %66 = load i8**, i8*** %5, align 8, !dbg !742
  %67 = load i32, i32* %11, align 4, !dbg !743
  %68 = sext i32 %67 to i64, !dbg !742
  %69 = getelementptr inbounds i8*, i8** %66, i64 %68, !dbg !742
  %70 = load i8*, i8** %69, align 8, !dbg !742
  store i8* %70, i8** %13, align 8, !dbg !741
  call void @llvm.dbg.declare(metadata i8** %14, metadata !744, metadata !DIExpression()), !dbg !745
  %71 = load i8**, i8*** %5, align 8, !dbg !746
  %72 = load i32, i32* %11, align 4, !dbg !747
  %73 = add nsw i32 %72, 1, !dbg !748
  %74 = sext i32 %73 to i64, !dbg !746
  %75 = getelementptr inbounds i8*, i8** %71, i64 %74, !dbg !746
  %76 = load i8*, i8** %75, align 8, !dbg !746
  store i8* %76, i8** %14, align 8, !dbg !745
  %77 = load i8*, i8** %13, align 8, !dbg !749
  %78 = call %struct._IO_FILE* @fopen(i8* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0)), !dbg !750
  store %struct._IO_FILE* %78, %struct._IO_FILE** %6, align 8, !dbg !751
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !752
  %80 = icmp eq %struct._IO_FILE* %79, null, !dbg !754
  br i1 %80, label %81, label %85, !dbg !755

; <label>:81:                                     ; preds = %65
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !756
  %83 = load i8*, i8** %13, align 8, !dbg !758
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i8* %83), !dbg !759
  store i32 1, i32* %3, align 4, !dbg !760
  br label %225, !dbg !760

; <label>:85:                                     ; preds = %65
  %86 = load i8*, i8** %14, align 8, !dbg !761
  %87 = call %struct._IO_FILE* @fopen(i8* %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0)), !dbg !762
  store %struct._IO_FILE* %87, %struct._IO_FILE** %7, align 8, !dbg !763
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !764
  %89 = icmp eq %struct._IO_FILE* %88, null, !dbg !766
  br i1 %89, label %90, label %94, !dbg !767

; <label>:90:                                     ; preds = %85
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !768
  %92 = load i8*, i8** %14, align 8, !dbg !770
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i8* %92), !dbg !771
  store i32 1, i32* %3, align 4, !dbg !772
  br label %225, !dbg !772

; <label>:94:                                     ; preds = %85
  br label %97, !dbg !773

; <label>:95:                                     ; preds = %60
  %96 = call i32 @print_usage(), !dbg !774
  store i32 %96, i32* %3, align 4, !dbg !775
  br label %225, !dbg !775

; <label>:97:                                     ; preds = %94
  br label %98

; <label>:98:                                     ; preds = %97, %59
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !776
  %100 = icmp ne %struct._IO_FILE* %99, null, !dbg !777
  %101 = zext i1 %100 to i64, !dbg !776
  %102 = select i1 %100, i32 1, i32 0, !dbg !776
  %103 = bitcast %struct.jbig2dec_params_t* %10 to i8*, !dbg !778
  %104 = call %struct._Jbig2Ctx* bitcast (%struct._Jbig2Ctx* (%struct._Jbig2Allocator.1*, i32, %struct._Jbig2GlobalCtx*, i32 (i8*, i8*, i32, i32)*, i8*)* @jbig2_ctx_new to %struct._Jbig2Ctx* (%struct._Jbig2Allocator*, i32, %struct._Jbig2GlobalCtx*, i32 (i8*, i8*, i32, i32)*, i8*)*)(%struct._Jbig2Allocator* null, i32 %102, %struct._Jbig2GlobalCtx* null, i32 (i8*, i8*, i32, i32)* @error_callback, i8* %103), !dbg !779
  store %struct._Jbig2Ctx* %104, %struct._Jbig2Ctx** %8, align 8, !dbg !780
  br label %105, !dbg !781

; <label>:105:                                    ; preds = %113, %98
  call void @llvm.dbg.declare(metadata i32* %15, metadata !782, metadata !DIExpression()), !dbg !786
  %106 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i32 0, i32 0, !dbg !787
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !788
  %108 = call i64 @fread(i8* %106, i64 1, i64 4096, %struct._IO_FILE* %107), !dbg !789
  %109 = trunc i64 %108 to i32, !dbg !789
  store i32 %109, i32* %15, align 4, !dbg !786
  %110 = load i32, i32* %15, align 4, !dbg !790
  %111 = icmp sle i32 %110, 0, !dbg !792
  br i1 %111, label %112, label %113, !dbg !793

; <label>:112:                                    ; preds = %105
  br label %119, !dbg !794

; <label>:113:                                    ; preds = %105
  %114 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !795
  %115 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i32 0, i32 0, !dbg !796
  %116 = load i32, i32* %15, align 4, !dbg !797
  %117 = sext i32 %116 to i64, !dbg !797
  %118 = call i32 @jbig2_data_in(%struct._Jbig2Ctx* %114, i8* %115, i64 %117), !dbg !798
  br label %105, !dbg !799, !llvm.loop !800

; <label>:119:                                    ; preds = %112
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !803
  %121 = call i32 @fclose(%struct._IO_FILE* %120), !dbg !804
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !805
  %123 = icmp ne %struct._IO_FILE* %122, null, !dbg !807
  br i1 %123, label %124, label %148, !dbg !808

; <label>:124:                                    ; preds = %119
  call void @llvm.dbg.declare(metadata %struct._Jbig2GlobalCtx** %16, metadata !809, metadata !DIExpression()), !dbg !811
  %125 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !812
  %126 = call %struct._Jbig2GlobalCtx* @jbig2_make_global_ctx(%struct._Jbig2Ctx* %125), !dbg !813
  store %struct._Jbig2GlobalCtx* %126, %struct._Jbig2GlobalCtx** %16, align 8, !dbg !811
  %127 = load %struct._Jbig2GlobalCtx*, %struct._Jbig2GlobalCtx** %16, align 8, !dbg !814
  %128 = bitcast %struct.jbig2dec_params_t* %10 to i8*, !dbg !815
  %129 = call %struct._Jbig2Ctx* bitcast (%struct._Jbig2Ctx* (%struct._Jbig2Allocator.1*, i32, %struct._Jbig2GlobalCtx*, i32 (i8*, i8*, i32, i32)*, i8*)* @jbig2_ctx_new to %struct._Jbig2Ctx* (%struct._Jbig2Allocator*, i32, %struct._Jbig2GlobalCtx*, i32 (i8*, i8*, i32, i32)*, i8*)*)(%struct._Jbig2Allocator* null, i32 1, %struct._Jbig2GlobalCtx* %127, i32 (i8*, i8*, i32, i32)* @error_callback, i8* %128), !dbg !816
  store %struct._Jbig2Ctx* %129, %struct._Jbig2Ctx** %8, align 8, !dbg !817
  br label %130, !dbg !818

; <label>:130:                                    ; preds = %138, %124
  call void @llvm.dbg.declare(metadata i32* %17, metadata !819, metadata !DIExpression()), !dbg !823
  %131 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i32 0, i32 0, !dbg !824
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !825
  %133 = call i64 @fread(i8* %131, i64 1, i64 4096, %struct._IO_FILE* %132), !dbg !826
  %134 = trunc i64 %133 to i32, !dbg !826
  store i32 %134, i32* %17, align 4, !dbg !823
  %135 = load i32, i32* %17, align 4, !dbg !827
  %136 = icmp sle i32 %135, 0, !dbg !829
  br i1 %136, label %137, label %138, !dbg !830

; <label>:137:                                    ; preds = %130
  br label %144, !dbg !831

; <label>:138:                                    ; preds = %130
  %139 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !832
  %140 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i32 0, i32 0, !dbg !833
  %141 = load i32, i32* %17, align 4, !dbg !834
  %142 = sext i32 %141 to i64, !dbg !834
  %143 = call i32 @jbig2_data_in(%struct._Jbig2Ctx* %139, i8* %140, i64 %142), !dbg !835
  br label %130, !dbg !836, !llvm.loop !837

; <label>:144:                                    ; preds = %137
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !840
  %146 = call i32 @fclose(%struct._IO_FILE* %145), !dbg !841
  %147 = load %struct._Jbig2GlobalCtx*, %struct._Jbig2GlobalCtx** %16, align 8, !dbg !842
  call void @jbig2_global_ctx_free(%struct._Jbig2GlobalCtx* %147), !dbg !843
  br label %148, !dbg !844

; <label>:148:                                    ; preds = %144, %119
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %18, metadata !845, metadata !DIExpression()), !dbg !856
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !857
  %150 = icmp ne %struct._IO_FILE* %149, null, !dbg !859
  br i1 %150, label %151, label %154, !dbg !860

; <label>:151:                                    ; preds = %148
  %152 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !861
  %153 = call i32 bitcast (i32 (%struct._Jbig2Ctx.11*)* @jbig2_complete_page to i32 (%struct._Jbig2Ctx*)*)(%struct._Jbig2Ctx* %152), !dbg !862
  br label %154, !dbg !862

; <label>:154:                                    ; preds = %151, %148
  %155 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !863
  %156 = load i8*, i8** %155, align 8, !dbg !863
  %157 = icmp eq i8* %156, null, !dbg !865
  br i1 %157, label %158, label %167, !dbg !866

; <label>:158:                                    ; preds = %154
  %159 = load i8**, i8*** %5, align 8, !dbg !867
  %160 = load i32, i32* %11, align 4, !dbg !869
  %161 = sext i32 %160 to i64, !dbg !867
  %162 = getelementptr inbounds i8*, i8** %159, i64 %161, !dbg !867
  %163 = load i8*, i8** %162, align 8, !dbg !867
  %164 = call i8* @make_output_filename(i8* %163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0)), !dbg !870
  %165 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !871
  store i8* %164, i8** %165, align 8, !dbg !872
  %166 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 5, !dbg !873
  store i32 1, i32* %166, align 8, !dbg !874
  br label %187, !dbg !875

; <label>:167:                                    ; preds = %154
  call void @llvm.dbg.declare(metadata i32* %19, metadata !876, metadata !DIExpression()), !dbg !878
  %168 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !879
  %169 = load i8*, i8** %168, align 8, !dbg !879
  %170 = call i64 @strlen(i8* %169) #10, !dbg !880
  %171 = trunc i64 %170 to i32, !dbg !880
  store i32 %171, i32* %19, align 4, !dbg !878
  %172 = load i32, i32* %19, align 4, !dbg !881
  %173 = icmp sge i32 %172, 3, !dbg !883
  br i1 %173, label %174, label %186, !dbg !884

; <label>:174:                                    ; preds = %167
  %175 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 5, !dbg !885
  %176 = load i32, i32* %175, align 8, !dbg !885
  %177 = icmp eq i32 %176, 3, !dbg !886
  br i1 %177, label %178, label %186, !dbg !887

; <label>:178:                                    ; preds = %174
  %179 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !888
  %180 = load i8*, i8** %179, align 8, !dbg !888
  %181 = load i32, i32* %19, align 4, !dbg !889
  %182 = sext i32 %181 to i64, !dbg !890
  %183 = getelementptr inbounds i8, i8* %180, i64 %182, !dbg !890
  %184 = getelementptr inbounds i8, i8* %183, i64 -3, !dbg !891
  %185 = call i32 @set_output_format(%struct.jbig2dec_params_t* %10, i8* %184), !dbg !892
  br label %186, !dbg !892

; <label>:186:                                    ; preds = %178, %174, %167
  br label %187

; <label>:187:                                    ; preds = %186, %158
  br label %188, !dbg !893

; <label>:188:                                    ; preds = %200, %187
  %189 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !894
  %190 = call %struct._Jbig2Image* bitcast (%struct._Jbig2Image* (%struct._Jbig2Ctx.11*)* @jbig2_page_out to %struct._Jbig2Image* (%struct._Jbig2Ctx*)*)(%struct._Jbig2Ctx* %189), !dbg !895
  store %struct._Jbig2Image* %190, %struct._Jbig2Image** %18, align 8, !dbg !896
  %191 = icmp ne %struct._Jbig2Image* %190, null, !dbg !897
  br i1 %191, label %192, label %204, !dbg !893

; <label>:192:                                    ; preds = %188
  %193 = load %struct._Jbig2Image*, %struct._Jbig2Image** %18, align 8, !dbg !898
  %194 = call i32 @write_page_image(%struct.jbig2dec_params_t* %10, %struct._Jbig2Image* %193), !dbg !900
  %195 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 2, !dbg !901
  %196 = load i32, i32* %195, align 8, !dbg !901
  %197 = icmp ne i32 %196, 0, !dbg !903
  br i1 %197, label %198, label %200, !dbg !904

; <label>:198:                                    ; preds = %192
  %199 = load %struct._Jbig2Image*, %struct._Jbig2Image** %18, align 8, !dbg !905
  call void @hash_image(%struct.jbig2dec_params_t* %10, %struct._Jbig2Image* %199), !dbg !906
  br label %200, !dbg !906

; <label>:200:                                    ; preds = %198, %192
  %201 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !907
  %202 = load %struct._Jbig2Image*, %struct._Jbig2Image** %18, align 8, !dbg !908
  %203 = call i32 bitcast (i32 (%struct._Jbig2Ctx.11*, %struct._Jbig2Image*)* @jbig2_release_page to i32 (%struct._Jbig2Ctx*, %struct._Jbig2Image*)*)(%struct._Jbig2Ctx* %201, %struct._Jbig2Image* %202), !dbg !909
  br label %188, !dbg !893, !llvm.loop !910

; <label>:204:                                    ; preds = %188
  %205 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 2, !dbg !912
  %206 = load i32, i32* %205, align 8, !dbg !912
  %207 = icmp ne i32 %206, 0, !dbg !914
  br i1 %207, label %208, label %210, !dbg !915

; <label>:208:                                    ; preds = %204
  %209 = call i32 @write_document_hash(%struct.jbig2dec_params_t* %10), !dbg !916
  br label %210, !dbg !916

; <label>:210:                                    ; preds = %208, %204
  %211 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %8, align 8, !dbg !917
  call void @jbig2_ctx_free(%struct._Jbig2Ctx* %211), !dbg !918
  br label %212, !dbg !919

; <label>:212:                                    ; preds = %210, %37, %32
  %213 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !920
  %214 = load i8*, i8** %213, align 8, !dbg !920
  %215 = icmp ne i8* %214, null, !dbg !922
  br i1 %215, label %216, label %219, !dbg !923

; <label>:216:                                    ; preds = %212
  %217 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 4, !dbg !924
  %218 = load i8*, i8** %217, align 8, !dbg !924
  call void @free(i8* %218) #7, !dbg !925
  br label %219, !dbg !925

; <label>:219:                                    ; preds = %216, %212
  %220 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %10, i32 0, i32 2, !dbg !926
  %221 = load i32, i32* %220, align 8, !dbg !926
  %222 = icmp ne i32 %221, 0, !dbg !928
  br i1 %222, label %223, label %224, !dbg !929

; <label>:223:                                    ; preds = %219
  call void @hash_free(%struct.jbig2dec_params_t* %10), !dbg !930
  br label %224, !dbg !930

; <label>:224:                                    ; preds = %223, %219
  store i32 0, i32* %3, align 4, !dbg !931
  br label %225, !dbg !931

; <label>:225:                                    ; preds = %224, %95, %90, %81, %55
  %226 = load i32, i32* %3, align 4, !dbg !932
  ret i32 %226, !dbg !932
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @parse_options(i32, i8**, %struct.jbig2dec_params_t*) #0 !dbg !2 {
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.jbig2dec_params_t*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !933, metadata !DIExpression()), !dbg !934
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !935, metadata !DIExpression()), !dbg !936
  store %struct.jbig2dec_params_t* %2, %struct.jbig2dec_params_t** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %6, metadata !937, metadata !DIExpression()), !dbg !938
  call void @llvm.dbg.declare(metadata i32* %7, metadata !939, metadata !DIExpression()), !dbg !940
  store i32 1, i32* %7, align 4, !dbg !940
  call void @llvm.dbg.declare(metadata i32* %8, metadata !941, metadata !DIExpression()), !dbg !942
  br label %9, !dbg !943

; <label>:9:                                      ; preds = %77, %3
  %10 = load i32, i32* %4, align 4, !dbg !944
  %11 = load i8**, i8*** %5, align 8, !dbg !946
  %12 = call i32 @getopt_long(i32 %10, i8** %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct.option* getelementptr inbounds ([9 x %struct.option], [9 x %struct.option]* @parse_options.long_options, i32 0, i32 0), i32* %7), !dbg !947
  store i32 %12, i32* %8, align 4, !dbg !948
  %13 = load i32, i32* %8, align 4, !dbg !949
  %14 = icmp eq i32 %13, -1, !dbg !951
  br i1 %14, label %15, label %16, !dbg !952

; <label>:15:                                     ; preds = %9
  br label %78, !dbg !953

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %8, align 4, !dbg !954
  switch i32 %17, label %67 [
    i32 0, label %18
    i32 113, label %32
    i32 118, label %35
    i32 104, label %47
    i32 63, label %47
    i32 86, label %50
    i32 100, label %52
    i32 109, label %55
    i32 111, label %58
    i32 116, label %63
  ], !dbg !955

; <label>:18:                                     ; preds = %16
  %19 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !956
  %20 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %19, i32 0, i32 1, !dbg !959
  %21 = load i32, i32* %20, align 4, !dbg !959
  %22 = icmp ne i32 %21, 0, !dbg !956
  br i1 %22, label %31, label %23, !dbg !960

; <label>:23:                                     ; preds = %18
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !961
  %25 = load i32, i32* %7, align 4, !dbg !962
  %26 = sext i32 %25 to i64, !dbg !963
  %27 = getelementptr inbounds [9 x %struct.option], [9 x %struct.option]* @parse_options.long_options, i64 0, i64 %26, !dbg !963
  %28 = getelementptr inbounds %struct.option, %struct.option* %27, i32 0, i32 0, !dbg !964
  %29 = load i8*, i8** %28, align 16, !dbg !964
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i8* %29), !dbg !965
  br label %31, !dbg !965

; <label>:31:                                     ; preds = %23, %18
  br label %77, !dbg !966

; <label>:32:                                     ; preds = %16
  %33 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !967
  %34 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %33, i32 0, i32 1, !dbg !968
  store i32 0, i32* %34, align 4, !dbg !969
  br label %77, !dbg !970

; <label>:35:                                     ; preds = %16
  %36 = load i8*, i8** @optarg, align 8, !dbg !971
  %37 = icmp ne i8* %36, null, !dbg !971
  br i1 %37, label %38, label %43, !dbg !973

; <label>:38:                                     ; preds = %35
  %39 = load i8*, i8** @optarg, align 8, !dbg !974
  %40 = call i32 @atoi(i8* %39) #10, !dbg !975
  %41 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !976
  %42 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %41, i32 0, i32 1, !dbg !977
  store i32 %40, i32* %42, align 4, !dbg !978
  br label %46, !dbg !976

; <label>:43:                                     ; preds = %35
  %44 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !979
  %45 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %44, i32 0, i32 1, !dbg !980
  store i32 9, i32* %45, align 4, !dbg !981
  br label %46

; <label>:46:                                     ; preds = %43, %38
  br label %77, !dbg !982

; <label>:47:                                     ; preds = %16, %16
  %48 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !983
  %49 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %48, i32 0, i32 0, !dbg !984
  store i32 0, i32* %49, align 8, !dbg !985
  br label %77, !dbg !986

; <label>:50:                                     ; preds = %16
  %51 = call i32 @print_version(), !dbg !987
  call void @exit(i32 0) #9, !dbg !988
  unreachable, !dbg !988

; <label>:52:                                     ; preds = %16
  %53 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !989
  %54 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %53, i32 0, i32 0, !dbg !990
  store i32 1, i32* %54, align 8, !dbg !991
  br label %77, !dbg !992

; <label>:55:                                     ; preds = %16
  %56 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !993
  %57 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %56, i32 0, i32 2, !dbg !994
  store i32 1, i32* %57, align 8, !dbg !995
  br label %77, !dbg !996

; <label>:58:                                     ; preds = %16
  %59 = load i8*, i8** @optarg, align 8, !dbg !997
  %60 = call noalias i8* @strdup(i8* %59) #7, !dbg !998
  %61 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !999
  %62 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %61, i32 0, i32 4, !dbg !1000
  store i8* %60, i8** %62, align 8, !dbg !1001
  br label %77, !dbg !1002

; <label>:63:                                     ; preds = %16
  %64 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !1003
  %65 = load i8*, i8** @optarg, align 8, !dbg !1004
  %66 = call i32 @set_output_format(%struct.jbig2dec_params_t* %64, i8* %65), !dbg !1005
  br label %77, !dbg !1006

; <label>:67:                                     ; preds = %16
  %68 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %6, align 8, !dbg !1007
  %69 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %68, i32 0, i32 1, !dbg !1009
  %70 = load i32, i32* %69, align 4, !dbg !1009
  %71 = icmp ne i32 %70, 0, !dbg !1007
  br i1 %71, label %76, label %72, !dbg !1010

; <label>:72:                                     ; preds = %67
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1011
  %74 = load i32, i32* %8, align 4, !dbg !1012
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i32 0, i32 0), i32 %74), !dbg !1013
  br label %76, !dbg !1013

; <label>:76:                                     ; preds = %72, %67
  br label %77, !dbg !1014

; <label>:77:                                     ; preds = %76, %63, %58, %55, %52, %47, %46, %32, %31
  br label %9, !dbg !943, !llvm.loop !1015

; <label>:78:                                     ; preds = %15
  %79 = load i32, i32* @optind, align 4, !dbg !1017
  ret i32 %79, !dbg !1018
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @hash_init(%struct.jbig2dec_params_t*) #0 !dbg !1019 {
  %2 = alloca %struct.jbig2dec_params_t*, align 8
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %2, metadata !1022, metadata !DIExpression()), !dbg !1023
  %3 = call noalias i8* @malloc(i64 92) #7, !dbg !1024
  %4 = bitcast i8* %3 to %struct.SHA1_CTX*, !dbg !1024
  %5 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1025
  %6 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %5, i32 0, i32 3, !dbg !1026
  store %struct.SHA1_CTX* %4, %struct.SHA1_CTX** %6, align 8, !dbg !1027
  %7 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1028
  %8 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %7, i32 0, i32 3, !dbg !1030
  %9 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %8, align 8, !dbg !1030
  %10 = icmp eq %struct.SHA1_CTX* %9, null, !dbg !1031
  br i1 %10, label %11, label %16, !dbg !1032

; <label>:11:                                     ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1033
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)), !dbg !1035
  %14 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1036
  %15 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %14, i32 0, i32 2, !dbg !1037
  store i32 0, i32* %15, align 8, !dbg !1038
  br label %20, !dbg !1039

; <label>:16:                                     ; preds = %1
  %17 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1040
  %18 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %17, i32 0, i32 3, !dbg !1042
  %19 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %18, align 8, !dbg !1042
  call void @SHA1_Init(%struct.SHA1_CTX* %19), !dbg !1043
  br label %20

; <label>:20:                                     ; preds = %16, %11
  ret void, !dbg !1044
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @print_usage() #0 !dbg !1045 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1048
  %2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([1000 x i8], [1000 x i8]* @.str.19, i32 0, i32 0)), !dbg !1049
  ret i32 1, !dbg !1050
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @error_callback(i8*, i8*, i32, i32) #0 !dbg !1051 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.jbig2dec_params_t*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [22 x i8], align 16
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1056, metadata !DIExpression()), !dbg !1057
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1058, metadata !DIExpression()), !dbg !1059
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1060, metadata !DIExpression()), !dbg !1061
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %10, metadata !1064, metadata !DIExpression()), !dbg !1067
  %13 = load i8*, i8** %6, align 8, !dbg !1068
  %14 = bitcast i8* %13 to %struct.jbig2dec_params_t*, !dbg !1068
  store %struct.jbig2dec_params_t* %14, %struct.jbig2dec_params_t** %10, align 8, !dbg !1067
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1069, metadata !DIExpression()), !dbg !1070
  call void @llvm.dbg.declare(metadata [22 x i8]* %12, metadata !1071, metadata !DIExpression()), !dbg !1073
  %15 = load i32, i32* %8, align 4, !dbg !1074
  switch i32 %15, label %38 [
    i32 0, label %16
    i32 1, label %23
    i32 2, label %30
    i32 3, label %37
  ], !dbg !1075

; <label>:16:                                     ; preds = %4
  %17 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %10, align 8, !dbg !1076
  %18 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %17, i32 0, i32 1, !dbg !1079
  %19 = load i32, i32* %18, align 4, !dbg !1079
  %20 = icmp slt i32 %19, 3, !dbg !1080
  br i1 %20, label %21, label %22, !dbg !1081

; <label>:21:                                     ; preds = %16
  store i32 0, i32* %5, align 4, !dbg !1082
  br label %54, !dbg !1082

; <label>:22:                                     ; preds = %16
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8** %11, align 8, !dbg !1083
  br label %39, !dbg !1084

; <label>:23:                                     ; preds = %4
  %24 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %10, align 8, !dbg !1085
  %25 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %24, i32 0, i32 1, !dbg !1087
  %26 = load i32, i32* %25, align 4, !dbg !1087
  %27 = icmp slt i32 %26, 2, !dbg !1088
  br i1 %27, label %28, label %29, !dbg !1089

; <label>:28:                                     ; preds = %23
  store i32 0, i32* %5, align 4, !dbg !1090
  br label %54, !dbg !1090

; <label>:29:                                     ; preds = %23
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i8** %11, align 8, !dbg !1091
  br label %39, !dbg !1092

; <label>:30:                                     ; preds = %4
  %31 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %10, align 8, !dbg !1093
  %32 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %31, i32 0, i32 1, !dbg !1095
  %33 = load i32, i32* %32, align 4, !dbg !1095
  %34 = icmp slt i32 %33, 1, !dbg !1096
  br i1 %34, label %35, label %36, !dbg !1097

; <label>:35:                                     ; preds = %30
  store i32 0, i32* %5, align 4, !dbg !1098
  br label %54, !dbg !1098

; <label>:36:                                     ; preds = %30
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8** %11, align 8, !dbg !1099
  br label %39, !dbg !1100

; <label>:37:                                     ; preds = %4
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), i8** %11, align 8, !dbg !1101
  br label %39, !dbg !1102

; <label>:38:                                     ; preds = %4
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0), i8** %11, align 8, !dbg !1103
  br label %39, !dbg !1104

; <label>:39:                                     ; preds = %38, %37, %36, %29, %22
  %40 = load i32, i32* %9, align 4, !dbg !1105
  %41 = icmp eq i32 %40, -1, !dbg !1107
  br i1 %41, label %42, label %44, !dbg !1108

; <label>:42:                                     ; preds = %39
  %43 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i64 0, i64 0, !dbg !1109
  store i8 0, i8* %43, align 16, !dbg !1110
  br label %48, !dbg !1109

; <label>:44:                                     ; preds = %39
  %45 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !1111
  %46 = load i32, i32* %9, align 4, !dbg !1112
  %47 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %45, i64 22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i32 %46) #7, !dbg !1113
  br label %48

; <label>:48:                                     ; preds = %44, %42
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1114
  %50 = load i8*, i8** %11, align 8, !dbg !1115
  %51 = load i8*, i8** %7, align 8, !dbg !1116
  %52 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !1117
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i32 0, i32 0), i8* %50, i8* %51, i8* %52), !dbg !1118
  store i32 0, i32* %5, align 4, !dbg !1119
  br label %54, !dbg !1119

; <label>:54:                                     ; preds = %48, %35, %28, %21
  %55 = load i32, i32* %5, align 4, !dbg !1120
  ret i32 %55, !dbg !1120
}

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_output_filename(i8*, i8*) #0 !dbg !1121 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1124, metadata !DIExpression()), !dbg !1125
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1126, metadata !DIExpression()), !dbg !1127
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1128, metadata !DIExpression()), !dbg !1129
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1130, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1132, metadata !DIExpression()), !dbg !1133
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1134, metadata !DIExpression()), !dbg !1135
  %9 = load i8*, i8** %4, align 8, !dbg !1136
  %10 = icmp eq i8* %9, null, !dbg !1138
  br i1 %10, label %11, label %14, !dbg !1139

; <label>:11:                                     ; preds = %2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1140
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.27, i32 0, i32 0)), !dbg !1142
  call void @exit(i32 1) #9, !dbg !1143
  unreachable, !dbg !1143

; <label>:14:                                     ; preds = %2
  %15 = load i8*, i8** %3, align 8, !dbg !1144
  %16 = icmp eq i8* %15, null, !dbg !1146
  br i1 %16, label %17, label %18, !dbg !1147

; <label>:17:                                     ; preds = %14
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i8** %6, align 8, !dbg !1148
  br label %35, !dbg !1149

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %3, align 8, !dbg !1150
  %20 = call i8* @strrchr(i8* %19, i32 47) #10, !dbg !1152
  store i8* %20, i8** %6, align 8, !dbg !1153
  %21 = load i8*, i8** %6, align 8, !dbg !1154
  %22 = icmp eq i8* %21, null, !dbg !1156
  br i1 %22, label %23, label %26, !dbg !1157

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8, !dbg !1158
  %25 = call i8* @strrchr(i8* %24, i32 92) #10, !dbg !1159
  store i8* %25, i8** %6, align 8, !dbg !1160
  br label %26, !dbg !1161

; <label>:26:                                     ; preds = %23, %18
  %27 = load i8*, i8** %6, align 8, !dbg !1162
  %28 = icmp ne i8* %27, null, !dbg !1164
  br i1 %28, label %29, label %32, !dbg !1165

; <label>:29:                                     ; preds = %26
  %30 = load i8*, i8** %6, align 8, !dbg !1166
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !1166
  store i8* %31, i8** %6, align 8, !dbg !1166
  br label %34, !dbg !1167

; <label>:32:                                     ; preds = %26
  %33 = load i8*, i8** %3, align 8, !dbg !1168
  store i8* %33, i8** %6, align 8, !dbg !1169
  br label %34

; <label>:34:                                     ; preds = %32, %29
  br label %35

; <label>:35:                                     ; preds = %34, %17
  %36 = load i8*, i8** %6, align 8, !dbg !1170
  %37 = load i8, i8* %36, align 1, !dbg !1172
  %38 = sext i8 %37 to i32, !dbg !1172
  %39 = icmp eq i32 %38, 0, !dbg !1173
  br i1 %39, label %40, label %41, !dbg !1174

; <label>:40:                                     ; preds = %35
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i8** %6, align 8, !dbg !1175
  br label %41, !dbg !1176

; <label>:41:                                     ; preds = %40, %35
  %42 = load i8*, i8** %6, align 8, !dbg !1177
  %43 = call i64 @strlen(i8* %42) #10, !dbg !1178
  %44 = trunc i64 %43 to i32, !dbg !1178
  store i32 %44, i32* %8, align 4, !dbg !1179
  %45 = load i8*, i8** %6, align 8, !dbg !1180
  %46 = call i8* @strrchr(i8* %45, i32 46) #10, !dbg !1181
  store i8* %46, i8** %7, align 8, !dbg !1182
  %47 = load i8*, i8** %7, align 8, !dbg !1183
  %48 = icmp ne i8* %47, null, !dbg !1185
  br i1 %48, label %49, label %56, !dbg !1186

; <label>:49:                                     ; preds = %41
  %50 = load i8*, i8** %7, align 8, !dbg !1187
  %51 = call i64 @strlen(i8* %50) #10, !dbg !1188
  %52 = load i32, i32* %8, align 4, !dbg !1189
  %53 = sext i32 %52 to i64, !dbg !1189
  %54 = sub i64 %53, %51, !dbg !1189
  %55 = trunc i64 %54 to i32, !dbg !1189
  store i32 %55, i32* %8, align 4, !dbg !1189
  br label %56, !dbg !1190

; <label>:56:                                     ; preds = %49, %41
  %57 = load i32, i32* %8, align 4, !dbg !1191
  %58 = sext i32 %57 to i64, !dbg !1191
  %59 = load i8*, i8** %4, align 8, !dbg !1192
  %60 = call i64 @strlen(i8* %59) #10, !dbg !1193
  %61 = add i64 %58, %60, !dbg !1194
  %62 = add i64 %61, 1, !dbg !1195
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !1196
  %63 = call noalias i8* @malloc(i64 %62) #7, !dbg !1196
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !1197
  store i8* %63, i8** %5, align 8, !dbg !1197
  %64 = load i8*, i8** %5, align 8, !dbg !1198
  %65 = icmp eq i8* %64, null, !dbg !1200
  br i1 %65, label %66, label %69, !dbg !1201

; <label>:66:                                     ; preds = %56
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1202
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.29, i32 0, i32 0)), !dbg !1204
  call void @exit(i32 1) #9, !dbg !1205
  unreachable, !dbg !1205

; <label>:69:                                     ; preds = %56
  %70 = load i8*, i8** %5, align 8, !dbg !1206
  %71 = load i8*, i8** %6, align 8, !dbg !1207
  %72 = load i32, i32* %8, align 4, !dbg !1208
  %73 = sext i32 %72 to i64, !dbg !1208
  %74 = call i8* @strncpy(i8* %70, i8* %71, i64 %73) #7, !dbg !1209
  %75 = load i8*, i8** %5, align 8, !dbg !1210
  %76 = load i32, i32* %8, align 4, !dbg !1211
  %77 = sext i32 %76 to i64, !dbg !1212
  %78 = getelementptr inbounds i8, i8* %75, i64 %77, !dbg !1212
  %79 = load i8*, i8** %4, align 8, !dbg !1213
  %80 = load i8*, i8** %4, align 8, !dbg !1214
  %81 = call i64 @strlen(i8* %80) #10, !dbg !1215
  %82 = call i8* @strncpy(i8* %78, i8* %79, i64 %81) #7, !dbg !1216
  %83 = load i8*, i8** %5, align 8, !dbg !1217
  %84 = load i32, i32* %8, align 4, !dbg !1218
  %85 = sext i32 %84 to i64, !dbg !1219
  %86 = getelementptr inbounds i8, i8* %83, i64 %85, !dbg !1219
  %87 = load i8*, i8** %4, align 8, !dbg !1220
  %88 = call i64 @strlen(i8* %87) #10, !dbg !1221
  %89 = getelementptr inbounds i8, i8* %86, i64 %88, !dbg !1222
  store i8 0, i8* %89, align 1, !dbg !1223
  %90 = load i8*, i8** %5, align 8, !dbg !1224
  ret i8* %90, !dbg !1225
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_output_format(%struct.jbig2dec_params_t*, i8*) #0 !dbg !1226 {
  %3 = alloca %struct.jbig2dec_params_t*, align 8
  %4 = alloca i8*, align 8
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %3, metadata !1229, metadata !DIExpression()), !dbg !1230
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1231, metadata !DIExpression()), !dbg !1232
  %5 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %3, align 8, !dbg !1233
  %6 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %5, i32 0, i32 5, !dbg !1234
  store i32 1, i32* %6, align 8, !dbg !1235
  ret i32 0, !dbg !1236
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_page_image(%struct.jbig2dec_params_t*, %struct._Jbig2Image*) #0 !dbg !1237 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.jbig2dec_params_t*, align 8
  %5 = alloca %struct._Jbig2Image*, align 8
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %4, metadata !1240, metadata !DIExpression()), !dbg !1241
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %5, metadata !1242, metadata !DIExpression()), !dbg !1243
  %6 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %4, align 8, !dbg !1244
  %7 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %6, i32 0, i32 4, !dbg !1246
  %8 = load i8*, i8** %7, align 8, !dbg !1246
  %9 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i64 2) #10, !dbg !1247
  %10 = icmp ne i32 %9, 0, !dbg !1247
  br i1 %10, label %23, label %11, !dbg !1248

; <label>:11:                                     ; preds = %2
  %12 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %4, align 8, !dbg !1249
  %13 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %12, i32 0, i32 5, !dbg !1251
  %14 = load i32, i32* %13, align 8, !dbg !1251
  switch i32 %14, label %19 [
    i32 1, label %15
  ], !dbg !1252

; <label>:15:                                     ; preds = %11
  %16 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !1253
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1255
  %18 = call i32 @jbig2_image_write_pbm(%struct._Jbig2Image* %16, %struct._IO_FILE* %17), !dbg !1256
  br label %22, !dbg !1257

; <label>:19:                                     ; preds = %11
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1258
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0)), !dbg !1259
  store i32 1, i32* %3, align 4, !dbg !1260
  br label %49, !dbg !1260

; <label>:22:                                     ; preds = %15
  br label %48, !dbg !1261

; <label>:23:                                     ; preds = %2
  %24 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %4, align 8, !dbg !1262
  %25 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %24, i32 0, i32 1, !dbg !1265
  %26 = load i32, i32* %25, align 4, !dbg !1265
  %27 = icmp sgt i32 %26, 1, !dbg !1266
  br i1 %27, label %28, label %34, !dbg !1267

; <label>:28:                                     ; preds = %23
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1268
  %30 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %4, align 8, !dbg !1269
  %31 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %30, i32 0, i32 4, !dbg !1270
  %32 = load i8*, i8** %31, align 8, !dbg !1270
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i32 0, i32 0), i8* %32), !dbg !1271
  br label %34, !dbg !1271

; <label>:34:                                     ; preds = %28, %23
  %35 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %4, align 8, !dbg !1272
  %36 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %35, i32 0, i32 5, !dbg !1273
  %37 = load i32, i32* %36, align 8, !dbg !1273
  switch i32 %37, label %44 [
    i32 1, label %38
  ], !dbg !1274

; <label>:38:                                     ; preds = %34
  %39 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !1275
  %40 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %4, align 8, !dbg !1277
  %41 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %40, i32 0, i32 4, !dbg !1278
  %42 = load i8*, i8** %41, align 8, !dbg !1278
  %43 = call i32 @jbig2_image_write_pbm_file(%struct._Jbig2Image* %39, i8* %42), !dbg !1279
  br label %47, !dbg !1280

; <label>:44:                                     ; preds = %34
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1281
  %46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0)), !dbg !1282
  store i32 1, i32* %3, align 4, !dbg !1283
  br label %49, !dbg !1283

; <label>:47:                                     ; preds = %38
  br label %48

; <label>:48:                                     ; preds = %47, %22
  store i32 0, i32* %3, align 4, !dbg !1284
  br label %49, !dbg !1284

; <label>:49:                                     ; preds = %48, %44, %19
  %50 = load i32, i32* %3, align 4, !dbg !1285
  ret i32 %50, !dbg !1285
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @hash_image(%struct.jbig2dec_params_t*, %struct._Jbig2Image*) #0 !dbg !1286 {
  %3 = alloca %struct.jbig2dec_params_t*, align 8
  %4 = alloca %struct._Jbig2Image*, align 8
  %5 = alloca i32, align 4
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %3, metadata !1289, metadata !DIExpression()), !dbg !1290
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %4, metadata !1291, metadata !DIExpression()), !dbg !1292
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1293, metadata !DIExpression()), !dbg !1294
  %6 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !1295
  %7 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %6, i32 0, i32 2, !dbg !1296
  %8 = load i32, i32* %7, align 8, !dbg !1296
  %9 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !1297
  %10 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %9, i32 0, i32 1, !dbg !1298
  %11 = load i32, i32* %10, align 4, !dbg !1298
  %12 = mul nsw i32 %8, %11, !dbg !1299
  store i32 %12, i32* %5, align 4, !dbg !1294
  %13 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %3, align 8, !dbg !1300
  %14 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %13, i32 0, i32 3, !dbg !1301
  %15 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %14, align 8, !dbg !1301
  %16 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !1302
  %17 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %16, i32 0, i32 3, !dbg !1303
  %18 = load i8*, i8** %17, align 8, !dbg !1303
  %19 = load i32, i32* %5, align 4, !dbg !1304
  %20 = zext i32 %19 to i64, !dbg !1304
  call void @SHA1_Update(%struct.SHA1_CTX* %15, i8* %18, i64 %20), !dbg !1305
  ret void, !dbg !1306
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_document_hash(%struct.jbig2dec_params_t*) #0 !dbg !1307 {
  %2 = alloca %struct.jbig2dec_params_t*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %2, metadata !1310, metadata !DIExpression()), !dbg !1311
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !1312, metadata !DIExpression()), !dbg !1313
  %4 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1314
  %5 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %4, i32 0, i32 4, !dbg !1316
  %6 = load i8*, i8** %5, align 8, !dbg !1316
  %7 = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i64 2) #10, !dbg !1317
  %8 = icmp ne i32 %7, 0, !dbg !1317
  br i1 %8, label %11, label %9, !dbg !1318

; <label>:9:                                      ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1319
  store %struct._IO_FILE* %10, %struct._IO_FILE** %3, align 8, !dbg !1321
  br label %13, !dbg !1322

; <label>:11:                                     ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1323
  store %struct._IO_FILE* %12, %struct._IO_FILE** %3, align 8, !dbg !1325
  br label %13

; <label>:13:                                     ; preds = %11, %9
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !1326
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i32 0, i32 0)), !dbg !1327
  %16 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1328
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !1329
  call void @hash_print(%struct.jbig2dec_params_t* %16, %struct._IO_FILE* %17), !dbg !1330
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !1331
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0)), !dbg !1332
  ret i32 0, !dbg !1333
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @hash_free(%struct.jbig2dec_params_t*) #0 !dbg !1334 {
  %2 = alloca %struct.jbig2dec_params_t*, align 8
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %2, metadata !1335, metadata !DIExpression()), !dbg !1336
  %3 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1337
  %4 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %3, i32 0, i32 3, !dbg !1338
  %5 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1338
  %6 = bitcast %struct.SHA1_CTX* %5 to i8*, !dbg !1337
  call void @free(i8* %6) #7, !dbg !1339
  %7 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %2, align 8, !dbg !1340
  %8 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %7, i32 0, i32 3, !dbg !1341
  store %struct.SHA1_CTX* null, %struct.SHA1_CTX** %8, align 8, !dbg !1342
  ret void, !dbg !1343
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @hash_print(%struct.jbig2dec_params_t*, %struct._IO_FILE*) #0 !dbg !1344 {
  %3 = alloca %struct.jbig2dec_params_t*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca [20 x i8], align 16
  %6 = alloca [41 x i8], align 16
  %7 = alloca i32, align 4
  store %struct.jbig2dec_params_t* %0, %struct.jbig2dec_params_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.jbig2dec_params_t** %3, metadata !1347, metadata !DIExpression()), !dbg !1348
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !1349, metadata !DIExpression()), !dbg !1350
  call void @llvm.dbg.declare(metadata [20 x i8]* %5, metadata !1351, metadata !DIExpression()), !dbg !1353
  call void @llvm.dbg.declare(metadata [41 x i8]* %6, metadata !1354, metadata !DIExpression()), !dbg !1358
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1359, metadata !DIExpression()), !dbg !1360
  %8 = load %struct.jbig2dec_params_t*, %struct.jbig2dec_params_t** %3, align 8, !dbg !1361
  %9 = getelementptr inbounds %struct.jbig2dec_params_t, %struct.jbig2dec_params_t* %8, i32 0, i32 3, !dbg !1362
  %10 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %9, align 8, !dbg !1362
  %11 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i32 0, i32 0, !dbg !1363
  call void @SHA1_Final(%struct.SHA1_CTX* %10, i8* %11), !dbg !1364
  store i32 0, i32* %7, align 4, !dbg !1365
  br label %12, !dbg !1367

; <label>:12:                                     ; preds = %26, %2
  %13 = load i32, i32* %7, align 4, !dbg !1368
  %14 = icmp slt i32 %13, 20, !dbg !1370
  br i1 %14, label %15, label %29, !dbg !1371

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %7, align 4, !dbg !1372
  %17 = mul nsw i32 2, %16, !dbg !1374
  %18 = sext i32 %17 to i64, !dbg !1375
  %19 = getelementptr inbounds [41 x i8], [41 x i8]* %6, i64 0, i64 %18, !dbg !1375
  %20 = load i32, i32* %7, align 4, !dbg !1376
  %21 = sext i32 %20 to i64, !dbg !1377
  %22 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 %21, !dbg !1377
  %23 = load i8, i8* %22, align 1, !dbg !1377
  %24 = zext i8 %23 to i32, !dbg !1377
  %25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %19, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 %24) #7, !dbg !1378
  br label %26, !dbg !1379

; <label>:26:                                     ; preds = %15
  %27 = load i32, i32* %7, align 4, !dbg !1380
  %28 = add nsw i32 %27, 1, !dbg !1380
  store i32 %28, i32* %7, align 4, !dbg !1380
  br label %12, !dbg !1381, !llvm.loop !1382

; <label>:29:                                     ; preds = %12
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !1384
  %31 = getelementptr inbounds [41 x i8], [41 x i8]* %6, i32 0, i32 0, !dbg !1385
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* %31), !dbg !1386
  ret void, !dbg !1387
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #4

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #5

declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @print_version() #0 !dbg !1388 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1389
  %2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0)), !dbg !1390
  ret i32 0, !dbg !1391
}

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SHA1_Transform(i32*, i8*) #0 !dbg !428 {
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %union.CHAR64LONG16*, align 8
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !1392, metadata !DIExpression()), !dbg !1393
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1394, metadata !DIExpression()), !dbg !1395
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1396, metadata !DIExpression()), !dbg !1397
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1398, metadata !DIExpression()), !dbg !1399
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1400, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1402, metadata !DIExpression()), !dbg !1403
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1404, metadata !DIExpression()), !dbg !1405
  call void @llvm.dbg.declare(metadata %union.CHAR64LONG16** %10, metadata !1406, metadata !DIExpression()), !dbg !1407
  %11 = load i8*, i8** %4, align 8, !dbg !1408
  %12 = bitcast i8* %11 to %union.CHAR64LONG16*, !dbg !1409
  store %union.CHAR64LONG16* %12, %union.CHAR64LONG16** %10, align 8, !dbg !1410
  %13 = load i32*, i32** %3, align 8, !dbg !1411
  %14 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !1411
  %15 = load i32, i32* %14, align 4, !dbg !1411
  store i32 %15, i32* %5, align 4, !dbg !1412
  %16 = load i32*, i32** %3, align 8, !dbg !1413
  %17 = getelementptr inbounds i32, i32* %16, i64 1, !dbg !1413
  %18 = load i32, i32* %17, align 4, !dbg !1413
  store i32 %18, i32* %6, align 4, !dbg !1414
  %19 = load i32*, i32** %3, align 8, !dbg !1415
  %20 = getelementptr inbounds i32, i32* %19, i64 2, !dbg !1415
  %21 = load i32, i32* %20, align 4, !dbg !1415
  store i32 %21, i32* %7, align 4, !dbg !1416
  %22 = load i32*, i32** %3, align 8, !dbg !1417
  %23 = getelementptr inbounds i32, i32* %22, i64 3, !dbg !1417
  %24 = load i32, i32* %23, align 4, !dbg !1417
  store i32 %24, i32* %8, align 4, !dbg !1418
  %25 = load i32*, i32** %3, align 8, !dbg !1419
  %26 = getelementptr inbounds i32, i32* %25, i64 4, !dbg !1419
  %27 = load i32, i32* %26, align 4, !dbg !1419
  store i32 %27, i32* %9, align 4, !dbg !1420
  %28 = load i32, i32* %6, align 4, !dbg !1421
  %29 = load i32, i32* %7, align 4, !dbg !1421
  %30 = load i32, i32* %8, align 4, !dbg !1421
  %31 = xor i32 %29, %30, !dbg !1421
  %32 = and i32 %28, %31, !dbg !1421
  %33 = load i32, i32* %8, align 4, !dbg !1421
  %34 = xor i32 %32, %33, !dbg !1421
  %35 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1421
  %36 = bitcast %union.CHAR64LONG16* %35 to [16 x i32]*, !dbg !1421
  %37 = getelementptr inbounds [16 x i32], [16 x i32]* %36, i64 0, i64 0, !dbg !1421
  %38 = load i32, i32* %37, align 4, !dbg !1421
  %39 = shl i32 %38, 24, !dbg !1421
  %40 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1421
  %41 = bitcast %union.CHAR64LONG16* %40 to [16 x i32]*, !dbg !1421
  %42 = getelementptr inbounds [16 x i32], [16 x i32]* %41, i64 0, i64 0, !dbg !1421
  %43 = load i32, i32* %42, align 4, !dbg !1421
  %44 = lshr i32 %43, 8, !dbg !1421
  %45 = or i32 %39, %44, !dbg !1421
  %46 = and i32 %45, -16711936, !dbg !1421
  %47 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1421
  %48 = bitcast %union.CHAR64LONG16* %47 to [16 x i32]*, !dbg !1421
  %49 = getelementptr inbounds [16 x i32], [16 x i32]* %48, i64 0, i64 0, !dbg !1421
  %50 = load i32, i32* %49, align 4, !dbg !1421
  %51 = shl i32 %50, 8, !dbg !1421
  %52 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1421
  %53 = bitcast %union.CHAR64LONG16* %52 to [16 x i32]*, !dbg !1421
  %54 = getelementptr inbounds [16 x i32], [16 x i32]* %53, i64 0, i64 0, !dbg !1421
  %55 = load i32, i32* %54, align 4, !dbg !1421
  %56 = lshr i32 %55, 24, !dbg !1421
  %57 = or i32 %51, %56, !dbg !1421
  %58 = and i32 %57, 16711935, !dbg !1421
  %59 = or i32 %46, %58, !dbg !1421
  %60 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1421
  %61 = bitcast %union.CHAR64LONG16* %60 to [16 x i32]*, !dbg !1421
  %62 = getelementptr inbounds [16 x i32], [16 x i32]* %61, i64 0, i64 0, !dbg !1421
  store i32 %59, i32* %62, align 4, !dbg !1421
  %63 = add i32 %34, %59, !dbg !1421
  %64 = add i32 %63, 1518500249, !dbg !1421
  %65 = load i32, i32* %5, align 4, !dbg !1421
  %66 = shl i32 %65, 5, !dbg !1421
  %67 = load i32, i32* %5, align 4, !dbg !1421
  %68 = lshr i32 %67, 27, !dbg !1421
  %69 = or i32 %66, %68, !dbg !1421
  %70 = add i32 %64, %69, !dbg !1421
  %71 = load i32, i32* %9, align 4, !dbg !1421
  %72 = add i32 %71, %70, !dbg !1421
  store i32 %72, i32* %9, align 4, !dbg !1421
  %73 = load i32, i32* %6, align 4, !dbg !1421
  %74 = shl i32 %73, 30, !dbg !1421
  %75 = load i32, i32* %6, align 4, !dbg !1421
  %76 = lshr i32 %75, 2, !dbg !1421
  %77 = or i32 %74, %76, !dbg !1421
  store i32 %77, i32* %6, align 4, !dbg !1421
  %78 = load i32, i32* %5, align 4, !dbg !1422
  %79 = load i32, i32* %6, align 4, !dbg !1422
  %80 = load i32, i32* %7, align 4, !dbg !1422
  %81 = xor i32 %79, %80, !dbg !1422
  %82 = and i32 %78, %81, !dbg !1422
  %83 = load i32, i32* %7, align 4, !dbg !1422
  %84 = xor i32 %82, %83, !dbg !1422
  %85 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1422
  %86 = bitcast %union.CHAR64LONG16* %85 to [16 x i32]*, !dbg !1422
  %87 = getelementptr inbounds [16 x i32], [16 x i32]* %86, i64 0, i64 1, !dbg !1422
  %88 = load i32, i32* %87, align 4, !dbg !1422
  %89 = shl i32 %88, 24, !dbg !1422
  %90 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1422
  %91 = bitcast %union.CHAR64LONG16* %90 to [16 x i32]*, !dbg !1422
  %92 = getelementptr inbounds [16 x i32], [16 x i32]* %91, i64 0, i64 1, !dbg !1422
  %93 = load i32, i32* %92, align 4, !dbg !1422
  %94 = lshr i32 %93, 8, !dbg !1422
  %95 = or i32 %89, %94, !dbg !1422
  %96 = and i32 %95, -16711936, !dbg !1422
  %97 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1422
  %98 = bitcast %union.CHAR64LONG16* %97 to [16 x i32]*, !dbg !1422
  %99 = getelementptr inbounds [16 x i32], [16 x i32]* %98, i64 0, i64 1, !dbg !1422
  %100 = load i32, i32* %99, align 4, !dbg !1422
  %101 = shl i32 %100, 8, !dbg !1422
  %102 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1422
  %103 = bitcast %union.CHAR64LONG16* %102 to [16 x i32]*, !dbg !1422
  %104 = getelementptr inbounds [16 x i32], [16 x i32]* %103, i64 0, i64 1, !dbg !1422
  %105 = load i32, i32* %104, align 4, !dbg !1422
  %106 = lshr i32 %105, 24, !dbg !1422
  %107 = or i32 %101, %106, !dbg !1422
  %108 = and i32 %107, 16711935, !dbg !1422
  %109 = or i32 %96, %108, !dbg !1422
  %110 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1422
  %111 = bitcast %union.CHAR64LONG16* %110 to [16 x i32]*, !dbg !1422
  %112 = getelementptr inbounds [16 x i32], [16 x i32]* %111, i64 0, i64 1, !dbg !1422
  store i32 %109, i32* %112, align 4, !dbg !1422
  %113 = add i32 %84, %109, !dbg !1422
  %114 = add i32 %113, 1518500249, !dbg !1422
  %115 = load i32, i32* %9, align 4, !dbg !1422
  %116 = shl i32 %115, 5, !dbg !1422
  %117 = load i32, i32* %9, align 4, !dbg !1422
  %118 = lshr i32 %117, 27, !dbg !1422
  %119 = or i32 %116, %118, !dbg !1422
  %120 = add i32 %114, %119, !dbg !1422
  %121 = load i32, i32* %8, align 4, !dbg !1422
  %122 = add i32 %121, %120, !dbg !1422
  store i32 %122, i32* %8, align 4, !dbg !1422
  %123 = load i32, i32* %5, align 4, !dbg !1422
  %124 = shl i32 %123, 30, !dbg !1422
  %125 = load i32, i32* %5, align 4, !dbg !1422
  %126 = lshr i32 %125, 2, !dbg !1422
  %127 = or i32 %124, %126, !dbg !1422
  store i32 %127, i32* %5, align 4, !dbg !1422
  %128 = load i32, i32* %9, align 4, !dbg !1423
  %129 = load i32, i32* %5, align 4, !dbg !1423
  %130 = load i32, i32* %6, align 4, !dbg !1423
  %131 = xor i32 %129, %130, !dbg !1423
  %132 = and i32 %128, %131, !dbg !1423
  %133 = load i32, i32* %6, align 4, !dbg !1423
  %134 = xor i32 %132, %133, !dbg !1423
  %135 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1423
  %136 = bitcast %union.CHAR64LONG16* %135 to [16 x i32]*, !dbg !1423
  %137 = getelementptr inbounds [16 x i32], [16 x i32]* %136, i64 0, i64 2, !dbg !1423
  %138 = load i32, i32* %137, align 4, !dbg !1423
  %139 = shl i32 %138, 24, !dbg !1423
  %140 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1423
  %141 = bitcast %union.CHAR64LONG16* %140 to [16 x i32]*, !dbg !1423
  %142 = getelementptr inbounds [16 x i32], [16 x i32]* %141, i64 0, i64 2, !dbg !1423
  %143 = load i32, i32* %142, align 4, !dbg !1423
  %144 = lshr i32 %143, 8, !dbg !1423
  %145 = or i32 %139, %144, !dbg !1423
  %146 = and i32 %145, -16711936, !dbg !1423
  %147 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1423
  %148 = bitcast %union.CHAR64LONG16* %147 to [16 x i32]*, !dbg !1423
  %149 = getelementptr inbounds [16 x i32], [16 x i32]* %148, i64 0, i64 2, !dbg !1423
  %150 = load i32, i32* %149, align 4, !dbg !1423
  %151 = shl i32 %150, 8, !dbg !1423
  %152 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1423
  %153 = bitcast %union.CHAR64LONG16* %152 to [16 x i32]*, !dbg !1423
  %154 = getelementptr inbounds [16 x i32], [16 x i32]* %153, i64 0, i64 2, !dbg !1423
  %155 = load i32, i32* %154, align 4, !dbg !1423
  %156 = lshr i32 %155, 24, !dbg !1423
  %157 = or i32 %151, %156, !dbg !1423
  %158 = and i32 %157, 16711935, !dbg !1423
  %159 = or i32 %146, %158, !dbg !1423
  %160 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1423
  %161 = bitcast %union.CHAR64LONG16* %160 to [16 x i32]*, !dbg !1423
  %162 = getelementptr inbounds [16 x i32], [16 x i32]* %161, i64 0, i64 2, !dbg !1423
  store i32 %159, i32* %162, align 4, !dbg !1423
  %163 = add i32 %134, %159, !dbg !1423
  %164 = add i32 %163, 1518500249, !dbg !1423
  %165 = load i32, i32* %8, align 4, !dbg !1423
  %166 = shl i32 %165, 5, !dbg !1423
  %167 = load i32, i32* %8, align 4, !dbg !1423
  %168 = lshr i32 %167, 27, !dbg !1423
  %169 = or i32 %166, %168, !dbg !1423
  %170 = add i32 %164, %169, !dbg !1423
  %171 = load i32, i32* %7, align 4, !dbg !1423
  %172 = add i32 %171, %170, !dbg !1423
  store i32 %172, i32* %7, align 4, !dbg !1423
  %173 = load i32, i32* %9, align 4, !dbg !1423
  %174 = shl i32 %173, 30, !dbg !1423
  %175 = load i32, i32* %9, align 4, !dbg !1423
  %176 = lshr i32 %175, 2, !dbg !1423
  %177 = or i32 %174, %176, !dbg !1423
  store i32 %177, i32* %9, align 4, !dbg !1423
  %178 = load i32, i32* %8, align 4, !dbg !1424
  %179 = load i32, i32* %9, align 4, !dbg !1424
  %180 = load i32, i32* %5, align 4, !dbg !1424
  %181 = xor i32 %179, %180, !dbg !1424
  %182 = and i32 %178, %181, !dbg !1424
  %183 = load i32, i32* %5, align 4, !dbg !1424
  %184 = xor i32 %182, %183, !dbg !1424
  %185 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1424
  %186 = bitcast %union.CHAR64LONG16* %185 to [16 x i32]*, !dbg !1424
  %187 = getelementptr inbounds [16 x i32], [16 x i32]* %186, i64 0, i64 3, !dbg !1424
  %188 = load i32, i32* %187, align 4, !dbg !1424
  %189 = shl i32 %188, 24, !dbg !1424
  %190 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1424
  %191 = bitcast %union.CHAR64LONG16* %190 to [16 x i32]*, !dbg !1424
  %192 = getelementptr inbounds [16 x i32], [16 x i32]* %191, i64 0, i64 3, !dbg !1424
  %193 = load i32, i32* %192, align 4, !dbg !1424
  %194 = lshr i32 %193, 8, !dbg !1424
  %195 = or i32 %189, %194, !dbg !1424
  %196 = and i32 %195, -16711936, !dbg !1424
  %197 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1424
  %198 = bitcast %union.CHAR64LONG16* %197 to [16 x i32]*, !dbg !1424
  %199 = getelementptr inbounds [16 x i32], [16 x i32]* %198, i64 0, i64 3, !dbg !1424
  %200 = load i32, i32* %199, align 4, !dbg !1424
  %201 = shl i32 %200, 8, !dbg !1424
  %202 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1424
  %203 = bitcast %union.CHAR64LONG16* %202 to [16 x i32]*, !dbg !1424
  %204 = getelementptr inbounds [16 x i32], [16 x i32]* %203, i64 0, i64 3, !dbg !1424
  %205 = load i32, i32* %204, align 4, !dbg !1424
  %206 = lshr i32 %205, 24, !dbg !1424
  %207 = or i32 %201, %206, !dbg !1424
  %208 = and i32 %207, 16711935, !dbg !1424
  %209 = or i32 %196, %208, !dbg !1424
  %210 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1424
  %211 = bitcast %union.CHAR64LONG16* %210 to [16 x i32]*, !dbg !1424
  %212 = getelementptr inbounds [16 x i32], [16 x i32]* %211, i64 0, i64 3, !dbg !1424
  store i32 %209, i32* %212, align 4, !dbg !1424
  %213 = add i32 %184, %209, !dbg !1424
  %214 = add i32 %213, 1518500249, !dbg !1424
  %215 = load i32, i32* %7, align 4, !dbg !1424
  %216 = shl i32 %215, 5, !dbg !1424
  %217 = load i32, i32* %7, align 4, !dbg !1424
  %218 = lshr i32 %217, 27, !dbg !1424
  %219 = or i32 %216, %218, !dbg !1424
  %220 = add i32 %214, %219, !dbg !1424
  %221 = load i32, i32* %6, align 4, !dbg !1424
  %222 = add i32 %221, %220, !dbg !1424
  store i32 %222, i32* %6, align 4, !dbg !1424
  %223 = load i32, i32* %8, align 4, !dbg !1424
  %224 = shl i32 %223, 30, !dbg !1424
  %225 = load i32, i32* %8, align 4, !dbg !1424
  %226 = lshr i32 %225, 2, !dbg !1424
  %227 = or i32 %224, %226, !dbg !1424
  store i32 %227, i32* %8, align 4, !dbg !1424
  %228 = load i32, i32* %7, align 4, !dbg !1425
  %229 = load i32, i32* %8, align 4, !dbg !1425
  %230 = load i32, i32* %9, align 4, !dbg !1425
  %231 = xor i32 %229, %230, !dbg !1425
  %232 = and i32 %228, %231, !dbg !1425
  %233 = load i32, i32* %9, align 4, !dbg !1425
  %234 = xor i32 %232, %233, !dbg !1425
  %235 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1425
  %236 = bitcast %union.CHAR64LONG16* %235 to [16 x i32]*, !dbg !1425
  %237 = getelementptr inbounds [16 x i32], [16 x i32]* %236, i64 0, i64 4, !dbg !1425
  %238 = load i32, i32* %237, align 4, !dbg !1425
  %239 = shl i32 %238, 24, !dbg !1425
  %240 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1425
  %241 = bitcast %union.CHAR64LONG16* %240 to [16 x i32]*, !dbg !1425
  %242 = getelementptr inbounds [16 x i32], [16 x i32]* %241, i64 0, i64 4, !dbg !1425
  %243 = load i32, i32* %242, align 4, !dbg !1425
  %244 = lshr i32 %243, 8, !dbg !1425
  %245 = or i32 %239, %244, !dbg !1425
  %246 = and i32 %245, -16711936, !dbg !1425
  %247 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1425
  %248 = bitcast %union.CHAR64LONG16* %247 to [16 x i32]*, !dbg !1425
  %249 = getelementptr inbounds [16 x i32], [16 x i32]* %248, i64 0, i64 4, !dbg !1425
  %250 = load i32, i32* %249, align 4, !dbg !1425
  %251 = shl i32 %250, 8, !dbg !1425
  %252 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1425
  %253 = bitcast %union.CHAR64LONG16* %252 to [16 x i32]*, !dbg !1425
  %254 = getelementptr inbounds [16 x i32], [16 x i32]* %253, i64 0, i64 4, !dbg !1425
  %255 = load i32, i32* %254, align 4, !dbg !1425
  %256 = lshr i32 %255, 24, !dbg !1425
  %257 = or i32 %251, %256, !dbg !1425
  %258 = and i32 %257, 16711935, !dbg !1425
  %259 = or i32 %246, %258, !dbg !1425
  %260 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1425
  %261 = bitcast %union.CHAR64LONG16* %260 to [16 x i32]*, !dbg !1425
  %262 = getelementptr inbounds [16 x i32], [16 x i32]* %261, i64 0, i64 4, !dbg !1425
  store i32 %259, i32* %262, align 4, !dbg !1425
  %263 = add i32 %234, %259, !dbg !1425
  %264 = add i32 %263, 1518500249, !dbg !1425
  %265 = load i32, i32* %6, align 4, !dbg !1425
  %266 = shl i32 %265, 5, !dbg !1425
  %267 = load i32, i32* %6, align 4, !dbg !1425
  %268 = lshr i32 %267, 27, !dbg !1425
  %269 = or i32 %266, %268, !dbg !1425
  %270 = add i32 %264, %269, !dbg !1425
  %271 = load i32, i32* %5, align 4, !dbg !1425
  %272 = add i32 %271, %270, !dbg !1425
  store i32 %272, i32* %5, align 4, !dbg !1425
  %273 = load i32, i32* %7, align 4, !dbg !1425
  %274 = shl i32 %273, 30, !dbg !1425
  %275 = load i32, i32* %7, align 4, !dbg !1425
  %276 = lshr i32 %275, 2, !dbg !1425
  %277 = or i32 %274, %276, !dbg !1425
  store i32 %277, i32* %7, align 4, !dbg !1425
  %278 = load i32, i32* %6, align 4, !dbg !1426
  %279 = load i32, i32* %7, align 4, !dbg !1426
  %280 = load i32, i32* %8, align 4, !dbg !1426
  %281 = xor i32 %279, %280, !dbg !1426
  %282 = and i32 %278, %281, !dbg !1426
  %283 = load i32, i32* %8, align 4, !dbg !1426
  %284 = xor i32 %282, %283, !dbg !1426
  %285 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1426
  %286 = bitcast %union.CHAR64LONG16* %285 to [16 x i32]*, !dbg !1426
  %287 = getelementptr inbounds [16 x i32], [16 x i32]* %286, i64 0, i64 5, !dbg !1426
  %288 = load i32, i32* %287, align 4, !dbg !1426
  %289 = shl i32 %288, 24, !dbg !1426
  %290 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1426
  %291 = bitcast %union.CHAR64LONG16* %290 to [16 x i32]*, !dbg !1426
  %292 = getelementptr inbounds [16 x i32], [16 x i32]* %291, i64 0, i64 5, !dbg !1426
  %293 = load i32, i32* %292, align 4, !dbg !1426
  %294 = lshr i32 %293, 8, !dbg !1426
  %295 = or i32 %289, %294, !dbg !1426
  %296 = and i32 %295, -16711936, !dbg !1426
  %297 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1426
  %298 = bitcast %union.CHAR64LONG16* %297 to [16 x i32]*, !dbg !1426
  %299 = getelementptr inbounds [16 x i32], [16 x i32]* %298, i64 0, i64 5, !dbg !1426
  %300 = load i32, i32* %299, align 4, !dbg !1426
  %301 = shl i32 %300, 8, !dbg !1426
  %302 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1426
  %303 = bitcast %union.CHAR64LONG16* %302 to [16 x i32]*, !dbg !1426
  %304 = getelementptr inbounds [16 x i32], [16 x i32]* %303, i64 0, i64 5, !dbg !1426
  %305 = load i32, i32* %304, align 4, !dbg !1426
  %306 = lshr i32 %305, 24, !dbg !1426
  %307 = or i32 %301, %306, !dbg !1426
  %308 = and i32 %307, 16711935, !dbg !1426
  %309 = or i32 %296, %308, !dbg !1426
  %310 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1426
  %311 = bitcast %union.CHAR64LONG16* %310 to [16 x i32]*, !dbg !1426
  %312 = getelementptr inbounds [16 x i32], [16 x i32]* %311, i64 0, i64 5, !dbg !1426
  store i32 %309, i32* %312, align 4, !dbg !1426
  %313 = add i32 %284, %309, !dbg !1426
  %314 = add i32 %313, 1518500249, !dbg !1426
  %315 = load i32, i32* %5, align 4, !dbg !1426
  %316 = shl i32 %315, 5, !dbg !1426
  %317 = load i32, i32* %5, align 4, !dbg !1426
  %318 = lshr i32 %317, 27, !dbg !1426
  %319 = or i32 %316, %318, !dbg !1426
  %320 = add i32 %314, %319, !dbg !1426
  %321 = load i32, i32* %9, align 4, !dbg !1426
  %322 = add i32 %321, %320, !dbg !1426
  store i32 %322, i32* %9, align 4, !dbg !1426
  %323 = load i32, i32* %6, align 4, !dbg !1426
  %324 = shl i32 %323, 30, !dbg !1426
  %325 = load i32, i32* %6, align 4, !dbg !1426
  %326 = lshr i32 %325, 2, !dbg !1426
  %327 = or i32 %324, %326, !dbg !1426
  store i32 %327, i32* %6, align 4, !dbg !1426
  %328 = load i32, i32* %5, align 4, !dbg !1427
  %329 = load i32, i32* %6, align 4, !dbg !1427
  %330 = load i32, i32* %7, align 4, !dbg !1427
  %331 = xor i32 %329, %330, !dbg !1427
  %332 = and i32 %328, %331, !dbg !1427
  %333 = load i32, i32* %7, align 4, !dbg !1427
  %334 = xor i32 %332, %333, !dbg !1427
  %335 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1427
  %336 = bitcast %union.CHAR64LONG16* %335 to [16 x i32]*, !dbg !1427
  %337 = getelementptr inbounds [16 x i32], [16 x i32]* %336, i64 0, i64 6, !dbg !1427
  %338 = load i32, i32* %337, align 4, !dbg !1427
  %339 = shl i32 %338, 24, !dbg !1427
  %340 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1427
  %341 = bitcast %union.CHAR64LONG16* %340 to [16 x i32]*, !dbg !1427
  %342 = getelementptr inbounds [16 x i32], [16 x i32]* %341, i64 0, i64 6, !dbg !1427
  %343 = load i32, i32* %342, align 4, !dbg !1427
  %344 = lshr i32 %343, 8, !dbg !1427
  %345 = or i32 %339, %344, !dbg !1427
  %346 = and i32 %345, -16711936, !dbg !1427
  %347 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1427
  %348 = bitcast %union.CHAR64LONG16* %347 to [16 x i32]*, !dbg !1427
  %349 = getelementptr inbounds [16 x i32], [16 x i32]* %348, i64 0, i64 6, !dbg !1427
  %350 = load i32, i32* %349, align 4, !dbg !1427
  %351 = shl i32 %350, 8, !dbg !1427
  %352 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1427
  %353 = bitcast %union.CHAR64LONG16* %352 to [16 x i32]*, !dbg !1427
  %354 = getelementptr inbounds [16 x i32], [16 x i32]* %353, i64 0, i64 6, !dbg !1427
  %355 = load i32, i32* %354, align 4, !dbg !1427
  %356 = lshr i32 %355, 24, !dbg !1427
  %357 = or i32 %351, %356, !dbg !1427
  %358 = and i32 %357, 16711935, !dbg !1427
  %359 = or i32 %346, %358, !dbg !1427
  %360 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1427
  %361 = bitcast %union.CHAR64LONG16* %360 to [16 x i32]*, !dbg !1427
  %362 = getelementptr inbounds [16 x i32], [16 x i32]* %361, i64 0, i64 6, !dbg !1427
  store i32 %359, i32* %362, align 4, !dbg !1427
  %363 = add i32 %334, %359, !dbg !1427
  %364 = add i32 %363, 1518500249, !dbg !1427
  %365 = load i32, i32* %9, align 4, !dbg !1427
  %366 = shl i32 %365, 5, !dbg !1427
  %367 = load i32, i32* %9, align 4, !dbg !1427
  %368 = lshr i32 %367, 27, !dbg !1427
  %369 = or i32 %366, %368, !dbg !1427
  %370 = add i32 %364, %369, !dbg !1427
  %371 = load i32, i32* %8, align 4, !dbg !1427
  %372 = add i32 %371, %370, !dbg !1427
  store i32 %372, i32* %8, align 4, !dbg !1427
  %373 = load i32, i32* %5, align 4, !dbg !1427
  %374 = shl i32 %373, 30, !dbg !1427
  %375 = load i32, i32* %5, align 4, !dbg !1427
  %376 = lshr i32 %375, 2, !dbg !1427
  %377 = or i32 %374, %376, !dbg !1427
  store i32 %377, i32* %5, align 4, !dbg !1427
  %378 = load i32, i32* %9, align 4, !dbg !1428
  %379 = load i32, i32* %5, align 4, !dbg !1428
  %380 = load i32, i32* %6, align 4, !dbg !1428
  %381 = xor i32 %379, %380, !dbg !1428
  %382 = and i32 %378, %381, !dbg !1428
  %383 = load i32, i32* %6, align 4, !dbg !1428
  %384 = xor i32 %382, %383, !dbg !1428
  %385 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1428
  %386 = bitcast %union.CHAR64LONG16* %385 to [16 x i32]*, !dbg !1428
  %387 = getelementptr inbounds [16 x i32], [16 x i32]* %386, i64 0, i64 7, !dbg !1428
  %388 = load i32, i32* %387, align 4, !dbg !1428
  %389 = shl i32 %388, 24, !dbg !1428
  %390 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1428
  %391 = bitcast %union.CHAR64LONG16* %390 to [16 x i32]*, !dbg !1428
  %392 = getelementptr inbounds [16 x i32], [16 x i32]* %391, i64 0, i64 7, !dbg !1428
  %393 = load i32, i32* %392, align 4, !dbg !1428
  %394 = lshr i32 %393, 8, !dbg !1428
  %395 = or i32 %389, %394, !dbg !1428
  %396 = and i32 %395, -16711936, !dbg !1428
  %397 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1428
  %398 = bitcast %union.CHAR64LONG16* %397 to [16 x i32]*, !dbg !1428
  %399 = getelementptr inbounds [16 x i32], [16 x i32]* %398, i64 0, i64 7, !dbg !1428
  %400 = load i32, i32* %399, align 4, !dbg !1428
  %401 = shl i32 %400, 8, !dbg !1428
  %402 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1428
  %403 = bitcast %union.CHAR64LONG16* %402 to [16 x i32]*, !dbg !1428
  %404 = getelementptr inbounds [16 x i32], [16 x i32]* %403, i64 0, i64 7, !dbg !1428
  %405 = load i32, i32* %404, align 4, !dbg !1428
  %406 = lshr i32 %405, 24, !dbg !1428
  %407 = or i32 %401, %406, !dbg !1428
  %408 = and i32 %407, 16711935, !dbg !1428
  %409 = or i32 %396, %408, !dbg !1428
  %410 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1428
  %411 = bitcast %union.CHAR64LONG16* %410 to [16 x i32]*, !dbg !1428
  %412 = getelementptr inbounds [16 x i32], [16 x i32]* %411, i64 0, i64 7, !dbg !1428
  store i32 %409, i32* %412, align 4, !dbg !1428
  %413 = add i32 %384, %409, !dbg !1428
  %414 = add i32 %413, 1518500249, !dbg !1428
  %415 = load i32, i32* %8, align 4, !dbg !1428
  %416 = shl i32 %415, 5, !dbg !1428
  %417 = load i32, i32* %8, align 4, !dbg !1428
  %418 = lshr i32 %417, 27, !dbg !1428
  %419 = or i32 %416, %418, !dbg !1428
  %420 = add i32 %414, %419, !dbg !1428
  %421 = load i32, i32* %7, align 4, !dbg !1428
  %422 = add i32 %421, %420, !dbg !1428
  store i32 %422, i32* %7, align 4, !dbg !1428
  %423 = load i32, i32* %9, align 4, !dbg !1428
  %424 = shl i32 %423, 30, !dbg !1428
  %425 = load i32, i32* %9, align 4, !dbg !1428
  %426 = lshr i32 %425, 2, !dbg !1428
  %427 = or i32 %424, %426, !dbg !1428
  store i32 %427, i32* %9, align 4, !dbg !1428
  %428 = load i32, i32* %8, align 4, !dbg !1429
  %429 = load i32, i32* %9, align 4, !dbg !1429
  %430 = load i32, i32* %5, align 4, !dbg !1429
  %431 = xor i32 %429, %430, !dbg !1429
  %432 = and i32 %428, %431, !dbg !1429
  %433 = load i32, i32* %5, align 4, !dbg !1429
  %434 = xor i32 %432, %433, !dbg !1429
  %435 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1429
  %436 = bitcast %union.CHAR64LONG16* %435 to [16 x i32]*, !dbg !1429
  %437 = getelementptr inbounds [16 x i32], [16 x i32]* %436, i64 0, i64 8, !dbg !1429
  %438 = load i32, i32* %437, align 4, !dbg !1429
  %439 = shl i32 %438, 24, !dbg !1429
  %440 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1429
  %441 = bitcast %union.CHAR64LONG16* %440 to [16 x i32]*, !dbg !1429
  %442 = getelementptr inbounds [16 x i32], [16 x i32]* %441, i64 0, i64 8, !dbg !1429
  %443 = load i32, i32* %442, align 4, !dbg !1429
  %444 = lshr i32 %443, 8, !dbg !1429
  %445 = or i32 %439, %444, !dbg !1429
  %446 = and i32 %445, -16711936, !dbg !1429
  %447 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1429
  %448 = bitcast %union.CHAR64LONG16* %447 to [16 x i32]*, !dbg !1429
  %449 = getelementptr inbounds [16 x i32], [16 x i32]* %448, i64 0, i64 8, !dbg !1429
  %450 = load i32, i32* %449, align 4, !dbg !1429
  %451 = shl i32 %450, 8, !dbg !1429
  %452 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1429
  %453 = bitcast %union.CHAR64LONG16* %452 to [16 x i32]*, !dbg !1429
  %454 = getelementptr inbounds [16 x i32], [16 x i32]* %453, i64 0, i64 8, !dbg !1429
  %455 = load i32, i32* %454, align 4, !dbg !1429
  %456 = lshr i32 %455, 24, !dbg !1429
  %457 = or i32 %451, %456, !dbg !1429
  %458 = and i32 %457, 16711935, !dbg !1429
  %459 = or i32 %446, %458, !dbg !1429
  %460 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1429
  %461 = bitcast %union.CHAR64LONG16* %460 to [16 x i32]*, !dbg !1429
  %462 = getelementptr inbounds [16 x i32], [16 x i32]* %461, i64 0, i64 8, !dbg !1429
  store i32 %459, i32* %462, align 4, !dbg !1429
  %463 = add i32 %434, %459, !dbg !1429
  %464 = add i32 %463, 1518500249, !dbg !1429
  %465 = load i32, i32* %7, align 4, !dbg !1429
  %466 = shl i32 %465, 5, !dbg !1429
  %467 = load i32, i32* %7, align 4, !dbg !1429
  %468 = lshr i32 %467, 27, !dbg !1429
  %469 = or i32 %466, %468, !dbg !1429
  %470 = add i32 %464, %469, !dbg !1429
  %471 = load i32, i32* %6, align 4, !dbg !1429
  %472 = add i32 %471, %470, !dbg !1429
  store i32 %472, i32* %6, align 4, !dbg !1429
  %473 = load i32, i32* %8, align 4, !dbg !1429
  %474 = shl i32 %473, 30, !dbg !1429
  %475 = load i32, i32* %8, align 4, !dbg !1429
  %476 = lshr i32 %475, 2, !dbg !1429
  %477 = or i32 %474, %476, !dbg !1429
  store i32 %477, i32* %8, align 4, !dbg !1429
  %478 = load i32, i32* %7, align 4, !dbg !1430
  %479 = load i32, i32* %8, align 4, !dbg !1430
  %480 = load i32, i32* %9, align 4, !dbg !1430
  %481 = xor i32 %479, %480, !dbg !1430
  %482 = and i32 %478, %481, !dbg !1430
  %483 = load i32, i32* %9, align 4, !dbg !1430
  %484 = xor i32 %482, %483, !dbg !1430
  %485 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1430
  %486 = bitcast %union.CHAR64LONG16* %485 to [16 x i32]*, !dbg !1430
  %487 = getelementptr inbounds [16 x i32], [16 x i32]* %486, i64 0, i64 9, !dbg !1430
  %488 = load i32, i32* %487, align 4, !dbg !1430
  %489 = shl i32 %488, 24, !dbg !1430
  %490 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1430
  %491 = bitcast %union.CHAR64LONG16* %490 to [16 x i32]*, !dbg !1430
  %492 = getelementptr inbounds [16 x i32], [16 x i32]* %491, i64 0, i64 9, !dbg !1430
  %493 = load i32, i32* %492, align 4, !dbg !1430
  %494 = lshr i32 %493, 8, !dbg !1430
  %495 = or i32 %489, %494, !dbg !1430
  %496 = and i32 %495, -16711936, !dbg !1430
  %497 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1430
  %498 = bitcast %union.CHAR64LONG16* %497 to [16 x i32]*, !dbg !1430
  %499 = getelementptr inbounds [16 x i32], [16 x i32]* %498, i64 0, i64 9, !dbg !1430
  %500 = load i32, i32* %499, align 4, !dbg !1430
  %501 = shl i32 %500, 8, !dbg !1430
  %502 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1430
  %503 = bitcast %union.CHAR64LONG16* %502 to [16 x i32]*, !dbg !1430
  %504 = getelementptr inbounds [16 x i32], [16 x i32]* %503, i64 0, i64 9, !dbg !1430
  %505 = load i32, i32* %504, align 4, !dbg !1430
  %506 = lshr i32 %505, 24, !dbg !1430
  %507 = or i32 %501, %506, !dbg !1430
  %508 = and i32 %507, 16711935, !dbg !1430
  %509 = or i32 %496, %508, !dbg !1430
  %510 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1430
  %511 = bitcast %union.CHAR64LONG16* %510 to [16 x i32]*, !dbg !1430
  %512 = getelementptr inbounds [16 x i32], [16 x i32]* %511, i64 0, i64 9, !dbg !1430
  store i32 %509, i32* %512, align 4, !dbg !1430
  %513 = add i32 %484, %509, !dbg !1430
  %514 = add i32 %513, 1518500249, !dbg !1430
  %515 = load i32, i32* %6, align 4, !dbg !1430
  %516 = shl i32 %515, 5, !dbg !1430
  %517 = load i32, i32* %6, align 4, !dbg !1430
  %518 = lshr i32 %517, 27, !dbg !1430
  %519 = or i32 %516, %518, !dbg !1430
  %520 = add i32 %514, %519, !dbg !1430
  %521 = load i32, i32* %5, align 4, !dbg !1430
  %522 = add i32 %521, %520, !dbg !1430
  store i32 %522, i32* %5, align 4, !dbg !1430
  %523 = load i32, i32* %7, align 4, !dbg !1430
  %524 = shl i32 %523, 30, !dbg !1430
  %525 = load i32, i32* %7, align 4, !dbg !1430
  %526 = lshr i32 %525, 2, !dbg !1430
  %527 = or i32 %524, %526, !dbg !1430
  store i32 %527, i32* %7, align 4, !dbg !1430
  %528 = load i32, i32* %6, align 4, !dbg !1431
  %529 = load i32, i32* %7, align 4, !dbg !1431
  %530 = load i32, i32* %8, align 4, !dbg !1431
  %531 = xor i32 %529, %530, !dbg !1431
  %532 = and i32 %528, %531, !dbg !1431
  %533 = load i32, i32* %8, align 4, !dbg !1431
  %534 = xor i32 %532, %533, !dbg !1431
  %535 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1431
  %536 = bitcast %union.CHAR64LONG16* %535 to [16 x i32]*, !dbg !1431
  %537 = getelementptr inbounds [16 x i32], [16 x i32]* %536, i64 0, i64 10, !dbg !1431
  %538 = load i32, i32* %537, align 4, !dbg !1431
  %539 = shl i32 %538, 24, !dbg !1431
  %540 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1431
  %541 = bitcast %union.CHAR64LONG16* %540 to [16 x i32]*, !dbg !1431
  %542 = getelementptr inbounds [16 x i32], [16 x i32]* %541, i64 0, i64 10, !dbg !1431
  %543 = load i32, i32* %542, align 4, !dbg !1431
  %544 = lshr i32 %543, 8, !dbg !1431
  %545 = or i32 %539, %544, !dbg !1431
  %546 = and i32 %545, -16711936, !dbg !1431
  %547 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1431
  %548 = bitcast %union.CHAR64LONG16* %547 to [16 x i32]*, !dbg !1431
  %549 = getelementptr inbounds [16 x i32], [16 x i32]* %548, i64 0, i64 10, !dbg !1431
  %550 = load i32, i32* %549, align 4, !dbg !1431
  %551 = shl i32 %550, 8, !dbg !1431
  %552 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1431
  %553 = bitcast %union.CHAR64LONG16* %552 to [16 x i32]*, !dbg !1431
  %554 = getelementptr inbounds [16 x i32], [16 x i32]* %553, i64 0, i64 10, !dbg !1431
  %555 = load i32, i32* %554, align 4, !dbg !1431
  %556 = lshr i32 %555, 24, !dbg !1431
  %557 = or i32 %551, %556, !dbg !1431
  %558 = and i32 %557, 16711935, !dbg !1431
  %559 = or i32 %546, %558, !dbg !1431
  %560 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1431
  %561 = bitcast %union.CHAR64LONG16* %560 to [16 x i32]*, !dbg !1431
  %562 = getelementptr inbounds [16 x i32], [16 x i32]* %561, i64 0, i64 10, !dbg !1431
  store i32 %559, i32* %562, align 4, !dbg !1431
  %563 = add i32 %534, %559, !dbg !1431
  %564 = add i32 %563, 1518500249, !dbg !1431
  %565 = load i32, i32* %5, align 4, !dbg !1431
  %566 = shl i32 %565, 5, !dbg !1431
  %567 = load i32, i32* %5, align 4, !dbg !1431
  %568 = lshr i32 %567, 27, !dbg !1431
  %569 = or i32 %566, %568, !dbg !1431
  %570 = add i32 %564, %569, !dbg !1431
  %571 = load i32, i32* %9, align 4, !dbg !1431
  %572 = add i32 %571, %570, !dbg !1431
  store i32 %572, i32* %9, align 4, !dbg !1431
  %573 = load i32, i32* %6, align 4, !dbg !1431
  %574 = shl i32 %573, 30, !dbg !1431
  %575 = load i32, i32* %6, align 4, !dbg !1431
  %576 = lshr i32 %575, 2, !dbg !1431
  %577 = or i32 %574, %576, !dbg !1431
  store i32 %577, i32* %6, align 4, !dbg !1431
  %578 = load i32, i32* %5, align 4, !dbg !1432
  %579 = load i32, i32* %6, align 4, !dbg !1432
  %580 = load i32, i32* %7, align 4, !dbg !1432
  %581 = xor i32 %579, %580, !dbg !1432
  %582 = and i32 %578, %581, !dbg !1432
  %583 = load i32, i32* %7, align 4, !dbg !1432
  %584 = xor i32 %582, %583, !dbg !1432
  %585 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1432
  %586 = bitcast %union.CHAR64LONG16* %585 to [16 x i32]*, !dbg !1432
  %587 = getelementptr inbounds [16 x i32], [16 x i32]* %586, i64 0, i64 11, !dbg !1432
  %588 = load i32, i32* %587, align 4, !dbg !1432
  %589 = shl i32 %588, 24, !dbg !1432
  %590 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1432
  %591 = bitcast %union.CHAR64LONG16* %590 to [16 x i32]*, !dbg !1432
  %592 = getelementptr inbounds [16 x i32], [16 x i32]* %591, i64 0, i64 11, !dbg !1432
  %593 = load i32, i32* %592, align 4, !dbg !1432
  %594 = lshr i32 %593, 8, !dbg !1432
  %595 = or i32 %589, %594, !dbg !1432
  %596 = and i32 %595, -16711936, !dbg !1432
  %597 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1432
  %598 = bitcast %union.CHAR64LONG16* %597 to [16 x i32]*, !dbg !1432
  %599 = getelementptr inbounds [16 x i32], [16 x i32]* %598, i64 0, i64 11, !dbg !1432
  %600 = load i32, i32* %599, align 4, !dbg !1432
  %601 = shl i32 %600, 8, !dbg !1432
  %602 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1432
  %603 = bitcast %union.CHAR64LONG16* %602 to [16 x i32]*, !dbg !1432
  %604 = getelementptr inbounds [16 x i32], [16 x i32]* %603, i64 0, i64 11, !dbg !1432
  %605 = load i32, i32* %604, align 4, !dbg !1432
  %606 = lshr i32 %605, 24, !dbg !1432
  %607 = or i32 %601, %606, !dbg !1432
  %608 = and i32 %607, 16711935, !dbg !1432
  %609 = or i32 %596, %608, !dbg !1432
  %610 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1432
  %611 = bitcast %union.CHAR64LONG16* %610 to [16 x i32]*, !dbg !1432
  %612 = getelementptr inbounds [16 x i32], [16 x i32]* %611, i64 0, i64 11, !dbg !1432
  store i32 %609, i32* %612, align 4, !dbg !1432
  %613 = add i32 %584, %609, !dbg !1432
  %614 = add i32 %613, 1518500249, !dbg !1432
  %615 = load i32, i32* %9, align 4, !dbg !1432
  %616 = shl i32 %615, 5, !dbg !1432
  %617 = load i32, i32* %9, align 4, !dbg !1432
  %618 = lshr i32 %617, 27, !dbg !1432
  %619 = or i32 %616, %618, !dbg !1432
  %620 = add i32 %614, %619, !dbg !1432
  %621 = load i32, i32* %8, align 4, !dbg !1432
  %622 = add i32 %621, %620, !dbg !1432
  store i32 %622, i32* %8, align 4, !dbg !1432
  %623 = load i32, i32* %5, align 4, !dbg !1432
  %624 = shl i32 %623, 30, !dbg !1432
  %625 = load i32, i32* %5, align 4, !dbg !1432
  %626 = lshr i32 %625, 2, !dbg !1432
  %627 = or i32 %624, %626, !dbg !1432
  store i32 %627, i32* %5, align 4, !dbg !1432
  %628 = load i32, i32* %9, align 4, !dbg !1433
  %629 = load i32, i32* %5, align 4, !dbg !1433
  %630 = load i32, i32* %6, align 4, !dbg !1433
  %631 = xor i32 %629, %630, !dbg !1433
  %632 = and i32 %628, %631, !dbg !1433
  %633 = load i32, i32* %6, align 4, !dbg !1433
  %634 = xor i32 %632, %633, !dbg !1433
  %635 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1433
  %636 = bitcast %union.CHAR64LONG16* %635 to [16 x i32]*, !dbg !1433
  %637 = getelementptr inbounds [16 x i32], [16 x i32]* %636, i64 0, i64 12, !dbg !1433
  %638 = load i32, i32* %637, align 4, !dbg !1433
  %639 = shl i32 %638, 24, !dbg !1433
  %640 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1433
  %641 = bitcast %union.CHAR64LONG16* %640 to [16 x i32]*, !dbg !1433
  %642 = getelementptr inbounds [16 x i32], [16 x i32]* %641, i64 0, i64 12, !dbg !1433
  %643 = load i32, i32* %642, align 4, !dbg !1433
  %644 = lshr i32 %643, 8, !dbg !1433
  %645 = or i32 %639, %644, !dbg !1433
  %646 = and i32 %645, -16711936, !dbg !1433
  %647 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1433
  %648 = bitcast %union.CHAR64LONG16* %647 to [16 x i32]*, !dbg !1433
  %649 = getelementptr inbounds [16 x i32], [16 x i32]* %648, i64 0, i64 12, !dbg !1433
  %650 = load i32, i32* %649, align 4, !dbg !1433
  %651 = shl i32 %650, 8, !dbg !1433
  %652 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1433
  %653 = bitcast %union.CHAR64LONG16* %652 to [16 x i32]*, !dbg !1433
  %654 = getelementptr inbounds [16 x i32], [16 x i32]* %653, i64 0, i64 12, !dbg !1433
  %655 = load i32, i32* %654, align 4, !dbg !1433
  %656 = lshr i32 %655, 24, !dbg !1433
  %657 = or i32 %651, %656, !dbg !1433
  %658 = and i32 %657, 16711935, !dbg !1433
  %659 = or i32 %646, %658, !dbg !1433
  %660 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1433
  %661 = bitcast %union.CHAR64LONG16* %660 to [16 x i32]*, !dbg !1433
  %662 = getelementptr inbounds [16 x i32], [16 x i32]* %661, i64 0, i64 12, !dbg !1433
  store i32 %659, i32* %662, align 4, !dbg !1433
  %663 = add i32 %634, %659, !dbg !1433
  %664 = add i32 %663, 1518500249, !dbg !1433
  %665 = load i32, i32* %8, align 4, !dbg !1433
  %666 = shl i32 %665, 5, !dbg !1433
  %667 = load i32, i32* %8, align 4, !dbg !1433
  %668 = lshr i32 %667, 27, !dbg !1433
  %669 = or i32 %666, %668, !dbg !1433
  %670 = add i32 %664, %669, !dbg !1433
  %671 = load i32, i32* %7, align 4, !dbg !1433
  %672 = add i32 %671, %670, !dbg !1433
  store i32 %672, i32* %7, align 4, !dbg !1433
  %673 = load i32, i32* %9, align 4, !dbg !1433
  %674 = shl i32 %673, 30, !dbg !1433
  %675 = load i32, i32* %9, align 4, !dbg !1433
  %676 = lshr i32 %675, 2, !dbg !1433
  %677 = or i32 %674, %676, !dbg !1433
  store i32 %677, i32* %9, align 4, !dbg !1433
  %678 = load i32, i32* %8, align 4, !dbg !1434
  %679 = load i32, i32* %9, align 4, !dbg !1434
  %680 = load i32, i32* %5, align 4, !dbg !1434
  %681 = xor i32 %679, %680, !dbg !1434
  %682 = and i32 %678, %681, !dbg !1434
  %683 = load i32, i32* %5, align 4, !dbg !1434
  %684 = xor i32 %682, %683, !dbg !1434
  %685 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1434
  %686 = bitcast %union.CHAR64LONG16* %685 to [16 x i32]*, !dbg !1434
  %687 = getelementptr inbounds [16 x i32], [16 x i32]* %686, i64 0, i64 13, !dbg !1434
  %688 = load i32, i32* %687, align 4, !dbg !1434
  %689 = shl i32 %688, 24, !dbg !1434
  %690 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1434
  %691 = bitcast %union.CHAR64LONG16* %690 to [16 x i32]*, !dbg !1434
  %692 = getelementptr inbounds [16 x i32], [16 x i32]* %691, i64 0, i64 13, !dbg !1434
  %693 = load i32, i32* %692, align 4, !dbg !1434
  %694 = lshr i32 %693, 8, !dbg !1434
  %695 = or i32 %689, %694, !dbg !1434
  %696 = and i32 %695, -16711936, !dbg !1434
  %697 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1434
  %698 = bitcast %union.CHAR64LONG16* %697 to [16 x i32]*, !dbg !1434
  %699 = getelementptr inbounds [16 x i32], [16 x i32]* %698, i64 0, i64 13, !dbg !1434
  %700 = load i32, i32* %699, align 4, !dbg !1434
  %701 = shl i32 %700, 8, !dbg !1434
  %702 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1434
  %703 = bitcast %union.CHAR64LONG16* %702 to [16 x i32]*, !dbg !1434
  %704 = getelementptr inbounds [16 x i32], [16 x i32]* %703, i64 0, i64 13, !dbg !1434
  %705 = load i32, i32* %704, align 4, !dbg !1434
  %706 = lshr i32 %705, 24, !dbg !1434
  %707 = or i32 %701, %706, !dbg !1434
  %708 = and i32 %707, 16711935, !dbg !1434
  %709 = or i32 %696, %708, !dbg !1434
  %710 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1434
  %711 = bitcast %union.CHAR64LONG16* %710 to [16 x i32]*, !dbg !1434
  %712 = getelementptr inbounds [16 x i32], [16 x i32]* %711, i64 0, i64 13, !dbg !1434
  store i32 %709, i32* %712, align 4, !dbg !1434
  %713 = add i32 %684, %709, !dbg !1434
  %714 = add i32 %713, 1518500249, !dbg !1434
  %715 = load i32, i32* %7, align 4, !dbg !1434
  %716 = shl i32 %715, 5, !dbg !1434
  %717 = load i32, i32* %7, align 4, !dbg !1434
  %718 = lshr i32 %717, 27, !dbg !1434
  %719 = or i32 %716, %718, !dbg !1434
  %720 = add i32 %714, %719, !dbg !1434
  %721 = load i32, i32* %6, align 4, !dbg !1434
  %722 = add i32 %721, %720, !dbg !1434
  store i32 %722, i32* %6, align 4, !dbg !1434
  %723 = load i32, i32* %8, align 4, !dbg !1434
  %724 = shl i32 %723, 30, !dbg !1434
  %725 = load i32, i32* %8, align 4, !dbg !1434
  %726 = lshr i32 %725, 2, !dbg !1434
  %727 = or i32 %724, %726, !dbg !1434
  store i32 %727, i32* %8, align 4, !dbg !1434
  %728 = load i32, i32* %7, align 4, !dbg !1435
  %729 = load i32, i32* %8, align 4, !dbg !1435
  %730 = load i32, i32* %9, align 4, !dbg !1435
  %731 = xor i32 %729, %730, !dbg !1435
  %732 = and i32 %728, %731, !dbg !1435
  %733 = load i32, i32* %9, align 4, !dbg !1435
  %734 = xor i32 %732, %733, !dbg !1435
  %735 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1435
  %736 = bitcast %union.CHAR64LONG16* %735 to [16 x i32]*, !dbg !1435
  %737 = getelementptr inbounds [16 x i32], [16 x i32]* %736, i64 0, i64 14, !dbg !1435
  %738 = load i32, i32* %737, align 4, !dbg !1435
  %739 = shl i32 %738, 24, !dbg !1435
  %740 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1435
  %741 = bitcast %union.CHAR64LONG16* %740 to [16 x i32]*, !dbg !1435
  %742 = getelementptr inbounds [16 x i32], [16 x i32]* %741, i64 0, i64 14, !dbg !1435
  %743 = load i32, i32* %742, align 4, !dbg !1435
  %744 = lshr i32 %743, 8, !dbg !1435
  %745 = or i32 %739, %744, !dbg !1435
  %746 = and i32 %745, -16711936, !dbg !1435
  %747 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1435
  %748 = bitcast %union.CHAR64LONG16* %747 to [16 x i32]*, !dbg !1435
  %749 = getelementptr inbounds [16 x i32], [16 x i32]* %748, i64 0, i64 14, !dbg !1435
  %750 = load i32, i32* %749, align 4, !dbg !1435
  %751 = shl i32 %750, 8, !dbg !1435
  %752 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1435
  %753 = bitcast %union.CHAR64LONG16* %752 to [16 x i32]*, !dbg !1435
  %754 = getelementptr inbounds [16 x i32], [16 x i32]* %753, i64 0, i64 14, !dbg !1435
  %755 = load i32, i32* %754, align 4, !dbg !1435
  %756 = lshr i32 %755, 24, !dbg !1435
  %757 = or i32 %751, %756, !dbg !1435
  %758 = and i32 %757, 16711935, !dbg !1435
  %759 = or i32 %746, %758, !dbg !1435
  %760 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1435
  %761 = bitcast %union.CHAR64LONG16* %760 to [16 x i32]*, !dbg !1435
  %762 = getelementptr inbounds [16 x i32], [16 x i32]* %761, i64 0, i64 14, !dbg !1435
  store i32 %759, i32* %762, align 4, !dbg !1435
  %763 = add i32 %734, %759, !dbg !1435
  %764 = add i32 %763, 1518500249, !dbg !1435
  %765 = load i32, i32* %6, align 4, !dbg !1435
  %766 = shl i32 %765, 5, !dbg !1435
  %767 = load i32, i32* %6, align 4, !dbg !1435
  %768 = lshr i32 %767, 27, !dbg !1435
  %769 = or i32 %766, %768, !dbg !1435
  %770 = add i32 %764, %769, !dbg !1435
  %771 = load i32, i32* %5, align 4, !dbg !1435
  %772 = add i32 %771, %770, !dbg !1435
  store i32 %772, i32* %5, align 4, !dbg !1435
  %773 = load i32, i32* %7, align 4, !dbg !1435
  %774 = shl i32 %773, 30, !dbg !1435
  %775 = load i32, i32* %7, align 4, !dbg !1435
  %776 = lshr i32 %775, 2, !dbg !1435
  %777 = or i32 %774, %776, !dbg !1435
  store i32 %777, i32* %7, align 4, !dbg !1435
  %778 = load i32, i32* %6, align 4, !dbg !1436
  %779 = load i32, i32* %7, align 4, !dbg !1436
  %780 = load i32, i32* %8, align 4, !dbg !1436
  %781 = xor i32 %779, %780, !dbg !1436
  %782 = and i32 %778, %781, !dbg !1436
  %783 = load i32, i32* %8, align 4, !dbg !1436
  %784 = xor i32 %782, %783, !dbg !1436
  %785 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1436
  %786 = bitcast %union.CHAR64LONG16* %785 to [16 x i32]*, !dbg !1436
  %787 = getelementptr inbounds [16 x i32], [16 x i32]* %786, i64 0, i64 15, !dbg !1436
  %788 = load i32, i32* %787, align 4, !dbg !1436
  %789 = shl i32 %788, 24, !dbg !1436
  %790 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1436
  %791 = bitcast %union.CHAR64LONG16* %790 to [16 x i32]*, !dbg !1436
  %792 = getelementptr inbounds [16 x i32], [16 x i32]* %791, i64 0, i64 15, !dbg !1436
  %793 = load i32, i32* %792, align 4, !dbg !1436
  %794 = lshr i32 %793, 8, !dbg !1436
  %795 = or i32 %789, %794, !dbg !1436
  %796 = and i32 %795, -16711936, !dbg !1436
  %797 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1436
  %798 = bitcast %union.CHAR64LONG16* %797 to [16 x i32]*, !dbg !1436
  %799 = getelementptr inbounds [16 x i32], [16 x i32]* %798, i64 0, i64 15, !dbg !1436
  %800 = load i32, i32* %799, align 4, !dbg !1436
  %801 = shl i32 %800, 8, !dbg !1436
  %802 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1436
  %803 = bitcast %union.CHAR64LONG16* %802 to [16 x i32]*, !dbg !1436
  %804 = getelementptr inbounds [16 x i32], [16 x i32]* %803, i64 0, i64 15, !dbg !1436
  %805 = load i32, i32* %804, align 4, !dbg !1436
  %806 = lshr i32 %805, 24, !dbg !1436
  %807 = or i32 %801, %806, !dbg !1436
  %808 = and i32 %807, 16711935, !dbg !1436
  %809 = or i32 %796, %808, !dbg !1436
  %810 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1436
  %811 = bitcast %union.CHAR64LONG16* %810 to [16 x i32]*, !dbg !1436
  %812 = getelementptr inbounds [16 x i32], [16 x i32]* %811, i64 0, i64 15, !dbg !1436
  store i32 %809, i32* %812, align 4, !dbg !1436
  %813 = add i32 %784, %809, !dbg !1436
  %814 = add i32 %813, 1518500249, !dbg !1436
  %815 = load i32, i32* %5, align 4, !dbg !1436
  %816 = shl i32 %815, 5, !dbg !1436
  %817 = load i32, i32* %5, align 4, !dbg !1436
  %818 = lshr i32 %817, 27, !dbg !1436
  %819 = or i32 %816, %818, !dbg !1436
  %820 = add i32 %814, %819, !dbg !1436
  %821 = load i32, i32* %9, align 4, !dbg !1436
  %822 = add i32 %821, %820, !dbg !1436
  store i32 %822, i32* %9, align 4, !dbg !1436
  %823 = load i32, i32* %6, align 4, !dbg !1436
  %824 = shl i32 %823, 30, !dbg !1436
  %825 = load i32, i32* %6, align 4, !dbg !1436
  %826 = lshr i32 %825, 2, !dbg !1436
  %827 = or i32 %824, %826, !dbg !1436
  store i32 %827, i32* %6, align 4, !dbg !1436
  %828 = load i32, i32* %5, align 4, !dbg !1437
  %829 = load i32, i32* %6, align 4, !dbg !1437
  %830 = load i32, i32* %7, align 4, !dbg !1437
  %831 = xor i32 %829, %830, !dbg !1437
  %832 = and i32 %828, %831, !dbg !1437
  %833 = load i32, i32* %7, align 4, !dbg !1437
  %834 = xor i32 %832, %833, !dbg !1437
  %835 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %836 = bitcast %union.CHAR64LONG16* %835 to [16 x i32]*, !dbg !1437
  %837 = getelementptr inbounds [16 x i32], [16 x i32]* %836, i64 0, i64 13, !dbg !1437
  %838 = load i32, i32* %837, align 4, !dbg !1437
  %839 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %840 = bitcast %union.CHAR64LONG16* %839 to [16 x i32]*, !dbg !1437
  %841 = getelementptr inbounds [16 x i32], [16 x i32]* %840, i64 0, i64 8, !dbg !1437
  %842 = load i32, i32* %841, align 4, !dbg !1437
  %843 = xor i32 %838, %842, !dbg !1437
  %844 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %845 = bitcast %union.CHAR64LONG16* %844 to [16 x i32]*, !dbg !1437
  %846 = getelementptr inbounds [16 x i32], [16 x i32]* %845, i64 0, i64 2, !dbg !1437
  %847 = load i32, i32* %846, align 4, !dbg !1437
  %848 = xor i32 %843, %847, !dbg !1437
  %849 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %850 = bitcast %union.CHAR64LONG16* %849 to [16 x i32]*, !dbg !1437
  %851 = getelementptr inbounds [16 x i32], [16 x i32]* %850, i64 0, i64 0, !dbg !1437
  %852 = load i32, i32* %851, align 4, !dbg !1437
  %853 = xor i32 %848, %852, !dbg !1437
  %854 = shl i32 %853, 1, !dbg !1437
  %855 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %856 = bitcast %union.CHAR64LONG16* %855 to [16 x i32]*, !dbg !1437
  %857 = getelementptr inbounds [16 x i32], [16 x i32]* %856, i64 0, i64 13, !dbg !1437
  %858 = load i32, i32* %857, align 4, !dbg !1437
  %859 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %860 = bitcast %union.CHAR64LONG16* %859 to [16 x i32]*, !dbg !1437
  %861 = getelementptr inbounds [16 x i32], [16 x i32]* %860, i64 0, i64 8, !dbg !1437
  %862 = load i32, i32* %861, align 4, !dbg !1437
  %863 = xor i32 %858, %862, !dbg !1437
  %864 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %865 = bitcast %union.CHAR64LONG16* %864 to [16 x i32]*, !dbg !1437
  %866 = getelementptr inbounds [16 x i32], [16 x i32]* %865, i64 0, i64 2, !dbg !1437
  %867 = load i32, i32* %866, align 4, !dbg !1437
  %868 = xor i32 %863, %867, !dbg !1437
  %869 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %870 = bitcast %union.CHAR64LONG16* %869 to [16 x i32]*, !dbg !1437
  %871 = getelementptr inbounds [16 x i32], [16 x i32]* %870, i64 0, i64 0, !dbg !1437
  %872 = load i32, i32* %871, align 4, !dbg !1437
  %873 = xor i32 %868, %872, !dbg !1437
  %874 = lshr i32 %873, 31, !dbg !1437
  %875 = or i32 %854, %874, !dbg !1437
  %876 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1437
  %877 = bitcast %union.CHAR64LONG16* %876 to [16 x i32]*, !dbg !1437
  %878 = getelementptr inbounds [16 x i32], [16 x i32]* %877, i64 0, i64 0, !dbg !1437
  store i32 %875, i32* %878, align 4, !dbg !1437
  %879 = add i32 %834, %875, !dbg !1437
  %880 = add i32 %879, 1518500249, !dbg !1437
  %881 = load i32, i32* %9, align 4, !dbg !1437
  %882 = shl i32 %881, 5, !dbg !1437
  %883 = load i32, i32* %9, align 4, !dbg !1437
  %884 = lshr i32 %883, 27, !dbg !1437
  %885 = or i32 %882, %884, !dbg !1437
  %886 = add i32 %880, %885, !dbg !1437
  %887 = load i32, i32* %8, align 4, !dbg !1437
  %888 = add i32 %887, %886, !dbg !1437
  store i32 %888, i32* %8, align 4, !dbg !1437
  %889 = load i32, i32* %5, align 4, !dbg !1437
  %890 = shl i32 %889, 30, !dbg !1437
  %891 = load i32, i32* %5, align 4, !dbg !1437
  %892 = lshr i32 %891, 2, !dbg !1437
  %893 = or i32 %890, %892, !dbg !1437
  store i32 %893, i32* %5, align 4, !dbg !1437
  %894 = load i32, i32* %9, align 4, !dbg !1438
  %895 = load i32, i32* %5, align 4, !dbg !1438
  %896 = load i32, i32* %6, align 4, !dbg !1438
  %897 = xor i32 %895, %896, !dbg !1438
  %898 = and i32 %894, %897, !dbg !1438
  %899 = load i32, i32* %6, align 4, !dbg !1438
  %900 = xor i32 %898, %899, !dbg !1438
  %901 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %902 = bitcast %union.CHAR64LONG16* %901 to [16 x i32]*, !dbg !1438
  %903 = getelementptr inbounds [16 x i32], [16 x i32]* %902, i64 0, i64 14, !dbg !1438
  %904 = load i32, i32* %903, align 4, !dbg !1438
  %905 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %906 = bitcast %union.CHAR64LONG16* %905 to [16 x i32]*, !dbg !1438
  %907 = getelementptr inbounds [16 x i32], [16 x i32]* %906, i64 0, i64 9, !dbg !1438
  %908 = load i32, i32* %907, align 4, !dbg !1438
  %909 = xor i32 %904, %908, !dbg !1438
  %910 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %911 = bitcast %union.CHAR64LONG16* %910 to [16 x i32]*, !dbg !1438
  %912 = getelementptr inbounds [16 x i32], [16 x i32]* %911, i64 0, i64 3, !dbg !1438
  %913 = load i32, i32* %912, align 4, !dbg !1438
  %914 = xor i32 %909, %913, !dbg !1438
  %915 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %916 = bitcast %union.CHAR64LONG16* %915 to [16 x i32]*, !dbg !1438
  %917 = getelementptr inbounds [16 x i32], [16 x i32]* %916, i64 0, i64 1, !dbg !1438
  %918 = load i32, i32* %917, align 4, !dbg !1438
  %919 = xor i32 %914, %918, !dbg !1438
  %920 = shl i32 %919, 1, !dbg !1438
  %921 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %922 = bitcast %union.CHAR64LONG16* %921 to [16 x i32]*, !dbg !1438
  %923 = getelementptr inbounds [16 x i32], [16 x i32]* %922, i64 0, i64 14, !dbg !1438
  %924 = load i32, i32* %923, align 4, !dbg !1438
  %925 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %926 = bitcast %union.CHAR64LONG16* %925 to [16 x i32]*, !dbg !1438
  %927 = getelementptr inbounds [16 x i32], [16 x i32]* %926, i64 0, i64 9, !dbg !1438
  %928 = load i32, i32* %927, align 4, !dbg !1438
  %929 = xor i32 %924, %928, !dbg !1438
  %930 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %931 = bitcast %union.CHAR64LONG16* %930 to [16 x i32]*, !dbg !1438
  %932 = getelementptr inbounds [16 x i32], [16 x i32]* %931, i64 0, i64 3, !dbg !1438
  %933 = load i32, i32* %932, align 4, !dbg !1438
  %934 = xor i32 %929, %933, !dbg !1438
  %935 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %936 = bitcast %union.CHAR64LONG16* %935 to [16 x i32]*, !dbg !1438
  %937 = getelementptr inbounds [16 x i32], [16 x i32]* %936, i64 0, i64 1, !dbg !1438
  %938 = load i32, i32* %937, align 4, !dbg !1438
  %939 = xor i32 %934, %938, !dbg !1438
  %940 = lshr i32 %939, 31, !dbg !1438
  %941 = or i32 %920, %940, !dbg !1438
  %942 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1438
  %943 = bitcast %union.CHAR64LONG16* %942 to [16 x i32]*, !dbg !1438
  %944 = getelementptr inbounds [16 x i32], [16 x i32]* %943, i64 0, i64 1, !dbg !1438
  store i32 %941, i32* %944, align 4, !dbg !1438
  %945 = add i32 %900, %941, !dbg !1438
  %946 = add i32 %945, 1518500249, !dbg !1438
  %947 = load i32, i32* %8, align 4, !dbg !1438
  %948 = shl i32 %947, 5, !dbg !1438
  %949 = load i32, i32* %8, align 4, !dbg !1438
  %950 = lshr i32 %949, 27, !dbg !1438
  %951 = or i32 %948, %950, !dbg !1438
  %952 = add i32 %946, %951, !dbg !1438
  %953 = load i32, i32* %7, align 4, !dbg !1438
  %954 = add i32 %953, %952, !dbg !1438
  store i32 %954, i32* %7, align 4, !dbg !1438
  %955 = load i32, i32* %9, align 4, !dbg !1438
  %956 = shl i32 %955, 30, !dbg !1438
  %957 = load i32, i32* %9, align 4, !dbg !1438
  %958 = lshr i32 %957, 2, !dbg !1438
  %959 = or i32 %956, %958, !dbg !1438
  store i32 %959, i32* %9, align 4, !dbg !1438
  %960 = load i32, i32* %8, align 4, !dbg !1439
  %961 = load i32, i32* %9, align 4, !dbg !1439
  %962 = load i32, i32* %5, align 4, !dbg !1439
  %963 = xor i32 %961, %962, !dbg !1439
  %964 = and i32 %960, %963, !dbg !1439
  %965 = load i32, i32* %5, align 4, !dbg !1439
  %966 = xor i32 %964, %965, !dbg !1439
  %967 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %968 = bitcast %union.CHAR64LONG16* %967 to [16 x i32]*, !dbg !1439
  %969 = getelementptr inbounds [16 x i32], [16 x i32]* %968, i64 0, i64 15, !dbg !1439
  %970 = load i32, i32* %969, align 4, !dbg !1439
  %971 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %972 = bitcast %union.CHAR64LONG16* %971 to [16 x i32]*, !dbg !1439
  %973 = getelementptr inbounds [16 x i32], [16 x i32]* %972, i64 0, i64 10, !dbg !1439
  %974 = load i32, i32* %973, align 4, !dbg !1439
  %975 = xor i32 %970, %974, !dbg !1439
  %976 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %977 = bitcast %union.CHAR64LONG16* %976 to [16 x i32]*, !dbg !1439
  %978 = getelementptr inbounds [16 x i32], [16 x i32]* %977, i64 0, i64 4, !dbg !1439
  %979 = load i32, i32* %978, align 4, !dbg !1439
  %980 = xor i32 %975, %979, !dbg !1439
  %981 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %982 = bitcast %union.CHAR64LONG16* %981 to [16 x i32]*, !dbg !1439
  %983 = getelementptr inbounds [16 x i32], [16 x i32]* %982, i64 0, i64 2, !dbg !1439
  %984 = load i32, i32* %983, align 4, !dbg !1439
  %985 = xor i32 %980, %984, !dbg !1439
  %986 = shl i32 %985, 1, !dbg !1439
  %987 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %988 = bitcast %union.CHAR64LONG16* %987 to [16 x i32]*, !dbg !1439
  %989 = getelementptr inbounds [16 x i32], [16 x i32]* %988, i64 0, i64 15, !dbg !1439
  %990 = load i32, i32* %989, align 4, !dbg !1439
  %991 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %992 = bitcast %union.CHAR64LONG16* %991 to [16 x i32]*, !dbg !1439
  %993 = getelementptr inbounds [16 x i32], [16 x i32]* %992, i64 0, i64 10, !dbg !1439
  %994 = load i32, i32* %993, align 4, !dbg !1439
  %995 = xor i32 %990, %994, !dbg !1439
  %996 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %997 = bitcast %union.CHAR64LONG16* %996 to [16 x i32]*, !dbg !1439
  %998 = getelementptr inbounds [16 x i32], [16 x i32]* %997, i64 0, i64 4, !dbg !1439
  %999 = load i32, i32* %998, align 4, !dbg !1439
  %1000 = xor i32 %995, %999, !dbg !1439
  %1001 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %1002 = bitcast %union.CHAR64LONG16* %1001 to [16 x i32]*, !dbg !1439
  %1003 = getelementptr inbounds [16 x i32], [16 x i32]* %1002, i64 0, i64 2, !dbg !1439
  %1004 = load i32, i32* %1003, align 4, !dbg !1439
  %1005 = xor i32 %1000, %1004, !dbg !1439
  %1006 = lshr i32 %1005, 31, !dbg !1439
  %1007 = or i32 %986, %1006, !dbg !1439
  %1008 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1439
  %1009 = bitcast %union.CHAR64LONG16* %1008 to [16 x i32]*, !dbg !1439
  %1010 = getelementptr inbounds [16 x i32], [16 x i32]* %1009, i64 0, i64 2, !dbg !1439
  store i32 %1007, i32* %1010, align 4, !dbg !1439
  %1011 = add i32 %966, %1007, !dbg !1439
  %1012 = add i32 %1011, 1518500249, !dbg !1439
  %1013 = load i32, i32* %7, align 4, !dbg !1439
  %1014 = shl i32 %1013, 5, !dbg !1439
  %1015 = load i32, i32* %7, align 4, !dbg !1439
  %1016 = lshr i32 %1015, 27, !dbg !1439
  %1017 = or i32 %1014, %1016, !dbg !1439
  %1018 = add i32 %1012, %1017, !dbg !1439
  %1019 = load i32, i32* %6, align 4, !dbg !1439
  %1020 = add i32 %1019, %1018, !dbg !1439
  store i32 %1020, i32* %6, align 4, !dbg !1439
  %1021 = load i32, i32* %8, align 4, !dbg !1439
  %1022 = shl i32 %1021, 30, !dbg !1439
  %1023 = load i32, i32* %8, align 4, !dbg !1439
  %1024 = lshr i32 %1023, 2, !dbg !1439
  %1025 = or i32 %1022, %1024, !dbg !1439
  store i32 %1025, i32* %8, align 4, !dbg !1439
  %1026 = load i32, i32* %7, align 4, !dbg !1440
  %1027 = load i32, i32* %8, align 4, !dbg !1440
  %1028 = load i32, i32* %9, align 4, !dbg !1440
  %1029 = xor i32 %1027, %1028, !dbg !1440
  %1030 = and i32 %1026, %1029, !dbg !1440
  %1031 = load i32, i32* %9, align 4, !dbg !1440
  %1032 = xor i32 %1030, %1031, !dbg !1440
  %1033 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1034 = bitcast %union.CHAR64LONG16* %1033 to [16 x i32]*, !dbg !1440
  %1035 = getelementptr inbounds [16 x i32], [16 x i32]* %1034, i64 0, i64 0, !dbg !1440
  %1036 = load i32, i32* %1035, align 4, !dbg !1440
  %1037 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1038 = bitcast %union.CHAR64LONG16* %1037 to [16 x i32]*, !dbg !1440
  %1039 = getelementptr inbounds [16 x i32], [16 x i32]* %1038, i64 0, i64 11, !dbg !1440
  %1040 = load i32, i32* %1039, align 4, !dbg !1440
  %1041 = xor i32 %1036, %1040, !dbg !1440
  %1042 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1043 = bitcast %union.CHAR64LONG16* %1042 to [16 x i32]*, !dbg !1440
  %1044 = getelementptr inbounds [16 x i32], [16 x i32]* %1043, i64 0, i64 5, !dbg !1440
  %1045 = load i32, i32* %1044, align 4, !dbg !1440
  %1046 = xor i32 %1041, %1045, !dbg !1440
  %1047 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1048 = bitcast %union.CHAR64LONG16* %1047 to [16 x i32]*, !dbg !1440
  %1049 = getelementptr inbounds [16 x i32], [16 x i32]* %1048, i64 0, i64 3, !dbg !1440
  %1050 = load i32, i32* %1049, align 4, !dbg !1440
  %1051 = xor i32 %1046, %1050, !dbg !1440
  %1052 = shl i32 %1051, 1, !dbg !1440
  %1053 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1054 = bitcast %union.CHAR64LONG16* %1053 to [16 x i32]*, !dbg !1440
  %1055 = getelementptr inbounds [16 x i32], [16 x i32]* %1054, i64 0, i64 0, !dbg !1440
  %1056 = load i32, i32* %1055, align 4, !dbg !1440
  %1057 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1058 = bitcast %union.CHAR64LONG16* %1057 to [16 x i32]*, !dbg !1440
  %1059 = getelementptr inbounds [16 x i32], [16 x i32]* %1058, i64 0, i64 11, !dbg !1440
  %1060 = load i32, i32* %1059, align 4, !dbg !1440
  %1061 = xor i32 %1056, %1060, !dbg !1440
  %1062 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1063 = bitcast %union.CHAR64LONG16* %1062 to [16 x i32]*, !dbg !1440
  %1064 = getelementptr inbounds [16 x i32], [16 x i32]* %1063, i64 0, i64 5, !dbg !1440
  %1065 = load i32, i32* %1064, align 4, !dbg !1440
  %1066 = xor i32 %1061, %1065, !dbg !1440
  %1067 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1068 = bitcast %union.CHAR64LONG16* %1067 to [16 x i32]*, !dbg !1440
  %1069 = getelementptr inbounds [16 x i32], [16 x i32]* %1068, i64 0, i64 3, !dbg !1440
  %1070 = load i32, i32* %1069, align 4, !dbg !1440
  %1071 = xor i32 %1066, %1070, !dbg !1440
  %1072 = lshr i32 %1071, 31, !dbg !1440
  %1073 = or i32 %1052, %1072, !dbg !1440
  %1074 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1440
  %1075 = bitcast %union.CHAR64LONG16* %1074 to [16 x i32]*, !dbg !1440
  %1076 = getelementptr inbounds [16 x i32], [16 x i32]* %1075, i64 0, i64 3, !dbg !1440
  store i32 %1073, i32* %1076, align 4, !dbg !1440
  %1077 = add i32 %1032, %1073, !dbg !1440
  %1078 = add i32 %1077, 1518500249, !dbg !1440
  %1079 = load i32, i32* %6, align 4, !dbg !1440
  %1080 = shl i32 %1079, 5, !dbg !1440
  %1081 = load i32, i32* %6, align 4, !dbg !1440
  %1082 = lshr i32 %1081, 27, !dbg !1440
  %1083 = or i32 %1080, %1082, !dbg !1440
  %1084 = add i32 %1078, %1083, !dbg !1440
  %1085 = load i32, i32* %5, align 4, !dbg !1440
  %1086 = add i32 %1085, %1084, !dbg !1440
  store i32 %1086, i32* %5, align 4, !dbg !1440
  %1087 = load i32, i32* %7, align 4, !dbg !1440
  %1088 = shl i32 %1087, 30, !dbg !1440
  %1089 = load i32, i32* %7, align 4, !dbg !1440
  %1090 = lshr i32 %1089, 2, !dbg !1440
  %1091 = or i32 %1088, %1090, !dbg !1440
  store i32 %1091, i32* %7, align 4, !dbg !1440
  %1092 = load i32, i32* %6, align 4, !dbg !1441
  %1093 = load i32, i32* %7, align 4, !dbg !1441
  %1094 = xor i32 %1092, %1093, !dbg !1441
  %1095 = load i32, i32* %8, align 4, !dbg !1441
  %1096 = xor i32 %1094, %1095, !dbg !1441
  %1097 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1098 = bitcast %union.CHAR64LONG16* %1097 to [16 x i32]*, !dbg !1441
  %1099 = getelementptr inbounds [16 x i32], [16 x i32]* %1098, i64 0, i64 1, !dbg !1441
  %1100 = load i32, i32* %1099, align 4, !dbg !1441
  %1101 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1102 = bitcast %union.CHAR64LONG16* %1101 to [16 x i32]*, !dbg !1441
  %1103 = getelementptr inbounds [16 x i32], [16 x i32]* %1102, i64 0, i64 12, !dbg !1441
  %1104 = load i32, i32* %1103, align 4, !dbg !1441
  %1105 = xor i32 %1100, %1104, !dbg !1441
  %1106 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1107 = bitcast %union.CHAR64LONG16* %1106 to [16 x i32]*, !dbg !1441
  %1108 = getelementptr inbounds [16 x i32], [16 x i32]* %1107, i64 0, i64 6, !dbg !1441
  %1109 = load i32, i32* %1108, align 4, !dbg !1441
  %1110 = xor i32 %1105, %1109, !dbg !1441
  %1111 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1112 = bitcast %union.CHAR64LONG16* %1111 to [16 x i32]*, !dbg !1441
  %1113 = getelementptr inbounds [16 x i32], [16 x i32]* %1112, i64 0, i64 4, !dbg !1441
  %1114 = load i32, i32* %1113, align 4, !dbg !1441
  %1115 = xor i32 %1110, %1114, !dbg !1441
  %1116 = shl i32 %1115, 1, !dbg !1441
  %1117 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1118 = bitcast %union.CHAR64LONG16* %1117 to [16 x i32]*, !dbg !1441
  %1119 = getelementptr inbounds [16 x i32], [16 x i32]* %1118, i64 0, i64 1, !dbg !1441
  %1120 = load i32, i32* %1119, align 4, !dbg !1441
  %1121 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1122 = bitcast %union.CHAR64LONG16* %1121 to [16 x i32]*, !dbg !1441
  %1123 = getelementptr inbounds [16 x i32], [16 x i32]* %1122, i64 0, i64 12, !dbg !1441
  %1124 = load i32, i32* %1123, align 4, !dbg !1441
  %1125 = xor i32 %1120, %1124, !dbg !1441
  %1126 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1127 = bitcast %union.CHAR64LONG16* %1126 to [16 x i32]*, !dbg !1441
  %1128 = getelementptr inbounds [16 x i32], [16 x i32]* %1127, i64 0, i64 6, !dbg !1441
  %1129 = load i32, i32* %1128, align 4, !dbg !1441
  %1130 = xor i32 %1125, %1129, !dbg !1441
  %1131 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1132 = bitcast %union.CHAR64LONG16* %1131 to [16 x i32]*, !dbg !1441
  %1133 = getelementptr inbounds [16 x i32], [16 x i32]* %1132, i64 0, i64 4, !dbg !1441
  %1134 = load i32, i32* %1133, align 4, !dbg !1441
  %1135 = xor i32 %1130, %1134, !dbg !1441
  %1136 = lshr i32 %1135, 31, !dbg !1441
  %1137 = or i32 %1116, %1136, !dbg !1441
  %1138 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1441
  %1139 = bitcast %union.CHAR64LONG16* %1138 to [16 x i32]*, !dbg !1441
  %1140 = getelementptr inbounds [16 x i32], [16 x i32]* %1139, i64 0, i64 4, !dbg !1441
  store i32 %1137, i32* %1140, align 4, !dbg !1441
  %1141 = add i32 %1096, %1137, !dbg !1441
  %1142 = add i32 %1141, 1859775393, !dbg !1441
  %1143 = load i32, i32* %5, align 4, !dbg !1441
  %1144 = shl i32 %1143, 5, !dbg !1441
  %1145 = load i32, i32* %5, align 4, !dbg !1441
  %1146 = lshr i32 %1145, 27, !dbg !1441
  %1147 = or i32 %1144, %1146, !dbg !1441
  %1148 = add i32 %1142, %1147, !dbg !1441
  %1149 = load i32, i32* %9, align 4, !dbg !1441
  %1150 = add i32 %1149, %1148, !dbg !1441
  store i32 %1150, i32* %9, align 4, !dbg !1441
  %1151 = load i32, i32* %6, align 4, !dbg !1441
  %1152 = shl i32 %1151, 30, !dbg !1441
  %1153 = load i32, i32* %6, align 4, !dbg !1441
  %1154 = lshr i32 %1153, 2, !dbg !1441
  %1155 = or i32 %1152, %1154, !dbg !1441
  store i32 %1155, i32* %6, align 4, !dbg !1441
  %1156 = load i32, i32* %5, align 4, !dbg !1442
  %1157 = load i32, i32* %6, align 4, !dbg !1442
  %1158 = xor i32 %1156, %1157, !dbg !1442
  %1159 = load i32, i32* %7, align 4, !dbg !1442
  %1160 = xor i32 %1158, %1159, !dbg !1442
  %1161 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1162 = bitcast %union.CHAR64LONG16* %1161 to [16 x i32]*, !dbg !1442
  %1163 = getelementptr inbounds [16 x i32], [16 x i32]* %1162, i64 0, i64 2, !dbg !1442
  %1164 = load i32, i32* %1163, align 4, !dbg !1442
  %1165 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1166 = bitcast %union.CHAR64LONG16* %1165 to [16 x i32]*, !dbg !1442
  %1167 = getelementptr inbounds [16 x i32], [16 x i32]* %1166, i64 0, i64 13, !dbg !1442
  %1168 = load i32, i32* %1167, align 4, !dbg !1442
  %1169 = xor i32 %1164, %1168, !dbg !1442
  %1170 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1171 = bitcast %union.CHAR64LONG16* %1170 to [16 x i32]*, !dbg !1442
  %1172 = getelementptr inbounds [16 x i32], [16 x i32]* %1171, i64 0, i64 7, !dbg !1442
  %1173 = load i32, i32* %1172, align 4, !dbg !1442
  %1174 = xor i32 %1169, %1173, !dbg !1442
  %1175 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1176 = bitcast %union.CHAR64LONG16* %1175 to [16 x i32]*, !dbg !1442
  %1177 = getelementptr inbounds [16 x i32], [16 x i32]* %1176, i64 0, i64 5, !dbg !1442
  %1178 = load i32, i32* %1177, align 4, !dbg !1442
  %1179 = xor i32 %1174, %1178, !dbg !1442
  %1180 = shl i32 %1179, 1, !dbg !1442
  %1181 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1182 = bitcast %union.CHAR64LONG16* %1181 to [16 x i32]*, !dbg !1442
  %1183 = getelementptr inbounds [16 x i32], [16 x i32]* %1182, i64 0, i64 2, !dbg !1442
  %1184 = load i32, i32* %1183, align 4, !dbg !1442
  %1185 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1186 = bitcast %union.CHAR64LONG16* %1185 to [16 x i32]*, !dbg !1442
  %1187 = getelementptr inbounds [16 x i32], [16 x i32]* %1186, i64 0, i64 13, !dbg !1442
  %1188 = load i32, i32* %1187, align 4, !dbg !1442
  %1189 = xor i32 %1184, %1188, !dbg !1442
  %1190 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1191 = bitcast %union.CHAR64LONG16* %1190 to [16 x i32]*, !dbg !1442
  %1192 = getelementptr inbounds [16 x i32], [16 x i32]* %1191, i64 0, i64 7, !dbg !1442
  %1193 = load i32, i32* %1192, align 4, !dbg !1442
  %1194 = xor i32 %1189, %1193, !dbg !1442
  %1195 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1196 = bitcast %union.CHAR64LONG16* %1195 to [16 x i32]*, !dbg !1442
  %1197 = getelementptr inbounds [16 x i32], [16 x i32]* %1196, i64 0, i64 5, !dbg !1442
  %1198 = load i32, i32* %1197, align 4, !dbg !1442
  %1199 = xor i32 %1194, %1198, !dbg !1442
  %1200 = lshr i32 %1199, 31, !dbg !1442
  %1201 = or i32 %1180, %1200, !dbg !1442
  %1202 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1442
  %1203 = bitcast %union.CHAR64LONG16* %1202 to [16 x i32]*, !dbg !1442
  %1204 = getelementptr inbounds [16 x i32], [16 x i32]* %1203, i64 0, i64 5, !dbg !1442
  store i32 %1201, i32* %1204, align 4, !dbg !1442
  %1205 = add i32 %1160, %1201, !dbg !1442
  %1206 = add i32 %1205, 1859775393, !dbg !1442
  %1207 = load i32, i32* %9, align 4, !dbg !1442
  %1208 = shl i32 %1207, 5, !dbg !1442
  %1209 = load i32, i32* %9, align 4, !dbg !1442
  %1210 = lshr i32 %1209, 27, !dbg !1442
  %1211 = or i32 %1208, %1210, !dbg !1442
  %1212 = add i32 %1206, %1211, !dbg !1442
  %1213 = load i32, i32* %8, align 4, !dbg !1442
  %1214 = add i32 %1213, %1212, !dbg !1442
  store i32 %1214, i32* %8, align 4, !dbg !1442
  %1215 = load i32, i32* %5, align 4, !dbg !1442
  %1216 = shl i32 %1215, 30, !dbg !1442
  %1217 = load i32, i32* %5, align 4, !dbg !1442
  %1218 = lshr i32 %1217, 2, !dbg !1442
  %1219 = or i32 %1216, %1218, !dbg !1442
  store i32 %1219, i32* %5, align 4, !dbg !1442
  %1220 = load i32, i32* %9, align 4, !dbg !1443
  %1221 = load i32, i32* %5, align 4, !dbg !1443
  %1222 = xor i32 %1220, %1221, !dbg !1443
  %1223 = load i32, i32* %6, align 4, !dbg !1443
  %1224 = xor i32 %1222, %1223, !dbg !1443
  %1225 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1226 = bitcast %union.CHAR64LONG16* %1225 to [16 x i32]*, !dbg !1443
  %1227 = getelementptr inbounds [16 x i32], [16 x i32]* %1226, i64 0, i64 3, !dbg !1443
  %1228 = load i32, i32* %1227, align 4, !dbg !1443
  %1229 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1230 = bitcast %union.CHAR64LONG16* %1229 to [16 x i32]*, !dbg !1443
  %1231 = getelementptr inbounds [16 x i32], [16 x i32]* %1230, i64 0, i64 14, !dbg !1443
  %1232 = load i32, i32* %1231, align 4, !dbg !1443
  %1233 = xor i32 %1228, %1232, !dbg !1443
  %1234 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1235 = bitcast %union.CHAR64LONG16* %1234 to [16 x i32]*, !dbg !1443
  %1236 = getelementptr inbounds [16 x i32], [16 x i32]* %1235, i64 0, i64 8, !dbg !1443
  %1237 = load i32, i32* %1236, align 4, !dbg !1443
  %1238 = xor i32 %1233, %1237, !dbg !1443
  %1239 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1240 = bitcast %union.CHAR64LONG16* %1239 to [16 x i32]*, !dbg !1443
  %1241 = getelementptr inbounds [16 x i32], [16 x i32]* %1240, i64 0, i64 6, !dbg !1443
  %1242 = load i32, i32* %1241, align 4, !dbg !1443
  %1243 = xor i32 %1238, %1242, !dbg !1443
  %1244 = shl i32 %1243, 1, !dbg !1443
  %1245 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1246 = bitcast %union.CHAR64LONG16* %1245 to [16 x i32]*, !dbg !1443
  %1247 = getelementptr inbounds [16 x i32], [16 x i32]* %1246, i64 0, i64 3, !dbg !1443
  %1248 = load i32, i32* %1247, align 4, !dbg !1443
  %1249 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1250 = bitcast %union.CHAR64LONG16* %1249 to [16 x i32]*, !dbg !1443
  %1251 = getelementptr inbounds [16 x i32], [16 x i32]* %1250, i64 0, i64 14, !dbg !1443
  %1252 = load i32, i32* %1251, align 4, !dbg !1443
  %1253 = xor i32 %1248, %1252, !dbg !1443
  %1254 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1255 = bitcast %union.CHAR64LONG16* %1254 to [16 x i32]*, !dbg !1443
  %1256 = getelementptr inbounds [16 x i32], [16 x i32]* %1255, i64 0, i64 8, !dbg !1443
  %1257 = load i32, i32* %1256, align 4, !dbg !1443
  %1258 = xor i32 %1253, %1257, !dbg !1443
  %1259 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1260 = bitcast %union.CHAR64LONG16* %1259 to [16 x i32]*, !dbg !1443
  %1261 = getelementptr inbounds [16 x i32], [16 x i32]* %1260, i64 0, i64 6, !dbg !1443
  %1262 = load i32, i32* %1261, align 4, !dbg !1443
  %1263 = xor i32 %1258, %1262, !dbg !1443
  %1264 = lshr i32 %1263, 31, !dbg !1443
  %1265 = or i32 %1244, %1264, !dbg !1443
  %1266 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1443
  %1267 = bitcast %union.CHAR64LONG16* %1266 to [16 x i32]*, !dbg !1443
  %1268 = getelementptr inbounds [16 x i32], [16 x i32]* %1267, i64 0, i64 6, !dbg !1443
  store i32 %1265, i32* %1268, align 4, !dbg !1443
  %1269 = add i32 %1224, %1265, !dbg !1443
  %1270 = add i32 %1269, 1859775393, !dbg !1443
  %1271 = load i32, i32* %8, align 4, !dbg !1443
  %1272 = shl i32 %1271, 5, !dbg !1443
  %1273 = load i32, i32* %8, align 4, !dbg !1443
  %1274 = lshr i32 %1273, 27, !dbg !1443
  %1275 = or i32 %1272, %1274, !dbg !1443
  %1276 = add i32 %1270, %1275, !dbg !1443
  %1277 = load i32, i32* %7, align 4, !dbg !1443
  %1278 = add i32 %1277, %1276, !dbg !1443
  store i32 %1278, i32* %7, align 4, !dbg !1443
  %1279 = load i32, i32* %9, align 4, !dbg !1443
  %1280 = shl i32 %1279, 30, !dbg !1443
  %1281 = load i32, i32* %9, align 4, !dbg !1443
  %1282 = lshr i32 %1281, 2, !dbg !1443
  %1283 = or i32 %1280, %1282, !dbg !1443
  store i32 %1283, i32* %9, align 4, !dbg !1443
  %1284 = load i32, i32* %8, align 4, !dbg !1444
  %1285 = load i32, i32* %9, align 4, !dbg !1444
  %1286 = xor i32 %1284, %1285, !dbg !1444
  %1287 = load i32, i32* %5, align 4, !dbg !1444
  %1288 = xor i32 %1286, %1287, !dbg !1444
  %1289 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1290 = bitcast %union.CHAR64LONG16* %1289 to [16 x i32]*, !dbg !1444
  %1291 = getelementptr inbounds [16 x i32], [16 x i32]* %1290, i64 0, i64 4, !dbg !1444
  %1292 = load i32, i32* %1291, align 4, !dbg !1444
  %1293 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1294 = bitcast %union.CHAR64LONG16* %1293 to [16 x i32]*, !dbg !1444
  %1295 = getelementptr inbounds [16 x i32], [16 x i32]* %1294, i64 0, i64 15, !dbg !1444
  %1296 = load i32, i32* %1295, align 4, !dbg !1444
  %1297 = xor i32 %1292, %1296, !dbg !1444
  %1298 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1299 = bitcast %union.CHAR64LONG16* %1298 to [16 x i32]*, !dbg !1444
  %1300 = getelementptr inbounds [16 x i32], [16 x i32]* %1299, i64 0, i64 9, !dbg !1444
  %1301 = load i32, i32* %1300, align 4, !dbg !1444
  %1302 = xor i32 %1297, %1301, !dbg !1444
  %1303 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1304 = bitcast %union.CHAR64LONG16* %1303 to [16 x i32]*, !dbg !1444
  %1305 = getelementptr inbounds [16 x i32], [16 x i32]* %1304, i64 0, i64 7, !dbg !1444
  %1306 = load i32, i32* %1305, align 4, !dbg !1444
  %1307 = xor i32 %1302, %1306, !dbg !1444
  %1308 = shl i32 %1307, 1, !dbg !1444
  %1309 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1310 = bitcast %union.CHAR64LONG16* %1309 to [16 x i32]*, !dbg !1444
  %1311 = getelementptr inbounds [16 x i32], [16 x i32]* %1310, i64 0, i64 4, !dbg !1444
  %1312 = load i32, i32* %1311, align 4, !dbg !1444
  %1313 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1314 = bitcast %union.CHAR64LONG16* %1313 to [16 x i32]*, !dbg !1444
  %1315 = getelementptr inbounds [16 x i32], [16 x i32]* %1314, i64 0, i64 15, !dbg !1444
  %1316 = load i32, i32* %1315, align 4, !dbg !1444
  %1317 = xor i32 %1312, %1316, !dbg !1444
  %1318 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1319 = bitcast %union.CHAR64LONG16* %1318 to [16 x i32]*, !dbg !1444
  %1320 = getelementptr inbounds [16 x i32], [16 x i32]* %1319, i64 0, i64 9, !dbg !1444
  %1321 = load i32, i32* %1320, align 4, !dbg !1444
  %1322 = xor i32 %1317, %1321, !dbg !1444
  %1323 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1324 = bitcast %union.CHAR64LONG16* %1323 to [16 x i32]*, !dbg !1444
  %1325 = getelementptr inbounds [16 x i32], [16 x i32]* %1324, i64 0, i64 7, !dbg !1444
  %1326 = load i32, i32* %1325, align 4, !dbg !1444
  %1327 = xor i32 %1322, %1326, !dbg !1444
  %1328 = lshr i32 %1327, 31, !dbg !1444
  %1329 = or i32 %1308, %1328, !dbg !1444
  %1330 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1444
  %1331 = bitcast %union.CHAR64LONG16* %1330 to [16 x i32]*, !dbg !1444
  %1332 = getelementptr inbounds [16 x i32], [16 x i32]* %1331, i64 0, i64 7, !dbg !1444
  store i32 %1329, i32* %1332, align 4, !dbg !1444
  %1333 = add i32 %1288, %1329, !dbg !1444
  %1334 = add i32 %1333, 1859775393, !dbg !1444
  %1335 = load i32, i32* %7, align 4, !dbg !1444
  %1336 = shl i32 %1335, 5, !dbg !1444
  %1337 = load i32, i32* %7, align 4, !dbg !1444
  %1338 = lshr i32 %1337, 27, !dbg !1444
  %1339 = or i32 %1336, %1338, !dbg !1444
  %1340 = add i32 %1334, %1339, !dbg !1444
  %1341 = load i32, i32* %6, align 4, !dbg !1444
  %1342 = add i32 %1341, %1340, !dbg !1444
  store i32 %1342, i32* %6, align 4, !dbg !1444
  %1343 = load i32, i32* %8, align 4, !dbg !1444
  %1344 = shl i32 %1343, 30, !dbg !1444
  %1345 = load i32, i32* %8, align 4, !dbg !1444
  %1346 = lshr i32 %1345, 2, !dbg !1444
  %1347 = or i32 %1344, %1346, !dbg !1444
  store i32 %1347, i32* %8, align 4, !dbg !1444
  %1348 = load i32, i32* %7, align 4, !dbg !1445
  %1349 = load i32, i32* %8, align 4, !dbg !1445
  %1350 = xor i32 %1348, %1349, !dbg !1445
  %1351 = load i32, i32* %9, align 4, !dbg !1445
  %1352 = xor i32 %1350, %1351, !dbg !1445
  %1353 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1354 = bitcast %union.CHAR64LONG16* %1353 to [16 x i32]*, !dbg !1445
  %1355 = getelementptr inbounds [16 x i32], [16 x i32]* %1354, i64 0, i64 5, !dbg !1445
  %1356 = load i32, i32* %1355, align 4, !dbg !1445
  %1357 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1358 = bitcast %union.CHAR64LONG16* %1357 to [16 x i32]*, !dbg !1445
  %1359 = getelementptr inbounds [16 x i32], [16 x i32]* %1358, i64 0, i64 0, !dbg !1445
  %1360 = load i32, i32* %1359, align 4, !dbg !1445
  %1361 = xor i32 %1356, %1360, !dbg !1445
  %1362 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1363 = bitcast %union.CHAR64LONG16* %1362 to [16 x i32]*, !dbg !1445
  %1364 = getelementptr inbounds [16 x i32], [16 x i32]* %1363, i64 0, i64 10, !dbg !1445
  %1365 = load i32, i32* %1364, align 4, !dbg !1445
  %1366 = xor i32 %1361, %1365, !dbg !1445
  %1367 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1368 = bitcast %union.CHAR64LONG16* %1367 to [16 x i32]*, !dbg !1445
  %1369 = getelementptr inbounds [16 x i32], [16 x i32]* %1368, i64 0, i64 8, !dbg !1445
  %1370 = load i32, i32* %1369, align 4, !dbg !1445
  %1371 = xor i32 %1366, %1370, !dbg !1445
  %1372 = shl i32 %1371, 1, !dbg !1445
  %1373 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1374 = bitcast %union.CHAR64LONG16* %1373 to [16 x i32]*, !dbg !1445
  %1375 = getelementptr inbounds [16 x i32], [16 x i32]* %1374, i64 0, i64 5, !dbg !1445
  %1376 = load i32, i32* %1375, align 4, !dbg !1445
  %1377 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1378 = bitcast %union.CHAR64LONG16* %1377 to [16 x i32]*, !dbg !1445
  %1379 = getelementptr inbounds [16 x i32], [16 x i32]* %1378, i64 0, i64 0, !dbg !1445
  %1380 = load i32, i32* %1379, align 4, !dbg !1445
  %1381 = xor i32 %1376, %1380, !dbg !1445
  %1382 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1383 = bitcast %union.CHAR64LONG16* %1382 to [16 x i32]*, !dbg !1445
  %1384 = getelementptr inbounds [16 x i32], [16 x i32]* %1383, i64 0, i64 10, !dbg !1445
  %1385 = load i32, i32* %1384, align 4, !dbg !1445
  %1386 = xor i32 %1381, %1385, !dbg !1445
  %1387 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1388 = bitcast %union.CHAR64LONG16* %1387 to [16 x i32]*, !dbg !1445
  %1389 = getelementptr inbounds [16 x i32], [16 x i32]* %1388, i64 0, i64 8, !dbg !1445
  %1390 = load i32, i32* %1389, align 4, !dbg !1445
  %1391 = xor i32 %1386, %1390, !dbg !1445
  %1392 = lshr i32 %1391, 31, !dbg !1445
  %1393 = or i32 %1372, %1392, !dbg !1445
  %1394 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1445
  %1395 = bitcast %union.CHAR64LONG16* %1394 to [16 x i32]*, !dbg !1445
  %1396 = getelementptr inbounds [16 x i32], [16 x i32]* %1395, i64 0, i64 8, !dbg !1445
  store i32 %1393, i32* %1396, align 4, !dbg !1445
  %1397 = add i32 %1352, %1393, !dbg !1445
  %1398 = add i32 %1397, 1859775393, !dbg !1445
  %1399 = load i32, i32* %6, align 4, !dbg !1445
  %1400 = shl i32 %1399, 5, !dbg !1445
  %1401 = load i32, i32* %6, align 4, !dbg !1445
  %1402 = lshr i32 %1401, 27, !dbg !1445
  %1403 = or i32 %1400, %1402, !dbg !1445
  %1404 = add i32 %1398, %1403, !dbg !1445
  %1405 = load i32, i32* %5, align 4, !dbg !1445
  %1406 = add i32 %1405, %1404, !dbg !1445
  store i32 %1406, i32* %5, align 4, !dbg !1445
  %1407 = load i32, i32* %7, align 4, !dbg !1445
  %1408 = shl i32 %1407, 30, !dbg !1445
  %1409 = load i32, i32* %7, align 4, !dbg !1445
  %1410 = lshr i32 %1409, 2, !dbg !1445
  %1411 = or i32 %1408, %1410, !dbg !1445
  store i32 %1411, i32* %7, align 4, !dbg !1445
  %1412 = load i32, i32* %6, align 4, !dbg !1446
  %1413 = load i32, i32* %7, align 4, !dbg !1446
  %1414 = xor i32 %1412, %1413, !dbg !1446
  %1415 = load i32, i32* %8, align 4, !dbg !1446
  %1416 = xor i32 %1414, %1415, !dbg !1446
  %1417 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1418 = bitcast %union.CHAR64LONG16* %1417 to [16 x i32]*, !dbg !1446
  %1419 = getelementptr inbounds [16 x i32], [16 x i32]* %1418, i64 0, i64 6, !dbg !1446
  %1420 = load i32, i32* %1419, align 4, !dbg !1446
  %1421 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1422 = bitcast %union.CHAR64LONG16* %1421 to [16 x i32]*, !dbg !1446
  %1423 = getelementptr inbounds [16 x i32], [16 x i32]* %1422, i64 0, i64 1, !dbg !1446
  %1424 = load i32, i32* %1423, align 4, !dbg !1446
  %1425 = xor i32 %1420, %1424, !dbg !1446
  %1426 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1427 = bitcast %union.CHAR64LONG16* %1426 to [16 x i32]*, !dbg !1446
  %1428 = getelementptr inbounds [16 x i32], [16 x i32]* %1427, i64 0, i64 11, !dbg !1446
  %1429 = load i32, i32* %1428, align 4, !dbg !1446
  %1430 = xor i32 %1425, %1429, !dbg !1446
  %1431 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1432 = bitcast %union.CHAR64LONG16* %1431 to [16 x i32]*, !dbg !1446
  %1433 = getelementptr inbounds [16 x i32], [16 x i32]* %1432, i64 0, i64 9, !dbg !1446
  %1434 = load i32, i32* %1433, align 4, !dbg !1446
  %1435 = xor i32 %1430, %1434, !dbg !1446
  %1436 = shl i32 %1435, 1, !dbg !1446
  %1437 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1438 = bitcast %union.CHAR64LONG16* %1437 to [16 x i32]*, !dbg !1446
  %1439 = getelementptr inbounds [16 x i32], [16 x i32]* %1438, i64 0, i64 6, !dbg !1446
  %1440 = load i32, i32* %1439, align 4, !dbg !1446
  %1441 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1442 = bitcast %union.CHAR64LONG16* %1441 to [16 x i32]*, !dbg !1446
  %1443 = getelementptr inbounds [16 x i32], [16 x i32]* %1442, i64 0, i64 1, !dbg !1446
  %1444 = load i32, i32* %1443, align 4, !dbg !1446
  %1445 = xor i32 %1440, %1444, !dbg !1446
  %1446 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1447 = bitcast %union.CHAR64LONG16* %1446 to [16 x i32]*, !dbg !1446
  %1448 = getelementptr inbounds [16 x i32], [16 x i32]* %1447, i64 0, i64 11, !dbg !1446
  %1449 = load i32, i32* %1448, align 4, !dbg !1446
  %1450 = xor i32 %1445, %1449, !dbg !1446
  %1451 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1452 = bitcast %union.CHAR64LONG16* %1451 to [16 x i32]*, !dbg !1446
  %1453 = getelementptr inbounds [16 x i32], [16 x i32]* %1452, i64 0, i64 9, !dbg !1446
  %1454 = load i32, i32* %1453, align 4, !dbg !1446
  %1455 = xor i32 %1450, %1454, !dbg !1446
  %1456 = lshr i32 %1455, 31, !dbg !1446
  %1457 = or i32 %1436, %1456, !dbg !1446
  %1458 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1446
  %1459 = bitcast %union.CHAR64LONG16* %1458 to [16 x i32]*, !dbg !1446
  %1460 = getelementptr inbounds [16 x i32], [16 x i32]* %1459, i64 0, i64 9, !dbg !1446
  store i32 %1457, i32* %1460, align 4, !dbg !1446
  %1461 = add i32 %1416, %1457, !dbg !1446
  %1462 = add i32 %1461, 1859775393, !dbg !1446
  %1463 = load i32, i32* %5, align 4, !dbg !1446
  %1464 = shl i32 %1463, 5, !dbg !1446
  %1465 = load i32, i32* %5, align 4, !dbg !1446
  %1466 = lshr i32 %1465, 27, !dbg !1446
  %1467 = or i32 %1464, %1466, !dbg !1446
  %1468 = add i32 %1462, %1467, !dbg !1446
  %1469 = load i32, i32* %9, align 4, !dbg !1446
  %1470 = add i32 %1469, %1468, !dbg !1446
  store i32 %1470, i32* %9, align 4, !dbg !1446
  %1471 = load i32, i32* %6, align 4, !dbg !1446
  %1472 = shl i32 %1471, 30, !dbg !1446
  %1473 = load i32, i32* %6, align 4, !dbg !1446
  %1474 = lshr i32 %1473, 2, !dbg !1446
  %1475 = or i32 %1472, %1474, !dbg !1446
  store i32 %1475, i32* %6, align 4, !dbg !1446
  %1476 = load i32, i32* %5, align 4, !dbg !1447
  %1477 = load i32, i32* %6, align 4, !dbg !1447
  %1478 = xor i32 %1476, %1477, !dbg !1447
  %1479 = load i32, i32* %7, align 4, !dbg !1447
  %1480 = xor i32 %1478, %1479, !dbg !1447
  %1481 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1482 = bitcast %union.CHAR64LONG16* %1481 to [16 x i32]*, !dbg !1447
  %1483 = getelementptr inbounds [16 x i32], [16 x i32]* %1482, i64 0, i64 7, !dbg !1447
  %1484 = load i32, i32* %1483, align 4, !dbg !1447
  %1485 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1486 = bitcast %union.CHAR64LONG16* %1485 to [16 x i32]*, !dbg !1447
  %1487 = getelementptr inbounds [16 x i32], [16 x i32]* %1486, i64 0, i64 2, !dbg !1447
  %1488 = load i32, i32* %1487, align 4, !dbg !1447
  %1489 = xor i32 %1484, %1488, !dbg !1447
  %1490 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1491 = bitcast %union.CHAR64LONG16* %1490 to [16 x i32]*, !dbg !1447
  %1492 = getelementptr inbounds [16 x i32], [16 x i32]* %1491, i64 0, i64 12, !dbg !1447
  %1493 = load i32, i32* %1492, align 4, !dbg !1447
  %1494 = xor i32 %1489, %1493, !dbg !1447
  %1495 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1496 = bitcast %union.CHAR64LONG16* %1495 to [16 x i32]*, !dbg !1447
  %1497 = getelementptr inbounds [16 x i32], [16 x i32]* %1496, i64 0, i64 10, !dbg !1447
  %1498 = load i32, i32* %1497, align 4, !dbg !1447
  %1499 = xor i32 %1494, %1498, !dbg !1447
  %1500 = shl i32 %1499, 1, !dbg !1447
  %1501 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1502 = bitcast %union.CHAR64LONG16* %1501 to [16 x i32]*, !dbg !1447
  %1503 = getelementptr inbounds [16 x i32], [16 x i32]* %1502, i64 0, i64 7, !dbg !1447
  %1504 = load i32, i32* %1503, align 4, !dbg !1447
  %1505 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1506 = bitcast %union.CHAR64LONG16* %1505 to [16 x i32]*, !dbg !1447
  %1507 = getelementptr inbounds [16 x i32], [16 x i32]* %1506, i64 0, i64 2, !dbg !1447
  %1508 = load i32, i32* %1507, align 4, !dbg !1447
  %1509 = xor i32 %1504, %1508, !dbg !1447
  %1510 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1511 = bitcast %union.CHAR64LONG16* %1510 to [16 x i32]*, !dbg !1447
  %1512 = getelementptr inbounds [16 x i32], [16 x i32]* %1511, i64 0, i64 12, !dbg !1447
  %1513 = load i32, i32* %1512, align 4, !dbg !1447
  %1514 = xor i32 %1509, %1513, !dbg !1447
  %1515 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1516 = bitcast %union.CHAR64LONG16* %1515 to [16 x i32]*, !dbg !1447
  %1517 = getelementptr inbounds [16 x i32], [16 x i32]* %1516, i64 0, i64 10, !dbg !1447
  %1518 = load i32, i32* %1517, align 4, !dbg !1447
  %1519 = xor i32 %1514, %1518, !dbg !1447
  %1520 = lshr i32 %1519, 31, !dbg !1447
  %1521 = or i32 %1500, %1520, !dbg !1447
  %1522 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1447
  %1523 = bitcast %union.CHAR64LONG16* %1522 to [16 x i32]*, !dbg !1447
  %1524 = getelementptr inbounds [16 x i32], [16 x i32]* %1523, i64 0, i64 10, !dbg !1447
  store i32 %1521, i32* %1524, align 4, !dbg !1447
  %1525 = add i32 %1480, %1521, !dbg !1447
  %1526 = add i32 %1525, 1859775393, !dbg !1447
  %1527 = load i32, i32* %9, align 4, !dbg !1447
  %1528 = shl i32 %1527, 5, !dbg !1447
  %1529 = load i32, i32* %9, align 4, !dbg !1447
  %1530 = lshr i32 %1529, 27, !dbg !1447
  %1531 = or i32 %1528, %1530, !dbg !1447
  %1532 = add i32 %1526, %1531, !dbg !1447
  %1533 = load i32, i32* %8, align 4, !dbg !1447
  %1534 = add i32 %1533, %1532, !dbg !1447
  store i32 %1534, i32* %8, align 4, !dbg !1447
  %1535 = load i32, i32* %5, align 4, !dbg !1447
  %1536 = shl i32 %1535, 30, !dbg !1447
  %1537 = load i32, i32* %5, align 4, !dbg !1447
  %1538 = lshr i32 %1537, 2, !dbg !1447
  %1539 = or i32 %1536, %1538, !dbg !1447
  store i32 %1539, i32* %5, align 4, !dbg !1447
  %1540 = load i32, i32* %9, align 4, !dbg !1448
  %1541 = load i32, i32* %5, align 4, !dbg !1448
  %1542 = xor i32 %1540, %1541, !dbg !1448
  %1543 = load i32, i32* %6, align 4, !dbg !1448
  %1544 = xor i32 %1542, %1543, !dbg !1448
  %1545 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1546 = bitcast %union.CHAR64LONG16* %1545 to [16 x i32]*, !dbg !1448
  %1547 = getelementptr inbounds [16 x i32], [16 x i32]* %1546, i64 0, i64 8, !dbg !1448
  %1548 = load i32, i32* %1547, align 4, !dbg !1448
  %1549 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1550 = bitcast %union.CHAR64LONG16* %1549 to [16 x i32]*, !dbg !1448
  %1551 = getelementptr inbounds [16 x i32], [16 x i32]* %1550, i64 0, i64 3, !dbg !1448
  %1552 = load i32, i32* %1551, align 4, !dbg !1448
  %1553 = xor i32 %1548, %1552, !dbg !1448
  %1554 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1555 = bitcast %union.CHAR64LONG16* %1554 to [16 x i32]*, !dbg !1448
  %1556 = getelementptr inbounds [16 x i32], [16 x i32]* %1555, i64 0, i64 13, !dbg !1448
  %1557 = load i32, i32* %1556, align 4, !dbg !1448
  %1558 = xor i32 %1553, %1557, !dbg !1448
  %1559 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1560 = bitcast %union.CHAR64LONG16* %1559 to [16 x i32]*, !dbg !1448
  %1561 = getelementptr inbounds [16 x i32], [16 x i32]* %1560, i64 0, i64 11, !dbg !1448
  %1562 = load i32, i32* %1561, align 4, !dbg !1448
  %1563 = xor i32 %1558, %1562, !dbg !1448
  %1564 = shl i32 %1563, 1, !dbg !1448
  %1565 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1566 = bitcast %union.CHAR64LONG16* %1565 to [16 x i32]*, !dbg !1448
  %1567 = getelementptr inbounds [16 x i32], [16 x i32]* %1566, i64 0, i64 8, !dbg !1448
  %1568 = load i32, i32* %1567, align 4, !dbg !1448
  %1569 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1570 = bitcast %union.CHAR64LONG16* %1569 to [16 x i32]*, !dbg !1448
  %1571 = getelementptr inbounds [16 x i32], [16 x i32]* %1570, i64 0, i64 3, !dbg !1448
  %1572 = load i32, i32* %1571, align 4, !dbg !1448
  %1573 = xor i32 %1568, %1572, !dbg !1448
  %1574 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1575 = bitcast %union.CHAR64LONG16* %1574 to [16 x i32]*, !dbg !1448
  %1576 = getelementptr inbounds [16 x i32], [16 x i32]* %1575, i64 0, i64 13, !dbg !1448
  %1577 = load i32, i32* %1576, align 4, !dbg !1448
  %1578 = xor i32 %1573, %1577, !dbg !1448
  %1579 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1580 = bitcast %union.CHAR64LONG16* %1579 to [16 x i32]*, !dbg !1448
  %1581 = getelementptr inbounds [16 x i32], [16 x i32]* %1580, i64 0, i64 11, !dbg !1448
  %1582 = load i32, i32* %1581, align 4, !dbg !1448
  %1583 = xor i32 %1578, %1582, !dbg !1448
  %1584 = lshr i32 %1583, 31, !dbg !1448
  %1585 = or i32 %1564, %1584, !dbg !1448
  %1586 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1448
  %1587 = bitcast %union.CHAR64LONG16* %1586 to [16 x i32]*, !dbg !1448
  %1588 = getelementptr inbounds [16 x i32], [16 x i32]* %1587, i64 0, i64 11, !dbg !1448
  store i32 %1585, i32* %1588, align 4, !dbg !1448
  %1589 = add i32 %1544, %1585, !dbg !1448
  %1590 = add i32 %1589, 1859775393, !dbg !1448
  %1591 = load i32, i32* %8, align 4, !dbg !1448
  %1592 = shl i32 %1591, 5, !dbg !1448
  %1593 = load i32, i32* %8, align 4, !dbg !1448
  %1594 = lshr i32 %1593, 27, !dbg !1448
  %1595 = or i32 %1592, %1594, !dbg !1448
  %1596 = add i32 %1590, %1595, !dbg !1448
  %1597 = load i32, i32* %7, align 4, !dbg !1448
  %1598 = add i32 %1597, %1596, !dbg !1448
  store i32 %1598, i32* %7, align 4, !dbg !1448
  %1599 = load i32, i32* %9, align 4, !dbg !1448
  %1600 = shl i32 %1599, 30, !dbg !1448
  %1601 = load i32, i32* %9, align 4, !dbg !1448
  %1602 = lshr i32 %1601, 2, !dbg !1448
  %1603 = or i32 %1600, %1602, !dbg !1448
  store i32 %1603, i32* %9, align 4, !dbg !1448
  %1604 = load i32, i32* %8, align 4, !dbg !1449
  %1605 = load i32, i32* %9, align 4, !dbg !1449
  %1606 = xor i32 %1604, %1605, !dbg !1449
  %1607 = load i32, i32* %5, align 4, !dbg !1449
  %1608 = xor i32 %1606, %1607, !dbg !1449
  %1609 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1610 = bitcast %union.CHAR64LONG16* %1609 to [16 x i32]*, !dbg !1449
  %1611 = getelementptr inbounds [16 x i32], [16 x i32]* %1610, i64 0, i64 9, !dbg !1449
  %1612 = load i32, i32* %1611, align 4, !dbg !1449
  %1613 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1614 = bitcast %union.CHAR64LONG16* %1613 to [16 x i32]*, !dbg !1449
  %1615 = getelementptr inbounds [16 x i32], [16 x i32]* %1614, i64 0, i64 4, !dbg !1449
  %1616 = load i32, i32* %1615, align 4, !dbg !1449
  %1617 = xor i32 %1612, %1616, !dbg !1449
  %1618 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1619 = bitcast %union.CHAR64LONG16* %1618 to [16 x i32]*, !dbg !1449
  %1620 = getelementptr inbounds [16 x i32], [16 x i32]* %1619, i64 0, i64 14, !dbg !1449
  %1621 = load i32, i32* %1620, align 4, !dbg !1449
  %1622 = xor i32 %1617, %1621, !dbg !1449
  %1623 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1624 = bitcast %union.CHAR64LONG16* %1623 to [16 x i32]*, !dbg !1449
  %1625 = getelementptr inbounds [16 x i32], [16 x i32]* %1624, i64 0, i64 12, !dbg !1449
  %1626 = load i32, i32* %1625, align 4, !dbg !1449
  %1627 = xor i32 %1622, %1626, !dbg !1449
  %1628 = shl i32 %1627, 1, !dbg !1449
  %1629 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1630 = bitcast %union.CHAR64LONG16* %1629 to [16 x i32]*, !dbg !1449
  %1631 = getelementptr inbounds [16 x i32], [16 x i32]* %1630, i64 0, i64 9, !dbg !1449
  %1632 = load i32, i32* %1631, align 4, !dbg !1449
  %1633 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1634 = bitcast %union.CHAR64LONG16* %1633 to [16 x i32]*, !dbg !1449
  %1635 = getelementptr inbounds [16 x i32], [16 x i32]* %1634, i64 0, i64 4, !dbg !1449
  %1636 = load i32, i32* %1635, align 4, !dbg !1449
  %1637 = xor i32 %1632, %1636, !dbg !1449
  %1638 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1639 = bitcast %union.CHAR64LONG16* %1638 to [16 x i32]*, !dbg !1449
  %1640 = getelementptr inbounds [16 x i32], [16 x i32]* %1639, i64 0, i64 14, !dbg !1449
  %1641 = load i32, i32* %1640, align 4, !dbg !1449
  %1642 = xor i32 %1637, %1641, !dbg !1449
  %1643 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1644 = bitcast %union.CHAR64LONG16* %1643 to [16 x i32]*, !dbg !1449
  %1645 = getelementptr inbounds [16 x i32], [16 x i32]* %1644, i64 0, i64 12, !dbg !1449
  %1646 = load i32, i32* %1645, align 4, !dbg !1449
  %1647 = xor i32 %1642, %1646, !dbg !1449
  %1648 = lshr i32 %1647, 31, !dbg !1449
  %1649 = or i32 %1628, %1648, !dbg !1449
  %1650 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1449
  %1651 = bitcast %union.CHAR64LONG16* %1650 to [16 x i32]*, !dbg !1449
  %1652 = getelementptr inbounds [16 x i32], [16 x i32]* %1651, i64 0, i64 12, !dbg !1449
  store i32 %1649, i32* %1652, align 4, !dbg !1449
  %1653 = add i32 %1608, %1649, !dbg !1449
  %1654 = add i32 %1653, 1859775393, !dbg !1449
  %1655 = load i32, i32* %7, align 4, !dbg !1449
  %1656 = shl i32 %1655, 5, !dbg !1449
  %1657 = load i32, i32* %7, align 4, !dbg !1449
  %1658 = lshr i32 %1657, 27, !dbg !1449
  %1659 = or i32 %1656, %1658, !dbg !1449
  %1660 = add i32 %1654, %1659, !dbg !1449
  %1661 = load i32, i32* %6, align 4, !dbg !1449
  %1662 = add i32 %1661, %1660, !dbg !1449
  store i32 %1662, i32* %6, align 4, !dbg !1449
  %1663 = load i32, i32* %8, align 4, !dbg !1449
  %1664 = shl i32 %1663, 30, !dbg !1449
  %1665 = load i32, i32* %8, align 4, !dbg !1449
  %1666 = lshr i32 %1665, 2, !dbg !1449
  %1667 = or i32 %1664, %1666, !dbg !1449
  store i32 %1667, i32* %8, align 4, !dbg !1449
  %1668 = load i32, i32* %7, align 4, !dbg !1450
  %1669 = load i32, i32* %8, align 4, !dbg !1450
  %1670 = xor i32 %1668, %1669, !dbg !1450
  %1671 = load i32, i32* %9, align 4, !dbg !1450
  %1672 = xor i32 %1670, %1671, !dbg !1450
  %1673 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1674 = bitcast %union.CHAR64LONG16* %1673 to [16 x i32]*, !dbg !1450
  %1675 = getelementptr inbounds [16 x i32], [16 x i32]* %1674, i64 0, i64 10, !dbg !1450
  %1676 = load i32, i32* %1675, align 4, !dbg !1450
  %1677 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1678 = bitcast %union.CHAR64LONG16* %1677 to [16 x i32]*, !dbg !1450
  %1679 = getelementptr inbounds [16 x i32], [16 x i32]* %1678, i64 0, i64 5, !dbg !1450
  %1680 = load i32, i32* %1679, align 4, !dbg !1450
  %1681 = xor i32 %1676, %1680, !dbg !1450
  %1682 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1683 = bitcast %union.CHAR64LONG16* %1682 to [16 x i32]*, !dbg !1450
  %1684 = getelementptr inbounds [16 x i32], [16 x i32]* %1683, i64 0, i64 15, !dbg !1450
  %1685 = load i32, i32* %1684, align 4, !dbg !1450
  %1686 = xor i32 %1681, %1685, !dbg !1450
  %1687 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1688 = bitcast %union.CHAR64LONG16* %1687 to [16 x i32]*, !dbg !1450
  %1689 = getelementptr inbounds [16 x i32], [16 x i32]* %1688, i64 0, i64 13, !dbg !1450
  %1690 = load i32, i32* %1689, align 4, !dbg !1450
  %1691 = xor i32 %1686, %1690, !dbg !1450
  %1692 = shl i32 %1691, 1, !dbg !1450
  %1693 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1694 = bitcast %union.CHAR64LONG16* %1693 to [16 x i32]*, !dbg !1450
  %1695 = getelementptr inbounds [16 x i32], [16 x i32]* %1694, i64 0, i64 10, !dbg !1450
  %1696 = load i32, i32* %1695, align 4, !dbg !1450
  %1697 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1698 = bitcast %union.CHAR64LONG16* %1697 to [16 x i32]*, !dbg !1450
  %1699 = getelementptr inbounds [16 x i32], [16 x i32]* %1698, i64 0, i64 5, !dbg !1450
  %1700 = load i32, i32* %1699, align 4, !dbg !1450
  %1701 = xor i32 %1696, %1700, !dbg !1450
  %1702 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1703 = bitcast %union.CHAR64LONG16* %1702 to [16 x i32]*, !dbg !1450
  %1704 = getelementptr inbounds [16 x i32], [16 x i32]* %1703, i64 0, i64 15, !dbg !1450
  %1705 = load i32, i32* %1704, align 4, !dbg !1450
  %1706 = xor i32 %1701, %1705, !dbg !1450
  %1707 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1708 = bitcast %union.CHAR64LONG16* %1707 to [16 x i32]*, !dbg !1450
  %1709 = getelementptr inbounds [16 x i32], [16 x i32]* %1708, i64 0, i64 13, !dbg !1450
  %1710 = load i32, i32* %1709, align 4, !dbg !1450
  %1711 = xor i32 %1706, %1710, !dbg !1450
  %1712 = lshr i32 %1711, 31, !dbg !1450
  %1713 = or i32 %1692, %1712, !dbg !1450
  %1714 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1450
  %1715 = bitcast %union.CHAR64LONG16* %1714 to [16 x i32]*, !dbg !1450
  %1716 = getelementptr inbounds [16 x i32], [16 x i32]* %1715, i64 0, i64 13, !dbg !1450
  store i32 %1713, i32* %1716, align 4, !dbg !1450
  %1717 = add i32 %1672, %1713, !dbg !1450
  %1718 = add i32 %1717, 1859775393, !dbg !1450
  %1719 = load i32, i32* %6, align 4, !dbg !1450
  %1720 = shl i32 %1719, 5, !dbg !1450
  %1721 = load i32, i32* %6, align 4, !dbg !1450
  %1722 = lshr i32 %1721, 27, !dbg !1450
  %1723 = or i32 %1720, %1722, !dbg !1450
  %1724 = add i32 %1718, %1723, !dbg !1450
  %1725 = load i32, i32* %5, align 4, !dbg !1450
  %1726 = add i32 %1725, %1724, !dbg !1450
  store i32 %1726, i32* %5, align 4, !dbg !1450
  %1727 = load i32, i32* %7, align 4, !dbg !1450
  %1728 = shl i32 %1727, 30, !dbg !1450
  %1729 = load i32, i32* %7, align 4, !dbg !1450
  %1730 = lshr i32 %1729, 2, !dbg !1450
  %1731 = or i32 %1728, %1730, !dbg !1450
  store i32 %1731, i32* %7, align 4, !dbg !1450
  %1732 = load i32, i32* %6, align 4, !dbg !1451
  %1733 = load i32, i32* %7, align 4, !dbg !1451
  %1734 = xor i32 %1732, %1733, !dbg !1451
  %1735 = load i32, i32* %8, align 4, !dbg !1451
  %1736 = xor i32 %1734, %1735, !dbg !1451
  %1737 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1738 = bitcast %union.CHAR64LONG16* %1737 to [16 x i32]*, !dbg !1451
  %1739 = getelementptr inbounds [16 x i32], [16 x i32]* %1738, i64 0, i64 11, !dbg !1451
  %1740 = load i32, i32* %1739, align 4, !dbg !1451
  %1741 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1742 = bitcast %union.CHAR64LONG16* %1741 to [16 x i32]*, !dbg !1451
  %1743 = getelementptr inbounds [16 x i32], [16 x i32]* %1742, i64 0, i64 6, !dbg !1451
  %1744 = load i32, i32* %1743, align 4, !dbg !1451
  %1745 = xor i32 %1740, %1744, !dbg !1451
  %1746 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1747 = bitcast %union.CHAR64LONG16* %1746 to [16 x i32]*, !dbg !1451
  %1748 = getelementptr inbounds [16 x i32], [16 x i32]* %1747, i64 0, i64 0, !dbg !1451
  %1749 = load i32, i32* %1748, align 4, !dbg !1451
  %1750 = xor i32 %1745, %1749, !dbg !1451
  %1751 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1752 = bitcast %union.CHAR64LONG16* %1751 to [16 x i32]*, !dbg !1451
  %1753 = getelementptr inbounds [16 x i32], [16 x i32]* %1752, i64 0, i64 14, !dbg !1451
  %1754 = load i32, i32* %1753, align 4, !dbg !1451
  %1755 = xor i32 %1750, %1754, !dbg !1451
  %1756 = shl i32 %1755, 1, !dbg !1451
  %1757 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1758 = bitcast %union.CHAR64LONG16* %1757 to [16 x i32]*, !dbg !1451
  %1759 = getelementptr inbounds [16 x i32], [16 x i32]* %1758, i64 0, i64 11, !dbg !1451
  %1760 = load i32, i32* %1759, align 4, !dbg !1451
  %1761 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1762 = bitcast %union.CHAR64LONG16* %1761 to [16 x i32]*, !dbg !1451
  %1763 = getelementptr inbounds [16 x i32], [16 x i32]* %1762, i64 0, i64 6, !dbg !1451
  %1764 = load i32, i32* %1763, align 4, !dbg !1451
  %1765 = xor i32 %1760, %1764, !dbg !1451
  %1766 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1767 = bitcast %union.CHAR64LONG16* %1766 to [16 x i32]*, !dbg !1451
  %1768 = getelementptr inbounds [16 x i32], [16 x i32]* %1767, i64 0, i64 0, !dbg !1451
  %1769 = load i32, i32* %1768, align 4, !dbg !1451
  %1770 = xor i32 %1765, %1769, !dbg !1451
  %1771 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1772 = bitcast %union.CHAR64LONG16* %1771 to [16 x i32]*, !dbg !1451
  %1773 = getelementptr inbounds [16 x i32], [16 x i32]* %1772, i64 0, i64 14, !dbg !1451
  %1774 = load i32, i32* %1773, align 4, !dbg !1451
  %1775 = xor i32 %1770, %1774, !dbg !1451
  %1776 = lshr i32 %1775, 31, !dbg !1451
  %1777 = or i32 %1756, %1776, !dbg !1451
  %1778 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1451
  %1779 = bitcast %union.CHAR64LONG16* %1778 to [16 x i32]*, !dbg !1451
  %1780 = getelementptr inbounds [16 x i32], [16 x i32]* %1779, i64 0, i64 14, !dbg !1451
  store i32 %1777, i32* %1780, align 4, !dbg !1451
  %1781 = add i32 %1736, %1777, !dbg !1451
  %1782 = add i32 %1781, 1859775393, !dbg !1451
  %1783 = load i32, i32* %5, align 4, !dbg !1451
  %1784 = shl i32 %1783, 5, !dbg !1451
  %1785 = load i32, i32* %5, align 4, !dbg !1451
  %1786 = lshr i32 %1785, 27, !dbg !1451
  %1787 = or i32 %1784, %1786, !dbg !1451
  %1788 = add i32 %1782, %1787, !dbg !1451
  %1789 = load i32, i32* %9, align 4, !dbg !1451
  %1790 = add i32 %1789, %1788, !dbg !1451
  store i32 %1790, i32* %9, align 4, !dbg !1451
  %1791 = load i32, i32* %6, align 4, !dbg !1451
  %1792 = shl i32 %1791, 30, !dbg !1451
  %1793 = load i32, i32* %6, align 4, !dbg !1451
  %1794 = lshr i32 %1793, 2, !dbg !1451
  %1795 = or i32 %1792, %1794, !dbg !1451
  store i32 %1795, i32* %6, align 4, !dbg !1451
  %1796 = load i32, i32* %5, align 4, !dbg !1452
  %1797 = load i32, i32* %6, align 4, !dbg !1452
  %1798 = xor i32 %1796, %1797, !dbg !1452
  %1799 = load i32, i32* %7, align 4, !dbg !1452
  %1800 = xor i32 %1798, %1799, !dbg !1452
  %1801 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1802 = bitcast %union.CHAR64LONG16* %1801 to [16 x i32]*, !dbg !1452
  %1803 = getelementptr inbounds [16 x i32], [16 x i32]* %1802, i64 0, i64 12, !dbg !1452
  %1804 = load i32, i32* %1803, align 4, !dbg !1452
  %1805 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1806 = bitcast %union.CHAR64LONG16* %1805 to [16 x i32]*, !dbg !1452
  %1807 = getelementptr inbounds [16 x i32], [16 x i32]* %1806, i64 0, i64 7, !dbg !1452
  %1808 = load i32, i32* %1807, align 4, !dbg !1452
  %1809 = xor i32 %1804, %1808, !dbg !1452
  %1810 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1811 = bitcast %union.CHAR64LONG16* %1810 to [16 x i32]*, !dbg !1452
  %1812 = getelementptr inbounds [16 x i32], [16 x i32]* %1811, i64 0, i64 1, !dbg !1452
  %1813 = load i32, i32* %1812, align 4, !dbg !1452
  %1814 = xor i32 %1809, %1813, !dbg !1452
  %1815 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1816 = bitcast %union.CHAR64LONG16* %1815 to [16 x i32]*, !dbg !1452
  %1817 = getelementptr inbounds [16 x i32], [16 x i32]* %1816, i64 0, i64 15, !dbg !1452
  %1818 = load i32, i32* %1817, align 4, !dbg !1452
  %1819 = xor i32 %1814, %1818, !dbg !1452
  %1820 = shl i32 %1819, 1, !dbg !1452
  %1821 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1822 = bitcast %union.CHAR64LONG16* %1821 to [16 x i32]*, !dbg !1452
  %1823 = getelementptr inbounds [16 x i32], [16 x i32]* %1822, i64 0, i64 12, !dbg !1452
  %1824 = load i32, i32* %1823, align 4, !dbg !1452
  %1825 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1826 = bitcast %union.CHAR64LONG16* %1825 to [16 x i32]*, !dbg !1452
  %1827 = getelementptr inbounds [16 x i32], [16 x i32]* %1826, i64 0, i64 7, !dbg !1452
  %1828 = load i32, i32* %1827, align 4, !dbg !1452
  %1829 = xor i32 %1824, %1828, !dbg !1452
  %1830 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1831 = bitcast %union.CHAR64LONG16* %1830 to [16 x i32]*, !dbg !1452
  %1832 = getelementptr inbounds [16 x i32], [16 x i32]* %1831, i64 0, i64 1, !dbg !1452
  %1833 = load i32, i32* %1832, align 4, !dbg !1452
  %1834 = xor i32 %1829, %1833, !dbg !1452
  %1835 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1836 = bitcast %union.CHAR64LONG16* %1835 to [16 x i32]*, !dbg !1452
  %1837 = getelementptr inbounds [16 x i32], [16 x i32]* %1836, i64 0, i64 15, !dbg !1452
  %1838 = load i32, i32* %1837, align 4, !dbg !1452
  %1839 = xor i32 %1834, %1838, !dbg !1452
  %1840 = lshr i32 %1839, 31, !dbg !1452
  %1841 = or i32 %1820, %1840, !dbg !1452
  %1842 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1452
  %1843 = bitcast %union.CHAR64LONG16* %1842 to [16 x i32]*, !dbg !1452
  %1844 = getelementptr inbounds [16 x i32], [16 x i32]* %1843, i64 0, i64 15, !dbg !1452
  store i32 %1841, i32* %1844, align 4, !dbg !1452
  %1845 = add i32 %1800, %1841, !dbg !1452
  %1846 = add i32 %1845, 1859775393, !dbg !1452
  %1847 = load i32, i32* %9, align 4, !dbg !1452
  %1848 = shl i32 %1847, 5, !dbg !1452
  %1849 = load i32, i32* %9, align 4, !dbg !1452
  %1850 = lshr i32 %1849, 27, !dbg !1452
  %1851 = or i32 %1848, %1850, !dbg !1452
  %1852 = add i32 %1846, %1851, !dbg !1452
  %1853 = load i32, i32* %8, align 4, !dbg !1452
  %1854 = add i32 %1853, %1852, !dbg !1452
  store i32 %1854, i32* %8, align 4, !dbg !1452
  %1855 = load i32, i32* %5, align 4, !dbg !1452
  %1856 = shl i32 %1855, 30, !dbg !1452
  %1857 = load i32, i32* %5, align 4, !dbg !1452
  %1858 = lshr i32 %1857, 2, !dbg !1452
  %1859 = or i32 %1856, %1858, !dbg !1452
  store i32 %1859, i32* %5, align 4, !dbg !1452
  %1860 = load i32, i32* %9, align 4, !dbg !1453
  %1861 = load i32, i32* %5, align 4, !dbg !1453
  %1862 = xor i32 %1860, %1861, !dbg !1453
  %1863 = load i32, i32* %6, align 4, !dbg !1453
  %1864 = xor i32 %1862, %1863, !dbg !1453
  %1865 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1866 = bitcast %union.CHAR64LONG16* %1865 to [16 x i32]*, !dbg !1453
  %1867 = getelementptr inbounds [16 x i32], [16 x i32]* %1866, i64 0, i64 13, !dbg !1453
  %1868 = load i32, i32* %1867, align 4, !dbg !1453
  %1869 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1870 = bitcast %union.CHAR64LONG16* %1869 to [16 x i32]*, !dbg !1453
  %1871 = getelementptr inbounds [16 x i32], [16 x i32]* %1870, i64 0, i64 8, !dbg !1453
  %1872 = load i32, i32* %1871, align 4, !dbg !1453
  %1873 = xor i32 %1868, %1872, !dbg !1453
  %1874 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1875 = bitcast %union.CHAR64LONG16* %1874 to [16 x i32]*, !dbg !1453
  %1876 = getelementptr inbounds [16 x i32], [16 x i32]* %1875, i64 0, i64 2, !dbg !1453
  %1877 = load i32, i32* %1876, align 4, !dbg !1453
  %1878 = xor i32 %1873, %1877, !dbg !1453
  %1879 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1880 = bitcast %union.CHAR64LONG16* %1879 to [16 x i32]*, !dbg !1453
  %1881 = getelementptr inbounds [16 x i32], [16 x i32]* %1880, i64 0, i64 0, !dbg !1453
  %1882 = load i32, i32* %1881, align 4, !dbg !1453
  %1883 = xor i32 %1878, %1882, !dbg !1453
  %1884 = shl i32 %1883, 1, !dbg !1453
  %1885 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1886 = bitcast %union.CHAR64LONG16* %1885 to [16 x i32]*, !dbg !1453
  %1887 = getelementptr inbounds [16 x i32], [16 x i32]* %1886, i64 0, i64 13, !dbg !1453
  %1888 = load i32, i32* %1887, align 4, !dbg !1453
  %1889 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1890 = bitcast %union.CHAR64LONG16* %1889 to [16 x i32]*, !dbg !1453
  %1891 = getelementptr inbounds [16 x i32], [16 x i32]* %1890, i64 0, i64 8, !dbg !1453
  %1892 = load i32, i32* %1891, align 4, !dbg !1453
  %1893 = xor i32 %1888, %1892, !dbg !1453
  %1894 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1895 = bitcast %union.CHAR64LONG16* %1894 to [16 x i32]*, !dbg !1453
  %1896 = getelementptr inbounds [16 x i32], [16 x i32]* %1895, i64 0, i64 2, !dbg !1453
  %1897 = load i32, i32* %1896, align 4, !dbg !1453
  %1898 = xor i32 %1893, %1897, !dbg !1453
  %1899 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1900 = bitcast %union.CHAR64LONG16* %1899 to [16 x i32]*, !dbg !1453
  %1901 = getelementptr inbounds [16 x i32], [16 x i32]* %1900, i64 0, i64 0, !dbg !1453
  %1902 = load i32, i32* %1901, align 4, !dbg !1453
  %1903 = xor i32 %1898, %1902, !dbg !1453
  %1904 = lshr i32 %1903, 31, !dbg !1453
  %1905 = or i32 %1884, %1904, !dbg !1453
  %1906 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1453
  %1907 = bitcast %union.CHAR64LONG16* %1906 to [16 x i32]*, !dbg !1453
  %1908 = getelementptr inbounds [16 x i32], [16 x i32]* %1907, i64 0, i64 0, !dbg !1453
  store i32 %1905, i32* %1908, align 4, !dbg !1453
  %1909 = add i32 %1864, %1905, !dbg !1453
  %1910 = add i32 %1909, 1859775393, !dbg !1453
  %1911 = load i32, i32* %8, align 4, !dbg !1453
  %1912 = shl i32 %1911, 5, !dbg !1453
  %1913 = load i32, i32* %8, align 4, !dbg !1453
  %1914 = lshr i32 %1913, 27, !dbg !1453
  %1915 = or i32 %1912, %1914, !dbg !1453
  %1916 = add i32 %1910, %1915, !dbg !1453
  %1917 = load i32, i32* %7, align 4, !dbg !1453
  %1918 = add i32 %1917, %1916, !dbg !1453
  store i32 %1918, i32* %7, align 4, !dbg !1453
  %1919 = load i32, i32* %9, align 4, !dbg !1453
  %1920 = shl i32 %1919, 30, !dbg !1453
  %1921 = load i32, i32* %9, align 4, !dbg !1453
  %1922 = lshr i32 %1921, 2, !dbg !1453
  %1923 = or i32 %1920, %1922, !dbg !1453
  store i32 %1923, i32* %9, align 4, !dbg !1453
  %1924 = load i32, i32* %8, align 4, !dbg !1454
  %1925 = load i32, i32* %9, align 4, !dbg !1454
  %1926 = xor i32 %1924, %1925, !dbg !1454
  %1927 = load i32, i32* %5, align 4, !dbg !1454
  %1928 = xor i32 %1926, %1927, !dbg !1454
  %1929 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1930 = bitcast %union.CHAR64LONG16* %1929 to [16 x i32]*, !dbg !1454
  %1931 = getelementptr inbounds [16 x i32], [16 x i32]* %1930, i64 0, i64 14, !dbg !1454
  %1932 = load i32, i32* %1931, align 4, !dbg !1454
  %1933 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1934 = bitcast %union.CHAR64LONG16* %1933 to [16 x i32]*, !dbg !1454
  %1935 = getelementptr inbounds [16 x i32], [16 x i32]* %1934, i64 0, i64 9, !dbg !1454
  %1936 = load i32, i32* %1935, align 4, !dbg !1454
  %1937 = xor i32 %1932, %1936, !dbg !1454
  %1938 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1939 = bitcast %union.CHAR64LONG16* %1938 to [16 x i32]*, !dbg !1454
  %1940 = getelementptr inbounds [16 x i32], [16 x i32]* %1939, i64 0, i64 3, !dbg !1454
  %1941 = load i32, i32* %1940, align 4, !dbg !1454
  %1942 = xor i32 %1937, %1941, !dbg !1454
  %1943 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1944 = bitcast %union.CHAR64LONG16* %1943 to [16 x i32]*, !dbg !1454
  %1945 = getelementptr inbounds [16 x i32], [16 x i32]* %1944, i64 0, i64 1, !dbg !1454
  %1946 = load i32, i32* %1945, align 4, !dbg !1454
  %1947 = xor i32 %1942, %1946, !dbg !1454
  %1948 = shl i32 %1947, 1, !dbg !1454
  %1949 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1950 = bitcast %union.CHAR64LONG16* %1949 to [16 x i32]*, !dbg !1454
  %1951 = getelementptr inbounds [16 x i32], [16 x i32]* %1950, i64 0, i64 14, !dbg !1454
  %1952 = load i32, i32* %1951, align 4, !dbg !1454
  %1953 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1954 = bitcast %union.CHAR64LONG16* %1953 to [16 x i32]*, !dbg !1454
  %1955 = getelementptr inbounds [16 x i32], [16 x i32]* %1954, i64 0, i64 9, !dbg !1454
  %1956 = load i32, i32* %1955, align 4, !dbg !1454
  %1957 = xor i32 %1952, %1956, !dbg !1454
  %1958 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1959 = bitcast %union.CHAR64LONG16* %1958 to [16 x i32]*, !dbg !1454
  %1960 = getelementptr inbounds [16 x i32], [16 x i32]* %1959, i64 0, i64 3, !dbg !1454
  %1961 = load i32, i32* %1960, align 4, !dbg !1454
  %1962 = xor i32 %1957, %1961, !dbg !1454
  %1963 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1964 = bitcast %union.CHAR64LONG16* %1963 to [16 x i32]*, !dbg !1454
  %1965 = getelementptr inbounds [16 x i32], [16 x i32]* %1964, i64 0, i64 1, !dbg !1454
  %1966 = load i32, i32* %1965, align 4, !dbg !1454
  %1967 = xor i32 %1962, %1966, !dbg !1454
  %1968 = lshr i32 %1967, 31, !dbg !1454
  %1969 = or i32 %1948, %1968, !dbg !1454
  %1970 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1454
  %1971 = bitcast %union.CHAR64LONG16* %1970 to [16 x i32]*, !dbg !1454
  %1972 = getelementptr inbounds [16 x i32], [16 x i32]* %1971, i64 0, i64 1, !dbg !1454
  store i32 %1969, i32* %1972, align 4, !dbg !1454
  %1973 = add i32 %1928, %1969, !dbg !1454
  %1974 = add i32 %1973, 1859775393, !dbg !1454
  %1975 = load i32, i32* %7, align 4, !dbg !1454
  %1976 = shl i32 %1975, 5, !dbg !1454
  %1977 = load i32, i32* %7, align 4, !dbg !1454
  %1978 = lshr i32 %1977, 27, !dbg !1454
  %1979 = or i32 %1976, %1978, !dbg !1454
  %1980 = add i32 %1974, %1979, !dbg !1454
  %1981 = load i32, i32* %6, align 4, !dbg !1454
  %1982 = add i32 %1981, %1980, !dbg !1454
  store i32 %1982, i32* %6, align 4, !dbg !1454
  %1983 = load i32, i32* %8, align 4, !dbg !1454
  %1984 = shl i32 %1983, 30, !dbg !1454
  %1985 = load i32, i32* %8, align 4, !dbg !1454
  %1986 = lshr i32 %1985, 2, !dbg !1454
  %1987 = or i32 %1984, %1986, !dbg !1454
  store i32 %1987, i32* %8, align 4, !dbg !1454
  %1988 = load i32, i32* %7, align 4, !dbg !1455
  %1989 = load i32, i32* %8, align 4, !dbg !1455
  %1990 = xor i32 %1988, %1989, !dbg !1455
  %1991 = load i32, i32* %9, align 4, !dbg !1455
  %1992 = xor i32 %1990, %1991, !dbg !1455
  %1993 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %1994 = bitcast %union.CHAR64LONG16* %1993 to [16 x i32]*, !dbg !1455
  %1995 = getelementptr inbounds [16 x i32], [16 x i32]* %1994, i64 0, i64 15, !dbg !1455
  %1996 = load i32, i32* %1995, align 4, !dbg !1455
  %1997 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %1998 = bitcast %union.CHAR64LONG16* %1997 to [16 x i32]*, !dbg !1455
  %1999 = getelementptr inbounds [16 x i32], [16 x i32]* %1998, i64 0, i64 10, !dbg !1455
  %2000 = load i32, i32* %1999, align 4, !dbg !1455
  %2001 = xor i32 %1996, %2000, !dbg !1455
  %2002 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2003 = bitcast %union.CHAR64LONG16* %2002 to [16 x i32]*, !dbg !1455
  %2004 = getelementptr inbounds [16 x i32], [16 x i32]* %2003, i64 0, i64 4, !dbg !1455
  %2005 = load i32, i32* %2004, align 4, !dbg !1455
  %2006 = xor i32 %2001, %2005, !dbg !1455
  %2007 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2008 = bitcast %union.CHAR64LONG16* %2007 to [16 x i32]*, !dbg !1455
  %2009 = getelementptr inbounds [16 x i32], [16 x i32]* %2008, i64 0, i64 2, !dbg !1455
  %2010 = load i32, i32* %2009, align 4, !dbg !1455
  %2011 = xor i32 %2006, %2010, !dbg !1455
  %2012 = shl i32 %2011, 1, !dbg !1455
  %2013 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2014 = bitcast %union.CHAR64LONG16* %2013 to [16 x i32]*, !dbg !1455
  %2015 = getelementptr inbounds [16 x i32], [16 x i32]* %2014, i64 0, i64 15, !dbg !1455
  %2016 = load i32, i32* %2015, align 4, !dbg !1455
  %2017 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2018 = bitcast %union.CHAR64LONG16* %2017 to [16 x i32]*, !dbg !1455
  %2019 = getelementptr inbounds [16 x i32], [16 x i32]* %2018, i64 0, i64 10, !dbg !1455
  %2020 = load i32, i32* %2019, align 4, !dbg !1455
  %2021 = xor i32 %2016, %2020, !dbg !1455
  %2022 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2023 = bitcast %union.CHAR64LONG16* %2022 to [16 x i32]*, !dbg !1455
  %2024 = getelementptr inbounds [16 x i32], [16 x i32]* %2023, i64 0, i64 4, !dbg !1455
  %2025 = load i32, i32* %2024, align 4, !dbg !1455
  %2026 = xor i32 %2021, %2025, !dbg !1455
  %2027 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2028 = bitcast %union.CHAR64LONG16* %2027 to [16 x i32]*, !dbg !1455
  %2029 = getelementptr inbounds [16 x i32], [16 x i32]* %2028, i64 0, i64 2, !dbg !1455
  %2030 = load i32, i32* %2029, align 4, !dbg !1455
  %2031 = xor i32 %2026, %2030, !dbg !1455
  %2032 = lshr i32 %2031, 31, !dbg !1455
  %2033 = or i32 %2012, %2032, !dbg !1455
  %2034 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1455
  %2035 = bitcast %union.CHAR64LONG16* %2034 to [16 x i32]*, !dbg !1455
  %2036 = getelementptr inbounds [16 x i32], [16 x i32]* %2035, i64 0, i64 2, !dbg !1455
  store i32 %2033, i32* %2036, align 4, !dbg !1455
  %2037 = add i32 %1992, %2033, !dbg !1455
  %2038 = add i32 %2037, 1859775393, !dbg !1455
  %2039 = load i32, i32* %6, align 4, !dbg !1455
  %2040 = shl i32 %2039, 5, !dbg !1455
  %2041 = load i32, i32* %6, align 4, !dbg !1455
  %2042 = lshr i32 %2041, 27, !dbg !1455
  %2043 = or i32 %2040, %2042, !dbg !1455
  %2044 = add i32 %2038, %2043, !dbg !1455
  %2045 = load i32, i32* %5, align 4, !dbg !1455
  %2046 = add i32 %2045, %2044, !dbg !1455
  store i32 %2046, i32* %5, align 4, !dbg !1455
  %2047 = load i32, i32* %7, align 4, !dbg !1455
  %2048 = shl i32 %2047, 30, !dbg !1455
  %2049 = load i32, i32* %7, align 4, !dbg !1455
  %2050 = lshr i32 %2049, 2, !dbg !1455
  %2051 = or i32 %2048, %2050, !dbg !1455
  store i32 %2051, i32* %7, align 4, !dbg !1455
  %2052 = load i32, i32* %6, align 4, !dbg !1456
  %2053 = load i32, i32* %7, align 4, !dbg !1456
  %2054 = xor i32 %2052, %2053, !dbg !1456
  %2055 = load i32, i32* %8, align 4, !dbg !1456
  %2056 = xor i32 %2054, %2055, !dbg !1456
  %2057 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2058 = bitcast %union.CHAR64LONG16* %2057 to [16 x i32]*, !dbg !1456
  %2059 = getelementptr inbounds [16 x i32], [16 x i32]* %2058, i64 0, i64 0, !dbg !1456
  %2060 = load i32, i32* %2059, align 4, !dbg !1456
  %2061 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2062 = bitcast %union.CHAR64LONG16* %2061 to [16 x i32]*, !dbg !1456
  %2063 = getelementptr inbounds [16 x i32], [16 x i32]* %2062, i64 0, i64 11, !dbg !1456
  %2064 = load i32, i32* %2063, align 4, !dbg !1456
  %2065 = xor i32 %2060, %2064, !dbg !1456
  %2066 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2067 = bitcast %union.CHAR64LONG16* %2066 to [16 x i32]*, !dbg !1456
  %2068 = getelementptr inbounds [16 x i32], [16 x i32]* %2067, i64 0, i64 5, !dbg !1456
  %2069 = load i32, i32* %2068, align 4, !dbg !1456
  %2070 = xor i32 %2065, %2069, !dbg !1456
  %2071 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2072 = bitcast %union.CHAR64LONG16* %2071 to [16 x i32]*, !dbg !1456
  %2073 = getelementptr inbounds [16 x i32], [16 x i32]* %2072, i64 0, i64 3, !dbg !1456
  %2074 = load i32, i32* %2073, align 4, !dbg !1456
  %2075 = xor i32 %2070, %2074, !dbg !1456
  %2076 = shl i32 %2075, 1, !dbg !1456
  %2077 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2078 = bitcast %union.CHAR64LONG16* %2077 to [16 x i32]*, !dbg !1456
  %2079 = getelementptr inbounds [16 x i32], [16 x i32]* %2078, i64 0, i64 0, !dbg !1456
  %2080 = load i32, i32* %2079, align 4, !dbg !1456
  %2081 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2082 = bitcast %union.CHAR64LONG16* %2081 to [16 x i32]*, !dbg !1456
  %2083 = getelementptr inbounds [16 x i32], [16 x i32]* %2082, i64 0, i64 11, !dbg !1456
  %2084 = load i32, i32* %2083, align 4, !dbg !1456
  %2085 = xor i32 %2080, %2084, !dbg !1456
  %2086 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2087 = bitcast %union.CHAR64LONG16* %2086 to [16 x i32]*, !dbg !1456
  %2088 = getelementptr inbounds [16 x i32], [16 x i32]* %2087, i64 0, i64 5, !dbg !1456
  %2089 = load i32, i32* %2088, align 4, !dbg !1456
  %2090 = xor i32 %2085, %2089, !dbg !1456
  %2091 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2092 = bitcast %union.CHAR64LONG16* %2091 to [16 x i32]*, !dbg !1456
  %2093 = getelementptr inbounds [16 x i32], [16 x i32]* %2092, i64 0, i64 3, !dbg !1456
  %2094 = load i32, i32* %2093, align 4, !dbg !1456
  %2095 = xor i32 %2090, %2094, !dbg !1456
  %2096 = lshr i32 %2095, 31, !dbg !1456
  %2097 = or i32 %2076, %2096, !dbg !1456
  %2098 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1456
  %2099 = bitcast %union.CHAR64LONG16* %2098 to [16 x i32]*, !dbg !1456
  %2100 = getelementptr inbounds [16 x i32], [16 x i32]* %2099, i64 0, i64 3, !dbg !1456
  store i32 %2097, i32* %2100, align 4, !dbg !1456
  %2101 = add i32 %2056, %2097, !dbg !1456
  %2102 = add i32 %2101, 1859775393, !dbg !1456
  %2103 = load i32, i32* %5, align 4, !dbg !1456
  %2104 = shl i32 %2103, 5, !dbg !1456
  %2105 = load i32, i32* %5, align 4, !dbg !1456
  %2106 = lshr i32 %2105, 27, !dbg !1456
  %2107 = or i32 %2104, %2106, !dbg !1456
  %2108 = add i32 %2102, %2107, !dbg !1456
  %2109 = load i32, i32* %9, align 4, !dbg !1456
  %2110 = add i32 %2109, %2108, !dbg !1456
  store i32 %2110, i32* %9, align 4, !dbg !1456
  %2111 = load i32, i32* %6, align 4, !dbg !1456
  %2112 = shl i32 %2111, 30, !dbg !1456
  %2113 = load i32, i32* %6, align 4, !dbg !1456
  %2114 = lshr i32 %2113, 2, !dbg !1456
  %2115 = or i32 %2112, %2114, !dbg !1456
  store i32 %2115, i32* %6, align 4, !dbg !1456
  %2116 = load i32, i32* %5, align 4, !dbg !1457
  %2117 = load i32, i32* %6, align 4, !dbg !1457
  %2118 = xor i32 %2116, %2117, !dbg !1457
  %2119 = load i32, i32* %7, align 4, !dbg !1457
  %2120 = xor i32 %2118, %2119, !dbg !1457
  %2121 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2122 = bitcast %union.CHAR64LONG16* %2121 to [16 x i32]*, !dbg !1457
  %2123 = getelementptr inbounds [16 x i32], [16 x i32]* %2122, i64 0, i64 1, !dbg !1457
  %2124 = load i32, i32* %2123, align 4, !dbg !1457
  %2125 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2126 = bitcast %union.CHAR64LONG16* %2125 to [16 x i32]*, !dbg !1457
  %2127 = getelementptr inbounds [16 x i32], [16 x i32]* %2126, i64 0, i64 12, !dbg !1457
  %2128 = load i32, i32* %2127, align 4, !dbg !1457
  %2129 = xor i32 %2124, %2128, !dbg !1457
  %2130 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2131 = bitcast %union.CHAR64LONG16* %2130 to [16 x i32]*, !dbg !1457
  %2132 = getelementptr inbounds [16 x i32], [16 x i32]* %2131, i64 0, i64 6, !dbg !1457
  %2133 = load i32, i32* %2132, align 4, !dbg !1457
  %2134 = xor i32 %2129, %2133, !dbg !1457
  %2135 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2136 = bitcast %union.CHAR64LONG16* %2135 to [16 x i32]*, !dbg !1457
  %2137 = getelementptr inbounds [16 x i32], [16 x i32]* %2136, i64 0, i64 4, !dbg !1457
  %2138 = load i32, i32* %2137, align 4, !dbg !1457
  %2139 = xor i32 %2134, %2138, !dbg !1457
  %2140 = shl i32 %2139, 1, !dbg !1457
  %2141 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2142 = bitcast %union.CHAR64LONG16* %2141 to [16 x i32]*, !dbg !1457
  %2143 = getelementptr inbounds [16 x i32], [16 x i32]* %2142, i64 0, i64 1, !dbg !1457
  %2144 = load i32, i32* %2143, align 4, !dbg !1457
  %2145 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2146 = bitcast %union.CHAR64LONG16* %2145 to [16 x i32]*, !dbg !1457
  %2147 = getelementptr inbounds [16 x i32], [16 x i32]* %2146, i64 0, i64 12, !dbg !1457
  %2148 = load i32, i32* %2147, align 4, !dbg !1457
  %2149 = xor i32 %2144, %2148, !dbg !1457
  %2150 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2151 = bitcast %union.CHAR64LONG16* %2150 to [16 x i32]*, !dbg !1457
  %2152 = getelementptr inbounds [16 x i32], [16 x i32]* %2151, i64 0, i64 6, !dbg !1457
  %2153 = load i32, i32* %2152, align 4, !dbg !1457
  %2154 = xor i32 %2149, %2153, !dbg !1457
  %2155 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2156 = bitcast %union.CHAR64LONG16* %2155 to [16 x i32]*, !dbg !1457
  %2157 = getelementptr inbounds [16 x i32], [16 x i32]* %2156, i64 0, i64 4, !dbg !1457
  %2158 = load i32, i32* %2157, align 4, !dbg !1457
  %2159 = xor i32 %2154, %2158, !dbg !1457
  %2160 = lshr i32 %2159, 31, !dbg !1457
  %2161 = or i32 %2140, %2160, !dbg !1457
  %2162 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1457
  %2163 = bitcast %union.CHAR64LONG16* %2162 to [16 x i32]*, !dbg !1457
  %2164 = getelementptr inbounds [16 x i32], [16 x i32]* %2163, i64 0, i64 4, !dbg !1457
  store i32 %2161, i32* %2164, align 4, !dbg !1457
  %2165 = add i32 %2120, %2161, !dbg !1457
  %2166 = add i32 %2165, 1859775393, !dbg !1457
  %2167 = load i32, i32* %9, align 4, !dbg !1457
  %2168 = shl i32 %2167, 5, !dbg !1457
  %2169 = load i32, i32* %9, align 4, !dbg !1457
  %2170 = lshr i32 %2169, 27, !dbg !1457
  %2171 = or i32 %2168, %2170, !dbg !1457
  %2172 = add i32 %2166, %2171, !dbg !1457
  %2173 = load i32, i32* %8, align 4, !dbg !1457
  %2174 = add i32 %2173, %2172, !dbg !1457
  store i32 %2174, i32* %8, align 4, !dbg !1457
  %2175 = load i32, i32* %5, align 4, !dbg !1457
  %2176 = shl i32 %2175, 30, !dbg !1457
  %2177 = load i32, i32* %5, align 4, !dbg !1457
  %2178 = lshr i32 %2177, 2, !dbg !1457
  %2179 = or i32 %2176, %2178, !dbg !1457
  store i32 %2179, i32* %5, align 4, !dbg !1457
  %2180 = load i32, i32* %9, align 4, !dbg !1458
  %2181 = load i32, i32* %5, align 4, !dbg !1458
  %2182 = xor i32 %2180, %2181, !dbg !1458
  %2183 = load i32, i32* %6, align 4, !dbg !1458
  %2184 = xor i32 %2182, %2183, !dbg !1458
  %2185 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2186 = bitcast %union.CHAR64LONG16* %2185 to [16 x i32]*, !dbg !1458
  %2187 = getelementptr inbounds [16 x i32], [16 x i32]* %2186, i64 0, i64 2, !dbg !1458
  %2188 = load i32, i32* %2187, align 4, !dbg !1458
  %2189 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2190 = bitcast %union.CHAR64LONG16* %2189 to [16 x i32]*, !dbg !1458
  %2191 = getelementptr inbounds [16 x i32], [16 x i32]* %2190, i64 0, i64 13, !dbg !1458
  %2192 = load i32, i32* %2191, align 4, !dbg !1458
  %2193 = xor i32 %2188, %2192, !dbg !1458
  %2194 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2195 = bitcast %union.CHAR64LONG16* %2194 to [16 x i32]*, !dbg !1458
  %2196 = getelementptr inbounds [16 x i32], [16 x i32]* %2195, i64 0, i64 7, !dbg !1458
  %2197 = load i32, i32* %2196, align 4, !dbg !1458
  %2198 = xor i32 %2193, %2197, !dbg !1458
  %2199 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2200 = bitcast %union.CHAR64LONG16* %2199 to [16 x i32]*, !dbg !1458
  %2201 = getelementptr inbounds [16 x i32], [16 x i32]* %2200, i64 0, i64 5, !dbg !1458
  %2202 = load i32, i32* %2201, align 4, !dbg !1458
  %2203 = xor i32 %2198, %2202, !dbg !1458
  %2204 = shl i32 %2203, 1, !dbg !1458
  %2205 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2206 = bitcast %union.CHAR64LONG16* %2205 to [16 x i32]*, !dbg !1458
  %2207 = getelementptr inbounds [16 x i32], [16 x i32]* %2206, i64 0, i64 2, !dbg !1458
  %2208 = load i32, i32* %2207, align 4, !dbg !1458
  %2209 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2210 = bitcast %union.CHAR64LONG16* %2209 to [16 x i32]*, !dbg !1458
  %2211 = getelementptr inbounds [16 x i32], [16 x i32]* %2210, i64 0, i64 13, !dbg !1458
  %2212 = load i32, i32* %2211, align 4, !dbg !1458
  %2213 = xor i32 %2208, %2212, !dbg !1458
  %2214 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2215 = bitcast %union.CHAR64LONG16* %2214 to [16 x i32]*, !dbg !1458
  %2216 = getelementptr inbounds [16 x i32], [16 x i32]* %2215, i64 0, i64 7, !dbg !1458
  %2217 = load i32, i32* %2216, align 4, !dbg !1458
  %2218 = xor i32 %2213, %2217, !dbg !1458
  %2219 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2220 = bitcast %union.CHAR64LONG16* %2219 to [16 x i32]*, !dbg !1458
  %2221 = getelementptr inbounds [16 x i32], [16 x i32]* %2220, i64 0, i64 5, !dbg !1458
  %2222 = load i32, i32* %2221, align 4, !dbg !1458
  %2223 = xor i32 %2218, %2222, !dbg !1458
  %2224 = lshr i32 %2223, 31, !dbg !1458
  %2225 = or i32 %2204, %2224, !dbg !1458
  %2226 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1458
  %2227 = bitcast %union.CHAR64LONG16* %2226 to [16 x i32]*, !dbg !1458
  %2228 = getelementptr inbounds [16 x i32], [16 x i32]* %2227, i64 0, i64 5, !dbg !1458
  store i32 %2225, i32* %2228, align 4, !dbg !1458
  %2229 = add i32 %2184, %2225, !dbg !1458
  %2230 = add i32 %2229, 1859775393, !dbg !1458
  %2231 = load i32, i32* %8, align 4, !dbg !1458
  %2232 = shl i32 %2231, 5, !dbg !1458
  %2233 = load i32, i32* %8, align 4, !dbg !1458
  %2234 = lshr i32 %2233, 27, !dbg !1458
  %2235 = or i32 %2232, %2234, !dbg !1458
  %2236 = add i32 %2230, %2235, !dbg !1458
  %2237 = load i32, i32* %7, align 4, !dbg !1458
  %2238 = add i32 %2237, %2236, !dbg !1458
  store i32 %2238, i32* %7, align 4, !dbg !1458
  %2239 = load i32, i32* %9, align 4, !dbg !1458
  %2240 = shl i32 %2239, 30, !dbg !1458
  %2241 = load i32, i32* %9, align 4, !dbg !1458
  %2242 = lshr i32 %2241, 2, !dbg !1458
  %2243 = or i32 %2240, %2242, !dbg !1458
  store i32 %2243, i32* %9, align 4, !dbg !1458
  %2244 = load i32, i32* %8, align 4, !dbg !1459
  %2245 = load i32, i32* %9, align 4, !dbg !1459
  %2246 = xor i32 %2244, %2245, !dbg !1459
  %2247 = load i32, i32* %5, align 4, !dbg !1459
  %2248 = xor i32 %2246, %2247, !dbg !1459
  %2249 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2250 = bitcast %union.CHAR64LONG16* %2249 to [16 x i32]*, !dbg !1459
  %2251 = getelementptr inbounds [16 x i32], [16 x i32]* %2250, i64 0, i64 3, !dbg !1459
  %2252 = load i32, i32* %2251, align 4, !dbg !1459
  %2253 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2254 = bitcast %union.CHAR64LONG16* %2253 to [16 x i32]*, !dbg !1459
  %2255 = getelementptr inbounds [16 x i32], [16 x i32]* %2254, i64 0, i64 14, !dbg !1459
  %2256 = load i32, i32* %2255, align 4, !dbg !1459
  %2257 = xor i32 %2252, %2256, !dbg !1459
  %2258 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2259 = bitcast %union.CHAR64LONG16* %2258 to [16 x i32]*, !dbg !1459
  %2260 = getelementptr inbounds [16 x i32], [16 x i32]* %2259, i64 0, i64 8, !dbg !1459
  %2261 = load i32, i32* %2260, align 4, !dbg !1459
  %2262 = xor i32 %2257, %2261, !dbg !1459
  %2263 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2264 = bitcast %union.CHAR64LONG16* %2263 to [16 x i32]*, !dbg !1459
  %2265 = getelementptr inbounds [16 x i32], [16 x i32]* %2264, i64 0, i64 6, !dbg !1459
  %2266 = load i32, i32* %2265, align 4, !dbg !1459
  %2267 = xor i32 %2262, %2266, !dbg !1459
  %2268 = shl i32 %2267, 1, !dbg !1459
  %2269 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2270 = bitcast %union.CHAR64LONG16* %2269 to [16 x i32]*, !dbg !1459
  %2271 = getelementptr inbounds [16 x i32], [16 x i32]* %2270, i64 0, i64 3, !dbg !1459
  %2272 = load i32, i32* %2271, align 4, !dbg !1459
  %2273 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2274 = bitcast %union.CHAR64LONG16* %2273 to [16 x i32]*, !dbg !1459
  %2275 = getelementptr inbounds [16 x i32], [16 x i32]* %2274, i64 0, i64 14, !dbg !1459
  %2276 = load i32, i32* %2275, align 4, !dbg !1459
  %2277 = xor i32 %2272, %2276, !dbg !1459
  %2278 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2279 = bitcast %union.CHAR64LONG16* %2278 to [16 x i32]*, !dbg !1459
  %2280 = getelementptr inbounds [16 x i32], [16 x i32]* %2279, i64 0, i64 8, !dbg !1459
  %2281 = load i32, i32* %2280, align 4, !dbg !1459
  %2282 = xor i32 %2277, %2281, !dbg !1459
  %2283 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2284 = bitcast %union.CHAR64LONG16* %2283 to [16 x i32]*, !dbg !1459
  %2285 = getelementptr inbounds [16 x i32], [16 x i32]* %2284, i64 0, i64 6, !dbg !1459
  %2286 = load i32, i32* %2285, align 4, !dbg !1459
  %2287 = xor i32 %2282, %2286, !dbg !1459
  %2288 = lshr i32 %2287, 31, !dbg !1459
  %2289 = or i32 %2268, %2288, !dbg !1459
  %2290 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1459
  %2291 = bitcast %union.CHAR64LONG16* %2290 to [16 x i32]*, !dbg !1459
  %2292 = getelementptr inbounds [16 x i32], [16 x i32]* %2291, i64 0, i64 6, !dbg !1459
  store i32 %2289, i32* %2292, align 4, !dbg !1459
  %2293 = add i32 %2248, %2289, !dbg !1459
  %2294 = add i32 %2293, 1859775393, !dbg !1459
  %2295 = load i32, i32* %7, align 4, !dbg !1459
  %2296 = shl i32 %2295, 5, !dbg !1459
  %2297 = load i32, i32* %7, align 4, !dbg !1459
  %2298 = lshr i32 %2297, 27, !dbg !1459
  %2299 = or i32 %2296, %2298, !dbg !1459
  %2300 = add i32 %2294, %2299, !dbg !1459
  %2301 = load i32, i32* %6, align 4, !dbg !1459
  %2302 = add i32 %2301, %2300, !dbg !1459
  store i32 %2302, i32* %6, align 4, !dbg !1459
  %2303 = load i32, i32* %8, align 4, !dbg !1459
  %2304 = shl i32 %2303, 30, !dbg !1459
  %2305 = load i32, i32* %8, align 4, !dbg !1459
  %2306 = lshr i32 %2305, 2, !dbg !1459
  %2307 = or i32 %2304, %2306, !dbg !1459
  store i32 %2307, i32* %8, align 4, !dbg !1459
  %2308 = load i32, i32* %7, align 4, !dbg !1460
  %2309 = load i32, i32* %8, align 4, !dbg !1460
  %2310 = xor i32 %2308, %2309, !dbg !1460
  %2311 = load i32, i32* %9, align 4, !dbg !1460
  %2312 = xor i32 %2310, %2311, !dbg !1460
  %2313 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2314 = bitcast %union.CHAR64LONG16* %2313 to [16 x i32]*, !dbg !1460
  %2315 = getelementptr inbounds [16 x i32], [16 x i32]* %2314, i64 0, i64 4, !dbg !1460
  %2316 = load i32, i32* %2315, align 4, !dbg !1460
  %2317 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2318 = bitcast %union.CHAR64LONG16* %2317 to [16 x i32]*, !dbg !1460
  %2319 = getelementptr inbounds [16 x i32], [16 x i32]* %2318, i64 0, i64 15, !dbg !1460
  %2320 = load i32, i32* %2319, align 4, !dbg !1460
  %2321 = xor i32 %2316, %2320, !dbg !1460
  %2322 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2323 = bitcast %union.CHAR64LONG16* %2322 to [16 x i32]*, !dbg !1460
  %2324 = getelementptr inbounds [16 x i32], [16 x i32]* %2323, i64 0, i64 9, !dbg !1460
  %2325 = load i32, i32* %2324, align 4, !dbg !1460
  %2326 = xor i32 %2321, %2325, !dbg !1460
  %2327 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2328 = bitcast %union.CHAR64LONG16* %2327 to [16 x i32]*, !dbg !1460
  %2329 = getelementptr inbounds [16 x i32], [16 x i32]* %2328, i64 0, i64 7, !dbg !1460
  %2330 = load i32, i32* %2329, align 4, !dbg !1460
  %2331 = xor i32 %2326, %2330, !dbg !1460
  %2332 = shl i32 %2331, 1, !dbg !1460
  %2333 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2334 = bitcast %union.CHAR64LONG16* %2333 to [16 x i32]*, !dbg !1460
  %2335 = getelementptr inbounds [16 x i32], [16 x i32]* %2334, i64 0, i64 4, !dbg !1460
  %2336 = load i32, i32* %2335, align 4, !dbg !1460
  %2337 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2338 = bitcast %union.CHAR64LONG16* %2337 to [16 x i32]*, !dbg !1460
  %2339 = getelementptr inbounds [16 x i32], [16 x i32]* %2338, i64 0, i64 15, !dbg !1460
  %2340 = load i32, i32* %2339, align 4, !dbg !1460
  %2341 = xor i32 %2336, %2340, !dbg !1460
  %2342 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2343 = bitcast %union.CHAR64LONG16* %2342 to [16 x i32]*, !dbg !1460
  %2344 = getelementptr inbounds [16 x i32], [16 x i32]* %2343, i64 0, i64 9, !dbg !1460
  %2345 = load i32, i32* %2344, align 4, !dbg !1460
  %2346 = xor i32 %2341, %2345, !dbg !1460
  %2347 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2348 = bitcast %union.CHAR64LONG16* %2347 to [16 x i32]*, !dbg !1460
  %2349 = getelementptr inbounds [16 x i32], [16 x i32]* %2348, i64 0, i64 7, !dbg !1460
  %2350 = load i32, i32* %2349, align 4, !dbg !1460
  %2351 = xor i32 %2346, %2350, !dbg !1460
  %2352 = lshr i32 %2351, 31, !dbg !1460
  %2353 = or i32 %2332, %2352, !dbg !1460
  %2354 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1460
  %2355 = bitcast %union.CHAR64LONG16* %2354 to [16 x i32]*, !dbg !1460
  %2356 = getelementptr inbounds [16 x i32], [16 x i32]* %2355, i64 0, i64 7, !dbg !1460
  store i32 %2353, i32* %2356, align 4, !dbg !1460
  %2357 = add i32 %2312, %2353, !dbg !1460
  %2358 = add i32 %2357, 1859775393, !dbg !1460
  %2359 = load i32, i32* %6, align 4, !dbg !1460
  %2360 = shl i32 %2359, 5, !dbg !1460
  %2361 = load i32, i32* %6, align 4, !dbg !1460
  %2362 = lshr i32 %2361, 27, !dbg !1460
  %2363 = or i32 %2360, %2362, !dbg !1460
  %2364 = add i32 %2358, %2363, !dbg !1460
  %2365 = load i32, i32* %5, align 4, !dbg !1460
  %2366 = add i32 %2365, %2364, !dbg !1460
  store i32 %2366, i32* %5, align 4, !dbg !1460
  %2367 = load i32, i32* %7, align 4, !dbg !1460
  %2368 = shl i32 %2367, 30, !dbg !1460
  %2369 = load i32, i32* %7, align 4, !dbg !1460
  %2370 = lshr i32 %2369, 2, !dbg !1460
  %2371 = or i32 %2368, %2370, !dbg !1460
  store i32 %2371, i32* %7, align 4, !dbg !1460
  %2372 = load i32, i32* %6, align 4, !dbg !1461
  %2373 = load i32, i32* %7, align 4, !dbg !1461
  %2374 = or i32 %2372, %2373, !dbg !1461
  %2375 = load i32, i32* %8, align 4, !dbg !1461
  %2376 = and i32 %2374, %2375, !dbg !1461
  %2377 = load i32, i32* %6, align 4, !dbg !1461
  %2378 = load i32, i32* %7, align 4, !dbg !1461
  %2379 = and i32 %2377, %2378, !dbg !1461
  %2380 = or i32 %2376, %2379, !dbg !1461
  %2381 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2382 = bitcast %union.CHAR64LONG16* %2381 to [16 x i32]*, !dbg !1461
  %2383 = getelementptr inbounds [16 x i32], [16 x i32]* %2382, i64 0, i64 5, !dbg !1461
  %2384 = load i32, i32* %2383, align 4, !dbg !1461
  %2385 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2386 = bitcast %union.CHAR64LONG16* %2385 to [16 x i32]*, !dbg !1461
  %2387 = getelementptr inbounds [16 x i32], [16 x i32]* %2386, i64 0, i64 0, !dbg !1461
  %2388 = load i32, i32* %2387, align 4, !dbg !1461
  %2389 = xor i32 %2384, %2388, !dbg !1461
  %2390 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2391 = bitcast %union.CHAR64LONG16* %2390 to [16 x i32]*, !dbg !1461
  %2392 = getelementptr inbounds [16 x i32], [16 x i32]* %2391, i64 0, i64 10, !dbg !1461
  %2393 = load i32, i32* %2392, align 4, !dbg !1461
  %2394 = xor i32 %2389, %2393, !dbg !1461
  %2395 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2396 = bitcast %union.CHAR64LONG16* %2395 to [16 x i32]*, !dbg !1461
  %2397 = getelementptr inbounds [16 x i32], [16 x i32]* %2396, i64 0, i64 8, !dbg !1461
  %2398 = load i32, i32* %2397, align 4, !dbg !1461
  %2399 = xor i32 %2394, %2398, !dbg !1461
  %2400 = shl i32 %2399, 1, !dbg !1461
  %2401 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2402 = bitcast %union.CHAR64LONG16* %2401 to [16 x i32]*, !dbg !1461
  %2403 = getelementptr inbounds [16 x i32], [16 x i32]* %2402, i64 0, i64 5, !dbg !1461
  %2404 = load i32, i32* %2403, align 4, !dbg !1461
  %2405 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2406 = bitcast %union.CHAR64LONG16* %2405 to [16 x i32]*, !dbg !1461
  %2407 = getelementptr inbounds [16 x i32], [16 x i32]* %2406, i64 0, i64 0, !dbg !1461
  %2408 = load i32, i32* %2407, align 4, !dbg !1461
  %2409 = xor i32 %2404, %2408, !dbg !1461
  %2410 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2411 = bitcast %union.CHAR64LONG16* %2410 to [16 x i32]*, !dbg !1461
  %2412 = getelementptr inbounds [16 x i32], [16 x i32]* %2411, i64 0, i64 10, !dbg !1461
  %2413 = load i32, i32* %2412, align 4, !dbg !1461
  %2414 = xor i32 %2409, %2413, !dbg !1461
  %2415 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2416 = bitcast %union.CHAR64LONG16* %2415 to [16 x i32]*, !dbg !1461
  %2417 = getelementptr inbounds [16 x i32], [16 x i32]* %2416, i64 0, i64 8, !dbg !1461
  %2418 = load i32, i32* %2417, align 4, !dbg !1461
  %2419 = xor i32 %2414, %2418, !dbg !1461
  %2420 = lshr i32 %2419, 31, !dbg !1461
  %2421 = or i32 %2400, %2420, !dbg !1461
  %2422 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1461
  %2423 = bitcast %union.CHAR64LONG16* %2422 to [16 x i32]*, !dbg !1461
  %2424 = getelementptr inbounds [16 x i32], [16 x i32]* %2423, i64 0, i64 8, !dbg !1461
  store i32 %2421, i32* %2424, align 4, !dbg !1461
  %2425 = add i32 %2380, %2421, !dbg !1461
  %2426 = add i32 %2425, -1894007588, !dbg !1461
  %2427 = load i32, i32* %5, align 4, !dbg !1461
  %2428 = shl i32 %2427, 5, !dbg !1461
  %2429 = load i32, i32* %5, align 4, !dbg !1461
  %2430 = lshr i32 %2429, 27, !dbg !1461
  %2431 = or i32 %2428, %2430, !dbg !1461
  %2432 = add i32 %2426, %2431, !dbg !1461
  %2433 = load i32, i32* %9, align 4, !dbg !1461
  %2434 = add i32 %2433, %2432, !dbg !1461
  store i32 %2434, i32* %9, align 4, !dbg !1461
  %2435 = load i32, i32* %6, align 4, !dbg !1461
  %2436 = shl i32 %2435, 30, !dbg !1461
  %2437 = load i32, i32* %6, align 4, !dbg !1461
  %2438 = lshr i32 %2437, 2, !dbg !1461
  %2439 = or i32 %2436, %2438, !dbg !1461
  store i32 %2439, i32* %6, align 4, !dbg !1461
  %2440 = load i32, i32* %5, align 4, !dbg !1462
  %2441 = load i32, i32* %6, align 4, !dbg !1462
  %2442 = or i32 %2440, %2441, !dbg !1462
  %2443 = load i32, i32* %7, align 4, !dbg !1462
  %2444 = and i32 %2442, %2443, !dbg !1462
  %2445 = load i32, i32* %5, align 4, !dbg !1462
  %2446 = load i32, i32* %6, align 4, !dbg !1462
  %2447 = and i32 %2445, %2446, !dbg !1462
  %2448 = or i32 %2444, %2447, !dbg !1462
  %2449 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2450 = bitcast %union.CHAR64LONG16* %2449 to [16 x i32]*, !dbg !1462
  %2451 = getelementptr inbounds [16 x i32], [16 x i32]* %2450, i64 0, i64 6, !dbg !1462
  %2452 = load i32, i32* %2451, align 4, !dbg !1462
  %2453 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2454 = bitcast %union.CHAR64LONG16* %2453 to [16 x i32]*, !dbg !1462
  %2455 = getelementptr inbounds [16 x i32], [16 x i32]* %2454, i64 0, i64 1, !dbg !1462
  %2456 = load i32, i32* %2455, align 4, !dbg !1462
  %2457 = xor i32 %2452, %2456, !dbg !1462
  %2458 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2459 = bitcast %union.CHAR64LONG16* %2458 to [16 x i32]*, !dbg !1462
  %2460 = getelementptr inbounds [16 x i32], [16 x i32]* %2459, i64 0, i64 11, !dbg !1462
  %2461 = load i32, i32* %2460, align 4, !dbg !1462
  %2462 = xor i32 %2457, %2461, !dbg !1462
  %2463 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2464 = bitcast %union.CHAR64LONG16* %2463 to [16 x i32]*, !dbg !1462
  %2465 = getelementptr inbounds [16 x i32], [16 x i32]* %2464, i64 0, i64 9, !dbg !1462
  %2466 = load i32, i32* %2465, align 4, !dbg !1462
  %2467 = xor i32 %2462, %2466, !dbg !1462
  %2468 = shl i32 %2467, 1, !dbg !1462
  %2469 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2470 = bitcast %union.CHAR64LONG16* %2469 to [16 x i32]*, !dbg !1462
  %2471 = getelementptr inbounds [16 x i32], [16 x i32]* %2470, i64 0, i64 6, !dbg !1462
  %2472 = load i32, i32* %2471, align 4, !dbg !1462
  %2473 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2474 = bitcast %union.CHAR64LONG16* %2473 to [16 x i32]*, !dbg !1462
  %2475 = getelementptr inbounds [16 x i32], [16 x i32]* %2474, i64 0, i64 1, !dbg !1462
  %2476 = load i32, i32* %2475, align 4, !dbg !1462
  %2477 = xor i32 %2472, %2476, !dbg !1462
  %2478 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2479 = bitcast %union.CHAR64LONG16* %2478 to [16 x i32]*, !dbg !1462
  %2480 = getelementptr inbounds [16 x i32], [16 x i32]* %2479, i64 0, i64 11, !dbg !1462
  %2481 = load i32, i32* %2480, align 4, !dbg !1462
  %2482 = xor i32 %2477, %2481, !dbg !1462
  %2483 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2484 = bitcast %union.CHAR64LONG16* %2483 to [16 x i32]*, !dbg !1462
  %2485 = getelementptr inbounds [16 x i32], [16 x i32]* %2484, i64 0, i64 9, !dbg !1462
  %2486 = load i32, i32* %2485, align 4, !dbg !1462
  %2487 = xor i32 %2482, %2486, !dbg !1462
  %2488 = lshr i32 %2487, 31, !dbg !1462
  %2489 = or i32 %2468, %2488, !dbg !1462
  %2490 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1462
  %2491 = bitcast %union.CHAR64LONG16* %2490 to [16 x i32]*, !dbg !1462
  %2492 = getelementptr inbounds [16 x i32], [16 x i32]* %2491, i64 0, i64 9, !dbg !1462
  store i32 %2489, i32* %2492, align 4, !dbg !1462
  %2493 = add i32 %2448, %2489, !dbg !1462
  %2494 = add i32 %2493, -1894007588, !dbg !1462
  %2495 = load i32, i32* %9, align 4, !dbg !1462
  %2496 = shl i32 %2495, 5, !dbg !1462
  %2497 = load i32, i32* %9, align 4, !dbg !1462
  %2498 = lshr i32 %2497, 27, !dbg !1462
  %2499 = or i32 %2496, %2498, !dbg !1462
  %2500 = add i32 %2494, %2499, !dbg !1462
  %2501 = load i32, i32* %8, align 4, !dbg !1462
  %2502 = add i32 %2501, %2500, !dbg !1462
  store i32 %2502, i32* %8, align 4, !dbg !1462
  %2503 = load i32, i32* %5, align 4, !dbg !1462
  %2504 = shl i32 %2503, 30, !dbg !1462
  %2505 = load i32, i32* %5, align 4, !dbg !1462
  %2506 = lshr i32 %2505, 2, !dbg !1462
  %2507 = or i32 %2504, %2506, !dbg !1462
  store i32 %2507, i32* %5, align 4, !dbg !1462
  %2508 = load i32, i32* %9, align 4, !dbg !1463
  %2509 = load i32, i32* %5, align 4, !dbg !1463
  %2510 = or i32 %2508, %2509, !dbg !1463
  %2511 = load i32, i32* %6, align 4, !dbg !1463
  %2512 = and i32 %2510, %2511, !dbg !1463
  %2513 = load i32, i32* %9, align 4, !dbg !1463
  %2514 = load i32, i32* %5, align 4, !dbg !1463
  %2515 = and i32 %2513, %2514, !dbg !1463
  %2516 = or i32 %2512, %2515, !dbg !1463
  %2517 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2518 = bitcast %union.CHAR64LONG16* %2517 to [16 x i32]*, !dbg !1463
  %2519 = getelementptr inbounds [16 x i32], [16 x i32]* %2518, i64 0, i64 7, !dbg !1463
  %2520 = load i32, i32* %2519, align 4, !dbg !1463
  %2521 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2522 = bitcast %union.CHAR64LONG16* %2521 to [16 x i32]*, !dbg !1463
  %2523 = getelementptr inbounds [16 x i32], [16 x i32]* %2522, i64 0, i64 2, !dbg !1463
  %2524 = load i32, i32* %2523, align 4, !dbg !1463
  %2525 = xor i32 %2520, %2524, !dbg !1463
  %2526 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2527 = bitcast %union.CHAR64LONG16* %2526 to [16 x i32]*, !dbg !1463
  %2528 = getelementptr inbounds [16 x i32], [16 x i32]* %2527, i64 0, i64 12, !dbg !1463
  %2529 = load i32, i32* %2528, align 4, !dbg !1463
  %2530 = xor i32 %2525, %2529, !dbg !1463
  %2531 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2532 = bitcast %union.CHAR64LONG16* %2531 to [16 x i32]*, !dbg !1463
  %2533 = getelementptr inbounds [16 x i32], [16 x i32]* %2532, i64 0, i64 10, !dbg !1463
  %2534 = load i32, i32* %2533, align 4, !dbg !1463
  %2535 = xor i32 %2530, %2534, !dbg !1463
  %2536 = shl i32 %2535, 1, !dbg !1463
  %2537 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2538 = bitcast %union.CHAR64LONG16* %2537 to [16 x i32]*, !dbg !1463
  %2539 = getelementptr inbounds [16 x i32], [16 x i32]* %2538, i64 0, i64 7, !dbg !1463
  %2540 = load i32, i32* %2539, align 4, !dbg !1463
  %2541 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2542 = bitcast %union.CHAR64LONG16* %2541 to [16 x i32]*, !dbg !1463
  %2543 = getelementptr inbounds [16 x i32], [16 x i32]* %2542, i64 0, i64 2, !dbg !1463
  %2544 = load i32, i32* %2543, align 4, !dbg !1463
  %2545 = xor i32 %2540, %2544, !dbg !1463
  %2546 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2547 = bitcast %union.CHAR64LONG16* %2546 to [16 x i32]*, !dbg !1463
  %2548 = getelementptr inbounds [16 x i32], [16 x i32]* %2547, i64 0, i64 12, !dbg !1463
  %2549 = load i32, i32* %2548, align 4, !dbg !1463
  %2550 = xor i32 %2545, %2549, !dbg !1463
  %2551 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2552 = bitcast %union.CHAR64LONG16* %2551 to [16 x i32]*, !dbg !1463
  %2553 = getelementptr inbounds [16 x i32], [16 x i32]* %2552, i64 0, i64 10, !dbg !1463
  %2554 = load i32, i32* %2553, align 4, !dbg !1463
  %2555 = xor i32 %2550, %2554, !dbg !1463
  %2556 = lshr i32 %2555, 31, !dbg !1463
  %2557 = or i32 %2536, %2556, !dbg !1463
  %2558 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1463
  %2559 = bitcast %union.CHAR64LONG16* %2558 to [16 x i32]*, !dbg !1463
  %2560 = getelementptr inbounds [16 x i32], [16 x i32]* %2559, i64 0, i64 10, !dbg !1463
  store i32 %2557, i32* %2560, align 4, !dbg !1463
  %2561 = add i32 %2516, %2557, !dbg !1463
  %2562 = add i32 %2561, -1894007588, !dbg !1463
  %2563 = load i32, i32* %8, align 4, !dbg !1463
  %2564 = shl i32 %2563, 5, !dbg !1463
  %2565 = load i32, i32* %8, align 4, !dbg !1463
  %2566 = lshr i32 %2565, 27, !dbg !1463
  %2567 = or i32 %2564, %2566, !dbg !1463
  %2568 = add i32 %2562, %2567, !dbg !1463
  %2569 = load i32, i32* %7, align 4, !dbg !1463
  %2570 = add i32 %2569, %2568, !dbg !1463
  store i32 %2570, i32* %7, align 4, !dbg !1463
  %2571 = load i32, i32* %9, align 4, !dbg !1463
  %2572 = shl i32 %2571, 30, !dbg !1463
  %2573 = load i32, i32* %9, align 4, !dbg !1463
  %2574 = lshr i32 %2573, 2, !dbg !1463
  %2575 = or i32 %2572, %2574, !dbg !1463
  store i32 %2575, i32* %9, align 4, !dbg !1463
  %2576 = load i32, i32* %8, align 4, !dbg !1464
  %2577 = load i32, i32* %9, align 4, !dbg !1464
  %2578 = or i32 %2576, %2577, !dbg !1464
  %2579 = load i32, i32* %5, align 4, !dbg !1464
  %2580 = and i32 %2578, %2579, !dbg !1464
  %2581 = load i32, i32* %8, align 4, !dbg !1464
  %2582 = load i32, i32* %9, align 4, !dbg !1464
  %2583 = and i32 %2581, %2582, !dbg !1464
  %2584 = or i32 %2580, %2583, !dbg !1464
  %2585 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2586 = bitcast %union.CHAR64LONG16* %2585 to [16 x i32]*, !dbg !1464
  %2587 = getelementptr inbounds [16 x i32], [16 x i32]* %2586, i64 0, i64 8, !dbg !1464
  %2588 = load i32, i32* %2587, align 4, !dbg !1464
  %2589 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2590 = bitcast %union.CHAR64LONG16* %2589 to [16 x i32]*, !dbg !1464
  %2591 = getelementptr inbounds [16 x i32], [16 x i32]* %2590, i64 0, i64 3, !dbg !1464
  %2592 = load i32, i32* %2591, align 4, !dbg !1464
  %2593 = xor i32 %2588, %2592, !dbg !1464
  %2594 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2595 = bitcast %union.CHAR64LONG16* %2594 to [16 x i32]*, !dbg !1464
  %2596 = getelementptr inbounds [16 x i32], [16 x i32]* %2595, i64 0, i64 13, !dbg !1464
  %2597 = load i32, i32* %2596, align 4, !dbg !1464
  %2598 = xor i32 %2593, %2597, !dbg !1464
  %2599 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2600 = bitcast %union.CHAR64LONG16* %2599 to [16 x i32]*, !dbg !1464
  %2601 = getelementptr inbounds [16 x i32], [16 x i32]* %2600, i64 0, i64 11, !dbg !1464
  %2602 = load i32, i32* %2601, align 4, !dbg !1464
  %2603 = xor i32 %2598, %2602, !dbg !1464
  %2604 = shl i32 %2603, 1, !dbg !1464
  %2605 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2606 = bitcast %union.CHAR64LONG16* %2605 to [16 x i32]*, !dbg !1464
  %2607 = getelementptr inbounds [16 x i32], [16 x i32]* %2606, i64 0, i64 8, !dbg !1464
  %2608 = load i32, i32* %2607, align 4, !dbg !1464
  %2609 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2610 = bitcast %union.CHAR64LONG16* %2609 to [16 x i32]*, !dbg !1464
  %2611 = getelementptr inbounds [16 x i32], [16 x i32]* %2610, i64 0, i64 3, !dbg !1464
  %2612 = load i32, i32* %2611, align 4, !dbg !1464
  %2613 = xor i32 %2608, %2612, !dbg !1464
  %2614 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2615 = bitcast %union.CHAR64LONG16* %2614 to [16 x i32]*, !dbg !1464
  %2616 = getelementptr inbounds [16 x i32], [16 x i32]* %2615, i64 0, i64 13, !dbg !1464
  %2617 = load i32, i32* %2616, align 4, !dbg !1464
  %2618 = xor i32 %2613, %2617, !dbg !1464
  %2619 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2620 = bitcast %union.CHAR64LONG16* %2619 to [16 x i32]*, !dbg !1464
  %2621 = getelementptr inbounds [16 x i32], [16 x i32]* %2620, i64 0, i64 11, !dbg !1464
  %2622 = load i32, i32* %2621, align 4, !dbg !1464
  %2623 = xor i32 %2618, %2622, !dbg !1464
  %2624 = lshr i32 %2623, 31, !dbg !1464
  %2625 = or i32 %2604, %2624, !dbg !1464
  %2626 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1464
  %2627 = bitcast %union.CHAR64LONG16* %2626 to [16 x i32]*, !dbg !1464
  %2628 = getelementptr inbounds [16 x i32], [16 x i32]* %2627, i64 0, i64 11, !dbg !1464
  store i32 %2625, i32* %2628, align 4, !dbg !1464
  %2629 = add i32 %2584, %2625, !dbg !1464
  %2630 = add i32 %2629, -1894007588, !dbg !1464
  %2631 = load i32, i32* %7, align 4, !dbg !1464
  %2632 = shl i32 %2631, 5, !dbg !1464
  %2633 = load i32, i32* %7, align 4, !dbg !1464
  %2634 = lshr i32 %2633, 27, !dbg !1464
  %2635 = or i32 %2632, %2634, !dbg !1464
  %2636 = add i32 %2630, %2635, !dbg !1464
  %2637 = load i32, i32* %6, align 4, !dbg !1464
  %2638 = add i32 %2637, %2636, !dbg !1464
  store i32 %2638, i32* %6, align 4, !dbg !1464
  %2639 = load i32, i32* %8, align 4, !dbg !1464
  %2640 = shl i32 %2639, 30, !dbg !1464
  %2641 = load i32, i32* %8, align 4, !dbg !1464
  %2642 = lshr i32 %2641, 2, !dbg !1464
  %2643 = or i32 %2640, %2642, !dbg !1464
  store i32 %2643, i32* %8, align 4, !dbg !1464
  %2644 = load i32, i32* %7, align 4, !dbg !1465
  %2645 = load i32, i32* %8, align 4, !dbg !1465
  %2646 = or i32 %2644, %2645, !dbg !1465
  %2647 = load i32, i32* %9, align 4, !dbg !1465
  %2648 = and i32 %2646, %2647, !dbg !1465
  %2649 = load i32, i32* %7, align 4, !dbg !1465
  %2650 = load i32, i32* %8, align 4, !dbg !1465
  %2651 = and i32 %2649, %2650, !dbg !1465
  %2652 = or i32 %2648, %2651, !dbg !1465
  %2653 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2654 = bitcast %union.CHAR64LONG16* %2653 to [16 x i32]*, !dbg !1465
  %2655 = getelementptr inbounds [16 x i32], [16 x i32]* %2654, i64 0, i64 9, !dbg !1465
  %2656 = load i32, i32* %2655, align 4, !dbg !1465
  %2657 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2658 = bitcast %union.CHAR64LONG16* %2657 to [16 x i32]*, !dbg !1465
  %2659 = getelementptr inbounds [16 x i32], [16 x i32]* %2658, i64 0, i64 4, !dbg !1465
  %2660 = load i32, i32* %2659, align 4, !dbg !1465
  %2661 = xor i32 %2656, %2660, !dbg !1465
  %2662 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2663 = bitcast %union.CHAR64LONG16* %2662 to [16 x i32]*, !dbg !1465
  %2664 = getelementptr inbounds [16 x i32], [16 x i32]* %2663, i64 0, i64 14, !dbg !1465
  %2665 = load i32, i32* %2664, align 4, !dbg !1465
  %2666 = xor i32 %2661, %2665, !dbg !1465
  %2667 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2668 = bitcast %union.CHAR64LONG16* %2667 to [16 x i32]*, !dbg !1465
  %2669 = getelementptr inbounds [16 x i32], [16 x i32]* %2668, i64 0, i64 12, !dbg !1465
  %2670 = load i32, i32* %2669, align 4, !dbg !1465
  %2671 = xor i32 %2666, %2670, !dbg !1465
  %2672 = shl i32 %2671, 1, !dbg !1465
  %2673 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2674 = bitcast %union.CHAR64LONG16* %2673 to [16 x i32]*, !dbg !1465
  %2675 = getelementptr inbounds [16 x i32], [16 x i32]* %2674, i64 0, i64 9, !dbg !1465
  %2676 = load i32, i32* %2675, align 4, !dbg !1465
  %2677 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2678 = bitcast %union.CHAR64LONG16* %2677 to [16 x i32]*, !dbg !1465
  %2679 = getelementptr inbounds [16 x i32], [16 x i32]* %2678, i64 0, i64 4, !dbg !1465
  %2680 = load i32, i32* %2679, align 4, !dbg !1465
  %2681 = xor i32 %2676, %2680, !dbg !1465
  %2682 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2683 = bitcast %union.CHAR64LONG16* %2682 to [16 x i32]*, !dbg !1465
  %2684 = getelementptr inbounds [16 x i32], [16 x i32]* %2683, i64 0, i64 14, !dbg !1465
  %2685 = load i32, i32* %2684, align 4, !dbg !1465
  %2686 = xor i32 %2681, %2685, !dbg !1465
  %2687 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2688 = bitcast %union.CHAR64LONG16* %2687 to [16 x i32]*, !dbg !1465
  %2689 = getelementptr inbounds [16 x i32], [16 x i32]* %2688, i64 0, i64 12, !dbg !1465
  %2690 = load i32, i32* %2689, align 4, !dbg !1465
  %2691 = xor i32 %2686, %2690, !dbg !1465
  %2692 = lshr i32 %2691, 31, !dbg !1465
  %2693 = or i32 %2672, %2692, !dbg !1465
  %2694 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1465
  %2695 = bitcast %union.CHAR64LONG16* %2694 to [16 x i32]*, !dbg !1465
  %2696 = getelementptr inbounds [16 x i32], [16 x i32]* %2695, i64 0, i64 12, !dbg !1465
  store i32 %2693, i32* %2696, align 4, !dbg !1465
  %2697 = add i32 %2652, %2693, !dbg !1465
  %2698 = add i32 %2697, -1894007588, !dbg !1465
  %2699 = load i32, i32* %6, align 4, !dbg !1465
  %2700 = shl i32 %2699, 5, !dbg !1465
  %2701 = load i32, i32* %6, align 4, !dbg !1465
  %2702 = lshr i32 %2701, 27, !dbg !1465
  %2703 = or i32 %2700, %2702, !dbg !1465
  %2704 = add i32 %2698, %2703, !dbg !1465
  %2705 = load i32, i32* %5, align 4, !dbg !1465
  %2706 = add i32 %2705, %2704, !dbg !1465
  store i32 %2706, i32* %5, align 4, !dbg !1465
  %2707 = load i32, i32* %7, align 4, !dbg !1465
  %2708 = shl i32 %2707, 30, !dbg !1465
  %2709 = load i32, i32* %7, align 4, !dbg !1465
  %2710 = lshr i32 %2709, 2, !dbg !1465
  %2711 = or i32 %2708, %2710, !dbg !1465
  store i32 %2711, i32* %7, align 4, !dbg !1465
  %2712 = load i32, i32* %6, align 4, !dbg !1466
  %2713 = load i32, i32* %7, align 4, !dbg !1466
  %2714 = or i32 %2712, %2713, !dbg !1466
  %2715 = load i32, i32* %8, align 4, !dbg !1466
  %2716 = and i32 %2714, %2715, !dbg !1466
  %2717 = load i32, i32* %6, align 4, !dbg !1466
  %2718 = load i32, i32* %7, align 4, !dbg !1466
  %2719 = and i32 %2717, %2718, !dbg !1466
  %2720 = or i32 %2716, %2719, !dbg !1466
  %2721 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2722 = bitcast %union.CHAR64LONG16* %2721 to [16 x i32]*, !dbg !1466
  %2723 = getelementptr inbounds [16 x i32], [16 x i32]* %2722, i64 0, i64 10, !dbg !1466
  %2724 = load i32, i32* %2723, align 4, !dbg !1466
  %2725 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2726 = bitcast %union.CHAR64LONG16* %2725 to [16 x i32]*, !dbg !1466
  %2727 = getelementptr inbounds [16 x i32], [16 x i32]* %2726, i64 0, i64 5, !dbg !1466
  %2728 = load i32, i32* %2727, align 4, !dbg !1466
  %2729 = xor i32 %2724, %2728, !dbg !1466
  %2730 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2731 = bitcast %union.CHAR64LONG16* %2730 to [16 x i32]*, !dbg !1466
  %2732 = getelementptr inbounds [16 x i32], [16 x i32]* %2731, i64 0, i64 15, !dbg !1466
  %2733 = load i32, i32* %2732, align 4, !dbg !1466
  %2734 = xor i32 %2729, %2733, !dbg !1466
  %2735 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2736 = bitcast %union.CHAR64LONG16* %2735 to [16 x i32]*, !dbg !1466
  %2737 = getelementptr inbounds [16 x i32], [16 x i32]* %2736, i64 0, i64 13, !dbg !1466
  %2738 = load i32, i32* %2737, align 4, !dbg !1466
  %2739 = xor i32 %2734, %2738, !dbg !1466
  %2740 = shl i32 %2739, 1, !dbg !1466
  %2741 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2742 = bitcast %union.CHAR64LONG16* %2741 to [16 x i32]*, !dbg !1466
  %2743 = getelementptr inbounds [16 x i32], [16 x i32]* %2742, i64 0, i64 10, !dbg !1466
  %2744 = load i32, i32* %2743, align 4, !dbg !1466
  %2745 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2746 = bitcast %union.CHAR64LONG16* %2745 to [16 x i32]*, !dbg !1466
  %2747 = getelementptr inbounds [16 x i32], [16 x i32]* %2746, i64 0, i64 5, !dbg !1466
  %2748 = load i32, i32* %2747, align 4, !dbg !1466
  %2749 = xor i32 %2744, %2748, !dbg !1466
  %2750 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2751 = bitcast %union.CHAR64LONG16* %2750 to [16 x i32]*, !dbg !1466
  %2752 = getelementptr inbounds [16 x i32], [16 x i32]* %2751, i64 0, i64 15, !dbg !1466
  %2753 = load i32, i32* %2752, align 4, !dbg !1466
  %2754 = xor i32 %2749, %2753, !dbg !1466
  %2755 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2756 = bitcast %union.CHAR64LONG16* %2755 to [16 x i32]*, !dbg !1466
  %2757 = getelementptr inbounds [16 x i32], [16 x i32]* %2756, i64 0, i64 13, !dbg !1466
  %2758 = load i32, i32* %2757, align 4, !dbg !1466
  %2759 = xor i32 %2754, %2758, !dbg !1466
  %2760 = lshr i32 %2759, 31, !dbg !1466
  %2761 = or i32 %2740, %2760, !dbg !1466
  %2762 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1466
  %2763 = bitcast %union.CHAR64LONG16* %2762 to [16 x i32]*, !dbg !1466
  %2764 = getelementptr inbounds [16 x i32], [16 x i32]* %2763, i64 0, i64 13, !dbg !1466
  store i32 %2761, i32* %2764, align 4, !dbg !1466
  %2765 = add i32 %2720, %2761, !dbg !1466
  %2766 = add i32 %2765, -1894007588, !dbg !1466
  %2767 = load i32, i32* %5, align 4, !dbg !1466
  %2768 = shl i32 %2767, 5, !dbg !1466
  %2769 = load i32, i32* %5, align 4, !dbg !1466
  %2770 = lshr i32 %2769, 27, !dbg !1466
  %2771 = or i32 %2768, %2770, !dbg !1466
  %2772 = add i32 %2766, %2771, !dbg !1466
  %2773 = load i32, i32* %9, align 4, !dbg !1466
  %2774 = add i32 %2773, %2772, !dbg !1466
  store i32 %2774, i32* %9, align 4, !dbg !1466
  %2775 = load i32, i32* %6, align 4, !dbg !1466
  %2776 = shl i32 %2775, 30, !dbg !1466
  %2777 = load i32, i32* %6, align 4, !dbg !1466
  %2778 = lshr i32 %2777, 2, !dbg !1466
  %2779 = or i32 %2776, %2778, !dbg !1466
  store i32 %2779, i32* %6, align 4, !dbg !1466
  %2780 = load i32, i32* %5, align 4, !dbg !1467
  %2781 = load i32, i32* %6, align 4, !dbg !1467
  %2782 = or i32 %2780, %2781, !dbg !1467
  %2783 = load i32, i32* %7, align 4, !dbg !1467
  %2784 = and i32 %2782, %2783, !dbg !1467
  %2785 = load i32, i32* %5, align 4, !dbg !1467
  %2786 = load i32, i32* %6, align 4, !dbg !1467
  %2787 = and i32 %2785, %2786, !dbg !1467
  %2788 = or i32 %2784, %2787, !dbg !1467
  %2789 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2790 = bitcast %union.CHAR64LONG16* %2789 to [16 x i32]*, !dbg !1467
  %2791 = getelementptr inbounds [16 x i32], [16 x i32]* %2790, i64 0, i64 11, !dbg !1467
  %2792 = load i32, i32* %2791, align 4, !dbg !1467
  %2793 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2794 = bitcast %union.CHAR64LONG16* %2793 to [16 x i32]*, !dbg !1467
  %2795 = getelementptr inbounds [16 x i32], [16 x i32]* %2794, i64 0, i64 6, !dbg !1467
  %2796 = load i32, i32* %2795, align 4, !dbg !1467
  %2797 = xor i32 %2792, %2796, !dbg !1467
  %2798 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2799 = bitcast %union.CHAR64LONG16* %2798 to [16 x i32]*, !dbg !1467
  %2800 = getelementptr inbounds [16 x i32], [16 x i32]* %2799, i64 0, i64 0, !dbg !1467
  %2801 = load i32, i32* %2800, align 4, !dbg !1467
  %2802 = xor i32 %2797, %2801, !dbg !1467
  %2803 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2804 = bitcast %union.CHAR64LONG16* %2803 to [16 x i32]*, !dbg !1467
  %2805 = getelementptr inbounds [16 x i32], [16 x i32]* %2804, i64 0, i64 14, !dbg !1467
  %2806 = load i32, i32* %2805, align 4, !dbg !1467
  %2807 = xor i32 %2802, %2806, !dbg !1467
  %2808 = shl i32 %2807, 1, !dbg !1467
  %2809 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2810 = bitcast %union.CHAR64LONG16* %2809 to [16 x i32]*, !dbg !1467
  %2811 = getelementptr inbounds [16 x i32], [16 x i32]* %2810, i64 0, i64 11, !dbg !1467
  %2812 = load i32, i32* %2811, align 4, !dbg !1467
  %2813 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2814 = bitcast %union.CHAR64LONG16* %2813 to [16 x i32]*, !dbg !1467
  %2815 = getelementptr inbounds [16 x i32], [16 x i32]* %2814, i64 0, i64 6, !dbg !1467
  %2816 = load i32, i32* %2815, align 4, !dbg !1467
  %2817 = xor i32 %2812, %2816, !dbg !1467
  %2818 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2819 = bitcast %union.CHAR64LONG16* %2818 to [16 x i32]*, !dbg !1467
  %2820 = getelementptr inbounds [16 x i32], [16 x i32]* %2819, i64 0, i64 0, !dbg !1467
  %2821 = load i32, i32* %2820, align 4, !dbg !1467
  %2822 = xor i32 %2817, %2821, !dbg !1467
  %2823 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2824 = bitcast %union.CHAR64LONG16* %2823 to [16 x i32]*, !dbg !1467
  %2825 = getelementptr inbounds [16 x i32], [16 x i32]* %2824, i64 0, i64 14, !dbg !1467
  %2826 = load i32, i32* %2825, align 4, !dbg !1467
  %2827 = xor i32 %2822, %2826, !dbg !1467
  %2828 = lshr i32 %2827, 31, !dbg !1467
  %2829 = or i32 %2808, %2828, !dbg !1467
  %2830 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1467
  %2831 = bitcast %union.CHAR64LONG16* %2830 to [16 x i32]*, !dbg !1467
  %2832 = getelementptr inbounds [16 x i32], [16 x i32]* %2831, i64 0, i64 14, !dbg !1467
  store i32 %2829, i32* %2832, align 4, !dbg !1467
  %2833 = add i32 %2788, %2829, !dbg !1467
  %2834 = add i32 %2833, -1894007588, !dbg !1467
  %2835 = load i32, i32* %9, align 4, !dbg !1467
  %2836 = shl i32 %2835, 5, !dbg !1467
  %2837 = load i32, i32* %9, align 4, !dbg !1467
  %2838 = lshr i32 %2837, 27, !dbg !1467
  %2839 = or i32 %2836, %2838, !dbg !1467
  %2840 = add i32 %2834, %2839, !dbg !1467
  %2841 = load i32, i32* %8, align 4, !dbg !1467
  %2842 = add i32 %2841, %2840, !dbg !1467
  store i32 %2842, i32* %8, align 4, !dbg !1467
  %2843 = load i32, i32* %5, align 4, !dbg !1467
  %2844 = shl i32 %2843, 30, !dbg !1467
  %2845 = load i32, i32* %5, align 4, !dbg !1467
  %2846 = lshr i32 %2845, 2, !dbg !1467
  %2847 = or i32 %2844, %2846, !dbg !1467
  store i32 %2847, i32* %5, align 4, !dbg !1467
  %2848 = load i32, i32* %9, align 4, !dbg !1468
  %2849 = load i32, i32* %5, align 4, !dbg !1468
  %2850 = or i32 %2848, %2849, !dbg !1468
  %2851 = load i32, i32* %6, align 4, !dbg !1468
  %2852 = and i32 %2850, %2851, !dbg !1468
  %2853 = load i32, i32* %9, align 4, !dbg !1468
  %2854 = load i32, i32* %5, align 4, !dbg !1468
  %2855 = and i32 %2853, %2854, !dbg !1468
  %2856 = or i32 %2852, %2855, !dbg !1468
  %2857 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2858 = bitcast %union.CHAR64LONG16* %2857 to [16 x i32]*, !dbg !1468
  %2859 = getelementptr inbounds [16 x i32], [16 x i32]* %2858, i64 0, i64 12, !dbg !1468
  %2860 = load i32, i32* %2859, align 4, !dbg !1468
  %2861 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2862 = bitcast %union.CHAR64LONG16* %2861 to [16 x i32]*, !dbg !1468
  %2863 = getelementptr inbounds [16 x i32], [16 x i32]* %2862, i64 0, i64 7, !dbg !1468
  %2864 = load i32, i32* %2863, align 4, !dbg !1468
  %2865 = xor i32 %2860, %2864, !dbg !1468
  %2866 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2867 = bitcast %union.CHAR64LONG16* %2866 to [16 x i32]*, !dbg !1468
  %2868 = getelementptr inbounds [16 x i32], [16 x i32]* %2867, i64 0, i64 1, !dbg !1468
  %2869 = load i32, i32* %2868, align 4, !dbg !1468
  %2870 = xor i32 %2865, %2869, !dbg !1468
  %2871 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2872 = bitcast %union.CHAR64LONG16* %2871 to [16 x i32]*, !dbg !1468
  %2873 = getelementptr inbounds [16 x i32], [16 x i32]* %2872, i64 0, i64 15, !dbg !1468
  %2874 = load i32, i32* %2873, align 4, !dbg !1468
  %2875 = xor i32 %2870, %2874, !dbg !1468
  %2876 = shl i32 %2875, 1, !dbg !1468
  %2877 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2878 = bitcast %union.CHAR64LONG16* %2877 to [16 x i32]*, !dbg !1468
  %2879 = getelementptr inbounds [16 x i32], [16 x i32]* %2878, i64 0, i64 12, !dbg !1468
  %2880 = load i32, i32* %2879, align 4, !dbg !1468
  %2881 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2882 = bitcast %union.CHAR64LONG16* %2881 to [16 x i32]*, !dbg !1468
  %2883 = getelementptr inbounds [16 x i32], [16 x i32]* %2882, i64 0, i64 7, !dbg !1468
  %2884 = load i32, i32* %2883, align 4, !dbg !1468
  %2885 = xor i32 %2880, %2884, !dbg !1468
  %2886 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2887 = bitcast %union.CHAR64LONG16* %2886 to [16 x i32]*, !dbg !1468
  %2888 = getelementptr inbounds [16 x i32], [16 x i32]* %2887, i64 0, i64 1, !dbg !1468
  %2889 = load i32, i32* %2888, align 4, !dbg !1468
  %2890 = xor i32 %2885, %2889, !dbg !1468
  %2891 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2892 = bitcast %union.CHAR64LONG16* %2891 to [16 x i32]*, !dbg !1468
  %2893 = getelementptr inbounds [16 x i32], [16 x i32]* %2892, i64 0, i64 15, !dbg !1468
  %2894 = load i32, i32* %2893, align 4, !dbg !1468
  %2895 = xor i32 %2890, %2894, !dbg !1468
  %2896 = lshr i32 %2895, 31, !dbg !1468
  %2897 = or i32 %2876, %2896, !dbg !1468
  %2898 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1468
  %2899 = bitcast %union.CHAR64LONG16* %2898 to [16 x i32]*, !dbg !1468
  %2900 = getelementptr inbounds [16 x i32], [16 x i32]* %2899, i64 0, i64 15, !dbg !1468
  store i32 %2897, i32* %2900, align 4, !dbg !1468
  %2901 = add i32 %2856, %2897, !dbg !1468
  %2902 = add i32 %2901, -1894007588, !dbg !1468
  %2903 = load i32, i32* %8, align 4, !dbg !1468
  %2904 = shl i32 %2903, 5, !dbg !1468
  %2905 = load i32, i32* %8, align 4, !dbg !1468
  %2906 = lshr i32 %2905, 27, !dbg !1468
  %2907 = or i32 %2904, %2906, !dbg !1468
  %2908 = add i32 %2902, %2907, !dbg !1468
  %2909 = load i32, i32* %7, align 4, !dbg !1468
  %2910 = add i32 %2909, %2908, !dbg !1468
  store i32 %2910, i32* %7, align 4, !dbg !1468
  %2911 = load i32, i32* %9, align 4, !dbg !1468
  %2912 = shl i32 %2911, 30, !dbg !1468
  %2913 = load i32, i32* %9, align 4, !dbg !1468
  %2914 = lshr i32 %2913, 2, !dbg !1468
  %2915 = or i32 %2912, %2914, !dbg !1468
  store i32 %2915, i32* %9, align 4, !dbg !1468
  %2916 = load i32, i32* %8, align 4, !dbg !1469
  %2917 = load i32, i32* %9, align 4, !dbg !1469
  %2918 = or i32 %2916, %2917, !dbg !1469
  %2919 = load i32, i32* %5, align 4, !dbg !1469
  %2920 = and i32 %2918, %2919, !dbg !1469
  %2921 = load i32, i32* %8, align 4, !dbg !1469
  %2922 = load i32, i32* %9, align 4, !dbg !1469
  %2923 = and i32 %2921, %2922, !dbg !1469
  %2924 = or i32 %2920, %2923, !dbg !1469
  %2925 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2926 = bitcast %union.CHAR64LONG16* %2925 to [16 x i32]*, !dbg !1469
  %2927 = getelementptr inbounds [16 x i32], [16 x i32]* %2926, i64 0, i64 13, !dbg !1469
  %2928 = load i32, i32* %2927, align 4, !dbg !1469
  %2929 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2930 = bitcast %union.CHAR64LONG16* %2929 to [16 x i32]*, !dbg !1469
  %2931 = getelementptr inbounds [16 x i32], [16 x i32]* %2930, i64 0, i64 8, !dbg !1469
  %2932 = load i32, i32* %2931, align 4, !dbg !1469
  %2933 = xor i32 %2928, %2932, !dbg !1469
  %2934 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2935 = bitcast %union.CHAR64LONG16* %2934 to [16 x i32]*, !dbg !1469
  %2936 = getelementptr inbounds [16 x i32], [16 x i32]* %2935, i64 0, i64 2, !dbg !1469
  %2937 = load i32, i32* %2936, align 4, !dbg !1469
  %2938 = xor i32 %2933, %2937, !dbg !1469
  %2939 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2940 = bitcast %union.CHAR64LONG16* %2939 to [16 x i32]*, !dbg !1469
  %2941 = getelementptr inbounds [16 x i32], [16 x i32]* %2940, i64 0, i64 0, !dbg !1469
  %2942 = load i32, i32* %2941, align 4, !dbg !1469
  %2943 = xor i32 %2938, %2942, !dbg !1469
  %2944 = shl i32 %2943, 1, !dbg !1469
  %2945 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2946 = bitcast %union.CHAR64LONG16* %2945 to [16 x i32]*, !dbg !1469
  %2947 = getelementptr inbounds [16 x i32], [16 x i32]* %2946, i64 0, i64 13, !dbg !1469
  %2948 = load i32, i32* %2947, align 4, !dbg !1469
  %2949 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2950 = bitcast %union.CHAR64LONG16* %2949 to [16 x i32]*, !dbg !1469
  %2951 = getelementptr inbounds [16 x i32], [16 x i32]* %2950, i64 0, i64 8, !dbg !1469
  %2952 = load i32, i32* %2951, align 4, !dbg !1469
  %2953 = xor i32 %2948, %2952, !dbg !1469
  %2954 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2955 = bitcast %union.CHAR64LONG16* %2954 to [16 x i32]*, !dbg !1469
  %2956 = getelementptr inbounds [16 x i32], [16 x i32]* %2955, i64 0, i64 2, !dbg !1469
  %2957 = load i32, i32* %2956, align 4, !dbg !1469
  %2958 = xor i32 %2953, %2957, !dbg !1469
  %2959 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2960 = bitcast %union.CHAR64LONG16* %2959 to [16 x i32]*, !dbg !1469
  %2961 = getelementptr inbounds [16 x i32], [16 x i32]* %2960, i64 0, i64 0, !dbg !1469
  %2962 = load i32, i32* %2961, align 4, !dbg !1469
  %2963 = xor i32 %2958, %2962, !dbg !1469
  %2964 = lshr i32 %2963, 31, !dbg !1469
  %2965 = or i32 %2944, %2964, !dbg !1469
  %2966 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1469
  %2967 = bitcast %union.CHAR64LONG16* %2966 to [16 x i32]*, !dbg !1469
  %2968 = getelementptr inbounds [16 x i32], [16 x i32]* %2967, i64 0, i64 0, !dbg !1469
  store i32 %2965, i32* %2968, align 4, !dbg !1469
  %2969 = add i32 %2924, %2965, !dbg !1469
  %2970 = add i32 %2969, -1894007588, !dbg !1469
  %2971 = load i32, i32* %7, align 4, !dbg !1469
  %2972 = shl i32 %2971, 5, !dbg !1469
  %2973 = load i32, i32* %7, align 4, !dbg !1469
  %2974 = lshr i32 %2973, 27, !dbg !1469
  %2975 = or i32 %2972, %2974, !dbg !1469
  %2976 = add i32 %2970, %2975, !dbg !1469
  %2977 = load i32, i32* %6, align 4, !dbg !1469
  %2978 = add i32 %2977, %2976, !dbg !1469
  store i32 %2978, i32* %6, align 4, !dbg !1469
  %2979 = load i32, i32* %8, align 4, !dbg !1469
  %2980 = shl i32 %2979, 30, !dbg !1469
  %2981 = load i32, i32* %8, align 4, !dbg !1469
  %2982 = lshr i32 %2981, 2, !dbg !1469
  %2983 = or i32 %2980, %2982, !dbg !1469
  store i32 %2983, i32* %8, align 4, !dbg !1469
  %2984 = load i32, i32* %7, align 4, !dbg !1470
  %2985 = load i32, i32* %8, align 4, !dbg !1470
  %2986 = or i32 %2984, %2985, !dbg !1470
  %2987 = load i32, i32* %9, align 4, !dbg !1470
  %2988 = and i32 %2986, %2987, !dbg !1470
  %2989 = load i32, i32* %7, align 4, !dbg !1470
  %2990 = load i32, i32* %8, align 4, !dbg !1470
  %2991 = and i32 %2989, %2990, !dbg !1470
  %2992 = or i32 %2988, %2991, !dbg !1470
  %2993 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %2994 = bitcast %union.CHAR64LONG16* %2993 to [16 x i32]*, !dbg !1470
  %2995 = getelementptr inbounds [16 x i32], [16 x i32]* %2994, i64 0, i64 14, !dbg !1470
  %2996 = load i32, i32* %2995, align 4, !dbg !1470
  %2997 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %2998 = bitcast %union.CHAR64LONG16* %2997 to [16 x i32]*, !dbg !1470
  %2999 = getelementptr inbounds [16 x i32], [16 x i32]* %2998, i64 0, i64 9, !dbg !1470
  %3000 = load i32, i32* %2999, align 4, !dbg !1470
  %3001 = xor i32 %2996, %3000, !dbg !1470
  %3002 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3003 = bitcast %union.CHAR64LONG16* %3002 to [16 x i32]*, !dbg !1470
  %3004 = getelementptr inbounds [16 x i32], [16 x i32]* %3003, i64 0, i64 3, !dbg !1470
  %3005 = load i32, i32* %3004, align 4, !dbg !1470
  %3006 = xor i32 %3001, %3005, !dbg !1470
  %3007 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3008 = bitcast %union.CHAR64LONG16* %3007 to [16 x i32]*, !dbg !1470
  %3009 = getelementptr inbounds [16 x i32], [16 x i32]* %3008, i64 0, i64 1, !dbg !1470
  %3010 = load i32, i32* %3009, align 4, !dbg !1470
  %3011 = xor i32 %3006, %3010, !dbg !1470
  %3012 = shl i32 %3011, 1, !dbg !1470
  %3013 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3014 = bitcast %union.CHAR64LONG16* %3013 to [16 x i32]*, !dbg !1470
  %3015 = getelementptr inbounds [16 x i32], [16 x i32]* %3014, i64 0, i64 14, !dbg !1470
  %3016 = load i32, i32* %3015, align 4, !dbg !1470
  %3017 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3018 = bitcast %union.CHAR64LONG16* %3017 to [16 x i32]*, !dbg !1470
  %3019 = getelementptr inbounds [16 x i32], [16 x i32]* %3018, i64 0, i64 9, !dbg !1470
  %3020 = load i32, i32* %3019, align 4, !dbg !1470
  %3021 = xor i32 %3016, %3020, !dbg !1470
  %3022 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3023 = bitcast %union.CHAR64LONG16* %3022 to [16 x i32]*, !dbg !1470
  %3024 = getelementptr inbounds [16 x i32], [16 x i32]* %3023, i64 0, i64 3, !dbg !1470
  %3025 = load i32, i32* %3024, align 4, !dbg !1470
  %3026 = xor i32 %3021, %3025, !dbg !1470
  %3027 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3028 = bitcast %union.CHAR64LONG16* %3027 to [16 x i32]*, !dbg !1470
  %3029 = getelementptr inbounds [16 x i32], [16 x i32]* %3028, i64 0, i64 1, !dbg !1470
  %3030 = load i32, i32* %3029, align 4, !dbg !1470
  %3031 = xor i32 %3026, %3030, !dbg !1470
  %3032 = lshr i32 %3031, 31, !dbg !1470
  %3033 = or i32 %3012, %3032, !dbg !1470
  %3034 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1470
  %3035 = bitcast %union.CHAR64LONG16* %3034 to [16 x i32]*, !dbg !1470
  %3036 = getelementptr inbounds [16 x i32], [16 x i32]* %3035, i64 0, i64 1, !dbg !1470
  store i32 %3033, i32* %3036, align 4, !dbg !1470
  %3037 = add i32 %2992, %3033, !dbg !1470
  %3038 = add i32 %3037, -1894007588, !dbg !1470
  %3039 = load i32, i32* %6, align 4, !dbg !1470
  %3040 = shl i32 %3039, 5, !dbg !1470
  %3041 = load i32, i32* %6, align 4, !dbg !1470
  %3042 = lshr i32 %3041, 27, !dbg !1470
  %3043 = or i32 %3040, %3042, !dbg !1470
  %3044 = add i32 %3038, %3043, !dbg !1470
  %3045 = load i32, i32* %5, align 4, !dbg !1470
  %3046 = add i32 %3045, %3044, !dbg !1470
  store i32 %3046, i32* %5, align 4, !dbg !1470
  %3047 = load i32, i32* %7, align 4, !dbg !1470
  %3048 = shl i32 %3047, 30, !dbg !1470
  %3049 = load i32, i32* %7, align 4, !dbg !1470
  %3050 = lshr i32 %3049, 2, !dbg !1470
  %3051 = or i32 %3048, %3050, !dbg !1470
  store i32 %3051, i32* %7, align 4, !dbg !1470
  %3052 = load i32, i32* %6, align 4, !dbg !1471
  %3053 = load i32, i32* %7, align 4, !dbg !1471
  %3054 = or i32 %3052, %3053, !dbg !1471
  %3055 = load i32, i32* %8, align 4, !dbg !1471
  %3056 = and i32 %3054, %3055, !dbg !1471
  %3057 = load i32, i32* %6, align 4, !dbg !1471
  %3058 = load i32, i32* %7, align 4, !dbg !1471
  %3059 = and i32 %3057, %3058, !dbg !1471
  %3060 = or i32 %3056, %3059, !dbg !1471
  %3061 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3062 = bitcast %union.CHAR64LONG16* %3061 to [16 x i32]*, !dbg !1471
  %3063 = getelementptr inbounds [16 x i32], [16 x i32]* %3062, i64 0, i64 15, !dbg !1471
  %3064 = load i32, i32* %3063, align 4, !dbg !1471
  %3065 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3066 = bitcast %union.CHAR64LONG16* %3065 to [16 x i32]*, !dbg !1471
  %3067 = getelementptr inbounds [16 x i32], [16 x i32]* %3066, i64 0, i64 10, !dbg !1471
  %3068 = load i32, i32* %3067, align 4, !dbg !1471
  %3069 = xor i32 %3064, %3068, !dbg !1471
  %3070 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3071 = bitcast %union.CHAR64LONG16* %3070 to [16 x i32]*, !dbg !1471
  %3072 = getelementptr inbounds [16 x i32], [16 x i32]* %3071, i64 0, i64 4, !dbg !1471
  %3073 = load i32, i32* %3072, align 4, !dbg !1471
  %3074 = xor i32 %3069, %3073, !dbg !1471
  %3075 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3076 = bitcast %union.CHAR64LONG16* %3075 to [16 x i32]*, !dbg !1471
  %3077 = getelementptr inbounds [16 x i32], [16 x i32]* %3076, i64 0, i64 2, !dbg !1471
  %3078 = load i32, i32* %3077, align 4, !dbg !1471
  %3079 = xor i32 %3074, %3078, !dbg !1471
  %3080 = shl i32 %3079, 1, !dbg !1471
  %3081 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3082 = bitcast %union.CHAR64LONG16* %3081 to [16 x i32]*, !dbg !1471
  %3083 = getelementptr inbounds [16 x i32], [16 x i32]* %3082, i64 0, i64 15, !dbg !1471
  %3084 = load i32, i32* %3083, align 4, !dbg !1471
  %3085 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3086 = bitcast %union.CHAR64LONG16* %3085 to [16 x i32]*, !dbg !1471
  %3087 = getelementptr inbounds [16 x i32], [16 x i32]* %3086, i64 0, i64 10, !dbg !1471
  %3088 = load i32, i32* %3087, align 4, !dbg !1471
  %3089 = xor i32 %3084, %3088, !dbg !1471
  %3090 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3091 = bitcast %union.CHAR64LONG16* %3090 to [16 x i32]*, !dbg !1471
  %3092 = getelementptr inbounds [16 x i32], [16 x i32]* %3091, i64 0, i64 4, !dbg !1471
  %3093 = load i32, i32* %3092, align 4, !dbg !1471
  %3094 = xor i32 %3089, %3093, !dbg !1471
  %3095 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3096 = bitcast %union.CHAR64LONG16* %3095 to [16 x i32]*, !dbg !1471
  %3097 = getelementptr inbounds [16 x i32], [16 x i32]* %3096, i64 0, i64 2, !dbg !1471
  %3098 = load i32, i32* %3097, align 4, !dbg !1471
  %3099 = xor i32 %3094, %3098, !dbg !1471
  %3100 = lshr i32 %3099, 31, !dbg !1471
  %3101 = or i32 %3080, %3100, !dbg !1471
  %3102 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1471
  %3103 = bitcast %union.CHAR64LONG16* %3102 to [16 x i32]*, !dbg !1471
  %3104 = getelementptr inbounds [16 x i32], [16 x i32]* %3103, i64 0, i64 2, !dbg !1471
  store i32 %3101, i32* %3104, align 4, !dbg !1471
  %3105 = add i32 %3060, %3101, !dbg !1471
  %3106 = add i32 %3105, -1894007588, !dbg !1471
  %3107 = load i32, i32* %5, align 4, !dbg !1471
  %3108 = shl i32 %3107, 5, !dbg !1471
  %3109 = load i32, i32* %5, align 4, !dbg !1471
  %3110 = lshr i32 %3109, 27, !dbg !1471
  %3111 = or i32 %3108, %3110, !dbg !1471
  %3112 = add i32 %3106, %3111, !dbg !1471
  %3113 = load i32, i32* %9, align 4, !dbg !1471
  %3114 = add i32 %3113, %3112, !dbg !1471
  store i32 %3114, i32* %9, align 4, !dbg !1471
  %3115 = load i32, i32* %6, align 4, !dbg !1471
  %3116 = shl i32 %3115, 30, !dbg !1471
  %3117 = load i32, i32* %6, align 4, !dbg !1471
  %3118 = lshr i32 %3117, 2, !dbg !1471
  %3119 = or i32 %3116, %3118, !dbg !1471
  store i32 %3119, i32* %6, align 4, !dbg !1471
  %3120 = load i32, i32* %5, align 4, !dbg !1472
  %3121 = load i32, i32* %6, align 4, !dbg !1472
  %3122 = or i32 %3120, %3121, !dbg !1472
  %3123 = load i32, i32* %7, align 4, !dbg !1472
  %3124 = and i32 %3122, %3123, !dbg !1472
  %3125 = load i32, i32* %5, align 4, !dbg !1472
  %3126 = load i32, i32* %6, align 4, !dbg !1472
  %3127 = and i32 %3125, %3126, !dbg !1472
  %3128 = or i32 %3124, %3127, !dbg !1472
  %3129 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3130 = bitcast %union.CHAR64LONG16* %3129 to [16 x i32]*, !dbg !1472
  %3131 = getelementptr inbounds [16 x i32], [16 x i32]* %3130, i64 0, i64 0, !dbg !1472
  %3132 = load i32, i32* %3131, align 4, !dbg !1472
  %3133 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3134 = bitcast %union.CHAR64LONG16* %3133 to [16 x i32]*, !dbg !1472
  %3135 = getelementptr inbounds [16 x i32], [16 x i32]* %3134, i64 0, i64 11, !dbg !1472
  %3136 = load i32, i32* %3135, align 4, !dbg !1472
  %3137 = xor i32 %3132, %3136, !dbg !1472
  %3138 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3139 = bitcast %union.CHAR64LONG16* %3138 to [16 x i32]*, !dbg !1472
  %3140 = getelementptr inbounds [16 x i32], [16 x i32]* %3139, i64 0, i64 5, !dbg !1472
  %3141 = load i32, i32* %3140, align 4, !dbg !1472
  %3142 = xor i32 %3137, %3141, !dbg !1472
  %3143 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3144 = bitcast %union.CHAR64LONG16* %3143 to [16 x i32]*, !dbg !1472
  %3145 = getelementptr inbounds [16 x i32], [16 x i32]* %3144, i64 0, i64 3, !dbg !1472
  %3146 = load i32, i32* %3145, align 4, !dbg !1472
  %3147 = xor i32 %3142, %3146, !dbg !1472
  %3148 = shl i32 %3147, 1, !dbg !1472
  %3149 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3150 = bitcast %union.CHAR64LONG16* %3149 to [16 x i32]*, !dbg !1472
  %3151 = getelementptr inbounds [16 x i32], [16 x i32]* %3150, i64 0, i64 0, !dbg !1472
  %3152 = load i32, i32* %3151, align 4, !dbg !1472
  %3153 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3154 = bitcast %union.CHAR64LONG16* %3153 to [16 x i32]*, !dbg !1472
  %3155 = getelementptr inbounds [16 x i32], [16 x i32]* %3154, i64 0, i64 11, !dbg !1472
  %3156 = load i32, i32* %3155, align 4, !dbg !1472
  %3157 = xor i32 %3152, %3156, !dbg !1472
  %3158 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3159 = bitcast %union.CHAR64LONG16* %3158 to [16 x i32]*, !dbg !1472
  %3160 = getelementptr inbounds [16 x i32], [16 x i32]* %3159, i64 0, i64 5, !dbg !1472
  %3161 = load i32, i32* %3160, align 4, !dbg !1472
  %3162 = xor i32 %3157, %3161, !dbg !1472
  %3163 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3164 = bitcast %union.CHAR64LONG16* %3163 to [16 x i32]*, !dbg !1472
  %3165 = getelementptr inbounds [16 x i32], [16 x i32]* %3164, i64 0, i64 3, !dbg !1472
  %3166 = load i32, i32* %3165, align 4, !dbg !1472
  %3167 = xor i32 %3162, %3166, !dbg !1472
  %3168 = lshr i32 %3167, 31, !dbg !1472
  %3169 = or i32 %3148, %3168, !dbg !1472
  %3170 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1472
  %3171 = bitcast %union.CHAR64LONG16* %3170 to [16 x i32]*, !dbg !1472
  %3172 = getelementptr inbounds [16 x i32], [16 x i32]* %3171, i64 0, i64 3, !dbg !1472
  store i32 %3169, i32* %3172, align 4, !dbg !1472
  %3173 = add i32 %3128, %3169, !dbg !1472
  %3174 = add i32 %3173, -1894007588, !dbg !1472
  %3175 = load i32, i32* %9, align 4, !dbg !1472
  %3176 = shl i32 %3175, 5, !dbg !1472
  %3177 = load i32, i32* %9, align 4, !dbg !1472
  %3178 = lshr i32 %3177, 27, !dbg !1472
  %3179 = or i32 %3176, %3178, !dbg !1472
  %3180 = add i32 %3174, %3179, !dbg !1472
  %3181 = load i32, i32* %8, align 4, !dbg !1472
  %3182 = add i32 %3181, %3180, !dbg !1472
  store i32 %3182, i32* %8, align 4, !dbg !1472
  %3183 = load i32, i32* %5, align 4, !dbg !1472
  %3184 = shl i32 %3183, 30, !dbg !1472
  %3185 = load i32, i32* %5, align 4, !dbg !1472
  %3186 = lshr i32 %3185, 2, !dbg !1472
  %3187 = or i32 %3184, %3186, !dbg !1472
  store i32 %3187, i32* %5, align 4, !dbg !1472
  %3188 = load i32, i32* %9, align 4, !dbg !1473
  %3189 = load i32, i32* %5, align 4, !dbg !1473
  %3190 = or i32 %3188, %3189, !dbg !1473
  %3191 = load i32, i32* %6, align 4, !dbg !1473
  %3192 = and i32 %3190, %3191, !dbg !1473
  %3193 = load i32, i32* %9, align 4, !dbg !1473
  %3194 = load i32, i32* %5, align 4, !dbg !1473
  %3195 = and i32 %3193, %3194, !dbg !1473
  %3196 = or i32 %3192, %3195, !dbg !1473
  %3197 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3198 = bitcast %union.CHAR64LONG16* %3197 to [16 x i32]*, !dbg !1473
  %3199 = getelementptr inbounds [16 x i32], [16 x i32]* %3198, i64 0, i64 1, !dbg !1473
  %3200 = load i32, i32* %3199, align 4, !dbg !1473
  %3201 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3202 = bitcast %union.CHAR64LONG16* %3201 to [16 x i32]*, !dbg !1473
  %3203 = getelementptr inbounds [16 x i32], [16 x i32]* %3202, i64 0, i64 12, !dbg !1473
  %3204 = load i32, i32* %3203, align 4, !dbg !1473
  %3205 = xor i32 %3200, %3204, !dbg !1473
  %3206 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3207 = bitcast %union.CHAR64LONG16* %3206 to [16 x i32]*, !dbg !1473
  %3208 = getelementptr inbounds [16 x i32], [16 x i32]* %3207, i64 0, i64 6, !dbg !1473
  %3209 = load i32, i32* %3208, align 4, !dbg !1473
  %3210 = xor i32 %3205, %3209, !dbg !1473
  %3211 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3212 = bitcast %union.CHAR64LONG16* %3211 to [16 x i32]*, !dbg !1473
  %3213 = getelementptr inbounds [16 x i32], [16 x i32]* %3212, i64 0, i64 4, !dbg !1473
  %3214 = load i32, i32* %3213, align 4, !dbg !1473
  %3215 = xor i32 %3210, %3214, !dbg !1473
  %3216 = shl i32 %3215, 1, !dbg !1473
  %3217 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3218 = bitcast %union.CHAR64LONG16* %3217 to [16 x i32]*, !dbg !1473
  %3219 = getelementptr inbounds [16 x i32], [16 x i32]* %3218, i64 0, i64 1, !dbg !1473
  %3220 = load i32, i32* %3219, align 4, !dbg !1473
  %3221 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3222 = bitcast %union.CHAR64LONG16* %3221 to [16 x i32]*, !dbg !1473
  %3223 = getelementptr inbounds [16 x i32], [16 x i32]* %3222, i64 0, i64 12, !dbg !1473
  %3224 = load i32, i32* %3223, align 4, !dbg !1473
  %3225 = xor i32 %3220, %3224, !dbg !1473
  %3226 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3227 = bitcast %union.CHAR64LONG16* %3226 to [16 x i32]*, !dbg !1473
  %3228 = getelementptr inbounds [16 x i32], [16 x i32]* %3227, i64 0, i64 6, !dbg !1473
  %3229 = load i32, i32* %3228, align 4, !dbg !1473
  %3230 = xor i32 %3225, %3229, !dbg !1473
  %3231 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3232 = bitcast %union.CHAR64LONG16* %3231 to [16 x i32]*, !dbg !1473
  %3233 = getelementptr inbounds [16 x i32], [16 x i32]* %3232, i64 0, i64 4, !dbg !1473
  %3234 = load i32, i32* %3233, align 4, !dbg !1473
  %3235 = xor i32 %3230, %3234, !dbg !1473
  %3236 = lshr i32 %3235, 31, !dbg !1473
  %3237 = or i32 %3216, %3236, !dbg !1473
  %3238 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1473
  %3239 = bitcast %union.CHAR64LONG16* %3238 to [16 x i32]*, !dbg !1473
  %3240 = getelementptr inbounds [16 x i32], [16 x i32]* %3239, i64 0, i64 4, !dbg !1473
  store i32 %3237, i32* %3240, align 4, !dbg !1473
  %3241 = add i32 %3196, %3237, !dbg !1473
  %3242 = add i32 %3241, -1894007588, !dbg !1473
  %3243 = load i32, i32* %8, align 4, !dbg !1473
  %3244 = shl i32 %3243, 5, !dbg !1473
  %3245 = load i32, i32* %8, align 4, !dbg !1473
  %3246 = lshr i32 %3245, 27, !dbg !1473
  %3247 = or i32 %3244, %3246, !dbg !1473
  %3248 = add i32 %3242, %3247, !dbg !1473
  %3249 = load i32, i32* %7, align 4, !dbg !1473
  %3250 = add i32 %3249, %3248, !dbg !1473
  store i32 %3250, i32* %7, align 4, !dbg !1473
  %3251 = load i32, i32* %9, align 4, !dbg !1473
  %3252 = shl i32 %3251, 30, !dbg !1473
  %3253 = load i32, i32* %9, align 4, !dbg !1473
  %3254 = lshr i32 %3253, 2, !dbg !1473
  %3255 = or i32 %3252, %3254, !dbg !1473
  store i32 %3255, i32* %9, align 4, !dbg !1473
  %3256 = load i32, i32* %8, align 4, !dbg !1474
  %3257 = load i32, i32* %9, align 4, !dbg !1474
  %3258 = or i32 %3256, %3257, !dbg !1474
  %3259 = load i32, i32* %5, align 4, !dbg !1474
  %3260 = and i32 %3258, %3259, !dbg !1474
  %3261 = load i32, i32* %8, align 4, !dbg !1474
  %3262 = load i32, i32* %9, align 4, !dbg !1474
  %3263 = and i32 %3261, %3262, !dbg !1474
  %3264 = or i32 %3260, %3263, !dbg !1474
  %3265 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3266 = bitcast %union.CHAR64LONG16* %3265 to [16 x i32]*, !dbg !1474
  %3267 = getelementptr inbounds [16 x i32], [16 x i32]* %3266, i64 0, i64 2, !dbg !1474
  %3268 = load i32, i32* %3267, align 4, !dbg !1474
  %3269 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3270 = bitcast %union.CHAR64LONG16* %3269 to [16 x i32]*, !dbg !1474
  %3271 = getelementptr inbounds [16 x i32], [16 x i32]* %3270, i64 0, i64 13, !dbg !1474
  %3272 = load i32, i32* %3271, align 4, !dbg !1474
  %3273 = xor i32 %3268, %3272, !dbg !1474
  %3274 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3275 = bitcast %union.CHAR64LONG16* %3274 to [16 x i32]*, !dbg !1474
  %3276 = getelementptr inbounds [16 x i32], [16 x i32]* %3275, i64 0, i64 7, !dbg !1474
  %3277 = load i32, i32* %3276, align 4, !dbg !1474
  %3278 = xor i32 %3273, %3277, !dbg !1474
  %3279 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3280 = bitcast %union.CHAR64LONG16* %3279 to [16 x i32]*, !dbg !1474
  %3281 = getelementptr inbounds [16 x i32], [16 x i32]* %3280, i64 0, i64 5, !dbg !1474
  %3282 = load i32, i32* %3281, align 4, !dbg !1474
  %3283 = xor i32 %3278, %3282, !dbg !1474
  %3284 = shl i32 %3283, 1, !dbg !1474
  %3285 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3286 = bitcast %union.CHAR64LONG16* %3285 to [16 x i32]*, !dbg !1474
  %3287 = getelementptr inbounds [16 x i32], [16 x i32]* %3286, i64 0, i64 2, !dbg !1474
  %3288 = load i32, i32* %3287, align 4, !dbg !1474
  %3289 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3290 = bitcast %union.CHAR64LONG16* %3289 to [16 x i32]*, !dbg !1474
  %3291 = getelementptr inbounds [16 x i32], [16 x i32]* %3290, i64 0, i64 13, !dbg !1474
  %3292 = load i32, i32* %3291, align 4, !dbg !1474
  %3293 = xor i32 %3288, %3292, !dbg !1474
  %3294 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3295 = bitcast %union.CHAR64LONG16* %3294 to [16 x i32]*, !dbg !1474
  %3296 = getelementptr inbounds [16 x i32], [16 x i32]* %3295, i64 0, i64 7, !dbg !1474
  %3297 = load i32, i32* %3296, align 4, !dbg !1474
  %3298 = xor i32 %3293, %3297, !dbg !1474
  %3299 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3300 = bitcast %union.CHAR64LONG16* %3299 to [16 x i32]*, !dbg !1474
  %3301 = getelementptr inbounds [16 x i32], [16 x i32]* %3300, i64 0, i64 5, !dbg !1474
  %3302 = load i32, i32* %3301, align 4, !dbg !1474
  %3303 = xor i32 %3298, %3302, !dbg !1474
  %3304 = lshr i32 %3303, 31, !dbg !1474
  %3305 = or i32 %3284, %3304, !dbg !1474
  %3306 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1474
  %3307 = bitcast %union.CHAR64LONG16* %3306 to [16 x i32]*, !dbg !1474
  %3308 = getelementptr inbounds [16 x i32], [16 x i32]* %3307, i64 0, i64 5, !dbg !1474
  store i32 %3305, i32* %3308, align 4, !dbg !1474
  %3309 = add i32 %3264, %3305, !dbg !1474
  %3310 = add i32 %3309, -1894007588, !dbg !1474
  %3311 = load i32, i32* %7, align 4, !dbg !1474
  %3312 = shl i32 %3311, 5, !dbg !1474
  %3313 = load i32, i32* %7, align 4, !dbg !1474
  %3314 = lshr i32 %3313, 27, !dbg !1474
  %3315 = or i32 %3312, %3314, !dbg !1474
  %3316 = add i32 %3310, %3315, !dbg !1474
  %3317 = load i32, i32* %6, align 4, !dbg !1474
  %3318 = add i32 %3317, %3316, !dbg !1474
  store i32 %3318, i32* %6, align 4, !dbg !1474
  %3319 = load i32, i32* %8, align 4, !dbg !1474
  %3320 = shl i32 %3319, 30, !dbg !1474
  %3321 = load i32, i32* %8, align 4, !dbg !1474
  %3322 = lshr i32 %3321, 2, !dbg !1474
  %3323 = or i32 %3320, %3322, !dbg !1474
  store i32 %3323, i32* %8, align 4, !dbg !1474
  %3324 = load i32, i32* %7, align 4, !dbg !1475
  %3325 = load i32, i32* %8, align 4, !dbg !1475
  %3326 = or i32 %3324, %3325, !dbg !1475
  %3327 = load i32, i32* %9, align 4, !dbg !1475
  %3328 = and i32 %3326, %3327, !dbg !1475
  %3329 = load i32, i32* %7, align 4, !dbg !1475
  %3330 = load i32, i32* %8, align 4, !dbg !1475
  %3331 = and i32 %3329, %3330, !dbg !1475
  %3332 = or i32 %3328, %3331, !dbg !1475
  %3333 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3334 = bitcast %union.CHAR64LONG16* %3333 to [16 x i32]*, !dbg !1475
  %3335 = getelementptr inbounds [16 x i32], [16 x i32]* %3334, i64 0, i64 3, !dbg !1475
  %3336 = load i32, i32* %3335, align 4, !dbg !1475
  %3337 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3338 = bitcast %union.CHAR64LONG16* %3337 to [16 x i32]*, !dbg !1475
  %3339 = getelementptr inbounds [16 x i32], [16 x i32]* %3338, i64 0, i64 14, !dbg !1475
  %3340 = load i32, i32* %3339, align 4, !dbg !1475
  %3341 = xor i32 %3336, %3340, !dbg !1475
  %3342 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3343 = bitcast %union.CHAR64LONG16* %3342 to [16 x i32]*, !dbg !1475
  %3344 = getelementptr inbounds [16 x i32], [16 x i32]* %3343, i64 0, i64 8, !dbg !1475
  %3345 = load i32, i32* %3344, align 4, !dbg !1475
  %3346 = xor i32 %3341, %3345, !dbg !1475
  %3347 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3348 = bitcast %union.CHAR64LONG16* %3347 to [16 x i32]*, !dbg !1475
  %3349 = getelementptr inbounds [16 x i32], [16 x i32]* %3348, i64 0, i64 6, !dbg !1475
  %3350 = load i32, i32* %3349, align 4, !dbg !1475
  %3351 = xor i32 %3346, %3350, !dbg !1475
  %3352 = shl i32 %3351, 1, !dbg !1475
  %3353 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3354 = bitcast %union.CHAR64LONG16* %3353 to [16 x i32]*, !dbg !1475
  %3355 = getelementptr inbounds [16 x i32], [16 x i32]* %3354, i64 0, i64 3, !dbg !1475
  %3356 = load i32, i32* %3355, align 4, !dbg !1475
  %3357 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3358 = bitcast %union.CHAR64LONG16* %3357 to [16 x i32]*, !dbg !1475
  %3359 = getelementptr inbounds [16 x i32], [16 x i32]* %3358, i64 0, i64 14, !dbg !1475
  %3360 = load i32, i32* %3359, align 4, !dbg !1475
  %3361 = xor i32 %3356, %3360, !dbg !1475
  %3362 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3363 = bitcast %union.CHAR64LONG16* %3362 to [16 x i32]*, !dbg !1475
  %3364 = getelementptr inbounds [16 x i32], [16 x i32]* %3363, i64 0, i64 8, !dbg !1475
  %3365 = load i32, i32* %3364, align 4, !dbg !1475
  %3366 = xor i32 %3361, %3365, !dbg !1475
  %3367 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3368 = bitcast %union.CHAR64LONG16* %3367 to [16 x i32]*, !dbg !1475
  %3369 = getelementptr inbounds [16 x i32], [16 x i32]* %3368, i64 0, i64 6, !dbg !1475
  %3370 = load i32, i32* %3369, align 4, !dbg !1475
  %3371 = xor i32 %3366, %3370, !dbg !1475
  %3372 = lshr i32 %3371, 31, !dbg !1475
  %3373 = or i32 %3352, %3372, !dbg !1475
  %3374 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1475
  %3375 = bitcast %union.CHAR64LONG16* %3374 to [16 x i32]*, !dbg !1475
  %3376 = getelementptr inbounds [16 x i32], [16 x i32]* %3375, i64 0, i64 6, !dbg !1475
  store i32 %3373, i32* %3376, align 4, !dbg !1475
  %3377 = add i32 %3332, %3373, !dbg !1475
  %3378 = add i32 %3377, -1894007588, !dbg !1475
  %3379 = load i32, i32* %6, align 4, !dbg !1475
  %3380 = shl i32 %3379, 5, !dbg !1475
  %3381 = load i32, i32* %6, align 4, !dbg !1475
  %3382 = lshr i32 %3381, 27, !dbg !1475
  %3383 = or i32 %3380, %3382, !dbg !1475
  %3384 = add i32 %3378, %3383, !dbg !1475
  %3385 = load i32, i32* %5, align 4, !dbg !1475
  %3386 = add i32 %3385, %3384, !dbg !1475
  store i32 %3386, i32* %5, align 4, !dbg !1475
  %3387 = load i32, i32* %7, align 4, !dbg !1475
  %3388 = shl i32 %3387, 30, !dbg !1475
  %3389 = load i32, i32* %7, align 4, !dbg !1475
  %3390 = lshr i32 %3389, 2, !dbg !1475
  %3391 = or i32 %3388, %3390, !dbg !1475
  store i32 %3391, i32* %7, align 4, !dbg !1475
  %3392 = load i32, i32* %6, align 4, !dbg !1476
  %3393 = load i32, i32* %7, align 4, !dbg !1476
  %3394 = or i32 %3392, %3393, !dbg !1476
  %3395 = load i32, i32* %8, align 4, !dbg !1476
  %3396 = and i32 %3394, %3395, !dbg !1476
  %3397 = load i32, i32* %6, align 4, !dbg !1476
  %3398 = load i32, i32* %7, align 4, !dbg !1476
  %3399 = and i32 %3397, %3398, !dbg !1476
  %3400 = or i32 %3396, %3399, !dbg !1476
  %3401 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3402 = bitcast %union.CHAR64LONG16* %3401 to [16 x i32]*, !dbg !1476
  %3403 = getelementptr inbounds [16 x i32], [16 x i32]* %3402, i64 0, i64 4, !dbg !1476
  %3404 = load i32, i32* %3403, align 4, !dbg !1476
  %3405 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3406 = bitcast %union.CHAR64LONG16* %3405 to [16 x i32]*, !dbg !1476
  %3407 = getelementptr inbounds [16 x i32], [16 x i32]* %3406, i64 0, i64 15, !dbg !1476
  %3408 = load i32, i32* %3407, align 4, !dbg !1476
  %3409 = xor i32 %3404, %3408, !dbg !1476
  %3410 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3411 = bitcast %union.CHAR64LONG16* %3410 to [16 x i32]*, !dbg !1476
  %3412 = getelementptr inbounds [16 x i32], [16 x i32]* %3411, i64 0, i64 9, !dbg !1476
  %3413 = load i32, i32* %3412, align 4, !dbg !1476
  %3414 = xor i32 %3409, %3413, !dbg !1476
  %3415 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3416 = bitcast %union.CHAR64LONG16* %3415 to [16 x i32]*, !dbg !1476
  %3417 = getelementptr inbounds [16 x i32], [16 x i32]* %3416, i64 0, i64 7, !dbg !1476
  %3418 = load i32, i32* %3417, align 4, !dbg !1476
  %3419 = xor i32 %3414, %3418, !dbg !1476
  %3420 = shl i32 %3419, 1, !dbg !1476
  %3421 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3422 = bitcast %union.CHAR64LONG16* %3421 to [16 x i32]*, !dbg !1476
  %3423 = getelementptr inbounds [16 x i32], [16 x i32]* %3422, i64 0, i64 4, !dbg !1476
  %3424 = load i32, i32* %3423, align 4, !dbg !1476
  %3425 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3426 = bitcast %union.CHAR64LONG16* %3425 to [16 x i32]*, !dbg !1476
  %3427 = getelementptr inbounds [16 x i32], [16 x i32]* %3426, i64 0, i64 15, !dbg !1476
  %3428 = load i32, i32* %3427, align 4, !dbg !1476
  %3429 = xor i32 %3424, %3428, !dbg !1476
  %3430 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3431 = bitcast %union.CHAR64LONG16* %3430 to [16 x i32]*, !dbg !1476
  %3432 = getelementptr inbounds [16 x i32], [16 x i32]* %3431, i64 0, i64 9, !dbg !1476
  %3433 = load i32, i32* %3432, align 4, !dbg !1476
  %3434 = xor i32 %3429, %3433, !dbg !1476
  %3435 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3436 = bitcast %union.CHAR64LONG16* %3435 to [16 x i32]*, !dbg !1476
  %3437 = getelementptr inbounds [16 x i32], [16 x i32]* %3436, i64 0, i64 7, !dbg !1476
  %3438 = load i32, i32* %3437, align 4, !dbg !1476
  %3439 = xor i32 %3434, %3438, !dbg !1476
  %3440 = lshr i32 %3439, 31, !dbg !1476
  %3441 = or i32 %3420, %3440, !dbg !1476
  %3442 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1476
  %3443 = bitcast %union.CHAR64LONG16* %3442 to [16 x i32]*, !dbg !1476
  %3444 = getelementptr inbounds [16 x i32], [16 x i32]* %3443, i64 0, i64 7, !dbg !1476
  store i32 %3441, i32* %3444, align 4, !dbg !1476
  %3445 = add i32 %3400, %3441, !dbg !1476
  %3446 = add i32 %3445, -1894007588, !dbg !1476
  %3447 = load i32, i32* %5, align 4, !dbg !1476
  %3448 = shl i32 %3447, 5, !dbg !1476
  %3449 = load i32, i32* %5, align 4, !dbg !1476
  %3450 = lshr i32 %3449, 27, !dbg !1476
  %3451 = or i32 %3448, %3450, !dbg !1476
  %3452 = add i32 %3446, %3451, !dbg !1476
  %3453 = load i32, i32* %9, align 4, !dbg !1476
  %3454 = add i32 %3453, %3452, !dbg !1476
  store i32 %3454, i32* %9, align 4, !dbg !1476
  %3455 = load i32, i32* %6, align 4, !dbg !1476
  %3456 = shl i32 %3455, 30, !dbg !1476
  %3457 = load i32, i32* %6, align 4, !dbg !1476
  %3458 = lshr i32 %3457, 2, !dbg !1476
  %3459 = or i32 %3456, %3458, !dbg !1476
  store i32 %3459, i32* %6, align 4, !dbg !1476
  %3460 = load i32, i32* %5, align 4, !dbg !1477
  %3461 = load i32, i32* %6, align 4, !dbg !1477
  %3462 = or i32 %3460, %3461, !dbg !1477
  %3463 = load i32, i32* %7, align 4, !dbg !1477
  %3464 = and i32 %3462, %3463, !dbg !1477
  %3465 = load i32, i32* %5, align 4, !dbg !1477
  %3466 = load i32, i32* %6, align 4, !dbg !1477
  %3467 = and i32 %3465, %3466, !dbg !1477
  %3468 = or i32 %3464, %3467, !dbg !1477
  %3469 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3470 = bitcast %union.CHAR64LONG16* %3469 to [16 x i32]*, !dbg !1477
  %3471 = getelementptr inbounds [16 x i32], [16 x i32]* %3470, i64 0, i64 5, !dbg !1477
  %3472 = load i32, i32* %3471, align 4, !dbg !1477
  %3473 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3474 = bitcast %union.CHAR64LONG16* %3473 to [16 x i32]*, !dbg !1477
  %3475 = getelementptr inbounds [16 x i32], [16 x i32]* %3474, i64 0, i64 0, !dbg !1477
  %3476 = load i32, i32* %3475, align 4, !dbg !1477
  %3477 = xor i32 %3472, %3476, !dbg !1477
  %3478 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3479 = bitcast %union.CHAR64LONG16* %3478 to [16 x i32]*, !dbg !1477
  %3480 = getelementptr inbounds [16 x i32], [16 x i32]* %3479, i64 0, i64 10, !dbg !1477
  %3481 = load i32, i32* %3480, align 4, !dbg !1477
  %3482 = xor i32 %3477, %3481, !dbg !1477
  %3483 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3484 = bitcast %union.CHAR64LONG16* %3483 to [16 x i32]*, !dbg !1477
  %3485 = getelementptr inbounds [16 x i32], [16 x i32]* %3484, i64 0, i64 8, !dbg !1477
  %3486 = load i32, i32* %3485, align 4, !dbg !1477
  %3487 = xor i32 %3482, %3486, !dbg !1477
  %3488 = shl i32 %3487, 1, !dbg !1477
  %3489 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3490 = bitcast %union.CHAR64LONG16* %3489 to [16 x i32]*, !dbg !1477
  %3491 = getelementptr inbounds [16 x i32], [16 x i32]* %3490, i64 0, i64 5, !dbg !1477
  %3492 = load i32, i32* %3491, align 4, !dbg !1477
  %3493 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3494 = bitcast %union.CHAR64LONG16* %3493 to [16 x i32]*, !dbg !1477
  %3495 = getelementptr inbounds [16 x i32], [16 x i32]* %3494, i64 0, i64 0, !dbg !1477
  %3496 = load i32, i32* %3495, align 4, !dbg !1477
  %3497 = xor i32 %3492, %3496, !dbg !1477
  %3498 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3499 = bitcast %union.CHAR64LONG16* %3498 to [16 x i32]*, !dbg !1477
  %3500 = getelementptr inbounds [16 x i32], [16 x i32]* %3499, i64 0, i64 10, !dbg !1477
  %3501 = load i32, i32* %3500, align 4, !dbg !1477
  %3502 = xor i32 %3497, %3501, !dbg !1477
  %3503 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3504 = bitcast %union.CHAR64LONG16* %3503 to [16 x i32]*, !dbg !1477
  %3505 = getelementptr inbounds [16 x i32], [16 x i32]* %3504, i64 0, i64 8, !dbg !1477
  %3506 = load i32, i32* %3505, align 4, !dbg !1477
  %3507 = xor i32 %3502, %3506, !dbg !1477
  %3508 = lshr i32 %3507, 31, !dbg !1477
  %3509 = or i32 %3488, %3508, !dbg !1477
  %3510 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1477
  %3511 = bitcast %union.CHAR64LONG16* %3510 to [16 x i32]*, !dbg !1477
  %3512 = getelementptr inbounds [16 x i32], [16 x i32]* %3511, i64 0, i64 8, !dbg !1477
  store i32 %3509, i32* %3512, align 4, !dbg !1477
  %3513 = add i32 %3468, %3509, !dbg !1477
  %3514 = add i32 %3513, -1894007588, !dbg !1477
  %3515 = load i32, i32* %9, align 4, !dbg !1477
  %3516 = shl i32 %3515, 5, !dbg !1477
  %3517 = load i32, i32* %9, align 4, !dbg !1477
  %3518 = lshr i32 %3517, 27, !dbg !1477
  %3519 = or i32 %3516, %3518, !dbg !1477
  %3520 = add i32 %3514, %3519, !dbg !1477
  %3521 = load i32, i32* %8, align 4, !dbg !1477
  %3522 = add i32 %3521, %3520, !dbg !1477
  store i32 %3522, i32* %8, align 4, !dbg !1477
  %3523 = load i32, i32* %5, align 4, !dbg !1477
  %3524 = shl i32 %3523, 30, !dbg !1477
  %3525 = load i32, i32* %5, align 4, !dbg !1477
  %3526 = lshr i32 %3525, 2, !dbg !1477
  %3527 = or i32 %3524, %3526, !dbg !1477
  store i32 %3527, i32* %5, align 4, !dbg !1477
  %3528 = load i32, i32* %9, align 4, !dbg !1478
  %3529 = load i32, i32* %5, align 4, !dbg !1478
  %3530 = or i32 %3528, %3529, !dbg !1478
  %3531 = load i32, i32* %6, align 4, !dbg !1478
  %3532 = and i32 %3530, %3531, !dbg !1478
  %3533 = load i32, i32* %9, align 4, !dbg !1478
  %3534 = load i32, i32* %5, align 4, !dbg !1478
  %3535 = and i32 %3533, %3534, !dbg !1478
  %3536 = or i32 %3532, %3535, !dbg !1478
  %3537 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3538 = bitcast %union.CHAR64LONG16* %3537 to [16 x i32]*, !dbg !1478
  %3539 = getelementptr inbounds [16 x i32], [16 x i32]* %3538, i64 0, i64 6, !dbg !1478
  %3540 = load i32, i32* %3539, align 4, !dbg !1478
  %3541 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3542 = bitcast %union.CHAR64LONG16* %3541 to [16 x i32]*, !dbg !1478
  %3543 = getelementptr inbounds [16 x i32], [16 x i32]* %3542, i64 0, i64 1, !dbg !1478
  %3544 = load i32, i32* %3543, align 4, !dbg !1478
  %3545 = xor i32 %3540, %3544, !dbg !1478
  %3546 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3547 = bitcast %union.CHAR64LONG16* %3546 to [16 x i32]*, !dbg !1478
  %3548 = getelementptr inbounds [16 x i32], [16 x i32]* %3547, i64 0, i64 11, !dbg !1478
  %3549 = load i32, i32* %3548, align 4, !dbg !1478
  %3550 = xor i32 %3545, %3549, !dbg !1478
  %3551 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3552 = bitcast %union.CHAR64LONG16* %3551 to [16 x i32]*, !dbg !1478
  %3553 = getelementptr inbounds [16 x i32], [16 x i32]* %3552, i64 0, i64 9, !dbg !1478
  %3554 = load i32, i32* %3553, align 4, !dbg !1478
  %3555 = xor i32 %3550, %3554, !dbg !1478
  %3556 = shl i32 %3555, 1, !dbg !1478
  %3557 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3558 = bitcast %union.CHAR64LONG16* %3557 to [16 x i32]*, !dbg !1478
  %3559 = getelementptr inbounds [16 x i32], [16 x i32]* %3558, i64 0, i64 6, !dbg !1478
  %3560 = load i32, i32* %3559, align 4, !dbg !1478
  %3561 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3562 = bitcast %union.CHAR64LONG16* %3561 to [16 x i32]*, !dbg !1478
  %3563 = getelementptr inbounds [16 x i32], [16 x i32]* %3562, i64 0, i64 1, !dbg !1478
  %3564 = load i32, i32* %3563, align 4, !dbg !1478
  %3565 = xor i32 %3560, %3564, !dbg !1478
  %3566 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3567 = bitcast %union.CHAR64LONG16* %3566 to [16 x i32]*, !dbg !1478
  %3568 = getelementptr inbounds [16 x i32], [16 x i32]* %3567, i64 0, i64 11, !dbg !1478
  %3569 = load i32, i32* %3568, align 4, !dbg !1478
  %3570 = xor i32 %3565, %3569, !dbg !1478
  %3571 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3572 = bitcast %union.CHAR64LONG16* %3571 to [16 x i32]*, !dbg !1478
  %3573 = getelementptr inbounds [16 x i32], [16 x i32]* %3572, i64 0, i64 9, !dbg !1478
  %3574 = load i32, i32* %3573, align 4, !dbg !1478
  %3575 = xor i32 %3570, %3574, !dbg !1478
  %3576 = lshr i32 %3575, 31, !dbg !1478
  %3577 = or i32 %3556, %3576, !dbg !1478
  %3578 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1478
  %3579 = bitcast %union.CHAR64LONG16* %3578 to [16 x i32]*, !dbg !1478
  %3580 = getelementptr inbounds [16 x i32], [16 x i32]* %3579, i64 0, i64 9, !dbg !1478
  store i32 %3577, i32* %3580, align 4, !dbg !1478
  %3581 = add i32 %3536, %3577, !dbg !1478
  %3582 = add i32 %3581, -1894007588, !dbg !1478
  %3583 = load i32, i32* %8, align 4, !dbg !1478
  %3584 = shl i32 %3583, 5, !dbg !1478
  %3585 = load i32, i32* %8, align 4, !dbg !1478
  %3586 = lshr i32 %3585, 27, !dbg !1478
  %3587 = or i32 %3584, %3586, !dbg !1478
  %3588 = add i32 %3582, %3587, !dbg !1478
  %3589 = load i32, i32* %7, align 4, !dbg !1478
  %3590 = add i32 %3589, %3588, !dbg !1478
  store i32 %3590, i32* %7, align 4, !dbg !1478
  %3591 = load i32, i32* %9, align 4, !dbg !1478
  %3592 = shl i32 %3591, 30, !dbg !1478
  %3593 = load i32, i32* %9, align 4, !dbg !1478
  %3594 = lshr i32 %3593, 2, !dbg !1478
  %3595 = or i32 %3592, %3594, !dbg !1478
  store i32 %3595, i32* %9, align 4, !dbg !1478
  %3596 = load i32, i32* %8, align 4, !dbg !1479
  %3597 = load i32, i32* %9, align 4, !dbg !1479
  %3598 = or i32 %3596, %3597, !dbg !1479
  %3599 = load i32, i32* %5, align 4, !dbg !1479
  %3600 = and i32 %3598, %3599, !dbg !1479
  %3601 = load i32, i32* %8, align 4, !dbg !1479
  %3602 = load i32, i32* %9, align 4, !dbg !1479
  %3603 = and i32 %3601, %3602, !dbg !1479
  %3604 = or i32 %3600, %3603, !dbg !1479
  %3605 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3606 = bitcast %union.CHAR64LONG16* %3605 to [16 x i32]*, !dbg !1479
  %3607 = getelementptr inbounds [16 x i32], [16 x i32]* %3606, i64 0, i64 7, !dbg !1479
  %3608 = load i32, i32* %3607, align 4, !dbg !1479
  %3609 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3610 = bitcast %union.CHAR64LONG16* %3609 to [16 x i32]*, !dbg !1479
  %3611 = getelementptr inbounds [16 x i32], [16 x i32]* %3610, i64 0, i64 2, !dbg !1479
  %3612 = load i32, i32* %3611, align 4, !dbg !1479
  %3613 = xor i32 %3608, %3612, !dbg !1479
  %3614 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3615 = bitcast %union.CHAR64LONG16* %3614 to [16 x i32]*, !dbg !1479
  %3616 = getelementptr inbounds [16 x i32], [16 x i32]* %3615, i64 0, i64 12, !dbg !1479
  %3617 = load i32, i32* %3616, align 4, !dbg !1479
  %3618 = xor i32 %3613, %3617, !dbg !1479
  %3619 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3620 = bitcast %union.CHAR64LONG16* %3619 to [16 x i32]*, !dbg !1479
  %3621 = getelementptr inbounds [16 x i32], [16 x i32]* %3620, i64 0, i64 10, !dbg !1479
  %3622 = load i32, i32* %3621, align 4, !dbg !1479
  %3623 = xor i32 %3618, %3622, !dbg !1479
  %3624 = shl i32 %3623, 1, !dbg !1479
  %3625 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3626 = bitcast %union.CHAR64LONG16* %3625 to [16 x i32]*, !dbg !1479
  %3627 = getelementptr inbounds [16 x i32], [16 x i32]* %3626, i64 0, i64 7, !dbg !1479
  %3628 = load i32, i32* %3627, align 4, !dbg !1479
  %3629 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3630 = bitcast %union.CHAR64LONG16* %3629 to [16 x i32]*, !dbg !1479
  %3631 = getelementptr inbounds [16 x i32], [16 x i32]* %3630, i64 0, i64 2, !dbg !1479
  %3632 = load i32, i32* %3631, align 4, !dbg !1479
  %3633 = xor i32 %3628, %3632, !dbg !1479
  %3634 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3635 = bitcast %union.CHAR64LONG16* %3634 to [16 x i32]*, !dbg !1479
  %3636 = getelementptr inbounds [16 x i32], [16 x i32]* %3635, i64 0, i64 12, !dbg !1479
  %3637 = load i32, i32* %3636, align 4, !dbg !1479
  %3638 = xor i32 %3633, %3637, !dbg !1479
  %3639 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3640 = bitcast %union.CHAR64LONG16* %3639 to [16 x i32]*, !dbg !1479
  %3641 = getelementptr inbounds [16 x i32], [16 x i32]* %3640, i64 0, i64 10, !dbg !1479
  %3642 = load i32, i32* %3641, align 4, !dbg !1479
  %3643 = xor i32 %3638, %3642, !dbg !1479
  %3644 = lshr i32 %3643, 31, !dbg !1479
  %3645 = or i32 %3624, %3644, !dbg !1479
  %3646 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1479
  %3647 = bitcast %union.CHAR64LONG16* %3646 to [16 x i32]*, !dbg !1479
  %3648 = getelementptr inbounds [16 x i32], [16 x i32]* %3647, i64 0, i64 10, !dbg !1479
  store i32 %3645, i32* %3648, align 4, !dbg !1479
  %3649 = add i32 %3604, %3645, !dbg !1479
  %3650 = add i32 %3649, -1894007588, !dbg !1479
  %3651 = load i32, i32* %7, align 4, !dbg !1479
  %3652 = shl i32 %3651, 5, !dbg !1479
  %3653 = load i32, i32* %7, align 4, !dbg !1479
  %3654 = lshr i32 %3653, 27, !dbg !1479
  %3655 = or i32 %3652, %3654, !dbg !1479
  %3656 = add i32 %3650, %3655, !dbg !1479
  %3657 = load i32, i32* %6, align 4, !dbg !1479
  %3658 = add i32 %3657, %3656, !dbg !1479
  store i32 %3658, i32* %6, align 4, !dbg !1479
  %3659 = load i32, i32* %8, align 4, !dbg !1479
  %3660 = shl i32 %3659, 30, !dbg !1479
  %3661 = load i32, i32* %8, align 4, !dbg !1479
  %3662 = lshr i32 %3661, 2, !dbg !1479
  %3663 = or i32 %3660, %3662, !dbg !1479
  store i32 %3663, i32* %8, align 4, !dbg !1479
  %3664 = load i32, i32* %7, align 4, !dbg !1480
  %3665 = load i32, i32* %8, align 4, !dbg !1480
  %3666 = or i32 %3664, %3665, !dbg !1480
  %3667 = load i32, i32* %9, align 4, !dbg !1480
  %3668 = and i32 %3666, %3667, !dbg !1480
  %3669 = load i32, i32* %7, align 4, !dbg !1480
  %3670 = load i32, i32* %8, align 4, !dbg !1480
  %3671 = and i32 %3669, %3670, !dbg !1480
  %3672 = or i32 %3668, %3671, !dbg !1480
  %3673 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3674 = bitcast %union.CHAR64LONG16* %3673 to [16 x i32]*, !dbg !1480
  %3675 = getelementptr inbounds [16 x i32], [16 x i32]* %3674, i64 0, i64 8, !dbg !1480
  %3676 = load i32, i32* %3675, align 4, !dbg !1480
  %3677 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3678 = bitcast %union.CHAR64LONG16* %3677 to [16 x i32]*, !dbg !1480
  %3679 = getelementptr inbounds [16 x i32], [16 x i32]* %3678, i64 0, i64 3, !dbg !1480
  %3680 = load i32, i32* %3679, align 4, !dbg !1480
  %3681 = xor i32 %3676, %3680, !dbg !1480
  %3682 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3683 = bitcast %union.CHAR64LONG16* %3682 to [16 x i32]*, !dbg !1480
  %3684 = getelementptr inbounds [16 x i32], [16 x i32]* %3683, i64 0, i64 13, !dbg !1480
  %3685 = load i32, i32* %3684, align 4, !dbg !1480
  %3686 = xor i32 %3681, %3685, !dbg !1480
  %3687 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3688 = bitcast %union.CHAR64LONG16* %3687 to [16 x i32]*, !dbg !1480
  %3689 = getelementptr inbounds [16 x i32], [16 x i32]* %3688, i64 0, i64 11, !dbg !1480
  %3690 = load i32, i32* %3689, align 4, !dbg !1480
  %3691 = xor i32 %3686, %3690, !dbg !1480
  %3692 = shl i32 %3691, 1, !dbg !1480
  %3693 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3694 = bitcast %union.CHAR64LONG16* %3693 to [16 x i32]*, !dbg !1480
  %3695 = getelementptr inbounds [16 x i32], [16 x i32]* %3694, i64 0, i64 8, !dbg !1480
  %3696 = load i32, i32* %3695, align 4, !dbg !1480
  %3697 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3698 = bitcast %union.CHAR64LONG16* %3697 to [16 x i32]*, !dbg !1480
  %3699 = getelementptr inbounds [16 x i32], [16 x i32]* %3698, i64 0, i64 3, !dbg !1480
  %3700 = load i32, i32* %3699, align 4, !dbg !1480
  %3701 = xor i32 %3696, %3700, !dbg !1480
  %3702 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3703 = bitcast %union.CHAR64LONG16* %3702 to [16 x i32]*, !dbg !1480
  %3704 = getelementptr inbounds [16 x i32], [16 x i32]* %3703, i64 0, i64 13, !dbg !1480
  %3705 = load i32, i32* %3704, align 4, !dbg !1480
  %3706 = xor i32 %3701, %3705, !dbg !1480
  %3707 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3708 = bitcast %union.CHAR64LONG16* %3707 to [16 x i32]*, !dbg !1480
  %3709 = getelementptr inbounds [16 x i32], [16 x i32]* %3708, i64 0, i64 11, !dbg !1480
  %3710 = load i32, i32* %3709, align 4, !dbg !1480
  %3711 = xor i32 %3706, %3710, !dbg !1480
  %3712 = lshr i32 %3711, 31, !dbg !1480
  %3713 = or i32 %3692, %3712, !dbg !1480
  %3714 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1480
  %3715 = bitcast %union.CHAR64LONG16* %3714 to [16 x i32]*, !dbg !1480
  %3716 = getelementptr inbounds [16 x i32], [16 x i32]* %3715, i64 0, i64 11, !dbg !1480
  store i32 %3713, i32* %3716, align 4, !dbg !1480
  %3717 = add i32 %3672, %3713, !dbg !1480
  %3718 = add i32 %3717, -1894007588, !dbg !1480
  %3719 = load i32, i32* %6, align 4, !dbg !1480
  %3720 = shl i32 %3719, 5, !dbg !1480
  %3721 = load i32, i32* %6, align 4, !dbg !1480
  %3722 = lshr i32 %3721, 27, !dbg !1480
  %3723 = or i32 %3720, %3722, !dbg !1480
  %3724 = add i32 %3718, %3723, !dbg !1480
  %3725 = load i32, i32* %5, align 4, !dbg !1480
  %3726 = add i32 %3725, %3724, !dbg !1480
  store i32 %3726, i32* %5, align 4, !dbg !1480
  %3727 = load i32, i32* %7, align 4, !dbg !1480
  %3728 = shl i32 %3727, 30, !dbg !1480
  %3729 = load i32, i32* %7, align 4, !dbg !1480
  %3730 = lshr i32 %3729, 2, !dbg !1480
  %3731 = or i32 %3728, %3730, !dbg !1480
  store i32 %3731, i32* %7, align 4, !dbg !1480
  %3732 = load i32, i32* %6, align 4, !dbg !1481
  %3733 = load i32, i32* %7, align 4, !dbg !1481
  %3734 = xor i32 %3732, %3733, !dbg !1481
  %3735 = load i32, i32* %8, align 4, !dbg !1481
  %3736 = xor i32 %3734, %3735, !dbg !1481
  %3737 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3738 = bitcast %union.CHAR64LONG16* %3737 to [16 x i32]*, !dbg !1481
  %3739 = getelementptr inbounds [16 x i32], [16 x i32]* %3738, i64 0, i64 9, !dbg !1481
  %3740 = load i32, i32* %3739, align 4, !dbg !1481
  %3741 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3742 = bitcast %union.CHAR64LONG16* %3741 to [16 x i32]*, !dbg !1481
  %3743 = getelementptr inbounds [16 x i32], [16 x i32]* %3742, i64 0, i64 4, !dbg !1481
  %3744 = load i32, i32* %3743, align 4, !dbg !1481
  %3745 = xor i32 %3740, %3744, !dbg !1481
  %3746 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3747 = bitcast %union.CHAR64LONG16* %3746 to [16 x i32]*, !dbg !1481
  %3748 = getelementptr inbounds [16 x i32], [16 x i32]* %3747, i64 0, i64 14, !dbg !1481
  %3749 = load i32, i32* %3748, align 4, !dbg !1481
  %3750 = xor i32 %3745, %3749, !dbg !1481
  %3751 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3752 = bitcast %union.CHAR64LONG16* %3751 to [16 x i32]*, !dbg !1481
  %3753 = getelementptr inbounds [16 x i32], [16 x i32]* %3752, i64 0, i64 12, !dbg !1481
  %3754 = load i32, i32* %3753, align 4, !dbg !1481
  %3755 = xor i32 %3750, %3754, !dbg !1481
  %3756 = shl i32 %3755, 1, !dbg !1481
  %3757 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3758 = bitcast %union.CHAR64LONG16* %3757 to [16 x i32]*, !dbg !1481
  %3759 = getelementptr inbounds [16 x i32], [16 x i32]* %3758, i64 0, i64 9, !dbg !1481
  %3760 = load i32, i32* %3759, align 4, !dbg !1481
  %3761 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3762 = bitcast %union.CHAR64LONG16* %3761 to [16 x i32]*, !dbg !1481
  %3763 = getelementptr inbounds [16 x i32], [16 x i32]* %3762, i64 0, i64 4, !dbg !1481
  %3764 = load i32, i32* %3763, align 4, !dbg !1481
  %3765 = xor i32 %3760, %3764, !dbg !1481
  %3766 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3767 = bitcast %union.CHAR64LONG16* %3766 to [16 x i32]*, !dbg !1481
  %3768 = getelementptr inbounds [16 x i32], [16 x i32]* %3767, i64 0, i64 14, !dbg !1481
  %3769 = load i32, i32* %3768, align 4, !dbg !1481
  %3770 = xor i32 %3765, %3769, !dbg !1481
  %3771 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3772 = bitcast %union.CHAR64LONG16* %3771 to [16 x i32]*, !dbg !1481
  %3773 = getelementptr inbounds [16 x i32], [16 x i32]* %3772, i64 0, i64 12, !dbg !1481
  %3774 = load i32, i32* %3773, align 4, !dbg !1481
  %3775 = xor i32 %3770, %3774, !dbg !1481
  %3776 = lshr i32 %3775, 31, !dbg !1481
  %3777 = or i32 %3756, %3776, !dbg !1481
  %3778 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1481
  %3779 = bitcast %union.CHAR64LONG16* %3778 to [16 x i32]*, !dbg !1481
  %3780 = getelementptr inbounds [16 x i32], [16 x i32]* %3779, i64 0, i64 12, !dbg !1481
  store i32 %3777, i32* %3780, align 4, !dbg !1481
  %3781 = add i32 %3736, %3777, !dbg !1481
  %3782 = add i32 %3781, -899497514, !dbg !1481
  %3783 = load i32, i32* %5, align 4, !dbg !1481
  %3784 = shl i32 %3783, 5, !dbg !1481
  %3785 = load i32, i32* %5, align 4, !dbg !1481
  %3786 = lshr i32 %3785, 27, !dbg !1481
  %3787 = or i32 %3784, %3786, !dbg !1481
  %3788 = add i32 %3782, %3787, !dbg !1481
  %3789 = load i32, i32* %9, align 4, !dbg !1481
  %3790 = add i32 %3789, %3788, !dbg !1481
  store i32 %3790, i32* %9, align 4, !dbg !1481
  %3791 = load i32, i32* %6, align 4, !dbg !1481
  %3792 = shl i32 %3791, 30, !dbg !1481
  %3793 = load i32, i32* %6, align 4, !dbg !1481
  %3794 = lshr i32 %3793, 2, !dbg !1481
  %3795 = or i32 %3792, %3794, !dbg !1481
  store i32 %3795, i32* %6, align 4, !dbg !1481
  %3796 = load i32, i32* %5, align 4, !dbg !1482
  %3797 = load i32, i32* %6, align 4, !dbg !1482
  %3798 = xor i32 %3796, %3797, !dbg !1482
  %3799 = load i32, i32* %7, align 4, !dbg !1482
  %3800 = xor i32 %3798, %3799, !dbg !1482
  %3801 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3802 = bitcast %union.CHAR64LONG16* %3801 to [16 x i32]*, !dbg !1482
  %3803 = getelementptr inbounds [16 x i32], [16 x i32]* %3802, i64 0, i64 10, !dbg !1482
  %3804 = load i32, i32* %3803, align 4, !dbg !1482
  %3805 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3806 = bitcast %union.CHAR64LONG16* %3805 to [16 x i32]*, !dbg !1482
  %3807 = getelementptr inbounds [16 x i32], [16 x i32]* %3806, i64 0, i64 5, !dbg !1482
  %3808 = load i32, i32* %3807, align 4, !dbg !1482
  %3809 = xor i32 %3804, %3808, !dbg !1482
  %3810 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3811 = bitcast %union.CHAR64LONG16* %3810 to [16 x i32]*, !dbg !1482
  %3812 = getelementptr inbounds [16 x i32], [16 x i32]* %3811, i64 0, i64 15, !dbg !1482
  %3813 = load i32, i32* %3812, align 4, !dbg !1482
  %3814 = xor i32 %3809, %3813, !dbg !1482
  %3815 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3816 = bitcast %union.CHAR64LONG16* %3815 to [16 x i32]*, !dbg !1482
  %3817 = getelementptr inbounds [16 x i32], [16 x i32]* %3816, i64 0, i64 13, !dbg !1482
  %3818 = load i32, i32* %3817, align 4, !dbg !1482
  %3819 = xor i32 %3814, %3818, !dbg !1482
  %3820 = shl i32 %3819, 1, !dbg !1482
  %3821 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3822 = bitcast %union.CHAR64LONG16* %3821 to [16 x i32]*, !dbg !1482
  %3823 = getelementptr inbounds [16 x i32], [16 x i32]* %3822, i64 0, i64 10, !dbg !1482
  %3824 = load i32, i32* %3823, align 4, !dbg !1482
  %3825 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3826 = bitcast %union.CHAR64LONG16* %3825 to [16 x i32]*, !dbg !1482
  %3827 = getelementptr inbounds [16 x i32], [16 x i32]* %3826, i64 0, i64 5, !dbg !1482
  %3828 = load i32, i32* %3827, align 4, !dbg !1482
  %3829 = xor i32 %3824, %3828, !dbg !1482
  %3830 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3831 = bitcast %union.CHAR64LONG16* %3830 to [16 x i32]*, !dbg !1482
  %3832 = getelementptr inbounds [16 x i32], [16 x i32]* %3831, i64 0, i64 15, !dbg !1482
  %3833 = load i32, i32* %3832, align 4, !dbg !1482
  %3834 = xor i32 %3829, %3833, !dbg !1482
  %3835 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3836 = bitcast %union.CHAR64LONG16* %3835 to [16 x i32]*, !dbg !1482
  %3837 = getelementptr inbounds [16 x i32], [16 x i32]* %3836, i64 0, i64 13, !dbg !1482
  %3838 = load i32, i32* %3837, align 4, !dbg !1482
  %3839 = xor i32 %3834, %3838, !dbg !1482
  %3840 = lshr i32 %3839, 31, !dbg !1482
  %3841 = or i32 %3820, %3840, !dbg !1482
  %3842 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1482
  %3843 = bitcast %union.CHAR64LONG16* %3842 to [16 x i32]*, !dbg !1482
  %3844 = getelementptr inbounds [16 x i32], [16 x i32]* %3843, i64 0, i64 13, !dbg !1482
  store i32 %3841, i32* %3844, align 4, !dbg !1482
  %3845 = add i32 %3800, %3841, !dbg !1482
  %3846 = add i32 %3845, -899497514, !dbg !1482
  %3847 = load i32, i32* %9, align 4, !dbg !1482
  %3848 = shl i32 %3847, 5, !dbg !1482
  %3849 = load i32, i32* %9, align 4, !dbg !1482
  %3850 = lshr i32 %3849, 27, !dbg !1482
  %3851 = or i32 %3848, %3850, !dbg !1482
  %3852 = add i32 %3846, %3851, !dbg !1482
  %3853 = load i32, i32* %8, align 4, !dbg !1482
  %3854 = add i32 %3853, %3852, !dbg !1482
  store i32 %3854, i32* %8, align 4, !dbg !1482
  %3855 = load i32, i32* %5, align 4, !dbg !1482
  %3856 = shl i32 %3855, 30, !dbg !1482
  %3857 = load i32, i32* %5, align 4, !dbg !1482
  %3858 = lshr i32 %3857, 2, !dbg !1482
  %3859 = or i32 %3856, %3858, !dbg !1482
  store i32 %3859, i32* %5, align 4, !dbg !1482
  %3860 = load i32, i32* %9, align 4, !dbg !1483
  %3861 = load i32, i32* %5, align 4, !dbg !1483
  %3862 = xor i32 %3860, %3861, !dbg !1483
  %3863 = load i32, i32* %6, align 4, !dbg !1483
  %3864 = xor i32 %3862, %3863, !dbg !1483
  %3865 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3866 = bitcast %union.CHAR64LONG16* %3865 to [16 x i32]*, !dbg !1483
  %3867 = getelementptr inbounds [16 x i32], [16 x i32]* %3866, i64 0, i64 11, !dbg !1483
  %3868 = load i32, i32* %3867, align 4, !dbg !1483
  %3869 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3870 = bitcast %union.CHAR64LONG16* %3869 to [16 x i32]*, !dbg !1483
  %3871 = getelementptr inbounds [16 x i32], [16 x i32]* %3870, i64 0, i64 6, !dbg !1483
  %3872 = load i32, i32* %3871, align 4, !dbg !1483
  %3873 = xor i32 %3868, %3872, !dbg !1483
  %3874 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3875 = bitcast %union.CHAR64LONG16* %3874 to [16 x i32]*, !dbg !1483
  %3876 = getelementptr inbounds [16 x i32], [16 x i32]* %3875, i64 0, i64 0, !dbg !1483
  %3877 = load i32, i32* %3876, align 4, !dbg !1483
  %3878 = xor i32 %3873, %3877, !dbg !1483
  %3879 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3880 = bitcast %union.CHAR64LONG16* %3879 to [16 x i32]*, !dbg !1483
  %3881 = getelementptr inbounds [16 x i32], [16 x i32]* %3880, i64 0, i64 14, !dbg !1483
  %3882 = load i32, i32* %3881, align 4, !dbg !1483
  %3883 = xor i32 %3878, %3882, !dbg !1483
  %3884 = shl i32 %3883, 1, !dbg !1483
  %3885 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3886 = bitcast %union.CHAR64LONG16* %3885 to [16 x i32]*, !dbg !1483
  %3887 = getelementptr inbounds [16 x i32], [16 x i32]* %3886, i64 0, i64 11, !dbg !1483
  %3888 = load i32, i32* %3887, align 4, !dbg !1483
  %3889 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3890 = bitcast %union.CHAR64LONG16* %3889 to [16 x i32]*, !dbg !1483
  %3891 = getelementptr inbounds [16 x i32], [16 x i32]* %3890, i64 0, i64 6, !dbg !1483
  %3892 = load i32, i32* %3891, align 4, !dbg !1483
  %3893 = xor i32 %3888, %3892, !dbg !1483
  %3894 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3895 = bitcast %union.CHAR64LONG16* %3894 to [16 x i32]*, !dbg !1483
  %3896 = getelementptr inbounds [16 x i32], [16 x i32]* %3895, i64 0, i64 0, !dbg !1483
  %3897 = load i32, i32* %3896, align 4, !dbg !1483
  %3898 = xor i32 %3893, %3897, !dbg !1483
  %3899 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3900 = bitcast %union.CHAR64LONG16* %3899 to [16 x i32]*, !dbg !1483
  %3901 = getelementptr inbounds [16 x i32], [16 x i32]* %3900, i64 0, i64 14, !dbg !1483
  %3902 = load i32, i32* %3901, align 4, !dbg !1483
  %3903 = xor i32 %3898, %3902, !dbg !1483
  %3904 = lshr i32 %3903, 31, !dbg !1483
  %3905 = or i32 %3884, %3904, !dbg !1483
  %3906 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1483
  %3907 = bitcast %union.CHAR64LONG16* %3906 to [16 x i32]*, !dbg !1483
  %3908 = getelementptr inbounds [16 x i32], [16 x i32]* %3907, i64 0, i64 14, !dbg !1483
  store i32 %3905, i32* %3908, align 4, !dbg !1483
  %3909 = add i32 %3864, %3905, !dbg !1483
  %3910 = add i32 %3909, -899497514, !dbg !1483
  %3911 = load i32, i32* %8, align 4, !dbg !1483
  %3912 = shl i32 %3911, 5, !dbg !1483
  %3913 = load i32, i32* %8, align 4, !dbg !1483
  %3914 = lshr i32 %3913, 27, !dbg !1483
  %3915 = or i32 %3912, %3914, !dbg !1483
  %3916 = add i32 %3910, %3915, !dbg !1483
  %3917 = load i32, i32* %7, align 4, !dbg !1483
  %3918 = add i32 %3917, %3916, !dbg !1483
  store i32 %3918, i32* %7, align 4, !dbg !1483
  %3919 = load i32, i32* %9, align 4, !dbg !1483
  %3920 = shl i32 %3919, 30, !dbg !1483
  %3921 = load i32, i32* %9, align 4, !dbg !1483
  %3922 = lshr i32 %3921, 2, !dbg !1483
  %3923 = or i32 %3920, %3922, !dbg !1483
  store i32 %3923, i32* %9, align 4, !dbg !1483
  %3924 = load i32, i32* %8, align 4, !dbg !1484
  %3925 = load i32, i32* %9, align 4, !dbg !1484
  %3926 = xor i32 %3924, %3925, !dbg !1484
  %3927 = load i32, i32* %5, align 4, !dbg !1484
  %3928 = xor i32 %3926, %3927, !dbg !1484
  %3929 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3930 = bitcast %union.CHAR64LONG16* %3929 to [16 x i32]*, !dbg !1484
  %3931 = getelementptr inbounds [16 x i32], [16 x i32]* %3930, i64 0, i64 12, !dbg !1484
  %3932 = load i32, i32* %3931, align 4, !dbg !1484
  %3933 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3934 = bitcast %union.CHAR64LONG16* %3933 to [16 x i32]*, !dbg !1484
  %3935 = getelementptr inbounds [16 x i32], [16 x i32]* %3934, i64 0, i64 7, !dbg !1484
  %3936 = load i32, i32* %3935, align 4, !dbg !1484
  %3937 = xor i32 %3932, %3936, !dbg !1484
  %3938 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3939 = bitcast %union.CHAR64LONG16* %3938 to [16 x i32]*, !dbg !1484
  %3940 = getelementptr inbounds [16 x i32], [16 x i32]* %3939, i64 0, i64 1, !dbg !1484
  %3941 = load i32, i32* %3940, align 4, !dbg !1484
  %3942 = xor i32 %3937, %3941, !dbg !1484
  %3943 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3944 = bitcast %union.CHAR64LONG16* %3943 to [16 x i32]*, !dbg !1484
  %3945 = getelementptr inbounds [16 x i32], [16 x i32]* %3944, i64 0, i64 15, !dbg !1484
  %3946 = load i32, i32* %3945, align 4, !dbg !1484
  %3947 = xor i32 %3942, %3946, !dbg !1484
  %3948 = shl i32 %3947, 1, !dbg !1484
  %3949 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3950 = bitcast %union.CHAR64LONG16* %3949 to [16 x i32]*, !dbg !1484
  %3951 = getelementptr inbounds [16 x i32], [16 x i32]* %3950, i64 0, i64 12, !dbg !1484
  %3952 = load i32, i32* %3951, align 4, !dbg !1484
  %3953 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3954 = bitcast %union.CHAR64LONG16* %3953 to [16 x i32]*, !dbg !1484
  %3955 = getelementptr inbounds [16 x i32], [16 x i32]* %3954, i64 0, i64 7, !dbg !1484
  %3956 = load i32, i32* %3955, align 4, !dbg !1484
  %3957 = xor i32 %3952, %3956, !dbg !1484
  %3958 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3959 = bitcast %union.CHAR64LONG16* %3958 to [16 x i32]*, !dbg !1484
  %3960 = getelementptr inbounds [16 x i32], [16 x i32]* %3959, i64 0, i64 1, !dbg !1484
  %3961 = load i32, i32* %3960, align 4, !dbg !1484
  %3962 = xor i32 %3957, %3961, !dbg !1484
  %3963 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3964 = bitcast %union.CHAR64LONG16* %3963 to [16 x i32]*, !dbg !1484
  %3965 = getelementptr inbounds [16 x i32], [16 x i32]* %3964, i64 0, i64 15, !dbg !1484
  %3966 = load i32, i32* %3965, align 4, !dbg !1484
  %3967 = xor i32 %3962, %3966, !dbg !1484
  %3968 = lshr i32 %3967, 31, !dbg !1484
  %3969 = or i32 %3948, %3968, !dbg !1484
  %3970 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1484
  %3971 = bitcast %union.CHAR64LONG16* %3970 to [16 x i32]*, !dbg !1484
  %3972 = getelementptr inbounds [16 x i32], [16 x i32]* %3971, i64 0, i64 15, !dbg !1484
  store i32 %3969, i32* %3972, align 4, !dbg !1484
  %3973 = add i32 %3928, %3969, !dbg !1484
  %3974 = add i32 %3973, -899497514, !dbg !1484
  %3975 = load i32, i32* %7, align 4, !dbg !1484
  %3976 = shl i32 %3975, 5, !dbg !1484
  %3977 = load i32, i32* %7, align 4, !dbg !1484
  %3978 = lshr i32 %3977, 27, !dbg !1484
  %3979 = or i32 %3976, %3978, !dbg !1484
  %3980 = add i32 %3974, %3979, !dbg !1484
  %3981 = load i32, i32* %6, align 4, !dbg !1484
  %3982 = add i32 %3981, %3980, !dbg !1484
  store i32 %3982, i32* %6, align 4, !dbg !1484
  %3983 = load i32, i32* %8, align 4, !dbg !1484
  %3984 = shl i32 %3983, 30, !dbg !1484
  %3985 = load i32, i32* %8, align 4, !dbg !1484
  %3986 = lshr i32 %3985, 2, !dbg !1484
  %3987 = or i32 %3984, %3986, !dbg !1484
  store i32 %3987, i32* %8, align 4, !dbg !1484
  %3988 = load i32, i32* %7, align 4, !dbg !1485
  %3989 = load i32, i32* %8, align 4, !dbg !1485
  %3990 = xor i32 %3988, %3989, !dbg !1485
  %3991 = load i32, i32* %9, align 4, !dbg !1485
  %3992 = xor i32 %3990, %3991, !dbg !1485
  %3993 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %3994 = bitcast %union.CHAR64LONG16* %3993 to [16 x i32]*, !dbg !1485
  %3995 = getelementptr inbounds [16 x i32], [16 x i32]* %3994, i64 0, i64 13, !dbg !1485
  %3996 = load i32, i32* %3995, align 4, !dbg !1485
  %3997 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %3998 = bitcast %union.CHAR64LONG16* %3997 to [16 x i32]*, !dbg !1485
  %3999 = getelementptr inbounds [16 x i32], [16 x i32]* %3998, i64 0, i64 8, !dbg !1485
  %4000 = load i32, i32* %3999, align 4, !dbg !1485
  %4001 = xor i32 %3996, %4000, !dbg !1485
  %4002 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4003 = bitcast %union.CHAR64LONG16* %4002 to [16 x i32]*, !dbg !1485
  %4004 = getelementptr inbounds [16 x i32], [16 x i32]* %4003, i64 0, i64 2, !dbg !1485
  %4005 = load i32, i32* %4004, align 4, !dbg !1485
  %4006 = xor i32 %4001, %4005, !dbg !1485
  %4007 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4008 = bitcast %union.CHAR64LONG16* %4007 to [16 x i32]*, !dbg !1485
  %4009 = getelementptr inbounds [16 x i32], [16 x i32]* %4008, i64 0, i64 0, !dbg !1485
  %4010 = load i32, i32* %4009, align 4, !dbg !1485
  %4011 = xor i32 %4006, %4010, !dbg !1485
  %4012 = shl i32 %4011, 1, !dbg !1485
  %4013 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4014 = bitcast %union.CHAR64LONG16* %4013 to [16 x i32]*, !dbg !1485
  %4015 = getelementptr inbounds [16 x i32], [16 x i32]* %4014, i64 0, i64 13, !dbg !1485
  %4016 = load i32, i32* %4015, align 4, !dbg !1485
  %4017 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4018 = bitcast %union.CHAR64LONG16* %4017 to [16 x i32]*, !dbg !1485
  %4019 = getelementptr inbounds [16 x i32], [16 x i32]* %4018, i64 0, i64 8, !dbg !1485
  %4020 = load i32, i32* %4019, align 4, !dbg !1485
  %4021 = xor i32 %4016, %4020, !dbg !1485
  %4022 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4023 = bitcast %union.CHAR64LONG16* %4022 to [16 x i32]*, !dbg !1485
  %4024 = getelementptr inbounds [16 x i32], [16 x i32]* %4023, i64 0, i64 2, !dbg !1485
  %4025 = load i32, i32* %4024, align 4, !dbg !1485
  %4026 = xor i32 %4021, %4025, !dbg !1485
  %4027 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4028 = bitcast %union.CHAR64LONG16* %4027 to [16 x i32]*, !dbg !1485
  %4029 = getelementptr inbounds [16 x i32], [16 x i32]* %4028, i64 0, i64 0, !dbg !1485
  %4030 = load i32, i32* %4029, align 4, !dbg !1485
  %4031 = xor i32 %4026, %4030, !dbg !1485
  %4032 = lshr i32 %4031, 31, !dbg !1485
  %4033 = or i32 %4012, %4032, !dbg !1485
  %4034 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1485
  %4035 = bitcast %union.CHAR64LONG16* %4034 to [16 x i32]*, !dbg !1485
  %4036 = getelementptr inbounds [16 x i32], [16 x i32]* %4035, i64 0, i64 0, !dbg !1485
  store i32 %4033, i32* %4036, align 4, !dbg !1485
  %4037 = add i32 %3992, %4033, !dbg !1485
  %4038 = add i32 %4037, -899497514, !dbg !1485
  %4039 = load i32, i32* %6, align 4, !dbg !1485
  %4040 = shl i32 %4039, 5, !dbg !1485
  %4041 = load i32, i32* %6, align 4, !dbg !1485
  %4042 = lshr i32 %4041, 27, !dbg !1485
  %4043 = or i32 %4040, %4042, !dbg !1485
  %4044 = add i32 %4038, %4043, !dbg !1485
  %4045 = load i32, i32* %5, align 4, !dbg !1485
  %4046 = add i32 %4045, %4044, !dbg !1485
  store i32 %4046, i32* %5, align 4, !dbg !1485
  %4047 = load i32, i32* %7, align 4, !dbg !1485
  %4048 = shl i32 %4047, 30, !dbg !1485
  %4049 = load i32, i32* %7, align 4, !dbg !1485
  %4050 = lshr i32 %4049, 2, !dbg !1485
  %4051 = or i32 %4048, %4050, !dbg !1485
  store i32 %4051, i32* %7, align 4, !dbg !1485
  %4052 = load i32, i32* %6, align 4, !dbg !1486
  %4053 = load i32, i32* %7, align 4, !dbg !1486
  %4054 = xor i32 %4052, %4053, !dbg !1486
  %4055 = load i32, i32* %8, align 4, !dbg !1486
  %4056 = xor i32 %4054, %4055, !dbg !1486
  %4057 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4058 = bitcast %union.CHAR64LONG16* %4057 to [16 x i32]*, !dbg !1486
  %4059 = getelementptr inbounds [16 x i32], [16 x i32]* %4058, i64 0, i64 14, !dbg !1486
  %4060 = load i32, i32* %4059, align 4, !dbg !1486
  %4061 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4062 = bitcast %union.CHAR64LONG16* %4061 to [16 x i32]*, !dbg !1486
  %4063 = getelementptr inbounds [16 x i32], [16 x i32]* %4062, i64 0, i64 9, !dbg !1486
  %4064 = load i32, i32* %4063, align 4, !dbg !1486
  %4065 = xor i32 %4060, %4064, !dbg !1486
  %4066 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4067 = bitcast %union.CHAR64LONG16* %4066 to [16 x i32]*, !dbg !1486
  %4068 = getelementptr inbounds [16 x i32], [16 x i32]* %4067, i64 0, i64 3, !dbg !1486
  %4069 = load i32, i32* %4068, align 4, !dbg !1486
  %4070 = xor i32 %4065, %4069, !dbg !1486
  %4071 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4072 = bitcast %union.CHAR64LONG16* %4071 to [16 x i32]*, !dbg !1486
  %4073 = getelementptr inbounds [16 x i32], [16 x i32]* %4072, i64 0, i64 1, !dbg !1486
  %4074 = load i32, i32* %4073, align 4, !dbg !1486
  %4075 = xor i32 %4070, %4074, !dbg !1486
  %4076 = shl i32 %4075, 1, !dbg !1486
  %4077 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4078 = bitcast %union.CHAR64LONG16* %4077 to [16 x i32]*, !dbg !1486
  %4079 = getelementptr inbounds [16 x i32], [16 x i32]* %4078, i64 0, i64 14, !dbg !1486
  %4080 = load i32, i32* %4079, align 4, !dbg !1486
  %4081 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4082 = bitcast %union.CHAR64LONG16* %4081 to [16 x i32]*, !dbg !1486
  %4083 = getelementptr inbounds [16 x i32], [16 x i32]* %4082, i64 0, i64 9, !dbg !1486
  %4084 = load i32, i32* %4083, align 4, !dbg !1486
  %4085 = xor i32 %4080, %4084, !dbg !1486
  %4086 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4087 = bitcast %union.CHAR64LONG16* %4086 to [16 x i32]*, !dbg !1486
  %4088 = getelementptr inbounds [16 x i32], [16 x i32]* %4087, i64 0, i64 3, !dbg !1486
  %4089 = load i32, i32* %4088, align 4, !dbg !1486
  %4090 = xor i32 %4085, %4089, !dbg !1486
  %4091 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4092 = bitcast %union.CHAR64LONG16* %4091 to [16 x i32]*, !dbg !1486
  %4093 = getelementptr inbounds [16 x i32], [16 x i32]* %4092, i64 0, i64 1, !dbg !1486
  %4094 = load i32, i32* %4093, align 4, !dbg !1486
  %4095 = xor i32 %4090, %4094, !dbg !1486
  %4096 = lshr i32 %4095, 31, !dbg !1486
  %4097 = or i32 %4076, %4096, !dbg !1486
  %4098 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1486
  %4099 = bitcast %union.CHAR64LONG16* %4098 to [16 x i32]*, !dbg !1486
  %4100 = getelementptr inbounds [16 x i32], [16 x i32]* %4099, i64 0, i64 1, !dbg !1486
  store i32 %4097, i32* %4100, align 4, !dbg !1486
  %4101 = add i32 %4056, %4097, !dbg !1486
  %4102 = add i32 %4101, -899497514, !dbg !1486
  %4103 = load i32, i32* %5, align 4, !dbg !1486
  %4104 = shl i32 %4103, 5, !dbg !1486
  %4105 = load i32, i32* %5, align 4, !dbg !1486
  %4106 = lshr i32 %4105, 27, !dbg !1486
  %4107 = or i32 %4104, %4106, !dbg !1486
  %4108 = add i32 %4102, %4107, !dbg !1486
  %4109 = load i32, i32* %9, align 4, !dbg !1486
  %4110 = add i32 %4109, %4108, !dbg !1486
  store i32 %4110, i32* %9, align 4, !dbg !1486
  %4111 = load i32, i32* %6, align 4, !dbg !1486
  %4112 = shl i32 %4111, 30, !dbg !1486
  %4113 = load i32, i32* %6, align 4, !dbg !1486
  %4114 = lshr i32 %4113, 2, !dbg !1486
  %4115 = or i32 %4112, %4114, !dbg !1486
  store i32 %4115, i32* %6, align 4, !dbg !1486
  %4116 = load i32, i32* %5, align 4, !dbg !1487
  %4117 = load i32, i32* %6, align 4, !dbg !1487
  %4118 = xor i32 %4116, %4117, !dbg !1487
  %4119 = load i32, i32* %7, align 4, !dbg !1487
  %4120 = xor i32 %4118, %4119, !dbg !1487
  %4121 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4122 = bitcast %union.CHAR64LONG16* %4121 to [16 x i32]*, !dbg !1487
  %4123 = getelementptr inbounds [16 x i32], [16 x i32]* %4122, i64 0, i64 15, !dbg !1487
  %4124 = load i32, i32* %4123, align 4, !dbg !1487
  %4125 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4126 = bitcast %union.CHAR64LONG16* %4125 to [16 x i32]*, !dbg !1487
  %4127 = getelementptr inbounds [16 x i32], [16 x i32]* %4126, i64 0, i64 10, !dbg !1487
  %4128 = load i32, i32* %4127, align 4, !dbg !1487
  %4129 = xor i32 %4124, %4128, !dbg !1487
  %4130 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4131 = bitcast %union.CHAR64LONG16* %4130 to [16 x i32]*, !dbg !1487
  %4132 = getelementptr inbounds [16 x i32], [16 x i32]* %4131, i64 0, i64 4, !dbg !1487
  %4133 = load i32, i32* %4132, align 4, !dbg !1487
  %4134 = xor i32 %4129, %4133, !dbg !1487
  %4135 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4136 = bitcast %union.CHAR64LONG16* %4135 to [16 x i32]*, !dbg !1487
  %4137 = getelementptr inbounds [16 x i32], [16 x i32]* %4136, i64 0, i64 2, !dbg !1487
  %4138 = load i32, i32* %4137, align 4, !dbg !1487
  %4139 = xor i32 %4134, %4138, !dbg !1487
  %4140 = shl i32 %4139, 1, !dbg !1487
  %4141 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4142 = bitcast %union.CHAR64LONG16* %4141 to [16 x i32]*, !dbg !1487
  %4143 = getelementptr inbounds [16 x i32], [16 x i32]* %4142, i64 0, i64 15, !dbg !1487
  %4144 = load i32, i32* %4143, align 4, !dbg !1487
  %4145 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4146 = bitcast %union.CHAR64LONG16* %4145 to [16 x i32]*, !dbg !1487
  %4147 = getelementptr inbounds [16 x i32], [16 x i32]* %4146, i64 0, i64 10, !dbg !1487
  %4148 = load i32, i32* %4147, align 4, !dbg !1487
  %4149 = xor i32 %4144, %4148, !dbg !1487
  %4150 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4151 = bitcast %union.CHAR64LONG16* %4150 to [16 x i32]*, !dbg !1487
  %4152 = getelementptr inbounds [16 x i32], [16 x i32]* %4151, i64 0, i64 4, !dbg !1487
  %4153 = load i32, i32* %4152, align 4, !dbg !1487
  %4154 = xor i32 %4149, %4153, !dbg !1487
  %4155 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4156 = bitcast %union.CHAR64LONG16* %4155 to [16 x i32]*, !dbg !1487
  %4157 = getelementptr inbounds [16 x i32], [16 x i32]* %4156, i64 0, i64 2, !dbg !1487
  %4158 = load i32, i32* %4157, align 4, !dbg !1487
  %4159 = xor i32 %4154, %4158, !dbg !1487
  %4160 = lshr i32 %4159, 31, !dbg !1487
  %4161 = or i32 %4140, %4160, !dbg !1487
  %4162 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1487
  %4163 = bitcast %union.CHAR64LONG16* %4162 to [16 x i32]*, !dbg !1487
  %4164 = getelementptr inbounds [16 x i32], [16 x i32]* %4163, i64 0, i64 2, !dbg !1487
  store i32 %4161, i32* %4164, align 4, !dbg !1487
  %4165 = add i32 %4120, %4161, !dbg !1487
  %4166 = add i32 %4165, -899497514, !dbg !1487
  %4167 = load i32, i32* %9, align 4, !dbg !1487
  %4168 = shl i32 %4167, 5, !dbg !1487
  %4169 = load i32, i32* %9, align 4, !dbg !1487
  %4170 = lshr i32 %4169, 27, !dbg !1487
  %4171 = or i32 %4168, %4170, !dbg !1487
  %4172 = add i32 %4166, %4171, !dbg !1487
  %4173 = load i32, i32* %8, align 4, !dbg !1487
  %4174 = add i32 %4173, %4172, !dbg !1487
  store i32 %4174, i32* %8, align 4, !dbg !1487
  %4175 = load i32, i32* %5, align 4, !dbg !1487
  %4176 = shl i32 %4175, 30, !dbg !1487
  %4177 = load i32, i32* %5, align 4, !dbg !1487
  %4178 = lshr i32 %4177, 2, !dbg !1487
  %4179 = or i32 %4176, %4178, !dbg !1487
  store i32 %4179, i32* %5, align 4, !dbg !1487
  %4180 = load i32, i32* %9, align 4, !dbg !1488
  %4181 = load i32, i32* %5, align 4, !dbg !1488
  %4182 = xor i32 %4180, %4181, !dbg !1488
  %4183 = load i32, i32* %6, align 4, !dbg !1488
  %4184 = xor i32 %4182, %4183, !dbg !1488
  %4185 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4186 = bitcast %union.CHAR64LONG16* %4185 to [16 x i32]*, !dbg !1488
  %4187 = getelementptr inbounds [16 x i32], [16 x i32]* %4186, i64 0, i64 0, !dbg !1488
  %4188 = load i32, i32* %4187, align 4, !dbg !1488
  %4189 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4190 = bitcast %union.CHAR64LONG16* %4189 to [16 x i32]*, !dbg !1488
  %4191 = getelementptr inbounds [16 x i32], [16 x i32]* %4190, i64 0, i64 11, !dbg !1488
  %4192 = load i32, i32* %4191, align 4, !dbg !1488
  %4193 = xor i32 %4188, %4192, !dbg !1488
  %4194 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4195 = bitcast %union.CHAR64LONG16* %4194 to [16 x i32]*, !dbg !1488
  %4196 = getelementptr inbounds [16 x i32], [16 x i32]* %4195, i64 0, i64 5, !dbg !1488
  %4197 = load i32, i32* %4196, align 4, !dbg !1488
  %4198 = xor i32 %4193, %4197, !dbg !1488
  %4199 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4200 = bitcast %union.CHAR64LONG16* %4199 to [16 x i32]*, !dbg !1488
  %4201 = getelementptr inbounds [16 x i32], [16 x i32]* %4200, i64 0, i64 3, !dbg !1488
  %4202 = load i32, i32* %4201, align 4, !dbg !1488
  %4203 = xor i32 %4198, %4202, !dbg !1488
  %4204 = shl i32 %4203, 1, !dbg !1488
  %4205 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4206 = bitcast %union.CHAR64LONG16* %4205 to [16 x i32]*, !dbg !1488
  %4207 = getelementptr inbounds [16 x i32], [16 x i32]* %4206, i64 0, i64 0, !dbg !1488
  %4208 = load i32, i32* %4207, align 4, !dbg !1488
  %4209 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4210 = bitcast %union.CHAR64LONG16* %4209 to [16 x i32]*, !dbg !1488
  %4211 = getelementptr inbounds [16 x i32], [16 x i32]* %4210, i64 0, i64 11, !dbg !1488
  %4212 = load i32, i32* %4211, align 4, !dbg !1488
  %4213 = xor i32 %4208, %4212, !dbg !1488
  %4214 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4215 = bitcast %union.CHAR64LONG16* %4214 to [16 x i32]*, !dbg !1488
  %4216 = getelementptr inbounds [16 x i32], [16 x i32]* %4215, i64 0, i64 5, !dbg !1488
  %4217 = load i32, i32* %4216, align 4, !dbg !1488
  %4218 = xor i32 %4213, %4217, !dbg !1488
  %4219 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4220 = bitcast %union.CHAR64LONG16* %4219 to [16 x i32]*, !dbg !1488
  %4221 = getelementptr inbounds [16 x i32], [16 x i32]* %4220, i64 0, i64 3, !dbg !1488
  %4222 = load i32, i32* %4221, align 4, !dbg !1488
  %4223 = xor i32 %4218, %4222, !dbg !1488
  %4224 = lshr i32 %4223, 31, !dbg !1488
  %4225 = or i32 %4204, %4224, !dbg !1488
  %4226 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1488
  %4227 = bitcast %union.CHAR64LONG16* %4226 to [16 x i32]*, !dbg !1488
  %4228 = getelementptr inbounds [16 x i32], [16 x i32]* %4227, i64 0, i64 3, !dbg !1488
  store i32 %4225, i32* %4228, align 4, !dbg !1488
  %4229 = add i32 %4184, %4225, !dbg !1488
  %4230 = add i32 %4229, -899497514, !dbg !1488
  %4231 = load i32, i32* %8, align 4, !dbg !1488
  %4232 = shl i32 %4231, 5, !dbg !1488
  %4233 = load i32, i32* %8, align 4, !dbg !1488
  %4234 = lshr i32 %4233, 27, !dbg !1488
  %4235 = or i32 %4232, %4234, !dbg !1488
  %4236 = add i32 %4230, %4235, !dbg !1488
  %4237 = load i32, i32* %7, align 4, !dbg !1488
  %4238 = add i32 %4237, %4236, !dbg !1488
  store i32 %4238, i32* %7, align 4, !dbg !1488
  %4239 = load i32, i32* %9, align 4, !dbg !1488
  %4240 = shl i32 %4239, 30, !dbg !1488
  %4241 = load i32, i32* %9, align 4, !dbg !1488
  %4242 = lshr i32 %4241, 2, !dbg !1488
  %4243 = or i32 %4240, %4242, !dbg !1488
  store i32 %4243, i32* %9, align 4, !dbg !1488
  %4244 = load i32, i32* %8, align 4, !dbg !1489
  %4245 = load i32, i32* %9, align 4, !dbg !1489
  %4246 = xor i32 %4244, %4245, !dbg !1489
  %4247 = load i32, i32* %5, align 4, !dbg !1489
  %4248 = xor i32 %4246, %4247, !dbg !1489
  %4249 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4250 = bitcast %union.CHAR64LONG16* %4249 to [16 x i32]*, !dbg !1489
  %4251 = getelementptr inbounds [16 x i32], [16 x i32]* %4250, i64 0, i64 1, !dbg !1489
  %4252 = load i32, i32* %4251, align 4, !dbg !1489
  %4253 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4254 = bitcast %union.CHAR64LONG16* %4253 to [16 x i32]*, !dbg !1489
  %4255 = getelementptr inbounds [16 x i32], [16 x i32]* %4254, i64 0, i64 12, !dbg !1489
  %4256 = load i32, i32* %4255, align 4, !dbg !1489
  %4257 = xor i32 %4252, %4256, !dbg !1489
  %4258 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4259 = bitcast %union.CHAR64LONG16* %4258 to [16 x i32]*, !dbg !1489
  %4260 = getelementptr inbounds [16 x i32], [16 x i32]* %4259, i64 0, i64 6, !dbg !1489
  %4261 = load i32, i32* %4260, align 4, !dbg !1489
  %4262 = xor i32 %4257, %4261, !dbg !1489
  %4263 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4264 = bitcast %union.CHAR64LONG16* %4263 to [16 x i32]*, !dbg !1489
  %4265 = getelementptr inbounds [16 x i32], [16 x i32]* %4264, i64 0, i64 4, !dbg !1489
  %4266 = load i32, i32* %4265, align 4, !dbg !1489
  %4267 = xor i32 %4262, %4266, !dbg !1489
  %4268 = shl i32 %4267, 1, !dbg !1489
  %4269 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4270 = bitcast %union.CHAR64LONG16* %4269 to [16 x i32]*, !dbg !1489
  %4271 = getelementptr inbounds [16 x i32], [16 x i32]* %4270, i64 0, i64 1, !dbg !1489
  %4272 = load i32, i32* %4271, align 4, !dbg !1489
  %4273 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4274 = bitcast %union.CHAR64LONG16* %4273 to [16 x i32]*, !dbg !1489
  %4275 = getelementptr inbounds [16 x i32], [16 x i32]* %4274, i64 0, i64 12, !dbg !1489
  %4276 = load i32, i32* %4275, align 4, !dbg !1489
  %4277 = xor i32 %4272, %4276, !dbg !1489
  %4278 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4279 = bitcast %union.CHAR64LONG16* %4278 to [16 x i32]*, !dbg !1489
  %4280 = getelementptr inbounds [16 x i32], [16 x i32]* %4279, i64 0, i64 6, !dbg !1489
  %4281 = load i32, i32* %4280, align 4, !dbg !1489
  %4282 = xor i32 %4277, %4281, !dbg !1489
  %4283 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4284 = bitcast %union.CHAR64LONG16* %4283 to [16 x i32]*, !dbg !1489
  %4285 = getelementptr inbounds [16 x i32], [16 x i32]* %4284, i64 0, i64 4, !dbg !1489
  %4286 = load i32, i32* %4285, align 4, !dbg !1489
  %4287 = xor i32 %4282, %4286, !dbg !1489
  %4288 = lshr i32 %4287, 31, !dbg !1489
  %4289 = or i32 %4268, %4288, !dbg !1489
  %4290 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1489
  %4291 = bitcast %union.CHAR64LONG16* %4290 to [16 x i32]*, !dbg !1489
  %4292 = getelementptr inbounds [16 x i32], [16 x i32]* %4291, i64 0, i64 4, !dbg !1489
  store i32 %4289, i32* %4292, align 4, !dbg !1489
  %4293 = add i32 %4248, %4289, !dbg !1489
  %4294 = add i32 %4293, -899497514, !dbg !1489
  %4295 = load i32, i32* %7, align 4, !dbg !1489
  %4296 = shl i32 %4295, 5, !dbg !1489
  %4297 = load i32, i32* %7, align 4, !dbg !1489
  %4298 = lshr i32 %4297, 27, !dbg !1489
  %4299 = or i32 %4296, %4298, !dbg !1489
  %4300 = add i32 %4294, %4299, !dbg !1489
  %4301 = load i32, i32* %6, align 4, !dbg !1489
  %4302 = add i32 %4301, %4300, !dbg !1489
  store i32 %4302, i32* %6, align 4, !dbg !1489
  %4303 = load i32, i32* %8, align 4, !dbg !1489
  %4304 = shl i32 %4303, 30, !dbg !1489
  %4305 = load i32, i32* %8, align 4, !dbg !1489
  %4306 = lshr i32 %4305, 2, !dbg !1489
  %4307 = or i32 %4304, %4306, !dbg !1489
  store i32 %4307, i32* %8, align 4, !dbg !1489
  %4308 = load i32, i32* %7, align 4, !dbg !1490
  %4309 = load i32, i32* %8, align 4, !dbg !1490
  %4310 = xor i32 %4308, %4309, !dbg !1490
  %4311 = load i32, i32* %9, align 4, !dbg !1490
  %4312 = xor i32 %4310, %4311, !dbg !1490
  %4313 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4314 = bitcast %union.CHAR64LONG16* %4313 to [16 x i32]*, !dbg !1490
  %4315 = getelementptr inbounds [16 x i32], [16 x i32]* %4314, i64 0, i64 2, !dbg !1490
  %4316 = load i32, i32* %4315, align 4, !dbg !1490
  %4317 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4318 = bitcast %union.CHAR64LONG16* %4317 to [16 x i32]*, !dbg !1490
  %4319 = getelementptr inbounds [16 x i32], [16 x i32]* %4318, i64 0, i64 13, !dbg !1490
  %4320 = load i32, i32* %4319, align 4, !dbg !1490
  %4321 = xor i32 %4316, %4320, !dbg !1490
  %4322 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4323 = bitcast %union.CHAR64LONG16* %4322 to [16 x i32]*, !dbg !1490
  %4324 = getelementptr inbounds [16 x i32], [16 x i32]* %4323, i64 0, i64 7, !dbg !1490
  %4325 = load i32, i32* %4324, align 4, !dbg !1490
  %4326 = xor i32 %4321, %4325, !dbg !1490
  %4327 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4328 = bitcast %union.CHAR64LONG16* %4327 to [16 x i32]*, !dbg !1490
  %4329 = getelementptr inbounds [16 x i32], [16 x i32]* %4328, i64 0, i64 5, !dbg !1490
  %4330 = load i32, i32* %4329, align 4, !dbg !1490
  %4331 = xor i32 %4326, %4330, !dbg !1490
  %4332 = shl i32 %4331, 1, !dbg !1490
  %4333 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4334 = bitcast %union.CHAR64LONG16* %4333 to [16 x i32]*, !dbg !1490
  %4335 = getelementptr inbounds [16 x i32], [16 x i32]* %4334, i64 0, i64 2, !dbg !1490
  %4336 = load i32, i32* %4335, align 4, !dbg !1490
  %4337 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4338 = bitcast %union.CHAR64LONG16* %4337 to [16 x i32]*, !dbg !1490
  %4339 = getelementptr inbounds [16 x i32], [16 x i32]* %4338, i64 0, i64 13, !dbg !1490
  %4340 = load i32, i32* %4339, align 4, !dbg !1490
  %4341 = xor i32 %4336, %4340, !dbg !1490
  %4342 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4343 = bitcast %union.CHAR64LONG16* %4342 to [16 x i32]*, !dbg !1490
  %4344 = getelementptr inbounds [16 x i32], [16 x i32]* %4343, i64 0, i64 7, !dbg !1490
  %4345 = load i32, i32* %4344, align 4, !dbg !1490
  %4346 = xor i32 %4341, %4345, !dbg !1490
  %4347 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4348 = bitcast %union.CHAR64LONG16* %4347 to [16 x i32]*, !dbg !1490
  %4349 = getelementptr inbounds [16 x i32], [16 x i32]* %4348, i64 0, i64 5, !dbg !1490
  %4350 = load i32, i32* %4349, align 4, !dbg !1490
  %4351 = xor i32 %4346, %4350, !dbg !1490
  %4352 = lshr i32 %4351, 31, !dbg !1490
  %4353 = or i32 %4332, %4352, !dbg !1490
  %4354 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1490
  %4355 = bitcast %union.CHAR64LONG16* %4354 to [16 x i32]*, !dbg !1490
  %4356 = getelementptr inbounds [16 x i32], [16 x i32]* %4355, i64 0, i64 5, !dbg !1490
  store i32 %4353, i32* %4356, align 4, !dbg !1490
  %4357 = add i32 %4312, %4353, !dbg !1490
  %4358 = add i32 %4357, -899497514, !dbg !1490
  %4359 = load i32, i32* %6, align 4, !dbg !1490
  %4360 = shl i32 %4359, 5, !dbg !1490
  %4361 = load i32, i32* %6, align 4, !dbg !1490
  %4362 = lshr i32 %4361, 27, !dbg !1490
  %4363 = or i32 %4360, %4362, !dbg !1490
  %4364 = add i32 %4358, %4363, !dbg !1490
  %4365 = load i32, i32* %5, align 4, !dbg !1490
  %4366 = add i32 %4365, %4364, !dbg !1490
  store i32 %4366, i32* %5, align 4, !dbg !1490
  %4367 = load i32, i32* %7, align 4, !dbg !1490
  %4368 = shl i32 %4367, 30, !dbg !1490
  %4369 = load i32, i32* %7, align 4, !dbg !1490
  %4370 = lshr i32 %4369, 2, !dbg !1490
  %4371 = or i32 %4368, %4370, !dbg !1490
  store i32 %4371, i32* %7, align 4, !dbg !1490
  %4372 = load i32, i32* %6, align 4, !dbg !1491
  %4373 = load i32, i32* %7, align 4, !dbg !1491
  %4374 = xor i32 %4372, %4373, !dbg !1491
  %4375 = load i32, i32* %8, align 4, !dbg !1491
  %4376 = xor i32 %4374, %4375, !dbg !1491
  %4377 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4378 = bitcast %union.CHAR64LONG16* %4377 to [16 x i32]*, !dbg !1491
  %4379 = getelementptr inbounds [16 x i32], [16 x i32]* %4378, i64 0, i64 3, !dbg !1491
  %4380 = load i32, i32* %4379, align 4, !dbg !1491
  %4381 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4382 = bitcast %union.CHAR64LONG16* %4381 to [16 x i32]*, !dbg !1491
  %4383 = getelementptr inbounds [16 x i32], [16 x i32]* %4382, i64 0, i64 14, !dbg !1491
  %4384 = load i32, i32* %4383, align 4, !dbg !1491
  %4385 = xor i32 %4380, %4384, !dbg !1491
  %4386 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4387 = bitcast %union.CHAR64LONG16* %4386 to [16 x i32]*, !dbg !1491
  %4388 = getelementptr inbounds [16 x i32], [16 x i32]* %4387, i64 0, i64 8, !dbg !1491
  %4389 = load i32, i32* %4388, align 4, !dbg !1491
  %4390 = xor i32 %4385, %4389, !dbg !1491
  %4391 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4392 = bitcast %union.CHAR64LONG16* %4391 to [16 x i32]*, !dbg !1491
  %4393 = getelementptr inbounds [16 x i32], [16 x i32]* %4392, i64 0, i64 6, !dbg !1491
  %4394 = load i32, i32* %4393, align 4, !dbg !1491
  %4395 = xor i32 %4390, %4394, !dbg !1491
  %4396 = shl i32 %4395, 1, !dbg !1491
  %4397 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4398 = bitcast %union.CHAR64LONG16* %4397 to [16 x i32]*, !dbg !1491
  %4399 = getelementptr inbounds [16 x i32], [16 x i32]* %4398, i64 0, i64 3, !dbg !1491
  %4400 = load i32, i32* %4399, align 4, !dbg !1491
  %4401 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4402 = bitcast %union.CHAR64LONG16* %4401 to [16 x i32]*, !dbg !1491
  %4403 = getelementptr inbounds [16 x i32], [16 x i32]* %4402, i64 0, i64 14, !dbg !1491
  %4404 = load i32, i32* %4403, align 4, !dbg !1491
  %4405 = xor i32 %4400, %4404, !dbg !1491
  %4406 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4407 = bitcast %union.CHAR64LONG16* %4406 to [16 x i32]*, !dbg !1491
  %4408 = getelementptr inbounds [16 x i32], [16 x i32]* %4407, i64 0, i64 8, !dbg !1491
  %4409 = load i32, i32* %4408, align 4, !dbg !1491
  %4410 = xor i32 %4405, %4409, !dbg !1491
  %4411 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4412 = bitcast %union.CHAR64LONG16* %4411 to [16 x i32]*, !dbg !1491
  %4413 = getelementptr inbounds [16 x i32], [16 x i32]* %4412, i64 0, i64 6, !dbg !1491
  %4414 = load i32, i32* %4413, align 4, !dbg !1491
  %4415 = xor i32 %4410, %4414, !dbg !1491
  %4416 = lshr i32 %4415, 31, !dbg !1491
  %4417 = or i32 %4396, %4416, !dbg !1491
  %4418 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1491
  %4419 = bitcast %union.CHAR64LONG16* %4418 to [16 x i32]*, !dbg !1491
  %4420 = getelementptr inbounds [16 x i32], [16 x i32]* %4419, i64 0, i64 6, !dbg !1491
  store i32 %4417, i32* %4420, align 4, !dbg !1491
  %4421 = add i32 %4376, %4417, !dbg !1491
  %4422 = add i32 %4421, -899497514, !dbg !1491
  %4423 = load i32, i32* %5, align 4, !dbg !1491
  %4424 = shl i32 %4423, 5, !dbg !1491
  %4425 = load i32, i32* %5, align 4, !dbg !1491
  %4426 = lshr i32 %4425, 27, !dbg !1491
  %4427 = or i32 %4424, %4426, !dbg !1491
  %4428 = add i32 %4422, %4427, !dbg !1491
  %4429 = load i32, i32* %9, align 4, !dbg !1491
  %4430 = add i32 %4429, %4428, !dbg !1491
  store i32 %4430, i32* %9, align 4, !dbg !1491
  %4431 = load i32, i32* %6, align 4, !dbg !1491
  %4432 = shl i32 %4431, 30, !dbg !1491
  %4433 = load i32, i32* %6, align 4, !dbg !1491
  %4434 = lshr i32 %4433, 2, !dbg !1491
  %4435 = or i32 %4432, %4434, !dbg !1491
  store i32 %4435, i32* %6, align 4, !dbg !1491
  %4436 = load i32, i32* %5, align 4, !dbg !1492
  %4437 = load i32, i32* %6, align 4, !dbg !1492
  %4438 = xor i32 %4436, %4437, !dbg !1492
  %4439 = load i32, i32* %7, align 4, !dbg !1492
  %4440 = xor i32 %4438, %4439, !dbg !1492
  %4441 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4442 = bitcast %union.CHAR64LONG16* %4441 to [16 x i32]*, !dbg !1492
  %4443 = getelementptr inbounds [16 x i32], [16 x i32]* %4442, i64 0, i64 4, !dbg !1492
  %4444 = load i32, i32* %4443, align 4, !dbg !1492
  %4445 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4446 = bitcast %union.CHAR64LONG16* %4445 to [16 x i32]*, !dbg !1492
  %4447 = getelementptr inbounds [16 x i32], [16 x i32]* %4446, i64 0, i64 15, !dbg !1492
  %4448 = load i32, i32* %4447, align 4, !dbg !1492
  %4449 = xor i32 %4444, %4448, !dbg !1492
  %4450 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4451 = bitcast %union.CHAR64LONG16* %4450 to [16 x i32]*, !dbg !1492
  %4452 = getelementptr inbounds [16 x i32], [16 x i32]* %4451, i64 0, i64 9, !dbg !1492
  %4453 = load i32, i32* %4452, align 4, !dbg !1492
  %4454 = xor i32 %4449, %4453, !dbg !1492
  %4455 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4456 = bitcast %union.CHAR64LONG16* %4455 to [16 x i32]*, !dbg !1492
  %4457 = getelementptr inbounds [16 x i32], [16 x i32]* %4456, i64 0, i64 7, !dbg !1492
  %4458 = load i32, i32* %4457, align 4, !dbg !1492
  %4459 = xor i32 %4454, %4458, !dbg !1492
  %4460 = shl i32 %4459, 1, !dbg !1492
  %4461 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4462 = bitcast %union.CHAR64LONG16* %4461 to [16 x i32]*, !dbg !1492
  %4463 = getelementptr inbounds [16 x i32], [16 x i32]* %4462, i64 0, i64 4, !dbg !1492
  %4464 = load i32, i32* %4463, align 4, !dbg !1492
  %4465 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4466 = bitcast %union.CHAR64LONG16* %4465 to [16 x i32]*, !dbg !1492
  %4467 = getelementptr inbounds [16 x i32], [16 x i32]* %4466, i64 0, i64 15, !dbg !1492
  %4468 = load i32, i32* %4467, align 4, !dbg !1492
  %4469 = xor i32 %4464, %4468, !dbg !1492
  %4470 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4471 = bitcast %union.CHAR64LONG16* %4470 to [16 x i32]*, !dbg !1492
  %4472 = getelementptr inbounds [16 x i32], [16 x i32]* %4471, i64 0, i64 9, !dbg !1492
  %4473 = load i32, i32* %4472, align 4, !dbg !1492
  %4474 = xor i32 %4469, %4473, !dbg !1492
  %4475 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4476 = bitcast %union.CHAR64LONG16* %4475 to [16 x i32]*, !dbg !1492
  %4477 = getelementptr inbounds [16 x i32], [16 x i32]* %4476, i64 0, i64 7, !dbg !1492
  %4478 = load i32, i32* %4477, align 4, !dbg !1492
  %4479 = xor i32 %4474, %4478, !dbg !1492
  %4480 = lshr i32 %4479, 31, !dbg !1492
  %4481 = or i32 %4460, %4480, !dbg !1492
  %4482 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1492
  %4483 = bitcast %union.CHAR64LONG16* %4482 to [16 x i32]*, !dbg !1492
  %4484 = getelementptr inbounds [16 x i32], [16 x i32]* %4483, i64 0, i64 7, !dbg !1492
  store i32 %4481, i32* %4484, align 4, !dbg !1492
  %4485 = add i32 %4440, %4481, !dbg !1492
  %4486 = add i32 %4485, -899497514, !dbg !1492
  %4487 = load i32, i32* %9, align 4, !dbg !1492
  %4488 = shl i32 %4487, 5, !dbg !1492
  %4489 = load i32, i32* %9, align 4, !dbg !1492
  %4490 = lshr i32 %4489, 27, !dbg !1492
  %4491 = or i32 %4488, %4490, !dbg !1492
  %4492 = add i32 %4486, %4491, !dbg !1492
  %4493 = load i32, i32* %8, align 4, !dbg !1492
  %4494 = add i32 %4493, %4492, !dbg !1492
  store i32 %4494, i32* %8, align 4, !dbg !1492
  %4495 = load i32, i32* %5, align 4, !dbg !1492
  %4496 = shl i32 %4495, 30, !dbg !1492
  %4497 = load i32, i32* %5, align 4, !dbg !1492
  %4498 = lshr i32 %4497, 2, !dbg !1492
  %4499 = or i32 %4496, %4498, !dbg !1492
  store i32 %4499, i32* %5, align 4, !dbg !1492
  %4500 = load i32, i32* %9, align 4, !dbg !1493
  %4501 = load i32, i32* %5, align 4, !dbg !1493
  %4502 = xor i32 %4500, %4501, !dbg !1493
  %4503 = load i32, i32* %6, align 4, !dbg !1493
  %4504 = xor i32 %4502, %4503, !dbg !1493
  %4505 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4506 = bitcast %union.CHAR64LONG16* %4505 to [16 x i32]*, !dbg !1493
  %4507 = getelementptr inbounds [16 x i32], [16 x i32]* %4506, i64 0, i64 5, !dbg !1493
  %4508 = load i32, i32* %4507, align 4, !dbg !1493
  %4509 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4510 = bitcast %union.CHAR64LONG16* %4509 to [16 x i32]*, !dbg !1493
  %4511 = getelementptr inbounds [16 x i32], [16 x i32]* %4510, i64 0, i64 0, !dbg !1493
  %4512 = load i32, i32* %4511, align 4, !dbg !1493
  %4513 = xor i32 %4508, %4512, !dbg !1493
  %4514 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4515 = bitcast %union.CHAR64LONG16* %4514 to [16 x i32]*, !dbg !1493
  %4516 = getelementptr inbounds [16 x i32], [16 x i32]* %4515, i64 0, i64 10, !dbg !1493
  %4517 = load i32, i32* %4516, align 4, !dbg !1493
  %4518 = xor i32 %4513, %4517, !dbg !1493
  %4519 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4520 = bitcast %union.CHAR64LONG16* %4519 to [16 x i32]*, !dbg !1493
  %4521 = getelementptr inbounds [16 x i32], [16 x i32]* %4520, i64 0, i64 8, !dbg !1493
  %4522 = load i32, i32* %4521, align 4, !dbg !1493
  %4523 = xor i32 %4518, %4522, !dbg !1493
  %4524 = shl i32 %4523, 1, !dbg !1493
  %4525 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4526 = bitcast %union.CHAR64LONG16* %4525 to [16 x i32]*, !dbg !1493
  %4527 = getelementptr inbounds [16 x i32], [16 x i32]* %4526, i64 0, i64 5, !dbg !1493
  %4528 = load i32, i32* %4527, align 4, !dbg !1493
  %4529 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4530 = bitcast %union.CHAR64LONG16* %4529 to [16 x i32]*, !dbg !1493
  %4531 = getelementptr inbounds [16 x i32], [16 x i32]* %4530, i64 0, i64 0, !dbg !1493
  %4532 = load i32, i32* %4531, align 4, !dbg !1493
  %4533 = xor i32 %4528, %4532, !dbg !1493
  %4534 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4535 = bitcast %union.CHAR64LONG16* %4534 to [16 x i32]*, !dbg !1493
  %4536 = getelementptr inbounds [16 x i32], [16 x i32]* %4535, i64 0, i64 10, !dbg !1493
  %4537 = load i32, i32* %4536, align 4, !dbg !1493
  %4538 = xor i32 %4533, %4537, !dbg !1493
  %4539 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4540 = bitcast %union.CHAR64LONG16* %4539 to [16 x i32]*, !dbg !1493
  %4541 = getelementptr inbounds [16 x i32], [16 x i32]* %4540, i64 0, i64 8, !dbg !1493
  %4542 = load i32, i32* %4541, align 4, !dbg !1493
  %4543 = xor i32 %4538, %4542, !dbg !1493
  %4544 = lshr i32 %4543, 31, !dbg !1493
  %4545 = or i32 %4524, %4544, !dbg !1493
  %4546 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1493
  %4547 = bitcast %union.CHAR64LONG16* %4546 to [16 x i32]*, !dbg !1493
  %4548 = getelementptr inbounds [16 x i32], [16 x i32]* %4547, i64 0, i64 8, !dbg !1493
  store i32 %4545, i32* %4548, align 4, !dbg !1493
  %4549 = add i32 %4504, %4545, !dbg !1493
  %4550 = add i32 %4549, -899497514, !dbg !1493
  %4551 = load i32, i32* %8, align 4, !dbg !1493
  %4552 = shl i32 %4551, 5, !dbg !1493
  %4553 = load i32, i32* %8, align 4, !dbg !1493
  %4554 = lshr i32 %4553, 27, !dbg !1493
  %4555 = or i32 %4552, %4554, !dbg !1493
  %4556 = add i32 %4550, %4555, !dbg !1493
  %4557 = load i32, i32* %7, align 4, !dbg !1493
  %4558 = add i32 %4557, %4556, !dbg !1493
  store i32 %4558, i32* %7, align 4, !dbg !1493
  %4559 = load i32, i32* %9, align 4, !dbg !1493
  %4560 = shl i32 %4559, 30, !dbg !1493
  %4561 = load i32, i32* %9, align 4, !dbg !1493
  %4562 = lshr i32 %4561, 2, !dbg !1493
  %4563 = or i32 %4560, %4562, !dbg !1493
  store i32 %4563, i32* %9, align 4, !dbg !1493
  %4564 = load i32, i32* %8, align 4, !dbg !1494
  %4565 = load i32, i32* %9, align 4, !dbg !1494
  %4566 = xor i32 %4564, %4565, !dbg !1494
  %4567 = load i32, i32* %5, align 4, !dbg !1494
  %4568 = xor i32 %4566, %4567, !dbg !1494
  %4569 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4570 = bitcast %union.CHAR64LONG16* %4569 to [16 x i32]*, !dbg !1494
  %4571 = getelementptr inbounds [16 x i32], [16 x i32]* %4570, i64 0, i64 6, !dbg !1494
  %4572 = load i32, i32* %4571, align 4, !dbg !1494
  %4573 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4574 = bitcast %union.CHAR64LONG16* %4573 to [16 x i32]*, !dbg !1494
  %4575 = getelementptr inbounds [16 x i32], [16 x i32]* %4574, i64 0, i64 1, !dbg !1494
  %4576 = load i32, i32* %4575, align 4, !dbg !1494
  %4577 = xor i32 %4572, %4576, !dbg !1494
  %4578 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4579 = bitcast %union.CHAR64LONG16* %4578 to [16 x i32]*, !dbg !1494
  %4580 = getelementptr inbounds [16 x i32], [16 x i32]* %4579, i64 0, i64 11, !dbg !1494
  %4581 = load i32, i32* %4580, align 4, !dbg !1494
  %4582 = xor i32 %4577, %4581, !dbg !1494
  %4583 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4584 = bitcast %union.CHAR64LONG16* %4583 to [16 x i32]*, !dbg !1494
  %4585 = getelementptr inbounds [16 x i32], [16 x i32]* %4584, i64 0, i64 9, !dbg !1494
  %4586 = load i32, i32* %4585, align 4, !dbg !1494
  %4587 = xor i32 %4582, %4586, !dbg !1494
  %4588 = shl i32 %4587, 1, !dbg !1494
  %4589 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4590 = bitcast %union.CHAR64LONG16* %4589 to [16 x i32]*, !dbg !1494
  %4591 = getelementptr inbounds [16 x i32], [16 x i32]* %4590, i64 0, i64 6, !dbg !1494
  %4592 = load i32, i32* %4591, align 4, !dbg !1494
  %4593 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4594 = bitcast %union.CHAR64LONG16* %4593 to [16 x i32]*, !dbg !1494
  %4595 = getelementptr inbounds [16 x i32], [16 x i32]* %4594, i64 0, i64 1, !dbg !1494
  %4596 = load i32, i32* %4595, align 4, !dbg !1494
  %4597 = xor i32 %4592, %4596, !dbg !1494
  %4598 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4599 = bitcast %union.CHAR64LONG16* %4598 to [16 x i32]*, !dbg !1494
  %4600 = getelementptr inbounds [16 x i32], [16 x i32]* %4599, i64 0, i64 11, !dbg !1494
  %4601 = load i32, i32* %4600, align 4, !dbg !1494
  %4602 = xor i32 %4597, %4601, !dbg !1494
  %4603 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4604 = bitcast %union.CHAR64LONG16* %4603 to [16 x i32]*, !dbg !1494
  %4605 = getelementptr inbounds [16 x i32], [16 x i32]* %4604, i64 0, i64 9, !dbg !1494
  %4606 = load i32, i32* %4605, align 4, !dbg !1494
  %4607 = xor i32 %4602, %4606, !dbg !1494
  %4608 = lshr i32 %4607, 31, !dbg !1494
  %4609 = or i32 %4588, %4608, !dbg !1494
  %4610 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1494
  %4611 = bitcast %union.CHAR64LONG16* %4610 to [16 x i32]*, !dbg !1494
  %4612 = getelementptr inbounds [16 x i32], [16 x i32]* %4611, i64 0, i64 9, !dbg !1494
  store i32 %4609, i32* %4612, align 4, !dbg !1494
  %4613 = add i32 %4568, %4609, !dbg !1494
  %4614 = add i32 %4613, -899497514, !dbg !1494
  %4615 = load i32, i32* %7, align 4, !dbg !1494
  %4616 = shl i32 %4615, 5, !dbg !1494
  %4617 = load i32, i32* %7, align 4, !dbg !1494
  %4618 = lshr i32 %4617, 27, !dbg !1494
  %4619 = or i32 %4616, %4618, !dbg !1494
  %4620 = add i32 %4614, %4619, !dbg !1494
  %4621 = load i32, i32* %6, align 4, !dbg !1494
  %4622 = add i32 %4621, %4620, !dbg !1494
  store i32 %4622, i32* %6, align 4, !dbg !1494
  %4623 = load i32, i32* %8, align 4, !dbg !1494
  %4624 = shl i32 %4623, 30, !dbg !1494
  %4625 = load i32, i32* %8, align 4, !dbg !1494
  %4626 = lshr i32 %4625, 2, !dbg !1494
  %4627 = or i32 %4624, %4626, !dbg !1494
  store i32 %4627, i32* %8, align 4, !dbg !1494
  %4628 = load i32, i32* %7, align 4, !dbg !1495
  %4629 = load i32, i32* %8, align 4, !dbg !1495
  %4630 = xor i32 %4628, %4629, !dbg !1495
  %4631 = load i32, i32* %9, align 4, !dbg !1495
  %4632 = xor i32 %4630, %4631, !dbg !1495
  %4633 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4634 = bitcast %union.CHAR64LONG16* %4633 to [16 x i32]*, !dbg !1495
  %4635 = getelementptr inbounds [16 x i32], [16 x i32]* %4634, i64 0, i64 7, !dbg !1495
  %4636 = load i32, i32* %4635, align 4, !dbg !1495
  %4637 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4638 = bitcast %union.CHAR64LONG16* %4637 to [16 x i32]*, !dbg !1495
  %4639 = getelementptr inbounds [16 x i32], [16 x i32]* %4638, i64 0, i64 2, !dbg !1495
  %4640 = load i32, i32* %4639, align 4, !dbg !1495
  %4641 = xor i32 %4636, %4640, !dbg !1495
  %4642 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4643 = bitcast %union.CHAR64LONG16* %4642 to [16 x i32]*, !dbg !1495
  %4644 = getelementptr inbounds [16 x i32], [16 x i32]* %4643, i64 0, i64 12, !dbg !1495
  %4645 = load i32, i32* %4644, align 4, !dbg !1495
  %4646 = xor i32 %4641, %4645, !dbg !1495
  %4647 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4648 = bitcast %union.CHAR64LONG16* %4647 to [16 x i32]*, !dbg !1495
  %4649 = getelementptr inbounds [16 x i32], [16 x i32]* %4648, i64 0, i64 10, !dbg !1495
  %4650 = load i32, i32* %4649, align 4, !dbg !1495
  %4651 = xor i32 %4646, %4650, !dbg !1495
  %4652 = shl i32 %4651, 1, !dbg !1495
  %4653 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4654 = bitcast %union.CHAR64LONG16* %4653 to [16 x i32]*, !dbg !1495
  %4655 = getelementptr inbounds [16 x i32], [16 x i32]* %4654, i64 0, i64 7, !dbg !1495
  %4656 = load i32, i32* %4655, align 4, !dbg !1495
  %4657 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4658 = bitcast %union.CHAR64LONG16* %4657 to [16 x i32]*, !dbg !1495
  %4659 = getelementptr inbounds [16 x i32], [16 x i32]* %4658, i64 0, i64 2, !dbg !1495
  %4660 = load i32, i32* %4659, align 4, !dbg !1495
  %4661 = xor i32 %4656, %4660, !dbg !1495
  %4662 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4663 = bitcast %union.CHAR64LONG16* %4662 to [16 x i32]*, !dbg !1495
  %4664 = getelementptr inbounds [16 x i32], [16 x i32]* %4663, i64 0, i64 12, !dbg !1495
  %4665 = load i32, i32* %4664, align 4, !dbg !1495
  %4666 = xor i32 %4661, %4665, !dbg !1495
  %4667 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4668 = bitcast %union.CHAR64LONG16* %4667 to [16 x i32]*, !dbg !1495
  %4669 = getelementptr inbounds [16 x i32], [16 x i32]* %4668, i64 0, i64 10, !dbg !1495
  %4670 = load i32, i32* %4669, align 4, !dbg !1495
  %4671 = xor i32 %4666, %4670, !dbg !1495
  %4672 = lshr i32 %4671, 31, !dbg !1495
  %4673 = or i32 %4652, %4672, !dbg !1495
  %4674 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1495
  %4675 = bitcast %union.CHAR64LONG16* %4674 to [16 x i32]*, !dbg !1495
  %4676 = getelementptr inbounds [16 x i32], [16 x i32]* %4675, i64 0, i64 10, !dbg !1495
  store i32 %4673, i32* %4676, align 4, !dbg !1495
  %4677 = add i32 %4632, %4673, !dbg !1495
  %4678 = add i32 %4677, -899497514, !dbg !1495
  %4679 = load i32, i32* %6, align 4, !dbg !1495
  %4680 = shl i32 %4679, 5, !dbg !1495
  %4681 = load i32, i32* %6, align 4, !dbg !1495
  %4682 = lshr i32 %4681, 27, !dbg !1495
  %4683 = or i32 %4680, %4682, !dbg !1495
  %4684 = add i32 %4678, %4683, !dbg !1495
  %4685 = load i32, i32* %5, align 4, !dbg !1495
  %4686 = add i32 %4685, %4684, !dbg !1495
  store i32 %4686, i32* %5, align 4, !dbg !1495
  %4687 = load i32, i32* %7, align 4, !dbg !1495
  %4688 = shl i32 %4687, 30, !dbg !1495
  %4689 = load i32, i32* %7, align 4, !dbg !1495
  %4690 = lshr i32 %4689, 2, !dbg !1495
  %4691 = or i32 %4688, %4690, !dbg !1495
  store i32 %4691, i32* %7, align 4, !dbg !1495
  %4692 = load i32, i32* %6, align 4, !dbg !1496
  %4693 = load i32, i32* %7, align 4, !dbg !1496
  %4694 = xor i32 %4692, %4693, !dbg !1496
  %4695 = load i32, i32* %8, align 4, !dbg !1496
  %4696 = xor i32 %4694, %4695, !dbg !1496
  %4697 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4698 = bitcast %union.CHAR64LONG16* %4697 to [16 x i32]*, !dbg !1496
  %4699 = getelementptr inbounds [16 x i32], [16 x i32]* %4698, i64 0, i64 8, !dbg !1496
  %4700 = load i32, i32* %4699, align 4, !dbg !1496
  %4701 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4702 = bitcast %union.CHAR64LONG16* %4701 to [16 x i32]*, !dbg !1496
  %4703 = getelementptr inbounds [16 x i32], [16 x i32]* %4702, i64 0, i64 3, !dbg !1496
  %4704 = load i32, i32* %4703, align 4, !dbg !1496
  %4705 = xor i32 %4700, %4704, !dbg !1496
  %4706 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4707 = bitcast %union.CHAR64LONG16* %4706 to [16 x i32]*, !dbg !1496
  %4708 = getelementptr inbounds [16 x i32], [16 x i32]* %4707, i64 0, i64 13, !dbg !1496
  %4709 = load i32, i32* %4708, align 4, !dbg !1496
  %4710 = xor i32 %4705, %4709, !dbg !1496
  %4711 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4712 = bitcast %union.CHAR64LONG16* %4711 to [16 x i32]*, !dbg !1496
  %4713 = getelementptr inbounds [16 x i32], [16 x i32]* %4712, i64 0, i64 11, !dbg !1496
  %4714 = load i32, i32* %4713, align 4, !dbg !1496
  %4715 = xor i32 %4710, %4714, !dbg !1496
  %4716 = shl i32 %4715, 1, !dbg !1496
  %4717 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4718 = bitcast %union.CHAR64LONG16* %4717 to [16 x i32]*, !dbg !1496
  %4719 = getelementptr inbounds [16 x i32], [16 x i32]* %4718, i64 0, i64 8, !dbg !1496
  %4720 = load i32, i32* %4719, align 4, !dbg !1496
  %4721 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4722 = bitcast %union.CHAR64LONG16* %4721 to [16 x i32]*, !dbg !1496
  %4723 = getelementptr inbounds [16 x i32], [16 x i32]* %4722, i64 0, i64 3, !dbg !1496
  %4724 = load i32, i32* %4723, align 4, !dbg !1496
  %4725 = xor i32 %4720, %4724, !dbg !1496
  %4726 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4727 = bitcast %union.CHAR64LONG16* %4726 to [16 x i32]*, !dbg !1496
  %4728 = getelementptr inbounds [16 x i32], [16 x i32]* %4727, i64 0, i64 13, !dbg !1496
  %4729 = load i32, i32* %4728, align 4, !dbg !1496
  %4730 = xor i32 %4725, %4729, !dbg !1496
  %4731 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4732 = bitcast %union.CHAR64LONG16* %4731 to [16 x i32]*, !dbg !1496
  %4733 = getelementptr inbounds [16 x i32], [16 x i32]* %4732, i64 0, i64 11, !dbg !1496
  %4734 = load i32, i32* %4733, align 4, !dbg !1496
  %4735 = xor i32 %4730, %4734, !dbg !1496
  %4736 = lshr i32 %4735, 31, !dbg !1496
  %4737 = or i32 %4716, %4736, !dbg !1496
  %4738 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1496
  %4739 = bitcast %union.CHAR64LONG16* %4738 to [16 x i32]*, !dbg !1496
  %4740 = getelementptr inbounds [16 x i32], [16 x i32]* %4739, i64 0, i64 11, !dbg !1496
  store i32 %4737, i32* %4740, align 4, !dbg !1496
  %4741 = add i32 %4696, %4737, !dbg !1496
  %4742 = add i32 %4741, -899497514, !dbg !1496
  %4743 = load i32, i32* %5, align 4, !dbg !1496
  %4744 = shl i32 %4743, 5, !dbg !1496
  %4745 = load i32, i32* %5, align 4, !dbg !1496
  %4746 = lshr i32 %4745, 27, !dbg !1496
  %4747 = or i32 %4744, %4746, !dbg !1496
  %4748 = add i32 %4742, %4747, !dbg !1496
  %4749 = load i32, i32* %9, align 4, !dbg !1496
  %4750 = add i32 %4749, %4748, !dbg !1496
  store i32 %4750, i32* %9, align 4, !dbg !1496
  %4751 = load i32, i32* %6, align 4, !dbg !1496
  %4752 = shl i32 %4751, 30, !dbg !1496
  %4753 = load i32, i32* %6, align 4, !dbg !1496
  %4754 = lshr i32 %4753, 2, !dbg !1496
  %4755 = or i32 %4752, %4754, !dbg !1496
  store i32 %4755, i32* %6, align 4, !dbg !1496
  %4756 = load i32, i32* %5, align 4, !dbg !1497
  %4757 = load i32, i32* %6, align 4, !dbg !1497
  %4758 = xor i32 %4756, %4757, !dbg !1497
  %4759 = load i32, i32* %7, align 4, !dbg !1497
  %4760 = xor i32 %4758, %4759, !dbg !1497
  %4761 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4762 = bitcast %union.CHAR64LONG16* %4761 to [16 x i32]*, !dbg !1497
  %4763 = getelementptr inbounds [16 x i32], [16 x i32]* %4762, i64 0, i64 9, !dbg !1497
  %4764 = load i32, i32* %4763, align 4, !dbg !1497
  %4765 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4766 = bitcast %union.CHAR64LONG16* %4765 to [16 x i32]*, !dbg !1497
  %4767 = getelementptr inbounds [16 x i32], [16 x i32]* %4766, i64 0, i64 4, !dbg !1497
  %4768 = load i32, i32* %4767, align 4, !dbg !1497
  %4769 = xor i32 %4764, %4768, !dbg !1497
  %4770 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4771 = bitcast %union.CHAR64LONG16* %4770 to [16 x i32]*, !dbg !1497
  %4772 = getelementptr inbounds [16 x i32], [16 x i32]* %4771, i64 0, i64 14, !dbg !1497
  %4773 = load i32, i32* %4772, align 4, !dbg !1497
  %4774 = xor i32 %4769, %4773, !dbg !1497
  %4775 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4776 = bitcast %union.CHAR64LONG16* %4775 to [16 x i32]*, !dbg !1497
  %4777 = getelementptr inbounds [16 x i32], [16 x i32]* %4776, i64 0, i64 12, !dbg !1497
  %4778 = load i32, i32* %4777, align 4, !dbg !1497
  %4779 = xor i32 %4774, %4778, !dbg !1497
  %4780 = shl i32 %4779, 1, !dbg !1497
  %4781 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4782 = bitcast %union.CHAR64LONG16* %4781 to [16 x i32]*, !dbg !1497
  %4783 = getelementptr inbounds [16 x i32], [16 x i32]* %4782, i64 0, i64 9, !dbg !1497
  %4784 = load i32, i32* %4783, align 4, !dbg !1497
  %4785 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4786 = bitcast %union.CHAR64LONG16* %4785 to [16 x i32]*, !dbg !1497
  %4787 = getelementptr inbounds [16 x i32], [16 x i32]* %4786, i64 0, i64 4, !dbg !1497
  %4788 = load i32, i32* %4787, align 4, !dbg !1497
  %4789 = xor i32 %4784, %4788, !dbg !1497
  %4790 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4791 = bitcast %union.CHAR64LONG16* %4790 to [16 x i32]*, !dbg !1497
  %4792 = getelementptr inbounds [16 x i32], [16 x i32]* %4791, i64 0, i64 14, !dbg !1497
  %4793 = load i32, i32* %4792, align 4, !dbg !1497
  %4794 = xor i32 %4789, %4793, !dbg !1497
  %4795 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4796 = bitcast %union.CHAR64LONG16* %4795 to [16 x i32]*, !dbg !1497
  %4797 = getelementptr inbounds [16 x i32], [16 x i32]* %4796, i64 0, i64 12, !dbg !1497
  %4798 = load i32, i32* %4797, align 4, !dbg !1497
  %4799 = xor i32 %4794, %4798, !dbg !1497
  %4800 = lshr i32 %4799, 31, !dbg !1497
  %4801 = or i32 %4780, %4800, !dbg !1497
  %4802 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1497
  %4803 = bitcast %union.CHAR64LONG16* %4802 to [16 x i32]*, !dbg !1497
  %4804 = getelementptr inbounds [16 x i32], [16 x i32]* %4803, i64 0, i64 12, !dbg !1497
  store i32 %4801, i32* %4804, align 4, !dbg !1497
  %4805 = add i32 %4760, %4801, !dbg !1497
  %4806 = add i32 %4805, -899497514, !dbg !1497
  %4807 = load i32, i32* %9, align 4, !dbg !1497
  %4808 = shl i32 %4807, 5, !dbg !1497
  %4809 = load i32, i32* %9, align 4, !dbg !1497
  %4810 = lshr i32 %4809, 27, !dbg !1497
  %4811 = or i32 %4808, %4810, !dbg !1497
  %4812 = add i32 %4806, %4811, !dbg !1497
  %4813 = load i32, i32* %8, align 4, !dbg !1497
  %4814 = add i32 %4813, %4812, !dbg !1497
  store i32 %4814, i32* %8, align 4, !dbg !1497
  %4815 = load i32, i32* %5, align 4, !dbg !1497
  %4816 = shl i32 %4815, 30, !dbg !1497
  %4817 = load i32, i32* %5, align 4, !dbg !1497
  %4818 = lshr i32 %4817, 2, !dbg !1497
  %4819 = or i32 %4816, %4818, !dbg !1497
  store i32 %4819, i32* %5, align 4, !dbg !1497
  %4820 = load i32, i32* %9, align 4, !dbg !1498
  %4821 = load i32, i32* %5, align 4, !dbg !1498
  %4822 = xor i32 %4820, %4821, !dbg !1498
  %4823 = load i32, i32* %6, align 4, !dbg !1498
  %4824 = xor i32 %4822, %4823, !dbg !1498
  %4825 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4826 = bitcast %union.CHAR64LONG16* %4825 to [16 x i32]*, !dbg !1498
  %4827 = getelementptr inbounds [16 x i32], [16 x i32]* %4826, i64 0, i64 10, !dbg !1498
  %4828 = load i32, i32* %4827, align 4, !dbg !1498
  %4829 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4830 = bitcast %union.CHAR64LONG16* %4829 to [16 x i32]*, !dbg !1498
  %4831 = getelementptr inbounds [16 x i32], [16 x i32]* %4830, i64 0, i64 5, !dbg !1498
  %4832 = load i32, i32* %4831, align 4, !dbg !1498
  %4833 = xor i32 %4828, %4832, !dbg !1498
  %4834 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4835 = bitcast %union.CHAR64LONG16* %4834 to [16 x i32]*, !dbg !1498
  %4836 = getelementptr inbounds [16 x i32], [16 x i32]* %4835, i64 0, i64 15, !dbg !1498
  %4837 = load i32, i32* %4836, align 4, !dbg !1498
  %4838 = xor i32 %4833, %4837, !dbg !1498
  %4839 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4840 = bitcast %union.CHAR64LONG16* %4839 to [16 x i32]*, !dbg !1498
  %4841 = getelementptr inbounds [16 x i32], [16 x i32]* %4840, i64 0, i64 13, !dbg !1498
  %4842 = load i32, i32* %4841, align 4, !dbg !1498
  %4843 = xor i32 %4838, %4842, !dbg !1498
  %4844 = shl i32 %4843, 1, !dbg !1498
  %4845 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4846 = bitcast %union.CHAR64LONG16* %4845 to [16 x i32]*, !dbg !1498
  %4847 = getelementptr inbounds [16 x i32], [16 x i32]* %4846, i64 0, i64 10, !dbg !1498
  %4848 = load i32, i32* %4847, align 4, !dbg !1498
  %4849 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4850 = bitcast %union.CHAR64LONG16* %4849 to [16 x i32]*, !dbg !1498
  %4851 = getelementptr inbounds [16 x i32], [16 x i32]* %4850, i64 0, i64 5, !dbg !1498
  %4852 = load i32, i32* %4851, align 4, !dbg !1498
  %4853 = xor i32 %4848, %4852, !dbg !1498
  %4854 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4855 = bitcast %union.CHAR64LONG16* %4854 to [16 x i32]*, !dbg !1498
  %4856 = getelementptr inbounds [16 x i32], [16 x i32]* %4855, i64 0, i64 15, !dbg !1498
  %4857 = load i32, i32* %4856, align 4, !dbg !1498
  %4858 = xor i32 %4853, %4857, !dbg !1498
  %4859 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4860 = bitcast %union.CHAR64LONG16* %4859 to [16 x i32]*, !dbg !1498
  %4861 = getelementptr inbounds [16 x i32], [16 x i32]* %4860, i64 0, i64 13, !dbg !1498
  %4862 = load i32, i32* %4861, align 4, !dbg !1498
  %4863 = xor i32 %4858, %4862, !dbg !1498
  %4864 = lshr i32 %4863, 31, !dbg !1498
  %4865 = or i32 %4844, %4864, !dbg !1498
  %4866 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1498
  %4867 = bitcast %union.CHAR64LONG16* %4866 to [16 x i32]*, !dbg !1498
  %4868 = getelementptr inbounds [16 x i32], [16 x i32]* %4867, i64 0, i64 13, !dbg !1498
  store i32 %4865, i32* %4868, align 4, !dbg !1498
  %4869 = add i32 %4824, %4865, !dbg !1498
  %4870 = add i32 %4869, -899497514, !dbg !1498
  %4871 = load i32, i32* %8, align 4, !dbg !1498
  %4872 = shl i32 %4871, 5, !dbg !1498
  %4873 = load i32, i32* %8, align 4, !dbg !1498
  %4874 = lshr i32 %4873, 27, !dbg !1498
  %4875 = or i32 %4872, %4874, !dbg !1498
  %4876 = add i32 %4870, %4875, !dbg !1498
  %4877 = load i32, i32* %7, align 4, !dbg !1498
  %4878 = add i32 %4877, %4876, !dbg !1498
  store i32 %4878, i32* %7, align 4, !dbg !1498
  %4879 = load i32, i32* %9, align 4, !dbg !1498
  %4880 = shl i32 %4879, 30, !dbg !1498
  %4881 = load i32, i32* %9, align 4, !dbg !1498
  %4882 = lshr i32 %4881, 2, !dbg !1498
  %4883 = or i32 %4880, %4882, !dbg !1498
  store i32 %4883, i32* %9, align 4, !dbg !1498
  %4884 = load i32, i32* %8, align 4, !dbg !1499
  %4885 = load i32, i32* %9, align 4, !dbg !1499
  %4886 = xor i32 %4884, %4885, !dbg !1499
  %4887 = load i32, i32* %5, align 4, !dbg !1499
  %4888 = xor i32 %4886, %4887, !dbg !1499
  %4889 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4890 = bitcast %union.CHAR64LONG16* %4889 to [16 x i32]*, !dbg !1499
  %4891 = getelementptr inbounds [16 x i32], [16 x i32]* %4890, i64 0, i64 11, !dbg !1499
  %4892 = load i32, i32* %4891, align 4, !dbg !1499
  %4893 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4894 = bitcast %union.CHAR64LONG16* %4893 to [16 x i32]*, !dbg !1499
  %4895 = getelementptr inbounds [16 x i32], [16 x i32]* %4894, i64 0, i64 6, !dbg !1499
  %4896 = load i32, i32* %4895, align 4, !dbg !1499
  %4897 = xor i32 %4892, %4896, !dbg !1499
  %4898 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4899 = bitcast %union.CHAR64LONG16* %4898 to [16 x i32]*, !dbg !1499
  %4900 = getelementptr inbounds [16 x i32], [16 x i32]* %4899, i64 0, i64 0, !dbg !1499
  %4901 = load i32, i32* %4900, align 4, !dbg !1499
  %4902 = xor i32 %4897, %4901, !dbg !1499
  %4903 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4904 = bitcast %union.CHAR64LONG16* %4903 to [16 x i32]*, !dbg !1499
  %4905 = getelementptr inbounds [16 x i32], [16 x i32]* %4904, i64 0, i64 14, !dbg !1499
  %4906 = load i32, i32* %4905, align 4, !dbg !1499
  %4907 = xor i32 %4902, %4906, !dbg !1499
  %4908 = shl i32 %4907, 1, !dbg !1499
  %4909 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4910 = bitcast %union.CHAR64LONG16* %4909 to [16 x i32]*, !dbg !1499
  %4911 = getelementptr inbounds [16 x i32], [16 x i32]* %4910, i64 0, i64 11, !dbg !1499
  %4912 = load i32, i32* %4911, align 4, !dbg !1499
  %4913 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4914 = bitcast %union.CHAR64LONG16* %4913 to [16 x i32]*, !dbg !1499
  %4915 = getelementptr inbounds [16 x i32], [16 x i32]* %4914, i64 0, i64 6, !dbg !1499
  %4916 = load i32, i32* %4915, align 4, !dbg !1499
  %4917 = xor i32 %4912, %4916, !dbg !1499
  %4918 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4919 = bitcast %union.CHAR64LONG16* %4918 to [16 x i32]*, !dbg !1499
  %4920 = getelementptr inbounds [16 x i32], [16 x i32]* %4919, i64 0, i64 0, !dbg !1499
  %4921 = load i32, i32* %4920, align 4, !dbg !1499
  %4922 = xor i32 %4917, %4921, !dbg !1499
  %4923 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4924 = bitcast %union.CHAR64LONG16* %4923 to [16 x i32]*, !dbg !1499
  %4925 = getelementptr inbounds [16 x i32], [16 x i32]* %4924, i64 0, i64 14, !dbg !1499
  %4926 = load i32, i32* %4925, align 4, !dbg !1499
  %4927 = xor i32 %4922, %4926, !dbg !1499
  %4928 = lshr i32 %4927, 31, !dbg !1499
  %4929 = or i32 %4908, %4928, !dbg !1499
  %4930 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1499
  %4931 = bitcast %union.CHAR64LONG16* %4930 to [16 x i32]*, !dbg !1499
  %4932 = getelementptr inbounds [16 x i32], [16 x i32]* %4931, i64 0, i64 14, !dbg !1499
  store i32 %4929, i32* %4932, align 4, !dbg !1499
  %4933 = add i32 %4888, %4929, !dbg !1499
  %4934 = add i32 %4933, -899497514, !dbg !1499
  %4935 = load i32, i32* %7, align 4, !dbg !1499
  %4936 = shl i32 %4935, 5, !dbg !1499
  %4937 = load i32, i32* %7, align 4, !dbg !1499
  %4938 = lshr i32 %4937, 27, !dbg !1499
  %4939 = or i32 %4936, %4938, !dbg !1499
  %4940 = add i32 %4934, %4939, !dbg !1499
  %4941 = load i32, i32* %6, align 4, !dbg !1499
  %4942 = add i32 %4941, %4940, !dbg !1499
  store i32 %4942, i32* %6, align 4, !dbg !1499
  %4943 = load i32, i32* %8, align 4, !dbg !1499
  %4944 = shl i32 %4943, 30, !dbg !1499
  %4945 = load i32, i32* %8, align 4, !dbg !1499
  %4946 = lshr i32 %4945, 2, !dbg !1499
  %4947 = or i32 %4944, %4946, !dbg !1499
  store i32 %4947, i32* %8, align 4, !dbg !1499
  %4948 = load i32, i32* %7, align 4, !dbg !1500
  %4949 = load i32, i32* %8, align 4, !dbg !1500
  %4950 = xor i32 %4948, %4949, !dbg !1500
  %4951 = load i32, i32* %9, align 4, !dbg !1500
  %4952 = xor i32 %4950, %4951, !dbg !1500
  %4953 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4954 = bitcast %union.CHAR64LONG16* %4953 to [16 x i32]*, !dbg !1500
  %4955 = getelementptr inbounds [16 x i32], [16 x i32]* %4954, i64 0, i64 12, !dbg !1500
  %4956 = load i32, i32* %4955, align 4, !dbg !1500
  %4957 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4958 = bitcast %union.CHAR64LONG16* %4957 to [16 x i32]*, !dbg !1500
  %4959 = getelementptr inbounds [16 x i32], [16 x i32]* %4958, i64 0, i64 7, !dbg !1500
  %4960 = load i32, i32* %4959, align 4, !dbg !1500
  %4961 = xor i32 %4956, %4960, !dbg !1500
  %4962 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4963 = bitcast %union.CHAR64LONG16* %4962 to [16 x i32]*, !dbg !1500
  %4964 = getelementptr inbounds [16 x i32], [16 x i32]* %4963, i64 0, i64 1, !dbg !1500
  %4965 = load i32, i32* %4964, align 4, !dbg !1500
  %4966 = xor i32 %4961, %4965, !dbg !1500
  %4967 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4968 = bitcast %union.CHAR64LONG16* %4967 to [16 x i32]*, !dbg !1500
  %4969 = getelementptr inbounds [16 x i32], [16 x i32]* %4968, i64 0, i64 15, !dbg !1500
  %4970 = load i32, i32* %4969, align 4, !dbg !1500
  %4971 = xor i32 %4966, %4970, !dbg !1500
  %4972 = shl i32 %4971, 1, !dbg !1500
  %4973 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4974 = bitcast %union.CHAR64LONG16* %4973 to [16 x i32]*, !dbg !1500
  %4975 = getelementptr inbounds [16 x i32], [16 x i32]* %4974, i64 0, i64 12, !dbg !1500
  %4976 = load i32, i32* %4975, align 4, !dbg !1500
  %4977 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4978 = bitcast %union.CHAR64LONG16* %4977 to [16 x i32]*, !dbg !1500
  %4979 = getelementptr inbounds [16 x i32], [16 x i32]* %4978, i64 0, i64 7, !dbg !1500
  %4980 = load i32, i32* %4979, align 4, !dbg !1500
  %4981 = xor i32 %4976, %4980, !dbg !1500
  %4982 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4983 = bitcast %union.CHAR64LONG16* %4982 to [16 x i32]*, !dbg !1500
  %4984 = getelementptr inbounds [16 x i32], [16 x i32]* %4983, i64 0, i64 1, !dbg !1500
  %4985 = load i32, i32* %4984, align 4, !dbg !1500
  %4986 = xor i32 %4981, %4985, !dbg !1500
  %4987 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4988 = bitcast %union.CHAR64LONG16* %4987 to [16 x i32]*, !dbg !1500
  %4989 = getelementptr inbounds [16 x i32], [16 x i32]* %4988, i64 0, i64 15, !dbg !1500
  %4990 = load i32, i32* %4989, align 4, !dbg !1500
  %4991 = xor i32 %4986, %4990, !dbg !1500
  %4992 = lshr i32 %4991, 31, !dbg !1500
  %4993 = or i32 %4972, %4992, !dbg !1500
  %4994 = load %union.CHAR64LONG16*, %union.CHAR64LONG16** %10, align 8, !dbg !1500
  %4995 = bitcast %union.CHAR64LONG16* %4994 to [16 x i32]*, !dbg !1500
  %4996 = getelementptr inbounds [16 x i32], [16 x i32]* %4995, i64 0, i64 15, !dbg !1500
  store i32 %4993, i32* %4996, align 4, !dbg !1500
  %4997 = add i32 %4952, %4993, !dbg !1500
  %4998 = add i32 %4997, -899497514, !dbg !1500
  %4999 = load i32, i32* %6, align 4, !dbg !1500
  %5000 = shl i32 %4999, 5, !dbg !1500
  %5001 = load i32, i32* %6, align 4, !dbg !1500
  %5002 = lshr i32 %5001, 27, !dbg !1500
  %5003 = or i32 %5000, %5002, !dbg !1500
  %5004 = add i32 %4998, %5003, !dbg !1500
  %5005 = load i32, i32* %5, align 4, !dbg !1500
  %5006 = add i32 %5005, %5004, !dbg !1500
  store i32 %5006, i32* %5, align 4, !dbg !1500
  %5007 = load i32, i32* %7, align 4, !dbg !1500
  %5008 = shl i32 %5007, 30, !dbg !1500
  %5009 = load i32, i32* %7, align 4, !dbg !1500
  %5010 = lshr i32 %5009, 2, !dbg !1500
  %5011 = or i32 %5008, %5010, !dbg !1500
  store i32 %5011, i32* %7, align 4, !dbg !1500
  %5012 = load i32, i32* %5, align 4, !dbg !1501
  %5013 = load i32*, i32** %3, align 8, !dbg !1502
  %5014 = getelementptr inbounds i32, i32* %5013, i64 0, !dbg !1502
  %5015 = load i32, i32* %5014, align 4, !dbg !1503
  %5016 = add i32 %5015, %5012, !dbg !1503
  store i32 %5016, i32* %5014, align 4, !dbg !1503
  %5017 = load i32, i32* %6, align 4, !dbg !1504
  %5018 = load i32*, i32** %3, align 8, !dbg !1505
  %5019 = getelementptr inbounds i32, i32* %5018, i64 1, !dbg !1505
  %5020 = load i32, i32* %5019, align 4, !dbg !1506
  %5021 = add i32 %5020, %5017, !dbg !1506
  store i32 %5021, i32* %5019, align 4, !dbg !1506
  %5022 = load i32, i32* %7, align 4, !dbg !1507
  %5023 = load i32*, i32** %3, align 8, !dbg !1508
  %5024 = getelementptr inbounds i32, i32* %5023, i64 2, !dbg !1508
  %5025 = load i32, i32* %5024, align 4, !dbg !1509
  %5026 = add i32 %5025, %5022, !dbg !1509
  store i32 %5026, i32* %5024, align 4, !dbg !1509
  %5027 = load i32, i32* %8, align 4, !dbg !1510
  %5028 = load i32*, i32** %3, align 8, !dbg !1511
  %5029 = getelementptr inbounds i32, i32* %5028, i64 3, !dbg !1511
  %5030 = load i32, i32* %5029, align 4, !dbg !1512
  %5031 = add i32 %5030, %5027, !dbg !1512
  store i32 %5031, i32* %5029, align 4, !dbg !1512
  %5032 = load i32, i32* %9, align 4, !dbg !1513
  %5033 = load i32*, i32** %3, align 8, !dbg !1514
  %5034 = getelementptr inbounds i32, i32* %5033, i64 4, !dbg !1514
  %5035 = load i32, i32* %5034, align 4, !dbg !1515
  %5036 = add i32 %5035, %5032, !dbg !1515
  store i32 %5036, i32* %5034, align 4, !dbg !1515
  store i32 0, i32* %9, align 4, !dbg !1516
  store i32 0, i32* %8, align 4, !dbg !1517
  store i32 0, i32* %7, align 4, !dbg !1518
  store i32 0, i32* %6, align 4, !dbg !1519
  store i32 0, i32* %5, align 4, !dbg !1520
  ret void, !dbg !1521
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SHA1_Init(%struct.SHA1_CTX*) #0 !dbg !1522 {
  %2 = alloca %struct.SHA1_CTX*, align 8
  store %struct.SHA1_CTX* %0, %struct.SHA1_CTX** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.SHA1_CTX** %2, metadata !1532, metadata !DIExpression()), !dbg !1533
  %3 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1534
  %4 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %3, i32 0, i32 0, !dbg !1535
  %5 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0, i64 0, !dbg !1534
  store i32 1732584193, i32* %5, align 4, !dbg !1536
  %6 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1537
  %7 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %6, i32 0, i32 0, !dbg !1538
  %8 = getelementptr inbounds [5 x i32], [5 x i32]* %7, i64 0, i64 1, !dbg !1537
  store i32 -271733879, i32* %8, align 4, !dbg !1539
  %9 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1540
  %10 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %9, i32 0, i32 0, !dbg !1541
  %11 = getelementptr inbounds [5 x i32], [5 x i32]* %10, i64 0, i64 2, !dbg !1540
  store i32 -1732584194, i32* %11, align 4, !dbg !1542
  %12 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1543
  %13 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %12, i32 0, i32 0, !dbg !1544
  %14 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 3, !dbg !1543
  store i32 271733878, i32* %14, align 4, !dbg !1545
  %15 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1546
  %16 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %15, i32 0, i32 0, !dbg !1547
  %17 = getelementptr inbounds [5 x i32], [5 x i32]* %16, i64 0, i64 4, !dbg !1546
  store i32 -1009589776, i32* %17, align 4, !dbg !1548
  %18 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1549
  %19 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %18, i32 0, i32 1, !dbg !1550
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 1, !dbg !1549
  store i32 0, i32* %20, align 4, !dbg !1551
  %21 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %2, align 8, !dbg !1552
  %22 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %21, i32 0, i32 1, !dbg !1553
  %23 = getelementptr inbounds [2 x i32], [2 x i32]* %22, i64 0, i64 0, !dbg !1552
  store i32 0, i32* %23, align 4, !dbg !1554
  ret void, !dbg !1555
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SHA1_Update(%struct.SHA1_CTX*, i8*, i64) #0 !dbg !1556 {
  %4 = alloca %struct.SHA1_CTX*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.SHA1_CTX* %0, %struct.SHA1_CTX** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.SHA1_CTX** %4, metadata !1560, metadata !DIExpression()), !dbg !1561
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1562, metadata !DIExpression()), !dbg !1563
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !1564, metadata !DIExpression()), !dbg !1565
  call void @llvm.dbg.declare(metadata i64* %7, metadata !1566, metadata !DIExpression()), !dbg !1567
  call void @llvm.dbg.declare(metadata i64* %8, metadata !1568, metadata !DIExpression()), !dbg !1569
  %9 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1570
  %10 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %9, i32 0, i32 1, !dbg !1571
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0, !dbg !1570
  %12 = load i32, i32* %11, align 4, !dbg !1570
  %13 = lshr i32 %12, 3, !dbg !1572
  %14 = and i32 %13, 63, !dbg !1573
  %15 = zext i32 %14 to i64, !dbg !1574
  store i64 %15, i64* %8, align 8, !dbg !1575
  %16 = load i64, i64* %6, align 8, !dbg !1576
  %17 = shl i64 %16, 3, !dbg !1578
  %18 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1579
  %19 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %18, i32 0, i32 1, !dbg !1580
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 0, !dbg !1579
  %21 = load i32, i32* %20, align 4, !dbg !1581
  %22 = zext i32 %21 to i64, !dbg !1581
  %23 = add i64 %22, %17, !dbg !1581
  %24 = trunc i64 %23 to i32, !dbg !1581
  store i32 %24, i32* %20, align 4, !dbg !1581
  %25 = zext i32 %24 to i64, !dbg !1582
  %26 = load i64, i64* %6, align 8, !dbg !1583
  %27 = shl i64 %26, 3, !dbg !1584
  %28 = icmp ult i64 %25, %27, !dbg !1585
  br i1 %28, label %29, label %35, !dbg !1586

; <label>:29:                                     ; preds = %3
  %30 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1587
  %31 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %30, i32 0, i32 1, !dbg !1588
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1, !dbg !1587
  %33 = load i32, i32* %32, align 4, !dbg !1589
  %34 = add i32 %33, 1, !dbg !1589
  store i32 %34, i32* %32, align 4, !dbg !1589
  br label %35, !dbg !1587

; <label>:35:                                     ; preds = %29, %3
  %36 = load i64, i64* %6, align 8, !dbg !1590
  %37 = lshr i64 %36, 29, !dbg !1591
  %38 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1592
  %39 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %38, i32 0, i32 1, !dbg !1593
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %39, i64 0, i64 1, !dbg !1592
  %41 = load i32, i32* %40, align 4, !dbg !1594
  %42 = zext i32 %41 to i64, !dbg !1594
  %43 = add i64 %42, %37, !dbg !1594
  %44 = trunc i64 %43 to i32, !dbg !1594
  store i32 %44, i32* %40, align 4, !dbg !1594
  %45 = load i64, i64* %8, align 8, !dbg !1595
  %46 = load i64, i64* %6, align 8, !dbg !1597
  %47 = add i64 %45, %46, !dbg !1598
  %48 = icmp ugt i64 %47, 63, !dbg !1599
  br i1 %48, label %49, label %79, !dbg !1600

; <label>:49:                                     ; preds = %35
  %50 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1601
  %51 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %50, i32 0, i32 2, !dbg !1603
  %52 = load i64, i64* %8, align 8, !dbg !1604
  %53 = getelementptr inbounds [64 x i8], [64 x i8]* %51, i64 0, i64 %52, !dbg !1601
  %54 = load i8*, i8** %5, align 8, !dbg !1605
  %55 = load i64, i64* %8, align 8, !dbg !1606
  %56 = sub i64 64, %55, !dbg !1607
  store i64 %56, i64* %7, align 8, !dbg !1608
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 %56, i1 false), !dbg !1609
  %57 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1610
  %58 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %57, i32 0, i32 0, !dbg !1611
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %58, i32 0, i32 0, !dbg !1610
  %60 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1612
  %61 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %60, i32 0, i32 2, !dbg !1613
  %62 = getelementptr inbounds [64 x i8], [64 x i8]* %61, i32 0, i32 0, !dbg !1612
  call void @SHA1_Transform(i32* %59, i8* %62), !dbg !1614
  br label %63, !dbg !1615

; <label>:63:                                     ; preds = %75, %49
  %64 = load i64, i64* %7, align 8, !dbg !1616
  %65 = add i64 %64, 63, !dbg !1619
  %66 = load i64, i64* %6, align 8, !dbg !1620
  %67 = icmp ult i64 %65, %66, !dbg !1621
  br i1 %67, label %68, label %78, !dbg !1622

; <label>:68:                                     ; preds = %63
  %69 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1623
  %70 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %69, i32 0, i32 0, !dbg !1625
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %70, i32 0, i32 0, !dbg !1623
  %72 = load i8*, i8** %5, align 8, !dbg !1626
  %73 = load i64, i64* %7, align 8, !dbg !1627
  %74 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !1628
  call void @SHA1_Transform(i32* %71, i8* %74), !dbg !1629
  br label %75, !dbg !1630

; <label>:75:                                     ; preds = %68
  %76 = load i64, i64* %7, align 8, !dbg !1631
  %77 = add i64 %76, 64, !dbg !1631
  store i64 %77, i64* %7, align 8, !dbg !1631
  br label %63, !dbg !1632, !llvm.loop !1633

; <label>:78:                                     ; preds = %63
  store i64 0, i64* %8, align 8, !dbg !1635
  br label %80, !dbg !1636

; <label>:79:                                     ; preds = %35
  store i64 0, i64* %7, align 8, !dbg !1637
  br label %80

; <label>:80:                                     ; preds = %79, %78
  %81 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %4, align 8, !dbg !1638
  %82 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %81, i32 0, i32 2, !dbg !1639
  %83 = load i64, i64* %8, align 8, !dbg !1640
  %84 = getelementptr inbounds [64 x i8], [64 x i8]* %82, i64 0, i64 %83, !dbg !1638
  %85 = load i8*, i8** %5, align 8, !dbg !1641
  %86 = load i64, i64* %7, align 8, !dbg !1642
  %87 = getelementptr inbounds i8, i8* %85, i64 %86, !dbg !1641
  %88 = load i64, i64* %6, align 8, !dbg !1643
  %89 = load i64, i64* %7, align 8, !dbg !1644
  %90 = sub i64 %88, %89, !dbg !1645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %87, i64 %90, i1 false), !dbg !1646
  ret void, !dbg !1647
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SHA1_Final(%struct.SHA1_CTX*, i8*) #0 !dbg !1648 {
  %3 = alloca %struct.SHA1_CTX*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [8 x i8], align 1
  store %struct.SHA1_CTX* %0, %struct.SHA1_CTX** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.SHA1_CTX** %3, metadata !1651, metadata !DIExpression()), !dbg !1652
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1653, metadata !DIExpression()), !dbg !1654
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1655, metadata !DIExpression()), !dbg !1656
  call void @llvm.dbg.declare(metadata [8 x i8]* %6, metadata !1657, metadata !DIExpression()), !dbg !1659
  store i32 0, i32* %5, align 4, !dbg !1660
  br label %7, !dbg !1662

; <label>:7:                                      ; preds = %30, %2
  %8 = load i32, i32* %5, align 4, !dbg !1663
  %9 = icmp ult i32 %8, 8, !dbg !1665
  br i1 %9, label %10, label %33, !dbg !1666

; <label>:10:                                     ; preds = %7
  %11 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1667
  %12 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %11, i32 0, i32 1, !dbg !1669
  %13 = load i32, i32* %5, align 4, !dbg !1670
  %14 = icmp uge i32 %13, 4, !dbg !1671
  %15 = zext i1 %14 to i64, !dbg !1670
  %16 = select i1 %14, i32 0, i32 1, !dbg !1670
  %17 = sext i32 %16 to i64, !dbg !1667
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %12, i64 0, i64 %17, !dbg !1667
  %19 = load i32, i32* %18, align 4, !dbg !1667
  %20 = load i32, i32* %5, align 4, !dbg !1672
  %21 = and i32 %20, 3, !dbg !1673
  %22 = sub i32 3, %21, !dbg !1674
  %23 = mul i32 %22, 8, !dbg !1675
  %24 = lshr i32 %19, %23, !dbg !1676
  %25 = and i32 %24, 255, !dbg !1677
  %26 = trunc i32 %25 to i8, !dbg !1678
  %27 = load i32, i32* %5, align 4, !dbg !1679
  %28 = zext i32 %27 to i64, !dbg !1680
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 %28, !dbg !1680
  store i8 %26, i8* %29, align 1, !dbg !1681
  br label %30, !dbg !1682

; <label>:30:                                     ; preds = %10
  %31 = load i32, i32* %5, align 4, !dbg !1683
  %32 = add i32 %31, 1, !dbg !1683
  store i32 %32, i32* %5, align 4, !dbg !1683
  br label %7, !dbg !1684, !llvm.loop !1685

; <label>:33:                                     ; preds = %7
  %34 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1687
  call void @SHA1_Update(%struct.SHA1_CTX* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i64 1), !dbg !1688
  br label %35, !dbg !1689

; <label>:35:                                     ; preds = %42, %33
  %36 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1690
  %37 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %36, i32 0, i32 1, !dbg !1691
  %38 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 0, i64 0, !dbg !1690
  %39 = load i32, i32* %38, align 4, !dbg !1690
  %40 = and i32 %39, 504, !dbg !1692
  %41 = icmp ne i32 %40, 448, !dbg !1693
  br i1 %41, label %42, label %44, !dbg !1689

; <label>:42:                                     ; preds = %35
  %43 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1694
  call void @SHA1_Update(%struct.SHA1_CTX* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0), i64 1), !dbg !1696
  br label %35, !dbg !1689, !llvm.loop !1697

; <label>:44:                                     ; preds = %35
  %45 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1699
  %46 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i32 0, i32 0, !dbg !1700
  call void @SHA1_Update(%struct.SHA1_CTX* %45, i8* %46, i64 8), !dbg !1701
  store i32 0, i32* %5, align 4, !dbg !1702
  br label %47, !dbg !1704

; <label>:47:                                     ; preds = %69, %44
  %48 = load i32, i32* %5, align 4, !dbg !1705
  %49 = icmp ult i32 %48, 20, !dbg !1707
  br i1 %49, label %50, label %72, !dbg !1708

; <label>:50:                                     ; preds = %47
  %51 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1709
  %52 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %51, i32 0, i32 0, !dbg !1711
  %53 = load i32, i32* %5, align 4, !dbg !1712
  %54 = lshr i32 %53, 2, !dbg !1713
  %55 = zext i32 %54 to i64, !dbg !1709
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %52, i64 0, i64 %55, !dbg !1709
  %57 = load i32, i32* %56, align 4, !dbg !1709
  %58 = load i32, i32* %5, align 4, !dbg !1714
  %59 = and i32 %58, 3, !dbg !1715
  %60 = sub i32 3, %59, !dbg !1716
  %61 = mul i32 %60, 8, !dbg !1717
  %62 = lshr i32 %57, %61, !dbg !1718
  %63 = and i32 %62, 255, !dbg !1719
  %64 = trunc i32 %63 to i8, !dbg !1720
  %65 = load i8*, i8** %4, align 8, !dbg !1721
  %66 = load i32, i32* %5, align 4, !dbg !1722
  %67 = zext i32 %66 to i64, !dbg !1721
  %68 = getelementptr inbounds i8, i8* %65, i64 %67, !dbg !1721
  store i8 %64, i8* %68, align 1, !dbg !1723
  br label %69, !dbg !1724

; <label>:69:                                     ; preds = %50
  %70 = load i32, i32* %5, align 4, !dbg !1725
  %71 = add i32 %70, 1, !dbg !1725
  store i32 %71, i32* %5, align 4, !dbg !1725
  br label %47, !dbg !1726, !llvm.loop !1727

; <label>:72:                                     ; preds = %47
  store i32 0, i32* %5, align 4, !dbg !1729
  %73 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1730
  %74 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %73, i32 0, i32 2, !dbg !1731
  %75 = getelementptr inbounds [64 x i8], [64 x i8]* %74, i32 0, i32 0, !dbg !1732
  call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 64, i1 false), !dbg !1732
  %76 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1733
  %77 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %76, i32 0, i32 0, !dbg !1734
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %77, i32 0, i32 0, !dbg !1735
  %79 = bitcast i32* %78 to i8*, !dbg !1735
  call void @llvm.memset.p0i8.i64(i8* align 4 %79, i8 0, i64 20, i1 false), !dbg !1735
  %80 = load %struct.SHA1_CTX*, %struct.SHA1_CTX** %3, align 8, !dbg !1736
  %81 = getelementptr inbounds %struct.SHA1_CTX, %struct.SHA1_CTX* %80, i32 0, i32 1, !dbg !1737
  %82 = getelementptr inbounds [2 x i32], [2 x i32]* %81, i32 0, i32 0, !dbg !1738
  %83 = bitcast i32* %82 to i8*, !dbg !1738
  call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 8, i1 false), !dbg !1738
  %84 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i32 0, i32 0, !dbg !1739
  call void @llvm.memset.p0i8.i64(i8* align 1 %84, i8 0, i64 8, i1 false), !dbg !1739
  ret void, !dbg !1740
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @jbig2_alloc(%struct._Jbig2Allocator.1*, i64) #0 !dbg !1741 {
  %3 = alloca %struct._Jbig2Allocator.1*, align 8
  %4 = alloca i64, align 8
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %3, metadata !1742, metadata !DIExpression()), !dbg !1743
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !1744, metadata !DIExpression()), !dbg !1745
  %5 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !1746
  %6 = getelementptr inbounds %struct._Jbig2Allocator.1, %struct._Jbig2Allocator.1* %5, i32 0, i32 0, !dbg !1747
  %7 = bitcast {}** %6 to i8* (%struct._Jbig2Allocator.1*, i64)**, !dbg !1747
  %8 = load i8* (%struct._Jbig2Allocator.1*, i64)*, i8* (%struct._Jbig2Allocator.1*, i64)** %7, align 8, !dbg !1747
  %9 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !1748
  %10 = load i64, i64* %4, align 8, !dbg !1749
  %11 = call i8* %8(%struct._Jbig2Allocator.1* %9, i64 %10), !dbg !1746
  ret i8* %11, !dbg !1750
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_free(%struct._Jbig2Allocator.1*, i8*) #0 !dbg !1751 {
  %3 = alloca %struct._Jbig2Allocator.1*, align 8
  %4 = alloca i8*, align 8
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %3, metadata !1752, metadata !DIExpression()), !dbg !1753
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1754, metadata !DIExpression()), !dbg !1755
  %5 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !1756
  %6 = getelementptr inbounds %struct._Jbig2Allocator.1, %struct._Jbig2Allocator.1* %5, i32 0, i32 1, !dbg !1757
  %7 = load void (%struct._Jbig2Allocator.1*, i8*)*, void (%struct._Jbig2Allocator.1*, i8*)** %6, align 8, !dbg !1757
  %8 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !1758
  %9 = load i8*, i8** %4, align 8, !dbg !1759
  call void %7(%struct._Jbig2Allocator.1* %8, i8* %9), !dbg !1756
  ret void, !dbg !1760
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @jbig2_realloc(%struct._Jbig2Allocator.1*, i8*, i64) #0 !dbg !1761 {
  %4 = alloca %struct._Jbig2Allocator.1*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %4, metadata !1762, metadata !DIExpression()), !dbg !1763
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1764, metadata !DIExpression()), !dbg !1765
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !1766, metadata !DIExpression()), !dbg !1767
  %7 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %4, align 8, !dbg !1768
  %8 = getelementptr inbounds %struct._Jbig2Allocator.1, %struct._Jbig2Allocator.1* %7, i32 0, i32 2, !dbg !1769
  %9 = load i8* (%struct._Jbig2Allocator.1*, i8*, i64)*, i8* (%struct._Jbig2Allocator.1*, i8*, i64)** %8, align 8, !dbg !1769
  %10 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %4, align 8, !dbg !1770
  %11 = load i8*, i8** %5, align 8, !dbg !1771
  %12 = load i64, i64* %6, align 8, !dbg !1772
  %13 = call i8* %9(%struct._Jbig2Allocator.1* %10, i8* %11, i64 %12), !dbg !1768
  ret i8* %13, !dbg !1773
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_error(%struct._Jbig2Ctx*, i32, i32, i8*, ...) #0 !dbg !1774 {
  %5 = alloca %struct._Jbig2Ctx*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca [1024 x i8], align 16
  %10 = alloca [1 x %struct.__va_list_tag], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct._Jbig2Ctx* %0, %struct._Jbig2Ctx** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %5, metadata !1777, metadata !DIExpression()), !dbg !1778
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1779, metadata !DIExpression()), !dbg !1780
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1781, metadata !DIExpression()), !dbg !1782
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1783, metadata !DIExpression()), !dbg !1784
  call void @llvm.dbg.declare(metadata [1024 x i8]* %9, metadata !1785, metadata !DIExpression()), !dbg !1789
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %10, metadata !1790, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1803, metadata !DIExpression()), !dbg !1804
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1805, metadata !DIExpression()), !dbg !1806
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i32 0, i32 0, !dbg !1807
  %14 = bitcast %struct.__va_list_tag* %13 to i8*, !dbg !1807
  call void @llvm.va_start(i8* %14), !dbg !1807
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !1808
  %16 = load i8*, i8** %8, align 8, !dbg !1809
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i32 0, i32 0, !dbg !1810
  %18 = call i32 @vsnprintf(i8* %15, i64 1024, i8* %16, %struct.__va_list_tag* %17) #7, !dbg !1811
  store i32 %18, i32* %11, align 4, !dbg !1812
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i32 0, i32 0, !dbg !1813
  %20 = bitcast %struct.__va_list_tag* %19 to i8*, !dbg !1813
  call void @llvm.va_end(i8* %20), !dbg !1813
  %21 = load i32, i32* %11, align 4, !dbg !1814
  %22 = icmp slt i32 %21, 0, !dbg !1816
  br i1 %22, label %27, label %23, !dbg !1817

; <label>:23:                                     ; preds = %4
  %24 = load i32, i32* %11, align 4, !dbg !1818
  %25 = sext i32 %24 to i64, !dbg !1818
  %26 = icmp eq i64 %25, 1024, !dbg !1819
  br i1 %26, label %27, label %30, !dbg !1820

; <label>:27:                                     ; preds = %23, %4
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !1821
  %29 = call i8* @strncpy(i8* %28, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.39, i32 0, i32 0), i64 1024) #7, !dbg !1822
  br label %30, !dbg !1822

; <label>:30:                                     ; preds = %27, %23
  %31 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !1823
  %32 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %31, i32 0, i32 3, !dbg !1824
  %33 = load i32 (i8*, i8*, i32, i32)*, i32 (i8*, i8*, i32, i32)** %32, align 8, !dbg !1824
  %34 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !1825
  %35 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %34, i32 0, i32 4, !dbg !1826
  %36 = load i8*, i8** %35, align 8, !dbg !1826
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !1827
  %38 = load i32, i32* %6, align 4, !dbg !1828
  %39 = load i32, i32* %7, align 4, !dbg !1829
  %40 = call i32 %33(i8* %36, i8* %37, i32 %38, i32 %39), !dbg !1823
  store i32 %40, i32* %12, align 4, !dbg !1830
  %41 = load i32, i32* %6, align 4, !dbg !1831
  %42 = icmp eq i32 %41, 3, !dbg !1833
  br i1 %42, label %43, label %44, !dbg !1834

; <label>:43:                                     ; preds = %30
  store i32 -1, i32* %12, align 4, !dbg !1835
  br label %44, !dbg !1836

; <label>:44:                                     ; preds = %43, %30
  %45 = load i32, i32* %12, align 4, !dbg !1837
  ret i32 %45, !dbg !1838
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Ctx* @jbig2_ctx_new(%struct._Jbig2Allocator.1*, i32, %struct._Jbig2GlobalCtx*, i32 (i8*, i8*, i32, i32)*, i8*) #0 !dbg !1839 {
  %6 = alloca %struct._Jbig2Ctx*, align 8
  %7 = alloca %struct._Jbig2Allocator.1*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct._Jbig2GlobalCtx*, align 8
  %10 = alloca i32 (i8*, i8*, i32, i32)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct._Jbig2Ctx*, align 8
  %13 = alloca i32, align 4
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %7, metadata !1842, metadata !DIExpression()), !dbg !1843
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1844, metadata !DIExpression()), !dbg !1845
  store %struct._Jbig2GlobalCtx* %2, %struct._Jbig2GlobalCtx** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2GlobalCtx** %9, metadata !1846, metadata !DIExpression()), !dbg !1847
  store i32 (i8*, i8*, i32, i32)* %3, i32 (i8*, i8*, i32, i32)** %10, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i32, i32)** %10, metadata !1848, metadata !DIExpression()), !dbg !1849
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1850, metadata !DIExpression()), !dbg !1851
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %12, metadata !1852, metadata !DIExpression()), !dbg !1853
  %14 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %7, align 8, !dbg !1854
  %15 = icmp eq %struct._Jbig2Allocator.1* %14, null, !dbg !1856
  br i1 %15, label %16, label %17, !dbg !1857

; <label>:16:                                     ; preds = %5
  store %struct._Jbig2Allocator.1* bitcast ({ i8* (%struct._Jbig2Allocator.1*, i64)*, void (%struct._Jbig2Allocator.1*, i8*)*, i8* (%struct._Jbig2Allocator.1*, i8*, i64)* }* @jbig2_default_allocator to %struct._Jbig2Allocator.1*), %struct._Jbig2Allocator.1** %7, align 8, !dbg !1858
  br label %17, !dbg !1859

; <label>:17:                                     ; preds = %16, %5
  %18 = load i32 (i8*, i8*, i32, i32)*, i32 (i8*, i8*, i32, i32)** %10, align 8, !dbg !1860
  %19 = icmp eq i32 (i8*, i8*, i32, i32)* %18, null, !dbg !1862
  br i1 %19, label %20, label %21, !dbg !1863

; <label>:20:                                     ; preds = %17
  store i32 (i8*, i8*, i32, i32)* @jbig2_default_error, i32 (i8*, i8*, i32, i32)** %10, align 8, !dbg !1864
  br label %21, !dbg !1865

; <label>:21:                                     ; preds = %20, %17
  %22 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %7, align 8, !dbg !1866
  %23 = call i8* @jbig2_alloc(%struct._Jbig2Allocator.1* %22, i64 112), !dbg !1867
  %24 = bitcast i8* %23 to %struct._Jbig2Ctx*, !dbg !1868
  store %struct._Jbig2Ctx* %24, %struct._Jbig2Ctx** %12, align 8, !dbg !1869
  %25 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1870
  %26 = icmp eq %struct._Jbig2Ctx* %25, null, !dbg !1872
  br i1 %26, label %27, label %32, !dbg !1873

; <label>:27:                                     ; preds = %21
  %28 = load i32 (i8*, i8*, i32, i32)*, i32 (i8*, i8*, i32, i32)** %10, align 8, !dbg !1874
  %29 = load i8*, i8** %11, align 8, !dbg !1876
  %30 = call i32 %28(i8* %29, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1.42, i32 0, i32 0), i32 3, i32 -1), !dbg !1874
  %31 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1877
  store %struct._Jbig2Ctx* %31, %struct._Jbig2Ctx** %6, align 8, !dbg !1878
  br label %121, !dbg !1878

; <label>:32:                                     ; preds = %21
  %33 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %7, align 8, !dbg !1879
  %34 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1880
  %35 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %34, i32 0, i32 0, !dbg !1881
  store %struct._Jbig2Allocator.1* %33, %struct._Jbig2Allocator.1** %35, align 8, !dbg !1882
  %36 = load i32, i32* %8, align 4, !dbg !1883
  %37 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1884
  %38 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %37, i32 0, i32 1, !dbg !1885
  store i32 %36, i32* %38, align 8, !dbg !1886
  %39 = load %struct._Jbig2GlobalCtx*, %struct._Jbig2GlobalCtx** %9, align 8, !dbg !1887
  %40 = bitcast %struct._Jbig2GlobalCtx* %39 to %struct._Jbig2Ctx*, !dbg !1888
  %41 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1889
  %42 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %41, i32 0, i32 2, !dbg !1890
  store %struct._Jbig2Ctx* %40, %struct._Jbig2Ctx** %42, align 8, !dbg !1891
  %43 = load i32 (i8*, i8*, i32, i32)*, i32 (i8*, i8*, i32, i32)** %10, align 8, !dbg !1892
  %44 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1893
  %45 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %44, i32 0, i32 3, !dbg !1894
  store i32 (i8*, i8*, i32, i32)* %43, i32 (i8*, i8*, i32, i32)** %45, align 8, !dbg !1895
  %46 = load i8*, i8** %11, align 8, !dbg !1896
  %47 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1897
  %48 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %47, i32 0, i32 4, !dbg !1898
  store i8* %46, i8** %48, align 8, !dbg !1899
  %49 = load i32, i32* %8, align 4, !dbg !1900
  %50 = and i32 %49, 1, !dbg !1901
  %51 = icmp ne i32 %50, 0, !dbg !1902
  %52 = zext i1 %51 to i64, !dbg !1902
  %53 = select i1 %51, i32 1, i32 0, !dbg !1902
  %54 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1903
  %55 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %54, i32 0, i32 9, !dbg !1904
  store i32 %53, i32* %55, align 8, !dbg !1905
  %56 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1906
  %57 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %56, i32 0, i32 5, !dbg !1907
  store i8* null, i8** %57, align 8, !dbg !1908
  %58 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1909
  %59 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %58, i32 0, i32 14, !dbg !1910
  store i32 0, i32* %59, align 8, !dbg !1911
  %60 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1912
  %61 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %60, i32 0, i32 12, !dbg !1913
  store i32 16, i32* %61, align 4, !dbg !1914
  %62 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %7, align 8, !dbg !1915
  %63 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1916
  %64 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %63, i32 0, i32 12, !dbg !1917
  %65 = load i32, i32* %64, align 4, !dbg !1917
  %66 = sext i32 %65 to i64, !dbg !1916
  %67 = mul i64 %66, 8, !dbg !1918
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !1919
  %68 = call i8* @jbig2_alloc(%struct._Jbig2Allocator.1* %62, i64 %67), !dbg !1919
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !1920
  %69 = bitcast i8* %68 to %struct._Jbig2Segment**, !dbg !1920
  %70 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1921
  %71 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %70, i32 0, i32 13, !dbg !1922
  store %struct._Jbig2Segment** %69, %struct._Jbig2Segment*** %71, align 8, !dbg !1923
  %72 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1924
  %73 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %72, i32 0, i32 15, !dbg !1925
  store i32 0, i32* %73, align 4, !dbg !1926
  %74 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1927
  %75 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %74, i32 0, i32 16, !dbg !1928
  store i32 0, i32* %75, align 8, !dbg !1929
  %76 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1930
  %77 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %76, i32 0, i32 17, !dbg !1931
  store i32 4, i32* %77, align 4, !dbg !1932
  %78 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %7, align 8, !dbg !1933
  %79 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1934
  %80 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %79, i32 0, i32 17, !dbg !1935
  %81 = load i32, i32* %80, align 4, !dbg !1935
  %82 = sext i32 %81 to i64, !dbg !1934
  %83 = mul i64 %82, 48, !dbg !1936
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !1937
  %84 = call i8* @jbig2_alloc(%struct._Jbig2Allocator.1* %78, i64 %83), !dbg !1937
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !1938
  %85 = bitcast i8* %84 to %struct._Jbig2Page*, !dbg !1938
  %86 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1939
  %87 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %86, i32 0, i32 18, !dbg !1940
  store %struct._Jbig2Page* %85, %struct._Jbig2Page** %87, align 8, !dbg !1941
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1942, metadata !DIExpression()), !dbg !1944
  store i32 0, i32* %13, align 4, !dbg !1945
  br label %88, !dbg !1947

; <label>:88:                                     ; preds = %116, %32
  %89 = load i32, i32* %13, align 4, !dbg !1948
  %90 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1950
  %91 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %90, i32 0, i32 17, !dbg !1951
  %92 = load i32, i32* %91, align 4, !dbg !1951
  %93 = icmp slt i32 %89, %92, !dbg !1952
  br i1 %93, label %94, label %119, !dbg !1953

; <label>:94:                                     ; preds = %88
  %95 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1954
  %96 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %95, i32 0, i32 18, !dbg !1956
  %97 = load %struct._Jbig2Page*, %struct._Jbig2Page** %96, align 8, !dbg !1956
  %98 = load i32, i32* %13, align 4, !dbg !1957
  %99 = sext i32 %98 to i64, !dbg !1954
  %100 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %97, i64 %99, !dbg !1954
  %101 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %100, i32 0, i32 0, !dbg !1958
  store i32 0, i32* %101, align 8, !dbg !1959
  %102 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1960
  %103 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %102, i32 0, i32 18, !dbg !1961
  %104 = load %struct._Jbig2Page*, %struct._Jbig2Page** %103, align 8, !dbg !1961
  %105 = load i32, i32* %13, align 4, !dbg !1962
  %106 = sext i32 %105 to i64, !dbg !1960
  %107 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %104, i64 %106, !dbg !1960
  %108 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %107, i32 0, i32 1, !dbg !1963
  store i32 0, i32* %108, align 4, !dbg !1964
  %109 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1965
  %110 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %109, i32 0, i32 18, !dbg !1966
  %111 = load %struct._Jbig2Page*, %struct._Jbig2Page** %110, align 8, !dbg !1966
  %112 = load i32, i32* %13, align 4, !dbg !1967
  %113 = sext i32 %112 to i64, !dbg !1965
  %114 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %111, i64 %113, !dbg !1965
  %115 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %114, i32 0, i32 10, !dbg !1968
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %115, align 8, !dbg !1969
  br label %116, !dbg !1970

; <label>:116:                                    ; preds = %94
  %117 = load i32, i32* %13, align 4, !dbg !1971
  %118 = add nsw i32 %117, 1, !dbg !1971
  store i32 %118, i32* %13, align 4, !dbg !1971
  br label %88, !dbg !1972, !llvm.loop !1973

; <label>:119:                                    ; preds = %88
  %120 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %12, align 8, !dbg !1975
  store %struct._Jbig2Ctx* %120, %struct._Jbig2Ctx** %6, align 8, !dbg !1976
  br label %121, !dbg !1976

; <label>:121:                                    ; preds = %119, %27
  %122 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %6, align 8, !dbg !1977
  ret %struct._Jbig2Ctx* %122, !dbg !1977
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_default_error(i8*, i8*, i32, i32) #0 !dbg !1978 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1979, metadata !DIExpression()), !dbg !1980
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1981, metadata !DIExpression()), !dbg !1982
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1983, metadata !DIExpression()), !dbg !1984
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1985, metadata !DIExpression()), !dbg !1986
  %9 = load i32, i32* %7, align 4, !dbg !1987
  %10 = icmp eq i32 %9, 3, !dbg !1989
  br i1 %10, label %11, label %26, !dbg !1990

; <label>:11:                                     ; preds = %4
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1991
  %13 = load i8*, i8** %6, align 8, !dbg !1993
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10.43, i32 0, i32 0), i8* %13), !dbg !1994
  %15 = load i32, i32* %8, align 4, !dbg !1995
  %16 = icmp ne i32 %15, -1, !dbg !1997
  br i1 %16, label %17, label %21, !dbg !1998

; <label>:17:                                     ; preds = %11
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1999
  %19 = load i32, i32* %8, align 4, !dbg !2000
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.44, i32 0, i32 0), i32 %19), !dbg !2001
  br label %21, !dbg !2001

; <label>:21:                                     ; preds = %17, %11
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2002
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.45, i32 0, i32 0)), !dbg !2003
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2004
  %25 = call i32 @fflush(%struct._IO_FILE* %24), !dbg !2005
  br label %26, !dbg !2006

; <label>:26:                                     ; preds = %21, %4
  ret i32 0, !dbg !2007
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @jbig2_default_alloc(%struct._Jbig2Allocator.1*, i64) #0 !dbg !2008 {
  %3 = alloca %struct._Jbig2Allocator.1*, align 8
  %4 = alloca i64, align 8
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %3, metadata !2009, metadata !DIExpression()), !dbg !2010
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2011, metadata !DIExpression()), !dbg !2012
  %5 = load i64, i64* %4, align 8, !dbg !2013
  %6 = call noalias i8* @malloc(i64 %5) #7, !dbg !2014
  ret i8* %6, !dbg !2015
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_default_free(%struct._Jbig2Allocator.1*, i8*) #0 !dbg !2016 {
  %3 = alloca %struct._Jbig2Allocator.1*, align 8
  %4 = alloca i8*, align 8
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %3, metadata !2017, metadata !DIExpression()), !dbg !2018
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2019, metadata !DIExpression()), !dbg !2020
  %5 = load i8*, i8** %4, align 8, !dbg !2021
  call void @free(i8* %5) #7, !dbg !2022
  ret void, !dbg !2023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @jbig2_default_realloc(%struct._Jbig2Allocator.1*, i8*, i64) #0 !dbg !2024 {
  %4 = alloca %struct._Jbig2Allocator.1*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct._Jbig2Allocator.1* %0, %struct._Jbig2Allocator.1** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %4, metadata !2025, metadata !DIExpression()), !dbg !2026
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2027, metadata !DIExpression()), !dbg !2028
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2029, metadata !DIExpression()), !dbg !2030
  %7 = load i8*, i8** %5, align 8, !dbg !2031
  %8 = load i64, i64* %6, align 8, !dbg !2032
  %9 = call i8* @realloc(i8* %7, i64 %8) #7, !dbg !2033
  ret i8* %9, !dbg !2034
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_get_int32(i8*) #0 !dbg !2035 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2038, metadata !DIExpression()), !dbg !2039
  %3 = load i8*, i8** %2, align 8, !dbg !2040
  %4 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2040
  %5 = load i8, i8* %4, align 1, !dbg !2040
  %6 = zext i8 %5 to i32, !dbg !2040
  %7 = shl i32 %6, 24, !dbg !2041
  %8 = load i8*, i8** %2, align 8, !dbg !2042
  %9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !2042
  %10 = load i8, i8* %9, align 1, !dbg !2042
  %11 = zext i8 %10 to i32, !dbg !2042
  %12 = shl i32 %11, 16, !dbg !2043
  %13 = or i32 %7, %12, !dbg !2044
  %14 = load i8*, i8** %2, align 8, !dbg !2045
  %15 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !2045
  %16 = load i8, i8* %15, align 1, !dbg !2045
  %17 = zext i8 %16 to i32, !dbg !2045
  %18 = shl i32 %17, 8, !dbg !2046
  %19 = or i32 %13, %18, !dbg !2047
  %20 = load i8*, i8** %2, align 8, !dbg !2048
  %21 = getelementptr inbounds i8, i8* %20, i64 3, !dbg !2048
  %22 = load i8, i8* %21, align 1, !dbg !2048
  %23 = zext i8 %22 to i32, !dbg !2048
  %24 = or i32 %19, %23, !dbg !2049
  ret i32 %24, !dbg !2050
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local signext i16 @jbig2_get_int16(i8*) #0 !dbg !2051 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2055, metadata !DIExpression()), !dbg !2056
  %3 = load i8*, i8** %2, align 8, !dbg !2057
  %4 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2057
  %5 = load i8, i8* %4, align 1, !dbg !2057
  %6 = zext i8 %5 to i32, !dbg !2057
  %7 = shl i32 %6, 8, !dbg !2058
  %8 = load i8*, i8** %2, align 8, !dbg !2059
  %9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !2059
  %10 = load i8, i8* %9, align 1, !dbg !2059
  %11 = zext i8 %10 to i32, !dbg !2059
  %12 = or i32 %7, %11, !dbg !2060
  %13 = trunc i32 %12 to i16, !dbg !2061
  ret i16 %13, !dbg !2062
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_data_in(%struct._Jbig2Ctx*, i8*, i64) #0 !dbg !2063 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [8 x i8], align 1
  %13 = alloca %struct._Jbig2Segment*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  store %struct._Jbig2Ctx* %0, %struct._Jbig2Ctx** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %5, metadata !2068, metadata !DIExpression()), !dbg !2069
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2070, metadata !DIExpression()), !dbg !2071
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2072, metadata !DIExpression()), !dbg !2073
  call void @llvm.dbg.declare(metadata i64* %8, metadata !2074, metadata !DIExpression()), !dbg !2075
  store i64 1024, i64* %8, align 8, !dbg !2075
  %16 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2076
  %17 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %16, i32 0, i32 5, !dbg !2078
  %18 = load i8*, i8** %17, align 8, !dbg !2078
  %19 = icmp eq i8* %18, null, !dbg !2079
  br i1 %19, label %20, label %43, !dbg !2080

; <label>:20:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata i64* %9, metadata !2081, metadata !DIExpression()), !dbg !2083
  store i64 1024, i64* %9, align 8, !dbg !2083
  br label %21, !dbg !2084

; <label>:21:                                     ; preds = %24, %20
  %22 = load i64, i64* %9, align 8, !dbg !2085
  %23 = shl i64 %22, 1, !dbg !2085
  store i64 %23, i64* %9, align 8, !dbg !2085
  br label %24, !dbg !2086

; <label>:24:                                     ; preds = %21
  %25 = load i64, i64* %9, align 8, !dbg !2087
  %26 = load i64, i64* %7, align 8, !dbg !2088
  %27 = icmp ult i64 %25, %26, !dbg !2089
  br i1 %27, label %21, label %28, !dbg !2086, !llvm.loop !2090

; <label>:28:                                     ; preds = %24
  %29 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2092
  %30 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %29, i32 0, i32 0, !dbg !2093
  %31 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %30, align 8, !dbg !2093
  %32 = load i64, i64* %9, align 8, !dbg !2094
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2095
  %33 = call i8* @jbig2_alloc(%struct._Jbig2Allocator.1* %31, i64 %32), !dbg !2095
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !2096
  %34 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2096
  %35 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %34, i32 0, i32 5, !dbg !2097
  store i8* %33, i8** %35, align 8, !dbg !2098
  %36 = load i64, i64* %9, align 8, !dbg !2099
  %37 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2100
  %38 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %37, i32 0, i32 6, !dbg !2101
  store i64 %36, i64* %38, align 8, !dbg !2102
  %39 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2103
  %40 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %39, i32 0, i32 7, !dbg !2104
  store i32 0, i32* %40, align 8, !dbg !2105
  %41 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2106
  %42 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %41, i32 0, i32 8, !dbg !2107
  store i32 0, i32* %42, align 4, !dbg !2108
  br label %162, !dbg !2109

; <label>:43:                                     ; preds = %3
  %44 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2110
  %45 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %44, i32 0, i32 8, !dbg !2112
  %46 = load i32, i32* %45, align 4, !dbg !2112
  %47 = zext i32 %46 to i64, !dbg !2110
  %48 = load i64, i64* %7, align 8, !dbg !2113
  %49 = add i64 %47, %48, !dbg !2114
  %50 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2115
  %51 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %50, i32 0, i32 6, !dbg !2116
  %52 = load i64, i64* %51, align 8, !dbg !2116
  %53 = icmp ugt i64 %49, %52, !dbg !2117
  br i1 %53, label %54, label %161, !dbg !2118

; <label>:54:                                     ; preds = %43
  %55 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2119
  %56 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %55, i32 0, i32 7, !dbg !2122
  %57 = load i32, i32* %56, align 8, !dbg !2122
  %58 = zext i32 %57 to i64, !dbg !2119
  %59 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2123
  %60 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %59, i32 0, i32 6, !dbg !2124
  %61 = load i64, i64* %60, align 8, !dbg !2124
  %62 = lshr i64 %61, 1, !dbg !2125
  %63 = icmp ule i64 %58, %62, !dbg !2126
  br i1 %63, label %64, label %99, !dbg !2127

; <label>:64:                                     ; preds = %54
  %65 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2128
  %66 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %65, i32 0, i32 8, !dbg !2129
  %67 = load i32, i32* %66, align 4, !dbg !2129
  %68 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2130
  %69 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %68, i32 0, i32 7, !dbg !2131
  %70 = load i32, i32* %69, align 8, !dbg !2131
  %71 = sub i32 %67, %70, !dbg !2132
  %72 = zext i32 %71 to i64, !dbg !2128
  %73 = load i64, i64* %7, align 8, !dbg !2133
  %74 = add i64 %72, %73, !dbg !2134
  %75 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2135
  %76 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %75, i32 0, i32 6, !dbg !2136
  %77 = load i64, i64* %76, align 8, !dbg !2136
  %78 = icmp ule i64 %74, %77, !dbg !2137
  br i1 %78, label %79, label %99, !dbg !2138

; <label>:79:                                     ; preds = %64
  %80 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2139
  %81 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %80, i32 0, i32 5, !dbg !2141
  %82 = load i8*, i8** %81, align 8, !dbg !2141
  %83 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2142
  %84 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %83, i32 0, i32 5, !dbg !2143
  %85 = load i8*, i8** %84, align 8, !dbg !2143
  %86 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2144
  %87 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %86, i32 0, i32 7, !dbg !2145
  %88 = load i32, i32* %87, align 8, !dbg !2145
  %89 = zext i32 %88 to i64, !dbg !2146
  %90 = getelementptr inbounds i8, i8* %85, i64 %89, !dbg !2146
  %91 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2147
  %92 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %91, i32 0, i32 8, !dbg !2148
  %93 = load i32, i32* %92, align 4, !dbg !2148
  %94 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2149
  %95 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %94, i32 0, i32 7, !dbg !2150
  %96 = load i32, i32* %95, align 8, !dbg !2150
  %97 = sub i32 %93, %96, !dbg !2151
  %98 = zext i32 %97 to i64, !dbg !2147
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 %90, i64 %98, i1 false), !dbg !2152
  br label %151, !dbg !2153

; <label>:99:                                     ; preds = %64, %54
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2154, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.declare(metadata i64* %11, metadata !2157, metadata !DIExpression()), !dbg !2158
  store i64 1024, i64* %11, align 8, !dbg !2158
  br label %100, !dbg !2159

; <label>:100:                                    ; preds = %103, %99
  %101 = load i64, i64* %11, align 8, !dbg !2160
  %102 = shl i64 %101, 1, !dbg !2160
  store i64 %102, i64* %11, align 8, !dbg !2160
  br label %103, !dbg !2161

; <label>:103:                                    ; preds = %100
  %104 = load i64, i64* %11, align 8, !dbg !2162
  %105 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2163
  %106 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %105, i32 0, i32 8, !dbg !2164
  %107 = load i32, i32* %106, align 4, !dbg !2164
  %108 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2165
  %109 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %108, i32 0, i32 7, !dbg !2166
  %110 = load i32, i32* %109, align 8, !dbg !2166
  %111 = sub i32 %107, %110, !dbg !2167
  %112 = zext i32 %111 to i64, !dbg !2163
  %113 = load i64, i64* %7, align 8, !dbg !2168
  %114 = add i64 %112, %113, !dbg !2169
  %115 = icmp ult i64 %104, %114, !dbg !2170
  br i1 %115, label %100, label %116, !dbg !2161, !llvm.loop !2171

; <label>:116:                                    ; preds = %103
  %117 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2173
  %118 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %117, i32 0, i32 0, !dbg !2174
  %119 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %118, align 8, !dbg !2174
  %120 = load i64, i64* %11, align 8, !dbg !2175
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2176
  %121 = call i8* @jbig2_alloc(%struct._Jbig2Allocator.1* %119, i64 %120), !dbg !2176
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !2177
  store i8* %121, i8** %10, align 8, !dbg !2177
  %122 = load i8*, i8** %10, align 8, !dbg !2178
  %123 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2179
  %124 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %123, i32 0, i32 5, !dbg !2180
  %125 = load i8*, i8** %124, align 8, !dbg !2180
  %126 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2181
  %127 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %126, i32 0, i32 7, !dbg !2182
  %128 = load i32, i32* %127, align 8, !dbg !2182
  %129 = zext i32 %128 to i64, !dbg !2183
  %130 = getelementptr inbounds i8, i8* %125, i64 %129, !dbg !2183
  %131 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2184
  %132 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %131, i32 0, i32 8, !dbg !2185
  %133 = load i32, i32* %132, align 4, !dbg !2185
  %134 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2186
  %135 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %134, i32 0, i32 7, !dbg !2187
  %136 = load i32, i32* %135, align 8, !dbg !2187
  %137 = sub i32 %133, %136, !dbg !2188
  %138 = zext i32 %137 to i64, !dbg !2184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %122, i8* align 1 %130, i64 %138, i1 false), !dbg !2189
  %139 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2190
  %140 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %139, i32 0, i32 0, !dbg !2191
  %141 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %140, align 8, !dbg !2191
  %142 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2192
  %143 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %142, i32 0, i32 5, !dbg !2193
  %144 = load i8*, i8** %143, align 8, !dbg !2193
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2194
  call void @jbig2_free(%struct._Jbig2Allocator.1* %141, i8* %144), !dbg !2194
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !2195
  %145 = load i8*, i8** %10, align 8, !dbg !2195
  %146 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2196
  %147 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %146, i32 0, i32 5, !dbg !2197
  store i8* %145, i8** %147, align 8, !dbg !2198
  %148 = load i64, i64* %11, align 8, !dbg !2199
  %149 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2200
  %150 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %149, i32 0, i32 6, !dbg !2201
  store i64 %148, i64* %150, align 8, !dbg !2202
  br label %151

; <label>:151:                                    ; preds = %116, %79
  %152 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2203
  %153 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %152, i32 0, i32 7, !dbg !2204
  %154 = load i32, i32* %153, align 8, !dbg !2204
  %155 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2205
  %156 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %155, i32 0, i32 8, !dbg !2206
  %157 = load i32, i32* %156, align 4, !dbg !2207
  %158 = sub i32 %157, %154, !dbg !2207
  store i32 %158, i32* %156, align 4, !dbg !2207
  %159 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2208
  %160 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %159, i32 0, i32 7, !dbg !2209
  store i32 0, i32* %160, align 8, !dbg !2210
  br label %161, !dbg !2211

; <label>:161:                                    ; preds = %151, %43
  br label %162

; <label>:162:                                    ; preds = %161, %28
  %163 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2212
  %164 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %163, i32 0, i32 5, !dbg !2213
  %165 = load i8*, i8** %164, align 8, !dbg !2213
  %166 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2214
  %167 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %166, i32 0, i32 8, !dbg !2215
  %168 = load i32, i32* %167, align 4, !dbg !2215
  %169 = zext i32 %168 to i64, !dbg !2216
  %170 = getelementptr inbounds i8, i8* %165, i64 %169, !dbg !2216
  %171 = load i8*, i8** %6, align 8, !dbg !2217
  %172 = load i64, i64* %7, align 8, !dbg !2218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %170, i8* align 1 %171, i64 %172, i1 false), !dbg !2219
  %173 = load i64, i64* %7, align 8, !dbg !2220
  %174 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2221
  %175 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %174, i32 0, i32 8, !dbg !2222
  %176 = load i32, i32* %175, align 4, !dbg !2223
  %177 = zext i32 %176 to i64, !dbg !2223
  %178 = add i64 %177, %173, !dbg !2223
  %179 = trunc i64 %178 to i32, !dbg !2223
  store i32 %179, i32* %175, align 4, !dbg !2223
  br label %180, !dbg !2224

; <label>:180:                                    ; preds = %481, %162
  call void @llvm.dbg.declare(metadata [8 x i8]* %12, metadata !2225, metadata !DIExpression()), !dbg !2229
  %181 = bitcast [8 x i8]* %12 to i8*, !dbg !2229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.jbig2_data_in.jbig2_id_string, i32 0, i32 0), i64 8, i1 false), !dbg !2229
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %13, metadata !2230, metadata !DIExpression()), !dbg !2231
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2232, metadata !DIExpression()), !dbg !2233
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2234, metadata !DIExpression()), !dbg !2235
  %182 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2236
  %183 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %182, i32 0, i32 9, !dbg !2237
  %184 = load i32, i32* %183, align 8, !dbg !2237
  switch i32 %184, label %481 [
    i32 0, label %185
    i32 1, label %309
    i32 3, label %309
    i32 2, label %394
    i32 4, label %394
    i32 5, label %469
  ], !dbg !2238

; <label>:185:                                    ; preds = %180
  %186 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2239
  %187 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %186, i32 0, i32 8, !dbg !2242
  %188 = load i32, i32* %187, align 4, !dbg !2242
  %189 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2243
  %190 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %189, i32 0, i32 7, !dbg !2244
  %191 = load i32, i32* %190, align 8, !dbg !2244
  %192 = sub i32 %188, %191, !dbg !2245
  %193 = icmp ult i32 %192, 9, !dbg !2246
  br i1 %193, label %194, label %195, !dbg !2247

; <label>:194:                                    ; preds = %185
  store i32 0, i32* %4, align 4, !dbg !2248
  br label %482, !dbg !2248

; <label>:195:                                    ; preds = %185
  %196 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2249
  %197 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %196, i32 0, i32 5, !dbg !2251
  %198 = load i8*, i8** %197, align 8, !dbg !2251
  %199 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2252
  %200 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %199, i32 0, i32 7, !dbg !2253
  %201 = load i32, i32* %200, align 8, !dbg !2253
  %202 = zext i32 %201 to i64, !dbg !2254
  %203 = getelementptr inbounds i8, i8* %198, i64 %202, !dbg !2254
  %204 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i32 0, i32 0, !dbg !2255
  %205 = call i32 @memcmp(i8* %203, i8* %204, i64 8) #10, !dbg !2256
  %206 = icmp ne i32 %205, 0, !dbg !2256
  br i1 %206, label %207, label %210, !dbg !2257

; <label>:207:                                    ; preds = %195
  %208 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2258
  %209 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %208, i32 3, i32 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.48, i32 0, i32 0)), !dbg !2259
  store i32 %209, i32* %4, align 4, !dbg !2260
  br label %482, !dbg !2260

; <label>:210:                                    ; preds = %195
  %211 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2261
  %212 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %211, i32 0, i32 5, !dbg !2262
  %213 = load i8*, i8** %212, align 8, !dbg !2262
  %214 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2263
  %215 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %214, i32 0, i32 7, !dbg !2264
  %216 = load i32, i32* %215, align 8, !dbg !2264
  %217 = add i32 %216, 8, !dbg !2265
  %218 = zext i32 %217 to i64, !dbg !2261
  %219 = getelementptr inbounds i8, i8* %213, i64 %218, !dbg !2261
  %220 = load i8, i8* %219, align 1, !dbg !2261
  %221 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2266
  %222 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %221, i32 0, i32 10, !dbg !2267
  store i8 %220, i8* %222, align 4, !dbg !2268
  %223 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2269
  %224 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %223, i32 0, i32 10, !dbg !2271
  %225 = load i8, i8* %224, align 4, !dbg !2271
  %226 = zext i8 %225 to i32, !dbg !2269
  %227 = and i32 %226, 252, !dbg !2272
  %228 = icmp ne i32 %227, 0, !dbg !2272
  br i1 %228, label %229, label %236, !dbg !2273

; <label>:229:                                    ; preds = %210
  %230 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2274
  %231 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2276
  %232 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %231, i32 0, i32 10, !dbg !2277
  %233 = load i8, i8* %232, align 4, !dbg !2277
  %234 = zext i8 %233 to i32, !dbg !2276
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2278
  %235 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %230, i32 2, i32 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.49, i32 0, i32 0), i32 %234), !dbg !2278
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !2279
  br label %236, !dbg !2279

; <label>:236:                                    ; preds = %229, %210
  %237 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2280
  %238 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %237, i32 0, i32 10, !dbg !2282
  %239 = load i8, i8* %238, align 4, !dbg !2282
  %240 = zext i8 %239 to i32, !dbg !2280
  %241 = and i32 %240, 2, !dbg !2283
  %242 = icmp ne i32 %241, 0, !dbg !2283
  br i1 %242, label %284, label %243, !dbg !2284

; <label>:243:                                    ; preds = %236
  %244 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2285
  %245 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %244, i32 0, i32 8, !dbg !2288
  %246 = load i32, i32* %245, align 4, !dbg !2288
  %247 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2289
  %248 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %247, i32 0, i32 7, !dbg !2290
  %249 = load i32, i32* %248, align 8, !dbg !2290
  %250 = sub i32 %246, %249, !dbg !2291
  %251 = icmp ult i32 %250, 13, !dbg !2292
  br i1 %251, label %252, label %253, !dbg !2293

; <label>:252:                                    ; preds = %243
  store i32 0, i32* %4, align 4, !dbg !2294
  br label %482, !dbg !2294

; <label>:253:                                    ; preds = %243
  %254 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2295
  %255 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %254, i32 0, i32 5, !dbg !2296
  %256 = load i8*, i8** %255, align 8, !dbg !2296
  %257 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2297
  %258 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %257, i32 0, i32 7, !dbg !2298
  %259 = load i32, i32* %258, align 8, !dbg !2298
  %260 = zext i32 %259 to i64, !dbg !2299
  %261 = getelementptr inbounds i8, i8* %256, i64 %260, !dbg !2299
  %262 = getelementptr inbounds i8, i8* %261, i64 9, !dbg !2300
  %263 = call i32 @jbig2_get_int32(i8* %262), !dbg !2301
  %264 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2302
  %265 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %264, i32 0, i32 11, !dbg !2303
  store i32 %263, i32* %265, align 8, !dbg !2304
  %266 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2305
  %267 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %266, i32 0, i32 7, !dbg !2306
  %268 = load i32, i32* %267, align 8, !dbg !2307
  %269 = add i32 %268, 13, !dbg !2307
  store i32 %269, i32* %267, align 8, !dbg !2307
  %270 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2308
  %271 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %270, i32 0, i32 11, !dbg !2310
  %272 = load i32, i32* %271, align 8, !dbg !2310
  %273 = icmp eq i32 %272, 1, !dbg !2311
  br i1 %273, label %274, label %277, !dbg !2312

; <label>:274:                                    ; preds = %253
  %275 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2313
  %276 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %275, i32 1, i32 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.50, i32 0, i32 0)), !dbg !2314
  br label %283, !dbg !2314

; <label>:277:                                    ; preds = %253
  %278 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2315
  %279 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2316
  %280 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %279, i32 0, i32 11, !dbg !2317
  %281 = load i32, i32* %280, align 8, !dbg !2317
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2318
  %282 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %278, i32 1, i32 -1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5.51, i32 0, i32 0), i32 %281), !dbg !2318
  store volatile i8 0, i8* @specialMalloc, align 1
  br label %283

; <label>:283:                                    ; preds = %277, %274
  br label %291, !dbg !2319

; <label>:284:                                    ; preds = %236
  %285 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2320
  %286 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %285, i32 0, i32 11, !dbg !2322
  store i32 0, i32* %286, align 8, !dbg !2323
  %287 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2324
  %288 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %287, i32 0, i32 7, !dbg !2325
  %289 = load i32, i32* %288, align 8, !dbg !2326
  %290 = add i32 %289, 9, !dbg !2326
  store i32 %290, i32* %288, align 8, !dbg !2326
  br label %291

; <label>:291:                                    ; preds = %284, %283
  %292 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2327
  %293 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %292, i32 0, i32 10, !dbg !2329
  %294 = load i8, i8* %293, align 4, !dbg !2329
  %295 = zext i8 %294 to i32, !dbg !2327
  %296 = and i32 %295, 1, !dbg !2330
  %297 = icmp ne i32 %296, 0, !dbg !2330
  br i1 %297, label %298, label %303, !dbg !2331

; <label>:298:                                    ; preds = %291
  %299 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2332
  %300 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %299, i32 0, i32 9, !dbg !2334
  store i32 1, i32* %300, align 8, !dbg !2335
  %301 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2336
  %302 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %301, i32 0, i32 -1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6.52, i32 0, i32 0)), !dbg !2337
  br label %308, !dbg !2338

; <label>:303:                                    ; preds = %291
  %304 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2339
  %305 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %304, i32 0, i32 9, !dbg !2341
  store i32 3, i32* %305, align 8, !dbg !2342
  %306 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2343
  %307 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %306, i32 0, i32 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7.53, i32 0, i32 0)), !dbg !2344
  br label %308

; <label>:308:                                    ; preds = %303, %298
  br label %481, !dbg !2345

; <label>:309:                                    ; preds = %180, %180
  %310 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2346
  %311 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2347
  %312 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %311, i32 0, i32 5, !dbg !2348
  %313 = load i8*, i8** %312, align 8, !dbg !2348
  %314 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2349
  %315 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %314, i32 0, i32 7, !dbg !2350
  %316 = load i32, i32* %315, align 8, !dbg !2350
  %317 = zext i32 %316 to i64, !dbg !2351
  %318 = getelementptr inbounds i8, i8* %313, i64 %317, !dbg !2351
  %319 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2352
  %320 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %319, i32 0, i32 8, !dbg !2353
  %321 = load i32, i32* %320, align 4, !dbg !2353
  %322 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2354
  %323 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %322, i32 0, i32 7, !dbg !2355
  %324 = load i32, i32* %323, align 8, !dbg !2355
  %325 = sub i32 %321, %324, !dbg !2356
  %326 = zext i32 %325 to i64, !dbg !2352
  %327 = call %struct._Jbig2Segment* bitcast (%struct._Jbig2Segment* (%struct._Jbig2Ctx.11*, i8*, i64, i64*)* @jbig2_parse_segment_header to %struct._Jbig2Segment* (%struct._Jbig2Ctx*, i8*, i64, i64*)*)(%struct._Jbig2Ctx* %310, i8* %318, i64 %326, i64* %14), !dbg !2357
  store %struct._Jbig2Segment* %327, %struct._Jbig2Segment** %13, align 8, !dbg !2358
  %328 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %13, align 8, !dbg !2359
  %329 = icmp eq %struct._Jbig2Segment* %328, null, !dbg !2361
  br i1 %329, label %330, label %331, !dbg !2362

; <label>:330:                                    ; preds = %309
  store i32 0, i32* %4, align 4, !dbg !2363
  br label %482, !dbg !2363

; <label>:331:                                    ; preds = %309
  %332 = load i64, i64* %14, align 8, !dbg !2364
  %333 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2365
  %334 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %333, i32 0, i32 7, !dbg !2366
  %335 = load i32, i32* %334, align 8, !dbg !2367
  %336 = zext i32 %335 to i64, !dbg !2367
  %337 = add i64 %336, %332, !dbg !2367
  %338 = trunc i64 %337 to i32, !dbg !2367
  store i32 %338, i32* %334, align 8, !dbg !2367
  %339 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2368
  %340 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %339, i32 0, i32 14, !dbg !2370
  %341 = load i32, i32* %340, align 8, !dbg !2370
  %342 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2371
  %343 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %342, i32 0, i32 12, !dbg !2372
  %344 = load i32, i32* %343, align 4, !dbg !2372
  %345 = icmp eq i32 %341, %344, !dbg !2373
  br i1 %345, label %346, label %364, !dbg !2374

; <label>:346:                                    ; preds = %331
  %347 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2375
  %348 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %347, i32 0, i32 0, !dbg !2376
  %349 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %348, align 8, !dbg !2376
  %350 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2377
  %351 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %350, i32 0, i32 13, !dbg !2378
  %352 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %351, align 8, !dbg !2378
  %353 = bitcast %struct._Jbig2Segment** %352 to i8*, !dbg !2377
  %354 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2379
  %355 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %354, i32 0, i32 12, !dbg !2380
  %356 = load i32, i32* %355, align 4, !dbg !2381
  %357 = shl i32 %356, 2, !dbg !2381
  store i32 %357, i32* %355, align 4, !dbg !2381
  %358 = sext i32 %357 to i64, !dbg !2382
  %359 = mul i64 %358, 8, !dbg !2383
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2384
  %360 = call i8* @jbig2_realloc(%struct._Jbig2Allocator.1* %349, i8* %353, i64 %359), !dbg !2384
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !2385
  %361 = bitcast i8* %360 to %struct._Jbig2Segment**, !dbg !2385
  %362 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2386
  %363 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %362, i32 0, i32 13, !dbg !2387
  store %struct._Jbig2Segment** %361, %struct._Jbig2Segment*** %363, align 8, !dbg !2388
  br label %364, !dbg !2386

; <label>:364:                                    ; preds = %346, %331
  %365 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %13, align 8, !dbg !2389
  %366 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2390
  %367 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %366, i32 0, i32 13, !dbg !2391
  %368 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %367, align 8, !dbg !2391
  %369 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2392
  %370 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %369, i32 0, i32 14, !dbg !2393
  %371 = load i32, i32* %370, align 8, !dbg !2394
  %372 = add nsw i32 %371, 1, !dbg !2394
  store i32 %372, i32* %370, align 8, !dbg !2394
  %373 = sext i32 %371 to i64, !dbg !2390
  %374 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %368, i64 %373, !dbg !2390
  store %struct._Jbig2Segment* %365, %struct._Jbig2Segment** %374, align 8, !dbg !2395
  %375 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2396
  %376 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %375, i32 0, i32 9, !dbg !2398
  %377 = load i32, i32* %376, align 8, !dbg !2398
  %378 = icmp eq i32 %377, 3, !dbg !2399
  br i1 %378, label %379, label %390, !dbg !2400

; <label>:379:                                    ; preds = %364
  %380 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %13, align 8, !dbg !2401
  %381 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %380, i32 0, i32 1, !dbg !2404
  %382 = load i8, i8* %381, align 4, !dbg !2404
  %383 = zext i8 %382 to i32, !dbg !2401
  %384 = and i32 %383, 63, !dbg !2405
  %385 = icmp eq i32 %384, 51, !dbg !2406
  br i1 %385, label %386, label %389, !dbg !2407

; <label>:386:                                    ; preds = %379
  %387 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2408
  %388 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %387, i32 0, i32 9, !dbg !2409
  store i32 4, i32* %388, align 8, !dbg !2410
  br label %389, !dbg !2408

; <label>:389:                                    ; preds = %386, %379
  br label %393, !dbg !2411

; <label>:390:                                    ; preds = %364
  %391 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2412
  %392 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %391, i32 0, i32 9, !dbg !2413
  store i32 2, i32* %392, align 8, !dbg !2414
  br label %393

; <label>:393:                                    ; preds = %390, %389
  br label %481, !dbg !2415

; <label>:394:                                    ; preds = %180, %180
  %395 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2416
  %396 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %395, i32 0, i32 13, !dbg !2417
  %397 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %396, align 8, !dbg !2417
  %398 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2418
  %399 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %398, i32 0, i32 15, !dbg !2419
  %400 = load i32, i32* %399, align 4, !dbg !2419
  %401 = sext i32 %400 to i64, !dbg !2416
  %402 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %397, i64 %401, !dbg !2416
  %403 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %402, align 8, !dbg !2416
  store %struct._Jbig2Segment* %403, %struct._Jbig2Segment** %13, align 8, !dbg !2420
  %404 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %13, align 8, !dbg !2421
  %405 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %404, i32 0, i32 3, !dbg !2423
  %406 = load i64, i64* %405, align 8, !dbg !2423
  %407 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2424
  %408 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %407, i32 0, i32 8, !dbg !2425
  %409 = load i32, i32* %408, align 4, !dbg !2425
  %410 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2426
  %411 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %410, i32 0, i32 7, !dbg !2427
  %412 = load i32, i32* %411, align 8, !dbg !2427
  %413 = sub i32 %409, %412, !dbg !2428
  %414 = zext i32 %413 to i64, !dbg !2424
  %415 = icmp ugt i64 %406, %414, !dbg !2429
  br i1 %415, label %416, label %417, !dbg !2430

; <label>:416:                                    ; preds = %394
  store i32 0, i32* %4, align 4, !dbg !2431
  br label %482, !dbg !2431

; <label>:417:                                    ; preds = %394
  %418 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2432
  %419 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %13, align 8, !dbg !2433
  %420 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2434
  %421 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %420, i32 0, i32 5, !dbg !2435
  %422 = load i8*, i8** %421, align 8, !dbg !2435
  %423 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2436
  %424 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %423, i32 0, i32 7, !dbg !2437
  %425 = load i32, i32* %424, align 8, !dbg !2437
  %426 = zext i32 %425 to i64, !dbg !2438
  %427 = getelementptr inbounds i8, i8* %422, i64 %426, !dbg !2438
  %428 = call i32 bitcast (i32 (%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*)* @jbig2_parse_segment to i32 (%struct._Jbig2Ctx*, %struct._Jbig2Segment*, i8*)*)(%struct._Jbig2Ctx* %418, %struct._Jbig2Segment* %419, i8* %427), !dbg !2439
  store i32 %428, i32* %15, align 4, !dbg !2440
  %429 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %13, align 8, !dbg !2441
  %430 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %429, i32 0, i32 3, !dbg !2442
  %431 = load i64, i64* %430, align 8, !dbg !2442
  %432 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2443
  %433 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %432, i32 0, i32 7, !dbg !2444
  %434 = load i32, i32* %433, align 8, !dbg !2445
  %435 = zext i32 %434 to i64, !dbg !2445
  %436 = add i64 %435, %431, !dbg !2445
  %437 = trunc i64 %436 to i32, !dbg !2445
  store i32 %437, i32* %433, align 8, !dbg !2445
  %438 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2446
  %439 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %438, i32 0, i32 15, !dbg !2447
  %440 = load i32, i32* %439, align 4, !dbg !2448
  %441 = add nsw i32 %440, 1, !dbg !2448
  store i32 %441, i32* %439, align 4, !dbg !2448
  %442 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2449
  %443 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %442, i32 0, i32 9, !dbg !2451
  %444 = load i32, i32* %443, align 8, !dbg !2451
  %445 = icmp eq i32 %444, 4, !dbg !2452
  br i1 %445, label %446, label %458, !dbg !2453

; <label>:446:                                    ; preds = %417
  %447 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2454
  %448 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %447, i32 0, i32 15, !dbg !2457
  %449 = load i32, i32* %448, align 4, !dbg !2457
  %450 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2458
  %451 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %450, i32 0, i32 14, !dbg !2459
  %452 = load i32, i32* %451, align 8, !dbg !2459
  %453 = icmp eq i32 %449, %452, !dbg !2460
  br i1 %453, label %454, label %457, !dbg !2461

; <label>:454:                                    ; preds = %446
  %455 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2462
  %456 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %455, i32 0, i32 9, !dbg !2463
  store i32 5, i32* %456, align 8, !dbg !2464
  br label %457, !dbg !2462

; <label>:457:                                    ; preds = %454, %446
  br label %461, !dbg !2465

; <label>:458:                                    ; preds = %417
  %459 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2466
  %460 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %459, i32 0, i32 9, !dbg !2468
  store i32 1, i32* %460, align 8, !dbg !2469
  br label %461

; <label>:461:                                    ; preds = %458, %457
  %462 = load i32, i32* %15, align 4, !dbg !2470
  %463 = icmp slt i32 %462, 0, !dbg !2472
  br i1 %463, label %464, label %468, !dbg !2473

; <label>:464:                                    ; preds = %461
  %465 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2474
  %466 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %465, i32 0, i32 9, !dbg !2476
  store i32 5, i32* %466, align 8, !dbg !2477
  %467 = load i32, i32* %15, align 4, !dbg !2478
  store i32 %467, i32* %4, align 4, !dbg !2479
  br label %482, !dbg !2479

; <label>:468:                                    ; preds = %461
  br label %481, !dbg !2480

; <label>:469:                                    ; preds = %180
  %470 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2481
  %471 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %470, i32 0, i32 7, !dbg !2483
  %472 = load i32, i32* %471, align 8, !dbg !2483
  %473 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2484
  %474 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %473, i32 0, i32 8, !dbg !2485
  %475 = load i32, i32* %474, align 4, !dbg !2485
  %476 = icmp eq i32 %472, %475, !dbg !2486
  br i1 %476, label %477, label %478, !dbg !2487

; <label>:477:                                    ; preds = %469
  store i32 0, i32* %4, align 4, !dbg !2488
  br label %482, !dbg !2488

; <label>:478:                                    ; preds = %469
  %479 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %5, align 8, !dbg !2489
  %480 = call i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...) @jbig2_error(%struct._Jbig2Ctx* %479, i32 2, i32 -1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.54, i32 0, i32 0)), !dbg !2490
  store i32 %480, i32* %4, align 4, !dbg !2491
  br label %482, !dbg !2491

; <label>:481:                                    ; preds = %468, %393, %308, %180
  br label %180, !dbg !2492, !llvm.loop !2493

; <label>:482:                                    ; preds = %478, %477, %464, %416, %330, %252, %207, %194
  %483 = load i32, i32* %4, align 4, !dbg !2496
  ret i32 %483, !dbg !2496
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_ctx_free(%struct._Jbig2Ctx*) #0 !dbg !2497 {
  %2 = alloca %struct._Jbig2Ctx*, align 8
  %3 = alloca %struct._Jbig2Allocator.1*, align 8
  %4 = alloca i32, align 4
  store %struct._Jbig2Ctx* %0, %struct._Jbig2Ctx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %2, metadata !2500, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.declare(metadata %struct._Jbig2Allocator.1** %3, metadata !2502, metadata !DIExpression()), !dbg !2503
  %5 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2504
  %6 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %5, i32 0, i32 0, !dbg !2505
  %7 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %6, align 8, !dbg !2505
  store %struct._Jbig2Allocator.1* %7, %struct._Jbig2Allocator.1** %3, align 8, !dbg !2503
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2506, metadata !DIExpression()), !dbg !2507
  %8 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !2508
  %9 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2509
  %10 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %9, i32 0, i32 5, !dbg !2510
  %11 = load i8*, i8** %10, align 8, !dbg !2510
  call void @jbig2_free(%struct._Jbig2Allocator.1* %8, i8* %11), !dbg !2511
  %12 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2512
  %13 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %12, i32 0, i32 13, !dbg !2514
  %14 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %13, align 8, !dbg !2514
  %15 = icmp ne %struct._Jbig2Segment** %14, null, !dbg !2515
  br i1 %15, label %16, label %41, !dbg !2516

; <label>:16:                                     ; preds = %1
  store i32 0, i32* %4, align 4, !dbg !2517
  br label %17, !dbg !2520

; <label>:17:                                     ; preds = %32, %16
  %18 = load i32, i32* %4, align 4, !dbg !2521
  %19 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2523
  %20 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %19, i32 0, i32 14, !dbg !2524
  %21 = load i32, i32* %20, align 8, !dbg !2524
  %22 = icmp slt i32 %18, %21, !dbg !2525
  br i1 %22, label %23, label %35, !dbg !2526

; <label>:23:                                     ; preds = %17
  %24 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2527
  %25 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2528
  %26 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %25, i32 0, i32 13, !dbg !2529
  %27 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %26, align 8, !dbg !2529
  %28 = load i32, i32* %4, align 4, !dbg !2530
  %29 = sext i32 %28 to i64, !dbg !2528
  %30 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %27, i64 %29, !dbg !2528
  %31 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %30, align 8, !dbg !2528
  call void bitcast (void (%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*)* @jbig2_free_segment to void (%struct._Jbig2Ctx*, %struct._Jbig2Segment*)*)(%struct._Jbig2Ctx* %24, %struct._Jbig2Segment* %31), !dbg !2531
  br label %32, !dbg !2531

; <label>:32:                                     ; preds = %23
  %33 = load i32, i32* %4, align 4, !dbg !2532
  %34 = add nsw i32 %33, 1, !dbg !2532
  store i32 %34, i32* %4, align 4, !dbg !2532
  br label %17, !dbg !2533, !llvm.loop !2534

; <label>:35:                                     ; preds = %17
  %36 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !2536
  %37 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2537
  %38 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %37, i32 0, i32 13, !dbg !2538
  %39 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %38, align 8, !dbg !2538
  %40 = bitcast %struct._Jbig2Segment** %39 to i8*, !dbg !2537
  call void @jbig2_free(%struct._Jbig2Allocator.1* %36, i8* %40), !dbg !2539
  br label %41, !dbg !2540

; <label>:41:                                     ; preds = %35, %1
  %42 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2541
  %43 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %42, i32 0, i32 18, !dbg !2543
  %44 = load %struct._Jbig2Page*, %struct._Jbig2Page** %43, align 8, !dbg !2543
  %45 = icmp ne %struct._Jbig2Page* %44, null, !dbg !2544
  br i1 %45, label %46, label %83, !dbg !2545

; <label>:46:                                     ; preds = %41
  store i32 0, i32* %4, align 4, !dbg !2546
  br label %47, !dbg !2549

; <label>:47:                                     ; preds = %74, %46
  %48 = load i32, i32* %4, align 4, !dbg !2550
  %49 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2552
  %50 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %49, i32 0, i32 16, !dbg !2553
  %51 = load i32, i32* %50, align 8, !dbg !2553
  %52 = icmp sle i32 %48, %51, !dbg !2554
  br i1 %52, label %53, label %77, !dbg !2555

; <label>:53:                                     ; preds = %47
  %54 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2556
  %55 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %54, i32 0, i32 18, !dbg !2558
  %56 = load %struct._Jbig2Page*, %struct._Jbig2Page** %55, align 8, !dbg !2558
  %57 = load i32, i32* %4, align 4, !dbg !2559
  %58 = sext i32 %57 to i64, !dbg !2556
  %59 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %56, i64 %58, !dbg !2556
  %60 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %59, i32 0, i32 10, !dbg !2560
  %61 = load %struct._Jbig2Image*, %struct._Jbig2Image** %60, align 8, !dbg !2560
  %62 = icmp ne %struct._Jbig2Image* %61, null, !dbg !2561
  br i1 %62, label %63, label %73, !dbg !2562

; <label>:63:                                     ; preds = %53
  %64 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2563
  %65 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2564
  %66 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %65, i32 0, i32 18, !dbg !2565
  %67 = load %struct._Jbig2Page*, %struct._Jbig2Page** %66, align 8, !dbg !2565
  %68 = load i32, i32* %4, align 4, !dbg !2566
  %69 = sext i32 %68 to i64, !dbg !2564
  %70 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %67, i64 %69, !dbg !2564
  %71 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %70, i32 0, i32 10, !dbg !2567
  %72 = load %struct._Jbig2Image*, %struct._Jbig2Image** %71, align 8, !dbg !2567
  call void bitcast (void (%struct._Jbig2Ctx.11*, %struct._Jbig2Image*)* @jbig2_image_release to void (%struct._Jbig2Ctx*, %struct._Jbig2Image*)*)(%struct._Jbig2Ctx* %64, %struct._Jbig2Image* %72), !dbg !2568
  br label %73, !dbg !2568

; <label>:73:                                     ; preds = %63, %53
  br label %74, !dbg !2569

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* %4, align 4, !dbg !2570
  %76 = add nsw i32 %75, 1, !dbg !2570
  store i32 %76, i32* %4, align 4, !dbg !2570
  br label %47, !dbg !2571, !llvm.loop !2572

; <label>:77:                                     ; preds = %47
  %78 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !2574
  %79 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2575
  %80 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %79, i32 0, i32 18, !dbg !2576
  %81 = load %struct._Jbig2Page*, %struct._Jbig2Page** %80, align 8, !dbg !2576
  %82 = bitcast %struct._Jbig2Page* %81 to i8*, !dbg !2575
  call void @jbig2_free(%struct._Jbig2Allocator.1* %78, i8* %82), !dbg !2577
  br label %83, !dbg !2578

; <label>:83:                                     ; preds = %77, %41
  %84 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %3, align 8, !dbg !2579
  %85 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2580
  %86 = bitcast %struct._Jbig2Ctx* %85 to i8*, !dbg !2580
  call void @jbig2_free(%struct._Jbig2Allocator.1* %84, i8* %86), !dbg !2581
  ret void, !dbg !2582
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2GlobalCtx* @jbig2_make_global_ctx(%struct._Jbig2Ctx*) #0 !dbg !2583 {
  %2 = alloca %struct._Jbig2Ctx*, align 8
  store %struct._Jbig2Ctx* %0, %struct._Jbig2Ctx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %2, metadata !2586, metadata !DIExpression()), !dbg !2587
  %3 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %2, align 8, !dbg !2588
  %4 = bitcast %struct._Jbig2Ctx* %3 to %struct._Jbig2GlobalCtx*, !dbg !2589
  ret %struct._Jbig2GlobalCtx* %4, !dbg !2590
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_global_ctx_free(%struct._Jbig2GlobalCtx*) #0 !dbg !2591 {
  %2 = alloca %struct._Jbig2GlobalCtx*, align 8
  store %struct._Jbig2GlobalCtx* %0, %struct._Jbig2GlobalCtx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2GlobalCtx** %2, metadata !2594, metadata !DIExpression()), !dbg !2595
  %3 = load %struct._Jbig2GlobalCtx*, %struct._Jbig2GlobalCtx** %2, align 8, !dbg !2596
  %4 = bitcast %struct._Jbig2GlobalCtx* %3 to %struct._Jbig2Ctx*, !dbg !2597
  call void @jbig2_ctx_free(%struct._Jbig2Ctx* %4), !dbg !2598
  ret void, !dbg !2599
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2WordStream* @jbig2_word_stream_buf_new(%struct._Jbig2Ctx*, i8*, i64) #0 !dbg !2600 {
  %4 = alloca %struct._Jbig2Ctx*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.Jbig2WordStreamBuf*, align 8
  store %struct._Jbig2Ctx* %0, %struct._Jbig2Ctx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %4, metadata !2603, metadata !DIExpression()), !dbg !2604
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2605, metadata !DIExpression()), !dbg !2606
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2607, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.declare(metadata %struct.Jbig2WordStreamBuf** %7, metadata !2609, metadata !DIExpression()), !dbg !2610
  %8 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %4, align 8, !dbg !2611
  %9 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %8, i32 0, i32 0, !dbg !2612
  %10 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %9, align 8, !dbg !2612
  %11 = call i8* @jbig2_alloc(%struct._Jbig2Allocator.1* %10, i64 24), !dbg !2613
  %12 = bitcast i8* %11 to %struct.Jbig2WordStreamBuf*, !dbg !2614
  store %struct.Jbig2WordStreamBuf* %12, %struct.Jbig2WordStreamBuf** %7, align 8, !dbg !2610
  %13 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %7, align 8, !dbg !2615
  %14 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %13, i32 0, i32 0, !dbg !2616
  %15 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %14, i32 0, i32 0, !dbg !2617
  store i32 (%struct._Jbig2WordStream*, i32)* @jbig2_word_stream_buf_get_next_word, i32 (%struct._Jbig2WordStream*, i32)** %15, align 8, !dbg !2618
  %16 = load i8*, i8** %5, align 8, !dbg !2619
  %17 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %7, align 8, !dbg !2620
  %18 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %17, i32 0, i32 1, !dbg !2621
  store i8* %16, i8** %18, align 8, !dbg !2622
  %19 = load i64, i64* %6, align 8, !dbg !2623
  %20 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %7, align 8, !dbg !2624
  %21 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %20, i32 0, i32 2, !dbg !2625
  store i64 %19, i64* %21, align 8, !dbg !2626
  %22 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %7, align 8, !dbg !2627
  %23 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %22, i32 0, i32 0, !dbg !2628
  ret %struct._Jbig2WordStream* %23, !dbg !2629
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_word_stream_buf_get_next_word(%struct._Jbig2WordStream*, i32) #0 !dbg !2630 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._Jbig2WordStream*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.Jbig2WordStreamBuf*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct._Jbig2WordStream* %0, %struct._Jbig2WordStream** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %4, metadata !2631, metadata !DIExpression()), !dbg !2632
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2633, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.declare(metadata %struct.Jbig2WordStreamBuf** %6, metadata !2635, metadata !DIExpression()), !dbg !2636
  %10 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !2637
  %11 = bitcast %struct._Jbig2WordStream* %10 to %struct.Jbig2WordStreamBuf*, !dbg !2638
  store %struct.Jbig2WordStreamBuf* %11, %struct.Jbig2WordStreamBuf** %6, align 8, !dbg !2636
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2639, metadata !DIExpression()), !dbg !2640
  %12 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %6, align 8, !dbg !2641
  %13 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %12, i32 0, i32 1, !dbg !2642
  %14 = load i8*, i8** %13, align 8, !dbg !2642
  store i8* %14, i8** %7, align 8, !dbg !2640
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2643, metadata !DIExpression()), !dbg !2644
  %15 = load i32, i32* %5, align 4, !dbg !2645
  %16 = add nsw i32 %15, 4, !dbg !2647
  %17 = sext i32 %16 to i64, !dbg !2645
  %18 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %6, align 8, !dbg !2648
  %19 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %18, i32 0, i32 2, !dbg !2649
  %20 = load i64, i64* %19, align 8, !dbg !2649
  %21 = icmp ult i64 %17, %20, !dbg !2650
  br i1 %21, label %22, label %56, !dbg !2651

; <label>:22:                                     ; preds = %2
  %23 = load i8*, i8** %7, align 8, !dbg !2652
  %24 = load i32, i32* %5, align 4, !dbg !2653
  %25 = sext i32 %24 to i64, !dbg !2652
  %26 = getelementptr inbounds i8, i8* %23, i64 %25, !dbg !2652
  %27 = load i8, i8* %26, align 1, !dbg !2652
  %28 = zext i8 %27 to i32, !dbg !2652
  %29 = shl i32 %28, 24, !dbg !2654
  %30 = load i8*, i8** %7, align 8, !dbg !2655
  %31 = load i32, i32* %5, align 4, !dbg !2656
  %32 = add nsw i32 %31, 1, !dbg !2657
  %33 = sext i32 %32 to i64, !dbg !2655
  %34 = getelementptr inbounds i8, i8* %30, i64 %33, !dbg !2655
  %35 = load i8, i8* %34, align 1, !dbg !2655
  %36 = zext i8 %35 to i32, !dbg !2655
  %37 = shl i32 %36, 16, !dbg !2658
  %38 = or i32 %29, %37, !dbg !2659
  %39 = load i8*, i8** %7, align 8, !dbg !2660
  %40 = load i32, i32* %5, align 4, !dbg !2661
  %41 = add nsw i32 %40, 2, !dbg !2662
  %42 = sext i32 %41 to i64, !dbg !2660
  %43 = getelementptr inbounds i8, i8* %39, i64 %42, !dbg !2660
  %44 = load i8, i8* %43, align 1, !dbg !2660
  %45 = zext i8 %44 to i32, !dbg !2660
  %46 = shl i32 %45, 8, !dbg !2663
  %47 = or i32 %38, %46, !dbg !2664
  %48 = load i8*, i8** %7, align 8, !dbg !2665
  %49 = load i32, i32* %5, align 4, !dbg !2666
  %50 = add nsw i32 %49, 3, !dbg !2667
  %51 = sext i32 %50 to i64, !dbg !2665
  %52 = getelementptr inbounds i8, i8* %48, i64 %51, !dbg !2665
  %53 = load i8, i8* %52, align 1, !dbg !2665
  %54 = zext i8 %53 to i32, !dbg !2665
  %55 = or i32 %47, %54, !dbg !2668
  store i32 %55, i32* %8, align 4, !dbg !2669
  br label %95, !dbg !2670

; <label>:56:                                     ; preds = %2
  %57 = load i32, i32* %5, align 4, !dbg !2671
  %58 = sext i32 %57 to i64, !dbg !2671
  %59 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %6, align 8, !dbg !2673
  %60 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %59, i32 0, i32 2, !dbg !2674
  %61 = load i64, i64* %60, align 8, !dbg !2674
  %62 = icmp uge i64 %58, %61, !dbg !2675
  br i1 %62, label %63, label %64, !dbg !2676

; <label>:63:                                     ; preds = %56
  store i32 0, i32* %3, align 4, !dbg !2677
  br label %97, !dbg !2677

; <label>:64:                                     ; preds = %56
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2678, metadata !DIExpression()), !dbg !2680
  store i32 0, i32* %8, align 4, !dbg !2681
  store i32 0, i32* %9, align 4, !dbg !2682
  br label %65, !dbg !2684

; <label>:65:                                     ; preds = %90, %64
  %66 = load i32, i32* %9, align 4, !dbg !2685
  %67 = sext i32 %66 to i64, !dbg !2685
  %68 = load %struct.Jbig2WordStreamBuf*, %struct.Jbig2WordStreamBuf** %6, align 8, !dbg !2687
  %69 = getelementptr inbounds %struct.Jbig2WordStreamBuf, %struct.Jbig2WordStreamBuf* %68, i32 0, i32 2, !dbg !2688
  %70 = load i64, i64* %69, align 8, !dbg !2688
  %71 = load i32, i32* %5, align 4, !dbg !2689
  %72 = sext i32 %71 to i64, !dbg !2689
  %73 = sub i64 %70, %72, !dbg !2690
  %74 = icmp ult i64 %67, %73, !dbg !2691
  br i1 %74, label %75, label %93, !dbg !2692

; <label>:75:                                     ; preds = %65
  %76 = load i8*, i8** %7, align 8, !dbg !2693
  %77 = load i32, i32* %5, align 4, !dbg !2694
  %78 = load i32, i32* %9, align 4, !dbg !2695
  %79 = add nsw i32 %77, %78, !dbg !2696
  %80 = sext i32 %79 to i64, !dbg !2693
  %81 = getelementptr inbounds i8, i8* %76, i64 %80, !dbg !2693
  %82 = load i8, i8* %81, align 1, !dbg !2693
  %83 = zext i8 %82 to i32, !dbg !2693
  %84 = load i32, i32* %9, align 4, !dbg !2697
  %85 = sub nsw i32 3, %84, !dbg !2698
  %86 = shl i32 %85, 3, !dbg !2699
  %87 = shl i32 %83, %86, !dbg !2700
  %88 = load i32, i32* %8, align 4, !dbg !2701
  %89 = or i32 %88, %87, !dbg !2701
  store i32 %89, i32* %8, align 4, !dbg !2701
  br label %90, !dbg !2702

; <label>:90:                                     ; preds = %75
  %91 = load i32, i32* %9, align 4, !dbg !2703
  %92 = add nsw i32 %91, 1, !dbg !2703
  store i32 %92, i32* %9, align 4, !dbg !2703
  br label %65, !dbg !2704, !llvm.loop !2705

; <label>:93:                                     ; preds = %65
  br label %94

; <label>:94:                                     ; preds = %93
  br label %95

; <label>:95:                                     ; preds = %94, %22
  %96 = load i32, i32* %8, align 4, !dbg !2707
  store i32 %96, i32* %3, align 4, !dbg !2708
  br label %97, !dbg !2708

; <label>:97:                                     ; preds = %95, %63
  %98 = load i32, i32* %3, align 4, !dbg !2709
  ret i32 %98, !dbg !2709
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_word_stream_buf_free(%struct._Jbig2Ctx*, %struct._Jbig2WordStream*) #0 !dbg !2710 {
  %3 = alloca %struct._Jbig2Ctx*, align 8
  %4 = alloca %struct._Jbig2WordStream*, align 8
  store %struct._Jbig2Ctx* %0, %struct._Jbig2Ctx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx** %3, metadata !2713, metadata !DIExpression()), !dbg !2714
  store %struct._Jbig2WordStream* %1, %struct._Jbig2WordStream** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %4, metadata !2715, metadata !DIExpression()), !dbg !2716
  %5 = load %struct._Jbig2Ctx*, %struct._Jbig2Ctx** %3, align 8, !dbg !2717
  %6 = getelementptr inbounds %struct._Jbig2Ctx, %struct._Jbig2Ctx* %5, i32 0, i32 0, !dbg !2718
  %7 = load %struct._Jbig2Allocator.1*, %struct._Jbig2Allocator.1** %6, align 8, !dbg !2718
  %8 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !2719
  %9 = bitcast %struct._Jbig2WordStream* %8 to i8*, !dbg !2719
  call void @jbig2_free(%struct._Jbig2Allocator.1* %7, i8* %9), !dbg !2720
  ret void, !dbg !2721
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Segment* @jbig2_parse_segment_header(%struct._Jbig2Ctx.11*, i8*, i64, i64*) #0 !dbg !2722 {
  %5 = alloca %struct._Jbig2Segment*, align 8
  %6 = alloca %struct._Jbig2Ctx.11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %struct._Jbig2Segment*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %6, metadata !2792, metadata !DIExpression()), !dbg !2793
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2794, metadata !DIExpression()), !dbg !2795
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !2796, metadata !DIExpression()), !dbg !2797
  store i64* %3, i64** %9, align 8
  call void @llvm.dbg.declare(metadata i64** %9, metadata !2798, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %10, metadata !2800, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2802, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2804, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.declare(metadata i32** %13, metadata !2806, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.declare(metadata i32* %14, metadata !2808, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2810, metadata !DIExpression()), !dbg !2811
  call void @llvm.dbg.declare(metadata i32* %16, metadata !2812, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata i32* %17, metadata !2814, metadata !DIExpression()), !dbg !2815
  %19 = load i64, i64* %8, align 8, !dbg !2816
  %20 = icmp ult i64 %19, 11, !dbg !2818
  br i1 %20, label %21, label %22, !dbg !2819

; <label>:21:                                     ; preds = %4
  store %struct._Jbig2Segment* null, %struct._Jbig2Segment** %5, align 8, !dbg !2820
  br label %238, !dbg !2820

; <label>:22:                                     ; preds = %4
  %23 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !2821
  %24 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %23, i32 0, i32 0, !dbg !2822
  %25 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %24, align 8, !dbg !2822
  %26 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %25, i64 48), !dbg !2823
  %27 = bitcast i8* %26 to %struct._Jbig2Segment*, !dbg !2824
  store %struct._Jbig2Segment* %27, %struct._Jbig2Segment** %10, align 8, !dbg !2825
  %28 = load i8*, i8** %7, align 8, !dbg !2826
  %29 = call i32 @jbig2_get_int32(i8* %28), !dbg !2827
  %30 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2828
  %31 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %30, i32 0, i32 0, !dbg !2829
  store i32 %29, i32* %31, align 8, !dbg !2830
  %32 = load i8*, i8** %7, align 8, !dbg !2831
  %33 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !2831
  %34 = load i8, i8* %33, align 1, !dbg !2831
  %35 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2832
  %36 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %35, i32 0, i32 1, !dbg !2833
  store i8 %34, i8* %36, align 4, !dbg !2834
  %37 = load i8*, i8** %7, align 8, !dbg !2835
  %38 = getelementptr inbounds i8, i8* %37, i64 5, !dbg !2835
  %39 = load i8, i8* %38, align 1, !dbg !2835
  store i8 %39, i8* %11, align 1, !dbg !2836
  %40 = load i8, i8* %11, align 1, !dbg !2837
  %41 = zext i8 %40 to i32, !dbg !2837
  %42 = and i32 %41, 224, !dbg !2839
  %43 = icmp eq i32 %42, 224, !dbg !2840
  br i1 %43, label %44, label %54, !dbg !2841

; <label>:44:                                     ; preds = %22
  %45 = load i8*, i8** %7, align 8, !dbg !2842
  %46 = getelementptr inbounds i8, i8* %45, i64 5, !dbg !2844
  %47 = call i32 @jbig2_get_int32(i8* %46), !dbg !2845
  store i32 %47, i32* %12, align 4, !dbg !2846
  %48 = load i32, i32* %12, align 4, !dbg !2847
  %49 = and i32 %48, 536870911, !dbg !2848
  store i32 %49, i32* %14, align 4, !dbg !2849
  %50 = load i32, i32* %14, align 4, !dbg !2850
  %51 = add nsw i32 %50, 1, !dbg !2851
  %52 = sdiv i32 %51, 8, !dbg !2852
  %53 = add nsw i32 9, %52, !dbg !2853
  store i32 %53, i32* %17, align 4, !dbg !2854
  br label %58, !dbg !2855

; <label>:54:                                     ; preds = %22
  %55 = load i8, i8* %11, align 1, !dbg !2856
  %56 = zext i8 %55 to i32, !dbg !2856
  %57 = ashr i32 %56, 5, !dbg !2858
  store i32 %57, i32* %14, align 4, !dbg !2859
  store i32 6, i32* %17, align 4, !dbg !2860
  br label %58

; <label>:58:                                     ; preds = %54, %44
  %59 = load i32, i32* %14, align 4, !dbg !2861
  %60 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2862
  %61 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %60, i32 0, i32 4, !dbg !2863
  store i32 %59, i32* %61, align 8, !dbg !2864
  %62 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2865
  %63 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %62, i32 0, i32 0, !dbg !2866
  %64 = load i32, i32* %63, align 8, !dbg !2866
  %65 = icmp ule i32 %64, 256, !dbg !2867
  br i1 %65, label %66, label %67, !dbg !2865

; <label>:66:                                     ; preds = %58
  br label %74, !dbg !2865

; <label>:67:                                     ; preds = %58
  %68 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2868
  %69 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %68, i32 0, i32 0, !dbg !2869
  %70 = load i32, i32* %69, align 8, !dbg !2869
  %71 = icmp ule i32 %70, 65536, !dbg !2870
  %72 = zext i1 %71 to i64, !dbg !2868
  %73 = select i1 %71, i32 2, i32 4, !dbg !2868
  br label %74, !dbg !2865

; <label>:74:                                     ; preds = %67, %66
  %75 = phi i32 [ 1, %66 ], [ %73, %67 ], !dbg !2865
  store i32 %75, i32* %15, align 4, !dbg !2871
  %76 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2872
  %77 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %76, i32 0, i32 1, !dbg !2873
  %78 = load i8, i8* %77, align 4, !dbg !2873
  %79 = zext i8 %78 to i32, !dbg !2872
  %80 = and i32 %79, 64, !dbg !2874
  %81 = icmp ne i32 %80, 0, !dbg !2872
  %82 = zext i1 %81 to i64, !dbg !2872
  %83 = select i1 %81, i32 4, i32 1, !dbg !2872
  store i32 %83, i32* %16, align 4, !dbg !2875
  %84 = load i32, i32* %17, align 4, !dbg !2876
  %85 = load i32, i32* %14, align 4, !dbg !2878
  %86 = load i32, i32* %15, align 4, !dbg !2879
  %87 = mul nsw i32 %85, %86, !dbg !2880
  %88 = add nsw i32 %84, %87, !dbg !2881
  %89 = load i32, i32* %16, align 4, !dbg !2882
  %90 = add nsw i32 %88, %89, !dbg !2883
  %91 = add nsw i32 %90, 4, !dbg !2884
  %92 = sext i32 %91 to i64, !dbg !2876
  %93 = load i64, i64* %8, align 8, !dbg !2885
  %94 = icmp ugt i64 %92, %93, !dbg !2886
  br i1 %94, label %95, label %106, !dbg !2887

; <label>:95:                                     ; preds = %74
  %96 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !2888
  %97 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2890
  %98 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %97, i32 0, i32 0, !dbg !2891
  %99 = load i32, i32* %98, align 8, !dbg !2891
  %100 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %96, i32 0, i32 %99, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.63, i32 0, i32 0), i32 -1), !dbg !2892
  %101 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !2893
  %102 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %101, i32 0, i32 0, !dbg !2894
  %103 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %102, align 8, !dbg !2894
  %104 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2895
  %105 = bitcast %struct._Jbig2Segment* %104 to i8*, !dbg !2895
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %103, i8* %105), !dbg !2896
  store %struct._Jbig2Segment* null, %struct._Jbig2Segment** %5, align 8, !dbg !2897
  br label %238, !dbg !2897

; <label>:106:                                    ; preds = %74
  %107 = load i32, i32* %14, align 4, !dbg !2898
  %108 = icmp ne i32 %107, 0, !dbg !2898
  br i1 %108, label %109, label %181, !dbg !2900

; <label>:109:                                    ; preds = %106
  call void @llvm.dbg.declare(metadata i32* %18, metadata !2901, metadata !DIExpression()), !dbg !2903
  %110 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !2904
  %111 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %110, i32 0, i32 0, !dbg !2905
  %112 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %111, align 8, !dbg !2905
  %113 = load i32, i32* %14, align 4, !dbg !2906
  %114 = load i32, i32* %15, align 4, !dbg !2907
  %115 = mul nsw i32 %113, %114, !dbg !2908
  %116 = sext i32 %115 to i64, !dbg !2906
  %117 = mul i64 %116, 4, !dbg !2909
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !2910
  %118 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %112, i64 %117), !dbg !2910
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !2910
  %119 = bitcast i8* %118 to i32*, !dbg !2910
  store i32* %119, i32** %13, align 8, !dbg !2911
  store i32 0, i32* %18, align 4, !dbg !2912
  br label %120, !dbg !2914

; <label>:120:                                    ; preds = %174, %109
  %121 = load i32, i32* %18, align 4, !dbg !2915
  %122 = load i32, i32* %14, align 4, !dbg !2917
  %123 = icmp slt i32 %121, %122, !dbg !2918
  br i1 %123, label %124, label %177, !dbg !2919

; <label>:124:                                    ; preds = %120
  %125 = load i32, i32* %15, align 4, !dbg !2920
  %126 = icmp eq i32 %125, 1, !dbg !2922
  br i1 %126, label %127, label %134, !dbg !2923

; <label>:127:                                    ; preds = %124
  %128 = load i8*, i8** %7, align 8, !dbg !2924
  %129 = load i32, i32* %17, align 4, !dbg !2925
  %130 = sext i32 %129 to i64, !dbg !2924
  %131 = getelementptr inbounds i8, i8* %128, i64 %130, !dbg !2924
  %132 = load i8, i8* %131, align 1, !dbg !2924
  %133 = zext i8 %132 to i32, !dbg !2924
  br label %152, !dbg !2923

; <label>:134:                                    ; preds = %124
  %135 = load i32, i32* %15, align 4, !dbg !2926
  %136 = icmp eq i32 %135, 2, !dbg !2927
  br i1 %136, label %137, label %144, !dbg !2928

; <label>:137:                                    ; preds = %134
  %138 = load i8*, i8** %7, align 8, !dbg !2929
  %139 = load i32, i32* %17, align 4, !dbg !2930
  %140 = sext i32 %139 to i64, !dbg !2931
  %141 = getelementptr inbounds i8, i8* %138, i64 %140, !dbg !2931
  %142 = call signext i16 @jbig2_get_int16(i8* %141), !dbg !2932
  %143 = sext i16 %142 to i32, !dbg !2932
  br label %150, !dbg !2928

; <label>:144:                                    ; preds = %134
  %145 = load i8*, i8** %7, align 8, !dbg !2933
  %146 = load i32, i32* %17, align 4, !dbg !2934
  %147 = sext i32 %146 to i64, !dbg !2935
  %148 = getelementptr inbounds i8, i8* %145, i64 %147, !dbg !2935
  %149 = call i32 @jbig2_get_int32(i8* %148), !dbg !2936
  br label %150, !dbg !2928

; <label>:150:                                    ; preds = %144, %137
  %151 = phi i32 [ %143, %137 ], [ %149, %144 ], !dbg !2928
  br label %152, !dbg !2923

; <label>:152:                                    ; preds = %150, %127
  %153 = phi i32 [ %133, %127 ], [ %151, %150 ], !dbg !2923
  %154 = load i32*, i32** %13, align 8, !dbg !2937
  %155 = load i32, i32* %18, align 4, !dbg !2938
  %156 = sext i32 %155 to i64, !dbg !2937
  %157 = getelementptr inbounds i32, i32* %154, i64 %156, !dbg !2937
  store i32 %153, i32* %157, align 4, !dbg !2939
  %158 = load i32, i32* %15, align 4, !dbg !2940
  %159 = load i32, i32* %17, align 4, !dbg !2941
  %160 = add nsw i32 %159, %158, !dbg !2941
  store i32 %160, i32* %17, align 4, !dbg !2941
  %161 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !2942
  %162 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2943
  %163 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %162, i32 0, i32 0, !dbg !2944
  %164 = load i32, i32* %163, align 8, !dbg !2944
  %165 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2945
  %166 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %165, i32 0, i32 0, !dbg !2946
  %167 = load i32, i32* %166, align 8, !dbg !2946
  %168 = load i32*, i32** %13, align 8, !dbg !2947
  %169 = load i32, i32* %18, align 4, !dbg !2948
  %170 = sext i32 %169 to i64, !dbg !2947
  %171 = getelementptr inbounds i32, i32* %168, i64 %170, !dbg !2947
  %172 = load i32, i32* %171, align 4, !dbg !2947
  %173 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %161, i32 0, i32 %164, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.64, i32 0, i32 0), i32 %167, i32 %172), !dbg !2949
  br label %174, !dbg !2950

; <label>:174:                                    ; preds = %152
  %175 = load i32, i32* %18, align 4, !dbg !2951
  %176 = add nsw i32 %175, 1, !dbg !2951
  store i32 %176, i32* %18, align 4, !dbg !2951
  br label %120, !dbg !2952, !llvm.loop !2953

; <label>:177:                                    ; preds = %120
  %178 = load i32*, i32** %13, align 8, !dbg !2955
  %179 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2956
  %180 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %179, i32 0, i32 5, !dbg !2957
  store i32* %178, i32** %180, align 8, !dbg !2958
  br label %184, !dbg !2959

; <label>:181:                                    ; preds = %106
  %182 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2960
  %183 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %182, i32 0, i32 5, !dbg !2962
  store i32* null, i32** %183, align 8, !dbg !2963
  br label %184

; <label>:184:                                    ; preds = %181, %177
  %185 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2964
  %186 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %185, i32 0, i32 1, !dbg !2966
  %187 = load i8, i8* %186, align 4, !dbg !2966
  %188 = zext i8 %187 to i32, !dbg !2964
  %189 = and i32 %188, 64, !dbg !2967
  %190 = icmp ne i32 %189, 0, !dbg !2967
  br i1 %190, label %191, label %201, !dbg !2968

; <label>:191:                                    ; preds = %184
  %192 = load i8*, i8** %7, align 8, !dbg !2969
  %193 = load i32, i32* %17, align 4, !dbg !2971
  %194 = sext i32 %193 to i64, !dbg !2972
  %195 = getelementptr inbounds i8, i8* %192, i64 %194, !dbg !2972
  %196 = call i32 @jbig2_get_int32(i8* %195), !dbg !2973
  %197 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2974
  %198 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %197, i32 0, i32 2, !dbg !2975
  store i32 %196, i32* %198, align 8, !dbg !2976
  %199 = load i32, i32* %17, align 4, !dbg !2977
  %200 = add nsw i32 %199, 4, !dbg !2977
  store i32 %200, i32* %17, align 4, !dbg !2977
  br label %211, !dbg !2978

; <label>:201:                                    ; preds = %184
  %202 = load i8*, i8** %7, align 8, !dbg !2979
  %203 = load i32, i32* %17, align 4, !dbg !2981
  %204 = add nsw i32 %203, 1, !dbg !2981
  store i32 %204, i32* %17, align 4, !dbg !2981
  %205 = sext i32 %203 to i64, !dbg !2979
  %206 = getelementptr inbounds i8, i8* %202, i64 %205, !dbg !2979
  %207 = load i8, i8* %206, align 1, !dbg !2979
  %208 = zext i8 %207 to i32, !dbg !2979
  %209 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2982
  %210 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %209, i32 0, i32 2, !dbg !2983
  store i32 %208, i32* %210, align 8, !dbg !2984
  br label %211

; <label>:211:                                    ; preds = %201, %191
  %212 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !2985
  %213 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2986
  %214 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %213, i32 0, i32 0, !dbg !2987
  %215 = load i32, i32* %214, align 8, !dbg !2987
  %216 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2988
  %217 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %216, i32 0, i32 0, !dbg !2989
  %218 = load i32, i32* %217, align 8, !dbg !2989
  %219 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2990
  %220 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %219, i32 0, i32 2, !dbg !2991
  %221 = load i32, i32* %220, align 8, !dbg !2991
  %222 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %212, i32 0, i32 %215, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.65, i32 0, i32 0), i32 %218, i32 %221), !dbg !2992
  %223 = load i8*, i8** %7, align 8, !dbg !2993
  %224 = load i32, i32* %17, align 4, !dbg !2994
  %225 = sext i32 %224 to i64, !dbg !2995
  %226 = getelementptr inbounds i8, i8* %223, i64 %225, !dbg !2995
  %227 = call i32 @jbig2_get_int32(i8* %226), !dbg !2996
  %228 = sext i32 %227 to i64, !dbg !2996
  %229 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !2997
  %230 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %229, i32 0, i32 3, !dbg !2998
  store i64 %228, i64* %230, align 8, !dbg !2999
  %231 = load i32, i32* %17, align 4, !dbg !3000
  %232 = add nsw i32 %231, 4, !dbg !3001
  %233 = sext i32 %232 to i64, !dbg !3000
  %234 = load i64*, i64** %9, align 8, !dbg !3002
  store i64 %233, i64* %234, align 8, !dbg !3003
  %235 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !3004
  %236 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %235, i32 0, i32 6, !dbg !3005
  store i8* null, i8** %236, align 8, !dbg !3006
  %237 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !3007
  store %struct._Jbig2Segment* %237, %struct._Jbig2Segment** %5, align 8, !dbg !3008
  br label %238, !dbg !3008

; <label>:238:                                    ; preds = %211, %95, %21
  %239 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3009
  ret %struct._Jbig2Segment* %239, !dbg !3009
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_free_segment(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*) #0 !dbg !3010 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Segment*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !3013, metadata !DIExpression()), !dbg !3014
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %4, metadata !3015, metadata !DIExpression()), !dbg !3016
  %5 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3017
  %6 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %5, i32 0, i32 5, !dbg !3019
  %7 = load i32*, i32** %6, align 8, !dbg !3019
  %8 = icmp ne i32* %7, null, !dbg !3020
  br i1 %8, label %9, label %17, !dbg !3021

; <label>:9:                                      ; preds = %2
  %10 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !3022
  %11 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %10, i32 0, i32 0, !dbg !3024
  %12 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %11, align 8, !dbg !3024
  %13 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3025
  %14 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %13, i32 0, i32 5, !dbg !3026
  %15 = load i32*, i32** %14, align 8, !dbg !3026
  %16 = bitcast i32* %15 to i8*, !dbg !3025
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %12, i8* %16), !dbg !3027
  br label %17, !dbg !3028

; <label>:17:                                     ; preds = %9, %2
  %18 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3029
  %19 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %18, i32 0, i32 1, !dbg !3030
  %20 = load i8, i8* %19, align 4, !dbg !3030
  %21 = zext i8 %20 to i32, !dbg !3029
  %22 = and i32 %21, 63, !dbg !3031
  switch i32 %22, label %47 [
    i32 0, label %23
    i32 4, label %29
    i32 40, label %29
    i32 62, label %41
  ], !dbg !3032

; <label>:23:                                     ; preds = %17
  %24 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !3033
  %25 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3035
  %26 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %25, i32 0, i32 6, !dbg !3036
  %27 = load i8*, i8** %26, align 8, !dbg !3036
  %28 = bitcast i8* %27 to %struct.Jbig2SymbolDict*, !dbg !3035
  call void @jbig2_sd_release(%struct._Jbig2Ctx.11* %24, %struct.Jbig2SymbolDict* %28), !dbg !3037
  br label %48, !dbg !3038

; <label>:29:                                     ; preds = %17, %17
  %30 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3039
  %31 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %30, i32 0, i32 6, !dbg !3041
  %32 = load i8*, i8** %31, align 8, !dbg !3041
  %33 = icmp ne i8* %32, null, !dbg !3042
  br i1 %33, label %34, label %40, !dbg !3043

; <label>:34:                                     ; preds = %29
  %35 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !3044
  %36 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3045
  %37 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %36, i32 0, i32 6, !dbg !3046
  %38 = load i8*, i8** %37, align 8, !dbg !3046
  %39 = bitcast i8* %38 to %struct._Jbig2Image*, !dbg !3045
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %35, %struct._Jbig2Image* %39), !dbg !3047
  br label %40, !dbg !3047

; <label>:40:                                     ; preds = %34, %29
  br label %48, !dbg !3048

; <label>:41:                                     ; preds = %17
  %42 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !3049
  %43 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3050
  %44 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %43, i32 0, i32 6, !dbg !3051
  %45 = load i8*, i8** %44, align 8, !dbg !3051
  %46 = bitcast i8* %45 to %struct._Jbig2Metadata*, !dbg !3050
  call void @jbig2_metadata_free(%struct._Jbig2Ctx.11* %42, %struct._Jbig2Metadata* %46), !dbg !3052
  br label %48, !dbg !3053

; <label>:47:                                     ; preds = %17
  br label %48, !dbg !3054

; <label>:48:                                     ; preds = %47, %41, %40, %23
  %49 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !3055
  %50 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %49, i32 0, i32 0, !dbg !3056
  %51 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %50, align 8, !dbg !3056
  %52 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !3057
  %53 = bitcast %struct._Jbig2Segment* %52 to i8*, !dbg !3057
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %51, i8* %53), !dbg !3058
  ret void, !dbg !3059
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Segment* @jbig2_find_segment(%struct._Jbig2Ctx.11*, i32) #0 !dbg !3060 {
  %3 = alloca %struct._Jbig2Segment*, align 8
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2Ctx.11*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !3063, metadata !DIExpression()), !dbg !3064
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3065, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3067, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3069, metadata !DIExpression()), !dbg !3070
  %9 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3071
  %10 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %9, i32 0, i32 15, !dbg !3072
  %11 = load i32, i32* %10, align 4, !dbg !3072
  %12 = sub nsw i32 %11, 1, !dbg !3073
  store i32 %12, i32* %7, align 4, !dbg !3070
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %8, metadata !3074, metadata !DIExpression()), !dbg !3075
  %13 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3076
  %14 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %13, i32 0, i32 2, !dbg !3077
  %15 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %14, align 8, !dbg !3077
  store %struct._Jbig2Ctx.11* %15, %struct._Jbig2Ctx.11** %8, align 8, !dbg !3075
  %16 = load i32, i32* %7, align 4, !dbg !3078
  store i32 %16, i32* %6, align 4, !dbg !3080
  br label %17, !dbg !3081

; <label>:17:                                     ; preds = %41, %2
  %18 = load i32, i32* %6, align 4, !dbg !3082
  %19 = icmp sge i32 %18, 0, !dbg !3084
  br i1 %19, label %20, label %44, !dbg !3085

; <label>:20:                                     ; preds = %17
  %21 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3086
  %22 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %21, i32 0, i32 13, !dbg !3088
  %23 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %22, align 8, !dbg !3088
  %24 = load i32, i32* %6, align 4, !dbg !3089
  %25 = sext i32 %24 to i64, !dbg !3086
  %26 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %23, i64 %25, !dbg !3086
  %27 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %26, align 8, !dbg !3086
  %28 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %27, i32 0, i32 0, !dbg !3090
  %29 = load i32, i32* %28, align 8, !dbg !3090
  %30 = load i32, i32* %5, align 4, !dbg !3091
  %31 = icmp eq i32 %29, %30, !dbg !3092
  br i1 %31, label %32, label %40, !dbg !3093

; <label>:32:                                     ; preds = %20
  %33 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3094
  %34 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %33, i32 0, i32 13, !dbg !3095
  %35 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %34, align 8, !dbg !3095
  %36 = load i32, i32* %6, align 4, !dbg !3096
  %37 = sext i32 %36 to i64, !dbg !3094
  %38 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %35, i64 %37, !dbg !3094
  %39 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %38, align 8, !dbg !3094
  store %struct._Jbig2Segment* %39, %struct._Jbig2Segment** %3, align 8, !dbg !3097
  br label %81, !dbg !3097

; <label>:40:                                     ; preds = %20
  br label %41, !dbg !3091

; <label>:41:                                     ; preds = %40
  %42 = load i32, i32* %6, align 4, !dbg !3098
  %43 = add nsw i32 %42, -1, !dbg !3098
  store i32 %43, i32* %6, align 4, !dbg !3098
  br label %17, !dbg !3099, !llvm.loop !3100

; <label>:44:                                     ; preds = %17
  %45 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !3102
  %46 = icmp ne %struct._Jbig2Ctx.11* %45, null, !dbg !3102
  br i1 %46, label %47, label %80, !dbg !3104

; <label>:47:                                     ; preds = %44
  %48 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !3105
  %49 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %48, i32 0, i32 15, !dbg !3107
  %50 = load i32, i32* %49, align 4, !dbg !3107
  %51 = sub nsw i32 %50, 1, !dbg !3108
  store i32 %51, i32* %6, align 4, !dbg !3109
  br label %52, !dbg !3110

; <label>:52:                                     ; preds = %76, %47
  %53 = load i32, i32* %6, align 4, !dbg !3111
  %54 = icmp sge i32 %53, 0, !dbg !3113
  br i1 %54, label %55, label %79, !dbg !3114

; <label>:55:                                     ; preds = %52
  %56 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !3115
  %57 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %56, i32 0, i32 13, !dbg !3117
  %58 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %57, align 8, !dbg !3117
  %59 = load i32, i32* %6, align 4, !dbg !3118
  %60 = sext i32 %59 to i64, !dbg !3115
  %61 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %58, i64 %60, !dbg !3115
  %62 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %61, align 8, !dbg !3115
  %63 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %62, i32 0, i32 0, !dbg !3119
  %64 = load i32, i32* %63, align 8, !dbg !3119
  %65 = load i32, i32* %5, align 4, !dbg !3120
  %66 = icmp eq i32 %64, %65, !dbg !3121
  br i1 %66, label %67, label %75, !dbg !3122

; <label>:67:                                     ; preds = %55
  %68 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !3123
  %69 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %68, i32 0, i32 13, !dbg !3124
  %70 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %69, align 8, !dbg !3124
  %71 = load i32, i32* %6, align 4, !dbg !3125
  %72 = sext i32 %71 to i64, !dbg !3123
  %73 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %70, i64 %72, !dbg !3123
  %74 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %73, align 8, !dbg !3123
  store %struct._Jbig2Segment* %74, %struct._Jbig2Segment** %3, align 8, !dbg !3126
  br label %81, !dbg !3126

; <label>:75:                                     ; preds = %55
  br label %76, !dbg !3120

; <label>:76:                                     ; preds = %75
  %77 = load i32, i32* %6, align 4, !dbg !3127
  %78 = add nsw i32 %77, -1, !dbg !3127
  store i32 %78, i32* %6, align 4, !dbg !3127
  br label %52, !dbg !3128, !llvm.loop !3129

; <label>:79:                                     ; preds = %52
  br label %80, !dbg !3130

; <label>:80:                                     ; preds = %79, %44
  store %struct._Jbig2Segment* null, %struct._Jbig2Segment** %3, align 8, !dbg !3131
  br label %81, !dbg !3131

; <label>:81:                                     ; preds = %80, %67, %32
  %82 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !3132
  ret %struct._Jbig2Segment* %82, !dbg !3132
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_get_region_segment_info(%struct.Jbig2RegionSegmentInfo*, i8*) #0 !dbg !3133 {
  %3 = alloca %struct.Jbig2RegionSegmentInfo*, align 8
  %4 = alloca i8*, align 8
  store %struct.Jbig2RegionSegmentInfo* %0, %struct.Jbig2RegionSegmentInfo** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2RegionSegmentInfo** %3, metadata !3147, metadata !DIExpression()), !dbg !3148
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3149, metadata !DIExpression()), !dbg !3150
  %5 = load i8*, i8** %4, align 8, !dbg !3151
  %6 = call i32 @jbig2_get_int32(i8* %5), !dbg !3152
  %7 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3153
  %8 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %7, i32 0, i32 0, !dbg !3154
  store i32 %6, i32* %8, align 4, !dbg !3155
  %9 = load i8*, i8** %4, align 8, !dbg !3156
  %10 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !3157
  %11 = call i32 @jbig2_get_int32(i8* %10), !dbg !3158
  %12 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3159
  %13 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %12, i32 0, i32 1, !dbg !3160
  store i32 %11, i32* %13, align 4, !dbg !3161
  %14 = load i8*, i8** %4, align 8, !dbg !3162
  %15 = getelementptr inbounds i8, i8* %14, i64 8, !dbg !3163
  %16 = call i32 @jbig2_get_int32(i8* %15), !dbg !3164
  %17 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3165
  %18 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %17, i32 0, i32 2, !dbg !3166
  store i32 %16, i32* %18, align 4, !dbg !3167
  %19 = load i8*, i8** %4, align 8, !dbg !3168
  %20 = getelementptr inbounds i8, i8* %19, i64 12, !dbg !3169
  %21 = call i32 @jbig2_get_int32(i8* %20), !dbg !3170
  %22 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3171
  %23 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %22, i32 0, i32 3, !dbg !3172
  store i32 %21, i32* %23, align 4, !dbg !3173
  %24 = load i8*, i8** %4, align 8, !dbg !3174
  %25 = getelementptr inbounds i8, i8* %24, i64 16, !dbg !3174
  %26 = load i8, i8* %25, align 1, !dbg !3174
  %27 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3175
  %28 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %27, i32 0, i32 5, !dbg !3176
  store i8 %26, i8* %28, align 4, !dbg !3177
  %29 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3178
  %30 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %29, i32 0, i32 5, !dbg !3179
  %31 = load i8, i8* %30, align 4, !dbg !3179
  %32 = zext i8 %31 to i32, !dbg !3178
  %33 = and i32 %32, 7, !dbg !3180
  %34 = load %struct.Jbig2RegionSegmentInfo*, %struct.Jbig2RegionSegmentInfo** %3, align 8, !dbg !3181
  %35 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %34, i32 0, i32 4, !dbg !3182
  store i32 %33, i32* %35, align 4, !dbg !3183
  ret void, !dbg !3184
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_extension_segment(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !3185 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !3188, metadata !DIExpression()), !dbg !3189
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !3190, metadata !DIExpression()), !dbg !3191
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3192, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3194, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3196, metadata !DIExpression()), !dbg !3197
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3198, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3200, metadata !DIExpression()), !dbg !3201
  %12 = load i8*, i8** %7, align 8, !dbg !3202
  %13 = call i32 @jbig2_get_int32(i8* %12), !dbg !3203
  store i32 %13, i32* %8, align 4, !dbg !3204
  %14 = load i32, i32* %8, align 4, !dbg !3205
  %15 = and i32 %14, 536870912, !dbg !3206
  store i32 %15, i32* %9, align 4, !dbg !3207
  %16 = load i32, i32* %8, align 4, !dbg !3208
  %17 = and i32 %16, 1073741824, !dbg !3209
  store i32 %17, i32* %10, align 4, !dbg !3210
  %18 = load i32, i32* %8, align 4, !dbg !3211
  %19 = and i32 %18, -2147483648, !dbg !3212
  store i32 %19, i32* %11, align 4, !dbg !3213
  %20 = load i32, i32* %11, align 4, !dbg !3214
  %21 = icmp ne i32 %20, 0, !dbg !3214
  br i1 %21, label %22, label %31, !dbg !3216

; <label>:22:                                     ; preds = %3
  %23 = load i32, i32* %9, align 4, !dbg !3217
  %24 = icmp ne i32 %23, 0, !dbg !3217
  br i1 %24, label %31, label %25, !dbg !3218

; <label>:25:                                     ; preds = %22
  %26 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3219
  %27 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3221
  %28 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %27, i32 0, i32 0, !dbg !3222
  %29 = load i32, i32* %28, align 8, !dbg !3222
  %30 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %26, i32 2, i32 %29, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3.68, i32 0, i32 0)), !dbg !3223
  br label %31, !dbg !3224

; <label>:31:                                     ; preds = %25, %22, %3
  %32 = load i32, i32* %8, align 4, !dbg !3225
  switch i32 %32, label %43 [
    i32 536870912, label %33
    i32 536870914, label %38
  ], !dbg !3226

; <label>:33:                                     ; preds = %31
  %34 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3227
  %35 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3229
  %36 = load i8*, i8** %7, align 8, !dbg !3230
  %37 = call i32 @jbig2_parse_comment_ascii(%struct._Jbig2Ctx.11* %34, %struct._Jbig2Segment* %35, i8* %36), !dbg !3231
  store i32 %37, i32* %4, align 4, !dbg !3232
  br label %59, !dbg !3232

; <label>:38:                                     ; preds = %31
  %39 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3233
  %40 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3234
  %41 = load i8*, i8** %7, align 8, !dbg !3235
  %42 = call i32 @jbig2_parse_comment_unicode(%struct._Jbig2Ctx.11* %39, %struct._Jbig2Segment* %40, i8* %41), !dbg !3236
  store i32 %42, i32* %4, align 4, !dbg !3237
  br label %59, !dbg !3237

; <label>:43:                                     ; preds = %31
  %44 = load i32, i32* %11, align 4, !dbg !3238
  %45 = icmp ne i32 %44, 0, !dbg !3238
  br i1 %45, label %46, label %53, !dbg !3240

; <label>:46:                                     ; preds = %43
  %47 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3241
  %48 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3243
  %49 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %48, i32 0, i32 0, !dbg !3244
  %50 = load i32, i32* %49, align 8, !dbg !3244
  %51 = load i32, i32* %8, align 4, !dbg !3245
  %52 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %47, i32 3, i32 %50, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4.69, i32 0, i32 0), i32 %51), !dbg !3246
  store i32 %52, i32* %4, align 4, !dbg !3247
  br label %59, !dbg !3247

; <label>:53:                                     ; preds = %43
  %54 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3248
  %55 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3250
  %56 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %55, i32 0, i32 0, !dbg !3251
  %57 = load i32, i32* %56, align 8, !dbg !3251
  %58 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %54, i32 2, i32 %57, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.70, i32 0, i32 0)), !dbg !3252
  store i32 %58, i32* %4, align 4, !dbg !3253
  br label %59, !dbg !3253

; <label>:59:                                     ; preds = %53, %46, %38, %33
  %60 = load i32, i32* %4, align 4, !dbg !3254
  ret i32 %60, !dbg !3254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_segment(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !3255 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !3256, metadata !DIExpression()), !dbg !3257
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !3258, metadata !DIExpression()), !dbg !3259
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3260, metadata !DIExpression()), !dbg !3261
  %8 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3262
  %9 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3263
  %10 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %9, i32 0, i32 0, !dbg !3264
  %11 = load i32, i32* %10, align 8, !dbg !3264
  %12 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3265
  %13 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %12, i32 0, i32 0, !dbg !3266
  %14 = load i32, i32* %13, align 8, !dbg !3266
  %15 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3267
  %16 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %15, i32 0, i32 1, !dbg !3268
  %17 = load i8, i8* %16, align 4, !dbg !3268
  %18 = zext i8 %17 to i32, !dbg !3267
  %19 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3269
  %20 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %19, i32 0, i32 1, !dbg !3270
  %21 = load i8, i8* %20, align 4, !dbg !3270
  %22 = zext i8 %21 to i32, !dbg !3269
  %23 = and i32 %22, 63, !dbg !3271
  %24 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3272
  %25 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %24, i32 0, i32 3, !dbg !3273
  %26 = load i64, i64* %25, align 8, !dbg !3273
  %27 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %8, i32 1, i32 %11, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6.73, i32 0, i32 0), i32 %14, i32 %18, i32 %23, i64 %26), !dbg !3274
  %28 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3275
  %29 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %28, i32 0, i32 1, !dbg !3276
  %30 = load i8, i8* %29, align 4, !dbg !3276
  %31 = zext i8 %30 to i32, !dbg !3275
  %32 = and i32 %31, 63, !dbg !3277
  switch i32 %32, label %123 [
    i32 0, label %33
    i32 4, label %38
    i32 6, label %38
    i32 7, label %38
    i32 16, label %43
    i32 20, label %49
    i32 22, label %55
    i32 23, label %61
    i32 36, label %67
    i32 38, label %73
    i32 39, label %73
    i32 40, label %78
    i32 42, label %78
    i32 43, label %78
    i32 48, label %83
    i32 49, label %88
    i32 50, label %93
    i32 51, label %98
    i32 52, label %106
    i32 53, label %112
    i32 62, label %118
  ], !dbg !3278

; <label>:33:                                     ; preds = %3
  %34 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3279
  %35 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3281
  %36 = load i8*, i8** %7, align 8, !dbg !3282
  %37 = call i32 @jbig2_symbol_dictionary(%struct._Jbig2Ctx.11* %34, %struct._Jbig2Segment* %35, i8* %36), !dbg !3283
  store i32 %37, i32* %4, align 4, !dbg !3284
  br label %135, !dbg !3284

; <label>:38:                                     ; preds = %3, %3, %3
  %39 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3285
  %40 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3286
  %41 = load i8*, i8** %7, align 8, !dbg !3287
  %42 = call i32 @jbig2_parse_text_region(%struct._Jbig2Ctx.11* %39, %struct._Jbig2Segment* %40, i8* %41), !dbg !3288
  store i32 %42, i32* %4, align 4, !dbg !3289
  br label %135, !dbg !3289

; <label>:43:                                     ; preds = %3
  %44 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3290
  %45 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3291
  %46 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %45, i32 0, i32 0, !dbg !3292
  %47 = load i32, i32* %46, align 8, !dbg !3292
  %48 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %44, i32 2, i32 %47, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7.74, i32 0, i32 0)), !dbg !3293
  store i32 %48, i32* %4, align 4, !dbg !3294
  br label %135, !dbg !3294

; <label>:49:                                     ; preds = %3
  %50 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3295
  %51 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3296
  %52 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %51, i32 0, i32 0, !dbg !3297
  %53 = load i32, i32* %52, align 8, !dbg !3297
  %54 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %50, i32 2, i32 %53, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8.75, i32 0, i32 0)), !dbg !3298
  store i32 %54, i32* %4, align 4, !dbg !3299
  br label %135, !dbg !3299

; <label>:55:                                     ; preds = %3
  %56 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3300
  %57 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3301
  %58 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %57, i32 0, i32 0, !dbg !3302
  %59 = load i32, i32* %58, align 8, !dbg !3302
  %60 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %56, i32 2, i32 %59, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9.76, i32 0, i32 0)), !dbg !3303
  store i32 %60, i32* %4, align 4, !dbg !3304
  br label %135, !dbg !3304

; <label>:61:                                     ; preds = %3
  %62 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3305
  %63 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3306
  %64 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %63, i32 0, i32 0, !dbg !3307
  %65 = load i32, i32* %64, align 8, !dbg !3307
  %66 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %62, i32 2, i32 %65, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10.77, i32 0, i32 0)), !dbg !3308
  store i32 %66, i32* %4, align 4, !dbg !3309
  br label %135, !dbg !3309

; <label>:67:                                     ; preds = %3
  %68 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3310
  %69 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3311
  %70 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %69, i32 0, i32 0, !dbg !3312
  %71 = load i32, i32* %70, align 8, !dbg !3312
  %72 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %68, i32 2, i32 %71, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11.78, i32 0, i32 0)), !dbg !3313
  store i32 %72, i32* %4, align 4, !dbg !3314
  br label %135, !dbg !3314

; <label>:73:                                     ; preds = %3, %3
  %74 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3315
  %75 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3316
  %76 = load i8*, i8** %7, align 8, !dbg !3317
  %77 = call i32 @jbig2_immediate_generic_region(%struct._Jbig2Ctx.11* %74, %struct._Jbig2Segment* %75, i8* %76), !dbg !3318
  store i32 %77, i32* %4, align 4, !dbg !3319
  br label %135, !dbg !3319

; <label>:78:                                     ; preds = %3, %3, %3
  %79 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3320
  %80 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3321
  %81 = load i8*, i8** %7, align 8, !dbg !3322
  %82 = call i32 @jbig2_refinement_region(%struct._Jbig2Ctx.11* %79, %struct._Jbig2Segment* %80, i8* %81), !dbg !3323
  store i32 %82, i32* %4, align 4, !dbg !3324
  br label %135, !dbg !3324

; <label>:83:                                     ; preds = %3
  %84 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3325
  %85 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3326
  %86 = load i8*, i8** %7, align 8, !dbg !3327
  %87 = call i32 @jbig2_parse_page_info(%struct._Jbig2Ctx.11* %84, %struct._Jbig2Segment* %85, i8* %86), !dbg !3328
  store i32 %87, i32* %4, align 4, !dbg !3329
  br label %135, !dbg !3329

; <label>:88:                                     ; preds = %3
  %89 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3330
  %90 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3331
  %91 = load i8*, i8** %7, align 8, !dbg !3332
  %92 = call i32 @jbig2_parse_end_of_page(%struct._Jbig2Ctx.11* %89, %struct._Jbig2Segment* %90, i8* %91), !dbg !3333
  store i32 %92, i32* %4, align 4, !dbg !3334
  br label %135, !dbg !3334

; <label>:93:                                     ; preds = %3
  %94 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3335
  %95 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3336
  %96 = load i8*, i8** %7, align 8, !dbg !3337
  %97 = call i32 @jbig2_parse_end_of_stripe(%struct._Jbig2Ctx.11* %94, %struct._Jbig2Segment* %95, i8* %96), !dbg !3338
  store i32 %97, i32* %4, align 4, !dbg !3339
  br label %135, !dbg !3339

; <label>:98:                                     ; preds = %3
  %99 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3340
  %100 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %99, i32 0, i32 9, !dbg !3341
  store i32 5, i32* %100, align 8, !dbg !3342
  %101 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3343
  %102 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3344
  %103 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %102, i32 0, i32 0, !dbg !3345
  %104 = load i32, i32* %103, align 8, !dbg !3345
  %105 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %101, i32 1, i32 %104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.79, i32 0, i32 0)), !dbg !3346
  store i32 %105, i32* %4, align 4, !dbg !3347
  br label %135, !dbg !3347

; <label>:106:                                    ; preds = %3
  %107 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3348
  %108 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3349
  %109 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %108, i32 0, i32 0, !dbg !3350
  %110 = load i32, i32* %109, align 8, !dbg !3350
  %111 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %107, i32 2, i32 %110, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13.80, i32 0, i32 0)), !dbg !3351
  store i32 %111, i32* %4, align 4, !dbg !3352
  br label %135, !dbg !3352

; <label>:112:                                    ; preds = %3
  %113 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3353
  %114 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3354
  %115 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %114, i32 0, i32 0, !dbg !3355
  %116 = load i32, i32* %115, align 8, !dbg !3355
  %117 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %113, i32 2, i32 %116, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.81, i32 0, i32 0)), !dbg !3356
  store i32 %117, i32* %4, align 4, !dbg !3357
  br label %135, !dbg !3357

; <label>:118:                                    ; preds = %3
  %119 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3358
  %120 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3359
  %121 = load i8*, i8** %7, align 8, !dbg !3360
  %122 = call i32 @jbig2_parse_extension_segment(%struct._Jbig2Ctx.11* %119, %struct._Jbig2Segment* %120, i8* %121), !dbg !3361
  store i32 %122, i32* %4, align 4, !dbg !3362
  br label %135, !dbg !3362

; <label>:123:                                    ; preds = %3
  %124 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3363
  %125 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3364
  %126 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %125, i32 0, i32 0, !dbg !3365
  %127 = load i32, i32* %126, align 8, !dbg !3365
  %128 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3366
  %129 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %128, i32 0, i32 1, !dbg !3367
  %130 = load i8, i8* %129, align 4, !dbg !3367
  %131 = zext i8 %130 to i32, !dbg !3366
  %132 = and i32 %131, 63, !dbg !3368
  %133 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %124, i32 2, i32 %127, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.82, i32 0, i32 0), i32 %132), !dbg !3369
  br label %134, !dbg !3370

; <label>:134:                                    ; preds = %123
  store i32 0, i32* %4, align 4, !dbg !3371
  br label %135, !dbg !3371

; <label>:135:                                    ; preds = %134, %118, %112, %106, %98, %93, %88, %83, %78, %73, %67, %61, %55, %49, %43, %38, %33
  %136 = load i32, i32* %4, align 4, !dbg !3372
  ret i32 %136, !dbg !3372
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_page_info(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !3373 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._Jbig2Page*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !3453, metadata !DIExpression()), !dbg !3454
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !3455, metadata !DIExpression()), !dbg !3456
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3457, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.declare(metadata %struct._Jbig2Page** %8, metadata !3459, metadata !DIExpression()), !dbg !3460
  %12 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3461
  %13 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %12, i32 0, i32 18, !dbg !3462
  %14 = load %struct._Jbig2Page*, %struct._Jbig2Page** %13, align 8, !dbg !3462
  %15 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3463
  %16 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %15, i32 0, i32 16, !dbg !3464
  %17 = load i32, i32* %16, align 8, !dbg !3464
  %18 = sext i32 %17 to i64, !dbg !3461
  %19 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %14, i64 %18, !dbg !3461
  store %struct._Jbig2Page* %19, %struct._Jbig2Page** %8, align 8, !dbg !3465
  %20 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3466
  %21 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %20, i32 0, i32 1, !dbg !3468
  %22 = load i32, i32* %21, align 4, !dbg !3468
  %23 = icmp ne i32 %22, 0, !dbg !3469
  br i1 %23, label %24, label %42, !dbg !3470

; <label>:24:                                     ; preds = %3
  %25 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3471
  %26 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %25, i32 0, i32 0, !dbg !3472
  %27 = load i32, i32* %26, align 8, !dbg !3472
  %28 = icmp eq i32 %27, 1, !dbg !3473
  br i1 %28, label %34, label %29, !dbg !3474

; <label>:29:                                     ; preds = %24
  %30 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3475
  %31 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %30, i32 0, i32 0, !dbg !3476
  %32 = load i32, i32* %31, align 8, !dbg !3476
  %33 = icmp eq i32 %32, 0, !dbg !3477
  br i1 %33, label %34, label %42, !dbg !3478

; <label>:34:                                     ; preds = %29, %24
  %35 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3479
  %36 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %35, i32 0, i32 0, !dbg !3481
  store i32 2, i32* %36, align 8, !dbg !3482
  %37 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3483
  %38 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3484
  %39 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %38, i32 0, i32 0, !dbg !3485
  %40 = load i32, i32* %39, align 8, !dbg !3485
  %41 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %37, i32 2, i32 %40, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.85, i32 0, i32 0)), !dbg !3486
  br label %42, !dbg !3487

; <label>:42:                                     ; preds = %34, %29, %3
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3488, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3491, metadata !DIExpression()), !dbg !3492
  %43 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3493
  %44 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %43, i32 0, i32 16, !dbg !3494
  %45 = load i32, i32* %44, align 8, !dbg !3494
  store i32 %45, i32* %9, align 4, !dbg !3495
  br label %46, !dbg !3496

; <label>:46:                                     ; preds = %115, %42
  %47 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3497
  %48 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %47, i32 0, i32 18, !dbg !3498
  %49 = load %struct._Jbig2Page*, %struct._Jbig2Page** %48, align 8, !dbg !3498
  %50 = load i32, i32* %9, align 4, !dbg !3499
  %51 = sext i32 %50 to i64, !dbg !3497
  %52 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %49, i64 %51, !dbg !3497
  %53 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %52, i32 0, i32 0, !dbg !3500
  %54 = load i32, i32* %53, align 8, !dbg !3500
  %55 = icmp ne i32 %54, 0, !dbg !3501
  br i1 %55, label %56, label %116, !dbg !3496

; <label>:56:                                     ; preds = %46
  %57 = load i32, i32* %9, align 4, !dbg !3502
  %58 = add nsw i32 %57, 1, !dbg !3502
  store i32 %58, i32* %9, align 4, !dbg !3502
  %59 = load i32, i32* %9, align 4, !dbg !3504
  %60 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3506
  %61 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %60, i32 0, i32 17, !dbg !3507
  %62 = load i32, i32* %61, align 4, !dbg !3507
  %63 = icmp sge i32 %59, %62, !dbg !3508
  br i1 %63, label %64, label %115, !dbg !3509

; <label>:64:                                     ; preds = %56
  %65 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3510
  %66 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %65, i32 0, i32 0, !dbg !3512
  %67 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %66, align 8, !dbg !3512
  %68 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3513
  %69 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %68, i32 0, i32 18, !dbg !3514
  %70 = load %struct._Jbig2Page*, %struct._Jbig2Page** %69, align 8, !dbg !3514
  %71 = bitcast %struct._Jbig2Page* %70 to i8*, !dbg !3513
  %72 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3515
  %73 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %72, i32 0, i32 17, !dbg !3516
  %74 = load i32, i32* %73, align 4, !dbg !3517
  %75 = shl i32 %74, 2, !dbg !3517
  store i32 %75, i32* %73, align 4, !dbg !3517
  %76 = sext i32 %75 to i64, !dbg !3518
  %77 = mul i64 %76, 48, !dbg !3519
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !3520
  %78 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i8*, i64)* @jbig2_realloc to i8* (%struct._Jbig2Allocator*, i8*, i64)*)(%struct._Jbig2Allocator* %67, i8* %71, i64 %77), !dbg !3520
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !3520
  %79 = bitcast i8* %78 to %struct._Jbig2Page*, !dbg !3520
  %80 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3521
  %81 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %80, i32 0, i32 18, !dbg !3522
  store %struct._Jbig2Page* %79, %struct._Jbig2Page** %81, align 8, !dbg !3523
  %82 = load i32, i32* %9, align 4, !dbg !3524
  store i32 %82, i32* %10, align 4, !dbg !3526
  br label %83, !dbg !3527

; <label>:83:                                     ; preds = %111, %64
  %84 = load i32, i32* %10, align 4, !dbg !3528
  %85 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3530
  %86 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %85, i32 0, i32 17, !dbg !3531
  %87 = load i32, i32* %86, align 4, !dbg !3531
  %88 = icmp slt i32 %84, %87, !dbg !3532
  br i1 %88, label %89, label %114, !dbg !3533

; <label>:89:                                     ; preds = %83
  %90 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3534
  %91 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %90, i32 0, i32 18, !dbg !3536
  %92 = load %struct._Jbig2Page*, %struct._Jbig2Page** %91, align 8, !dbg !3536
  %93 = load i32, i32* %10, align 4, !dbg !3537
  %94 = sext i32 %93 to i64, !dbg !3534
  %95 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %92, i64 %94, !dbg !3534
  %96 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %95, i32 0, i32 0, !dbg !3538
  store i32 0, i32* %96, align 8, !dbg !3539
  %97 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3540
  %98 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %97, i32 0, i32 18, !dbg !3541
  %99 = load %struct._Jbig2Page*, %struct._Jbig2Page** %98, align 8, !dbg !3541
  %100 = load i32, i32* %10, align 4, !dbg !3542
  %101 = sext i32 %100 to i64, !dbg !3540
  %102 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %99, i64 %101, !dbg !3540
  %103 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %102, i32 0, i32 1, !dbg !3543
  store i32 0, i32* %103, align 4, !dbg !3544
  %104 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3545
  %105 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %104, i32 0, i32 18, !dbg !3546
  %106 = load %struct._Jbig2Page*, %struct._Jbig2Page** %105, align 8, !dbg !3546
  %107 = load i32, i32* %10, align 4, !dbg !3547
  %108 = sext i32 %107 to i64, !dbg !3545
  %109 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %106, i64 %108, !dbg !3545
  %110 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %109, i32 0, i32 10, !dbg !3548
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %110, align 8, !dbg !3549
  br label %111, !dbg !3550

; <label>:111:                                    ; preds = %89
  %112 = load i32, i32* %10, align 4, !dbg !3551
  %113 = add nsw i32 %112, 1, !dbg !3551
  store i32 %113, i32* %10, align 4, !dbg !3551
  br label %83, !dbg !3552, !llvm.loop !3553

; <label>:114:                                    ; preds = %83
  br label %115, !dbg !3555

; <label>:115:                                    ; preds = %114, %56
  br label %46, !dbg !3496, !llvm.loop !3556

; <label>:116:                                    ; preds = %46
  %117 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3558
  %118 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %117, i32 0, i32 18, !dbg !3559
  %119 = load %struct._Jbig2Page*, %struct._Jbig2Page** %118, align 8, !dbg !3559
  %120 = load i32, i32* %9, align 4, !dbg !3560
  %121 = sext i32 %120 to i64, !dbg !3558
  %122 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %119, i64 %121, !dbg !3558
  store %struct._Jbig2Page* %122, %struct._Jbig2Page** %8, align 8, !dbg !3561
  %123 = load i32, i32* %9, align 4, !dbg !3562
  %124 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3563
  %125 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %124, i32 0, i32 16, !dbg !3564
  store i32 %123, i32* %125, align 8, !dbg !3565
  %126 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3566
  %127 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %126, i32 0, i32 0, !dbg !3567
  store i32 1, i32* %127, align 8, !dbg !3568
  %128 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3569
  %129 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %128, i32 0, i32 2, !dbg !3570
  %130 = load i32, i32* %129, align 8, !dbg !3570
  %131 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3571
  %132 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %131, i32 0, i32 1, !dbg !3572
  store i32 %130, i32* %132, align 4, !dbg !3573
  %133 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3574
  %134 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %133, i32 0, i32 3, !dbg !3576
  %135 = load i64, i64* %134, align 8, !dbg !3576
  %136 = icmp ult i64 %135, 19, !dbg !3577
  br i1 %136, label %137, label %143, !dbg !3578

; <label>:137:                                    ; preds = %116
  %138 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3579
  %139 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3581
  %140 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %139, i32 0, i32 0, !dbg !3582
  %141 = load i32, i32* %140, align 8, !dbg !3582
  %142 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %138, i32 3, i32 %141, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.86, i32 0, i32 0)), !dbg !3583
  store i32 %142, i32* %4, align 4, !dbg !3584
  br label %304, !dbg !3584

; <label>:143:                                    ; preds = %116
  %144 = load i8*, i8** %7, align 8, !dbg !3585
  %145 = call i32 @jbig2_get_int32(i8* %144), !dbg !3586
  %146 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3587
  %147 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %146, i32 0, i32 3, !dbg !3588
  store i32 %145, i32* %147, align 4, !dbg !3589
  %148 = load i8*, i8** %7, align 8, !dbg !3590
  %149 = getelementptr inbounds i8, i8* %148, i64 4, !dbg !3591
  %150 = call i32 @jbig2_get_int32(i8* %149), !dbg !3592
  %151 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3593
  %152 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %151, i32 0, i32 2, !dbg !3594
  store i32 %150, i32* %152, align 8, !dbg !3595
  %153 = load i8*, i8** %7, align 8, !dbg !3596
  %154 = getelementptr inbounds i8, i8* %153, i64 8, !dbg !3597
  %155 = call i32 @jbig2_get_int32(i8* %154), !dbg !3598
  %156 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3599
  %157 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %156, i32 0, i32 4, !dbg !3600
  store i32 %155, i32* %157, align 8, !dbg !3601
  %158 = load i8*, i8** %7, align 8, !dbg !3602
  %159 = getelementptr inbounds i8, i8* %158, i64 12, !dbg !3603
  %160 = call i32 @jbig2_get_int32(i8* %159), !dbg !3604
  %161 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3605
  %162 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %161, i32 0, i32 5, !dbg !3606
  store i32 %160, i32* %162, align 4, !dbg !3607
  %163 = load i8*, i8** %7, align 8, !dbg !3608
  %164 = getelementptr inbounds i8, i8* %163, i64 16, !dbg !3608
  %165 = load i8, i8* %164, align 1, !dbg !3608
  %166 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3609
  %167 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %166, i32 0, i32 9, !dbg !3610
  store i8 %165, i8* %167, align 4, !dbg !3611
  call void @llvm.dbg.declare(metadata i16* %11, metadata !3612, metadata !DIExpression()), !dbg !3614
  %168 = load i8*, i8** %7, align 8, !dbg !3615
  %169 = getelementptr inbounds i8, i8* %168, i64 17, !dbg !3616
  %170 = call signext i16 @jbig2_get_int16(i8* %169), !dbg !3617
  store i16 %170, i16* %11, align 2, !dbg !3614
  %171 = load i16, i16* %11, align 2, !dbg !3618
  %172 = sext i16 %171 to i32, !dbg !3618
  %173 = and i32 %172, 32768, !dbg !3620
  %174 = icmp ne i32 %173, 0, !dbg !3620
  br i1 %174, label %175, label %184, !dbg !3621

; <label>:175:                                    ; preds = %143
  %176 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3622
  %177 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %176, i32 0, i32 7, !dbg !3624
  store i32 1, i32* %177, align 4, !dbg !3625
  %178 = load i16, i16* %11, align 2, !dbg !3626
  %179 = sext i16 %178 to i32, !dbg !3626
  %180 = and i32 %179, 32767, !dbg !3627
  %181 = trunc i32 %180 to i16, !dbg !3626
  %182 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3628
  %183 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %182, i32 0, i32 6, !dbg !3629
  store i16 %181, i16* %183, align 8, !dbg !3630
  br label %189, !dbg !3631

; <label>:184:                                    ; preds = %143
  %185 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3632
  %186 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %185, i32 0, i32 7, !dbg !3634
  store i32 0, i32* %186, align 4, !dbg !3635
  %187 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3636
  %188 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %187, i32 0, i32 6, !dbg !3637
  store i16 0, i16* %188, align 8, !dbg !3638
  br label %189

; <label>:189:                                    ; preds = %184, %175
  %190 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3639
  %191 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %190, i32 0, i32 2, !dbg !3641
  %192 = load i32, i32* %191, align 8, !dbg !3641
  %193 = icmp eq i32 %192, -1, !dbg !3642
  br i1 %193, label %194, label %207, !dbg !3643

; <label>:194:                                    ; preds = %189
  %195 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3644
  %196 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %195, i32 0, i32 7, !dbg !3645
  %197 = load i32, i32* %196, align 4, !dbg !3645
  %198 = icmp eq i32 %197, 0, !dbg !3646
  br i1 %198, label %199, label %207, !dbg !3647

; <label>:199:                                    ; preds = %194
  %200 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3648
  %201 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3650
  %202 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %201, i32 0, i32 0, !dbg !3651
  %203 = load i32, i32* %202, align 8, !dbg !3651
  %204 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %200, i32 2, i32 %203, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2.87, i32 0, i32 0)), !dbg !3652
  %205 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3653
  %206 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %205, i32 0, i32 7, !dbg !3654
  store i32 1, i32* %206, align 4, !dbg !3655
  br label %207, !dbg !3656

; <label>:207:                                    ; preds = %199, %194, %189
  %208 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3657
  %209 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %208, i32 0, i32 8, !dbg !3658
  store i32 0, i32* %209, align 8, !dbg !3659
  %210 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3660
  %211 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %210, i32 0, i32 3, !dbg !3662
  %212 = load i64, i64* %211, align 8, !dbg !3662
  %213 = icmp ugt i64 %212, 19, !dbg !3663
  br i1 %213, label %214, label %220, !dbg !3664

; <label>:214:                                    ; preds = %207
  %215 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3665
  %216 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3667
  %217 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %216, i32 0, i32 0, !dbg !3668
  %218 = load i32, i32* %217, align 8, !dbg !3668
  %219 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %215, i32 2, i32 %218, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.88, i32 0, i32 0)), !dbg !3669
  br label %220, !dbg !3670

; <label>:220:                                    ; preds = %214, %207
  %221 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3671
  %222 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3672
  %223 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3673
  call void @dump_page_info(%struct._Jbig2Ctx.11* %221, %struct._Jbig2Segment* %222, %struct._Jbig2Page* %223), !dbg !3674
  %224 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3675
  %225 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %224, i32 0, i32 2, !dbg !3677
  %226 = load i32, i32* %225, align 8, !dbg !3677
  %227 = icmp eq i32 %226, -1, !dbg !3678
  br i1 %227, label %228, label %240, !dbg !3679

; <label>:228:                                    ; preds = %220
  %229 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3680
  %230 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3682
  %231 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %230, i32 0, i32 3, !dbg !3683
  %232 = load i32, i32* %231, align 4, !dbg !3683
  %233 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3684
  %234 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %233, i32 0, i32 6, !dbg !3685
  %235 = load i16, i16* %234, align 8, !dbg !3685
  %236 = zext i16 %235 to i32, !dbg !3684
  %237 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %229, i32 %232, i32 %236), !dbg !3686
  %238 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3687
  %239 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %238, i32 0, i32 10, !dbg !3688
  store %struct._Jbig2Image* %237, %struct._Jbig2Image** %239, align 8, !dbg !3689
  br label %251, !dbg !3690

; <label>:240:                                    ; preds = %220
  %241 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3691
  %242 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3693
  %243 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %242, i32 0, i32 3, !dbg !3694
  %244 = load i32, i32* %243, align 4, !dbg !3694
  %245 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3695
  %246 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %245, i32 0, i32 2, !dbg !3696
  %247 = load i32, i32* %246, align 8, !dbg !3696
  %248 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %241, i32 %244, i32 %247), !dbg !3697
  %249 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3698
  %250 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %249, i32 0, i32 10, !dbg !3699
  store %struct._Jbig2Image* %248, %struct._Jbig2Image** %250, align 8, !dbg !3700
  br label %251

; <label>:251:                                    ; preds = %240, %228
  %252 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3701
  %253 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %252, i32 0, i32 10, !dbg !3703
  %254 = load %struct._Jbig2Image*, %struct._Jbig2Image** %253, align 8, !dbg !3703
  %255 = icmp eq %struct._Jbig2Image* %254, null, !dbg !3704
  br i1 %255, label %256, label %267, !dbg !3705

; <label>:256:                                    ; preds = %251
  %257 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3706
  %258 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %257, i32 0, i32 0, !dbg !3708
  %259 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %258, align 8, !dbg !3708
  %260 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3709
  %261 = bitcast %struct._Jbig2Page* %260 to i8*, !dbg !3709
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %259, i8* %261), !dbg !3710
  %262 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3711
  %263 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3712
  %264 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %263, i32 0, i32 0, !dbg !3713
  %265 = load i32, i32* %264, align 8, !dbg !3713
  %266 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %262, i32 3, i32 %265, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.89, i32 0, i32 0)), !dbg !3714
  store i32 %266, i32* %4, align 4, !dbg !3715
  br label %304, !dbg !3715

; <label>:267:                                    ; preds = %251
  %268 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3716
  %269 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3718
  %270 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %269, i32 0, i32 10, !dbg !3719
  %271 = load %struct._Jbig2Image*, %struct._Jbig2Image** %270, align 8, !dbg !3719
  %272 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3720
  %273 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %272, i32 0, i32 9, !dbg !3721
  %274 = load i8, i8* %273, align 4, !dbg !3721
  %275 = zext i8 %274 to i32, !dbg !3720
  %276 = and i32 %275, 4, !dbg !3722
  call void @jbig2_image_clear(%struct._Jbig2Ctx.11* %268, %struct._Jbig2Image* %271, i32 %276), !dbg !3723
  %277 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !3724
  %278 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !3725
  %279 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %278, i32 0, i32 0, !dbg !3726
  %280 = load i32, i32* %279, align 8, !dbg !3726
  %281 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3727
  %282 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %281, i32 0, i32 10, !dbg !3728
  %283 = load %struct._Jbig2Image*, %struct._Jbig2Image** %282, align 8, !dbg !3728
  %284 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %283, i32 0, i32 0, !dbg !3729
  %285 = load i32, i32* %284, align 8, !dbg !3729
  %286 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3730
  %287 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %286, i32 0, i32 10, !dbg !3731
  %288 = load %struct._Jbig2Image*, %struct._Jbig2Image** %287, align 8, !dbg !3731
  %289 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %288, i32 0, i32 1, !dbg !3732
  %290 = load i32, i32* %289, align 4, !dbg !3732
  %291 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3733
  %292 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %291, i32 0, i32 10, !dbg !3734
  %293 = load %struct._Jbig2Image*, %struct._Jbig2Image** %292, align 8, !dbg !3734
  %294 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %293, i32 0, i32 2, !dbg !3735
  %295 = load i32, i32* %294, align 8, !dbg !3735
  %296 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3736
  %297 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %296, i32 0, i32 10, !dbg !3737
  %298 = load %struct._Jbig2Image*, %struct._Jbig2Image** %297, align 8, !dbg !3737
  %299 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %298, i32 0, i32 1, !dbg !3738
  %300 = load i32, i32* %299, align 4, !dbg !3738
  %301 = mul nsw i32 %295, %300, !dbg !3739
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !3740
  %302 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %277, i32 0, i32 %280, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.90, i32 0, i32 0), i32 %285, i32 %290, i32 %301), !dbg !3740
  store volatile i8 0, i8* @specialMalloc, align 1
  br label %303

; <label>:303:                                    ; preds = %267
  store i32 0, i32* %4, align 4, !dbg !3741
  br label %304, !dbg !3741

; <label>:304:                                    ; preds = %303, %256, %137
  %305 = load i32, i32* %4, align 4, !dbg !3742
  ret i32 %305, !dbg !3742
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dump_page_info(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct._Jbig2Page*) #0 !dbg !3743 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Segment*, align 8
  %6 = alloca %struct._Jbig2Page*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !3746, metadata !DIExpression()), !dbg !3747
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %5, metadata !3748, metadata !DIExpression()), !dbg !3749
  store %struct._Jbig2Page* %2, %struct._Jbig2Page** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Page** %6, metadata !3750, metadata !DIExpression()), !dbg !3751
  %7 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3752
  %8 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %7, i32 0, i32 4, !dbg !3754
  %9 = load i32, i32* %8, align 8, !dbg !3754
  %10 = icmp eq i32 %9, 0, !dbg !3755
  br i1 %10, label %11, label %26, !dbg !3756

; <label>:11:                                     ; preds = %3
  %12 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3757
  %13 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3759
  %14 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %13, i32 0, i32 0, !dbg !3760
  %15 = load i32, i32* %14, align 8, !dbg !3760
  %16 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3761
  %17 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %16, i32 0, i32 1, !dbg !3762
  %18 = load i32, i32* %17, align 4, !dbg !3762
  %19 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3763
  %20 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %19, i32 0, i32 3, !dbg !3764
  %21 = load i32, i32* %20, align 4, !dbg !3764
  %22 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3765
  %23 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %22, i32 0, i32 2, !dbg !3766
  %24 = load i32, i32* %23, align 8, !dbg !3766
  %25 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %12, i32 1, i32 %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15.91, i32 0, i32 0), i32 %18, i32 %21, i32 %24), !dbg !3767
  br label %74, !dbg !3768

; <label>:26:                                     ; preds = %3
  %27 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3769
  %28 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %27, i32 0, i32 4, !dbg !3771
  %29 = load i32, i32* %28, align 8, !dbg !3771
  %30 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3772
  %31 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %30, i32 0, i32 5, !dbg !3773
  %32 = load i32, i32* %31, align 4, !dbg !3773
  %33 = icmp eq i32 %29, %32, !dbg !3774
  br i1 %33, label %34, label %52, !dbg !3775

; <label>:34:                                     ; preds = %26
  %35 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3776
  %36 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3778
  %37 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %36, i32 0, i32 0, !dbg !3779
  %38 = load i32, i32* %37, align 8, !dbg !3779
  %39 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3780
  %40 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %39, i32 0, i32 1, !dbg !3781
  %41 = load i32, i32* %40, align 4, !dbg !3781
  %42 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3782
  %43 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %42, i32 0, i32 3, !dbg !3783
  %44 = load i32, i32* %43, align 4, !dbg !3783
  %45 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3784
  %46 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %45, i32 0, i32 2, !dbg !3785
  %47 = load i32, i32* %46, align 8, !dbg !3785
  %48 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3786
  %49 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %48, i32 0, i32 4, !dbg !3787
  %50 = load i32, i32* %49, align 8, !dbg !3787
  %51 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %35, i32 1, i32 %38, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.92, i32 0, i32 0), i32 %41, i32 %44, i32 %47, i32 %50), !dbg !3788
  br label %73, !dbg !3789

; <label>:52:                                     ; preds = %26
  %53 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3790
  %54 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3792
  %55 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %54, i32 0, i32 0, !dbg !3793
  %56 = load i32, i32* %55, align 8, !dbg !3793
  %57 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3794
  %58 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %57, i32 0, i32 1, !dbg !3795
  %59 = load i32, i32* %58, align 4, !dbg !3795
  %60 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3796
  %61 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %60, i32 0, i32 3, !dbg !3797
  %62 = load i32, i32* %61, align 4, !dbg !3797
  %63 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3798
  %64 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %63, i32 0, i32 2, !dbg !3799
  %65 = load i32, i32* %64, align 8, !dbg !3799
  %66 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3800
  %67 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %66, i32 0, i32 4, !dbg !3801
  %68 = load i32, i32* %67, align 8, !dbg !3801
  %69 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3802
  %70 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %69, i32 0, i32 5, !dbg !3803
  %71 = load i32, i32* %70, align 4, !dbg !3803
  %72 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %53, i32 1, i32 %56, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17.93, i32 0, i32 0), i32 %59, i32 %62, i32 %65, i32 %68, i32 %71), !dbg !3804
  br label %73

; <label>:73:                                     ; preds = %52, %34
  br label %74

; <label>:74:                                     ; preds = %73, %11
  %75 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3805
  %76 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %75, i32 0, i32 7, !dbg !3807
  %77 = load i32, i32* %76, align 4, !dbg !3807
  %78 = icmp ne i32 %77, 0, !dbg !3805
  br i1 %78, label %79, label %89, !dbg !3808

; <label>:79:                                     ; preds = %74
  %80 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3809
  %81 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3811
  %82 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %81, i32 0, i32 0, !dbg !3812
  %83 = load i32, i32* %82, align 8, !dbg !3812
  %84 = load %struct._Jbig2Page*, %struct._Jbig2Page** %6, align 8, !dbg !3813
  %85 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %84, i32 0, i32 6, !dbg !3814
  %86 = load i16, i16* %85, align 8, !dbg !3814
  %87 = zext i16 %86 to i32, !dbg !3813
  %88 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %80, i32 1, i32 %83, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18.94, i32 0, i32 0), i32 %87), !dbg !3815
  br label %89, !dbg !3816

; <label>:89:                                     ; preds = %79, %74
  ret void, !dbg !3817
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_end_of_stripe(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !3818 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Segment*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._Jbig2Page, align 8
  %8 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !3819, metadata !DIExpression()), !dbg !3820
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %5, metadata !3821, metadata !DIExpression()), !dbg !3822
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3823, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.declare(metadata %struct._Jbig2Page* %7, metadata !3825, metadata !DIExpression()), !dbg !3826
  %9 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3827
  %10 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %9, i32 0, i32 18, !dbg !3828
  %11 = load %struct._Jbig2Page*, %struct._Jbig2Page** %10, align 8, !dbg !3828
  %12 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3829
  %13 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %12, i32 0, i32 16, !dbg !3830
  %14 = load i32, i32* %13, align 8, !dbg !3830
  %15 = sext i32 %14 to i64, !dbg !3827
  %16 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %11, i64 %15, !dbg !3827
  %17 = bitcast %struct._Jbig2Page* %7 to i8*, !dbg !3827
  %18 = bitcast %struct._Jbig2Page* %16 to i8*, !dbg !3827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 48, i1 false), !dbg !3827
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3831, metadata !DIExpression()), !dbg !3832
  %19 = load i8*, i8** %6, align 8, !dbg !3833
  %20 = call i32 @jbig2_get_int32(i8* %19), !dbg !3834
  store i32 %20, i32* %8, align 4, !dbg !3835
  %21 = load i32, i32* %8, align 4, !dbg !3836
  %22 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %7, i32 0, i32 8, !dbg !3838
  %23 = load i32, i32* %22, align 8, !dbg !3838
  %24 = icmp slt i32 %21, %23, !dbg !3839
  br i1 %24, label %25, label %34, !dbg !3840

; <label>:25:                                     ; preds = %3
  %26 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3841
  %27 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3843
  %28 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %27, i32 0, i32 0, !dbg !3844
  %29 = load i32, i32* %28, align 8, !dbg !3844
  %30 = load i32, i32* %8, align 4, !dbg !3845
  %31 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %7, i32 0, i32 8, !dbg !3846
  %32 = load i32, i32* %31, align 8, !dbg !3846
  %33 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %26, i32 2, i32 %29, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.6.97, i32 0, i32 0), i32 %30, i32 %32), !dbg !3847
  br label %41, !dbg !3848

; <label>:34:                                     ; preds = %3
  %35 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3849
  %36 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3851
  %37 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %36, i32 0, i32 0, !dbg !3852
  %38 = load i32, i32* %37, align 8, !dbg !3852
  %39 = load i32, i32* %8, align 4, !dbg !3853
  %40 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %35, i32 1, i32 %38, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7.98, i32 0, i32 0), i32 %39), !dbg !3854
  br label %41

; <label>:41:                                     ; preds = %34, %25
  %42 = load i32, i32* %8, align 4, !dbg !3855
  %43 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %7, i32 0, i32 8, !dbg !3856
  store i32 %42, i32* %43, align 8, !dbg !3857
  ret i32 0, !dbg !3858
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_complete_page(%struct._Jbig2Ctx.11*) #0 !dbg !3859 {
  %2 = alloca %struct._Jbig2Ctx.11*, align 8
  %3 = alloca %struct._Jbig2Segment*, align 8
  %4 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %2, metadata !3862, metadata !DIExpression()), !dbg !3863
  %5 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3864
  %6 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %5, i32 0, i32 15, !dbg !3866
  %7 = load i32, i32* %6, align 4, !dbg !3866
  %8 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3867
  %9 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %8, i32 0, i32 14, !dbg !3868
  %10 = load i32, i32* %9, align 8, !dbg !3868
  %11 = icmp ne i32 %7, %10, !dbg !3869
  br i1 %11, label %12, label %68, !dbg !3870

; <label>:12:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %3, metadata !3871, metadata !DIExpression()), !dbg !3873
  %13 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3874
  %14 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %13, i32 0, i32 13, !dbg !3875
  %15 = load %struct._Jbig2Segment**, %struct._Jbig2Segment*** %14, align 8, !dbg !3875
  %16 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3876
  %17 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %16, i32 0, i32 15, !dbg !3877
  %18 = load i32, i32* %17, align 4, !dbg !3877
  %19 = sext i32 %18 to i64, !dbg !3874
  %20 = getelementptr inbounds %struct._Jbig2Segment*, %struct._Jbig2Segment** %15, i64 %19, !dbg !3874
  %21 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %20, align 8, !dbg !3874
  store %struct._Jbig2Segment* %21, %struct._Jbig2Segment** %3, align 8, !dbg !3873
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3878, metadata !DIExpression()), !dbg !3879
  store i32 0, i32* %4, align 4, !dbg !3879
  %22 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !3880
  %23 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %22, i32 0, i32 3, !dbg !3882
  %24 = load i64, i64* %23, align 8, !dbg !3882
  %25 = and i64 %24, 4294967295, !dbg !3883
  %26 = icmp eq i64 %25, 4294967295, !dbg !3884
  br i1 %26, label %27, label %67, !dbg !3885

; <label>:27:                                     ; preds = %12
  %28 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3886
  %29 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !3888
  %30 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %29, i32 0, i32 0, !dbg !3889
  %31 = load i32, i32* %30, align 8, !dbg !3889
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !3890
  %32 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %28, i32 2, i32 %31, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.8.101, i32 0, i32 0)), !dbg !3890
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !3891
  %33 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3891
  %34 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %33, i32 0, i32 8, !dbg !3892
  %35 = load i32, i32* %34, align 4, !dbg !3892
  %36 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3893
  %37 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %36, i32 0, i32 7, !dbg !3894
  %38 = load i32, i32* %37, align 8, !dbg !3894
  %39 = sub i32 %35, %38, !dbg !3895
  %40 = zext i32 %39 to i64, !dbg !3891
  %41 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !3896
  %42 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %41, i32 0, i32 3, !dbg !3897
  store i64 %40, i64* %42, align 8, !dbg !3898
  %43 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3899
  %44 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !3900
  %45 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3901
  %46 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %45, i32 0, i32 5, !dbg !3902
  %47 = load i8*, i8** %46, align 8, !dbg !3902
  %48 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3903
  %49 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %48, i32 0, i32 7, !dbg !3904
  %50 = load i32, i32* %49, align 8, !dbg !3904
  %51 = zext i32 %50 to i64, !dbg !3905
  %52 = getelementptr inbounds i8, i8* %47, i64 %51, !dbg !3905
  %53 = call i32 @jbig2_parse_segment(%struct._Jbig2Ctx.11* %43, %struct._Jbig2Segment* %44, i8* %52), !dbg !3906
  store i32 %53, i32* %4, align 4, !dbg !3907
  %54 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !3908
  %55 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %54, i32 0, i32 3, !dbg !3909
  %56 = load i64, i64* %55, align 8, !dbg !3909
  %57 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3910
  %58 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %57, i32 0, i32 7, !dbg !3911
  %59 = load i32, i32* %58, align 8, !dbg !3912
  %60 = zext i32 %59 to i64, !dbg !3912
  %61 = add i64 %60, %56, !dbg !3912
  %62 = trunc i64 %61 to i32, !dbg !3912
  store i32 %62, i32* %58, align 8, !dbg !3912
  %63 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3913
  %64 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %63, i32 0, i32 15, !dbg !3914
  %65 = load i32, i32* %64, align 4, !dbg !3915
  %66 = add nsw i32 %65, 1, !dbg !3915
  store i32 %66, i32* %64, align 4, !dbg !3915
  br label %67, !dbg !3916

; <label>:67:                                     ; preds = %27, %12
  br label %68, !dbg !3917

; <label>:68:                                     ; preds = %67, %1
  %69 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3918
  %70 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %69, i32 0, i32 18, !dbg !3919
  %71 = load %struct._Jbig2Page*, %struct._Jbig2Page** %70, align 8, !dbg !3919
  %72 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !3920
  %73 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %72, i32 0, i32 16, !dbg !3921
  %74 = load i32, i32* %73, align 8, !dbg !3921
  %75 = sext i32 %74 to i64, !dbg !3918
  %76 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %71, i64 %75, !dbg !3918
  %77 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %76, i32 0, i32 0, !dbg !3922
  store i32 2, i32* %77, align 8, !dbg !3923
  ret i32 0, !dbg !3924
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_end_of_page(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !3925 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Segment*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !3926, metadata !DIExpression()), !dbg !3927
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %5, metadata !3928, metadata !DIExpression()), !dbg !3929
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3930, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3932, metadata !DIExpression()), !dbg !3933
  %8 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3934
  %9 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %8, i32 0, i32 18, !dbg !3935
  %10 = load %struct._Jbig2Page*, %struct._Jbig2Page** %9, align 8, !dbg !3935
  %11 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3936
  %12 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %11, i32 0, i32 16, !dbg !3937
  %13 = load i32, i32* %12, align 8, !dbg !3937
  %14 = sext i32 %13 to i64, !dbg !3934
  %15 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %10, i64 %14, !dbg !3934
  %16 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %15, i32 0, i32 1, !dbg !3938
  %17 = load i32, i32* %16, align 4, !dbg !3938
  store i32 %17, i32* %7, align 4, !dbg !3933
  %18 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3939
  %19 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %18, i32 0, i32 2, !dbg !3941
  %20 = load i32, i32* %19, align 8, !dbg !3941
  %21 = load i32, i32* %7, align 4, !dbg !3942
  %22 = icmp ne i32 %20, %21, !dbg !3943
  br i1 %22, label %23, label %33, !dbg !3944

; <label>:23:                                     ; preds = %3
  %24 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3945
  %25 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3947
  %26 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %25, i32 0, i32 0, !dbg !3948
  %27 = load i32, i32* %26, align 8, !dbg !3948
  %28 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3949
  %29 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %28, i32 0, i32 2, !dbg !3950
  %30 = load i32, i32* %29, align 8, !dbg !3950
  %31 = load i32, i32* %7, align 4, !dbg !3951
  %32 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %24, i32 2, i32 %27, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.9.104, i32 0, i32 0), i32 %30, i32 %31), !dbg !3952
  br label %33, !dbg !3953

; <label>:33:                                     ; preds = %23, %3
  %34 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3954
  %35 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !3955
  %36 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %35, i32 0, i32 0, !dbg !3956
  %37 = load i32, i32* %36, align 8, !dbg !3956
  %38 = load i32, i32* %7, align 4, !dbg !3957
  %39 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %34, i32 1, i32 %37, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.105, i32 0, i32 0), i32 %38), !dbg !3958
  %40 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !3959
  %41 = call i32 @jbig2_complete_page(%struct._Jbig2Ctx.11* %40), !dbg !3960
  ret i32 0, !dbg !3961
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_page_add_result(%struct._Jbig2Ctx.11*, %struct._Jbig2Page*, %struct._Jbig2Image*, i32, i32, i32) #0 !dbg !3962 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Page*, align 8
  %9 = alloca %struct._Jbig2Image*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !3965, metadata !DIExpression()), !dbg !3966
  store %struct._Jbig2Page* %1, %struct._Jbig2Page** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Page** %8, metadata !3967, metadata !DIExpression()), !dbg !3968
  store %struct._Jbig2Image* %2, %struct._Jbig2Image** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %9, metadata !3969, metadata !DIExpression()), !dbg !3970
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3971, metadata !DIExpression()), !dbg !3972
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3973, metadata !DIExpression()), !dbg !3974
  store i32 %5, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3975, metadata !DIExpression()), !dbg !3976
  %14 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3977
  %15 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %14, i32 0, i32 7, !dbg !3979
  %16 = load i32, i32* %15, align 4, !dbg !3979
  %17 = icmp ne i32 %16, 0, !dbg !3977
  br i1 %17, label %18, label %51, !dbg !3980

; <label>:18:                                     ; preds = %6
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3981, metadata !DIExpression()), !dbg !3983
  %19 = load i32, i32* %11, align 4, !dbg !3984
  %20 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !3985
  %21 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %20, i32 0, i32 1, !dbg !3986
  %22 = load i32, i32* %21, align 4, !dbg !3986
  %23 = add nsw i32 %19, %22, !dbg !3987
  %24 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3988
  %25 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %24, i32 0, i32 8, !dbg !3989
  %26 = load i32, i32* %25, align 8, !dbg !3989
  %27 = add nsw i32 %23, %26, !dbg !3990
  store i32 %27, i32* %13, align 4, !dbg !3983
  %28 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !3991
  %29 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %28, i32 0, i32 10, !dbg !3993
  %30 = load %struct._Jbig2Image*, %struct._Jbig2Image** %29, align 8, !dbg !3993
  %31 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %30, i32 0, i32 1, !dbg !3994
  %32 = load i32, i32* %31, align 4, !dbg !3994
  %33 = load i32, i32* %13, align 4, !dbg !3995
  %34 = icmp slt i32 %32, %33, !dbg !3996
  br i1 %34, label %35, label %50, !dbg !3997

; <label>:35:                                     ; preds = %18
  %36 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %7, align 8, !dbg !3998
  %37 = load i32, i32* %13, align 4, !dbg !4000
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4001
  %38 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %36, i32 0, i32 -1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.11.106, i32 0, i32 0), i32 %37), !dbg !4001
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4002
  %39 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %7, align 8, !dbg !4002
  %40 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !4003
  %41 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %40, i32 0, i32 10, !dbg !4004
  %42 = load %struct._Jbig2Image*, %struct._Jbig2Image** %41, align 8, !dbg !4004
  %43 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !4005
  %44 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %43, i32 0, i32 10, !dbg !4006
  %45 = load %struct._Jbig2Image*, %struct._Jbig2Image** %44, align 8, !dbg !4006
  %46 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %45, i32 0, i32 0, !dbg !4007
  %47 = load i32, i32* %46, align 8, !dbg !4007
  %48 = load i32, i32* %13, align 4, !dbg !4008
  %49 = call %struct._Jbig2Image* @jbig2_image_resize(%struct._Jbig2Ctx.11* %39, %struct._Jbig2Image* %42, i32 %47, i32 %48), !dbg !4009
  br label %50, !dbg !4010

; <label>:50:                                     ; preds = %35, %18
  br label %51, !dbg !4011

; <label>:51:                                     ; preds = %50, %6
  %52 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %7, align 8, !dbg !4012
  %53 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !4013
  %54 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %53, i32 0, i32 10, !dbg !4014
  %55 = load %struct._Jbig2Image*, %struct._Jbig2Image** %54, align 8, !dbg !4014
  %56 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !4015
  %57 = load i32, i32* %10, align 4, !dbg !4016
  %58 = load i32, i32* %11, align 4, !dbg !4017
  %59 = load %struct._Jbig2Page*, %struct._Jbig2Page** %8, align 8, !dbg !4018
  %60 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %59, i32 0, i32 8, !dbg !4019
  %61 = load i32, i32* %60, align 8, !dbg !4019
  %62 = add nsw i32 %58, %61, !dbg !4020
  %63 = call i32 @jbig2_image_compose(%struct._Jbig2Ctx.11* %52, %struct._Jbig2Image* %55, %struct._Jbig2Image* %56, i32 %57, i32 %62, i32 0), !dbg !4021
  ret i32 0, !dbg !4022
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_page_out(%struct._Jbig2Ctx.11*) #0 !dbg !4023 {
  %2 = alloca %struct._Jbig2Image*, align 8
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !4026, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4028, metadata !DIExpression()), !dbg !4029
  store i32 0, i32* %4, align 4, !dbg !4030
  br label %5, !dbg !4032

; <label>:5:                                      ; preds = %48, %1
  %6 = load i32, i32* %4, align 4, !dbg !4033
  %7 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4035
  %8 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %7, i32 0, i32 17, !dbg !4036
  %9 = load i32, i32* %8, align 4, !dbg !4036
  %10 = icmp slt i32 %6, %9, !dbg !4037
  br i1 %10, label %11, label %51, !dbg !4038

; <label>:11:                                     ; preds = %5
  %12 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4039
  %13 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %12, i32 0, i32 18, !dbg !4042
  %14 = load %struct._Jbig2Page*, %struct._Jbig2Page** %13, align 8, !dbg !4042
  %15 = load i32, i32* %4, align 4, !dbg !4043
  %16 = sext i32 %15 to i64, !dbg !4039
  %17 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %14, i64 %16, !dbg !4039
  %18 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %17, i32 0, i32 0, !dbg !4044
  %19 = load i32, i32* %18, align 8, !dbg !4044
  %20 = icmp eq i32 %19, 2, !dbg !4045
  br i1 %20, label %21, label %47, !dbg !4046

; <label>:21:                                     ; preds = %11
  %22 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4047
  %23 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %22, i32 0, i32 18, !dbg !4049
  %24 = load %struct._Jbig2Page*, %struct._Jbig2Page** %23, align 8, !dbg !4049
  %25 = load i32, i32* %4, align 4, !dbg !4050
  %26 = sext i32 %25 to i64, !dbg !4047
  %27 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %24, i64 %26, !dbg !4047
  %28 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %27, i32 0, i32 0, !dbg !4051
  store i32 3, i32* %28, align 8, !dbg !4052
  %29 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4053
  %30 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4054
  %31 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %30, i32 0, i32 18, !dbg !4055
  %32 = load %struct._Jbig2Page*, %struct._Jbig2Page** %31, align 8, !dbg !4055
  %33 = load i32, i32* %4, align 4, !dbg !4056
  %34 = sext i32 %33 to i64, !dbg !4054
  %35 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %32, i64 %34, !dbg !4054
  %36 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %35, i32 0, i32 1, !dbg !4057
  %37 = load i32, i32* %36, align 4, !dbg !4057
  %38 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %29, i32 0, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.109, i32 0, i32 0), i32 %37), !dbg !4058
  %39 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4059
  %40 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %39, i32 0, i32 18, !dbg !4060
  %41 = load %struct._Jbig2Page*, %struct._Jbig2Page** %40, align 8, !dbg !4060
  %42 = load i32, i32* %4, align 4, !dbg !4061
  %43 = sext i32 %42 to i64, !dbg !4059
  %44 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %41, i64 %43, !dbg !4059
  %45 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %44, i32 0, i32 10, !dbg !4062
  %46 = load %struct._Jbig2Image*, %struct._Jbig2Image** %45, align 8, !dbg !4062
  store %struct._Jbig2Image* %46, %struct._Jbig2Image** %2, align 8, !dbg !4063
  br label %52, !dbg !4063

; <label>:47:                                     ; preds = %11
  br label %48, !dbg !4064

; <label>:48:                                     ; preds = %47
  %49 = load i32, i32* %4, align 4, !dbg !4065
  %50 = add nsw i32 %49, 1, !dbg !4065
  store i32 %50, i32* %4, align 4, !dbg !4065
  br label %5, !dbg !4066, !llvm.loop !4067

; <label>:51:                                     ; preds = %5
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %2, align 8, !dbg !4069
  br label %52, !dbg !4069

; <label>:52:                                     ; preds = %51, %21
  %53 = load %struct._Jbig2Image*, %struct._Jbig2Image** %2, align 8, !dbg !4070
  ret %struct._Jbig2Image* %53, !dbg !4070
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_release_page(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*) #0 !dbg !4071 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Image*, align 8
  %6 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !4074, metadata !DIExpression()), !dbg !4075
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %5, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4078, metadata !DIExpression()), !dbg !4079
  store i32 0, i32* %6, align 4, !dbg !4080
  br label %7, !dbg !4082

; <label>:7:                                      ; preds = %43, %2
  %8 = load i32, i32* %6, align 4, !dbg !4083
  %9 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4085
  %10 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %9, i32 0, i32 17, !dbg !4086
  %11 = load i32, i32* %10, align 4, !dbg !4086
  %12 = icmp slt i32 %8, %11, !dbg !4087
  br i1 %12, label %13, label %46, !dbg !4088

; <label>:13:                                     ; preds = %7
  %14 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4089
  %15 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %14, i32 0, i32 18, !dbg !4092
  %16 = load %struct._Jbig2Page*, %struct._Jbig2Page** %15, align 8, !dbg !4092
  %17 = load i32, i32* %6, align 4, !dbg !4093
  %18 = sext i32 %17 to i64, !dbg !4089
  %19 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %16, i64 %18, !dbg !4089
  %20 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %19, i32 0, i32 10, !dbg !4094
  %21 = load %struct._Jbig2Image*, %struct._Jbig2Image** %20, align 8, !dbg !4094
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !4095
  %23 = icmp eq %struct._Jbig2Image* %21, %22, !dbg !4096
  br i1 %23, label %24, label %42, !dbg !4097

; <label>:24:                                     ; preds = %13
  %25 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4098
  %26 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %25, i32 0, i32 18, !dbg !4100
  %27 = load %struct._Jbig2Page*, %struct._Jbig2Page** %26, align 8, !dbg !4100
  %28 = load i32, i32* %6, align 4, !dbg !4101
  %29 = sext i32 %28 to i64, !dbg !4098
  %30 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %27, i64 %29, !dbg !4098
  %31 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %30, i32 0, i32 0, !dbg !4102
  store i32 4, i32* %31, align 8, !dbg !4103
  %32 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4104
  %33 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4105
  %34 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %33, i32 0, i32 18, !dbg !4106
  %35 = load %struct._Jbig2Page*, %struct._Jbig2Page** %34, align 8, !dbg !4106
  %36 = load i32, i32* %6, align 4, !dbg !4107
  %37 = sext i32 %36 to i64, !dbg !4105
  %38 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %35, i64 %37, !dbg !4105
  %39 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %38, i32 0, i32 1, !dbg !4108
  %40 = load i32, i32* %39, align 4, !dbg !4108
  %41 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %32, i32 0, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13.112, i32 0, i32 0), i32 %40), !dbg !4109
  store i32 0, i32* %3, align 4, !dbg !4110
  br label %49, !dbg !4110

; <label>:42:                                     ; preds = %13
  br label %43, !dbg !4111

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* %6, align 4, !dbg !4112
  %45 = add nsw i32 %44, 1, !dbg !4112
  store i32 %45, i32* %6, align 4, !dbg !4112
  br label %7, !dbg !4113, !llvm.loop !4114

; <label>:46:                                     ; preds = %7
  %47 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4116
  %48 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %47, i32 2, i32 -1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14.113, i32 0, i32 0)), !dbg !4117
  store i32 1, i32* %3, align 4, !dbg !4118
  br label %49, !dbg !4118

; <label>:49:                                     ; preds = %46, %24
  %50 = load i32, i32* %3, align 4, !dbg !4119
  ret i32 %50, !dbg !4119
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Jbig2SymbolDict* @jbig2_sd_new(%struct._Jbig2Ctx.11*, i32) #0 !dbg !4120 {
  %3 = alloca %struct.Jbig2SymbolDict*, align 8
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.Jbig2SymbolDict*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !4191, metadata !DIExpression()), !dbg !4192
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4193, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict** %6, metadata !4195, metadata !DIExpression()), !dbg !4196
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4196
  %7 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4197
  %8 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %7, i32 0, i32 0, !dbg !4198
  %9 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %8, align 8, !dbg !4198
  %10 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %9, i64 16), !dbg !4199
  %11 = bitcast i8* %10 to %struct.Jbig2SymbolDict*, !dbg !4200
  store %struct.Jbig2SymbolDict* %11, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4201
  %12 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4202
  %13 = icmp ne %struct.Jbig2SymbolDict* %12, null, !dbg !4204
  br i1 %13, label %14, label %28, !dbg !4205

; <label>:14:                                     ; preds = %2
  %15 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4206
  %16 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %15, i32 0, i32 0, !dbg !4208
  %17 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %16, align 8, !dbg !4208
  %18 = load i32, i32* %5, align 4, !dbg !4209
  %19 = sext i32 %18 to i64, !dbg !4209
  %20 = mul i64 %19, 8, !dbg !4210
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4211
  %21 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %17, i64 %20), !dbg !4211
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4212
  %22 = bitcast i8* %21 to %struct._Jbig2Image**, !dbg !4212
  %23 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4213
  %24 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %23, i32 0, i32 1, !dbg !4214
  store %struct._Jbig2Image** %22, %struct._Jbig2Image*** %24, align 8, !dbg !4215
  %25 = load i32, i32* %5, align 4, !dbg !4216
  %26 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4217
  %27 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %26, i32 0, i32 0, !dbg !4218
  store i32 %25, i32* %27, align 8, !dbg !4219
  br label %29, !dbg !4220

; <label>:28:                                     ; preds = %2
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %3, align 8, !dbg !4221
  br label %50, !dbg !4221

; <label>:29:                                     ; preds = %14
  %30 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4223
  %31 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %30, i32 0, i32 1, !dbg !4225
  %32 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %31, align 8, !dbg !4225
  %33 = icmp ne %struct._Jbig2Image** %32, null, !dbg !4226
  br i1 %33, label %34, label %42, !dbg !4227

; <label>:34:                                     ; preds = %29
  %35 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4228
  %36 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %35, i32 0, i32 1, !dbg !4230
  %37 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %36, align 8, !dbg !4230
  %38 = bitcast %struct._Jbig2Image** %37 to i8*, !dbg !4231
  %39 = load i32, i32* %5, align 4, !dbg !4232
  %40 = sext i32 %39 to i64, !dbg !4232
  %41 = mul i64 %40, 8, !dbg !4233
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 %41, i1 false), !dbg !4231
  br label %48, !dbg !4234

; <label>:42:                                     ; preds = %29
  %43 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4235
  %44 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %43, i32 0, i32 0, !dbg !4237
  %45 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %44, align 8, !dbg !4237
  %46 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4238
  %47 = bitcast %struct.Jbig2SymbolDict* %46 to i8*, !dbg !4238
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %45, i8* %47), !dbg !4239
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %3, align 8, !dbg !4240
  br label %50, !dbg !4240

; <label>:48:                                     ; preds = %34
  %49 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %6, align 8, !dbg !4241
  store %struct.Jbig2SymbolDict* %49, %struct.Jbig2SymbolDict** %3, align 8, !dbg !4242
  br label %50, !dbg !4242

; <label>:50:                                     ; preds = %48, %42, %28
  %51 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %3, align 8, !dbg !4243
  ret %struct.Jbig2SymbolDict* %51, !dbg !4243
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_sd_release(%struct._Jbig2Ctx.11*, %struct.Jbig2SymbolDict*) #0 !dbg !4244 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct.Jbig2SymbolDict*, align 8
  %5 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !4247, metadata !DIExpression()), !dbg !4248
  store %struct.Jbig2SymbolDict* %1, %struct.Jbig2SymbolDict** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict** %4, metadata !4249, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4251, metadata !DIExpression()), !dbg !4252
  %6 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4253
  %7 = icmp eq %struct.Jbig2SymbolDict* %6, null, !dbg !4255
  br i1 %7, label %8, label %9, !dbg !4256

; <label>:8:                                      ; preds = %2
  br label %51, !dbg !4257

; <label>:9:                                      ; preds = %2
  store i32 0, i32* %5, align 4, !dbg !4258
  br label %10, !dbg !4260

; <label>:10:                                     ; preds = %35, %9
  %11 = load i32, i32* %5, align 4, !dbg !4261
  %12 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4263
  %13 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %12, i32 0, i32 0, !dbg !4264
  %14 = load i32, i32* %13, align 8, !dbg !4264
  %15 = icmp slt i32 %11, %14, !dbg !4265
  br i1 %15, label %16, label %38, !dbg !4266

; <label>:16:                                     ; preds = %10
  %17 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4267
  %18 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %17, i32 0, i32 1, !dbg !4269
  %19 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %18, align 8, !dbg !4269
  %20 = load i32, i32* %5, align 4, !dbg !4270
  %21 = sext i32 %20 to i64, !dbg !4267
  %22 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %19, i64 %21, !dbg !4267
  %23 = load %struct._Jbig2Image*, %struct._Jbig2Image** %22, align 8, !dbg !4267
  %24 = icmp ne %struct._Jbig2Image* %23, null, !dbg !4267
  br i1 %24, label %25, label %34, !dbg !4271

; <label>:25:                                     ; preds = %16
  %26 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4272
  %27 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4273
  %28 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %27, i32 0, i32 1, !dbg !4274
  %29 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %28, align 8, !dbg !4274
  %30 = load i32, i32* %5, align 4, !dbg !4275
  %31 = sext i32 %30 to i64, !dbg !4273
  %32 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %29, i64 %31, !dbg !4273
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %32, align 8, !dbg !4273
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %26, %struct._Jbig2Image* %33), !dbg !4276
  br label %34, !dbg !4276

; <label>:34:                                     ; preds = %25, %16
  br label %35, !dbg !4277

; <label>:35:                                     ; preds = %34
  %36 = load i32, i32* %5, align 4, !dbg !4278
  %37 = add nsw i32 %36, 1, !dbg !4278
  store i32 %37, i32* %5, align 4, !dbg !4278
  br label %10, !dbg !4279, !llvm.loop !4280

; <label>:38:                                     ; preds = %10
  %39 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4282
  %40 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %39, i32 0, i32 0, !dbg !4283
  %41 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %40, align 8, !dbg !4283
  %42 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4284
  %43 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %42, i32 0, i32 1, !dbg !4285
  %44 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %43, align 8, !dbg !4285
  %45 = bitcast %struct._Jbig2Image** %44 to i8*, !dbg !4284
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %41, i8* %45), !dbg !4286
  %46 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4287
  %47 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %46, i32 0, i32 0, !dbg !4288
  %48 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %47, align 8, !dbg !4288
  %49 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4289
  %50 = bitcast %struct.Jbig2SymbolDict* %49 to i8*, !dbg !4289
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %48, i8* %50), !dbg !4290
  br label %51, !dbg !4291

; <label>:51:                                     ; preds = %38, %8
  ret void, !dbg !4291
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_sd_glyph(%struct.Jbig2SymbolDict*, i32) #0 !dbg !4292 {
  %3 = alloca %struct._Jbig2Image*, align 8
  %4 = alloca %struct.Jbig2SymbolDict*, align 8
  %5 = alloca i32, align 4
  store %struct.Jbig2SymbolDict* %0, %struct.Jbig2SymbolDict** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict** %4, metadata !4295, metadata !DIExpression()), !dbg !4296
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4297, metadata !DIExpression()), !dbg !4298
  %6 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4299
  %7 = icmp eq %struct.Jbig2SymbolDict* %6, null, !dbg !4301
  br i1 %7, label %8, label %9, !dbg !4302

; <label>:8:                                      ; preds = %2
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !4303
  br label %17, !dbg !4303

; <label>:9:                                      ; preds = %2
  %10 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %4, align 8, !dbg !4304
  %11 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %10, i32 0, i32 1, !dbg !4305
  %12 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %11, align 8, !dbg !4305
  %13 = load i32, i32* %5, align 4, !dbg !4306
  %14 = zext i32 %13 to i64, !dbg !4304
  %15 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %12, i64 %14, !dbg !4304
  %16 = load %struct._Jbig2Image*, %struct._Jbig2Image** %15, align 8, !dbg !4304
  store %struct._Jbig2Image* %16, %struct._Jbig2Image** %3, align 8, !dbg !4307
  br label %17, !dbg !4307

; <label>:17:                                     ; preds = %9, %8
  %18 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !4308
  ret %struct._Jbig2Image* %18, !dbg !4308
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_sd_count_referred(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*) #0 !dbg !4309 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Segment*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !4312, metadata !DIExpression()), !dbg !4313
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %4, metadata !4314, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !4318, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4320, metadata !DIExpression()), !dbg !4321
  store i32 0, i32* %7, align 4, !dbg !4321
  store i32 0, i32* %5, align 4, !dbg !4322
  br label %8, !dbg !4324

; <label>:8:                                      ; preds = %37, %2
  %9 = load i32, i32* %5, align 4, !dbg !4325
  %10 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !4327
  %11 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %10, i32 0, i32 4, !dbg !4328
  %12 = load i32, i32* %11, align 8, !dbg !4328
  %13 = icmp slt i32 %9, %12, !dbg !4329
  br i1 %13, label %14, label %40, !dbg !4330

; <label>:14:                                     ; preds = %8
  %15 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4331
  %16 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !4333
  %17 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %16, i32 0, i32 5, !dbg !4334
  %18 = load i32*, i32** %17, align 8, !dbg !4334
  %19 = load i32, i32* %5, align 4, !dbg !4335
  %20 = sext i32 %19 to i64, !dbg !4333
  %21 = getelementptr inbounds i32, i32* %18, i64 %20, !dbg !4333
  %22 = load i32, i32* %21, align 4, !dbg !4333
  %23 = call %struct._Jbig2Segment* @jbig2_find_segment(%struct._Jbig2Ctx.11* %15, i32 %22), !dbg !4336
  store %struct._Jbig2Segment* %23, %struct._Jbig2Segment** %6, align 8, !dbg !4337
  %24 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4338
  %25 = icmp ne %struct._Jbig2Segment* %24, null, !dbg !4338
  br i1 %25, label %26, label %36, !dbg !4340

; <label>:26:                                     ; preds = %14
  %27 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4341
  %28 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %27, i32 0, i32 1, !dbg !4342
  %29 = load i8, i8* %28, align 4, !dbg !4342
  %30 = zext i8 %29 to i32, !dbg !4341
  %31 = and i32 %30, 63, !dbg !4343
  %32 = icmp eq i32 %31, 0, !dbg !4344
  br i1 %32, label %33, label %36, !dbg !4345

; <label>:33:                                     ; preds = %26
  %34 = load i32, i32* %7, align 4, !dbg !4346
  %35 = add nsw i32 %34, 1, !dbg !4346
  store i32 %35, i32* %7, align 4, !dbg !4346
  br label %36, !dbg !4347

; <label>:36:                                     ; preds = %33, %26, %14
  br label %37, !dbg !4348

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* %5, align 4, !dbg !4349
  %39 = add nsw i32 %38, 1, !dbg !4349
  store i32 %39, i32* %5, align 4, !dbg !4349
  br label %8, !dbg !4350, !llvm.loop !4351

; <label>:40:                                     ; preds = %8
  %41 = load i32, i32* %7, align 4, !dbg !4353
  ret i32 %41, !dbg !4354
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Jbig2SymbolDict** @jbig2_sd_list_referred(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*) #0 !dbg !4355 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Segment*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca %struct.Jbig2SymbolDict**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !4359, metadata !DIExpression()), !dbg !4360
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %4, metadata !4361, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4363, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !4365, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict*** %7, metadata !4367, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4369, metadata !DIExpression()), !dbg !4370
  %10 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4371
  %11 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !4372
  %12 = call i32 @jbig2_sd_count_referred(%struct._Jbig2Ctx.11* %10, %struct._Jbig2Segment* %11), !dbg !4373
  store i32 %12, i32* %8, align 4, !dbg !4370
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4374, metadata !DIExpression()), !dbg !4375
  store i32 0, i32* %9, align 4, !dbg !4375
  %13 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4376
  %14 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %13, i32 0, i32 0, !dbg !4377
  %15 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %14, align 8, !dbg !4377
  %16 = load i32, i32* %8, align 4, !dbg !4378
  %17 = sext i32 %16 to i64, !dbg !4378
  %18 = mul i64 8, %17, !dbg !4379
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4380
  %19 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %15, i64 %18), !dbg !4380
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4380
  %20 = bitcast i8* %19 to %struct.Jbig2SymbolDict**, !dbg !4380
  store %struct.Jbig2SymbolDict** %20, %struct.Jbig2SymbolDict*** %7, align 8, !dbg !4381
  store i32 0, i32* %5, align 4, !dbg !4382
  br label %21, !dbg !4384

; <label>:21:                                     ; preds = %57, %2
  %22 = load i32, i32* %5, align 4, !dbg !4385
  %23 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !4387
  %24 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %23, i32 0, i32 4, !dbg !4388
  %25 = load i32, i32* %24, align 8, !dbg !4388
  %26 = icmp slt i32 %22, %25, !dbg !4389
  br i1 %26, label %27, label %60, !dbg !4390

; <label>:27:                                     ; preds = %21
  %28 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4391
  %29 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !4393
  %30 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %29, i32 0, i32 5, !dbg !4394
  %31 = load i32*, i32** %30, align 8, !dbg !4394
  %32 = load i32, i32* %5, align 4, !dbg !4395
  %33 = sext i32 %32 to i64, !dbg !4393
  %34 = getelementptr inbounds i32, i32* %31, i64 %33, !dbg !4393
  %35 = load i32, i32* %34, align 4, !dbg !4393
  %36 = call %struct._Jbig2Segment* @jbig2_find_segment(%struct._Jbig2Ctx.11* %28, i32 %35), !dbg !4396
  store %struct._Jbig2Segment* %36, %struct._Jbig2Segment** %6, align 8, !dbg !4397
  %37 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4398
  %38 = icmp ne %struct._Jbig2Segment* %37, null, !dbg !4398
  br i1 %38, label %39, label %56, !dbg !4400

; <label>:39:                                     ; preds = %27
  %40 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4401
  %41 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %40, i32 0, i32 1, !dbg !4402
  %42 = load i8, i8* %41, align 4, !dbg !4402
  %43 = zext i8 %42 to i32, !dbg !4401
  %44 = and i32 %43, 63, !dbg !4403
  %45 = icmp eq i32 %44, 0, !dbg !4404
  br i1 %45, label %46, label %56, !dbg !4405

; <label>:46:                                     ; preds = %39
  %47 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4406
  %48 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %47, i32 0, i32 6, !dbg !4408
  %49 = load i8*, i8** %48, align 8, !dbg !4408
  %50 = bitcast i8* %49 to %struct.Jbig2SymbolDict*, !dbg !4409
  %51 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %7, align 8, !dbg !4410
  %52 = load i32, i32* %9, align 4, !dbg !4411
  %53 = add nsw i32 %52, 1, !dbg !4411
  store i32 %53, i32* %9, align 4, !dbg !4411
  %54 = sext i32 %52 to i64, !dbg !4410
  %55 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %51, i64 %54, !dbg !4410
  store %struct.Jbig2SymbolDict* %50, %struct.Jbig2SymbolDict** %55, align 8, !dbg !4412
  br label %56, !dbg !4413

; <label>:56:                                     ; preds = %46, %39, %27
  br label %57, !dbg !4414

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* %5, align 4, !dbg !4415
  %59 = add nsw i32 %58, 1, !dbg !4415
  store i32 %59, i32* %5, align 4, !dbg !4415
  br label %21, !dbg !4416, !llvm.loop !4417

; <label>:60:                                     ; preds = %21
  %61 = load i32, i32* %9, align 4, !dbg !4419
  %62 = load i32, i32* %8, align 4, !dbg !4421
  %63 = icmp ne i32 %61, %62, !dbg !4422
  br i1 %63, label %64, label %72, !dbg !4423

; <label>:64:                                     ; preds = %60
  %65 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !4424
  %66 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %4, align 8, !dbg !4426
  %67 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %66, i32 0, i32 0, !dbg !4427
  %68 = load i32, i32* %67, align 8, !dbg !4427
  %69 = load i32, i32* %8, align 4, !dbg !4428
  %70 = load i32, i32* %9, align 4, !dbg !4429
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4430
  %71 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %65, i32 3, i32 %68, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.116, i32 0, i32 0), i32 %69, i32 %70), !dbg !4430
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4431
  br label %72, !dbg !4431

; <label>:72:                                     ; preds = %64, %60
  %73 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %7, align 8, !dbg !4432
  ret %struct.Jbig2SymbolDict** %73, !dbg !4433
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Jbig2SymbolDict* @jbig2_sd_cat(%struct._Jbig2Ctx.11*, i32, %struct.Jbig2SymbolDict**) #0 !dbg !4434 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.Jbig2SymbolDict**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.Jbig2SymbolDict*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4439, metadata !DIExpression()), !dbg !4440
  store %struct.Jbig2SymbolDict** %2, %struct.Jbig2SymbolDict*** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict*** %6, metadata !4441, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4443, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4445, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4447, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4449, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict** %11, metadata !4451, metadata !DIExpression()), !dbg !4452
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %11, align 8, !dbg !4452
  store i32 0, i32* %10, align 4, !dbg !4453
  store i32 0, i32* %7, align 4, !dbg !4454
  br label %12, !dbg !4456

; <label>:12:                                     ; preds = %26, %3
  %13 = load i32, i32* %7, align 4, !dbg !4457
  %14 = load i32, i32* %5, align 4, !dbg !4459
  %15 = icmp slt i32 %13, %14, !dbg !4460
  br i1 %15, label %16, label %29, !dbg !4461

; <label>:16:                                     ; preds = %12
  %17 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %6, align 8, !dbg !4462
  %18 = load i32, i32* %7, align 4, !dbg !4463
  %19 = sext i32 %18 to i64, !dbg !4462
  %20 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %17, i64 %19, !dbg !4462
  %21 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %20, align 8, !dbg !4462
  %22 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %21, i32 0, i32 0, !dbg !4464
  %23 = load i32, i32* %22, align 8, !dbg !4464
  %24 = load i32, i32* %10, align 4, !dbg !4465
  %25 = add nsw i32 %24, %23, !dbg !4465
  store i32 %25, i32* %10, align 4, !dbg !4465
  br label %26, !dbg !4466

; <label>:26:                                     ; preds = %16
  %27 = load i32, i32* %7, align 4, !dbg !4467
  %28 = add nsw i32 %27, 1, !dbg !4467
  store i32 %28, i32* %7, align 4, !dbg !4467
  br label %12, !dbg !4468, !llvm.loop !4469

; <label>:29:                                     ; preds = %12
  %30 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4471
  %31 = load i32, i32* %10, align 4, !dbg !4472
  %32 = call %struct.Jbig2SymbolDict* @jbig2_sd_new(%struct._Jbig2Ctx.11* %30, i32 %31), !dbg !4473
  store %struct.Jbig2SymbolDict* %32, %struct.Jbig2SymbolDict** %11, align 8, !dbg !4474
  %33 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %11, align 8, !dbg !4475
  %34 = icmp ne %struct.Jbig2SymbolDict* %33, null, !dbg !4477
  br i1 %34, label %35, label %80, !dbg !4478

; <label>:35:                                     ; preds = %29
  store i32 0, i32* %9, align 4, !dbg !4479
  store i32 0, i32* %7, align 4, !dbg !4481
  br label %36, !dbg !4483

; <label>:36:                                     ; preds = %76, %35
  %37 = load i32, i32* %7, align 4, !dbg !4484
  %38 = load i32, i32* %5, align 4, !dbg !4486
  %39 = icmp slt i32 %37, %38, !dbg !4487
  br i1 %39, label %40, label %79, !dbg !4488

; <label>:40:                                     ; preds = %36
  store i32 0, i32* %8, align 4, !dbg !4489
  br label %41, !dbg !4491

; <label>:41:                                     ; preds = %72, %40
  %42 = load i32, i32* %8, align 4, !dbg !4492
  %43 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %6, align 8, !dbg !4494
  %44 = load i32, i32* %7, align 4, !dbg !4495
  %45 = sext i32 %44 to i64, !dbg !4494
  %46 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %43, i64 %45, !dbg !4494
  %47 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %46, align 8, !dbg !4494
  %48 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %47, i32 0, i32 0, !dbg !4496
  %49 = load i32, i32* %48, align 8, !dbg !4496
  %50 = icmp slt i32 %42, %49, !dbg !4497
  br i1 %50, label %51, label %75, !dbg !4498

; <label>:51:                                     ; preds = %41
  %52 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !4499
  %53 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %6, align 8, !dbg !4500
  %54 = load i32, i32* %7, align 4, !dbg !4501
  %55 = sext i32 %54 to i64, !dbg !4500
  %56 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %53, i64 %55, !dbg !4500
  %57 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %56, align 8, !dbg !4500
  %58 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %57, i32 0, i32 1, !dbg !4502
  %59 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %58, align 8, !dbg !4502
  %60 = load i32, i32* %8, align 4, !dbg !4503
  %61 = sext i32 %60 to i64, !dbg !4500
  %62 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %59, i64 %61, !dbg !4500
  %63 = load %struct._Jbig2Image*, %struct._Jbig2Image** %62, align 8, !dbg !4500
  %64 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %52, %struct._Jbig2Image* %63), !dbg !4504
  %65 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %11, align 8, !dbg !4505
  %66 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %65, i32 0, i32 1, !dbg !4506
  %67 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %66, align 8, !dbg !4506
  %68 = load i32, i32* %9, align 4, !dbg !4507
  %69 = add nsw i32 %68, 1, !dbg !4507
  store i32 %69, i32* %9, align 4, !dbg !4507
  %70 = sext i32 %68 to i64, !dbg !4505
  %71 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %67, i64 %70, !dbg !4505
  store %struct._Jbig2Image* %64, %struct._Jbig2Image** %71, align 8, !dbg !4508
  br label %72, !dbg !4505

; <label>:72:                                     ; preds = %51
  %73 = load i32, i32* %8, align 4, !dbg !4509
  %74 = add nsw i32 %73, 1, !dbg !4509
  store i32 %74, i32* %8, align 4, !dbg !4509
  br label %41, !dbg !4510, !llvm.loop !4511

; <label>:75:                                     ; preds = %41
  br label %76, !dbg !4512

; <label>:76:                                     ; preds = %75
  %77 = load i32, i32* %7, align 4, !dbg !4513
  %78 = add nsw i32 %77, 1, !dbg !4513
  store i32 %78, i32* %7, align 4, !dbg !4513
  br label %36, !dbg !4514, !llvm.loop !4515

; <label>:79:                                     ; preds = %36
  br label %80, !dbg !4517

; <label>:80:                                     ; preds = %79, %29
  %81 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %11, align 8, !dbg !4518
  ret %struct.Jbig2SymbolDict* %81, !dbg !4519
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_symbol_dictionary(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !4520 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.Jbig2SymbolDictParams, align 8
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.Jbig2SymbolDict**, align 8
  %16 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !4523, metadata !DIExpression()), !dbg !4524
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !4525, metadata !DIExpression()), !dbg !4526
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDictParams* %8, metadata !4529, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.declare(metadata i16* %9, metadata !4571, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4573, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4575, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4577, metadata !DIExpression()), !dbg !4578
  store i8* null, i8** %12, align 8, !dbg !4578
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4579, metadata !DIExpression()), !dbg !4580
  store i8* null, i8** %13, align 8, !dbg !4580
  %17 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4581
  %18 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %17, i32 0, i32 3, !dbg !4583
  %19 = load i64, i64* %18, align 8, !dbg !4583
  %20 = icmp ult i64 %19, 10, !dbg !4584
  br i1 %20, label %21, label %22, !dbg !4585

; <label>:21:                                     ; preds = %3
  br label %382, !dbg !4586

; <label>:22:                                     ; preds = %3
  %23 = load i8*, i8** %7, align 8, !dbg !4587
  %24 = call signext i16 @jbig2_get_int16(i8* %23), !dbg !4588
  store i16 %24, i16* %9, align 2, !dbg !4589
  %25 = load i16, i16* %9, align 2, !dbg !4590
  %26 = zext i16 %25 to i32, !dbg !4590
  %27 = and i32 %26, 1, !dbg !4591
  %28 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 0, !dbg !4592
  store i32 %27, i32* %28, align 8, !dbg !4593
  %29 = load i16, i16* %9, align 2, !dbg !4594
  %30 = zext i16 %29 to i32, !dbg !4594
  %31 = ashr i32 %30, 1, !dbg !4595
  %32 = and i32 %31, 1, !dbg !4596
  %33 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 1, !dbg !4597
  store i32 %32, i32* %33, align 4, !dbg !4598
  %34 = load i16, i16* %9, align 2, !dbg !4599
  %35 = zext i16 %34 to i32, !dbg !4599
  %36 = ashr i32 %35, 10, !dbg !4600
  %37 = and i32 %36, 3, !dbg !4601
  %38 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 10, !dbg !4602
  store i32 %37, i32* %38, align 8, !dbg !4603
  %39 = load i16, i16* %9, align 2, !dbg !4604
  %40 = zext i16 %39 to i32, !dbg !4604
  %41 = ashr i32 %40, 12, !dbg !4605
  %42 = and i32 %41, 1, !dbg !4606
  %43 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 12, !dbg !4607
  store i32 %42, i32* %43, align 4, !dbg !4608
  %44 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 6, !dbg !4609
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %44, align 8, !dbg !4610
  %45 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 7, !dbg !4611
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %45, align 8, !dbg !4612
  %46 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 8, !dbg !4613
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %46, align 8, !dbg !4614
  %47 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 9, !dbg !4615
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %47, align 8, !dbg !4616
  %48 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 0, !dbg !4617
  %49 = load i32, i32* %48, align 8, !dbg !4617
  %50 = icmp ne i32 %49, 0, !dbg !4619
  br i1 %50, label %51, label %134, !dbg !4620

; <label>:51:                                     ; preds = %22
  %52 = load i16, i16* %9, align 2, !dbg !4621
  %53 = zext i16 %52 to i32, !dbg !4621
  %54 = and i32 %53, 12, !dbg !4623
  %55 = ashr i32 %54, 2, !dbg !4624
  switch i32 %55, label %71 [
    i32 0, label %56
    i32 1, label %60
    i32 3, label %64
    i32 2, label %70
  ], !dbg !4625

; <label>:56:                                     ; preds = %51
  %57 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4626
  %58 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %57, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_D), !dbg !4628
  %59 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 6, !dbg !4629
  store %struct._Jbig2HuffmanTable* %58, %struct._Jbig2HuffmanTable** %59, align 8, !dbg !4630
  br label %77, !dbg !4631

; <label>:60:                                     ; preds = %51
  %61 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4632
  %62 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %61, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_E), !dbg !4633
  %63 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 6, !dbg !4634
  store %struct._Jbig2HuffmanTable* %62, %struct._Jbig2HuffmanTable** %63, align 8, !dbg !4635
  br label %77, !dbg !4636

; <label>:64:                                     ; preds = %51
  %65 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4637
  %66 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4638
  %67 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %66, i32 0, i32 0, !dbg !4639
  %68 = load i32, i32* %67, align 8, !dbg !4639
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4640
  %69 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %65, i32 3, i32 %68, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1.119, i32 0, i32 0)), !dbg !4640
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4641
  store i32 %69, i32* %4, align 4, !dbg !4641
  br label %388, !dbg !4641

; <label>:70:                                     ; preds = %51
  br label %71, !dbg !4641

; <label>:71:                                     ; preds = %70, %51
  %72 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4642
  %73 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4643
  %74 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %73, i32 0, i32 0, !dbg !4644
  %75 = load i32, i32* %74, align 8, !dbg !4644
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4645
  %76 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %72, i32 3, i32 %75, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2.120, i32 0, i32 0)), !dbg !4645
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4646
  store i32 %76, i32* %4, align 4, !dbg !4646
  br label %388, !dbg !4646

; <label>:77:                                     ; preds = %60, %56
  %78 = load i16, i16* %9, align 2, !dbg !4647
  %79 = zext i16 %78 to i32, !dbg !4647
  %80 = and i32 %79, 48, !dbg !4648
  %81 = ashr i32 %80, 4, !dbg !4649
  switch i32 %81, label %97 [
    i32 0, label %82
    i32 1, label %86
    i32 3, label %90
    i32 2, label %96
  ], !dbg !4650

; <label>:82:                                     ; preds = %77
  %83 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4651
  %84 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %83, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_B), !dbg !4653
  %85 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 7, !dbg !4654
  store %struct._Jbig2HuffmanTable* %84, %struct._Jbig2HuffmanTable** %85, align 8, !dbg !4655
  br label %103, !dbg !4656

; <label>:86:                                     ; preds = %77
  %87 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4657
  %88 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %87, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_C), !dbg !4658
  %89 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 7, !dbg !4659
  store %struct._Jbig2HuffmanTable* %88, %struct._Jbig2HuffmanTable** %89, align 8, !dbg !4660
  br label %103, !dbg !4661

; <label>:90:                                     ; preds = %77
  %91 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4662
  %92 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4663
  %93 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %92, i32 0, i32 0, !dbg !4664
  %94 = load i32, i32* %93, align 8, !dbg !4664
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4665
  %95 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %91, i32 3, i32 %94, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.121, i32 0, i32 0)), !dbg !4665
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4666
  store i32 %95, i32* %4, align 4, !dbg !4666
  br label %388, !dbg !4666

; <label>:96:                                     ; preds = %77
  br label %97, !dbg !4666

; <label>:97:                                     ; preds = %96, %77
  %98 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4667
  %99 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4668
  %100 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %99, i32 0, i32 0, !dbg !4669
  %101 = load i32, i32* %100, align 8, !dbg !4669
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4670
  %102 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %98, i32 3, i32 %101, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2.120, i32 0, i32 0)), !dbg !4670
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4671
  store i32 %102, i32* %4, align 4, !dbg !4671
  br label %388, !dbg !4671

; <label>:103:                                    ; preds = %86, %82
  %104 = load i16, i16* %9, align 2, !dbg !4672
  %105 = zext i16 %104 to i32, !dbg !4672
  %106 = and i32 %105, 64, !dbg !4674
  %107 = icmp ne i32 %106, 0, !dbg !4674
  br i1 %107, label %108, label %114, !dbg !4675

; <label>:108:                                    ; preds = %103
  %109 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4676
  %110 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4678
  %111 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %110, i32 0, i32 0, !dbg !4679
  %112 = load i32, i32* %111, align 8, !dbg !4679
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4680
  %113 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %109, i32 3, i32 %112, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.122, i32 0, i32 0)), !dbg !4680
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4681
  store i32 %113, i32* %4, align 4, !dbg !4681
  br label %388, !dbg !4681

; <label>:114:                                    ; preds = %103
  %115 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4682
  %116 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %115, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_A), !dbg !4684
  %117 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 8, !dbg !4685
  store %struct._Jbig2HuffmanTable* %116, %struct._Jbig2HuffmanTable** %117, align 8, !dbg !4686
  br label %118

; <label>:118:                                    ; preds = %114
  %119 = load i16, i16* %9, align 2, !dbg !4687
  %120 = zext i16 %119 to i32, !dbg !4687
  %121 = and i32 %120, 128, !dbg !4689
  %122 = icmp ne i32 %121, 0, !dbg !4689
  br i1 %122, label %123, label %129, !dbg !4690

; <label>:123:                                    ; preds = %118
  %124 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4691
  %125 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4693
  %126 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %125, i32 0, i32 0, !dbg !4694
  %127 = load i32, i32* %126, align 8, !dbg !4694
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4695
  %128 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %124, i32 3, i32 %127, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.5.123, i32 0, i32 0)), !dbg !4695
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4696
  store i32 %128, i32* %4, align 4, !dbg !4696
  br label %388, !dbg !4696

; <label>:129:                                    ; preds = %118
  %130 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4697
  %131 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %130, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_A), !dbg !4699
  %132 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 9, !dbg !4700
  store %struct._Jbig2HuffmanTable* %131, %struct._Jbig2HuffmanTable** %132, align 8, !dbg !4701
  br label %133

; <label>:133:                                    ; preds = %129
  br label %134, !dbg !4702

; <label>:134:                                    ; preds = %133, %22
  %135 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 0, !dbg !4703
  %136 = load i32, i32* %135, align 8, !dbg !4703
  %137 = icmp ne i32 %136, 0, !dbg !4705
  br i1 %137, label %161, label %138, !dbg !4706

; <label>:138:                                    ; preds = %134
  %139 = load i16, i16* %9, align 2, !dbg !4707
  %140 = zext i16 %139 to i32, !dbg !4707
  %141 = and i32 %140, 12, !dbg !4710
  %142 = icmp ne i32 %141, 0, !dbg !4710
  br i1 %142, label %143, label %149, !dbg !4711

; <label>:143:                                    ; preds = %138
  %144 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4712
  %145 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4714
  %146 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %145, i32 0, i32 0, !dbg !4715
  %147 = load i32, i32* %146, align 8, !dbg !4715
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4716
  %148 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %144, i32 2, i32 %147, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6.124, i32 0, i32 0)), !dbg !4716
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4717
  br label %149, !dbg !4717

; <label>:149:                                    ; preds = %143, %138
  %150 = load i16, i16* %9, align 2, !dbg !4718
  %151 = zext i16 %150 to i32, !dbg !4718
  %152 = and i32 %151, 48, !dbg !4720
  %153 = icmp ne i32 %152, 0, !dbg !4720
  br i1 %153, label %154, label %160, !dbg !4721

; <label>:154:                                    ; preds = %149
  %155 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4722
  %156 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4724
  %157 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %156, i32 0, i32 0, !dbg !4725
  %158 = load i32, i32* %157, align 8, !dbg !4725
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4726
  %159 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %155, i32 2, i32 %158, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7.125, i32 0, i32 0)), !dbg !4726
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4727
  br label %160, !dbg !4727

; <label>:160:                                    ; preds = %154, %149
  br label %161, !dbg !4728

; <label>:161:                                    ; preds = %160, %134
  %162 = load i16, i16* %9, align 2, !dbg !4729
  %163 = zext i16 %162 to i32, !dbg !4729
  %164 = and i32 %163, 128, !dbg !4731
  %165 = icmp ne i32 %164, 0, !dbg !4731
  br i1 %165, label %166, label %172, !dbg !4732

; <label>:166:                                    ; preds = %161
  %167 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4733
  %168 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4735
  %169 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %168, i32 0, i32 0, !dbg !4736
  %170 = load i32, i32* %169, align 8, !dbg !4736
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4737
  %171 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %167, i32 2, i32 %170, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8.126, i32 0, i32 0)), !dbg !4737
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4738
  br label %172, !dbg !4738

; <label>:172:                                    ; preds = %166, %161
  %173 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 0, !dbg !4739
  %174 = load i32, i32* %173, align 8, !dbg !4739
  %175 = icmp ne i32 %174, 0, !dbg !4740
  br i1 %175, label %176, label %177, !dbg !4740

; <label>:176:                                    ; preds = %172
  br label %183, !dbg !4740

; <label>:177:                                    ; preds = %172
  %178 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 10, !dbg !4741
  %179 = load i32, i32* %178, align 8, !dbg !4741
  %180 = icmp eq i32 %179, 0, !dbg !4742
  %181 = zext i1 %180 to i64, !dbg !4743
  %182 = select i1 %180, i32 8, i32 2, !dbg !4743
  br label %183, !dbg !4740

; <label>:183:                                    ; preds = %177, %176
  %184 = phi i32 [ 0, %176 ], [ %182, %177 ], !dbg !4740
  store i32 %184, i32* %10, align 4, !dbg !4744
  %185 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 11, !dbg !4745
  %186 = getelementptr inbounds [8 x i8], [8 x i8]* %185, i32 0, i32 0, !dbg !4746
  %187 = load i8*, i8** %7, align 8, !dbg !4747
  %188 = getelementptr inbounds i8, i8* %187, i64 2, !dbg !4748
  %189 = load i32, i32* %10, align 4, !dbg !4749
  %190 = sext i32 %189 to i64, !dbg !4749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 1 %188, i64 %190, i1 false), !dbg !4746
  %191 = load i32, i32* %10, align 4, !dbg !4750
  %192 = add nsw i32 2, %191, !dbg !4751
  store i32 %192, i32* %11, align 4, !dbg !4752
  %193 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 1, !dbg !4753
  %194 = load i32, i32* %193, align 4, !dbg !4753
  %195 = icmp ne i32 %194, 0, !dbg !4755
  br i1 %195, label %196, label %218, !dbg !4756

; <label>:196:                                    ; preds = %183
  %197 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 12, !dbg !4757
  %198 = load i32, i32* %197, align 4, !dbg !4757
  %199 = icmp ne i32 %198, 0, !dbg !4758
  br i1 %199, label %218, label %200, !dbg !4759

; <label>:200:                                    ; preds = %196
  %201 = load i32, i32* %11, align 4, !dbg !4760
  %202 = add nsw i32 %201, 4, !dbg !4763
  %203 = sext i32 %202 to i64, !dbg !4760
  %204 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4764
  %205 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %204, i32 0, i32 3, !dbg !4765
  %206 = load i64, i64* %205, align 8, !dbg !4765
  %207 = icmp ugt i64 %203, %206, !dbg !4766
  br i1 %207, label %208, label %209, !dbg !4767

; <label>:208:                                    ; preds = %200
  br label %382, !dbg !4768

; <label>:209:                                    ; preds = %200
  %210 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 13, !dbg !4769
  %211 = getelementptr inbounds [4 x i8], [4 x i8]* %210, i32 0, i32 0, !dbg !4770
  %212 = load i8*, i8** %7, align 8, !dbg !4771
  %213 = load i32, i32* %11, align 4, !dbg !4772
  %214 = sext i32 %213 to i64, !dbg !4773
  %215 = getelementptr inbounds i8, i8* %212, i64 %214, !dbg !4773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 1 %215, i64 4, i1 false), !dbg !4770
  %216 = load i32, i32* %11, align 4, !dbg !4774
  %217 = add nsw i32 %216, 4, !dbg !4774
  store i32 %217, i32* %11, align 4, !dbg !4774
  br label %221, !dbg !4775

; <label>:218:                                    ; preds = %196, %183
  %219 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 13, !dbg !4776
  %220 = getelementptr inbounds [4 x i8], [4 x i8]* %219, i32 0, i32 0, !dbg !4778
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 4, i1 false), !dbg !4778
  br label %221

; <label>:221:                                    ; preds = %218, %209
  %222 = load i32, i32* %11, align 4, !dbg !4779
  %223 = add nsw i32 %222, 8, !dbg !4781
  %224 = sext i32 %223 to i64, !dbg !4779
  %225 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4782
  %226 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %225, i32 0, i32 3, !dbg !4783
  %227 = load i64, i64* %226, align 8, !dbg !4783
  %228 = icmp ugt i64 %224, %227, !dbg !4784
  br i1 %228, label %229, label %230, !dbg !4785

; <label>:229:                                    ; preds = %221
  br label %382, !dbg !4786

; <label>:230:                                    ; preds = %221
  %231 = load i8*, i8** %7, align 8, !dbg !4787
  %232 = load i32, i32* %11, align 4, !dbg !4788
  %233 = sext i32 %232 to i64, !dbg !4789
  %234 = getelementptr inbounds i8, i8* %231, i64 %233, !dbg !4789
  %235 = call i32 @jbig2_get_int32(i8* %234), !dbg !4790
  %236 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 5, !dbg !4791
  store i32 %235, i32* %236, align 4, !dbg !4792
  %237 = load i8*, i8** %7, align 8, !dbg !4793
  %238 = load i32, i32* %11, align 4, !dbg !4794
  %239 = sext i32 %238 to i64, !dbg !4795
  %240 = getelementptr inbounds i8, i8* %237, i64 %239, !dbg !4795
  %241 = getelementptr inbounds i8, i8* %240, i64 4, !dbg !4796
  %242 = call i32 @jbig2_get_int32(i8* %241), !dbg !4797
  %243 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 4, !dbg !4798
  store i32 %242, i32* %243, align 8, !dbg !4799
  %244 = load i32, i32* %11, align 4, !dbg !4800
  %245 = add nsw i32 %244, 8, !dbg !4800
  store i32 %245, i32* %11, align 4, !dbg !4800
  %246 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4801
  %247 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4802
  %248 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %247, i32 0, i32 0, !dbg !4803
  %249 = load i32, i32* %248, align 8, !dbg !4803
  %250 = load i16, i16* %9, align 2, !dbg !4804
  %251 = zext i16 %250 to i32, !dbg !4804
  %252 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 5, !dbg !4805
  %253 = load i32, i32* %252, align 4, !dbg !4805
  %254 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 4, !dbg !4806
  %255 = load i32, i32* %254, align 8, !dbg !4806
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4807
  %256 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %246, i32 1, i32 %249, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9.127, i32 0, i32 0), i32 %251, i32 %253, i32 %255), !dbg !4807
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4808
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4810, metadata !DIExpression()), !dbg !4808
  %257 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4811
  %258 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4812
  %259 = call i32 @jbig2_sd_count_referred(%struct._Jbig2Ctx.11* %257, %struct._Jbig2Segment* %258), !dbg !4813
  store i32 %259, i32* %14, align 4, !dbg !4808
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict*** %15, metadata !4814, metadata !DIExpression()), !dbg !4815
  store %struct.Jbig2SymbolDict** null, %struct.Jbig2SymbolDict*** %15, align 8, !dbg !4815
  %260 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 3, !dbg !4816
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %260, align 8, !dbg !4817
  %261 = load i32, i32* %14, align 4, !dbg !4818
  %262 = icmp sgt i32 %261, 0, !dbg !4820
  br i1 %262, label %263, label %272, !dbg !4821

; <label>:263:                                    ; preds = %230
  %264 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4822
  %265 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4824
  %266 = call %struct.Jbig2SymbolDict** @jbig2_sd_list_referred(%struct._Jbig2Ctx.11* %264, %struct._Jbig2Segment* %265), !dbg !4825
  store %struct.Jbig2SymbolDict** %266, %struct.Jbig2SymbolDict*** %15, align 8, !dbg !4826
  %267 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4827
  %268 = load i32, i32* %14, align 4, !dbg !4828
  %269 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %15, align 8, !dbg !4829
  %270 = call %struct.Jbig2SymbolDict* @jbig2_sd_cat(%struct._Jbig2Ctx.11* %267, i32 %268, %struct.Jbig2SymbolDict** %269), !dbg !4830
  %271 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 3, !dbg !4831
  store %struct.Jbig2SymbolDict* %270, %struct.Jbig2SymbolDict** %271, align 8, !dbg !4832
  br label %272, !dbg !4833

; <label>:272:                                    ; preds = %263, %230
  %273 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 3, !dbg !4834
  %274 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %273, align 8, !dbg !4834
  %275 = icmp ne %struct.Jbig2SymbolDict* %274, null, !dbg !4836
  br i1 %275, label %276, label %282, !dbg !4837

; <label>:276:                                    ; preds = %272
  %277 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 3, !dbg !4838
  %278 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %277, align 8, !dbg !4838
  %279 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %278, i32 0, i32 0, !dbg !4840
  %280 = load i32, i32* %279, align 8, !dbg !4840
  %281 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 2, !dbg !4841
  store i32 %280, i32* %281, align 8, !dbg !4842
  br label %284, !dbg !4843

; <label>:282:                                    ; preds = %272
  %283 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 2, !dbg !4844
  store i32 0, i32* %283, align 8, !dbg !4846
  br label %284

; <label>:284:                                    ; preds = %282, %276
  %285 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 0, !dbg !4847
  %286 = load i32, i32* %285, align 8, !dbg !4847
  %287 = icmp ne i32 %286, 0, !dbg !4849
  br i1 %287, label %329, label %288, !dbg !4850

; <label>:288:                                    ; preds = %284
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4851, metadata !DIExpression()), !dbg !4853
  %289 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 10, !dbg !4854
  %290 = load i32, i32* %289, align 8, !dbg !4854
  %291 = icmp eq i32 %290, 0, !dbg !4855
  br i1 %291, label %292, label %293, !dbg !4856

; <label>:292:                                    ; preds = %288
  br label %299, !dbg !4856

; <label>:293:                                    ; preds = %288
  %294 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 10, !dbg !4857
  %295 = load i32, i32* %294, align 8, !dbg !4857
  %296 = icmp eq i32 %295, 1, !dbg !4858
  %297 = zext i1 %296 to i64, !dbg !4859
  %298 = select i1 %296, i32 8192, i32 1024, !dbg !4859
  br label %299, !dbg !4856

; <label>:299:                                    ; preds = %293, %292
  %300 = phi i32 [ 65536, %292 ], [ %298, %293 ], !dbg !4856
  store i32 %300, i32* %16, align 4, !dbg !4853
  %301 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4860
  %302 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %301, i32 0, i32 0, !dbg !4861
  %303 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %302, align 8, !dbg !4861
  %304 = load i32, i32* %16, align 4, !dbg !4862
  %305 = sext i32 %304 to i64, !dbg !4862
  %306 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %303, i64 %305), !dbg !4863
  store i8* %306, i8** %12, align 8, !dbg !4864
  %307 = load i8*, i8** %12, align 8, !dbg !4865
  %308 = load i32, i32* %16, align 4, !dbg !4866
  %309 = sext i32 %308 to i64, !dbg !4866
  call void @llvm.memset.p0i8.i64(i8* align 1 %307, i8 0, i64 %309, i1 false), !dbg !4867
  %310 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 1, !dbg !4868
  %311 = load i32, i32* %310, align 4, !dbg !4868
  %312 = icmp ne i32 %311, 0, !dbg !4870
  br i1 %312, label %313, label %328, !dbg !4871

; <label>:313:                                    ; preds = %299
  %314 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 12, !dbg !4872
  %315 = load i32, i32* %314, align 4, !dbg !4872
  %316 = icmp ne i32 %315, 0, !dbg !4874
  %317 = zext i1 %316 to i64, !dbg !4874
  %318 = select i1 %316, i32 1024, i32 8192, !dbg !4874
  store i32 %318, i32* %16, align 4, !dbg !4875
  %319 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4876
  %320 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %319, i32 0, i32 0, !dbg !4877
  %321 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %320, align 8, !dbg !4877
  %322 = load i32, i32* %16, align 4, !dbg !4878
  %323 = sext i32 %322 to i64, !dbg !4878
  %324 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %321, i64 %323), !dbg !4879
  store i8* %324, i8** %13, align 8, !dbg !4880
  %325 = load i8*, i8** %13, align 8, !dbg !4881
  %326 = load i32, i32* %16, align 4, !dbg !4882
  %327 = sext i32 %326 to i64, !dbg !4882
  call void @llvm.memset.p0i8.i64(i8* align 1 %325, i8 0, i64 %327, i1 false), !dbg !4883
  br label %328, !dbg !4884

; <label>:328:                                    ; preds = %313, %299
  br label %329, !dbg !4885

; <label>:329:                                    ; preds = %328, %284
  %330 = load i16, i16* %9, align 2, !dbg !4886
  %331 = zext i16 %330 to i32, !dbg !4886
  %332 = and i32 %331, 256, !dbg !4888
  %333 = icmp ne i32 %332, 0, !dbg !4888
  br i1 %333, label %334, label %340, !dbg !4889

; <label>:334:                                    ; preds = %329
  %335 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4890
  %336 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4892
  %337 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %336, i32 0, i32 0, !dbg !4893
  %338 = load i32, i32* %337, align 8, !dbg !4893
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4894
  %339 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %335, i32 2, i32 %338, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10.128, i32 0, i32 0)), !dbg !4894
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4895
  br label %340, !dbg !4895

; <label>:340:                                    ; preds = %334, %329
  %341 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4896
  %342 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4897
  %343 = load i8*, i8** %7, align 8, !dbg !4898
  %344 = load i32, i32* %11, align 4, !dbg !4899
  %345 = sext i32 %344 to i64, !dbg !4900
  %346 = getelementptr inbounds i8, i8* %343, i64 %345, !dbg !4900
  %347 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4901
  %348 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %347, i32 0, i32 3, !dbg !4902
  %349 = load i64, i64* %348, align 8, !dbg !4902
  %350 = load i32, i32* %11, align 4, !dbg !4903
  %351 = sext i32 %350 to i64, !dbg !4903
  %352 = sub i64 %349, %351, !dbg !4904
  %353 = load i8*, i8** %12, align 8, !dbg !4905
  %354 = load i8*, i8** %13, align 8, !dbg !4906
  %355 = call %struct.Jbig2SymbolDict* @jbig2_decode_symbol_dict(%struct._Jbig2Ctx.11* %341, %struct._Jbig2Segment* %342, %struct.Jbig2SymbolDictParams* %8, i8* %346, i64 %352, i8* %353, i8* %354), !dbg !4907
  %356 = bitcast %struct.Jbig2SymbolDict* %355 to i8*, !dbg !4908
  %357 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4909
  %358 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %357, i32 0, i32 6, !dbg !4910
  store i8* %356, i8** %358, align 8, !dbg !4911
  %359 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 0, !dbg !4912
  %360 = load i32, i32* %359, align 8, !dbg !4912
  %361 = icmp ne i32 %360, 0, !dbg !4914
  br i1 %361, label %362, label %375, !dbg !4915

; <label>:362:                                    ; preds = %340
  %363 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4916
  %364 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 6, !dbg !4918
  %365 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %364, align 8, !dbg !4918
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %363, %struct._Jbig2HuffmanTable* %365), !dbg !4919
  %366 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4920
  %367 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 7, !dbg !4921
  %368 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %367, align 8, !dbg !4921
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %366, %struct._Jbig2HuffmanTable* %368), !dbg !4922
  %369 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4923
  %370 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 8, !dbg !4924
  %371 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %370, align 8, !dbg !4924
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %369, %struct._Jbig2HuffmanTable* %371), !dbg !4925
  %372 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4926
  %373 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %8, i32 0, i32 9, !dbg !4927
  %374 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %373, align 8, !dbg !4927
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %372, %struct._Jbig2HuffmanTable* %374), !dbg !4928
  br label %375, !dbg !4929

; <label>:375:                                    ; preds = %362, %340
  %376 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4930
  %377 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %376, i32 0, i32 6, !dbg !4931
  %378 = load i8*, i8** %377, align 8, !dbg !4931
  %379 = icmp ne i8* %378, null, !dbg !4932
  %380 = zext i1 %379 to i64, !dbg !4933
  %381 = select i1 %379, i32 0, i32 -1, !dbg !4933
  store i32 %381, i32* %4, align 4, !dbg !4934
  br label %388, !dbg !4934

; <label>:382:                                    ; preds = %229, %208, %21
  %383 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !4935
  %384 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !4936
  %385 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %384, i32 0, i32 0, !dbg !4937
  %386 = load i32, i32* %385, align 8, !dbg !4937
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !4938
  %387 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %383, i32 3, i32 %386, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.129, i32 0, i32 0)), !dbg !4938
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !4939
  store i32 %387, i32* %4, align 4, !dbg !4939
  br label %388, !dbg !4939

; <label>:388:                                    ; preds = %382, %375, %123, %108, %97, %90, %71, %64
  %389 = load i32, i32* %4, align 4, !dbg !4940
  ret i32 %389, !dbg !4940
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Jbig2SymbolDict* @jbig2_decode_symbol_dict(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2SymbolDictParams*, i8*, i64, i8*, i8*) #0 !dbg !4941 {
  %8 = alloca %struct.Jbig2SymbolDict*, align 8
  %9 = alloca %struct._Jbig2Ctx.11*, align 8
  %10 = alloca %struct._Jbig2Segment*, align 8
  %11 = alloca %struct.Jbig2SymbolDictParams*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %struct.Jbig2SymbolDict*, align 8
  %17 = alloca %struct.Jbig2SymbolDict*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32*, align 8
  %24 = alloca i32, align 4
  %25 = alloca %struct._Jbig2WordStream*, align 8
  %26 = alloca %struct._Jbig2HuffmanState*, align 8
  %27 = alloca %struct._Jbig2HuffmanTable*, align 8
  %28 = alloca %struct._Jbig2ArithState*, align 8
  %29 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %30 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %31 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %32 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %33 = alloca %struct._Jbig2ArithIaidCtx*, align 8
  %34 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %35 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %36 = alloca i32, align 4
  %37 = alloca %struct.Jbig2SymbolDict**, align 8
  %38 = alloca i32, align 4
  %39 = alloca %struct.Jbig2TextRegionParams*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca %struct.Jbig2GenericRegionParams, align 4
  %44 = alloca i32, align 4
  %45 = alloca %struct._Jbig2Image*, align 8
  %46 = alloca i32, align 4
  %47 = alloca %struct._Jbig2Image*, align 8
  %48 = alloca i32, align 4
  %49 = alloca %struct.Jbig2RefinementRegionParams, align 8
  %50 = alloca %struct._Jbig2Image*, align 8
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca %struct._Jbig2Image*, align 8
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i8*, align 8
  %60 = alloca i32, align 4
  %61 = alloca i8*, align 8
  %62 = alloca %struct.Jbig2GenericRegionParams, align 4
  %63 = alloca %struct._Jbig2Image*, align 8
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %9, metadata !4946, metadata !DIExpression()), !dbg !4947
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %10, metadata !4948, metadata !DIExpression()), !dbg !4949
  store %struct.Jbig2SymbolDictParams* %2, %struct.Jbig2SymbolDictParams** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDictParams** %11, metadata !4950, metadata !DIExpression()), !dbg !4951
  store i8* %3, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4952, metadata !DIExpression()), !dbg !4953
  store i64 %4, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i8* %5, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4956, metadata !DIExpression()), !dbg !4957
  store i8* %6, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4958, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict** %16, metadata !4960, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict** %17, metadata !4962, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.declare(metadata i32* %18, metadata !4964, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.declare(metadata i32* %19, metadata !4966, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.declare(metadata i32* %20, metadata !4968, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4970, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.declare(metadata i32* %22, metadata !4972, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.declare(metadata i32** %23, metadata !4974, metadata !DIExpression()), !dbg !4975
  store i32* null, i32** %23, align 8, !dbg !4975
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4976, metadata !DIExpression()), !dbg !4977
  store i32 0, i32* %24, align 4, !dbg !4977
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %25, metadata !4978, metadata !DIExpression()), !dbg !4979
  store %struct._Jbig2WordStream* null, %struct._Jbig2WordStream** %25, align 8, !dbg !4979
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %26, metadata !4980, metadata !DIExpression()), !dbg !4984
  store %struct._Jbig2HuffmanState* null, %struct._Jbig2HuffmanState** %26, align 8, !dbg !4984
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanTable** %27, metadata !4985, metadata !DIExpression()), !dbg !4986
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %27, align 8, !dbg !4986
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %28, metadata !4987, metadata !DIExpression()), !dbg !4991
  store %struct._Jbig2ArithState* null, %struct._Jbig2ArithState** %28, align 8, !dbg !4991
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %29, metadata !4992, metadata !DIExpression()), !dbg !4996
  store %struct._Jbig2ArithIntCtx* null, %struct._Jbig2ArithIntCtx** %29, align 8, !dbg !4996
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %30, metadata !4997, metadata !DIExpression()), !dbg !4998
  store %struct._Jbig2ArithIntCtx* null, %struct._Jbig2ArithIntCtx** %30, align 8, !dbg !4998
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %31, metadata !4999, metadata !DIExpression()), !dbg !5000
  store %struct._Jbig2ArithIntCtx* null, %struct._Jbig2ArithIntCtx** %31, align 8, !dbg !5000
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %32, metadata !5001, metadata !DIExpression()), !dbg !5002
  store %struct._Jbig2ArithIntCtx* null, %struct._Jbig2ArithIntCtx** %32, align 8, !dbg !5002
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIaidCtx** %33, metadata !5003, metadata !DIExpression()), !dbg !5007
  store %struct._Jbig2ArithIaidCtx* null, %struct._Jbig2ArithIaidCtx** %33, align 8, !dbg !5007
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %34, metadata !5008, metadata !DIExpression()), !dbg !5009
  store %struct._Jbig2ArithIntCtx* null, %struct._Jbig2ArithIntCtx** %34, align 8, !dbg !5009
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %35, metadata !5010, metadata !DIExpression()), !dbg !5011
  store %struct._Jbig2ArithIntCtx* null, %struct._Jbig2ArithIntCtx** %35, align 8, !dbg !5011
  call void @llvm.dbg.declare(metadata i32* %36, metadata !5012, metadata !DIExpression()), !dbg !5013
  store i32 0, i32* %36, align 4, !dbg !5013
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict*** %37, metadata !5014, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.declare(metadata i32* %38, metadata !5016, metadata !DIExpression()), !dbg !5017
  store i32 1, i32* %38, align 4, !dbg !5017
  call void @llvm.dbg.declare(metadata %struct.Jbig2TextRegionParams** %39, metadata !5018, metadata !DIExpression()), !dbg !5054
  store %struct.Jbig2TextRegionParams* null, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5054
  store i32 0, i32* %18, align 4, !dbg !5055
  store i32 0, i32* %19, align 4, !dbg !5056
  %70 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5057
  %71 = load i8*, i8** %12, align 8, !dbg !5058
  %72 = load i64, i64* %13, align 8, !dbg !5059
  %73 = call %struct._Jbig2WordStream* bitcast (%struct._Jbig2WordStream* (%struct._Jbig2Ctx*, i8*, i64)* @jbig2_word_stream_buf_new to %struct._Jbig2WordStream* (%struct._Jbig2Ctx.11*, i8*, i64)*)(%struct._Jbig2Ctx.11* %70, i8* %71, i64 %72), !dbg !5060
  store %struct._Jbig2WordStream* %73, %struct._Jbig2WordStream** %25, align 8, !dbg !5061
  %74 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5062
  %75 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %74, i32 0, i32 0, !dbg !5064
  %76 = load i32, i32* %75, align 8, !dbg !5064
  %77 = icmp ne i32 %76, 0, !dbg !5062
  br i1 %77, label %122, label %78, !dbg !5065

; <label>:78:                                     ; preds = %7
  %79 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5066
  %80 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %25, align 8, !dbg !5068
  %81 = call %struct._Jbig2ArithState* @jbig2_arith_new(%struct._Jbig2Ctx.11* %79, %struct._Jbig2WordStream* %80), !dbg !5069
  store %struct._Jbig2ArithState* %81, %struct._Jbig2ArithState** %28, align 8, !dbg !5070
  %82 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5071
  %83 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %82), !dbg !5072
  store %struct._Jbig2ArithIntCtx* %83, %struct._Jbig2ArithIntCtx** %29, align 8, !dbg !5073
  %84 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5074
  %85 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %84), !dbg !5075
  store %struct._Jbig2ArithIntCtx* %85, %struct._Jbig2ArithIntCtx** %30, align 8, !dbg !5076
  %86 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5077
  %87 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %86), !dbg !5078
  store %struct._Jbig2ArithIntCtx* %87, %struct._Jbig2ArithIntCtx** %31, align 8, !dbg !5079
  %88 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5080
  %89 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %88), !dbg !5081
  store %struct._Jbig2ArithIntCtx* %89, %struct._Jbig2ArithIntCtx** %32, align 8, !dbg !5082
  %90 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5083
  %91 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %90, i32 0, i32 1, !dbg !5085
  %92 = load i32, i32* %91, align 4, !dbg !5085
  %93 = icmp ne i32 %92, 0, !dbg !5083
  br i1 %93, label %94, label %121, !dbg !5086

; <label>:94:                                     ; preds = %78
  call void @llvm.dbg.declare(metadata i32* %40, metadata !5087, metadata !DIExpression()), !dbg !5089
  %95 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5090
  %96 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %95, i32 0, i32 3, !dbg !5091
  %97 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %96, align 8, !dbg !5091
  %98 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %97, i32 0, i32 0, !dbg !5092
  %99 = load i32, i32* %98, align 8, !dbg !5092
  %100 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5093
  %101 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %100, i32 0, i32 4, !dbg !5094
  %102 = load i32, i32* %101, align 8, !dbg !5094
  %103 = add i32 %99, %102, !dbg !5095
  store i32 %103, i32* %40, align 4, !dbg !5089
  store i32 0, i32* %24, align 4, !dbg !5096
  br label %104, !dbg !5098

; <label>:104:                                    ; preds = %110, %94
  %105 = load i32, i32* %24, align 4, !dbg !5099
  %106 = shl i32 1, %105, !dbg !5101
  %107 = load i32, i32* %40, align 4, !dbg !5102
  %108 = icmp slt i32 %106, %107, !dbg !5103
  br i1 %108, label %109, label %113, !dbg !5104

; <label>:109:                                    ; preds = %104
  br label %110, !dbg !5104

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* %24, align 4, !dbg !5105
  %112 = add nsw i32 %111, 1, !dbg !5105
  store i32 %112, i32* %24, align 4, !dbg !5105
  br label %104, !dbg !5106, !llvm.loop !5107

; <label>:113:                                    ; preds = %104
  %114 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5109
  %115 = load i32, i32* %24, align 4, !dbg !5110
  %116 = call %struct._Jbig2ArithIaidCtx* @jbig2_arith_iaid_ctx_new(%struct._Jbig2Ctx.11* %114, i32 %115), !dbg !5111
  store %struct._Jbig2ArithIaidCtx* %116, %struct._Jbig2ArithIaidCtx** %33, align 8, !dbg !5112
  %117 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5113
  %118 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %117), !dbg !5114
  store %struct._Jbig2ArithIntCtx* %118, %struct._Jbig2ArithIntCtx** %34, align 8, !dbg !5115
  %119 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5116
  %120 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %119), !dbg !5117
  store %struct._Jbig2ArithIntCtx* %120, %struct._Jbig2ArithIntCtx** %35, align 8, !dbg !5118
  br label %121, !dbg !5119

; <label>:121:                                    ; preds = %113, %78
  br label %158, !dbg !5120

; <label>:122:                                    ; preds = %7
  %123 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5121
  %124 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5123
  %125 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %124, i32 0, i32 0, !dbg !5124
  %126 = load i32, i32* %125, align 8, !dbg !5124
  %127 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %123, i32 0, i32 %126, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.130, i32 0, i32 0)), !dbg !5125
  %128 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5126
  %129 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %25, align 8, !dbg !5127
  %130 = call %struct._Jbig2HuffmanState* @jbig2_huffman_new(%struct._Jbig2Ctx.11* %128, %struct._Jbig2WordStream* %129), !dbg !5128
  store %struct._Jbig2HuffmanState* %130, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5129
  %131 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5130
  %132 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %131, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !5131
  store %struct._Jbig2HuffmanTable* %132, %struct._Jbig2HuffmanTable** %27, align 8, !dbg !5132
  %133 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5133
  %134 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %133, i32 0, i32 1, !dbg !5135
  %135 = load i32, i32* %134, align 4, !dbg !5135
  %136 = icmp ne i32 %135, 0, !dbg !5133
  br i1 %136, label %157, label %137, !dbg !5136

; <label>:137:                                    ; preds = %122
  %138 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5137
  %139 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %138, i32 0, i32 0, !dbg !5139
  %140 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %139, align 8, !dbg !5139
  %141 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5140
  %142 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %141, i32 0, i32 4, !dbg !5141
  %143 = load i32, i32* %142, align 8, !dbg !5141
  %144 = zext i32 %143 to i64, !dbg !5140
  %145 = mul i64 4, %144, !dbg !5142
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5143
  %146 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %140, i64 %145), !dbg !5143
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5143
  %147 = bitcast i8* %146 to i32*, !dbg !5143
  store i32* %147, i32** %23, align 8, !dbg !5144
  %148 = load i32*, i32** %23, align 8, !dbg !5145
  %149 = icmp eq i32* %148, null, !dbg !5147
  br i1 %149, label %150, label %156, !dbg !5148

; <label>:150:                                    ; preds = %137
  %151 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5149
  %152 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5151
  %153 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %152, i32 0, i32 0, !dbg !5152
  %154 = load i32, i32* %153, align 8, !dbg !5152
  %155 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %151, i32 3, i32 %154, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13.131, i32 0, i32 0)), !dbg !5153
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5154
  br label %1237, !dbg !5154

; <label>:156:                                    ; preds = %137
  br label %157, !dbg !5155

; <label>:157:                                    ; preds = %156, %122
  br label %158

; <label>:158:                                    ; preds = %157, %121
  %159 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5156
  %160 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5157
  %161 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %160, i32 0, i32 4, !dbg !5158
  %162 = load i32, i32* %161, align 8, !dbg !5158
  %163 = call %struct.Jbig2SymbolDict* @jbig2_sd_new(%struct._Jbig2Ctx.11* %159, i32 %162), !dbg !5159
  store %struct.Jbig2SymbolDict* %163, %struct.Jbig2SymbolDict** %16, align 8, !dbg !5160
  br label %164, !dbg !5161

; <label>:164:                                    ; preds = %990, %158
  %165 = load i32, i32* %19, align 4, !dbg !5162
  %166 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5163
  %167 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %166, i32 0, i32 4, !dbg !5164
  %168 = load i32, i32* %167, align 8, !dbg !5164
  %169 = icmp ult i32 %165, %168, !dbg !5165
  br i1 %169, label %170, label %991, !dbg !5161

; <label>:170:                                    ; preds = %164
  call void @llvm.dbg.declare(metadata i32* %41, metadata !5166, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.declare(metadata i32* %42, metadata !5169, metadata !DIExpression()), !dbg !5170
  %171 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5171
  %172 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %171, i32 0, i32 0, !dbg !5173
  %173 = load i32, i32* %172, align 8, !dbg !5173
  %174 = icmp ne i32 %173, 0, !dbg !5171
  br i1 %174, label %175, label %181, !dbg !5174

; <label>:175:                                    ; preds = %170
  %176 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5175
  %177 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5177
  %178 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %177, i32 0, i32 6, !dbg !5178
  %179 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %178, align 8, !dbg !5178
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5179
  %180 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %176, %struct._Jbig2HuffmanTable* %179, i32* %36), !dbg !5179
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5180
  store i32 %180, i32* %41, align 4, !dbg !5180
  br label %185, !dbg !5181

; <label>:181:                                    ; preds = %170
  %182 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %29, align 8, !dbg !5182
  %183 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5184
  %184 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %182, %struct._Jbig2ArithState* %183, i32* %41), !dbg !5185
  store i32 %184, i32* %36, align 4, !dbg !5186
  br label %185

; <label>:185:                                    ; preds = %181, %175
  %186 = load i32, i32* %36, align 4, !dbg !5187
  %187 = icmp ne i32 %186, 0, !dbg !5189
  br i1 %187, label %188, label %195, !dbg !5190

; <label>:188:                                    ; preds = %185
  %189 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5191
  %190 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5193
  %191 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %190, i32 0, i32 0, !dbg !5194
  %192 = load i32, i32* %191, align 8, !dbg !5194
  %193 = load i32, i32* %36, align 4, !dbg !5195
  %194 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %189, i32 2, i32 %192, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.14.132, i32 0, i32 0), i32 %193), !dbg !5196
  br label %195, !dbg !5197

; <label>:195:                                    ; preds = %188, %185
  %196 = load i32, i32* %18, align 4, !dbg !5198
  %197 = load i32, i32* %41, align 4, !dbg !5199
  %198 = add nsw i32 %196, %197, !dbg !5200
  store i32 %198, i32* %18, align 4, !dbg !5201
  store i32 0, i32* %20, align 4, !dbg !5202
  store i32 0, i32* %21, align 4, !dbg !5203
  %199 = load i32, i32* %19, align 4, !dbg !5204
  store i32 %199, i32* %22, align 4, !dbg !5205
  %200 = load i32, i32* %18, align 4, !dbg !5206
  %201 = icmp slt i32 %200, 0, !dbg !5208
  br i1 %201, label %202, label %208, !dbg !5209

; <label>:202:                                    ; preds = %195
  %203 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5210
  %204 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5212
  %205 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %204, i32 0, i32 0, !dbg !5213
  %206 = load i32, i32* %205, align 8, !dbg !5213
  %207 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %203, i32 3, i32 %206, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.133, i32 0, i32 0)), !dbg !5214
  store i32 %207, i32* %36, align 4, !dbg !5215
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5216
  br label %1237, !dbg !5216

; <label>:208:                                    ; preds = %195
  %209 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5217
  %210 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5218
  %211 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %210, i32 0, i32 0, !dbg !5219
  %212 = load i32, i32* %211, align 8, !dbg !5219
  %213 = load i32, i32* %18, align 4, !dbg !5220
  %214 = load i32, i32* %19, align 4, !dbg !5221
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5222
  %215 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %209, i32 0, i32 %212, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.16.134, i32 0, i32 0), i32 %213, i32 %214), !dbg !5222
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5223
  br label %216, !dbg !5223

; <label>:216:                                    ; preds = %786, %208
  %217 = load i32, i32* %19, align 4, !dbg !5224
  %218 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5229
  %219 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %218, i32 0, i32 4, !dbg !5230
  %220 = load i32, i32* %219, align 8, !dbg !5230
  %221 = icmp ugt i32 %217, %220, !dbg !5231
  br i1 %221, label %222, label %229, !dbg !5232

; <label>:222:                                    ; preds = %216
  %223 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5233
  %224 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5235
  %225 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %224, i32 0, i32 0, !dbg !5236
  %226 = load i32, i32* %225, align 8, !dbg !5236
  %227 = load i32, i32* %18, align 4, !dbg !5237
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5238
  %228 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %223, i32 2, i32 %226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.135, i32 0, i32 0), i32 %227), !dbg !5238
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5239
  br label %800, !dbg !5239

; <label>:229:                                    ; preds = %216
  %230 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5240
  %231 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %230, i32 0, i32 0, !dbg !5242
  %232 = load i32, i32* %231, align 8, !dbg !5242
  %233 = icmp ne i32 %232, 0, !dbg !5240
  br i1 %233, label %234, label %240, !dbg !5243

; <label>:234:                                    ; preds = %229
  %235 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5244
  %236 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5246
  %237 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %236, i32 0, i32 7, !dbg !5247
  %238 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %237, align 8, !dbg !5247
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5248
  %239 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %235, %struct._Jbig2HuffmanTable* %238, i32* %36), !dbg !5248
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5249
  store i32 %239, i32* %42, align 4, !dbg !5249
  br label %244, !dbg !5250

; <label>:240:                                    ; preds = %229
  %241 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %30, align 8, !dbg !5251
  %242 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5253
  %243 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %241, %struct._Jbig2ArithState* %242, i32* %42), !dbg !5254
  store i32 %243, i32* %36, align 4, !dbg !5255
  br label %244

; <label>:244:                                    ; preds = %240, %234
  %245 = load i32, i32* %36, align 4, !dbg !5256
  %246 = icmp eq i32 %245, 1, !dbg !5258
  br i1 %246, label %247, label %254, !dbg !5259

; <label>:247:                                    ; preds = %244
  %248 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5260
  %249 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5262
  %250 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %249, i32 0, i32 0, !dbg !5263
  %251 = load i32, i32* %250, align 8, !dbg !5263
  %252 = load i32, i32* %18, align 4, !dbg !5264
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5265
  %253 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %248, i32 0, i32 %251, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18.136, i32 0, i32 0), i32 %252), !dbg !5265
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5266
  br label %800, !dbg !5266

; <label>:254:                                    ; preds = %244
  %255 = load i32, i32* %20, align 4, !dbg !5267
  %256 = load i32, i32* %42, align 4, !dbg !5268
  %257 = add nsw i32 %255, %256, !dbg !5269
  store i32 %257, i32* %20, align 4, !dbg !5270
  %258 = load i32, i32* %21, align 4, !dbg !5271
  %259 = load i32, i32* %20, align 4, !dbg !5272
  %260 = add nsw i32 %258, %259, !dbg !5273
  store i32 %260, i32* %21, align 4, !dbg !5274
  %261 = load i32, i32* %20, align 4, !dbg !5275
  %262 = icmp slt i32 %261, 0, !dbg !5277
  br i1 %262, label %263, label %272, !dbg !5278

; <label>:263:                                    ; preds = %254
  %264 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5279
  %265 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5281
  %266 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %265, i32 0, i32 0, !dbg !5282
  %267 = load i32, i32* %266, align 8, !dbg !5282
  %268 = load i32, i32* %20, align 4, !dbg !5283
  %269 = load i32, i32* %19, align 4, !dbg !5284
  %270 = add i32 %269, 1, !dbg !5285
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5286
  %271 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %264, i32 3, i32 %267, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19.137, i32 0, i32 0), i32 %268, i32 %270), !dbg !5286
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5287
  store i32 %271, i32* %36, align 4, !dbg !5287
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5288
  br label %1237, !dbg !5288

; <label>:272:                                    ; preds = %254
  %273 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5289
  %274 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %273, i32 0, i32 0, !dbg !5291
  %275 = load i32, i32* %274, align 8, !dbg !5291
  %276 = icmp ne i32 %275, 0, !dbg !5289
  br i1 %276, label %277, label %282, !dbg !5292

; <label>:277:                                    ; preds = %272
  %278 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5293
  %279 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %278, i32 0, i32 1, !dbg !5294
  %280 = load i32, i32* %279, align 4, !dbg !5294
  %281 = icmp ne i32 %280, 0, !dbg !5293
  br i1 %281, label %282, label %770, !dbg !5295

; <label>:282:                                    ; preds = %277, %272
  %283 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5296
  %284 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %283, i32 0, i32 1, !dbg !5299
  %285 = load i32, i32* %284, align 4, !dbg !5299
  %286 = icmp ne i32 %285, 0, !dbg !5296
  br i1 %286, label %325, label %287, !dbg !5300

; <label>:287:                                    ; preds = %282
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams* %43, metadata !5301, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %44, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %45, metadata !5315, metadata !DIExpression()), !dbg !5316
  %288 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %43, i32 0, i32 0, !dbg !5317
  store i32 0, i32* %288, align 4, !dbg !5318
  %289 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5319
  %290 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %289, i32 0, i32 10, !dbg !5320
  %291 = load i32, i32* %290, align 8, !dbg !5320
  %292 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %43, i32 0, i32 1, !dbg !5321
  store i32 %291, i32* %292, align 4, !dbg !5322
  %293 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %43, i32 0, i32 2, !dbg !5323
  store i32 0, i32* %293, align 4, !dbg !5324
  %294 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %43, i32 0, i32 3, !dbg !5325
  store i32 0, i32* %294, align 4, !dbg !5326
  %295 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5327
  %296 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %295, i32 0, i32 10, !dbg !5328
  %297 = load i32, i32* %296, align 8, !dbg !5328
  %298 = icmp eq i32 %297, 0, !dbg !5329
  %299 = zext i1 %298 to i64, !dbg !5327
  %300 = select i1 %298, i32 8, i32 2, !dbg !5327
  store i32 %300, i32* %44, align 4, !dbg !5330
  %301 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %43, i32 0, i32 4, !dbg !5331
  %302 = getelementptr inbounds [8 x i8], [8 x i8]* %301, i32 0, i32 0, !dbg !5332
  %303 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5333
  %304 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %303, i32 0, i32 11, !dbg !5334
  %305 = getelementptr inbounds [8 x i8], [8 x i8]* %304, i32 0, i32 0, !dbg !5332
  %306 = load i32, i32* %44, align 4, !dbg !5335
  %307 = sext i32 %306 to i64, !dbg !5335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %305, i64 %307, i1 false), !dbg !5332
  %308 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5336
  %309 = load i32, i32* %20, align 4, !dbg !5337
  %310 = load i32, i32* %18, align 4, !dbg !5338
  %311 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %308, i32 %309, i32 %310), !dbg !5339
  store %struct._Jbig2Image* %311, %struct._Jbig2Image** %45, align 8, !dbg !5340
  %312 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5341
  %313 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5342
  %314 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5343
  %315 = load %struct._Jbig2Image*, %struct._Jbig2Image** %45, align 8, !dbg !5344
  %316 = load i8*, i8** %14, align 8, !dbg !5345
  %317 = call i32 @jbig2_decode_generic_region(%struct._Jbig2Ctx.11* %312, %struct._Jbig2Segment* %313, %struct.Jbig2GenericRegionParams* %43, %struct._Jbig2ArithState* %314, %struct._Jbig2Image* %315, i8* %316), !dbg !5346
  store i32 %317, i32* %36, align 4, !dbg !5347
  %318 = load %struct._Jbig2Image*, %struct._Jbig2Image** %45, align 8, !dbg !5348
  %319 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !5349
  %320 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %319, i32 0, i32 1, !dbg !5350
  %321 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %320, align 8, !dbg !5350
  %322 = load i32, i32* %19, align 4, !dbg !5351
  %323 = zext i32 %322 to i64, !dbg !5349
  %324 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %321, i64 %323, !dbg !5349
  store %struct._Jbig2Image* %318, %struct._Jbig2Image** %324, align 8, !dbg !5352
  br label %769, !dbg !5353

; <label>:325:                                    ; preds = %282
  call void @llvm.dbg.declare(metadata i32* %46, metadata !5354, metadata !DIExpression()), !dbg !5356
  %326 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5357
  %327 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %326, i32 0, i32 0, !dbg !5359
  %328 = load i32, i32* %327, align 8, !dbg !5359
  %329 = icmp ne i32 %328, 0, !dbg !5357
  br i1 %329, label %330, label %336, !dbg !5360

; <label>:330:                                    ; preds = %325
  %331 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5361
  %332 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5363
  %333 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %332, i32 0, i32 9, !dbg !5364
  %334 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %333, align 8, !dbg !5364
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5365
  %335 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %331, %struct._Jbig2HuffmanTable* %334, i32* %36), !dbg !5365
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5366
  store i32 %335, i32* %46, align 4, !dbg !5366
  br label %340, !dbg !5367

; <label>:336:                                    ; preds = %325
  %337 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %32, align 8, !dbg !5368
  %338 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5370
  %339 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %337, %struct._Jbig2ArithState* %338, i32* %46), !dbg !5371
  store i32 %339, i32* %36, align 4, !dbg !5372
  br label %340

; <label>:340:                                    ; preds = %336, %330
  %341 = load i32, i32* %36, align 4, !dbg !5373
  %342 = icmp ne i32 %341, 0, !dbg !5373
  br i1 %342, label %346, label %343, !dbg !5375

; <label>:343:                                    ; preds = %340
  %344 = load i32, i32* %46, align 4, !dbg !5376
  %345 = icmp sle i32 %344, 0, !dbg !5377
  br i1 %345, label %346, label %352, !dbg !5378

; <label>:346:                                    ; preds = %343, %340
  %347 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5379
  %348 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5381
  %349 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %348, i32 0, i32 0, !dbg !5382
  %350 = load i32, i32* %349, align 8, !dbg !5382
  %351 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %347, i32 3, i32 %350, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20.138, i32 0, i32 0)), !dbg !5383
  store i32 %351, i32* %36, align 4, !dbg !5384
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5385
  br label %1237, !dbg !5385

; <label>:352:                                    ; preds = %343
  %353 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5386
  %354 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5387
  %355 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %354, i32 0, i32 0, !dbg !5388
  %356 = load i32, i32* %355, align 8, !dbg !5388
  %357 = load i32, i32* %46, align 4, !dbg !5389
  %358 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %353, i32 0, i32 %356, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.139, i32 0, i32 0), i32 %357), !dbg !5390
  %359 = load i32, i32* %46, align 4, !dbg !5391
  %360 = icmp ugt i32 %359, 1, !dbg !5393
  br i1 %360, label %361, label %659, !dbg !5394

; <label>:361:                                    ; preds = %352
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %47, metadata !5395, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.declare(metadata i32* %48, metadata !5398, metadata !DIExpression()), !dbg !5399
  %362 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5400
  %363 = icmp eq %struct.Jbig2TextRegionParams* %362, null, !dbg !5402
  br i1 %363, label %364, label %589, !dbg !5403

; <label>:364:                                    ; preds = %361
  %365 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5404
  %366 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %365, i32 0, i32 0, !dbg !5406
  %367 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %366, align 8, !dbg !5406
  %368 = load i32, i32* %38, align 4, !dbg !5407
  %369 = sext i32 %368 to i64, !dbg !5407
  %370 = mul i64 8, %369, !dbg !5408
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5409
  %371 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %367, i64 %370), !dbg !5409
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5409
  %372 = bitcast i8* %371 to %struct.Jbig2SymbolDict**, !dbg !5409
  store %struct.Jbig2SymbolDict** %372, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5410
  %373 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5411
  %374 = icmp eq %struct.Jbig2SymbolDict** %373, null, !dbg !5413
  br i1 %374, label %375, label %381, !dbg !5414

; <label>:375:                                    ; preds = %364
  %376 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5415
  %377 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5417
  %378 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %377, i32 0, i32 0, !dbg !5418
  %379 = load i32, i32* %378, align 8, !dbg !5418
  %380 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %376, i32 3, i32 %379, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.140, i32 0, i32 0)), !dbg !5419
  store i32 %380, i32* %36, align 4, !dbg !5420
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5421
  br label %1237, !dbg !5421

; <label>:381:                                    ; preds = %364
  %382 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5422
  %383 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5423
  %384 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %383, i32 0, i32 2, !dbg !5424
  %385 = load i32, i32* %384, align 8, !dbg !5424
  %386 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5425
  %387 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %386, i32 0, i32 4, !dbg !5426
  %388 = load i32, i32* %387, align 8, !dbg !5426
  %389 = add i32 %385, %388, !dbg !5427
  %390 = call %struct.Jbig2SymbolDict* @jbig2_sd_new(%struct._Jbig2Ctx.11* %382, i32 %389), !dbg !5428
  %391 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5429
  %392 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %391, i64 0, !dbg !5429
  store %struct.Jbig2SymbolDict* %390, %struct.Jbig2SymbolDict** %392, align 8, !dbg !5430
  %393 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5431
  %394 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %393, i64 0, !dbg !5431
  %395 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %394, align 8, !dbg !5431
  %396 = icmp eq %struct.Jbig2SymbolDict* %395, null, !dbg !5433
  br i1 %396, label %397, label %408, !dbg !5434

; <label>:397:                                    ; preds = %381
  %398 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5435
  %399 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5437
  %400 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %399, i32 0, i32 0, !dbg !5438
  %401 = load i32, i32* %400, align 8, !dbg !5438
  %402 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %398, i32 3, i32 %401, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23.141, i32 0, i32 0)), !dbg !5439
  store i32 %402, i32* %36, align 4, !dbg !5440
  %403 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5441
  %404 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %403, i32 0, i32 0, !dbg !5442
  %405 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %404, align 8, !dbg !5442
  %406 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5443
  %407 = bitcast %struct.Jbig2SymbolDict** %406 to i8*, !dbg !5443
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %405, i8* %407), !dbg !5444
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5445
  br label %1237, !dbg !5445

; <label>:408:                                    ; preds = %381
  %409 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5446
  %410 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %409, i32 0, i32 2, !dbg !5447
  %411 = load i32, i32* %410, align 8, !dbg !5447
  %412 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5448
  %413 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %412, i32 0, i32 4, !dbg !5449
  %414 = load i32, i32* %413, align 8, !dbg !5449
  %415 = add i32 %411, %414, !dbg !5450
  %416 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5451
  %417 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %416, i64 0, !dbg !5451
  %418 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %417, align 8, !dbg !5451
  %419 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %418, i32 0, i32 0, !dbg !5452
  store i32 %415, i32* %419, align 8, !dbg !5453
  store i32 0, i32* %48, align 4, !dbg !5454
  br label %420, !dbg !5456

; <label>:420:                                    ; preds = %446, %408
  %421 = load i32, i32* %48, align 4, !dbg !5457
  %422 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5459
  %423 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %422, i32 0, i32 2, !dbg !5460
  %424 = load i32, i32* %423, align 8, !dbg !5460
  %425 = icmp slt i32 %421, %424, !dbg !5461
  br i1 %425, label %426, label %449, !dbg !5462

; <label>:426:                                    ; preds = %420
  %427 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5463
  %428 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5465
  %429 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %428, i32 0, i32 3, !dbg !5466
  %430 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %429, align 8, !dbg !5466
  %431 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %430, i32 0, i32 1, !dbg !5467
  %432 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %431, align 8, !dbg !5467
  %433 = load i32, i32* %48, align 4, !dbg !5468
  %434 = sext i32 %433 to i64, !dbg !5465
  %435 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %432, i64 %434, !dbg !5465
  %436 = load %struct._Jbig2Image*, %struct._Jbig2Image** %435, align 8, !dbg !5465
  %437 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %427, %struct._Jbig2Image* %436), !dbg !5469
  %438 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5470
  %439 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %438, i64 0, !dbg !5470
  %440 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %439, align 8, !dbg !5470
  %441 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %440, i32 0, i32 1, !dbg !5471
  %442 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %441, align 8, !dbg !5471
  %443 = load i32, i32* %48, align 4, !dbg !5472
  %444 = sext i32 %443 to i64, !dbg !5470
  %445 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %442, i64 %444, !dbg !5470
  store %struct._Jbig2Image* %437, %struct._Jbig2Image** %445, align 8, !dbg !5473
  br label %446, !dbg !5474

; <label>:446:                                    ; preds = %426
  %447 = load i32, i32* %48, align 4, !dbg !5475
  %448 = add nsw i32 %447, 1, !dbg !5475
  store i32 %448, i32* %48, align 4, !dbg !5475
  br label %420, !dbg !5476, !llvm.loop !5477

; <label>:449:                                    ; preds = %420
  %450 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5479
  %451 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %450, i32 0, i32 0, !dbg !5480
  %452 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %451, align 8, !dbg !5480
  %453 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %452, i64 192), !dbg !5481
  %454 = bitcast i8* %453 to %struct.Jbig2TextRegionParams*, !dbg !5481
  store %struct.Jbig2TextRegionParams* %454, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5482
  %455 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5483
  %456 = icmp eq %struct.Jbig2TextRegionParams* %455, null, !dbg !5485
  br i1 %456, label %457, label %472, !dbg !5486

; <label>:457:                                    ; preds = %449
  %458 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5487
  %459 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5489
  %460 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %459, i32 0, i32 0, !dbg !5490
  %461 = load i32, i32* %460, align 8, !dbg !5490
  %462 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %458, i32 3, i32 %461, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24.142, i32 0, i32 0)), !dbg !5491
  store i32 %462, i32* %36, align 4, !dbg !5492
  %463 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5493
  %464 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5494
  %465 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %464, i64 0, !dbg !5494
  %466 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %465, align 8, !dbg !5494
  call void @jbig2_sd_release(%struct._Jbig2Ctx.11* %463, %struct.Jbig2SymbolDict* %466), !dbg !5495
  %467 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5496
  %468 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %467, i32 0, i32 0, !dbg !5497
  %469 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %468, align 8, !dbg !5497
  %470 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5498
  %471 = bitcast %struct.Jbig2SymbolDict** %470 to i8*, !dbg !5498
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %469, i8* %471), !dbg !5499
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5500
  br label %1237, !dbg !5500

; <label>:472:                                    ; preds = %449
  %473 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5501
  %474 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %473, i32 0, i32 0, !dbg !5503
  %475 = load i32, i32* %474, align 8, !dbg !5503
  %476 = icmp ne i32 %475, 0, !dbg !5501
  br i1 %476, label %535, label %477, !dbg !5504

; <label>:477:                                    ; preds = %472
  %478 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5505
  %479 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %478), !dbg !5507
  %480 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5508
  %481 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %480, i32 0, i32 18, !dbg !5509
  store %struct._Jbig2ArithIntCtx* %479, %struct._Jbig2ArithIntCtx** %481, align 8, !dbg !5510
  %482 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5511
  %483 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %482), !dbg !5512
  %484 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5513
  %485 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %484, i32 0, i32 19, !dbg !5514
  store %struct._Jbig2ArithIntCtx* %483, %struct._Jbig2ArithIntCtx** %485, align 8, !dbg !5515
  %486 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5516
  %487 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %486), !dbg !5517
  %488 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5518
  %489 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %488, i32 0, i32 20, !dbg !5519
  store %struct._Jbig2ArithIntCtx* %487, %struct._Jbig2ArithIntCtx** %489, align 8, !dbg !5520
  %490 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5521
  %491 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %490), !dbg !5522
  %492 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5523
  %493 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %492, i32 0, i32 21, !dbg !5524
  store %struct._Jbig2ArithIntCtx* %491, %struct._Jbig2ArithIntCtx** %493, align 8, !dbg !5525
  store i32 0, i32* %24, align 4, !dbg !5526
  br label %494, !dbg !5528

; <label>:494:                                    ; preds = %506, %477
  %495 = load i32, i32* %24, align 4, !dbg !5529
  %496 = shl i32 1, %495, !dbg !5531
  %497 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5532
  %498 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %497, i32 0, i32 2, !dbg !5533
  %499 = load i32, i32* %498, align 8, !dbg !5533
  %500 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5534
  %501 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %500, i32 0, i32 4, !dbg !5535
  %502 = load i32, i32* %501, align 8, !dbg !5535
  %503 = add i32 %499, %502, !dbg !5536
  %504 = icmp slt i32 %496, %503, !dbg !5537
  br i1 %504, label %505, label %509, !dbg !5538

; <label>:505:                                    ; preds = %494
  br label %506, !dbg !5538

; <label>:506:                                    ; preds = %505
  %507 = load i32, i32* %24, align 4, !dbg !5539
  %508 = add nsw i32 %507, 1, !dbg !5539
  store i32 %508, i32* %24, align 4, !dbg !5539
  br label %494, !dbg !5540, !llvm.loop !5541

; <label>:509:                                    ; preds = %494
  %510 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5543
  %511 = load i32, i32* %24, align 4, !dbg !5544
  %512 = call %struct._Jbig2ArithIaidCtx* @jbig2_arith_iaid_ctx_new(%struct._Jbig2Ctx.11* %510, i32 %511), !dbg !5545
  %513 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5546
  %514 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %513, i32 0, i32 22, !dbg !5547
  store %struct._Jbig2ArithIaidCtx* %512, %struct._Jbig2ArithIaidCtx** %514, align 8, !dbg !5548
  %515 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5549
  %516 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %515), !dbg !5550
  %517 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5551
  %518 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %517, i32 0, i32 23, !dbg !5552
  store %struct._Jbig2ArithIntCtx* %516, %struct._Jbig2ArithIntCtx** %518, align 8, !dbg !5553
  %519 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5554
  %520 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %519), !dbg !5555
  %521 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5556
  %522 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %521, i32 0, i32 24, !dbg !5557
  store %struct._Jbig2ArithIntCtx* %520, %struct._Jbig2ArithIntCtx** %522, align 8, !dbg !5558
  %523 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5559
  %524 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %523), !dbg !5560
  %525 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5561
  %526 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %525, i32 0, i32 25, !dbg !5562
  store %struct._Jbig2ArithIntCtx* %524, %struct._Jbig2ArithIntCtx** %526, align 8, !dbg !5563
  %527 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5564
  %528 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %527), !dbg !5565
  %529 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5566
  %530 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %529, i32 0, i32 26, !dbg !5567
  store %struct._Jbig2ArithIntCtx* %528, %struct._Jbig2ArithIntCtx** %530, align 8, !dbg !5568
  %531 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5569
  %532 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %531), !dbg !5570
  %533 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5571
  %534 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %533, i32 0, i32 27, !dbg !5572
  store %struct._Jbig2ArithIntCtx* %532, %struct._Jbig2ArithIntCtx** %534, align 8, !dbg !5573
  br label %564, !dbg !5574

; <label>:535:                                    ; preds = %472
  %536 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5575
  %537 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %536, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_F), !dbg !5577
  %538 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5578
  %539 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %538, i32 0, i32 10, !dbg !5579
  store %struct._Jbig2HuffmanTable* %537, %struct._Jbig2HuffmanTable** %539, align 8, !dbg !5580
  %540 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5581
  %541 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %540, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_H), !dbg !5582
  %542 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5583
  %543 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %542, i32 0, i32 11, !dbg !5584
  store %struct._Jbig2HuffmanTable* %541, %struct._Jbig2HuffmanTable** %543, align 8, !dbg !5585
  %544 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5586
  %545 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %544, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_K), !dbg !5587
  %546 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5588
  %547 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %546, i32 0, i32 12, !dbg !5589
  store %struct._Jbig2HuffmanTable* %545, %struct._Jbig2HuffmanTable** %547, align 8, !dbg !5590
  %548 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5591
  %549 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %548, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !5592
  %550 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5593
  %551 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %550, i32 0, i32 13, !dbg !5594
  store %struct._Jbig2HuffmanTable* %549, %struct._Jbig2HuffmanTable** %551, align 8, !dbg !5595
  %552 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5596
  %553 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %552, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !5597
  %554 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5598
  %555 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %554, i32 0, i32 14, !dbg !5599
  store %struct._Jbig2HuffmanTable* %553, %struct._Jbig2HuffmanTable** %555, align 8, !dbg !5600
  %556 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5601
  %557 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %556, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !5602
  %558 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5603
  %559 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %558, i32 0, i32 15, !dbg !5604
  store %struct._Jbig2HuffmanTable* %557, %struct._Jbig2HuffmanTable** %559, align 8, !dbg !5605
  %560 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5606
  %561 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %560, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !5607
  %562 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5608
  %563 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %562, i32 0, i32 16, !dbg !5609
  store %struct._Jbig2HuffmanTable* %561, %struct._Jbig2HuffmanTable** %563, align 8, !dbg !5610
  br label %564

; <label>:564:                                    ; preds = %535, %509
  %565 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5611
  %566 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %565, i32 0, i32 0, !dbg !5612
  %567 = load i32, i32* %566, align 8, !dbg !5612
  %568 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5613
  %569 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %568, i32 0, i32 0, !dbg !5614
  store i32 %567, i32* %569, align 8, !dbg !5615
  %570 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5616
  %571 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %570, i32 0, i32 1, !dbg !5617
  store i32 1, i32* %571, align 4, !dbg !5618
  %572 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5619
  %573 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %572, i32 0, i32 9, !dbg !5620
  store i32 1, i32* %573, align 4, !dbg !5621
  %574 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5622
  %575 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %574, i32 0, i32 2, !dbg !5623
  store i32 0, i32* %575, align 8, !dbg !5624
  %576 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5625
  %577 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %576, i32 0, i32 3, !dbg !5626
  store i32 0, i32* %577, align 4, !dbg !5627
  %578 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5628
  %579 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %578, i32 0, i32 4, !dbg !5629
  store i32 0, i32* %579, align 8, !dbg !5630
  %580 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5631
  %581 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %580, i32 0, i32 5, !dbg !5632
  store i32 1, i32* %581, align 4, !dbg !5633
  %582 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5634
  %583 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %582, i32 0, i32 6, !dbg !5635
  store i32 0, i32* %583, align 8, !dbg !5636
  %584 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5637
  %585 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %584, i32 0, i32 12, !dbg !5638
  %586 = load i32, i32* %585, align 4, !dbg !5638
  %587 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5639
  %588 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %587, i32 0, i32 28, !dbg !5640
  store i32 %586, i32* %588, align 8, !dbg !5641
  br label %589, !dbg !5642

; <label>:589:                                    ; preds = %564, %361
  %590 = load i32, i32* %46, align 4, !dbg !5643
  %591 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5644
  %592 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %591, i32 0, i32 7, !dbg !5645
  store i32 %590, i32* %592, align 4, !dbg !5646
  %593 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5647
  %594 = load i32, i32* %20, align 4, !dbg !5648
  %595 = load i32, i32* %18, align 4, !dbg !5649
  %596 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %593, i32 %594, i32 %595), !dbg !5650
  store %struct._Jbig2Image* %596, %struct._Jbig2Image** %47, align 8, !dbg !5651
  %597 = load %struct._Jbig2Image*, %struct._Jbig2Image** %47, align 8, !dbg !5652
  %598 = icmp eq %struct._Jbig2Image* %597, null, !dbg !5654
  br i1 %598, label %599, label %619, !dbg !5655

; <label>:599:                                    ; preds = %589
  %600 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5656
  %601 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5658
  %602 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %601, i32 0, i32 0, !dbg !5659
  %603 = load i32, i32* %602, align 8, !dbg !5659
  %604 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %600, i32 3, i32 %603, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.143, i32 0, i32 0)), !dbg !5660
  store i32 %604, i32* %36, align 4, !dbg !5661
  %605 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5662
  %606 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %605, i32 0, i32 0, !dbg !5663
  %607 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %606, align 8, !dbg !5663
  %608 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5664
  %609 = bitcast %struct.Jbig2TextRegionParams* %608 to i8*, !dbg !5664
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %607, i8* %609), !dbg !5665
  %610 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5666
  %611 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5667
  %612 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %611, i64 0, !dbg !5667
  %613 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %612, align 8, !dbg !5667
  call void @jbig2_sd_release(%struct._Jbig2Ctx.11* %610, %struct.Jbig2SymbolDict* %613), !dbg !5668
  %614 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5669
  %615 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %614, i32 0, i32 0, !dbg !5670
  %616 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %615, align 8, !dbg !5670
  %617 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5671
  %618 = bitcast %struct.Jbig2SymbolDict** %617 to i8*, !dbg !5671
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %616, i8* %618), !dbg !5672
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5673
  br label %1237, !dbg !5673

; <label>:619:                                    ; preds = %589
  %620 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5674
  %621 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5675
  %622 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !5676
  %623 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5677
  %624 = load i32, i32* %38, align 4, !dbg !5678
  %625 = load %struct._Jbig2Image*, %struct._Jbig2Image** %47, align 8, !dbg !5679
  %626 = load i8*, i8** %12, align 8, !dbg !5680
  %627 = load i64, i64* %13, align 8, !dbg !5681
  %628 = load i8*, i8** %15, align 8, !dbg !5682
  %629 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5683
  %630 = call i32 @jbig2_decode_text_region(%struct._Jbig2Ctx.11* %620, %struct._Jbig2Segment* %621, %struct.Jbig2TextRegionParams* %622, %struct.Jbig2SymbolDict** %623, i32 %624, %struct._Jbig2Image* %625, i8* %626, i64 %627, i8* %628, %struct._Jbig2ArithState* %629, %struct._Jbig2WordStream* null), !dbg !5684
  %631 = load %struct._Jbig2Image*, %struct._Jbig2Image** %47, align 8, !dbg !5685
  %632 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !5686
  %633 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %632, i32 0, i32 1, !dbg !5687
  %634 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %633, align 8, !dbg !5687
  %635 = load i32, i32* %19, align 4, !dbg !5688
  %636 = zext i32 %635 to i64, !dbg !5686
  %637 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %634, i64 %636, !dbg !5686
  store %struct._Jbig2Image* %631, %struct._Jbig2Image** %637, align 8, !dbg !5689
  %638 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5690
  %639 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !5691
  %640 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %639, i32 0, i32 1, !dbg !5692
  %641 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %640, align 8, !dbg !5692
  %642 = load i32, i32* %19, align 4, !dbg !5693
  %643 = zext i32 %642 to i64, !dbg !5691
  %644 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %641, i64 %643, !dbg !5691
  %645 = load %struct._Jbig2Image*, %struct._Jbig2Image** %644, align 8, !dbg !5691
  %646 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %638, %struct._Jbig2Image* %645), !dbg !5694
  %647 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !5695
  %648 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %647, i64 0, !dbg !5695
  %649 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %648, align 8, !dbg !5695
  %650 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %649, i32 0, i32 1, !dbg !5696
  %651 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %650, align 8, !dbg !5696
  %652 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5697
  %653 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %652, i32 0, i32 2, !dbg !5698
  %654 = load i32, i32* %653, align 8, !dbg !5698
  %655 = load i32, i32* %19, align 4, !dbg !5699
  %656 = add i32 %654, %655, !dbg !5700
  %657 = zext i32 %656 to i64, !dbg !5695
  %658 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %651, i64 %657, !dbg !5695
  store %struct._Jbig2Image* %646, %struct._Jbig2Image** %658, align 8, !dbg !5701
  br label %768, !dbg !5702

; <label>:659:                                    ; preds = %352
  call void @llvm.dbg.declare(metadata %struct.Jbig2RefinementRegionParams* %49, metadata !5703, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %50, metadata !5715, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.declare(metadata i32* %51, metadata !5717, metadata !DIExpression()), !dbg !5718
  call void @llvm.dbg.declare(metadata i32* %52, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata i32* %53, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata i32* %54, metadata !5723, metadata !DIExpression()), !dbg !5724
  %660 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5725
  %661 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %660, i32 0, i32 3, !dbg !5726
  %662 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %661, align 8, !dbg !5726
  %663 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %662, i32 0, i32 0, !dbg !5727
  %664 = load i32, i32* %663, align 8, !dbg !5727
  store i32 %664, i32* %54, align 4, !dbg !5724
  %665 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5728
  %666 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %665, i32 0, i32 0, !dbg !5730
  %667 = load i32, i32* %666, align 8, !dbg !5730
  %668 = icmp ne i32 %667, 0, !dbg !5728
  br i1 %668, label %669, label %679, !dbg !5731

; <label>:669:                                    ; preds = %659
  %670 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5732
  %671 = load i32, i32* %24, align 4, !dbg !5734
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5735
  %672 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %670, i32 %671), !dbg !5735
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5736
  store i32 %672, i32* %51, align 4, !dbg !5736
  %673 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5737
  %674 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %27, align 8, !dbg !5738
  %675 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %673, %struct._Jbig2HuffmanTable* %674, i32* %36), !dbg !5739
  store i32 %675, i32* %52, align 4, !dbg !5740
  %676 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5741
  %677 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %27, align 8, !dbg !5742
  %678 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %676, %struct._Jbig2HuffmanTable* %677, i32* %36), !dbg !5743
  store i32 %678, i32* %53, align 4, !dbg !5744
  br label %689, !dbg !5745

; <label>:679:                                    ; preds = %659
  %680 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %33, align 8, !dbg !5746
  %681 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5748
  %682 = call i32 @jbig2_arith_iaid_decode(%struct._Jbig2ArithIaidCtx* %680, %struct._Jbig2ArithState* %681, i32* %51), !dbg !5749
  store i32 %682, i32* %36, align 4, !dbg !5750
  %683 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %34, align 8, !dbg !5751
  %684 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5752
  %685 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %683, %struct._Jbig2ArithState* %684, i32* %52), !dbg !5753
  store i32 %685, i32* %36, align 4, !dbg !5754
  %686 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %35, align 8, !dbg !5755
  %687 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5756
  %688 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %686, %struct._Jbig2ArithState* %687, i32* %53), !dbg !5757
  store i32 %688, i32* %36, align 4, !dbg !5758
  br label %689

; <label>:689:                                    ; preds = %679, %669
  %690 = load i32, i32* %51, align 4, !dbg !5759
  %691 = load i32, i32* %54, align 4, !dbg !5761
  %692 = load i32, i32* %19, align 4, !dbg !5762
  %693 = add i32 %691, %692, !dbg !5763
  %694 = icmp uge i32 %690, %693, !dbg !5764
  br i1 %694, label %695, label %702, !dbg !5765

; <label>:695:                                    ; preds = %689
  %696 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5766
  %697 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5768
  %698 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %697, i32 0, i32 0, !dbg !5769
  %699 = load i32, i32* %698, align 8, !dbg !5769
  %700 = load i32, i32* %51, align 4, !dbg !5770
  %701 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %696, i32 3, i32 %699, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26.144, i32 0, i32 0), i32 %700), !dbg !5771
  store i32 %701, i32* %36, align 4, !dbg !5772
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5773
  br label %1237, !dbg !5773

; <label>:702:                                    ; preds = %689
  %703 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5774
  %704 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5775
  %705 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %704, i32 0, i32 0, !dbg !5776
  %706 = load i32, i32* %705, align 8, !dbg !5776
  %707 = load i32, i32* %51, align 4, !dbg !5777
  %708 = load i32, i32* %52, align 4, !dbg !5778
  %709 = load i32, i32* %53, align 4, !dbg !5779
  %710 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %703, i32 0, i32 %706, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.27.145, i32 0, i32 0), i32 %707, i32 %708, i32 %709), !dbg !5780
  %711 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5781
  %712 = load i32, i32* %20, align 4, !dbg !5782
  %713 = load i32, i32* %18, align 4, !dbg !5783
  %714 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %711, i32 %712, i32 %713), !dbg !5784
  store %struct._Jbig2Image* %714, %struct._Jbig2Image** %50, align 8, !dbg !5785
  %715 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5786
  %716 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %715, i32 0, i32 12, !dbg !5787
  %717 = load i32, i32* %716, align 4, !dbg !5787
  %718 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %49, i32 0, i32 0, !dbg !5788
  store i32 %717, i32* %718, align 8, !dbg !5789
  %719 = load i32, i32* %51, align 4, !dbg !5790
  %720 = load i32, i32* %54, align 4, !dbg !5791
  %721 = icmp ult i32 %719, %720, !dbg !5792
  br i1 %721, label %722, label %732, !dbg !5793

; <label>:722:                                    ; preds = %702
  %723 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5794
  %724 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %723, i32 0, i32 3, !dbg !5795
  %725 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %724, align 8, !dbg !5795
  %726 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %725, i32 0, i32 1, !dbg !5796
  %727 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %726, align 8, !dbg !5796
  %728 = load i32, i32* %51, align 4, !dbg !5797
  %729 = zext i32 %728 to i64, !dbg !5794
  %730 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %727, i64 %729, !dbg !5794
  %731 = load %struct._Jbig2Image*, %struct._Jbig2Image** %730, align 8, !dbg !5794
  br label %742, !dbg !5793

; <label>:732:                                    ; preds = %702
  %733 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !5798
  %734 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %733, i32 0, i32 1, !dbg !5799
  %735 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %734, align 8, !dbg !5799
  %736 = load i32, i32* %51, align 4, !dbg !5800
  %737 = load i32, i32* %54, align 4, !dbg !5801
  %738 = sub i32 %736, %737, !dbg !5802
  %739 = zext i32 %738 to i64, !dbg !5798
  %740 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %735, i64 %739, !dbg !5798
  %741 = load %struct._Jbig2Image*, %struct._Jbig2Image** %740, align 8, !dbg !5798
  br label %742, !dbg !5793

; <label>:742:                                    ; preds = %732, %722
  %743 = phi %struct._Jbig2Image* [ %731, %722 ], [ %741, %732 ], !dbg !5793
  %744 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %49, i32 0, i32 1, !dbg !5803
  store %struct._Jbig2Image* %743, %struct._Jbig2Image** %744, align 8, !dbg !5804
  %745 = load i32, i32* %52, align 4, !dbg !5805
  %746 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %49, i32 0, i32 2, !dbg !5806
  store i32 %745, i32* %746, align 8, !dbg !5807
  %747 = load i32, i32* %53, align 4, !dbg !5808
  %748 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %49, i32 0, i32 3, !dbg !5809
  store i32 %747, i32* %748, align 4, !dbg !5810
  %749 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %49, i32 0, i32 4, !dbg !5811
  store i32 0, i32* %749, align 8, !dbg !5812
  %750 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %49, i32 0, i32 5, !dbg !5813
  %751 = getelementptr inbounds [4 x i8], [4 x i8]* %750, i32 0, i32 0, !dbg !5814
  %752 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5815
  %753 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %752, i32 0, i32 13, !dbg !5816
  %754 = getelementptr inbounds [4 x i8], [4 x i8]* %753, i32 0, i32 0, !dbg !5814
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %751, i8* align 8 %754, i64 4, i1 false), !dbg !5814
  %755 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5817
  %756 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5818
  %757 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !5819
  %758 = load %struct._Jbig2Image*, %struct._Jbig2Image** %50, align 8, !dbg !5820
  %759 = load i8*, i8** %15, align 8, !dbg !5821
  %760 = call i32 @jbig2_decode_refinement_region(%struct._Jbig2Ctx.11* %755, %struct._Jbig2Segment* %756, %struct.Jbig2RefinementRegionParams* %49, %struct._Jbig2ArithState* %757, %struct._Jbig2Image* %758, i8* %759), !dbg !5822
  %761 = load %struct._Jbig2Image*, %struct._Jbig2Image** %50, align 8, !dbg !5823
  %762 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !5824
  %763 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %762, i32 0, i32 1, !dbg !5825
  %764 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %763, align 8, !dbg !5825
  %765 = load i32, i32* %19, align 4, !dbg !5826
  %766 = zext i32 %765 to i64, !dbg !5824
  %767 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %764, i64 %766, !dbg !5824
  store %struct._Jbig2Image* %761, %struct._Jbig2Image** %767, align 8, !dbg !5827
  br label %768

; <label>:768:                                    ; preds = %742, %619
  br label %769

; <label>:769:                                    ; preds = %768, %287
  br label %770, !dbg !5828

; <label>:770:                                    ; preds = %769, %277
  %771 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5829
  %772 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %771, i32 0, i32 0, !dbg !5831
  %773 = load i32, i32* %772, align 8, !dbg !5831
  %774 = icmp ne i32 %773, 0, !dbg !5829
  br i1 %774, label %775, label %786, !dbg !5832

; <label>:775:                                    ; preds = %770
  %776 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5833
  %777 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %776, i32 0, i32 1, !dbg !5834
  %778 = load i32, i32* %777, align 4, !dbg !5834
  %779 = icmp ne i32 %778, 0, !dbg !5833
  br i1 %779, label %786, label %780, !dbg !5835

; <label>:780:                                    ; preds = %775
  %781 = load i32, i32* %20, align 4, !dbg !5836
  %782 = load i32*, i32** %23, align 8, !dbg !5838
  %783 = load i32, i32* %19, align 4, !dbg !5839
  %784 = zext i32 %783 to i64, !dbg !5838
  %785 = getelementptr inbounds i32, i32* %782, i64 %784, !dbg !5838
  store i32 %781, i32* %785, align 4, !dbg !5840
  br label %786, !dbg !5841

; <label>:786:                                    ; preds = %780, %775, %770
  %787 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5842
  %788 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5843
  %789 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %788, i32 0, i32 0, !dbg !5844
  %790 = load i32, i32* %789, align 8, !dbg !5844
  %791 = load i32, i32* %19, align 4, !dbg !5845
  %792 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5846
  %793 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %792, i32 0, i32 4, !dbg !5847
  %794 = load i32, i32* %793, align 8, !dbg !5847
  %795 = load i32, i32* %20, align 4, !dbg !5848
  %796 = load i32, i32* %18, align 4, !dbg !5849
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5850
  %797 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %787, i32 0, i32 %790, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.146, i32 0, i32 0), i32 %791, i32 %794, i32 %795, i32 %796), !dbg !5850
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5851
  %798 = load i32, i32* %19, align 4, !dbg !5851
  %799 = add i32 %798, 1, !dbg !5852
  store i32 %799, i32* %19, align 4, !dbg !5853
  br label %216, !dbg !5854, !llvm.loop !5855

; <label>:800:                                    ; preds = %247, %222
  %801 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5858
  %802 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %801, i32 0, i32 0, !dbg !5860
  %803 = load i32, i32* %802, align 8, !dbg !5860
  %804 = icmp ne i32 %803, 0, !dbg !5858
  br i1 %804, label %805, label %990, !dbg !5861

; <label>:805:                                    ; preds = %800
  %806 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5862
  %807 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %806, i32 0, i32 1, !dbg !5863
  %808 = load i32, i32* %807, align 4, !dbg !5863
  %809 = icmp ne i32 %808, 0, !dbg !5862
  br i1 %809, label %990, label %810, !dbg !5864

; <label>:810:                                    ; preds = %805
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %55, metadata !5865, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.declare(metadata i32* %56, metadata !5868, metadata !DIExpression()), !dbg !5869
  %811 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5870
  %812 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !5871
  %813 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %812, i32 0, i32 8, !dbg !5872
  %814 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %813, align 8, !dbg !5872
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5873
  %815 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %811, %struct._Jbig2HuffmanTable* %814, i32* %36), !dbg !5873
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5869
  store i32 %815, i32* %56, align 4, !dbg !5869
  call void @llvm.dbg.declare(metadata i32* %57, metadata !5874, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %58, metadata !5876, metadata !DIExpression()), !dbg !5877
  %816 = load i32, i32* %36, align 4, !dbg !5878
  %817 = icmp ne i32 %816, 0, !dbg !5878
  br i1 %817, label %821, label %818, !dbg !5880

; <label>:818:                                    ; preds = %810
  %819 = load i32, i32* %56, align 4, !dbg !5881
  %820 = icmp slt i32 %819, 0, !dbg !5882
  br i1 %820, label %821, label %827, !dbg !5883

; <label>:821:                                    ; preds = %818, %810
  %822 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5884
  %823 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5886
  %824 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %823, i32 0, i32 0, !dbg !5887
  %825 = load i32, i32* %824, align 8, !dbg !5887
  %826 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %822, i32 3, i32 %825, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29.147, i32 0, i32 0)), !dbg !5888
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5889
  br label %1237, !dbg !5889

; <label>:827:                                    ; preds = %818
  %828 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5890
  call void @jbig2_huffman_skip(%struct._Jbig2HuffmanState* %828), !dbg !5891
  %829 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5892
  %830 = load i32, i32* %21, align 4, !dbg !5893
  %831 = load i32, i32* %18, align 4, !dbg !5894
  %832 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %829, i32 %830, i32 %831), !dbg !5895
  store %struct._Jbig2Image* %832, %struct._Jbig2Image** %55, align 8, !dbg !5896
  %833 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5897
  %834 = icmp eq %struct._Jbig2Image* %833, null, !dbg !5899
  br i1 %834, label %835, label %841, !dbg !5900

; <label>:835:                                    ; preds = %827
  %836 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5901
  %837 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5903
  %838 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %837, i32 0, i32 0, !dbg !5904
  %839 = load i32, i32* %838, align 8, !dbg !5904
  %840 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %836, i32 3, i32 %839, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.148, i32 0, i32 0)), !dbg !5905
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !5906
  br label %1237, !dbg !5906

; <label>:841:                                    ; preds = %827
  %842 = load i32, i32* %56, align 4, !dbg !5907
  %843 = icmp eq i32 %842, 0, !dbg !5909
  br i1 %843, label %844, label %910, !dbg !5910

; <label>:844:                                    ; preds = %841
  call void @llvm.dbg.declare(metadata i8** %59, metadata !5911, metadata !DIExpression()), !dbg !5913
  %845 = load i8*, i8** %12, align 8, !dbg !5914
  %846 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5915
  %847 = call i32 @jbig2_huffman_offset(%struct._Jbig2HuffmanState* %846), !dbg !5916
  %848 = sext i32 %847 to i64, !dbg !5917
  %849 = getelementptr inbounds i8, i8* %845, i64 %848, !dbg !5917
  store i8* %849, i8** %59, align 8, !dbg !5913
  call void @llvm.dbg.declare(metadata i32* %60, metadata !5918, metadata !DIExpression()), !dbg !5920
  %850 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5921
  %851 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %850, i32 0, i32 0, !dbg !5922
  %852 = load i32, i32* %851, align 8, !dbg !5922
  %853 = ashr i32 %852, 3, !dbg !5923
  %854 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5924
  %855 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %854, i32 0, i32 0, !dbg !5925
  %856 = load i32, i32* %855, align 8, !dbg !5925
  %857 = and i32 %856, 7, !dbg !5926
  %858 = icmp ne i32 %857, 0, !dbg !5927
  %859 = zext i1 %858 to i64, !dbg !5927
  %860 = select i1 %858, i32 1, i32 0, !dbg !5927
  %861 = add nsw i32 %853, %860, !dbg !5928
  store i32 %861, i32* %60, align 4, !dbg !5920
  call void @llvm.dbg.declare(metadata i8** %61, metadata !5929, metadata !DIExpression()), !dbg !5930
  %862 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5931
  %863 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %862, i32 0, i32 3, !dbg !5932
  %864 = load i8*, i8** %863, align 8, !dbg !5932
  store i8* %864, i8** %61, align 8, !dbg !5930
  %865 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5933
  %866 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %865, i32 0, i32 1, !dbg !5934
  %867 = load i32, i32* %866, align 4, !dbg !5934
  %868 = load i32, i32* %60, align 4, !dbg !5935
  %869 = mul nsw i32 %867, %868, !dbg !5936
  store i32 %869, i32* %56, align 4, !dbg !5937
  %870 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5938
  %871 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5939
  %872 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %871, i32 0, i32 0, !dbg !5940
  %873 = load i32, i32* %872, align 8, !dbg !5940
  %874 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5941
  %875 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %874, i32 0, i32 0, !dbg !5942
  %876 = load i32, i32* %875, align 8, !dbg !5942
  %877 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5943
  %878 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %877, i32 0, i32 1, !dbg !5944
  %879 = load i32, i32* %878, align 4, !dbg !5944
  %880 = load i32, i32* %19, align 4, !dbg !5945
  %881 = load i32, i32* %22, align 4, !dbg !5946
  %882 = sub i32 %880, %881, !dbg !5947
  %883 = load i32, i32* %56, align 4, !dbg !5948
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5949
  %884 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %870, i32 0, i32 %873, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.31.149, i32 0, i32 0), i32 %876, i32 %879, i32 %882, i32 %883), !dbg !5949
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5950
  store i32 0, i32* %57, align 4, !dbg !5950
  br label %885, !dbg !5952

; <label>:885:                                    ; preds = %906, %844
  %886 = load i32, i32* %57, align 4, !dbg !5953
  %887 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5955
  %888 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %887, i32 0, i32 1, !dbg !5956
  %889 = load i32, i32* %888, align 4, !dbg !5956
  %890 = icmp slt i32 %886, %889, !dbg !5957
  br i1 %890, label %891, label %909, !dbg !5958

; <label>:891:                                    ; preds = %885
  %892 = load i8*, i8** %61, align 8, !dbg !5959
  %893 = load i8*, i8** %59, align 8, !dbg !5961
  %894 = load i32, i32* %60, align 4, !dbg !5962
  %895 = sext i32 %894 to i64, !dbg !5962
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %892, i8* align 1 %893, i64 %895, i1 false), !dbg !5963
  %896 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5964
  %897 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %896, i32 0, i32 2, !dbg !5965
  %898 = load i32, i32* %897, align 8, !dbg !5965
  %899 = load i8*, i8** %61, align 8, !dbg !5966
  %900 = sext i32 %898 to i64, !dbg !5966
  %901 = getelementptr inbounds i8, i8* %899, i64 %900, !dbg !5966
  store i8* %901, i8** %61, align 8, !dbg !5966
  %902 = load i32, i32* %60, align 4, !dbg !5967
  %903 = load i8*, i8** %59, align 8, !dbg !5968
  %904 = sext i32 %902 to i64, !dbg !5968
  %905 = getelementptr inbounds i8, i8* %903, i64 %904, !dbg !5968
  store i8* %905, i8** %59, align 8, !dbg !5968
  br label %906, !dbg !5969

; <label>:906:                                    ; preds = %891
  %907 = load i32, i32* %57, align 4, !dbg !5970
  %908 = add nsw i32 %907, 1, !dbg !5970
  store i32 %908, i32* %57, align 4, !dbg !5970
  br label %885, !dbg !5971, !llvm.loop !5972

; <label>:909:                                    ; preds = %885
  br label %947, !dbg !5974

; <label>:910:                                    ; preds = %841
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams* %62, metadata !5975, metadata !DIExpression()), !dbg !5977
  %911 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5978
  %912 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5979
  %913 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %912, i32 0, i32 0, !dbg !5980
  %914 = load i32, i32* %913, align 8, !dbg !5980
  %915 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5981
  %916 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %915, i32 0, i32 0, !dbg !5982
  %917 = load i32, i32* %916, align 8, !dbg !5982
  %918 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5983
  %919 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %918, i32 0, i32 1, !dbg !5984
  %920 = load i32, i32* %919, align 4, !dbg !5984
  %921 = load i32, i32* %19, align 4, !dbg !5985
  %922 = load i32, i32* %22, align 4, !dbg !5986
  %923 = sub i32 %921, %922, !dbg !5987
  %924 = load i32, i32* %56, align 4, !dbg !5988
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !5989
  %925 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %911, i32 0, i32 %914, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.32.150, i32 0, i32 0), i32 %917, i32 %920, i32 %923, i32 %924), !dbg !5989
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !5990
  %926 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %62, i32 0, i32 0, !dbg !5990
  store i32 1, i32* %926, align 4, !dbg !5991
  %927 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !5992
  %928 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !5993
  %929 = load i8*, i8** %12, align 8, !dbg !5994
  %930 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !5995
  %931 = call i32 @jbig2_huffman_offset(%struct._Jbig2HuffmanState* %930), !dbg !5996
  %932 = sext i32 %931 to i64, !dbg !5997
  %933 = getelementptr inbounds i8, i8* %929, i64 %932, !dbg !5997
  %934 = load i32, i32* %56, align 4, !dbg !5998
  %935 = sext i32 %934 to i64, !dbg !5998
  %936 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !5999
  %937 = call i32 @jbig2_decode_generic_mmr(%struct._Jbig2Ctx.11* %927, %struct._Jbig2Segment* %928, %struct.Jbig2GenericRegionParams* %62, i8* %933, i64 %935, %struct._Jbig2Image* %936), !dbg !6000
  store i32 %937, i32* %36, align 4, !dbg !6001
  %938 = load i32, i32* %36, align 4, !dbg !6002
  %939 = icmp ne i32 %938, 0, !dbg !6002
  br i1 %939, label %940, label %946, !dbg !6004

; <label>:940:                                    ; preds = %910
  %941 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6005
  %942 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %10, align 8, !dbg !6007
  %943 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %942, i32 0, i32 0, !dbg !6008
  %944 = load i32, i32* %943, align 8, !dbg !6008
  %945 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %941, i32 3, i32 %944, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33.151, i32 0, i32 0)), !dbg !6009
  store %struct.Jbig2SymbolDict* null, %struct.Jbig2SymbolDict** %8, align 8, !dbg !6010
  br label %1237, !dbg !6010

; <label>:946:                                    ; preds = %910
  br label %947

; <label>:947:                                    ; preds = %946, %909
  %948 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !6011
  %949 = load i32, i32* %56, align 4, !dbg !6012
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6013
  call void @jbig2_huffman_advance(%struct._Jbig2HuffmanState* %948, i32 %949), !dbg !6013
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6014
  store i32 0, i32* %58, align 4, !dbg !6014
  %950 = load i32, i32* %22, align 4, !dbg !6015
  store i32 %950, i32* %57, align 4, !dbg !6017
  br label %951, !dbg !6018

; <label>:951:                                    ; preds = %984, %947
  %952 = load i32, i32* %57, align 4, !dbg !6019
  %953 = load i32, i32* %19, align 4, !dbg !6021
  %954 = icmp ult i32 %952, %953, !dbg !6022
  br i1 %954, label %955, label %987, !dbg !6023

; <label>:955:                                    ; preds = %951
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %63, metadata !6024, metadata !DIExpression()), !dbg !6026
  %956 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6027
  %957 = load i32*, i32** %23, align 8, !dbg !6028
  %958 = load i32, i32* %57, align 4, !dbg !6029
  %959 = sext i32 %958 to i64, !dbg !6028
  %960 = getelementptr inbounds i32, i32* %957, i64 %959, !dbg !6028
  %961 = load i32, i32* %960, align 4, !dbg !6028
  %962 = load i32, i32* %18, align 4, !dbg !6030
  %963 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %956, i32 %961, i32 %962), !dbg !6031
  store %struct._Jbig2Image* %963, %struct._Jbig2Image** %63, align 8, !dbg !6032
  %964 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6033
  %965 = load %struct._Jbig2Image*, %struct._Jbig2Image** %63, align 8, !dbg !6034
  %966 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !6035
  %967 = load i32, i32* %58, align 4, !dbg !6036
  %968 = sub nsw i32 0, %967, !dbg !6037
  %969 = call i32 @jbig2_image_compose(%struct._Jbig2Ctx.11* %964, %struct._Jbig2Image* %965, %struct._Jbig2Image* %966, i32 %968, i32 0, i32 4), !dbg !6038
  %970 = load i32*, i32** %23, align 8, !dbg !6039
  %971 = load i32, i32* %57, align 4, !dbg !6040
  %972 = sext i32 %971 to i64, !dbg !6039
  %973 = getelementptr inbounds i32, i32* %970, i64 %972, !dbg !6039
  %974 = load i32, i32* %973, align 4, !dbg !6039
  %975 = load i32, i32* %58, align 4, !dbg !6041
  %976 = add i32 %975, %974, !dbg !6041
  store i32 %976, i32* %58, align 4, !dbg !6041
  %977 = load %struct._Jbig2Image*, %struct._Jbig2Image** %63, align 8, !dbg !6042
  %978 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !6043
  %979 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %978, i32 0, i32 1, !dbg !6044
  %980 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %979, align 8, !dbg !6044
  %981 = load i32, i32* %57, align 4, !dbg !6045
  %982 = sext i32 %981 to i64, !dbg !6043
  %983 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %980, i64 %982, !dbg !6043
  store %struct._Jbig2Image* %977, %struct._Jbig2Image** %983, align 8, !dbg !6046
  br label %984, !dbg !6047

; <label>:984:                                    ; preds = %955
  %985 = load i32, i32* %57, align 4, !dbg !6048
  %986 = add nsw i32 %985, 1, !dbg !6048
  store i32 %986, i32* %57, align 4, !dbg !6048
  br label %951, !dbg !6049, !llvm.loop !6050

; <label>:987:                                    ; preds = %951
  %988 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6052
  %989 = load %struct._Jbig2Image*, %struct._Jbig2Image** %55, align 8, !dbg !6053
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %988, %struct._Jbig2Image* %989), !dbg !6054
  br label %990, !dbg !6055

; <label>:990:                                    ; preds = %987, %805, %800
  br label %164, !dbg !5161, !llvm.loop !6056

; <label>:991:                                    ; preds = %164
  %992 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6058
  %993 = icmp ne %struct.Jbig2TextRegionParams* %992, null, !dbg !6060
  br i1 %993, label %994, label %1084, !dbg !6061

; <label>:994:                                    ; preds = %991
  %995 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6062
  %996 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %995, i32 0, i32 0, !dbg !6065
  %997 = load i32, i32* %996, align 8, !dbg !6065
  %998 = icmp ne i32 %997, 0, !dbg !6062
  br i1 %998, label %1040, label %999, !dbg !6066

; <label>:999:                                    ; preds = %994
  %1000 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6067
  %1001 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6069
  %1002 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1001, i32 0, i32 18, !dbg !6070
  %1003 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1002, align 8, !dbg !6070
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1000, %struct._Jbig2ArithIntCtx* %1003), !dbg !6071
  %1004 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6072
  %1005 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6073
  %1006 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1005, i32 0, i32 19, !dbg !6074
  %1007 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1006, align 8, !dbg !6074
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1004, %struct._Jbig2ArithIntCtx* %1007), !dbg !6075
  %1008 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6076
  %1009 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6077
  %1010 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1009, i32 0, i32 20, !dbg !6078
  %1011 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1010, align 8, !dbg !6078
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1008, %struct._Jbig2ArithIntCtx* %1011), !dbg !6079
  %1012 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6080
  %1013 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6081
  %1014 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1013, i32 0, i32 21, !dbg !6082
  %1015 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1014, align 8, !dbg !6082
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1012, %struct._Jbig2ArithIntCtx* %1015), !dbg !6083
  %1016 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6084
  %1017 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6085
  %1018 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1017, i32 0, i32 22, !dbg !6086
  %1019 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %1018, align 8, !dbg !6086
  call void @jbig2_arith_iaid_ctx_free(%struct._Jbig2Ctx.11* %1016, %struct._Jbig2ArithIaidCtx* %1019), !dbg !6087
  %1020 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6088
  %1021 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6089
  %1022 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1021, i32 0, i32 23, !dbg !6090
  %1023 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1022, align 8, !dbg !6090
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1020, %struct._Jbig2ArithIntCtx* %1023), !dbg !6091
  %1024 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6092
  %1025 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6093
  %1026 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1025, i32 0, i32 24, !dbg !6094
  %1027 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1026, align 8, !dbg !6094
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1024, %struct._Jbig2ArithIntCtx* %1027), !dbg !6095
  %1028 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6096
  %1029 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6097
  %1030 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1029, i32 0, i32 25, !dbg !6098
  %1031 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1030, align 8, !dbg !6098
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1028, %struct._Jbig2ArithIntCtx* %1031), !dbg !6099
  %1032 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6100
  %1033 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6101
  %1034 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1033, i32 0, i32 26, !dbg !6102
  %1035 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1034, align 8, !dbg !6102
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1032, %struct._Jbig2ArithIntCtx* %1035), !dbg !6103
  %1036 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6104
  %1037 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6105
  %1038 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1037, i32 0, i32 27, !dbg !6106
  %1039 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %1038, align 8, !dbg !6106
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1036, %struct._Jbig2ArithIntCtx* %1039), !dbg !6107
  br label %1069, !dbg !6108

; <label>:1040:                                   ; preds = %994
  %1041 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6109
  %1042 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6111
  %1043 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1042, i32 0, i32 10, !dbg !6112
  %1044 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1043, align 8, !dbg !6112
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1041, %struct._Jbig2HuffmanTable* %1044), !dbg !6113
  %1045 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6114
  %1046 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6115
  %1047 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1046, i32 0, i32 11, !dbg !6116
  %1048 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1047, align 8, !dbg !6116
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1045, %struct._Jbig2HuffmanTable* %1048), !dbg !6117
  %1049 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6118
  %1050 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6119
  %1051 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1050, i32 0, i32 12, !dbg !6120
  %1052 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1051, align 8, !dbg !6120
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1049, %struct._Jbig2HuffmanTable* %1052), !dbg !6121
  %1053 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6122
  %1054 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6123
  %1055 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1054, i32 0, i32 15, !dbg !6124
  %1056 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1055, align 8, !dbg !6124
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1053, %struct._Jbig2HuffmanTable* %1056), !dbg !6125
  %1057 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6126
  %1058 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6127
  %1059 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1058, i32 0, i32 16, !dbg !6128
  %1060 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1059, align 8, !dbg !6128
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1057, %struct._Jbig2HuffmanTable* %1060), !dbg !6129
  %1061 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6130
  %1062 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6131
  %1063 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1062, i32 0, i32 13, !dbg !6132
  %1064 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1063, align 8, !dbg !6132
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1061, %struct._Jbig2HuffmanTable* %1064), !dbg !6133
  %1065 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6134
  %1066 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6135
  %1067 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %1066, i32 0, i32 14, !dbg !6136
  %1068 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %1067, align 8, !dbg !6136
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1065, %struct._Jbig2HuffmanTable* %1068), !dbg !6137
  br label %1069

; <label>:1069:                                   ; preds = %1040, %999
  %1070 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6138
  %1071 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %1070, i32 0, i32 0, !dbg !6139
  %1072 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %1071, align 8, !dbg !6139
  %1073 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6140
  %1074 = bitcast %struct.Jbig2TextRegionParams* %1073 to i8*, !dbg !6140
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %1072, i8* %1074), !dbg !6141
  store %struct.Jbig2TextRegionParams* null, %struct.Jbig2TextRegionParams** %39, align 8, !dbg !6142
  %1075 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6143
  %1076 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !6144
  %1077 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %1076, i64 0, !dbg !6144
  %1078 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %1077, align 8, !dbg !6144
  call void @jbig2_sd_release(%struct._Jbig2Ctx.11* %1075, %struct.Jbig2SymbolDict* %1078), !dbg !6145
  %1079 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6146
  %1080 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %1079, i32 0, i32 0, !dbg !6147
  %1081 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %1080, align 8, !dbg !6147
  %1082 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %37, align 8, !dbg !6148
  %1083 = bitcast %struct.Jbig2SymbolDict** %1082 to i8*, !dbg !6148
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %1081, i8* %1083), !dbg !6149
  br label %1084, !dbg !6150

; <label>:1084:                                   ; preds = %1069, %991
  %1085 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6151
  %1086 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %1085, i32 0, i32 0, !dbg !6152
  %1087 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %1086, align 8, !dbg !6152
  %1088 = load i8*, i8** %14, align 8, !dbg !6153
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %1087, i8* %1088), !dbg !6154
  %1089 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6155
  %1090 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6156
  %1091 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1090, i32 0, i32 5, !dbg !6157
  %1092 = load i32, i32* %1091, align 4, !dbg !6157
  %1093 = call %struct.Jbig2SymbolDict* @jbig2_sd_new(%struct._Jbig2Ctx.11* %1089, i32 %1092), !dbg !6158
  store %struct.Jbig2SymbolDict* %1093, %struct.Jbig2SymbolDict** %17, align 8, !dbg !6159
  call void @llvm.dbg.declare(metadata i32* %64, metadata !6160, metadata !DIExpression()), !dbg !6162
  store i32 0, i32* %64, align 4, !dbg !6162
  call void @llvm.dbg.declare(metadata i32* %65, metadata !6163, metadata !DIExpression()), !dbg !6164
  store i32 0, i32* %65, align 4, !dbg !6164
  call void @llvm.dbg.declare(metadata i32* %66, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.declare(metadata i32* %67, metadata !6167, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.declare(metadata i32* %68, metadata !6169, metadata !DIExpression()), !dbg !6170
  store i32 0, i32* %68, align 4, !dbg !6170
  call void @llvm.dbg.declare(metadata i32* %69, metadata !6171, metadata !DIExpression()), !dbg !6172
  %1094 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6173
  %1095 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1094, i32 0, i32 3, !dbg !6175
  %1096 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %1095, align 8, !dbg !6175
  %1097 = icmp ne %struct.Jbig2SymbolDict* %1096, null, !dbg !6176
  br i1 %1097, label %1098, label %1104, !dbg !6177

; <label>:1098:                                   ; preds = %1084
  %1099 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6178
  %1100 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1099, i32 0, i32 3, !dbg !6179
  %1101 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %1100, align 8, !dbg !6179
  %1102 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %1101, i32 0, i32 0, !dbg !6180
  %1103 = load i32, i32* %1102, align 8, !dbg !6180
  store i32 %1103, i32* %67, align 4, !dbg !6181
  br label %1105, !dbg !6182

; <label>:1104:                                   ; preds = %1084
  store i32 0, i32* %67, align 4, !dbg !6183
  br label %1105

; <label>:1105:                                   ; preds = %1104, %1098
  br label %1106, !dbg !6184

; <label>:1106:                                   ; preds = %1176, %1105
  %1107 = load i32, i32* %65, align 4, !dbg !6185
  %1108 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6186
  %1109 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1108, i32 0, i32 5, !dbg !6187
  %1110 = load i32, i32* %1109, align 4, !dbg !6187
  %1111 = icmp ult i32 %1107, %1110, !dbg !6188
  br i1 %1111, label %1112, label %1181, !dbg !6184

; <label>:1112:                                   ; preds = %1106
  %1113 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6189
  %1114 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1113, i32 0, i32 0, !dbg !6192
  %1115 = load i32, i32* %1114, align 8, !dbg !6192
  %1116 = icmp ne i32 %1115, 0, !dbg !6189
  br i1 %1116, label %1117, label %1121, !dbg !6193

; <label>:1117:                                   ; preds = %1112
  %1118 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6194
  %1119 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1118, i32 0, i32 5, !dbg !6195
  %1120 = load i32, i32* %1119, align 4, !dbg !6195
  store i32 %1120, i32* %69, align 4, !dbg !6196
  br label %1125, !dbg !6197

; <label>:1121:                                   ; preds = %1112
  %1122 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %31, align 8, !dbg !6198
  %1123 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !6199
  %1124 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %1122, %struct._Jbig2ArithState* %1123, i32* %69), !dbg !6200
  store i32 %1124, i32* %36, align 4, !dbg !6201
  br label %1125

; <label>:1125:                                   ; preds = %1121, %1117
  store i32 0, i32* %66, align 4, !dbg !6202
  br label %1126, !dbg !6204

; <label>:1126:                                   ; preds = %1173, %1125
  %1127 = load i32, i32* %66, align 4, !dbg !6205
  %1128 = load i32, i32* %69, align 4, !dbg !6207
  %1129 = icmp slt i32 %1127, %1128, !dbg !6208
  br i1 %1129, label %1130, label %1176, !dbg !6209

; <label>:1130:                                   ; preds = %1126
  %1131 = load i32, i32* %68, align 4, !dbg !6210
  %1132 = icmp ne i32 %1131, 0, !dbg !6210
  br i1 %1132, label %1133, label %1172, !dbg !6212

; <label>:1133:                                   ; preds = %1130
  %1134 = load i32, i32* %64, align 4, !dbg !6213
  %1135 = load i32, i32* %67, align 4, !dbg !6215
  %1136 = icmp slt i32 %1134, %1135, !dbg !6216
  br i1 %1136, label %1137, label %1149, !dbg !6217

; <label>:1137:                                   ; preds = %1133
  %1138 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6218
  %1139 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6219
  %1140 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1139, i32 0, i32 3, !dbg !6220
  %1141 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %1140, align 8, !dbg !6220
  %1142 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %1141, i32 0, i32 1, !dbg !6221
  %1143 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %1142, align 8, !dbg !6221
  %1144 = load i32, i32* %64, align 4, !dbg !6222
  %1145 = sext i32 %1144 to i64, !dbg !6219
  %1146 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %1143, i64 %1145, !dbg !6219
  %1147 = load %struct._Jbig2Image*, %struct._Jbig2Image** %1146, align 8, !dbg !6219
  %1148 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %1138, %struct._Jbig2Image* %1147), !dbg !6223
  br label %1161, !dbg !6217

; <label>:1149:                                   ; preds = %1133
  %1150 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6224
  %1151 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !6225
  %1152 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %1151, i32 0, i32 1, !dbg !6226
  %1153 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %1152, align 8, !dbg !6226
  %1154 = load i32, i32* %64, align 4, !dbg !6227
  %1155 = load i32, i32* %67, align 4, !dbg !6228
  %1156 = sub nsw i32 %1154, %1155, !dbg !6229
  %1157 = sext i32 %1156 to i64, !dbg !6225
  %1158 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %1153, i64 %1157, !dbg !6225
  %1159 = load %struct._Jbig2Image*, %struct._Jbig2Image** %1158, align 8, !dbg !6225
  %1160 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %1150, %struct._Jbig2Image* %1159), !dbg !6230
  br label %1161, !dbg !6217

; <label>:1161:                                   ; preds = %1149, %1137
  %1162 = phi %struct._Jbig2Image* [ %1148, %1137 ], [ %1160, %1149 ], !dbg !6217
  %1163 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %17, align 8, !dbg !6231
  %1164 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %1163, i32 0, i32 1, !dbg !6232
  %1165 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %1164, align 8, !dbg !6232
  %1166 = load i32, i32* %65, align 4, !dbg !6233
  %1167 = add nsw i32 %1166, 1, !dbg !6233
  store i32 %1167, i32* %65, align 4, !dbg !6233
  %1168 = sext i32 %1166 to i64, !dbg !6231
  %1169 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %1165, i64 %1168, !dbg !6231
  store %struct._Jbig2Image* %1162, %struct._Jbig2Image** %1169, align 8, !dbg !6234
  %1170 = load i32, i32* %64, align 4, !dbg !6235
  %1171 = add nsw i32 %1170, 1, !dbg !6235
  store i32 %1171, i32* %64, align 4, !dbg !6235
  br label %1172, !dbg !6236

; <label>:1172:                                   ; preds = %1161, %1130
  br label %1173, !dbg !6210

; <label>:1173:                                   ; preds = %1172
  %1174 = load i32, i32* %66, align 4, !dbg !6237
  %1175 = add nsw i32 %1174, 1, !dbg !6237
  store i32 %1175, i32* %66, align 4, !dbg !6237
  br label %1126, !dbg !6238, !llvm.loop !6239

; <label>:1176:                                   ; preds = %1126
  %1177 = load i32, i32* %68, align 4, !dbg !6241
  %1178 = icmp ne i32 %1177, 0, !dbg !6242
  %1179 = xor i1 %1178, true, !dbg !6242
  %1180 = zext i1 %1179 to i32, !dbg !6242
  store i32 %1180, i32* %68, align 4, !dbg !6243
  br label %1106, !dbg !6184, !llvm.loop !6244

; <label>:1181:                                   ; preds = %1106
  %1182 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6246
  %1183 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %16, align 8, !dbg !6247
  call void @jbig2_sd_release(%struct._Jbig2Ctx.11* %1182, %struct.Jbig2SymbolDict* %1183), !dbg !6248
  %1184 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6249
  %1185 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1184, i32 0, i32 0, !dbg !6251
  %1186 = load i32, i32* %1185, align 8, !dbg !6251
  %1187 = icmp ne i32 %1186, 0, !dbg !6249
  br i1 %1187, label %1214, label %1188, !dbg !6252

; <label>:1188:                                   ; preds = %1181
  %1189 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6253
  %1190 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %29, align 8, !dbg !6255
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1189, %struct._Jbig2ArithIntCtx* %1190), !dbg !6256
  %1191 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6257
  %1192 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %30, align 8, !dbg !6258
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1191, %struct._Jbig2ArithIntCtx* %1192), !dbg !6259
  %1193 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6260
  %1194 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %31, align 8, !dbg !6261
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1193, %struct._Jbig2ArithIntCtx* %1194), !dbg !6262
  %1195 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6263
  %1196 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %32, align 8, !dbg !6264
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1195, %struct._Jbig2ArithIntCtx* %1196), !dbg !6265
  %1197 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6266
  %1198 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1197, i32 0, i32 1, !dbg !6268
  %1199 = load i32, i32* %1198, align 4, !dbg !6268
  %1200 = icmp ne i32 %1199, 0, !dbg !6266
  br i1 %1200, label %1201, label %1208, !dbg !6269

; <label>:1201:                                   ; preds = %1188
  %1202 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6270
  %1203 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %33, align 8, !dbg !6272
  call void @jbig2_arith_iaid_ctx_free(%struct._Jbig2Ctx.11* %1202, %struct._Jbig2ArithIaidCtx* %1203), !dbg !6273
  %1204 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6274
  %1205 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %34, align 8, !dbg !6275
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1204, %struct._Jbig2ArithIntCtx* %1205), !dbg !6276
  %1206 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6277
  %1207 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %35, align 8, !dbg !6278
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %1206, %struct._Jbig2ArithIntCtx* %1207), !dbg !6279
  br label %1208, !dbg !6280

; <label>:1208:                                   ; preds = %1201, %1188
  %1209 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6281
  %1210 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %1209, i32 0, i32 0, !dbg !6282
  %1211 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %1210, align 8, !dbg !6282
  %1212 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %28, align 8, !dbg !6283
  %1213 = bitcast %struct._Jbig2ArithState* %1212 to i8*, !dbg !6283
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %1211, i8* %1213), !dbg !6284
  br label %1233, !dbg !6285

; <label>:1214:                                   ; preds = %1181
  %1215 = load %struct.Jbig2SymbolDictParams*, %struct.Jbig2SymbolDictParams** %11, align 8, !dbg !6286
  %1216 = getelementptr inbounds %struct.Jbig2SymbolDictParams, %struct.Jbig2SymbolDictParams* %1215, i32 0, i32 1, !dbg !6289
  %1217 = load i32, i32* %1216, align 4, !dbg !6289
  %1218 = icmp ne i32 %1217, 0, !dbg !6286
  br i1 %1218, label %1219, label %1225, !dbg !6290

; <label>:1219:                                   ; preds = %1214
  %1220 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6291
  %1221 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %1220, i32 0, i32 0, !dbg !6293
  %1222 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %1221, align 8, !dbg !6293
  %1223 = load i32*, i32** %23, align 8, !dbg !6294
  %1224 = bitcast i32* %1223 to i8*, !dbg !6294
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %1222, i8* %1224), !dbg !6295
  br label %1225, !dbg !6296

; <label>:1225:                                   ; preds = %1219, %1214
  %1226 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6297
  %1227 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %27, align 8, !dbg !6298
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %1226, %struct._Jbig2HuffmanTable* %1227), !dbg !6299
  %1228 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6300
  %1229 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %1228, i32 0, i32 0, !dbg !6301
  %1230 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %1229, align 8, !dbg !6301
  %1231 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %26, align 8, !dbg !6302
  %1232 = bitcast %struct._Jbig2HuffmanState* %1231 to i8*, !dbg !6302
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %1230, i8* %1232), !dbg !6303
  br label %1233

; <label>:1233:                                   ; preds = %1225, %1208
  %1234 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %9, align 8, !dbg !6304
  %1235 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %25, align 8, !dbg !6305
  call void bitcast (void (%struct._Jbig2Ctx*, %struct._Jbig2WordStream*)* @jbig2_word_stream_buf_free to void (%struct._Jbig2Ctx.11*, %struct._Jbig2WordStream*)*)(%struct._Jbig2Ctx.11* %1234, %struct._Jbig2WordStream* %1235), !dbg !6306
  %1236 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %17, align 8, !dbg !6307
  store %struct.Jbig2SymbolDict* %1236, %struct.Jbig2SymbolDict** %8, align 8, !dbg !6308
  br label %1237, !dbg !6308

; <label>:1237:                                   ; preds = %1233, %940, %835, %821, %695, %599, %457, %397, %375, %346, %263, %202, %150
  %1238 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %8, align 8, !dbg !6309
  ret %struct.Jbig2SymbolDict* %1238, !dbg !6309
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_decode_text_region(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2TextRegionParams*, %struct.Jbig2SymbolDict**, i32, %struct._Jbig2Image*, i8*, i64, i8*, %struct._Jbig2ArithState*, %struct._Jbig2WordStream*) #0 !dbg !6310 {
  %12 = alloca i32, align 4
  %13 = alloca %struct._Jbig2Ctx.11*, align 8
  %14 = alloca %struct._Jbig2Segment*, align 8
  %15 = alloca %struct.Jbig2TextRegionParams*, align 8
  %16 = alloca %struct.Jbig2SymbolDict**, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct._Jbig2Image*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct._Jbig2ArithState*, align 8
  %23 = alloca %struct._Jbig2WordStream*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca %struct._Jbig2Image*, align 8
  %41 = alloca %struct._Jbig2HuffmanState*, align 8
  %42 = alloca %struct._Jbig2HuffmanTable*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %struct._Jbig2HuffmanTable*, align 8
  %46 = alloca %struct._Jbig2HuffmanParams, align 8
  %47 = alloca [35 x %struct._Jbig2HuffmanLine], align 16
  %48 = alloca %struct._Jbig2HuffmanLine*, align 8
  %49 = alloca %struct._Jbig2HuffmanParams, align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca %struct.Jbig2RefinementRegionParams, align 8
  %57 = alloca %struct._Jbig2Image*, align 8
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca %struct._Jbig2Image*, align 8
  %63 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %13, metadata !6442, metadata !DIExpression()), !dbg !6443
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %14, metadata !6444, metadata !DIExpression()), !dbg !6445
  store %struct.Jbig2TextRegionParams* %2, %struct.Jbig2TextRegionParams** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2TextRegionParams** %15, metadata !6446, metadata !DIExpression()), !dbg !6447
  store %struct.Jbig2SymbolDict** %3, %struct.Jbig2SymbolDict*** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict*** %16, metadata !6448, metadata !DIExpression()), !dbg !6449
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !6450, metadata !DIExpression()), !dbg !6451
  store %struct._Jbig2Image* %5, %struct._Jbig2Image** %18, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %18, metadata !6452, metadata !DIExpression()), !dbg !6453
  store i8* %6, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !6454, metadata !DIExpression()), !dbg !6455
  store i64 %7, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !6456, metadata !DIExpression()), !dbg !6457
  store i8* %8, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !6458, metadata !DIExpression()), !dbg !6459
  store %struct._Jbig2ArithState* %9, %struct._Jbig2ArithState** %22, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %22, metadata !6460, metadata !DIExpression()), !dbg !6461
  store %struct._Jbig2WordStream* %10, %struct._Jbig2WordStream** %23, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %23, metadata !6462, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.declare(metadata i32* %24, metadata !6464, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.declare(metadata i32* %25, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata i32* %26, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.declare(metadata i32* %27, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %28, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata i32* %29, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.declare(metadata i32* %30, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %31, metadata !6478, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %32, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %33, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %34, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %35, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.declare(metadata i32* %36, metadata !6488, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.declare(metadata i32* %37, metadata !6490, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %38, metadata !6492, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata i32* %39, metadata !6494, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %40, metadata !6496, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %41, metadata !6498, metadata !DIExpression()), !dbg !6499
  store %struct._Jbig2HuffmanState* null, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6499
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanTable** %42, metadata !6500, metadata !DIExpression()), !dbg !6501
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %42, align 8, !dbg !6501
  call void @llvm.dbg.declare(metadata i32* %43, metadata !6502, metadata !DIExpression()), !dbg !6503
  store i32 0, i32* %43, align 4, !dbg !6503
  call void @llvm.dbg.declare(metadata i32* %44, metadata !6504, metadata !DIExpression()), !dbg !6505
  store i32 0, i32* %39, align 4, !dbg !6506
  store i32 0, i32* %38, align 4, !dbg !6507
  br label %64, !dbg !6509

; <label>:64:                                     ; preds = %78, %11
  %65 = load i32, i32* %38, align 4, !dbg !6510
  %66 = load i32, i32* %17, align 4, !dbg !6512
  %67 = icmp ult i32 %65, %66, !dbg !6513
  br i1 %67, label %68, label %81, !dbg !6514

; <label>:68:                                     ; preds = %64
  %69 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %16, align 8, !dbg !6515
  %70 = load i32, i32* %38, align 4, !dbg !6517
  %71 = zext i32 %70 to i64, !dbg !6515
  %72 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %69, i64 %71, !dbg !6515
  %73 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %72, align 8, !dbg !6515
  %74 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %73, i32 0, i32 0, !dbg !6518
  %75 = load i32, i32* %74, align 8, !dbg !6518
  %76 = load i32, i32* %39, align 4, !dbg !6519
  %77 = add i32 %76, %75, !dbg !6519
  store i32 %77, i32* %39, align 4, !dbg !6519
  br label %78, !dbg !6520

; <label>:78:                                     ; preds = %68
  %79 = load i32, i32* %38, align 4, !dbg !6521
  %80 = add i32 %79, 1, !dbg !6521
  store i32 %80, i32* %38, align 4, !dbg !6521
  br label %64, !dbg !6522, !llvm.loop !6523

; <label>:81:                                     ; preds = %64
  %82 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6525
  %83 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6526
  %84 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %83, i32 0, i32 0, !dbg !6527
  %85 = load i32, i32* %84, align 8, !dbg !6527
  %86 = load i32, i32* %39, align 4, !dbg !6528
  %87 = load i32, i32* %17, align 4, !dbg !6529
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6530
  %88 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %82, i32 0, i32 %85, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.154, i32 0, i32 0), i32 %86, i32 %87), !dbg !6530
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6531
  %89 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6531
  %90 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %89, i32 0, i32 0, !dbg !6533
  %91 = load i32, i32* %90, align 8, !dbg !6533
  %92 = icmp ne i32 %91, 0, !dbg !6531
  br i1 %92, label %93, label %349, !dbg !6534

; <label>:93:                                     ; preds = %81
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanTable** %45, metadata !6535, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanParams* %46, metadata !6538, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.declare(metadata [35 x %struct._Jbig2HuffmanLine]* %47, metadata !6554, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanLine** %48, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanParams* %49, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata i32* %50, metadata !6564, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.declare(metadata i32* %51, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %52, metadata !6568, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.declare(metadata i32* %53, metadata !6570, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.declare(metadata i32* %54, metadata !6572, metadata !DIExpression()), !dbg !6573
  %94 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6574
  %95 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6575
  %96 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %95, i32 0, i32 0, !dbg !6576
  %97 = load i32, i32* %96, align 8, !dbg !6576
  %98 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %94, i32 0, i32 %97, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.155, i32 0, i32 0)), !dbg !6577
  %99 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6578
  %100 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %23, align 8, !dbg !6579
  %101 = call %struct._Jbig2HuffmanState* @jbig2_huffman_new(%struct._Jbig2Ctx.11* %99, %struct._Jbig2WordStream* %100), !dbg !6580
  store %struct._Jbig2HuffmanState* %101, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6581
  store i32 0, i32* %38, align 4, !dbg !6582
  br label %102, !dbg !6584

; <label>:102:                                    ; preds = %132, %93
  %103 = load i32, i32* %38, align 4, !dbg !6585
  %104 = icmp ult i32 %103, 35, !dbg !6587
  br i1 %104, label %105, label %135, !dbg !6588

; <label>:105:                                    ; preds = %102
  %106 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6589
  %107 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %106, i32 4), !dbg !6591
  %108 = load i32, i32* %38, align 4, !dbg !6592
  %109 = zext i32 %108 to i64, !dbg !6593
  %110 = getelementptr inbounds [35 x %struct._Jbig2HuffmanLine], [35 x %struct._Jbig2HuffmanLine]* %47, i64 0, i64 %109, !dbg !6593
  %111 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %110, i32 0, i32 0, !dbg !6594
  store i32 %107, i32* %111, align 4, !dbg !6595
  %112 = load i32, i32* %38, align 4, !dbg !6596
  %113 = zext i32 %112 to i64, !dbg !6597
  %114 = getelementptr inbounds [35 x %struct._Jbig2HuffmanLine], [35 x %struct._Jbig2HuffmanLine]* %47, i64 0, i64 %113, !dbg !6597
  %115 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %114, i32 0, i32 1, !dbg !6598
  store i32 0, i32* %115, align 4, !dbg !6599
  %116 = load i32, i32* %38, align 4, !dbg !6600
  %117 = load i32, i32* %38, align 4, !dbg !6601
  %118 = zext i32 %117 to i64, !dbg !6602
  %119 = getelementptr inbounds [35 x %struct._Jbig2HuffmanLine], [35 x %struct._Jbig2HuffmanLine]* %47, i64 0, i64 %118, !dbg !6602
  %120 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %119, i32 0, i32 2, !dbg !6603
  store i32 %116, i32* %120, align 4, !dbg !6604
  %121 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6605
  %122 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6606
  %123 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %122, i32 0, i32 0, !dbg !6607
  %124 = load i32, i32* %123, align 8, !dbg !6607
  %125 = load i32, i32* %38, align 4, !dbg !6608
  %126 = load i32, i32* %38, align 4, !dbg !6609
  %127 = zext i32 %126 to i64, !dbg !6610
  %128 = getelementptr inbounds [35 x %struct._Jbig2HuffmanLine], [35 x %struct._Jbig2HuffmanLine]* %47, i64 0, i64 %127, !dbg !6610
  %129 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %128, i32 0, i32 0, !dbg !6611
  %130 = load i32, i32* %129, align 4, !dbg !6611
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6612
  %131 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %121, i32 0, i32 %124, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.156, i32 0, i32 0), i32 %125, i32 %130), !dbg !6612
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6613
  br label %132, !dbg !6613

; <label>:132:                                    ; preds = %105
  %133 = load i32, i32* %38, align 4, !dbg !6614
  %134 = add i32 %133, 1, !dbg !6614
  store i32 %134, i32* %38, align 4, !dbg !6614
  br label %102, !dbg !6615, !llvm.loop !6616

; <label>:135:                                    ; preds = %102
  %136 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %46, i32 0, i32 0, !dbg !6618
  store i32 0, i32* %136, align 8, !dbg !6619
  %137 = getelementptr inbounds [35 x %struct._Jbig2HuffmanLine], [35 x %struct._Jbig2HuffmanLine]* %47, i32 0, i32 0, !dbg !6620
  %138 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %46, i32 0, i32 2, !dbg !6621
  store %struct._Jbig2HuffmanLine* %137, %struct._Jbig2HuffmanLine** %138, align 8, !dbg !6622
  %139 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %46, i32 0, i32 1, !dbg !6623
  store i32 35, i32* %139, align 4, !dbg !6624
  %140 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6625
  %141 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %140, %struct._Jbig2HuffmanParams* %46), !dbg !6626
  store %struct._Jbig2HuffmanTable* %141, %struct._Jbig2HuffmanTable** %45, align 8, !dbg !6627
  %142 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %45, align 8, !dbg !6628
  %143 = icmp eq %struct._Jbig2HuffmanTable* %142, null, !dbg !6630
  br i1 %143, label %144, label %150, !dbg !6631

; <label>:144:                                    ; preds = %135
  %145 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6632
  %146 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6634
  %147 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %146, i32 0, i32 0, !dbg !6635
  %148 = load i32, i32* %147, align 8, !dbg !6635
  %149 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %145, i32 3, i32 %148, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.157, i32 0, i32 0)), !dbg !6636
  store i32 -1, i32* %12, align 4, !dbg !6637
  br label %860, !dbg !6637

; <label>:150:                                    ; preds = %135
  %151 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6638
  %152 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %151, i32 0, i32 0, !dbg !6639
  %153 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %152, align 8, !dbg !6639
  %154 = load i32, i32* %39, align 4, !dbg !6640
  %155 = zext i32 %154 to i64, !dbg !6640
  %156 = mul i64 %155, 12, !dbg !6641
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6642
  %157 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %153, i64 %156), !dbg !6642
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6642
  %158 = bitcast i8* %157 to %struct._Jbig2HuffmanLine*, !dbg !6642
  store %struct._Jbig2HuffmanLine* %158, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6643
  %159 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6644
  %160 = icmp eq %struct._Jbig2HuffmanLine* %159, null, !dbg !6646
  br i1 %160, label %161, label %167, !dbg !6647

; <label>:161:                                    ; preds = %150
  %162 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6648
  %163 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6650
  %164 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %163, i32 0, i32 0, !dbg !6651
  %165 = load i32, i32* %164, align 8, !dbg !6651
  %166 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %162, i32 3, i32 %165, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4.158, i32 0, i32 0)), !dbg !6652
  store i32 -1, i32* %12, align 4, !dbg !6653
  br label %860, !dbg !6653

; <label>:167:                                    ; preds = %150
  store i32 0, i32* %38, align 4, !dbg !6654
  br label %168, !dbg !6655

; <label>:168:                                    ; preds = %310, %167
  %169 = load i32, i32* %38, align 4, !dbg !6656
  %170 = load i32, i32* %39, align 4, !dbg !6657
  %171 = icmp ult i32 %169, %170, !dbg !6658
  br i1 %171, label %172, label %314, !dbg !6655

; <label>:172:                                    ; preds = %168
  %173 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6659
  %174 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %45, align 8, !dbg !6661
  %175 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %173, %struct._Jbig2HuffmanTable* %174, i32* %51), !dbg !6662
  store i32 %175, i32* %50, align 4, !dbg !6663
  %176 = load i32, i32* %51, align 4, !dbg !6664
  %177 = icmp ne i32 %176, 0, !dbg !6666
  br i1 %177, label %184, label %178, !dbg !6667

; <label>:178:                                    ; preds = %172
  %179 = load i32, i32* %50, align 4, !dbg !6668
  %180 = icmp slt i32 %179, 0, !dbg !6669
  br i1 %180, label %184, label %181, !dbg !6670

; <label>:181:                                    ; preds = %178
  %182 = load i32, i32* %50, align 4, !dbg !6671
  %183 = icmp sge i32 %182, 35, !dbg !6672
  br i1 %183, label %184, label %197, !dbg !6673

; <label>:184:                                    ; preds = %181, %178, %172
  %185 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6674
  %186 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6676
  %187 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %186, i32 0, i32 0, !dbg !6677
  %188 = load i32, i32* %187, align 8, !dbg !6677
  %189 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %185, i32 3, i32 %188, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.159, i32 0, i32 0)), !dbg !6678
  %190 = load i32, i32* %51, align 4, !dbg !6679
  %191 = icmp ne i32 %190, 0, !dbg !6679
  br i1 %191, label %192, label %194, !dbg !6679

; <label>:192:                                    ; preds = %184
  %193 = load i32, i32* %51, align 4, !dbg !6680
  br label %195, !dbg !6679

; <label>:194:                                    ; preds = %184
  br label %195, !dbg !6679

; <label>:195:                                    ; preds = %194, %192
  %196 = phi i32 [ %193, %192 ], [ -1, %194 ], !dbg !6679
  store i32 %196, i32* %12, align 4, !dbg !6681
  br label %860, !dbg !6681

; <label>:197:                                    ; preds = %181
  %198 = load i32, i32* %50, align 4, !dbg !6682
  %199 = icmp slt i32 %198, 32, !dbg !6684
  br i1 %199, label %200, label %202, !dbg !6685

; <label>:200:                                    ; preds = %197
  %201 = load i32, i32* %50, align 4, !dbg !6686
  store i32 %201, i32* %52, align 4, !dbg !6688
  store i32 1, i32* %53, align 4, !dbg !6689
  br label %247, !dbg !6690

; <label>:202:                                    ; preds = %197
  %203 = load i32, i32* %38, align 4, !dbg !6691
  %204 = icmp ult i32 %203, 1, !dbg !6694
  br i1 %204, label %205, label %211, !dbg !6695

; <label>:205:                                    ; preds = %202
  %206 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6696
  %207 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6698
  %208 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %207, i32 0, i32 0, !dbg !6699
  %209 = load i32, i32* %208, align 8, !dbg !6699
  %210 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %206, i32 3, i32 %209, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.6.160, i32 0, i32 0)), !dbg !6700
  store i32 -1, i32* %12, align 4, !dbg !6701
  br label %860, !dbg !6701

; <label>:211:                                    ; preds = %202
  %212 = load i32, i32* %50, align 4, !dbg !6702
  %213 = icmp eq i32 %212, 32, !dbg !6704
  br i1 %213, label %214, label %222, !dbg !6705

; <label>:214:                                    ; preds = %211
  %215 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6706
  %216 = load i32, i32* %38, align 4, !dbg !6708
  %217 = sub i32 %216, 1, !dbg !6709
  %218 = zext i32 %217 to i64, !dbg !6706
  %219 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %215, i64 %218, !dbg !6706
  %220 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %219, i32 0, i32 0, !dbg !6710
  %221 = load i32, i32* %220, align 4, !dbg !6710
  store i32 %221, i32* %52, align 4, !dbg !6711
  br label %223, !dbg !6712

; <label>:222:                                    ; preds = %211
  store i32 0, i32* %52, align 4, !dbg !6713
  br label %223

; <label>:223:                                    ; preds = %222, %214
  %224 = load i32, i32* %50, align 4, !dbg !6715
  %225 = icmp eq i32 %224, 32, !dbg !6717
  br i1 %225, label %226, label %230, !dbg !6718

; <label>:226:                                    ; preds = %223
  %227 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6719
  %228 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %227, i32 2), !dbg !6720
  %229 = add nsw i32 %228, 3, !dbg !6721
  store i32 %229, i32* %53, align 4, !dbg !6722
  br label %246, !dbg !6723

; <label>:230:                                    ; preds = %223
  %231 = load i32, i32* %50, align 4, !dbg !6724
  %232 = icmp eq i32 %231, 33, !dbg !6726
  br i1 %232, label %233, label %237, !dbg !6727

; <label>:233:                                    ; preds = %230
  %234 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6728
  %235 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %234, i32 3), !dbg !6729
  %236 = add nsw i32 %235, 3, !dbg !6730
  store i32 %236, i32* %53, align 4, !dbg !6731
  br label %245, !dbg !6732

; <label>:237:                                    ; preds = %230
  %238 = load i32, i32* %50, align 4, !dbg !6733
  %239 = icmp eq i32 %238, 34, !dbg !6735
  br i1 %239, label %240, label %244, !dbg !6736

; <label>:240:                                    ; preds = %237
  %241 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6737
  %242 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %241, i32 7), !dbg !6738
  %243 = add nsw i32 %242, 11, !dbg !6739
  store i32 %243, i32* %53, align 4, !dbg !6740
  br label %244, !dbg !6741

; <label>:244:                                    ; preds = %240, %237
  br label %245

; <label>:245:                                    ; preds = %244, %233
  br label %246

; <label>:246:                                    ; preds = %245, %226
  br label %247

; <label>:247:                                    ; preds = %246, %200
  %248 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6742
  %249 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6743
  %250 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %249, i32 0, i32 0, !dbg !6744
  %251 = load i32, i32* %250, align 8, !dbg !6744
  %252 = load i32, i32* %50, align 4, !dbg !6745
  %253 = load i32, i32* %38, align 4, !dbg !6746
  %254 = load i32, i32* %52, align 4, !dbg !6747
  %255 = load i32, i32* %53, align 4, !dbg !6748
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6749
  %256 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %248, i32 0, i32 %251, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7.161, i32 0, i32 0), i32 %252, i32 %253, i32 %254, i32 %255), !dbg !6749
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6750
  %257 = load i32, i32* %38, align 4, !dbg !6750
  %258 = load i32, i32* %53, align 4, !dbg !6752
  %259 = add i32 %257, %258, !dbg !6753
  %260 = load i32, i32* %39, align 4, !dbg !6754
  %261 = icmp ugt i32 %259, %260, !dbg !6755
  br i1 %261, label %262, label %276, !dbg !6756

; <label>:262:                                    ; preds = %247
  %263 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6757
  %264 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6759
  %265 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %264, i32 0, i32 0, !dbg !6760
  %266 = load i32, i32* %265, align 8, !dbg !6760
  %267 = load i32, i32* %38, align 4, !dbg !6761
  %268 = load i32, i32* %53, align 4, !dbg !6762
  %269 = add i32 %267, %268, !dbg !6763
  %270 = load i32, i32* %39, align 4, !dbg !6764
  %271 = sub i32 %269, %270, !dbg !6765
  %272 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %263, i32 2, i32 %266, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.8.162, i32 0, i32 0), i32 %271), !dbg !6766
  %273 = load i32, i32* %39, align 4, !dbg !6767
  %274 = load i32, i32* %38, align 4, !dbg !6768
  %275 = sub i32 %273, %274, !dbg !6769
  store i32 %275, i32* %53, align 4, !dbg !6770
  br label %276, !dbg !6771

; <label>:276:                                    ; preds = %262, %247
  store i32 0, i32* %54, align 4, !dbg !6772
  br label %277, !dbg !6774

; <label>:277:                                    ; preds = %307, %276
  %278 = load i32, i32* %54, align 4, !dbg !6775
  %279 = load i32, i32* %53, align 4, !dbg !6777
  %280 = icmp slt i32 %278, %279, !dbg !6778
  br i1 %280, label %281, label %310, !dbg !6779

; <label>:281:                                    ; preds = %277
  %282 = load i32, i32* %52, align 4, !dbg !6780
  %283 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6782
  %284 = load i32, i32* %38, align 4, !dbg !6783
  %285 = load i32, i32* %54, align 4, !dbg !6784
  %286 = add i32 %284, %285, !dbg !6785
  %287 = zext i32 %286 to i64, !dbg !6782
  %288 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %283, i64 %287, !dbg !6782
  %289 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %288, i32 0, i32 0, !dbg !6786
  store i32 %282, i32* %289, align 4, !dbg !6787
  %290 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6788
  %291 = load i32, i32* %38, align 4, !dbg !6789
  %292 = load i32, i32* %54, align 4, !dbg !6790
  %293 = add i32 %291, %292, !dbg !6791
  %294 = zext i32 %293 to i64, !dbg !6788
  %295 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %290, i64 %294, !dbg !6788
  %296 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %295, i32 0, i32 1, !dbg !6792
  store i32 0, i32* %296, align 4, !dbg !6793
  %297 = load i32, i32* %38, align 4, !dbg !6794
  %298 = load i32, i32* %54, align 4, !dbg !6795
  %299 = add i32 %297, %298, !dbg !6796
  %300 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6797
  %301 = load i32, i32* %38, align 4, !dbg !6798
  %302 = load i32, i32* %54, align 4, !dbg !6799
  %303 = add i32 %301, %302, !dbg !6800
  %304 = zext i32 %303 to i64, !dbg !6797
  %305 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %300, i64 %304, !dbg !6797
  %306 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %305, i32 0, i32 2, !dbg !6801
  store i32 %299, i32* %306, align 4, !dbg !6802
  br label %307, !dbg !6803

; <label>:307:                                    ; preds = %281
  %308 = load i32, i32* %54, align 4, !dbg !6804
  %309 = add nsw i32 %308, 1, !dbg !6804
  store i32 %309, i32* %54, align 4, !dbg !6804
  br label %277, !dbg !6805, !llvm.loop !6806

; <label>:310:                                    ; preds = %277
  %311 = load i32, i32* %54, align 4, !dbg !6808
  %312 = load i32, i32* %38, align 4, !dbg !6809
  %313 = add i32 %312, %311, !dbg !6809
  store i32 %313, i32* %38, align 4, !dbg !6809
  br label %168, !dbg !6655, !llvm.loop !6810

; <label>:314:                                    ; preds = %168
  %315 = load i32, i32* %38, align 4, !dbg !6812
  %316 = load i32, i32* %39, align 4, !dbg !6814
  %317 = icmp ult i32 %315, %316, !dbg !6815
  br i1 %317, label %318, label %324, !dbg !6816

; <label>:318:                                    ; preds = %314
  %319 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6817
  %320 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6819
  %321 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %320, i32 0, i32 0, !dbg !6820
  %322 = load i32, i32* %321, align 8, !dbg !6820
  %323 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %319, i32 2, i32 %322, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9.163, i32 0, i32 0)), !dbg !6821
  br label %324, !dbg !6822

; <label>:324:                                    ; preds = %318, %314
  %325 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %49, i32 0, i32 0, !dbg !6823
  store i32 0, i32* %325, align 8, !dbg !6824
  %326 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6825
  %327 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %49, i32 0, i32 2, !dbg !6826
  store %struct._Jbig2HuffmanLine* %326, %struct._Jbig2HuffmanLine** %327, align 8, !dbg !6827
  %328 = load i32, i32* %39, align 4, !dbg !6828
  %329 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %49, i32 0, i32 1, !dbg !6829
  store i32 %328, i32* %329, align 4, !dbg !6830
  %330 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6831
  call void @jbig2_huffman_skip(%struct._Jbig2HuffmanState* %330), !dbg !6832
  %331 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6833
  %332 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %331, %struct._Jbig2HuffmanParams* %49), !dbg !6834
  store %struct._Jbig2HuffmanTable* %332, %struct._Jbig2HuffmanTable** %42, align 8, !dbg !6835
  %333 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6836
  %334 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %333, i32 0, i32 0, !dbg !6837
  %335 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %334, align 8, !dbg !6837
  %336 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %48, align 8, !dbg !6838
  %337 = bitcast %struct._Jbig2HuffmanLine* %336 to i8*, !dbg !6838
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %335, i8* %337), !dbg !6839
  %338 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6840
  %339 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %45, align 8, !dbg !6841
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %338, %struct._Jbig2HuffmanTable* %339), !dbg !6842
  %340 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %42, align 8, !dbg !6843
  %341 = icmp eq %struct._Jbig2HuffmanTable* %340, null, !dbg !6845
  br i1 %341, label %342, label %348, !dbg !6846

; <label>:342:                                    ; preds = %324
  %343 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6847
  %344 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !6849
  %345 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %344, i32 0, i32 0, !dbg !6850
  %346 = load i32, i32* %345, align 8, !dbg !6850
  %347 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %343, i32 3, i32 %346, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.164, i32 0, i32 0)), !dbg !6851
  store i32 -1, i32* %12, align 4, !dbg !6852
  br label %860, !dbg !6852

; <label>:348:                                    ; preds = %324
  br label %349, !dbg !6853

; <label>:349:                                    ; preds = %348, %81
  %350 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !6854
  %351 = load %struct._Jbig2Image*, %struct._Jbig2Image** %18, align 8, !dbg !6855
  %352 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6856
  %353 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %352, i32 0, i32 2, !dbg !6857
  %354 = load i32, i32* %353, align 8, !dbg !6857
  call void @jbig2_image_clear(%struct._Jbig2Ctx.11* %350, %struct._Jbig2Image* %351, i32 %354), !dbg !6858
  %355 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6859
  %356 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %355, i32 0, i32 0, !dbg !6861
  %357 = load i32, i32* %356, align 8, !dbg !6861
  %358 = icmp ne i32 %357, 0, !dbg !6859
  br i1 %358, label %359, label %365, !dbg !6862

; <label>:359:                                    ; preds = %349
  %360 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6863
  %361 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6865
  %362 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %361, i32 0, i32 12, !dbg !6866
  %363 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %362, align 8, !dbg !6866
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6867
  %364 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %360, %struct._Jbig2HuffmanTable* %363, i32* %43), !dbg !6867
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6868
  store i32 %364, i32* %26, align 4, !dbg !6868
  br label %371, !dbg !6869

; <label>:365:                                    ; preds = %349
  %366 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6870
  %367 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %366, i32 0, i32 18, !dbg !6872
  %368 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %367, align 8, !dbg !6872
  %369 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !6873
  %370 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %368, %struct._Jbig2ArithState* %369, i32* %26), !dbg !6874
  store i32 %370, i32* %43, align 4, !dbg !6875
  br label %371

; <label>:371:                                    ; preds = %365, %359
  %372 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6876
  %373 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %372, i32 0, i32 9, !dbg !6877
  %374 = load i32, i32* %373, align 4, !dbg !6877
  %375 = sub nsw i32 0, %374, !dbg !6878
  %376 = load i32, i32* %26, align 4, !dbg !6879
  %377 = mul nsw i32 %376, %375, !dbg !6879
  store i32 %377, i32* %26, align 4, !dbg !6879
  store i32 0, i32* %27, align 4, !dbg !6880
  store i32 0, i32* %24, align 4, !dbg !6881
  br label %378, !dbg !6882

; <label>:378:                                    ; preds = %850, %371
  %379 = load i32, i32* %24, align 4, !dbg !6883
  %380 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6884
  %381 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %380, i32 0, i32 7, !dbg !6885
  %382 = load i32, i32* %381, align 4, !dbg !6885
  %383 = icmp ult i32 %379, %382, !dbg !6886
  br i1 %383, label %384, label %851, !dbg !6882

; <label>:384:                                    ; preds = %378
  %385 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6887
  %386 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %385, i32 0, i32 0, !dbg !6890
  %387 = load i32, i32* %386, align 8, !dbg !6890
  %388 = icmp ne i32 %387, 0, !dbg !6887
  br i1 %388, label %389, label %395, !dbg !6891

; <label>:389:                                    ; preds = %384
  %390 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6892
  %391 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6894
  %392 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %391, i32 0, i32 12, !dbg !6895
  %393 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %392, align 8, !dbg !6895
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6896
  %394 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %390, %struct._Jbig2HuffmanTable* %393, i32* %43), !dbg !6896
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6897
  store i32 %394, i32* %28, align 4, !dbg !6897
  br label %401, !dbg !6898

; <label>:395:                                    ; preds = %384
  %396 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6899
  %397 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %396, i32 0, i32 18, !dbg !6901
  %398 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %397, align 8, !dbg !6901
  %399 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !6902
  %400 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %398, %struct._Jbig2ArithState* %399, i32* %28), !dbg !6903
  store i32 %400, i32* %43, align 4, !dbg !6904
  br label %401

; <label>:401:                                    ; preds = %395, %389
  %402 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6905
  %403 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %402, i32 0, i32 9, !dbg !6906
  %404 = load i32, i32* %403, align 4, !dbg !6906
  %405 = load i32, i32* %28, align 4, !dbg !6907
  %406 = mul nsw i32 %405, %404, !dbg !6907
  store i32 %406, i32* %28, align 4, !dbg !6907
  %407 = load i32, i32* %28, align 4, !dbg !6908
  %408 = load i32, i32* %26, align 4, !dbg !6909
  %409 = add nsw i32 %408, %407, !dbg !6909
  store i32 %409, i32* %26, align 4, !dbg !6909
  store i32 1, i32* %37, align 4, !dbg !6910
  br label %410, !dbg !6911

; <label>:410:                                    ; preds = %845, %401
  %411 = load i32, i32* %37, align 4, !dbg !6912
  %412 = icmp ne i32 %411, 0, !dbg !6912
  br i1 %412, label %413, label %435, !dbg !6917

; <label>:413:                                    ; preds = %410
  %414 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6918
  %415 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %414, i32 0, i32 0, !dbg !6921
  %416 = load i32, i32* %415, align 8, !dbg !6921
  %417 = icmp ne i32 %416, 0, !dbg !6918
  br i1 %417, label %418, label %424, !dbg !6922

; <label>:418:                                    ; preds = %413
  %419 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6923
  %420 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6925
  %421 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %420, i32 0, i32 10, !dbg !6926
  %422 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %421, align 8, !dbg !6926
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6927
  %423 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %419, %struct._Jbig2HuffmanTable* %422, i32* %43), !dbg !6927
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6928
  store i32 %423, i32* %29, align 4, !dbg !6928
  br label %430, !dbg !6929

; <label>:424:                                    ; preds = %413
  %425 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6930
  %426 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %425, i32 0, i32 19, !dbg !6932
  %427 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %426, align 8, !dbg !6932
  %428 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !6933
  %429 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %427, %struct._Jbig2ArithState* %428, i32* %29), !dbg !6934
  store i32 %429, i32* %43, align 4, !dbg !6935
  br label %430

; <label>:430:                                    ; preds = %424, %418
  %431 = load i32, i32* %29, align 4, !dbg !6936
  %432 = load i32, i32* %27, align 4, !dbg !6937
  %433 = add nsw i32 %432, %431, !dbg !6937
  store i32 %433, i32* %27, align 4, !dbg !6937
  %434 = load i32, i32* %27, align 4, !dbg !6938
  store i32 %434, i32* %31, align 4, !dbg !6939
  store i32 0, i32* %37, align 4, !dbg !6940
  br label %464, !dbg !6941

; <label>:435:                                    ; preds = %410
  %436 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6942
  %437 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %436, i32 0, i32 0, !dbg !6945
  %438 = load i32, i32* %437, align 8, !dbg !6945
  %439 = icmp ne i32 %438, 0, !dbg !6942
  br i1 %439, label %440, label %446, !dbg !6946

; <label>:440:                                    ; preds = %435
  %441 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6947
  %442 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6949
  %443 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %442, i32 0, i32 11, !dbg !6950
  %444 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %443, align 8, !dbg !6950
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6951
  %445 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %441, %struct._Jbig2HuffmanTable* %444, i32* %43), !dbg !6951
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6952
  store i32 %445, i32* %30, align 4, !dbg !6952
  br label %452, !dbg !6953

; <label>:446:                                    ; preds = %435
  %447 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6954
  %448 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %447, i32 0, i32 20, !dbg !6956
  %449 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %448, align 8, !dbg !6956
  %450 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !6957
  %451 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %449, %struct._Jbig2ArithState* %450, i32* %30), !dbg !6958
  store i32 %451, i32* %43, align 4, !dbg !6959
  br label %452

; <label>:452:                                    ; preds = %446, %440
  %453 = load i32, i32* %43, align 4, !dbg !6960
  %454 = icmp ne i32 %453, 0, !dbg !6960
  br i1 %454, label %455, label %456, !dbg !6962

; <label>:455:                                    ; preds = %452
  br label %850, !dbg !6963

; <label>:456:                                    ; preds = %452
  %457 = load i32, i32* %30, align 4, !dbg !6965
  %458 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6966
  %459 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %458, i32 0, i32 6, !dbg !6967
  %460 = load i32, i32* %459, align 8, !dbg !6967
  %461 = add nsw i32 %457, %460, !dbg !6968
  %462 = load i32, i32* %31, align 4, !dbg !6969
  %463 = add nsw i32 %462, %461, !dbg !6969
  store i32 %463, i32* %31, align 4, !dbg !6969
  br label %464

; <label>:464:                                    ; preds = %456, %430
  %465 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6970
  %466 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %465, i32 0, i32 9, !dbg !6972
  %467 = load i32, i32* %466, align 4, !dbg !6972
  %468 = icmp eq i32 %467, 1, !dbg !6973
  br i1 %468, label %469, label %470, !dbg !6974

; <label>:469:                                    ; preds = %464
  store i32 0, i32* %32, align 4, !dbg !6975
  br label %488, !dbg !6977

; <label>:470:                                    ; preds = %464
  %471 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6978
  %472 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %471, i32 0, i32 0, !dbg !6980
  %473 = load i32, i32* %472, align 8, !dbg !6980
  %474 = icmp ne i32 %473, 0, !dbg !6978
  br i1 %474, label %475, label %481, !dbg !6981

; <label>:475:                                    ; preds = %470
  %476 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !6982
  %477 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6984
  %478 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %477, i32 0, i32 8, !dbg !6985
  %479 = load i32, i32* %478, align 8, !dbg !6985
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !6986
  %480 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %476, i32 %479), !dbg !6986
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !6987
  store i32 %480, i32* %32, align 4, !dbg !6987
  br label %487, !dbg !6988

; <label>:481:                                    ; preds = %470
  %482 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6989
  %483 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %482, i32 0, i32 21, !dbg !6991
  %484 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %483, align 8, !dbg !6991
  %485 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !6992
  %486 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %484, %struct._Jbig2ArithState* %485, i32* %32), !dbg !6993
  store i32 %486, i32* %43, align 4, !dbg !6994
  br label %487

; <label>:487:                                    ; preds = %481, %475
  br label %488

; <label>:488:                                    ; preds = %487, %469
  %489 = load i32, i32* %26, align 4, !dbg !6995
  %490 = load i32, i32* %32, align 4, !dbg !6996
  %491 = add nsw i32 %489, %490, !dbg !6997
  store i32 %491, i32* %34, align 4, !dbg !6998
  %492 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !6999
  %493 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %492, i32 0, i32 0, !dbg !7001
  %494 = load i32, i32* %493, align 8, !dbg !7001
  %495 = icmp ne i32 %494, 0, !dbg !6999
  br i1 %495, label %496, label %500, !dbg !7002

; <label>:496:                                    ; preds = %488
  %497 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7003
  %498 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %42, align 8, !dbg !7005
  %499 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %497, %struct._Jbig2HuffmanTable* %498, i32* %43), !dbg !7006
  store i32 %499, i32* %25, align 4, !dbg !7007
  br label %506, !dbg !7008

; <label>:500:                                    ; preds = %488
  %501 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7009
  %502 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %501, i32 0, i32 22, !dbg !7011
  %503 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %502, align 8, !dbg !7011
  %504 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7012
  %505 = call i32 @jbig2_arith_iaid_decode(%struct._Jbig2ArithIaidCtx* %503, %struct._Jbig2ArithState* %504, i32* %25), !dbg !7013
  store i32 %505, i32* %43, align 4, !dbg !7014
  br label %506

; <label>:506:                                    ; preds = %500, %496
  %507 = load i32, i32* %25, align 4, !dbg !7015
  %508 = load i32, i32* %39, align 4, !dbg !7017
  %509 = icmp uge i32 %507, %508, !dbg !7018
  br i1 %509, label %510, label %518, !dbg !7019

; <label>:510:                                    ; preds = %506
  %511 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7020
  %512 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !7022
  %513 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %512, i32 0, i32 0, !dbg !7023
  %514 = load i32, i32* %513, align 8, !dbg !7023
  %515 = load i32, i32* %25, align 4, !dbg !7024
  %516 = load i32, i32* %39, align 4, !dbg !7025
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7026
  %517 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %511, i32 3, i32 %514, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.165, i32 0, i32 0), i32 %515, i32 %516), !dbg !7026
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7027
  store i32 %517, i32* %12, align 4, !dbg !7027
  br label %860, !dbg !7027

; <label>:518:                                    ; preds = %506
  call void @llvm.dbg.declare(metadata i32* %55, metadata !7028, metadata !DIExpression()), !dbg !7030
  %519 = load i32, i32* %25, align 4, !dbg !7031
  store i32 %519, i32* %55, align 4, !dbg !7030
  store i32 0, i32* %38, align 4, !dbg !7032
  br label %520, !dbg !7033

; <label>:520:                                    ; preds = %530, %518
  %521 = load i32, i32* %55, align 4, !dbg !7034
  %522 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %16, align 8, !dbg !7035
  %523 = load i32, i32* %38, align 4, !dbg !7036
  %524 = zext i32 %523 to i64, !dbg !7035
  %525 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %522, i64 %524, !dbg !7035
  %526 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %525, align 8, !dbg !7035
  %527 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %526, i32 0, i32 0, !dbg !7037
  %528 = load i32, i32* %527, align 8, !dbg !7037
  %529 = icmp uge i32 %521, %528, !dbg !7038
  br i1 %529, label %530, label %541, !dbg !7033

; <label>:530:                                    ; preds = %520
  %531 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %16, align 8, !dbg !7039
  %532 = load i32, i32* %38, align 4, !dbg !7040
  %533 = add i32 %532, 1, !dbg !7040
  store i32 %533, i32* %38, align 4, !dbg !7040
  %534 = zext i32 %532 to i64, !dbg !7039
  %535 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %531, i64 %534, !dbg !7039
  %536 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %535, align 8, !dbg !7039
  %537 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %536, i32 0, i32 0, !dbg !7041
  %538 = load i32, i32* %537, align 8, !dbg !7041
  %539 = load i32, i32* %55, align 4, !dbg !7042
  %540 = sub i32 %539, %538, !dbg !7042
  store i32 %540, i32* %55, align 4, !dbg !7042
  br label %520, !dbg !7033, !llvm.loop !7043

; <label>:541:                                    ; preds = %520
  %542 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7044
  %543 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %16, align 8, !dbg !7045
  %544 = load i32, i32* %38, align 4, !dbg !7046
  %545 = zext i32 %544 to i64, !dbg !7045
  %546 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %543, i64 %545, !dbg !7045
  %547 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %546, align 8, !dbg !7045
  %548 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %547, i32 0, i32 1, !dbg !7047
  %549 = load %struct._Jbig2Image**, %struct._Jbig2Image*** %548, align 8, !dbg !7047
  %550 = load i32, i32* %55, align 4, !dbg !7048
  %551 = zext i32 %550 to i64, !dbg !7045
  %552 = getelementptr inbounds %struct._Jbig2Image*, %struct._Jbig2Image** %549, i64 %551, !dbg !7045
  %553 = load %struct._Jbig2Image*, %struct._Jbig2Image** %552, align 8, !dbg !7045
  %554 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %542, %struct._Jbig2Image* %553), !dbg !7049
  store %struct._Jbig2Image* %554, %struct._Jbig2Image** %40, align 8, !dbg !7050
  %555 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7051
  %556 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %555, i32 0, i32 1, !dbg !7053
  %557 = load i32, i32* %556, align 4, !dbg !7053
  %558 = icmp ne i32 %557, 0, !dbg !7051
  br i1 %558, label %559, label %574, !dbg !7054

; <label>:559:                                    ; preds = %541
  %560 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7055
  %561 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %560, i32 0, i32 0, !dbg !7058
  %562 = load i32, i32* %561, align 8, !dbg !7058
  %563 = icmp ne i32 %562, 0, !dbg !7055
  br i1 %563, label %564, label %567, !dbg !7059

; <label>:564:                                    ; preds = %559
  %565 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7060
  %566 = call i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState* %565, i32 1), !dbg !7062
  store i32 %566, i32* %44, align 4, !dbg !7063
  br label %573, !dbg !7064

; <label>:567:                                    ; preds = %559
  %568 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7065
  %569 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %568, i32 0, i32 23, !dbg !7067
  %570 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %569, align 8, !dbg !7067
  %571 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7068
  %572 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %570, %struct._Jbig2ArithState* %571, i32* %44), !dbg !7069
  store i32 %572, i32* %43, align 4, !dbg !7070
  br label %573

; <label>:573:                                    ; preds = %567, %564
  br label %575, !dbg !7071

; <label>:574:                                    ; preds = %541
  store i32 0, i32* %44, align 4, !dbg !7072
  br label %575

; <label>:575:                                    ; preds = %574, %573
  %576 = load i32, i32* %44, align 4, !dbg !7074
  %577 = icmp ne i32 %576, 0, !dbg !7074
  br i1 %577, label %578, label %684, !dbg !7076

; <label>:578:                                    ; preds = %575
  call void @llvm.dbg.declare(metadata %struct.Jbig2RefinementRegionParams* %56, metadata !7077, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %57, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata i32* %58, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata i32* %59, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %60, metadata !7095, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %61, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %62, metadata !7099, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.declare(metadata i32* %63, metadata !7101, metadata !DIExpression()), !dbg !7102
  store i32 0, i32* %63, align 4, !dbg !7102
  %579 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7103
  %580 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %579, i32 0, i32 0, !dbg !7105
  %581 = load i32, i32* %580, align 8, !dbg !7105
  %582 = icmp ne i32 %581, 0, !dbg !7103
  br i1 %582, label %604, label %583, !dbg !7106

; <label>:583:                                    ; preds = %578
  %584 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7107
  %585 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %584, i32 0, i32 24, !dbg !7109
  %586 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %585, align 8, !dbg !7109
  %587 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7110
  %588 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %586, %struct._Jbig2ArithState* %587, i32* %58), !dbg !7111
  store i32 %588, i32* %43, align 4, !dbg !7112
  %589 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7113
  %590 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %589, i32 0, i32 25, !dbg !7114
  %591 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %590, align 8, !dbg !7114
  %592 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7115
  %593 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %591, %struct._Jbig2ArithState* %592, i32* %59), !dbg !7116
  store i32 %593, i32* %43, align 4, !dbg !7117
  %594 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7118
  %595 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %594, i32 0, i32 26, !dbg !7119
  %596 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %595, align 8, !dbg !7119
  %597 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7120
  %598 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %596, %struct._Jbig2ArithState* %597, i32* %60), !dbg !7121
  store i32 %598, i32* %43, align 4, !dbg !7122
  %599 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7123
  %600 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %599, i32 0, i32 27, !dbg !7124
  %601 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %600, align 8, !dbg !7124
  %602 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7125
  %603 = call i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx* %601, %struct._Jbig2ArithState* %602, i32* %61), !dbg !7126
  store i32 %603, i32* %43, align 4, !dbg !7127
  br label %631, !dbg !7128

; <label>:604:                                    ; preds = %578
  %605 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7129
  %606 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7131
  %607 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %606, i32 0, i32 13, !dbg !7132
  %608 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %607, align 8, !dbg !7132
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7133
  %609 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %605, %struct._Jbig2HuffmanTable* %608, i32* %43), !dbg !7133
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7134
  store i32 %609, i32* %58, align 4, !dbg !7134
  %610 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7135
  %611 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7136
  %612 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %611, i32 0, i32 14, !dbg !7137
  %613 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %612, align 8, !dbg !7137
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7138
  %614 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %610, %struct._Jbig2HuffmanTable* %613, i32* %43), !dbg !7138
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7139
  store i32 %614, i32* %59, align 4, !dbg !7139
  %615 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7140
  %616 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7141
  %617 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %616, i32 0, i32 15, !dbg !7142
  %618 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %617, align 8, !dbg !7142
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7143
  %619 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %615, %struct._Jbig2HuffmanTable* %618, i32* %43), !dbg !7143
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7144
  store i32 %619, i32* %60, align 4, !dbg !7144
  %620 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7145
  %621 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7146
  %622 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %621, i32 0, i32 16, !dbg !7147
  %623 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %622, align 8, !dbg !7147
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7148
  %624 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %620, %struct._Jbig2HuffmanTable* %623, i32* %43), !dbg !7148
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7149
  store i32 %624, i32* %61, align 4, !dbg !7149
  %625 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7150
  %626 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7151
  %627 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %626, i32 0, i32 17, !dbg !7152
  %628 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %627, align 8, !dbg !7152
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7153
  %629 = call i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState* %625, %struct._Jbig2HuffmanTable* %628, i32* %43), !dbg !7153
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7154
  store i32 %629, i32* %63, align 4, !dbg !7154
  %630 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7155
  call void @jbig2_huffman_skip(%struct._Jbig2HuffmanState* %630), !dbg !7156
  br label %631

; <label>:631:                                    ; preds = %604, %583
  %632 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7157
  store %struct._Jbig2Image* %632, %struct._Jbig2Image** %57, align 8, !dbg !7158
  %633 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7159
  %634 = load %struct._Jbig2Image*, %struct._Jbig2Image** %57, align 8, !dbg !7160
  %635 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %634, i32 0, i32 0, !dbg !7161
  %636 = load i32, i32* %635, align 8, !dbg !7161
  %637 = load i32, i32* %58, align 4, !dbg !7162
  %638 = add nsw i32 %636, %637, !dbg !7163
  %639 = load %struct._Jbig2Image*, %struct._Jbig2Image** %57, align 8, !dbg !7164
  %640 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %639, i32 0, i32 1, !dbg !7165
  %641 = load i32, i32* %640, align 4, !dbg !7165
  %642 = load i32, i32* %59, align 4, !dbg !7166
  %643 = add nsw i32 %641, %642, !dbg !7167
  %644 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %633, i32 %638, i32 %643), !dbg !7168
  store %struct._Jbig2Image* %644, %struct._Jbig2Image** %62, align 8, !dbg !7169
  %645 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7170
  %646 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %645, i32 0, i32 28, !dbg !7171
  %647 = load i32, i32* %646, align 8, !dbg !7171
  %648 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %56, i32 0, i32 0, !dbg !7172
  store i32 %647, i32* %648, align 8, !dbg !7173
  %649 = load %struct._Jbig2Image*, %struct._Jbig2Image** %57, align 8, !dbg !7174
  %650 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %56, i32 0, i32 1, !dbg !7175
  store %struct._Jbig2Image* %649, %struct._Jbig2Image** %650, align 8, !dbg !7176
  %651 = load i32, i32* %58, align 4, !dbg !7177
  %652 = ashr i32 %651, 1, !dbg !7178
  %653 = load i32, i32* %60, align 4, !dbg !7179
  %654 = add nsw i32 %652, %653, !dbg !7180
  %655 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %56, i32 0, i32 2, !dbg !7181
  store i32 %654, i32* %655, align 8, !dbg !7182
  %656 = load i32, i32* %59, align 4, !dbg !7183
  %657 = ashr i32 %656, 1, !dbg !7184
  %658 = load i32, i32* %61, align 4, !dbg !7185
  %659 = add nsw i32 %657, %658, !dbg !7186
  %660 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %56, i32 0, i32 3, !dbg !7187
  store i32 %659, i32* %660, align 4, !dbg !7188
  %661 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %56, i32 0, i32 4, !dbg !7189
  store i32 0, i32* %661, align 8, !dbg !7190
  %662 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %56, i32 0, i32 5, !dbg !7191
  %663 = getelementptr inbounds [4 x i8], [4 x i8]* %662, i32 0, i32 0, !dbg !7192
  %664 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7193
  %665 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %664, i32 0, i32 29, !dbg !7194
  %666 = getelementptr inbounds [4 x i8], [4 x i8]* %665, i32 0, i32 0, !dbg !7192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %663, i8* align 4 %666, i64 4, i1 false), !dbg !7192
  %667 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7195
  %668 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %14, align 8, !dbg !7196
  %669 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %22, align 8, !dbg !7197
  %670 = load %struct._Jbig2Image*, %struct._Jbig2Image** %62, align 8, !dbg !7198
  %671 = load i8*, i8** %21, align 8, !dbg !7199
  %672 = call i32 @jbig2_decode_refinement_region(%struct._Jbig2Ctx.11* %667, %struct._Jbig2Segment* %668, %struct.Jbig2RefinementRegionParams* %56, %struct._Jbig2ArithState* %669, %struct._Jbig2Image* %670, i8* %671), !dbg !7200
  %673 = load %struct._Jbig2Image*, %struct._Jbig2Image** %62, align 8, !dbg !7201
  store %struct._Jbig2Image* %673, %struct._Jbig2Image** %40, align 8, !dbg !7202
  %674 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7203
  %675 = load %struct._Jbig2Image*, %struct._Jbig2Image** %57, align 8, !dbg !7204
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %674, %struct._Jbig2Image* %675), !dbg !7205
  %676 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7206
  %677 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %676, i32 0, i32 0, !dbg !7208
  %678 = load i32, i32* %677, align 8, !dbg !7208
  %679 = icmp ne i32 %678, 0, !dbg !7206
  br i1 %679, label %680, label %683, !dbg !7209

; <label>:680:                                    ; preds = %631
  %681 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %41, align 8, !dbg !7210
  %682 = load i32, i32* %63, align 4, !dbg !7212
  call void @jbig2_huffman_advance(%struct._Jbig2HuffmanState* %681, i32 %682), !dbg !7213
  br label %683, !dbg !7214

; <label>:683:                                    ; preds = %680, %631
  br label %684, !dbg !7215

; <label>:684:                                    ; preds = %683, %575
  %685 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7216
  %686 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %685, i32 0, i32 4, !dbg !7218
  %687 = load i32, i32* %686, align 8, !dbg !7218
  %688 = icmp ne i32 %687, 0, !dbg !7216
  br i1 %688, label %701, label %689, !dbg !7219

; <label>:689:                                    ; preds = %684
  %690 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7220
  %691 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %690, i32 0, i32 5, !dbg !7221
  %692 = load i32, i32* %691, align 4, !dbg !7221
  %693 = icmp ugt i32 %692, 1, !dbg !7222
  br i1 %693, label %694, label %701, !dbg !7223

; <label>:694:                                    ; preds = %689
  %695 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7224
  %696 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %695, i32 0, i32 0, !dbg !7226
  %697 = load i32, i32* %696, align 8, !dbg !7226
  %698 = sub nsw i32 %697, 1, !dbg !7227
  %699 = load i32, i32* %31, align 4, !dbg !7228
  %700 = add nsw i32 %699, %698, !dbg !7228
  store i32 %700, i32* %31, align 4, !dbg !7228
  br label %720, !dbg !7229

; <label>:701:                                    ; preds = %689, %684
  %702 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7230
  %703 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %702, i32 0, i32 4, !dbg !7232
  %704 = load i32, i32* %703, align 8, !dbg !7232
  %705 = icmp ne i32 %704, 0, !dbg !7233
  br i1 %705, label %706, label %719, !dbg !7234

; <label>:706:                                    ; preds = %701
  %707 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7235
  %708 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %707, i32 0, i32 5, !dbg !7236
  %709 = load i32, i32* %708, align 4, !dbg !7236
  %710 = and i32 %709, 1, !dbg !7237
  %711 = icmp ne i32 %710, 0, !dbg !7237
  br i1 %711, label %719, label %712, !dbg !7238

; <label>:712:                                    ; preds = %706
  %713 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7239
  %714 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %713, i32 0, i32 1, !dbg !7241
  %715 = load i32, i32* %714, align 4, !dbg !7241
  %716 = sub nsw i32 %715, 1, !dbg !7242
  %717 = load i32, i32* %31, align 4, !dbg !7243
  %718 = add nsw i32 %717, %716, !dbg !7243
  store i32 %718, i32* %31, align 4, !dbg !7243
  br label %719, !dbg !7244

; <label>:719:                                    ; preds = %712, %706, %701
  br label %720

; <label>:720:                                    ; preds = %719, %694
  %721 = load i32, i32* %31, align 4, !dbg !7245
  store i32 %721, i32* %33, align 4, !dbg !7246
  %722 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7247
  %723 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %722, i32 0, i32 4, !dbg !7249
  %724 = load i32, i32* %723, align 8, !dbg !7249
  %725 = icmp ne i32 %724, 0, !dbg !7247
  br i1 %725, label %763, label %726, !dbg !7250

; <label>:726:                                    ; preds = %720
  %727 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7251
  %728 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %727, i32 0, i32 5, !dbg !7253
  %729 = load i32, i32* %728, align 4, !dbg !7253
  switch i32 %729, label %762 [
    i32 1, label %730
    i32 3, label %733
    i32 0, label %741
    i32 2, label %749
  ], !dbg !7254

; <label>:730:                                    ; preds = %726
  %731 = load i32, i32* %33, align 4, !dbg !7255
  store i32 %731, i32* %35, align 4, !dbg !7257
  %732 = load i32, i32* %34, align 4, !dbg !7258
  store i32 %732, i32* %36, align 4, !dbg !7259
  br label %762, !dbg !7260

; <label>:733:                                    ; preds = %726
  %734 = load i32, i32* %33, align 4, !dbg !7261
  %735 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7262
  %736 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %735, i32 0, i32 0, !dbg !7263
  %737 = load i32, i32* %736, align 8, !dbg !7263
  %738 = sub nsw i32 %734, %737, !dbg !7264
  %739 = add nsw i32 %738, 1, !dbg !7265
  store i32 %739, i32* %35, align 4, !dbg !7266
  %740 = load i32, i32* %34, align 4, !dbg !7267
  store i32 %740, i32* %36, align 4, !dbg !7268
  br label %762, !dbg !7269

; <label>:741:                                    ; preds = %726
  %742 = load i32, i32* %33, align 4, !dbg !7270
  store i32 %742, i32* %35, align 4, !dbg !7271
  %743 = load i32, i32* %34, align 4, !dbg !7272
  %744 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7273
  %745 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %744, i32 0, i32 1, !dbg !7274
  %746 = load i32, i32* %745, align 4, !dbg !7274
  %747 = sub nsw i32 %743, %746, !dbg !7275
  %748 = add nsw i32 %747, 1, !dbg !7276
  store i32 %748, i32* %36, align 4, !dbg !7277
  br label %762, !dbg !7278

; <label>:749:                                    ; preds = %726
  %750 = load i32, i32* %33, align 4, !dbg !7279
  %751 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7280
  %752 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %751, i32 0, i32 0, !dbg !7281
  %753 = load i32, i32* %752, align 8, !dbg !7281
  %754 = sub nsw i32 %750, %753, !dbg !7282
  %755 = add nsw i32 %754, 1, !dbg !7283
  store i32 %755, i32* %35, align 4, !dbg !7284
  %756 = load i32, i32* %34, align 4, !dbg !7285
  %757 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7286
  %758 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %757, i32 0, i32 1, !dbg !7287
  %759 = load i32, i32* %758, align 4, !dbg !7287
  %760 = sub nsw i32 %756, %759, !dbg !7288
  %761 = add nsw i32 %760, 1, !dbg !7289
  store i32 %761, i32* %36, align 4, !dbg !7290
  br label %762, !dbg !7291

; <label>:762:                                    ; preds = %749, %741, %733, %730, %726
  br label %800, !dbg !7292

; <label>:763:                                    ; preds = %720
  %764 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7293
  %765 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %764, i32 0, i32 5, !dbg !7295
  %766 = load i32, i32* %765, align 4, !dbg !7295
  switch i32 %766, label %799 [
    i32 1, label %767
    i32 3, label %770
    i32 0, label %778
    i32 2, label %786
  ], !dbg !7296

; <label>:767:                                    ; preds = %763
  %768 = load i32, i32* %33, align 4, !dbg !7297
  store i32 %768, i32* %36, align 4, !dbg !7299
  %769 = load i32, i32* %34, align 4, !dbg !7300
  store i32 %769, i32* %35, align 4, !dbg !7301
  br label %799, !dbg !7302

; <label>:770:                                    ; preds = %763
  %771 = load i32, i32* %33, align 4, !dbg !7303
  %772 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7304
  %773 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %772, i32 0, i32 0, !dbg !7305
  %774 = load i32, i32* %773, align 8, !dbg !7305
  %775 = sub nsw i32 %771, %774, !dbg !7306
  %776 = add nsw i32 %775, 1, !dbg !7307
  store i32 %776, i32* %36, align 4, !dbg !7308
  %777 = load i32, i32* %34, align 4, !dbg !7309
  store i32 %777, i32* %35, align 4, !dbg !7310
  br label %799, !dbg !7311

; <label>:778:                                    ; preds = %763
  %779 = load i32, i32* %33, align 4, !dbg !7312
  store i32 %779, i32* %36, align 4, !dbg !7313
  %780 = load i32, i32* %34, align 4, !dbg !7314
  %781 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7315
  %782 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %781, i32 0, i32 1, !dbg !7316
  %783 = load i32, i32* %782, align 4, !dbg !7316
  %784 = sub nsw i32 %780, %783, !dbg !7317
  %785 = add nsw i32 %784, 1, !dbg !7318
  store i32 %785, i32* %35, align 4, !dbg !7319
  br label %799, !dbg !7320

; <label>:786:                                    ; preds = %763
  %787 = load i32, i32* %33, align 4, !dbg !7321
  %788 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7322
  %789 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %788, i32 0, i32 0, !dbg !7323
  %790 = load i32, i32* %789, align 8, !dbg !7323
  %791 = sub nsw i32 %787, %790, !dbg !7324
  %792 = add nsw i32 %791, 1, !dbg !7325
  store i32 %792, i32* %36, align 4, !dbg !7326
  %793 = load i32, i32* %34, align 4, !dbg !7327
  %794 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7328
  %795 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %794, i32 0, i32 1, !dbg !7329
  %796 = load i32, i32* %795, align 4, !dbg !7329
  %797 = sub nsw i32 %793, %796, !dbg !7330
  %798 = add nsw i32 %797, 1, !dbg !7331
  store i32 %798, i32* %35, align 4, !dbg !7332
  br label %799, !dbg !7333

; <label>:799:                                    ; preds = %786, %778, %770, %767, %763
  br label %800

; <label>:800:                                    ; preds = %799, %762
  %801 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7334
  %802 = load %struct._Jbig2Image*, %struct._Jbig2Image** %18, align 8, !dbg !7335
  %803 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7336
  %804 = load i32, i32* %35, align 4, !dbg !7337
  %805 = load i32, i32* %36, align 4, !dbg !7338
  %806 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7339
  %807 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %806, i32 0, i32 3, !dbg !7340
  %808 = load i32, i32* %807, align 4, !dbg !7340
  %809 = call i32 @jbig2_image_compose(%struct._Jbig2Ctx.11* %801, %struct._Jbig2Image* %802, %struct._Jbig2Image* %803, i32 %804, i32 %805, i32 %808), !dbg !7341
  %810 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7342
  %811 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %810, i32 0, i32 4, !dbg !7344
  %812 = load i32, i32* %811, align 8, !dbg !7344
  %813 = icmp ne i32 %812, 0, !dbg !7342
  br i1 %813, label %826, label %814, !dbg !7345

; <label>:814:                                    ; preds = %800
  %815 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7346
  %816 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %815, i32 0, i32 5, !dbg !7347
  %817 = load i32, i32* %816, align 4, !dbg !7347
  %818 = icmp ult i32 %817, 2, !dbg !7348
  br i1 %818, label %819, label %826, !dbg !7349

; <label>:819:                                    ; preds = %814
  %820 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7350
  %821 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %820, i32 0, i32 0, !dbg !7352
  %822 = load i32, i32* %821, align 8, !dbg !7352
  %823 = sub nsw i32 %822, 1, !dbg !7353
  %824 = load i32, i32* %31, align 4, !dbg !7354
  %825 = add nsw i32 %824, %823, !dbg !7354
  store i32 %825, i32* %31, align 4, !dbg !7354
  br label %845, !dbg !7355

; <label>:826:                                    ; preds = %814, %800
  %827 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7356
  %828 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %827, i32 0, i32 4, !dbg !7358
  %829 = load i32, i32* %828, align 8, !dbg !7358
  %830 = icmp ne i32 %829, 0, !dbg !7359
  br i1 %830, label %831, label %844, !dbg !7360

; <label>:831:                                    ; preds = %826
  %832 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7361
  %833 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %832, i32 0, i32 5, !dbg !7362
  %834 = load i32, i32* %833, align 4, !dbg !7362
  %835 = and i32 %834, 1, !dbg !7363
  %836 = icmp ne i32 %835, 0, !dbg !7363
  br i1 %836, label %837, label %844, !dbg !7364

; <label>:837:                                    ; preds = %831
  %838 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7365
  %839 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %838, i32 0, i32 1, !dbg !7367
  %840 = load i32, i32* %839, align 4, !dbg !7367
  %841 = sub nsw i32 %840, 1, !dbg !7368
  %842 = load i32, i32* %31, align 4, !dbg !7369
  %843 = add nsw i32 %842, %841, !dbg !7369
  store i32 %843, i32* %31, align 4, !dbg !7369
  br label %844, !dbg !7370

; <label>:844:                                    ; preds = %837, %831, %826
  br label %845

; <label>:845:                                    ; preds = %844, %819
  %846 = load i32, i32* %24, align 4, !dbg !7371
  %847 = add i32 %846, 1, !dbg !7371
  store i32 %847, i32* %24, align 4, !dbg !7371
  %848 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7372
  %849 = load %struct._Jbig2Image*, %struct._Jbig2Image** %40, align 8, !dbg !7373
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %848, %struct._Jbig2Image* %849), !dbg !7374
  br label %410, !dbg !7375, !llvm.loop !7376

; <label>:850:                                    ; preds = %455
  br label %378, !dbg !6882, !llvm.loop !7379

; <label>:851:                                    ; preds = %378
  %852 = load %struct.Jbig2TextRegionParams*, %struct.Jbig2TextRegionParams** %15, align 8, !dbg !7381
  %853 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %852, i32 0, i32 0, !dbg !7383
  %854 = load i32, i32* %853, align 8, !dbg !7383
  %855 = icmp ne i32 %854, 0, !dbg !7381
  br i1 %855, label %856, label %859, !dbg !7384

; <label>:856:                                    ; preds = %851
  %857 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %13, align 8, !dbg !7385
  %858 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %42, align 8, !dbg !7387
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %857, %struct._Jbig2HuffmanTable* %858), !dbg !7388
  br label %859, !dbg !7389

; <label>:859:                                    ; preds = %856, %851
  store i32 0, i32* %12, align 4, !dbg !7390
  br label %860, !dbg !7390

; <label>:860:                                    ; preds = %859, %510, %342, %205, %195, %161, %144
  %861 = load i32, i32* %12, align 4, !dbg !7391
  ret i32 %861, !dbg !7391
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_text_region(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !7392 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.Jbig2RegionSegmentInfo, align 4
  %10 = alloca %struct.Jbig2TextRegionParams, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca %struct.Jbig2SymbolDict**, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct._Jbig2WordStream*, align 8
  %19 = alloca %struct._Jbig2ArithState*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !7395, metadata !DIExpression()), !dbg !7396
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !7397, metadata !DIExpression()), !dbg !7398
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7401, metadata !DIExpression()), !dbg !7402
  store i32 0, i32* %8, align 4, !dbg !7402
  call void @llvm.dbg.declare(metadata %struct.Jbig2RegionSegmentInfo* %9, metadata !7403, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.declare(metadata %struct.Jbig2TextRegionParams* %10, metadata !7414, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !7416, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.declare(metadata %struct.Jbig2SymbolDict*** %12, metadata !7418, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7422, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.declare(metadata i16* %14, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata i16* %15, metadata !7426, metadata !DIExpression()), !dbg !7427
  store i16 0, i16* %15, align 2, !dbg !7427
  call void @llvm.dbg.declare(metadata i8** %16, metadata !7428, metadata !DIExpression()), !dbg !7429
  store i8* null, i8** %16, align 8, !dbg !7429
  call void @llvm.dbg.declare(metadata i32* %17, metadata !7430, metadata !DIExpression()), !dbg !7431
  store i32 0, i32* %17, align 4, !dbg !7431
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %18, metadata !7432, metadata !DIExpression()), !dbg !7433
  store %struct._Jbig2WordStream* null, %struct._Jbig2WordStream** %18, align 8, !dbg !7433
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %19, metadata !7434, metadata !DIExpression()), !dbg !7435
  store %struct._Jbig2ArithState* null, %struct._Jbig2ArithState** %19, align 8, !dbg !7435
  %25 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7436
  %26 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %25, i32 0, i32 3, !dbg !7438
  %27 = load i64, i64* %26, align 8, !dbg !7438
  %28 = icmp ult i64 %27, 17, !dbg !7439
  br i1 %28, label %29, label %30, !dbg !7440

; <label>:29:                                     ; preds = %3
  br label %724, !dbg !7441

; <label>:30:                                     ; preds = %3
  %31 = load i8*, i8** %7, align 8, !dbg !7442
  call void @jbig2_get_region_segment_info(%struct.Jbig2RegionSegmentInfo* %9, i8* %31), !dbg !7443
  %32 = load i32, i32* %8, align 4, !dbg !7444
  %33 = add nsw i32 %32, 17, !dbg !7444
  store i32 %33, i32* %8, align 4, !dbg !7444
  %34 = load i8*, i8** %7, align 8, !dbg !7445
  %35 = load i32, i32* %8, align 4, !dbg !7446
  %36 = sext i32 %35 to i64, !dbg !7447
  %37 = getelementptr inbounds i8, i8* %34, i64 %36, !dbg !7447
  %38 = call signext i16 @jbig2_get_int16(i8* %37), !dbg !7448
  store i16 %38, i16* %14, align 2, !dbg !7449
  %39 = load i32, i32* %8, align 4, !dbg !7450
  %40 = add nsw i32 %39, 2, !dbg !7450
  store i32 %40, i32* %8, align 4, !dbg !7450
  %41 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7451
  %42 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7452
  %43 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %42, i32 0, i32 0, !dbg !7453
  %44 = load i32, i32* %43, align 8, !dbg !7453
  %45 = load i16, i16* %14, align 2, !dbg !7454
  %46 = zext i16 %45 to i32, !dbg !7454
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7455
  %47 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %41, i32 0, i32 %44, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.168, i32 0, i32 0), i32 %46), !dbg !7455
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7456
  %48 = load i16, i16* %14, align 2, !dbg !7456
  %49 = zext i16 %48 to i32, !dbg !7456
  %50 = and i32 %49, 1, !dbg !7457
  %51 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !7458
  store i32 %50, i32* %51, align 8, !dbg !7459
  %52 = load i16, i16* %14, align 2, !dbg !7460
  %53 = zext i16 %52 to i32, !dbg !7460
  %54 = and i32 %53, 2, !dbg !7461
  %55 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 1, !dbg !7462
  store i32 %54, i32* %55, align 4, !dbg !7463
  %56 = load i16, i16* %14, align 2, !dbg !7464
  %57 = zext i16 %56 to i32, !dbg !7464
  %58 = and i32 %57, 12, !dbg !7465
  %59 = ashr i32 %58, 2, !dbg !7466
  %60 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 8, !dbg !7467
  store i32 %59, i32* %60, align 8, !dbg !7468
  %61 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 8, !dbg !7469
  %62 = load i32, i32* %61, align 8, !dbg !7469
  %63 = shl i32 1, %62, !dbg !7470
  %64 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 9, !dbg !7471
  store i32 %63, i32* %64, align 4, !dbg !7472
  %65 = load i16, i16* %14, align 2, !dbg !7473
  %66 = zext i16 %65 to i32, !dbg !7473
  %67 = and i32 %66, 48, !dbg !7474
  %68 = ashr i32 %67, 4, !dbg !7475
  %69 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 5, !dbg !7476
  store i32 %68, i32* %69, align 4, !dbg !7477
  %70 = load i16, i16* %14, align 2, !dbg !7478
  %71 = zext i16 %70 to i32, !dbg !7478
  %72 = and i32 %71, 64, !dbg !7479
  %73 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 4, !dbg !7480
  store i32 %72, i32* %73, align 8, !dbg !7481
  %74 = load i16, i16* %14, align 2, !dbg !7482
  %75 = zext i16 %74 to i32, !dbg !7482
  %76 = and i32 %75, 384, !dbg !7483
  %77 = ashr i32 %76, 7, !dbg !7484
  %78 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 3, !dbg !7485
  store i32 %77, i32* %78, align 4, !dbg !7486
  %79 = load i16, i16* %14, align 2, !dbg !7487
  %80 = zext i16 %79 to i32, !dbg !7487
  %81 = and i32 %80, 512, !dbg !7488
  %82 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 2, !dbg !7489
  store i32 %81, i32* %82, align 8, !dbg !7490
  %83 = load i16, i16* %14, align 2, !dbg !7491
  %84 = zext i16 %83 to i32, !dbg !7491
  %85 = and i32 %84, 31744, !dbg !7492
  %86 = ashr i32 %85, 10, !dbg !7493
  %87 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 6, !dbg !7494
  store i32 %86, i32* %87, align 8, !dbg !7495
  %88 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 6, !dbg !7496
  %89 = load i32, i32* %88, align 8, !dbg !7496
  %90 = icmp sgt i32 %89, 15, !dbg !7498
  br i1 %90, label %91, label %95, !dbg !7499

; <label>:91:                                     ; preds = %30
  %92 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 6, !dbg !7500
  %93 = load i32, i32* %92, align 8, !dbg !7501
  %94 = sub nsw i32 %93, 32, !dbg !7501
  store i32 %94, i32* %92, align 8, !dbg !7501
  br label %95, !dbg !7502

; <label>:95:                                     ; preds = %91, %30
  %96 = load i16, i16* %14, align 2, !dbg !7503
  %97 = zext i16 %96 to i32, !dbg !7503
  %98 = and i32 %97, 32768, !dbg !7504
  %99 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 28, !dbg !7505
  store i32 %98, i32* %99, align 8, !dbg !7506
  %100 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 6, !dbg !7507
  %101 = load i32, i32* %100, align 8, !dbg !7507
  %102 = icmp ne i32 %101, 0, !dbg !7509
  br i1 %102, label %103, label %111, !dbg !7510

; <label>:103:                                    ; preds = %95
  %104 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7511
  %105 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7513
  %106 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %105, i32 0, i32 0, !dbg !7514
  %107 = load i32, i32* %106, align 8, !dbg !7514
  %108 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 6, !dbg !7515
  %109 = load i32, i32* %108, align 8, !dbg !7515
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7516
  %110 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %104, i32 0, i32 %107, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.169, i32 0, i32 0), i32 %109), !dbg !7516
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7517
  br label %111, !dbg !7517

; <label>:111:                                    ; preds = %103, %95
  %112 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !7518
  %113 = load i32, i32* %112, align 8, !dbg !7518
  %114 = icmp ne i32 %113, 0, !dbg !7520
  br i1 %114, label %115, label %134, !dbg !7521

; <label>:115:                                    ; preds = %111
  %116 = load i8*, i8** %7, align 8, !dbg !7522
  %117 = load i32, i32* %8, align 4, !dbg !7524
  %118 = sext i32 %117 to i64, !dbg !7525
  %119 = getelementptr inbounds i8, i8* %116, i64 %118, !dbg !7525
  %120 = call signext i16 @jbig2_get_int16(i8* %119), !dbg !7526
  store i16 %120, i16* %15, align 2, !dbg !7527
  %121 = load i32, i32* %8, align 4, !dbg !7528
  %122 = add nsw i32 %121, 2, !dbg !7528
  store i32 %122, i32* %8, align 4, !dbg !7528
  %123 = load i16, i16* %15, align 2, !dbg !7529
  %124 = zext i16 %123 to i32, !dbg !7529
  %125 = and i32 %124, 32768, !dbg !7531
  %126 = icmp ne i32 %125, 0, !dbg !7531
  br i1 %126, label %127, label %133, !dbg !7532

; <label>:127:                                    ; preds = %115
  %128 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7533
  %129 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7534
  %130 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %129, i32 0, i32 0, !dbg !7535
  %131 = load i32, i32* %130, align 8, !dbg !7535
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7536
  %132 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %128, i32 2, i32 %131, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.170, i32 0, i32 0)), !dbg !7536
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7536
  br label %133, !dbg !7536

; <label>:133:                                    ; preds = %127, %115
  br label %177, !dbg !7537

; <label>:134:                                    ; preds = %111
  %135 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 1, !dbg !7538
  %136 = load i32, i32* %135, align 4, !dbg !7538
  %137 = icmp ne i32 %136, 0, !dbg !7541
  br i1 %137, label %138, label %176, !dbg !7542

; <label>:138:                                    ; preds = %134
  %139 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 28, !dbg !7543
  %140 = load i32, i32* %139, align 8, !dbg !7543
  %141 = icmp ne i32 %140, 0, !dbg !7544
  br i1 %141, label %176, label %142, !dbg !7545

; <label>:142:                                    ; preds = %138
  %143 = load i8*, i8** %7, align 8, !dbg !7546
  %144 = load i32, i32* %8, align 4, !dbg !7548
  %145 = sext i32 %144 to i64, !dbg !7546
  %146 = getelementptr inbounds i8, i8* %143, i64 %145, !dbg !7546
  %147 = load i8, i8* %146, align 1, !dbg !7546
  %148 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 29, !dbg !7549
  %149 = getelementptr inbounds [4 x i8], [4 x i8]* %148, i64 0, i64 0, !dbg !7550
  store i8 %147, i8* %149, align 4, !dbg !7551
  %150 = load i8*, i8** %7, align 8, !dbg !7552
  %151 = load i32, i32* %8, align 4, !dbg !7553
  %152 = add nsw i32 %151, 1, !dbg !7554
  %153 = sext i32 %152 to i64, !dbg !7552
  %154 = getelementptr inbounds i8, i8* %150, i64 %153, !dbg !7552
  %155 = load i8, i8* %154, align 1, !dbg !7552
  %156 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 29, !dbg !7555
  %157 = getelementptr inbounds [4 x i8], [4 x i8]* %156, i64 0, i64 1, !dbg !7556
  store i8 %155, i8* %157, align 1, !dbg !7557
  %158 = load i8*, i8** %7, align 8, !dbg !7558
  %159 = load i32, i32* %8, align 4, !dbg !7559
  %160 = add nsw i32 %159, 2, !dbg !7560
  %161 = sext i32 %160 to i64, !dbg !7558
  %162 = getelementptr inbounds i8, i8* %158, i64 %161, !dbg !7558
  %163 = load i8, i8* %162, align 1, !dbg !7558
  %164 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 29, !dbg !7561
  %165 = getelementptr inbounds [4 x i8], [4 x i8]* %164, i64 0, i64 2, !dbg !7562
  store i8 %163, i8* %165, align 2, !dbg !7563
  %166 = load i8*, i8** %7, align 8, !dbg !7564
  %167 = load i32, i32* %8, align 4, !dbg !7565
  %168 = add nsw i32 %167, 3, !dbg !7566
  %169 = sext i32 %168 to i64, !dbg !7564
  %170 = getelementptr inbounds i8, i8* %166, i64 %169, !dbg !7564
  %171 = load i8, i8* %170, align 1, !dbg !7564
  %172 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 29, !dbg !7567
  %173 = getelementptr inbounds [4 x i8], [4 x i8]* %172, i64 0, i64 3, !dbg !7568
  store i8 %171, i8* %173, align 1, !dbg !7569
  %174 = load i32, i32* %8, align 4, !dbg !7570
  %175 = add nsw i32 %174, 4, !dbg !7570
  store i32 %175, i32* %8, align 4, !dbg !7570
  br label %176, !dbg !7571

; <label>:176:                                    ; preds = %142, %138, %134
  br label %177

; <label>:177:                                    ; preds = %176, %133
  %178 = load i8*, i8** %7, align 8, !dbg !7572
  %179 = load i32, i32* %8, align 4, !dbg !7573
  %180 = sext i32 %179 to i64, !dbg !7574
  %181 = getelementptr inbounds i8, i8* %178, i64 %180, !dbg !7574
  %182 = call i32 @jbig2_get_int32(i8* %181), !dbg !7575
  %183 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 7, !dbg !7576
  store i32 %182, i32* %183, align 4, !dbg !7577
  %184 = load i32, i32* %8, align 4, !dbg !7578
  %185 = add nsw i32 %184, 4, !dbg !7578
  store i32 %185, i32* %8, align 4, !dbg !7578
  %186 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !7579
  %187 = load i32, i32* %186, align 8, !dbg !7579
  %188 = icmp ne i32 %187, 0, !dbg !7581
  br i1 %188, label %189, label %391, !dbg !7582

; <label>:189:                                    ; preds = %177
  %190 = load i16, i16* %15, align 2, !dbg !7583
  %191 = zext i16 %190 to i32, !dbg !7583
  %192 = and i32 %191, 3, !dbg !7585
  switch i32 %192, label %208 [
    i32 0, label %193
    i32 1, label %197
    i32 3, label %201
    i32 2, label %207
  ], !dbg !7586

; <label>:193:                                    ; preds = %189
  %194 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7587
  %195 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %194, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_F), !dbg !7589
  %196 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 10, !dbg !7590
  store %struct._Jbig2HuffmanTable* %195, %struct._Jbig2HuffmanTable** %196, align 8, !dbg !7591
  br label %214, !dbg !7592

; <label>:197:                                    ; preds = %189
  %198 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7593
  %199 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %198, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_G), !dbg !7594
  %200 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 10, !dbg !7595
  store %struct._Jbig2HuffmanTable* %199, %struct._Jbig2HuffmanTable** %200, align 8, !dbg !7596
  br label %214, !dbg !7597

; <label>:201:                                    ; preds = %189
  %202 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7598
  %203 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7599
  %204 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %203, i32 0, i32 0, !dbg !7600
  %205 = load i32, i32* %204, align 8, !dbg !7600
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7601
  %206 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %202, i32 3, i32 %205, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15.171, i32 0, i32 0)), !dbg !7601
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7602
  store i32 %206, i32* %4, align 4, !dbg !7602
  br label %730, !dbg !7602

; <label>:207:                                    ; preds = %189
  br label %208, !dbg !7602

; <label>:208:                                    ; preds = %207, %189
  %209 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7603
  %210 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7604
  %211 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %210, i32 0, i32 0, !dbg !7605
  %212 = load i32, i32* %211, align 8, !dbg !7605
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7606
  %213 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %209, i32 3, i32 %212, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16.172, i32 0, i32 0)), !dbg !7606
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7607
  store i32 %213, i32* %4, align 4, !dbg !7607
  br label %730, !dbg !7607

; <label>:214:                                    ; preds = %197, %193
  %215 = load i16, i16* %15, align 2, !dbg !7608
  %216 = zext i16 %215 to i32, !dbg !7608
  %217 = and i32 %216, 12, !dbg !7609
  %218 = ashr i32 %217, 2, !dbg !7610
  switch i32 %218, label %237 [
    i32 0, label %219
    i32 1, label %223
    i32 2, label %227
    i32 3, label %231
  ], !dbg !7611

; <label>:219:                                    ; preds = %214
  %220 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7612
  %221 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %220, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_H), !dbg !7614
  %222 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 11, !dbg !7615
  store %struct._Jbig2HuffmanTable* %221, %struct._Jbig2HuffmanTable** %222, align 8, !dbg !7616
  br label %237, !dbg !7617

; <label>:223:                                    ; preds = %214
  %224 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7618
  %225 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %224, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_I), !dbg !7619
  %226 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 11, !dbg !7620
  store %struct._Jbig2HuffmanTable* %225, %struct._Jbig2HuffmanTable** %226, align 8, !dbg !7621
  br label %237, !dbg !7622

; <label>:227:                                    ; preds = %214
  %228 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7623
  %229 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %228, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_J), !dbg !7624
  %230 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 11, !dbg !7625
  store %struct._Jbig2HuffmanTable* %229, %struct._Jbig2HuffmanTable** %230, align 8, !dbg !7626
  br label %237, !dbg !7627

; <label>:231:                                    ; preds = %214
  %232 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7628
  %233 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7629
  %234 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %233, i32 0, i32 0, !dbg !7630
  %235 = load i32, i32* %234, align 8, !dbg !7630
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7631
  %236 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %232, i32 3, i32 %235, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.17.173, i32 0, i32 0)), !dbg !7631
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7632
  store i32 %236, i32* %4, align 4, !dbg !7632
  br label %730, !dbg !7632

; <label>:237:                                    ; preds = %227, %223, %219, %214
  %238 = load i16, i16* %15, align 2, !dbg !7633
  %239 = zext i16 %238 to i32, !dbg !7633
  %240 = and i32 %239, 48, !dbg !7634
  %241 = ashr i32 %240, 4, !dbg !7635
  switch i32 %241, label %260 [
    i32 0, label %242
    i32 1, label %246
    i32 2, label %250
    i32 3, label %254
  ], !dbg !7636

; <label>:242:                                    ; preds = %237
  %243 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7637
  %244 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %243, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_K), !dbg !7639
  %245 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 12, !dbg !7640
  store %struct._Jbig2HuffmanTable* %244, %struct._Jbig2HuffmanTable** %245, align 8, !dbg !7641
  br label %260, !dbg !7642

; <label>:246:                                    ; preds = %237
  %247 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7643
  %248 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %247, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_L), !dbg !7644
  %249 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 12, !dbg !7645
  store %struct._Jbig2HuffmanTable* %248, %struct._Jbig2HuffmanTable** %249, align 8, !dbg !7646
  br label %260, !dbg !7647

; <label>:250:                                    ; preds = %237
  %251 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7648
  %252 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %251, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_M), !dbg !7649
  %253 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 12, !dbg !7650
  store %struct._Jbig2HuffmanTable* %252, %struct._Jbig2HuffmanTable** %253, align 8, !dbg !7651
  br label %260, !dbg !7652

; <label>:254:                                    ; preds = %237
  %255 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7653
  %256 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7654
  %257 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %256, i32 0, i32 0, !dbg !7655
  %258 = load i32, i32* %257, align 8, !dbg !7655
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7656
  %259 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %255, i32 3, i32 %258, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18.174, i32 0, i32 0)), !dbg !7656
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7657
  store i32 %259, i32* %4, align 4, !dbg !7657
  br label %730, !dbg !7657

; <label>:260:                                    ; preds = %250, %246, %242, %237
  %261 = load i16, i16* %15, align 2, !dbg !7658
  %262 = zext i16 %261 to i32, !dbg !7658
  %263 = and i32 %262, 192, !dbg !7659
  %264 = ashr i32 %263, 6, !dbg !7660
  switch i32 %264, label %280 [
    i32 0, label %265
    i32 1, label %269
    i32 3, label %273
    i32 2, label %279
  ], !dbg !7661

; <label>:265:                                    ; preds = %260
  %266 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7662
  %267 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %266, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_N), !dbg !7664
  %268 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 13, !dbg !7665
  store %struct._Jbig2HuffmanTable* %267, %struct._Jbig2HuffmanTable** %268, align 8, !dbg !7666
  br label %286, !dbg !7667

; <label>:269:                                    ; preds = %260
  %270 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7668
  %271 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %270, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !7669
  %272 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 13, !dbg !7670
  store %struct._Jbig2HuffmanTable* %271, %struct._Jbig2HuffmanTable** %272, align 8, !dbg !7671
  br label %286, !dbg !7672

; <label>:273:                                    ; preds = %260
  %274 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7673
  %275 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7674
  %276 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %275, i32 0, i32 0, !dbg !7675
  %277 = load i32, i32* %276, align 8, !dbg !7675
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7676
  %278 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %274, i32 3, i32 %277, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.175, i32 0, i32 0)), !dbg !7676
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7677
  store i32 %278, i32* %4, align 4, !dbg !7677
  br label %730, !dbg !7677

; <label>:279:                                    ; preds = %260
  br label %280, !dbg !7677

; <label>:280:                                    ; preds = %279, %260
  %281 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7678
  %282 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7679
  %283 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %282, i32 0, i32 0, !dbg !7680
  %284 = load i32, i32* %283, align 8, !dbg !7680
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7681
  %285 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %281, i32 3, i32 %284, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20.176, i32 0, i32 0)), !dbg !7681
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7682
  store i32 %285, i32* %4, align 4, !dbg !7682
  br label %730, !dbg !7682

; <label>:286:                                    ; preds = %269, %265
  %287 = load i16, i16* %15, align 2, !dbg !7683
  %288 = zext i16 %287 to i32, !dbg !7683
  %289 = and i32 %288, 768, !dbg !7684
  %290 = ashr i32 %289, 8, !dbg !7685
  switch i32 %290, label %306 [
    i32 0, label %291
    i32 1, label %295
    i32 3, label %299
    i32 2, label %305
  ], !dbg !7686

; <label>:291:                                    ; preds = %286
  %292 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7687
  %293 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %292, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_N), !dbg !7689
  %294 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 14, !dbg !7690
  store %struct._Jbig2HuffmanTable* %293, %struct._Jbig2HuffmanTable** %294, align 8, !dbg !7691
  br label %312, !dbg !7692

; <label>:295:                                    ; preds = %286
  %296 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7693
  %297 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %296, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !7694
  %298 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 14, !dbg !7695
  store %struct._Jbig2HuffmanTable* %297, %struct._Jbig2HuffmanTable** %298, align 8, !dbg !7696
  br label %312, !dbg !7697

; <label>:299:                                    ; preds = %286
  %300 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7698
  %301 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7699
  %302 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %301, i32 0, i32 0, !dbg !7700
  %303 = load i32, i32* %302, align 8, !dbg !7700
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7701
  %304 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %300, i32 3, i32 %303, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.21.177, i32 0, i32 0)), !dbg !7701
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7702
  store i32 %304, i32* %4, align 4, !dbg !7702
  br label %730, !dbg !7702

; <label>:305:                                    ; preds = %286
  br label %306, !dbg !7702

; <label>:306:                                    ; preds = %305, %286
  %307 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7703
  %308 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7704
  %309 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %308, i32 0, i32 0, !dbg !7705
  %310 = load i32, i32* %309, align 8, !dbg !7705
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7706
  %311 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %307, i32 3, i32 %310, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22.178, i32 0, i32 0)), !dbg !7706
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7707
  store i32 %311, i32* %4, align 4, !dbg !7707
  br label %730, !dbg !7707

; <label>:312:                                    ; preds = %295, %291
  %313 = load i16, i16* %15, align 2, !dbg !7708
  %314 = zext i16 %313 to i32, !dbg !7708
  %315 = and i32 %314, 3072, !dbg !7709
  %316 = ashr i32 %315, 10, !dbg !7710
  switch i32 %316, label %332 [
    i32 0, label %317
    i32 1, label %321
    i32 3, label %325
    i32 2, label %331
  ], !dbg !7711

; <label>:317:                                    ; preds = %312
  %318 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7712
  %319 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %318, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_N), !dbg !7714
  %320 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 15, !dbg !7715
  store %struct._Jbig2HuffmanTable* %319, %struct._Jbig2HuffmanTable** %320, align 8, !dbg !7716
  br label %338, !dbg !7717

; <label>:321:                                    ; preds = %312
  %322 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7718
  %323 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %322, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !7719
  %324 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 15, !dbg !7720
  store %struct._Jbig2HuffmanTable* %323, %struct._Jbig2HuffmanTable** %324, align 8, !dbg !7721
  br label %338, !dbg !7722

; <label>:325:                                    ; preds = %312
  %326 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7723
  %327 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7724
  %328 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %327, i32 0, i32 0, !dbg !7725
  %329 = load i32, i32* %328, align 8, !dbg !7725
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7726
  %330 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %326, i32 3, i32 %329, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.23.179, i32 0, i32 0)), !dbg !7726
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7727
  store i32 %330, i32* %4, align 4, !dbg !7727
  br label %730, !dbg !7727

; <label>:331:                                    ; preds = %312
  br label %332, !dbg !7727

; <label>:332:                                    ; preds = %331, %312
  %333 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7728
  %334 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7729
  %335 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %334, i32 0, i32 0, !dbg !7730
  %336 = load i32, i32* %335, align 8, !dbg !7730
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7731
  %337 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %333, i32 3, i32 %336, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24.180, i32 0, i32 0)), !dbg !7731
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7732
  store i32 %337, i32* %4, align 4, !dbg !7732
  br label %730, !dbg !7732

; <label>:338:                                    ; preds = %321, %317
  %339 = load i16, i16* %15, align 2, !dbg !7733
  %340 = zext i16 %339 to i32, !dbg !7733
  %341 = and i32 %340, 12288, !dbg !7734
  %342 = ashr i32 %341, 12, !dbg !7735
  switch i32 %342, label %358 [
    i32 0, label %343
    i32 1, label %347
    i32 3, label %351
    i32 2, label %357
  ], !dbg !7736

; <label>:343:                                    ; preds = %338
  %344 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7737
  %345 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %344, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_N), !dbg !7739
  %346 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 16, !dbg !7740
  store %struct._Jbig2HuffmanTable* %345, %struct._Jbig2HuffmanTable** %346, align 8, !dbg !7741
  br label %364, !dbg !7742

; <label>:347:                                    ; preds = %338
  %348 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7743
  %349 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %348, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_O), !dbg !7744
  %350 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 16, !dbg !7745
  store %struct._Jbig2HuffmanTable* %349, %struct._Jbig2HuffmanTable** %350, align 8, !dbg !7746
  br label %364, !dbg !7747

; <label>:351:                                    ; preds = %338
  %352 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7748
  %353 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7749
  %354 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %353, i32 0, i32 0, !dbg !7750
  %355 = load i32, i32* %354, align 8, !dbg !7750
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7751
  %356 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %352, i32 3, i32 %355, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.181, i32 0, i32 0)), !dbg !7751
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7752
  store i32 %356, i32* %4, align 4, !dbg !7752
  br label %730, !dbg !7752

; <label>:357:                                    ; preds = %338
  br label %358, !dbg !7752

; <label>:358:                                    ; preds = %357, %338
  %359 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7753
  %360 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7754
  %361 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %360, i32 0, i32 0, !dbg !7755
  %362 = load i32, i32* %361, align 8, !dbg !7755
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7756
  %363 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %359, i32 3, i32 %362, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.26.182, i32 0, i32 0)), !dbg !7756
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7757
  store i32 %363, i32* %4, align 4, !dbg !7757
  br label %730, !dbg !7757

; <label>:364:                                    ; preds = %347, %343
  %365 = load i16, i16* %15, align 2, !dbg !7758
  %366 = zext i16 %365 to i32, !dbg !7758
  %367 = and i32 %366, 16384, !dbg !7759
  %368 = ashr i32 %367, 14, !dbg !7760
  switch i32 %368, label %379 [
    i32 0, label %369
    i32 1, label %373
  ], !dbg !7761

; <label>:369:                                    ; preds = %364
  %370 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7762
  %371 = call %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11* %370, %struct._Jbig2HuffmanParams* @jbig2_huffman_params_A), !dbg !7764
  %372 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 17, !dbg !7765
  store %struct._Jbig2HuffmanTable* %371, %struct._Jbig2HuffmanTable** %372, align 8, !dbg !7766
  br label %379, !dbg !7767

; <label>:373:                                    ; preds = %364
  %374 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7768
  %375 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7769
  %376 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %375, i32 0, i32 0, !dbg !7770
  %377 = load i32, i32* %376, align 8, !dbg !7770
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7771
  %378 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %374, i32 3, i32 %377, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27.183, i32 0, i32 0)), !dbg !7771
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7772
  store i32 %378, i32* %4, align 4, !dbg !7772
  br label %730, !dbg !7772

; <label>:379:                                    ; preds = %369, %364
  %380 = load i16, i16* %15, align 2, !dbg !7773
  %381 = zext i16 %380 to i32, !dbg !7773
  %382 = and i32 %381, 32768, !dbg !7775
  %383 = icmp ne i32 %382, 0, !dbg !7775
  br i1 %383, label %384, label %390, !dbg !7776

; <label>:384:                                    ; preds = %379
  %385 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7777
  %386 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7779
  %387 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %386, i32 0, i32 0, !dbg !7780
  %388 = load i32, i32* %387, align 8, !dbg !7780
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7781
  %389 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %385, i32 2, i32 %388, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.28.184, i32 0, i32 0)), !dbg !7781
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7782
  br label %390, !dbg !7782

; <label>:390:                                    ; preds = %384, %379
  br label %391, !dbg !7783

; <label>:391:                                    ; preds = %390, %177
  %392 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7784
  %393 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7785
  %394 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %393, i32 0, i32 0, !dbg !7786
  %395 = load i32, i32* %394, align 8, !dbg !7786
  %396 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !7787
  %397 = load i32, i32* %396, align 4, !dbg !7787
  %398 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !7788
  %399 = load i32, i32* %398, align 4, !dbg !7788
  %400 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 2, !dbg !7789
  %401 = load i32, i32* %400, align 4, !dbg !7789
  %402 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 3, !dbg !7790
  %403 = load i32, i32* %402, align 4, !dbg !7790
  %404 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 7, !dbg !7791
  %405 = load i32, i32* %404, align 4, !dbg !7791
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7792
  %406 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %392, i32 1, i32 %395, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29.185, i32 0, i32 0), i32 %397, i32 %399, i32 %401, i32 %403, i32 %405), !dbg !7792
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7793
  %407 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7793
  %408 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7794
  %409 = call i32 @jbig2_sd_count_referred(%struct._Jbig2Ctx.11* %407, %struct._Jbig2Segment* %408), !dbg !7795
  store i32 %409, i32* %13, align 4, !dbg !7796
  %410 = load i32, i32* %13, align 4, !dbg !7797
  %411 = icmp ne i32 %410, 0, !dbg !7799
  br i1 %411, label %412, label %416, !dbg !7800

; <label>:412:                                    ; preds = %391
  %413 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7801
  %414 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7803
  %415 = call %struct.Jbig2SymbolDict** @jbig2_sd_list_referred(%struct._Jbig2Ctx.11* %413, %struct._Jbig2Segment* %414), !dbg !7804
  store %struct.Jbig2SymbolDict** %415, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !7805
  br label %422, !dbg !7806

; <label>:416:                                    ; preds = %391
  %417 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7807
  %418 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7809
  %419 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %418, i32 0, i32 0, !dbg !7810
  %420 = load i32, i32* %419, align 8, !dbg !7810
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7811
  %421 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %417, i32 3, i32 %420, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30.186, i32 0, i32 0)), !dbg !7811
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7812
  store i32 %421, i32* %4, align 4, !dbg !7812
  br label %730, !dbg !7812

; <label>:422:                                    ; preds = %412
  %423 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !7813
  %424 = icmp eq %struct.Jbig2SymbolDict** %423, null, !dbg !7815
  br i1 %424, label %425, label %431, !dbg !7816

; <label>:425:                                    ; preds = %422
  %426 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7817
  %427 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7819
  %428 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %427, i32 0, i32 0, !dbg !7820
  %429 = load i32, i32* %428, align 8, !dbg !7820
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7821
  %430 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %426, i32 3, i32 %429, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.31.187, i32 0, i32 0)), !dbg !7821
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7822
  store i32 %430, i32* %4, align 4, !dbg !7822
  br label %730, !dbg !7822

; <label>:431:                                    ; preds = %422
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7823, metadata !DIExpression()), !dbg !7825
  %432 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !7826
  %433 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %432, i64 0, !dbg !7826
  %434 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %433, align 8, !dbg !7826
  %435 = icmp eq %struct.Jbig2SymbolDict* %434, null, !dbg !7828
  br i1 %435, label %436, label %442, !dbg !7829

; <label>:436:                                    ; preds = %431
  %437 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7830
  %438 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7832
  %439 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %438, i32 0, i32 0, !dbg !7833
  %440 = load i32, i32* %439, align 8, !dbg !7833
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7834
  %441 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %437, i32 2, i32 %440, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.32.188, i32 0, i32 0)), !dbg !7834
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7835
  store i32 %441, i32* %4, align 4, !dbg !7835
  br label %730, !dbg !7835

; <label>:442:                                    ; preds = %431
  store i32 1, i32* %20, align 4, !dbg !7836
  br label %443, !dbg !7838

; <label>:443:                                    ; preds = %462, %442
  %444 = load i32, i32* %20, align 4, !dbg !7839
  %445 = load i32, i32* %13, align 4, !dbg !7841
  %446 = icmp slt i32 %444, %445, !dbg !7842
  br i1 %446, label %447, label %465, !dbg !7843

; <label>:447:                                    ; preds = %443
  %448 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !7844
  %449 = load i32, i32* %20, align 4, !dbg !7846
  %450 = sext i32 %449 to i64, !dbg !7844
  %451 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %448, i64 %450, !dbg !7844
  %452 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %451, align 8, !dbg !7844
  %453 = icmp eq %struct.Jbig2SymbolDict* %452, null, !dbg !7847
  br i1 %453, label %454, label %461, !dbg !7848

; <label>:454:                                    ; preds = %447
  %455 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7849
  %456 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7851
  %457 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %456, i32 0, i32 0, !dbg !7852
  %458 = load i32, i32* %457, align 8, !dbg !7852
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !7853
  %459 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %455, i32 2, i32 %458, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.33.189, i32 0, i32 0)), !dbg !7853
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !7854
  %460 = load i32, i32* %20, align 4, !dbg !7854
  store i32 %460, i32* %13, align 4, !dbg !7855
  br label %461, !dbg !7856

; <label>:461:                                    ; preds = %454, %447
  br label %462, !dbg !7857

; <label>:462:                                    ; preds = %461
  %463 = load i32, i32* %20, align 4, !dbg !7858
  %464 = add nsw i32 %463, 1, !dbg !7858
  store i32 %464, i32* %20, align 4, !dbg !7858
  br label %443, !dbg !7859, !llvm.loop !7860

; <label>:465:                                    ; preds = %443
  br label %466

; <label>:466:                                    ; preds = %465
  %467 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !7862
  %468 = load i32, i32* %467, align 8, !dbg !7862
  %469 = icmp ne i32 %468, 0, !dbg !7864
  br i1 %469, label %489, label %470, !dbg !7865

; <label>:470:                                    ; preds = %466
  %471 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 1, !dbg !7866
  %472 = load i32, i32* %471, align 4, !dbg !7866
  %473 = icmp ne i32 %472, 0, !dbg !7867
  br i1 %473, label %474, label %489, !dbg !7868

; <label>:474:                                    ; preds = %470
  call void @llvm.dbg.declare(metadata i32* %21, metadata !7869, metadata !DIExpression()), !dbg !7871
  %475 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 28, !dbg !7872
  %476 = load i32, i32* %475, align 8, !dbg !7872
  %477 = icmp ne i32 %476, 0, !dbg !7873
  %478 = zext i1 %477 to i64, !dbg !7873
  %479 = select i1 %477, i32 1024, i32 8192, !dbg !7873
  store i32 %479, i32* %21, align 4, !dbg !7871
  %480 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7874
  %481 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %480, i32 0, i32 0, !dbg !7875
  %482 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %481, align 8, !dbg !7875
  %483 = load i32, i32* %21, align 4, !dbg !7876
  %484 = sext i32 %483 to i64, !dbg !7876
  %485 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %482, i64 %484), !dbg !7877
  store i8* %485, i8** %16, align 8, !dbg !7878
  %486 = load i8*, i8** %16, align 8, !dbg !7879
  %487 = load i32, i32* %21, align 4, !dbg !7880
  %488 = sext i32 %487 to i64, !dbg !7880
  call void @llvm.memset.p0i8.i64(i8* align 1 %486, i8 0, i64 %488, i1 false), !dbg !7881
  br label %489, !dbg !7882

; <label>:489:                                    ; preds = %474, %470, %466
  %490 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7883
  %491 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !7884
  %492 = load i32, i32* %491, align 4, !dbg !7884
  %493 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !7885
  %494 = load i32, i32* %493, align 4, !dbg !7885
  %495 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %490, i32 %492, i32 %494), !dbg !7886
  store %struct._Jbig2Image* %495, %struct._Jbig2Image** %11, align 8, !dbg !7887
  %496 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7888
  %497 = load i8*, i8** %7, align 8, !dbg !7889
  %498 = load i32, i32* %8, align 4, !dbg !7890
  %499 = sext i32 %498 to i64, !dbg !7891
  %500 = getelementptr inbounds i8, i8* %497, i64 %499, !dbg !7891
  %501 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7892
  %502 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %501, i32 0, i32 3, !dbg !7893
  %503 = load i64, i64* %502, align 8, !dbg !7893
  %504 = load i32, i32* %8, align 4, !dbg !7894
  %505 = sext i32 %504 to i64, !dbg !7894
  %506 = sub i64 %503, %505, !dbg !7895
  %507 = call %struct._Jbig2WordStream* bitcast (%struct._Jbig2WordStream* (%struct._Jbig2Ctx*, i8*, i64)* @jbig2_word_stream_buf_new to %struct._Jbig2WordStream* (%struct._Jbig2Ctx.11*, i8*, i64)*)(%struct._Jbig2Ctx.11* %496, i8* %500, i64 %506), !dbg !7896
  store %struct._Jbig2WordStream* %507, %struct._Jbig2WordStream** %18, align 8, !dbg !7897
  %508 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !7898
  %509 = load i32, i32* %508, align 8, !dbg !7898
  %510 = icmp ne i32 %509, 0, !dbg !7900
  br i1 %510, label %574, label %511, !dbg !7901

; <label>:511:                                    ; preds = %489
  call void @llvm.dbg.declare(metadata i32* %22, metadata !7902, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.declare(metadata i32* %23, metadata !7905, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.declare(metadata i32* %24, metadata !7907, metadata !DIExpression()), !dbg !7908
  store i32 0, i32* %24, align 4, !dbg !7908
  store i32 0, i32* %23, align 4, !dbg !7909
  br label %512, !dbg !7911

; <label>:512:                                    ; preds = %526, %511
  %513 = load i32, i32* %23, align 4, !dbg !7912
  %514 = load i32, i32* %13, align 4, !dbg !7914
  %515 = icmp slt i32 %513, %514, !dbg !7915
  br i1 %515, label %516, label %529, !dbg !7916

; <label>:516:                                    ; preds = %512
  %517 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !7917
  %518 = load i32, i32* %23, align 4, !dbg !7919
  %519 = sext i32 %518 to i64, !dbg !7917
  %520 = getelementptr inbounds %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %517, i64 %519, !dbg !7917
  %521 = load %struct.Jbig2SymbolDict*, %struct.Jbig2SymbolDict** %520, align 8, !dbg !7917
  %522 = getelementptr inbounds %struct.Jbig2SymbolDict, %struct.Jbig2SymbolDict* %521, i32 0, i32 0, !dbg !7920
  %523 = load i32, i32* %522, align 8, !dbg !7920
  %524 = load i32, i32* %24, align 4, !dbg !7921
  %525 = add nsw i32 %524, %523, !dbg !7921
  store i32 %525, i32* %24, align 4, !dbg !7921
  br label %526, !dbg !7922

; <label>:526:                                    ; preds = %516
  %527 = load i32, i32* %23, align 4, !dbg !7923
  %528 = add nsw i32 %527, 1, !dbg !7923
  store i32 %528, i32* %23, align 4, !dbg !7923
  br label %512, !dbg !7924, !llvm.loop !7925

; <label>:529:                                    ; preds = %512
  %530 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7927
  %531 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %18, align 8, !dbg !7928
  %532 = call %struct._Jbig2ArithState* @jbig2_arith_new(%struct._Jbig2Ctx.11* %530, %struct._Jbig2WordStream* %531), !dbg !7929
  store %struct._Jbig2ArithState* %532, %struct._Jbig2ArithState** %19, align 8, !dbg !7930
  store %struct._Jbig2WordStream* null, %struct._Jbig2WordStream** %18, align 8, !dbg !7931
  %533 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7932
  %534 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %533), !dbg !7933
  %535 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 18, !dbg !7934
  store %struct._Jbig2ArithIntCtx* %534, %struct._Jbig2ArithIntCtx** %535, align 8, !dbg !7935
  %536 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7936
  %537 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %536), !dbg !7937
  %538 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 19, !dbg !7938
  store %struct._Jbig2ArithIntCtx* %537, %struct._Jbig2ArithIntCtx** %538, align 8, !dbg !7939
  %539 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7940
  %540 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %539), !dbg !7941
  %541 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 20, !dbg !7942
  store %struct._Jbig2ArithIntCtx* %540, %struct._Jbig2ArithIntCtx** %541, align 8, !dbg !7943
  %542 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7944
  %543 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %542), !dbg !7945
  %544 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 21, !dbg !7946
  store %struct._Jbig2ArithIntCtx* %543, %struct._Jbig2ArithIntCtx** %544, align 8, !dbg !7947
  store i32 0, i32* %22, align 4, !dbg !7948
  br label %545, !dbg !7950

; <label>:545:                                    ; preds = %551, %529
  %546 = load i32, i32* %22, align 4, !dbg !7951
  %547 = shl i32 1, %546, !dbg !7953
  %548 = load i32, i32* %24, align 4, !dbg !7954
  %549 = icmp slt i32 %547, %548, !dbg !7955
  br i1 %549, label %550, label %554, !dbg !7956

; <label>:550:                                    ; preds = %545
  br label %551, !dbg !7956

; <label>:551:                                    ; preds = %550
  %552 = load i32, i32* %22, align 4, !dbg !7957
  %553 = add nsw i32 %552, 1, !dbg !7957
  store i32 %553, i32* %22, align 4, !dbg !7957
  br label %545, !dbg !7958, !llvm.loop !7959

; <label>:554:                                    ; preds = %545
  %555 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7961
  %556 = load i32, i32* %22, align 4, !dbg !7962
  %557 = call %struct._Jbig2ArithIaidCtx* @jbig2_arith_iaid_ctx_new(%struct._Jbig2Ctx.11* %555, i32 %556), !dbg !7963
  %558 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 22, !dbg !7964
  store %struct._Jbig2ArithIaidCtx* %557, %struct._Jbig2ArithIaidCtx** %558, align 8, !dbg !7965
  %559 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7966
  %560 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %559), !dbg !7967
  %561 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 23, !dbg !7968
  store %struct._Jbig2ArithIntCtx* %560, %struct._Jbig2ArithIntCtx** %561, align 8, !dbg !7969
  %562 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7970
  %563 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %562), !dbg !7971
  %564 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 24, !dbg !7972
  store %struct._Jbig2ArithIntCtx* %563, %struct._Jbig2ArithIntCtx** %564, align 8, !dbg !7973
  %565 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7974
  %566 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %565), !dbg !7975
  %567 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 25, !dbg !7976
  store %struct._Jbig2ArithIntCtx* %566, %struct._Jbig2ArithIntCtx** %567, align 8, !dbg !7977
  %568 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7978
  %569 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %568), !dbg !7979
  %570 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 26, !dbg !7980
  store %struct._Jbig2ArithIntCtx* %569, %struct._Jbig2ArithIntCtx** %570, align 8, !dbg !7981
  %571 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7982
  %572 = call %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11* %571), !dbg !7983
  %573 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 27, !dbg !7984
  store %struct._Jbig2ArithIntCtx* %572, %struct._Jbig2ArithIntCtx** %573, align 8, !dbg !7985
  br label %574, !dbg !7986

; <label>:574:                                    ; preds = %554, %489
  %575 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !7987
  %576 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7988
  %577 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !7989
  %578 = load i32, i32* %13, align 4, !dbg !7990
  %579 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !7991
  %580 = load i8*, i8** %7, align 8, !dbg !7992
  %581 = load i32, i32* %8, align 4, !dbg !7993
  %582 = sext i32 %581 to i64, !dbg !7994
  %583 = getelementptr inbounds i8, i8* %580, i64 %582, !dbg !7994
  %584 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !7995
  %585 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %584, i32 0, i32 3, !dbg !7996
  %586 = load i64, i64* %585, align 8, !dbg !7996
  %587 = load i32, i32* %8, align 4, !dbg !7997
  %588 = sext i32 %587 to i64, !dbg !7997
  %589 = sub i64 %586, %588, !dbg !7998
  %590 = load i8*, i8** %16, align 8, !dbg !7999
  %591 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %19, align 8, !dbg !8000
  %592 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %18, align 8, !dbg !8001
  %593 = call i32 @jbig2_decode_text_region(%struct._Jbig2Ctx.11* %575, %struct._Jbig2Segment* %576, %struct.Jbig2TextRegionParams* %10, %struct.Jbig2SymbolDict** %577, i32 %578, %struct._Jbig2Image* %579, i8* %583, i64 %589, i8* %590, %struct._Jbig2ArithState* %591, %struct._Jbig2WordStream* %592), !dbg !8002
  store i32 %593, i32* %17, align 4, !dbg !8003
  %594 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !8004
  %595 = load i32, i32* %594, align 8, !dbg !8004
  %596 = icmp ne i32 %595, 0, !dbg !8006
  br i1 %596, label %606, label %597, !dbg !8007

; <label>:597:                                    ; preds = %574
  %598 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 1, !dbg !8008
  %599 = load i32, i32* %598, align 4, !dbg !8008
  %600 = icmp ne i32 %599, 0, !dbg !8009
  br i1 %600, label %601, label %606, !dbg !8010

; <label>:601:                                    ; preds = %597
  %602 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8011
  %603 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %602, i32 0, i32 0, !dbg !8013
  %604 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %603, align 8, !dbg !8013
  %605 = load i8*, i8** %16, align 8, !dbg !8014
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %604, i8* %605), !dbg !8015
  br label %606, !dbg !8016

; <label>:606:                                    ; preds = %601, %597, %574
  %607 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 0, !dbg !8017
  %608 = load i32, i32* %607, align 8, !dbg !8017
  %609 = icmp ne i32 %608, 0, !dbg !8019
  br i1 %609, label %610, label %635, !dbg !8020

; <label>:610:                                    ; preds = %606
  %611 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8021
  %612 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 10, !dbg !8023
  %613 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %612, align 8, !dbg !8023
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %611, %struct._Jbig2HuffmanTable* %613), !dbg !8024
  %614 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8025
  %615 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 11, !dbg !8026
  %616 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %615, align 8, !dbg !8026
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %614, %struct._Jbig2HuffmanTable* %616), !dbg !8027
  %617 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8028
  %618 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 12, !dbg !8029
  %619 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %618, align 8, !dbg !8029
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %617, %struct._Jbig2HuffmanTable* %619), !dbg !8030
  %620 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8031
  %621 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 15, !dbg !8032
  %622 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %621, align 8, !dbg !8032
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %620, %struct._Jbig2HuffmanTable* %622), !dbg !8033
  %623 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8034
  %624 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 16, !dbg !8035
  %625 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %624, align 8, !dbg !8035
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %623, %struct._Jbig2HuffmanTable* %625), !dbg !8036
  %626 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8037
  %627 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 13, !dbg !8038
  %628 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %627, align 8, !dbg !8038
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %626, %struct._Jbig2HuffmanTable* %628), !dbg !8039
  %629 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8040
  %630 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 14, !dbg !8041
  %631 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %630, align 8, !dbg !8041
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %629, %struct._Jbig2HuffmanTable* %631), !dbg !8042
  %632 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8043
  %633 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 17, !dbg !8044
  %634 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %633, align 8, !dbg !8044
  call void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11* %632, %struct._Jbig2HuffmanTable* %634), !dbg !8045
  br label %673, !dbg !8046

; <label>:635:                                    ; preds = %606
  %636 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8047
  %637 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 18, !dbg !8049
  %638 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %637, align 8, !dbg !8049
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %636, %struct._Jbig2ArithIntCtx* %638), !dbg !8050
  %639 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8051
  %640 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 19, !dbg !8052
  %641 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %640, align 8, !dbg !8052
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %639, %struct._Jbig2ArithIntCtx* %641), !dbg !8053
  %642 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8054
  %643 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 20, !dbg !8055
  %644 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %643, align 8, !dbg !8055
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %642, %struct._Jbig2ArithIntCtx* %644), !dbg !8056
  %645 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8057
  %646 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 21, !dbg !8058
  %647 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %646, align 8, !dbg !8058
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %645, %struct._Jbig2ArithIntCtx* %647), !dbg !8059
  %648 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8060
  %649 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 22, !dbg !8061
  %650 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %649, align 8, !dbg !8061
  call void @jbig2_arith_iaid_ctx_free(%struct._Jbig2Ctx.11* %648, %struct._Jbig2ArithIaidCtx* %650), !dbg !8062
  %651 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8063
  %652 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 23, !dbg !8064
  %653 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %652, align 8, !dbg !8064
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %651, %struct._Jbig2ArithIntCtx* %653), !dbg !8065
  %654 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8066
  %655 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 24, !dbg !8067
  %656 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %655, align 8, !dbg !8067
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %654, %struct._Jbig2ArithIntCtx* %656), !dbg !8068
  %657 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8069
  %658 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 25, !dbg !8070
  %659 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %658, align 8, !dbg !8070
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %657, %struct._Jbig2ArithIntCtx* %659), !dbg !8071
  %660 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8072
  %661 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 26, !dbg !8073
  %662 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %661, align 8, !dbg !8073
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %660, %struct._Jbig2ArithIntCtx* %662), !dbg !8074
  %663 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8075
  %664 = getelementptr inbounds %struct.Jbig2TextRegionParams, %struct.Jbig2TextRegionParams* %10, i32 0, i32 27, !dbg !8076
  %665 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %664, align 8, !dbg !8076
  call void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11* %663, %struct._Jbig2ArithIntCtx* %665), !dbg !8077
  %666 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8078
  %667 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %666, i32 0, i32 0, !dbg !8079
  %668 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %667, align 8, !dbg !8079
  %669 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %19, align 8, !dbg !8080
  %670 = bitcast %struct._Jbig2ArithState* %669 to i8*, !dbg !8080
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %668, i8* %670), !dbg !8081
  %671 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8082
  %672 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %18, align 8, !dbg !8083
  call void bitcast (void (%struct._Jbig2Ctx*, %struct._Jbig2WordStream*)* @jbig2_word_stream_buf_free to void (%struct._Jbig2Ctx.11*, %struct._Jbig2WordStream*)*)(%struct._Jbig2Ctx.11* %671, %struct._Jbig2WordStream* %672), !dbg !8084
  br label %673

; <label>:673:                                    ; preds = %635, %610
  %674 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8085
  %675 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %674, i32 0, i32 0, !dbg !8086
  %676 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %675, align 8, !dbg !8086
  %677 = load %struct.Jbig2SymbolDict**, %struct.Jbig2SymbolDict*** %12, align 8, !dbg !8087
  %678 = bitcast %struct.Jbig2SymbolDict** %677 to i8*, !dbg !8087
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %676, i8* %678), !dbg !8088
  %679 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !8089
  %680 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %679, i32 0, i32 1, !dbg !8091
  %681 = load i8, i8* %680, align 4, !dbg !8091
  %682 = zext i8 %681 to i32, !dbg !8089
  %683 = and i32 %682, 63, !dbg !8092
  %684 = icmp eq i32 %683, 4, !dbg !8093
  br i1 %684, label %685, label %690, !dbg !8094

; <label>:685:                                    ; preds = %673
  %686 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8095
  %687 = bitcast %struct._Jbig2Image* %686 to i8*, !dbg !8095
  %688 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !8097
  %689 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %688, i32 0, i32 6, !dbg !8098
  store i8* %687, i8** %689, align 8, !dbg !8099
  br label %723, !dbg !8100

; <label>:690:                                    ; preds = %673
  %691 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8101
  %692 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !8103
  %693 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %692, i32 0, i32 0, !dbg !8104
  %694 = load i32, i32* %693, align 8, !dbg !8104
  %695 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !8105
  %696 = load i32, i32* %695, align 4, !dbg !8105
  %697 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !8106
  %698 = load i32, i32* %697, align 4, !dbg !8106
  %699 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 2, !dbg !8107
  %700 = load i32, i32* %699, align 4, !dbg !8107
  %701 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 3, !dbg !8108
  %702 = load i32, i32* %701, align 4, !dbg !8108
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !8109
  %703 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %691, i32 0, i32 %694, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.34.190, i32 0, i32 0), i32 %696, i32 %698, i32 %700, i32 %702), !dbg !8109
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !8110
  %704 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8110
  %705 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8111
  %706 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %705, i32 0, i32 18, !dbg !8112
  %707 = load %struct._Jbig2Page*, %struct._Jbig2Page** %706, align 8, !dbg !8112
  %708 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8113
  %709 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %708, i32 0, i32 16, !dbg !8114
  %710 = load i32, i32* %709, align 8, !dbg !8114
  %711 = sext i32 %710 to i64, !dbg !8111
  %712 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %707, i64 %711, !dbg !8111
  %713 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8115
  %714 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 2, !dbg !8116
  %715 = load i32, i32* %714, align 4, !dbg !8116
  %716 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 3, !dbg !8117
  %717 = load i32, i32* %716, align 4, !dbg !8117
  %718 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 4, !dbg !8118
  %719 = load i32, i32* %718, align 4, !dbg !8118
  %720 = call i32 @jbig2_page_add_result(%struct._Jbig2Ctx.11* %704, %struct._Jbig2Page* %712, %struct._Jbig2Image* %713, i32 %715, i32 %717, i32 %719), !dbg !8119
  %721 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8120
  %722 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8121
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %721, %struct._Jbig2Image* %722), !dbg !8122
  br label %723

; <label>:723:                                    ; preds = %690, %685
  store i32 0, i32* %4, align 4, !dbg !8123
  br label %730, !dbg !8123

; <label>:724:                                    ; preds = %29
  %725 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !8124
  %726 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !8125
  %727 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %726, i32 0, i32 0, !dbg !8126
  %728 = load i32, i32* %727, align 8, !dbg !8126
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !8127
  %729 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %725, i32 3, i32 %728, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.191, i32 0, i32 0)), !dbg !8127
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !8128
  store i32 %729, i32* %4, align 4, !dbg !8128
  br label %730, !dbg !8128

; <label>:730:                                    ; preds = %724, %723, %436, %425, %416, %373, %358, %351, %332, %325, %306, %299, %280, %273, %254, %231, %208, %201
  %731 = load i32, i32* %4, align 4, !dbg !8129
  ret i32 %731, !dbg !8129
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_generic_stats_size(%struct._Jbig2Ctx.11*, i32) #0 !dbg !8130 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !8210, metadata !DIExpression()), !dbg !8211
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8212, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8214, metadata !DIExpression()), !dbg !8215
  %6 = load i32, i32* %4, align 4, !dbg !8216
  %7 = icmp eq i32 %6, 0, !dbg !8217
  br i1 %7, label %8, label %9, !dbg !8216

; <label>:8:                                      ; preds = %2
  br label %14, !dbg !8216

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %4, align 4, !dbg !8218
  %11 = icmp eq i32 %10, 1, !dbg !8219
  %12 = zext i1 %11 to i64, !dbg !8218
  %13 = select i1 %11, i32 16384, i32 1024, !dbg !8218
  br label %14, !dbg !8216

; <label>:14:                                     ; preds = %9, %8
  %15 = phi i32 [ 65536, %8 ], [ %13, %9 ], !dbg !8216
  store i32 %15, i32* %5, align 4, !dbg !8215
  %16 = load i32, i32* %5, align 4, !dbg !8220
  ret i32 %16, !dbg !8221
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_decode_generic_region(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !8222 {
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2Ctx.11*, align 8
  %9 = alloca %struct._Jbig2Segment*, align 8
  %10 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %11 = alloca %struct._Jbig2ArithState*, align 8
  %12 = alloca %struct._Jbig2Image*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %8, metadata !8235, metadata !DIExpression()), !dbg !8236
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %9, metadata !8237, metadata !DIExpression()), !dbg !8238
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %10, metadata !8239, metadata !DIExpression()), !dbg !8240
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %11, metadata !8241, metadata !DIExpression()), !dbg !8242
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %12, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %12, metadata !8243, metadata !DIExpression()), !dbg !8244
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata i8** %14, metadata !8247, metadata !DIExpression()), !dbg !8250
  %16 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8251
  %17 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %16, i32 0, i32 4, !dbg !8252
  %18 = getelementptr inbounds [8 x i8], [8 x i8]* %17, i32 0, i32 0, !dbg !8251
  store i8* %18, i8** %14, align 8, !dbg !8250
  %19 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8253
  %20 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %19, i32 0, i32 0, !dbg !8255
  %21 = load i32, i32* %20, align 4, !dbg !8255
  %22 = icmp ne i32 %21, 0, !dbg !8253
  br i1 %22, label %92, label %23, !dbg !8256

; <label>:23:                                     ; preds = %6
  %24 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8257
  %25 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %24, i32 0, i32 1, !dbg !8258
  %26 = load i32, i32* %25, align 4, !dbg !8258
  %27 = icmp eq i32 %26, 0, !dbg !8259
  br i1 %27, label %28, label %92, !dbg !8260

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %14, align 8, !dbg !8261
  %30 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !8261
  %31 = load i8, i8* %30, align 1, !dbg !8261
  %32 = sext i8 %31 to i32, !dbg !8261
  %33 = icmp eq i32 %32, 3, !dbg !8264
  br i1 %33, label %34, label %84, !dbg !8265

; <label>:34:                                     ; preds = %28
  %35 = load i8*, i8** %14, align 8, !dbg !8266
  %36 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !8266
  %37 = load i8, i8* %36, align 1, !dbg !8266
  %38 = sext i8 %37 to i32, !dbg !8266
  %39 = icmp eq i32 %38, -1, !dbg !8267
  br i1 %39, label %40, label %84, !dbg !8268

; <label>:40:                                     ; preds = %34
  %41 = load i8*, i8** %14, align 8, !dbg !8269
  %42 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !8269
  %43 = load i8, i8* %42, align 1, !dbg !8269
  %44 = sext i8 %43 to i32, !dbg !8269
  %45 = icmp eq i32 %44, -3, !dbg !8270
  br i1 %45, label %46, label %84, !dbg !8271

; <label>:46:                                     ; preds = %40
  %47 = load i8*, i8** %14, align 8, !dbg !8272
  %48 = getelementptr inbounds i8, i8* %47, i64 3, !dbg !8272
  %49 = load i8, i8* %48, align 1, !dbg !8272
  %50 = sext i8 %49 to i32, !dbg !8272
  %51 = icmp eq i32 %50, -1, !dbg !8273
  br i1 %51, label %52, label %84, !dbg !8274

; <label>:52:                                     ; preds = %46
  %53 = load i8*, i8** %14, align 8, !dbg !8275
  %54 = getelementptr inbounds i8, i8* %53, i64 4, !dbg !8275
  %55 = load i8, i8* %54, align 1, !dbg !8275
  %56 = sext i8 %55 to i32, !dbg !8275
  %57 = icmp eq i32 %56, 2, !dbg !8276
  br i1 %57, label %58, label %84, !dbg !8277

; <label>:58:                                     ; preds = %52
  %59 = load i8*, i8** %14, align 8, !dbg !8278
  %60 = getelementptr inbounds i8, i8* %59, i64 5, !dbg !8278
  %61 = load i8, i8* %60, align 1, !dbg !8278
  %62 = sext i8 %61 to i32, !dbg !8278
  %63 = icmp eq i32 %62, -2, !dbg !8279
  br i1 %63, label %64, label %84, !dbg !8280

; <label>:64:                                     ; preds = %58
  %65 = load i8*, i8** %14, align 8, !dbg !8281
  %66 = getelementptr inbounds i8, i8* %65, i64 6, !dbg !8281
  %67 = load i8, i8* %66, align 1, !dbg !8281
  %68 = sext i8 %67 to i32, !dbg !8281
  %69 = icmp eq i32 %68, -2, !dbg !8282
  br i1 %69, label %70, label %84, !dbg !8283

; <label>:70:                                     ; preds = %64
  %71 = load i8*, i8** %14, align 8, !dbg !8284
  %72 = getelementptr inbounds i8, i8* %71, i64 7, !dbg !8284
  %73 = load i8, i8* %72, align 1, !dbg !8284
  %74 = sext i8 %73 to i32, !dbg !8284
  %75 = icmp eq i32 %74, -2, !dbg !8285
  br i1 %75, label %76, label %84, !dbg !8286

; <label>:76:                                     ; preds = %70
  %77 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8287
  %78 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8288
  %79 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8289
  %80 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8290
  %81 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8291
  %82 = load i8*, i8** %13, align 8, !dbg !8292
  %83 = call i32 @jbig2_decode_generic_template0(%struct._Jbig2Ctx.11* %77, %struct._Jbig2Segment* %78, %struct.Jbig2GenericRegionParams* %79, %struct._Jbig2ArithState* %80, %struct._Jbig2Image* %81, i8* %82), !dbg !8293
  store i32 %83, i32* %7, align 4, !dbg !8294
  br label %222, !dbg !8294

; <label>:84:                                     ; preds = %70, %64, %58, %52, %46, %40, %34, %28
  %85 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8295
  %86 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8296
  %87 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8297
  %88 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8298
  %89 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8299
  %90 = load i8*, i8** %13, align 8, !dbg !8300
  %91 = call i32 @jbig2_decode_generic_template0_unopt(%struct._Jbig2Ctx.11* %85, %struct._Jbig2Segment* %86, %struct.Jbig2GenericRegionParams* %87, %struct._Jbig2ArithState* %88, %struct._Jbig2Image* %89, i8* %90), !dbg !8301
  store i32 %91, i32* %7, align 4, !dbg !8302
  br label %222, !dbg !8302

; <label>:92:                                     ; preds = %23, %6
  %93 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8303
  %94 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %93, i32 0, i32 0, !dbg !8305
  %95 = load i32, i32* %94, align 4, !dbg !8305
  %96 = icmp ne i32 %95, 0, !dbg !8303
  br i1 %96, label %110, label %97, !dbg !8306

; <label>:97:                                     ; preds = %92
  %98 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8307
  %99 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %98, i32 0, i32 1, !dbg !8308
  %100 = load i32, i32* %99, align 4, !dbg !8308
  %101 = icmp eq i32 %100, 1, !dbg !8309
  br i1 %101, label %102, label %110, !dbg !8310

; <label>:102:                                    ; preds = %97
  %103 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8311
  %104 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8312
  %105 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8313
  %106 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8314
  %107 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8315
  %108 = load i8*, i8** %13, align 8, !dbg !8316
  %109 = call i32 @jbig2_decode_generic_template1(%struct._Jbig2Ctx.11* %103, %struct._Jbig2Segment* %104, %struct.Jbig2GenericRegionParams* %105, %struct._Jbig2ArithState* %106, %struct._Jbig2Image* %107, i8* %108), !dbg !8317
  store i32 %109, i32* %7, align 4, !dbg !8318
  br label %222, !dbg !8318

; <label>:110:                                    ; preds = %97, %92
  %111 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8319
  %112 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %111, i32 0, i32 0, !dbg !8321
  %113 = load i32, i32* %112, align 4, !dbg !8321
  %114 = icmp ne i32 %113, 0, !dbg !8319
  br i1 %114, label %148, label %115, !dbg !8322

; <label>:115:                                    ; preds = %110
  %116 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8323
  %117 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %116, i32 0, i32 1, !dbg !8324
  %118 = load i32, i32* %117, align 4, !dbg !8324
  %119 = icmp eq i32 %118, 2, !dbg !8325
  br i1 %119, label %120, label %148, !dbg !8326

; <label>:120:                                    ; preds = %115
  %121 = load i8*, i8** %14, align 8, !dbg !8327
  %122 = getelementptr inbounds i8, i8* %121, i64 0, !dbg !8327
  %123 = load i8, i8* %122, align 1, !dbg !8327
  %124 = sext i8 %123 to i32, !dbg !8327
  %125 = icmp eq i32 %124, 3, !dbg !8330
  br i1 %125, label %126, label %140, !dbg !8331

; <label>:126:                                    ; preds = %120
  %127 = load i8*, i8** %14, align 8, !dbg !8332
  %128 = getelementptr inbounds i8, i8* %127, i64 1, !dbg !8332
  %129 = load i8, i8* %128, align 1, !dbg !8332
  %130 = sext i8 %129 to i32, !dbg !8332
  %131 = icmp eq i32 %130, -1, !dbg !8333
  br i1 %131, label %132, label %140, !dbg !8334

; <label>:132:                                    ; preds = %126
  %133 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8335
  %134 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8336
  %135 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8337
  %136 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8338
  %137 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8339
  %138 = load i8*, i8** %13, align 8, !dbg !8340
  %139 = call i32 @jbig2_decode_generic_template2a(%struct._Jbig2Ctx.11* %133, %struct._Jbig2Segment* %134, %struct.Jbig2GenericRegionParams* %135, %struct._Jbig2ArithState* %136, %struct._Jbig2Image* %137, i8* %138), !dbg !8341
  store i32 %139, i32* %7, align 4, !dbg !8342
  br label %222, !dbg !8342

; <label>:140:                                    ; preds = %126, %120
  %141 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8343
  %142 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8344
  %143 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8345
  %144 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8346
  %145 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8347
  %146 = load i8*, i8** %13, align 8, !dbg !8348
  %147 = call i32 @jbig2_decode_generic_template2(%struct._Jbig2Ctx.11* %141, %struct._Jbig2Segment* %142, %struct.Jbig2GenericRegionParams* %143, %struct._Jbig2ArithState* %144, %struct._Jbig2Image* %145, i8* %146), !dbg !8349
  store i32 %147, i32* %7, align 4, !dbg !8350
  br label %222, !dbg !8350

; <label>:148:                                    ; preds = %115, %110
  %149 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8351
  %150 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %149, i32 0, i32 0, !dbg !8353
  %151 = load i32, i32* %150, align 4, !dbg !8353
  %152 = icmp ne i32 %151, 0, !dbg !8351
  br i1 %152, label %186, label %153, !dbg !8354

; <label>:153:                                    ; preds = %148
  %154 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8355
  %155 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %154, i32 0, i32 1, !dbg !8356
  %156 = load i32, i32* %155, align 4, !dbg !8356
  %157 = icmp eq i32 %156, 3, !dbg !8357
  br i1 %157, label %158, label %186, !dbg !8358

; <label>:158:                                    ; preds = %153
  %159 = load i8*, i8** %14, align 8, !dbg !8359
  %160 = getelementptr inbounds i8, i8* %159, i64 0, !dbg !8359
  %161 = load i8, i8* %160, align 1, !dbg !8359
  %162 = sext i8 %161 to i32, !dbg !8359
  %163 = icmp eq i32 %162, 2, !dbg !8362
  br i1 %163, label %164, label %178, !dbg !8363

; <label>:164:                                    ; preds = %158
  %165 = load i8*, i8** %14, align 8, !dbg !8364
  %166 = getelementptr inbounds i8, i8* %165, i64 1, !dbg !8364
  %167 = load i8, i8* %166, align 1, !dbg !8364
  %168 = sext i8 %167 to i32, !dbg !8364
  %169 = icmp eq i32 %168, -1, !dbg !8365
  br i1 %169, label %170, label %178, !dbg !8366

; <label>:170:                                    ; preds = %164
  %171 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8367
  %172 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8368
  %173 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8369
  %174 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8370
  %175 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8371
  %176 = load i8*, i8** %13, align 8, !dbg !8372
  %177 = call i32 @jbig2_decode_generic_template3_unopt(%struct._Jbig2Ctx.11* %171, %struct._Jbig2Segment* %172, %struct.Jbig2GenericRegionParams* %173, %struct._Jbig2ArithState* %174, %struct._Jbig2Image* %175, i8* %176), !dbg !8373
  store i32 %177, i32* %7, align 4, !dbg !8374
  br label %222, !dbg !8374

; <label>:178:                                    ; preds = %164, %158
  %179 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8375
  %180 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8376
  %181 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8377
  %182 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !8378
  %183 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !8379
  %184 = load i8*, i8** %13, align 8, !dbg !8380
  %185 = call i32 @jbig2_decode_generic_template3_unopt(%struct._Jbig2Ctx.11* %179, %struct._Jbig2Segment* %180, %struct.Jbig2GenericRegionParams* %181, %struct._Jbig2ArithState* %182, %struct._Jbig2Image* %183, i8* %184), !dbg !8381
  store i32 %185, i32* %7, align 4, !dbg !8382
  br label %222, !dbg !8382

; <label>:186:                                    ; preds = %153, %148
  br label %187

; <label>:187:                                    ; preds = %186
  br label %188

; <label>:188:                                    ; preds = %187
  br label %189

; <label>:189:                                    ; preds = %188
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8383, metadata !DIExpression()), !dbg !8385
  store i32 0, i32* %15, align 4, !dbg !8386
  br label %190, !dbg !8388

; <label>:190:                                    ; preds = %207, %189
  %191 = load i32, i32* %15, align 4, !dbg !8389
  %192 = icmp slt i32 %191, 8, !dbg !8391
  br i1 %192, label %193, label %210, !dbg !8392

; <label>:193:                                    ; preds = %190
  %194 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8393
  %195 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8394
  %196 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %195, i32 0, i32 0, !dbg !8395
  %197 = load i32, i32* %196, align 8, !dbg !8395
  %198 = load i32, i32* %15, align 4, !dbg !8396
  %199 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8397
  %200 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %199, i32 0, i32 4, !dbg !8398
  %201 = load i32, i32* %15, align 4, !dbg !8399
  %202 = sext i32 %201 to i64, !dbg !8397
  %203 = getelementptr inbounds [8 x i8], [8 x i8]* %200, i64 0, i64 %202, !dbg !8397
  %204 = load i8, i8* %203, align 1, !dbg !8397
  %205 = sext i8 %204 to i32, !dbg !8397
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !8400
  %206 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %194, i32 0, i32 %197, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.194, i32 0, i32 0), i32 %198, i32 %205), !dbg !8400
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !8400
  br label %207, !dbg !8400

; <label>:207:                                    ; preds = %193
  %208 = load i32, i32* %15, align 4, !dbg !8401
  %209 = add nsw i32 %208, 1, !dbg !8401
  store i32 %209, i32* %15, align 4, !dbg !8401
  br label %190, !dbg !8402, !llvm.loop !8403

; <label>:210:                                    ; preds = %190
  %211 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !8405
  %212 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !8406
  %213 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %212, i32 0, i32 0, !dbg !8407
  %214 = load i32, i32* %213, align 8, !dbg !8407
  %215 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8408
  %216 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %215, i32 0, i32 0, !dbg !8409
  %217 = load i32, i32* %216, align 4, !dbg !8409
  %218 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %10, align 8, !dbg !8410
  %219 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %218, i32 0, i32 1, !dbg !8411
  %220 = load i32, i32* %219, align 4, !dbg !8411
  %221 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %211, i32 2, i32 %214, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1.195, i32 0, i32 0), i32 %217, i32 %220), !dbg !8412
  store i32 -1, i32* %7, align 4, !dbg !8413
  br label %222, !dbg !8413

; <label>:222:                                    ; preds = %210, %178, %170, %140, %132, %102, %84, %76
  %223 = load i32, i32* %7, align 4, !dbg !8414
  ret i32 %223, !dbg !8414
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_generic_template0(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !8415 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !8416, metadata !DIExpression()), !dbg !8417
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !8418, metadata !DIExpression()), !dbg !8419
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !8420, metadata !DIExpression()), !dbg !8421
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !8422, metadata !DIExpression()), !dbg !8423
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !8424, metadata !DIExpression()), !dbg !8425
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8426, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8428, metadata !DIExpression()), !dbg !8429
  %27 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8430
  %28 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %27, i32 0, i32 0, !dbg !8431
  %29 = load i32, i32* %28, align 8, !dbg !8431
  store i32 %29, i32* %13, align 4, !dbg !8429
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8432, metadata !DIExpression()), !dbg !8433
  %30 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8434
  %31 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %30, i32 0, i32 1, !dbg !8435
  %32 = load i32, i32* %31, align 4, !dbg !8435
  store i32 %32, i32* %14, align 4, !dbg !8433
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8436, metadata !DIExpression()), !dbg !8437
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8438
  %34 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %33, i32 0, i32 2, !dbg !8439
  %35 = load i32, i32* %34, align 8, !dbg !8439
  store i32 %35, i32* %15, align 4, !dbg !8437
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i8** %18, metadata !8444, metadata !DIExpression()), !dbg !8445
  %36 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8446
  %37 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %36, i32 0, i32 3, !dbg !8447
  %38 = load i8*, i8** %37, align 8, !dbg !8447
  store i8* %38, i8** %18, align 8, !dbg !8445
  store i32 0, i32* %17, align 4, !dbg !8448
  br label %39, !dbg !8450

; <label>:39:                                     ; preds = %204, %6
  %40 = load i32, i32* %17, align 4, !dbg !8451
  %41 = load i32, i32* %14, align 4, !dbg !8453
  %42 = icmp slt i32 %40, %41, !dbg !8454
  br i1 %42, label %43, label %207, !dbg !8455

; <label>:43:                                     ; preds = %39
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8456, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8459, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8461, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8463, metadata !DIExpression()), !dbg !8464
  %44 = load i32, i32* %13, align 4, !dbg !8465
  %45 = add nsw i32 %44, 7, !dbg !8466
  %46 = and i32 %45, -8, !dbg !8467
  store i32 %46, i32* %22, align 4, !dbg !8464
  %47 = load i32, i32* %17, align 4, !dbg !8468
  %48 = icmp sge i32 %47, 1, !dbg !8469
  br i1 %48, label %49, label %57, !dbg !8470

; <label>:49:                                     ; preds = %43
  %50 = load i8*, i8** %18, align 8, !dbg !8471
  %51 = load i32, i32* %15, align 4, !dbg !8472
  %52 = sub nsw i32 0, %51, !dbg !8473
  %53 = sext i32 %52 to i64, !dbg !8471
  %54 = getelementptr inbounds i8, i8* %50, i64 %53, !dbg !8471
  %55 = load i8, i8* %54, align 1, !dbg !8471
  %56 = zext i8 %55 to i32, !dbg !8471
  br label %58, !dbg !8470

; <label>:57:                                     ; preds = %43
  br label %58, !dbg !8470

; <label>:58:                                     ; preds = %57, %49
  %59 = phi i32 [ %56, %49 ], [ 0, %57 ], !dbg !8470
  store i32 %59, i32* %20, align 4, !dbg !8474
  %60 = load i32, i32* %17, align 4, !dbg !8475
  %61 = icmp sge i32 %60, 2, !dbg !8476
  br i1 %61, label %62, label %72, !dbg !8477

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %18, align 8, !dbg !8478
  %64 = load i32, i32* %15, align 4, !dbg !8479
  %65 = shl i32 %64, 1, !dbg !8480
  %66 = sub nsw i32 0, %65, !dbg !8481
  %67 = sext i32 %66 to i64, !dbg !8478
  %68 = getelementptr inbounds i8, i8* %63, i64 %67, !dbg !8478
  %69 = load i8, i8* %68, align 1, !dbg !8478
  %70 = zext i8 %69 to i32, !dbg !8478
  %71 = shl i32 %70, 6, !dbg !8482
  br label %73, !dbg !8477

; <label>:72:                                     ; preds = %58
  br label %73, !dbg !8477

; <label>:73:                                     ; preds = %72, %62
  %74 = phi i32 [ %71, %62 ], [ 0, %72 ], !dbg !8477
  store i32 %74, i32* %21, align 4, !dbg !8483
  %75 = load i32, i32* %20, align 4, !dbg !8484
  %76 = and i32 %75, 2032, !dbg !8485
  %77 = load i32, i32* %21, align 4, !dbg !8486
  %78 = and i32 %77, 63488, !dbg !8487
  %79 = or i32 %76, %78, !dbg !8488
  store i32 %79, i32* %19, align 4, !dbg !8489
  store i32 0, i32* %16, align 4, !dbg !8490
  br label %80, !dbg !8492

; <label>:80:                                     ; preds = %196, %73
  %81 = load i32, i32* %16, align 4, !dbg !8493
  %82 = load i32, i32* %22, align 4, !dbg !8495
  %83 = icmp slt i32 %81, %82, !dbg !8496
  br i1 %83, label %84, label %199, !dbg !8497

; <label>:84:                                     ; preds = %80
  call void @llvm.dbg.declare(metadata i8* %23, metadata !8498, metadata !DIExpression()), !dbg !8500
  store i8 0, i8* %23, align 1, !dbg !8500
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8501, metadata !DIExpression()), !dbg !8502
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8503, metadata !DIExpression()), !dbg !8504
  %85 = load i32, i32* %13, align 4, !dbg !8505
  %86 = load i32, i32* %16, align 4, !dbg !8506
  %87 = sub nsw i32 %85, %86, !dbg !8507
  %88 = icmp sgt i32 %87, 8, !dbg !8508
  br i1 %88, label %89, label %90, !dbg !8505

; <label>:89:                                     ; preds = %84
  br label %94, !dbg !8505

; <label>:90:                                     ; preds = %84
  %91 = load i32, i32* %13, align 4, !dbg !8509
  %92 = load i32, i32* %16, align 4, !dbg !8510
  %93 = sub nsw i32 %91, %92, !dbg !8511
  br label %94, !dbg !8505

; <label>:94:                                     ; preds = %90, %89
  %95 = phi i32 [ 8, %89 ], [ %93, %90 ], !dbg !8505
  store i32 %95, i32* %25, align 4, !dbg !8504
  %96 = load i32, i32* %17, align 4, !dbg !8512
  %97 = icmp sge i32 %96, 1, !dbg !8514
  br i1 %97, label %98, label %121, !dbg !8515

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* %20, align 4, !dbg !8516
  %100 = shl i32 %99, 8, !dbg !8517
  %101 = load i32, i32* %16, align 4, !dbg !8518
  %102 = add nsw i32 %101, 8, !dbg !8519
  %103 = load i32, i32* %13, align 4, !dbg !8520
  %104 = icmp slt i32 %102, %103, !dbg !8521
  br i1 %104, label %105, label %117, !dbg !8518

; <label>:105:                                    ; preds = %98
  %106 = load i8*, i8** %18, align 8, !dbg !8522
  %107 = load i32, i32* %15, align 4, !dbg !8523
  %108 = sub nsw i32 0, %107, !dbg !8524
  %109 = load i32, i32* %16, align 4, !dbg !8525
  %110 = ashr i32 %109, 3, !dbg !8526
  %111 = add nsw i32 %108, %110, !dbg !8527
  %112 = add nsw i32 %111, 1, !dbg !8528
  %113 = sext i32 %112 to i64, !dbg !8522
  %114 = getelementptr inbounds i8, i8* %106, i64 %113, !dbg !8522
  %115 = load i8, i8* %114, align 1, !dbg !8522
  %116 = zext i8 %115 to i32, !dbg !8522
  br label %118, !dbg !8518

; <label>:117:                                    ; preds = %98
  br label %118, !dbg !8518

; <label>:118:                                    ; preds = %117, %105
  %119 = phi i32 [ %116, %105 ], [ 0, %117 ], !dbg !8518
  %120 = or i32 %100, %119, !dbg !8529
  store i32 %120, i32* %20, align 4, !dbg !8530
  br label %121, !dbg !8531

; <label>:121:                                    ; preds = %118, %94
  %122 = load i32, i32* %17, align 4, !dbg !8532
  %123 = icmp sge i32 %122, 2, !dbg !8534
  br i1 %123, label %124, label %149, !dbg !8535

; <label>:124:                                    ; preds = %121
  %125 = load i32, i32* %21, align 4, !dbg !8536
  %126 = shl i32 %125, 8, !dbg !8537
  %127 = load i32, i32* %16, align 4, !dbg !8538
  %128 = add nsw i32 %127, 8, !dbg !8539
  %129 = load i32, i32* %13, align 4, !dbg !8540
  %130 = icmp slt i32 %128, %129, !dbg !8541
  br i1 %130, label %131, label %145, !dbg !8538

; <label>:131:                                    ; preds = %124
  %132 = load i8*, i8** %18, align 8, !dbg !8542
  %133 = load i32, i32* %15, align 4, !dbg !8543
  %134 = shl i32 %133, 1, !dbg !8544
  %135 = sub nsw i32 0, %134, !dbg !8545
  %136 = load i32, i32* %16, align 4, !dbg !8546
  %137 = ashr i32 %136, 3, !dbg !8547
  %138 = add nsw i32 %135, %137, !dbg !8548
  %139 = add nsw i32 %138, 1, !dbg !8549
  %140 = sext i32 %139 to i64, !dbg !8542
  %141 = getelementptr inbounds i8, i8* %132, i64 %140, !dbg !8542
  %142 = load i8, i8* %141, align 1, !dbg !8542
  %143 = zext i8 %142 to i32, !dbg !8542
  %144 = shl i32 %143, 6, !dbg !8550
  br label %146, !dbg !8538

; <label>:145:                                    ; preds = %124
  br label %146, !dbg !8538

; <label>:146:                                    ; preds = %145, %131
  %147 = phi i32 [ %144, %131 ], [ 0, %145 ], !dbg !8538
  %148 = or i32 %126, %147, !dbg !8551
  store i32 %148, i32* %21, align 4, !dbg !8552
  br label %149, !dbg !8553

; <label>:149:                                    ; preds = %146, %121
  store i32 0, i32* %24, align 4, !dbg !8554
  br label %150, !dbg !8556

; <label>:150:                                    ; preds = %186, %149
  %151 = load i32, i32* %24, align 4, !dbg !8557
  %152 = load i32, i32* %25, align 4, !dbg !8559
  %153 = icmp slt i32 %151, %152, !dbg !8560
  br i1 %153, label %154, label %189, !dbg !8561

; <label>:154:                                    ; preds = %150
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8562, metadata !DIExpression()), !dbg !8564
  %155 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !8565
  %156 = load i8*, i8** %12, align 8, !dbg !8566
  %157 = load i32, i32* %19, align 4, !dbg !8567
  %158 = zext i32 %157 to i64, !dbg !8566
  %159 = getelementptr inbounds i8, i8* %156, i64 %158, !dbg !8566
  %160 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %155, i8* %159), !dbg !8568
  store i32 %160, i32* %26, align 4, !dbg !8569
  %161 = load i32, i32* %26, align 4, !dbg !8570
  %162 = load i32, i32* %24, align 4, !dbg !8571
  %163 = sub nsw i32 7, %162, !dbg !8572
  %164 = shl i32 %161, %163, !dbg !8573
  %165 = load i8, i8* %23, align 1, !dbg !8574
  %166 = zext i8 %165 to i32, !dbg !8574
  %167 = or i32 %166, %164, !dbg !8574
  %168 = trunc i32 %167 to i8, !dbg !8574
  store i8 %168, i8* %23, align 1, !dbg !8574
  %169 = load i32, i32* %19, align 4, !dbg !8575
  %170 = and i32 %169, 31735, !dbg !8576
  %171 = shl i32 %170, 1, !dbg !8577
  %172 = load i32, i32* %26, align 4, !dbg !8578
  %173 = or i32 %171, %172, !dbg !8579
  %174 = load i32, i32* %20, align 4, !dbg !8580
  %175 = load i32, i32* %24, align 4, !dbg !8581
  %176 = sub nsw i32 7, %175, !dbg !8582
  %177 = lshr i32 %174, %176, !dbg !8583
  %178 = and i32 %177, 16, !dbg !8584
  %179 = or i32 %173, %178, !dbg !8585
  %180 = load i32, i32* %21, align 4, !dbg !8586
  %181 = load i32, i32* %24, align 4, !dbg !8587
  %182 = sub nsw i32 7, %181, !dbg !8588
  %183 = lshr i32 %180, %182, !dbg !8589
  %184 = and i32 %183, 2048, !dbg !8590
  %185 = or i32 %179, %184, !dbg !8591
  store i32 %185, i32* %19, align 4, !dbg !8592
  br label %186, !dbg !8593

; <label>:186:                                    ; preds = %154
  %187 = load i32, i32* %24, align 4, !dbg !8594
  %188 = add nsw i32 %187, 1, !dbg !8594
  store i32 %188, i32* %24, align 4, !dbg !8594
  br label %150, !dbg !8595, !llvm.loop !8596

; <label>:189:                                    ; preds = %150
  %190 = load i8, i8* %23, align 1, !dbg !8598
  %191 = load i8*, i8** %18, align 8, !dbg !8599
  %192 = load i32, i32* %16, align 4, !dbg !8600
  %193 = ashr i32 %192, 3, !dbg !8601
  %194 = sext i32 %193 to i64, !dbg !8599
  %195 = getelementptr inbounds i8, i8* %191, i64 %194, !dbg !8599
  store i8 %190, i8* %195, align 1, !dbg !8602
  br label %196, !dbg !8603

; <label>:196:                                    ; preds = %189
  %197 = load i32, i32* %16, align 4, !dbg !8604
  %198 = add nsw i32 %197, 8, !dbg !8604
  store i32 %198, i32* %16, align 4, !dbg !8604
  br label %80, !dbg !8605, !llvm.loop !8606

; <label>:199:                                    ; preds = %80
  %200 = load i32, i32* %15, align 4, !dbg !8608
  %201 = load i8*, i8** %18, align 8, !dbg !8609
  %202 = sext i32 %200 to i64, !dbg !8609
  %203 = getelementptr inbounds i8, i8* %201, i64 %202, !dbg !8609
  store i8* %203, i8** %18, align 8, !dbg !8609
  br label %204, !dbg !8610

; <label>:204:                                    ; preds = %199
  %205 = load i32, i32* %17, align 4, !dbg !8611
  %206 = add nsw i32 %205, 1, !dbg !8611
  store i32 %206, i32* %17, align 4, !dbg !8611
  br label %39, !dbg !8612, !llvm.loop !8613

; <label>:207:                                    ; preds = %39
  ret i32 0, !dbg !8615
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_generic_template0_unopt(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !8616 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !8617, metadata !DIExpression()), !dbg !8618
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !8619, metadata !DIExpression()), !dbg !8620
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !8621, metadata !DIExpression()), !dbg !8622
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !8623, metadata !DIExpression()), !dbg !8624
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !8625, metadata !DIExpression()), !dbg !8626
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8629, metadata !DIExpression()), !dbg !8630
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8631
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 0, !dbg !8632
  %21 = load i32, i32* %20, align 8, !dbg !8632
  store i32 %21, i32* %13, align 4, !dbg !8630
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8633, metadata !DIExpression()), !dbg !8634
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8635
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 1, !dbg !8636
  %24 = load i32, i32* %23, align 4, !dbg !8636
  store i32 %24, i32* %14, align 4, !dbg !8634
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8637, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8641, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8643, metadata !DIExpression()), !dbg !8644
  store i32 0, i32* %17, align 4, !dbg !8645
  br label %25, !dbg !8647

; <label>:25:                                     ; preds = %230, %6
  %26 = load i32, i32* %17, align 4, !dbg !8648
  %27 = load i32, i32* %14, align 4, !dbg !8650
  %28 = icmp slt i32 %26, %27, !dbg !8651
  br i1 %28, label %29, label %233, !dbg !8652

; <label>:29:                                     ; preds = %25
  store i32 0, i32* %16, align 4, !dbg !8653
  br label %30, !dbg !8656

; <label>:30:                                     ; preds = %226, %29
  %31 = load i32, i32* %16, align 4, !dbg !8657
  %32 = load i32, i32* %13, align 4, !dbg !8659
  %33 = icmp slt i32 %31, %32, !dbg !8660
  br i1 %33, label %34, label %229, !dbg !8661

; <label>:34:                                     ; preds = %30
  store i32 0, i32* %15, align 4, !dbg !8662
  %35 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8664
  %36 = load i32, i32* %16, align 4, !dbg !8665
  %37 = sub nsw i32 %36, 1, !dbg !8666
  %38 = load i32, i32* %17, align 4, !dbg !8667
  %39 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %35, i32 %37, i32 %38), !dbg !8668
  %40 = shl i32 %39, 0, !dbg !8669
  %41 = load i32, i32* %15, align 4, !dbg !8670
  %42 = or i32 %41, %40, !dbg !8670
  store i32 %42, i32* %15, align 4, !dbg !8670
  %43 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8671
  %44 = load i32, i32* %16, align 4, !dbg !8672
  %45 = sub nsw i32 %44, 2, !dbg !8673
  %46 = load i32, i32* %17, align 4, !dbg !8674
  %47 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %43, i32 %45, i32 %46), !dbg !8675
  %48 = shl i32 %47, 1, !dbg !8676
  %49 = load i32, i32* %15, align 4, !dbg !8677
  %50 = or i32 %49, %48, !dbg !8677
  store i32 %50, i32* %15, align 4, !dbg !8677
  %51 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8678
  %52 = load i32, i32* %16, align 4, !dbg !8679
  %53 = sub nsw i32 %52, 3, !dbg !8680
  %54 = load i32, i32* %17, align 4, !dbg !8681
  %55 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %51, i32 %53, i32 %54), !dbg !8682
  %56 = shl i32 %55, 2, !dbg !8683
  %57 = load i32, i32* %15, align 4, !dbg !8684
  %58 = or i32 %57, %56, !dbg !8684
  store i32 %58, i32* %15, align 4, !dbg !8684
  %59 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8685
  %60 = load i32, i32* %16, align 4, !dbg !8686
  %61 = sub nsw i32 %60, 4, !dbg !8687
  %62 = load i32, i32* %17, align 4, !dbg !8688
  %63 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %59, i32 %61, i32 %62), !dbg !8689
  %64 = shl i32 %63, 3, !dbg !8690
  %65 = load i32, i32* %15, align 4, !dbg !8691
  %66 = or i32 %65, %64, !dbg !8691
  store i32 %66, i32* %15, align 4, !dbg !8691
  %67 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8692
  %68 = load i32, i32* %16, align 4, !dbg !8693
  %69 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8694
  %70 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %69, i32 0, i32 4, !dbg !8695
  %71 = getelementptr inbounds [8 x i8], [8 x i8]* %70, i64 0, i64 0, !dbg !8694
  %72 = load i8, i8* %71, align 4, !dbg !8694
  %73 = sext i8 %72 to i32, !dbg !8694
  %74 = add nsw i32 %68, %73, !dbg !8696
  %75 = load i32, i32* %17, align 4, !dbg !8697
  %76 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8698
  %77 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %76, i32 0, i32 4, !dbg !8699
  %78 = getelementptr inbounds [8 x i8], [8 x i8]* %77, i64 0, i64 1, !dbg !8698
  %79 = load i8, i8* %78, align 1, !dbg !8698
  %80 = sext i8 %79 to i32, !dbg !8698
  %81 = add nsw i32 %75, %80, !dbg !8700
  %82 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %67, i32 %74, i32 %81), !dbg !8701
  %83 = shl i32 %82, 4, !dbg !8702
  %84 = load i32, i32* %15, align 4, !dbg !8703
  %85 = or i32 %84, %83, !dbg !8703
  store i32 %85, i32* %15, align 4, !dbg !8703
  %86 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8704
  %87 = load i32, i32* %16, align 4, !dbg !8705
  %88 = add nsw i32 %87, 2, !dbg !8706
  %89 = load i32, i32* %17, align 4, !dbg !8707
  %90 = sub nsw i32 %89, 1, !dbg !8708
  %91 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %86, i32 %88, i32 %90), !dbg !8709
  %92 = shl i32 %91, 5, !dbg !8710
  %93 = load i32, i32* %15, align 4, !dbg !8711
  %94 = or i32 %93, %92, !dbg !8711
  store i32 %94, i32* %15, align 4, !dbg !8711
  %95 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8712
  %96 = load i32, i32* %16, align 4, !dbg !8713
  %97 = add nsw i32 %96, 1, !dbg !8714
  %98 = load i32, i32* %17, align 4, !dbg !8715
  %99 = sub nsw i32 %98, 1, !dbg !8716
  %100 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %95, i32 %97, i32 %99), !dbg !8717
  %101 = shl i32 %100, 6, !dbg !8718
  %102 = load i32, i32* %15, align 4, !dbg !8719
  %103 = or i32 %102, %101, !dbg !8719
  store i32 %103, i32* %15, align 4, !dbg !8719
  %104 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8720
  %105 = load i32, i32* %16, align 4, !dbg !8721
  %106 = add nsw i32 %105, 0, !dbg !8722
  %107 = load i32, i32* %17, align 4, !dbg !8723
  %108 = sub nsw i32 %107, 1, !dbg !8724
  %109 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %104, i32 %106, i32 %108), !dbg !8725
  %110 = shl i32 %109, 7, !dbg !8726
  %111 = load i32, i32* %15, align 4, !dbg !8727
  %112 = or i32 %111, %110, !dbg !8727
  store i32 %112, i32* %15, align 4, !dbg !8727
  %113 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8728
  %114 = load i32, i32* %16, align 4, !dbg !8729
  %115 = sub nsw i32 %114, 1, !dbg !8730
  %116 = load i32, i32* %17, align 4, !dbg !8731
  %117 = sub nsw i32 %116, 1, !dbg !8732
  %118 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %113, i32 %115, i32 %117), !dbg !8733
  %119 = shl i32 %118, 8, !dbg !8734
  %120 = load i32, i32* %15, align 4, !dbg !8735
  %121 = or i32 %120, %119, !dbg !8735
  store i32 %121, i32* %15, align 4, !dbg !8735
  %122 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8736
  %123 = load i32, i32* %16, align 4, !dbg !8737
  %124 = sub nsw i32 %123, 2, !dbg !8738
  %125 = load i32, i32* %17, align 4, !dbg !8739
  %126 = sub nsw i32 %125, 1, !dbg !8740
  %127 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %122, i32 %124, i32 %126), !dbg !8741
  %128 = shl i32 %127, 9, !dbg !8742
  %129 = load i32, i32* %15, align 4, !dbg !8743
  %130 = or i32 %129, %128, !dbg !8743
  store i32 %130, i32* %15, align 4, !dbg !8743
  %131 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8744
  %132 = load i32, i32* %16, align 4, !dbg !8745
  %133 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8746
  %134 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %133, i32 0, i32 4, !dbg !8747
  %135 = getelementptr inbounds [8 x i8], [8 x i8]* %134, i64 0, i64 2, !dbg !8746
  %136 = load i8, i8* %135, align 2, !dbg !8746
  %137 = sext i8 %136 to i32, !dbg !8746
  %138 = add nsw i32 %132, %137, !dbg !8748
  %139 = load i32, i32* %17, align 4, !dbg !8749
  %140 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8750
  %141 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %140, i32 0, i32 4, !dbg !8751
  %142 = getelementptr inbounds [8 x i8], [8 x i8]* %141, i64 0, i64 3, !dbg !8750
  %143 = load i8, i8* %142, align 1, !dbg !8750
  %144 = sext i8 %143 to i32, !dbg !8750
  %145 = add nsw i32 %139, %144, !dbg !8752
  %146 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %131, i32 %138, i32 %145), !dbg !8753
  %147 = shl i32 %146, 10, !dbg !8754
  %148 = load i32, i32* %15, align 4, !dbg !8755
  %149 = or i32 %148, %147, !dbg !8755
  store i32 %149, i32* %15, align 4, !dbg !8755
  %150 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8756
  %151 = load i32, i32* %16, align 4, !dbg !8757
  %152 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8758
  %153 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %152, i32 0, i32 4, !dbg !8759
  %154 = getelementptr inbounds [8 x i8], [8 x i8]* %153, i64 0, i64 4, !dbg !8758
  %155 = load i8, i8* %154, align 4, !dbg !8758
  %156 = sext i8 %155 to i32, !dbg !8758
  %157 = add nsw i32 %151, %156, !dbg !8760
  %158 = load i32, i32* %17, align 4, !dbg !8761
  %159 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8762
  %160 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %159, i32 0, i32 4, !dbg !8763
  %161 = getelementptr inbounds [8 x i8], [8 x i8]* %160, i64 0, i64 5, !dbg !8762
  %162 = load i8, i8* %161, align 1, !dbg !8762
  %163 = sext i8 %162 to i32, !dbg !8762
  %164 = add nsw i32 %158, %163, !dbg !8764
  %165 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %150, i32 %157, i32 %164), !dbg !8765
  %166 = shl i32 %165, 11, !dbg !8766
  %167 = load i32, i32* %15, align 4, !dbg !8767
  %168 = or i32 %167, %166, !dbg !8767
  store i32 %168, i32* %15, align 4, !dbg !8767
  %169 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8768
  %170 = load i32, i32* %16, align 4, !dbg !8769
  %171 = add nsw i32 %170, 1, !dbg !8770
  %172 = load i32, i32* %17, align 4, !dbg !8771
  %173 = sub nsw i32 %172, 2, !dbg !8772
  %174 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %169, i32 %171, i32 %173), !dbg !8773
  %175 = shl i32 %174, 12, !dbg !8774
  %176 = load i32, i32* %15, align 4, !dbg !8775
  %177 = or i32 %176, %175, !dbg !8775
  store i32 %177, i32* %15, align 4, !dbg !8775
  %178 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8776
  %179 = load i32, i32* %16, align 4, !dbg !8777
  %180 = add nsw i32 %179, 0, !dbg !8778
  %181 = load i32, i32* %17, align 4, !dbg !8779
  %182 = sub nsw i32 %181, 2, !dbg !8780
  %183 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %178, i32 %180, i32 %182), !dbg !8781
  %184 = shl i32 %183, 13, !dbg !8782
  %185 = load i32, i32* %15, align 4, !dbg !8783
  %186 = or i32 %185, %184, !dbg !8783
  store i32 %186, i32* %15, align 4, !dbg !8783
  %187 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8784
  %188 = load i32, i32* %16, align 4, !dbg !8785
  %189 = sub nsw i32 %188, 1, !dbg !8786
  %190 = load i32, i32* %17, align 4, !dbg !8787
  %191 = sub nsw i32 %190, 2, !dbg !8788
  %192 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %187, i32 %189, i32 %191), !dbg !8789
  %193 = shl i32 %192, 14, !dbg !8790
  %194 = load i32, i32* %15, align 4, !dbg !8791
  %195 = or i32 %194, %193, !dbg !8791
  store i32 %195, i32* %15, align 4, !dbg !8791
  %196 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8792
  %197 = load i32, i32* %16, align 4, !dbg !8793
  %198 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8794
  %199 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %198, i32 0, i32 4, !dbg !8795
  %200 = getelementptr inbounds [8 x i8], [8 x i8]* %199, i64 0, i64 6, !dbg !8794
  %201 = load i8, i8* %200, align 2, !dbg !8794
  %202 = sext i8 %201 to i32, !dbg !8794
  %203 = add nsw i32 %197, %202, !dbg !8796
  %204 = load i32, i32* %17, align 4, !dbg !8797
  %205 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !8798
  %206 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %205, i32 0, i32 4, !dbg !8799
  %207 = getelementptr inbounds [8 x i8], [8 x i8]* %206, i64 0, i64 7, !dbg !8798
  %208 = load i8, i8* %207, align 1, !dbg !8798
  %209 = sext i8 %208 to i32, !dbg !8798
  %210 = add nsw i32 %204, %209, !dbg !8800
  %211 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %196, i32 %203, i32 %210), !dbg !8801
  %212 = shl i32 %211, 15, !dbg !8802
  %213 = load i32, i32* %15, align 4, !dbg !8803
  %214 = or i32 %213, %212, !dbg !8803
  store i32 %214, i32* %15, align 4, !dbg !8803
  %215 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !8804
  %216 = load i8*, i8** %12, align 8, !dbg !8805
  %217 = load i32, i32* %15, align 4, !dbg !8806
  %218 = zext i32 %217 to i64, !dbg !8805
  %219 = getelementptr inbounds i8, i8* %216, i64 %218, !dbg !8805
  %220 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %215, i8* %219), !dbg !8807
  store i32 %220, i32* %18, align 4, !dbg !8808
  %221 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8809
  %222 = load i32, i32* %16, align 4, !dbg !8810
  %223 = load i32, i32* %17, align 4, !dbg !8811
  %224 = load i32, i32* %18, align 4, !dbg !8812
  %225 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %221, i32 %222, i32 %223, i32 %224), !dbg !8813
  br label %226, !dbg !8814

; <label>:226:                                    ; preds = %34
  %227 = load i32, i32* %16, align 4, !dbg !8815
  %228 = add nsw i32 %227, 1, !dbg !8815
  store i32 %228, i32* %16, align 4, !dbg !8815
  br label %30, !dbg !8816, !llvm.loop !8817

; <label>:229:                                    ; preds = %30
  br label %230, !dbg !8819

; <label>:230:                                    ; preds = %229
  %231 = load i32, i32* %17, align 4, !dbg !8820
  %232 = add nsw i32 %231, 1, !dbg !8820
  store i32 %232, i32* %17, align 4, !dbg !8820
  br label %25, !dbg !8821, !llvm.loop !8822

; <label>:233:                                    ; preds = %25
  ret i32 0, !dbg !8824
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_generic_template1(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !8825 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !8826, metadata !DIExpression()), !dbg !8827
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !8828, metadata !DIExpression()), !dbg !8829
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !8830, metadata !DIExpression()), !dbg !8831
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !8832, metadata !DIExpression()), !dbg !8833
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !8834, metadata !DIExpression()), !dbg !8835
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8838, metadata !DIExpression()), !dbg !8839
  %27 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8840
  %28 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %27, i32 0, i32 0, !dbg !8841
  %29 = load i32, i32* %28, align 8, !dbg !8841
  store i32 %29, i32* %13, align 4, !dbg !8839
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8842, metadata !DIExpression()), !dbg !8843
  %30 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8844
  %31 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %30, i32 0, i32 1, !dbg !8845
  %32 = load i32, i32* %31, align 4, !dbg !8845
  store i32 %32, i32* %14, align 4, !dbg !8843
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8846, metadata !DIExpression()), !dbg !8847
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8848
  %34 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %33, i32 0, i32 2, !dbg !8849
  %35 = load i32, i32* %34, align 8, !dbg !8849
  store i32 %35, i32* %15, align 4, !dbg !8847
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8850, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata i8** %18, metadata !8854, metadata !DIExpression()), !dbg !8855
  %36 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !8856
  %37 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %36, i32 0, i32 3, !dbg !8857
  %38 = load i8*, i8** %37, align 8, !dbg !8857
  store i8* %38, i8** %18, align 8, !dbg !8855
  store i32 0, i32* %17, align 4, !dbg !8858
  br label %39, !dbg !8860

; <label>:39:                                     ; preds = %206, %6
  %40 = load i32, i32* %17, align 4, !dbg !8861
  %41 = load i32, i32* %14, align 4, !dbg !8863
  %42 = icmp slt i32 %40, %41, !dbg !8864
  br i1 %42, label %43, label %209, !dbg !8865

; <label>:43:                                     ; preds = %39
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8866, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8869, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8871, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8873, metadata !DIExpression()), !dbg !8874
  %44 = load i32, i32* %13, align 4, !dbg !8875
  %45 = add nsw i32 %44, 7, !dbg !8876
  %46 = and i32 %45, -8, !dbg !8877
  store i32 %46, i32* %22, align 4, !dbg !8874
  %47 = load i32, i32* %17, align 4, !dbg !8878
  %48 = icmp sge i32 %47, 1, !dbg !8879
  br i1 %48, label %49, label %57, !dbg !8880

; <label>:49:                                     ; preds = %43
  %50 = load i8*, i8** %18, align 8, !dbg !8881
  %51 = load i32, i32* %15, align 4, !dbg !8882
  %52 = sub nsw i32 0, %51, !dbg !8883
  %53 = sext i32 %52 to i64, !dbg !8881
  %54 = getelementptr inbounds i8, i8* %50, i64 %53, !dbg !8881
  %55 = load i8, i8* %54, align 1, !dbg !8881
  %56 = zext i8 %55 to i32, !dbg !8881
  br label %58, !dbg !8880

; <label>:57:                                     ; preds = %43
  br label %58, !dbg !8880

; <label>:58:                                     ; preds = %57, %49
  %59 = phi i32 [ %56, %49 ], [ 0, %57 ], !dbg !8880
  store i32 %59, i32* %20, align 4, !dbg !8884
  %60 = load i32, i32* %17, align 4, !dbg !8885
  %61 = icmp sge i32 %60, 2, !dbg !8886
  br i1 %61, label %62, label %72, !dbg !8887

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %18, align 8, !dbg !8888
  %64 = load i32, i32* %15, align 4, !dbg !8889
  %65 = shl i32 %64, 1, !dbg !8890
  %66 = sub nsw i32 0, %65, !dbg !8891
  %67 = sext i32 %66 to i64, !dbg !8888
  %68 = getelementptr inbounds i8, i8* %63, i64 %67, !dbg !8888
  %69 = load i8, i8* %68, align 1, !dbg !8888
  %70 = zext i8 %69 to i32, !dbg !8888
  %71 = shl i32 %70, 5, !dbg !8892
  br label %73, !dbg !8887

; <label>:72:                                     ; preds = %58
  br label %73, !dbg !8887

; <label>:73:                                     ; preds = %72, %62
  %74 = phi i32 [ %71, %62 ], [ 0, %72 ], !dbg !8887
  store i32 %74, i32* %21, align 4, !dbg !8893
  %75 = load i32, i32* %20, align 4, !dbg !8894
  %76 = lshr i32 %75, 1, !dbg !8895
  %77 = and i32 %76, 504, !dbg !8896
  %78 = load i32, i32* %21, align 4, !dbg !8897
  %79 = lshr i32 %78, 1, !dbg !8898
  %80 = and i32 %79, 7680, !dbg !8899
  %81 = or i32 %77, %80, !dbg !8900
  store i32 %81, i32* %19, align 4, !dbg !8901
  store i32 0, i32* %16, align 4, !dbg !8902
  br label %82, !dbg !8904

; <label>:82:                                     ; preds = %198, %73
  %83 = load i32, i32* %16, align 4, !dbg !8905
  %84 = load i32, i32* %22, align 4, !dbg !8907
  %85 = icmp slt i32 %83, %84, !dbg !8908
  br i1 %85, label %86, label %201, !dbg !8909

; <label>:86:                                     ; preds = %82
  call void @llvm.dbg.declare(metadata i8* %23, metadata !8910, metadata !DIExpression()), !dbg !8912
  store i8 0, i8* %23, align 1, !dbg !8912
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8913, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8915, metadata !DIExpression()), !dbg !8916
  %87 = load i32, i32* %13, align 4, !dbg !8917
  %88 = load i32, i32* %16, align 4, !dbg !8918
  %89 = sub nsw i32 %87, %88, !dbg !8919
  %90 = icmp sgt i32 %89, 8, !dbg !8920
  br i1 %90, label %91, label %92, !dbg !8917

; <label>:91:                                     ; preds = %86
  br label %96, !dbg !8917

; <label>:92:                                     ; preds = %86
  %93 = load i32, i32* %13, align 4, !dbg !8921
  %94 = load i32, i32* %16, align 4, !dbg !8922
  %95 = sub nsw i32 %93, %94, !dbg !8923
  br label %96, !dbg !8917

; <label>:96:                                     ; preds = %92, %91
  %97 = phi i32 [ 8, %91 ], [ %95, %92 ], !dbg !8917
  store i32 %97, i32* %25, align 4, !dbg !8916
  %98 = load i32, i32* %17, align 4, !dbg !8924
  %99 = icmp sge i32 %98, 1, !dbg !8926
  br i1 %99, label %100, label %123, !dbg !8927

; <label>:100:                                    ; preds = %96
  %101 = load i32, i32* %20, align 4, !dbg !8928
  %102 = shl i32 %101, 8, !dbg !8929
  %103 = load i32, i32* %16, align 4, !dbg !8930
  %104 = add nsw i32 %103, 8, !dbg !8931
  %105 = load i32, i32* %13, align 4, !dbg !8932
  %106 = icmp slt i32 %104, %105, !dbg !8933
  br i1 %106, label %107, label %119, !dbg !8930

; <label>:107:                                    ; preds = %100
  %108 = load i8*, i8** %18, align 8, !dbg !8934
  %109 = load i32, i32* %15, align 4, !dbg !8935
  %110 = sub nsw i32 0, %109, !dbg !8936
  %111 = load i32, i32* %16, align 4, !dbg !8937
  %112 = ashr i32 %111, 3, !dbg !8938
  %113 = add nsw i32 %110, %112, !dbg !8939
  %114 = add nsw i32 %113, 1, !dbg !8940
  %115 = sext i32 %114 to i64, !dbg !8934
  %116 = getelementptr inbounds i8, i8* %108, i64 %115, !dbg !8934
  %117 = load i8, i8* %116, align 1, !dbg !8934
  %118 = zext i8 %117 to i32, !dbg !8934
  br label %120, !dbg !8930

; <label>:119:                                    ; preds = %100
  br label %120, !dbg !8930

; <label>:120:                                    ; preds = %119, %107
  %121 = phi i32 [ %118, %107 ], [ 0, %119 ], !dbg !8930
  %122 = or i32 %102, %121, !dbg !8941
  store i32 %122, i32* %20, align 4, !dbg !8942
  br label %123, !dbg !8943

; <label>:123:                                    ; preds = %120, %96
  %124 = load i32, i32* %17, align 4, !dbg !8944
  %125 = icmp sge i32 %124, 2, !dbg !8946
  br i1 %125, label %126, label %151, !dbg !8947

; <label>:126:                                    ; preds = %123
  %127 = load i32, i32* %21, align 4, !dbg !8948
  %128 = shl i32 %127, 8, !dbg !8949
  %129 = load i32, i32* %16, align 4, !dbg !8950
  %130 = add nsw i32 %129, 8, !dbg !8951
  %131 = load i32, i32* %13, align 4, !dbg !8952
  %132 = icmp slt i32 %130, %131, !dbg !8953
  br i1 %132, label %133, label %147, !dbg !8950

; <label>:133:                                    ; preds = %126
  %134 = load i8*, i8** %18, align 8, !dbg !8954
  %135 = load i32, i32* %15, align 4, !dbg !8955
  %136 = shl i32 %135, 1, !dbg !8956
  %137 = sub nsw i32 0, %136, !dbg !8957
  %138 = load i32, i32* %16, align 4, !dbg !8958
  %139 = ashr i32 %138, 3, !dbg !8959
  %140 = add nsw i32 %137, %139, !dbg !8960
  %141 = add nsw i32 %140, 1, !dbg !8961
  %142 = sext i32 %141 to i64, !dbg !8954
  %143 = getelementptr inbounds i8, i8* %134, i64 %142, !dbg !8954
  %144 = load i8, i8* %143, align 1, !dbg !8954
  %145 = zext i8 %144 to i32, !dbg !8954
  %146 = shl i32 %145, 5, !dbg !8962
  br label %148, !dbg !8950

; <label>:147:                                    ; preds = %126
  br label %148, !dbg !8950

; <label>:148:                                    ; preds = %147, %133
  %149 = phi i32 [ %146, %133 ], [ 0, %147 ], !dbg !8950
  %150 = or i32 %128, %149, !dbg !8963
  store i32 %150, i32* %21, align 4, !dbg !8964
  br label %151, !dbg !8965

; <label>:151:                                    ; preds = %148, %123
  store i32 0, i32* %24, align 4, !dbg !8966
  br label %152, !dbg !8968

; <label>:152:                                    ; preds = %188, %151
  %153 = load i32, i32* %24, align 4, !dbg !8969
  %154 = load i32, i32* %25, align 4, !dbg !8971
  %155 = icmp slt i32 %153, %154, !dbg !8972
  br i1 %155, label %156, label %191, !dbg !8973

; <label>:156:                                    ; preds = %152
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8974, metadata !DIExpression()), !dbg !8976
  %157 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !8977
  %158 = load i8*, i8** %12, align 8, !dbg !8978
  %159 = load i32, i32* %19, align 4, !dbg !8979
  %160 = zext i32 %159 to i64, !dbg !8978
  %161 = getelementptr inbounds i8, i8* %158, i64 %160, !dbg !8978
  %162 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %157, i8* %161), !dbg !8980
  store i32 %162, i32* %26, align 4, !dbg !8981
  %163 = load i32, i32* %26, align 4, !dbg !8982
  %164 = load i32, i32* %24, align 4, !dbg !8983
  %165 = sub nsw i32 7, %164, !dbg !8984
  %166 = shl i32 %163, %165, !dbg !8985
  %167 = load i8, i8* %23, align 1, !dbg !8986
  %168 = zext i8 %167 to i32, !dbg !8986
  %169 = or i32 %168, %166, !dbg !8986
  %170 = trunc i32 %169 to i8, !dbg !8986
  store i8 %170, i8* %23, align 1, !dbg !8986
  %171 = load i32, i32* %19, align 4, !dbg !8987
  %172 = and i32 %171, 3835, !dbg !8988
  %173 = shl i32 %172, 1, !dbg !8989
  %174 = load i32, i32* %26, align 4, !dbg !8990
  %175 = or i32 %173, %174, !dbg !8991
  %176 = load i32, i32* %20, align 4, !dbg !8992
  %177 = load i32, i32* %24, align 4, !dbg !8993
  %178 = sub nsw i32 8, %177, !dbg !8994
  %179 = lshr i32 %176, %178, !dbg !8995
  %180 = and i32 %179, 8, !dbg !8996
  %181 = or i32 %175, %180, !dbg !8997
  %182 = load i32, i32* %21, align 4, !dbg !8998
  %183 = load i32, i32* %24, align 4, !dbg !8999
  %184 = sub nsw i32 8, %183, !dbg !9000
  %185 = lshr i32 %182, %184, !dbg !9001
  %186 = and i32 %185, 512, !dbg !9002
  %187 = or i32 %181, %186, !dbg !9003
  store i32 %187, i32* %19, align 4, !dbg !9004
  br label %188, !dbg !9005

; <label>:188:                                    ; preds = %156
  %189 = load i32, i32* %24, align 4, !dbg !9006
  %190 = add nsw i32 %189, 1, !dbg !9006
  store i32 %190, i32* %24, align 4, !dbg !9006
  br label %152, !dbg !9007, !llvm.loop !9008

; <label>:191:                                    ; preds = %152
  %192 = load i8, i8* %23, align 1, !dbg !9010
  %193 = load i8*, i8** %18, align 8, !dbg !9011
  %194 = load i32, i32* %16, align 4, !dbg !9012
  %195 = ashr i32 %194, 3, !dbg !9013
  %196 = sext i32 %195 to i64, !dbg !9011
  %197 = getelementptr inbounds i8, i8* %193, i64 %196, !dbg !9011
  store i8 %192, i8* %197, align 1, !dbg !9014
  br label %198, !dbg !9015

; <label>:198:                                    ; preds = %191
  %199 = load i32, i32* %16, align 4, !dbg !9016
  %200 = add nsw i32 %199, 8, !dbg !9016
  store i32 %200, i32* %16, align 4, !dbg !9016
  br label %82, !dbg !9017, !llvm.loop !9018

; <label>:201:                                    ; preds = %82
  %202 = load i32, i32* %15, align 4, !dbg !9020
  %203 = load i8*, i8** %18, align 8, !dbg !9021
  %204 = sext i32 %202 to i64, !dbg !9021
  %205 = getelementptr inbounds i8, i8* %203, i64 %204, !dbg !9021
  store i8* %205, i8** %18, align 8, !dbg !9021
  br label %206, !dbg !9022

; <label>:206:                                    ; preds = %201
  %207 = load i32, i32* %17, align 4, !dbg !9023
  %208 = add nsw i32 %207, 1, !dbg !9023
  store i32 %208, i32* %17, align 4, !dbg !9023
  br label %39, !dbg !9024, !llvm.loop !9025

; <label>:209:                                    ; preds = %39
  ret i32 0, !dbg !9027
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_generic_template2a(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !9028 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !9029, metadata !DIExpression()), !dbg !9030
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !9031, metadata !DIExpression()), !dbg !9032
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !9033, metadata !DIExpression()), !dbg !9034
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !9035, metadata !DIExpression()), !dbg !9036
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !9037, metadata !DIExpression()), !dbg !9038
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9041, metadata !DIExpression()), !dbg !9042
  %27 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9043
  %28 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %27, i32 0, i32 0, !dbg !9044
  %29 = load i32, i32* %28, align 8, !dbg !9044
  store i32 %29, i32* %13, align 4, !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9045, metadata !DIExpression()), !dbg !9046
  %30 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9047
  %31 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %30, i32 0, i32 1, !dbg !9048
  %32 = load i32, i32* %31, align 4, !dbg !9048
  store i32 %32, i32* %14, align 4, !dbg !9046
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9049, metadata !DIExpression()), !dbg !9050
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9051
  %34 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %33, i32 0, i32 2, !dbg !9052
  %35 = load i32, i32* %34, align 8, !dbg !9052
  store i32 %35, i32* %15, align 4, !dbg !9050
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.declare(metadata i8** %18, metadata !9057, metadata !DIExpression()), !dbg !9058
  %36 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9059
  %37 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %36, i32 0, i32 3, !dbg !9060
  %38 = load i8*, i8** %37, align 8, !dbg !9060
  store i8* %38, i8** %18, align 8, !dbg !9058
  store i32 0, i32* %17, align 4, !dbg !9061
  br label %39, !dbg !9063

; <label>:39:                                     ; preds = %216, %6
  %40 = load i32, i32* %17, align 4, !dbg !9064
  %41 = load i32, i32* %14, align 4, !dbg !9066
  %42 = icmp slt i32 %40, %41, !dbg !9067
  br i1 %42, label %43, label %219, !dbg !9068

; <label>:43:                                     ; preds = %39
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9072, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata i32* %21, metadata !9074, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.declare(metadata i32* %22, metadata !9076, metadata !DIExpression()), !dbg !9077
  %44 = load i32, i32* %13, align 4, !dbg !9078
  %45 = add nsw i32 %44, 7, !dbg !9079
  %46 = and i32 %45, -8, !dbg !9080
  store i32 %46, i32* %22, align 4, !dbg !9077
  %47 = load i32, i32* %17, align 4, !dbg !9081
  %48 = icmp sge i32 %47, 1, !dbg !9082
  br i1 %48, label %49, label %57, !dbg !9083

; <label>:49:                                     ; preds = %43
  %50 = load i8*, i8** %18, align 8, !dbg !9084
  %51 = load i32, i32* %15, align 4, !dbg !9085
  %52 = sub nsw i32 0, %51, !dbg !9086
  %53 = sext i32 %52 to i64, !dbg !9084
  %54 = getelementptr inbounds i8, i8* %50, i64 %53, !dbg !9084
  %55 = load i8, i8* %54, align 1, !dbg !9084
  %56 = zext i8 %55 to i32, !dbg !9084
  br label %58, !dbg !9083

; <label>:57:                                     ; preds = %43
  br label %58, !dbg !9083

; <label>:58:                                     ; preds = %57, %49
  %59 = phi i32 [ %56, %49 ], [ 0, %57 ], !dbg !9083
  store i32 %59, i32* %20, align 4, !dbg !9087
  %60 = load i32, i32* %17, align 4, !dbg !9088
  %61 = icmp sge i32 %60, 2, !dbg !9089
  br i1 %61, label %62, label %72, !dbg !9090

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %18, align 8, !dbg !9091
  %64 = load i32, i32* %15, align 4, !dbg !9092
  %65 = shl i32 %64, 1, !dbg !9093
  %66 = sub nsw i32 0, %65, !dbg !9094
  %67 = sext i32 %66 to i64, !dbg !9091
  %68 = getelementptr inbounds i8, i8* %63, i64 %67, !dbg !9091
  %69 = load i8, i8* %68, align 1, !dbg !9091
  %70 = zext i8 %69 to i32, !dbg !9091
  %71 = shl i32 %70, 4, !dbg !9095
  br label %73, !dbg !9090

; <label>:72:                                     ; preds = %58
  br label %73, !dbg !9090

; <label>:73:                                     ; preds = %72, %62
  %74 = phi i32 [ %71, %62 ], [ 0, %72 ], !dbg !9090
  store i32 %74, i32* %21, align 4, !dbg !9096
  %75 = load i32, i32* %20, align 4, !dbg !9097
  %76 = lshr i32 %75, 3, !dbg !9098
  %77 = and i32 %76, 120, !dbg !9099
  %78 = load i32, i32* %20, align 4, !dbg !9100
  %79 = lshr i32 %78, 2, !dbg !9101
  %80 = and i32 %79, 4, !dbg !9102
  %81 = or i32 %77, %80, !dbg !9103
  %82 = load i32, i32* %21, align 4, !dbg !9104
  %83 = lshr i32 %82, 3, !dbg !9105
  %84 = and i32 %83, 896, !dbg !9106
  %85 = or i32 %81, %84, !dbg !9107
  store i32 %85, i32* %19, align 4, !dbg !9108
  store i32 0, i32* %16, align 4, !dbg !9109
  br label %86, !dbg !9111

; <label>:86:                                     ; preds = %208, %73
  %87 = load i32, i32* %16, align 4, !dbg !9112
  %88 = load i32, i32* %22, align 4, !dbg !9114
  %89 = icmp slt i32 %87, %88, !dbg !9115
  br i1 %89, label %90, label %211, !dbg !9116

; <label>:90:                                     ; preds = %86
  call void @llvm.dbg.declare(metadata i8* %23, metadata !9117, metadata !DIExpression()), !dbg !9119
  store i8 0, i8* %23, align 1, !dbg !9119
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9120, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9122, metadata !DIExpression()), !dbg !9123
  %91 = load i32, i32* %13, align 4, !dbg !9124
  %92 = load i32, i32* %16, align 4, !dbg !9125
  %93 = sub nsw i32 %91, %92, !dbg !9126
  %94 = icmp sgt i32 %93, 8, !dbg !9127
  br i1 %94, label %95, label %96, !dbg !9124

; <label>:95:                                     ; preds = %90
  br label %100, !dbg !9124

; <label>:96:                                     ; preds = %90
  %97 = load i32, i32* %13, align 4, !dbg !9128
  %98 = load i32, i32* %16, align 4, !dbg !9129
  %99 = sub nsw i32 %97, %98, !dbg !9130
  br label %100, !dbg !9124

; <label>:100:                                    ; preds = %96, %95
  %101 = phi i32 [ 8, %95 ], [ %99, %96 ], !dbg !9124
  store i32 %101, i32* %25, align 4, !dbg !9123
  %102 = load i32, i32* %17, align 4, !dbg !9131
  %103 = icmp sge i32 %102, 1, !dbg !9133
  br i1 %103, label %104, label %127, !dbg !9134

; <label>:104:                                    ; preds = %100
  %105 = load i32, i32* %20, align 4, !dbg !9135
  %106 = shl i32 %105, 8, !dbg !9136
  %107 = load i32, i32* %16, align 4, !dbg !9137
  %108 = add nsw i32 %107, 8, !dbg !9138
  %109 = load i32, i32* %13, align 4, !dbg !9139
  %110 = icmp slt i32 %108, %109, !dbg !9140
  br i1 %110, label %111, label %123, !dbg !9137

; <label>:111:                                    ; preds = %104
  %112 = load i8*, i8** %18, align 8, !dbg !9141
  %113 = load i32, i32* %15, align 4, !dbg !9142
  %114 = sub nsw i32 0, %113, !dbg !9143
  %115 = load i32, i32* %16, align 4, !dbg !9144
  %116 = ashr i32 %115, 3, !dbg !9145
  %117 = add nsw i32 %114, %116, !dbg !9146
  %118 = add nsw i32 %117, 1, !dbg !9147
  %119 = sext i32 %118 to i64, !dbg !9141
  %120 = getelementptr inbounds i8, i8* %112, i64 %119, !dbg !9141
  %121 = load i8, i8* %120, align 1, !dbg !9141
  %122 = zext i8 %121 to i32, !dbg !9141
  br label %124, !dbg !9137

; <label>:123:                                    ; preds = %104
  br label %124, !dbg !9137

; <label>:124:                                    ; preds = %123, %111
  %125 = phi i32 [ %122, %111 ], [ 0, %123 ], !dbg !9137
  %126 = or i32 %106, %125, !dbg !9148
  store i32 %126, i32* %20, align 4, !dbg !9149
  br label %127, !dbg !9150

; <label>:127:                                    ; preds = %124, %100
  %128 = load i32, i32* %17, align 4, !dbg !9151
  %129 = icmp sge i32 %128, 2, !dbg !9153
  br i1 %129, label %130, label %155, !dbg !9154

; <label>:130:                                    ; preds = %127
  %131 = load i32, i32* %21, align 4, !dbg !9155
  %132 = shl i32 %131, 8, !dbg !9156
  %133 = load i32, i32* %16, align 4, !dbg !9157
  %134 = add nsw i32 %133, 8, !dbg !9158
  %135 = load i32, i32* %13, align 4, !dbg !9159
  %136 = icmp slt i32 %134, %135, !dbg !9160
  br i1 %136, label %137, label %151, !dbg !9157

; <label>:137:                                    ; preds = %130
  %138 = load i8*, i8** %18, align 8, !dbg !9161
  %139 = load i32, i32* %15, align 4, !dbg !9162
  %140 = shl i32 %139, 1, !dbg !9163
  %141 = sub nsw i32 0, %140, !dbg !9164
  %142 = load i32, i32* %16, align 4, !dbg !9165
  %143 = ashr i32 %142, 3, !dbg !9166
  %144 = add nsw i32 %141, %143, !dbg !9167
  %145 = add nsw i32 %144, 1, !dbg !9168
  %146 = sext i32 %145 to i64, !dbg !9161
  %147 = getelementptr inbounds i8, i8* %138, i64 %146, !dbg !9161
  %148 = load i8, i8* %147, align 1, !dbg !9161
  %149 = zext i8 %148 to i32, !dbg !9161
  %150 = shl i32 %149, 4, !dbg !9169
  br label %152, !dbg !9157

; <label>:151:                                    ; preds = %130
  br label %152, !dbg !9157

; <label>:152:                                    ; preds = %151, %137
  %153 = phi i32 [ %150, %137 ], [ 0, %151 ], !dbg !9157
  %154 = or i32 %132, %153, !dbg !9170
  store i32 %154, i32* %21, align 4, !dbg !9171
  br label %155, !dbg !9172

; <label>:155:                                    ; preds = %152, %127
  store i32 0, i32* %24, align 4, !dbg !9173
  br label %156, !dbg !9175

; <label>:156:                                    ; preds = %198, %155
  %157 = load i32, i32* %24, align 4, !dbg !9176
  %158 = load i32, i32* %25, align 4, !dbg !9178
  %159 = icmp slt i32 %157, %158, !dbg !9179
  br i1 %159, label %160, label %201, !dbg !9180

; <label>:160:                                    ; preds = %156
  call void @llvm.dbg.declare(metadata i32* %26, metadata !9181, metadata !DIExpression()), !dbg !9183
  %161 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !9184
  %162 = load i8*, i8** %12, align 8, !dbg !9185
  %163 = load i32, i32* %19, align 4, !dbg !9186
  %164 = zext i32 %163 to i64, !dbg !9185
  %165 = getelementptr inbounds i8, i8* %162, i64 %164, !dbg !9185
  %166 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %161, i8* %165), !dbg !9187
  store i32 %166, i32* %26, align 4, !dbg !9188
  %167 = load i32, i32* %26, align 4, !dbg !9189
  %168 = load i32, i32* %24, align 4, !dbg !9190
  %169 = sub nsw i32 7, %168, !dbg !9191
  %170 = shl i32 %167, %169, !dbg !9192
  %171 = load i8, i8* %23, align 1, !dbg !9193
  %172 = zext i8 %171 to i32, !dbg !9193
  %173 = or i32 %172, %170, !dbg !9193
  %174 = trunc i32 %173 to i8, !dbg !9193
  store i8 %174, i8* %23, align 1, !dbg !9193
  %175 = load i32, i32* %19, align 4, !dbg !9194
  %176 = and i32 %175, 441, !dbg !9195
  %177 = shl i32 %176, 1, !dbg !9196
  %178 = load i32, i32* %26, align 4, !dbg !9197
  %179 = or i32 %177, %178, !dbg !9198
  %180 = load i32, i32* %20, align 4, !dbg !9199
  %181 = load i32, i32* %24, align 4, !dbg !9200
  %182 = sub nsw i32 10, %181, !dbg !9201
  %183 = lshr i32 %180, %182, !dbg !9202
  %184 = and i32 %183, 8, !dbg !9203
  %185 = or i32 %179, %184, !dbg !9204
  %186 = load i32, i32* %20, align 4, !dbg !9205
  %187 = load i32, i32* %24, align 4, !dbg !9206
  %188 = sub nsw i32 9, %187, !dbg !9207
  %189 = lshr i32 %186, %188, !dbg !9208
  %190 = and i32 %189, 4, !dbg !9209
  %191 = or i32 %185, %190, !dbg !9210
  %192 = load i32, i32* %21, align 4, !dbg !9211
  %193 = load i32, i32* %24, align 4, !dbg !9212
  %194 = sub nsw i32 10, %193, !dbg !9213
  %195 = lshr i32 %192, %194, !dbg !9214
  %196 = and i32 %195, 128, !dbg !9215
  %197 = or i32 %191, %196, !dbg !9216
  store i32 %197, i32* %19, align 4, !dbg !9217
  br label %198, !dbg !9218

; <label>:198:                                    ; preds = %160
  %199 = load i32, i32* %24, align 4, !dbg !9219
  %200 = add nsw i32 %199, 1, !dbg !9219
  store i32 %200, i32* %24, align 4, !dbg !9219
  br label %156, !dbg !9220, !llvm.loop !9221

; <label>:201:                                    ; preds = %156
  %202 = load i8, i8* %23, align 1, !dbg !9223
  %203 = load i8*, i8** %18, align 8, !dbg !9224
  %204 = load i32, i32* %16, align 4, !dbg !9225
  %205 = ashr i32 %204, 3, !dbg !9226
  %206 = sext i32 %205 to i64, !dbg !9224
  %207 = getelementptr inbounds i8, i8* %203, i64 %206, !dbg !9224
  store i8 %202, i8* %207, align 1, !dbg !9227
  br label %208, !dbg !9228

; <label>:208:                                    ; preds = %201
  %209 = load i32, i32* %16, align 4, !dbg !9229
  %210 = add nsw i32 %209, 8, !dbg !9229
  store i32 %210, i32* %16, align 4, !dbg !9229
  br label %86, !dbg !9230, !llvm.loop !9231

; <label>:211:                                    ; preds = %86
  %212 = load i32, i32* %15, align 4, !dbg !9233
  %213 = load i8*, i8** %18, align 8, !dbg !9234
  %214 = sext i32 %212 to i64, !dbg !9234
  %215 = getelementptr inbounds i8, i8* %213, i64 %214, !dbg !9234
  store i8* %215, i8** %18, align 8, !dbg !9234
  br label %216, !dbg !9235

; <label>:216:                                    ; preds = %211
  %217 = load i32, i32* %17, align 4, !dbg !9236
  %218 = add nsw i32 %217, 1, !dbg !9236
  store i32 %218, i32* %17, align 4, !dbg !9236
  br label %39, !dbg !9237, !llvm.loop !9238

; <label>:219:                                    ; preds = %39
  ret i32 0, !dbg !9240
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_generic_template2(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !9241 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !9242, metadata !DIExpression()), !dbg !9243
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !9244, metadata !DIExpression()), !dbg !9245
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !9246, metadata !DIExpression()), !dbg !9247
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !9248, metadata !DIExpression()), !dbg !9249
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9254, metadata !DIExpression()), !dbg !9255
  %27 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9256
  %28 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %27, i32 0, i32 0, !dbg !9257
  %29 = load i32, i32* %28, align 8, !dbg !9257
  store i32 %29, i32* %13, align 4, !dbg !9255
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9258, metadata !DIExpression()), !dbg !9259
  %30 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9260
  %31 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %30, i32 0, i32 1, !dbg !9261
  %32 = load i32, i32* %31, align 4, !dbg !9261
  store i32 %32, i32* %14, align 4, !dbg !9259
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9262, metadata !DIExpression()), !dbg !9263
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9264
  %34 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %33, i32 0, i32 2, !dbg !9265
  %35 = load i32, i32* %34, align 8, !dbg !9265
  store i32 %35, i32* %15, align 4, !dbg !9263
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9266, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.declare(metadata i8** %18, metadata !9270, metadata !DIExpression()), !dbg !9271
  %36 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9272
  %37 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %36, i32 0, i32 3, !dbg !9273
  %38 = load i8*, i8** %37, align 8, !dbg !9273
  store i8* %38, i8** %18, align 8, !dbg !9271
  store i32 0, i32* %17, align 4, !dbg !9274
  br label %39, !dbg !9276

; <label>:39:                                     ; preds = %206, %6
  %40 = load i32, i32* %17, align 4, !dbg !9277
  %41 = load i32, i32* %14, align 4, !dbg !9279
  %42 = icmp slt i32 %40, %41, !dbg !9280
  br i1 %42, label %43, label %209, !dbg !9281

; <label>:43:                                     ; preds = %39
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata i32* %21, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.declare(metadata i32* %22, metadata !9289, metadata !DIExpression()), !dbg !9290
  %44 = load i32, i32* %13, align 4, !dbg !9291
  %45 = add nsw i32 %44, 7, !dbg !9292
  %46 = and i32 %45, -8, !dbg !9293
  store i32 %46, i32* %22, align 4, !dbg !9290
  %47 = load i32, i32* %17, align 4, !dbg !9294
  %48 = icmp sge i32 %47, 1, !dbg !9295
  br i1 %48, label %49, label %57, !dbg !9296

; <label>:49:                                     ; preds = %43
  %50 = load i8*, i8** %18, align 8, !dbg !9297
  %51 = load i32, i32* %15, align 4, !dbg !9298
  %52 = sub nsw i32 0, %51, !dbg !9299
  %53 = sext i32 %52 to i64, !dbg !9297
  %54 = getelementptr inbounds i8, i8* %50, i64 %53, !dbg !9297
  %55 = load i8, i8* %54, align 1, !dbg !9297
  %56 = zext i8 %55 to i32, !dbg !9297
  br label %58, !dbg !9296

; <label>:57:                                     ; preds = %43
  br label %58, !dbg !9296

; <label>:58:                                     ; preds = %57, %49
  %59 = phi i32 [ %56, %49 ], [ 0, %57 ], !dbg !9296
  store i32 %59, i32* %20, align 4, !dbg !9300
  %60 = load i32, i32* %17, align 4, !dbg !9301
  %61 = icmp sge i32 %60, 2, !dbg !9302
  br i1 %61, label %62, label %72, !dbg !9303

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %18, align 8, !dbg !9304
  %64 = load i32, i32* %15, align 4, !dbg !9305
  %65 = shl i32 %64, 1, !dbg !9306
  %66 = sub nsw i32 0, %65, !dbg !9307
  %67 = sext i32 %66 to i64, !dbg !9304
  %68 = getelementptr inbounds i8, i8* %63, i64 %67, !dbg !9304
  %69 = load i8, i8* %68, align 1, !dbg !9304
  %70 = zext i8 %69 to i32, !dbg !9304
  %71 = shl i32 %70, 4, !dbg !9308
  br label %73, !dbg !9303

; <label>:72:                                     ; preds = %58
  br label %73, !dbg !9303

; <label>:73:                                     ; preds = %72, %62
  %74 = phi i32 [ %71, %62 ], [ 0, %72 ], !dbg !9303
  store i32 %74, i32* %21, align 4, !dbg !9309
  %75 = load i32, i32* %20, align 4, !dbg !9310
  %76 = lshr i32 %75, 3, !dbg !9311
  %77 = and i32 %76, 124, !dbg !9312
  %78 = load i32, i32* %21, align 4, !dbg !9313
  %79 = lshr i32 %78, 3, !dbg !9314
  %80 = and i32 %79, 896, !dbg !9315
  %81 = or i32 %77, %80, !dbg !9316
  store i32 %81, i32* %19, align 4, !dbg !9317
  store i32 0, i32* %16, align 4, !dbg !9318
  br label %82, !dbg !9320

; <label>:82:                                     ; preds = %198, %73
  %83 = load i32, i32* %16, align 4, !dbg !9321
  %84 = load i32, i32* %22, align 4, !dbg !9323
  %85 = icmp slt i32 %83, %84, !dbg !9324
  br i1 %85, label %86, label %201, !dbg !9325

; <label>:86:                                     ; preds = %82
  call void @llvm.dbg.declare(metadata i8* %23, metadata !9326, metadata !DIExpression()), !dbg !9328
  store i8 0, i8* %23, align 1, !dbg !9328
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9329, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9331, metadata !DIExpression()), !dbg !9332
  %87 = load i32, i32* %13, align 4, !dbg !9333
  %88 = load i32, i32* %16, align 4, !dbg !9334
  %89 = sub nsw i32 %87, %88, !dbg !9335
  %90 = icmp sgt i32 %89, 8, !dbg !9336
  br i1 %90, label %91, label %92, !dbg !9333

; <label>:91:                                     ; preds = %86
  br label %96, !dbg !9333

; <label>:92:                                     ; preds = %86
  %93 = load i32, i32* %13, align 4, !dbg !9337
  %94 = load i32, i32* %16, align 4, !dbg !9338
  %95 = sub nsw i32 %93, %94, !dbg !9339
  br label %96, !dbg !9333

; <label>:96:                                     ; preds = %92, %91
  %97 = phi i32 [ 8, %91 ], [ %95, %92 ], !dbg !9333
  store i32 %97, i32* %25, align 4, !dbg !9332
  %98 = load i32, i32* %17, align 4, !dbg !9340
  %99 = icmp sge i32 %98, 1, !dbg !9342
  br i1 %99, label %100, label %123, !dbg !9343

; <label>:100:                                    ; preds = %96
  %101 = load i32, i32* %20, align 4, !dbg !9344
  %102 = shl i32 %101, 8, !dbg !9345
  %103 = load i32, i32* %16, align 4, !dbg !9346
  %104 = add nsw i32 %103, 8, !dbg !9347
  %105 = load i32, i32* %13, align 4, !dbg !9348
  %106 = icmp slt i32 %104, %105, !dbg !9349
  br i1 %106, label %107, label %119, !dbg !9346

; <label>:107:                                    ; preds = %100
  %108 = load i8*, i8** %18, align 8, !dbg !9350
  %109 = load i32, i32* %15, align 4, !dbg !9351
  %110 = sub nsw i32 0, %109, !dbg !9352
  %111 = load i32, i32* %16, align 4, !dbg !9353
  %112 = ashr i32 %111, 3, !dbg !9354
  %113 = add nsw i32 %110, %112, !dbg !9355
  %114 = add nsw i32 %113, 1, !dbg !9356
  %115 = sext i32 %114 to i64, !dbg !9350
  %116 = getelementptr inbounds i8, i8* %108, i64 %115, !dbg !9350
  %117 = load i8, i8* %116, align 1, !dbg !9350
  %118 = zext i8 %117 to i32, !dbg !9350
  br label %120, !dbg !9346

; <label>:119:                                    ; preds = %100
  br label %120, !dbg !9346

; <label>:120:                                    ; preds = %119, %107
  %121 = phi i32 [ %118, %107 ], [ 0, %119 ], !dbg !9346
  %122 = or i32 %102, %121, !dbg !9357
  store i32 %122, i32* %20, align 4, !dbg !9358
  br label %123, !dbg !9359

; <label>:123:                                    ; preds = %120, %96
  %124 = load i32, i32* %17, align 4, !dbg !9360
  %125 = icmp sge i32 %124, 2, !dbg !9362
  br i1 %125, label %126, label %151, !dbg !9363

; <label>:126:                                    ; preds = %123
  %127 = load i32, i32* %21, align 4, !dbg !9364
  %128 = shl i32 %127, 8, !dbg !9365
  %129 = load i32, i32* %16, align 4, !dbg !9366
  %130 = add nsw i32 %129, 8, !dbg !9367
  %131 = load i32, i32* %13, align 4, !dbg !9368
  %132 = icmp slt i32 %130, %131, !dbg !9369
  br i1 %132, label %133, label %147, !dbg !9366

; <label>:133:                                    ; preds = %126
  %134 = load i8*, i8** %18, align 8, !dbg !9370
  %135 = load i32, i32* %15, align 4, !dbg !9371
  %136 = shl i32 %135, 1, !dbg !9372
  %137 = sub nsw i32 0, %136, !dbg !9373
  %138 = load i32, i32* %16, align 4, !dbg !9374
  %139 = ashr i32 %138, 3, !dbg !9375
  %140 = add nsw i32 %137, %139, !dbg !9376
  %141 = add nsw i32 %140, 1, !dbg !9377
  %142 = sext i32 %141 to i64, !dbg !9370
  %143 = getelementptr inbounds i8, i8* %134, i64 %142, !dbg !9370
  %144 = load i8, i8* %143, align 1, !dbg !9370
  %145 = zext i8 %144 to i32, !dbg !9370
  %146 = shl i32 %145, 4, !dbg !9378
  br label %148, !dbg !9366

; <label>:147:                                    ; preds = %126
  br label %148, !dbg !9366

; <label>:148:                                    ; preds = %147, %133
  %149 = phi i32 [ %146, %133 ], [ 0, %147 ], !dbg !9366
  %150 = or i32 %128, %149, !dbg !9379
  store i32 %150, i32* %21, align 4, !dbg !9380
  br label %151, !dbg !9381

; <label>:151:                                    ; preds = %148, %123
  store i32 0, i32* %24, align 4, !dbg !9382
  br label %152, !dbg !9384

; <label>:152:                                    ; preds = %188, %151
  %153 = load i32, i32* %24, align 4, !dbg !9385
  %154 = load i32, i32* %25, align 4, !dbg !9387
  %155 = icmp slt i32 %153, %154, !dbg !9388
  br i1 %155, label %156, label %191, !dbg !9389

; <label>:156:                                    ; preds = %152
  call void @llvm.dbg.declare(metadata i32* %26, metadata !9390, metadata !DIExpression()), !dbg !9392
  %157 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !9393
  %158 = load i8*, i8** %12, align 8, !dbg !9394
  %159 = load i32, i32* %19, align 4, !dbg !9395
  %160 = zext i32 %159 to i64, !dbg !9394
  %161 = getelementptr inbounds i8, i8* %158, i64 %160, !dbg !9394
  %162 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %157, i8* %161), !dbg !9396
  store i32 %162, i32* %26, align 4, !dbg !9397
  %163 = load i32, i32* %26, align 4, !dbg !9398
  %164 = load i32, i32* %24, align 4, !dbg !9399
  %165 = sub nsw i32 7, %164, !dbg !9400
  %166 = shl i32 %163, %165, !dbg !9401
  %167 = load i8, i8* %23, align 1, !dbg !9402
  %168 = zext i8 %167 to i32, !dbg !9402
  %169 = or i32 %168, %166, !dbg !9402
  %170 = trunc i32 %169 to i8, !dbg !9402
  store i8 %170, i8* %23, align 1, !dbg !9402
  %171 = load i32, i32* %19, align 4, !dbg !9403
  %172 = and i32 %171, 445, !dbg !9404
  %173 = shl i32 %172, 1, !dbg !9405
  %174 = load i32, i32* %26, align 4, !dbg !9406
  %175 = or i32 %173, %174, !dbg !9407
  %176 = load i32, i32* %20, align 4, !dbg !9408
  %177 = load i32, i32* %24, align 4, !dbg !9409
  %178 = sub nsw i32 10, %177, !dbg !9410
  %179 = lshr i32 %176, %178, !dbg !9411
  %180 = and i32 %179, 4, !dbg !9412
  %181 = or i32 %175, %180, !dbg !9413
  %182 = load i32, i32* %21, align 4, !dbg !9414
  %183 = load i32, i32* %24, align 4, !dbg !9415
  %184 = sub nsw i32 10, %183, !dbg !9416
  %185 = lshr i32 %182, %184, !dbg !9417
  %186 = and i32 %185, 128, !dbg !9418
  %187 = or i32 %181, %186, !dbg !9419
  store i32 %187, i32* %19, align 4, !dbg !9420
  br label %188, !dbg !9421

; <label>:188:                                    ; preds = %156
  %189 = load i32, i32* %24, align 4, !dbg !9422
  %190 = add nsw i32 %189, 1, !dbg !9422
  store i32 %190, i32* %24, align 4, !dbg !9422
  br label %152, !dbg !9423, !llvm.loop !9424

; <label>:191:                                    ; preds = %152
  %192 = load i8, i8* %23, align 1, !dbg !9426
  %193 = load i8*, i8** %18, align 8, !dbg !9427
  %194 = load i32, i32* %16, align 4, !dbg !9428
  %195 = ashr i32 %194, 3, !dbg !9429
  %196 = sext i32 %195 to i64, !dbg !9427
  %197 = getelementptr inbounds i8, i8* %193, i64 %196, !dbg !9427
  store i8 %192, i8* %197, align 1, !dbg !9430
  br label %198, !dbg !9431

; <label>:198:                                    ; preds = %191
  %199 = load i32, i32* %16, align 4, !dbg !9432
  %200 = add nsw i32 %199, 8, !dbg !9432
  store i32 %200, i32* %16, align 4, !dbg !9432
  br label %82, !dbg !9433, !llvm.loop !9434

; <label>:201:                                    ; preds = %82
  %202 = load i32, i32* %15, align 4, !dbg !9436
  %203 = load i8*, i8** %18, align 8, !dbg !9437
  %204 = sext i32 %202 to i64, !dbg !9437
  %205 = getelementptr inbounds i8, i8* %203, i64 %204, !dbg !9437
  store i8* %205, i8** %18, align 8, !dbg !9437
  br label %206, !dbg !9438

; <label>:206:                                    ; preds = %201
  %207 = load i32, i32* %17, align 4, !dbg !9439
  %208 = add nsw i32 %207, 1, !dbg !9439
  store i32 %208, i32* %17, align 4, !dbg !9439
  br label %39, !dbg !9440, !llvm.loop !9441

; <label>:209:                                    ; preds = %39
  ret i32 0, !dbg !9443
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_generic_template3_unopt(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !9444 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !9445, metadata !DIExpression()), !dbg !9446
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !9447, metadata !DIExpression()), !dbg !9448
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !9449, metadata !DIExpression()), !dbg !9450
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !9451, metadata !DIExpression()), !dbg !9452
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !9453, metadata !DIExpression()), !dbg !9454
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9455, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9457, metadata !DIExpression()), !dbg !9458
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9459
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 0, !dbg !9460
  %21 = load i32, i32* %20, align 8, !dbg !9460
  store i32 %21, i32* %13, align 4, !dbg !9458
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9461, metadata !DIExpression()), !dbg !9462
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9463
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 1, !dbg !9464
  %24 = load i32, i32* %23, align 4, !dbg !9464
  store i32 %24, i32* %14, align 4, !dbg !9462
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9465, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9467, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9471, metadata !DIExpression()), !dbg !9472
  store i32 0, i32* %17, align 4, !dbg !9473
  br label %25, !dbg !9475

; <label>:25:                                     ; preds = %146, %6
  %26 = load i32, i32* %17, align 4, !dbg !9476
  %27 = load i32, i32* %14, align 4, !dbg !9478
  %28 = icmp slt i32 %26, %27, !dbg !9479
  br i1 %28, label %29, label %149, !dbg !9480

; <label>:29:                                     ; preds = %25
  store i32 0, i32* %16, align 4, !dbg !9481
  br label %30, !dbg !9484

; <label>:30:                                     ; preds = %142, %29
  %31 = load i32, i32* %16, align 4, !dbg !9485
  %32 = load i32, i32* %13, align 4, !dbg !9487
  %33 = icmp slt i32 %31, %32, !dbg !9488
  br i1 %33, label %34, label %145, !dbg !9489

; <label>:34:                                     ; preds = %30
  store i32 0, i32* %15, align 4, !dbg !9490
  %35 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9492
  %36 = load i32, i32* %16, align 4, !dbg !9493
  %37 = sub nsw i32 %36, 1, !dbg !9494
  %38 = load i32, i32* %17, align 4, !dbg !9495
  %39 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %35, i32 %37, i32 %38), !dbg !9496
  %40 = shl i32 %39, 0, !dbg !9497
  %41 = load i32, i32* %15, align 4, !dbg !9498
  %42 = or i32 %41, %40, !dbg !9498
  store i32 %42, i32* %15, align 4, !dbg !9498
  %43 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9499
  %44 = load i32, i32* %16, align 4, !dbg !9500
  %45 = sub nsw i32 %44, 2, !dbg !9501
  %46 = load i32, i32* %17, align 4, !dbg !9502
  %47 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %43, i32 %45, i32 %46), !dbg !9503
  %48 = shl i32 %47, 1, !dbg !9504
  %49 = load i32, i32* %15, align 4, !dbg !9505
  %50 = or i32 %49, %48, !dbg !9505
  store i32 %50, i32* %15, align 4, !dbg !9505
  %51 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9506
  %52 = load i32, i32* %16, align 4, !dbg !9507
  %53 = sub nsw i32 %52, 3, !dbg !9508
  %54 = load i32, i32* %17, align 4, !dbg !9509
  %55 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %51, i32 %53, i32 %54), !dbg !9510
  %56 = shl i32 %55, 2, !dbg !9511
  %57 = load i32, i32* %15, align 4, !dbg !9512
  %58 = or i32 %57, %56, !dbg !9512
  store i32 %58, i32* %15, align 4, !dbg !9512
  %59 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9513
  %60 = load i32, i32* %16, align 4, !dbg !9514
  %61 = sub nsw i32 %60, 4, !dbg !9515
  %62 = load i32, i32* %17, align 4, !dbg !9516
  %63 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %59, i32 %61, i32 %62), !dbg !9517
  %64 = shl i32 %63, 3, !dbg !9518
  %65 = load i32, i32* %15, align 4, !dbg !9519
  %66 = or i32 %65, %64, !dbg !9519
  store i32 %66, i32* %15, align 4, !dbg !9519
  %67 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9520
  %68 = load i32, i32* %16, align 4, !dbg !9521
  %69 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !9522
  %70 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %69, i32 0, i32 4, !dbg !9523
  %71 = getelementptr inbounds [8 x i8], [8 x i8]* %70, i64 0, i64 0, !dbg !9522
  %72 = load i8, i8* %71, align 4, !dbg !9522
  %73 = sext i8 %72 to i32, !dbg !9522
  %74 = add nsw i32 %68, %73, !dbg !9524
  %75 = load i32, i32* %17, align 4, !dbg !9525
  %76 = load %struct.Jbig2GenericRegionParams*, %struct.Jbig2GenericRegionParams** %9, align 8, !dbg !9526
  %77 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %76, i32 0, i32 4, !dbg !9527
  %78 = getelementptr inbounds [8 x i8], [8 x i8]* %77, i64 0, i64 1, !dbg !9526
  %79 = load i8, i8* %78, align 1, !dbg !9526
  %80 = sext i8 %79 to i32, !dbg !9526
  %81 = add nsw i32 %75, %80, !dbg !9528
  %82 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %67, i32 %74, i32 %81), !dbg !9529
  %83 = shl i32 %82, 4, !dbg !9530
  %84 = load i32, i32* %15, align 4, !dbg !9531
  %85 = or i32 %84, %83, !dbg !9531
  store i32 %85, i32* %15, align 4, !dbg !9531
  %86 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9532
  %87 = load i32, i32* %16, align 4, !dbg !9533
  %88 = add nsw i32 %87, 1, !dbg !9534
  %89 = load i32, i32* %17, align 4, !dbg !9535
  %90 = sub nsw i32 %89, 1, !dbg !9536
  %91 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %86, i32 %88, i32 %90), !dbg !9537
  %92 = shl i32 %91, 5, !dbg !9538
  %93 = load i32, i32* %15, align 4, !dbg !9539
  %94 = or i32 %93, %92, !dbg !9539
  store i32 %94, i32* %15, align 4, !dbg !9539
  %95 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9540
  %96 = load i32, i32* %16, align 4, !dbg !9541
  %97 = add nsw i32 %96, 0, !dbg !9542
  %98 = load i32, i32* %17, align 4, !dbg !9543
  %99 = sub nsw i32 %98, 1, !dbg !9544
  %100 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %95, i32 %97, i32 %99), !dbg !9545
  %101 = shl i32 %100, 6, !dbg !9546
  %102 = load i32, i32* %15, align 4, !dbg !9547
  %103 = or i32 %102, %101, !dbg !9547
  store i32 %103, i32* %15, align 4, !dbg !9547
  %104 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9548
  %105 = load i32, i32* %16, align 4, !dbg !9549
  %106 = sub nsw i32 %105, 1, !dbg !9550
  %107 = load i32, i32* %17, align 4, !dbg !9551
  %108 = sub nsw i32 %107, 1, !dbg !9552
  %109 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %104, i32 %106, i32 %108), !dbg !9553
  %110 = shl i32 %109, 7, !dbg !9554
  %111 = load i32, i32* %15, align 4, !dbg !9555
  %112 = or i32 %111, %110, !dbg !9555
  store i32 %112, i32* %15, align 4, !dbg !9555
  %113 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9556
  %114 = load i32, i32* %16, align 4, !dbg !9557
  %115 = sub nsw i32 %114, 2, !dbg !9558
  %116 = load i32, i32* %17, align 4, !dbg !9559
  %117 = sub nsw i32 %116, 1, !dbg !9560
  %118 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %113, i32 %115, i32 %117), !dbg !9561
  %119 = shl i32 %118, 8, !dbg !9562
  %120 = load i32, i32* %15, align 4, !dbg !9563
  %121 = or i32 %120, %119, !dbg !9563
  store i32 %121, i32* %15, align 4, !dbg !9563
  %122 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9564
  %123 = load i32, i32* %16, align 4, !dbg !9565
  %124 = sub nsw i32 %123, 3, !dbg !9566
  %125 = load i32, i32* %17, align 4, !dbg !9567
  %126 = sub nsw i32 %125, 1, !dbg !9568
  %127 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %122, i32 %124, i32 %126), !dbg !9569
  %128 = shl i32 %127, 9, !dbg !9570
  %129 = load i32, i32* %15, align 4, !dbg !9571
  %130 = or i32 %129, %128, !dbg !9571
  store i32 %130, i32* %15, align 4, !dbg !9571
  %131 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !9572
  %132 = load i8*, i8** %12, align 8, !dbg !9573
  %133 = load i32, i32* %15, align 4, !dbg !9574
  %134 = zext i32 %133 to i64, !dbg !9573
  %135 = getelementptr inbounds i8, i8* %132, i64 %134, !dbg !9573
  %136 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %131, i8* %135), !dbg !9575
  store i32 %136, i32* %18, align 4, !dbg !9576
  %137 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9577
  %138 = load i32, i32* %16, align 4, !dbg !9578
  %139 = load i32, i32* %17, align 4, !dbg !9579
  %140 = load i32, i32* %18, align 4, !dbg !9580
  %141 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %137, i32 %138, i32 %139, i32 %140), !dbg !9581
  br label %142, !dbg !9582

; <label>:142:                                    ; preds = %34
  %143 = load i32, i32* %16, align 4, !dbg !9583
  %144 = add nsw i32 %143, 1, !dbg !9583
  store i32 %144, i32* %16, align 4, !dbg !9583
  br label %30, !dbg !9584, !llvm.loop !9585

; <label>:145:                                    ; preds = %30
  br label %146, !dbg !9587

; <label>:146:                                    ; preds = %145
  %147 = load i32, i32* %17, align 4, !dbg !9588
  %148 = add nsw i32 %147, 1, !dbg !9588
  store i32 %148, i32* %17, align 4, !dbg !9588
  br label %25, !dbg !9589, !llvm.loop !9590

; <label>:149:                                    ; preds = %25
  ret i32 0, !dbg !9592
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_immediate_generic_region(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !9593 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.Jbig2RegionSegmentInfo, align 4
  %9 = alloca i8, align 1
  %10 = alloca [8 x i8], align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.Jbig2GenericRegionParams, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct._Jbig2Image*, align 8
  %16 = alloca %struct._Jbig2WordStream*, align 8
  %17 = alloca %struct._Jbig2ArithState*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !9596, metadata !DIExpression()), !dbg !9597
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !9598, metadata !DIExpression()), !dbg !9599
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata %struct.Jbig2RegionSegmentInfo* %8, metadata !9602, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.declare(metadata i8* %9, metadata !9613, metadata !DIExpression()), !dbg !9614
  call void @llvm.dbg.declare(metadata [8 x i8]* %10, metadata !9615, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9617, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata i32* %12, metadata !9619, metadata !DIExpression()), !dbg !9620
  store i32 0, i32* %12, align 4, !dbg !9620
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams* %13, metadata !9621, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9623, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %15, metadata !9625, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %16, metadata !9627, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %17, metadata !9637, metadata !DIExpression()), !dbg !9638
  call void @llvm.dbg.declare(metadata i8** %18, metadata !9639, metadata !DIExpression()), !dbg !9640
  store i8* null, i8** %18, align 8, !dbg !9640
  %20 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9641
  %21 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %20, i32 0, i32 3, !dbg !9643
  %22 = load i64, i64* %21, align 8, !dbg !9643
  %23 = icmp ult i64 %22, 18, !dbg !9644
  br i1 %23, label %24, label %30, !dbg !9645

; <label>:24:                                     ; preds = %3
  %25 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9646
  %26 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9647
  %27 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %26, i32 0, i32 0, !dbg !9648
  %28 = load i32, i32* %27, align 8, !dbg !9648
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9649
  %29 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %25, i32 3, i32 %28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.198, i32 0, i32 0)), !dbg !9649
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9650
  store i32 %29, i32* %4, align 4, !dbg !9650
  br label %236, !dbg !9650

; <label>:30:                                     ; preds = %3
  %31 = load i8*, i8** %7, align 8, !dbg !9651
  call void @jbig2_get_region_segment_info(%struct.Jbig2RegionSegmentInfo* %8, i8* %31), !dbg !9652
  %32 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9653
  %33 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9654
  %34 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %33, i32 0, i32 0, !dbg !9655
  %35 = load i32, i32* %34, align 8, !dbg !9655
  %36 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 0, !dbg !9656
  %37 = load i32, i32* %36, align 4, !dbg !9656
  %38 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 1, !dbg !9657
  %39 = load i32, i32* %38, align 4, !dbg !9657
  %40 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 2, !dbg !9658
  %41 = load i32, i32* %40, align 4, !dbg !9658
  %42 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 3, !dbg !9659
  %43 = load i32, i32* %42, align 4, !dbg !9659
  %44 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 5, !dbg !9660
  %45 = load i8, i8* %44, align 4, !dbg !9660
  %46 = zext i8 %45 to i32, !dbg !9661
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9662
  %47 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %32, i32 1, i32 %35, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3.199, i32 0, i32 0), i32 %37, i32 %39, i32 %41, i32 %43, i32 %46), !dbg !9662
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9663
  %48 = load i8*, i8** %7, align 8, !dbg !9663
  %49 = getelementptr inbounds i8, i8* %48, i64 17, !dbg !9663
  %50 = load i8, i8* %49, align 1, !dbg !9663
  store i8 %50, i8* %9, align 1, !dbg !9664
  %51 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9665
  %52 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9666
  %53 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %52, i32 0, i32 0, !dbg !9667
  %54 = load i32, i32* %53, align 8, !dbg !9667
  %55 = load i8, i8* %9, align 1, !dbg !9668
  %56 = zext i8 %55 to i32, !dbg !9668
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9669
  %57 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %51, i32 1, i32 %54, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.200, i32 0, i32 0), i32 %56), !dbg !9669
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9670
  %58 = load i8, i8* %9, align 1, !dbg !9670
  %59 = zext i8 %58 to i32, !dbg !9670
  %60 = and i32 %59, 1, !dbg !9672
  %61 = icmp ne i32 %60, 0, !dbg !9672
  br i1 %61, label %62, label %73, !dbg !9673

; <label>:62:                                     ; preds = %30
  %63 = load i8, i8* %9, align 1, !dbg !9674
  %64 = zext i8 %63 to i32, !dbg !9674
  %65 = and i32 %64, 6, !dbg !9675
  %66 = icmp ne i32 %65, 0, !dbg !9675
  br i1 %66, label %67, label %73, !dbg !9676

; <label>:67:                                     ; preds = %62
  %68 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9677
  %69 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9678
  %70 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %69, i32 0, i32 0, !dbg !9679
  %71 = load i32, i32* %70, align 8, !dbg !9679
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9680
  %72 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %68, i32 2, i32 %71, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.201, i32 0, i32 0)), !dbg !9680
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9680
  br label %73, !dbg !9680

; <label>:73:                                     ; preds = %67, %62, %30
  %74 = load i8, i8* %9, align 1, !dbg !9681
  %75 = zext i8 %74 to i32, !dbg !9681
  %76 = and i32 %75, 1, !dbg !9683
  %77 = icmp ne i32 %76, 0, !dbg !9683
  br i1 %77, label %115, label %78, !dbg !9684

; <label>:78:                                     ; preds = %73
  %79 = load i8, i8* %9, align 1, !dbg !9685
  %80 = zext i8 %79 to i32, !dbg !9685
  %81 = and i32 %80, 6, !dbg !9687
  %82 = icmp ne i32 %81, 0, !dbg !9688
  %83 = zext i1 %82 to i64, !dbg !9688
  %84 = select i1 %82, i32 2, i32 8, !dbg !9688
  store i32 %84, i32* %12, align 4, !dbg !9689
  %85 = load i32, i32* %12, align 4, !dbg !9690
  %86 = add nsw i32 18, %85, !dbg !9692
  %87 = sext i32 %86 to i64, !dbg !9693
  %88 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9694
  %89 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %88, i32 0, i32 3, !dbg !9695
  %90 = load i64, i64* %89, align 8, !dbg !9695
  %91 = icmp ugt i64 %87, %90, !dbg !9696
  br i1 %91, label %92, label %98, !dbg !9697

; <label>:92:                                     ; preds = %78
  %93 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9698
  %94 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9699
  %95 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %94, i32 0, i32 0, !dbg !9700
  %96 = load i32, i32* %95, align 8, !dbg !9700
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9701
  %97 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %93, i32 3, i32 %96, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.198, i32 0, i32 0)), !dbg !9701
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9702
  store i32 %97, i32* %4, align 4, !dbg !9702
  br label %236, !dbg !9702

; <label>:98:                                     ; preds = %78
  %99 = getelementptr inbounds [8 x i8], [8 x i8]* %10, i32 0, i32 0, !dbg !9703
  %100 = load i8*, i8** %7, align 8, !dbg !9704
  %101 = getelementptr inbounds i8, i8* %100, i64 18, !dbg !9705
  %102 = load i32, i32* %12, align 4, !dbg !9706
  %103 = sext i32 %102 to i64, !dbg !9706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %101, i64 %103, i1 false), !dbg !9703
  %104 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9707
  %105 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9708
  %106 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %105, i32 0, i32 0, !dbg !9709
  %107 = load i32, i32* %106, align 8, !dbg !9709
  %108 = getelementptr inbounds [8 x i8], [8 x i8]* %10, i64 0, i64 0, !dbg !9710
  %109 = load i8, i8* %108, align 1, !dbg !9710
  %110 = sext i8 %109 to i32, !dbg !9710
  %111 = getelementptr inbounds [8 x i8], [8 x i8]* %10, i64 0, i64 1, !dbg !9711
  %112 = load i8, i8* %111, align 1, !dbg !9711
  %113 = sext i8 %112 to i32, !dbg !9711
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9712
  %114 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %104, i32 1, i32 %107, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.202, i32 0, i32 0), i32 %110, i32 %113), !dbg !9712
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9713
  br label %115, !dbg !9713

; <label>:115:                                    ; preds = %98, %73
  %116 = load i32, i32* %12, align 4, !dbg !9714
  %117 = add nsw i32 18, %116, !dbg !9715
  store i32 %117, i32* %11, align 4, !dbg !9716
  %118 = load i8, i8* %9, align 1, !dbg !9717
  %119 = zext i8 %118 to i32, !dbg !9717
  %120 = and i32 %119, 1, !dbg !9718
  %121 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 0, !dbg !9719
  store i32 %120, i32* %121, align 4, !dbg !9720
  %122 = load i8, i8* %9, align 1, !dbg !9721
  %123 = zext i8 %122 to i32, !dbg !9721
  %124 = and i32 %123, 6, !dbg !9722
  %125 = ashr i32 %124, 1, !dbg !9723
  %126 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 1, !dbg !9724
  store i32 %125, i32* %126, align 4, !dbg !9725
  %127 = load i8, i8* %9, align 1, !dbg !9726
  %128 = zext i8 %127 to i32, !dbg !9726
  %129 = and i32 %128, 8, !dbg !9727
  %130 = ashr i32 %129, 3, !dbg !9728
  %131 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 2, !dbg !9729
  store i32 %130, i32* %131, align 4, !dbg !9730
  %132 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 3, !dbg !9731
  store i32 0, i32* %132, align 4, !dbg !9732
  %133 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 4, !dbg !9733
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %133, i32 0, i32 0, !dbg !9734
  %135 = getelementptr inbounds [8 x i8], [8 x i8]* %10, i32 0, i32 0, !dbg !9734
  %136 = load i32, i32* %12, align 4, !dbg !9735
  %137 = sext i32 %136 to i64, !dbg !9735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 1 %135, i64 %137, i1 false), !dbg !9734
  %138 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9736
  %139 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 0, !dbg !9737
  %140 = load i32, i32* %139, align 4, !dbg !9737
  %141 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 1, !dbg !9738
  %142 = load i32, i32* %141, align 4, !dbg !9738
  %143 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %138, i32 %140, i32 %142), !dbg !9739
  store %struct._Jbig2Image* %143, %struct._Jbig2Image** %15, align 8, !dbg !9740
  %144 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9741
  %145 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9742
  %146 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %145, i32 0, i32 0, !dbg !9743
  %147 = load i32, i32* %146, align 8, !dbg !9743
  %148 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 0, !dbg !9744
  %149 = load i32, i32* %148, align 4, !dbg !9744
  %150 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 1, !dbg !9745
  %151 = load i32, i32* %150, align 4, !dbg !9745
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !9746
  %152 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %144, i32 0, i32 %147, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7.203, i32 0, i32 0), i32 %149, i32 %151), !dbg !9746
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !9747
  %153 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 0, !dbg !9747
  %154 = load i32, i32* %153, align 4, !dbg !9747
  %155 = icmp ne i32 %154, 0, !dbg !9749
  br i1 %155, label %156, label %171, !dbg !9750

; <label>:156:                                    ; preds = %115
  %157 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9751
  %158 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9753
  %159 = load i8*, i8** %7, align 8, !dbg !9754
  %160 = load i32, i32* %11, align 4, !dbg !9755
  %161 = sext i32 %160 to i64, !dbg !9756
  %162 = getelementptr inbounds i8, i8* %159, i64 %161, !dbg !9756
  %163 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9757
  %164 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %163, i32 0, i32 3, !dbg !9758
  %165 = load i64, i64* %164, align 8, !dbg !9758
  %166 = load i32, i32* %11, align 4, !dbg !9759
  %167 = sext i32 %166 to i64, !dbg !9759
  %168 = sub i64 %165, %167, !dbg !9760
  %169 = load %struct._Jbig2Image*, %struct._Jbig2Image** %15, align 8, !dbg !9761
  %170 = call i32 @jbig2_decode_generic_mmr(%struct._Jbig2Ctx.11* %157, %struct._Jbig2Segment* %158, %struct.Jbig2GenericRegionParams* %13, i8* %162, i64 %168, %struct._Jbig2Image* %169), !dbg !9762
  store i32 %170, i32* %14, align 4, !dbg !9763
  br label %217, !dbg !9764

; <label>:171:                                    ; preds = %115
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9765, metadata !DIExpression()), !dbg !9767
  %172 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9768
  %173 = getelementptr inbounds %struct.Jbig2GenericRegionParams, %struct.Jbig2GenericRegionParams* %13, i32 0, i32 1, !dbg !9769
  %174 = load i32, i32* %173, align 4, !dbg !9769
  %175 = call i32 @jbig2_generic_stats_size(%struct._Jbig2Ctx.11* %172, i32 %174), !dbg !9770
  store i32 %175, i32* %19, align 4, !dbg !9767
  %176 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9771
  %177 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %176, i32 0, i32 0, !dbg !9772
  %178 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %177, align 8, !dbg !9772
  %179 = load i32, i32* %19, align 4, !dbg !9773
  %180 = sext i32 %179 to i64, !dbg !9773
  %181 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %178, i64 %180), !dbg !9774
  store i8* %181, i8** %18, align 8, !dbg !9775
  %182 = load i8*, i8** %18, align 8, !dbg !9776
  %183 = load i32, i32* %19, align 4, !dbg !9777
  %184 = sext i32 %183 to i64, !dbg !9777
  call void @llvm.memset.p0i8.i64(i8* align 1 %182, i8 0, i64 %184, i1 false), !dbg !9778
  %185 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9779
  %186 = load i8*, i8** %7, align 8, !dbg !9780
  %187 = load i32, i32* %11, align 4, !dbg !9781
  %188 = sext i32 %187 to i64, !dbg !9782
  %189 = getelementptr inbounds i8, i8* %186, i64 %188, !dbg !9782
  %190 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9783
  %191 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %190, i32 0, i32 3, !dbg !9784
  %192 = load i64, i64* %191, align 8, !dbg !9784
  %193 = load i32, i32* %11, align 4, !dbg !9785
  %194 = sext i32 %193 to i64, !dbg !9785
  %195 = sub i64 %192, %194, !dbg !9786
  %196 = call %struct._Jbig2WordStream* bitcast (%struct._Jbig2WordStream* (%struct._Jbig2Ctx*, i8*, i64)* @jbig2_word_stream_buf_new to %struct._Jbig2WordStream* (%struct._Jbig2Ctx.11*, i8*, i64)*)(%struct._Jbig2Ctx.11* %185, i8* %189, i64 %195), !dbg !9787
  store %struct._Jbig2WordStream* %196, %struct._Jbig2WordStream** %16, align 8, !dbg !9788
  %197 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9789
  %198 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %16, align 8, !dbg !9790
  %199 = call %struct._Jbig2ArithState* @jbig2_arith_new(%struct._Jbig2Ctx.11* %197, %struct._Jbig2WordStream* %198), !dbg !9791
  store %struct._Jbig2ArithState* %199, %struct._Jbig2ArithState** %17, align 8, !dbg !9792
  %200 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9793
  %201 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !9794
  %202 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %17, align 8, !dbg !9795
  %203 = load %struct._Jbig2Image*, %struct._Jbig2Image** %15, align 8, !dbg !9796
  %204 = load i8*, i8** %18, align 8, !dbg !9797
  %205 = call i32 @jbig2_decode_generic_region(%struct._Jbig2Ctx.11* %200, %struct._Jbig2Segment* %201, %struct.Jbig2GenericRegionParams* %13, %struct._Jbig2ArithState* %202, %struct._Jbig2Image* %203, i8* %204), !dbg !9798
  store i32 %205, i32* %14, align 4, !dbg !9799
  %206 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9800
  %207 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %206, i32 0, i32 0, !dbg !9801
  %208 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %207, align 8, !dbg !9801
  %209 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %17, align 8, !dbg !9802
  %210 = bitcast %struct._Jbig2ArithState* %209 to i8*, !dbg !9802
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %208, i8* %210), !dbg !9803
  %211 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9804
  %212 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %16, align 8, !dbg !9805
  call void bitcast (void (%struct._Jbig2Ctx*, %struct._Jbig2WordStream*)* @jbig2_word_stream_buf_free to void (%struct._Jbig2Ctx.11*, %struct._Jbig2WordStream*)*)(%struct._Jbig2Ctx.11* %211, %struct._Jbig2WordStream* %212), !dbg !9806
  %213 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9807
  %214 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %213, i32 0, i32 0, !dbg !9808
  %215 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %214, align 8, !dbg !9808
  %216 = load i8*, i8** %18, align 8, !dbg !9809
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %215, i8* %216), !dbg !9810
  br label %217

; <label>:217:                                    ; preds = %171, %156
  %218 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9811
  %219 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9812
  %220 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %219, i32 0, i32 18, !dbg !9813
  %221 = load %struct._Jbig2Page*, %struct._Jbig2Page** %220, align 8, !dbg !9813
  %222 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9814
  %223 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %222, i32 0, i32 16, !dbg !9815
  %224 = load i32, i32* %223, align 8, !dbg !9815
  %225 = sext i32 %224 to i64, !dbg !9812
  %226 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %221, i64 %225, !dbg !9812
  %227 = load %struct._Jbig2Image*, %struct._Jbig2Image** %15, align 8, !dbg !9816
  %228 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 2, !dbg !9817
  %229 = load i32, i32* %228, align 4, !dbg !9817
  %230 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %8, i32 0, i32 3, !dbg !9818
  %231 = load i32, i32* %230, align 4, !dbg !9818
  %232 = call i32 @jbig2_page_add_result(%struct._Jbig2Ctx.11* %218, %struct._Jbig2Page* %226, %struct._Jbig2Image* %227, i32 %229, i32 %231, i32 0), !dbg !9819
  %233 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !9820
  %234 = load %struct._Jbig2Image*, %struct._Jbig2Image** %15, align 8, !dbg !9821
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %233, %struct._Jbig2Image* %234), !dbg !9822
  %235 = load i32, i32* %14, align 4, !dbg !9823
  store i32 %235, i32* %4, align 4, !dbg !9824
  br label %236, !dbg !9824

; <label>:236:                                    ; preds = %217, %92, %24
  %237 = load i32, i32* %4, align 4, !dbg !9825
  ret i32 %237, !dbg !9825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_decode_refinement_region(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2RefinementRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !9826 {
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2Ctx.11*, align 8
  %9 = alloca %struct._Jbig2Segment*, align 8
  %10 = alloca %struct.Jbig2RefinementRegionParams*, align 8
  %11 = alloca %struct._Jbig2ArithState*, align 8
  %12 = alloca %struct._Jbig2Image*, align 8
  %13 = alloca i8*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %8, metadata !9917, metadata !DIExpression()), !dbg !9918
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %9, metadata !9919, metadata !DIExpression()), !dbg !9920
  store %struct.Jbig2RefinementRegionParams* %2, %struct.Jbig2RefinementRegionParams** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2RefinementRegionParams** %10, metadata !9921, metadata !DIExpression()), !dbg !9922
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %11, metadata !9923, metadata !DIExpression()), !dbg !9924
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %12, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %12, metadata !9925, metadata !DIExpression()), !dbg !9926
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !9927, metadata !DIExpression()), !dbg !9928
  %14 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !9929
  %15 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !9931
  %16 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %15, i32 0, i32 0, !dbg !9932
  %17 = load i32, i32* %16, align 8, !dbg !9932
  %18 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9933
  %19 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %18, i32 0, i32 2, !dbg !9934
  %20 = load i32, i32* %19, align 8, !dbg !9934
  %21 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9935
  %22 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %21, i32 0, i32 3, !dbg !9936
  %23 = load i32, i32* %22, align 4, !dbg !9936
  %24 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9937
  %25 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %24, i32 0, i32 0, !dbg !9938
  %26 = load i32, i32* %25, align 8, !dbg !9938
  %27 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9939
  %28 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %27, i32 0, i32 4, !dbg !9940
  %29 = load i32, i32* %28, align 8, !dbg !9940
  %30 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9941
  %31 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %30, i32 0, i32 5, !dbg !9942
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %31, i64 0, i64 0, !dbg !9941
  %33 = load i8, i8* %32, align 4, !dbg !9941
  %34 = sext i8 %33 to i32, !dbg !9941
  %35 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9943
  %36 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %35, i32 0, i32 5, !dbg !9944
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %36, i64 0, i64 1, !dbg !9943
  %38 = load i8, i8* %37, align 1, !dbg !9943
  %39 = sext i8 %38 to i32, !dbg !9943
  %40 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9945
  %41 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %40, i32 0, i32 5, !dbg !9946
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 2, !dbg !9945
  %43 = load i8, i8* %42, align 2, !dbg !9945
  %44 = sext i8 %43 to i32, !dbg !9945
  %45 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9947
  %46 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %45, i32 0, i32 5, !dbg !9948
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* %46, i64 0, i64 3, !dbg !9947
  %48 = load i8, i8* %47, align 1, !dbg !9947
  %49 = sext i8 %48 to i32, !dbg !9947
  %50 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %14, i32 0, i32 %17, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.206, i32 0, i32 0), i32 %20, i32 %23, i32 %26, i32 %29, i32 %34, i32 %39, i32 %44, i32 %49), !dbg !9949
  %51 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9950
  %52 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %51, i32 0, i32 4, !dbg !9952
  %53 = load i32, i32* %52, align 8, !dbg !9952
  %54 = icmp ne i32 %53, 0, !dbg !9950
  br i1 %54, label %55, label %61, !dbg !9953

; <label>:55:                                     ; preds = %6
  %56 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !9954
  %57 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !9955
  %58 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %57, i32 0, i32 0, !dbg !9956
  %59 = load i32, i32* %58, align 8, !dbg !9956
  %60 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %56, i32 2, i32 %59, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.207, i32 0, i32 0)), !dbg !9957
  store i32 %60, i32* %7, align 4, !dbg !9958
  br label %82, !dbg !9958

; <label>:61:                                     ; preds = %6
  %62 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9959
  %63 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %62, i32 0, i32 0, !dbg !9961
  %64 = load i32, i32* %63, align 8, !dbg !9961
  %65 = icmp ne i32 %64, 0, !dbg !9959
  br i1 %65, label %66, label %74, !dbg !9962

; <label>:66:                                     ; preds = %61
  %67 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !9963
  %68 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !9964
  %69 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9965
  %70 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !9966
  %71 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !9967
  %72 = load i8*, i8** %13, align 8, !dbg !9968
  %73 = call i32 @jbig2_decode_refinement_template1_unopt(%struct._Jbig2Ctx.11* %67, %struct._Jbig2Segment* %68, %struct.Jbig2RefinementRegionParams* %69, %struct._Jbig2ArithState* %70, %struct._Jbig2Image* %71, i8* %72), !dbg !9969
  store i32 %73, i32* %7, align 4, !dbg !9970
  br label %82, !dbg !9970

; <label>:74:                                     ; preds = %61
  %75 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !9971
  %76 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %9, align 8, !dbg !9972
  %77 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %10, align 8, !dbg !9973
  %78 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %11, align 8, !dbg !9974
  %79 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !9975
  %80 = load i8*, i8** %13, align 8, !dbg !9976
  %81 = call i32 @jbig2_decode_refinement_template0_unopt(%struct._Jbig2Ctx.11* %75, %struct._Jbig2Segment* %76, %struct.Jbig2RefinementRegionParams* %77, %struct._Jbig2ArithState* %78, %struct._Jbig2Image* %79, i8* %80), !dbg !9977
  store i32 %81, i32* %7, align 4, !dbg !9978
  br label %82, !dbg !9978

; <label>:82:                                     ; preds = %74, %66, %55
  %83 = load i32, i32* %7, align 4, !dbg !9979
  ret i32 %83, !dbg !9979
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_refinement_template1_unopt(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2RefinementRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !9980 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2RefinementRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct._Jbig2Image*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !9981, metadata !DIExpression()), !dbg !9982
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !9983, metadata !DIExpression()), !dbg !9984
  store %struct.Jbig2RefinementRegionParams* %2, %struct.Jbig2RefinementRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2RefinementRegionParams** %9, metadata !9985, metadata !DIExpression()), !dbg !9986
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !9987, metadata !DIExpression()), !dbg !9988
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !9989, metadata !DIExpression()), !dbg !9990
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9991, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9993, metadata !DIExpression()), !dbg !9994
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9995
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 0, !dbg !9996
  %24 = load i32, i32* %23, align 8, !dbg !9996
  store i32 %24, i32* %13, align 4, !dbg !9994
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9997, metadata !DIExpression()), !dbg !9998
  %25 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !9999
  %26 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %25, i32 0, i32 1, !dbg !10000
  %27 = load i32, i32* %26, align 4, !dbg !10000
  store i32 %27, i32* %14, align 4, !dbg !9998
  call void @llvm.dbg.declare(metadata i32* %15, metadata !10001, metadata !DIExpression()), !dbg !10002
  %28 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10003
  %29 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %28, i32 0, i32 2, !dbg !10004
  %30 = load i32, i32* %29, align 8, !dbg !10004
  store i32 %30, i32* %15, align 4, !dbg !10002
  call void @llvm.dbg.declare(metadata i32* %16, metadata !10005, metadata !DIExpression()), !dbg !10006
  %31 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10007
  %32 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %31, i32 0, i32 3, !dbg !10008
  %33 = load i32, i32* %32, align 4, !dbg !10008
  store i32 %33, i32* %16, align 4, !dbg !10006
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %17, metadata !10009, metadata !DIExpression()), !dbg !10010
  %34 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10011
  %35 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %34, i32 0, i32 1, !dbg !10012
  %36 = load %struct._Jbig2Image*, %struct._Jbig2Image** %35, align 8, !dbg !10012
  store %struct._Jbig2Image* %36, %struct._Jbig2Image** %17, align 8, !dbg !10010
  call void @llvm.dbg.declare(metadata i32* %18, metadata !10013, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.declare(metadata i32* %19, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.declare(metadata i32* %20, metadata !10017, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.declare(metadata i32* %21, metadata !10019, metadata !DIExpression()), !dbg !10020
  store i32 0, i32* %20, align 4, !dbg !10021
  br label %37, !dbg !10023

; <label>:37:                                     ; preds = %176, %6
  %38 = load i32, i32* %20, align 4, !dbg !10024
  %39 = load i32, i32* %14, align 4, !dbg !10026
  %40 = icmp slt i32 %38, %39, !dbg !10027
  br i1 %40, label %41, label %179, !dbg !10028

; <label>:41:                                     ; preds = %37
  store i32 0, i32* %19, align 4, !dbg !10029
  br label %42, !dbg !10032

; <label>:42:                                     ; preds = %172, %41
  %43 = load i32, i32* %19, align 4, !dbg !10033
  %44 = load i32, i32* %13, align 4, !dbg !10035
  %45 = icmp slt i32 %43, %44, !dbg !10036
  br i1 %45, label %46, label %175, !dbg !10037

; <label>:46:                                     ; preds = %42
  store i32 0, i32* %18, align 4, !dbg !10038
  %47 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10040
  %48 = load i32, i32* %19, align 4, !dbg !10041
  %49 = sub nsw i32 %48, 1, !dbg !10042
  %50 = load i32, i32* %20, align 4, !dbg !10043
  %51 = add nsw i32 %50, 0, !dbg !10044
  %52 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %47, i32 %49, i32 %51), !dbg !10045
  %53 = shl i32 %52, 0, !dbg !10046
  %54 = load i32, i32* %18, align 4, !dbg !10047
  %55 = or i32 %54, %53, !dbg !10047
  store i32 %55, i32* %18, align 4, !dbg !10047
  %56 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10048
  %57 = load i32, i32* %19, align 4, !dbg !10049
  %58 = add nsw i32 %57, 1, !dbg !10050
  %59 = load i32, i32* %20, align 4, !dbg !10051
  %60 = sub nsw i32 %59, 1, !dbg !10052
  %61 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %56, i32 %58, i32 %60), !dbg !10053
  %62 = shl i32 %61, 1, !dbg !10054
  %63 = load i32, i32* %18, align 4, !dbg !10055
  %64 = or i32 %63, %62, !dbg !10055
  store i32 %64, i32* %18, align 4, !dbg !10055
  %65 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10056
  %66 = load i32, i32* %19, align 4, !dbg !10057
  %67 = add nsw i32 %66, 0, !dbg !10058
  %68 = load i32, i32* %20, align 4, !dbg !10059
  %69 = sub nsw i32 %68, 1, !dbg !10060
  %70 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %65, i32 %67, i32 %69), !dbg !10061
  %71 = shl i32 %70, 2, !dbg !10062
  %72 = load i32, i32* %18, align 4, !dbg !10063
  %73 = or i32 %72, %71, !dbg !10063
  store i32 %73, i32* %18, align 4, !dbg !10063
  %74 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10064
  %75 = load i32, i32* %19, align 4, !dbg !10065
  %76 = sub nsw i32 %75, 1, !dbg !10066
  %77 = load i32, i32* %20, align 4, !dbg !10067
  %78 = sub nsw i32 %77, 1, !dbg !10068
  %79 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %74, i32 %76, i32 %78), !dbg !10069
  %80 = shl i32 %79, 3, !dbg !10070
  %81 = load i32, i32* %18, align 4, !dbg !10071
  %82 = or i32 %81, %80, !dbg !10071
  store i32 %82, i32* %18, align 4, !dbg !10071
  %83 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10072
  %84 = load i32, i32* %19, align 4, !dbg !10073
  %85 = load i32, i32* %15, align 4, !dbg !10074
  %86 = sub nsw i32 %84, %85, !dbg !10075
  %87 = add nsw i32 %86, 1, !dbg !10076
  %88 = load i32, i32* %20, align 4, !dbg !10077
  %89 = load i32, i32* %16, align 4, !dbg !10078
  %90 = sub nsw i32 %88, %89, !dbg !10079
  %91 = add nsw i32 %90, 1, !dbg !10080
  %92 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %83, i32 %87, i32 %91), !dbg !10081
  %93 = shl i32 %92, 4, !dbg !10082
  %94 = load i32, i32* %18, align 4, !dbg !10083
  %95 = or i32 %94, %93, !dbg !10083
  store i32 %95, i32* %18, align 4, !dbg !10083
  %96 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10084
  %97 = load i32, i32* %19, align 4, !dbg !10085
  %98 = load i32, i32* %15, align 4, !dbg !10086
  %99 = sub nsw i32 %97, %98, !dbg !10087
  %100 = add nsw i32 %99, 0, !dbg !10088
  %101 = load i32, i32* %20, align 4, !dbg !10089
  %102 = load i32, i32* %16, align 4, !dbg !10090
  %103 = sub nsw i32 %101, %102, !dbg !10091
  %104 = add nsw i32 %103, 1, !dbg !10092
  %105 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %96, i32 %100, i32 %104), !dbg !10093
  %106 = shl i32 %105, 5, !dbg !10094
  %107 = load i32, i32* %18, align 4, !dbg !10095
  %108 = or i32 %107, %106, !dbg !10095
  store i32 %108, i32* %18, align 4, !dbg !10095
  %109 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10096
  %110 = load i32, i32* %19, align 4, !dbg !10097
  %111 = load i32, i32* %15, align 4, !dbg !10098
  %112 = sub nsw i32 %110, %111, !dbg !10099
  %113 = add nsw i32 %112, 1, !dbg !10100
  %114 = load i32, i32* %20, align 4, !dbg !10101
  %115 = load i32, i32* %16, align 4, !dbg !10102
  %116 = sub nsw i32 %114, %115, !dbg !10103
  %117 = add nsw i32 %116, 0, !dbg !10104
  %118 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %109, i32 %113, i32 %117), !dbg !10105
  %119 = shl i32 %118, 6, !dbg !10106
  %120 = load i32, i32* %18, align 4, !dbg !10107
  %121 = or i32 %120, %119, !dbg !10107
  store i32 %121, i32* %18, align 4, !dbg !10107
  %122 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10108
  %123 = load i32, i32* %19, align 4, !dbg !10109
  %124 = load i32, i32* %15, align 4, !dbg !10110
  %125 = sub nsw i32 %123, %124, !dbg !10111
  %126 = add nsw i32 %125, 0, !dbg !10112
  %127 = load i32, i32* %20, align 4, !dbg !10113
  %128 = load i32, i32* %16, align 4, !dbg !10114
  %129 = sub nsw i32 %127, %128, !dbg !10115
  %130 = add nsw i32 %129, 0, !dbg !10116
  %131 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %122, i32 %126, i32 %130), !dbg !10117
  %132 = shl i32 %131, 7, !dbg !10118
  %133 = load i32, i32* %18, align 4, !dbg !10119
  %134 = or i32 %133, %132, !dbg !10119
  store i32 %134, i32* %18, align 4, !dbg !10119
  %135 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10120
  %136 = load i32, i32* %19, align 4, !dbg !10121
  %137 = load i32, i32* %15, align 4, !dbg !10122
  %138 = sub nsw i32 %136, %137, !dbg !10123
  %139 = sub nsw i32 %138, 1, !dbg !10124
  %140 = load i32, i32* %20, align 4, !dbg !10125
  %141 = load i32, i32* %16, align 4, !dbg !10126
  %142 = sub nsw i32 %140, %141, !dbg !10127
  %143 = add nsw i32 %142, 0, !dbg !10128
  %144 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %135, i32 %139, i32 %143), !dbg !10129
  %145 = shl i32 %144, 8, !dbg !10130
  %146 = load i32, i32* %18, align 4, !dbg !10131
  %147 = or i32 %146, %145, !dbg !10131
  store i32 %147, i32* %18, align 4, !dbg !10131
  %148 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10132
  %149 = load i32, i32* %19, align 4, !dbg !10133
  %150 = load i32, i32* %15, align 4, !dbg !10134
  %151 = sub nsw i32 %149, %150, !dbg !10135
  %152 = add nsw i32 %151, 0, !dbg !10136
  %153 = load i32, i32* %20, align 4, !dbg !10137
  %154 = load i32, i32* %16, align 4, !dbg !10138
  %155 = sub nsw i32 %153, %154, !dbg !10139
  %156 = sub nsw i32 %155, 1, !dbg !10140
  %157 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %148, i32 %152, i32 %156), !dbg !10141
  %158 = shl i32 %157, 9, !dbg !10142
  %159 = load i32, i32* %18, align 4, !dbg !10143
  %160 = or i32 %159, %158, !dbg !10143
  store i32 %160, i32* %18, align 4, !dbg !10143
  %161 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !10144
  %162 = load i8*, i8** %12, align 8, !dbg !10145
  %163 = load i32, i32* %18, align 4, !dbg !10146
  %164 = zext i32 %163 to i64, !dbg !10145
  %165 = getelementptr inbounds i8, i8* %162, i64 %164, !dbg !10145
  %166 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %161, i8* %165), !dbg !10147
  store i32 %166, i32* %21, align 4, !dbg !10148
  %167 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10149
  %168 = load i32, i32* %19, align 4, !dbg !10150
  %169 = load i32, i32* %20, align 4, !dbg !10151
  %170 = load i32, i32* %21, align 4, !dbg !10152
  %171 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %167, i32 %168, i32 %169, i32 %170), !dbg !10153
  br label %172, !dbg !10154

; <label>:172:                                    ; preds = %46
  %173 = load i32, i32* %19, align 4, !dbg !10155
  %174 = add nsw i32 %173, 1, !dbg !10155
  store i32 %174, i32* %19, align 4, !dbg !10155
  br label %42, !dbg !10156, !llvm.loop !10157

; <label>:175:                                    ; preds = %42
  br label %176, !dbg !10159

; <label>:176:                                    ; preds = %175
  %177 = load i32, i32* %20, align 4, !dbg !10160
  %178 = add nsw i32 %177, 1, !dbg !10160
  store i32 %178, i32* %20, align 4, !dbg !10160
  br label %37, !dbg !10161, !llvm.loop !10162

; <label>:179:                                    ; preds = %37
  ret i32 0, !dbg !10164
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_refinement_template0_unopt(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2RefinementRegionParams*, %struct._Jbig2ArithState*, %struct._Jbig2Image*, i8*) #0 !dbg !10165 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2RefinementRegionParams*, align 8
  %10 = alloca %struct._Jbig2ArithState*, align 8
  %11 = alloca %struct._Jbig2Image*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct._Jbig2Image*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !10166, metadata !DIExpression()), !dbg !10167
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !10168, metadata !DIExpression()), !dbg !10169
  store %struct.Jbig2RefinementRegionParams* %2, %struct.Jbig2RefinementRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2RefinementRegionParams** %9, metadata !10170, metadata !DIExpression()), !dbg !10171
  store %struct._Jbig2ArithState* %3, %struct._Jbig2ArithState** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %10, metadata !10172, metadata !DIExpression()), !dbg !10173
  store %struct._Jbig2Image* %4, %struct._Jbig2Image** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %11, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !10176, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.declare(metadata i32* %13, metadata !10178, metadata !DIExpression()), !dbg !10179
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10180
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 0, !dbg !10181
  %24 = load i32, i32* %23, align 8, !dbg !10181
  store i32 %24, i32* %13, align 4, !dbg !10179
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10182, metadata !DIExpression()), !dbg !10183
  %25 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10184
  %26 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %25, i32 0, i32 1, !dbg !10185
  %27 = load i32, i32* %26, align 4, !dbg !10185
  store i32 %27, i32* %14, align 4, !dbg !10183
  call void @llvm.dbg.declare(metadata i32* %15, metadata !10186, metadata !DIExpression()), !dbg !10187
  %28 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10188
  %29 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %28, i32 0, i32 2, !dbg !10189
  %30 = load i32, i32* %29, align 8, !dbg !10189
  store i32 %30, i32* %15, align 4, !dbg !10187
  call void @llvm.dbg.declare(metadata i32* %16, metadata !10190, metadata !DIExpression()), !dbg !10191
  %31 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10192
  %32 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %31, i32 0, i32 3, !dbg !10193
  %33 = load i32, i32* %32, align 4, !dbg !10193
  store i32 %33, i32* %16, align 4, !dbg !10191
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %17, metadata !10194, metadata !DIExpression()), !dbg !10195
  %34 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10196
  %35 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %34, i32 0, i32 1, !dbg !10197
  %36 = load %struct._Jbig2Image*, %struct._Jbig2Image** %35, align 8, !dbg !10197
  store %struct._Jbig2Image* %36, %struct._Jbig2Image** %17, align 8, !dbg !10195
  call void @llvm.dbg.declare(metadata i32* %18, metadata !10198, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.declare(metadata i32* %19, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.declare(metadata i32* %20, metadata !10202, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.declare(metadata i32* %21, metadata !10204, metadata !DIExpression()), !dbg !10205
  store i32 0, i32* %20, align 4, !dbg !10206
  br label %37, !dbg !10208

; <label>:37:                                     ; preds = %235, %6
  %38 = load i32, i32* %20, align 4, !dbg !10209
  %39 = load i32, i32* %14, align 4, !dbg !10211
  %40 = icmp slt i32 %38, %39, !dbg !10212
  br i1 %40, label %41, label %238, !dbg !10213

; <label>:41:                                     ; preds = %37
  store i32 0, i32* %19, align 4, !dbg !10214
  br label %42, !dbg !10217

; <label>:42:                                     ; preds = %231, %41
  %43 = load i32, i32* %19, align 4, !dbg !10218
  %44 = load i32, i32* %13, align 4, !dbg !10220
  %45 = icmp slt i32 %43, %44, !dbg !10221
  br i1 %45, label %46, label %234, !dbg !10222

; <label>:46:                                     ; preds = %42
  store i32 0, i32* %18, align 4, !dbg !10223
  %47 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10225
  %48 = load i32, i32* %19, align 4, !dbg !10226
  %49 = sub nsw i32 %48, 1, !dbg !10227
  %50 = load i32, i32* %20, align 4, !dbg !10228
  %51 = add nsw i32 %50, 0, !dbg !10229
  %52 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %47, i32 %49, i32 %51), !dbg !10230
  %53 = shl i32 %52, 0, !dbg !10231
  %54 = load i32, i32* %18, align 4, !dbg !10232
  %55 = or i32 %54, %53, !dbg !10232
  store i32 %55, i32* %18, align 4, !dbg !10232
  %56 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10233
  %57 = load i32, i32* %19, align 4, !dbg !10234
  %58 = add nsw i32 %57, 1, !dbg !10235
  %59 = load i32, i32* %20, align 4, !dbg !10236
  %60 = sub nsw i32 %59, 1, !dbg !10237
  %61 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %56, i32 %58, i32 %60), !dbg !10238
  %62 = shl i32 %61, 1, !dbg !10239
  %63 = load i32, i32* %18, align 4, !dbg !10240
  %64 = or i32 %63, %62, !dbg !10240
  store i32 %64, i32* %18, align 4, !dbg !10240
  %65 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10241
  %66 = load i32, i32* %19, align 4, !dbg !10242
  %67 = add nsw i32 %66, 0, !dbg !10243
  %68 = load i32, i32* %20, align 4, !dbg !10244
  %69 = sub nsw i32 %68, 1, !dbg !10245
  %70 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %65, i32 %67, i32 %69), !dbg !10246
  %71 = shl i32 %70, 2, !dbg !10247
  %72 = load i32, i32* %18, align 4, !dbg !10248
  %73 = or i32 %72, %71, !dbg !10248
  store i32 %73, i32* %18, align 4, !dbg !10248
  %74 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10249
  %75 = load i32, i32* %19, align 4, !dbg !10250
  %76 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10251
  %77 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %76, i32 0, i32 5, !dbg !10252
  %78 = getelementptr inbounds [4 x i8], [4 x i8]* %77, i64 0, i64 0, !dbg !10251
  %79 = load i8, i8* %78, align 4, !dbg !10251
  %80 = sext i8 %79 to i32, !dbg !10251
  %81 = add nsw i32 %75, %80, !dbg !10253
  %82 = load i32, i32* %20, align 4, !dbg !10254
  %83 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10255
  %84 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %83, i32 0, i32 5, !dbg !10256
  %85 = getelementptr inbounds [4 x i8], [4 x i8]* %84, i64 0, i64 1, !dbg !10255
  %86 = load i8, i8* %85, align 1, !dbg !10255
  %87 = sext i8 %86 to i32, !dbg !10255
  %88 = add nsw i32 %82, %87, !dbg !10257
  %89 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %74, i32 %81, i32 %88), !dbg !10258
  %90 = shl i32 %89, 3, !dbg !10259
  %91 = load i32, i32* %18, align 4, !dbg !10260
  %92 = or i32 %91, %90, !dbg !10260
  store i32 %92, i32* %18, align 4, !dbg !10260
  %93 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10261
  %94 = load i32, i32* %19, align 4, !dbg !10262
  %95 = load i32, i32* %15, align 4, !dbg !10263
  %96 = sub nsw i32 %94, %95, !dbg !10264
  %97 = add nsw i32 %96, 1, !dbg !10265
  %98 = load i32, i32* %20, align 4, !dbg !10266
  %99 = load i32, i32* %16, align 4, !dbg !10267
  %100 = sub nsw i32 %98, %99, !dbg !10268
  %101 = add nsw i32 %100, 1, !dbg !10269
  %102 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %93, i32 %97, i32 %101), !dbg !10270
  %103 = shl i32 %102, 4, !dbg !10271
  %104 = load i32, i32* %18, align 4, !dbg !10272
  %105 = or i32 %104, %103, !dbg !10272
  store i32 %105, i32* %18, align 4, !dbg !10272
  %106 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10273
  %107 = load i32, i32* %19, align 4, !dbg !10274
  %108 = load i32, i32* %15, align 4, !dbg !10275
  %109 = sub nsw i32 %107, %108, !dbg !10276
  %110 = add nsw i32 %109, 0, !dbg !10277
  %111 = load i32, i32* %20, align 4, !dbg !10278
  %112 = load i32, i32* %16, align 4, !dbg !10279
  %113 = sub nsw i32 %111, %112, !dbg !10280
  %114 = add nsw i32 %113, 1, !dbg !10281
  %115 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %106, i32 %110, i32 %114), !dbg !10282
  %116 = shl i32 %115, 5, !dbg !10283
  %117 = load i32, i32* %18, align 4, !dbg !10284
  %118 = or i32 %117, %116, !dbg !10284
  store i32 %118, i32* %18, align 4, !dbg !10284
  %119 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10285
  %120 = load i32, i32* %19, align 4, !dbg !10286
  %121 = load i32, i32* %15, align 4, !dbg !10287
  %122 = sub nsw i32 %120, %121, !dbg !10288
  %123 = sub nsw i32 %122, 1, !dbg !10289
  %124 = load i32, i32* %20, align 4, !dbg !10290
  %125 = load i32, i32* %16, align 4, !dbg !10291
  %126 = sub nsw i32 %124, %125, !dbg !10292
  %127 = add nsw i32 %126, 1, !dbg !10293
  %128 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %119, i32 %123, i32 %127), !dbg !10294
  %129 = shl i32 %128, 6, !dbg !10295
  %130 = load i32, i32* %18, align 4, !dbg !10296
  %131 = or i32 %130, %129, !dbg !10296
  store i32 %131, i32* %18, align 4, !dbg !10296
  %132 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10297
  %133 = load i32, i32* %19, align 4, !dbg !10298
  %134 = load i32, i32* %15, align 4, !dbg !10299
  %135 = sub nsw i32 %133, %134, !dbg !10300
  %136 = add nsw i32 %135, 1, !dbg !10301
  %137 = load i32, i32* %20, align 4, !dbg !10302
  %138 = load i32, i32* %16, align 4, !dbg !10303
  %139 = sub nsw i32 %137, %138, !dbg !10304
  %140 = add nsw i32 %139, 0, !dbg !10305
  %141 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %132, i32 %136, i32 %140), !dbg !10306
  %142 = shl i32 %141, 7, !dbg !10307
  %143 = load i32, i32* %18, align 4, !dbg !10308
  %144 = or i32 %143, %142, !dbg !10308
  store i32 %144, i32* %18, align 4, !dbg !10308
  %145 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10309
  %146 = load i32, i32* %19, align 4, !dbg !10310
  %147 = load i32, i32* %15, align 4, !dbg !10311
  %148 = sub nsw i32 %146, %147, !dbg !10312
  %149 = add nsw i32 %148, 0, !dbg !10313
  %150 = load i32, i32* %20, align 4, !dbg !10314
  %151 = load i32, i32* %16, align 4, !dbg !10315
  %152 = sub nsw i32 %150, %151, !dbg !10316
  %153 = add nsw i32 %152, 0, !dbg !10317
  %154 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %145, i32 %149, i32 %153), !dbg !10318
  %155 = shl i32 %154, 8, !dbg !10319
  %156 = load i32, i32* %18, align 4, !dbg !10320
  %157 = or i32 %156, %155, !dbg !10320
  store i32 %157, i32* %18, align 4, !dbg !10320
  %158 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10321
  %159 = load i32, i32* %19, align 4, !dbg !10322
  %160 = load i32, i32* %15, align 4, !dbg !10323
  %161 = sub nsw i32 %159, %160, !dbg !10324
  %162 = sub nsw i32 %161, 1, !dbg !10325
  %163 = load i32, i32* %20, align 4, !dbg !10326
  %164 = load i32, i32* %16, align 4, !dbg !10327
  %165 = sub nsw i32 %163, %164, !dbg !10328
  %166 = add nsw i32 %165, 0, !dbg !10329
  %167 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %158, i32 %162, i32 %166), !dbg !10330
  %168 = shl i32 %167, 9, !dbg !10331
  %169 = load i32, i32* %18, align 4, !dbg !10332
  %170 = or i32 %169, %168, !dbg !10332
  store i32 %170, i32* %18, align 4, !dbg !10332
  %171 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10333
  %172 = load i32, i32* %19, align 4, !dbg !10334
  %173 = load i32, i32* %15, align 4, !dbg !10335
  %174 = sub nsw i32 %172, %173, !dbg !10336
  %175 = add nsw i32 %174, 1, !dbg !10337
  %176 = load i32, i32* %20, align 4, !dbg !10338
  %177 = load i32, i32* %16, align 4, !dbg !10339
  %178 = sub nsw i32 %176, %177, !dbg !10340
  %179 = sub nsw i32 %178, 1, !dbg !10341
  %180 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %171, i32 %175, i32 %179), !dbg !10342
  %181 = shl i32 %180, 10, !dbg !10343
  %182 = load i32, i32* %18, align 4, !dbg !10344
  %183 = or i32 %182, %181, !dbg !10344
  store i32 %183, i32* %18, align 4, !dbg !10344
  %184 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10345
  %185 = load i32, i32* %19, align 4, !dbg !10346
  %186 = load i32, i32* %15, align 4, !dbg !10347
  %187 = sub nsw i32 %185, %186, !dbg !10348
  %188 = add nsw i32 %187, 0, !dbg !10349
  %189 = load i32, i32* %20, align 4, !dbg !10350
  %190 = load i32, i32* %16, align 4, !dbg !10351
  %191 = sub nsw i32 %189, %190, !dbg !10352
  %192 = sub nsw i32 %191, 1, !dbg !10353
  %193 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %184, i32 %188, i32 %192), !dbg !10354
  %194 = shl i32 %193, 11, !dbg !10355
  %195 = load i32, i32* %18, align 4, !dbg !10356
  %196 = or i32 %195, %194, !dbg !10356
  store i32 %196, i32* %18, align 4, !dbg !10356
  %197 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10357
  %198 = load i32, i32* %19, align 4, !dbg !10358
  %199 = load i32, i32* %15, align 4, !dbg !10359
  %200 = sub nsw i32 %198, %199, !dbg !10360
  %201 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10361
  %202 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %201, i32 0, i32 5, !dbg !10362
  %203 = getelementptr inbounds [4 x i8], [4 x i8]* %202, i64 0, i64 2, !dbg !10361
  %204 = load i8, i8* %203, align 2, !dbg !10361
  %205 = sext i8 %204 to i32, !dbg !10361
  %206 = add nsw i32 %200, %205, !dbg !10363
  %207 = load i32, i32* %20, align 4, !dbg !10364
  %208 = load i32, i32* %16, align 4, !dbg !10365
  %209 = sub nsw i32 %207, %208, !dbg !10366
  %210 = load %struct.Jbig2RefinementRegionParams*, %struct.Jbig2RefinementRegionParams** %9, align 8, !dbg !10367
  %211 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %210, i32 0, i32 5, !dbg !10368
  %212 = getelementptr inbounds [4 x i8], [4 x i8]* %211, i64 0, i64 3, !dbg !10367
  %213 = load i8, i8* %212, align 1, !dbg !10367
  %214 = sext i8 %213 to i32, !dbg !10367
  %215 = add nsw i32 %209, %214, !dbg !10369
  %216 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %197, i32 %206, i32 %215), !dbg !10370
  %217 = shl i32 %216, 12, !dbg !10371
  %218 = load i32, i32* %18, align 4, !dbg !10372
  %219 = or i32 %218, %217, !dbg !10372
  store i32 %219, i32* %18, align 4, !dbg !10372
  %220 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %10, align 8, !dbg !10373
  %221 = load i8*, i8** %12, align 8, !dbg !10374
  %222 = load i32, i32* %18, align 4, !dbg !10375
  %223 = zext i32 %222 to i64, !dbg !10374
  %224 = getelementptr inbounds i8, i8* %221, i64 %223, !dbg !10374
  %225 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %220, i8* %224), !dbg !10376
  store i32 %225, i32* %21, align 4, !dbg !10377
  %226 = load %struct._Jbig2Image*, %struct._Jbig2Image** %11, align 8, !dbg !10378
  %227 = load i32, i32* %19, align 4, !dbg !10379
  %228 = load i32, i32* %20, align 4, !dbg !10380
  %229 = load i32, i32* %21, align 4, !dbg !10381
  %230 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %226, i32 %227, i32 %228, i32 %229), !dbg !10382
  br label %231, !dbg !10383

; <label>:231:                                    ; preds = %46
  %232 = load i32, i32* %19, align 4, !dbg !10384
  %233 = add nsw i32 %232, 1, !dbg !10384
  store i32 %233, i32* %19, align 4, !dbg !10384
  br label %42, !dbg !10385, !llvm.loop !10386

; <label>:234:                                    ; preds = %42
  br label %235, !dbg !10388

; <label>:235:                                    ; preds = %234
  %236 = load i32, i32* %20, align 4, !dbg !10389
  %237 = add nsw i32 %236, 1, !dbg !10389
  store i32 %237, i32* %20, align 4, !dbg !10389
  br label %37, !dbg !10390, !llvm.loop !10391

; <label>:238:                                    ; preds = %37
  ret i32 0, !dbg !10393
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Segment* @jbig2_region_find_referred(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*) #0 !dbg !10394 {
  %3 = alloca %struct._Jbig2Segment*, align 8
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Segment*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._Jbig2Segment*, align 8
  %8 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !10397, metadata !DIExpression()), !dbg !10398
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %5, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10401, metadata !DIExpression()), !dbg !10402
  %9 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !10403
  %10 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %9, i32 0, i32 4, !dbg !10404
  %11 = load i32, i32* %10, align 8, !dbg !10404
  store i32 %11, i32* %6, align 4, !dbg !10402
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %7, metadata !10405, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10407, metadata !DIExpression()), !dbg !10408
  store i32 0, i32* %8, align 4, !dbg !10409
  br label %12, !dbg !10411

; <label>:12:                                     ; preds = %57, %2
  %13 = load i32, i32* %8, align 4, !dbg !10412
  %14 = load i32, i32* %6, align 4, !dbg !10414
  %15 = icmp slt i32 %13, %14, !dbg !10415
  br i1 %15, label %16, label %60, !dbg !10416

; <label>:16:                                     ; preds = %12
  %17 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !10417
  %18 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !10419
  %19 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %18, i32 0, i32 5, !dbg !10420
  %20 = load i32*, i32** %19, align 8, !dbg !10420
  %21 = load i32, i32* %8, align 4, !dbg !10421
  %22 = sext i32 %21 to i64, !dbg !10419
  %23 = getelementptr inbounds i32, i32* %20, i64 %22, !dbg !10419
  %24 = load i32, i32* %23, align 4, !dbg !10419
  %25 = call %struct._Jbig2Segment* @jbig2_find_segment(%struct._Jbig2Ctx.11* %17, i32 %24), !dbg !10422
  store %struct._Jbig2Segment* %25, %struct._Jbig2Segment** %7, align 8, !dbg !10423
  %26 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %7, align 8, !dbg !10424
  %27 = icmp eq %struct._Jbig2Segment* %26, null, !dbg !10426
  br i1 %27, label %28, label %41, !dbg !10427

; <label>:28:                                     ; preds = %16
  %29 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !10428
  %30 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !10430
  %31 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %30, i32 0, i32 0, !dbg !10431
  %32 = load i32, i32* %31, align 8, !dbg !10431
  %33 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !10432
  %34 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %33, i32 0, i32 5, !dbg !10433
  %35 = load i32*, i32** %34, align 8, !dbg !10433
  %36 = load i32, i32* %8, align 4, !dbg !10434
  %37 = sext i32 %36 to i64, !dbg !10432
  %38 = getelementptr inbounds i32, i32* %35, i64 %37, !dbg !10432
  %39 = load i32, i32* %38, align 4, !dbg !10432
  %40 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %29, i32 2, i32 %32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.208, i32 0, i32 0), i32 %39), !dbg !10435
  br label %57, !dbg !10436

; <label>:41:                                     ; preds = %16
  %42 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %7, align 8, !dbg !10437
  %43 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %42, i32 0, i32 1, !dbg !10438
  %44 = load i8, i8* %43, align 4, !dbg !10438
  %45 = zext i8 %44 to i32, !dbg !10437
  %46 = and i32 %45, 63, !dbg !10439
  switch i32 %46, label %55 [
    i32 4, label %47
    i32 20, label %47
    i32 36, label %47
    i32 40, label %47
  ], !dbg !10440

; <label>:47:                                     ; preds = %41, %41, %41, %41
  %48 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %7, align 8, !dbg !10441
  %49 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %48, i32 0, i32 6, !dbg !10444
  %50 = load i8*, i8** %49, align 8, !dbg !10444
  %51 = icmp ne i8* %50, null, !dbg !10441
  br i1 %51, label %52, label %54, !dbg !10445

; <label>:52:                                     ; preds = %47
  %53 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %7, align 8, !dbg !10446
  store %struct._Jbig2Segment* %53, %struct._Jbig2Segment** %3, align 8, !dbg !10447
  br label %61, !dbg !10447

; <label>:54:                                     ; preds = %47
  br label %56, !dbg !10448

; <label>:55:                                     ; preds = %41
  br label %56, !dbg !10449

; <label>:56:                                     ; preds = %55, %54
  br label %57, !dbg !10450

; <label>:57:                                     ; preds = %56, %28
  %58 = load i32, i32* %8, align 4, !dbg !10451
  %59 = add nsw i32 %58, 1, !dbg !10451
  store i32 %59, i32* %8, align 4, !dbg !10451
  br label %12, !dbg !10452, !llvm.loop !10453

; <label>:60:                                     ; preds = %12
  store %struct._Jbig2Segment* null, %struct._Jbig2Segment** %3, align 8, !dbg !10455
  br label %61, !dbg !10455

; <label>:61:                                     ; preds = %60, %52
  %62 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %3, align 8, !dbg !10456
  ret %struct._Jbig2Segment* %62, !dbg !10456
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_refinement_region(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !10457 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.Jbig2RefinementRegionParams, align 8
  %9 = alloca %struct.Jbig2RegionSegmentInfo, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca %struct._Jbig2Segment*, align 8
  %13 = alloca %struct._Jbig2WordStream*, align 8
  %14 = alloca %struct._Jbig2ArithState*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct._Jbig2Image*, align 8
  %18 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !10460, metadata !DIExpression()), !dbg !10461
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !10462, metadata !DIExpression()), !dbg !10463
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.declare(metadata %struct.Jbig2RefinementRegionParams* %8, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata %struct.Jbig2RegionSegmentInfo* %9, metadata !10468, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10479, metadata !DIExpression()), !dbg !10480
  store i32 0, i32* %10, align 4, !dbg !10480
  call void @llvm.dbg.declare(metadata i8* %11, metadata !10481, metadata !DIExpression()), !dbg !10482
  %19 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10483
  %20 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %19, i32 0, i32 3, !dbg !10485
  %21 = load i64, i64* %20, align 8, !dbg !10485
  %22 = icmp ult i64 %21, 18, !dbg !10486
  br i1 %22, label %23, label %29, !dbg !10487

; <label>:23:                                     ; preds = %3
  %24 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10488
  %25 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10489
  %26 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %25, i32 0, i32 0, !dbg !10490
  %27 = load i32, i32* %26, align 8, !dbg !10490
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10491
  %28 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %24, i32 3, i32 %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.211, i32 0, i32 0)), !dbg !10491
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10492
  store i32 %28, i32* %4, align 4, !dbg !10492
  br label %333, !dbg !10492

; <label>:29:                                     ; preds = %3
  %30 = load i8*, i8** %7, align 8, !dbg !10493
  call void @jbig2_get_region_segment_info(%struct.Jbig2RegionSegmentInfo* %9, i8* %30), !dbg !10494
  %31 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10495
  %32 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10496
  %33 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %32, i32 0, i32 0, !dbg !10497
  %34 = load i32, i32* %33, align 8, !dbg !10497
  %35 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !10498
  %36 = load i32, i32* %35, align 4, !dbg !10498
  %37 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !10499
  %38 = load i32, i32* %37, align 4, !dbg !10499
  %39 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 2, !dbg !10500
  %40 = load i32, i32* %39, align 4, !dbg !10500
  %41 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 3, !dbg !10501
  %42 = load i32, i32* %41, align 4, !dbg !10501
  %43 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 5, !dbg !10502
  %44 = load i8, i8* %43, align 4, !dbg !10502
  %45 = zext i8 %44 to i32, !dbg !10503
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10504
  %46 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %31, i32 1, i32 %34, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.212, i32 0, i32 0), i32 %36, i32 %38, i32 %40, i32 %42, i32 %45), !dbg !10504
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10505
  %47 = load i8*, i8** %7, align 8, !dbg !10505
  %48 = getelementptr inbounds i8, i8* %47, i64 17, !dbg !10505
  %49 = load i8, i8* %48, align 1, !dbg !10505
  store i8 %49, i8* %11, align 1, !dbg !10506
  %50 = load i8, i8* %11, align 1, !dbg !10507
  %51 = zext i8 %50 to i32, !dbg !10507
  %52 = and i32 %51, 1, !dbg !10508
  %53 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 0, !dbg !10509
  store i32 %52, i32* %53, align 8, !dbg !10510
  %54 = load i8, i8* %11, align 1, !dbg !10511
  %55 = zext i8 %54 to i32, !dbg !10511
  %56 = and i32 %55, 2, !dbg !10512
  %57 = icmp ne i32 %56, 0, !dbg !10511
  %58 = zext i1 %57 to i64, !dbg !10511
  %59 = select i1 %57, i32 1, i32 0, !dbg !10511
  %60 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 4, !dbg !10513
  store i32 %59, i32* %60, align 8, !dbg !10514
  %61 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10515
  %62 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10516
  %63 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %62, i32 0, i32 0, !dbg !10517
  %64 = load i32, i32* %63, align 8, !dbg !10517
  %65 = load i8, i8* %11, align 1, !dbg !10518
  %66 = zext i8 %65 to i32, !dbg !10518
  %67 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 0, !dbg !10519
  %68 = load i32, i32* %67, align 8, !dbg !10519
  %69 = icmp ne i32 %68, 0, !dbg !10520
  %70 = zext i1 %69 to i64, !dbg !10520
  %71 = select i1 %69, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.213, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.214, i32 0, i32 0), !dbg !10520
  %72 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 4, !dbg !10521
  %73 = load i32, i32* %72, align 8, !dbg !10521
  %74 = icmp ne i32 %73, 0, !dbg !10522
  %75 = zext i1 %74 to i64, !dbg !10522
  %76 = select i1 %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.215, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.214, i32 0, i32 0), !dbg !10522
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10523
  %77 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %61, i32 1, i32 %64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.216, i32 0, i32 0), i32 %66, i8* %71, i8* %76), !dbg !10523
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10524
  %78 = load i8, i8* %11, align 1, !dbg !10524
  %79 = zext i8 %78 to i32, !dbg !10524
  %80 = and i32 %79, 252, !dbg !10526
  %81 = icmp ne i32 %80, 0, !dbg !10526
  br i1 %81, label %82, label %88, !dbg !10527

; <label>:82:                                     ; preds = %29
  %83 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10528
  %84 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10529
  %85 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %84, i32 0, i32 0, !dbg !10530
  %86 = load i32, i32* %85, align 8, !dbg !10530
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10531
  %87 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %83, i32 2, i32 %86, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.217, i32 0, i32 0)), !dbg !10531
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10531
  br label %88, !dbg !10531

; <label>:88:                                     ; preds = %82, %29
  %89 = load i32, i32* %10, align 4, !dbg !10532
  %90 = add nsw i32 %89, 18, !dbg !10532
  store i32 %90, i32* %10, align 4, !dbg !10532
  %91 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 0, !dbg !10533
  %92 = load i32, i32* %91, align 8, !dbg !10533
  %93 = icmp ne i32 %92, 0, !dbg !10535
  br i1 %93, label %161, label %94, !dbg !10536

; <label>:94:                                     ; preds = %88
  %95 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10537
  %96 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %95, i32 0, i32 3, !dbg !10540
  %97 = load i64, i64* %96, align 8, !dbg !10540
  %98 = icmp ult i64 %97, 22, !dbg !10541
  br i1 %98, label %99, label %105, !dbg !10542

; <label>:99:                                     ; preds = %94
  %100 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10543
  %101 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10544
  %102 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %101, i32 0, i32 0, !dbg !10545
  %103 = load i32, i32* %102, align 8, !dbg !10545
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10546
  %104 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %100, i32 3, i32 %103, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.211, i32 0, i32 0)), !dbg !10546
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10547
  store i32 %104, i32* %4, align 4, !dbg !10547
  br label %333, !dbg !10547

; <label>:105:                                    ; preds = %94
  %106 = load i8*, i8** %7, align 8, !dbg !10548
  %107 = load i32, i32* %10, align 4, !dbg !10549
  %108 = add nsw i32 %107, 0, !dbg !10550
  %109 = sext i32 %108 to i64, !dbg !10548
  %110 = getelementptr inbounds i8, i8* %106, i64 %109, !dbg !10548
  %111 = load i8, i8* %110, align 1, !dbg !10548
  %112 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10551
  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %112, i64 0, i64 0, !dbg !10552
  store i8 %111, i8* %113, align 4, !dbg !10553
  %114 = load i8*, i8** %7, align 8, !dbg !10554
  %115 = load i32, i32* %10, align 4, !dbg !10555
  %116 = add nsw i32 %115, 1, !dbg !10556
  %117 = sext i32 %116 to i64, !dbg !10554
  %118 = getelementptr inbounds i8, i8* %114, i64 %117, !dbg !10554
  %119 = load i8, i8* %118, align 1, !dbg !10554
  %120 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10557
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %120, i64 0, i64 1, !dbg !10558
  store i8 %119, i8* %121, align 1, !dbg !10559
  %122 = load i8*, i8** %7, align 8, !dbg !10560
  %123 = load i32, i32* %10, align 4, !dbg !10561
  %124 = add nsw i32 %123, 2, !dbg !10562
  %125 = sext i32 %124 to i64, !dbg !10560
  %126 = getelementptr inbounds i8, i8* %122, i64 %125, !dbg !10560
  %127 = load i8, i8* %126, align 1, !dbg !10560
  %128 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10563
  %129 = getelementptr inbounds [4 x i8], [4 x i8]* %128, i64 0, i64 2, !dbg !10564
  store i8 %127, i8* %129, align 2, !dbg !10565
  %130 = load i8*, i8** %7, align 8, !dbg !10566
  %131 = load i32, i32* %10, align 4, !dbg !10567
  %132 = add nsw i32 %131, 3, !dbg !10568
  %133 = sext i32 %132 to i64, !dbg !10566
  %134 = getelementptr inbounds i8, i8* %130, i64 %133, !dbg !10566
  %135 = load i8, i8* %134, align 1, !dbg !10566
  %136 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10569
  %137 = getelementptr inbounds [4 x i8], [4 x i8]* %136, i64 0, i64 3, !dbg !10570
  store i8 %135, i8* %137, align 1, !dbg !10571
  %138 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10572
  %139 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10573
  %140 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %139, i32 0, i32 0, !dbg !10574
  %141 = load i32, i32* %140, align 8, !dbg !10574
  %142 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10575
  %143 = getelementptr inbounds [4 x i8], [4 x i8]* %142, i64 0, i64 0, !dbg !10576
  %144 = load i8, i8* %143, align 4, !dbg !10576
  %145 = sext i8 %144 to i32, !dbg !10576
  %146 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10577
  %147 = getelementptr inbounds [4 x i8], [4 x i8]* %146, i64 0, i64 1, !dbg !10578
  %148 = load i8, i8* %147, align 1, !dbg !10578
  %149 = sext i8 %148 to i32, !dbg !10578
  %150 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10579
  %151 = getelementptr inbounds [4 x i8], [4 x i8]* %150, i64 0, i64 2, !dbg !10580
  %152 = load i8, i8* %151, align 2, !dbg !10580
  %153 = sext i8 %152 to i32, !dbg !10580
  %154 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 5, !dbg !10581
  %155 = getelementptr inbounds [4 x i8], [4 x i8]* %154, i64 0, i64 3, !dbg !10582
  %156 = load i8, i8* %155, align 1, !dbg !10582
  %157 = sext i8 %156 to i32, !dbg !10582
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10583
  %158 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %138, i32 1, i32 %141, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10.218, i32 0, i32 0), i32 %145, i32 %149, i32 %153, i32 %157), !dbg !10583
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10584
  %159 = load i32, i32* %10, align 4, !dbg !10584
  %160 = add nsw i32 %159, 4, !dbg !10584
  store i32 %160, i32* %10, align 4, !dbg !10584
  br label %161, !dbg !10585

; <label>:161:                                    ; preds = %105, %88
  %162 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10586
  %163 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %162, i32 0, i32 4, !dbg !10588
  %164 = load i32, i32* %163, align 8, !dbg !10588
  %165 = icmp ne i32 %164, 0, !dbg !10586
  br i1 %165, label %166, label %201, !dbg !10589

; <label>:166:                                    ; preds = %161
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %12, metadata !10590, metadata !DIExpression()), !dbg !10592
  %167 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10593
  %168 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10594
  %169 = call %struct._Jbig2Segment* @jbig2_region_find_referred(%struct._Jbig2Ctx.11* %167, %struct._Jbig2Segment* %168), !dbg !10595
  store %struct._Jbig2Segment* %169, %struct._Jbig2Segment** %12, align 8, !dbg !10596
  %170 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %12, align 8, !dbg !10597
  %171 = icmp eq %struct._Jbig2Segment* %170, null, !dbg !10599
  br i1 %171, label %172, label %178, !dbg !10600

; <label>:172:                                    ; preds = %166
  %173 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10601
  %174 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10602
  %175 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %174, i32 0, i32 0, !dbg !10603
  %176 = load i32, i32* %175, align 8, !dbg !10603
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10604
  %177 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %173, i32 3, i32 %176, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11.219, i32 0, i32 0)), !dbg !10604
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10605
  store i32 %177, i32* %4, align 4, !dbg !10605
  br label %333, !dbg !10605

; <label>:178:                                    ; preds = %166
  %179 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10606
  %180 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %12, align 8, !dbg !10607
  %181 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %180, i32 0, i32 6, !dbg !10608
  %182 = load i8*, i8** %181, align 8, !dbg !10608
  %183 = bitcast i8* %182 to %struct._Jbig2Image*, !dbg !10607
  %184 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %179, %struct._Jbig2Image* %183), !dbg !10609
  %185 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 1, !dbg !10610
  store %struct._Jbig2Image* %184, %struct._Jbig2Image** %185, align 8, !dbg !10611
  %186 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10612
  %187 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %12, align 8, !dbg !10613
  %188 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %187, i32 0, i32 6, !dbg !10614
  %189 = load i8*, i8** %188, align 8, !dbg !10614
  %190 = bitcast i8* %189 to %struct._Jbig2Image*, !dbg !10613
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %186, %struct._Jbig2Image* %190), !dbg !10615
  %191 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %12, align 8, !dbg !10616
  %192 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %191, i32 0, i32 6, !dbg !10617
  store i8* null, i8** %192, align 8, !dbg !10618
  %193 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10619
  %194 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10620
  %195 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %194, i32 0, i32 0, !dbg !10621
  %196 = load i32, i32* %195, align 8, !dbg !10621
  %197 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %12, align 8, !dbg !10622
  %198 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %197, i32 0, i32 0, !dbg !10623
  %199 = load i32, i32* %198, align 8, !dbg !10623
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10624
  %200 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %193, i32 0, i32 %196, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12.220, i32 0, i32 0), i32 %199), !dbg !10624
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10625
  br label %215, !dbg !10625

; <label>:201:                                    ; preds = %161
  %202 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10626
  %203 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10628
  %204 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %203, i32 0, i32 18, !dbg !10629
  %205 = load %struct._Jbig2Page*, %struct._Jbig2Page** %204, align 8, !dbg !10629
  %206 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10630
  %207 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %206, i32 0, i32 16, !dbg !10631
  %208 = load i32, i32* %207, align 8, !dbg !10631
  %209 = sext i32 %208 to i64, !dbg !10628
  %210 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %205, i64 %209, !dbg !10628
  %211 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %210, i32 0, i32 10, !dbg !10632
  %212 = load %struct._Jbig2Image*, %struct._Jbig2Image** %211, align 8, !dbg !10632
  %213 = call %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11* %202, %struct._Jbig2Image* %212), !dbg !10633
  %214 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 1, !dbg !10634
  store %struct._Jbig2Image* %213, %struct._Jbig2Image** %214, align 8, !dbg !10635
  br label %215

; <label>:215:                                    ; preds = %201, %178
  %216 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 2, !dbg !10636
  store i32 0, i32* %216, align 8, !dbg !10637
  %217 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 3, !dbg !10638
  store i32 0, i32* %217, align 4, !dbg !10639
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %13, metadata !10640, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %14, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata i8** %15, metadata !10653, metadata !DIExpression()), !dbg !10654
  store i8* null, i8** %15, align 8, !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %16, metadata !10655, metadata !DIExpression()), !dbg !10656
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %17, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata i32* %18, metadata !10659, metadata !DIExpression()), !dbg !10660
  %218 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10661
  %219 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !10662
  %220 = load i32, i32* %219, align 4, !dbg !10662
  %221 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !10663
  %222 = load i32, i32* %221, align 4, !dbg !10663
  %223 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %218, i32 %220, i32 %222), !dbg !10664
  store %struct._Jbig2Image* %223, %struct._Jbig2Image** %17, align 8, !dbg !10665
  %224 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10666
  %225 = icmp eq %struct._Jbig2Image* %224, null, !dbg !10668
  br i1 %225, label %226, label %232, !dbg !10669

; <label>:226:                                    ; preds = %215
  %227 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10670
  %228 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10671
  %229 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %228, i32 0, i32 0, !dbg !10672
  %230 = load i32, i32* %229, align 8, !dbg !10672
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10673
  %231 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %227, i32 3, i32 %230, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13.221, i32 0, i32 0)), !dbg !10673
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10674
  store i32 %231, i32* %4, align 4, !dbg !10674
  br label %333, !dbg !10674

; <label>:232:                                    ; preds = %215
  %233 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10675
  %234 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10676
  %235 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %234, i32 0, i32 0, !dbg !10677
  %236 = load i32, i32* %235, align 8, !dbg !10677
  %237 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !10678
  %238 = load i32, i32* %237, align 4, !dbg !10678
  %239 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !10679
  %240 = load i32, i32* %239, align 4, !dbg !10679
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10680
  %241 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %233, i32 0, i32 %236, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.222, i32 0, i32 0), i32 %238, i32 %240), !dbg !10680
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10681
  %242 = getelementptr inbounds %struct.Jbig2RefinementRegionParams, %struct.Jbig2RefinementRegionParams* %8, i32 0, i32 0, !dbg !10681
  %243 = load i32, i32* %242, align 8, !dbg !10681
  %244 = icmp ne i32 %243, 0, !dbg !10682
  %245 = zext i1 %244 to i64, !dbg !10682
  %246 = select i1 %244, i32 1024, i32 8192, !dbg !10682
  store i32 %246, i32* %16, align 4, !dbg !10683
  %247 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10684
  %248 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %247, i32 0, i32 0, !dbg !10685
  %249 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %248, align 8, !dbg !10685
  %250 = load i32, i32* %16, align 4, !dbg !10686
  %251 = sext i32 %250 to i64, !dbg !10686
  %252 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %249, i64 %251), !dbg !10687
  store i8* %252, i8** %15, align 8, !dbg !10688
  %253 = load i8*, i8** %15, align 8, !dbg !10689
  %254 = load i32, i32* %16, align 4, !dbg !10690
  %255 = sext i32 %254 to i64, !dbg !10690
  call void @llvm.memset.p0i8.i64(i8* align 1 %253, i8 0, i64 %255, i1 false), !dbg !10691
  %256 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10692
  %257 = load i8*, i8** %7, align 8, !dbg !10693
  %258 = load i32, i32* %10, align 4, !dbg !10694
  %259 = sext i32 %258 to i64, !dbg !10695
  %260 = getelementptr inbounds i8, i8* %257, i64 %259, !dbg !10695
  %261 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10696
  %262 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %261, i32 0, i32 3, !dbg !10697
  %263 = load i64, i64* %262, align 8, !dbg !10697
  %264 = load i32, i32* %10, align 4, !dbg !10698
  %265 = sext i32 %264 to i64, !dbg !10698
  %266 = sub i64 %263, %265, !dbg !10699
  %267 = call %struct._Jbig2WordStream* bitcast (%struct._Jbig2WordStream* (%struct._Jbig2Ctx*, i8*, i64)* @jbig2_word_stream_buf_new to %struct._Jbig2WordStream* (%struct._Jbig2Ctx.11*, i8*, i64)*)(%struct._Jbig2Ctx.11* %256, i8* %260, i64 %266), !dbg !10700
  store %struct._Jbig2WordStream* %267, %struct._Jbig2WordStream** %13, align 8, !dbg !10701
  %268 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10702
  %269 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %13, align 8, !dbg !10703
  %270 = call %struct._Jbig2ArithState* @jbig2_arith_new(%struct._Jbig2Ctx.11* %268, %struct._Jbig2WordStream* %269), !dbg !10704
  store %struct._Jbig2ArithState* %270, %struct._Jbig2ArithState** %14, align 8, !dbg !10705
  %271 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10706
  %272 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10707
  %273 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %14, align 8, !dbg !10708
  %274 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10709
  %275 = load i8*, i8** %15, align 8, !dbg !10710
  %276 = call i32 @jbig2_decode_refinement_region(%struct._Jbig2Ctx.11* %271, %struct._Jbig2Segment* %272, %struct.Jbig2RefinementRegionParams* %8, %struct._Jbig2ArithState* %273, %struct._Jbig2Image* %274, i8* %275), !dbg !10711
  store i32 %276, i32* %18, align 4, !dbg !10712
  %277 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10713
  %278 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %277, i32 0, i32 0, !dbg !10714
  %279 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %278, align 8, !dbg !10714
  %280 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %14, align 8, !dbg !10715
  %281 = bitcast %struct._Jbig2ArithState* %280 to i8*, !dbg !10715
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %279, i8* %281), !dbg !10716
  %282 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10717
  %283 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %13, align 8, !dbg !10718
  call void bitcast (void (%struct._Jbig2Ctx*, %struct._Jbig2WordStream*)* @jbig2_word_stream_buf_free to void (%struct._Jbig2Ctx.11*, %struct._Jbig2WordStream*)*)(%struct._Jbig2Ctx.11* %282, %struct._Jbig2WordStream* %283), !dbg !10719
  %284 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10720
  %285 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %284, i32 0, i32 0, !dbg !10721
  %286 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %285, align 8, !dbg !10721
  %287 = load i8*, i8** %15, align 8, !dbg !10722
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %286, i8* %287), !dbg !10723
  %288 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10724
  %289 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %288, i32 0, i32 1, !dbg !10726
  %290 = load i8, i8* %289, align 4, !dbg !10726
  %291 = zext i8 %290 to i32, !dbg !10724
  %292 = and i32 %291, 63, !dbg !10727
  %293 = icmp eq i32 %292, 40, !dbg !10728
  br i1 %293, label %294, label %299, !dbg !10729

; <label>:294:                                    ; preds = %232
  %295 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10730
  %296 = bitcast %struct._Jbig2Image* %295 to i8*, !dbg !10730
  %297 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10732
  %298 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %297, i32 0, i32 6, !dbg !10733
  store i8* %296, i8** %298, align 8, !dbg !10734
  br label %332, !dbg !10735

; <label>:299:                                    ; preds = %232
  %300 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10736
  %301 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !10738
  %302 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %301, i32 0, i32 0, !dbg !10739
  %303 = load i32, i32* %302, align 8, !dbg !10739
  %304 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 0, !dbg !10740
  %305 = load i32, i32* %304, align 4, !dbg !10740
  %306 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 1, !dbg !10741
  %307 = load i32, i32* %306, align 4, !dbg !10741
  %308 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 2, !dbg !10742
  %309 = load i32, i32* %308, align 4, !dbg !10742
  %310 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 3, !dbg !10743
  %311 = load i32, i32* %310, align 4, !dbg !10743
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !10744
  %312 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %300, i32 0, i32 %303, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15.223, i32 0, i32 0), i32 %305, i32 %307, i32 %309, i32 %311), !dbg !10744
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !10745
  %313 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10745
  %314 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10746
  %315 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %314, i32 0, i32 18, !dbg !10747
  %316 = load %struct._Jbig2Page*, %struct._Jbig2Page** %315, align 8, !dbg !10747
  %317 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10748
  %318 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %317, i32 0, i32 16, !dbg !10749
  %319 = load i32, i32* %318, align 8, !dbg !10749
  %320 = sext i32 %319 to i64, !dbg !10746
  %321 = getelementptr inbounds %struct._Jbig2Page, %struct._Jbig2Page* %316, i64 %320, !dbg !10746
  %322 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10750
  %323 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 2, !dbg !10751
  %324 = load i32, i32* %323, align 4, !dbg !10751
  %325 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 3, !dbg !10752
  %326 = load i32, i32* %325, align 4, !dbg !10752
  %327 = getelementptr inbounds %struct.Jbig2RegionSegmentInfo, %struct.Jbig2RegionSegmentInfo* %9, i32 0, i32 4, !dbg !10753
  %328 = load i32, i32* %327, align 4, !dbg !10753
  %329 = call i32 @jbig2_page_add_result(%struct._Jbig2Ctx.11* %313, %struct._Jbig2Page* %321, %struct._Jbig2Image* %322, i32 %324, i32 %326, i32 %328), !dbg !10754
  %330 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !10755
  %331 = load %struct._Jbig2Image*, %struct._Jbig2Image** %17, align 8, !dbg !10756
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %330, %struct._Jbig2Image* %331), !dbg !10757
  br label %332

; <label>:332:                                    ; preds = %299, %294
  store i32 0, i32* %4, align 4, !dbg !10758
  br label %333, !dbg !10758

; <label>:333:                                    ; preds = %332, %226, %172, %99, %23
  %334 = load i32, i32* %4, align 4, !dbg !10759
  ret i32 %334, !dbg !10759
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_decode_generic_mmr(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, %struct.Jbig2GenericRegionParams*, i8*, i64, %struct._Jbig2Image*) #0 !dbg !10760 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Segment*, align 8
  %9 = alloca %struct.Jbig2GenericRegionParams*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct._Jbig2Image*, align 8
  %13 = alloca %struct.Jbig2MmrCtx, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !10850, metadata !DIExpression()), !dbg !10851
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %8, metadata !10852, metadata !DIExpression()), !dbg !10853
  store %struct.Jbig2GenericRegionParams* %2, %struct.Jbig2GenericRegionParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2GenericRegionParams** %9, metadata !10854, metadata !DIExpression()), !dbg !10855
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !10856, metadata !DIExpression()), !dbg !10857
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !10858, metadata !DIExpression()), !dbg !10859
  store %struct._Jbig2Image* %5, %struct._Jbig2Image** %12, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %12, metadata !10860, metadata !DIExpression()), !dbg !10861
  call void @llvm.dbg.declare(metadata %struct.Jbig2MmrCtx* %13, metadata !10862, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10874, metadata !DIExpression()), !dbg !10875
  %18 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !10876
  %19 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %18, i32 0, i32 2, !dbg !10877
  %20 = load i32, i32* %19, align 8, !dbg !10877
  store i32 %20, i32* %14, align 4, !dbg !10875
  call void @llvm.dbg.declare(metadata i8** %15, metadata !10878, metadata !DIExpression()), !dbg !10879
  %21 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !10880
  %22 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %21, i32 0, i32 3, !dbg !10881
  %23 = load i8*, i8** %22, align 8, !dbg !10881
  store i8* %23, i8** %15, align 8, !dbg !10879
  call void @llvm.dbg.declare(metadata i8** %16, metadata !10882, metadata !DIExpression()), !dbg !10883
  store i8* null, i8** %16, align 8, !dbg !10883
  call void @llvm.dbg.declare(metadata i32* %17, metadata !10884, metadata !DIExpression()), !dbg !10885
  %24 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !10886
  %25 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %24, i32 0, i32 0, !dbg !10887
  %26 = load i32, i32* %25, align 8, !dbg !10887
  %27 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !10888
  %28 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %27, i32 0, i32 1, !dbg !10889
  %29 = load i32, i32* %28, align 4, !dbg !10889
  %30 = load i8*, i8** %10, align 8, !dbg !10890
  %31 = load i64, i64* %11, align 8, !dbg !10891
  call void @jbig2_decode_mmr_init(%struct.Jbig2MmrCtx* %13, i32 %26, i32 %29, i8* %30, i64 %31), !dbg !10892
  store i32 0, i32* %17, align 4, !dbg !10893
  br label %32, !dbg !10895

; <label>:32:                                     ; preds = %49, %6
  %33 = load i32, i32* %17, align 4, !dbg !10896
  %34 = load %struct._Jbig2Image*, %struct._Jbig2Image** %12, align 8, !dbg !10898
  %35 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %34, i32 0, i32 1, !dbg !10899
  %36 = load i32, i32* %35, align 4, !dbg !10899
  %37 = icmp slt i32 %33, %36, !dbg !10900
  br i1 %37, label %38, label %52, !dbg !10901

; <label>:38:                                     ; preds = %32
  %39 = load i8*, i8** %15, align 8, !dbg !10902
  %40 = load i32, i32* %14, align 4, !dbg !10904
  %41 = sext i32 %40 to i64, !dbg !10904
  call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 0, i64 %41, i1 false), !dbg !10905
  %42 = load i8*, i8** %16, align 8, !dbg !10906
  %43 = load i8*, i8** %15, align 8, !dbg !10907
  call void @jbig2_decode_mmr_line(%struct.Jbig2MmrCtx* %13, i8* %42, i8* %43), !dbg !10908
  %44 = load i8*, i8** %15, align 8, !dbg !10909
  store i8* %44, i8** %16, align 8, !dbg !10910
  %45 = load i32, i32* %14, align 4, !dbg !10911
  %46 = load i8*, i8** %15, align 8, !dbg !10912
  %47 = sext i32 %45 to i64, !dbg !10912
  %48 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !10912
  store i8* %48, i8** %15, align 8, !dbg !10912
  br label %49, !dbg !10913

; <label>:49:                                     ; preds = %38
  %50 = load i32, i32* %17, align 4, !dbg !10914
  %51 = add nsw i32 %50, 1, !dbg !10914
  store i32 %51, i32* %17, align 4, !dbg !10914
  br label %32, !dbg !10915, !llvm.loop !10916

; <label>:52:                                     ; preds = %32
  ret i32 0, !dbg !10918
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_decode_mmr_init(%struct.Jbig2MmrCtx*, i32, i32, i8*, i64) #0 !dbg !10919 {
  %6 = alloca %struct.Jbig2MmrCtx*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.Jbig2MmrCtx* %0, %struct.Jbig2MmrCtx** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2MmrCtx** %6, metadata !10923, metadata !DIExpression()), !dbg !10924
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10925, metadata !DIExpression()), !dbg !10926
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10927, metadata !DIExpression()), !dbg !10928
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10929, metadata !DIExpression()), !dbg !10930
  store i64 %4, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !10931, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10933, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10935, metadata !DIExpression()), !dbg !10936
  store i32 0, i32* %12, align 4, !dbg !10936
  %13 = load i32, i32* %7, align 4, !dbg !10937
  %14 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10938
  %15 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %14, i32 0, i32 0, !dbg !10939
  store i32 %13, i32* %15, align 8, !dbg !10940
  %16 = load i32, i32* %8, align 4, !dbg !10941
  %17 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10942
  %18 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %17, i32 0, i32 1, !dbg !10943
  store i32 %16, i32* %18, align 4, !dbg !10944
  %19 = load i8*, i8** %9, align 8, !dbg !10945
  %20 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10946
  %21 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %20, i32 0, i32 2, !dbg !10947
  store i8* %19, i8** %21, align 8, !dbg !10948
  %22 = load i64, i64* %10, align 8, !dbg !10949
  %23 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10950
  %24 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %23, i32 0, i32 3, !dbg !10951
  store i64 %22, i64* %24, align 8, !dbg !10952
  %25 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10953
  %26 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %25, i32 0, i32 4, !dbg !10954
  store i32 0, i32* %26, align 8, !dbg !10955
  %27 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10956
  %28 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %27, i32 0, i32 5, !dbg !10957
  store i32 0, i32* %28, align 4, !dbg !10958
  store i32 0, i32* %11, align 4, !dbg !10959
  br label %29, !dbg !10961

; <label>:29:                                     ; preds = %52, %5
  %30 = load i32, i32* %11, align 4, !dbg !10962
  %31 = sext i32 %30 to i64, !dbg !10962
  %32 = load i64, i64* %10, align 8, !dbg !10964
  %33 = icmp ult i64 %31, %32, !dbg !10965
  br i1 %33, label %34, label %37, !dbg !10966

; <label>:34:                                     ; preds = %29
  %35 = load i32, i32* %11, align 4, !dbg !10967
  %36 = icmp slt i32 %35, 4, !dbg !10968
  br label %37

; <label>:37:                                     ; preds = %34, %29
  %38 = phi i1 [ false, %29 ], [ %36, %34 ], !dbg !10969
  br i1 %38, label %39, label %55, !dbg !10970

; <label>:39:                                     ; preds = %37
  %40 = load i8*, i8** %9, align 8, !dbg !10971
  %41 = load i32, i32* %11, align 4, !dbg !10972
  %42 = sext i32 %41 to i64, !dbg !10971
  %43 = getelementptr inbounds i8, i8* %40, i64 %42, !dbg !10971
  %44 = load i8, i8* %43, align 1, !dbg !10971
  %45 = zext i8 %44 to i32, !dbg !10971
  %46 = load i32, i32* %11, align 4, !dbg !10973
  %47 = sub nsw i32 3, %46, !dbg !10974
  %48 = shl i32 %47, 3, !dbg !10975
  %49 = shl i32 %45, %48, !dbg !10976
  %50 = load i32, i32* %12, align 4, !dbg !10977
  %51 = or i32 %50, %49, !dbg !10977
  store i32 %51, i32* %12, align 4, !dbg !10977
  br label %52, !dbg !10978

; <label>:52:                                     ; preds = %39
  %53 = load i32, i32* %11, align 4, !dbg !10979
  %54 = add nsw i32 %53, 1, !dbg !10979
  store i32 %54, i32* %11, align 4, !dbg !10979
  br label %29, !dbg !10980, !llvm.loop !10981

; <label>:55:                                     ; preds = %37
  %56 = load i32, i32* %12, align 4, !dbg !10983
  %57 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %6, align 8, !dbg !10984
  %58 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %57, i32 0, i32 6, !dbg !10985
  store i32 %56, i32* %58, align 8, !dbg !10986
  ret void, !dbg !10987
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_decode_mmr_line(%struct.Jbig2MmrCtx*, i8*, i8*) #0 !dbg !10988 {
  %4 = alloca %struct.Jbig2MmrCtx*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.Jbig2MmrCtx* %0, %struct.Jbig2MmrCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2MmrCtx** %4, metadata !10991, metadata !DIExpression()), !dbg !10992
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10993, metadata !DIExpression()), !dbg !10994
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10995, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10997, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10999, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11001, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11003, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata i32* %12, metadata !11007, metadata !DIExpression()), !dbg !11008
  store i32 -1, i32* %7, align 4, !dbg !11009
  store i32 0, i32* %12, align 4, !dbg !11010
  br label %16, !dbg !11011

; <label>:16:                                     ; preds = %395, %3
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11012, metadata !DIExpression()), !dbg !11014
  %17 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11015
  %18 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %17, i32 0, i32 6, !dbg !11016
  %19 = load i32, i32* %18, align 8, !dbg !11016
  store i32 %19, i32* %13, align 4, !dbg !11014
  %20 = load i32, i32* %7, align 4, !dbg !11017
  %21 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11019
  %22 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %21, i32 0, i32 0, !dbg !11020
  %23 = load i32, i32* %22, align 8, !dbg !11020
  %24 = icmp sge i32 %20, %23, !dbg !11021
  br i1 %24, label %25, label %26, !dbg !11022

; <label>:25:                                     ; preds = %16
  br label %396, !dbg !11023

; <label>:26:                                     ; preds = %16
  %27 = load i32, i32* %13, align 4, !dbg !11024
  %28 = lshr i32 %27, 29, !dbg !11026
  %29 = icmp eq i32 %28, 1, !dbg !11027
  br i1 %29, label %30, label %109, !dbg !11028

; <label>:30:                                     ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11029, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.declare(metadata i32* %15, metadata !11032, metadata !DIExpression()), !dbg !11033
  %31 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11034
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %31, i32 3), !dbg !11035
  %32 = load i32, i32* %7, align 4, !dbg !11036
  %33 = icmp eq i32 %32, -1, !dbg !11038
  br i1 %33, label %34, label %35, !dbg !11039

; <label>:34:                                     ; preds = %30
  store i32 0, i32* %7, align 4, !dbg !11040
  br label %35, !dbg !11041

; <label>:35:                                     ; preds = %34, %30
  %36 = load i32, i32* %12, align 4, !dbg !11042
  %37 = icmp eq i32 %36, 0, !dbg !11044
  br i1 %37, label %38, label %73, !dbg !11045

; <label>:38:                                     ; preds = %35
  %39 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11046
  %40 = call i32 @jbig2_decode_get_run(%struct.Jbig2MmrCtx* %39, %struct.mmr_table_node* getelementptr inbounds ([304 x %struct.mmr_table_node], [304 x %struct.mmr_table_node]* @jbig2_mmr_white_decode, i32 0, i32 0), i32 8), !dbg !11048
  store i32 %40, i32* %14, align 4, !dbg !11049
  %41 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11050
  %42 = call i32 @jbig2_decode_get_run(%struct.Jbig2MmrCtx* %41, %struct.mmr_table_node* getelementptr inbounds ([320 x %struct.mmr_table_node], [320 x %struct.mmr_table_node]* @jbig2_mmr_black_decode, i32 0, i32 0), i32 7), !dbg !11051
  store i32 %42, i32* %15, align 4, !dbg !11052
  %43 = load i32, i32* %7, align 4, !dbg !11053
  %44 = load i32, i32* %14, align 4, !dbg !11054
  %45 = add nsw i32 %43, %44, !dbg !11055
  store i32 %45, i32* %8, align 4, !dbg !11056
  %46 = load i32, i32* %8, align 4, !dbg !11057
  %47 = load i32, i32* %15, align 4, !dbg !11058
  %48 = add nsw i32 %46, %47, !dbg !11059
  store i32 %48, i32* %9, align 4, !dbg !11060
  %49 = load i32, i32* %8, align 4, !dbg !11061
  %50 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11063
  %51 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %50, i32 0, i32 0, !dbg !11064
  %52 = load i32, i32* %51, align 8, !dbg !11064
  %53 = icmp sgt i32 %49, %52, !dbg !11065
  br i1 %53, label %54, label %58, !dbg !11066

; <label>:54:                                     ; preds = %38
  %55 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11067
  %56 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %55, i32 0, i32 0, !dbg !11068
  %57 = load i32, i32* %56, align 8, !dbg !11068
  store i32 %57, i32* %8, align 4, !dbg !11069
  br label %58, !dbg !11070

; <label>:58:                                     ; preds = %54, %38
  %59 = load i32, i32* %9, align 4, !dbg !11071
  %60 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11073
  %61 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %60, i32 0, i32 0, !dbg !11074
  %62 = load i32, i32* %61, align 8, !dbg !11074
  %63 = icmp sgt i32 %59, %62, !dbg !11075
  br i1 %63, label %64, label %68, !dbg !11076

; <label>:64:                                     ; preds = %58
  %65 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11077
  %66 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %65, i32 0, i32 0, !dbg !11078
  %67 = load i32, i32* %66, align 8, !dbg !11078
  store i32 %67, i32* %9, align 4, !dbg !11079
  br label %68, !dbg !11080

; <label>:68:                                     ; preds = %64, %58
  %69 = load i8*, i8** %6, align 8, !dbg !11081
  %70 = load i32, i32* %8, align 4, !dbg !11082
  %71 = load i32, i32* %9, align 4, !dbg !11083
  call void @jbig2_set_bits(i8* %69, i32 %70, i32 %71), !dbg !11084
  %72 = load i32, i32* %9, align 4, !dbg !11085
  store i32 %72, i32* %7, align 4, !dbg !11086
  br label %108, !dbg !11087

; <label>:73:                                     ; preds = %35
  %74 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11088
  %75 = call i32 @jbig2_decode_get_run(%struct.Jbig2MmrCtx* %74, %struct.mmr_table_node* getelementptr inbounds ([320 x %struct.mmr_table_node], [320 x %struct.mmr_table_node]* @jbig2_mmr_black_decode, i32 0, i32 0), i32 7), !dbg !11090
  store i32 %75, i32* %15, align 4, !dbg !11091
  %76 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11092
  %77 = call i32 @jbig2_decode_get_run(%struct.Jbig2MmrCtx* %76, %struct.mmr_table_node* getelementptr inbounds ([304 x %struct.mmr_table_node], [304 x %struct.mmr_table_node]* @jbig2_mmr_white_decode, i32 0, i32 0), i32 8), !dbg !11093
  store i32 %77, i32* %14, align 4, !dbg !11094
  %78 = load i32, i32* %7, align 4, !dbg !11095
  %79 = load i32, i32* %15, align 4, !dbg !11096
  %80 = add nsw i32 %78, %79, !dbg !11097
  store i32 %80, i32* %8, align 4, !dbg !11098
  %81 = load i32, i32* %8, align 4, !dbg !11099
  %82 = load i32, i32* %14, align 4, !dbg !11100
  %83 = add nsw i32 %81, %82, !dbg !11101
  store i32 %83, i32* %9, align 4, !dbg !11102
  %84 = load i32, i32* %8, align 4, !dbg !11103
  %85 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11105
  %86 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %85, i32 0, i32 0, !dbg !11106
  %87 = load i32, i32* %86, align 8, !dbg !11106
  %88 = icmp sgt i32 %84, %87, !dbg !11107
  br i1 %88, label %89, label %93, !dbg !11108

; <label>:89:                                     ; preds = %73
  %90 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11109
  %91 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %90, i32 0, i32 0, !dbg !11110
  %92 = load i32, i32* %91, align 8, !dbg !11110
  store i32 %92, i32* %8, align 4, !dbg !11111
  br label %93, !dbg !11112

; <label>:93:                                     ; preds = %89, %73
  %94 = load i32, i32* %9, align 4, !dbg !11113
  %95 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11115
  %96 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %95, i32 0, i32 0, !dbg !11116
  %97 = load i32, i32* %96, align 8, !dbg !11116
  %98 = icmp sgt i32 %94, %97, !dbg !11117
  br i1 %98, label %99, label %103, !dbg !11118

; <label>:99:                                     ; preds = %93
  %100 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11119
  %101 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %100, i32 0, i32 0, !dbg !11120
  %102 = load i32, i32* %101, align 8, !dbg !11120
  store i32 %102, i32* %9, align 4, !dbg !11121
  br label %103, !dbg !11122

; <label>:103:                                    ; preds = %99, %93
  %104 = load i8*, i8** %6, align 8, !dbg !11123
  %105 = load i32, i32* %7, align 4, !dbg !11124
  %106 = load i32, i32* %8, align 4, !dbg !11125
  call void @jbig2_set_bits(i8* %104, i32 %105, i32 %106), !dbg !11126
  %107 = load i32, i32* %9, align 4, !dbg !11127
  store i32 %107, i32* %7, align 4, !dbg !11128
  br label %108

; <label>:108:                                    ; preds = %103, %68
  br label %395, !dbg !11129

; <label>:109:                                    ; preds = %26
  %110 = load i32, i32* %13, align 4, !dbg !11130
  %111 = lshr i32 %110, 28, !dbg !11132
  %112 = icmp eq i32 %111, 1, !dbg !11133
  br i1 %112, label %113, label %139, !dbg !11134

; <label>:113:                                    ; preds = %109
  %114 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11135
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %114, i32 4), !dbg !11137
  %115 = load i8*, i8** %5, align 8, !dbg !11138
  %116 = load i32, i32* %7, align 4, !dbg !11139
  %117 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11140
  %118 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %117, i32 0, i32 0, !dbg !11141
  %119 = load i32, i32* %118, align 8, !dbg !11141
  %120 = load i32, i32* %12, align 4, !dbg !11142
  %121 = icmp ne i32 %120, 0, !dbg !11143
  %122 = xor i1 %121, true, !dbg !11143
  %123 = zext i1 %122 to i32, !dbg !11143
  %124 = call i32 @jbig2_find_changing_element_of_color(i8* %115, i32 %116, i32 %119, i32 %123), !dbg !11144
  store i32 %124, i32* %10, align 4, !dbg !11145
  %125 = load i8*, i8** %5, align 8, !dbg !11146
  %126 = load i32, i32* %10, align 4, !dbg !11147
  %127 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11148
  %128 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %127, i32 0, i32 0, !dbg !11149
  %129 = load i32, i32* %128, align 8, !dbg !11149
  %130 = call i32 @jbig2_find_changing_element(i8* %125, i32 %126, i32 %129), !dbg !11150
  store i32 %130, i32* %11, align 4, !dbg !11151
  %131 = load i32, i32* %12, align 4, !dbg !11152
  %132 = icmp ne i32 %131, 0, !dbg !11152
  br i1 %132, label %133, label %137, !dbg !11154

; <label>:133:                                    ; preds = %113
  %134 = load i8*, i8** %6, align 8, !dbg !11155
  %135 = load i32, i32* %7, align 4, !dbg !11156
  %136 = load i32, i32* %11, align 4, !dbg !11157
  call void @jbig2_set_bits(i8* %134, i32 %135, i32 %136), !dbg !11158
  br label %137, !dbg !11158

; <label>:137:                                    ; preds = %133, %113
  %138 = load i32, i32* %11, align 4, !dbg !11159
  store i32 %138, i32* %7, align 4, !dbg !11160
  br label %394, !dbg !11161

; <label>:139:                                    ; preds = %109
  %140 = load i32, i32* %13, align 4, !dbg !11162
  %141 = lshr i32 %140, 31, !dbg !11164
  %142 = icmp eq i32 %141, 1, !dbg !11165
  br i1 %142, label %143, label %167, !dbg !11166

; <label>:143:                                    ; preds = %139
  %144 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11167
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %144, i32 1), !dbg !11169
  %145 = load i8*, i8** %5, align 8, !dbg !11170
  %146 = load i32, i32* %7, align 4, !dbg !11171
  %147 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11172
  %148 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %147, i32 0, i32 0, !dbg !11173
  %149 = load i32, i32* %148, align 8, !dbg !11173
  %150 = load i32, i32* %12, align 4, !dbg !11174
  %151 = icmp ne i32 %150, 0, !dbg !11175
  %152 = xor i1 %151, true, !dbg !11175
  %153 = zext i1 %152 to i32, !dbg !11175
  %154 = call i32 @jbig2_find_changing_element_of_color(i8* %145, i32 %146, i32 %149, i32 %153), !dbg !11176
  store i32 %154, i32* %10, align 4, !dbg !11177
  %155 = load i32, i32* %12, align 4, !dbg !11178
  %156 = icmp ne i32 %155, 0, !dbg !11178
  br i1 %156, label %157, label %161, !dbg !11180

; <label>:157:                                    ; preds = %143
  %158 = load i8*, i8** %6, align 8, !dbg !11181
  %159 = load i32, i32* %7, align 4, !dbg !11182
  %160 = load i32, i32* %10, align 4, !dbg !11183
  call void @jbig2_set_bits(i8* %158, i32 %159, i32 %160), !dbg !11184
  br label %161, !dbg !11184

; <label>:161:                                    ; preds = %157, %143
  %162 = load i32, i32* %10, align 4, !dbg !11185
  store i32 %162, i32* %7, align 4, !dbg !11186
  %163 = load i32, i32* %12, align 4, !dbg !11187
  %164 = icmp ne i32 %163, 0, !dbg !11188
  %165 = xor i1 %164, true, !dbg !11188
  %166 = zext i1 %165 to i32, !dbg !11188
  store i32 %166, i32* %12, align 4, !dbg !11189
  br label %393, !dbg !11190

; <label>:167:                                    ; preds = %139
  %168 = load i32, i32* %13, align 4, !dbg !11191
  %169 = lshr i32 %168, 29, !dbg !11193
  %170 = icmp eq i32 %169, 3, !dbg !11194
  br i1 %170, label %171, label %205, !dbg !11195

; <label>:171:                                    ; preds = %167
  %172 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11196
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %172, i32 3), !dbg !11198
  %173 = load i8*, i8** %5, align 8, !dbg !11199
  %174 = load i32, i32* %7, align 4, !dbg !11200
  %175 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11201
  %176 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %175, i32 0, i32 0, !dbg !11202
  %177 = load i32, i32* %176, align 8, !dbg !11202
  %178 = load i32, i32* %12, align 4, !dbg !11203
  %179 = icmp ne i32 %178, 0, !dbg !11204
  %180 = xor i1 %179, true, !dbg !11204
  %181 = zext i1 %180 to i32, !dbg !11204
  %182 = call i32 @jbig2_find_changing_element_of_color(i8* %173, i32 %174, i32 %177, i32 %181), !dbg !11205
  store i32 %182, i32* %10, align 4, !dbg !11206
  %183 = load i32, i32* %10, align 4, !dbg !11207
  %184 = add nsw i32 %183, 1, !dbg !11209
  %185 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11210
  %186 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %185, i32 0, i32 0, !dbg !11211
  %187 = load i32, i32* %186, align 8, !dbg !11211
  %188 = icmp sgt i32 %184, %187, !dbg !11212
  br i1 %188, label %189, label %190, !dbg !11213

; <label>:189:                                    ; preds = %171
  br label %396, !dbg !11214

; <label>:190:                                    ; preds = %171
  %191 = load i32, i32* %12, align 4, !dbg !11215
  %192 = icmp ne i32 %191, 0, !dbg !11215
  br i1 %192, label %193, label %198, !dbg !11217

; <label>:193:                                    ; preds = %190
  %194 = load i8*, i8** %6, align 8, !dbg !11218
  %195 = load i32, i32* %7, align 4, !dbg !11219
  %196 = load i32, i32* %10, align 4, !dbg !11220
  %197 = add nsw i32 %196, 1, !dbg !11221
  call void @jbig2_set_bits(i8* %194, i32 %195, i32 %197), !dbg !11222
  br label %198, !dbg !11222

; <label>:198:                                    ; preds = %193, %190
  %199 = load i32, i32* %10, align 4, !dbg !11223
  %200 = add nsw i32 %199, 1, !dbg !11224
  store i32 %200, i32* %7, align 4, !dbg !11225
  %201 = load i32, i32* %12, align 4, !dbg !11226
  %202 = icmp ne i32 %201, 0, !dbg !11227
  %203 = xor i1 %202, true, !dbg !11227
  %204 = zext i1 %203 to i32, !dbg !11227
  store i32 %204, i32* %12, align 4, !dbg !11228
  br label %392, !dbg !11229

; <label>:205:                                    ; preds = %167
  %206 = load i32, i32* %13, align 4, !dbg !11230
  %207 = lshr i32 %206, 26, !dbg !11232
  %208 = icmp eq i32 %207, 3, !dbg !11233
  br i1 %208, label %209, label %243, !dbg !11234

; <label>:209:                                    ; preds = %205
  %210 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11235
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %210, i32 6), !dbg !11237
  %211 = load i8*, i8** %5, align 8, !dbg !11238
  %212 = load i32, i32* %7, align 4, !dbg !11239
  %213 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11240
  %214 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %213, i32 0, i32 0, !dbg !11241
  %215 = load i32, i32* %214, align 8, !dbg !11241
  %216 = load i32, i32* %12, align 4, !dbg !11242
  %217 = icmp ne i32 %216, 0, !dbg !11243
  %218 = xor i1 %217, true, !dbg !11243
  %219 = zext i1 %218 to i32, !dbg !11243
  %220 = call i32 @jbig2_find_changing_element_of_color(i8* %211, i32 %212, i32 %215, i32 %219), !dbg !11244
  store i32 %220, i32* %10, align 4, !dbg !11245
  %221 = load i32, i32* %10, align 4, !dbg !11246
  %222 = add nsw i32 %221, 2, !dbg !11248
  %223 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11249
  %224 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %223, i32 0, i32 0, !dbg !11250
  %225 = load i32, i32* %224, align 8, !dbg !11250
  %226 = icmp sgt i32 %222, %225, !dbg !11251
  br i1 %226, label %227, label %228, !dbg !11252

; <label>:227:                                    ; preds = %209
  br label %396, !dbg !11253

; <label>:228:                                    ; preds = %209
  %229 = load i32, i32* %12, align 4, !dbg !11254
  %230 = icmp ne i32 %229, 0, !dbg !11254
  br i1 %230, label %231, label %236, !dbg !11256

; <label>:231:                                    ; preds = %228
  %232 = load i8*, i8** %6, align 8, !dbg !11257
  %233 = load i32, i32* %7, align 4, !dbg !11258
  %234 = load i32, i32* %10, align 4, !dbg !11259
  %235 = add nsw i32 %234, 2, !dbg !11260
  call void @jbig2_set_bits(i8* %232, i32 %233, i32 %235), !dbg !11261
  br label %236, !dbg !11261

; <label>:236:                                    ; preds = %231, %228
  %237 = load i32, i32* %10, align 4, !dbg !11262
  %238 = add nsw i32 %237, 2, !dbg !11263
  store i32 %238, i32* %7, align 4, !dbg !11264
  %239 = load i32, i32* %12, align 4, !dbg !11265
  %240 = icmp ne i32 %239, 0, !dbg !11266
  %241 = xor i1 %240, true, !dbg !11266
  %242 = zext i1 %241 to i32, !dbg !11266
  store i32 %242, i32* %12, align 4, !dbg !11267
  br label %391, !dbg !11268

; <label>:243:                                    ; preds = %205
  %244 = load i32, i32* %13, align 4, !dbg !11269
  %245 = lshr i32 %244, 25, !dbg !11271
  %246 = icmp eq i32 %245, 3, !dbg !11272
  br i1 %246, label %247, label %281, !dbg !11273

; <label>:247:                                    ; preds = %243
  %248 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11274
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %248, i32 7), !dbg !11276
  %249 = load i8*, i8** %5, align 8, !dbg !11277
  %250 = load i32, i32* %7, align 4, !dbg !11278
  %251 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11279
  %252 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %251, i32 0, i32 0, !dbg !11280
  %253 = load i32, i32* %252, align 8, !dbg !11280
  %254 = load i32, i32* %12, align 4, !dbg !11281
  %255 = icmp ne i32 %254, 0, !dbg !11282
  %256 = xor i1 %255, true, !dbg !11282
  %257 = zext i1 %256 to i32, !dbg !11282
  %258 = call i32 @jbig2_find_changing_element_of_color(i8* %249, i32 %250, i32 %253, i32 %257), !dbg !11283
  store i32 %258, i32* %10, align 4, !dbg !11284
  %259 = load i32, i32* %10, align 4, !dbg !11285
  %260 = add nsw i32 %259, 3, !dbg !11287
  %261 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11288
  %262 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %261, i32 0, i32 0, !dbg !11289
  %263 = load i32, i32* %262, align 8, !dbg !11289
  %264 = icmp sgt i32 %260, %263, !dbg !11290
  br i1 %264, label %265, label %266, !dbg !11291

; <label>:265:                                    ; preds = %247
  br label %396, !dbg !11292

; <label>:266:                                    ; preds = %247
  %267 = load i32, i32* %12, align 4, !dbg !11293
  %268 = icmp ne i32 %267, 0, !dbg !11293
  br i1 %268, label %269, label %274, !dbg !11295

; <label>:269:                                    ; preds = %266
  %270 = load i8*, i8** %6, align 8, !dbg !11296
  %271 = load i32, i32* %7, align 4, !dbg !11297
  %272 = load i32, i32* %10, align 4, !dbg !11298
  %273 = add nsw i32 %272, 3, !dbg !11299
  call void @jbig2_set_bits(i8* %270, i32 %271, i32 %273), !dbg !11300
  br label %274, !dbg !11300

; <label>:274:                                    ; preds = %269, %266
  %275 = load i32, i32* %10, align 4, !dbg !11301
  %276 = add nsw i32 %275, 3, !dbg !11302
  store i32 %276, i32* %7, align 4, !dbg !11303
  %277 = load i32, i32* %12, align 4, !dbg !11304
  %278 = icmp ne i32 %277, 0, !dbg !11305
  %279 = xor i1 %278, true, !dbg !11305
  %280 = zext i1 %279 to i32, !dbg !11305
  store i32 %280, i32* %12, align 4, !dbg !11306
  br label %390, !dbg !11307

; <label>:281:                                    ; preds = %243
  %282 = load i32, i32* %13, align 4, !dbg !11308
  %283 = lshr i32 %282, 29, !dbg !11310
  %284 = icmp eq i32 %283, 2, !dbg !11311
  br i1 %284, label %285, label %316, !dbg !11312

; <label>:285:                                    ; preds = %281
  %286 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11313
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %286, i32 3), !dbg !11315
  %287 = load i8*, i8** %5, align 8, !dbg !11316
  %288 = load i32, i32* %7, align 4, !dbg !11317
  %289 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11318
  %290 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %289, i32 0, i32 0, !dbg !11319
  %291 = load i32, i32* %290, align 8, !dbg !11319
  %292 = load i32, i32* %12, align 4, !dbg !11320
  %293 = icmp ne i32 %292, 0, !dbg !11321
  %294 = xor i1 %293, true, !dbg !11321
  %295 = zext i1 %294 to i32, !dbg !11321
  %296 = call i32 @jbig2_find_changing_element_of_color(i8* %287, i32 %288, i32 %291, i32 %295), !dbg !11322
  store i32 %296, i32* %10, align 4, !dbg !11323
  %297 = load i32, i32* %10, align 4, !dbg !11324
  %298 = sub nsw i32 %297, 1, !dbg !11326
  %299 = icmp slt i32 %298, 0, !dbg !11327
  br i1 %299, label %300, label %301, !dbg !11328

; <label>:300:                                    ; preds = %285
  br label %396, !dbg !11329

; <label>:301:                                    ; preds = %285
  %302 = load i32, i32* %12, align 4, !dbg !11330
  %303 = icmp ne i32 %302, 0, !dbg !11330
  br i1 %303, label %304, label %309, !dbg !11332

; <label>:304:                                    ; preds = %301
  %305 = load i8*, i8** %6, align 8, !dbg !11333
  %306 = load i32, i32* %7, align 4, !dbg !11334
  %307 = load i32, i32* %10, align 4, !dbg !11335
  %308 = sub nsw i32 %307, 1, !dbg !11336
  call void @jbig2_set_bits(i8* %305, i32 %306, i32 %308), !dbg !11337
  br label %309, !dbg !11337

; <label>:309:                                    ; preds = %304, %301
  %310 = load i32, i32* %10, align 4, !dbg !11338
  %311 = sub nsw i32 %310, 1, !dbg !11339
  store i32 %311, i32* %7, align 4, !dbg !11340
  %312 = load i32, i32* %12, align 4, !dbg !11341
  %313 = icmp ne i32 %312, 0, !dbg !11342
  %314 = xor i1 %313, true, !dbg !11342
  %315 = zext i1 %314 to i32, !dbg !11342
  store i32 %315, i32* %12, align 4, !dbg !11343
  br label %389, !dbg !11344

; <label>:316:                                    ; preds = %281
  %317 = load i32, i32* %13, align 4, !dbg !11345
  %318 = lshr i32 %317, 26, !dbg !11347
  %319 = icmp eq i32 %318, 2, !dbg !11348
  br i1 %319, label %320, label %351, !dbg !11349

; <label>:320:                                    ; preds = %316
  %321 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11350
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %321, i32 6), !dbg !11352
  %322 = load i8*, i8** %5, align 8, !dbg !11353
  %323 = load i32, i32* %7, align 4, !dbg !11354
  %324 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11355
  %325 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %324, i32 0, i32 0, !dbg !11356
  %326 = load i32, i32* %325, align 8, !dbg !11356
  %327 = load i32, i32* %12, align 4, !dbg !11357
  %328 = icmp ne i32 %327, 0, !dbg !11358
  %329 = xor i1 %328, true, !dbg !11358
  %330 = zext i1 %329 to i32, !dbg !11358
  %331 = call i32 @jbig2_find_changing_element_of_color(i8* %322, i32 %323, i32 %326, i32 %330), !dbg !11359
  store i32 %331, i32* %10, align 4, !dbg !11360
  %332 = load i32, i32* %10, align 4, !dbg !11361
  %333 = sub nsw i32 %332, 2, !dbg !11363
  %334 = icmp slt i32 %333, 0, !dbg !11364
  br i1 %334, label %335, label %336, !dbg !11365

; <label>:335:                                    ; preds = %320
  br label %396, !dbg !11366

; <label>:336:                                    ; preds = %320
  %337 = load i32, i32* %12, align 4, !dbg !11367
  %338 = icmp ne i32 %337, 0, !dbg !11367
  br i1 %338, label %339, label %344, !dbg !11369

; <label>:339:                                    ; preds = %336
  %340 = load i8*, i8** %6, align 8, !dbg !11370
  %341 = load i32, i32* %7, align 4, !dbg !11371
  %342 = load i32, i32* %10, align 4, !dbg !11372
  %343 = sub nsw i32 %342, 2, !dbg !11373
  call void @jbig2_set_bits(i8* %340, i32 %341, i32 %343), !dbg !11374
  br label %344, !dbg !11374

; <label>:344:                                    ; preds = %339, %336
  %345 = load i32, i32* %10, align 4, !dbg !11375
  %346 = sub nsw i32 %345, 2, !dbg !11376
  store i32 %346, i32* %7, align 4, !dbg !11377
  %347 = load i32, i32* %12, align 4, !dbg !11378
  %348 = icmp ne i32 %347, 0, !dbg !11379
  %349 = xor i1 %348, true, !dbg !11379
  %350 = zext i1 %349 to i32, !dbg !11379
  store i32 %350, i32* %12, align 4, !dbg !11380
  br label %388, !dbg !11381

; <label>:351:                                    ; preds = %316
  %352 = load i32, i32* %13, align 4, !dbg !11382
  %353 = lshr i32 %352, 25, !dbg !11384
  %354 = icmp eq i32 %353, 2, !dbg !11385
  br i1 %354, label %355, label %386, !dbg !11386

; <label>:355:                                    ; preds = %351
  %356 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11387
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %356, i32 7), !dbg !11389
  %357 = load i8*, i8** %5, align 8, !dbg !11390
  %358 = load i32, i32* %7, align 4, !dbg !11391
  %359 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11392
  %360 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %359, i32 0, i32 0, !dbg !11393
  %361 = load i32, i32* %360, align 8, !dbg !11393
  %362 = load i32, i32* %12, align 4, !dbg !11394
  %363 = icmp ne i32 %362, 0, !dbg !11395
  %364 = xor i1 %363, true, !dbg !11395
  %365 = zext i1 %364 to i32, !dbg !11395
  %366 = call i32 @jbig2_find_changing_element_of_color(i8* %357, i32 %358, i32 %361, i32 %365), !dbg !11396
  store i32 %366, i32* %10, align 4, !dbg !11397
  %367 = load i32, i32* %10, align 4, !dbg !11398
  %368 = sub nsw i32 %367, 3, !dbg !11400
  %369 = icmp slt i32 %368, 0, !dbg !11401
  br i1 %369, label %370, label %371, !dbg !11402

; <label>:370:                                    ; preds = %355
  br label %396, !dbg !11403

; <label>:371:                                    ; preds = %355
  %372 = load i32, i32* %12, align 4, !dbg !11404
  %373 = icmp ne i32 %372, 0, !dbg !11404
  br i1 %373, label %374, label %379, !dbg !11406

; <label>:374:                                    ; preds = %371
  %375 = load i8*, i8** %6, align 8, !dbg !11407
  %376 = load i32, i32* %7, align 4, !dbg !11408
  %377 = load i32, i32* %10, align 4, !dbg !11409
  %378 = sub nsw i32 %377, 3, !dbg !11410
  call void @jbig2_set_bits(i8* %375, i32 %376, i32 %378), !dbg !11411
  br label %379, !dbg !11411

; <label>:379:                                    ; preds = %374, %371
  %380 = load i32, i32* %10, align 4, !dbg !11412
  %381 = sub nsw i32 %380, 3, !dbg !11413
  store i32 %381, i32* %7, align 4, !dbg !11414
  %382 = load i32, i32* %12, align 4, !dbg !11415
  %383 = icmp ne i32 %382, 0, !dbg !11416
  %384 = xor i1 %383, true, !dbg !11416
  %385 = zext i1 %384 to i32, !dbg !11416
  store i32 %385, i32* %12, align 4, !dbg !11417
  br label %387, !dbg !11418

; <label>:386:                                    ; preds = %351
  br label %396, !dbg !11419

; <label>:387:                                    ; preds = %379
  br label %388

; <label>:388:                                    ; preds = %387, %344
  br label %389

; <label>:389:                                    ; preds = %388, %309
  br label %390

; <label>:390:                                    ; preds = %389, %274
  br label %391

; <label>:391:                                    ; preds = %390, %236
  br label %392

; <label>:392:                                    ; preds = %391, %198
  br label %393

; <label>:393:                                    ; preds = %392, %161
  br label %394

; <label>:394:                                    ; preds = %393, %137
  br label %395

; <label>:395:                                    ; preds = %394, %108
  br label %16, !dbg !11011, !llvm.loop !11420

; <label>:396:                                    ; preds = %386, %370, %335, %300, %265, %227, %189, %25
  ret void, !dbg !11422
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx*, i32) #0 !dbg !11423 {
  %3 = alloca %struct.Jbig2MmrCtx*, align 8
  %4 = alloca i32, align 4
  store %struct.Jbig2MmrCtx* %0, %struct.Jbig2MmrCtx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2MmrCtx** %3, metadata !11426, metadata !DIExpression()), !dbg !11427
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11428, metadata !DIExpression()), !dbg !11429
  %5 = load i32, i32* %4, align 4, !dbg !11430
  %6 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11431
  %7 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %6, i32 0, i32 6, !dbg !11432
  %8 = load i32, i32* %7, align 8, !dbg !11433
  %9 = shl i32 %8, %5, !dbg !11433
  store i32 %9, i32* %7, align 8, !dbg !11433
  %10 = load i32, i32* %4, align 4, !dbg !11434
  %11 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11435
  %12 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %11, i32 0, i32 5, !dbg !11436
  %13 = load i32, i32* %12, align 4, !dbg !11437
  %14 = add nsw i32 %13, %10, !dbg !11437
  store i32 %14, i32* %12, align 4, !dbg !11437
  br label %15, !dbg !11438

; <label>:15:                                     ; preds = %54, %2
  %16 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11439
  %17 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %16, i32 0, i32 5, !dbg !11440
  %18 = load i32, i32* %17, align 4, !dbg !11440
  %19 = icmp sge i32 %18, 8, !dbg !11441
  br i1 %19, label %20, label %59, !dbg !11438

; <label>:20:                                     ; preds = %15
  %21 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11442
  %22 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %21, i32 0, i32 5, !dbg !11444
  %23 = load i32, i32* %22, align 4, !dbg !11445
  %24 = sub nsw i32 %23, 8, !dbg !11445
  store i32 %24, i32* %22, align 4, !dbg !11445
  %25 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11446
  %26 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %25, i32 0, i32 4, !dbg !11448
  %27 = load i32, i32* %26, align 8, !dbg !11448
  %28 = add nsw i32 %27, 4, !dbg !11449
  %29 = sext i32 %28 to i64, !dbg !11446
  %30 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11450
  %31 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %30, i32 0, i32 3, !dbg !11451
  %32 = load i64, i64* %31, align 8, !dbg !11451
  %33 = icmp ult i64 %29, %32, !dbg !11452
  br i1 %33, label %34, label %54, !dbg !11453

; <label>:34:                                     ; preds = %20
  %35 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11454
  %36 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %35, i32 0, i32 2, !dbg !11455
  %37 = load i8*, i8** %36, align 8, !dbg !11455
  %38 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11456
  %39 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %38, i32 0, i32 4, !dbg !11457
  %40 = load i32, i32* %39, align 8, !dbg !11457
  %41 = add nsw i32 %40, 4, !dbg !11458
  %42 = sext i32 %41 to i64, !dbg !11454
  %43 = getelementptr inbounds i8, i8* %37, i64 %42, !dbg !11454
  %44 = load i8, i8* %43, align 1, !dbg !11454
  %45 = zext i8 %44 to i32, !dbg !11454
  %46 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11459
  %47 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %46, i32 0, i32 5, !dbg !11460
  %48 = load i32, i32* %47, align 4, !dbg !11460
  %49 = shl i32 %45, %48, !dbg !11461
  %50 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11462
  %51 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %50, i32 0, i32 6, !dbg !11463
  %52 = load i32, i32* %51, align 8, !dbg !11464
  %53 = or i32 %52, %49, !dbg !11464
  store i32 %53, i32* %51, align 8, !dbg !11464
  br label %54, !dbg !11462

; <label>:54:                                     ; preds = %34, %20
  %55 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %3, align 8, !dbg !11465
  %56 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %55, i32 0, i32 4, !dbg !11466
  %57 = load i32, i32* %56, align 8, !dbg !11467
  %58 = add nsw i32 %57, 1, !dbg !11467
  store i32 %58, i32* %56, align 8, !dbg !11467
  br label %15, !dbg !11438, !llvm.loop !11468

; <label>:59:                                     ; preds = %15
  ret void, !dbg !11470
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_get_run(%struct.Jbig2MmrCtx*, %struct.mmr_table_node*, i32) #0 !dbg !11471 {
  %4 = alloca %struct.Jbig2MmrCtx*, align 8
  %5 = alloca %struct.mmr_table_node*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.Jbig2MmrCtx* %0, %struct.Jbig2MmrCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2MmrCtx** %4, metadata !11475, metadata !DIExpression()), !dbg !11476
  store %struct.mmr_table_node* %1, %struct.mmr_table_node** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mmr_table_node** %5, metadata !11477, metadata !DIExpression()), !dbg !11478
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11479, metadata !DIExpression()), !dbg !11480
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11481, metadata !DIExpression()), !dbg !11482
  store i32 0, i32* %7, align 4, !dbg !11482
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11483, metadata !DIExpression()), !dbg !11484
  br label %9, !dbg !11485

; <label>:9:                                      ; preds = %17, %3
  %10 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11486
  %11 = load %struct.mmr_table_node*, %struct.mmr_table_node** %5, align 8, !dbg !11488
  %12 = load i32, i32* %6, align 4, !dbg !11489
  %13 = call i32 @jbig2_decode_get_code(%struct.Jbig2MmrCtx* %10, %struct.mmr_table_node* %11, i32 %12), !dbg !11490
  store i32 %13, i32* %8, align 4, !dbg !11491
  %14 = load i32, i32* %8, align 4, !dbg !11492
  %15 = load i32, i32* %7, align 4, !dbg !11493
  %16 = add nsw i32 %15, %14, !dbg !11493
  store i32 %16, i32* %7, align 4, !dbg !11493
  br label %17, !dbg !11494

; <label>:17:                                     ; preds = %9
  %18 = load i32, i32* %8, align 4, !dbg !11495
  %19 = icmp sge i32 %18, 64, !dbg !11496
  br i1 %19, label %9, label %20, !dbg !11494, !llvm.loop !11497

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* %7, align 4, !dbg !11499
  ret i32 %21, !dbg !11500
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_set_bits(i8*, i32, i32) #0 !dbg !11501 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11504, metadata !DIExpression()), !dbg !11505
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11506, metadata !DIExpression()), !dbg !11507
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11508, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11510, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11512, metadata !DIExpression()), !dbg !11513
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11514, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11516, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11518, metadata !DIExpression()), !dbg !11519
  %12 = load i32, i32* %5, align 4, !dbg !11520
  %13 = ashr i32 %12, 3, !dbg !11521
  store i32 %13, i32* %7, align 4, !dbg !11522
  %14 = load i32, i32* %6, align 4, !dbg !11523
  %15 = ashr i32 %14, 3, !dbg !11524
  store i32 %15, i32* %8, align 4, !dbg !11525
  %16 = load i32, i32* %5, align 4, !dbg !11526
  %17 = and i32 %16, 7, !dbg !11527
  store i32 %17, i32* %9, align 4, !dbg !11528
  %18 = load i32, i32* %6, align 4, !dbg !11529
  %19 = and i32 %18, 7, !dbg !11530
  store i32 %19, i32* %10, align 4, !dbg !11531
  %20 = load i32, i32* %7, align 4, !dbg !11532
  %21 = load i32, i32* %8, align 4, !dbg !11534
  %22 = icmp eq i32 %20, %21, !dbg !11535
  br i1 %22, label %23, label %43, !dbg !11536

; <label>:23:                                     ; preds = %3
  %24 = load i32, i32* %9, align 4, !dbg !11537
  %25 = sext i32 %24 to i64, !dbg !11539
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* @lm, i64 0, i64 %25, !dbg !11539
  %27 = load i8, i8* %26, align 1, !dbg !11539
  %28 = zext i8 %27 to i32, !dbg !11539
  %29 = load i32, i32* %10, align 4, !dbg !11540
  %30 = sext i32 %29 to i64, !dbg !11541
  %31 = getelementptr inbounds [8 x i8], [8 x i8]* @rm, i64 0, i64 %30, !dbg !11541
  %32 = load i8, i8* %31, align 1, !dbg !11541
  %33 = zext i8 %32 to i32, !dbg !11541
  %34 = and i32 %28, %33, !dbg !11542
  %35 = load i8*, i8** %4, align 8, !dbg !11543
  %36 = load i32, i32* %7, align 4, !dbg !11544
  %37 = sext i32 %36 to i64, !dbg !11543
  %38 = getelementptr inbounds i8, i8* %35, i64 %37, !dbg !11543
  %39 = load i8, i8* %38, align 1, !dbg !11545
  %40 = zext i8 %39 to i32, !dbg !11545
  %41 = or i32 %40, %34, !dbg !11545
  %42 = trunc i32 %41 to i8, !dbg !11545
  store i8 %42, i8* %38, align 1, !dbg !11545
  br label %85, !dbg !11546

; <label>:43:                                     ; preds = %3
  %44 = load i32, i32* %9, align 4, !dbg !11547
  %45 = sext i32 %44 to i64, !dbg !11549
  %46 = getelementptr inbounds [8 x i8], [8 x i8]* @lm, i64 0, i64 %45, !dbg !11549
  %47 = load i8, i8* %46, align 1, !dbg !11549
  %48 = zext i8 %47 to i32, !dbg !11549
  %49 = load i8*, i8** %4, align 8, !dbg !11550
  %50 = load i32, i32* %7, align 4, !dbg !11551
  %51 = sext i32 %50 to i64, !dbg !11550
  %52 = getelementptr inbounds i8, i8* %49, i64 %51, !dbg !11550
  %53 = load i8, i8* %52, align 1, !dbg !11552
  %54 = zext i8 %53 to i32, !dbg !11552
  %55 = or i32 %54, %48, !dbg !11552
  %56 = trunc i32 %55 to i8, !dbg !11552
  store i8 %56, i8* %52, align 1, !dbg !11552
  %57 = load i32, i32* %7, align 4, !dbg !11553
  %58 = add nsw i32 %57, 1, !dbg !11555
  store i32 %58, i32* %11, align 4, !dbg !11556
  br label %59, !dbg !11557

; <label>:59:                                     ; preds = %68, %43
  %60 = load i32, i32* %11, align 4, !dbg !11558
  %61 = load i32, i32* %8, align 4, !dbg !11560
  %62 = icmp slt i32 %60, %61, !dbg !11561
  br i1 %62, label %63, label %71, !dbg !11562

; <label>:63:                                     ; preds = %59
  %64 = load i8*, i8** %4, align 8, !dbg !11563
  %65 = load i32, i32* %11, align 4, !dbg !11564
  %66 = sext i32 %65 to i64, !dbg !11563
  %67 = getelementptr inbounds i8, i8* %64, i64 %66, !dbg !11563
  store i8 -1, i8* %67, align 1, !dbg !11565
  br label %68, !dbg !11563

; <label>:68:                                     ; preds = %63
  %69 = load i32, i32* %11, align 4, !dbg !11566
  %70 = add nsw i32 %69, 1, !dbg !11566
  store i32 %70, i32* %11, align 4, !dbg !11566
  br label %59, !dbg !11567, !llvm.loop !11568

; <label>:71:                                     ; preds = %59
  %72 = load i32, i32* %10, align 4, !dbg !11570
  %73 = sext i32 %72 to i64, !dbg !11571
  %74 = getelementptr inbounds [8 x i8], [8 x i8]* @rm, i64 0, i64 %73, !dbg !11571
  %75 = load i8, i8* %74, align 1, !dbg !11571
  %76 = zext i8 %75 to i32, !dbg !11571
  %77 = load i8*, i8** %4, align 8, !dbg !11572
  %78 = load i32, i32* %8, align 4, !dbg !11573
  %79 = sext i32 %78 to i64, !dbg !11572
  %80 = getelementptr inbounds i8, i8* %77, i64 %79, !dbg !11572
  %81 = load i8, i8* %80, align 1, !dbg !11574
  %82 = zext i8 %81 to i32, !dbg !11574
  %83 = or i32 %82, %76, !dbg !11574
  %84 = trunc i32 %83 to i8, !dbg !11574
  store i8 %84, i8* %80, align 1, !dbg !11574
  br label %85

; <label>:85:                                     ; preds = %71, %23
  ret void, !dbg !11575
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_find_changing_element_of_color(i8*, i32, i32, i32) #0 !dbg !11576 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11579, metadata !DIExpression()), !dbg !11580
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11581, metadata !DIExpression()), !dbg !11582
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11585, metadata !DIExpression()), !dbg !11586
  %10 = load i8*, i8** %6, align 8, !dbg !11587
  %11 = icmp eq i8* %10, null, !dbg !11589
  br i1 %11, label %12, label %14, !dbg !11590

; <label>:12:                                     ; preds = %4
  %13 = load i32, i32* %8, align 4, !dbg !11591
  store i32 %13, i32* %5, align 4, !dbg !11592
  br label %44, !dbg !11592

; <label>:14:                                     ; preds = %4
  %15 = load i8*, i8** %6, align 8, !dbg !11593
  %16 = load i32, i32* %7, align 4, !dbg !11594
  %17 = load i32, i32* %8, align 4, !dbg !11595
  %18 = call i32 @jbig2_find_changing_element(i8* %15, i32 %16, i32 %17), !dbg !11596
  store i32 %18, i32* %7, align 4, !dbg !11597
  %19 = load i32, i32* %7, align 4, !dbg !11598
  %20 = load i32, i32* %8, align 4, !dbg !11600
  %21 = icmp slt i32 %19, %20, !dbg !11601
  br i1 %21, label %22, label %42, !dbg !11602

; <label>:22:                                     ; preds = %14
  %23 = load i8*, i8** %6, align 8, !dbg !11603
  %24 = load i32, i32* %7, align 4, !dbg !11603
  %25 = ashr i32 %24, 3, !dbg !11603
  %26 = sext i32 %25 to i64, !dbg !11603
  %27 = getelementptr inbounds i8, i8* %23, i64 %26, !dbg !11603
  %28 = load i8, i8* %27, align 1, !dbg !11603
  %29 = zext i8 %28 to i32, !dbg !11603
  %30 = load i32, i32* %7, align 4, !dbg !11603
  %31 = and i32 %30, 7, !dbg !11603
  %32 = sub nsw i32 7, %31, !dbg !11603
  %33 = ashr i32 %29, %32, !dbg !11603
  %34 = and i32 %33, 1, !dbg !11603
  %35 = load i32, i32* %9, align 4, !dbg !11604
  %36 = icmp ne i32 %34, %35, !dbg !11605
  br i1 %36, label %37, label %42, !dbg !11606

; <label>:37:                                     ; preds = %22
  %38 = load i8*, i8** %6, align 8, !dbg !11607
  %39 = load i32, i32* %7, align 4, !dbg !11608
  %40 = load i32, i32* %8, align 4, !dbg !11609
  %41 = call i32 @jbig2_find_changing_element(i8* %38, i32 %39, i32 %40), !dbg !11610
  store i32 %41, i32* %7, align 4, !dbg !11611
  br label %42, !dbg !11612

; <label>:42:                                     ; preds = %37, %22, %14
  %43 = load i32, i32* %7, align 4, !dbg !11613
  store i32 %43, i32* %5, align 4, !dbg !11614
  br label %44, !dbg !11614

; <label>:44:                                     ; preds = %42, %12
  %45 = load i32, i32* %5, align 4, !dbg !11615
  ret i32 %45, !dbg !11615
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_find_changing_element(i8*, i32, i32) #0 !dbg !11616 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11619, metadata !DIExpression()), !dbg !11620
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11621, metadata !DIExpression()), !dbg !11622
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11623, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11625, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11627, metadata !DIExpression()), !dbg !11628
  %10 = load i8*, i8** %5, align 8, !dbg !11629
  %11 = icmp eq i8* %10, null, !dbg !11631
  br i1 %11, label %12, label %14, !dbg !11632

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* %7, align 4, !dbg !11633
  store i32 %13, i32* %4, align 4, !dbg !11634
  br label %60, !dbg !11634

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* %6, align 4, !dbg !11635
  %16 = icmp eq i32 %15, -1, !dbg !11637
  br i1 %16, label %17, label %18, !dbg !11638

; <label>:17:                                     ; preds = %14
  store i32 0, i32* %8, align 4, !dbg !11639
  store i32 0, i32* %6, align 4, !dbg !11641
  br label %33, !dbg !11642

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %5, align 8, !dbg !11643
  %20 = load i32, i32* %6, align 4, !dbg !11643
  %21 = ashr i32 %20, 3, !dbg !11643
  %22 = sext i32 %21 to i64, !dbg !11643
  %23 = getelementptr inbounds i8, i8* %19, i64 %22, !dbg !11643
  %24 = load i8, i8* %23, align 1, !dbg !11643
  %25 = zext i8 %24 to i32, !dbg !11643
  %26 = load i32, i32* %6, align 4, !dbg !11643
  %27 = and i32 %26, 7, !dbg !11643
  %28 = sub nsw i32 7, %27, !dbg !11643
  %29 = ashr i32 %25, %28, !dbg !11643
  %30 = and i32 %29, 1, !dbg !11643
  store i32 %30, i32* %8, align 4, !dbg !11645
  %31 = load i32, i32* %6, align 4, !dbg !11646
  %32 = add nsw i32 %31, 1, !dbg !11646
  store i32 %32, i32* %6, align 4, !dbg !11646
  br label %33

; <label>:33:                                     ; preds = %18, %17
  br label %34, !dbg !11647

; <label>:34:                                     ; preds = %55, %33
  %35 = load i32, i32* %6, align 4, !dbg !11648
  %36 = load i32, i32* %7, align 4, !dbg !11649
  %37 = icmp slt i32 %35, %36, !dbg !11650
  br i1 %37, label %38, label %58, !dbg !11647

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %5, align 8, !dbg !11651
  %40 = load i32, i32* %6, align 4, !dbg !11651
  %41 = ashr i32 %40, 3, !dbg !11651
  %42 = sext i32 %41 to i64, !dbg !11651
  %43 = getelementptr inbounds i8, i8* %39, i64 %42, !dbg !11651
  %44 = load i8, i8* %43, align 1, !dbg !11651
  %45 = zext i8 %44 to i32, !dbg !11651
  %46 = load i32, i32* %6, align 4, !dbg !11651
  %47 = and i32 %46, 7, !dbg !11651
  %48 = sub nsw i32 7, %47, !dbg !11651
  %49 = ashr i32 %45, %48, !dbg !11651
  %50 = and i32 %49, 1, !dbg !11651
  store i32 %50, i32* %9, align 4, !dbg !11653
  %51 = load i32, i32* %8, align 4, !dbg !11654
  %52 = load i32, i32* %9, align 4, !dbg !11656
  %53 = icmp ne i32 %51, %52, !dbg !11657
  br i1 %53, label %54, label %55, !dbg !11658

; <label>:54:                                     ; preds = %38
  br label %58, !dbg !11659

; <label>:55:                                     ; preds = %38
  %56 = load i32, i32* %6, align 4, !dbg !11660
  %57 = add nsw i32 %56, 1, !dbg !11660
  store i32 %57, i32* %6, align 4, !dbg !11660
  br label %34, !dbg !11647, !llvm.loop !11661

; <label>:58:                                     ; preds = %54, %34
  %59 = load i32, i32* %6, align 4, !dbg !11663
  store i32 %59, i32* %4, align 4, !dbg !11664
  br label %60, !dbg !11664

; <label>:60:                                     ; preds = %58, %12
  %61 = load i32, i32* %4, align 4, !dbg !11665
  ret i32 %61, !dbg !11665
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @jbig2_decode_get_code(%struct.Jbig2MmrCtx*, %struct.mmr_table_node*, i32) #0 !dbg !11666 {
  %4 = alloca %struct.Jbig2MmrCtx*, align 8
  %5 = alloca %struct.mmr_table_node*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.Jbig2MmrCtx* %0, %struct.Jbig2MmrCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.Jbig2MmrCtx** %4, metadata !11667, metadata !DIExpression()), !dbg !11668
  store %struct.mmr_table_node* %1, %struct.mmr_table_node** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.mmr_table_node** %5, metadata !11669, metadata !DIExpression()), !dbg !11670
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11671, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11673, metadata !DIExpression()), !dbg !11674
  %12 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11675
  %13 = getelementptr inbounds %struct.Jbig2MmrCtx, %struct.Jbig2MmrCtx* %12, i32 0, i32 6, !dbg !11676
  %14 = load i32, i32* %13, align 8, !dbg !11676
  store i32 %14, i32* %7, align 4, !dbg !11674
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11677, metadata !DIExpression()), !dbg !11678
  %15 = load i32, i32* %7, align 4, !dbg !11679
  %16 = load i32, i32* %6, align 4, !dbg !11680
  %17 = sub nsw i32 32, %16, !dbg !11681
  %18 = lshr i32 %15, %17, !dbg !11682
  store i32 %18, i32* %8, align 4, !dbg !11678
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11683, metadata !DIExpression()), !dbg !11684
  %19 = load %struct.mmr_table_node*, %struct.mmr_table_node** %5, align 8, !dbg !11685
  %20 = load i32, i32* %8, align 4, !dbg !11686
  %21 = sext i32 %20 to i64, !dbg !11685
  %22 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %19, i64 %21, !dbg !11685
  %23 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %22, i32 0, i32 0, !dbg !11687
  %24 = load i16, i16* %23, align 2, !dbg !11687
  %25 = sext i16 %24 to i32, !dbg !11685
  store i32 %25, i32* %9, align 4, !dbg !11684
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11688, metadata !DIExpression()), !dbg !11689
  %26 = load %struct.mmr_table_node*, %struct.mmr_table_node** %5, align 8, !dbg !11690
  %27 = load i32, i32* %8, align 4, !dbg !11691
  %28 = sext i32 %27 to i64, !dbg !11690
  %29 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %26, i64 %28, !dbg !11690
  %30 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %29, i32 0, i32 1, !dbg !11692
  %31 = load i16, i16* %30, align 2, !dbg !11692
  %32 = sext i16 %31 to i32, !dbg !11690
  store i32 %32, i32* %10, align 4, !dbg !11689
  %33 = load i32, i32* %10, align 4, !dbg !11693
  %34 = load i32, i32* %6, align 4, !dbg !11695
  %35 = icmp sgt i32 %33, %34, !dbg !11696
  br i1 %35, label %36, label %65, !dbg !11697

; <label>:36:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11698, metadata !DIExpression()), !dbg !11700
  %37 = load i32, i32* %6, align 4, !dbg !11701
  %38 = sub nsw i32 32, %37, !dbg !11702
  %39 = shl i32 1, %38, !dbg !11703
  %40 = sub nsw i32 %39, 1, !dbg !11704
  store i32 %40, i32* %11, align 4, !dbg !11700
  %41 = load i32, i32* %9, align 4, !dbg !11705
  %42 = load i32, i32* %7, align 4, !dbg !11706
  %43 = load i32, i32* %11, align 4, !dbg !11707
  %44 = and i32 %42, %43, !dbg !11708
  %45 = load i32, i32* %10, align 4, !dbg !11709
  %46 = sub nsw i32 32, %45, !dbg !11710
  %47 = lshr i32 %44, %46, !dbg !11711
  %48 = add i32 %41, %47, !dbg !11712
  store i32 %48, i32* %8, align 4, !dbg !11713
  %49 = load %struct.mmr_table_node*, %struct.mmr_table_node** %5, align 8, !dbg !11714
  %50 = load i32, i32* %8, align 4, !dbg !11715
  %51 = sext i32 %50 to i64, !dbg !11714
  %52 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %49, i64 %51, !dbg !11714
  %53 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %52, i32 0, i32 0, !dbg !11716
  %54 = load i16, i16* %53, align 2, !dbg !11716
  %55 = sext i16 %54 to i32, !dbg !11714
  store i32 %55, i32* %9, align 4, !dbg !11717
  %56 = load i32, i32* %6, align 4, !dbg !11718
  %57 = load %struct.mmr_table_node*, %struct.mmr_table_node** %5, align 8, !dbg !11719
  %58 = load i32, i32* %8, align 4, !dbg !11720
  %59 = sext i32 %58 to i64, !dbg !11719
  %60 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %57, i64 %59, !dbg !11719
  %61 = getelementptr inbounds %struct.mmr_table_node, %struct.mmr_table_node* %60, i32 0, i32 1, !dbg !11721
  %62 = load i16, i16* %61, align 2, !dbg !11721
  %63 = sext i16 %62 to i32, !dbg !11719
  %64 = add nsw i32 %56, %63, !dbg !11722
  store i32 %64, i32* %10, align 4, !dbg !11723
  br label %65, !dbg !11724

; <label>:65:                                     ; preds = %36, %3
  %66 = load %struct.Jbig2MmrCtx*, %struct.Jbig2MmrCtx** %4, align 8, !dbg !11725
  %67 = load i32, i32* %10, align 4, !dbg !11726
  call void @jbig2_decode_mmr_consume(%struct.Jbig2MmrCtx* %66, i32 %67), !dbg !11727
  %68 = load i32, i32* %9, align 4, !dbg !11728
  ret i32 %68, !dbg !11729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11*, i32, i32) #0 !dbg !11730 {
  %4 = alloca %struct._Jbig2Image*, align 8
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2Image*, align 8
  %9 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !11801, metadata !DIExpression()), !dbg !11802
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11803, metadata !DIExpression()), !dbg !11804
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11805, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %8, metadata !11807, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11809, metadata !DIExpression()), !dbg !11810
  %10 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !11811
  %11 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %10, i32 0, i32 0, !dbg !11812
  %12 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %11, align 8, !dbg !11812
  %13 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %12, i64 32), !dbg !11813
  %14 = bitcast i8* %13 to %struct._Jbig2Image*, !dbg !11814
  store %struct._Jbig2Image* %14, %struct._Jbig2Image** %8, align 8, !dbg !11815
  %15 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11816
  %16 = icmp eq %struct._Jbig2Image* %15, null, !dbg !11818
  br i1 %16, label %17, label %20, !dbg !11819

; <label>:17:                                     ; preds = %3
  %18 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !11820
  %19 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %18, i32 3, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.228, i32 0, i32 0)), !dbg !11822
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %4, align 8, !dbg !11823
  br label %63, !dbg !11823

; <label>:20:                                     ; preds = %3
  %21 = load i32, i32* %6, align 4, !dbg !11824
  %22 = sub nsw i32 %21, 1, !dbg !11825
  %23 = ashr i32 %22, 3, !dbg !11826
  %24 = add nsw i32 %23, 1, !dbg !11827
  store i32 %24, i32* %9, align 4, !dbg !11828
  %25 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !11829
  %26 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %25, i32 0, i32 0, !dbg !11830
  %27 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %26, align 8, !dbg !11830
  %28 = load i32, i32* %9, align 4, !dbg !11831
  %29 = load i32, i32* %7, align 4, !dbg !11832
  %30 = mul nsw i32 %28, %29, !dbg !11833
  %31 = sext i32 %30 to i64, !dbg !11831
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !11834
  %32 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %27, i64 %31), !dbg !11834
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !11835
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11835
  %34 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %33, i32 0, i32 3, !dbg !11836
  store i8* %32, i8** %34, align 8, !dbg !11837
  %35 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11838
  %36 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %35, i32 0, i32 3, !dbg !11840
  %37 = load i8*, i8** %36, align 8, !dbg !11840
  %38 = icmp eq i8* %37, null, !dbg !11841
  br i1 %38, label %39, label %50, !dbg !11842

; <label>:39:                                     ; preds = %20
  %40 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !11843
  %41 = load i32, i32* %9, align 4, !dbg !11845
  %42 = load i32, i32* %7, align 4, !dbg !11846
  %43 = mul nsw i32 %41, %42, !dbg !11847
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !11848
  %44 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %40, i32 3, i32 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.229, i32 0, i32 0), i32 %43), !dbg !11848
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !11849
  %45 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !11849
  %46 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %45, i32 0, i32 0, !dbg !11850
  %47 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %46, align 8, !dbg !11850
  %48 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11851
  %49 = bitcast %struct._Jbig2Image* %48 to i8*, !dbg !11851
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %47, i8* %49), !dbg !11852
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %4, align 8, !dbg !11853
  br label %63, !dbg !11853

; <label>:50:                                     ; preds = %20
  %51 = load i32, i32* %6, align 4, !dbg !11854
  %52 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11855
  %53 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %52, i32 0, i32 0, !dbg !11856
  store i32 %51, i32* %53, align 8, !dbg !11857
  %54 = load i32, i32* %7, align 4, !dbg !11858
  %55 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11859
  %56 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %55, i32 0, i32 1, !dbg !11860
  store i32 %54, i32* %56, align 4, !dbg !11861
  %57 = load i32, i32* %9, align 4, !dbg !11862
  %58 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11863
  %59 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %58, i32 0, i32 2, !dbg !11864
  store i32 %57, i32* %59, align 8, !dbg !11865
  %60 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11866
  %61 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %60, i32 0, i32 4, !dbg !11867
  store i32 1, i32* %61, align 8, !dbg !11868
  %62 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !11869
  store %struct._Jbig2Image* %62, %struct._Jbig2Image** %4, align 8, !dbg !11870
  br label %63, !dbg !11870

; <label>:63:                                     ; preds = %50, %39, %17
  %64 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11871
  ret %struct._Jbig2Image* %64, !dbg !11871
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_image_clone(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*) #0 !dbg !11872 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Image*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !11875, metadata !DIExpression()), !dbg !11876
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %4, metadata !11877, metadata !DIExpression()), !dbg !11878
  %5 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11879
  %6 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %5, i32 0, i32 4, !dbg !11880
  %7 = load i32, i32* %6, align 8, !dbg !11881
  %8 = add nsw i32 %7, 1, !dbg !11881
  store i32 %8, i32* %6, align 8, !dbg !11881
  %9 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11882
  ret %struct._Jbig2Image* %9, !dbg !11883
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_image_release(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*) #0 !dbg !11884 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Image*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !11887, metadata !DIExpression()), !dbg !11888
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %4, metadata !11889, metadata !DIExpression()), !dbg !11890
  %5 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11891
  %6 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %5, i32 0, i32 4, !dbg !11892
  %7 = load i32, i32* %6, align 8, !dbg !11893
  %8 = add nsw i32 %7, -1, !dbg !11893
  store i32 %8, i32* %6, align 8, !dbg !11893
  %9 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11894
  %10 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %9, i32 0, i32 4, !dbg !11896
  %11 = load i32, i32* %10, align 8, !dbg !11896
  %12 = icmp ne i32 %11, 0, !dbg !11894
  br i1 %12, label %16, label %13, !dbg !11897

; <label>:13:                                     ; preds = %2
  %14 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !11898
  %15 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11899
  call void @jbig2_image_free(%struct._Jbig2Ctx.11* %14, %struct._Jbig2Image* %15), !dbg !11900
  br label %16, !dbg !11900

; <label>:16:                                     ; preds = %13, %2
  ret void, !dbg !11901
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_image_free(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*) #0 !dbg !11902 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Image*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !11903, metadata !DIExpression()), !dbg !11904
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %4, metadata !11905, metadata !DIExpression()), !dbg !11906
  %5 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !11907
  %6 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %5, i32 0, i32 0, !dbg !11908
  %7 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %6, align 8, !dbg !11908
  %8 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11909
  %9 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %8, i32 0, i32 3, !dbg !11910
  %10 = load i8*, i8** %9, align 8, !dbg !11910
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %7, i8* %10), !dbg !11911
  %11 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !11912
  %12 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %11, i32 0, i32 0, !dbg !11913
  %13 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %12, align 8, !dbg !11913
  %14 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !11914
  %15 = bitcast %struct._Jbig2Image* %14 to i8*, !dbg !11914
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %13, i8* %15), !dbg !11915
  ret void, !dbg !11916
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_image_resize(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*, i32, i32) #0 !dbg !11917 {
  %5 = alloca %struct._Jbig2Image*, align 8
  %6 = alloca %struct._Jbig2Ctx.11*, align 8
  %7 = alloca %struct._Jbig2Image*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %6, metadata !11920, metadata !DIExpression()), !dbg !11921
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %7, metadata !11922, metadata !DIExpression()), !dbg !11923
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11924, metadata !DIExpression()), !dbg !11925
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11926, metadata !DIExpression()), !dbg !11927
  %10 = load i32, i32* %8, align 4, !dbg !11928
  %11 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11930
  %12 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %11, i32 0, i32 0, !dbg !11931
  %13 = load i32, i32* %12, align 8, !dbg !11931
  %14 = icmp eq i32 %10, %13, !dbg !11932
  br i1 %14, label %15, label %71, !dbg !11933

; <label>:15:                                     ; preds = %4
  %16 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !11934
  %17 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %16, i32 0, i32 0, !dbg !11936
  %18 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %17, align 8, !dbg !11936
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11937
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 3, !dbg !11938
  %21 = load i8*, i8** %20, align 8, !dbg !11938
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11939
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 2, !dbg !11940
  %24 = load i32, i32* %23, align 8, !dbg !11940
  %25 = load i32, i32* %9, align 4, !dbg !11941
  %26 = mul nsw i32 %24, %25, !dbg !11942
  %27 = sext i32 %26 to i64, !dbg !11939
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !11943
  %28 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i8*, i64)* @jbig2_realloc to i8* (%struct._Jbig2Allocator*, i8*, i64)*)(%struct._Jbig2Allocator* %18, i8* %21, i64 %27), !dbg !11943
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !11944
  %29 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11944
  %30 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %29, i32 0, i32 3, !dbg !11945
  store i8* %28, i8** %30, align 8, !dbg !11946
  %31 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11947
  %32 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %31, i32 0, i32 3, !dbg !11949
  %33 = load i8*, i8** %32, align 8, !dbg !11949
  %34 = icmp eq i8* %33, null, !dbg !11950
  br i1 %34, label %35, label %38, !dbg !11951

; <label>:35:                                     ; preds = %15
  %36 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !11952
  %37 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %36, i32 3, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.236, i32 0, i32 0)), !dbg !11954
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %5, align 8, !dbg !11955
  br label %75, !dbg !11955

; <label>:38:                                     ; preds = %15
  %39 = load i32, i32* %9, align 4, !dbg !11956
  %40 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11958
  %41 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %40, i32 0, i32 1, !dbg !11959
  %42 = load i32, i32* %41, align 4, !dbg !11959
  %43 = icmp sgt i32 %39, %42, !dbg !11960
  br i1 %43, label %44, label %67, !dbg !11961

; <label>:44:                                     ; preds = %38
  %45 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11962
  %46 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %45, i32 0, i32 3, !dbg !11964
  %47 = load i8*, i8** %46, align 8, !dbg !11964
  %48 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11965
  %49 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %48, i32 0, i32 1, !dbg !11966
  %50 = load i32, i32* %49, align 4, !dbg !11966
  %51 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11967
  %52 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %51, i32 0, i32 2, !dbg !11968
  %53 = load i32, i32* %52, align 8, !dbg !11968
  %54 = mul nsw i32 %50, %53, !dbg !11969
  %55 = sext i32 %54 to i64, !dbg !11970
  %56 = getelementptr inbounds i8, i8* %47, i64 %55, !dbg !11970
  %57 = load i32, i32* %9, align 4, !dbg !11971
  %58 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11972
  %59 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %58, i32 0, i32 1, !dbg !11973
  %60 = load i32, i32* %59, align 4, !dbg !11973
  %61 = sub nsw i32 %57, %60, !dbg !11974
  %62 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11975
  %63 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %62, i32 0, i32 2, !dbg !11976
  %64 = load i32, i32* %63, align 8, !dbg !11976
  %65 = mul nsw i32 %61, %64, !dbg !11977
  %66 = sext i32 %65 to i64, !dbg !11978
  call void @llvm.memset.p0i8.i64(i8* align 1 %56, i8 0, i64 %66, i1 false), !dbg !11979
  br label %67, !dbg !11980

; <label>:67:                                     ; preds = %44, %38
  %68 = load i32, i32* %9, align 4, !dbg !11981
  %69 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !11982
  %70 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %69, i32 0, i32 1, !dbg !11983
  store i32 %68, i32* %70, align 4, !dbg !11984
  br label %74, !dbg !11985

; <label>:71:                                     ; preds = %4
  %72 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %6, align 8, !dbg !11986
  %73 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %72, i32 2, i32 -1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.237, i32 0, i32 0)), !dbg !11988
  br label %74

; <label>:74:                                     ; preds = %71, %67
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %5, align 8, !dbg !11989
  br label %75, !dbg !11989

; <label>:75:                                     ; preds = %74, %35
  %76 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !11990
  ret %struct._Jbig2Image* %76, !dbg !11990
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_image_compose_unopt(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*, %struct._Jbig2Image*, i32, i32, i32) #0 !dbg !11991 {
  %7 = alloca %struct._Jbig2Ctx.11*, align 8
  %8 = alloca %struct._Jbig2Image*, align 8
  %9 = alloca %struct._Jbig2Image*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %7, metadata !11994, metadata !DIExpression()), !dbg !11995
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %8, metadata !11996, metadata !DIExpression()), !dbg !11997
  store %struct._Jbig2Image* %2, %struct._Jbig2Image** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %9, metadata !11998, metadata !DIExpression()), !dbg !11999
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12000, metadata !DIExpression()), !dbg !12001
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12002, metadata !DIExpression()), !dbg !12003
  store i32 %5, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12004, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12006, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12008, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12010, metadata !DIExpression()), !dbg !12011
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12012
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 0, !dbg !12013
  %21 = load i32, i32* %20, align 8, !dbg !12013
  store i32 %21, i32* %15, align 4, !dbg !12011
  call void @llvm.dbg.declare(metadata i32* %16, metadata !12014, metadata !DIExpression()), !dbg !12015
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12016
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 1, !dbg !12017
  %24 = load i32, i32* %23, align 4, !dbg !12017
  store i32 %24, i32* %16, align 4, !dbg !12015
  call void @llvm.dbg.declare(metadata i32* %17, metadata !12018, metadata !DIExpression()), !dbg !12019
  store i32 0, i32* %17, align 4, !dbg !12019
  call void @llvm.dbg.declare(metadata i32* %18, metadata !12020, metadata !DIExpression()), !dbg !12021
  store i32 0, i32* %18, align 4, !dbg !12021
  %25 = load i32, i32* %10, align 4, !dbg !12022
  %26 = icmp slt i32 %25, 0, !dbg !12024
  br i1 %26, label %27, label %36, !dbg !12025

; <label>:27:                                     ; preds = %6
  %28 = load i32, i32* %10, align 4, !dbg !12026
  %29 = sub nsw i32 0, %28, !dbg !12028
  %30 = load i32, i32* %17, align 4, !dbg !12029
  %31 = add nsw i32 %30, %29, !dbg !12029
  store i32 %31, i32* %17, align 4, !dbg !12029
  %32 = load i32, i32* %10, align 4, !dbg !12030
  %33 = sub nsw i32 0, %32, !dbg !12031
  %34 = load i32, i32* %15, align 4, !dbg !12032
  %35 = sub nsw i32 %34, %33, !dbg !12032
  store i32 %35, i32* %15, align 4, !dbg !12032
  store i32 0, i32* %10, align 4, !dbg !12033
  br label %36, !dbg !12034

; <label>:36:                                     ; preds = %27, %6
  %37 = load i32, i32* %11, align 4, !dbg !12035
  %38 = icmp slt i32 %37, 0, !dbg !12037
  br i1 %38, label %39, label %48, !dbg !12038

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* %11, align 4, !dbg !12039
  %41 = sub nsw i32 0, %40, !dbg !12041
  %42 = load i32, i32* %18, align 4, !dbg !12042
  %43 = add nsw i32 %42, %41, !dbg !12042
  store i32 %43, i32* %18, align 4, !dbg !12042
  %44 = load i32, i32* %11, align 4, !dbg !12043
  %45 = sub nsw i32 0, %44, !dbg !12044
  %46 = load i32, i32* %16, align 4, !dbg !12045
  %47 = sub nsw i32 %46, %45, !dbg !12045
  store i32 %47, i32* %16, align 4, !dbg !12045
  store i32 0, i32* %11, align 4, !dbg !12046
  br label %48, !dbg !12047

; <label>:48:                                     ; preds = %39, %36
  %49 = load i32, i32* %10, align 4, !dbg !12048
  %50 = load i32, i32* %15, align 4, !dbg !12050
  %51 = add nsw i32 %49, %50, !dbg !12051
  %52 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12052
  %53 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %52, i32 0, i32 0, !dbg !12053
  %54 = load i32, i32* %53, align 8, !dbg !12053
  %55 = icmp sge i32 %51, %54, !dbg !12054
  br i1 %55, label %56, label %62, !dbg !12055

; <label>:56:                                     ; preds = %48
  %57 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12056
  %58 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %57, i32 0, i32 0, !dbg !12057
  %59 = load i32, i32* %58, align 8, !dbg !12057
  %60 = load i32, i32* %10, align 4, !dbg !12058
  %61 = sub nsw i32 %59, %60, !dbg !12059
  store i32 %61, i32* %15, align 4, !dbg !12060
  br label %62, !dbg !12061

; <label>:62:                                     ; preds = %56, %48
  %63 = load i32, i32* %11, align 4, !dbg !12062
  %64 = load i32, i32* %16, align 4, !dbg !12064
  %65 = add nsw i32 %63, %64, !dbg !12065
  %66 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12066
  %67 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %66, i32 0, i32 1, !dbg !12067
  %68 = load i32, i32* %67, align 4, !dbg !12067
  %69 = icmp sge i32 %65, %68, !dbg !12068
  br i1 %69, label %70, label %76, !dbg !12069

; <label>:70:                                     ; preds = %62
  %71 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12070
  %72 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %71, i32 0, i32 1, !dbg !12071
  %73 = load i32, i32* %72, align 4, !dbg !12071
  %74 = load i32, i32* %11, align 4, !dbg !12072
  %75 = sub nsw i32 %73, %74, !dbg !12073
  store i32 %75, i32* %16, align 4, !dbg !12074
  br label %76, !dbg !12075

; <label>:76:                                     ; preds = %70, %62
  %77 = load i32, i32* %12, align 4, !dbg !12076
  switch i32 %77, label %290 [
    i32 0, label %78
    i32 1, label %122
    i32 2, label %166
    i32 3, label %210
    i32 4, label %255
  ], !dbg !12077

; <label>:78:                                     ; preds = %76
  store i32 0, i32* %14, align 4, !dbg !12078
  br label %79, !dbg !12081

; <label>:79:                                     ; preds = %118, %78
  %80 = load i32, i32* %14, align 4, !dbg !12082
  %81 = load i32, i32* %16, align 4, !dbg !12084
  %82 = icmp slt i32 %80, %81, !dbg !12085
  br i1 %82, label %83, label %121, !dbg !12086

; <label>:83:                                     ; preds = %79
  store i32 0, i32* %13, align 4, !dbg !12087
  br label %84, !dbg !12090

; <label>:84:                                     ; preds = %114, %83
  %85 = load i32, i32* %13, align 4, !dbg !12091
  %86 = load i32, i32* %15, align 4, !dbg !12093
  %87 = icmp slt i32 %85, %86, !dbg !12094
  br i1 %87, label %88, label %117, !dbg !12095

; <label>:88:                                     ; preds = %84
  %89 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12096
  %90 = load i32, i32* %13, align 4, !dbg !12098
  %91 = load i32, i32* %10, align 4, !dbg !12099
  %92 = add nsw i32 %90, %91, !dbg !12100
  %93 = load i32, i32* %14, align 4, !dbg !12101
  %94 = load i32, i32* %11, align 4, !dbg !12102
  %95 = add nsw i32 %93, %94, !dbg !12103
  %96 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12104
  %97 = load i32, i32* %13, align 4, !dbg !12105
  %98 = load i32, i32* %17, align 4, !dbg !12106
  %99 = add nsw i32 %97, %98, !dbg !12107
  %100 = load i32, i32* %14, align 4, !dbg !12108
  %101 = load i32, i32* %18, align 4, !dbg !12109
  %102 = add nsw i32 %100, %101, !dbg !12110
  %103 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %96, i32 %99, i32 %102), !dbg !12111
  %104 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12112
  %105 = load i32, i32* %13, align 4, !dbg !12113
  %106 = load i32, i32* %10, align 4, !dbg !12114
  %107 = add nsw i32 %105, %106, !dbg !12115
  %108 = load i32, i32* %14, align 4, !dbg !12116
  %109 = load i32, i32* %11, align 4, !dbg !12117
  %110 = add nsw i32 %108, %109, !dbg !12118
  %111 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %104, i32 %107, i32 %110), !dbg !12119
  %112 = or i32 %103, %111, !dbg !12120
  %113 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %89, i32 %92, i32 %95, i32 %112), !dbg !12121
  br label %114, !dbg !12122

; <label>:114:                                    ; preds = %88
  %115 = load i32, i32* %13, align 4, !dbg !12123
  %116 = add nsw i32 %115, 1, !dbg !12123
  store i32 %116, i32* %13, align 4, !dbg !12123
  br label %84, !dbg !12124, !llvm.loop !12125

; <label>:117:                                    ; preds = %84
  br label %118, !dbg !12127

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* %14, align 4, !dbg !12128
  %120 = add nsw i32 %119, 1, !dbg !12128
  store i32 %120, i32* %14, align 4, !dbg !12128
  br label %79, !dbg !12129, !llvm.loop !12130

; <label>:121:                                    ; preds = %79
  br label %290, !dbg !12132

; <label>:122:                                    ; preds = %76
  store i32 0, i32* %14, align 4, !dbg !12133
  br label %123, !dbg !12135

; <label>:123:                                    ; preds = %162, %122
  %124 = load i32, i32* %14, align 4, !dbg !12136
  %125 = load i32, i32* %16, align 4, !dbg !12138
  %126 = icmp slt i32 %124, %125, !dbg !12139
  br i1 %126, label %127, label %165, !dbg !12140

; <label>:127:                                    ; preds = %123
  store i32 0, i32* %13, align 4, !dbg !12141
  br label %128, !dbg !12144

; <label>:128:                                    ; preds = %158, %127
  %129 = load i32, i32* %13, align 4, !dbg !12145
  %130 = load i32, i32* %15, align 4, !dbg !12147
  %131 = icmp slt i32 %129, %130, !dbg !12148
  br i1 %131, label %132, label %161, !dbg !12149

; <label>:132:                                    ; preds = %128
  %133 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12150
  %134 = load i32, i32* %13, align 4, !dbg !12152
  %135 = load i32, i32* %10, align 4, !dbg !12153
  %136 = add nsw i32 %134, %135, !dbg !12154
  %137 = load i32, i32* %14, align 4, !dbg !12155
  %138 = load i32, i32* %11, align 4, !dbg !12156
  %139 = add nsw i32 %137, %138, !dbg !12157
  %140 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12158
  %141 = load i32, i32* %13, align 4, !dbg !12159
  %142 = load i32, i32* %17, align 4, !dbg !12160
  %143 = add nsw i32 %141, %142, !dbg !12161
  %144 = load i32, i32* %14, align 4, !dbg !12162
  %145 = load i32, i32* %18, align 4, !dbg !12163
  %146 = add nsw i32 %144, %145, !dbg !12164
  %147 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %140, i32 %143, i32 %146), !dbg !12165
  %148 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12166
  %149 = load i32, i32* %13, align 4, !dbg !12167
  %150 = load i32, i32* %10, align 4, !dbg !12168
  %151 = add nsw i32 %149, %150, !dbg !12169
  %152 = load i32, i32* %14, align 4, !dbg !12170
  %153 = load i32, i32* %11, align 4, !dbg !12171
  %154 = add nsw i32 %152, %153, !dbg !12172
  %155 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %148, i32 %151, i32 %154), !dbg !12173
  %156 = and i32 %147, %155, !dbg !12174
  %157 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %133, i32 %136, i32 %139, i32 %156), !dbg !12175
  br label %158, !dbg !12176

; <label>:158:                                    ; preds = %132
  %159 = load i32, i32* %13, align 4, !dbg !12177
  %160 = add nsw i32 %159, 1, !dbg !12177
  store i32 %160, i32* %13, align 4, !dbg !12177
  br label %128, !dbg !12178, !llvm.loop !12179

; <label>:161:                                    ; preds = %128
  br label %162, !dbg !12181

; <label>:162:                                    ; preds = %161
  %163 = load i32, i32* %14, align 4, !dbg !12182
  %164 = add nsw i32 %163, 1, !dbg !12182
  store i32 %164, i32* %14, align 4, !dbg !12182
  br label %123, !dbg !12183, !llvm.loop !12184

; <label>:165:                                    ; preds = %123
  br label %290, !dbg !12186

; <label>:166:                                    ; preds = %76
  store i32 0, i32* %14, align 4, !dbg !12187
  br label %167, !dbg !12189

; <label>:167:                                    ; preds = %206, %166
  %168 = load i32, i32* %14, align 4, !dbg !12190
  %169 = load i32, i32* %16, align 4, !dbg !12192
  %170 = icmp slt i32 %168, %169, !dbg !12193
  br i1 %170, label %171, label %209, !dbg !12194

; <label>:171:                                    ; preds = %167
  store i32 0, i32* %13, align 4, !dbg !12195
  br label %172, !dbg !12198

; <label>:172:                                    ; preds = %202, %171
  %173 = load i32, i32* %13, align 4, !dbg !12199
  %174 = load i32, i32* %15, align 4, !dbg !12201
  %175 = icmp slt i32 %173, %174, !dbg !12202
  br i1 %175, label %176, label %205, !dbg !12203

; <label>:176:                                    ; preds = %172
  %177 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12204
  %178 = load i32, i32* %13, align 4, !dbg !12206
  %179 = load i32, i32* %10, align 4, !dbg !12207
  %180 = add nsw i32 %178, %179, !dbg !12208
  %181 = load i32, i32* %14, align 4, !dbg !12209
  %182 = load i32, i32* %11, align 4, !dbg !12210
  %183 = add nsw i32 %181, %182, !dbg !12211
  %184 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12212
  %185 = load i32, i32* %13, align 4, !dbg !12213
  %186 = load i32, i32* %17, align 4, !dbg !12214
  %187 = add nsw i32 %185, %186, !dbg !12215
  %188 = load i32, i32* %14, align 4, !dbg !12216
  %189 = load i32, i32* %18, align 4, !dbg !12217
  %190 = add nsw i32 %188, %189, !dbg !12218
  %191 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %184, i32 %187, i32 %190), !dbg !12219
  %192 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12220
  %193 = load i32, i32* %13, align 4, !dbg !12221
  %194 = load i32, i32* %10, align 4, !dbg !12222
  %195 = add nsw i32 %193, %194, !dbg !12223
  %196 = load i32, i32* %14, align 4, !dbg !12224
  %197 = load i32, i32* %11, align 4, !dbg !12225
  %198 = add nsw i32 %196, %197, !dbg !12226
  %199 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %192, i32 %195, i32 %198), !dbg !12227
  %200 = xor i32 %191, %199, !dbg !12228
  %201 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %177, i32 %180, i32 %183, i32 %200), !dbg !12229
  br label %202, !dbg !12230

; <label>:202:                                    ; preds = %176
  %203 = load i32, i32* %13, align 4, !dbg !12231
  %204 = add nsw i32 %203, 1, !dbg !12231
  store i32 %204, i32* %13, align 4, !dbg !12231
  br label %172, !dbg !12232, !llvm.loop !12233

; <label>:205:                                    ; preds = %172
  br label %206, !dbg !12235

; <label>:206:                                    ; preds = %205
  %207 = load i32, i32* %14, align 4, !dbg !12236
  %208 = add nsw i32 %207, 1, !dbg !12236
  store i32 %208, i32* %14, align 4, !dbg !12236
  br label %167, !dbg !12237, !llvm.loop !12238

; <label>:209:                                    ; preds = %167
  br label %290, !dbg !12240

; <label>:210:                                    ; preds = %76
  store i32 0, i32* %14, align 4, !dbg !12241
  br label %211, !dbg !12243

; <label>:211:                                    ; preds = %251, %210
  %212 = load i32, i32* %14, align 4, !dbg !12244
  %213 = load i32, i32* %16, align 4, !dbg !12246
  %214 = icmp slt i32 %212, %213, !dbg !12247
  br i1 %214, label %215, label %254, !dbg !12248

; <label>:215:                                    ; preds = %211
  store i32 0, i32* %13, align 4, !dbg !12249
  br label %216, !dbg !12252

; <label>:216:                                    ; preds = %247, %215
  %217 = load i32, i32* %13, align 4, !dbg !12253
  %218 = load i32, i32* %15, align 4, !dbg !12255
  %219 = icmp slt i32 %217, %218, !dbg !12256
  br i1 %219, label %220, label %250, !dbg !12257

; <label>:220:                                    ; preds = %216
  %221 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12258
  %222 = load i32, i32* %13, align 4, !dbg !12260
  %223 = load i32, i32* %10, align 4, !dbg !12261
  %224 = add nsw i32 %222, %223, !dbg !12262
  %225 = load i32, i32* %14, align 4, !dbg !12263
  %226 = load i32, i32* %11, align 4, !dbg !12264
  %227 = add nsw i32 %225, %226, !dbg !12265
  %228 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12266
  %229 = load i32, i32* %13, align 4, !dbg !12267
  %230 = load i32, i32* %17, align 4, !dbg !12268
  %231 = add nsw i32 %229, %230, !dbg !12269
  %232 = load i32, i32* %14, align 4, !dbg !12270
  %233 = load i32, i32* %18, align 4, !dbg !12271
  %234 = add nsw i32 %232, %233, !dbg !12272
  %235 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %228, i32 %231, i32 %234), !dbg !12273
  %236 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12274
  %237 = load i32, i32* %13, align 4, !dbg !12275
  %238 = load i32, i32* %10, align 4, !dbg !12276
  %239 = add nsw i32 %237, %238, !dbg !12277
  %240 = load i32, i32* %14, align 4, !dbg !12278
  %241 = load i32, i32* %11, align 4, !dbg !12279
  %242 = add nsw i32 %240, %241, !dbg !12280
  %243 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %236, i32 %239, i32 %242), !dbg !12281
  %244 = xor i32 %235, %243, !dbg !12282
  %245 = xor i32 %244, -1, !dbg !12283
  %246 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %221, i32 %224, i32 %227, i32 %245), !dbg !12284
  br label %247, !dbg !12285

; <label>:247:                                    ; preds = %220
  %248 = load i32, i32* %13, align 4, !dbg !12286
  %249 = add nsw i32 %248, 1, !dbg !12286
  store i32 %249, i32* %13, align 4, !dbg !12286
  br label %216, !dbg !12287, !llvm.loop !12288

; <label>:250:                                    ; preds = %216
  br label %251, !dbg !12290

; <label>:251:                                    ; preds = %250
  %252 = load i32, i32* %14, align 4, !dbg !12291
  %253 = add nsw i32 %252, 1, !dbg !12291
  store i32 %253, i32* %14, align 4, !dbg !12291
  br label %211, !dbg !12292, !llvm.loop !12293

; <label>:254:                                    ; preds = %211
  br label %290, !dbg !12295

; <label>:255:                                    ; preds = %76
  store i32 0, i32* %14, align 4, !dbg !12296
  br label %256, !dbg !12298

; <label>:256:                                    ; preds = %286, %255
  %257 = load i32, i32* %14, align 4, !dbg !12299
  %258 = load i32, i32* %16, align 4, !dbg !12301
  %259 = icmp slt i32 %257, %258, !dbg !12302
  br i1 %259, label %260, label %289, !dbg !12303

; <label>:260:                                    ; preds = %256
  store i32 0, i32* %13, align 4, !dbg !12304
  br label %261, !dbg !12307

; <label>:261:                                    ; preds = %282, %260
  %262 = load i32, i32* %13, align 4, !dbg !12308
  %263 = load i32, i32* %15, align 4, !dbg !12310
  %264 = icmp slt i32 %262, %263, !dbg !12311
  br i1 %264, label %265, label %285, !dbg !12312

; <label>:265:                                    ; preds = %261
  %266 = load %struct._Jbig2Image*, %struct._Jbig2Image** %8, align 8, !dbg !12313
  %267 = load i32, i32* %13, align 4, !dbg !12315
  %268 = load i32, i32* %10, align 4, !dbg !12316
  %269 = add nsw i32 %267, %268, !dbg !12317
  %270 = load i32, i32* %14, align 4, !dbg !12318
  %271 = load i32, i32* %11, align 4, !dbg !12319
  %272 = add nsw i32 %270, %271, !dbg !12320
  %273 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12321
  %274 = load i32, i32* %13, align 4, !dbg !12322
  %275 = load i32, i32* %17, align 4, !dbg !12323
  %276 = add nsw i32 %274, %275, !dbg !12324
  %277 = load i32, i32* %14, align 4, !dbg !12325
  %278 = load i32, i32* %18, align 4, !dbg !12326
  %279 = add nsw i32 %277, %278, !dbg !12327
  %280 = call i32 @jbig2_image_get_pixel(%struct._Jbig2Image* %273, i32 %276, i32 %279), !dbg !12328
  %281 = call i32 @jbig2_image_set_pixel(%struct._Jbig2Image* %266, i32 %269, i32 %272, i32 %280), !dbg !12329
  br label %282, !dbg !12330

; <label>:282:                                    ; preds = %265
  %283 = load i32, i32* %13, align 4, !dbg !12331
  %284 = add nsw i32 %283, 1, !dbg !12331
  store i32 %284, i32* %13, align 4, !dbg !12331
  br label %261, !dbg !12332, !llvm.loop !12333

; <label>:285:                                    ; preds = %261
  br label %286, !dbg !12335

; <label>:286:                                    ; preds = %285
  %287 = load i32, i32* %14, align 4, !dbg !12336
  %288 = add nsw i32 %287, 1, !dbg !12336
  store i32 %288, i32* %14, align 4, !dbg !12336
  br label %256, !dbg !12337, !llvm.loop !12338

; <label>:289:                                    ; preds = %256
  br label %290, !dbg !12340

; <label>:290:                                    ; preds = %289, %254, %209, %165, %121, %76
  ret i32 0, !dbg !12341
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_image_get_pixel(%struct._Jbig2Image*, i32, i32) #0 !dbg !12342 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Image*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct._Jbig2Image* %0, %struct._Jbig2Image** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %5, metadata !12345, metadata !DIExpression()), !dbg !12346
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12347, metadata !DIExpression()), !dbg !12348
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12349, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12351, metadata !DIExpression()), !dbg !12352
  %12 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12353
  %13 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %12, i32 0, i32 0, !dbg !12354
  %14 = load i32, i32* %13, align 8, !dbg !12354
  store i32 %14, i32* %8, align 4, !dbg !12352
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12355, metadata !DIExpression()), !dbg !12356
  %15 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12357
  %16 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %15, i32 0, i32 1, !dbg !12358
  %17 = load i32, i32* %16, align 4, !dbg !12358
  store i32 %17, i32* %9, align 4, !dbg !12356
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12359, metadata !DIExpression()), !dbg !12360
  %18 = load i32, i32* %6, align 4, !dbg !12361
  %19 = ashr i32 %18, 3, !dbg !12362
  %20 = load i32, i32* %7, align 4, !dbg !12363
  %21 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12364
  %22 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %21, i32 0, i32 2, !dbg !12365
  %23 = load i32, i32* %22, align 8, !dbg !12365
  %24 = mul nsw i32 %20, %23, !dbg !12366
  %25 = add nsw i32 %19, %24, !dbg !12367
  store i32 %25, i32* %10, align 4, !dbg !12360
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12368, metadata !DIExpression()), !dbg !12369
  %26 = load i32, i32* %6, align 4, !dbg !12370
  %27 = and i32 %26, 7, !dbg !12371
  %28 = sub nsw i32 7, %27, !dbg !12372
  store i32 %28, i32* %11, align 4, !dbg !12369
  %29 = load i32, i32* %6, align 4, !dbg !12373
  %30 = icmp slt i32 %29, 0, !dbg !12375
  br i1 %30, label %35, label %31, !dbg !12376

; <label>:31:                                     ; preds = %3
  %32 = load i32, i32* %6, align 4, !dbg !12377
  %33 = load i32, i32* %8, align 4, !dbg !12378
  %34 = icmp sge i32 %32, %33, !dbg !12379
  br i1 %34, label %35, label %36, !dbg !12380

; <label>:35:                                     ; preds = %31, %3
  store i32 0, i32* %4, align 4, !dbg !12381
  br label %56, !dbg !12381

; <label>:36:                                     ; preds = %31
  %37 = load i32, i32* %7, align 4, !dbg !12382
  %38 = icmp slt i32 %37, 0, !dbg !12384
  br i1 %38, label %43, label %39, !dbg !12385

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* %7, align 4, !dbg !12386
  %41 = load i32, i32* %9, align 4, !dbg !12387
  %42 = icmp sge i32 %40, %41, !dbg !12388
  br i1 %42, label %43, label %44, !dbg !12389

; <label>:43:                                     ; preds = %39, %36
  store i32 0, i32* %4, align 4, !dbg !12390
  br label %56, !dbg !12390

; <label>:44:                                     ; preds = %39
  %45 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12391
  %46 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %45, i32 0, i32 3, !dbg !12392
  %47 = load i8*, i8** %46, align 8, !dbg !12392
  %48 = load i32, i32* %10, align 4, !dbg !12393
  %49 = sext i32 %48 to i64, !dbg !12391
  %50 = getelementptr inbounds i8, i8* %47, i64 %49, !dbg !12391
  %51 = load i8, i8* %50, align 1, !dbg !12391
  %52 = zext i8 %51 to i32, !dbg !12391
  %53 = load i32, i32* %11, align 4, !dbg !12394
  %54 = ashr i32 %52, %53, !dbg !12395
  %55 = and i32 %54, 1, !dbg !12396
  store i32 %55, i32* %4, align 4, !dbg !12397
  br label %56, !dbg !12397

; <label>:56:                                     ; preds = %44, %43, %35
  %57 = load i32, i32* %4, align 4, !dbg !12398
  ret i32 %57, !dbg !12398
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_image_set_pixel(%struct._Jbig2Image*, i32, i32, i32) #0 !dbg !12399 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._Jbig2Image*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct._Jbig2Image* %0, %struct._Jbig2Image** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %6, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12404, metadata !DIExpression()), !dbg !12405
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12406, metadata !DIExpression()), !dbg !12407
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12408, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12410, metadata !DIExpression()), !dbg !12411
  %16 = load %struct._Jbig2Image*, %struct._Jbig2Image** %6, align 8, !dbg !12412
  %17 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %16, i32 0, i32 0, !dbg !12413
  %18 = load i32, i32* %17, align 8, !dbg !12413
  store i32 %18, i32* %10, align 4, !dbg !12411
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12414, metadata !DIExpression()), !dbg !12415
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %6, align 8, !dbg !12416
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 1, !dbg !12417
  %21 = load i32, i32* %20, align 4, !dbg !12417
  store i32 %21, i32* %11, align 4, !dbg !12415
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12418, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12420, metadata !DIExpression()), !dbg !12421
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12422, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12424, metadata !DIExpression()), !dbg !12425
  %22 = load i32, i32* %7, align 4, !dbg !12426
  %23 = icmp slt i32 %22, 0, !dbg !12428
  br i1 %23, label %28, label %24, !dbg !12429

; <label>:24:                                     ; preds = %4
  %25 = load i32, i32* %7, align 4, !dbg !12430
  %26 = load i32, i32* %10, align 4, !dbg !12431
  %27 = icmp sge i32 %25, %26, !dbg !12432
  br i1 %27, label %28, label %29, !dbg !12433

; <label>:28:                                     ; preds = %24, %4
  store i32 0, i32* %5, align 4, !dbg !12434
  br label %74, !dbg !12434

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* %8, align 4, !dbg !12435
  %31 = icmp slt i32 %30, 0, !dbg !12437
  br i1 %31, label %36, label %32, !dbg !12438

; <label>:32:                                     ; preds = %29
  %33 = load i32, i32* %8, align 4, !dbg !12439
  %34 = load i32, i32* %11, align 4, !dbg !12440
  %35 = icmp sge i32 %33, %34, !dbg !12441
  br i1 %35, label %36, label %37, !dbg !12442

; <label>:36:                                     ; preds = %32, %29
  store i32 0, i32* %5, align 4, !dbg !12443
  br label %74, !dbg !12443

; <label>:37:                                     ; preds = %32
  %38 = load i32, i32* %7, align 4, !dbg !12444
  %39 = ashr i32 %38, 3, !dbg !12445
  %40 = load i32, i32* %8, align 4, !dbg !12446
  %41 = load %struct._Jbig2Image*, %struct._Jbig2Image** %6, align 8, !dbg !12447
  %42 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %41, i32 0, i32 2, !dbg !12448
  %43 = load i32, i32* %42, align 8, !dbg !12448
  %44 = mul nsw i32 %40, %43, !dbg !12449
  %45 = add nsw i32 %39, %44, !dbg !12450
  store i32 %45, i32* %15, align 4, !dbg !12451
  %46 = load i32, i32* %7, align 4, !dbg !12452
  %47 = and i32 %46, 7, !dbg !12453
  %48 = sub nsw i32 7, %47, !dbg !12454
  store i32 %48, i32* %14, align 4, !dbg !12455
  %49 = load i32, i32* %14, align 4, !dbg !12456
  %50 = shl i32 1, %49, !dbg !12457
  %51 = xor i32 %50, 255, !dbg !12458
  store i32 %51, i32* %13, align 4, !dbg !12459
  %52 = load %struct._Jbig2Image*, %struct._Jbig2Image** %6, align 8, !dbg !12460
  %53 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %52, i32 0, i32 3, !dbg !12461
  %54 = load i8*, i8** %53, align 8, !dbg !12461
  %55 = load i32, i32* %15, align 4, !dbg !12462
  %56 = sext i32 %55 to i64, !dbg !12460
  %57 = getelementptr inbounds i8, i8* %54, i64 %56, !dbg !12460
  %58 = load i8, i8* %57, align 1, !dbg !12460
  %59 = zext i8 %58 to i32, !dbg !12460
  %60 = load i32, i32* %13, align 4, !dbg !12463
  %61 = and i32 %59, %60, !dbg !12464
  store i32 %61, i32* %12, align 4, !dbg !12465
  %62 = load i32, i32* %12, align 4, !dbg !12466
  %63 = load i32, i32* %9, align 4, !dbg !12467
  %64 = load i32, i32* %14, align 4, !dbg !12468
  %65 = shl i32 %63, %64, !dbg !12469
  %66 = or i32 %62, %65, !dbg !12470
  %67 = trunc i32 %66 to i8, !dbg !12466
  %68 = load %struct._Jbig2Image*, %struct._Jbig2Image** %6, align 8, !dbg !12471
  %69 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %68, i32 0, i32 3, !dbg !12472
  %70 = load i8*, i8** %69, align 8, !dbg !12472
  %71 = load i32, i32* %15, align 4, !dbg !12473
  %72 = sext i32 %71 to i64, !dbg !12471
  %73 = getelementptr inbounds i8, i8* %70, i64 %72, !dbg !12471
  store i8 %67, i8* %73, align 1, !dbg !12474
  store i32 1, i32* %5, align 4, !dbg !12475
  br label %74, !dbg !12475

; <label>:74:                                     ; preds = %37, %36, %28
  %75 = load i32, i32* %5, align 4, !dbg !12476
  ret i32 %75, !dbg !12476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_image_compose(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*, %struct._Jbig2Image*, i32, i32, i32) #0 !dbg !12477 {
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2Ctx.11*, align 8
  %9 = alloca %struct._Jbig2Image*, align 8
  %10 = alloca %struct._Jbig2Image*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %8, metadata !12478, metadata !DIExpression()), !dbg !12479
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %9, metadata !12480, metadata !DIExpression()), !dbg !12481
  store %struct._Jbig2Image* %2, %struct._Jbig2Image** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %10, metadata !12482, metadata !DIExpression()), !dbg !12483
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12484, metadata !DIExpression()), !dbg !12485
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12486, metadata !DIExpression()), !dbg !12487
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12488, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12490, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12492, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.declare(metadata i32* %16, metadata !12494, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.declare(metadata i32* %17, metadata !12496, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.declare(metadata i32* %18, metadata !12498, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12500, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12502, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.declare(metadata i8** %21, metadata !12504, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.declare(metadata i8** %22, metadata !12506, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.declare(metadata i8** %23, metadata !12508, metadata !DIExpression()), !dbg !12509
  call void @llvm.dbg.declare(metadata i8** %24, metadata !12510, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.declare(metadata i8* %25, metadata !12512, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.declare(metadata i8* %26, metadata !12514, metadata !DIExpression()), !dbg !12515
  %28 = load i32, i32* %13, align 4, !dbg !12516
  %29 = icmp ne i32 %28, 0, !dbg !12518
  br i1 %29, label %30, label %38, !dbg !12519

; <label>:30:                                     ; preds = %6
  %31 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !12520
  %32 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12522
  %33 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12523
  %34 = load i32, i32* %11, align 4, !dbg !12524
  %35 = load i32, i32* %12, align 4, !dbg !12525
  %36 = load i32, i32* %13, align 4, !dbg !12526
  %37 = call i32 @jbig2_image_compose_unopt(%struct._Jbig2Ctx.11* %31, %struct._Jbig2Image* %32, %struct._Jbig2Image* %33, i32 %34, i32 %35, i32 %36), !dbg !12527
  store i32 %37, i32* %7, align 4, !dbg !12528
  br label %391, !dbg !12528

; <label>:38:                                     ; preds = %6
  %39 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12529
  %40 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %39, i32 0, i32 0, !dbg !12530
  %41 = load i32, i32* %40, align 8, !dbg !12530
  store i32 %41, i32* %16, align 4, !dbg !12531
  %42 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12532
  %43 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %42, i32 0, i32 1, !dbg !12533
  %44 = load i32, i32* %43, align 4, !dbg !12533
  store i32 %44, i32* %17, align 4, !dbg !12534
  %45 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12535
  %46 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %45, i32 0, i32 3, !dbg !12536
  %47 = load i8*, i8** %46, align 8, !dbg !12536
  store i8* %47, i8** %22, align 8, !dbg !12537
  %48 = load i32, i32* %11, align 4, !dbg !12538
  %49 = icmp slt i32 %48, 0, !dbg !12540
  br i1 %49, label %50, label %54, !dbg !12541

; <label>:50:                                     ; preds = %38
  %51 = load i32, i32* %11, align 4, !dbg !12542
  %52 = load i32, i32* %16, align 4, !dbg !12544
  %53 = add nsw i32 %52, %51, !dbg !12544
  store i32 %53, i32* %16, align 4, !dbg !12544
  store i32 0, i32* %11, align 4, !dbg !12545
  br label %54, !dbg !12546

; <label>:54:                                     ; preds = %50, %38
  %55 = load i32, i32* %12, align 4, !dbg !12547
  %56 = icmp slt i32 %55, 0, !dbg !12549
  br i1 %56, label %57, label %61, !dbg !12550

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %12, align 4, !dbg !12551
  %59 = load i32, i32* %17, align 4, !dbg !12553
  %60 = add nsw i32 %59, %58, !dbg !12553
  store i32 %60, i32* %17, align 4, !dbg !12553
  store i32 0, i32* %12, align 4, !dbg !12554
  br label %61, !dbg !12555

; <label>:61:                                     ; preds = %57, %54
  %62 = load i32, i32* %11, align 4, !dbg !12556
  %63 = load i32, i32* %16, align 4, !dbg !12557
  %64 = add nsw i32 %62, %63, !dbg !12558
  %65 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12559
  %66 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %65, i32 0, i32 0, !dbg !12560
  %67 = load i32, i32* %66, align 8, !dbg !12560
  %68 = icmp slt i32 %64, %67, !dbg !12561
  br i1 %68, label %69, label %71, !dbg !12562

; <label>:69:                                     ; preds = %61
  %70 = load i32, i32* %16, align 4, !dbg !12563
  br label %77, !dbg !12562

; <label>:71:                                     ; preds = %61
  %72 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12564
  %73 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %72, i32 0, i32 0, !dbg !12565
  %74 = load i32, i32* %73, align 8, !dbg !12565
  %75 = load i32, i32* %11, align 4, !dbg !12566
  %76 = sub nsw i32 %74, %75, !dbg !12567
  br label %77, !dbg !12562

; <label>:77:                                     ; preds = %71, %69
  %78 = phi i32 [ %70, %69 ], [ %76, %71 ], !dbg !12562
  store i32 %78, i32* %16, align 4, !dbg !12568
  %79 = load i32, i32* %12, align 4, !dbg !12569
  %80 = load i32, i32* %17, align 4, !dbg !12570
  %81 = add nsw i32 %79, %80, !dbg !12571
  %82 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12572
  %83 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %82, i32 0, i32 1, !dbg !12573
  %84 = load i32, i32* %83, align 4, !dbg !12573
  %85 = icmp slt i32 %81, %84, !dbg !12574
  br i1 %85, label %86, label %88, !dbg !12575

; <label>:86:                                     ; preds = %77
  %87 = load i32, i32* %17, align 4, !dbg !12576
  br label %94, !dbg !12575

; <label>:88:                                     ; preds = %77
  %89 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12577
  %90 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %89, i32 0, i32 1, !dbg !12578
  %91 = load i32, i32* %90, align 4, !dbg !12578
  %92 = load i32, i32* %12, align 4, !dbg !12579
  %93 = sub nsw i32 %91, %92, !dbg !12580
  br label %94, !dbg !12575

; <label>:94:                                     ; preds = %88, %86
  %95 = phi i32 [ %87, %86 ], [ %93, %88 ], !dbg !12575
  store i32 %95, i32* %17, align 4, !dbg !12581
  %96 = load i32, i32* %11, align 4, !dbg !12582
  %97 = ashr i32 %96, 3, !dbg !12583
  store i32 %97, i32* %18, align 4, !dbg !12584
  %98 = load i32, i32* %11, align 4, !dbg !12585
  %99 = load i32, i32* %16, align 4, !dbg !12586
  %100 = add nsw i32 %98, %99, !dbg !12587
  %101 = sub nsw i32 %100, 1, !dbg !12588
  %102 = ashr i32 %101, 3, !dbg !12589
  store i32 %102, i32* %19, align 4, !dbg !12590
  %103 = load i32, i32* %11, align 4, !dbg !12591
  %104 = and i32 %103, 7, !dbg !12592
  store i32 %104, i32* %20, align 4, !dbg !12593
  %105 = load i8*, i8** %22, align 8, !dbg !12594
  store i8* %105, i8** %21, align 8, !dbg !12595
  %106 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12596
  %107 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %106, i32 0, i32 3, !dbg !12597
  %108 = load i8*, i8** %107, align 8, !dbg !12597
  %109 = load i32, i32* %12, align 4, !dbg !12598
  %110 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12599
  %111 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %110, i32 0, i32 2, !dbg !12600
  %112 = load i32, i32* %111, align 8, !dbg !12600
  %113 = mul nsw i32 %109, %112, !dbg !12601
  %114 = sext i32 %113 to i64, !dbg !12602
  %115 = getelementptr inbounds i8, i8* %108, i64 %114, !dbg !12602
  %116 = load i32, i32* %18, align 4, !dbg !12603
  %117 = sext i32 %116 to i64, !dbg !12604
  %118 = getelementptr inbounds i8, i8* %115, i64 %117, !dbg !12604
  store i8* %118, i8** %24, align 8, !dbg !12605
  store i8* %118, i8** %23, align 8, !dbg !12606
  %119 = load i32, i32* %18, align 4, !dbg !12607
  %120 = load i32, i32* %19, align 4, !dbg !12609
  %121 = icmp eq i32 %119, %120, !dbg !12610
  br i1 %121, label %122, label %161, !dbg !12611

; <label>:122:                                    ; preds = %94
  %123 = load i32, i32* %16, align 4, !dbg !12612
  %124 = ashr i32 256, %123, !dbg !12614
  %125 = sub nsw i32 256, %124, !dbg !12615
  %126 = trunc i32 %125 to i8, !dbg !12616
  store i8 %126, i8* %25, align 1, !dbg !12617
  store i32 0, i32* %15, align 4, !dbg !12618
  br label %127, !dbg !12620

; <label>:127:                                    ; preds = %157, %122
  %128 = load i32, i32* %15, align 4, !dbg !12621
  %129 = load i32, i32* %17, align 4, !dbg !12623
  %130 = icmp slt i32 %128, %129, !dbg !12624
  br i1 %130, label %131, label %160, !dbg !12625

; <label>:131:                                    ; preds = %127
  %132 = load i8*, i8** %21, align 8, !dbg !12626
  %133 = load i8, i8* %132, align 1, !dbg !12628
  %134 = zext i8 %133 to i32, !dbg !12628
  %135 = load i8, i8* %25, align 1, !dbg !12629
  %136 = zext i8 %135 to i32, !dbg !12629
  %137 = and i32 %134, %136, !dbg !12630
  %138 = load i32, i32* %20, align 4, !dbg !12631
  %139 = ashr i32 %137, %138, !dbg !12632
  %140 = load i8*, i8** %23, align 8, !dbg !12633
  %141 = load i8, i8* %140, align 1, !dbg !12634
  %142 = zext i8 %141 to i32, !dbg !12634
  %143 = or i32 %142, %139, !dbg !12634
  %144 = trunc i32 %143 to i8, !dbg !12634
  store i8 %144, i8* %140, align 1, !dbg !12634
  %145 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12635
  %146 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %145, i32 0, i32 2, !dbg !12636
  %147 = load i32, i32* %146, align 8, !dbg !12636
  %148 = load i8*, i8** %23, align 8, !dbg !12637
  %149 = sext i32 %147 to i64, !dbg !12637
  %150 = getelementptr inbounds i8, i8* %148, i64 %149, !dbg !12637
  store i8* %150, i8** %23, align 8, !dbg !12637
  %151 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12638
  %152 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %151, i32 0, i32 2, !dbg !12639
  %153 = load i32, i32* %152, align 8, !dbg !12639
  %154 = load i8*, i8** %21, align 8, !dbg !12640
  %155 = sext i32 %153 to i64, !dbg !12640
  %156 = getelementptr inbounds i8, i8* %154, i64 %155, !dbg !12640
  store i8* %156, i8** %21, align 8, !dbg !12640
  br label %157, !dbg !12641

; <label>:157:                                    ; preds = %131
  %158 = load i32, i32* %15, align 4, !dbg !12642
  %159 = add nsw i32 %158, 1, !dbg !12642
  store i32 %159, i32* %15, align 4, !dbg !12642
  br label %127, !dbg !12643, !llvm.loop !12644

; <label>:160:                                    ; preds = %127
  br label %390, !dbg !12646

; <label>:161:                                    ; preds = %94
  %162 = load i32, i32* %20, align 4, !dbg !12647
  %163 = icmp eq i32 %162, 0, !dbg !12649
  br i1 %163, label %164, label %230, !dbg !12650

; <label>:164:                                    ; preds = %161
  %165 = load i32, i32* %16, align 4, !dbg !12651
  %166 = and i32 %165, 7, !dbg !12653
  %167 = icmp ne i32 %166, 0, !dbg !12653
  br i1 %167, label %168, label %174, !dbg !12654

; <label>:168:                                    ; preds = %164
  %169 = load i32, i32* %16, align 4, !dbg !12655
  %170 = and i32 %169, 7, !dbg !12656
  %171 = sub nsw i32 8, %170, !dbg !12657
  %172 = shl i32 1, %171, !dbg !12658
  %173 = sub nsw i32 256, %172, !dbg !12659
  br label %175, !dbg !12654

; <label>:174:                                    ; preds = %164
  br label %175, !dbg !12654

; <label>:175:                                    ; preds = %174, %168
  %176 = phi i32 [ %173, %168 ], [ 255, %174 ], !dbg !12654
  %177 = trunc i32 %176 to i8, !dbg !12654
  store i8 %177, i8* %26, align 1, !dbg !12660
  store i32 0, i32* %15, align 4, !dbg !12661
  br label %178, !dbg !12663

; <label>:178:                                    ; preds = %226, %175
  %179 = load i32, i32* %15, align 4, !dbg !12664
  %180 = load i32, i32* %17, align 4, !dbg !12666
  %181 = icmp slt i32 %179, %180, !dbg !12667
  br i1 %181, label %182, label %229, !dbg !12668

; <label>:182:                                    ; preds = %178
  %183 = load i32, i32* %18, align 4, !dbg !12669
  store i32 %183, i32* %14, align 4, !dbg !12672
  br label %184, !dbg !12673

; <label>:184:                                    ; preds = %199, %182
  %185 = load i32, i32* %14, align 4, !dbg !12674
  %186 = load i32, i32* %19, align 4, !dbg !12676
  %187 = icmp slt i32 %185, %186, !dbg !12677
  br i1 %187, label %188, label %202, !dbg !12678

; <label>:188:                                    ; preds = %184
  %189 = load i8*, i8** %21, align 8, !dbg !12679
  %190 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !12679
  store i8* %190, i8** %21, align 8, !dbg !12679
  %191 = load i8, i8* %189, align 1, !dbg !12680
  %192 = zext i8 %191 to i32, !dbg !12680
  %193 = load i8*, i8** %23, align 8, !dbg !12681
  %194 = getelementptr inbounds i8, i8* %193, i32 1, !dbg !12681
  store i8* %194, i8** %23, align 8, !dbg !12681
  %195 = load i8, i8* %193, align 1, !dbg !12682
  %196 = zext i8 %195 to i32, !dbg !12682
  %197 = or i32 %196, %192, !dbg !12682
  %198 = trunc i32 %197 to i8, !dbg !12682
  store i8 %198, i8* %193, align 1, !dbg !12682
  br label %199, !dbg !12683

; <label>:199:                                    ; preds = %188
  %200 = load i32, i32* %14, align 4, !dbg !12684
  %201 = add nsw i32 %200, 1, !dbg !12684
  store i32 %201, i32* %14, align 4, !dbg !12684
  br label %184, !dbg !12685, !llvm.loop !12686

; <label>:202:                                    ; preds = %184
  %203 = load i8*, i8** %21, align 8, !dbg !12688
  %204 = load i8, i8* %203, align 1, !dbg !12689
  %205 = zext i8 %204 to i32, !dbg !12689
  %206 = load i8, i8* %26, align 1, !dbg !12690
  %207 = zext i8 %206 to i32, !dbg !12690
  %208 = and i32 %205, %207, !dbg !12691
  %209 = load i8*, i8** %23, align 8, !dbg !12692
  %210 = load i8, i8* %209, align 1, !dbg !12693
  %211 = zext i8 %210 to i32, !dbg !12693
  %212 = or i32 %211, %208, !dbg !12693
  %213 = trunc i32 %212 to i8, !dbg !12693
  store i8 %213, i8* %209, align 1, !dbg !12693
  %214 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12694
  %215 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %214, i32 0, i32 2, !dbg !12695
  %216 = load i32, i32* %215, align 8, !dbg !12695
  %217 = load i8*, i8** %24, align 8, !dbg !12696
  %218 = sext i32 %216 to i64, !dbg !12696
  %219 = getelementptr inbounds i8, i8* %217, i64 %218, !dbg !12696
  store i8* %219, i8** %24, align 8, !dbg !12696
  store i8* %219, i8** %23, align 8, !dbg !12697
  %220 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12698
  %221 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %220, i32 0, i32 2, !dbg !12699
  %222 = load i32, i32* %221, align 8, !dbg !12699
  %223 = load i8*, i8** %22, align 8, !dbg !12700
  %224 = sext i32 %222 to i64, !dbg !12700
  %225 = getelementptr inbounds i8, i8* %223, i64 %224, !dbg !12700
  store i8* %225, i8** %22, align 8, !dbg !12700
  store i8* %225, i8** %21, align 8, !dbg !12701
  br label %226, !dbg !12702

; <label>:226:                                    ; preds = %202
  %227 = load i32, i32* %15, align 4, !dbg !12703
  %228 = add nsw i32 %227, 1, !dbg !12703
  store i32 %228, i32* %15, align 4, !dbg !12703
  br label %178, !dbg !12704, !llvm.loop !12705

; <label>:229:                                    ; preds = %178
  br label %389, !dbg !12707

; <label>:230:                                    ; preds = %161
  call void @llvm.dbg.declare(metadata i32* %27, metadata !12708, metadata !DIExpression()), !dbg !12710
  %231 = load i32, i32* %16, align 4, !dbg !12711
  %232 = add nsw i32 %231, 7, !dbg !12712
  %233 = ashr i32 %232, 3, !dbg !12713
  %234 = load i32, i32* %11, align 4, !dbg !12714
  %235 = load i32, i32* %16, align 4, !dbg !12715
  %236 = add nsw i32 %234, %235, !dbg !12716
  %237 = add nsw i32 %236, 7, !dbg !12717
  %238 = ashr i32 %237, 3, !dbg !12718
  %239 = load i32, i32* %11, align 4, !dbg !12719
  %240 = ashr i32 %239, 3, !dbg !12720
  %241 = sub nsw i32 %238, %240, !dbg !12721
  %242 = icmp slt i32 %233, %241, !dbg !12722
  %243 = zext i1 %242 to i32, !dbg !12722
  store i32 %243, i32* %27, align 4, !dbg !12710
  %244 = load i32, i32* %20, align 4, !dbg !12723
  %245 = shl i32 1, %244, !dbg !12724
  %246 = sub nsw i32 256, %245, !dbg !12725
  %247 = trunc i32 %246 to i8, !dbg !12726
  store i8 %247, i8* %25, align 1, !dbg !12727
  %248 = load i32, i32* %27, align 4, !dbg !12728
  %249 = icmp ne i32 %248, 0, !dbg !12728
  br i1 %249, label %250, label %261, !dbg !12730

; <label>:250:                                    ; preds = %230
  %251 = load i32, i32* %11, align 4, !dbg !12731
  %252 = load i32, i32* %16, align 4, !dbg !12732
  %253 = add nsw i32 %251, %252, !dbg !12733
  %254 = and i32 %253, 7, !dbg !12734
  %255 = ashr i32 256, %254, !dbg !12735
  %256 = sub nsw i32 256, %255, !dbg !12736
  %257 = load i32, i32* %20, align 4, !dbg !12737
  %258 = sub nsw i32 8, %257, !dbg !12738
  %259 = ashr i32 %256, %258, !dbg !12739
  %260 = trunc i32 %259 to i8, !dbg !12740
  store i8 %260, i8* %26, align 1, !dbg !12741
  br label %267, !dbg !12742

; <label>:261:                                    ; preds = %230
  %262 = load i32, i32* %16, align 4, !dbg !12743
  %263 = and i32 %262, 7, !dbg !12744
  %264 = ashr i32 256, %263, !dbg !12745
  %265 = sub nsw i32 256, %264, !dbg !12746
  %266 = trunc i32 %265 to i8, !dbg !12747
  store i8 %266, i8* %26, align 1, !dbg !12748
  br label %267

; <label>:267:                                    ; preds = %261, %250
  store i32 0, i32* %15, align 4, !dbg !12749
  br label %268, !dbg !12751

; <label>:268:                                    ; preds = %385, %267
  %269 = load i32, i32* %15, align 4, !dbg !12752
  %270 = load i32, i32* %17, align 4, !dbg !12754
  %271 = icmp slt i32 %269, %270, !dbg !12755
  br i1 %271, label %272, label %388, !dbg !12756

; <label>:272:                                    ; preds = %268
  %273 = load i8*, i8** %21, align 8, !dbg !12757
  %274 = load i8, i8* %273, align 1, !dbg !12759
  %275 = zext i8 %274 to i32, !dbg !12759
  %276 = load i8, i8* %25, align 1, !dbg !12760
  %277 = zext i8 %276 to i32, !dbg !12760
  %278 = and i32 %275, %277, !dbg !12761
  %279 = load i32, i32* %20, align 4, !dbg !12762
  %280 = ashr i32 %278, %279, !dbg !12763
  %281 = load i8*, i8** %23, align 8, !dbg !12764
  %282 = getelementptr inbounds i8, i8* %281, i32 1, !dbg !12764
  store i8* %282, i8** %23, align 8, !dbg !12764
  %283 = load i8, i8* %281, align 1, !dbg !12765
  %284 = zext i8 %283 to i32, !dbg !12765
  %285 = or i32 %284, %280, !dbg !12765
  %286 = trunc i32 %285 to i8, !dbg !12765
  store i8 %286, i8* %281, align 1, !dbg !12765
  %287 = load i32, i32* %18, align 4, !dbg !12766
  store i32 %287, i32* %14, align 4, !dbg !12768
  br label %288, !dbg !12769

; <label>:288:                                    ; preds = %324, %272
  %289 = load i32, i32* %14, align 4, !dbg !12770
  %290 = load i32, i32* %19, align 4, !dbg !12772
  %291 = sub nsw i32 %290, 1, !dbg !12773
  %292 = icmp slt i32 %289, %291, !dbg !12774
  br i1 %292, label %293, label %327, !dbg !12775

; <label>:293:                                    ; preds = %288
  %294 = load i8*, i8** %21, align 8, !dbg !12776
  %295 = getelementptr inbounds i8, i8* %294, i32 1, !dbg !12776
  store i8* %295, i8** %21, align 8, !dbg !12776
  %296 = load i8, i8* %294, align 1, !dbg !12778
  %297 = zext i8 %296 to i32, !dbg !12778
  %298 = load i8, i8* %25, align 1, !dbg !12779
  %299 = zext i8 %298 to i32, !dbg !12779
  %300 = xor i32 %299, -1, !dbg !12780
  %301 = and i32 %297, %300, !dbg !12781
  %302 = load i32, i32* %20, align 4, !dbg !12782
  %303 = sub nsw i32 8, %302, !dbg !12783
  %304 = shl i32 %301, %303, !dbg !12784
  %305 = load i8*, i8** %23, align 8, !dbg !12785
  %306 = load i8, i8* %305, align 1, !dbg !12786
  %307 = zext i8 %306 to i32, !dbg !12786
  %308 = or i32 %307, %304, !dbg !12786
  %309 = trunc i32 %308 to i8, !dbg !12786
  store i8 %309, i8* %305, align 1, !dbg !12786
  %310 = load i8*, i8** %21, align 8, !dbg !12787
  %311 = load i8, i8* %310, align 1, !dbg !12788
  %312 = zext i8 %311 to i32, !dbg !12788
  %313 = load i8, i8* %25, align 1, !dbg !12789
  %314 = zext i8 %313 to i32, !dbg !12789
  %315 = and i32 %312, %314, !dbg !12790
  %316 = load i32, i32* %20, align 4, !dbg !12791
  %317 = ashr i32 %315, %316, !dbg !12792
  %318 = load i8*, i8** %23, align 8, !dbg !12793
  %319 = getelementptr inbounds i8, i8* %318, i32 1, !dbg !12793
  store i8* %319, i8** %23, align 8, !dbg !12793
  %320 = load i8, i8* %318, align 1, !dbg !12794
  %321 = zext i8 %320 to i32, !dbg !12794
  %322 = or i32 %321, %317, !dbg !12794
  %323 = trunc i32 %322 to i8, !dbg !12794
  store i8 %323, i8* %318, align 1, !dbg !12794
  br label %324, !dbg !12795

; <label>:324:                                    ; preds = %293
  %325 = load i32, i32* %14, align 4, !dbg !12796
  %326 = add nsw i32 %325, 1, !dbg !12796
  store i32 %326, i32* %14, align 4, !dbg !12796
  br label %288, !dbg !12797, !llvm.loop !12798

; <label>:327:                                    ; preds = %288
  %328 = load i32, i32* %27, align 4, !dbg !12800
  %329 = icmp ne i32 %328, 0, !dbg !12800
  br i1 %329, label %330, label %345, !dbg !12802

; <label>:330:                                    ; preds = %327
  %331 = load i8*, i8** %21, align 8, !dbg !12803
  %332 = load i8, i8* %331, align 1, !dbg !12804
  %333 = zext i8 %332 to i32, !dbg !12804
  %334 = load i8, i8* %26, align 1, !dbg !12805
  %335 = zext i8 %334 to i32, !dbg !12805
  %336 = and i32 %333, %335, !dbg !12806
  %337 = load i32, i32* %20, align 4, !dbg !12807
  %338 = sub nsw i32 8, %337, !dbg !12808
  %339 = shl i32 %336, %338, !dbg !12809
  %340 = load i8*, i8** %23, align 8, !dbg !12810
  %341 = load i8, i8* %340, align 1, !dbg !12811
  %342 = zext i8 %341 to i32, !dbg !12811
  %343 = or i32 %342, %339, !dbg !12811
  %344 = trunc i32 %343 to i8, !dbg !12811
  store i8 %344, i8* %340, align 1, !dbg !12811
  br label %372, !dbg !12812

; <label>:345:                                    ; preds = %327
  %346 = load i8*, i8** %21, align 8, !dbg !12813
  %347 = getelementptr inbounds i8, i8* %346, i64 0, !dbg !12813
  %348 = load i8, i8* %347, align 1, !dbg !12813
  %349 = zext i8 %348 to i32, !dbg !12813
  %350 = load i8, i8* %25, align 1, !dbg !12814
  %351 = zext i8 %350 to i32, !dbg !12814
  %352 = xor i32 %351, -1, !dbg !12815
  %353 = and i32 %349, %352, !dbg !12816
  %354 = load i32, i32* %20, align 4, !dbg !12817
  %355 = sub nsw i32 8, %354, !dbg !12818
  %356 = shl i32 %353, %355, !dbg !12819
  %357 = load i8*, i8** %21, align 8, !dbg !12820
  %358 = getelementptr inbounds i8, i8* %357, i64 1, !dbg !12820
  %359 = load i8, i8* %358, align 1, !dbg !12820
  %360 = zext i8 %359 to i32, !dbg !12820
  %361 = load i8, i8* %26, align 1, !dbg !12821
  %362 = zext i8 %361 to i32, !dbg !12821
  %363 = and i32 %360, %362, !dbg !12822
  %364 = load i32, i32* %20, align 4, !dbg !12823
  %365 = ashr i32 %363, %364, !dbg !12824
  %366 = or i32 %356, %365, !dbg !12825
  %367 = load i8*, i8** %23, align 8, !dbg !12826
  %368 = load i8, i8* %367, align 1, !dbg !12827
  %369 = zext i8 %368 to i32, !dbg !12827
  %370 = or i32 %369, %366, !dbg !12827
  %371 = trunc i32 %370 to i8, !dbg !12827
  store i8 %371, i8* %367, align 1, !dbg !12827
  br label %372

; <label>:372:                                    ; preds = %345, %330
  %373 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !12828
  %374 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %373, i32 0, i32 2, !dbg !12829
  %375 = load i32, i32* %374, align 8, !dbg !12829
  %376 = load i8*, i8** %24, align 8, !dbg !12830
  %377 = sext i32 %375 to i64, !dbg !12830
  %378 = getelementptr inbounds i8, i8* %376, i64 %377, !dbg !12830
  store i8* %378, i8** %24, align 8, !dbg !12830
  store i8* %378, i8** %23, align 8, !dbg !12831
  %379 = load %struct._Jbig2Image*, %struct._Jbig2Image** %10, align 8, !dbg !12832
  %380 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %379, i32 0, i32 2, !dbg !12833
  %381 = load i32, i32* %380, align 8, !dbg !12833
  %382 = load i8*, i8** %22, align 8, !dbg !12834
  %383 = sext i32 %381 to i64, !dbg !12834
  %384 = getelementptr inbounds i8, i8* %382, i64 %383, !dbg !12834
  store i8* %384, i8** %22, align 8, !dbg !12834
  store i8* %384, i8** %21, align 8, !dbg !12835
  br label %385, !dbg !12836

; <label>:385:                                    ; preds = %372
  %386 = load i32, i32* %15, align 4, !dbg !12837
  %387 = add nsw i32 %386, 1, !dbg !12837
  store i32 %387, i32* %15, align 4, !dbg !12837
  br label %268, !dbg !12838, !llvm.loop !12839

; <label>:388:                                    ; preds = %268
  br label %389

; <label>:389:                                    ; preds = %388, %229
  br label %390

; <label>:390:                                    ; preds = %389, %160
  store i32 0, i32* %7, align 4, !dbg !12841
  br label %391, !dbg !12841

; <label>:391:                                    ; preds = %390, %30
  %392 = load i32, i32* %7, align 4, !dbg !12842
  ret i32 %392, !dbg !12842
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_image_clear(%struct._Jbig2Ctx.11*, %struct._Jbig2Image*, i32) #0 !dbg !12843 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Image*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !12846, metadata !DIExpression()), !dbg !12847
  store %struct._Jbig2Image* %1, %struct._Jbig2Image** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %5, metadata !12848, metadata !DIExpression()), !dbg !12849
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12850, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12852, metadata !DIExpression()), !dbg !12853
  %8 = load i32, i32* %6, align 4, !dbg !12854
  %9 = icmp ne i32 %8, 0, !dbg !12854
  %10 = zext i1 %9 to i64, !dbg !12854
  %11 = select i1 %9, i32 255, i32 0, !dbg !12854
  %12 = trunc i32 %11 to i8, !dbg !12854
  store i8 %12, i8* %7, align 1, !dbg !12853
  %13 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12855
  %14 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %13, i32 0, i32 3, !dbg !12856
  %15 = load i8*, i8** %14, align 8, !dbg !12856
  %16 = load i8, i8* %7, align 1, !dbg !12857
  %17 = zext i8 %16 to i32, !dbg !12857
  %18 = trunc i32 %17 to i8, !dbg !12858
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12859
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 2, !dbg !12860
  %21 = load i32, i32* %20, align 8, !dbg !12860
  %22 = load %struct._Jbig2Image*, %struct._Jbig2Image** %5, align 8, !dbg !12861
  %23 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %22, i32 0, i32 1, !dbg !12862
  %24 = load i32, i32* %23, align 4, !dbg !12862
  %25 = mul nsw i32 %21, %24, !dbg !12863
  %26 = sext i32 %25 to i64, !dbg !12859
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 %18, i64 %26, i1 false), !dbg !12858
  ret void, !dbg !12864
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_image_write_pbm_file(%struct._Jbig2Image*, i8*) #0 !dbg !12865 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._Jbig2Image*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  store %struct._Jbig2Image* %0, %struct._Jbig2Image** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %4, metadata !12877, metadata !DIExpression()), !dbg !12878
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12879, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !12881, metadata !DIExpression()), !dbg !12922
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12923, metadata !DIExpression()), !dbg !12924
  %8 = load i8*, i8** %5, align 8, !dbg !12925
  %9 = call %struct._IO_FILE* @fopen(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.248, i32 0, i32 0)), !dbg !12927
  store %struct._IO_FILE* %9, %struct._IO_FILE** %6, align 8, !dbg !12928
  %10 = icmp eq %struct._IO_FILE* %9, null, !dbg !12929
  br i1 %10, label %11, label %15, !dbg !12930

; <label>:11:                                     ; preds = %2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !12931
  %13 = load i8*, i8** %5, align 8, !dbg !12933
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.249, i32 0, i32 0), i8* %13), !dbg !12934
  store i32 1, i32* %3, align 4, !dbg !12935
  br label %22, !dbg !12935

; <label>:15:                                     ; preds = %2
  %16 = load %struct._Jbig2Image*, %struct._Jbig2Image** %4, align 8, !dbg !12936
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !12937
  %18 = call i32 @jbig2_image_write_pbm(%struct._Jbig2Image* %16, %struct._IO_FILE* %17), !dbg !12938
  store i32 %18, i32* %7, align 4, !dbg !12939
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !12940
  %20 = call i32 @fclose(%struct._IO_FILE* %19), !dbg !12941
  %21 = load i32, i32* %7, align 4, !dbg !12942
  store i32 %21, i32* %3, align 4, !dbg !12943
  br label %22, !dbg !12943

; <label>:22:                                     ; preds = %15, %11
  %23 = load i32, i32* %3, align 4, !dbg !12944
  ret i32 %23, !dbg !12944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_image_write_pbm(%struct._Jbig2Image*, %struct._IO_FILE*) #0 !dbg !12945 {
  %3 = alloca %struct._Jbig2Image*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store %struct._Jbig2Image* %0, %struct._Jbig2Image** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %3, metadata !12948, metadata !DIExpression()), !dbg !12949
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !12950, metadata !DIExpression()), !dbg !12951
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !12952
  %6 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !12953
  %7 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %6, i32 0, i32 0, !dbg !12954
  %8 = load i32, i32* %7, align 8, !dbg !12954
  %9 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !12955
  %10 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %9, i32 0, i32 1, !dbg !12956
  %11 = load i32, i32* %10, align 4, !dbg !12956
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.252, i32 0, i32 0), i32 %8, i32 %11), !dbg !12957
  %13 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !12958
  %14 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %13, i32 0, i32 3, !dbg !12959
  %15 = load i8*, i8** %14, align 8, !dbg !12959
  %16 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !12960
  %17 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %16, i32 0, i32 1, !dbg !12961
  %18 = load i32, i32* %17, align 4, !dbg !12961
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !12962
  %20 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %19, i32 0, i32 2, !dbg !12963
  %21 = load i32, i32* %20, align 8, !dbg !12963
  %22 = mul nsw i32 %18, %21, !dbg !12964
  %23 = sext i32 %22 to i64, !dbg !12960
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !12965
  %25 = call i64 @fwrite(i8* %15, i64 1, i64 %23, %struct._IO_FILE* %24), !dbg !12966
  ret i32 0, !dbg !12967
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_image_read_pbm_file(%struct._Jbig2Ctx.11*, i8*) #0 !dbg !12968 {
  %3 = alloca %struct._Jbig2Image*, align 8
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca %struct._Jbig2Image*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !12971, metadata !DIExpression()), !dbg !12972
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12973, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !12975, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %7, metadata !12977, metadata !DIExpression()), !dbg !12978
  %8 = load i8*, i8** %5, align 8, !dbg !12979
  %9 = call %struct._IO_FILE* @fopen(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.253, i32 0, i32 0)), !dbg !12981
  store %struct._IO_FILE* %9, %struct._IO_FILE** %6, align 8, !dbg !12982
  %10 = icmp eq %struct._IO_FILE* %9, null, !dbg !12983
  br i1 %10, label %11, label %15, !dbg !12984

; <label>:11:                                     ; preds = %2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !12985
  %13 = load i8*, i8** %5, align 8, !dbg !12987
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.254, i32 0, i32 0), i8* %13), !dbg !12988
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !12989
  br label %20, !dbg !12989

; <label>:15:                                     ; preds = %2
  %16 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !12990
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !12991
  %18 = call %struct._Jbig2Image* @jbig2_image_read_pbm(%struct._Jbig2Ctx.11* %16, %struct._IO_FILE* %17), !dbg !12992
  store %struct._Jbig2Image* %18, %struct._Jbig2Image** %7, align 8, !dbg !12993
  %19 = load %struct._Jbig2Image*, %struct._Jbig2Image** %7, align 8, !dbg !12994
  store %struct._Jbig2Image* %19, %struct._Jbig2Image** %3, align 8, !dbg !12995
  br label %20, !dbg !12995

; <label>:20:                                     ; preds = %15, %11
  %21 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !12996
  ret %struct._Jbig2Image* %21, !dbg !12996
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Image* @jbig2_image_read_pbm(%struct._Jbig2Ctx.11*, %struct._IO_FILE*) #0 !dbg !12997 {
  %3 = alloca %struct._Jbig2Image*, align 8
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [2 x i32], align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._Jbig2Image*, align 8
  %10 = alloca i32, align 4
  %11 = alloca [32 x i8], align 16
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !13000, metadata !DIExpression()), !dbg !13001
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !13002, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.declare(metadata [2 x i32]* %7, metadata !13006, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13009, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.declare(metadata %struct._Jbig2Image** %9, metadata !13011, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13013, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !13015, metadata !DIExpression()), !dbg !13019
  br label %12, !dbg !13020

; <label>:12:                                     ; preds = %21, %2
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13021
  %14 = call i32 @fgetc(%struct._IO_FILE* %13), !dbg !13022
  store i32 %14, i32* %10, align 4, !dbg !13023
  %15 = icmp ne i32 %14, 80, !dbg !13024
  br i1 %15, label %16, label %22, !dbg !13020

; <label>:16:                                     ; preds = %12
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13025
  %18 = call i32 @feof(%struct._IO_FILE* %17) #7, !dbg !13028
  %19 = icmp ne i32 %18, 0, !dbg !13028
  br i1 %19, label %20, label %21, !dbg !13029

; <label>:20:                                     ; preds = %16
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !13030
  br label %155, !dbg !13030

; <label>:21:                                     ; preds = %16
  br label %12, !dbg !13020, !llvm.loop !13031

; <label>:22:                                     ; preds = %12
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13033
  %24 = call i32 @fgetc(%struct._IO_FILE* %23), !dbg !13035
  store i32 %24, i32* %10, align 4, !dbg !13036
  %25 = icmp ne i32 %24, 52, !dbg !13037
  br i1 %25, label %26, label %29, !dbg !13038

; <label>:26:                                     ; preds = %22
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13039
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.255, i32 0, i32 0)), !dbg !13041
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !13042
  br label %155, !dbg !13042

; <label>:29:                                     ; preds = %22
  store i32 0, i32* %8, align 4, !dbg !13043
  store i32 0, i32* %6, align 4, !dbg !13044
  br label %30, !dbg !13045

; <label>:30:                                     ; preds = %114, %57, %47, %29
  %31 = load i32, i32* %8, align 4, !dbg !13046
  %32 = icmp slt i32 %31, 2, !dbg !13047
  br i1 %32, label %33, label %115, !dbg !13045

; <label>:33:                                     ; preds = %30
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13048
  %35 = call i32 @fgetc(%struct._IO_FILE* %34), !dbg !13050
  store i32 %35, i32* %10, align 4, !dbg !13051
  %36 = load i32, i32* %10, align 4, !dbg !13052
  %37 = icmp eq i32 %36, 32, !dbg !13054
  br i1 %37, label %47, label %38, !dbg !13055

; <label>:38:                                     ; preds = %33
  %39 = load i32, i32* %10, align 4, !dbg !13056
  %40 = icmp eq i32 %39, 9, !dbg !13057
  br i1 %40, label %47, label %41, !dbg !13058

; <label>:41:                                     ; preds = %38
  %42 = load i32, i32* %10, align 4, !dbg !13059
  %43 = icmp eq i32 %42, 13, !dbg !13060
  br i1 %43, label %47, label %44, !dbg !13061

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* %10, align 4, !dbg !13062
  %46 = icmp eq i32 %45, 10, !dbg !13063
  br i1 %46, label %47, label %48, !dbg !13064

; <label>:47:                                     ; preds = %44, %41, %38, %33
  br label %30, !dbg !13065, !llvm.loop !13066

; <label>:48:                                     ; preds = %44
  %49 = load i32, i32* %10, align 4, !dbg !13068
  %50 = icmp eq i32 %49, 35, !dbg !13070
  br i1 %50, label %51, label %58, !dbg !13071

; <label>:51:                                     ; preds = %48
  br label %52, !dbg !13072

; <label>:52:                                     ; preds = %56, %51
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13074
  %54 = call i32 @fgetc(%struct._IO_FILE* %53), !dbg !13075
  store i32 %54, i32* %10, align 4, !dbg !13076
  %55 = icmp ne i32 %54, 10, !dbg !13077
  br i1 %55, label %56, label %57, !dbg !13072

; <label>:56:                                     ; preds = %52
  br label %52, !dbg !13072, !llvm.loop !13078

; <label>:57:                                     ; preds = %52
  br label %30, !dbg !13080, !llvm.loop !13066

; <label>:58:                                     ; preds = %48
  %59 = call i16** @__ctype_b_loc() #11, !dbg !13081
  %60 = load i16*, i16** %59, align 8, !dbg !13081
  %61 = load i32, i32* %10, align 4, !dbg !13081
  %62 = sext i32 %61 to i64, !dbg !13081
  %63 = getelementptr inbounds i16, i16* %60, i64 %62, !dbg !13081
  %64 = load i16, i16* %63, align 2, !dbg !13081
  %65 = zext i16 %64 to i32, !dbg !13081
  %66 = and i32 %65, 2048, !dbg !13081
  %67 = icmp ne i32 %66, 0, !dbg !13081
  br i1 %67, label %68, label %114, !dbg !13083

; <label>:68:                                     ; preds = %58
  %69 = load i32, i32* %10, align 4, !dbg !13084
  %70 = trunc i32 %69 to i8, !dbg !13084
  %71 = load i32, i32* %6, align 4, !dbg !13086
  %72 = add nsw i32 %71, 1, !dbg !13086
  store i32 %72, i32* %6, align 4, !dbg !13086
  %73 = sext i32 %71 to i64, !dbg !13087
  %74 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %73, !dbg !13087
  store i8 %70, i8* %74, align 1, !dbg !13088
  br label %75, !dbg !13089

; <label>:75:                                     ; preds = %102, %68
  %76 = call i16** @__ctype_b_loc() #11, !dbg !13090
  %77 = load i16*, i16** %76, align 8, !dbg !13090
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13090
  %79 = call i32 @fgetc(%struct._IO_FILE* %78), !dbg !13090
  %80 = trunc i32 %79 to i8, !dbg !13090
  %81 = load i32, i32* %6, align 4, !dbg !13090
  %82 = add nsw i32 %81, 1, !dbg !13090
  store i32 %82, i32* %6, align 4, !dbg !13090
  %83 = sext i32 %81 to i64, !dbg !13090
  %84 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %83, !dbg !13090
  store i8 %80, i8* %84, align 1, !dbg !13090
  %85 = sext i8 %80 to i32, !dbg !13090
  %86 = sext i32 %85 to i64, !dbg !13090
  %87 = getelementptr inbounds i16, i16* %77, i64 %86, !dbg !13090
  %88 = load i16, i16* %87, align 2, !dbg !13090
  %89 = zext i16 %88 to i32, !dbg !13090
  %90 = and i32 %89, 2048, !dbg !13090
  %91 = icmp ne i32 %90, 0, !dbg !13089
  br i1 %91, label %92, label %103, !dbg !13089

; <label>:92:                                     ; preds = %75
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13091
  %94 = call i32 @feof(%struct._IO_FILE* %93) #7, !dbg !13094
  %95 = icmp ne i32 %94, 0, !dbg !13094
  br i1 %95, label %99, label %96, !dbg !13095

; <label>:96:                                     ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !13096
  %98 = icmp sge i32 %97, 32, !dbg !13097
  br i1 %98, label %99, label %102, !dbg !13098

; <label>:99:                                     ; preds = %96, %92
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13099
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.256, i32 0, i32 0)), !dbg !13101
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !13102
  br label %155, !dbg !13102

; <label>:102:                                    ; preds = %96
  br label %75, !dbg !13089, !llvm.loop !13103

; <label>:103:                                    ; preds = %75
  %104 = load i32, i32* %6, align 4, !dbg !13105
  %105 = sext i32 %104 to i64, !dbg !13106
  %106 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %105, !dbg !13106
  store i8 0, i8* %106, align 1, !dbg !13107
  %107 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !13108
  %108 = load i32, i32* %8, align 4, !dbg !13109
  %109 = sext i32 %108 to i64, !dbg !13110
  %110 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 %109, !dbg !13110
  %111 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.257, i32 0, i32 0), i32* %110) #7, !dbg !13111
  store i32 0, i32* %6, align 4, !dbg !13112
  %112 = load i32, i32* %8, align 4, !dbg !13113
  %113 = add nsw i32 %112, 1, !dbg !13113
  store i32 %113, i32* %8, align 4, !dbg !13113
  br label %114, !dbg !13114

; <label>:114:                                    ; preds = %103, %58
  br label %30, !dbg !13045, !llvm.loop !13066

; <label>:115:                                    ; preds = %30
  %116 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !13115
  %117 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0, !dbg !13116
  %118 = load i32, i32* %117, align 4, !dbg !13116
  %119 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1, !dbg !13117
  %120 = load i32, i32* %119, align 4, !dbg !13117
  %121 = call %struct._Jbig2Image* @jbig2_image_new(%struct._Jbig2Ctx.11* %116, i32 %118, i32 %120), !dbg !13118
  store %struct._Jbig2Image* %121, %struct._Jbig2Image** %9, align 8, !dbg !13119
  %122 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !13120
  %123 = icmp eq %struct._Jbig2Image* %122, null, !dbg !13122
  br i1 %123, label %124, label %131, !dbg !13123

; <label>:124:                                    ; preds = %115
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13124
  %126 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0, !dbg !13126
  %127 = load i32, i32* %126, align 4, !dbg !13126
  %128 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1, !dbg !13127
  %129 = load i32, i32* %128, align 4, !dbg !13127
  %130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8.258, i32 0, i32 0), i32 %127, i32 %129), !dbg !13128
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !13129
  br label %155, !dbg !13129

; <label>:131:                                    ; preds = %115
  %132 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !13130
  %133 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %132, i32 0, i32 3, !dbg !13131
  %134 = load i8*, i8** %133, align 8, !dbg !13131
  %135 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !13132
  %136 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %135, i32 0, i32 1, !dbg !13133
  %137 = load i32, i32* %136, align 4, !dbg !13133
  %138 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !13134
  %139 = getelementptr inbounds %struct._Jbig2Image, %struct._Jbig2Image* %138, i32 0, i32 2, !dbg !13135
  %140 = load i32, i32* %139, align 8, !dbg !13135
  %141 = mul nsw i32 %137, %140, !dbg !13136
  %142 = sext i32 %141 to i64, !dbg !13132
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13137
  %144 = call i64 @fread(i8* %134, i64 1, i64 %142, %struct._IO_FILE* %143), !dbg !13138
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !13139
  %146 = call i32 @feof(%struct._IO_FILE* %145) #7, !dbg !13141
  %147 = icmp ne i32 %146, 0, !dbg !13141
  br i1 %147, label %148, label %153, !dbg !13142

; <label>:148:                                    ; preds = %131
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13143
  %150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %149, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0)), !dbg !13145
  %151 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !13146
  %152 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !13147
  call void @jbig2_image_release(%struct._Jbig2Ctx.11* %151, %struct._Jbig2Image* %152), !dbg !13148
  store %struct._Jbig2Image* null, %struct._Jbig2Image** %3, align 8, !dbg !13149
  br label %155, !dbg !13149

; <label>:153:                                    ; preds = %131
  %154 = load %struct._Jbig2Image*, %struct._Jbig2Image** %9, align 8, !dbg !13150
  store %struct._Jbig2Image* %154, %struct._Jbig2Image** %3, align 8, !dbg !13151
  br label %155, !dbg !13151

; <label>:155:                                    ; preds = %153, %148, %124, %99, %26, %20
  %156 = load %struct._Jbig2Image*, %struct._Jbig2Image** %3, align 8, !dbg !13152
  ret %struct._Jbig2Image* %156, !dbg !13152
}

declare dso_local i32 @fgetc(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @feof(%struct._IO_FILE*) #5

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2Metadata* @jbig2_metadata_new(%struct._Jbig2Ctx.11*, i32) #0 !dbg !13153 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Metadata*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !13243, metadata !DIExpression()), !dbg !13244
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13245, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.declare(metadata %struct._Jbig2Metadata** %5, metadata !13247, metadata !DIExpression()), !dbg !13248
  %6 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13249
  %7 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %6, i32 0, i32 0, !dbg !13250
  %8 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %7, align 8, !dbg !13250
  %9 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %8, i64 32), !dbg !13251
  %10 = bitcast i8* %9 to %struct._Jbig2Metadata*, !dbg !13251
  store %struct._Jbig2Metadata* %10, %struct._Jbig2Metadata** %5, align 8, !dbg !13248
  %11 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13252
  %12 = icmp ne %struct._Jbig2Metadata* %11, null, !dbg !13254
  br i1 %12, label %13, label %58, !dbg !13255

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* %4, align 4, !dbg !13256
  %15 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13258
  %16 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %15, i32 0, i32 0, !dbg !13259
  store i32 %14, i32* %16, align 8, !dbg !13260
  %17 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13261
  %18 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %17, i32 0, i32 3, !dbg !13262
  store i32 0, i32* %18, align 8, !dbg !13263
  %19 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13264
  %20 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %19, i32 0, i32 4, !dbg !13265
  store i32 4, i32* %20, align 4, !dbg !13266
  %21 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13267
  %22 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %21, i32 0, i32 0, !dbg !13268
  %23 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %22, align 8, !dbg !13268
  %24 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13269
  %25 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %24, i32 0, i32 4, !dbg !13270
  %26 = load i32, i32* %25, align 4, !dbg !13270
  %27 = sext i32 %26 to i64, !dbg !13269
  %28 = mul i64 %27, 8, !dbg !13271
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !13272
  %29 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %23, i64 %28), !dbg !13272
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !13272
  %30 = bitcast i8* %29 to i8**, !dbg !13272
  %31 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13273
  %32 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %31, i32 0, i32 1, !dbg !13274
  store i8** %30, i8*** %32, align 8, !dbg !13275
  %33 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13276
  %34 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %33, i32 0, i32 0, !dbg !13277
  %35 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %34, align 8, !dbg !13277
  %36 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13278
  %37 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %36, i32 0, i32 4, !dbg !13279
  %38 = load i32, i32* %37, align 4, !dbg !13279
  %39 = sext i32 %38 to i64, !dbg !13278
  %40 = mul i64 %39, 8, !dbg !13280
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !13281
  %41 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %35, i64 %40), !dbg !13281
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !13281
  %42 = bitcast i8* %41 to i8**, !dbg !13281
  %43 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13282
  %44 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %43, i32 0, i32 2, !dbg !13283
  store i8** %42, i8*** %44, align 8, !dbg !13284
  %45 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13285
  %46 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %45, i32 0, i32 1, !dbg !13287
  %47 = load i8**, i8*** %46, align 8, !dbg !13287
  %48 = icmp eq i8** %47, null, !dbg !13288
  br i1 %48, label %54, label %49, !dbg !13289

; <label>:49:                                     ; preds = %13
  %50 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13290
  %51 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %50, i32 0, i32 2, !dbg !13291
  %52 = load i8**, i8*** %51, align 8, !dbg !13291
  %53 = icmp eq i8** %52, null, !dbg !13292
  br i1 %53, label %54, label %57, !dbg !13293

; <label>:54:                                     ; preds = %49, %13
  %55 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13294
  %56 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13296
  call void @jbig2_metadata_free(%struct._Jbig2Ctx.11* %55, %struct._Jbig2Metadata* %56), !dbg !13297
  store %struct._Jbig2Metadata* null, %struct._Jbig2Metadata** %5, align 8, !dbg !13298
  br label %57, !dbg !13299

; <label>:57:                                     ; preds = %54, %49
  br label %58, !dbg !13300

; <label>:58:                                     ; preds = %57, %2
  %59 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %5, align 8, !dbg !13301
  ret %struct._Jbig2Metadata* %59, !dbg !13302
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_metadata_free(%struct._Jbig2Ctx.11*, %struct._Jbig2Metadata*) #0 !dbg !13303 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2Metadata*, align 8
  %5 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !13306, metadata !DIExpression()), !dbg !13307
  store %struct._Jbig2Metadata* %1, %struct._Jbig2Metadata** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Metadata** %4, metadata !13308, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13310, metadata !DIExpression()), !dbg !13311
  %6 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13312
  %7 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %6, i32 0, i32 1, !dbg !13314
  %8 = load i8**, i8*** %7, align 8, !dbg !13314
  %9 = icmp ne i8** %8, null, !dbg !13312
  br i1 %9, label %10, label %39, !dbg !13315

; <label>:10:                                     ; preds = %2
  store i32 0, i32* %5, align 4, !dbg !13316
  br label %11, !dbg !13319

; <label>:11:                                     ; preds = %28, %10
  %12 = load i32, i32* %5, align 4, !dbg !13320
  %13 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13322
  %14 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %13, i32 0, i32 3, !dbg !13323
  %15 = load i32, i32* %14, align 8, !dbg !13323
  %16 = icmp slt i32 %12, %15, !dbg !13324
  br i1 %16, label %17, label %31, !dbg !13325

; <label>:17:                                     ; preds = %11
  %18 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13326
  %19 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %18, i32 0, i32 0, !dbg !13327
  %20 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %19, align 8, !dbg !13327
  %21 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13328
  %22 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %21, i32 0, i32 1, !dbg !13329
  %23 = load i8**, i8*** %22, align 8, !dbg !13329
  %24 = load i32, i32* %5, align 4, !dbg !13330
  %25 = sext i32 %24 to i64, !dbg !13328
  %26 = getelementptr inbounds i8*, i8** %23, i64 %25, !dbg !13328
  %27 = load i8*, i8** %26, align 8, !dbg !13328
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %20, i8* %27), !dbg !13331
  br label %28, !dbg !13331

; <label>:28:                                     ; preds = %17
  %29 = load i32, i32* %5, align 4, !dbg !13332
  %30 = add nsw i32 %29, 1, !dbg !13332
  store i32 %30, i32* %5, align 4, !dbg !13332
  br label %11, !dbg !13333, !llvm.loop !13334

; <label>:31:                                     ; preds = %11
  %32 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13336
  %33 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %32, i32 0, i32 0, !dbg !13337
  %34 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %33, align 8, !dbg !13337
  %35 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13338
  %36 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %35, i32 0, i32 1, !dbg !13339
  %37 = load i8**, i8*** %36, align 8, !dbg !13339
  %38 = bitcast i8** %37 to i8*, !dbg !13338
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %34, i8* %38), !dbg !13340
  br label %39, !dbg !13341

; <label>:39:                                     ; preds = %31, %2
  %40 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13342
  %41 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %40, i32 0, i32 2, !dbg !13344
  %42 = load i8**, i8*** %41, align 8, !dbg !13344
  %43 = icmp ne i8** %42, null, !dbg !13342
  br i1 %43, label %44, label %73, !dbg !13345

; <label>:44:                                     ; preds = %39
  store i32 0, i32* %5, align 4, !dbg !13346
  br label %45, !dbg !13349

; <label>:45:                                     ; preds = %62, %44
  %46 = load i32, i32* %5, align 4, !dbg !13350
  %47 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13352
  %48 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %47, i32 0, i32 3, !dbg !13353
  %49 = load i32, i32* %48, align 8, !dbg !13353
  %50 = icmp slt i32 %46, %49, !dbg !13354
  br i1 %50, label %51, label %65, !dbg !13355

; <label>:51:                                     ; preds = %45
  %52 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13356
  %53 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %52, i32 0, i32 0, !dbg !13357
  %54 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %53, align 8, !dbg !13357
  %55 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13358
  %56 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %55, i32 0, i32 2, !dbg !13359
  %57 = load i8**, i8*** %56, align 8, !dbg !13359
  %58 = load i32, i32* %5, align 4, !dbg !13360
  %59 = sext i32 %58 to i64, !dbg !13358
  %60 = getelementptr inbounds i8*, i8** %57, i64 %59, !dbg !13358
  %61 = load i8*, i8** %60, align 8, !dbg !13358
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %54, i8* %61), !dbg !13361
  br label %62, !dbg !13361

; <label>:62:                                     ; preds = %51
  %63 = load i32, i32* %5, align 4, !dbg !13362
  %64 = add nsw i32 %63, 1, !dbg !13362
  store i32 %64, i32* %5, align 4, !dbg !13362
  br label %45, !dbg !13363, !llvm.loop !13364

; <label>:65:                                     ; preds = %45
  %66 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13366
  %67 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %66, i32 0, i32 0, !dbg !13367
  %68 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %67, align 8, !dbg !13367
  %69 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13368
  %70 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %69, i32 0, i32 2, !dbg !13369
  %71 = load i8**, i8*** %70, align 8, !dbg !13369
  %72 = bitcast i8** %71 to i8*, !dbg !13368
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %68, i8* %72), !dbg !13370
  br label %73, !dbg !13371

; <label>:73:                                     ; preds = %65, %39
  %74 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13372
  %75 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %74, i32 0, i32 0, !dbg !13373
  %76 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %75, align 8, !dbg !13373
  %77 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %4, align 8, !dbg !13374
  %78 = bitcast %struct._Jbig2Metadata* %77 to i8*, !dbg !13374
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %76, i8* %78), !dbg !13375
  ret void, !dbg !13376
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_metadata_add(%struct._Jbig2Ctx.11*, %struct._Jbig2Metadata*, i8*, i32, i8*, i32) #0 !dbg !13377 {
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2Ctx.11*, align 8
  %9 = alloca %struct._Jbig2Metadata*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8**, align 8
  %15 = alloca i8**, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %8, metadata !13380, metadata !DIExpression()), !dbg !13381
  store %struct._Jbig2Metadata* %1, %struct._Jbig2Metadata** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Metadata** %9, metadata !13382, metadata !DIExpression()), !dbg !13383
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !13384, metadata !DIExpression()), !dbg !13385
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13386, metadata !DIExpression()), !dbg !13387
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13390, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.declare(metadata i8*** %14, metadata !13392, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.declare(metadata i8*** %15, metadata !13394, metadata !DIExpression()), !dbg !13395
  %16 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13396
  %17 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %16, i32 0, i32 3, !dbg !13398
  %18 = load i32, i32* %17, align 8, !dbg !13398
  %19 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13399
  %20 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %19, i32 0, i32 4, !dbg !13400
  %21 = load i32, i32* %20, align 4, !dbg !13400
  %22 = icmp eq i32 %18, %21, !dbg !13401
  br i1 %22, label %23, label %69, !dbg !13402

; <label>:23:                                     ; preds = %6
  %24 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13403
  %25 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %24, i32 0, i32 4, !dbg !13405
  %26 = load i32, i32* %25, align 4, !dbg !13406
  %27 = ashr i32 %26, 2, !dbg !13406
  store i32 %27, i32* %25, align 4, !dbg !13406
  %28 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !13407
  %29 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %28, i32 0, i32 0, !dbg !13408
  %30 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %29, align 8, !dbg !13408
  %31 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13409
  %32 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %31, i32 0, i32 1, !dbg !13410
  %33 = load i8**, i8*** %32, align 8, !dbg !13410
  %34 = bitcast i8** %33 to i8*, !dbg !13409
  %35 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13411
  %36 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %35, i32 0, i32 4, !dbg !13412
  %37 = load i32, i32* %36, align 4, !dbg !13412
  %38 = sext i32 %37 to i64, !dbg !13411
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !13413
  %39 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i8*, i64)* @jbig2_realloc to i8* (%struct._Jbig2Allocator*, i8*, i64)*)(%struct._Jbig2Allocator* %30, i8* %34, i64 %38), !dbg !13413
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !13413
  %40 = bitcast i8* %39 to i8**, !dbg !13413
  store i8** %40, i8*** %14, align 8, !dbg !13414
  %41 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !13415
  %42 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %41, i32 0, i32 0, !dbg !13416
  %43 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %42, align 8, !dbg !13416
  %44 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13417
  %45 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %44, i32 0, i32 2, !dbg !13418
  %46 = load i8**, i8*** %45, align 8, !dbg !13418
  %47 = bitcast i8** %46 to i8*, !dbg !13417
  %48 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13419
  %49 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %48, i32 0, i32 4, !dbg !13420
  %50 = load i32, i32* %49, align 4, !dbg !13420
  %51 = sext i32 %50 to i64, !dbg !13419
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !13421
  %52 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i8*, i64)* @jbig2_realloc to i8* (%struct._Jbig2Allocator*, i8*, i64)*)(%struct._Jbig2Allocator* %43, i8* %47, i64 %51), !dbg !13421
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !13421
  %53 = bitcast i8* %52 to i8**, !dbg !13421
  store i8** %53, i8*** %15, align 8, !dbg !13422
  %54 = load i8**, i8*** %14, align 8, !dbg !13423
  %55 = icmp eq i8** %54, null, !dbg !13425
  br i1 %55, label %59, label %56, !dbg !13426

; <label>:56:                                     ; preds = %23
  %57 = load i8**, i8*** %15, align 8, !dbg !13427
  %58 = icmp eq i8** %57, null, !dbg !13428
  br i1 %58, label %59, label %62, !dbg !13429

; <label>:59:                                     ; preds = %56, %23
  %60 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !13430
  %61 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %60, i32 3, i32 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.262, i32 0, i32 0)), !dbg !13432
  store i32 -1, i32* %7, align 4, !dbg !13433
  br label %98, !dbg !13433

; <label>:62:                                     ; preds = %56
  %63 = load i8**, i8*** %14, align 8, !dbg !13434
  %64 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13435
  %65 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %64, i32 0, i32 1, !dbg !13436
  store i8** %63, i8*** %65, align 8, !dbg !13437
  %66 = load i8**, i8*** %15, align 8, !dbg !13438
  %67 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13439
  %68 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %67, i32 0, i32 2, !dbg !13440
  store i8** %66, i8*** %68, align 8, !dbg !13441
  br label %69, !dbg !13442

; <label>:69:                                     ; preds = %62, %6
  %70 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !13443
  %71 = load i8*, i8** %10, align 8, !dbg !13444
  %72 = load i32, i32* %11, align 4, !dbg !13445
  %73 = call i8* @jbig2_strndup(%struct._Jbig2Ctx.11* %70, i8* %71, i32 %72), !dbg !13446
  %74 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13447
  %75 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %74, i32 0, i32 1, !dbg !13448
  %76 = load i8**, i8*** %75, align 8, !dbg !13448
  %77 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13449
  %78 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %77, i32 0, i32 3, !dbg !13450
  %79 = load i32, i32* %78, align 8, !dbg !13450
  %80 = sext i32 %79 to i64, !dbg !13447
  %81 = getelementptr inbounds i8*, i8** %76, i64 %80, !dbg !13447
  store i8* %73, i8** %81, align 8, !dbg !13451
  %82 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %8, align 8, !dbg !13452
  %83 = load i8*, i8** %12, align 8, !dbg !13453
  %84 = load i32, i32* %13, align 4, !dbg !13454
  %85 = call i8* @jbig2_strndup(%struct._Jbig2Ctx.11* %82, i8* %83, i32 %84), !dbg !13455
  %86 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13456
  %87 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %86, i32 0, i32 2, !dbg !13457
  %88 = load i8**, i8*** %87, align 8, !dbg !13457
  %89 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13458
  %90 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %89, i32 0, i32 3, !dbg !13459
  %91 = load i32, i32* %90, align 8, !dbg !13459
  %92 = sext i32 %91 to i64, !dbg !13456
  %93 = getelementptr inbounds i8*, i8** %88, i64 %92, !dbg !13456
  store i8* %85, i8** %93, align 8, !dbg !13460
  %94 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %9, align 8, !dbg !13461
  %95 = getelementptr inbounds %struct._Jbig2Metadata, %struct._Jbig2Metadata* %94, i32 0, i32 3, !dbg !13462
  %96 = load i32, i32* %95, align 8, !dbg !13463
  %97 = add nsw i32 %96, 1, !dbg !13463
  store i32 %97, i32* %95, align 8, !dbg !13463
  store i32 0, i32* %7, align 4, !dbg !13464
  br label %98, !dbg !13464

; <label>:98:                                     ; preds = %69, %59
  %99 = load i32, i32* %7, align 4, !dbg !13465
  ret i32 %99, !dbg !13465
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @jbig2_strndup(%struct._Jbig2Ctx.11*, i8*, i32) #0 !dbg !13466 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !13469, metadata !DIExpression()), !dbg !13470
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13471, metadata !DIExpression()), !dbg !13472
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13473, metadata !DIExpression()), !dbg !13474
  call void @llvm.dbg.declare(metadata i8** %7, metadata !13475, metadata !DIExpression()), !dbg !13476
  %8 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !13477
  %9 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %8, i32 0, i32 0, !dbg !13478
  %10 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %9, align 8, !dbg !13478
  %11 = load i32, i32* %6, align 4, !dbg !13479
  %12 = sext i32 %11 to i64, !dbg !13479
  %13 = mul i64 %12, 1, !dbg !13480
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !13481
  %14 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %10, i64 %13), !dbg !13481
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !13476
  store i8* %14, i8** %7, align 8, !dbg !13476
  %15 = load i8*, i8** %7, align 8, !dbg !13482
  %16 = icmp eq i8* %15, null, !dbg !13484
  br i1 %16, label %17, label %20, !dbg !13485

; <label>:17:                                     ; preds = %3
  %18 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !13486
  %19 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %18, i32 3, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6.263, i32 0, i32 0)), !dbg !13488
  br label %25, !dbg !13489

; <label>:20:                                     ; preds = %3
  %21 = load i8*, i8** %7, align 8, !dbg !13490
  %22 = load i8*, i8** %5, align 8, !dbg !13492
  %23 = load i32, i32* %6, align 4, !dbg !13493
  %24 = sext i32 %23 to i64, !dbg !13493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 %24, i1 false), !dbg !13494
  br label %25

; <label>:25:                                     ; preds = %20, %17
  %26 = load i8*, i8** %7, align 8, !dbg !13495
  ret i8* %26, !dbg !13496
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_comment_ascii(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !13497 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2Ctx.11*, align 8
  %6 = alloca %struct._Jbig2Segment*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct._Jbig2Metadata*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %5, metadata !13500, metadata !DIExpression()), !dbg !13501
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %6, metadata !13502, metadata !DIExpression()), !dbg !13503
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !13504, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.declare(metadata i8** %8, metadata !13506, metadata !DIExpression()), !dbg !13507
  %15 = load i8*, i8** %7, align 8, !dbg !13508
  %16 = getelementptr inbounds i8, i8* %15, i64 4, !dbg !13509
  store i8* %16, i8** %8, align 8, !dbg !13507
  call void @llvm.dbg.declare(metadata i8** %9, metadata !13510, metadata !DIExpression()), !dbg !13511
  %17 = load i8*, i8** %7, align 8, !dbg !13512
  %18 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !13513
  %19 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %18, i32 0, i32 3, !dbg !13514
  %20 = load i64, i64* %19, align 8, !dbg !13514
  %21 = getelementptr inbounds i8, i8* %17, i64 %20, !dbg !13515
  store i8* %21, i8** %9, align 8, !dbg !13511
  call void @llvm.dbg.declare(metadata %struct._Jbig2Metadata** %10, metadata !13516, metadata !DIExpression()), !dbg !13517
  call void @llvm.dbg.declare(metadata i8** %11, metadata !13518, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.declare(metadata i8** %12, metadata !13520, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13522, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13524, metadata !DIExpression()), !dbg !13525
  %22 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13526
  %23 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !13527
  %24 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %23, i32 0, i32 0, !dbg !13528
  %25 = load i32, i32* %24, align 8, !dbg !13528
  %26 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %22, i32 1, i32 %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.266, i32 0, i32 0)), !dbg !13529
  %27 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13530
  %28 = call %struct._Jbig2Metadata* @jbig2_metadata_new(%struct._Jbig2Ctx.11* %27, i32 0), !dbg !13531
  store %struct._Jbig2Metadata* %28, %struct._Jbig2Metadata** %10, align 8, !dbg !13532
  %29 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %10, align 8, !dbg !13533
  %30 = icmp eq %struct._Jbig2Metadata* %29, null, !dbg !13535
  br i1 %30, label %31, label %37, !dbg !13536

; <label>:31:                                     ; preds = %3
  %32 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13537
  %33 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !13539
  %34 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %33, i32 0, i32 0, !dbg !13540
  %35 = load i32, i32* %34, align 8, !dbg !13540
  %36 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %32, i32 2, i32 %35, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.267, i32 0, i32 0)), !dbg !13541
  store i32 -1, i32* %4, align 4, !dbg !13542
  br label %105, !dbg !13542

; <label>:37:                                     ; preds = %3
  br label %38, !dbg !13543

; <label>:38:                                     ; preds = %77, %37
  %39 = load i8*, i8** %8, align 8, !dbg !13544
  %40 = load i8, i8* %39, align 1, !dbg !13545
  %41 = sext i8 %40 to i32, !dbg !13545
  %42 = icmp ne i32 %41, 0, !dbg !13545
  br i1 %42, label %43, label %47, !dbg !13546

; <label>:43:                                     ; preds = %38
  %44 = load i8*, i8** %8, align 8, !dbg !13547
  %45 = load i8*, i8** %9, align 8, !dbg !13548
  %46 = icmp ult i8* %44, %45, !dbg !13549
  br label %47

; <label>:47:                                     ; preds = %43, %38
  %48 = phi i1 [ false, %38 ], [ %46, %43 ], !dbg !13550
  br i1 %48, label %49, label %92, !dbg !13543

; <label>:49:                                     ; preds = %47
  %50 = load i8*, i8** %8, align 8, !dbg !13551
  %51 = call i64 @strlen(i8* %50) #10, !dbg !13553
  %52 = add i64 %51, 1, !dbg !13554
  %53 = trunc i64 %52 to i32, !dbg !13553
  store i32 %53, i32* %13, align 4, !dbg !13555
  %54 = load i8*, i8** %8, align 8, !dbg !13556
  store i8* %54, i8** %11, align 8, !dbg !13557
  %55 = load i32, i32* %13, align 4, !dbg !13558
  %56 = load i8*, i8** %8, align 8, !dbg !13559
  %57 = sext i32 %55 to i64, !dbg !13559
  %58 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !13559
  store i8* %58, i8** %8, align 8, !dbg !13559
  %59 = load i8*, i8** %8, align 8, !dbg !13560
  %60 = load i8*, i8** %9, align 8, !dbg !13562
  %61 = icmp uge i8* %59, %60, !dbg !13563
  br i1 %61, label %62, label %63, !dbg !13564

; <label>:62:                                     ; preds = %49
  br label %97, !dbg !13565

; <label>:63:                                     ; preds = %49
  %64 = load i8*, i8** %8, align 8, !dbg !13566
  %65 = call i64 @strlen(i8* %64) #10, !dbg !13567
  %66 = add i64 %65, 1, !dbg !13568
  %67 = trunc i64 %66 to i32, !dbg !13567
  store i32 %67, i32* %14, align 4, !dbg !13569
  %68 = load i8*, i8** %8, align 8, !dbg !13570
  store i8* %68, i8** %12, align 8, !dbg !13571
  %69 = load i32, i32* %14, align 4, !dbg !13572
  %70 = load i8*, i8** %8, align 8, !dbg !13573
  %71 = sext i32 %69 to i64, !dbg !13573
  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !13573
  store i8* %72, i8** %8, align 8, !dbg !13573
  %73 = load i8*, i8** %8, align 8, !dbg !13574
  %74 = load i8*, i8** %9, align 8, !dbg !13576
  %75 = icmp uge i8* %73, %74, !dbg !13577
  br i1 %75, label %76, label %77, !dbg !13578

; <label>:76:                                     ; preds = %63
  br label %97, !dbg !13579

; <label>:77:                                     ; preds = %63
  %78 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13580
  %79 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %10, align 8, !dbg !13581
  %80 = load i8*, i8** %11, align 8, !dbg !13582
  %81 = load i32, i32* %13, align 4, !dbg !13583
  %82 = load i8*, i8** %12, align 8, !dbg !13584
  %83 = load i32, i32* %14, align 4, !dbg !13585
  %84 = call i32 @jbig2_metadata_add(%struct._Jbig2Ctx.11* %78, %struct._Jbig2Metadata* %79, i8* %80, i32 %81, i8* %82, i32 %83), !dbg !13586
  %85 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13587
  %86 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !13588
  %87 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %86, i32 0, i32 0, !dbg !13589
  %88 = load i32, i32* %87, align 8, !dbg !13589
  %89 = load i8*, i8** %11, align 8, !dbg !13590
  %90 = load i8*, i8** %12, align 8, !dbg !13591
  %91 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %85, i32 1, i32 %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.268, i32 0, i32 0), i8* %89, i8* %90), !dbg !13592
  br label %38, !dbg !13543, !llvm.loop !13593

; <label>:92:                                     ; preds = %47
  %93 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %10, align 8, !dbg !13595
  %94 = bitcast %struct._Jbig2Metadata* %93 to i8*, !dbg !13595
  %95 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !13596
  %96 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %95, i32 0, i32 6, !dbg !13597
  store i8* %94, i8** %96, align 8, !dbg !13598
  store i32 0, i32* %4, align 4, !dbg !13599
  br label %105, !dbg !13599

; <label>:97:                                     ; preds = %76, %62
  %98 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13600
  %99 = load %struct._Jbig2Metadata*, %struct._Jbig2Metadata** %10, align 8, !dbg !13601
  call void @jbig2_metadata_free(%struct._Jbig2Ctx.11* %98, %struct._Jbig2Metadata* %99), !dbg !13602
  %100 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %5, align 8, !dbg !13603
  %101 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %6, align 8, !dbg !13604
  %102 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %101, i32 0, i32 0, !dbg !13605
  %103 = load i32, i32* %102, align 8, !dbg !13605
  %104 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %100, i32 2, i32 %103, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.269, i32 0, i32 0)), !dbg !13606
  store i32 %104, i32* %4, align 4, !dbg !13607
  br label %105, !dbg !13607

; <label>:105:                                    ; preds = %97, %92, %31
  %106 = load i32, i32* %4, align 4, !dbg !13608
  ret i32 %106, !dbg !13608
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_parse_comment_unicode(%struct._Jbig2Ctx.11*, %struct._Jbig2Segment*, i8*) #0 !dbg !13609 {
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2Segment*, align 8
  %6 = alloca i8*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !13610, metadata !DIExpression()), !dbg !13611
  store %struct._Jbig2Segment* %1, %struct._Jbig2Segment** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Segment** %5, metadata !13612, metadata !DIExpression()), !dbg !13613
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13614, metadata !DIExpression()), !dbg !13615
  %7 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !13616
  %8 = load %struct._Jbig2Segment*, %struct._Jbig2Segment** %5, align 8, !dbg !13617
  %9 = getelementptr inbounds %struct._Jbig2Segment, %struct._Jbig2Segment* %8, i32 0, i32 0, !dbg !13618
  %10 = load i32, i32* %9, align 8, !dbg !13618
  %11 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %7, i32 2, i32 %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.272, i32 0, i32 0)), !dbg !13619
  ret i32 %11, !dbg !13620
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2ArithState* @jbig2_arith_new(%struct._Jbig2Ctx.11*, %struct._Jbig2WordStream*) #0 !dbg !13621 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2WordStream*, align 8
  %5 = alloca %struct._Jbig2ArithState*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !13701, metadata !DIExpression()), !dbg !13702
  store %struct._Jbig2WordStream* %1, %struct._Jbig2WordStream** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %4, metadata !13703, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %5, metadata !13705, metadata !DIExpression()), !dbg !13706
  %6 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !13707
  %7 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %6, i32 0, i32 0, !dbg !13708
  %8 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %7, align 8, !dbg !13708
  %9 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %8, i64 40), !dbg !13709
  %10 = bitcast i8* %9 to %struct._Jbig2ArithState*, !dbg !13710
  store %struct._Jbig2ArithState* %10, %struct._Jbig2ArithState** %5, align 8, !dbg !13711
  %11 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !13712
  %12 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13713
  %13 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %12, i32 0, i32 5, !dbg !13714
  store %struct._Jbig2WordStream* %11, %struct._Jbig2WordStream** %13, align 8, !dbg !13715
  %14 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !13716
  %15 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %14, i32 0, i32 0, !dbg !13717
  %16 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %15, align 8, !dbg !13717
  %17 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !13718
  %18 = call i32 %16(%struct._Jbig2WordStream* %17, i32 0), !dbg !13716
  %19 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13719
  %20 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %19, i32 0, i32 3, !dbg !13720
  store i32 %18, i32* %20, align 4, !dbg !13721
  %21 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13722
  %22 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %21, i32 0, i32 4, !dbg !13723
  store i32 4, i32* %22, align 8, !dbg !13724
  %23 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13725
  %24 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %23, i32 0, i32 6, !dbg !13726
  store i32 4, i32* %24, align 8, !dbg !13727
  %25 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13728
  %26 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %25, i32 0, i32 3, !dbg !13729
  %27 = load i32, i32* %26, align 4, !dbg !13729
  %28 = lshr i32 %27, 8, !dbg !13730
  %29 = and i32 %28, 16711680, !dbg !13731
  %30 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13732
  %31 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %30, i32 0, i32 0, !dbg !13733
  store i32 %29, i32* %31, align 8, !dbg !13734
  %32 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13735
  call void @jbig2_arith_bytein(%struct._Jbig2ArithState* %32), !dbg !13736
  %33 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13737
  %34 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %33, i32 0, i32 0, !dbg !13738
  %35 = load i32, i32* %34, align 8, !dbg !13739
  %36 = shl i32 %35, 7, !dbg !13739
  store i32 %36, i32* %34, align 8, !dbg !13739
  %37 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13740
  %38 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %37, i32 0, i32 2, !dbg !13741
  %39 = load i32, i32* %38, align 8, !dbg !13742
  %40 = sub nsw i32 %39, 7, !dbg !13742
  store i32 %40, i32* %38, align 8, !dbg !13742
  %41 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13743
  %42 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %41, i32 0, i32 1, !dbg !13744
  store i32 32768, i32* %42, align 4, !dbg !13745
  %43 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !13746
  ret %struct._Jbig2ArithState* %43, !dbg !13747
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_arith_bytein(%struct._Jbig2ArithState*) #0 !dbg !13748 {
  %2 = alloca %struct._Jbig2ArithState*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %struct._Jbig2WordStream*, align 8
  %6 = alloca %struct._Jbig2WordStream*, align 8
  store %struct._Jbig2ArithState* %0, %struct._Jbig2ArithState** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %2, metadata !13751, metadata !DIExpression()), !dbg !13752
  call void @llvm.dbg.declare(metadata i8* %3, metadata !13753, metadata !DIExpression()), !dbg !13754
  %7 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13755
  %8 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %7, i32 0, i32 3, !dbg !13756
  %9 = load i32, i32* %8, align 4, !dbg !13756
  %10 = lshr i32 %9, 24, !dbg !13757
  %11 = and i32 %10, 255, !dbg !13758
  %12 = trunc i32 %11 to i8, !dbg !13759
  store i8 %12, i8* %3, align 1, !dbg !13760
  %13 = load i8, i8* %3, align 1, !dbg !13761
  %14 = zext i8 %13 to i32, !dbg !13761
  %15 = icmp eq i32 %14, 255, !dbg !13763
  br i1 %15, label %16, label %113, !dbg !13764

; <label>:16:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !13765, metadata !DIExpression()), !dbg !13767
  %17 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13768
  %18 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %17, i32 0, i32 4, !dbg !13770
  %19 = load i32, i32* %18, align 8, !dbg !13770
  %20 = icmp eq i32 %19, 1, !dbg !13771
  br i1 %20, label %21, label %76, !dbg !13772

; <label>:21:                                     ; preds = %16
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %5, metadata !13773, metadata !DIExpression()), !dbg !13775
  %22 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13776
  %23 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %22, i32 0, i32 5, !dbg !13777
  %24 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %23, align 8, !dbg !13777
  store %struct._Jbig2WordStream* %24, %struct._Jbig2WordStream** %5, align 8, !dbg !13775
  %25 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %5, align 8, !dbg !13778
  %26 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %25, i32 0, i32 0, !dbg !13779
  %27 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %26, align 8, !dbg !13779
  %28 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %5, align 8, !dbg !13780
  %29 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13781
  %30 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %29, i32 0, i32 6, !dbg !13782
  %31 = load i32, i32* %30, align 8, !dbg !13782
  %32 = call i32 %27(%struct._Jbig2WordStream* %28, i32 %31), !dbg !13778
  %33 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13783
  %34 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %33, i32 0, i32 3, !dbg !13784
  store i32 %32, i32* %34, align 4, !dbg !13785
  %35 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13786
  %36 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %35, i32 0, i32 6, !dbg !13787
  %37 = load i32, i32* %36, align 8, !dbg !13788
  %38 = add nsw i32 %37, 4, !dbg !13788
  store i32 %38, i32* %36, align 8, !dbg !13788
  %39 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13789
  %40 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %39, i32 0, i32 3, !dbg !13790
  %41 = load i32, i32* %40, align 4, !dbg !13790
  %42 = lshr i32 %41, 24, !dbg !13791
  %43 = and i32 %42, 255, !dbg !13792
  %44 = trunc i32 %43 to i8, !dbg !13793
  store i8 %44, i8* %4, align 1, !dbg !13794
  %45 = load i8, i8* %4, align 1, !dbg !13795
  %46 = zext i8 %45 to i32, !dbg !13795
  %47 = icmp sgt i32 %46, 143, !dbg !13797
  br i1 %47, label %48, label %63, !dbg !13798

; <label>:48:                                     ; preds = %21
  %49 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13799
  %50 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %49, i32 0, i32 0, !dbg !13801
  %51 = load i32, i32* %50, align 8, !dbg !13802
  %52 = add i32 %51, 65280, !dbg !13802
  store i32 %52, i32* %50, align 8, !dbg !13802
  %53 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13803
  %54 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %53, i32 0, i32 2, !dbg !13804
  store i32 8, i32* %54, align 8, !dbg !13805
  %55 = load i8, i8* %4, align 1, !dbg !13806
  %56 = zext i8 %55 to i32, !dbg !13806
  %57 = or i32 65280, %56, !dbg !13807
  %58 = shl i32 %57, 16, !dbg !13808
  %59 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13809
  %60 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %59, i32 0, i32 3, !dbg !13810
  store i32 %58, i32* %60, align 4, !dbg !13811
  %61 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13812
  %62 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %61, i32 0, i32 4, !dbg !13813
  store i32 2, i32* %62, align 8, !dbg !13814
  br label %75, !dbg !13815

; <label>:63:                                     ; preds = %21
  %64 = load i8, i8* %4, align 1, !dbg !13816
  %65 = zext i8 %64 to i32, !dbg !13816
  %66 = shl i32 %65, 9, !dbg !13818
  %67 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13819
  %68 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %67, i32 0, i32 0, !dbg !13820
  %69 = load i32, i32* %68, align 8, !dbg !13821
  %70 = add i32 %69, %66, !dbg !13821
  store i32 %70, i32* %68, align 8, !dbg !13821
  %71 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13822
  %72 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %71, i32 0, i32 2, !dbg !13823
  store i32 7, i32* %72, align 8, !dbg !13824
  %73 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13825
  %74 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %73, i32 0, i32 4, !dbg !13826
  store i32 4, i32* %74, align 8, !dbg !13827
  br label %75

; <label>:75:                                     ; preds = %63, %48
  br label %112, !dbg !13828

; <label>:76:                                     ; preds = %16
  %77 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13829
  %78 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %77, i32 0, i32 3, !dbg !13831
  %79 = load i32, i32* %78, align 4, !dbg !13831
  %80 = lshr i32 %79, 16, !dbg !13832
  %81 = and i32 %80, 255, !dbg !13833
  %82 = trunc i32 %81 to i8, !dbg !13834
  store i8 %82, i8* %4, align 1, !dbg !13835
  %83 = load i8, i8* %4, align 1, !dbg !13836
  %84 = zext i8 %83 to i32, !dbg !13836
  %85 = icmp sgt i32 %84, 143, !dbg !13838
  br i1 %85, label %86, label %93, !dbg !13839

; <label>:86:                                     ; preds = %76
  %87 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13840
  %88 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %87, i32 0, i32 0, !dbg !13842
  %89 = load i32, i32* %88, align 8, !dbg !13843
  %90 = add i32 %89, 65280, !dbg !13843
  store i32 %90, i32* %88, align 8, !dbg !13843
  %91 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13844
  %92 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %91, i32 0, i32 2, !dbg !13845
  store i32 8, i32* %92, align 8, !dbg !13846
  br label %111, !dbg !13847

; <label>:93:                                     ; preds = %76
  %94 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13848
  %95 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %94, i32 0, i32 4, !dbg !13850
  %96 = load i32, i32* %95, align 8, !dbg !13851
  %97 = add nsw i32 %96, -1, !dbg !13851
  store i32 %97, i32* %95, align 8, !dbg !13851
  %98 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13852
  %99 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %98, i32 0, i32 3, !dbg !13853
  %100 = load i32, i32* %99, align 4, !dbg !13854
  %101 = shl i32 %100, 8, !dbg !13854
  store i32 %101, i32* %99, align 4, !dbg !13854
  %102 = load i8, i8* %4, align 1, !dbg !13855
  %103 = zext i8 %102 to i32, !dbg !13855
  %104 = shl i32 %103, 9, !dbg !13856
  %105 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13857
  %106 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %105, i32 0, i32 0, !dbg !13858
  %107 = load i32, i32* %106, align 8, !dbg !13859
  %108 = add i32 %107, %104, !dbg !13859
  store i32 %108, i32* %106, align 8, !dbg !13859
  %109 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13860
  %110 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %109, i32 0, i32 2, !dbg !13861
  store i32 7, i32* %110, align 8, !dbg !13862
  br label %111

; <label>:111:                                    ; preds = %93, %86
  br label %112

; <label>:112:                                    ; preds = %111, %75
  br label %162, !dbg !13863

; <label>:113:                                    ; preds = %1
  %114 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13864
  %115 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %114, i32 0, i32 2, !dbg !13866
  store i32 8, i32* %115, align 8, !dbg !13867
  %116 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13868
  %117 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %116, i32 0, i32 3, !dbg !13869
  %118 = load i32, i32* %117, align 4, !dbg !13870
  %119 = shl i32 %118, 8, !dbg !13870
  store i32 %119, i32* %117, align 4, !dbg !13870
  %120 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13871
  %121 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %120, i32 0, i32 4, !dbg !13872
  %122 = load i32, i32* %121, align 8, !dbg !13873
  %123 = add nsw i32 %122, -1, !dbg !13873
  store i32 %123, i32* %121, align 8, !dbg !13873
  %124 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13874
  %125 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %124, i32 0, i32 4, !dbg !13876
  %126 = load i32, i32* %125, align 8, !dbg !13876
  %127 = icmp eq i32 %126, 0, !dbg !13877
  br i1 %127, label %128, label %148, !dbg !13878

; <label>:128:                                    ; preds = %113
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %6, metadata !13879, metadata !DIExpression()), !dbg !13881
  %129 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13882
  %130 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %129, i32 0, i32 5, !dbg !13883
  %131 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %130, align 8, !dbg !13883
  store %struct._Jbig2WordStream* %131, %struct._Jbig2WordStream** %6, align 8, !dbg !13881
  %132 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %6, align 8, !dbg !13884
  %133 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %132, i32 0, i32 0, !dbg !13885
  %134 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %133, align 8, !dbg !13885
  %135 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %6, align 8, !dbg !13886
  %136 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13887
  %137 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %136, i32 0, i32 6, !dbg !13888
  %138 = load i32, i32* %137, align 8, !dbg !13888
  %139 = call i32 %134(%struct._Jbig2WordStream* %135, i32 %138), !dbg !13884
  %140 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13889
  %141 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %140, i32 0, i32 3, !dbg !13890
  store i32 %139, i32* %141, align 4, !dbg !13891
  %142 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13892
  %143 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %142, i32 0, i32 6, !dbg !13893
  %144 = load i32, i32* %143, align 8, !dbg !13894
  %145 = add nsw i32 %144, 4, !dbg !13894
  store i32 %145, i32* %143, align 8, !dbg !13894
  %146 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13895
  %147 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %146, i32 0, i32 4, !dbg !13896
  store i32 4, i32* %147, align 8, !dbg !13897
  br label %148, !dbg !13898

; <label>:148:                                    ; preds = %128, %113
  %149 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13899
  %150 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %149, i32 0, i32 3, !dbg !13900
  %151 = load i32, i32* %150, align 4, !dbg !13900
  %152 = lshr i32 %151, 24, !dbg !13901
  %153 = and i32 %152, 255, !dbg !13902
  %154 = trunc i32 %153 to i8, !dbg !13903
  store i8 %154, i8* %3, align 1, !dbg !13904
  %155 = load i8, i8* %3, align 1, !dbg !13905
  %156 = zext i8 %155 to i32, !dbg !13905
  %157 = shl i32 %156, 8, !dbg !13906
  %158 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !13907
  %159 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %158, i32 0, i32 0, !dbg !13908
  %160 = load i32, i32* %159, align 8, !dbg !13909
  %161 = add i32 %160, %157, !dbg !13909
  store i32 %161, i32* %159, align 8, !dbg !13909
  br label %162

; <label>:162:                                    ; preds = %148, %112
  ret void, !dbg !13910
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_arith_decode(%struct._Jbig2ArithState*, i8*) #0 !dbg !13911 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._Jbig2ArithState*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.Jbig2ArithQe*, align 8
  %8 = alloca i32, align 4
  store %struct._Jbig2ArithState* %0, %struct._Jbig2ArithState** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %4, metadata !13914, metadata !DIExpression()), !dbg !13915
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13916, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.declare(metadata i8* %6, metadata !13918, metadata !DIExpression()), !dbg !13919
  %9 = load i8*, i8** %5, align 8, !dbg !13920
  %10 = load i8, i8* %9, align 1, !dbg !13921
  store i8 %10, i8* %6, align 1, !dbg !13919
  call void @llvm.dbg.declare(metadata %struct.Jbig2ArithQe** %7, metadata !13922, metadata !DIExpression()), !dbg !13924
  %11 = load i8, i8* %6, align 1, !dbg !13925
  %12 = zext i8 %11 to i32, !dbg !13925
  %13 = and i32 %12, 127, !dbg !13926
  %14 = sext i32 %13 to i64, !dbg !13927
  %15 = getelementptr inbounds [47 x %struct.Jbig2ArithQe], [47 x %struct.Jbig2ArithQe]* @jbig2_arith_Qe, i64 0, i64 %14, !dbg !13927
  store %struct.Jbig2ArithQe* %15, %struct.Jbig2ArithQe** %7, align 8, !dbg !13924
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13928, metadata !DIExpression()), !dbg !13929
  %16 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13930
  %17 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %16, i32 0, i32 0, !dbg !13931
  %18 = load i16, i16* %17, align 2, !dbg !13931
  %19 = zext i16 %18 to i32, !dbg !13930
  %20 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13932
  %21 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %20, i32 0, i32 1, !dbg !13933
  %22 = load i32, i32* %21, align 4, !dbg !13934
  %23 = sub nsw i32 %22, %19, !dbg !13934
  store i32 %23, i32* %21, align 4, !dbg !13934
  %24 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13935
  %25 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %24, i32 0, i32 0, !dbg !13937
  %26 = load i32, i32* %25, align 8, !dbg !13937
  %27 = lshr i32 %26, 16, !dbg !13938
  %28 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13939
  %29 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %28, i32 0, i32 0, !dbg !13940
  %30 = load i16, i16* %29, align 2, !dbg !13940
  %31 = zext i16 %30 to i32, !dbg !13939
  %32 = icmp ult i32 %27, %31, !dbg !13941
  br i1 %32, label %91, label %33, !dbg !13942

; <label>:33:                                     ; preds = %2
  %34 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13943
  %35 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %34, i32 0, i32 0, !dbg !13945
  %36 = load i16, i16* %35, align 2, !dbg !13945
  %37 = zext i16 %36 to i32, !dbg !13943
  %38 = shl i32 %37, 16, !dbg !13946
  %39 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13947
  %40 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %39, i32 0, i32 0, !dbg !13948
  %41 = load i32, i32* %40, align 8, !dbg !13949
  %42 = sub i32 %41, %38, !dbg !13949
  store i32 %42, i32* %40, align 8, !dbg !13949
  %43 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13950
  %44 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %43, i32 0, i32 1, !dbg !13952
  %45 = load i32, i32* %44, align 4, !dbg !13952
  %46 = and i32 %45, 32768, !dbg !13953
  %47 = icmp eq i32 %46, 0, !dbg !13954
  br i1 %47, label %48, label %87, !dbg !13955

; <label>:48:                                     ; preds = %33
  %49 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13956
  %50 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %49, i32 0, i32 1, !dbg !13959
  %51 = load i32, i32* %50, align 4, !dbg !13959
  %52 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13960
  %53 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %52, i32 0, i32 0, !dbg !13961
  %54 = load i16, i16* %53, align 2, !dbg !13961
  %55 = zext i16 %54 to i32, !dbg !13960
  %56 = icmp slt i32 %51, %55, !dbg !13962
  br i1 %56, label %57, label %71, !dbg !13963

; <label>:57:                                     ; preds = %48
  %58 = load i8, i8* %6, align 1, !dbg !13964
  %59 = zext i8 %58 to i32, !dbg !13964
  %60 = ashr i32 %59, 7, !dbg !13966
  %61 = sub nsw i32 1, %60, !dbg !13967
  store i32 %61, i32* %8, align 4, !dbg !13968
  %62 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13969
  %63 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %62, i32 0, i32 2, !dbg !13970
  %64 = load i8, i8* %63, align 1, !dbg !13970
  %65 = zext i8 %64 to i32, !dbg !13969
  %66 = load i8*, i8** %5, align 8, !dbg !13971
  %67 = load i8, i8* %66, align 1, !dbg !13972
  %68 = zext i8 %67 to i32, !dbg !13972
  %69 = xor i32 %68, %65, !dbg !13972
  %70 = trunc i32 %69 to i8, !dbg !13972
  store i8 %70, i8* %66, align 1, !dbg !13972
  br label %84, !dbg !13973

; <label>:71:                                     ; preds = %48
  %72 = load i8, i8* %6, align 1, !dbg !13974
  %73 = zext i8 %72 to i32, !dbg !13974
  %74 = ashr i32 %73, 7, !dbg !13976
  store i32 %74, i32* %8, align 4, !dbg !13977
  %75 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13978
  %76 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %75, i32 0, i32 1, !dbg !13979
  %77 = load i8, i8* %76, align 2, !dbg !13979
  %78 = zext i8 %77 to i32, !dbg !13978
  %79 = load i8*, i8** %5, align 8, !dbg !13980
  %80 = load i8, i8* %79, align 1, !dbg !13981
  %81 = zext i8 %80 to i32, !dbg !13981
  %82 = xor i32 %81, %78, !dbg !13981
  %83 = trunc i32 %82 to i8, !dbg !13981
  store i8 %83, i8* %79, align 1, !dbg !13981
  br label %84

; <label>:84:                                     ; preds = %71, %57
  %85 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13982
  call void @jbig2_arith_renormd(%struct._Jbig2ArithState* %85), !dbg !13983
  %86 = load i32, i32* %8, align 4, !dbg !13984
  store i32 %86, i32* %3, align 4, !dbg !13985
  br label %142, !dbg !13985

; <label>:87:                                     ; preds = %33
  %88 = load i8, i8* %6, align 1, !dbg !13986
  %89 = zext i8 %88 to i32, !dbg !13986
  %90 = ashr i32 %89, 7, !dbg !13987
  store i32 %90, i32* %3, align 4, !dbg !13988
  br label %142, !dbg !13988

; <label>:91:                                     ; preds = %2
  %92 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !13989
  %93 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %92, i32 0, i32 1, !dbg !13992
  %94 = load i32, i32* %93, align 4, !dbg !13992
  %95 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13993
  %96 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %95, i32 0, i32 0, !dbg !13994
  %97 = load i16, i16* %96, align 2, !dbg !13994
  %98 = zext i16 %97 to i32, !dbg !13993
  %99 = icmp slt i32 %94, %98, !dbg !13995
  br i1 %99, label %100, label %119, !dbg !13996

; <label>:100:                                    ; preds = %91
  %101 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !13997
  %102 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %101, i32 0, i32 0, !dbg !13999
  %103 = load i16, i16* %102, align 2, !dbg !13999
  %104 = zext i16 %103 to i32, !dbg !13997
  %105 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !14000
  %106 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %105, i32 0, i32 1, !dbg !14001
  store i32 %104, i32* %106, align 4, !dbg !14002
  %107 = load i8, i8* %6, align 1, !dbg !14003
  %108 = zext i8 %107 to i32, !dbg !14003
  %109 = ashr i32 %108, 7, !dbg !14004
  store i32 %109, i32* %8, align 4, !dbg !14005
  %110 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !14006
  %111 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %110, i32 0, i32 1, !dbg !14007
  %112 = load i8, i8* %111, align 2, !dbg !14007
  %113 = zext i8 %112 to i32, !dbg !14006
  %114 = load i8*, i8** %5, align 8, !dbg !14008
  %115 = load i8, i8* %114, align 1, !dbg !14009
  %116 = zext i8 %115 to i32, !dbg !14009
  %117 = xor i32 %116, %113, !dbg !14009
  %118 = trunc i32 %117 to i8, !dbg !14009
  store i8 %118, i8* %114, align 1, !dbg !14009
  br label %139, !dbg !14010

; <label>:119:                                    ; preds = %91
  %120 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !14011
  %121 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %120, i32 0, i32 0, !dbg !14013
  %122 = load i16, i16* %121, align 2, !dbg !14013
  %123 = zext i16 %122 to i32, !dbg !14011
  %124 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !14014
  %125 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %124, i32 0, i32 1, !dbg !14015
  store i32 %123, i32* %125, align 4, !dbg !14016
  %126 = load i8, i8* %6, align 1, !dbg !14017
  %127 = zext i8 %126 to i32, !dbg !14017
  %128 = ashr i32 %127, 7, !dbg !14018
  %129 = sub nsw i32 1, %128, !dbg !14019
  store i32 %129, i32* %8, align 4, !dbg !14020
  %130 = load %struct.Jbig2ArithQe*, %struct.Jbig2ArithQe** %7, align 8, !dbg !14021
  %131 = getelementptr inbounds %struct.Jbig2ArithQe, %struct.Jbig2ArithQe* %130, i32 0, i32 2, !dbg !14022
  %132 = load i8, i8* %131, align 1, !dbg !14022
  %133 = zext i8 %132 to i32, !dbg !14021
  %134 = load i8*, i8** %5, align 8, !dbg !14023
  %135 = load i8, i8* %134, align 1, !dbg !14024
  %136 = zext i8 %135 to i32, !dbg !14024
  %137 = xor i32 %136, %133, !dbg !14024
  %138 = trunc i32 %137 to i8, !dbg !14024
  store i8 %138, i8* %134, align 1, !dbg !14024
  br label %139

; <label>:139:                                    ; preds = %119, %100
  %140 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %4, align 8, !dbg !14025
  call void @jbig2_arith_renormd(%struct._Jbig2ArithState* %140), !dbg !14026
  %141 = load i32, i32* %8, align 4, !dbg !14027
  store i32 %141, i32* %3, align 4, !dbg !14028
  br label %142, !dbg !14028

; <label>:142:                                    ; preds = %139, %87, %84
  %143 = load i32, i32* %3, align 4, !dbg !14029
  ret i32 %143, !dbg !14029
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @jbig2_arith_renormd(%struct._Jbig2ArithState*) #0 !dbg !14030 {
  %2 = alloca %struct._Jbig2ArithState*, align 8
  store %struct._Jbig2ArithState* %0, %struct._Jbig2ArithState** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %2, metadata !14031, metadata !DIExpression()), !dbg !14032
  br label %3, !dbg !14033

; <label>:3:                                      ; preds = %23, %1
  %4 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !14034
  %5 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %4, i32 0, i32 2, !dbg !14037
  %6 = load i32, i32* %5, align 8, !dbg !14037
  %7 = icmp eq i32 %6, 0, !dbg !14038
  br i1 %7, label %8, label %10, !dbg !14039

; <label>:8:                                      ; preds = %3
  %9 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !14040
  call void @jbig2_arith_bytein(%struct._Jbig2ArithState* %9), !dbg !14041
  br label %10, !dbg !14041

; <label>:10:                                     ; preds = %8, %3
  %11 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !14042
  %12 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %11, i32 0, i32 1, !dbg !14043
  %13 = load i32, i32* %12, align 4, !dbg !14044
  %14 = shl i32 %13, 1, !dbg !14044
  store i32 %14, i32* %12, align 4, !dbg !14044
  %15 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !14045
  %16 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %15, i32 0, i32 0, !dbg !14046
  %17 = load i32, i32* %16, align 8, !dbg !14047
  %18 = shl i32 %17, 1, !dbg !14047
  store i32 %18, i32* %16, align 8, !dbg !14047
  %19 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !14048
  %20 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %19, i32 0, i32 2, !dbg !14049
  %21 = load i32, i32* %20, align 8, !dbg !14050
  %22 = add nsw i32 %21, -1, !dbg !14050
  store i32 %22, i32* %20, align 8, !dbg !14050
  br label %23, !dbg !14051

; <label>:23:                                     ; preds = %10
  %24 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %2, align 8, !dbg !14052
  %25 = getelementptr inbounds %struct._Jbig2ArithState, %struct._Jbig2ArithState* %24, i32 0, i32 1, !dbg !14053
  %26 = load i32, i32* %25, align 4, !dbg !14053
  %27 = and i32 %26, 32768, !dbg !14054
  %28 = icmp eq i32 %27, 0, !dbg !14055
  br i1 %28, label %3, label %29, !dbg !14051, !llvm.loop !14056

; <label>:29:                                     ; preds = %23
  ret void, !dbg !14058
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2ArithIntCtx* @jbig2_arith_int_ctx_new(%struct._Jbig2Ctx.11*) #0 !dbg !14059 {
  %2 = alloca %struct._Jbig2Ctx.11*, align 8
  %3 = alloca %struct._Jbig2ArithIntCtx*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %2, metadata !14139, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %3, metadata !14141, metadata !DIExpression()), !dbg !14142
  %4 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %2, align 8, !dbg !14143
  %5 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %4, i32 0, i32 0, !dbg !14143
  %6 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %5, align 8, !dbg !14143
  %7 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %6, i64 512), !dbg !14143
  %8 = bitcast i8* %7 to %struct._Jbig2ArithIntCtx*, !dbg !14143
  store %struct._Jbig2ArithIntCtx* %8, %struct._Jbig2ArithIntCtx** %3, align 8, !dbg !14142
  %9 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %3, align 8, !dbg !14144
  %10 = getelementptr inbounds %struct._Jbig2ArithIntCtx, %struct._Jbig2ArithIntCtx* %9, i32 0, i32 0, !dbg !14145
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i32 0, i32 0, !dbg !14146
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 512, i1 false), !dbg !14146
  %12 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %3, align 8, !dbg !14147
  ret %struct._Jbig2ArithIntCtx* %12, !dbg !14148
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_arith_int_decode(%struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithState*, i32*) #0 !dbg !14149 {
  %4 = alloca %struct._Jbig2ArithIntCtx*, align 8
  %5 = alloca %struct._Jbig2ArithState*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._Jbig2ArithIntCtx* %0, %struct._Jbig2ArithIntCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %4, metadata !14152, metadata !DIExpression()), !dbg !14153
  store %struct._Jbig2ArithState* %1, %struct._Jbig2ArithState** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %5, metadata !14154, metadata !DIExpression()), !dbg !14155
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !14156, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.declare(metadata i8** %7, metadata !14158, metadata !DIExpression()), !dbg !14159
  %15 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %4, align 8, !dbg !14160
  %16 = getelementptr inbounds %struct._Jbig2ArithIntCtx, %struct._Jbig2ArithIntCtx* %15, i32 0, i32 0, !dbg !14161
  %17 = getelementptr inbounds [512 x i8], [512 x i8]* %16, i32 0, i32 0, !dbg !14160
  store i8* %17, i8** %7, align 8, !dbg !14159
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14162, metadata !DIExpression()), !dbg !14163
  store i32 1, i32* %8, align 4, !dbg !14163
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14164, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14166, metadata !DIExpression()), !dbg !14167
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14168, metadata !DIExpression()), !dbg !14169
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14170, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.declare(metadata i32* %13, metadata !14172, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14174, metadata !DIExpression()), !dbg !14175
  %18 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14176
  %19 = load i8*, i8** %7, align 8, !dbg !14177
  %20 = load i32, i32* %8, align 4, !dbg !14178
  %21 = sext i32 %20 to i64, !dbg !14177
  %22 = getelementptr inbounds i8, i8* %19, i64 %21, !dbg !14177
  %23 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %18, i8* %22), !dbg !14179
  store i32 %23, i32* %9, align 4, !dbg !14180
  %24 = load i32, i32* %8, align 4, !dbg !14181
  %25 = shl i32 %24, 1, !dbg !14182
  %26 = load i32, i32* %9, align 4, !dbg !14183
  %27 = or i32 %25, %26, !dbg !14184
  store i32 %27, i32* %8, align 4, !dbg !14185
  %28 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14186
  %29 = load i8*, i8** %7, align 8, !dbg !14187
  %30 = load i32, i32* %8, align 4, !dbg !14188
  %31 = sext i32 %30 to i64, !dbg !14187
  %32 = getelementptr inbounds i8, i8* %29, i64 %31, !dbg !14187
  %33 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %28, i8* %32), !dbg !14189
  store i32 %33, i32* %11, align 4, !dbg !14190
  %34 = load i32, i32* %8, align 4, !dbg !14191
  %35 = shl i32 %34, 1, !dbg !14192
  %36 = load i32, i32* %11, align 4, !dbg !14193
  %37 = or i32 %35, %36, !dbg !14194
  store i32 %37, i32* %8, align 4, !dbg !14195
  %38 = load i32, i32* %11, align 4, !dbg !14196
  %39 = icmp ne i32 %38, 0, !dbg !14196
  br i1 %39, label %40, label %101, !dbg !14198

; <label>:40:                                     ; preds = %3
  %41 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14199
  %42 = load i8*, i8** %7, align 8, !dbg !14201
  %43 = load i32, i32* %8, align 4, !dbg !14202
  %44 = sext i32 %43 to i64, !dbg !14201
  %45 = getelementptr inbounds i8, i8* %42, i64 %44, !dbg !14201
  %46 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %41, i8* %45), !dbg !14203
  store i32 %46, i32* %11, align 4, !dbg !14204
  %47 = load i32, i32* %8, align 4, !dbg !14205
  %48 = shl i32 %47, 1, !dbg !14206
  %49 = load i32, i32* %11, align 4, !dbg !14207
  %50 = or i32 %48, %49, !dbg !14208
  store i32 %50, i32* %8, align 4, !dbg !14209
  %51 = load i32, i32* %11, align 4, !dbg !14210
  %52 = icmp ne i32 %51, 0, !dbg !14210
  br i1 %52, label %53, label %99, !dbg !14212

; <label>:53:                                     ; preds = %40
  %54 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14213
  %55 = load i8*, i8** %7, align 8, !dbg !14215
  %56 = load i32, i32* %8, align 4, !dbg !14216
  %57 = sext i32 %56 to i64, !dbg !14215
  %58 = getelementptr inbounds i8, i8* %55, i64 %57, !dbg !14215
  %59 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %54, i8* %58), !dbg !14217
  store i32 %59, i32* %11, align 4, !dbg !14218
  %60 = load i32, i32* %8, align 4, !dbg !14219
  %61 = shl i32 %60, 1, !dbg !14220
  %62 = load i32, i32* %11, align 4, !dbg !14221
  %63 = or i32 %61, %62, !dbg !14222
  store i32 %63, i32* %8, align 4, !dbg !14223
  %64 = load i32, i32* %11, align 4, !dbg !14224
  %65 = icmp ne i32 %64, 0, !dbg !14224
  br i1 %65, label %66, label %97, !dbg !14226

; <label>:66:                                     ; preds = %53
  %67 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14227
  %68 = load i8*, i8** %7, align 8, !dbg !14229
  %69 = load i32, i32* %8, align 4, !dbg !14230
  %70 = sext i32 %69 to i64, !dbg !14229
  %71 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !14229
  %72 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %67, i8* %71), !dbg !14231
  store i32 %72, i32* %11, align 4, !dbg !14232
  %73 = load i32, i32* %8, align 4, !dbg !14233
  %74 = shl i32 %73, 1, !dbg !14234
  %75 = load i32, i32* %11, align 4, !dbg !14235
  %76 = or i32 %74, %75, !dbg !14236
  store i32 %76, i32* %8, align 4, !dbg !14237
  %77 = load i32, i32* %11, align 4, !dbg !14238
  %78 = icmp ne i32 %77, 0, !dbg !14238
  br i1 %78, label %79, label %95, !dbg !14240

; <label>:79:                                     ; preds = %66
  %80 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14241
  %81 = load i8*, i8** %7, align 8, !dbg !14243
  %82 = load i32, i32* %8, align 4, !dbg !14244
  %83 = sext i32 %82 to i64, !dbg !14243
  %84 = getelementptr inbounds i8, i8* %81, i64 %83, !dbg !14243
  %85 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %80, i8* %84), !dbg !14245
  store i32 %85, i32* %11, align 4, !dbg !14246
  %86 = load i32, i32* %8, align 4, !dbg !14247
  %87 = shl i32 %86, 1, !dbg !14248
  %88 = load i32, i32* %11, align 4, !dbg !14249
  %89 = or i32 %87, %88, !dbg !14250
  store i32 %89, i32* %8, align 4, !dbg !14251
  %90 = load i32, i32* %11, align 4, !dbg !14252
  %91 = icmp ne i32 %90, 0, !dbg !14252
  br i1 %91, label %92, label %93, !dbg !14254

; <label>:92:                                     ; preds = %79
  store i32 32, i32* %12, align 4, !dbg !14255
  store i32 4436, i32* %13, align 4, !dbg !14257
  br label %94, !dbg !14258

; <label>:93:                                     ; preds = %79
  store i32 12, i32* %12, align 4, !dbg !14259
  store i32 340, i32* %13, align 4, !dbg !14261
  br label %94

; <label>:94:                                     ; preds = %93, %92
  br label %96, !dbg !14262

; <label>:95:                                     ; preds = %66
  store i32 8, i32* %12, align 4, !dbg !14263
  store i32 84, i32* %13, align 4, !dbg !14265
  br label %96

; <label>:96:                                     ; preds = %95, %94
  br label %98, !dbg !14266

; <label>:97:                                     ; preds = %53
  store i32 6, i32* %12, align 4, !dbg !14267
  store i32 20, i32* %13, align 4, !dbg !14269
  br label %98

; <label>:98:                                     ; preds = %97, %96
  br label %100, !dbg !14270

; <label>:99:                                     ; preds = %40
  store i32 4, i32* %12, align 4, !dbg !14271
  store i32 4, i32* %13, align 4, !dbg !14273
  br label %100

; <label>:100:                                    ; preds = %99, %98
  br label %102, !dbg !14274

; <label>:101:                                    ; preds = %3
  store i32 2, i32* %12, align 4, !dbg !14275
  store i32 0, i32* %13, align 4, !dbg !14277
  br label %102

; <label>:102:                                    ; preds = %101, %100
  store i32 0, i32* %10, align 4, !dbg !14278
  store i32 0, i32* %14, align 4, !dbg !14279
  br label %103, !dbg !14281

; <label>:103:                                    ; preds = %126, %102
  %104 = load i32, i32* %14, align 4, !dbg !14282
  %105 = load i32, i32* %12, align 4, !dbg !14284
  %106 = icmp slt i32 %104, %105, !dbg !14285
  br i1 %106, label %107, label %129, !dbg !14286

; <label>:107:                                    ; preds = %103
  %108 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14287
  %109 = load i8*, i8** %7, align 8, !dbg !14289
  %110 = load i32, i32* %8, align 4, !dbg !14290
  %111 = sext i32 %110 to i64, !dbg !14289
  %112 = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !14289
  %113 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %108, i8* %112), !dbg !14291
  store i32 %113, i32* %11, align 4, !dbg !14292
  %114 = load i32, i32* %8, align 4, !dbg !14293
  %115 = shl i32 %114, 1, !dbg !14294
  %116 = and i32 %115, 511, !dbg !14295
  %117 = load i32, i32* %8, align 4, !dbg !14296
  %118 = and i32 %117, 256, !dbg !14297
  %119 = or i32 %116, %118, !dbg !14298
  %120 = load i32, i32* %11, align 4, !dbg !14299
  %121 = or i32 %119, %120, !dbg !14300
  store i32 %121, i32* %8, align 4, !dbg !14301
  %122 = load i32, i32* %10, align 4, !dbg !14302
  %123 = shl i32 %122, 1, !dbg !14303
  %124 = load i32, i32* %11, align 4, !dbg !14304
  %125 = or i32 %123, %124, !dbg !14305
  store i32 %125, i32* %10, align 4, !dbg !14306
  br label %126, !dbg !14307

; <label>:126:                                    ; preds = %107
  %127 = load i32, i32* %14, align 4, !dbg !14308
  %128 = add nsw i32 %127, 1, !dbg !14308
  store i32 %128, i32* %14, align 4, !dbg !14308
  br label %103, !dbg !14309, !llvm.loop !14310

; <label>:129:                                    ; preds = %103
  %130 = load i32, i32* %13, align 4, !dbg !14312
  %131 = load i32, i32* %10, align 4, !dbg !14313
  %132 = add nsw i32 %131, %130, !dbg !14313
  store i32 %132, i32* %10, align 4, !dbg !14313
  %133 = load i32, i32* %9, align 4, !dbg !14314
  %134 = icmp ne i32 %133, 0, !dbg !14314
  br i1 %134, label %135, label %138, !dbg !14314

; <label>:135:                                    ; preds = %129
  %136 = load i32, i32* %10, align 4, !dbg !14315
  %137 = sub nsw i32 0, %136, !dbg !14316
  br label %140, !dbg !14314

; <label>:138:                                    ; preds = %129
  %139 = load i32, i32* %10, align 4, !dbg !14317
  br label %140, !dbg !14314

; <label>:140:                                    ; preds = %138, %135
  %141 = phi i32 [ %137, %135 ], [ %139, %138 ], !dbg !14314
  store i32 %141, i32* %10, align 4, !dbg !14318
  %142 = load i32, i32* %10, align 4, !dbg !14319
  %143 = load i32*, i32** %6, align 8, !dbg !14320
  store i32 %142, i32* %143, align 4, !dbg !14321
  %144 = load i32, i32* %9, align 4, !dbg !14322
  %145 = icmp ne i32 %144, 0, !dbg !14322
  br i1 %145, label %146, label %149, !dbg !14323

; <label>:146:                                    ; preds = %140
  %147 = load i32, i32* %10, align 4, !dbg !14324
  %148 = icmp eq i32 %147, 0, !dbg !14325
  br label %149

; <label>:149:                                    ; preds = %146, %140
  %150 = phi i1 [ false, %140 ], [ %148, %146 ], !dbg !14326
  %151 = zext i1 %150 to i64, !dbg !14322
  %152 = select i1 %150, i32 1, i32 0, !dbg !14322
  ret i32 %152, !dbg !14327
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_arith_int_ctx_free(%struct._Jbig2Ctx.11*, %struct._Jbig2ArithIntCtx*) #0 !dbg !14328 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2ArithIntCtx*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !14331, metadata !DIExpression()), !dbg !14332
  store %struct._Jbig2ArithIntCtx* %1, %struct._Jbig2ArithIntCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIntCtx** %4, metadata !14333, metadata !DIExpression()), !dbg !14334
  %5 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !14335
  %6 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %5, i32 0, i32 0, !dbg !14336
  %7 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %6, align 8, !dbg !14336
  %8 = load %struct._Jbig2ArithIntCtx*, %struct._Jbig2ArithIntCtx** %4, align 8, !dbg !14337
  %9 = bitcast %struct._Jbig2ArithIntCtx* %8 to i8*, !dbg !14337
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %7, i8* %9), !dbg !14338
  ret void, !dbg !14339
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2ArithIaidCtx* @jbig2_arith_iaid_ctx_new(%struct._Jbig2Ctx.11*, i32) #0 !dbg !14340 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2ArithIaidCtx*, align 8
  %6 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !14420, metadata !DIExpression()), !dbg !14421
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14422, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIaidCtx** %5, metadata !14424, metadata !DIExpression()), !dbg !14425
  %7 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !14426
  %8 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %7, i32 0, i32 0, !dbg !14426
  %9 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %8, align 8, !dbg !14426
  %10 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %9, i64 16), !dbg !14426
  %11 = bitcast i8* %10 to %struct._Jbig2ArithIaidCtx*, !dbg !14426
  store %struct._Jbig2ArithIaidCtx* %11, %struct._Jbig2ArithIaidCtx** %5, align 8, !dbg !14425
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14427, metadata !DIExpression()), !dbg !14428
  %12 = load i32, i32* %4, align 4, !dbg !14429
  %13 = shl i32 1, %12, !dbg !14430
  store i32 %13, i32* %6, align 4, !dbg !14428
  %14 = load i32, i32* %4, align 4, !dbg !14431
  %15 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %5, align 8, !dbg !14432
  %16 = getelementptr inbounds %struct._Jbig2ArithIaidCtx, %struct._Jbig2ArithIaidCtx* %15, i32 0, i32 0, !dbg !14433
  store i32 %14, i32* %16, align 8, !dbg !14434
  %17 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !14435
  %18 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %17, i32 0, i32 0, !dbg !14436
  %19 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %18, align 8, !dbg !14436
  %20 = load i32, i32* %6, align 4, !dbg !14437
  %21 = sext i32 %20 to i64, !dbg !14437
  %22 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %19, i64 %21), !dbg !14438
  %23 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %5, align 8, !dbg !14439
  %24 = getelementptr inbounds %struct._Jbig2ArithIaidCtx, %struct._Jbig2ArithIaidCtx* %23, i32 0, i32 1, !dbg !14440
  store i8* %22, i8** %24, align 8, !dbg !14441
  %25 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %5, align 8, !dbg !14442
  %26 = getelementptr inbounds %struct._Jbig2ArithIaidCtx, %struct._Jbig2ArithIaidCtx* %25, i32 0, i32 1, !dbg !14443
  %27 = load i8*, i8** %26, align 8, !dbg !14443
  %28 = load i32, i32* %6, align 4, !dbg !14444
  %29 = sext i32 %28 to i64, !dbg !14444
  call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 %29, i1 false), !dbg !14445
  %30 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %5, align 8, !dbg !14446
  ret %struct._Jbig2ArithIaidCtx* %30, !dbg !14447
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_arith_iaid_decode(%struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithState*, i32*) #0 !dbg !14448 {
  %4 = alloca %struct._Jbig2ArithIaidCtx*, align 8
  %5 = alloca %struct._Jbig2ArithState*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct._Jbig2ArithIaidCtx* %0, %struct._Jbig2ArithIaidCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIaidCtx** %4, metadata !14451, metadata !DIExpression()), !dbg !14452
  store %struct._Jbig2ArithState* %1, %struct._Jbig2ArithState** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithState** %5, metadata !14453, metadata !DIExpression()), !dbg !14454
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !14455, metadata !DIExpression()), !dbg !14456
  call void @llvm.dbg.declare(metadata i8** %7, metadata !14457, metadata !DIExpression()), !dbg !14458
  %12 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %4, align 8, !dbg !14459
  %13 = getelementptr inbounds %struct._Jbig2ArithIaidCtx, %struct._Jbig2ArithIaidCtx* %12, i32 0, i32 1, !dbg !14460
  %14 = load i8*, i8** %13, align 8, !dbg !14460
  store i8* %14, i8** %7, align 8, !dbg !14458
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14461, metadata !DIExpression()), !dbg !14462
  %15 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %4, align 8, !dbg !14463
  %16 = getelementptr inbounds %struct._Jbig2ArithIaidCtx, %struct._Jbig2ArithIaidCtx* %15, i32 0, i32 0, !dbg !14464
  %17 = load i32, i32* %16, align 8, !dbg !14464
  store i32 %17, i32* %8, align 4, !dbg !14462
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14465, metadata !DIExpression()), !dbg !14466
  store i32 1, i32* %9, align 4, !dbg !14466
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14467, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14469, metadata !DIExpression()), !dbg !14470
  store i32 0, i32* %11, align 4, !dbg !14471
  br label %18, !dbg !14473

; <label>:18:                                     ; preds = %33, %3
  %19 = load i32, i32* %11, align 4, !dbg !14474
  %20 = load i32, i32* %8, align 4, !dbg !14476
  %21 = icmp slt i32 %19, %20, !dbg !14477
  br i1 %21, label %22, label %36, !dbg !14478

; <label>:22:                                     ; preds = %18
  %23 = load %struct._Jbig2ArithState*, %struct._Jbig2ArithState** %5, align 8, !dbg !14479
  %24 = load i8*, i8** %7, align 8, !dbg !14481
  %25 = load i32, i32* %9, align 4, !dbg !14482
  %26 = sext i32 %25 to i64, !dbg !14481
  %27 = getelementptr inbounds i8, i8* %24, i64 %26, !dbg !14481
  %28 = call i32 @jbig2_arith_decode(%struct._Jbig2ArithState* %23, i8* %27), !dbg !14483
  store i32 %28, i32* %10, align 4, !dbg !14484
  %29 = load i32, i32* %9, align 4, !dbg !14485
  %30 = shl i32 %29, 1, !dbg !14486
  %31 = load i32, i32* %10, align 4, !dbg !14487
  %32 = or i32 %30, %31, !dbg !14488
  store i32 %32, i32* %9, align 4, !dbg !14489
  br label %33, !dbg !14490

; <label>:33:                                     ; preds = %22
  %34 = load i32, i32* %11, align 4, !dbg !14491
  %35 = add nsw i32 %34, 1, !dbg !14491
  store i32 %35, i32* %11, align 4, !dbg !14491
  br label %18, !dbg !14492, !llvm.loop !14493

; <label>:36:                                     ; preds = %18
  %37 = load i32, i32* %8, align 4, !dbg !14495
  %38 = shl i32 1, %37, !dbg !14496
  %39 = load i32, i32* %9, align 4, !dbg !14497
  %40 = sub nsw i32 %39, %38, !dbg !14497
  store i32 %40, i32* %9, align 4, !dbg !14497
  %41 = load i32, i32* %9, align 4, !dbg !14498
  %42 = load i32*, i32** %6, align 8, !dbg !14499
  store i32 %41, i32* %42, align 4, !dbg !14500
  ret i32 0, !dbg !14501
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_arith_iaid_ctx_free(%struct._Jbig2Ctx.11*, %struct._Jbig2ArithIaidCtx*) #0 !dbg !14502 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2ArithIaidCtx*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !14505, metadata !DIExpression()), !dbg !14506
  store %struct._Jbig2ArithIaidCtx* %1, %struct._Jbig2ArithIaidCtx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2ArithIaidCtx** %4, metadata !14507, metadata !DIExpression()), !dbg !14508
  %5 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !14509
  %6 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %5, i32 0, i32 0, !dbg !14510
  %7 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %6, align 8, !dbg !14510
  %8 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %4, align 8, !dbg !14511
  %9 = getelementptr inbounds %struct._Jbig2ArithIaidCtx, %struct._Jbig2ArithIaidCtx* %8, i32 0, i32 1, !dbg !14512
  %10 = load i8*, i8** %9, align 8, !dbg !14512
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %7, i8* %10), !dbg !14513
  %11 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !14514
  %12 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %11, i32 0, i32 0, !dbg !14515
  %13 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %12, align 8, !dbg !14515
  %14 = load %struct._Jbig2ArithIaidCtx*, %struct._Jbig2ArithIaidCtx** %4, align 8, !dbg !14516
  %15 = bitcast %struct._Jbig2ArithIaidCtx* %14 to i8*, !dbg !14516
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %13, i8* %15), !dbg !14517
  ret void, !dbg !14518
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2HuffmanState* @jbig2_huffman_new(%struct._Jbig2Ctx.11*, %struct._Jbig2WordStream*) #0 !dbg !14519 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2WordStream*, align 8
  %5 = alloca %struct._Jbig2HuffmanState*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !14599, metadata !DIExpression()), !dbg !14600
  store %struct._Jbig2WordStream* %1, %struct._Jbig2WordStream** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %4, metadata !14601, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %5, metadata !14603, metadata !DIExpression()), !dbg !14604
  %6 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !14605
  %7 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %6, i32 0, i32 0, !dbg !14606
  %8 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %7, align 8, !dbg !14606
  %9 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %8, i64 24), !dbg !14607
  %10 = bitcast i8* %9 to %struct._Jbig2HuffmanState*, !dbg !14608
  store %struct._Jbig2HuffmanState* %10, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14609
  %11 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14610
  %12 = icmp ne %struct._Jbig2HuffmanState* %11, null, !dbg !14612
  br i1 %12, label %13, label %35, !dbg !14613

; <label>:13:                                     ; preds = %2
  %14 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14614
  %15 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %14, i32 0, i32 3, !dbg !14616
  store i32 0, i32* %15, align 4, !dbg !14617
  %16 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14618
  %17 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %16, i32 0, i32 2, !dbg !14619
  store i32 0, i32* %17, align 8, !dbg !14620
  %18 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14621
  %19 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %18, i32 0, i32 0, !dbg !14622
  %20 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %19, align 8, !dbg !14622
  %21 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14623
  %22 = call i32 %20(%struct._Jbig2WordStream* %21, i32 0), !dbg !14621
  %23 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14624
  %24 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %23, i32 0, i32 0, !dbg !14625
  store i32 %22, i32* %24, align 8, !dbg !14626
  %25 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14627
  %26 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %25, i32 0, i32 0, !dbg !14628
  %27 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %26, align 8, !dbg !14628
  %28 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14629
  %29 = call i32 %27(%struct._Jbig2WordStream* %28, i32 4), !dbg !14627
  %30 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14630
  %31 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %30, i32 0, i32 1, !dbg !14631
  store i32 %29, i32* %31, align 4, !dbg !14632
  %32 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14633
  %33 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14634
  %34 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %33, i32 0, i32 4, !dbg !14635
  store %struct._Jbig2WordStream* %32, %struct._Jbig2WordStream** %34, align 8, !dbg !14636
  br label %35, !dbg !14637

; <label>:35:                                     ; preds = %13, %2
  %36 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %5, align 8, !dbg !14638
  ret %struct._Jbig2HuffmanState* %36, !dbg !14639
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_huffman_free(%struct._Jbig2Ctx.11*, %struct._Jbig2HuffmanState*) #0 !dbg !14640 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2HuffmanState*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !14643, metadata !DIExpression()), !dbg !14644
  store %struct._Jbig2HuffmanState* %1, %struct._Jbig2HuffmanState** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %4, metadata !14645, metadata !DIExpression()), !dbg !14646
  %5 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14647
  %6 = icmp ne %struct._Jbig2HuffmanState* %5, null, !dbg !14649
  br i1 %6, label %7, label %10, !dbg !14650

; <label>:7:                                      ; preds = %2
  %8 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14651
  %9 = bitcast %struct._Jbig2HuffmanState* %8 to i8*, !dbg !14651
  call void @free(i8* %9) #7, !dbg !14652
  br label %10, !dbg !14652

; <label>:10:                                     ; preds = %7, %2
  ret void, !dbg !14653
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_huffman_skip(%struct._Jbig2HuffmanState*) #0 !dbg !14654 {
  %2 = alloca %struct._Jbig2HuffmanState*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct._Jbig2WordStream*, align 8
  store %struct._Jbig2HuffmanState* %0, %struct._Jbig2HuffmanState** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %2, metadata !14657, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14659, metadata !DIExpression()), !dbg !14660
  %5 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14661
  %6 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %5, i32 0, i32 2, !dbg !14662
  %7 = load i32, i32* %6, align 8, !dbg !14662
  %8 = and i32 %7, 7, !dbg !14663
  store i32 %8, i32* %3, align 4, !dbg !14660
  %9 = load i32, i32* %3, align 4, !dbg !14664
  %10 = icmp ne i32 %9, 0, !dbg !14664
  br i1 %10, label %11, label %35, !dbg !14666

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* %3, align 4, !dbg !14667
  %13 = sub nsw i32 8, %12, !dbg !14669
  store i32 %13, i32* %3, align 4, !dbg !14670
  %14 = load i32, i32* %3, align 4, !dbg !14671
  %15 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14672
  %16 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %15, i32 0, i32 2, !dbg !14673
  %17 = load i32, i32* %16, align 8, !dbg !14674
  %18 = add nsw i32 %17, %14, !dbg !14674
  store i32 %18, i32* %16, align 8, !dbg !14674
  %19 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14675
  %20 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %19, i32 0, i32 0, !dbg !14676
  %21 = load i32, i32* %20, align 8, !dbg !14676
  %22 = load i32, i32* %3, align 4, !dbg !14677
  %23 = shl i32 %21, %22, !dbg !14678
  %24 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14679
  %25 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %24, i32 0, i32 1, !dbg !14680
  %26 = load i32, i32* %25, align 4, !dbg !14680
  %27 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14681
  %28 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %27, i32 0, i32 2, !dbg !14682
  %29 = load i32, i32* %28, align 8, !dbg !14682
  %30 = sub nsw i32 32, %29, !dbg !14683
  %31 = lshr i32 %26, %30, !dbg !14684
  %32 = or i32 %23, %31, !dbg !14685
  %33 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14686
  %34 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %33, i32 0, i32 0, !dbg !14687
  store i32 %32, i32* %34, align 8, !dbg !14688
  br label %35, !dbg !14689

; <label>:35:                                     ; preds = %11, %1
  %36 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14690
  %37 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %36, i32 0, i32 2, !dbg !14692
  %38 = load i32, i32* %37, align 8, !dbg !14692
  %39 = icmp sge i32 %38, 32, !dbg !14693
  br i1 %39, label %40, label %92, !dbg !14694

; <label>:40:                                     ; preds = %35
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %4, metadata !14695, metadata !DIExpression()), !dbg !14697
  %41 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14698
  %42 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %41, i32 0, i32 4, !dbg !14699
  %43 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %42, align 8, !dbg !14699
  store %struct._Jbig2WordStream* %43, %struct._Jbig2WordStream** %4, align 8, !dbg !14697
  %44 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14700
  %45 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %44, i32 0, i32 1, !dbg !14701
  %46 = load i32, i32* %45, align 4, !dbg !14701
  %47 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14702
  %48 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %47, i32 0, i32 0, !dbg !14703
  store i32 %46, i32* %48, align 8, !dbg !14704
  %49 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14705
  %50 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %49, i32 0, i32 3, !dbg !14706
  %51 = load i32, i32* %50, align 4, !dbg !14707
  %52 = add nsw i32 %51, 4, !dbg !14707
  store i32 %52, i32* %50, align 4, !dbg !14707
  %53 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14708
  %54 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %53, i32 0, i32 0, !dbg !14709
  %55 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %54, align 8, !dbg !14709
  %56 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %4, align 8, !dbg !14710
  %57 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14711
  %58 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %57, i32 0, i32 3, !dbg !14712
  %59 = load i32, i32* %58, align 4, !dbg !14712
  %60 = add nsw i32 %59, 4, !dbg !14713
  %61 = call i32 %55(%struct._Jbig2WordStream* %56, i32 %60), !dbg !14708
  %62 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14714
  %63 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %62, i32 0, i32 1, !dbg !14715
  store i32 %61, i32* %63, align 4, !dbg !14716
  %64 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14717
  %65 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %64, i32 0, i32 2, !dbg !14718
  %66 = load i32, i32* %65, align 8, !dbg !14719
  %67 = sub nsw i32 %66, 32, !dbg !14719
  store i32 %67, i32* %65, align 8, !dbg !14719
  %68 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14720
  %69 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %68, i32 0, i32 2, !dbg !14722
  %70 = load i32, i32* %69, align 8, !dbg !14722
  %71 = icmp ne i32 %70, 0, !dbg !14720
  br i1 %71, label %72, label %91, !dbg !14723

; <label>:72:                                     ; preds = %40
  %73 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14724
  %74 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %73, i32 0, i32 0, !dbg !14726
  %75 = load i32, i32* %74, align 8, !dbg !14726
  %76 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14727
  %77 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %76, i32 0, i32 2, !dbg !14728
  %78 = load i32, i32* %77, align 8, !dbg !14728
  %79 = shl i32 %75, %78, !dbg !14729
  %80 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14730
  %81 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %80, i32 0, i32 1, !dbg !14731
  %82 = load i32, i32* %81, align 4, !dbg !14731
  %83 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14732
  %84 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %83, i32 0, i32 2, !dbg !14733
  %85 = load i32, i32* %84, align 8, !dbg !14733
  %86 = sub nsw i32 32, %85, !dbg !14734
  %87 = lshr i32 %82, %86, !dbg !14735
  %88 = or i32 %79, %87, !dbg !14736
  %89 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14737
  %90 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %89, i32 0, i32 0, !dbg !14738
  store i32 %88, i32* %90, align 8, !dbg !14739
  br label %91, !dbg !14740

; <label>:91:                                     ; preds = %72, %40
  br label %92, !dbg !14741

; <label>:92:                                     ; preds = %91, %35
  ret void, !dbg !14742
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_huffman_advance(%struct._Jbig2HuffmanState*, i32) #0 !dbg !14743 {
  %3 = alloca %struct._Jbig2HuffmanState*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._Jbig2WordStream*, align 8
  store %struct._Jbig2HuffmanState* %0, %struct._Jbig2HuffmanState** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %3, metadata !14746, metadata !DIExpression()), !dbg !14747
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14748, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %5, metadata !14750, metadata !DIExpression()), !dbg !14751
  %6 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14752
  %7 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %6, i32 0, i32 4, !dbg !14753
  %8 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %7, align 8, !dbg !14753
  store %struct._Jbig2WordStream* %8, %struct._Jbig2WordStream** %5, align 8, !dbg !14751
  %9 = load i32, i32* %4, align 4, !dbg !14754
  %10 = and i32 %9, -4, !dbg !14755
  %11 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14756
  %12 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %11, i32 0, i32 3, !dbg !14757
  %13 = load i32, i32* %12, align 4, !dbg !14758
  %14 = add nsw i32 %13, %10, !dbg !14758
  store i32 %14, i32* %12, align 4, !dbg !14758
  %15 = load i32, i32* %4, align 4, !dbg !14759
  %16 = and i32 %15, 3, !dbg !14760
  %17 = shl i32 %16, 3, !dbg !14761
  %18 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14762
  %19 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %18, i32 0, i32 2, !dbg !14763
  %20 = load i32, i32* %19, align 8, !dbg !14764
  %21 = add nsw i32 %20, %17, !dbg !14764
  store i32 %21, i32* %19, align 8, !dbg !14764
  %22 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14765
  %23 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %22, i32 0, i32 2, !dbg !14767
  %24 = load i32, i32* %23, align 8, !dbg !14767
  %25 = icmp sge i32 %24, 32, !dbg !14768
  br i1 %25, label %26, label %35, !dbg !14769

; <label>:26:                                     ; preds = %2
  %27 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14770
  %28 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %27, i32 0, i32 3, !dbg !14772
  %29 = load i32, i32* %28, align 4, !dbg !14773
  %30 = add nsw i32 %29, 4, !dbg !14773
  store i32 %30, i32* %28, align 4, !dbg !14773
  %31 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14774
  %32 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %31, i32 0, i32 2, !dbg !14775
  %33 = load i32, i32* %32, align 8, !dbg !14776
  %34 = sub nsw i32 %33, 32, !dbg !14776
  store i32 %34, i32* %32, align 8, !dbg !14776
  br label %35, !dbg !14777

; <label>:35:                                     ; preds = %26, %2
  %36 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %5, align 8, !dbg !14778
  %37 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %36, i32 0, i32 0, !dbg !14779
  %38 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %37, align 8, !dbg !14779
  %39 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %5, align 8, !dbg !14780
  %40 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14781
  %41 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %40, i32 0, i32 3, !dbg !14782
  %42 = load i32, i32* %41, align 4, !dbg !14782
  %43 = call i32 %38(%struct._Jbig2WordStream* %39, i32 %42), !dbg !14778
  %44 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14783
  %45 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %44, i32 0, i32 0, !dbg !14784
  store i32 %43, i32* %45, align 8, !dbg !14785
  %46 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %5, align 8, !dbg !14786
  %47 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %46, i32 0, i32 0, !dbg !14787
  %48 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %47, align 8, !dbg !14787
  %49 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %5, align 8, !dbg !14788
  %50 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14789
  %51 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %50, i32 0, i32 3, !dbg !14790
  %52 = load i32, i32* %51, align 4, !dbg !14790
  %53 = add nsw i32 %52, 4, !dbg !14791
  %54 = call i32 %48(%struct._Jbig2WordStream* %49, i32 %53), !dbg !14786
  %55 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14792
  %56 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %55, i32 0, i32 1, !dbg !14793
  store i32 %54, i32* %56, align 4, !dbg !14794
  %57 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14795
  %58 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %57, i32 0, i32 2, !dbg !14797
  %59 = load i32, i32* %58, align 8, !dbg !14797
  %60 = icmp sgt i32 %59, 0, !dbg !14798
  br i1 %60, label %61, label %80, !dbg !14799

; <label>:61:                                     ; preds = %35
  %62 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14800
  %63 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %62, i32 0, i32 0, !dbg !14801
  %64 = load i32, i32* %63, align 8, !dbg !14801
  %65 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14802
  %66 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %65, i32 0, i32 2, !dbg !14803
  %67 = load i32, i32* %66, align 8, !dbg !14803
  %68 = shl i32 %64, %67, !dbg !14804
  %69 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14805
  %70 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %69, i32 0, i32 1, !dbg !14806
  %71 = load i32, i32* %70, align 4, !dbg !14806
  %72 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14807
  %73 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %72, i32 0, i32 2, !dbg !14808
  %74 = load i32, i32* %73, align 8, !dbg !14808
  %75 = sub nsw i32 32, %74, !dbg !14809
  %76 = lshr i32 %71, %75, !dbg !14810
  %77 = or i32 %68, %76, !dbg !14811
  %78 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14812
  %79 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %78, i32 0, i32 0, !dbg !14813
  store i32 %77, i32* %79, align 8, !dbg !14814
  br label %80, !dbg !14812

; <label>:80:                                     ; preds = %61, %35
  ret void, !dbg !14815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_huffman_offset(%struct._Jbig2HuffmanState*) #0 !dbg !14816 {
  %2 = alloca %struct._Jbig2HuffmanState*, align 8
  store %struct._Jbig2HuffmanState* %0, %struct._Jbig2HuffmanState** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %2, metadata !14819, metadata !DIExpression()), !dbg !14820
  %3 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14821
  %4 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %3, i32 0, i32 3, !dbg !14822
  %5 = load i32, i32* %4, align 4, !dbg !14822
  %6 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %2, align 8, !dbg !14823
  %7 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %6, i32 0, i32 2, !dbg !14824
  %8 = load i32, i32* %7, align 8, !dbg !14824
  %9 = ashr i32 %8, 3, !dbg !14825
  %10 = add nsw i32 %5, %9, !dbg !14826
  ret i32 %10, !dbg !14827
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_huffman_get_bits(%struct._Jbig2HuffmanState*, i32) #0 !dbg !14828 {
  %3 = alloca %struct._Jbig2HuffmanState*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._Jbig2HuffmanState* %0, %struct._Jbig2HuffmanState** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %3, metadata !14831, metadata !DIExpression()), !dbg !14832
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14833, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14835, metadata !DIExpression()), !dbg !14836
  %7 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14837
  %8 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %7, i32 0, i32 0, !dbg !14838
  %9 = load i32, i32* %8, align 8, !dbg !14838
  store i32 %9, i32* %5, align 4, !dbg !14836
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14839, metadata !DIExpression()), !dbg !14840
  %10 = load i32, i32* %5, align 4, !dbg !14841
  %11 = load i32, i32* %4, align 4, !dbg !14842
  %12 = sub nsw i32 32, %11, !dbg !14843
  %13 = lshr i32 %10, %12, !dbg !14844
  store i32 %13, i32* %6, align 4, !dbg !14845
  %14 = load i32, i32* %4, align 4, !dbg !14846
  %15 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14847
  %16 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %15, i32 0, i32 2, !dbg !14848
  %17 = load i32, i32* %16, align 8, !dbg !14849
  %18 = add nsw i32 %17, %14, !dbg !14849
  store i32 %18, i32* %16, align 8, !dbg !14849
  %19 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14850
  %20 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %19, i32 0, i32 2, !dbg !14852
  %21 = load i32, i32* %20, align 8, !dbg !14852
  %22 = icmp sge i32 %21, 32, !dbg !14853
  br i1 %22, label %23, label %86, !dbg !14854

; <label>:23:                                     ; preds = %2
  %24 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14855
  %25 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %24, i32 0, i32 3, !dbg !14857
  %26 = load i32, i32* %25, align 4, !dbg !14858
  %27 = add nsw i32 %26, 4, !dbg !14858
  store i32 %27, i32* %25, align 4, !dbg !14858
  %28 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14859
  %29 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %28, i32 0, i32 2, !dbg !14860
  %30 = load i32, i32* %29, align 8, !dbg !14861
  %31 = sub nsw i32 %30, 32, !dbg !14861
  store i32 %31, i32* %29, align 8, !dbg !14861
  %32 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14862
  %33 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %32, i32 0, i32 1, !dbg !14863
  %34 = load i32, i32* %33, align 4, !dbg !14863
  %35 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14864
  %36 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %35, i32 0, i32 0, !dbg !14865
  store i32 %34, i32* %36, align 8, !dbg !14866
  %37 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14867
  %38 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %37, i32 0, i32 4, !dbg !14868
  %39 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %38, align 8, !dbg !14868
  %40 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %39, i32 0, i32 0, !dbg !14869
  %41 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %40, align 8, !dbg !14869
  %42 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14870
  %43 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %42, i32 0, i32 4, !dbg !14871
  %44 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %43, align 8, !dbg !14871
  %45 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14872
  %46 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %45, i32 0, i32 3, !dbg !14873
  %47 = load i32, i32* %46, align 4, !dbg !14873
  %48 = add nsw i32 %47, 4, !dbg !14874
  %49 = call i32 %41(%struct._Jbig2WordStream* %44, i32 %48), !dbg !14867
  %50 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14875
  %51 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %50, i32 0, i32 1, !dbg !14876
  store i32 %49, i32* %51, align 4, !dbg !14877
  %52 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14878
  %53 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %52, i32 0, i32 2, !dbg !14880
  %54 = load i32, i32* %53, align 8, !dbg !14880
  %55 = icmp ne i32 %54, 0, !dbg !14878
  br i1 %55, label %56, label %75, !dbg !14881

; <label>:56:                                     ; preds = %23
  %57 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14882
  %58 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %57, i32 0, i32 0, !dbg !14884
  %59 = load i32, i32* %58, align 8, !dbg !14884
  %60 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14885
  %61 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %60, i32 0, i32 2, !dbg !14886
  %62 = load i32, i32* %61, align 8, !dbg !14886
  %63 = shl i32 %59, %62, !dbg !14887
  %64 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14888
  %65 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %64, i32 0, i32 1, !dbg !14889
  %66 = load i32, i32* %65, align 4, !dbg !14889
  %67 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14890
  %68 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %67, i32 0, i32 2, !dbg !14891
  %69 = load i32, i32* %68, align 8, !dbg !14891
  %70 = sub nsw i32 32, %69, !dbg !14892
  %71 = lshr i32 %66, %70, !dbg !14893
  %72 = or i32 %63, %71, !dbg !14894
  %73 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14895
  %74 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %73, i32 0, i32 0, !dbg !14896
  store i32 %72, i32* %74, align 8, !dbg !14897
  br label %85, !dbg !14898

; <label>:75:                                     ; preds = %23
  %76 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14899
  %77 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %76, i32 0, i32 0, !dbg !14901
  %78 = load i32, i32* %77, align 8, !dbg !14901
  %79 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14902
  %80 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %79, i32 0, i32 2, !dbg !14903
  %81 = load i32, i32* %80, align 8, !dbg !14903
  %82 = shl i32 %78, %81, !dbg !14904
  %83 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14905
  %84 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %83, i32 0, i32 0, !dbg !14906
  store i32 %82, i32* %84, align 8, !dbg !14907
  br label %85

; <label>:85:                                     ; preds = %75, %56
  br label %101, !dbg !14908

; <label>:86:                                     ; preds = %2
  %87 = load i32, i32* %5, align 4, !dbg !14909
  %88 = load i32, i32* %4, align 4, !dbg !14911
  %89 = shl i32 %87, %88, !dbg !14912
  %90 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14913
  %91 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %90, i32 0, i32 1, !dbg !14914
  %92 = load i32, i32* %91, align 4, !dbg !14914
  %93 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14915
  %94 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %93, i32 0, i32 2, !dbg !14916
  %95 = load i32, i32* %94, align 8, !dbg !14916
  %96 = sub nsw i32 32, %95, !dbg !14917
  %97 = lshr i32 %92, %96, !dbg !14918
  %98 = or i32 %89, %97, !dbg !14919
  %99 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %3, align 8, !dbg !14920
  %100 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %99, i32 0, i32 0, !dbg !14921
  store i32 %98, i32* %100, align 8, !dbg !14922
  br label %101

; <label>:101:                                    ; preds = %86, %85
  %102 = load i32, i32* %6, align 4, !dbg !14923
  ret i32 %102, !dbg !14924
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jbig2_huffman_get(%struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanTable*, i32*) #0 !dbg !14925 {
  %4 = alloca %struct._Jbig2HuffmanState*, align 8
  %5 = alloca %struct._Jbig2HuffmanTable*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct._Jbig2HuffmanEntry*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct._Jbig2WordStream*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct._Jbig2WordStream*, align 8
  store %struct._Jbig2HuffmanState* %0, %struct._Jbig2HuffmanState** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanState** %4, metadata !14931, metadata !DIExpression()), !dbg !14932
  store %struct._Jbig2HuffmanTable* %1, %struct._Jbig2HuffmanTable** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanTable** %5, metadata !14933, metadata !DIExpression()), !dbg !14934
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !14935, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanEntry** %7, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.declare(metadata i8* %8, metadata !14939, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.declare(metadata i32* %9, metadata !14941, metadata !DIExpression()), !dbg !14942
  %19 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14943
  %20 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %19, i32 0, i32 2, !dbg !14944
  %21 = load i32, i32* %20, align 8, !dbg !14944
  store i32 %21, i32* %9, align 4, !dbg !14942
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14945, metadata !DIExpression()), !dbg !14946
  %22 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14947
  %23 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %22, i32 0, i32 0, !dbg !14948
  %24 = load i32, i32* %23, align 8, !dbg !14948
  store i32 %24, i32* %10, align 4, !dbg !14946
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14949, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14951, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.declare(metadata i32* %13, metadata !14953, metadata !DIExpression()), !dbg !14954
  br label %25, !dbg !14955

; <label>:25:                                     ; preds = %100, %3
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14956, metadata !DIExpression()), !dbg !14960
  %26 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %5, align 8, !dbg !14961
  %27 = getelementptr inbounds %struct._Jbig2HuffmanTable, %struct._Jbig2HuffmanTable* %26, i32 0, i32 0, !dbg !14962
  %28 = load i32, i32* %27, align 8, !dbg !14962
  store i32 %28, i32* %14, align 4, !dbg !14960
  call void @llvm.dbg.declare(metadata i32* %15, metadata !14963, metadata !DIExpression()), !dbg !14964
  %29 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %5, align 8, !dbg !14965
  %30 = getelementptr inbounds %struct._Jbig2HuffmanTable, %struct._Jbig2HuffmanTable* %29, i32 0, i32 1, !dbg !14966
  %31 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %30, align 8, !dbg !14966
  %32 = load i32, i32* %10, align 4, !dbg !14967
  %33 = load i32, i32* %14, align 4, !dbg !14968
  %34 = sub nsw i32 32, %33, !dbg !14969
  %35 = lshr i32 %32, %34, !dbg !14970
  %36 = zext i32 %35 to i64, !dbg !14965
  %37 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %31, i64 %36, !dbg !14965
  store %struct._Jbig2HuffmanEntry* %37, %struct._Jbig2HuffmanEntry** %7, align 8, !dbg !14971
  %38 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %7, align 8, !dbg !14972
  %39 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %38, i32 0, i32 3, !dbg !14973
  %40 = load i8, i8* %39, align 2, !dbg !14973
  store i8 %40, i8* %8, align 1, !dbg !14974
  %41 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %7, align 8, !dbg !14975
  %42 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %41, i32 0, i32 1, !dbg !14976
  %43 = load i8, i8* %42, align 8, !dbg !14976
  %44 = zext i8 %43 to i32, !dbg !14975
  store i32 %44, i32* %15, align 4, !dbg !14977
  %45 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14978
  %46 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %45, i32 0, i32 1, !dbg !14979
  %47 = load i32, i32* %46, align 4, !dbg !14979
  store i32 %47, i32* %11, align 4, !dbg !14980
  %48 = load i32, i32* %15, align 4, !dbg !14981
  %49 = load i32, i32* %9, align 4, !dbg !14982
  %50 = add nsw i32 %49, %48, !dbg !14982
  store i32 %50, i32* %9, align 4, !dbg !14982
  %51 = load i32, i32* %9, align 4, !dbg !14983
  %52 = icmp sge i32 %51, 32, !dbg !14985
  br i1 %52, label %53, label %77, !dbg !14986

; <label>:53:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %16, metadata !14987, metadata !DIExpression()), !dbg !14989
  %54 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14990
  %55 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %54, i32 0, i32 4, !dbg !14991
  %56 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %55, align 8, !dbg !14991
  store %struct._Jbig2WordStream* %56, %struct._Jbig2WordStream** %16, align 8, !dbg !14989
  %57 = load i32, i32* %11, align 4, !dbg !14992
  store i32 %57, i32* %10, align 4, !dbg !14993
  %58 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !14994
  %59 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %58, i32 0, i32 3, !dbg !14995
  %60 = load i32, i32* %59, align 4, !dbg !14996
  %61 = add nsw i32 %60, 4, !dbg !14996
  store i32 %61, i32* %59, align 4, !dbg !14996
  %62 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %16, align 8, !dbg !14997
  %63 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %62, i32 0, i32 0, !dbg !14998
  %64 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %63, align 8, !dbg !14998
  %65 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %16, align 8, !dbg !14999
  %66 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15000
  %67 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %66, i32 0, i32 3, !dbg !15001
  %68 = load i32, i32* %67, align 4, !dbg !15001
  %69 = add nsw i32 %68, 4, !dbg !15002
  %70 = call i32 %64(%struct._Jbig2WordStream* %65, i32 %69), !dbg !14997
  store i32 %70, i32* %11, align 4, !dbg !15003
  %71 = load i32, i32* %9, align 4, !dbg !15004
  %72 = sub nsw i32 %71, 32, !dbg !15004
  store i32 %72, i32* %9, align 4, !dbg !15004
  %73 = load i32, i32* %11, align 4, !dbg !15005
  %74 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15006
  %75 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %74, i32 0, i32 1, !dbg !15007
  store i32 %73, i32* %75, align 4, !dbg !15008
  %76 = load i32, i32* %9, align 4, !dbg !15009
  store i32 %76, i32* %15, align 4, !dbg !15010
  br label %77, !dbg !15011

; <label>:77:                                     ; preds = %53, %25
  %78 = load i32, i32* %15, align 4, !dbg !15012
  %79 = icmp ne i32 %78, 0, !dbg !15012
  br i1 %79, label %80, label %89, !dbg !15014

; <label>:80:                                     ; preds = %77
  %81 = load i32, i32* %10, align 4, !dbg !15015
  %82 = load i32, i32* %15, align 4, !dbg !15016
  %83 = shl i32 %81, %82, !dbg !15017
  %84 = load i32, i32* %11, align 4, !dbg !15018
  %85 = load i32, i32* %9, align 4, !dbg !15019
  %86 = sub nsw i32 32, %85, !dbg !15020
  %87 = lshr i32 %84, %86, !dbg !15021
  %88 = or i32 %83, %87, !dbg !15022
  store i32 %88, i32* %10, align 4, !dbg !15023
  br label %89, !dbg !15024

; <label>:89:                                     ; preds = %80, %77
  %90 = load i8, i8* %8, align 1, !dbg !15025
  %91 = zext i8 %90 to i32, !dbg !15025
  %92 = and i32 %91, 4, !dbg !15027
  %93 = icmp ne i32 %92, 0, !dbg !15027
  br i1 %93, label %94, label %99, !dbg !15028

; <label>:94:                                     ; preds = %89
  %95 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %7, align 8, !dbg !15029
  %96 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %95, i32 0, i32 0, !dbg !15031
  %97 = bitcast %union.anon* %96 to %struct._Jbig2HuffmanTable**, !dbg !15032
  %98 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %97, align 8, !dbg !15032
  store %struct._Jbig2HuffmanTable* %98, %struct._Jbig2HuffmanTable** %5, align 8, !dbg !15033
  br label %100, !dbg !15034

; <label>:99:                                     ; preds = %89
  br label %101, !dbg !15035

; <label>:100:                                    ; preds = %94
  br label %25, !dbg !15036, !llvm.loop !15037

; <label>:101:                                    ; preds = %99
  %102 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %7, align 8, !dbg !15040
  %103 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %102, i32 0, i32 0, !dbg !15041
  %104 = bitcast %union.anon* %103 to i32*, !dbg !15042
  %105 = load i32, i32* %104, align 8, !dbg !15042
  store i32 %105, i32* %13, align 4, !dbg !15043
  %106 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %7, align 8, !dbg !15044
  %107 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %106, i32 0, i32 2, !dbg !15045
  %108 = load i8, i8* %107, align 1, !dbg !15045
  %109 = zext i8 %108 to i32, !dbg !15044
  store i32 %109, i32* %12, align 4, !dbg !15046
  %110 = load i32, i32* %12, align 4, !dbg !15047
  %111 = icmp sgt i32 %110, 0, !dbg !15049
  br i1 %111, label %112, label %172, !dbg !15050

; <label>:112:                                    ; preds = %101
  call void @llvm.dbg.declare(metadata i32* %17, metadata !15051, metadata !DIExpression()), !dbg !15053
  %113 = load i32, i32* %10, align 4, !dbg !15054
  %114 = load i32, i32* %12, align 4, !dbg !15055
  %115 = sub nsw i32 32, %114, !dbg !15056
  %116 = lshr i32 %113, %115, !dbg !15057
  store i32 %116, i32* %17, align 4, !dbg !15058
  %117 = load i8, i8* %8, align 1, !dbg !15059
  %118 = zext i8 %117 to i32, !dbg !15059
  %119 = and i32 %118, 2, !dbg !15061
  %120 = icmp ne i32 %119, 0, !dbg !15061
  br i1 %120, label %121, label %125, !dbg !15062

; <label>:121:                                    ; preds = %112
  %122 = load i32, i32* %17, align 4, !dbg !15063
  %123 = load i32, i32* %13, align 4, !dbg !15064
  %124 = sub nsw i32 %123, %122, !dbg !15064
  store i32 %124, i32* %13, align 4, !dbg !15064
  br label %129, !dbg !15065

; <label>:125:                                    ; preds = %112
  %126 = load i32, i32* %17, align 4, !dbg !15066
  %127 = load i32, i32* %13, align 4, !dbg !15067
  %128 = add nsw i32 %127, %126, !dbg !15067
  store i32 %128, i32* %13, align 4, !dbg !15067
  br label %129

; <label>:129:                                    ; preds = %125, %121
  %130 = load i32, i32* %12, align 4, !dbg !15068
  %131 = load i32, i32* %9, align 4, !dbg !15069
  %132 = add nsw i32 %131, %130, !dbg !15069
  store i32 %132, i32* %9, align 4, !dbg !15069
  %133 = load i32, i32* %9, align 4, !dbg !15070
  %134 = icmp sge i32 %133, 32, !dbg !15072
  br i1 %134, label %135, label %159, !dbg !15073

; <label>:135:                                    ; preds = %129
  call void @llvm.dbg.declare(metadata %struct._Jbig2WordStream** %18, metadata !15074, metadata !DIExpression()), !dbg !15076
  %136 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15077
  %137 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %136, i32 0, i32 4, !dbg !15078
  %138 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %137, align 8, !dbg !15078
  store %struct._Jbig2WordStream* %138, %struct._Jbig2WordStream** %18, align 8, !dbg !15076
  %139 = load i32, i32* %11, align 4, !dbg !15079
  store i32 %139, i32* %10, align 4, !dbg !15080
  %140 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15081
  %141 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %140, i32 0, i32 3, !dbg !15082
  %142 = load i32, i32* %141, align 4, !dbg !15083
  %143 = add nsw i32 %142, 4, !dbg !15083
  store i32 %143, i32* %141, align 4, !dbg !15083
  %144 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %18, align 8, !dbg !15084
  %145 = getelementptr inbounds %struct._Jbig2WordStream, %struct._Jbig2WordStream* %144, i32 0, i32 0, !dbg !15085
  %146 = load i32 (%struct._Jbig2WordStream*, i32)*, i32 (%struct._Jbig2WordStream*, i32)** %145, align 8, !dbg !15085
  %147 = load %struct._Jbig2WordStream*, %struct._Jbig2WordStream** %18, align 8, !dbg !15086
  %148 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15087
  %149 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %148, i32 0, i32 3, !dbg !15088
  %150 = load i32, i32* %149, align 4, !dbg !15088
  %151 = add nsw i32 %150, 4, !dbg !15089
  %152 = call i32 %146(%struct._Jbig2WordStream* %147, i32 %151), !dbg !15084
  store i32 %152, i32* %11, align 4, !dbg !15090
  %153 = load i32, i32* %9, align 4, !dbg !15091
  %154 = sub nsw i32 %153, 32, !dbg !15091
  store i32 %154, i32* %9, align 4, !dbg !15091
  %155 = load i32, i32* %11, align 4, !dbg !15092
  %156 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15093
  %157 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %156, i32 0, i32 1, !dbg !15094
  store i32 %155, i32* %157, align 4, !dbg !15095
  %158 = load i32, i32* %9, align 4, !dbg !15096
  store i32 %158, i32* %12, align 4, !dbg !15097
  br label %159, !dbg !15098

; <label>:159:                                    ; preds = %135, %129
  %160 = load i32, i32* %12, align 4, !dbg !15099
  %161 = icmp ne i32 %160, 0, !dbg !15099
  br i1 %161, label %162, label %171, !dbg !15101

; <label>:162:                                    ; preds = %159
  %163 = load i32, i32* %10, align 4, !dbg !15102
  %164 = load i32, i32* %12, align 4, !dbg !15103
  %165 = shl i32 %163, %164, !dbg !15104
  %166 = load i32, i32* %11, align 4, !dbg !15105
  %167 = load i32, i32* %9, align 4, !dbg !15106
  %168 = sub nsw i32 32, %167, !dbg !15107
  %169 = lshr i32 %166, %168, !dbg !15108
  %170 = or i32 %165, %169, !dbg !15109
  store i32 %170, i32* %10, align 4, !dbg !15110
  br label %171, !dbg !15111

; <label>:171:                                    ; preds = %162, %159
  br label %172, !dbg !15112

; <label>:172:                                    ; preds = %171, %101
  %173 = load i32, i32* %10, align 4, !dbg !15113
  %174 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15114
  %175 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %174, i32 0, i32 0, !dbg !15115
  store i32 %173, i32* %175, align 8, !dbg !15116
  %176 = load i32, i32* %9, align 4, !dbg !15117
  %177 = load %struct._Jbig2HuffmanState*, %struct._Jbig2HuffmanState** %4, align 8, !dbg !15118
  %178 = getelementptr inbounds %struct._Jbig2HuffmanState, %struct._Jbig2HuffmanState* %177, i32 0, i32 2, !dbg !15119
  store i32 %176, i32* %178, align 8, !dbg !15120
  %179 = load i32*, i32** %6, align 8, !dbg !15121
  %180 = icmp ne i32* %179, null, !dbg !15123
  br i1 %180, label %181, label %186, !dbg !15124

; <label>:181:                                    ; preds = %172
  %182 = load i8, i8* %8, align 1, !dbg !15125
  %183 = zext i8 %182 to i32, !dbg !15125
  %184 = and i32 %183, 1, !dbg !15126
  %185 = load i32*, i32** %6, align 8, !dbg !15127
  store i32 %184, i32* %185, align 4, !dbg !15128
  br label %186, !dbg !15129

; <label>:186:                                    ; preds = %181, %172
  %187 = load i32, i32* %13, align 4, !dbg !15130
  ret i32 %187, !dbg !15131
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._Jbig2HuffmanTable* @jbig2_build_huffman_table(%struct._Jbig2Ctx.11*, %struct._Jbig2HuffmanParams*) #0 !dbg !15132 {
  %3 = alloca %struct._Jbig2HuffmanTable*, align 8
  %4 = alloca %struct._Jbig2Ctx.11*, align 8
  %5 = alloca %struct._Jbig2HuffmanParams*, align 8
  %6 = alloca [65536 x i32], align 16
  %7 = alloca i32, align 4
  %8 = alloca %struct._Jbig2HuffmanLine*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._Jbig2HuffmanTable*, align 8
  %15 = alloca %struct._Jbig2HuffmanEntry*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %4, metadata !15136, metadata !DIExpression()), !dbg !15137
  store %struct._Jbig2HuffmanParams* %1, %struct._Jbig2HuffmanParams** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanParams** %5, metadata !15138, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.declare(metadata [65536 x i32]* %6, metadata !15140, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15145, metadata !DIExpression()), !dbg !15146
  store i32 -1, i32* %7, align 4, !dbg !15146
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanLine** %8, metadata !15147, metadata !DIExpression()), !dbg !15148
  %29 = load %struct._Jbig2HuffmanParams*, %struct._Jbig2HuffmanParams** %5, align 8, !dbg !15149
  %30 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %29, i32 0, i32 2, !dbg !15150
  %31 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %30, align 8, !dbg !15150
  store %struct._Jbig2HuffmanLine* %31, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15148
  call void @llvm.dbg.declare(metadata i32* %9, metadata !15151, metadata !DIExpression()), !dbg !15152
  %32 = load %struct._Jbig2HuffmanParams*, %struct._Jbig2HuffmanParams** %5, align 8, !dbg !15153
  %33 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %32, i32 0, i32 1, !dbg !15154
  %34 = load i32, i32* %33, align 4, !dbg !15154
  store i32 %34, i32* %9, align 4, !dbg !15152
  call void @llvm.dbg.declare(metadata i32* %10, metadata !15155, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.declare(metadata i32* %11, metadata !15157, metadata !DIExpression()), !dbg !15158
  call void @llvm.dbg.declare(metadata i32* %12, metadata !15159, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.declare(metadata i32* %13, metadata !15161, metadata !DIExpression()), !dbg !15162
  store i32 0, i32* %13, align 4, !dbg !15162
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanTable** %14, metadata !15163, metadata !DIExpression()), !dbg !15164
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanEntry** %15, metadata !15165, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.declare(metadata i32* %16, metadata !15167, metadata !DIExpression()), !dbg !15168
  call void @llvm.dbg.declare(metadata i32* %17, metadata !15169, metadata !DIExpression()), !dbg !15170
  store i32 0, i32* %17, align 4, !dbg !15170
  call void @llvm.dbg.declare(metadata i32* %18, metadata !15171, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.declare(metadata i32* %19, metadata !15173, metadata !DIExpression()), !dbg !15174
  store i32 0, i32* %10, align 4, !dbg !15175
  br label %35, !dbg !15177

; <label>:35:                                     ; preds = %96, %2
  %36 = load i32, i32* %10, align 4, !dbg !15178
  %37 = load %struct._Jbig2HuffmanParams*, %struct._Jbig2HuffmanParams** %5, align 8, !dbg !15180
  %38 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %37, i32 0, i32 1, !dbg !15181
  %39 = load i32, i32* %38, align 4, !dbg !15181
  %40 = icmp slt i32 %36, %39, !dbg !15182
  br i1 %40, label %41, label %99, !dbg !15183

; <label>:41:                                     ; preds = %35
  call void @llvm.dbg.declare(metadata i32* %20, metadata !15184, metadata !DIExpression()), !dbg !15186
  %42 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15187
  %43 = load i32, i32* %10, align 4, !dbg !15188
  %44 = sext i32 %43 to i64, !dbg !15187
  %45 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %42, i64 %44, !dbg !15187
  %46 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %45, i32 0, i32 0, !dbg !15189
  %47 = load i32, i32* %46, align 4, !dbg !15189
  store i32 %47, i32* %20, align 4, !dbg !15186
  call void @llvm.dbg.declare(metadata i32* %21, metadata !15190, metadata !DIExpression()), !dbg !15191
  %48 = load i32, i32* %20, align 4, !dbg !15192
  %49 = load i32, i32* %7, align 4, !dbg !15194
  %50 = icmp sgt i32 %48, %49, !dbg !15195
  br i1 %50, label %51, label %68, !dbg !15196

; <label>:51:                                     ; preds = %41
  %52 = load i32, i32* %7, align 4, !dbg !15197
  %53 = add nsw i32 %52, 1, !dbg !15200
  store i32 %53, i32* %11, align 4, !dbg !15201
  br label %54, !dbg !15202

; <label>:54:                                     ; preds = %63, %51
  %55 = load i32, i32* %11, align 4, !dbg !15203
  %56 = load i32, i32* %20, align 4, !dbg !15205
  %57 = add nsw i32 %56, 1, !dbg !15206
  %58 = icmp slt i32 %55, %57, !dbg !15207
  br i1 %58, label %59, label %66, !dbg !15208

; <label>:59:                                     ; preds = %54
  %60 = load i32, i32* %11, align 4, !dbg !15209
  %61 = sext i32 %60 to i64, !dbg !15210
  %62 = getelementptr inbounds [65536 x i32], [65536 x i32]* %6, i64 0, i64 %61, !dbg !15210
  store i32 0, i32* %62, align 4, !dbg !15211
  br label %63, !dbg !15210

; <label>:63:                                     ; preds = %59
  %64 = load i32, i32* %11, align 4, !dbg !15212
  %65 = add nsw i32 %64, 1, !dbg !15212
  store i32 %65, i32* %11, align 4, !dbg !15212
  br label %54, !dbg !15213, !llvm.loop !15214

; <label>:66:                                     ; preds = %54
  %67 = load i32, i32* %20, align 4, !dbg !15216
  store i32 %67, i32* %7, align 4, !dbg !15217
  br label %68, !dbg !15218

; <label>:68:                                     ; preds = %66, %41
  %69 = load i32, i32* %20, align 4, !dbg !15219
  %70 = sext i32 %69 to i64, !dbg !15220
  %71 = getelementptr inbounds [65536 x i32], [65536 x i32]* %6, i64 0, i64 %70, !dbg !15220
  %72 = load i32, i32* %71, align 4, !dbg !15221
  %73 = add nsw i32 %72, 1, !dbg !15221
  store i32 %73, i32* %71, align 4, !dbg !15221
  %74 = load i32, i32* %20, align 4, !dbg !15222
  %75 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15223
  %76 = load i32, i32* %10, align 4, !dbg !15224
  %77 = sext i32 %76 to i64, !dbg !15223
  %78 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %75, i64 %77, !dbg !15223
  %79 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %78, i32 0, i32 1, !dbg !15225
  %80 = load i32, i32* %79, align 4, !dbg !15225
  %81 = add nsw i32 %74, %80, !dbg !15226
  store i32 %81, i32* %21, align 4, !dbg !15227
  %82 = load i32, i32* %21, align 4, !dbg !15228
  %83 = icmp sgt i32 %82, 16, !dbg !15230
  br i1 %83, label %84, label %86, !dbg !15231

; <label>:84:                                     ; preds = %68
  %85 = load i32, i32* %20, align 4, !dbg !15232
  store i32 %85, i32* %21, align 4, !dbg !15233
  br label %86, !dbg !15234

; <label>:86:                                     ; preds = %84, %68
  %87 = load i32, i32* %21, align 4, !dbg !15235
  %88 = icmp sle i32 %87, 16, !dbg !15237
  br i1 %88, label %89, label %95, !dbg !15238

; <label>:89:                                     ; preds = %86
  %90 = load i32, i32* %13, align 4, !dbg !15239
  %91 = load i32, i32* %21, align 4, !dbg !15240
  %92 = icmp slt i32 %90, %91, !dbg !15241
  br i1 %92, label %93, label %95, !dbg !15242

; <label>:93:                                     ; preds = %89
  %94 = load i32, i32* %21, align 4, !dbg !15243
  store i32 %94, i32* %13, align 4, !dbg !15244
  br label %95, !dbg !15245

; <label>:95:                                     ; preds = %93, %89, %86
  br label %96, !dbg !15246

; <label>:96:                                     ; preds = %95
  %97 = load i32, i32* %10, align 4, !dbg !15247
  %98 = add nsw i32 %97, 1, !dbg !15247
  store i32 %98, i32* %10, align 4, !dbg !15247
  br label %35, !dbg !15248, !llvm.loop !15249

; <label>:99:                                     ; preds = %35
  %100 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !15251
  %101 = load i32, i32* %13, align 4, !dbg !15252
  %102 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %100, i32 0, i32 -1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.303, i32 0, i32 0), i32 %101), !dbg !15253
  %103 = load i32, i32* %13, align 4, !dbg !15254
  %104 = shl i32 1, %103, !dbg !15255
  store i32 %104, i32* %12, align 4, !dbg !15256
  %105 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !15257
  %106 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %105, i32 0, i32 0, !dbg !15258
  %107 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %106, align 8, !dbg !15258
  %108 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %107, i64 16), !dbg !15259
  %109 = bitcast i8* %108 to %struct._Jbig2HuffmanTable*, !dbg !15260
  store %struct._Jbig2HuffmanTable* %109, %struct._Jbig2HuffmanTable** %14, align 8, !dbg !15261
  %110 = load i32, i32* %13, align 4, !dbg !15262
  %111 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %14, align 8, !dbg !15263
  %112 = getelementptr inbounds %struct._Jbig2HuffmanTable, %struct._Jbig2HuffmanTable* %111, i32 0, i32 0, !dbg !15264
  store i32 %110, i32* %112, align 8, !dbg !15265
  %113 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !15266
  %114 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %113, i32 0, i32 0, !dbg !15267
  %115 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %114, align 8, !dbg !15267
  %116 = load i32, i32* %12, align 4, !dbg !15268
  %117 = sext i32 %116 to i64, !dbg !15268
  %118 = mul i64 %117, 16, !dbg !15269
  store volatile i8 1, i8* @specialMalloc, align 1, !dbg !15270
  %119 = call i8* bitcast (i8* (%struct._Jbig2Allocator.1*, i64)* @jbig2_alloc to i8* (%struct._Jbig2Allocator*, i64)*)(%struct._Jbig2Allocator* %115, i64 %118), !dbg !15270
  store volatile i8 0, i8* @specialMalloc, align 1, !dbg !15271
  %120 = bitcast i8* %119 to %struct._Jbig2HuffmanEntry*, !dbg !15271
  store %struct._Jbig2HuffmanEntry* %120, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15272
  %121 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15273
  %122 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %14, align 8, !dbg !15274
  %123 = getelementptr inbounds %struct._Jbig2HuffmanTable, %struct._Jbig2HuffmanTable* %122, i32 0, i32 1, !dbg !15275
  store %struct._Jbig2HuffmanEntry* %121, %struct._Jbig2HuffmanEntry** %123, align 8, !dbg !15276
  %124 = getelementptr inbounds [65536 x i32], [65536 x i32]* %6, i64 0, i64 0, !dbg !15277
  store i32 0, i32* %124, align 16, !dbg !15278
  store i32 1, i32* %16, align 4, !dbg !15279
  br label %125, !dbg !15281

; <label>:125:                                    ; preds = %352, %99
  %126 = load i32, i32* %16, align 4, !dbg !15282
  %127 = load i32, i32* %7, align 4, !dbg !15284
  %128 = icmp sle i32 %126, %127, !dbg !15285
  br i1 %128, label %129, label %355, !dbg !15286

; <label>:129:                                    ; preds = %125
  call void @llvm.dbg.declare(metadata i32* %22, metadata !15287, metadata !DIExpression()), !dbg !15289
  %130 = load i32, i32* %13, align 4, !dbg !15290
  %131 = load i32, i32* %16, align 4, !dbg !15291
  %132 = sub nsw i32 %130, %131, !dbg !15292
  store i32 %132, i32* %22, align 4, !dbg !15289
  %133 = load i32, i32* %17, align 4, !dbg !15293
  %134 = load i32, i32* %16, align 4, !dbg !15294
  %135 = sub nsw i32 %134, 1, !dbg !15295
  %136 = sext i32 %135 to i64, !dbg !15296
  %137 = getelementptr inbounds [65536 x i32], [65536 x i32]* %6, i64 0, i64 %136, !dbg !15296
  %138 = load i32, i32* %137, align 4, !dbg !15296
  %139 = add nsw i32 %133, %138, !dbg !15297
  %140 = shl i32 %139, 1, !dbg !15298
  store i32 %140, i32* %17, align 4, !dbg !15299
  %141 = load i32, i32* %17, align 4, !dbg !15300
  store i32 %141, i32* %18, align 4, !dbg !15301
  store i32 0, i32* %19, align 4, !dbg !15302
  br label %142, !dbg !15304

; <label>:142:                                    ; preds = %348, %129
  %143 = load i32, i32* %19, align 4, !dbg !15305
  %144 = load i32, i32* %9, align 4, !dbg !15307
  %145 = icmp slt i32 %143, %144, !dbg !15308
  br i1 %145, label %146, label %351, !dbg !15309

; <label>:146:                                    ; preds = %142
  call void @llvm.dbg.declare(metadata i32* %23, metadata !15310, metadata !DIExpression()), !dbg !15312
  %147 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15313
  %148 = load i32, i32* %19, align 4, !dbg !15314
  %149 = sext i32 %148 to i64, !dbg !15313
  %150 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %147, i64 %149, !dbg !15313
  %151 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %150, i32 0, i32 0, !dbg !15315
  %152 = load i32, i32* %151, align 4, !dbg !15315
  store i32 %152, i32* %23, align 4, !dbg !15312
  %153 = load i32, i32* %23, align 4, !dbg !15316
  %154 = load i32, i32* %16, align 4, !dbg !15318
  %155 = icmp eq i32 %153, %154, !dbg !15319
  br i1 %155, label %156, label %347, !dbg !15320

; <label>:156:                                    ; preds = %146
  call void @llvm.dbg.declare(metadata i32* %24, metadata !15321, metadata !DIExpression()), !dbg !15323
  %157 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15324
  %158 = load i32, i32* %19, align 4, !dbg !15325
  %159 = sext i32 %158 to i64, !dbg !15324
  %160 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %157, i64 %159, !dbg !15324
  %161 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %160, i32 0, i32 1, !dbg !15326
  %162 = load i32, i32* %161, align 4, !dbg !15326
  store i32 %162, i32* %24, align 4, !dbg !15323
  call void @llvm.dbg.declare(metadata i32* %25, metadata !15327, metadata !DIExpression()), !dbg !15328
  %163 = load i32, i32* %18, align 4, !dbg !15329
  %164 = load i32, i32* %22, align 4, !dbg !15330
  %165 = shl i32 %163, %164, !dbg !15331
  store i32 %165, i32* %25, align 4, !dbg !15328
  call void @llvm.dbg.declare(metadata i32* %26, metadata !15332, metadata !DIExpression()), !dbg !15333
  %166 = load i32, i32* %18, align 4, !dbg !15334
  %167 = add nsw i32 %166, 1, !dbg !15335
  %168 = load i32, i32* %22, align 4, !dbg !15336
  %169 = shl i32 %167, %168, !dbg !15337
  store i32 %169, i32* %26, align 4, !dbg !15333
  call void @llvm.dbg.declare(metadata i8* %27, metadata !15338, metadata !DIExpression()), !dbg !15339
  store i8 0, i8* %27, align 1, !dbg !15339
  %170 = load i32, i32* %26, align 4, !dbg !15340
  %171 = load i32, i32* %12, align 4, !dbg !15342
  %172 = icmp sgt i32 %170, %171, !dbg !15343
  br i1 %172, label %173, label %190, !dbg !15344

; <label>:173:                                    ; preds = %156
  %174 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !15345
  %175 = load i32, i32* %26, align 4, !dbg !15347
  %176 = load i32, i32* %12, align 4, !dbg !15348
  %177 = call i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...) bitcast (i32 (%struct._Jbig2Ctx*, i32, i32, i8*, ...)* @jbig2_error to i32 (%struct._Jbig2Ctx.11*, i32, i32, i8*, ...)*)(%struct._Jbig2Ctx.11* %174, i32 3, i32 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1.304, i32 0, i32 0), i32 %175, i32 %176), !dbg !15349
  %178 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !15350
  %179 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %178, i32 0, i32 0, !dbg !15351
  %180 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %179, align 8, !dbg !15351
  %181 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %14, align 8, !dbg !15352
  %182 = getelementptr inbounds %struct._Jbig2HuffmanTable, %struct._Jbig2HuffmanTable* %181, i32 0, i32 1, !dbg !15353
  %183 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %182, align 8, !dbg !15353
  %184 = bitcast %struct._Jbig2HuffmanEntry* %183 to i8*, !dbg !15352
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %180, i8* %184), !dbg !15354
  %185 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %4, align 8, !dbg !15355
  %186 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %185, i32 0, i32 0, !dbg !15356
  %187 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %186, align 8, !dbg !15356
  %188 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %14, align 8, !dbg !15357
  %189 = bitcast %struct._Jbig2HuffmanTable* %188 to i8*, !dbg !15357
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %187, i8* %189), !dbg !15358
  store %struct._Jbig2HuffmanTable* null, %struct._Jbig2HuffmanTable** %3, align 8, !dbg !15359
  br label %357, !dbg !15359

; <label>:190:                                    ; preds = %156
  %191 = load %struct._Jbig2HuffmanParams*, %struct._Jbig2HuffmanParams** %5, align 8, !dbg !15360
  %192 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %191, i32 0, i32 0, !dbg !15362
  %193 = load i32, i32* %192, align 8, !dbg !15362
  %194 = icmp ne i32 %193, 0, !dbg !15360
  br i1 %194, label %195, label %205, !dbg !15363

; <label>:195:                                    ; preds = %190
  %196 = load i32, i32* %19, align 4, !dbg !15364
  %197 = load i32, i32* %9, align 4, !dbg !15365
  %198 = sub nsw i32 %197, 1, !dbg !15366
  %199 = icmp eq i32 %196, %198, !dbg !15367
  br i1 %199, label %200, label %205, !dbg !15368

; <label>:200:                                    ; preds = %195
  %201 = load i8, i8* %27, align 1, !dbg !15369
  %202 = zext i8 %201 to i32, !dbg !15369
  %203 = or i32 %202, 1, !dbg !15369
  %204 = trunc i32 %203 to i8, !dbg !15369
  store i8 %204, i8* %27, align 1, !dbg !15369
  br label %205, !dbg !15370

; <label>:205:                                    ; preds = %200, %195, %190
  %206 = load i32, i32* %19, align 4, !dbg !15371
  %207 = load i32, i32* %9, align 4, !dbg !15373
  %208 = load %struct._Jbig2HuffmanParams*, %struct._Jbig2HuffmanParams** %5, align 8, !dbg !15374
  %209 = getelementptr inbounds %struct._Jbig2HuffmanParams, %struct._Jbig2HuffmanParams* %208, i32 0, i32 0, !dbg !15375
  %210 = load i32, i32* %209, align 8, !dbg !15375
  %211 = icmp ne i32 %210, 0, !dbg !15374
  %212 = zext i1 %211 to i64, !dbg !15374
  %213 = select i1 %211, i32 3, i32 2, !dbg !15374
  %214 = sub nsw i32 %207, %213, !dbg !15376
  %215 = icmp eq i32 %206, %214, !dbg !15377
  br i1 %215, label %216, label %221, !dbg !15378

; <label>:216:                                    ; preds = %205
  %217 = load i8, i8* %27, align 1, !dbg !15379
  %218 = zext i8 %217 to i32, !dbg !15379
  %219 = or i32 %218, 2, !dbg !15379
  %220 = trunc i32 %219 to i8, !dbg !15379
  store i8 %220, i8* %27, align 1, !dbg !15379
  br label %221, !dbg !15380

; <label>:221:                                    ; preds = %216, %205
  %222 = load i32, i32* %23, align 4, !dbg !15381
  %223 = load i32, i32* %24, align 4, !dbg !15383
  %224 = add nsw i32 %222, %223, !dbg !15384
  %225 = icmp sgt i32 %224, 16, !dbg !15385
  br i1 %225, label %226, label %269, !dbg !15386

; <label>:226:                                    ; preds = %221
  %227 = load i32, i32* %25, align 4, !dbg !15387
  store i32 %227, i32* %11, align 4, !dbg !15390
  br label %228, !dbg !15391

; <label>:228:                                    ; preds = %265, %226
  %229 = load i32, i32* %11, align 4, !dbg !15392
  %230 = load i32, i32* %26, align 4, !dbg !15394
  %231 = icmp slt i32 %229, %230, !dbg !15395
  br i1 %231, label %232, label %268, !dbg !15396

; <label>:232:                                    ; preds = %228
  %233 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15397
  %234 = load i32, i32* %19, align 4, !dbg !15399
  %235 = sext i32 %234 to i64, !dbg !15397
  %236 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %233, i64 %235, !dbg !15397
  %237 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %236, i32 0, i32 2, !dbg !15400
  %238 = load i32, i32* %237, align 4, !dbg !15400
  %239 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15401
  %240 = load i32, i32* %11, align 4, !dbg !15402
  %241 = sext i32 %240 to i64, !dbg !15401
  %242 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %239, i64 %241, !dbg !15401
  %243 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %242, i32 0, i32 0, !dbg !15403
  %244 = bitcast %union.anon* %243 to i32*, !dbg !15404
  store i32 %238, i32* %244, align 8, !dbg !15405
  %245 = load i32, i32* %23, align 4, !dbg !15406
  %246 = trunc i32 %245 to i8, !dbg !15406
  %247 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15407
  %248 = load i32, i32* %11, align 4, !dbg !15408
  %249 = sext i32 %248 to i64, !dbg !15407
  %250 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %247, i64 %249, !dbg !15407
  %251 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %250, i32 0, i32 1, !dbg !15409
  store i8 %246, i8* %251, align 8, !dbg !15410
  %252 = load i32, i32* %24, align 4, !dbg !15411
  %253 = trunc i32 %252 to i8, !dbg !15411
  %254 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15412
  %255 = load i32, i32* %11, align 4, !dbg !15413
  %256 = sext i32 %255 to i64, !dbg !15412
  %257 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %254, i64 %256, !dbg !15412
  %258 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %257, i32 0, i32 2, !dbg !15414
  store i8 %253, i8* %258, align 1, !dbg !15415
  %259 = load i8, i8* %27, align 1, !dbg !15416
  %260 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15417
  %261 = load i32, i32* %11, align 4, !dbg !15418
  %262 = sext i32 %261 to i64, !dbg !15417
  %263 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %260, i64 %262, !dbg !15417
  %264 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %263, i32 0, i32 3, !dbg !15419
  store i8 %259, i8* %264, align 2, !dbg !15420
  br label %265, !dbg !15421

; <label>:265:                                    ; preds = %232
  %266 = load i32, i32* %11, align 4, !dbg !15422
  %267 = add nsw i32 %266, 1, !dbg !15422
  store i32 %267, i32* %11, align 4, !dbg !15422
  br label %228, !dbg !15423, !llvm.loop !15424

; <label>:268:                                    ; preds = %228
  br label %344, !dbg !15426

; <label>:269:                                    ; preds = %221
  %270 = load i32, i32* %25, align 4, !dbg !15427
  store i32 %270, i32* %11, align 4, !dbg !15430
  br label %271, !dbg !15431

; <label>:271:                                    ; preds = %340, %269
  %272 = load i32, i32* %11, align 4, !dbg !15432
  %273 = load i32, i32* %26, align 4, !dbg !15434
  %274 = icmp slt i32 %272, %273, !dbg !15435
  br i1 %274, label %275, label %343, !dbg !15436

; <label>:275:                                    ; preds = %271
  call void @llvm.dbg.declare(metadata i32* %28, metadata !15437, metadata !DIExpression()), !dbg !15439
  %276 = load i32, i32* %11, align 4, !dbg !15440
  %277 = load i32, i32* %22, align 4, !dbg !15441
  %278 = load i32, i32* %24, align 4, !dbg !15442
  %279 = sub nsw i32 %277, %278, !dbg !15443
  %280 = ashr i32 %276, %279, !dbg !15444
  %281 = load i32, i32* %24, align 4, !dbg !15445
  %282 = shl i32 1, %281, !dbg !15446
  %283 = sub nsw i32 %282, 1, !dbg !15447
  %284 = and i32 %280, %283, !dbg !15448
  store i32 %284, i32* %28, align 4, !dbg !15439
  %285 = load i8, i8* %27, align 1, !dbg !15449
  %286 = zext i8 %285 to i32, !dbg !15449
  %287 = and i32 %286, 2, !dbg !15451
  %288 = icmp ne i32 %287, 0, !dbg !15451
  br i1 %288, label %289, label %304, !dbg !15452

; <label>:289:                                    ; preds = %275
  %290 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15453
  %291 = load i32, i32* %19, align 4, !dbg !15454
  %292 = sext i32 %291 to i64, !dbg !15453
  %293 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %290, i64 %292, !dbg !15453
  %294 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %293, i32 0, i32 2, !dbg !15455
  %295 = load i32, i32* %294, align 4, !dbg !15455
  %296 = load i32, i32* %28, align 4, !dbg !15456
  %297 = sub nsw i32 %295, %296, !dbg !15457
  %298 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15458
  %299 = load i32, i32* %11, align 4, !dbg !15459
  %300 = sext i32 %299 to i64, !dbg !15458
  %301 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %298, i64 %300, !dbg !15458
  %302 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %301, i32 0, i32 0, !dbg !15460
  %303 = bitcast %union.anon* %302 to i32*, !dbg !15461
  store i32 %297, i32* %303, align 8, !dbg !15462
  br label %319, !dbg !15458

; <label>:304:                                    ; preds = %275
  %305 = load %struct._Jbig2HuffmanLine*, %struct._Jbig2HuffmanLine** %8, align 8, !dbg !15463
  %306 = load i32, i32* %19, align 4, !dbg !15464
  %307 = sext i32 %306 to i64, !dbg !15463
  %308 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %305, i64 %307, !dbg !15463
  %309 = getelementptr inbounds %struct._Jbig2HuffmanLine, %struct._Jbig2HuffmanLine* %308, i32 0, i32 2, !dbg !15465
  %310 = load i32, i32* %309, align 4, !dbg !15465
  %311 = load i32, i32* %28, align 4, !dbg !15466
  %312 = add nsw i32 %310, %311, !dbg !15467
  %313 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15468
  %314 = load i32, i32* %11, align 4, !dbg !15469
  %315 = sext i32 %314 to i64, !dbg !15468
  %316 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %313, i64 %315, !dbg !15468
  %317 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %316, i32 0, i32 0, !dbg !15470
  %318 = bitcast %union.anon* %317 to i32*, !dbg !15471
  store i32 %312, i32* %318, align 8, !dbg !15472
  br label %319

; <label>:319:                                    ; preds = %304, %289
  %320 = load i32, i32* %23, align 4, !dbg !15473
  %321 = load i32, i32* %24, align 4, !dbg !15474
  %322 = add nsw i32 %320, %321, !dbg !15475
  %323 = trunc i32 %322 to i8, !dbg !15473
  %324 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15476
  %325 = load i32, i32* %11, align 4, !dbg !15477
  %326 = sext i32 %325 to i64, !dbg !15476
  %327 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %324, i64 %326, !dbg !15476
  %328 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %327, i32 0, i32 1, !dbg !15478
  store i8 %323, i8* %328, align 8, !dbg !15479
  %329 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15480
  %330 = load i32, i32* %11, align 4, !dbg !15481
  %331 = sext i32 %330 to i64, !dbg !15480
  %332 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %329, i64 %331, !dbg !15480
  %333 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %332, i32 0, i32 2, !dbg !15482
  store i8 0, i8* %333, align 1, !dbg !15483
  %334 = load i8, i8* %27, align 1, !dbg !15484
  %335 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %15, align 8, !dbg !15485
  %336 = load i32, i32* %11, align 4, !dbg !15486
  %337 = sext i32 %336 to i64, !dbg !15485
  %338 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %335, i64 %337, !dbg !15485
  %339 = getelementptr inbounds %struct._Jbig2HuffmanEntry, %struct._Jbig2HuffmanEntry* %338, i32 0, i32 3, !dbg !15487
  store i8 %334, i8* %339, align 2, !dbg !15488
  br label %340, !dbg !15489

; <label>:340:                                    ; preds = %319
  %341 = load i32, i32* %11, align 4, !dbg !15490
  %342 = add nsw i32 %341, 1, !dbg !15490
  store i32 %342, i32* %11, align 4, !dbg !15490
  br label %271, !dbg !15491, !llvm.loop !15492

; <label>:343:                                    ; preds = %271
  br label %344

; <label>:344:                                    ; preds = %343, %268
  %345 = load i32, i32* %18, align 4, !dbg !15494
  %346 = add nsw i32 %345, 1, !dbg !15494
  store i32 %346, i32* %18, align 4, !dbg !15494
  br label %347, !dbg !15495

; <label>:347:                                    ; preds = %344, %146
  br label %348, !dbg !15496

; <label>:348:                                    ; preds = %347
  %349 = load i32, i32* %19, align 4, !dbg !15497
  %350 = add nsw i32 %349, 1, !dbg !15497
  store i32 %350, i32* %19, align 4, !dbg !15497
  br label %142, !dbg !15498, !llvm.loop !15499

; <label>:351:                                    ; preds = %142
  br label %352, !dbg !15501

; <label>:352:                                    ; preds = %351
  %353 = load i32, i32* %16, align 4, !dbg !15502
  %354 = add nsw i32 %353, 1, !dbg !15502
  store i32 %354, i32* %16, align 4, !dbg !15502
  br label %125, !dbg !15503, !llvm.loop !15504

; <label>:355:                                    ; preds = %125
  %356 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %14, align 8, !dbg !15506
  store %struct._Jbig2HuffmanTable* %356, %struct._Jbig2HuffmanTable** %3, align 8, !dbg !15507
  br label %357, !dbg !15507

; <label>:357:                                    ; preds = %355, %173
  %358 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %3, align 8, !dbg !15508
  ret %struct._Jbig2HuffmanTable* %358, !dbg !15508
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @jbig2_release_huffman_table(%struct._Jbig2Ctx.11*, %struct._Jbig2HuffmanTable*) #0 !dbg !15509 {
  %3 = alloca %struct._Jbig2Ctx.11*, align 8
  %4 = alloca %struct._Jbig2HuffmanTable*, align 8
  store %struct._Jbig2Ctx.11* %0, %struct._Jbig2Ctx.11** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2Ctx.11** %3, metadata !15512, metadata !DIExpression()), !dbg !15513
  store %struct._Jbig2HuffmanTable* %1, %struct._Jbig2HuffmanTable** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._Jbig2HuffmanTable** %4, metadata !15514, metadata !DIExpression()), !dbg !15515
  %5 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %4, align 8, !dbg !15516
  %6 = icmp ne %struct._Jbig2HuffmanTable* %5, null, !dbg !15518
  br i1 %6, label %7, label %20, !dbg !15519

; <label>:7:                                      ; preds = %2
  %8 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !15520
  %9 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %8, i32 0, i32 0, !dbg !15522
  %10 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %9, align 8, !dbg !15522
  %11 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %4, align 8, !dbg !15523
  %12 = getelementptr inbounds %struct._Jbig2HuffmanTable, %struct._Jbig2HuffmanTable* %11, i32 0, i32 1, !dbg !15524
  %13 = load %struct._Jbig2HuffmanEntry*, %struct._Jbig2HuffmanEntry** %12, align 8, !dbg !15524
  %14 = bitcast %struct._Jbig2HuffmanEntry* %13 to i8*, !dbg !15523
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %10, i8* %14), !dbg !15525
  %15 = load %struct._Jbig2Ctx.11*, %struct._Jbig2Ctx.11** %3, align 8, !dbg !15526
  %16 = getelementptr inbounds %struct._Jbig2Ctx.11, %struct._Jbig2Ctx.11* %15, i32 0, i32 0, !dbg !15527
  %17 = load %struct._Jbig2Allocator*, %struct._Jbig2Allocator** %16, align 8, !dbg !15527
  %18 = load %struct._Jbig2HuffmanTable*, %struct._Jbig2HuffmanTable** %4, align 8, !dbg !15528
  %19 = bitcast %struct._Jbig2HuffmanTable* %18 to i8*, !dbg !15528
  call void bitcast (void (%struct._Jbig2Allocator.1*, i8*)* @jbig2_free to void (%struct._Jbig2Allocator*, i8*)*)(%struct._Jbig2Allocator* %17, i8* %19), !dbg !15529
  br label %20, !dbg !15530

; <label>:20:                                     ; preds = %7, %2
  ret void, !dbg !15531
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind readnone }

!llvm.dbg.cu = !{!55, !423, !86, !440, !462, !464, !505, !527, !530, !225, !532, !544, !563, !252, !572, !585, !288}
!llvm.ident = !{!596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596, !596}
!llvm.module.flags = !{!597, !598, !599, !600, !601}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 124, type: !71, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "parse_options", scope: !3, file: !3, line: 122, type: !4, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!3 = !DIFile(filename: "jbig2dec.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !6, !7, !10}
!6 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "jbig2dec_params_t", file: !3, line: 57, baseType: !12)
!12 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 51, size: 320, elements: !13)
!13 = !{!14, !22, !23, !24, !46, !47}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12, file: !3, line: 52, baseType: !15, size: 32)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "jbig2dec_mode", file: !3, line: 42, baseType: !16)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 40, baseType: !17, size: 32, elements: !18)
!17 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!18 = !{!19, !20, !21}
!19 = !DIEnumerator(name: "usage", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "dump", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "render", value: 2, isUnsigned: true)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !12, file: !3, line: 53, baseType: !6, size: 32, offset: 32)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !12, file: !3, line: 53, baseType: !6, size: 32, offset: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "hash_ctx", scope: !12, file: !3, line: 54, baseType: !25, size: 64, offset: 128)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "SHA1_CTX", file: !27, line: 15, baseType: !28)
!27 = !DIFile(filename: "./sha1.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!28 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !27, line: 11, size: 736, elements: !29)
!29 = !{!30, !36, !40}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !28, file: !27, line: 12, baseType: !31, size: 160)
!31 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 160, elements: !34)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !33, line: 51, baseType: !17)
!33 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!34 = !{!35}
!35 = !DISubrange(count: 5)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !28, file: !27, line: 13, baseType: !37, size: 64, offset: 160)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 2)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !28, file: !27, line: 14, baseType: !41, size: 512, offset: 224)
!41 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 512, elements: !44)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !33, line: 48, baseType: !43)
!43 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!44 = !{!45}
!45 = !DISubrange(count: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "output_file", scope: !12, file: !3, line: 55, baseType: !8, size: 64, offset: 192)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "output_format", scope: !12, file: !3, line: 56, baseType: !48, size: 32, offset: 256)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "jbig2dec_format", file: !3, line: 49, baseType: !49)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 44, baseType: !17, size: 32, elements: !50)
!50 = !{!51, !52, !53, !54}
!51 = !DIEnumerator(name: "jbig2dec_format_jbig2", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "jbig2dec_format_pbm", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "jbig2dec_format_png", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "jbig2dec_format_none", value: 3, isUnsigned: true)
!55 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !56, retainedTypes: !67, globals: !69, nameTableKind: None)
!56 = !{!16, !49, !57, !61}
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 34, baseType: !17, size: 32, elements: !59)
!58 = !DIFile(filename: "./jbig2.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!59 = !{!60}
!60 = !DIEnumerator(name: "JBIG2_OPTIONS_EMBEDDED", value: 1, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 27, baseType: !17, size: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "JBIG2_SEVERITY_DEBUG", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "JBIG2_SEVERITY_INFO", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "JBIG2_SEVERITY_WARNING", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "JBIG2_SEVERITY_FATAL", value: 3, isUnsigned: true)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!69 = !{!0}
!70 = !{}
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 2304, elements: !82)
!72 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !73, line: 94, size: 256, elements: !74)
!73 = !DIFile(filename: "./getopt.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!74 = !{!75, !78, !79, !81}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !72, file: !73, line: 97, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !72, file: !73, line: 103, baseType: !6, size: 32, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !72, file: !73, line: 104, baseType: !80, size: 64, offset: 128)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !72, file: !73, line: 105, baseType: !6, size: 32, offset: 192)
!82 = !{!83}
!83 = !DISubrange(count: 9)
!84 = !DIGlobalVariableExpression(var: !85, expr: !DIExpression())
!85 = distinct !DIGlobalVariable(name: "jbig2_default_allocator", scope: !86, file: !87, line: 56, type: !112, isLocal: true, isDefinition: true)
!86 = distinct !DICompileUnit(language: DW_LANG_C99, file: !87, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !88, retainedTypes: !105, globals: !222, nameTableKind: None)
!87 = !DIFile(filename: "jbig2.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!88 = !{!57, !61, !89, !98}
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 35, baseType: !17, size: 32, elements: !91)
!90 = !DIFile(filename: "./jbig2_priv.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!91 = !{!92, !93, !94, !95, !96, !97}
!92 = !DIEnumerator(name: "JBIG2_FILE_HEADER", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "JBIG2_FILE_SEQUENTIAL_HEADER", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "JBIG2_FILE_SEQUENTIAL_BODY", value: 2, isUnsigned: true)
!95 = !DIEnumerator(name: "JBIG2_FILE_RANDOM_HEADERS", value: 3, isUnsigned: true)
!96 = !DIEnumerator(name: "JBIG2_FILE_RANDOM_BODIES", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "JBIG2_FILE_EOF", value: 5, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 102, baseType: !17, size: 32, elements: !99)
!99 = !{!100, !101, !102, !103, !104}
!100 = !DIEnumerator(name: "JBIG2_PAGE_FREE", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "JBIG2_PAGE_NEW", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "JBIG2_PAGE_COMPLETE", value: 2, isUnsigned: true)
!103 = !DIEnumerator(name: "JBIG2_PAGE_RETURNED", value: 3, isUnsigned: true)
!104 = !DIEnumerator(name: "JBIG2_PAGE_RELEASED", value: 4, isUnsigned: true)
!105 = !{!68, !106, !133, !155, !173, !144, !202, !205}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !108)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !109)
!109 = !{!110, !130, !132, !135, !142, !143, !146, !147, !148, !149, !151, !152, !153, !154, !168, !169, !170, !171, !172}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !108, file: !90, line: 45, baseType: !111, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !114)
!114 = !{!115, !122, !126}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !113, file: !58, line: 86, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DISubroutineType(types: !118)
!118 = !{!68, !111, !119}
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !120, line: 62, baseType: !121)
!120 = !DIFile(filename: "llvm80/build/lib/clang/8.0.1/include/stddef.h", directory: "/root/llvm")
!121 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !113, file: !58, line: 87, baseType: !123, size: 64, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DISubroutineType(types: !125)
!125 = !{null, !111, !68}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !113, file: !58, line: 88, baseType: !127, size: 64, offset: 128)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DISubroutineType(types: !129)
!129 = !{!68, !111, !68, !119}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !108, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Options", file: !58, line: 36, baseType: !57)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !108, file: !90, line: 47, baseType: !133, size: 64, offset: 128)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !108, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ErrorCallback", file: !58, line: 75, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DISubroutineType(types: !139)
!139 = !{!6, !68, !76, !140, !141}
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Severity", file: !58, line: 32, baseType: !61)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !33, line: 38, baseType: !6)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !108, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !108, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte", file: !90, line: 21, baseType: !42)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !108, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !108, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !108, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !108, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2FileState", file: !90, line: 42, baseType: !89)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !108, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !108, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !108, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !108, file: !90, line: 62, baseType: !155, size: 64, offset: 640)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !158)
!158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !159)
!159 = !{!160, !161, !162, !163, !164, !165, !167}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !158, file: !58, line: 117, baseType: !32, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !158, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !158, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !158, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !158, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !158, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !158, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !108, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !108, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !108, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !108, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !108, file: !90, line: 70, baseType: !173, size: 64, offset: 832)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !176)
!176 = !{!177, !179, !180, !181, !182, !183, !184, !187, !189, !190, !191}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !175, file: !90, line: 111, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2PageState", file: !90, line: 108, baseType: !98)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !175, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !175, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !175, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !175, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !175, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !175, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !33, line: 49, baseType: !186)
!186 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !175, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !90, line: 22, baseType: !6)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !175, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !175, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !175, file: !90, line: 120, baseType: !192, size: 64, offset: 320)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !195)
!195 = !{!196, !197, !198, !199, !201}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !194, file: !58, line: 57, baseType: !6, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !194, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !194, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !194, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !194, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2GlobalCtx", file: !58, line: 41, baseType: !204)
!204 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2GlobalCtx", file: !58, line: 41, flags: DIFlagFwdDecl)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStreamBuf", file: !87, line: 391, baseType: !207)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !87, line: 387, size: 192, elements: !208)
!208 = !{!209, !218, !221}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "super", scope: !207, file: !87, line: 388, baseType: !210, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !212)
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !211, file: !90, line: 167, baseType: !214, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!32, !217, !6}
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !207, file: !87, line: 389, baseType: !219, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !207, file: !87, line: 390, baseType: !119, size: 64, offset: 128)
!222 = !{!84}
!223 = !DIGlobalVariableExpression(var: !224, expr: !DIExpression())
!224 = distinct !DIGlobalVariable(name: "jbig2_mmr_white_decode", scope: !225, file: !226, line: 96, type: !247, isLocal: false, isDefinition: true)
!225 = distinct !DICompileUnit(language: DW_LANG_C99, file: !226, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !88, globals: !227, nameTableKind: None)
!226 = !DIFile(filename: "jbig2_mmr.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!227 = !{!223, !228, !240, !245}
!228 = !DIGlobalVariableExpression(var: !229, expr: !DIExpression())
!229 = distinct !DIGlobalVariable(name: "jbig2_mmr_black_decode", scope: !225, file: !226, line: 404, type: !230, isLocal: false, isDefinition: true)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 10240, elements: !238)
!231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmr_table_node", file: !226, line: 93, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !226, line: 90, size: 32, elements: !234)
!234 = !{!235, !237}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !233, file: !226, line: 91, baseType: !236, size: 16)
!236 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !233, file: !226, line: 92, baseType: !236, size: 16, offset: 16)
!238 = !{!239}
!239 = !DISubrange(count: 320)
!240 = !DIGlobalVariableExpression(var: !241, expr: !DIExpression())
!241 = distinct !DIGlobalVariable(name: "lm", scope: !225, file: !226, line: 767, type: !242, isLocal: true, isDefinition: true)
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 64, elements: !243)
!243 = !{!244}
!244 = !DISubrange(count: 8)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "rm", scope: !225, file: !226, line: 768, type: !242, isLocal: true, isDefinition: true)
!247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 9728, elements: !248)
!248 = !{!249}
!249 = !DISubrange(count: 304)
!250 = !DIGlobalVariableExpression(var: !251, expr: !DIExpression())
!251 = distinct !DIGlobalVariable(name: "jbig2_arith_Qe", scope: !252, file: !253, line: 217, type: !276, isLocal: false, isDefinition: true)
!252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !88, retainedTypes: !254, globals: !275, nameTableKind: None)
!253 = !DIFile(filename: "jbig2_arith.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!254 = !{!255, !145}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithState", file: !257, line: 19, baseType: !258)
!257 = !DIFile(filename: "./jbig2_arith.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2ArithState", file: !253, line: 38, size: 320, elements: !259)
!259 = !{!260, !261, !262, !263, !264, !265, !274}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !258, file: !253, line: 39, baseType: !32, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !258, file: !253, line: 40, baseType: !6, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "CT", scope: !258, file: !253, line: 42, baseType: !6, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "next_word", scope: !258, file: !253, line: 44, baseType: !32, size: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "next_word_bytes", scope: !258, file: !253, line: 45, baseType: !6, size: 32, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !258, file: !253, line: 47, baseType: !266, size: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !269)
!269 = !{!270}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !268, file: !90, line: 167, baseType: !271, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!32, !266, !6}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !258, file: !253, line: 48, baseType: !6, size: 32, offset: 256)
!275 = !{!250}
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 1504, elements: !284)
!277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithQe", file: !253, line: 215, baseType: !279)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !253, line: 211, size: 32, elements: !280)
!280 = !{!281, !282, !283}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "Qe", scope: !279, file: !253, line: 212, baseType: !186, size: 16)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "mps_xor", scope: !279, file: !253, line: 213, baseType: !145, size: 8, offset: 16)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "lps_xor", scope: !279, file: !253, line: 214, baseType: !145, size: 8, offset: 24)
!284 = !{!285}
!285 = !DISubrange(count: 47)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_A", scope: !288, file: !330, line: 30, type: !422, isLocal: false, isDefinition: true)
!288 = distinct !DICompileUnit(language: DW_LANG_C99, file: !289, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !88, retainedTypes: !290, globals: !327, nameTableKind: None)
!289 = !DIFile(filename: "jbig2_huffman.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!290 = !{!291, !68, !309, !315}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanState", file: !293, line: 25, baseType: !294)
!293 = !DIFile(filename: "./jbig2_huffman.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanState", file: !289, line: 44, size: 192, elements: !295)
!295 = !{!296, !297, !298, !299, !300}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "this_word", scope: !294, file: !289, line: 48, baseType: !32, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "next_word", scope: !294, file: !289, line: 49, baseType: !32, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "offset_bits", scope: !294, file: !289, line: 50, baseType: !6, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !294, file: !289, line: 51, baseType: !6, size: 32, offset: 96)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !294, file: !289, line: 53, baseType: !301, size: 64, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !303)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !303, file: !90, line: 167, baseType: !306, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = !DISubroutineType(types: !308)
!308 = !{!32, !301, !6}
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanTable", file: !293, line: 26, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanTable", file: !293, line: 39, size: 128, elements: !312)
!312 = !{!313, !314}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "log_table_size", scope: !311, file: !293, line: 40, baseType: !6, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !311, file: !293, line: 41, baseType: !315, size: 64, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanEntry", file: !293, line: 24, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanEntry", file: !293, line: 29, size: 128, elements: !318)
!318 = !{!319, !324, !325, !326}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !317, file: !293, line: 33, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !317, file: !293, line: 30, size: 64, elements: !321)
!321 = !{!322, !323}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELOW", scope: !320, file: !293, line: 31, baseType: !141, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "ext_table", scope: !320, file: !293, line: 32, baseType: !309, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "PREFLEN", scope: !317, file: !293, line: 34, baseType: !145, size: 8, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELEN", scope: !317, file: !293, line: 35, baseType: !145, size: 8, offset: 72)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !317, file: !293, line: 36, baseType: !145, size: 8, offset: 80)
!327 = !{!286, !328, !346, !349, !351, !354, !356, !361, !363, !365, !367, !372, !374, !379, !381, !386, !388, !393, !395, !397, !399, !404, !406, !408, !410, !412, !414, !416, !418, !420}
!328 = !DIGlobalVariableExpression(var: !329, expr: !DIExpression())
!329 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_A", scope: !288, file: !330, line: 39, type: !331, isLocal: false, isDefinition: true)
!330 = !DIFile(filename: "./jbig2_hufftab.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanParams", file: !293, line: 27, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanParams", file: !293, line: 52, size: 128, elements: !334)
!334 = !{!335, !336, !337}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "HTOOB", scope: !333, file: !293, line: 53, baseType: !188, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "n_lines", scope: !333, file: !293, line: 54, baseType: !6, size: 32, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !333, file: !293, line: 55, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanLine", file: !293, line: 44, baseType: !341)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanLine", file: !293, line: 46, size: 96, elements: !342)
!342 = !{!343, !344, !345}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "PREFLEN", scope: !341, file: !293, line: 47, baseType: !6, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELEN", scope: !341, file: !293, line: 48, baseType: !6, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELOW", scope: !341, file: !293, line: 49, baseType: !6, size: 32, offset: 64)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_B", scope: !288, file: !330, line: 43, type: !348, isLocal: false, isDefinition: true)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 768, elements: !243)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_B", scope: !288, file: !330, line: 55, type: !331, isLocal: false, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_C", scope: !288, file: !330, line: 59, type: !353, isLocal: false, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 864, elements: !82)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_C", scope: !288, file: !330, line: 72, type: !331, isLocal: false, isDefinition: true)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_D", scope: !288, file: !330, line: 76, type: !358, isLocal: false, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 672, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 7)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_D", scope: !288, file: !330, line: 87, type: !331, isLocal: false, isDefinition: true)
!363 = !DIGlobalVariableExpression(var: !364, expr: !DIExpression())
!364 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_E", scope: !288, file: !330, line: 91, type: !348, isLocal: false, isDefinition: true)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_E", scope: !288, file: !330, line: 103, type: !331, isLocal: false, isDefinition: true)
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_F", scope: !288, file: !330, line: 107, type: !369, isLocal: false, isDefinition: true)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 1344, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 14)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_F", scope: !288, file: !330, line: 125, type: !331, isLocal: false, isDefinition: true)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_G", scope: !288, file: !330, line: 129, type: !376, isLocal: false, isDefinition: true)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 1440, elements: !377)
!377 = !{!378}
!378 = !DISubrange(count: 15)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_G", scope: !288, file: !330, line: 148, type: !331, isLocal: false, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_H", scope: !288, file: !330, line: 152, type: !383, isLocal: false, isDefinition: true)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2016, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 21)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_H", scope: !288, file: !330, line: 177, type: !331, isLocal: false, isDefinition: true)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_I", scope: !288, file: !330, line: 181, type: !390, isLocal: false, isDefinition: true)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2112, elements: !391)
!391 = !{!392}
!392 = !DISubrange(count: 22)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_I", scope: !288, file: !330, line: 207, type: !331, isLocal: false, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_J", scope: !288, file: !330, line: 211, type: !383, isLocal: false, isDefinition: true)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_J", scope: !288, file: !330, line: 236, type: !331, isLocal: false, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_K", scope: !288, file: !330, line: 240, type: !401, isLocal: false, isDefinition: true)
!401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 1248, elements: !402)
!402 = !{!403}
!403 = !DISubrange(count: 13)
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_K", scope: !288, file: !330, line: 257, type: !331, isLocal: false, isDefinition: true)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_L", scope: !288, file: !330, line: 261, type: !401, isLocal: false, isDefinition: true)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_L", scope: !288, file: !330, line: 278, type: !331, isLocal: false, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_M", scope: !288, file: !330, line: 283, type: !401, isLocal: false, isDefinition: true)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_M", scope: !288, file: !330, line: 300, type: !331, isLocal: false, isDefinition: true)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_N", scope: !288, file: !330, line: 304, type: !358, isLocal: false, isDefinition: true)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_N", scope: !288, file: !330, line: 315, type: !331, isLocal: false, isDefinition: true)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "jbig2_huffman_lines_O", scope: !288, file: !330, line: 319, type: !401, isLocal: false, isDefinition: true)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "jbig2_huffman_params_O", scope: !288, file: !330, line: 336, type: !331, isLocal: false, isDefinition: true)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 480, elements: !34)
!423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !424, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !70, retainedTypes: !425, nameTableKind: None)
!424 = !DIFile(filename: "sha1.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!425 = !{!426, !43, !200, !42}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHAR64LONG16", scope: !428, file: !424, line: 135, baseType: !433)
!428 = distinct !DISubprogram(name: "SHA1_Transform", scope: !424, file: !424, line: 129, type: !429, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !423, retainedNodes: !70)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !166, !431}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !424, line: 132, size: 512, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !433, file: !424, line: 133, baseType: !41, size: 512)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !433, file: !424, line: 134, baseType: !437, size: 512)
!437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 512, elements: !438)
!438 = !{!439}
!439 = !DISubrange(count: 16)
!440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !441, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !442, retainedTypes: !450, nameTableKind: None)
!441 = !DIFile(filename: "jbig2_segment.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!442 = !{!57, !61, !89, !98, !443}
!443 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 128, baseType: !17, size: 32, elements: !444)
!444 = !{!445, !446, !447, !448, !449}
!445 = !DIEnumerator(name: "JBIG2_COMPOSE_OR", value: 0, isUnsigned: true)
!446 = !DIEnumerator(name: "JBIG2_COMPOSE_AND", value: 1, isUnsigned: true)
!447 = !DIEnumerator(name: "JBIG2_COMPOSE_XOR", value: 2, isUnsigned: true)
!448 = !DIEnumerator(name: "JBIG2_COMPOSE_XNOR", value: 3, isUnsigned: true)
!449 = !DIEnumerator(name: "JBIG2_COMPOSE_REPLACE", value: 4, isUnsigned: true)
!450 = !{!451, !68}
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !454)
!454 = !{!455, !456, !457, !458, !459, !460, !461}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !453, file: !58, line: 117, baseType: !32, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !453, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !453, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !453, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !453, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !453, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !453, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !463, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !442, retainedTypes: !67, nameTableKind: None)
!463 = !DIFile(filename: "jbig2_page.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !465, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !466, retainedTypes: !474, nameTableKind: None)
!465 = !DIFile(filename: "jbig2_symbol_dict.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!466 = !{!57, !61, !89, !98, !443, !467}
!467 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !468, line: 23, baseType: !17, size: 32, elements: !469)
!468 = !DIFile(filename: "./jbig2_text.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!469 = !{!470, !471, !472, !473}
!470 = !DIEnumerator(name: "JBIG2_CORNER_BOTTOMLEFT", value: 0, isUnsigned: true)
!471 = !DIEnumerator(name: "JBIG2_CORNER_TOPLEFT", value: 1, isUnsigned: true)
!472 = !DIEnumerator(name: "JBIG2_CORNER_BOTTOMRIGHT", value: 2, isUnsigned: true)
!473 = !DIEnumerator(name: "JBIG2_CORNER_TOPRIGHT", value: 3, isUnsigned: true)
!474 = !{!475, !68, !482, !492, !141, !6, !493, !497}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2SymbolDict", file: !477, line: 25, baseType: !478)
!477 = !DIFile(filename: "./jbig2_symbol_dict.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !477, line: 22, size: 128, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "n_symbols", scope: !478, file: !477, line: 23, baseType: !6, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "glyphs", scope: !478, file: !477, line: 24, baseType: !482, size: 64, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !486)
!486 = !{!487, !488, !489, !490, !491}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !485, file: !58, line: 57, baseType: !6, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !485, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !485, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !485, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !485, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !495)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !500)
!500 = !{!501}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !499, file: !90, line: 167, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{!32, !497, !6}
!505 = distinct !DICompileUnit(language: DW_LANG_C99, file: !506, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !466, retainedTypes: !507, nameTableKind: None)
!506 = !DIFile(filename: "jbig2_text.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!507 = !{!68, !80, !508}
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2SymbolDict", file: !477, line: 25, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !477, line: 22, size: 128, elements: !514)
!514 = !{!515, !516}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "n_symbols", scope: !513, file: !477, line: 23, baseType: !6, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "glyphs", scope: !513, file: !477, line: 24, baseType: !517, size: 64, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !520)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !521)
!521 = !{!522, !523, !524, !525, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !520, file: !58, line: 57, baseType: !6, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !520, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !520, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !520, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !520, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !528, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !442, retainedTypes: !529, nameTableKind: None)
!528 = !DIFile(filename: "jbig2_generic.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!529 = !{!144}
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !442, retainedTypes: !67, nameTableKind: None)
!531 = !DIFile(filename: "jbig2_refinement.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !442, retainedTypes: !534, nameTableKind: None)
!533 = !DIFile(filename: "jbig2_image.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!534 = !{!535, !68, !200}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !538)
!538 = !{!539, !540, !541, !542, !543}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !537, file: !58, line: 57, baseType: !6, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !537, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !537, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !537, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !537, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !545, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !546, retainedTypes: !562, nameTableKind: None)
!545 = !DIFile(filename: "jbig2_image_pbm.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!546 = !{!547}
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !548, line: 46, baseType: !17, size: 32, elements: !549)
!548 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561}
!550 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!551 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!552 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!553 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!554 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!555 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!556 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!557 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!558 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!559 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!560 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!561 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!562 = !{!68, !6, !186}
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !565, retainedTypes: !571, nameTableKind: None)
!564 = !DIFile(filename: "jbig2_metadata.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!565 = !{!566, !57, !61, !89, !98}
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !567, line: 26, baseType: !17, size: 32, elements: !568)
!567 = !DIFile(filename: "./jbig2_metadata.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!568 = !{!569, !570}
!569 = !DIEnumerator(name: "JBIG2_ENCODING_ASCII", value: 0, isUnsigned: true)
!570 = !DIEnumerator(name: "JBIG2_ENCODING_UCS16", value: 1, isUnsigned: true)
!571 = !{!68, !8}
!572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !573, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !88, retainedTypes: !574, nameTableKind: None)
!573 = !DIFile(filename: "jbig2_arith_int.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!574 = !{!575}
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithIntCtx", file: !577, line: 19, baseType: !578)
!577 = !DIFile(filename: "./jbig2_arith_int.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2ArithIntCtx", file: !573, line: 37, size: 4096, elements: !579)
!579 = !{!580}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "IAx", scope: !578, file: !573, line: 38, baseType: !581, size: 4096)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !582, size: 4096, elements: !583)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithCx", file: !257, line: 24, baseType: !43)
!583 = !{!584}
!584 = !DISubrange(count: 512)
!585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !586, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !88, retainedTypes: !587, nameTableKind: None)
!586 = !DIFile(filename: "jbig2_arith_iaid.c", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!587 = !{!588}
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithIaidCtx", file: !590, line: 19, baseType: !591)
!590 = !DIFile(filename: "./jbig2_arith_iaid.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2ArithIaidCtx", file: !586, line: 41, size: 128, elements: !592)
!592 = !{!593, !594}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "SBSYMCODELEN", scope: !591, file: !586, line: 42, baseType: !6, size: 32)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "IAIDx", scope: !591, file: !586, line: 43, baseType: !595, size: 64, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!596 = !{!"clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)"}
!597 = !{i32 2, !"Dwarf Version", i32 4}
!598 = !{i32 2, !"Debug Info Version", i32 3}
!599 = !{i32 1, !"wchar_size", i32 4}
!600 = !{i32 1, !"ThinLTO", i32 0}
!601 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!602 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 369, type: !603, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !55, retainedNodes: !70)
!603 = !DISubroutineType(types: !604)
!604 = !{!6, !6, !7}
!605 = !DILocalVariable(name: "argc", arg: 1, scope: !602, file: !3, line: 369, type: !6)
!606 = !DILocation(line: 369, column: 11, scope: !602)
!607 = !DILocalVariable(name: "argv", arg: 2, scope: !602, file: !3, line: 369, type: !7)
!608 = !DILocation(line: 369, column: 24, scope: !602)
!609 = !DILocalVariable(name: "f", scope: !602, file: !3, line: 371, type: !610)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !612, line: 48, baseType: !613)
!612 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !614, line: 241, size: 1728, elements: !615)
!614 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !636, !637, !638, !639, !643, !644, !646, !650, !653, !655, !656, !657, !658, !659, !660, !661}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !613, file: !614, line: 242, baseType: !6, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !613, file: !614, line: 247, baseType: !8, size: 64, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !613, file: !614, line: 248, baseType: !8, size: 64, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !613, file: !614, line: 249, baseType: !8, size: 64, offset: 192)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !613, file: !614, line: 250, baseType: !8, size: 64, offset: 256)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !613, file: !614, line: 251, baseType: !8, size: 64, offset: 320)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !613, file: !614, line: 252, baseType: !8, size: 64, offset: 384)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !613, file: !614, line: 253, baseType: !8, size: 64, offset: 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !613, file: !614, line: 254, baseType: !8, size: 64, offset: 512)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !613, file: !614, line: 256, baseType: !8, size: 64, offset: 576)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !613, file: !614, line: 257, baseType: !8, size: 64, offset: 640)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !613, file: !614, line: 258, baseType: !8, size: 64, offset: 704)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !613, file: !614, line: 260, baseType: !629, size: 64, offset: 768)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !614, line: 156, size: 192, elements: !631)
!631 = !{!632, !633, !635}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !630, file: !614, line: 157, baseType: !629, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !630, file: !614, line: 158, baseType: !634, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !630, file: !614, line: 162, baseType: !6, size: 32, offset: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !613, file: !614, line: 262, baseType: !634, size: 64, offset: 832)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !613, file: !614, line: 264, baseType: !6, size: 32, offset: 896)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !613, file: !614, line: 268, baseType: !6, size: 32, offset: 928)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !613, file: !614, line: 270, baseType: !640, size: 64, offset: 960)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !641, line: 131, baseType: !642)
!641 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!642 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !613, file: !614, line: 274, baseType: !186, size: 16, offset: 1024)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !613, file: !614, line: 275, baseType: !645, size: 8, offset: 1040)
!645 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !613, file: !614, line: 276, baseType: !647, size: 8, offset: 1048)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8, elements: !648)
!648 = !{!649}
!649 = !DISubrange(count: 1)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !613, file: !614, line: 280, baseType: !651, size: 64, offset: 1088)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !614, line: 150, baseType: null)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !613, file: !614, line: 289, baseType: !654, size: 64, offset: 1152)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !641, line: 132, baseType: !642)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !613, file: !614, line: 297, baseType: !68, size: 64, offset: 1216)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !613, file: !614, line: 298, baseType: !68, size: 64, offset: 1280)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !613, file: !614, line: 299, baseType: !68, size: 64, offset: 1344)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !613, file: !614, line: 300, baseType: !68, size: 64, offset: 1408)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !613, file: !614, line: 302, baseType: !119, size: 64, offset: 1472)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !613, file: !614, line: 303, baseType: !6, size: 32, offset: 1536)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !613, file: !614, line: 305, baseType: !662, size: 160, offset: 1568)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 160, elements: !663)
!663 = !{!664}
!664 = !DISubrange(count: 20)
!665 = !DILocation(line: 371, column: 9, scope: !602)
!666 = !DILocalVariable(name: "f_page", scope: !602, file: !3, line: 371, type: !610)
!667 = !DILocation(line: 371, column: 20, scope: !602)
!668 = !DILocalVariable(name: "ctx", scope: !602, file: !3, line: 372, type: !669)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !671)
!671 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !58, line: 40, flags: DIFlagFwdDecl)
!672 = !DILocation(line: 372, column: 13, scope: !602)
!673 = !DILocalVariable(name: "buf", scope: !602, file: !3, line: 373, type: !674)
!674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 32768, elements: !675)
!675 = !{!676}
!676 = !DISubrange(count: 4096)
!677 = !DILocation(line: 373, column: 11, scope: !602)
!678 = !DILocalVariable(name: "params", scope: !602, file: !3, line: 374, type: !11)
!679 = !DILocation(line: 374, column: 21, scope: !602)
!680 = !DILocalVariable(name: "filearg", scope: !602, file: !3, line: 375, type: !6)
!681 = !DILocation(line: 375, column: 7, scope: !602)
!682 = !DILocation(line: 378, column: 10, scope: !602)
!683 = !DILocation(line: 378, column: 15, scope: !602)
!684 = !DILocation(line: 379, column: 10, scope: !602)
!685 = !DILocation(line: 379, column: 18, scope: !602)
!686 = !DILocation(line: 380, column: 10, scope: !602)
!687 = !DILocation(line: 380, column: 15, scope: !602)
!688 = !DILocation(line: 381, column: 10, scope: !602)
!689 = !DILocation(line: 381, column: 22, scope: !602)
!690 = !DILocation(line: 382, column: 10, scope: !602)
!691 = !DILocation(line: 382, column: 24, scope: !602)
!692 = !DILocation(line: 384, column: 27, scope: !602)
!693 = !DILocation(line: 384, column: 33, scope: !602)
!694 = !DILocation(line: 384, column: 13, scope: !602)
!695 = !DILocation(line: 384, column: 11, scope: !602)
!696 = !DILocation(line: 386, column: 14, scope: !697)
!697 = distinct !DILexicalBlock(scope: !602, file: !3, line: 386, column: 7)
!698 = !DILocation(line: 386, column: 7, scope: !697)
!699 = !DILocation(line: 386, column: 7, scope: !602)
!700 = !DILocation(line: 386, column: 20, scope: !697)
!701 = !DILocation(line: 388, column: 18, scope: !602)
!702 = !DILocation(line: 388, column: 3, scope: !602)
!703 = !DILocation(line: 390, column: 9, scope: !704)
!704 = distinct !DILexicalBlock(scope: !602, file: !3, line: 388, column: 24)
!705 = !DILocation(line: 391, column: 9, scope: !704)
!706 = !DILocation(line: 394, column: 17, scope: !704)
!707 = !DILocation(line: 394, column: 9, scope: !704)
!708 = !DILocation(line: 395, column: 9, scope: !704)
!709 = !DILocation(line: 398, column: 8, scope: !710)
!710 = distinct !DILexicalBlock(scope: !704, file: !3, line: 398, column: 7)
!711 = !DILocation(line: 398, column: 15, scope: !710)
!712 = !DILocation(line: 398, column: 13, scope: !710)
!713 = !DILocation(line: 398, column: 24, scope: !710)
!714 = !DILocation(line: 398, column: 7, scope: !704)
!715 = !DILocalVariable(name: "fn", scope: !716, file: !3, line: 401, type: !8)
!716 = distinct !DILexicalBlock(scope: !710, file: !3, line: 400, column: 5)
!717 = !DILocation(line: 401, column: 13, scope: !716)
!718 = !DILocation(line: 401, column: 18, scope: !716)
!719 = !DILocation(line: 401, column: 23, scope: !716)
!720 = !DILocation(line: 403, column: 17, scope: !716)
!721 = !DILocation(line: 403, column: 11, scope: !716)
!722 = !DILocation(line: 403, column: 9, scope: !716)
!723 = !DILocation(line: 404, column: 11, scope: !724)
!724 = distinct !DILexicalBlock(scope: !716, file: !3, line: 404, column: 11)
!725 = !DILocation(line: 404, column: 13, scope: !724)
!726 = !DILocation(line: 404, column: 11, scope: !716)
!727 = !DILocation(line: 406, column: 12, scope: !728)
!728 = distinct !DILexicalBlock(scope: !724, file: !3, line: 405, column: 2)
!729 = !DILocation(line: 406, column: 42, scope: !728)
!730 = !DILocation(line: 406, column: 4, scope: !728)
!731 = !DILocation(line: 407, column: 4, scope: !728)
!732 = !DILocation(line: 409, column: 5, scope: !716)
!733 = !DILocation(line: 410, column: 13, scope: !734)
!734 = distinct !DILexicalBlock(scope: !710, file: !3, line: 410, column: 12)
!735 = !DILocation(line: 410, column: 20, scope: !734)
!736 = !DILocation(line: 410, column: 18, scope: !734)
!737 = !DILocation(line: 410, column: 29, scope: !734)
!738 = !DILocation(line: 410, column: 12, scope: !710)
!739 = !DILocalVariable(name: "fn", scope: !740, file: !3, line: 413, type: !8)
!740 = distinct !DILexicalBlock(scope: !734, file: !3, line: 412, column: 5)
!741 = !DILocation(line: 413, column: 13, scope: !740)
!742 = !DILocation(line: 413, column: 18, scope: !740)
!743 = !DILocation(line: 413, column: 23, scope: !740)
!744 = !DILocalVariable(name: "fn_page", scope: !740, file: !3, line: 414, type: !8)
!745 = !DILocation(line: 414, column: 13, scope: !740)
!746 = !DILocation(line: 414, column: 23, scope: !740)
!747 = !DILocation(line: 414, column: 28, scope: !740)
!748 = !DILocation(line: 414, column: 35, scope: !740)
!749 = !DILocation(line: 416, column: 17, scope: !740)
!750 = !DILocation(line: 416, column: 11, scope: !740)
!751 = !DILocation(line: 416, column: 9, scope: !740)
!752 = !DILocation(line: 417, column: 11, scope: !753)
!753 = distinct !DILexicalBlock(scope: !740, file: !3, line: 417, column: 11)
!754 = !DILocation(line: 417, column: 13, scope: !753)
!755 = !DILocation(line: 417, column: 11, scope: !740)
!756 = !DILocation(line: 419, column: 12, scope: !757)
!757 = distinct !DILexicalBlock(scope: !753, file: !3, line: 418, column: 2)
!758 = !DILocation(line: 419, column: 42, scope: !757)
!759 = !DILocation(line: 419, column: 4, scope: !757)
!760 = !DILocation(line: 420, column: 4, scope: !757)
!761 = !DILocation(line: 423, column: 22, scope: !740)
!762 = !DILocation(line: 423, column: 16, scope: !740)
!763 = !DILocation(line: 423, column: 14, scope: !740)
!764 = !DILocation(line: 424, column: 11, scope: !765)
!765 = distinct !DILexicalBlock(scope: !740, file: !3, line: 424, column: 11)
!766 = !DILocation(line: 424, column: 18, scope: !765)
!767 = !DILocation(line: 424, column: 11, scope: !740)
!768 = !DILocation(line: 426, column: 12, scope: !769)
!769 = distinct !DILexicalBlock(scope: !765, file: !3, line: 425, column: 2)
!770 = !DILocation(line: 426, column: 42, scope: !769)
!771 = !DILocation(line: 426, column: 4, scope: !769)
!772 = !DILocation(line: 427, column: 4, scope: !769)
!773 = !DILocation(line: 429, column: 5, scope: !740)
!774 = !DILocation(line: 432, column: 12, scope: !734)
!775 = !DILocation(line: 432, column: 5, scope: !734)
!776 = !DILocation(line: 434, column: 29, scope: !704)
!777 = !DILocation(line: 434, column: 36, scope: !704)
!778 = !DILocation(line: 436, column: 25, scope: !704)
!779 = !DILocation(line: 434, column: 9, scope: !704)
!780 = !DILocation(line: 434, column: 7, scope: !704)
!781 = !DILocation(line: 439, column: 3, scope: !704)
!782 = !DILocalVariable(name: "n_bytes", scope: !783, file: !3, line: 441, type: !6)
!783 = distinct !DILexicalBlock(scope: !784, file: !3, line: 440, column: 5)
!784 = distinct !DILexicalBlock(scope: !785, file: !3, line: 439, column: 3)
!785 = distinct !DILexicalBlock(scope: !704, file: !3, line: 439, column: 3)
!786 = !DILocation(line: 441, column: 11, scope: !783)
!787 = !DILocation(line: 441, column: 27, scope: !783)
!788 = !DILocation(line: 441, column: 48, scope: !783)
!789 = !DILocation(line: 441, column: 21, scope: !783)
!790 = !DILocation(line: 442, column: 11, scope: !791)
!791 = distinct !DILexicalBlock(scope: !783, file: !3, line: 442, column: 11)
!792 = !DILocation(line: 442, column: 19, scope: !791)
!793 = !DILocation(line: 442, column: 11, scope: !783)
!794 = !DILocation(line: 443, column: 2, scope: !791)
!795 = !DILocation(line: 444, column: 21, scope: !783)
!796 = !DILocation(line: 444, column: 26, scope: !783)
!797 = !DILocation(line: 444, column: 31, scope: !783)
!798 = !DILocation(line: 444, column: 7, scope: !783)
!799 = !DILocation(line: 439, column: 3, scope: !784)
!800 = distinct !{!800, !801, !802}
!801 = !DILocation(line: 439, column: 3, scope: !785)
!802 = !DILocation(line: 445, column: 5, scope: !785)
!803 = !DILocation(line: 446, column: 10, scope: !704)
!804 = !DILocation(line: 446, column: 3, scope: !704)
!805 = !DILocation(line: 449, column: 7, scope: !806)
!806 = distinct !DILexicalBlock(scope: !704, file: !3, line: 449, column: 7)
!807 = !DILocation(line: 449, column: 14, scope: !806)
!808 = !DILocation(line: 449, column: 7, scope: !704)
!809 = !DILocalVariable(name: "global_ctx", scope: !810, file: !3, line: 451, type: !202)
!810 = distinct !DILexicalBlock(scope: !806, file: !3, line: 450, column: 5)
!811 = !DILocation(line: 451, column: 23, scope: !810)
!812 = !DILocation(line: 451, column: 58, scope: !810)
!813 = !DILocation(line: 451, column: 36, scope: !810)
!814 = !DILocation(line: 452, column: 57, scope: !810)
!815 = !DILocation(line: 453, column: 21, scope: !810)
!816 = !DILocation(line: 452, column: 13, scope: !810)
!817 = !DILocation(line: 452, column: 11, scope: !810)
!818 = !DILocation(line: 454, column: 7, scope: !810)
!819 = !DILocalVariable(name: "n_bytes", scope: !820, file: !3, line: 456, type: !6)
!820 = distinct !DILexicalBlock(scope: !821, file: !3, line: 455, column: 2)
!821 = distinct !DILexicalBlock(scope: !822, file: !3, line: 454, column: 7)
!822 = distinct !DILexicalBlock(scope: !810, file: !3, line: 454, column: 7)
!823 = !DILocation(line: 456, column: 8, scope: !820)
!824 = !DILocation(line: 456, column: 24, scope: !820)
!825 = !DILocation(line: 456, column: 45, scope: !820)
!826 = !DILocation(line: 456, column: 18, scope: !820)
!827 = !DILocation(line: 457, column: 8, scope: !828)
!828 = distinct !DILexicalBlock(scope: !820, file: !3, line: 457, column: 8)
!829 = !DILocation(line: 457, column: 16, scope: !828)
!830 = !DILocation(line: 457, column: 8, scope: !820)
!831 = !DILocation(line: 458, column: 6, scope: !828)
!832 = !DILocation(line: 459, column: 18, scope: !820)
!833 = !DILocation(line: 459, column: 23, scope: !820)
!834 = !DILocation(line: 459, column: 28, scope: !820)
!835 = !DILocation(line: 459, column: 4, scope: !820)
!836 = !DILocation(line: 454, column: 7, scope: !821)
!837 = distinct !{!837, !838, !839}
!838 = !DILocation(line: 454, column: 7, scope: !822)
!839 = !DILocation(line: 460, column: 2, scope: !822)
!840 = !DILocation(line: 461, column: 14, scope: !810)
!841 = !DILocation(line: 461, column: 7, scope: !810)
!842 = !DILocation(line: 462, column: 29, scope: !810)
!843 = !DILocation(line: 462, column: 7, scope: !810)
!844 = !DILocation(line: 463, column: 5, scope: !810)
!845 = !DILocalVariable(name: "image", scope: !846, file: !3, line: 467, type: !847)
!846 = distinct !DILexicalBlock(scope: !704, file: !3, line: 466, column: 3)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !850)
!850 = !{!851, !852, !853, !854, !855}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !849, file: !58, line: 57, baseType: !6, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !849, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !849, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !849, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !849, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!856 = !DILocation(line: 467, column: 17, scope: !846)
!857 = !DILocation(line: 470, column: 9, scope: !858)
!858 = distinct !DILexicalBlock(scope: !846, file: !3, line: 470, column: 9)
!859 = !DILocation(line: 470, column: 16, scope: !858)
!860 = !DILocation(line: 470, column: 9, scope: !846)
!861 = !DILocation(line: 471, column: 27, scope: !858)
!862 = !DILocation(line: 471, column: 7, scope: !858)
!863 = !DILocation(line: 473, column: 16, scope: !864)
!864 = distinct !DILexicalBlock(scope: !846, file: !3, line: 473, column: 9)
!865 = !DILocation(line: 473, column: 28, scope: !864)
!866 = !DILocation(line: 473, column: 9, scope: !846)
!867 = !DILocation(line: 479, column: 51, scope: !868)
!868 = distinct !DILexicalBlock(scope: !864, file: !3, line: 474, column: 7)
!869 = !DILocation(line: 479, column: 56, scope: !868)
!870 = !DILocation(line: 479, column: 30, scope: !868)
!871 = !DILocation(line: 479, column: 16, scope: !868)
!872 = !DILocation(line: 479, column: 28, scope: !868)
!873 = !DILocation(line: 480, column: 16, scope: !868)
!874 = !DILocation(line: 480, column: 30, scope: !868)
!875 = !DILocation(line: 482, column: 7, scope: !868)
!876 = !DILocalVariable(name: "len", scope: !877, file: !3, line: 483, type: !6)
!877 = distinct !DILexicalBlock(scope: !864, file: !3, line: 482, column: 14)
!878 = !DILocation(line: 483, column: 13, scope: !877)
!879 = !DILocation(line: 483, column: 33, scope: !877)
!880 = !DILocation(line: 483, column: 19, scope: !877)
!881 = !DILocation(line: 484, column: 14, scope: !882)
!882 = distinct !DILexicalBlock(scope: !877, file: !3, line: 484, column: 13)
!883 = !DILocation(line: 484, column: 18, scope: !882)
!884 = !DILocation(line: 484, column: 24, scope: !882)
!885 = !DILocation(line: 484, column: 35, scope: !882)
!886 = !DILocation(line: 484, column: 49, scope: !882)
!887 = !DILocation(line: 484, column: 13, scope: !877)
!888 = !DILocation(line: 486, column: 45, scope: !882)
!889 = !DILocation(line: 486, column: 59, scope: !882)
!890 = !DILocation(line: 486, column: 57, scope: !882)
!891 = !DILocation(line: 486, column: 63, scope: !882)
!892 = !DILocation(line: 486, column: 11, scope: !882)
!893 = !DILocation(line: 490, column: 5, scope: !846)
!894 = !DILocation(line: 490, column: 36, scope: !846)
!895 = !DILocation(line: 490, column: 21, scope: !846)
!896 = !DILocation(line: 490, column: 19, scope: !846)
!897 = !DILocation(line: 490, column: 42, scope: !846)
!898 = !DILocation(line: 491, column: 33, scope: !899)
!899 = distinct !DILexicalBlock(scope: !846, file: !3, line: 490, column: 51)
!900 = !DILocation(line: 491, column: 7, scope: !899)
!901 = !DILocation(line: 492, column: 18, scope: !902)
!902 = distinct !DILexicalBlock(scope: !899, file: !3, line: 492, column: 11)
!903 = !DILocation(line: 492, column: 11, scope: !902)
!904 = !DILocation(line: 492, column: 11, scope: !899)
!905 = !DILocation(line: 492, column: 44, scope: !902)
!906 = !DILocation(line: 492, column: 24, scope: !902)
!907 = !DILocation(line: 493, column: 26, scope: !899)
!908 = !DILocation(line: 493, column: 31, scope: !899)
!909 = !DILocation(line: 493, column: 7, scope: !899)
!910 = distinct !{!910, !893, !911}
!911 = !DILocation(line: 494, column: 5, scope: !846)
!912 = !DILocation(line: 495, column: 16, scope: !913)
!913 = distinct !DILexicalBlock(scope: !846, file: !3, line: 495, column: 9)
!914 = !DILocation(line: 495, column: 9, scope: !913)
!915 = !DILocation(line: 495, column: 9, scope: !846)
!916 = !DILocation(line: 495, column: 22, scope: !913)
!917 = !DILocation(line: 498, column: 18, scope: !704)
!918 = !DILocation(line: 498, column: 3, scope: !704)
!919 = !DILocation(line: 500, column: 3, scope: !704)
!920 = !DILocation(line: 502, column: 14, scope: !921)
!921 = distinct !DILexicalBlock(scope: !602, file: !3, line: 502, column: 7)
!922 = !DILocation(line: 502, column: 7, scope: !921)
!923 = !DILocation(line: 502, column: 7, scope: !602)
!924 = !DILocation(line: 502, column: 39, scope: !921)
!925 = !DILocation(line: 502, column: 27, scope: !921)
!926 = !DILocation(line: 503, column: 14, scope: !927)
!927 = distinct !DILexicalBlock(scope: !602, file: !3, line: 503, column: 7)
!928 = !DILocation(line: 503, column: 7, scope: !927)
!929 = !DILocation(line: 503, column: 7, scope: !602)
!930 = !DILocation(line: 503, column: 20, scope: !927)
!931 = !DILocation(line: 506, column: 3, scope: !602)
!932 = !DILocation(line: 507, column: 1, scope: !602)
!933 = !DILocalVariable(name: "argc", arg: 1, scope: !2, file: !3, line: 122, type: !6)
!934 = !DILocation(line: 122, column: 19, scope: !2)
!935 = !DILocalVariable(name: "argv", arg: 2, scope: !2, file: !3, line: 122, type: !7)
!936 = !DILocation(line: 122, column: 31, scope: !2)
!937 = !DILocalVariable(name: "params", arg: 3, scope: !2, file: !3, line: 122, type: !10)
!938 = !DILocation(line: 122, column: 58, scope: !2)
!939 = !DILocalVariable(name: "option_idx", scope: !2, file: !3, line: 135, type: !6)
!940 = !DILocation(line: 135, column: 6, scope: !2)
!941 = !DILocalVariable(name: "option", scope: !2, file: !3, line: 136, type: !6)
!942 = !DILocation(line: 136, column: 6, scope: !2)
!943 = !DILocation(line: 138, column: 2, scope: !2)
!944 = !DILocation(line: 139, column: 24, scope: !945)
!945 = distinct !DILexicalBlock(scope: !2, file: !3, line: 138, column: 12)
!946 = !DILocation(line: 139, column: 30, scope: !945)
!947 = !DILocation(line: 139, column: 12, scope: !945)
!948 = !DILocation(line: 139, column: 10, scope: !945)
!949 = !DILocation(line: 141, column: 7, scope: !950)
!950 = distinct !DILexicalBlock(scope: !945, file: !3, line: 141, column: 7)
!951 = !DILocation(line: 141, column: 14, scope: !950)
!952 = !DILocation(line: 141, column: 7, scope: !945)
!953 = !DILocation(line: 141, column: 21, scope: !950)
!954 = !DILocation(line: 143, column: 11, scope: !945)
!955 = !DILocation(line: 143, column: 3, scope: !945)
!956 = !DILocation(line: 145, column: 10, scope: !957)
!957 = distinct !DILexicalBlock(scope: !958, file: !3, line: 145, column: 9)
!958 = distinct !DILexicalBlock(scope: !945, file: !3, line: 143, column: 19)
!959 = !DILocation(line: 145, column: 18, scope: !957)
!960 = !DILocation(line: 145, column: 9, scope: !958)
!961 = !DILocation(line: 145, column: 35, scope: !957)
!962 = !DILocation(line: 147, column: 19, scope: !957)
!963 = !DILocation(line: 147, column: 6, scope: !957)
!964 = !DILocation(line: 147, column: 31, scope: !957)
!965 = !DILocation(line: 145, column: 27, scope: !957)
!966 = !DILocation(line: 148, column: 6, scope: !958)
!967 = !DILocation(line: 150, column: 5, scope: !958)
!968 = !DILocation(line: 150, column: 13, scope: !958)
!969 = !DILocation(line: 150, column: 21, scope: !958)
!970 = !DILocation(line: 151, column: 5, scope: !958)
!971 = !DILocation(line: 153, column: 37, scope: !972)
!972 = distinct !DILexicalBlock(scope: !958, file: !3, line: 153, column: 37)
!973 = !DILocation(line: 153, column: 37, scope: !958)
!974 = !DILocation(line: 153, column: 68, scope: !972)
!975 = !DILocation(line: 153, column: 63, scope: !972)
!976 = !DILocation(line: 153, column: 45, scope: !972)
!977 = !DILocation(line: 153, column: 53, scope: !972)
!978 = !DILocation(line: 153, column: 61, scope: !972)
!979 = !DILocation(line: 154, column: 38, scope: !972)
!980 = !DILocation(line: 154, column: 46, scope: !972)
!981 = !DILocation(line: 154, column: 54, scope: !972)
!982 = !DILocation(line: 155, column: 33, scope: !958)
!983 = !DILocation(line: 158, column: 5, scope: !958)
!984 = !DILocation(line: 158, column: 13, scope: !958)
!985 = !DILocation(line: 158, column: 18, scope: !958)
!986 = !DILocation(line: 159, column: 33, scope: !958)
!987 = !DILocation(line: 163, column: 33, scope: !958)
!988 = !DILocation(line: 164, column: 33, scope: !958)
!989 = !DILocation(line: 167, column: 5, scope: !958)
!990 = !DILocation(line: 167, column: 13, scope: !958)
!991 = !DILocation(line: 167, column: 17, scope: !958)
!992 = !DILocation(line: 168, column: 5, scope: !958)
!993 = !DILocation(line: 170, column: 33, scope: !958)
!994 = !DILocation(line: 170, column: 41, scope: !958)
!995 = !DILocation(line: 170, column: 46, scope: !958)
!996 = !DILocation(line: 171, column: 33, scope: !958)
!997 = !DILocation(line: 173, column: 34, scope: !958)
!998 = !DILocation(line: 173, column: 27, scope: !958)
!999 = !DILocation(line: 173, column: 5, scope: !958)
!1000 = !DILocation(line: 173, column: 13, scope: !958)
!1001 = !DILocation(line: 173, column: 25, scope: !958)
!1002 = !DILocation(line: 174, column: 5, scope: !958)
!1003 = !DILocation(line: 176, column: 44, scope: !958)
!1004 = !DILocation(line: 176, column: 52, scope: !958)
!1005 = !DILocation(line: 176, column: 26, scope: !958)
!1006 = !DILocation(line: 177, column: 33, scope: !958)
!1007 = !DILocation(line: 179, column: 10, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !958, file: !3, line: 179, column: 9)
!1009 = !DILocation(line: 179, column: 18, scope: !1008)
!1010 = !DILocation(line: 179, column: 9, scope: !958)
!1011 = !DILocation(line: 179, column: 35, scope: !1008)
!1012 = !DILocation(line: 180, column: 36, scope: !1008)
!1013 = !DILocation(line: 179, column: 27, scope: !1008)
!1014 = !DILocation(line: 181, column: 5, scope: !958)
!1015 = distinct !{!1015, !943, !1016}
!1016 = !DILocation(line: 183, column: 2, scope: !2)
!1017 = !DILocation(line: 184, column: 10, scope: !2)
!1018 = !DILocation(line: 184, column: 2, scope: !2)
!1019 = distinct !DISubprogram(name: "hash_init", scope: !3, file: !3, line: 64, type: !1020, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{null, !10}
!1022 = !DILocalVariable(name: "params", arg: 1, scope: !1019, file: !3, line: 64, type: !10)
!1023 = !DILocation(line: 64, column: 30, scope: !1019)
!1024 = !DILocation(line: 66, column: 24, scope: !1019)
!1025 = !DILocation(line: 66, column: 5, scope: !1019)
!1026 = !DILocation(line: 66, column: 13, scope: !1019)
!1027 = !DILocation(line: 66, column: 22, scope: !1019)
!1028 = !DILocation(line: 67, column: 9, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !1019, file: !3, line: 67, column: 9)
!1030 = !DILocation(line: 67, column: 17, scope: !1029)
!1031 = !DILocation(line: 67, column: 26, scope: !1029)
!1032 = !DILocation(line: 67, column: 9, scope: !1019)
!1033 = !DILocation(line: 68, column: 17, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1029, file: !3, line: 67, column: 35)
!1035 = !DILocation(line: 68, column: 9, scope: !1034)
!1036 = !DILocation(line: 69, column: 9, scope: !1034)
!1037 = !DILocation(line: 69, column: 17, scope: !1034)
!1038 = !DILocation(line: 69, column: 22, scope: !1034)
!1039 = !DILocation(line: 70, column: 9, scope: !1034)
!1040 = !DILocation(line: 72, column: 19, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1029, file: !3, line: 71, column: 12)
!1042 = !DILocation(line: 72, column: 27, scope: !1041)
!1043 = !DILocation(line: 72, column: 9, scope: !1041)
!1044 = !DILocation(line: 74, column: 1, scope: !1019)
!1045 = distinct !DISubprogram(name: "print_usage", scope: !3, file: !3, line: 195, type: !1046, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!6}
!1048 = !DILocation(line: 197, column: 11, scope: !1045)
!1049 = !DILocation(line: 197, column: 3, scope: !1045)
!1050 = !DILocation(line: 227, column: 3, scope: !1045)
!1051 = distinct !DISubprogram(name: "error_callback", scope: !3, file: !3, line: 231, type: !1052, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!6, !68, !76, !140, !1054}
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1055, line: 196, baseType: !6)
!1055 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!1056 = !DILocalVariable(name: "error_callback_data", arg: 1, scope: !1051, file: !3, line: 231, type: !68)
!1057 = !DILocation(line: 231, column: 22, scope: !1051)
!1058 = !DILocalVariable(name: "buf", arg: 2, scope: !1051, file: !3, line: 231, type: !76)
!1059 = !DILocation(line: 231, column: 55, scope: !1051)
!1060 = !DILocalVariable(name: "severity", arg: 3, scope: !1051, file: !3, line: 231, type: !140)
!1061 = !DILocation(line: 231, column: 74, scope: !1051)
!1062 = !DILocalVariable(name: "seg_idx", arg: 4, scope: !1051, file: !3, line: 232, type: !1054)
!1063 = !DILocation(line: 232, column: 17, scope: !1051)
!1064 = !DILocalVariable(name: "params", scope: !1051, file: !3, line: 234, type: !1065)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!1067 = !DILocation(line: 234, column: 30, scope: !1051)
!1068 = !DILocation(line: 234, column: 39, scope: !1051)
!1069 = !DILocalVariable(name: "type", scope: !1051, file: !3, line: 235, type: !8)
!1070 = !DILocation(line: 235, column: 11, scope: !1051)
!1071 = !DILocalVariable(name: "segment", scope: !1051, file: !3, line: 236, type: !1072)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 176, elements: !391)
!1073 = !DILocation(line: 236, column: 10, scope: !1051)
!1074 = !DILocation(line: 238, column: 13, scope: !1051)
!1075 = !DILocation(line: 238, column: 5, scope: !1051)
!1076 = !DILocation(line: 240, column: 17, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !3, line: 240, column: 17)
!1078 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 238, column: 23)
!1079 = !DILocation(line: 240, column: 25, scope: !1077)
!1080 = !DILocation(line: 240, column: 33, scope: !1077)
!1081 = !DILocation(line: 240, column: 17, scope: !1078)
!1082 = !DILocation(line: 240, column: 38, scope: !1077)
!1083 = !DILocation(line: 241, column: 18, scope: !1078)
!1084 = !DILocation(line: 241, column: 29, scope: !1078)
!1085 = !DILocation(line: 243, column: 17, scope: !1086)
!1086 = distinct !DILexicalBlock(scope: !1078, file: !3, line: 243, column: 17)
!1087 = !DILocation(line: 243, column: 25, scope: !1086)
!1088 = !DILocation(line: 243, column: 33, scope: !1086)
!1089 = !DILocation(line: 243, column: 17, scope: !1078)
!1090 = !DILocation(line: 243, column: 38, scope: !1086)
!1091 = !DILocation(line: 244, column: 18, scope: !1078)
!1092 = !DILocation(line: 244, column: 28, scope: !1078)
!1093 = !DILocation(line: 246, column: 17, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1078, file: !3, line: 246, column: 17)
!1095 = !DILocation(line: 246, column: 25, scope: !1094)
!1096 = !DILocation(line: 246, column: 33, scope: !1094)
!1097 = !DILocation(line: 246, column: 17, scope: !1078)
!1098 = !DILocation(line: 246, column: 38, scope: !1094)
!1099 = !DILocation(line: 247, column: 18, scope: !1078)
!1100 = !DILocation(line: 247, column: 31, scope: !1078)
!1101 = !DILocation(line: 248, column: 41, scope: !1078)
!1102 = !DILocation(line: 248, column: 58, scope: !1078)
!1103 = !DILocation(line: 249, column: 23, scope: !1078)
!1104 = !DILocation(line: 249, column: 44, scope: !1078)
!1105 = !DILocation(line: 251, column: 9, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 251, column: 9)
!1107 = !DILocation(line: 251, column: 17, scope: !1106)
!1108 = !DILocation(line: 251, column: 9, scope: !1051)
!1109 = !DILocation(line: 251, column: 24, scope: !1106)
!1110 = !DILocation(line: 251, column: 35, scope: !1106)
!1111 = !DILocation(line: 252, column: 19, scope: !1106)
!1112 = !DILocation(line: 252, column: 65, scope: !1106)
!1113 = !DILocation(line: 252, column: 10, scope: !1106)
!1114 = !DILocation(line: 254, column: 13, scope: !1051)
!1115 = !DILocation(line: 254, column: 44, scope: !1051)
!1116 = !DILocation(line: 254, column: 50, scope: !1051)
!1117 = !DILocation(line: 254, column: 55, scope: !1051)
!1118 = !DILocation(line: 254, column: 5, scope: !1051)
!1119 = !DILocation(line: 256, column: 5, scope: !1051)
!1120 = !DILocation(line: 257, column: 1, scope: !1051)
!1121 = distinct !DISubprogram(name: "make_output_filename", scope: !3, file: !3, line: 260, type: !1122, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!8, !76, !76}
!1124 = !DILocalVariable(name: "input_filename", arg: 1, scope: !1121, file: !3, line: 260, type: !76)
!1125 = !DILocation(line: 260, column: 34, scope: !1121)
!1126 = !DILocalVariable(name: "extension", arg: 2, scope: !1121, file: !3, line: 260, type: !76)
!1127 = !DILocation(line: 260, column: 62, scope: !1121)
!1128 = !DILocalVariable(name: "output_filename", scope: !1121, file: !3, line: 262, type: !8)
!1129 = !DILocation(line: 262, column: 11, scope: !1121)
!1130 = !DILocalVariable(name: "c", scope: !1121, file: !3, line: 263, type: !76)
!1131 = !DILocation(line: 263, column: 17, scope: !1121)
!1132 = !DILocalVariable(name: "e", scope: !1121, file: !3, line: 263, type: !76)
!1133 = !DILocation(line: 263, column: 21, scope: !1121)
!1134 = !DILocalVariable(name: "len", scope: !1121, file: !3, line: 264, type: !6)
!1135 = !DILocation(line: 264, column: 9, scope: !1121)
!1136 = !DILocation(line: 266, column: 9, scope: !1137)
!1137 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 266, column: 9)
!1138 = !DILocation(line: 266, column: 19, scope: !1137)
!1139 = !DILocation(line: 266, column: 9, scope: !1121)
!1140 = !DILocation(line: 267, column: 17, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1137, file: !3, line: 266, column: 28)
!1142 = !DILocation(line: 267, column: 9, scope: !1141)
!1143 = !DILocation(line: 268, column: 9, scope: !1141)
!1144 = !DILocation(line: 271, column: 9, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 271, column: 9)
!1146 = !DILocation(line: 271, column: 24, scope: !1145)
!1147 = !DILocation(line: 271, column: 9, scope: !1121)
!1148 = !DILocation(line: 272, column: 9, scope: !1145)
!1149 = !DILocation(line: 272, column: 7, scope: !1145)
!1150 = !DILocation(line: 275, column: 19, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 273, column: 10)
!1152 = !DILocation(line: 275, column: 11, scope: !1151)
!1153 = !DILocation(line: 275, column: 9, scope: !1151)
!1154 = !DILocation(line: 276, column: 11, scope: !1155)
!1155 = distinct !DILexicalBlock(scope: !1151, file: !3, line: 276, column: 11)
!1156 = !DILocation(line: 276, column: 13, scope: !1155)
!1157 = !DILocation(line: 276, column: 11, scope: !1151)
!1158 = !DILocation(line: 277, column: 21, scope: !1155)
!1159 = !DILocation(line: 277, column: 13, scope: !1155)
!1160 = !DILocation(line: 277, column: 11, scope: !1155)
!1161 = !DILocation(line: 277, column: 9, scope: !1155)
!1162 = !DILocation(line: 278, column: 11, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1151, file: !3, line: 278, column: 11)
!1164 = !DILocation(line: 278, column: 13, scope: !1163)
!1165 = !DILocation(line: 278, column: 11, scope: !1151)
!1166 = !DILocation(line: 279, column: 10, scope: !1163)
!1167 = !DILocation(line: 279, column: 9, scope: !1163)
!1168 = !DILocation(line: 281, column: 13, scope: !1163)
!1169 = !DILocation(line: 281, column: 11, scope: !1163)
!1170 = !DILocation(line: 285, column: 10, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 285, column: 9)
!1172 = !DILocation(line: 285, column: 9, scope: !1171)
!1173 = !DILocation(line: 285, column: 12, scope: !1171)
!1174 = !DILocation(line: 285, column: 9, scope: !1121)
!1175 = !DILocation(line: 286, column: 9, scope: !1171)
!1176 = !DILocation(line: 286, column: 7, scope: !1171)
!1177 = !DILocation(line: 289, column: 18, scope: !1121)
!1178 = !DILocation(line: 289, column: 11, scope: !1121)
!1179 = !DILocation(line: 289, column: 9, scope: !1121)
!1180 = !DILocation(line: 290, column: 17, scope: !1121)
!1181 = !DILocation(line: 290, column: 9, scope: !1121)
!1182 = !DILocation(line: 290, column: 7, scope: !1121)
!1183 = !DILocation(line: 291, column: 9, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 291, column: 9)
!1185 = !DILocation(line: 291, column: 11, scope: !1184)
!1186 = !DILocation(line: 291, column: 9, scope: !1121)
!1187 = !DILocation(line: 292, column: 21, scope: !1184)
!1188 = !DILocation(line: 292, column: 14, scope: !1184)
!1189 = !DILocation(line: 292, column: 11, scope: !1184)
!1190 = !DILocation(line: 292, column: 7, scope: !1184)
!1191 = !DILocation(line: 295, column: 30, scope: !1121)
!1192 = !DILocation(line: 295, column: 43, scope: !1121)
!1193 = !DILocation(line: 295, column: 36, scope: !1121)
!1194 = !DILocation(line: 295, column: 34, scope: !1121)
!1195 = !DILocation(line: 295, column: 54, scope: !1121)
!1196 = !DILocation(line: 295, column: 23, scope: !1121)
!1197 = !DILocation(line: 295, column: 21, scope: !1121)
!1198 = !DILocation(line: 296, column: 9, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 296, column: 9)
!1200 = !DILocation(line: 296, column: 25, scope: !1199)
!1201 = !DILocation(line: 296, column: 9, scope: !1121)
!1202 = !DILocation(line: 297, column: 17, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1199, file: !3, line: 296, column: 34)
!1204 = !DILocation(line: 297, column: 9, scope: !1203)
!1205 = !DILocation(line: 298, column: 9, scope: !1203)
!1206 = !DILocation(line: 301, column: 13, scope: !1121)
!1207 = !DILocation(line: 301, column: 30, scope: !1121)
!1208 = !DILocation(line: 301, column: 33, scope: !1121)
!1209 = !DILocation(line: 301, column: 5, scope: !1121)
!1210 = !DILocation(line: 302, column: 13, scope: !1121)
!1211 = !DILocation(line: 302, column: 31, scope: !1121)
!1212 = !DILocation(line: 302, column: 29, scope: !1121)
!1213 = !DILocation(line: 302, column: 36, scope: !1121)
!1214 = !DILocation(line: 302, column: 54, scope: !1121)
!1215 = !DILocation(line: 302, column: 47, scope: !1121)
!1216 = !DILocation(line: 302, column: 5, scope: !1121)
!1217 = !DILocation(line: 303, column: 7, scope: !1121)
!1218 = !DILocation(line: 303, column: 25, scope: !1121)
!1219 = !DILocation(line: 303, column: 23, scope: !1121)
!1220 = !DILocation(line: 303, column: 38, scope: !1121)
!1221 = !DILocation(line: 303, column: 31, scope: !1121)
!1222 = !DILocation(line: 303, column: 29, scope: !1121)
!1223 = !DILocation(line: 303, column: 50, scope: !1121)
!1224 = !DILocation(line: 306, column: 13, scope: !1121)
!1225 = !DILocation(line: 306, column: 5, scope: !1121)
!1226 = distinct !DISubprogram(name: "set_output_format", scope: !3, file: !3, line: 105, type: !1227, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!6, !10, !76}
!1229 = !DILocalVariable(name: "params", arg: 1, scope: !1226, file: !3, line: 105, type: !10)
!1230 = !DILocation(line: 105, column: 38, scope: !1226)
!1231 = !DILocalVariable(name: "format", arg: 2, scope: !1226, file: !3, line: 105, type: !76)
!1232 = !DILocation(line: 105, column: 58, scope: !1226)
!1233 = !DILocation(line: 116, column: 5, scope: !1226)
!1234 = !DILocation(line: 116, column: 13, scope: !1226)
!1235 = !DILocation(line: 116, column: 26, scope: !1226)
!1236 = !DILocation(line: 118, column: 5, scope: !1226)
!1237 = distinct !DISubprogram(name: "write_page_image", scope: !3, file: !3, line: 310, type: !1238, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!6, !10, !847}
!1240 = !DILocalVariable(name: "params", arg: 1, scope: !1237, file: !3, line: 310, type: !10)
!1241 = !DILocation(line: 310, column: 37, scope: !1237)
!1242 = !DILocalVariable(name: "image", arg: 2, scope: !1237, file: !3, line: 310, type: !847)
!1243 = !DILocation(line: 310, column: 57, scope: !1237)
!1244 = !DILocation(line: 312, column: 20, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1237, file: !3, line: 312, column: 11)
!1246 = !DILocation(line: 312, column: 28, scope: !1245)
!1247 = !DILocation(line: 312, column: 12, scope: !1245)
!1248 = !DILocation(line: 312, column: 11, scope: !1237)
!1249 = !DILocation(line: 314, column: 12, scope: !1250)
!1250 = distinct !DILexicalBlock(scope: !1245, file: !3, line: 313, column: 9)
!1251 = !DILocation(line: 314, column: 20, scope: !1250)
!1252 = !DILocation(line: 314, column: 4, scope: !1250)
!1253 = !DILocation(line: 321, column: 37, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1250, file: !3, line: 314, column: 35)
!1255 = !DILocation(line: 321, column: 44, scope: !1254)
!1256 = !DILocation(line: 321, column: 15, scope: !1254)
!1257 = !DILocation(line: 322, column: 15, scope: !1254)
!1258 = !DILocation(line: 324, column: 23, scope: !1254)
!1259 = !DILocation(line: 324, column: 15, scope: !1254)
!1260 = !DILocation(line: 325, column: 15, scope: !1254)
!1261 = !DILocation(line: 327, column: 9, scope: !1250)
!1262 = !DILocation(line: 330, column: 15, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1264, file: !3, line: 330, column: 15)
!1264 = distinct !DILexicalBlock(scope: !1245, file: !3, line: 329, column: 9)
!1265 = !DILocation(line: 330, column: 23, scope: !1263)
!1266 = !DILocation(line: 330, column: 31, scope: !1263)
!1267 = !DILocation(line: 330, column: 15, scope: !1264)
!1268 = !DILocation(line: 331, column: 21, scope: !1263)
!1269 = !DILocation(line: 331, column: 62, scope: !1263)
!1270 = !DILocation(line: 331, column: 70, scope: !1263)
!1271 = !DILocation(line: 331, column: 13, scope: !1263)
!1272 = !DILocation(line: 332, column: 19, scope: !1264)
!1273 = !DILocation(line: 332, column: 27, scope: !1264)
!1274 = !DILocation(line: 332, column: 11, scope: !1264)
!1275 = !DILocation(line: 339, column: 42, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1264, file: !3, line: 332, column: 42)
!1277 = !DILocation(line: 339, column: 49, scope: !1276)
!1278 = !DILocation(line: 339, column: 57, scope: !1276)
!1279 = !DILocation(line: 339, column: 15, scope: !1276)
!1280 = !DILocation(line: 340, column: 15, scope: !1276)
!1281 = !DILocation(line: 342, column: 23, scope: !1276)
!1282 = !DILocation(line: 342, column: 15, scope: !1276)
!1283 = !DILocation(line: 343, column: 15, scope: !1276)
!1284 = !DILocation(line: 347, column: 3, scope: !1237)
!1285 = !DILocation(line: 348, column: 1, scope: !1237)
!1286 = distinct !DISubprogram(name: "hash_image", scope: !3, file: !3, line: 77, type: !1287, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !10, !847}
!1289 = !DILocalVariable(name: "params", arg: 1, scope: !1286, file: !3, line: 77, type: !10)
!1290 = !DILocation(line: 77, column: 31, scope: !1286)
!1291 = !DILocalVariable(name: "image", arg: 2, scope: !1286, file: !3, line: 77, type: !847)
!1292 = !DILocation(line: 77, column: 51, scope: !1286)
!1293 = !DILocalVariable(name: "N", scope: !1286, file: !3, line: 79, type: !17)
!1294 = !DILocation(line: 79, column: 18, scope: !1286)
!1295 = !DILocation(line: 79, column: 22, scope: !1286)
!1296 = !DILocation(line: 79, column: 29, scope: !1286)
!1297 = !DILocation(line: 79, column: 38, scope: !1286)
!1298 = !DILocation(line: 79, column: 45, scope: !1286)
!1299 = !DILocation(line: 79, column: 36, scope: !1286)
!1300 = !DILocation(line: 80, column: 17, scope: !1286)
!1301 = !DILocation(line: 80, column: 25, scope: !1286)
!1302 = !DILocation(line: 80, column: 35, scope: !1286)
!1303 = !DILocation(line: 80, column: 42, scope: !1286)
!1304 = !DILocation(line: 80, column: 48, scope: !1286)
!1305 = !DILocation(line: 80, column: 5, scope: !1286)
!1306 = !DILocation(line: 81, column: 1, scope: !1286)
!1307 = distinct !DISubprogram(name: "write_document_hash", scope: !3, file: !3, line: 351, type: !1308, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!6, !10}
!1310 = !DILocalVariable(name: "params", arg: 1, scope: !1307, file: !3, line: 351, type: !10)
!1311 = !DILocation(line: 351, column: 40, scope: !1307)
!1312 = !DILocalVariable(name: "out", scope: !1307, file: !3, line: 353, type: !610)
!1313 = !DILocation(line: 353, column: 11, scope: !1307)
!1314 = !DILocation(line: 355, column: 18, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1307, file: !3, line: 355, column: 9)
!1316 = !DILocation(line: 355, column: 26, scope: !1315)
!1317 = !DILocation(line: 355, column: 10, scope: !1315)
!1318 = !DILocation(line: 355, column: 9, scope: !1307)
!1319 = !DILocation(line: 356, column: 15, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 355, column: 48)
!1321 = !DILocation(line: 356, column: 13, scope: !1320)
!1322 = !DILocation(line: 357, column: 5, scope: !1320)
!1323 = !DILocation(line: 358, column: 15, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 357, column: 12)
!1325 = !DILocation(line: 358, column: 13, scope: !1324)
!1326 = !DILocation(line: 361, column: 13, scope: !1307)
!1327 = !DILocation(line: 361, column: 5, scope: !1307)
!1328 = !DILocation(line: 362, column: 16, scope: !1307)
!1329 = !DILocation(line: 362, column: 24, scope: !1307)
!1330 = !DILocation(line: 362, column: 5, scope: !1307)
!1331 = !DILocation(line: 363, column: 13, scope: !1307)
!1332 = !DILocation(line: 363, column: 5, scope: !1307)
!1333 = !DILocation(line: 365, column: 5, scope: !1307)
!1334 = distinct !DISubprogram(name: "hash_free", scope: !3, file: !3, line: 98, type: !1020, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1335 = !DILocalVariable(name: "params", arg: 1, scope: !1334, file: !3, line: 98, type: !10)
!1336 = !DILocation(line: 98, column: 30, scope: !1334)
!1337 = !DILocation(line: 100, column: 10, scope: !1334)
!1338 = !DILocation(line: 100, column: 18, scope: !1334)
!1339 = !DILocation(line: 100, column: 5, scope: !1334)
!1340 = !DILocation(line: 101, column: 5, scope: !1334)
!1341 = !DILocation(line: 101, column: 13, scope: !1334)
!1342 = !DILocation(line: 101, column: 22, scope: !1334)
!1343 = !DILocation(line: 102, column: 1, scope: !1334)
!1344 = distinct !DISubprogram(name: "hash_print", scope: !3, file: !3, line: 84, type: !1345, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !10, !610}
!1347 = !DILocalVariable(name: "params", arg: 1, scope: !1344, file: !3, line: 84, type: !10)
!1348 = !DILocation(line: 84, column: 31, scope: !1344)
!1349 = !DILocalVariable(name: "out", arg: 2, scope: !1344, file: !3, line: 84, type: !610)
!1350 = !DILocation(line: 84, column: 45, scope: !1344)
!1351 = !DILocalVariable(name: "md", scope: !1344, file: !3, line: 86, type: !1352)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 160, elements: !663)
!1353 = !DILocation(line: 86, column: 19, scope: !1344)
!1354 = !DILocalVariable(name: "digest", scope: !1344, file: !3, line: 87, type: !1355)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 328, elements: !1356)
!1356 = !{!1357}
!1357 = !DISubrange(count: 41)
!1358 = !DILocation(line: 87, column: 10, scope: !1344)
!1359 = !DILocalVariable(name: "i", scope: !1344, file: !3, line: 88, type: !6)
!1360 = !DILocation(line: 88, column: 9, scope: !1344)
!1361 = !DILocation(line: 90, column: 16, scope: !1344)
!1362 = !DILocation(line: 90, column: 24, scope: !1344)
!1363 = !DILocation(line: 90, column: 34, scope: !1344)
!1364 = !DILocation(line: 90, column: 5, scope: !1344)
!1365 = !DILocation(line: 91, column: 12, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 91, column: 5)
!1367 = !DILocation(line: 91, column: 10, scope: !1366)
!1368 = !DILocation(line: 91, column: 17, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1366, file: !3, line: 91, column: 5)
!1370 = !DILocation(line: 91, column: 19, scope: !1369)
!1371 = !DILocation(line: 91, column: 5, scope: !1366)
!1372 = !DILocation(line: 92, column: 29, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 91, column: 44)
!1374 = !DILocation(line: 92, column: 28, scope: !1373)
!1375 = !DILocation(line: 92, column: 20, scope: !1373)
!1376 = !DILocation(line: 92, column: 48, scope: !1373)
!1377 = !DILocation(line: 92, column: 45, scope: !1373)
!1378 = !DILocation(line: 92, column: 9, scope: !1373)
!1379 = !DILocation(line: 93, column: 5, scope: !1373)
!1380 = !DILocation(line: 91, column: 40, scope: !1369)
!1381 = !DILocation(line: 91, column: 5, scope: !1369)
!1382 = distinct !{!1382, !1371, !1383}
!1383 = !DILocation(line: 93, column: 5, scope: !1366)
!1384 = !DILocation(line: 94, column: 13, scope: !1344)
!1385 = !DILocation(line: 94, column: 24, scope: !1344)
!1386 = !DILocation(line: 94, column: 5, scope: !1344)
!1387 = !DILocation(line: 95, column: 1, scope: !1344)
!1388 = distinct !DISubprogram(name: "print_version", scope: !3, file: !3, line: 188, type: !1046, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !55, retainedNodes: !70)
!1389 = !DILocation(line: 190, column: 13, scope: !1388)
!1390 = !DILocation(line: 190, column: 5, scope: !1388)
!1391 = !DILocation(line: 191, column: 5, scope: !1388)
!1392 = !DILocalVariable(name: "state", arg: 1, scope: !428, file: !424, line: 129, type: !166)
!1393 = !DILocation(line: 129, column: 30, scope: !428)
!1394 = !DILocalVariable(name: "buffer", arg: 2, scope: !428, file: !424, line: 129, type: !431)
!1395 = !DILocation(line: 129, column: 54, scope: !428)
!1396 = !DILocalVariable(name: "a", scope: !428, file: !424, line: 131, type: !32)
!1397 = !DILocation(line: 131, column: 14, scope: !428)
!1398 = !DILocalVariable(name: "b", scope: !428, file: !424, line: 131, type: !32)
!1399 = !DILocation(line: 131, column: 17, scope: !428)
!1400 = !DILocalVariable(name: "c", scope: !428, file: !424, line: 131, type: !32)
!1401 = !DILocation(line: 131, column: 20, scope: !428)
!1402 = !DILocalVariable(name: "d", scope: !428, file: !424, line: 131, type: !32)
!1403 = !DILocation(line: 131, column: 23, scope: !428)
!1404 = !DILocalVariable(name: "e", scope: !428, file: !424, line: 131, type: !32)
!1405 = !DILocation(line: 131, column: 26, scope: !428)
!1406 = !DILocalVariable(name: "block", scope: !428, file: !424, line: 136, type: !426)
!1407 = !DILocation(line: 136, column: 19, scope: !428)
!1408 = !DILocation(line: 143, column: 28, scope: !428)
!1409 = !DILocation(line: 143, column: 13, scope: !428)
!1410 = !DILocation(line: 143, column: 11, scope: !428)
!1411 = !DILocation(line: 147, column: 9, scope: !428)
!1412 = !DILocation(line: 147, column: 7, scope: !428)
!1413 = !DILocation(line: 148, column: 9, scope: !428)
!1414 = !DILocation(line: 148, column: 7, scope: !428)
!1415 = !DILocation(line: 149, column: 9, scope: !428)
!1416 = !DILocation(line: 149, column: 7, scope: !428)
!1417 = !DILocation(line: 150, column: 9, scope: !428)
!1418 = !DILocation(line: 150, column: 7, scope: !428)
!1419 = !DILocation(line: 151, column: 9, scope: !428)
!1420 = !DILocation(line: 151, column: 7, scope: !428)
!1421 = !DILocation(line: 154, column: 5, scope: !428)
!1422 = !DILocation(line: 154, column: 23, scope: !428)
!1423 = !DILocation(line: 154, column: 41, scope: !428)
!1424 = !DILocation(line: 154, column: 59, scope: !428)
!1425 = !DILocation(line: 155, column: 5, scope: !428)
!1426 = !DILocation(line: 155, column: 23, scope: !428)
!1427 = !DILocation(line: 155, column: 41, scope: !428)
!1428 = !DILocation(line: 155, column: 59, scope: !428)
!1429 = !DILocation(line: 156, column: 5, scope: !428)
!1430 = !DILocation(line: 156, column: 23, scope: !428)
!1431 = !DILocation(line: 156, column: 41, scope: !428)
!1432 = !DILocation(line: 156, column: 59, scope: !428)
!1433 = !DILocation(line: 157, column: 5, scope: !428)
!1434 = !DILocation(line: 157, column: 23, scope: !428)
!1435 = !DILocation(line: 157, column: 41, scope: !428)
!1436 = !DILocation(line: 157, column: 59, scope: !428)
!1437 = !DILocation(line: 158, column: 5, scope: !428)
!1438 = !DILocation(line: 158, column: 23, scope: !428)
!1439 = !DILocation(line: 158, column: 41, scope: !428)
!1440 = !DILocation(line: 158, column: 59, scope: !428)
!1441 = !DILocation(line: 159, column: 5, scope: !428)
!1442 = !DILocation(line: 159, column: 23, scope: !428)
!1443 = !DILocation(line: 159, column: 41, scope: !428)
!1444 = !DILocation(line: 159, column: 59, scope: !428)
!1445 = !DILocation(line: 160, column: 5, scope: !428)
!1446 = !DILocation(line: 160, column: 23, scope: !428)
!1447 = !DILocation(line: 160, column: 41, scope: !428)
!1448 = !DILocation(line: 160, column: 59, scope: !428)
!1449 = !DILocation(line: 161, column: 5, scope: !428)
!1450 = !DILocation(line: 161, column: 23, scope: !428)
!1451 = !DILocation(line: 161, column: 41, scope: !428)
!1452 = !DILocation(line: 161, column: 59, scope: !428)
!1453 = !DILocation(line: 162, column: 5, scope: !428)
!1454 = !DILocation(line: 162, column: 23, scope: !428)
!1455 = !DILocation(line: 162, column: 41, scope: !428)
!1456 = !DILocation(line: 162, column: 59, scope: !428)
!1457 = !DILocation(line: 163, column: 5, scope: !428)
!1458 = !DILocation(line: 163, column: 23, scope: !428)
!1459 = !DILocation(line: 163, column: 41, scope: !428)
!1460 = !DILocation(line: 163, column: 59, scope: !428)
!1461 = !DILocation(line: 164, column: 5, scope: !428)
!1462 = !DILocation(line: 164, column: 23, scope: !428)
!1463 = !DILocation(line: 164, column: 41, scope: !428)
!1464 = !DILocation(line: 164, column: 59, scope: !428)
!1465 = !DILocation(line: 165, column: 5, scope: !428)
!1466 = !DILocation(line: 165, column: 23, scope: !428)
!1467 = !DILocation(line: 165, column: 41, scope: !428)
!1468 = !DILocation(line: 165, column: 59, scope: !428)
!1469 = !DILocation(line: 166, column: 5, scope: !428)
!1470 = !DILocation(line: 166, column: 23, scope: !428)
!1471 = !DILocation(line: 166, column: 41, scope: !428)
!1472 = !DILocation(line: 166, column: 59, scope: !428)
!1473 = !DILocation(line: 167, column: 5, scope: !428)
!1474 = !DILocation(line: 167, column: 23, scope: !428)
!1475 = !DILocation(line: 167, column: 41, scope: !428)
!1476 = !DILocation(line: 167, column: 59, scope: !428)
!1477 = !DILocation(line: 168, column: 5, scope: !428)
!1478 = !DILocation(line: 168, column: 23, scope: !428)
!1479 = !DILocation(line: 168, column: 41, scope: !428)
!1480 = !DILocation(line: 168, column: 59, scope: !428)
!1481 = !DILocation(line: 169, column: 5, scope: !428)
!1482 = !DILocation(line: 169, column: 23, scope: !428)
!1483 = !DILocation(line: 169, column: 41, scope: !428)
!1484 = !DILocation(line: 169, column: 59, scope: !428)
!1485 = !DILocation(line: 170, column: 5, scope: !428)
!1486 = !DILocation(line: 170, column: 23, scope: !428)
!1487 = !DILocation(line: 170, column: 41, scope: !428)
!1488 = !DILocation(line: 170, column: 59, scope: !428)
!1489 = !DILocation(line: 171, column: 5, scope: !428)
!1490 = !DILocation(line: 171, column: 23, scope: !428)
!1491 = !DILocation(line: 171, column: 41, scope: !428)
!1492 = !DILocation(line: 171, column: 59, scope: !428)
!1493 = !DILocation(line: 172, column: 5, scope: !428)
!1494 = !DILocation(line: 172, column: 23, scope: !428)
!1495 = !DILocation(line: 172, column: 41, scope: !428)
!1496 = !DILocation(line: 172, column: 59, scope: !428)
!1497 = !DILocation(line: 173, column: 5, scope: !428)
!1498 = !DILocation(line: 173, column: 23, scope: !428)
!1499 = !DILocation(line: 173, column: 41, scope: !428)
!1500 = !DILocation(line: 173, column: 59, scope: !428)
!1501 = !DILocation(line: 176, column: 17, scope: !428)
!1502 = !DILocation(line: 176, column: 5, scope: !428)
!1503 = !DILocation(line: 176, column: 14, scope: !428)
!1504 = !DILocation(line: 177, column: 17, scope: !428)
!1505 = !DILocation(line: 177, column: 5, scope: !428)
!1506 = !DILocation(line: 177, column: 14, scope: !428)
!1507 = !DILocation(line: 178, column: 17, scope: !428)
!1508 = !DILocation(line: 178, column: 5, scope: !428)
!1509 = !DILocation(line: 178, column: 14, scope: !428)
!1510 = !DILocation(line: 179, column: 17, scope: !428)
!1511 = !DILocation(line: 179, column: 5, scope: !428)
!1512 = !DILocation(line: 179, column: 14, scope: !428)
!1513 = !DILocation(line: 180, column: 17, scope: !428)
!1514 = !DILocation(line: 180, column: 5, scope: !428)
!1515 = !DILocation(line: 180, column: 14, scope: !428)
!1516 = !DILocation(line: 183, column: 23, scope: !428)
!1517 = !DILocation(line: 183, column: 19, scope: !428)
!1518 = !DILocation(line: 183, column: 15, scope: !428)
!1519 = !DILocation(line: 183, column: 11, scope: !428)
!1520 = !DILocation(line: 183, column: 7, scope: !428)
!1521 = !DILocation(line: 184, column: 1, scope: !428)
!1522 = distinct !DISubprogram(name: "SHA1_Init", scope: !424, file: !424, line: 188, type: !1523, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !423, retainedNodes: !70)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{null, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "SHA1_CTX", file: !27, line: 15, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !27, line: 11, size: 736, elements: !1528)
!1528 = !{!1529, !1530, !1531}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1527, file: !27, line: 12, baseType: !31, size: 160)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1527, file: !27, line: 13, baseType: !37, size: 64, offset: 160)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1527, file: !27, line: 14, baseType: !41, size: 512, offset: 224)
!1532 = !DILocalVariable(name: "context", arg: 1, scope: !1522, file: !424, line: 188, type: !1525)
!1533 = !DILocation(line: 188, column: 26, scope: !1522)
!1534 = !DILocation(line: 191, column: 5, scope: !1522)
!1535 = !DILocation(line: 191, column: 14, scope: !1522)
!1536 = !DILocation(line: 191, column: 23, scope: !1522)
!1537 = !DILocation(line: 192, column: 5, scope: !1522)
!1538 = !DILocation(line: 192, column: 14, scope: !1522)
!1539 = !DILocation(line: 192, column: 23, scope: !1522)
!1540 = !DILocation(line: 193, column: 5, scope: !1522)
!1541 = !DILocation(line: 193, column: 14, scope: !1522)
!1542 = !DILocation(line: 193, column: 23, scope: !1522)
!1543 = !DILocation(line: 194, column: 5, scope: !1522)
!1544 = !DILocation(line: 194, column: 14, scope: !1522)
!1545 = !DILocation(line: 194, column: 23, scope: !1522)
!1546 = !DILocation(line: 195, column: 5, scope: !1522)
!1547 = !DILocation(line: 195, column: 14, scope: !1522)
!1548 = !DILocation(line: 195, column: 23, scope: !1522)
!1549 = !DILocation(line: 196, column: 25, scope: !1522)
!1550 = !DILocation(line: 196, column: 34, scope: !1522)
!1551 = !DILocation(line: 196, column: 43, scope: !1522)
!1552 = !DILocation(line: 196, column: 5, scope: !1522)
!1553 = !DILocation(line: 196, column: 14, scope: !1522)
!1554 = !DILocation(line: 196, column: 23, scope: !1522)
!1555 = !DILocation(line: 197, column: 1, scope: !1522)
!1556 = distinct !DISubprogram(name: "SHA1_Update", scope: !424, file: !424, line: 201, type: !1557, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !423, retainedNodes: !70)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{null, !1525, !431, !1559}
!1559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1560 = !DILocalVariable(name: "context", arg: 1, scope: !1556, file: !424, line: 201, type: !1525)
!1561 = !DILocation(line: 201, column: 28, scope: !1556)
!1562 = !DILocalVariable(name: "data", arg: 2, scope: !1556, file: !424, line: 201, type: !431)
!1563 = !DILocation(line: 201, column: 52, scope: !1556)
!1564 = !DILocalVariable(name: "len", arg: 3, scope: !1556, file: !424, line: 201, type: !1559)
!1565 = !DILocation(line: 201, column: 71, scope: !1556)
!1566 = !DILocalVariable(name: "i", scope: !1556, file: !424, line: 203, type: !119)
!1567 = !DILocation(line: 203, column: 12, scope: !1556)
!1568 = !DILocalVariable(name: "j", scope: !1556, file: !424, line: 203, type: !119)
!1569 = !DILocation(line: 203, column: 15, scope: !1556)
!1570 = !DILocation(line: 209, column: 10, scope: !1556)
!1571 = !DILocation(line: 209, column: 19, scope: !1556)
!1572 = !DILocation(line: 209, column: 28, scope: !1556)
!1573 = !DILocation(line: 209, column: 34, scope: !1556)
!1574 = !DILocation(line: 209, column: 9, scope: !1556)
!1575 = !DILocation(line: 209, column: 7, scope: !1556)
!1576 = !DILocation(line: 210, column: 31, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1556, file: !424, line: 210, column: 9)
!1578 = !DILocation(line: 210, column: 35, scope: !1577)
!1579 = !DILocation(line: 210, column: 10, scope: !1577)
!1580 = !DILocation(line: 210, column: 19, scope: !1577)
!1581 = !DILocation(line: 210, column: 28, scope: !1577)
!1582 = !DILocation(line: 210, column: 9, scope: !1577)
!1583 = !DILocation(line: 210, column: 44, scope: !1577)
!1584 = !DILocation(line: 210, column: 48, scope: !1577)
!1585 = !DILocation(line: 210, column: 41, scope: !1577)
!1586 = !DILocation(line: 210, column: 9, scope: !1556)
!1587 = !DILocation(line: 210, column: 55, scope: !1577)
!1588 = !DILocation(line: 210, column: 64, scope: !1577)
!1589 = !DILocation(line: 210, column: 72, scope: !1577)
!1590 = !DILocation(line: 211, column: 27, scope: !1556)
!1591 = !DILocation(line: 211, column: 31, scope: !1556)
!1592 = !DILocation(line: 211, column: 5, scope: !1556)
!1593 = !DILocation(line: 211, column: 14, scope: !1556)
!1594 = !DILocation(line: 211, column: 23, scope: !1556)
!1595 = !DILocation(line: 212, column: 10, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !1556, file: !424, line: 212, column: 9)
!1597 = !DILocation(line: 212, column: 14, scope: !1596)
!1598 = !DILocation(line: 212, column: 12, scope: !1596)
!1599 = !DILocation(line: 212, column: 19, scope: !1596)
!1600 = !DILocation(line: 212, column: 9, scope: !1556)
!1601 = !DILocation(line: 213, column: 17, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1596, file: !424, line: 212, column: 25)
!1603 = !DILocation(line: 213, column: 26, scope: !1602)
!1604 = !DILocation(line: 213, column: 33, scope: !1602)
!1605 = !DILocation(line: 213, column: 37, scope: !1602)
!1606 = !DILocation(line: 213, column: 51, scope: !1602)
!1607 = !DILocation(line: 213, column: 50, scope: !1602)
!1608 = !DILocation(line: 213, column: 46, scope: !1602)
!1609 = !DILocation(line: 213, column: 9, scope: !1602)
!1610 = !DILocation(line: 214, column: 24, scope: !1602)
!1611 = !DILocation(line: 214, column: 33, scope: !1602)
!1612 = !DILocation(line: 214, column: 40, scope: !1602)
!1613 = !DILocation(line: 214, column: 49, scope: !1602)
!1614 = !DILocation(line: 214, column: 9, scope: !1602)
!1615 = !DILocation(line: 215, column: 9, scope: !1602)
!1616 = !DILocation(line: 215, column: 17, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !424, line: 215, column: 9)
!1618 = distinct !DILexicalBlock(scope: !1602, file: !424, line: 215, column: 9)
!1619 = !DILocation(line: 215, column: 19, scope: !1617)
!1620 = !DILocation(line: 215, column: 26, scope: !1617)
!1621 = !DILocation(line: 215, column: 24, scope: !1617)
!1622 = !DILocation(line: 215, column: 9, scope: !1618)
!1623 = !DILocation(line: 216, column: 28, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1617, file: !424, line: 215, column: 40)
!1625 = !DILocation(line: 216, column: 37, scope: !1624)
!1626 = !DILocation(line: 216, column: 44, scope: !1624)
!1627 = !DILocation(line: 216, column: 51, scope: !1624)
!1628 = !DILocation(line: 216, column: 49, scope: !1624)
!1629 = !DILocation(line: 216, column: 13, scope: !1624)
!1630 = !DILocation(line: 217, column: 9, scope: !1624)
!1631 = !DILocation(line: 215, column: 33, scope: !1617)
!1632 = !DILocation(line: 215, column: 9, scope: !1617)
!1633 = distinct !{!1633, !1622, !1634}
!1634 = !DILocation(line: 217, column: 9, scope: !1618)
!1635 = !DILocation(line: 218, column: 11, scope: !1602)
!1636 = !DILocation(line: 219, column: 5, scope: !1602)
!1637 = !DILocation(line: 220, column: 12, scope: !1596)
!1638 = !DILocation(line: 221, column: 13, scope: !1556)
!1639 = !DILocation(line: 221, column: 22, scope: !1556)
!1640 = !DILocation(line: 221, column: 29, scope: !1556)
!1641 = !DILocation(line: 221, column: 34, scope: !1556)
!1642 = !DILocation(line: 221, column: 39, scope: !1556)
!1643 = !DILocation(line: 221, column: 43, scope: !1556)
!1644 = !DILocation(line: 221, column: 49, scope: !1556)
!1645 = !DILocation(line: 221, column: 47, scope: !1556)
!1646 = !DILocation(line: 221, column: 5, scope: !1556)
!1647 = !DILocation(line: 226, column: 1, scope: !1556)
!1648 = distinct !DISubprogram(name: "SHA1_Final", scope: !424, file: !424, line: 230, type: !1649, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !423, retainedNodes: !70)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{null, !1525, !200}
!1651 = !DILocalVariable(name: "context", arg: 1, scope: !1648, file: !424, line: 230, type: !1525)
!1652 = !DILocation(line: 230, column: 27, scope: !1648)
!1653 = !DILocalVariable(name: "digest", arg: 2, scope: !1648, file: !424, line: 230, type: !200)
!1654 = !DILocation(line: 230, column: 44, scope: !1648)
!1655 = !DILocalVariable(name: "i", scope: !1648, file: !424, line: 232, type: !32)
!1656 = !DILocation(line: 232, column: 14, scope: !1648)
!1657 = !DILocalVariable(name: "finalcount", scope: !1648, file: !424, line: 233, type: !1658)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 64, elements: !243)
!1659 = !DILocation(line: 233, column: 14, scope: !1648)
!1660 = !DILocation(line: 235, column: 12, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1648, file: !424, line: 235, column: 5)
!1662 = !DILocation(line: 235, column: 10, scope: !1661)
!1663 = !DILocation(line: 235, column: 17, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1661, file: !424, line: 235, column: 5)
!1665 = !DILocation(line: 235, column: 19, scope: !1664)
!1666 = !DILocation(line: 235, column: 5, scope: !1661)
!1667 = !DILocation(line: 236, column: 42, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1664, file: !424, line: 235, column: 29)
!1669 = !DILocation(line: 236, column: 51, scope: !1668)
!1670 = !DILocation(line: 236, column: 58, scope: !1668)
!1671 = !DILocation(line: 236, column: 60, scope: !1668)
!1672 = !DILocation(line: 237, column: 18, scope: !1668)
!1673 = !DILocation(line: 237, column: 20, scope: !1668)
!1674 = !DILocation(line: 237, column: 16, scope: !1668)
!1675 = !DILocation(line: 237, column: 26, scope: !1668)
!1676 = !DILocation(line: 237, column: 10, scope: !1668)
!1677 = !DILocation(line: 237, column: 33, scope: !1668)
!1678 = !DILocation(line: 236, column: 25, scope: !1668)
!1679 = !DILocation(line: 236, column: 20, scope: !1668)
!1680 = !DILocation(line: 236, column: 9, scope: !1668)
!1681 = !DILocation(line: 236, column: 23, scope: !1668)
!1682 = !DILocation(line: 238, column: 5, scope: !1668)
!1683 = !DILocation(line: 235, column: 25, scope: !1664)
!1684 = !DILocation(line: 235, column: 5, scope: !1664)
!1685 = distinct !{!1685, !1666, !1686}
!1686 = !DILocation(line: 238, column: 5, scope: !1661)
!1687 = !DILocation(line: 239, column: 17, scope: !1648)
!1688 = !DILocation(line: 239, column: 5, scope: !1648)
!1689 = !DILocation(line: 240, column: 5, scope: !1648)
!1690 = !DILocation(line: 240, column: 13, scope: !1648)
!1691 = !DILocation(line: 240, column: 22, scope: !1648)
!1692 = !DILocation(line: 240, column: 31, scope: !1648)
!1693 = !DILocation(line: 240, column: 38, scope: !1648)
!1694 = !DILocation(line: 241, column: 21, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1648, file: !424, line: 240, column: 46)
!1696 = !DILocation(line: 241, column: 9, scope: !1695)
!1697 = distinct !{!1697, !1689, !1698}
!1698 = !DILocation(line: 242, column: 5, scope: !1648)
!1699 = !DILocation(line: 243, column: 17, scope: !1648)
!1700 = !DILocation(line: 243, column: 26, scope: !1648)
!1701 = !DILocation(line: 243, column: 5, scope: !1648)
!1702 = !DILocation(line: 244, column: 12, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1648, file: !424, line: 244, column: 5)
!1704 = !DILocation(line: 244, column: 10, scope: !1703)
!1705 = !DILocation(line: 244, column: 17, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !1703, file: !424, line: 244, column: 5)
!1707 = !DILocation(line: 244, column: 19, scope: !1706)
!1708 = !DILocation(line: 244, column: 5, scope: !1703)
!1709 = !DILocation(line: 246, column: 12, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1706, file: !424, line: 244, column: 44)
!1711 = !DILocation(line: 246, column: 21, scope: !1710)
!1712 = !DILocation(line: 246, column: 27, scope: !1710)
!1713 = !DILocation(line: 246, column: 28, scope: !1710)
!1714 = !DILocation(line: 246, column: 41, scope: !1710)
!1715 = !DILocation(line: 246, column: 43, scope: !1710)
!1716 = !DILocation(line: 246, column: 39, scope: !1710)
!1717 = !DILocation(line: 246, column: 49, scope: !1710)
!1718 = !DILocation(line: 246, column: 33, scope: !1710)
!1719 = !DILocation(line: 246, column: 56, scope: !1710)
!1720 = !DILocation(line: 245, column: 21, scope: !1710)
!1721 = !DILocation(line: 245, column: 9, scope: !1710)
!1722 = !DILocation(line: 245, column: 16, scope: !1710)
!1723 = !DILocation(line: 245, column: 19, scope: !1710)
!1724 = !DILocation(line: 247, column: 5, scope: !1710)
!1725 = !DILocation(line: 244, column: 40, scope: !1706)
!1726 = !DILocation(line: 244, column: 5, scope: !1706)
!1727 = distinct !{!1727, !1708, !1728}
!1728 = !DILocation(line: 247, column: 5, scope: !1703)
!1729 = !DILocation(line: 250, column: 7, scope: !1648)
!1730 = !DILocation(line: 251, column: 12, scope: !1648)
!1731 = !DILocation(line: 251, column: 21, scope: !1648)
!1732 = !DILocation(line: 251, column: 5, scope: !1648)
!1733 = !DILocation(line: 252, column: 12, scope: !1648)
!1734 = !DILocation(line: 252, column: 21, scope: !1648)
!1735 = !DILocation(line: 252, column: 5, scope: !1648)
!1736 = !DILocation(line: 253, column: 12, scope: !1648)
!1737 = !DILocation(line: 253, column: 21, scope: !1648)
!1738 = !DILocation(line: 253, column: 5, scope: !1648)
!1739 = !DILocation(line: 254, column: 5, scope: !1648)
!1740 = !DILocation(line: 259, column: 1, scope: !1648)
!1741 = distinct !DISubprogram(name: "jbig2_alloc", scope: !87, file: !87, line: 64, type: !117, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!1742 = !DILocalVariable(name: "allocator", arg: 1, scope: !1741, file: !87, line: 64, type: !111)
!1743 = !DILocation(line: 64, column: 30, scope: !1741)
!1744 = !DILocalVariable(name: "size", arg: 2, scope: !1741, file: !87, line: 64, type: !119)
!1745 = !DILocation(line: 64, column: 48, scope: !1741)
!1746 = !DILocation(line: 66, column: 10, scope: !1741)
!1747 = !DILocation(line: 66, column: 21, scope: !1741)
!1748 = !DILocation(line: 66, column: 28, scope: !1741)
!1749 = !DILocation(line: 66, column: 39, scope: !1741)
!1750 = !DILocation(line: 66, column: 3, scope: !1741)
!1751 = distinct !DISubprogram(name: "jbig2_free", scope: !87, file: !87, line: 70, type: !124, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!1752 = !DILocalVariable(name: "allocator", arg: 1, scope: !1751, file: !87, line: 70, type: !111)
!1753 = !DILocation(line: 70, column: 29, scope: !1751)
!1754 = !DILocalVariable(name: "p", arg: 2, scope: !1751, file: !87, line: 70, type: !68)
!1755 = !DILocation(line: 70, column: 46, scope: !1751)
!1756 = !DILocation(line: 72, column: 3, scope: !1751)
!1757 = !DILocation(line: 72, column: 14, scope: !1751)
!1758 = !DILocation(line: 72, column: 20, scope: !1751)
!1759 = !DILocation(line: 72, column: 31, scope: !1751)
!1760 = !DILocation(line: 73, column: 1, scope: !1751)
!1761 = distinct !DISubprogram(name: "jbig2_realloc", scope: !87, file: !87, line: 76, type: !128, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!1762 = !DILocalVariable(name: "allocator", arg: 1, scope: !1761, file: !87, line: 76, type: !111)
!1763 = !DILocation(line: 76, column: 32, scope: !1761)
!1764 = !DILocalVariable(name: "p", arg: 2, scope: !1761, file: !87, line: 76, type: !68)
!1765 = !DILocation(line: 76, column: 49, scope: !1761)
!1766 = !DILocalVariable(name: "size", arg: 3, scope: !1761, file: !87, line: 76, type: !119)
!1767 = !DILocation(line: 76, column: 59, scope: !1761)
!1768 = !DILocation(line: 78, column: 10, scope: !1761)
!1769 = !DILocation(line: 78, column: 21, scope: !1761)
!1770 = !DILocation(line: 78, column: 30, scope: !1761)
!1771 = !DILocation(line: 78, column: 41, scope: !1761)
!1772 = !DILocation(line: 78, column: 44, scope: !1761)
!1773 = !DILocation(line: 78, column: 3, scope: !1761)
!1774 = distinct !DISubprogram(name: "jbig2_error", scope: !87, file: !87, line: 97, type: !1775, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!6, !106, !140, !141, !76, null}
!1777 = !DILocalVariable(name: "ctx", arg: 1, scope: !1774, file: !87, line: 97, type: !106)
!1778 = !DILocation(line: 97, column: 23, scope: !1774)
!1779 = !DILocalVariable(name: "severity", arg: 2, scope: !1774, file: !87, line: 97, type: !140)
!1780 = !DILocation(line: 97, column: 42, scope: !1774)
!1781 = !DILocalVariable(name: "segment_number", arg: 3, scope: !1774, file: !87, line: 97, type: !141)
!1782 = !DILocation(line: 97, column: 60, scope: !1774)
!1783 = !DILocalVariable(name: "fmt", arg: 4, scope: !1774, file: !87, line: 98, type: !76)
!1784 = !DILocation(line: 98, column: 19, scope: !1774)
!1785 = !DILocalVariable(name: "buf", scope: !1774, file: !87, line: 100, type: !1786)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8192, elements: !1787)
!1787 = !{!1788}
!1788 = !DISubrange(count: 1024)
!1789 = !DILocation(line: 100, column: 8, scope: !1774)
!1790 = !DILocalVariable(name: "ap", scope: !1774, file: !87, line: 101, type: !1791)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !612, line: 79, baseType: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1793, line: 48, baseType: !1794)
!1793 = !DIFile(filename: "llvm80/build/lib/clang/8.0.1/include/stdarg.h", directory: "/root/llvm")
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !87, line: 101, baseType: !1795)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1796, size: 192, elements: !648)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !87, line: 101, size: 192, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1796, file: !87, line: 101, baseType: !17, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1796, file: !87, line: 101, baseType: !17, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1796, file: !87, line: 101, baseType: !68, size: 64, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1796, file: !87, line: 101, baseType: !68, size: 64, offset: 128)
!1802 = !DILocation(line: 101, column: 11, scope: !1774)
!1803 = !DILocalVariable(name: "n", scope: !1774, file: !87, line: 102, type: !6)
!1804 = !DILocation(line: 102, column: 7, scope: !1774)
!1805 = !DILocalVariable(name: "code", scope: !1774, file: !87, line: 103, type: !6)
!1806 = !DILocation(line: 103, column: 7, scope: !1774)
!1807 = !DILocation(line: 105, column: 3, scope: !1774)
!1808 = !DILocation(line: 106, column: 18, scope: !1774)
!1809 = !DILocation(line: 106, column: 36, scope: !1774)
!1810 = !DILocation(line: 106, column: 41, scope: !1774)
!1811 = !DILocation(line: 106, column: 7, scope: !1774)
!1812 = !DILocation(line: 106, column: 5, scope: !1774)
!1813 = !DILocation(line: 107, column: 3, scope: !1774)
!1814 = !DILocation(line: 108, column: 7, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1774, file: !87, line: 108, column: 7)
!1816 = !DILocation(line: 108, column: 9, scope: !1815)
!1817 = !DILocation(line: 108, column: 13, scope: !1815)
!1818 = !DILocation(line: 108, column: 16, scope: !1815)
!1819 = !DILocation(line: 108, column: 18, scope: !1815)
!1820 = !DILocation(line: 108, column: 7, scope: !1774)
!1821 = !DILocation(line: 109, column: 14, scope: !1815)
!1822 = !DILocation(line: 109, column: 5, scope: !1815)
!1823 = !DILocation(line: 110, column: 10, scope: !1774)
!1824 = !DILocation(line: 110, column: 15, scope: !1774)
!1825 = !DILocation(line: 110, column: 31, scope: !1774)
!1826 = !DILocation(line: 110, column: 36, scope: !1774)
!1827 = !DILocation(line: 110, column: 57, scope: !1774)
!1828 = !DILocation(line: 110, column: 62, scope: !1774)
!1829 = !DILocation(line: 110, column: 72, scope: !1774)
!1830 = !DILocation(line: 110, column: 8, scope: !1774)
!1831 = !DILocation(line: 111, column: 7, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1774, file: !87, line: 111, column: 7)
!1833 = !DILocation(line: 111, column: 16, scope: !1832)
!1834 = !DILocation(line: 111, column: 7, scope: !1774)
!1835 = !DILocation(line: 112, column: 10, scope: !1832)
!1836 = !DILocation(line: 112, column: 5, scope: !1832)
!1837 = !DILocation(line: 113, column: 10, scope: !1774)
!1838 = !DILocation(line: 113, column: 3, scope: !1774)
!1839 = distinct !DISubprogram(name: "jbig2_ctx_new", scope: !87, file: !87, line: 117, type: !1840, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!106, !111, !131, !202, !136, !68}
!1842 = !DILocalVariable(name: "allocator", arg: 1, scope: !1839, file: !87, line: 117, type: !111)
!1843 = !DILocation(line: 117, column: 32, scope: !1839)
!1844 = !DILocalVariable(name: "options", arg: 2, scope: !1839, file: !87, line: 118, type: !131)
!1845 = !DILocation(line: 118, column: 22, scope: !1839)
!1846 = !DILocalVariable(name: "global_ctx", arg: 3, scope: !1839, file: !87, line: 119, type: !202)
!1847 = !DILocation(line: 119, column: 25, scope: !1839)
!1848 = !DILocalVariable(name: "error_callback", arg: 4, scope: !1839, file: !87, line: 120, type: !136)
!1849 = !DILocation(line: 120, column: 28, scope: !1839)
!1850 = !DILocalVariable(name: "error_callback_data", arg: 5, scope: !1839, file: !87, line: 121, type: !68)
!1851 = !DILocation(line: 121, column: 15, scope: !1839)
!1852 = !DILocalVariable(name: "result", scope: !1839, file: !87, line: 123, type: !106)
!1853 = !DILocation(line: 123, column: 13, scope: !1839)
!1854 = !DILocation(line: 125, column: 7, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !1839, file: !87, line: 125, column: 7)
!1856 = !DILocation(line: 125, column: 17, scope: !1855)
!1857 = !DILocation(line: 125, column: 7, scope: !1839)
!1858 = !DILocation(line: 126, column: 17, scope: !1855)
!1859 = !DILocation(line: 126, column: 7, scope: !1855)
!1860 = !DILocation(line: 127, column: 7, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1839, file: !87, line: 127, column: 7)
!1862 = !DILocation(line: 127, column: 22, scope: !1861)
!1863 = !DILocation(line: 127, column: 7, scope: !1839)
!1864 = !DILocation(line: 128, column: 22, scope: !1861)
!1865 = !DILocation(line: 128, column: 7, scope: !1861)
!1866 = !DILocation(line: 130, column: 36, scope: !1839)
!1867 = !DILocation(line: 130, column: 24, scope: !1839)
!1868 = !DILocation(line: 130, column: 12, scope: !1839)
!1869 = !DILocation(line: 130, column: 10, scope: !1839)
!1870 = !DILocation(line: 131, column: 7, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1839, file: !87, line: 131, column: 7)
!1872 = !DILocation(line: 131, column: 14, scope: !1871)
!1873 = !DILocation(line: 131, column: 7, scope: !1839)
!1874 = !DILocation(line: 132, column: 5, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1871, file: !87, line: 131, column: 23)
!1876 = !DILocation(line: 132, column: 20, scope: !1875)
!1877 = !DILocation(line: 134, column: 12, scope: !1875)
!1878 = !DILocation(line: 134, column: 5, scope: !1875)
!1879 = !DILocation(line: 137, column: 23, scope: !1839)
!1880 = !DILocation(line: 137, column: 3, scope: !1839)
!1881 = !DILocation(line: 137, column: 11, scope: !1839)
!1882 = !DILocation(line: 137, column: 21, scope: !1839)
!1883 = !DILocation(line: 138, column: 21, scope: !1839)
!1884 = !DILocation(line: 138, column: 3, scope: !1839)
!1885 = !DILocation(line: 138, column: 11, scope: !1839)
!1886 = !DILocation(line: 138, column: 19, scope: !1839)
!1887 = !DILocation(line: 139, column: 42, scope: !1839)
!1888 = !DILocation(line: 139, column: 24, scope: !1839)
!1889 = !DILocation(line: 139, column: 3, scope: !1839)
!1890 = !DILocation(line: 139, column: 11, scope: !1839)
!1891 = !DILocation(line: 139, column: 22, scope: !1839)
!1892 = !DILocation(line: 140, column: 28, scope: !1839)
!1893 = !DILocation(line: 140, column: 3, scope: !1839)
!1894 = !DILocation(line: 140, column: 11, scope: !1839)
!1895 = !DILocation(line: 140, column: 26, scope: !1839)
!1896 = !DILocation(line: 141, column: 33, scope: !1839)
!1897 = !DILocation(line: 141, column: 3, scope: !1839)
!1898 = !DILocation(line: 141, column: 11, scope: !1839)
!1899 = !DILocation(line: 141, column: 31, scope: !1839)
!1900 = !DILocation(line: 143, column: 20, scope: !1839)
!1901 = !DILocation(line: 143, column: 28, scope: !1839)
!1902 = !DILocation(line: 143, column: 19, scope: !1839)
!1903 = !DILocation(line: 143, column: 3, scope: !1839)
!1904 = !DILocation(line: 143, column: 11, scope: !1839)
!1905 = !DILocation(line: 143, column: 17, scope: !1839)
!1906 = !DILocation(line: 147, column: 3, scope: !1839)
!1907 = !DILocation(line: 147, column: 11, scope: !1839)
!1908 = !DILocation(line: 147, column: 15, scope: !1839)
!1909 = !DILocation(line: 149, column: 3, scope: !1839)
!1910 = !DILocation(line: 149, column: 11, scope: !1839)
!1911 = !DILocation(line: 149, column: 22, scope: !1839)
!1912 = !DILocation(line: 150, column: 3, scope: !1839)
!1913 = !DILocation(line: 150, column: 11, scope: !1839)
!1914 = !DILocation(line: 150, column: 26, scope: !1839)
!1915 = !DILocation(line: 151, column: 51, scope: !1839)
!1916 = !DILocation(line: 151, column: 62, scope: !1839)
!1917 = !DILocation(line: 151, column: 70, scope: !1839)
!1918 = !DILocation(line: 151, column: 85, scope: !1839)
!1919 = !DILocation(line: 151, column: 39, scope: !1839)
!1920 = !DILocation(line: 151, column: 22, scope: !1839)
!1921 = !DILocation(line: 151, column: 3, scope: !1839)
!1922 = !DILocation(line: 151, column: 11, scope: !1839)
!1923 = !DILocation(line: 151, column: 20, scope: !1839)
!1924 = !DILocation(line: 152, column: 3, scope: !1839)
!1925 = !DILocation(line: 152, column: 11, scope: !1839)
!1926 = !DILocation(line: 152, column: 25, scope: !1839)
!1927 = !DILocation(line: 154, column: 3, scope: !1839)
!1928 = !DILocation(line: 154, column: 11, scope: !1839)
!1929 = !DILocation(line: 154, column: 24, scope: !1839)
!1930 = !DILocation(line: 155, column: 3, scope: !1839)
!1931 = !DILocation(line: 155, column: 11, scope: !1839)
!1932 = !DILocation(line: 155, column: 26, scope: !1839)
!1933 = !DILocation(line: 156, column: 44, scope: !1839)
!1934 = !DILocation(line: 156, column: 55, scope: !1839)
!1935 = !DILocation(line: 156, column: 63, scope: !1839)
!1936 = !DILocation(line: 156, column: 78, scope: !1839)
!1937 = !DILocation(line: 156, column: 32, scope: !1839)
!1938 = !DILocation(line: 156, column: 19, scope: !1839)
!1939 = !DILocation(line: 156, column: 3, scope: !1839)
!1940 = !DILocation(line: 156, column: 11, scope: !1839)
!1941 = !DILocation(line: 156, column: 17, scope: !1839)
!1942 = !DILocalVariable(name: "index", scope: !1943, file: !87, line: 158, type: !6)
!1943 = distinct !DILexicalBlock(scope: !1839, file: !87, line: 157, column: 3)
!1944 = !DILocation(line: 158, column: 9, scope: !1943)
!1945 = !DILocation(line: 159, column: 16, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1943, file: !87, line: 159, column: 5)
!1947 = !DILocation(line: 159, column: 10, scope: !1946)
!1948 = !DILocation(line: 159, column: 21, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1946, file: !87, line: 159, column: 5)
!1950 = !DILocation(line: 159, column: 29, scope: !1949)
!1951 = !DILocation(line: 159, column: 37, scope: !1949)
!1952 = !DILocation(line: 159, column: 27, scope: !1949)
!1953 = !DILocation(line: 159, column: 5, scope: !1946)
!1954 = !DILocation(line: 160, column: 9, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1949, file: !87, line: 159, column: 62)
!1956 = !DILocation(line: 160, column: 17, scope: !1955)
!1957 = !DILocation(line: 160, column: 23, scope: !1955)
!1958 = !DILocation(line: 160, column: 30, scope: !1955)
!1959 = !DILocation(line: 160, column: 36, scope: !1955)
!1960 = !DILocation(line: 161, column: 9, scope: !1955)
!1961 = !DILocation(line: 161, column: 17, scope: !1955)
!1962 = !DILocation(line: 161, column: 23, scope: !1955)
!1963 = !DILocation(line: 161, column: 30, scope: !1955)
!1964 = !DILocation(line: 161, column: 37, scope: !1955)
!1965 = !DILocation(line: 162, column: 9, scope: !1955)
!1966 = !DILocation(line: 162, column: 17, scope: !1955)
!1967 = !DILocation(line: 162, column: 23, scope: !1955)
!1968 = !DILocation(line: 162, column: 30, scope: !1955)
!1969 = !DILocation(line: 162, column: 36, scope: !1955)
!1970 = !DILocation(line: 163, column: 5, scope: !1955)
!1971 = !DILocation(line: 159, column: 58, scope: !1949)
!1972 = !DILocation(line: 159, column: 5, scope: !1949)
!1973 = distinct !{!1973, !1953, !1974}
!1974 = !DILocation(line: 163, column: 5, scope: !1946)
!1975 = !DILocation(line: 166, column: 10, scope: !1839)
!1976 = !DILocation(line: 166, column: 3, scope: !1839)
!1977 = !DILocation(line: 167, column: 1, scope: !1839)
!1978 = distinct !DISubprogram(name: "jbig2_default_error", scope: !87, file: !87, line: 82, type: !138, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !86, retainedNodes: !70)
!1979 = !DILocalVariable(name: "data", arg: 1, scope: !1978, file: !87, line: 82, type: !68)
!1980 = !DILocation(line: 82, column: 27, scope: !1978)
!1981 = !DILocalVariable(name: "msg", arg: 2, scope: !1978, file: !87, line: 82, type: !76)
!1982 = !DILocation(line: 82, column: 45, scope: !1978)
!1983 = !DILocalVariable(name: "severity", arg: 3, scope: !1978, file: !87, line: 83, type: !140)
!1984 = !DILocation(line: 83, column: 35, scope: !1978)
!1985 = !DILocalVariable(name: "seg_idx", arg: 4, scope: !1978, file: !87, line: 83, type: !141)
!1986 = !DILocation(line: 83, column: 53, scope: !1978)
!1987 = !DILocation(line: 86, column: 9, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1978, file: !87, line: 86, column: 9)
!1989 = !DILocation(line: 86, column: 18, scope: !1988)
!1990 = !DILocation(line: 86, column: 9, scope: !1978)
!1991 = !DILocation(line: 87, column: 17, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1988, file: !87, line: 86, column: 43)
!1993 = !DILocation(line: 87, column: 58, scope: !1992)
!1994 = !DILocation(line: 87, column: 9, scope: !1992)
!1995 = !DILocation(line: 88, column: 13, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1992, file: !87, line: 88, column: 13)
!1997 = !DILocation(line: 88, column: 21, scope: !1996)
!1998 = !DILocation(line: 88, column: 13, scope: !1992)
!1999 = !DILocation(line: 88, column: 36, scope: !1996)
!2000 = !DILocation(line: 88, column: 65, scope: !1996)
!2001 = !DILocation(line: 88, column: 28, scope: !1996)
!2002 = !DILocation(line: 89, column: 17, scope: !1992)
!2003 = !DILocation(line: 89, column: 9, scope: !1992)
!2004 = !DILocation(line: 90, column: 16, scope: !1992)
!2005 = !DILocation(line: 90, column: 9, scope: !1992)
!2006 = !DILocation(line: 91, column: 5, scope: !1992)
!2007 = !DILocation(line: 93, column: 5, scope: !1978)
!2008 = distinct !DISubprogram(name: "jbig2_default_alloc", scope: !87, file: !87, line: 39, type: !117, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2009 = !DILocalVariable(name: "allocator", arg: 1, scope: !2008, file: !87, line: 39, type: !111)
!2010 = !DILocation(line: 39, column: 38, scope: !2008)
!2011 = !DILocalVariable(name: "size", arg: 2, scope: !2008, file: !87, line: 39, type: !119)
!2012 = !DILocation(line: 39, column: 56, scope: !2008)
!2013 = !DILocation(line: 41, column: 18, scope: !2008)
!2014 = !DILocation(line: 41, column: 10, scope: !2008)
!2015 = !DILocation(line: 41, column: 3, scope: !2008)
!2016 = distinct !DISubprogram(name: "jbig2_default_free", scope: !87, file: !87, line: 45, type: !124, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2017 = !DILocalVariable(name: "allocator", arg: 1, scope: !2016, file: !87, line: 45, type: !111)
!2018 = !DILocation(line: 45, column: 37, scope: !2016)
!2019 = !DILocalVariable(name: "p", arg: 2, scope: !2016, file: !87, line: 45, type: !68)
!2020 = !DILocation(line: 45, column: 54, scope: !2016)
!2021 = !DILocation(line: 47, column: 9, scope: !2016)
!2022 = !DILocation(line: 47, column: 3, scope: !2016)
!2023 = !DILocation(line: 48, column: 1, scope: !2016)
!2024 = distinct !DISubprogram(name: "jbig2_default_realloc", scope: !87, file: !87, line: 51, type: !128, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2025 = !DILocalVariable(name: "allocator", arg: 1, scope: !2024, file: !87, line: 51, type: !111)
!2026 = !DILocation(line: 51, column: 40, scope: !2024)
!2027 = !DILocalVariable(name: "p", arg: 2, scope: !2024, file: !87, line: 51, type: !68)
!2028 = !DILocation(line: 51, column: 57, scope: !2024)
!2029 = !DILocalVariable(name: "size", arg: 3, scope: !2024, file: !87, line: 51, type: !119)
!2030 = !DILocation(line: 51, column: 67, scope: !2024)
!2031 = !DILocation(line: 53, column: 19, scope: !2024)
!2032 = !DILocation(line: 53, column: 22, scope: !2024)
!2033 = !DILocation(line: 53, column: 10, scope: !2024)
!2034 = !DILocation(line: 53, column: 3, scope: !2024)
!2035 = distinct !DISubprogram(name: "jbig2_get_int32", scope: !87, file: !87, line: 170, type: !2036, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!141, !219}
!2038 = !DILocalVariable(name: "buf", arg: 1, scope: !2035, file: !87, line: 170, type: !219)
!2039 = !DILocation(line: 170, column: 30, scope: !2035)
!2040 = !DILocation(line: 172, column: 11, scope: !2035)
!2041 = !DILocation(line: 172, column: 18, scope: !2035)
!2042 = !DILocation(line: 172, column: 28, scope: !2035)
!2043 = !DILocation(line: 172, column: 35, scope: !2035)
!2044 = !DILocation(line: 172, column: 25, scope: !2035)
!2045 = !DILocation(line: 172, column: 45, scope: !2035)
!2046 = !DILocation(line: 172, column: 52, scope: !2035)
!2047 = !DILocation(line: 172, column: 42, scope: !2035)
!2048 = !DILocation(line: 172, column: 60, scope: !2035)
!2049 = !DILocation(line: 172, column: 58, scope: !2035)
!2050 = !DILocation(line: 172, column: 3, scope: !2035)
!2051 = distinct !DISubprogram(name: "jbig2_get_int16", scope: !87, file: !87, line: 176, type: !2052, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!2054, !219}
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !33, line: 37, baseType: !236)
!2055 = !DILocalVariable(name: "buf", arg: 1, scope: !2051, file: !87, line: 176, type: !219)
!2056 = !DILocation(line: 176, column: 30, scope: !2051)
!2057 = !DILocation(line: 178, column: 11, scope: !2051)
!2058 = !DILocation(line: 178, column: 18, scope: !2051)
!2059 = !DILocation(line: 178, column: 26, scope: !2051)
!2060 = !DILocation(line: 178, column: 24, scope: !2051)
!2061 = !DILocation(line: 178, column: 10, scope: !2051)
!2062 = !DILocation(line: 178, column: 3, scope: !2051)
!2063 = distinct !DISubprogram(name: "jbig2_data_in", scope: !87, file: !87, line: 194, type: !2064, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!6, !106, !2066, !119}
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!2068 = !DILocalVariable(name: "ctx", arg: 1, scope: !2063, file: !87, line: 194, type: !106)
!2069 = !DILocation(line: 194, column: 26, scope: !2063)
!2070 = !DILocalVariable(name: "data", arg: 2, scope: !2063, file: !87, line: 194, type: !2066)
!2071 = !DILocation(line: 194, column: 52, scope: !2063)
!2072 = !DILocalVariable(name: "size", arg: 3, scope: !2063, file: !87, line: 194, type: !119)
!2073 = !DILocation(line: 194, column: 65, scope: !2063)
!2074 = !DILocalVariable(name: "initial_buf_size", scope: !2063, file: !87, line: 196, type: !1559)
!2075 = !DILocation(line: 196, column: 16, scope: !2063)
!2076 = !DILocation(line: 198, column: 7, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2063, file: !87, line: 198, column: 7)
!2078 = !DILocation(line: 198, column: 12, scope: !2077)
!2079 = !DILocation(line: 198, column: 16, scope: !2077)
!2080 = !DILocation(line: 198, column: 7, scope: !2063)
!2081 = !DILocalVariable(name: "buf_size", scope: !2082, file: !87, line: 200, type: !119)
!2082 = distinct !DILexicalBlock(scope: !2077, file: !87, line: 199, column: 5)
!2083 = !DILocation(line: 200, column: 14, scope: !2082)
!2084 = !DILocation(line: 202, column: 7, scope: !2082)
!2085 = !DILocation(line: 203, column: 11, scope: !2082)
!2086 = !DILocation(line: 203, column: 2, scope: !2082)
!2087 = !DILocation(line: 204, column: 14, scope: !2082)
!2088 = !DILocation(line: 204, column: 25, scope: !2082)
!2089 = !DILocation(line: 204, column: 23, scope: !2082)
!2090 = distinct !{!2090, !2084, !2091}
!2091 = !DILocation(line: 204, column: 29, scope: !2082)
!2092 = !DILocation(line: 205, column: 38, scope: !2082)
!2093 = !DILocation(line: 205, column: 43, scope: !2082)
!2094 = !DILocation(line: 205, column: 54, scope: !2082)
!2095 = !DILocation(line: 205, column: 26, scope: !2082)
!2096 = !DILocation(line: 205, column: 7, scope: !2082)
!2097 = !DILocation(line: 205, column: 12, scope: !2082)
!2098 = !DILocation(line: 205, column: 16, scope: !2082)
!2099 = !DILocation(line: 206, column: 23, scope: !2082)
!2100 = !DILocation(line: 206, column: 7, scope: !2082)
!2101 = !DILocation(line: 206, column: 12, scope: !2082)
!2102 = !DILocation(line: 206, column: 21, scope: !2082)
!2103 = !DILocation(line: 207, column: 7, scope: !2082)
!2104 = !DILocation(line: 207, column: 12, scope: !2082)
!2105 = !DILocation(line: 207, column: 22, scope: !2082)
!2106 = !DILocation(line: 208, column: 7, scope: !2082)
!2107 = !DILocation(line: 208, column: 12, scope: !2082)
!2108 = !DILocation(line: 208, column: 22, scope: !2082)
!2109 = !DILocation(line: 209, column: 5, scope: !2082)
!2110 = !DILocation(line: 210, column: 12, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2077, file: !87, line: 210, column: 12)
!2112 = !DILocation(line: 210, column: 17, scope: !2111)
!2113 = !DILocation(line: 210, column: 29, scope: !2111)
!2114 = !DILocation(line: 210, column: 27, scope: !2111)
!2115 = !DILocation(line: 210, column: 36, scope: !2111)
!2116 = !DILocation(line: 210, column: 41, scope: !2111)
!2117 = !DILocation(line: 210, column: 34, scope: !2111)
!2118 = !DILocation(line: 210, column: 12, scope: !2077)
!2119 = !DILocation(line: 212, column: 11, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !87, line: 212, column: 11)
!2121 = distinct !DILexicalBlock(scope: !2111, file: !87, line: 211, column: 5)
!2122 = !DILocation(line: 212, column: 16, scope: !2120)
!2123 = !DILocation(line: 212, column: 30, scope: !2120)
!2124 = !DILocation(line: 212, column: 35, scope: !2120)
!2125 = !DILocation(line: 212, column: 44, scope: !2120)
!2126 = !DILocation(line: 212, column: 26, scope: !2120)
!2127 = !DILocation(line: 212, column: 50, scope: !2120)
!2128 = !DILocation(line: 213, column: 4, scope: !2120)
!2129 = !DILocation(line: 213, column: 9, scope: !2120)
!2130 = !DILocation(line: 213, column: 21, scope: !2120)
!2131 = !DILocation(line: 213, column: 26, scope: !2120)
!2132 = !DILocation(line: 213, column: 19, scope: !2120)
!2133 = !DILocation(line: 213, column: 38, scope: !2120)
!2134 = !DILocation(line: 213, column: 36, scope: !2120)
!2135 = !DILocation(line: 213, column: 46, scope: !2120)
!2136 = !DILocation(line: 213, column: 51, scope: !2120)
!2137 = !DILocation(line: 213, column: 43, scope: !2120)
!2138 = !DILocation(line: 212, column: 11, scope: !2121)
!2139 = !DILocation(line: 215, column: 12, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2120, file: !87, line: 214, column: 9)
!2141 = !DILocation(line: 215, column: 17, scope: !2140)
!2142 = !DILocation(line: 215, column: 22, scope: !2140)
!2143 = !DILocation(line: 215, column: 27, scope: !2140)
!2144 = !DILocation(line: 215, column: 33, scope: !2140)
!2145 = !DILocation(line: 215, column: 38, scope: !2140)
!2146 = !DILocation(line: 215, column: 31, scope: !2140)
!2147 = !DILocation(line: 216, column: 5, scope: !2140)
!2148 = !DILocation(line: 216, column: 10, scope: !2140)
!2149 = !DILocation(line: 216, column: 22, scope: !2140)
!2150 = !DILocation(line: 216, column: 27, scope: !2140)
!2151 = !DILocation(line: 216, column: 20, scope: !2140)
!2152 = !DILocation(line: 215, column: 4, scope: !2140)
!2153 = !DILocation(line: 217, column: 2, scope: !2140)
!2154 = !DILocalVariable(name: "buf", scope: !2155, file: !87, line: 220, type: !144)
!2155 = distinct !DILexicalBlock(scope: !2120, file: !87, line: 219, column: 2)
!2156 = !DILocation(line: 220, column: 10, scope: !2155)
!2157 = !DILocalVariable(name: "buf_size", scope: !2155, file: !87, line: 221, type: !119)
!2158 = !DILocation(line: 221, column: 11, scope: !2155)
!2159 = !DILocation(line: 223, column: 4, scope: !2155)
!2160 = !DILocation(line: 224, column: 15, scope: !2155)
!2161 = !DILocation(line: 224, column: 6, scope: !2155)
!2162 = !DILocation(line: 225, column: 11, scope: !2155)
!2163 = !DILocation(line: 225, column: 22, scope: !2155)
!2164 = !DILocation(line: 225, column: 27, scope: !2155)
!2165 = !DILocation(line: 225, column: 39, scope: !2155)
!2166 = !DILocation(line: 225, column: 44, scope: !2155)
!2167 = !DILocation(line: 225, column: 37, scope: !2155)
!2168 = !DILocation(line: 225, column: 56, scope: !2155)
!2169 = !DILocation(line: 225, column: 54, scope: !2155)
!2170 = !DILocation(line: 225, column: 20, scope: !2155)
!2171 = distinct !{!2171, !2159, !2172}
!2172 = !DILocation(line: 225, column: 60, scope: !2155)
!2173 = !DILocation(line: 226, column: 30, scope: !2155)
!2174 = !DILocation(line: 226, column: 35, scope: !2155)
!2175 = !DILocation(line: 226, column: 46, scope: !2155)
!2176 = !DILocation(line: 226, column: 18, scope: !2155)
!2177 = !DILocation(line: 226, column: 8, scope: !2155)
!2178 = !DILocation(line: 227, column: 11, scope: !2155)
!2179 = !DILocation(line: 227, column: 16, scope: !2155)
!2180 = !DILocation(line: 227, column: 21, scope: !2155)
!2181 = !DILocation(line: 227, column: 27, scope: !2155)
!2182 = !DILocation(line: 227, column: 32, scope: !2155)
!2183 = !DILocation(line: 227, column: 25, scope: !2155)
!2184 = !DILocation(line: 228, column: 5, scope: !2155)
!2185 = !DILocation(line: 228, column: 10, scope: !2155)
!2186 = !DILocation(line: 228, column: 22, scope: !2155)
!2187 = !DILocation(line: 228, column: 27, scope: !2155)
!2188 = !DILocation(line: 228, column: 20, scope: !2155)
!2189 = !DILocation(line: 227, column: 4, scope: !2155)
!2190 = !DILocation(line: 229, column: 15, scope: !2155)
!2191 = !DILocation(line: 229, column: 20, scope: !2155)
!2192 = !DILocation(line: 229, column: 31, scope: !2155)
!2193 = !DILocation(line: 229, column: 36, scope: !2155)
!2194 = !DILocation(line: 229, column: 4, scope: !2155)
!2195 = !DILocation(line: 230, column: 15, scope: !2155)
!2196 = !DILocation(line: 230, column: 4, scope: !2155)
!2197 = !DILocation(line: 230, column: 9, scope: !2155)
!2198 = !DILocation(line: 230, column: 13, scope: !2155)
!2199 = !DILocation(line: 231, column: 20, scope: !2155)
!2200 = !DILocation(line: 231, column: 4, scope: !2155)
!2201 = !DILocation(line: 231, column: 9, scope: !2155)
!2202 = !DILocation(line: 231, column: 18, scope: !2155)
!2203 = !DILocation(line: 233, column: 25, scope: !2121)
!2204 = !DILocation(line: 233, column: 30, scope: !2121)
!2205 = !DILocation(line: 233, column: 7, scope: !2121)
!2206 = !DILocation(line: 233, column: 12, scope: !2121)
!2207 = !DILocation(line: 233, column: 22, scope: !2121)
!2208 = !DILocation(line: 234, column: 7, scope: !2121)
!2209 = !DILocation(line: 234, column: 12, scope: !2121)
!2210 = !DILocation(line: 234, column: 22, scope: !2121)
!2211 = !DILocation(line: 235, column: 5, scope: !2121)
!2212 = !DILocation(line: 236, column: 10, scope: !2063)
!2213 = !DILocation(line: 236, column: 15, scope: !2063)
!2214 = !DILocation(line: 236, column: 21, scope: !2063)
!2215 = !DILocation(line: 236, column: 26, scope: !2063)
!2216 = !DILocation(line: 236, column: 19, scope: !2063)
!2217 = !DILocation(line: 236, column: 37, scope: !2063)
!2218 = !DILocation(line: 236, column: 43, scope: !2063)
!2219 = !DILocation(line: 236, column: 3, scope: !2063)
!2220 = !DILocation(line: 237, column: 21, scope: !2063)
!2221 = !DILocation(line: 237, column: 3, scope: !2063)
!2222 = !DILocation(line: 237, column: 8, scope: !2063)
!2223 = !DILocation(line: 237, column: 18, scope: !2063)
!2224 = !DILocation(line: 241, column: 3, scope: !2063)
!2225 = !DILocalVariable(name: "jbig2_id_string", scope: !2226, file: !87, line: 243, type: !242)
!2226 = distinct !DILexicalBlock(scope: !2227, file: !87, line: 242, column: 5)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !87, line: 241, column: 3)
!2228 = distinct !DILexicalBlock(scope: !2063, file: !87, line: 241, column: 3)
!2229 = !DILocation(line: 243, column: 18, scope: !2226)
!2230 = !DILocalVariable(name: "segment", scope: !2226, file: !87, line: 244, type: !156)
!2231 = !DILocation(line: 244, column: 21, scope: !2226)
!2232 = !DILocalVariable(name: "header_size", scope: !2226, file: !87, line: 245, type: !119)
!2233 = !DILocation(line: 245, column: 14, scope: !2226)
!2234 = !DILocalVariable(name: "code", scope: !2226, file: !87, line: 246, type: !6)
!2235 = !DILocation(line: 246, column: 11, scope: !2226)
!2236 = !DILocation(line: 248, column: 15, scope: !2226)
!2237 = !DILocation(line: 248, column: 20, scope: !2226)
!2238 = !DILocation(line: 248, column: 7, scope: !2226)
!2239 = !DILocation(line: 252, column: 8, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 252, column: 8)
!2241 = distinct !DILexicalBlock(scope: !2226, file: !87, line: 249, column: 2)
!2242 = !DILocation(line: 252, column: 13, scope: !2240)
!2243 = !DILocation(line: 252, column: 25, scope: !2240)
!2244 = !DILocation(line: 252, column: 30, scope: !2240)
!2245 = !DILocation(line: 252, column: 23, scope: !2240)
!2246 = !DILocation(line: 252, column: 40, scope: !2240)
!2247 = !DILocation(line: 252, column: 8, scope: !2241)
!2248 = !DILocation(line: 253, column: 6, scope: !2240)
!2249 = !DILocation(line: 254, column: 15, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 254, column: 8)
!2251 = !DILocation(line: 254, column: 20, scope: !2250)
!2252 = !DILocation(line: 254, column: 26, scope: !2250)
!2253 = !DILocation(line: 254, column: 31, scope: !2250)
!2254 = !DILocation(line: 254, column: 24, scope: !2250)
!2255 = !DILocation(line: 254, column: 42, scope: !2250)
!2256 = !DILocation(line: 254, column: 8, scope: !2250)
!2257 = !DILocation(line: 254, column: 8, scope: !2241)
!2258 = !DILocation(line: 255, column: 25, scope: !2250)
!2259 = !DILocation(line: 255, column: 13, scope: !2250)
!2260 = !DILocation(line: 255, column: 6, scope: !2250)
!2261 = !DILocation(line: 258, column: 29, scope: !2241)
!2262 = !DILocation(line: 258, column: 34, scope: !2241)
!2263 = !DILocation(line: 258, column: 38, scope: !2241)
!2264 = !DILocation(line: 258, column: 43, scope: !2241)
!2265 = !DILocation(line: 258, column: 53, scope: !2241)
!2266 = !DILocation(line: 258, column: 4, scope: !2241)
!2267 = !DILocation(line: 258, column: 9, scope: !2241)
!2268 = !DILocation(line: 258, column: 27, scope: !2241)
!2269 = !DILocation(line: 259, column: 15, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 259, column: 15)
!2271 = !DILocation(line: 259, column: 20, scope: !2270)
!2272 = !DILocation(line: 259, column: 38, scope: !2270)
!2273 = !DILocation(line: 259, column: 15, scope: !2241)
!2274 = !DILocation(line: 260, column: 25, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2270, file: !87, line: 259, column: 46)
!2276 = !DILocation(line: 261, column: 83, scope: !2275)
!2277 = !DILocation(line: 261, column: 88, scope: !2275)
!2278 = !DILocation(line: 260, column: 13, scope: !2275)
!2279 = !DILocation(line: 262, column: 11, scope: !2275)
!2280 = !DILocation(line: 264, column: 10, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 264, column: 8)
!2282 = !DILocation(line: 264, column: 15, scope: !2281)
!2283 = !DILocation(line: 264, column: 33, scope: !2281)
!2284 = !DILocation(line: 264, column: 8, scope: !2241)
!2285 = !DILocation(line: 266, column: 12, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !87, line: 266, column: 12)
!2287 = distinct !DILexicalBlock(scope: !2281, file: !87, line: 265, column: 6)
!2288 = !DILocation(line: 266, column: 17, scope: !2286)
!2289 = !DILocation(line: 266, column: 29, scope: !2286)
!2290 = !DILocation(line: 266, column: 34, scope: !2286)
!2291 = !DILocation(line: 266, column: 27, scope: !2286)
!2292 = !DILocation(line: 266, column: 44, scope: !2286)
!2293 = !DILocation(line: 266, column: 12, scope: !2287)
!2294 = !DILocation(line: 267, column: 3, scope: !2286)
!2295 = !DILocation(line: 268, column: 39, scope: !2287)
!2296 = !DILocation(line: 268, column: 44, scope: !2287)
!2297 = !DILocation(line: 268, column: 50, scope: !2287)
!2298 = !DILocation(line: 268, column: 55, scope: !2287)
!2299 = !DILocation(line: 268, column: 48, scope: !2287)
!2300 = !DILocation(line: 268, column: 65, scope: !2287)
!2301 = !DILocation(line: 268, column: 23, scope: !2287)
!2302 = !DILocation(line: 268, column: 8, scope: !2287)
!2303 = !DILocation(line: 268, column: 13, scope: !2287)
!2304 = !DILocation(line: 268, column: 21, scope: !2287)
!2305 = !DILocation(line: 269, column: 8, scope: !2287)
!2306 = !DILocation(line: 269, column: 13, scope: !2287)
!2307 = !DILocation(line: 269, column: 23, scope: !2287)
!2308 = !DILocation(line: 270, column: 19, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2287, file: !87, line: 270, column: 19)
!2310 = !DILocation(line: 270, column: 24, scope: !2309)
!2311 = !DILocation(line: 270, column: 32, scope: !2309)
!2312 = !DILocation(line: 270, column: 19, scope: !2287)
!2313 = !DILocation(line: 271, column: 29, scope: !2309)
!2314 = !DILocation(line: 271, column: 17, scope: !2309)
!2315 = !DILocation(line: 273, column: 29, scope: !2309)
!2316 = !DILocation(line: 273, column: 103, scope: !2309)
!2317 = !DILocation(line: 273, column: 108, scope: !2309)
!2318 = !DILocation(line: 273, column: 17, scope: !2309)
!2319 = !DILocation(line: 274, column: 6, scope: !2287)
!2320 = !DILocation(line: 277, column: 15, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2281, file: !87, line: 276, column: 13)
!2322 = !DILocation(line: 277, column: 20, scope: !2321)
!2323 = !DILocation(line: 277, column: 27, scope: !2321)
!2324 = !DILocation(line: 278, column: 8, scope: !2321)
!2325 = !DILocation(line: 278, column: 13, scope: !2321)
!2326 = !DILocation(line: 278, column: 23, scope: !2321)
!2327 = !DILocation(line: 281, column: 8, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 281, column: 8)
!2329 = !DILocation(line: 281, column: 13, scope: !2328)
!2330 = !DILocation(line: 281, column: 31, scope: !2328)
!2331 = !DILocation(line: 281, column: 8, scope: !2241)
!2332 = !DILocation(line: 283, column: 8, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2328, file: !87, line: 282, column: 6)
!2334 = !DILocation(line: 283, column: 13, scope: !2333)
!2335 = !DILocation(line: 283, column: 19, scope: !2333)
!2336 = !DILocation(line: 284, column: 27, scope: !2333)
!2337 = !DILocation(line: 284, column: 15, scope: !2333)
!2338 = !DILocation(line: 285, column: 6, scope: !2333)
!2339 = !DILocation(line: 288, column: 8, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2328, file: !87, line: 287, column: 6)
!2341 = !DILocation(line: 288, column: 13, scope: !2340)
!2342 = !DILocation(line: 288, column: 19, scope: !2340)
!2343 = !DILocation(line: 289, column: 27, scope: !2340)
!2344 = !DILocation(line: 289, column: 15, scope: !2340)
!2345 = !DILocation(line: 292, column: 4, scope: !2241)
!2346 = !DILocation(line: 295, column: 41, scope: !2241)
!2347 = !DILocation(line: 295, column: 46, scope: !2241)
!2348 = !DILocation(line: 295, column: 51, scope: !2241)
!2349 = !DILocation(line: 295, column: 57, scope: !2241)
!2350 = !DILocation(line: 295, column: 62, scope: !2241)
!2351 = !DILocation(line: 295, column: 55, scope: !2241)
!2352 = !DILocation(line: 296, column: 8, scope: !2241)
!2353 = !DILocation(line: 296, column: 13, scope: !2241)
!2354 = !DILocation(line: 296, column: 25, scope: !2241)
!2355 = !DILocation(line: 296, column: 30, scope: !2241)
!2356 = !DILocation(line: 296, column: 23, scope: !2241)
!2357 = !DILocation(line: 295, column: 14, scope: !2241)
!2358 = !DILocation(line: 295, column: 12, scope: !2241)
!2359 = !DILocation(line: 298, column: 8, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 298, column: 8)
!2361 = !DILocation(line: 298, column: 16, scope: !2360)
!2362 = !DILocation(line: 298, column: 8, scope: !2241)
!2363 = !DILocation(line: 299, column: 6, scope: !2360)
!2364 = !DILocation(line: 300, column: 22, scope: !2241)
!2365 = !DILocation(line: 300, column: 4, scope: !2241)
!2366 = !DILocation(line: 300, column: 9, scope: !2241)
!2367 = !DILocation(line: 300, column: 19, scope: !2241)
!2368 = !DILocation(line: 302, column: 8, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 302, column: 8)
!2370 = !DILocation(line: 302, column: 13, scope: !2369)
!2371 = !DILocation(line: 302, column: 27, scope: !2369)
!2372 = !DILocation(line: 302, column: 32, scope: !2369)
!2373 = !DILocation(line: 302, column: 24, scope: !2369)
!2374 = !DILocation(line: 302, column: 8, scope: !2241)
!2375 = !DILocation(line: 303, column: 53, scope: !2369)
!2376 = !DILocation(line: 303, column: 58, scope: !2369)
!2377 = !DILocation(line: 304, column: 17, scope: !2369)
!2378 = !DILocation(line: 304, column: 22, scope: !2369)
!2379 = !DILocation(line: 304, column: 33, scope: !2369)
!2380 = !DILocation(line: 304, column: 38, scope: !2369)
!2381 = !DILocation(line: 304, column: 53, scope: !2369)
!2382 = !DILocation(line: 304, column: 32, scope: !2369)
!2383 = !DILocation(line: 304, column: 60, scope: !2369)
!2384 = !DILocation(line: 303, column: 39, scope: !2369)
!2385 = !DILocation(line: 303, column: 22, scope: !2369)
!2386 = !DILocation(line: 303, column: 6, scope: !2369)
!2387 = !DILocation(line: 303, column: 11, scope: !2369)
!2388 = !DILocation(line: 303, column: 20, scope: !2369)
!2389 = !DILocation(line: 306, column: 39, scope: !2241)
!2390 = !DILocation(line: 306, column: 4, scope: !2241)
!2391 = !DILocation(line: 306, column: 9, scope: !2241)
!2392 = !DILocation(line: 306, column: 18, scope: !2241)
!2393 = !DILocation(line: 306, column: 23, scope: !2241)
!2394 = !DILocation(line: 306, column: 33, scope: !2241)
!2395 = !DILocation(line: 306, column: 37, scope: !2241)
!2396 = !DILocation(line: 307, column: 8, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 307, column: 8)
!2398 = !DILocation(line: 307, column: 13, scope: !2397)
!2399 = !DILocation(line: 307, column: 19, scope: !2397)
!2400 = !DILocation(line: 307, column: 8, scope: !2241)
!2401 = !DILocation(line: 309, column: 13, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !87, line: 309, column: 12)
!2403 = distinct !DILexicalBlock(scope: !2397, file: !87, line: 308, column: 6)
!2404 = !DILocation(line: 309, column: 22, scope: !2402)
!2405 = !DILocation(line: 309, column: 28, scope: !2402)
!2406 = !DILocation(line: 309, column: 34, scope: !2402)
!2407 = !DILocation(line: 309, column: 12, scope: !2403)
!2408 = !DILocation(line: 310, column: 3, scope: !2402)
!2409 = !DILocation(line: 310, column: 8, scope: !2402)
!2410 = !DILocation(line: 310, column: 14, scope: !2402)
!2411 = !DILocation(line: 311, column: 6, scope: !2403)
!2412 = !DILocation(line: 313, column: 6, scope: !2397)
!2413 = !DILocation(line: 313, column: 11, scope: !2397)
!2414 = !DILocation(line: 313, column: 17, scope: !2397)
!2415 = !DILocation(line: 314, column: 4, scope: !2241)
!2416 = !DILocation(line: 317, column: 14, scope: !2241)
!2417 = !DILocation(line: 317, column: 19, scope: !2241)
!2418 = !DILocation(line: 317, column: 28, scope: !2241)
!2419 = !DILocation(line: 317, column: 33, scope: !2241)
!2420 = !DILocation(line: 317, column: 12, scope: !2241)
!2421 = !DILocation(line: 318, column: 8, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 318, column: 8)
!2423 = !DILocation(line: 318, column: 17, scope: !2422)
!2424 = !DILocation(line: 318, column: 31, scope: !2422)
!2425 = !DILocation(line: 318, column: 36, scope: !2422)
!2426 = !DILocation(line: 318, column: 48, scope: !2422)
!2427 = !DILocation(line: 318, column: 53, scope: !2422)
!2428 = !DILocation(line: 318, column: 46, scope: !2422)
!2429 = !DILocation(line: 318, column: 29, scope: !2422)
!2430 = !DILocation(line: 318, column: 8, scope: !2241)
!2431 = !DILocation(line: 319, column: 6, scope: !2422)
!2432 = !DILocation(line: 320, column: 31, scope: !2241)
!2433 = !DILocation(line: 320, column: 36, scope: !2241)
!2434 = !DILocation(line: 320, column: 45, scope: !2241)
!2435 = !DILocation(line: 320, column: 50, scope: !2241)
!2436 = !DILocation(line: 320, column: 56, scope: !2241)
!2437 = !DILocation(line: 320, column: 61, scope: !2241)
!2438 = !DILocation(line: 320, column: 54, scope: !2241)
!2439 = !DILocation(line: 320, column: 11, scope: !2241)
!2440 = !DILocation(line: 320, column: 9, scope: !2241)
!2441 = !DILocation(line: 321, column: 22, scope: !2241)
!2442 = !DILocation(line: 321, column: 31, scope: !2241)
!2443 = !DILocation(line: 321, column: 4, scope: !2241)
!2444 = !DILocation(line: 321, column: 9, scope: !2241)
!2445 = !DILocation(line: 321, column: 19, scope: !2241)
!2446 = !DILocation(line: 322, column: 4, scope: !2241)
!2447 = !DILocation(line: 322, column: 9, scope: !2241)
!2448 = !DILocation(line: 322, column: 22, scope: !2241)
!2449 = !DILocation(line: 323, column: 8, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 323, column: 8)
!2451 = !DILocation(line: 323, column: 13, scope: !2450)
!2452 = !DILocation(line: 323, column: 19, scope: !2450)
!2453 = !DILocation(line: 323, column: 8, scope: !2241)
!2454 = !DILocation(line: 325, column: 12, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !87, line: 325, column: 12)
!2456 = distinct !DILexicalBlock(scope: !2450, file: !87, line: 324, column: 6)
!2457 = !DILocation(line: 325, column: 17, scope: !2455)
!2458 = !DILocation(line: 325, column: 34, scope: !2455)
!2459 = !DILocation(line: 325, column: 39, scope: !2455)
!2460 = !DILocation(line: 325, column: 31, scope: !2455)
!2461 = !DILocation(line: 325, column: 12, scope: !2456)
!2462 = !DILocation(line: 326, column: 3, scope: !2455)
!2463 = !DILocation(line: 326, column: 8, scope: !2455)
!2464 = !DILocation(line: 326, column: 14, scope: !2455)
!2465 = !DILocation(line: 327, column: 6, scope: !2456)
!2466 = !DILocation(line: 330, column: 8, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2450, file: !87, line: 329, column: 6)
!2468 = !DILocation(line: 330, column: 13, scope: !2467)
!2469 = !DILocation(line: 330, column: 19, scope: !2467)
!2470 = !DILocation(line: 332, column: 8, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 332, column: 8)
!2472 = !DILocation(line: 332, column: 13, scope: !2471)
!2473 = !DILocation(line: 332, column: 8, scope: !2241)
!2474 = !DILocation(line: 334, column: 8, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2471, file: !87, line: 333, column: 6)
!2476 = !DILocation(line: 334, column: 13, scope: !2475)
!2477 = !DILocation(line: 334, column: 19, scope: !2475)
!2478 = !DILocation(line: 335, column: 15, scope: !2475)
!2479 = !DILocation(line: 335, column: 8, scope: !2475)
!2480 = !DILocation(line: 337, column: 4, scope: !2241)
!2481 = !DILocation(line: 339, column: 8, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2241, file: !87, line: 339, column: 8)
!2483 = !DILocation(line: 339, column: 13, scope: !2482)
!2484 = !DILocation(line: 339, column: 26, scope: !2482)
!2485 = !DILocation(line: 339, column: 31, scope: !2482)
!2486 = !DILocation(line: 339, column: 23, scope: !2482)
!2487 = !DILocation(line: 339, column: 8, scope: !2241)
!2488 = !DILocation(line: 340, column: 6, scope: !2482)
!2489 = !DILocation(line: 341, column: 23, scope: !2241)
!2490 = !DILocation(line: 341, column: 11, scope: !2241)
!2491 = !DILocation(line: 341, column: 4, scope: !2241)
!2492 = !DILocation(line: 241, column: 3, scope: !2227)
!2493 = distinct !{!2493, !2494, !2495}
!2494 = !DILocation(line: 241, column: 3, scope: !2228)
!2495 = !DILocation(line: 344, column: 5, scope: !2228)
!2496 = !DILocation(line: 346, column: 1, scope: !2063)
!2497 = distinct !DISubprogram(name: "jbig2_ctx_free", scope: !87, file: !87, line: 349, type: !2498, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !106}
!2500 = !DILocalVariable(name: "ctx", arg: 1, scope: !2497, file: !87, line: 349, type: !106)
!2501 = !DILocation(line: 349, column: 27, scope: !2497)
!2502 = !DILocalVariable(name: "ca", scope: !2497, file: !87, line: 351, type: !111)
!2503 = !DILocation(line: 351, column: 19, scope: !2497)
!2504 = !DILocation(line: 351, column: 24, scope: !2497)
!2505 = !DILocation(line: 351, column: 29, scope: !2497)
!2506 = !DILocalVariable(name: "i", scope: !2497, file: !87, line: 352, type: !6)
!2507 = !DILocation(line: 352, column: 7, scope: !2497)
!2508 = !DILocation(line: 354, column: 14, scope: !2497)
!2509 = !DILocation(line: 354, column: 18, scope: !2497)
!2510 = !DILocation(line: 354, column: 23, scope: !2497)
!2511 = !DILocation(line: 354, column: 3, scope: !2497)
!2512 = !DILocation(line: 355, column: 7, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2497, file: !87, line: 355, column: 7)
!2514 = !DILocation(line: 355, column: 12, scope: !2513)
!2515 = !DILocation(line: 355, column: 21, scope: !2513)
!2516 = !DILocation(line: 355, column: 7, scope: !2497)
!2517 = !DILocation(line: 356, column: 12, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !87, line: 356, column: 5)
!2519 = distinct !DILexicalBlock(scope: !2513, file: !87, line: 355, column: 30)
!2520 = !DILocation(line: 356, column: 10, scope: !2518)
!2521 = !DILocation(line: 356, column: 17, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !87, line: 356, column: 5)
!2523 = !DILocation(line: 356, column: 21, scope: !2522)
!2524 = !DILocation(line: 356, column: 26, scope: !2522)
!2525 = !DILocation(line: 356, column: 19, scope: !2522)
!2526 = !DILocation(line: 356, column: 5, scope: !2518)
!2527 = !DILocation(line: 357, column: 26, scope: !2522)
!2528 = !DILocation(line: 357, column: 31, scope: !2522)
!2529 = !DILocation(line: 357, column: 36, scope: !2522)
!2530 = !DILocation(line: 357, column: 45, scope: !2522)
!2531 = !DILocation(line: 357, column: 7, scope: !2522)
!2532 = !DILocation(line: 356, column: 39, scope: !2522)
!2533 = !DILocation(line: 356, column: 5, scope: !2522)
!2534 = distinct !{!2534, !2526, !2535}
!2535 = !DILocation(line: 357, column: 47, scope: !2518)
!2536 = !DILocation(line: 358, column: 16, scope: !2519)
!2537 = !DILocation(line: 358, column: 20, scope: !2519)
!2538 = !DILocation(line: 358, column: 25, scope: !2519)
!2539 = !DILocation(line: 358, column: 5, scope: !2519)
!2540 = !DILocation(line: 359, column: 3, scope: !2519)
!2541 = !DILocation(line: 361, column: 7, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2497, file: !87, line: 361, column: 7)
!2543 = !DILocation(line: 361, column: 12, scope: !2542)
!2544 = !DILocation(line: 361, column: 18, scope: !2542)
!2545 = !DILocation(line: 361, column: 7, scope: !2497)
!2546 = !DILocation(line: 362, column: 12, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2548, file: !87, line: 362, column: 5)
!2548 = distinct !DILexicalBlock(scope: !2542, file: !87, line: 361, column: 27)
!2549 = !DILocation(line: 362, column: 10, scope: !2547)
!2550 = !DILocation(line: 362, column: 17, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2547, file: !87, line: 362, column: 5)
!2552 = !DILocation(line: 362, column: 22, scope: !2551)
!2553 = !DILocation(line: 362, column: 27, scope: !2551)
!2554 = !DILocation(line: 362, column: 19, scope: !2551)
!2555 = !DILocation(line: 362, column: 5, scope: !2547)
!2556 = !DILocation(line: 363, column: 11, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2551, file: !87, line: 363, column: 11)
!2558 = !DILocation(line: 363, column: 16, scope: !2557)
!2559 = !DILocation(line: 363, column: 22, scope: !2557)
!2560 = !DILocation(line: 363, column: 25, scope: !2557)
!2561 = !DILocation(line: 363, column: 31, scope: !2557)
!2562 = !DILocation(line: 363, column: 11, scope: !2551)
!2563 = !DILocation(line: 364, column: 22, scope: !2557)
!2564 = !DILocation(line: 364, column: 27, scope: !2557)
!2565 = !DILocation(line: 364, column: 32, scope: !2557)
!2566 = !DILocation(line: 364, column: 38, scope: !2557)
!2567 = !DILocation(line: 364, column: 41, scope: !2557)
!2568 = !DILocation(line: 364, column: 2, scope: !2557)
!2569 = !DILocation(line: 363, column: 34, scope: !2557)
!2570 = !DILocation(line: 362, column: 42, scope: !2551)
!2571 = !DILocation(line: 362, column: 5, scope: !2551)
!2572 = distinct !{!2572, !2555, !2573}
!2573 = !DILocation(line: 364, column: 46, scope: !2547)
!2574 = !DILocation(line: 365, column: 16, scope: !2548)
!2575 = !DILocation(line: 365, column: 20, scope: !2548)
!2576 = !DILocation(line: 365, column: 25, scope: !2548)
!2577 = !DILocation(line: 365, column: 5, scope: !2548)
!2578 = !DILocation(line: 366, column: 3, scope: !2548)
!2579 = !DILocation(line: 368, column: 14, scope: !2497)
!2580 = !DILocation(line: 368, column: 18, scope: !2497)
!2581 = !DILocation(line: 368, column: 3, scope: !2497)
!2582 = !DILocation(line: 369, column: 1, scope: !2497)
!2583 = distinct !DISubprogram(name: "jbig2_make_global_ctx", scope: !87, file: !87, line: 371, type: !2584, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!202, !106}
!2586 = !DILocalVariable(name: "ctx", arg: 1, scope: !2583, file: !87, line: 371, type: !106)
!2587 = !DILocation(line: 371, column: 50, scope: !2583)
!2588 = !DILocation(line: 373, column: 28, scope: !2583)
!2589 = !DILocation(line: 373, column: 10, scope: !2583)
!2590 = !DILocation(line: 373, column: 3, scope: !2583)
!2591 = distinct !DISubprogram(name: "jbig2_global_ctx_free", scope: !87, file: !87, line: 376, type: !2592, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{null, !202}
!2594 = !DILocalVariable(name: "global_ctx", arg: 1, scope: !2591, file: !87, line: 376, type: !202)
!2595 = !DILocation(line: 376, column: 44, scope: !2591)
!2596 = !DILocation(line: 378, column: 30, scope: !2591)
!2597 = !DILocation(line: 378, column: 18, scope: !2591)
!2598 = !DILocation(line: 378, column: 3, scope: !2591)
!2599 = !DILocation(line: 379, column: 1, scope: !2591)
!2600 = distinct !DISubprogram(name: "jbig2_word_stream_buf_new", scope: !87, file: !87, line: 417, type: !2601, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!217, !106, !219, !119}
!2603 = !DILocalVariable(name: "ctx", arg: 1, scope: !2600, file: !87, line: 417, type: !106)
!2604 = !DILocation(line: 417, column: 37, scope: !2600)
!2605 = !DILocalVariable(name: "data", arg: 2, scope: !2600, file: !87, line: 417, type: !219)
!2606 = !DILocation(line: 417, column: 54, scope: !2600)
!2607 = !DILocalVariable(name: "size", arg: 3, scope: !2600, file: !87, line: 417, type: !119)
!2608 = !DILocation(line: 417, column: 67, scope: !2600)
!2609 = !DILocalVariable(name: "result", scope: !2600, file: !87, line: 419, type: !205)
!2610 = !DILocation(line: 419, column: 23, scope: !2600)
!2611 = !DILocation(line: 419, column: 66, scope: !2600)
!2612 = !DILocation(line: 419, column: 71, scope: !2600)
!2613 = !DILocation(line: 419, column: 54, scope: !2600)
!2614 = !DILocation(line: 419, column: 32, scope: !2600)
!2615 = !DILocation(line: 421, column: 3, scope: !2600)
!2616 = !DILocation(line: 421, column: 11, scope: !2600)
!2617 = !DILocation(line: 421, column: 17, scope: !2600)
!2618 = !DILocation(line: 421, column: 31, scope: !2600)
!2619 = !DILocation(line: 422, column: 18, scope: !2600)
!2620 = !DILocation(line: 422, column: 3, scope: !2600)
!2621 = !DILocation(line: 422, column: 11, scope: !2600)
!2622 = !DILocation(line: 422, column: 16, scope: !2600)
!2623 = !DILocation(line: 423, column: 18, scope: !2600)
!2624 = !DILocation(line: 423, column: 3, scope: !2600)
!2625 = !DILocation(line: 423, column: 11, scope: !2600)
!2626 = !DILocation(line: 423, column: 16, scope: !2600)
!2627 = !DILocation(line: 425, column: 11, scope: !2600)
!2628 = !DILocation(line: 425, column: 19, scope: !2600)
!2629 = !DILocation(line: 425, column: 3, scope: !2600)
!2630 = distinct !DISubprogram(name: "jbig2_word_stream_buf_get_next_word", scope: !87, file: !87, line: 394, type: !215, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2631 = !DILocalVariable(name: "self", arg: 1, scope: !2630, file: !87, line: 394, type: !217)
!2632 = !DILocation(line: 394, column: 54, scope: !2630)
!2633 = !DILocalVariable(name: "offset", arg: 2, scope: !2630, file: !87, line: 394, type: !6)
!2634 = !DILocation(line: 394, column: 64, scope: !2630)
!2635 = !DILocalVariable(name: "z", scope: !2630, file: !87, line: 396, type: !205)
!2636 = !DILocation(line: 396, column: 23, scope: !2630)
!2637 = !DILocation(line: 396, column: 49, scope: !2630)
!2638 = !DILocation(line: 396, column: 27, scope: !2630)
!2639 = !DILocalVariable(name: "data", scope: !2630, file: !87, line: 397, type: !219)
!2640 = !DILocation(line: 397, column: 15, scope: !2630)
!2641 = !DILocation(line: 397, column: 22, scope: !2630)
!2642 = !DILocation(line: 397, column: 25, scope: !2630)
!2643 = !DILocalVariable(name: "result", scope: !2630, file: !87, line: 398, type: !32)
!2644 = !DILocation(line: 398, column: 12, scope: !2630)
!2645 = !DILocation(line: 400, column: 7, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2630, file: !87, line: 400, column: 7)
!2647 = !DILocation(line: 400, column: 14, scope: !2646)
!2648 = !DILocation(line: 400, column: 20, scope: !2646)
!2649 = !DILocation(line: 400, column: 23, scope: !2646)
!2650 = !DILocation(line: 400, column: 18, scope: !2646)
!2651 = !DILocation(line: 400, column: 7, scope: !2630)
!2652 = !DILocation(line: 401, column: 15, scope: !2646)
!2653 = !DILocation(line: 401, column: 20, scope: !2646)
!2654 = !DILocation(line: 401, column: 28, scope: !2646)
!2655 = !DILocation(line: 401, column: 38, scope: !2646)
!2656 = !DILocation(line: 401, column: 43, scope: !2646)
!2657 = !DILocation(line: 401, column: 50, scope: !2646)
!2658 = !DILocation(line: 401, column: 55, scope: !2646)
!2659 = !DILocation(line: 401, column: 35, scope: !2646)
!2660 = !DILocation(line: 402, column: 8, scope: !2646)
!2661 = !DILocation(line: 402, column: 13, scope: !2646)
!2662 = !DILocation(line: 402, column: 20, scope: !2646)
!2663 = !DILocation(line: 402, column: 25, scope: !2646)
!2664 = !DILocation(line: 401, column: 62, scope: !2646)
!2665 = !DILocation(line: 402, column: 33, scope: !2646)
!2666 = !DILocation(line: 402, column: 38, scope: !2646)
!2667 = !DILocation(line: 402, column: 45, scope: !2646)
!2668 = !DILocation(line: 402, column: 31, scope: !2646)
!2669 = !DILocation(line: 401, column: 12, scope: !2646)
!2670 = !DILocation(line: 401, column: 5, scope: !2646)
!2671 = !DILocation(line: 403, column: 12, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2646, file: !87, line: 403, column: 12)
!2673 = !DILocation(line: 403, column: 22, scope: !2672)
!2674 = !DILocation(line: 403, column: 25, scope: !2672)
!2675 = !DILocation(line: 403, column: 19, scope: !2672)
!2676 = !DILocation(line: 403, column: 12, scope: !2646)
!2677 = !DILocation(line: 404, column: 5, scope: !2672)
!2678 = !DILocalVariable(name: "i", scope: !2679, file: !87, line: 407, type: !6)
!2679 = distinct !DILexicalBlock(scope: !2672, file: !87, line: 406, column: 5)
!2680 = !DILocation(line: 407, column: 11, scope: !2679)
!2681 = !DILocation(line: 409, column: 14, scope: !2679)
!2682 = !DILocation(line: 410, column: 14, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2679, file: !87, line: 410, column: 7)
!2684 = !DILocation(line: 410, column: 12, scope: !2683)
!2685 = !DILocation(line: 410, column: 19, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2683, file: !87, line: 410, column: 7)
!2687 = !DILocation(line: 410, column: 23, scope: !2686)
!2688 = !DILocation(line: 410, column: 26, scope: !2686)
!2689 = !DILocation(line: 410, column: 33, scope: !2686)
!2690 = !DILocation(line: 410, column: 31, scope: !2686)
!2691 = !DILocation(line: 410, column: 21, scope: !2686)
!2692 = !DILocation(line: 410, column: 7, scope: !2683)
!2693 = !DILocation(line: 411, column: 12, scope: !2686)
!2694 = !DILocation(line: 411, column: 17, scope: !2686)
!2695 = !DILocation(line: 411, column: 26, scope: !2686)
!2696 = !DILocation(line: 411, column: 24, scope: !2686)
!2697 = !DILocation(line: 411, column: 38, scope: !2686)
!2698 = !DILocation(line: 411, column: 36, scope: !2686)
!2699 = !DILocation(line: 411, column: 41, scope: !2686)
!2700 = !DILocation(line: 411, column: 29, scope: !2686)
!2701 = !DILocation(line: 411, column: 9, scope: !2686)
!2702 = !DILocation(line: 411, column: 2, scope: !2686)
!2703 = !DILocation(line: 410, column: 42, scope: !2686)
!2704 = !DILocation(line: 410, column: 7, scope: !2686)
!2705 = distinct !{!2705, !2692, !2706}
!2706 = !DILocation(line: 411, column: 45, scope: !2683)
!2707 = !DILocation(line: 413, column: 10, scope: !2630)
!2708 = !DILocation(line: 413, column: 3, scope: !2630)
!2709 = !DILocation(line: 414, column: 1, scope: !2630)
!2710 = distinct !DISubprogram(name: "jbig2_word_stream_buf_free", scope: !87, file: !87, line: 429, type: !2711, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !86, retainedNodes: !70)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{null, !106, !217}
!2713 = !DILocalVariable(name: "ctx", arg: 1, scope: !2710, file: !87, line: 429, type: !106)
!2714 = !DILocation(line: 429, column: 38, scope: !2710)
!2715 = !DILocalVariable(name: "ws", arg: 2, scope: !2710, file: !87, line: 429, type: !217)
!2716 = !DILocation(line: 429, column: 60, scope: !2710)
!2717 = !DILocation(line: 431, column: 14, scope: !2710)
!2718 = !DILocation(line: 431, column: 19, scope: !2710)
!2719 = !DILocation(line: 431, column: 30, scope: !2710)
!2720 = !DILocation(line: 431, column: 3, scope: !2710)
!2721 = !DILocation(line: 432, column: 1, scope: !2710)
!2722 = distinct !DISubprogram(name: "jbig2_parse_segment_header", scope: !441, file: !441, line: 32, type: !2723, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !440, retainedNodes: !70)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!451, !2725, !200, !119, !2791}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !2728)
!2728 = !{!2729, !2746, !2747, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2762, !2763, !2764, !2765, !2766}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !2727, file: !90, line: 45, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !2732)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !2733)
!2733 = !{!2734, !2738, !2742}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2732, file: !58, line: 86, baseType: !2735, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!68, !2730, !119}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2732, file: !58, line: 87, baseType: !2739, size: 64, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{null, !2730, !68}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !2732, file: !58, line: 88, baseType: !2743, size: 64, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!68, !2730, !68, !119}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !2727, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !2727, file: !90, line: 47, baseType: !2748, size: 64, offset: 128)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2726)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !2727, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !2727, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2727, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !2727, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !2727, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !2727, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2727, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !2727, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !2727, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !2727, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2727, file: !90, line: 62, baseType: !2761, size: 64, offset: 640)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !2727, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !2727, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !2727, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !2727, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2727, file: !90, line: 70, baseType: !2767, size: 64, offset: 832)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !2769)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !2770)
!2770 = !{!2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2769, file: !90, line: 111, baseType: !178, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !2769, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2769, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2769, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !2769, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !2769, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !2769, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !2769, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !2769, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2769, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2769, file: !90, line: 120, baseType: !2782, size: 64, offset: 320)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789, !2790}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2784, file: !58, line: 57, baseType: !6, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2784, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2784, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2784, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2784, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!2792 = !DILocalVariable(name: "ctx", arg: 1, scope: !2722, file: !441, line: 32, type: !2725)
!2793 = !DILocation(line: 32, column: 39, scope: !2722)
!2794 = !DILocalVariable(name: "buf", arg: 2, scope: !2722, file: !441, line: 32, type: !200)
!2795 = !DILocation(line: 32, column: 53, scope: !2722)
!2796 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2722, file: !441, line: 32, type: !119)
!2797 = !DILocation(line: 32, column: 65, scope: !2722)
!2798 = !DILocalVariable(name: "p_header_size", arg: 4, scope: !2722, file: !441, line: 33, type: !2791)
!2799 = !DILocation(line: 33, column: 16, scope: !2722)
!2800 = !DILocalVariable(name: "result", scope: !2722, file: !441, line: 35, type: !451)
!2801 = !DILocation(line: 35, column: 17, scope: !2722)
!2802 = !DILocalVariable(name: "rtscarf", scope: !2722, file: !441, line: 36, type: !42)
!2803 = !DILocation(line: 36, column: 11, scope: !2722)
!2804 = !DILocalVariable(name: "rtscarf_long", scope: !2722, file: !441, line: 37, type: !32)
!2805 = !DILocation(line: 37, column: 12, scope: !2722)
!2806 = !DILocalVariable(name: "referred_to_segments", scope: !2722, file: !441, line: 38, type: !166)
!2807 = !DILocation(line: 38, column: 13, scope: !2722)
!2808 = !DILocalVariable(name: "referred_to_segment_count", scope: !2722, file: !441, line: 39, type: !6)
!2809 = !DILocation(line: 39, column: 7, scope: !2722)
!2810 = !DILocalVariable(name: "referred_to_segment_size", scope: !2722, file: !441, line: 40, type: !6)
!2811 = !DILocation(line: 40, column: 7, scope: !2722)
!2812 = !DILocalVariable(name: "pa_size", scope: !2722, file: !441, line: 41, type: !6)
!2813 = !DILocation(line: 41, column: 7, scope: !2722)
!2814 = !DILocalVariable(name: "offset", scope: !2722, file: !441, line: 42, type: !6)
!2815 = !DILocation(line: 42, column: 7, scope: !2722)
!2816 = !DILocation(line: 45, column: 7, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2722, file: !441, line: 45, column: 7)
!2818 = !DILocation(line: 45, column: 16, scope: !2817)
!2819 = !DILocation(line: 45, column: 7, scope: !2722)
!2820 = !DILocation(line: 46, column: 5, scope: !2817)
!2821 = !DILocation(line: 48, column: 40, scope: !2722)
!2822 = !DILocation(line: 48, column: 45, scope: !2722)
!2823 = !DILocation(line: 48, column: 28, scope: !2722)
!2824 = !DILocation(line: 48, column: 12, scope: !2722)
!2825 = !DILocation(line: 48, column: 10, scope: !2722)
!2826 = !DILocation(line: 52, column: 36, scope: !2722)
!2827 = !DILocation(line: 52, column: 20, scope: !2722)
!2828 = !DILocation(line: 52, column: 3, scope: !2722)
!2829 = !DILocation(line: 52, column: 11, scope: !2722)
!2830 = !DILocation(line: 52, column: 18, scope: !2722)
!2831 = !DILocation(line: 55, column: 19, scope: !2722)
!2832 = !DILocation(line: 55, column: 3, scope: !2722)
!2833 = !DILocation(line: 55, column: 11, scope: !2722)
!2834 = !DILocation(line: 55, column: 17, scope: !2722)
!2835 = !DILocation(line: 58, column: 13, scope: !2722)
!2836 = !DILocation(line: 58, column: 11, scope: !2722)
!2837 = !DILocation(line: 59, column: 8, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2722, file: !441, line: 59, column: 7)
!2839 = !DILocation(line: 59, column: 16, scope: !2838)
!2840 = !DILocation(line: 59, column: 24, scope: !2838)
!2841 = !DILocation(line: 59, column: 7, scope: !2722)
!2842 = !DILocation(line: 61, column: 38, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2838, file: !441, line: 60, column: 5)
!2844 = !DILocation(line: 61, column: 42, scope: !2843)
!2845 = !DILocation(line: 61, column: 22, scope: !2843)
!2846 = !DILocation(line: 61, column: 20, scope: !2843)
!2847 = !DILocation(line: 62, column: 35, scope: !2843)
!2848 = !DILocation(line: 62, column: 48, scope: !2843)
!2849 = !DILocation(line: 62, column: 33, scope: !2843)
!2850 = !DILocation(line: 63, column: 25, scope: !2843)
!2851 = !DILocation(line: 63, column: 51, scope: !2843)
!2852 = !DILocation(line: 63, column: 56, scope: !2843)
!2853 = !DILocation(line: 63, column: 22, scope: !2843)
!2854 = !DILocation(line: 63, column: 14, scope: !2843)
!2855 = !DILocation(line: 64, column: 5, scope: !2843)
!2856 = !DILocation(line: 67, column: 36, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2838, file: !441, line: 66, column: 5)
!2858 = !DILocation(line: 67, column: 44, scope: !2857)
!2859 = !DILocation(line: 67, column: 33, scope: !2857)
!2860 = !DILocation(line: 68, column: 14, scope: !2857)
!2861 = !DILocation(line: 70, column: 39, scope: !2722)
!2862 = !DILocation(line: 70, column: 3, scope: !2722)
!2863 = !DILocation(line: 70, column: 11, scope: !2722)
!2864 = !DILocation(line: 70, column: 37, scope: !2722)
!2865 = !DILocation(line: 73, column: 30, scope: !2722)
!2866 = !DILocation(line: 73, column: 38, scope: !2722)
!2867 = !DILocation(line: 73, column: 45, scope: !2722)
!2868 = !DILocation(line: 74, column: 9, scope: !2722)
!2869 = !DILocation(line: 74, column: 17, scope: !2722)
!2870 = !DILocation(line: 74, column: 24, scope: !2722)
!2871 = !DILocation(line: 73, column: 28, scope: !2722)
!2872 = !DILocation(line: 75, column: 13, scope: !2722)
!2873 = !DILocation(line: 75, column: 21, scope: !2722)
!2874 = !DILocation(line: 75, column: 27, scope: !2722)
!2875 = !DILocation(line: 75, column: 11, scope: !2722)
!2876 = !DILocation(line: 76, column: 7, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2722, file: !441, line: 76, column: 7)
!2878 = !DILocation(line: 76, column: 16, scope: !2877)
!2879 = !DILocation(line: 76, column: 42, scope: !2877)
!2880 = !DILocation(line: 76, column: 41, scope: !2877)
!2881 = !DILocation(line: 76, column: 14, scope: !2877)
!2882 = !DILocation(line: 76, column: 69, scope: !2877)
!2883 = !DILocation(line: 76, column: 67, scope: !2877)
!2884 = !DILocation(line: 76, column: 77, scope: !2877)
!2885 = !DILocation(line: 76, column: 83, scope: !2877)
!2886 = !DILocation(line: 76, column: 81, scope: !2877)
!2887 = !DILocation(line: 76, column: 7, scope: !2722)
!2888 = !DILocation(line: 78, column: 19, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2877, file: !441, line: 77, column: 5)
!2890 = !DILocation(line: 78, column: 46, scope: !2889)
!2891 = !DILocation(line: 78, column: 54, scope: !2889)
!2892 = !DILocation(line: 78, column: 7, scope: !2889)
!2893 = !DILocation(line: 80, column: 19, scope: !2889)
!2894 = !DILocation(line: 80, column: 24, scope: !2889)
!2895 = !DILocation(line: 80, column: 35, scope: !2889)
!2896 = !DILocation(line: 80, column: 7, scope: !2889)
!2897 = !DILocation(line: 81, column: 7, scope: !2889)
!2898 = !DILocation(line: 85, column: 7, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2722, file: !441, line: 85, column: 7)
!2900 = !DILocation(line: 85, column: 7, scope: !2722)
!2901 = !DILocalVariable(name: "i", scope: !2902, file: !441, line: 87, type: !6)
!2902 = distinct !DILexicalBlock(scope: !2899, file: !441, line: 86, column: 5)
!2903 = !DILocation(line: 87, column: 11, scope: !2902)
!2904 = !DILocation(line: 89, column: 42, scope: !2902)
!2905 = !DILocation(line: 89, column: 47, scope: !2902)
!2906 = !DILocation(line: 89, column: 58, scope: !2902)
!2907 = !DILocation(line: 89, column: 86, scope: !2902)
!2908 = !DILocation(line: 89, column: 84, scope: !2902)
!2909 = !DILocation(line: 89, column: 111, scope: !2902)
!2910 = !DILocation(line: 89, column: 30, scope: !2902)
!2911 = !DILocation(line: 89, column: 28, scope: !2902)
!2912 = !DILocation(line: 91, column: 14, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2902, file: !441, line: 91, column: 7)
!2914 = !DILocation(line: 91, column: 12, scope: !2913)
!2915 = !DILocation(line: 91, column: 19, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2913, file: !441, line: 91, column: 7)
!2917 = !DILocation(line: 91, column: 23, scope: !2916)
!2918 = !DILocation(line: 91, column: 21, scope: !2916)
!2919 = !DILocation(line: 91, column: 7, scope: !2913)
!2920 = !DILocation(line: 93, column: 12, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2916, file: !441, line: 91, column: 55)
!2922 = !DILocation(line: 93, column: 37, scope: !2921)
!2923 = !DILocation(line: 93, column: 11, scope: !2921)
!2924 = !DILocation(line: 93, column: 45, scope: !2921)
!2925 = !DILocation(line: 93, column: 49, scope: !2921)
!2926 = !DILocation(line: 94, column: 12, scope: !2921)
!2927 = !DILocation(line: 94, column: 37, scope: !2921)
!2928 = !DILocation(line: 94, column: 11, scope: !2921)
!2929 = !DILocation(line: 94, column: 61, scope: !2921)
!2930 = !DILocation(line: 94, column: 65, scope: !2921)
!2931 = !DILocation(line: 94, column: 64, scope: !2921)
!2932 = !DILocation(line: 94, column: 45, scope: !2921)
!2933 = !DILocation(line: 95, column: 29, scope: !2921)
!2934 = !DILocation(line: 95, column: 35, scope: !2921)
!2935 = !DILocation(line: 95, column: 33, scope: !2921)
!2936 = !DILocation(line: 95, column: 13, scope: !2921)
!2937 = !DILocation(line: 92, column: 9, scope: !2921)
!2938 = !DILocation(line: 92, column: 30, scope: !2921)
!2939 = !DILocation(line: 92, column: 33, scope: !2921)
!2940 = !DILocation(line: 96, column: 19, scope: !2921)
!2941 = !DILocation(line: 96, column: 16, scope: !2921)
!2942 = !DILocation(line: 97, column: 21, scope: !2921)
!2943 = !DILocation(line: 97, column: 48, scope: !2921)
!2944 = !DILocation(line: 97, column: 56, scope: !2921)
!2945 = !DILocation(line: 99, column: 13, scope: !2921)
!2946 = !DILocation(line: 99, column: 21, scope: !2921)
!2947 = !DILocation(line: 99, column: 29, scope: !2921)
!2948 = !DILocation(line: 99, column: 50, scope: !2921)
!2949 = !DILocation(line: 97, column: 9, scope: !2921)
!2950 = !DILocation(line: 100, column: 7, scope: !2921)
!2951 = !DILocation(line: 91, column: 51, scope: !2916)
!2952 = !DILocation(line: 91, column: 7, scope: !2916)
!2953 = distinct !{!2953, !2919, !2954}
!2954 = !DILocation(line: 100, column: 7, scope: !2913)
!2955 = !DILocation(line: 101, column: 38, scope: !2902)
!2956 = !DILocation(line: 101, column: 7, scope: !2902)
!2957 = !DILocation(line: 101, column: 15, scope: !2902)
!2958 = !DILocation(line: 101, column: 36, scope: !2902)
!2959 = !DILocation(line: 102, column: 5, scope: !2902)
!2960 = !DILocation(line: 105, column: 7, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2899, file: !441, line: 104, column: 5)
!2962 = !DILocation(line: 105, column: 15, scope: !2961)
!2963 = !DILocation(line: 105, column: 36, scope: !2961)
!2964 = !DILocation(line: 109, column: 7, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2722, file: !441, line: 109, column: 7)
!2966 = !DILocation(line: 109, column: 15, scope: !2965)
!2967 = !DILocation(line: 109, column: 21, scope: !2965)
!2968 = !DILocation(line: 109, column: 7, scope: !2722)
!2969 = !DILocation(line: 110, column: 45, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2965, file: !441, line: 109, column: 29)
!2971 = !DILocation(line: 110, column: 51, scope: !2970)
!2972 = !DILocation(line: 110, column: 49, scope: !2970)
!2973 = !DILocation(line: 110, column: 29, scope: !2970)
!2974 = !DILocation(line: 110, column: 2, scope: !2970)
!2975 = !DILocation(line: 110, column: 10, scope: !2970)
!2976 = !DILocation(line: 110, column: 27, scope: !2970)
!2977 = !DILocation(line: 111, column: 9, scope: !2970)
!2978 = !DILocation(line: 112, column: 3, scope: !2970)
!2979 = !DILocation(line: 113, column: 29, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2965, file: !441, line: 112, column: 10)
!2981 = !DILocation(line: 113, column: 39, scope: !2980)
!2982 = !DILocation(line: 113, column: 2, scope: !2980)
!2983 = !DILocation(line: 113, column: 10, scope: !2980)
!2984 = !DILocation(line: 113, column: 27, scope: !2980)
!2985 = !DILocation(line: 115, column: 15, scope: !2722)
!2986 = !DILocation(line: 115, column: 42, scope: !2722)
!2987 = !DILocation(line: 115, column: 50, scope: !2722)
!2988 = !DILocation(line: 117, column: 4, scope: !2722)
!2989 = !DILocation(line: 117, column: 12, scope: !2722)
!2990 = !DILocation(line: 117, column: 20, scope: !2722)
!2991 = !DILocation(line: 117, column: 28, scope: !2722)
!2992 = !DILocation(line: 115, column: 3, scope: !2722)
!2993 = !DILocation(line: 120, column: 41, scope: !2722)
!2994 = !DILocation(line: 120, column: 47, scope: !2722)
!2995 = !DILocation(line: 120, column: 45, scope: !2722)
!2996 = !DILocation(line: 120, column: 25, scope: !2722)
!2997 = !DILocation(line: 120, column: 3, scope: !2722)
!2998 = !DILocation(line: 120, column: 11, scope: !2722)
!2999 = !DILocation(line: 120, column: 23, scope: !2722)
!3000 = !DILocation(line: 121, column: 20, scope: !2722)
!3001 = !DILocation(line: 121, column: 27, scope: !2722)
!3002 = !DILocation(line: 121, column: 4, scope: !2722)
!3003 = !DILocation(line: 121, column: 18, scope: !2722)
!3004 = !DILocation(line: 124, column: 3, scope: !2722)
!3005 = !DILocation(line: 124, column: 11, scope: !2722)
!3006 = !DILocation(line: 124, column: 18, scope: !2722)
!3007 = !DILocation(line: 126, column: 10, scope: !2722)
!3008 = !DILocation(line: 126, column: 3, scope: !2722)
!3009 = !DILocation(line: 127, column: 1, scope: !2722)
!3010 = distinct !DISubprogram(name: "jbig2_free_segment", scope: !441, file: !441, line: 130, type: !3011, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !440, retainedNodes: !70)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{null, !2725, !451}
!3013 = !DILocalVariable(name: "ctx", arg: 1, scope: !3010, file: !441, line: 130, type: !2725)
!3014 = !DILocation(line: 130, column: 31, scope: !3010)
!3015 = !DILocalVariable(name: "segment", arg: 2, scope: !3010, file: !441, line: 130, type: !451)
!3016 = !DILocation(line: 130, column: 50, scope: !3010)
!3017 = !DILocation(line: 132, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3010, file: !441, line: 132, column: 7)
!3019 = !DILocation(line: 132, column: 16, scope: !3018)
!3020 = !DILocation(line: 132, column: 37, scope: !3018)
!3021 = !DILocation(line: 132, column: 7, scope: !3010)
!3022 = !DILocation(line: 133, column: 16, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3018, file: !441, line: 132, column: 46)
!3024 = !DILocation(line: 133, column: 21, scope: !3023)
!3025 = !DILocation(line: 133, column: 32, scope: !3023)
!3026 = !DILocation(line: 133, column: 41, scope: !3023)
!3027 = !DILocation(line: 133, column: 5, scope: !3023)
!3028 = !DILocation(line: 134, column: 3, scope: !3023)
!3029 = !DILocation(line: 138, column: 13, scope: !3010)
!3030 = !DILocation(line: 138, column: 22, scope: !3010)
!3031 = !DILocation(line: 138, column: 28, scope: !3010)
!3032 = !DILocation(line: 138, column: 5, scope: !3010)
!3033 = !DILocation(line: 140, column: 21, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3010, file: !441, line: 138, column: 34)
!3035 = !DILocation(line: 140, column: 26, scope: !3034)
!3036 = !DILocation(line: 140, column: 35, scope: !3034)
!3037 = !DILocation(line: 140, column: 4, scope: !3034)
!3038 = !DILocation(line: 141, column: 4, scope: !3034)
!3039 = !DILocation(line: 144, column: 8, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3034, file: !441, line: 144, column: 8)
!3041 = !DILocation(line: 144, column: 17, scope: !3040)
!3042 = !DILocation(line: 144, column: 24, scope: !3040)
!3043 = !DILocation(line: 144, column: 8, scope: !3034)
!3044 = !DILocation(line: 145, column: 26, scope: !3040)
!3045 = !DILocation(line: 145, column: 31, scope: !3040)
!3046 = !DILocation(line: 145, column: 40, scope: !3040)
!3047 = !DILocation(line: 145, column: 6, scope: !3040)
!3048 = !DILocation(line: 146, column: 4, scope: !3034)
!3049 = !DILocation(line: 148, column: 24, scope: !3034)
!3050 = !DILocation(line: 148, column: 29, scope: !3034)
!3051 = !DILocation(line: 148, column: 38, scope: !3034)
!3052 = !DILocation(line: 148, column: 4, scope: !3034)
!3053 = !DILocation(line: 149, column: 4, scope: !3034)
!3054 = !DILocation(line: 152, column: 4, scope: !3034)
!3055 = !DILocation(line: 154, column: 15, scope: !3010)
!3056 = !DILocation(line: 154, column: 20, scope: !3010)
!3057 = !DILocation(line: 154, column: 31, scope: !3010)
!3058 = !DILocation(line: 154, column: 3, scope: !3010)
!3059 = !DILocation(line: 155, column: 1, scope: !3010)
!3060 = distinct !DISubprogram(name: "jbig2_find_segment", scope: !441, file: !441, line: 159, type: !3061, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !440, retainedNodes: !70)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!451, !2725, !32}
!3063 = !DILocalVariable(name: "ctx", arg: 1, scope: !3060, file: !441, line: 159, type: !2725)
!3064 = !DILocation(line: 159, column: 30, scope: !3060)
!3065 = !DILocalVariable(name: "number", arg: 2, scope: !3060, file: !441, line: 159, type: !32)
!3066 = !DILocation(line: 159, column: 44, scope: !3060)
!3067 = !DILocalVariable(name: "index", scope: !3060, file: !441, line: 161, type: !6)
!3068 = !DILocation(line: 161, column: 9, scope: !3060)
!3069 = !DILocalVariable(name: "index_max", scope: !3060, file: !441, line: 161, type: !6)
!3070 = !DILocation(line: 161, column: 16, scope: !3060)
!3071 = !DILocation(line: 161, column: 28, scope: !3060)
!3072 = !DILocation(line: 161, column: 33, scope: !3060)
!3073 = !DILocation(line: 161, column: 47, scope: !3060)
!3074 = !DILocalVariable(name: "global_ctx", scope: !3060, file: !441, line: 162, type: !2748)
!3075 = !DILocation(line: 162, column: 21, scope: !3060)
!3076 = !DILocation(line: 162, column: 34, scope: !3060)
!3077 = !DILocation(line: 162, column: 39, scope: !3060)
!3078 = !DILocation(line: 165, column: 18, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3060, file: !441, line: 165, column: 5)
!3080 = !DILocation(line: 165, column: 16, scope: !3079)
!3081 = !DILocation(line: 165, column: 10, scope: !3079)
!3082 = !DILocation(line: 165, column: 29, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3079, file: !441, line: 165, column: 5)
!3084 = !DILocation(line: 165, column: 35, scope: !3083)
!3085 = !DILocation(line: 165, column: 5, scope: !3079)
!3086 = !DILocation(line: 166, column: 13, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3083, file: !441, line: 166, column: 13)
!3088 = !DILocation(line: 166, column: 18, scope: !3087)
!3089 = !DILocation(line: 166, column: 27, scope: !3087)
!3090 = !DILocation(line: 166, column: 35, scope: !3087)
!3091 = !DILocation(line: 166, column: 45, scope: !3087)
!3092 = !DILocation(line: 166, column: 42, scope: !3087)
!3093 = !DILocation(line: 166, column: 13, scope: !3083)
!3094 = !DILocation(line: 167, column: 21, scope: !3087)
!3095 = !DILocation(line: 167, column: 26, scope: !3087)
!3096 = !DILocation(line: 167, column: 35, scope: !3087)
!3097 = !DILocation(line: 167, column: 13, scope: !3087)
!3098 = !DILocation(line: 165, column: 46, scope: !3083)
!3099 = !DILocation(line: 165, column: 5, scope: !3083)
!3100 = distinct !{!3100, !3085, !3101}
!3101 = !DILocation(line: 167, column: 41, scope: !3079)
!3102 = !DILocation(line: 169, column: 9, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3060, file: !441, line: 169, column: 9)
!3104 = !DILocation(line: 169, column: 9, scope: !3060)
!3105 = !DILocation(line: 170, column: 15, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3103, file: !441, line: 170, column: 2)
!3107 = !DILocation(line: 170, column: 27, scope: !3106)
!3108 = !DILocation(line: 170, column: 41, scope: !3106)
!3109 = !DILocation(line: 170, column: 13, scope: !3106)
!3110 = !DILocation(line: 170, column: 7, scope: !3106)
!3111 = !DILocation(line: 170, column: 46, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3106, file: !441, line: 170, column: 2)
!3113 = !DILocation(line: 170, column: 52, scope: !3112)
!3114 = !DILocation(line: 170, column: 2, scope: !3106)
!3115 = !DILocation(line: 171, column: 10, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3112, file: !441, line: 171, column: 10)
!3117 = !DILocation(line: 171, column: 22, scope: !3116)
!3118 = !DILocation(line: 171, column: 31, scope: !3116)
!3119 = !DILocation(line: 171, column: 39, scope: !3116)
!3120 = !DILocation(line: 171, column: 49, scope: !3116)
!3121 = !DILocation(line: 171, column: 46, scope: !3116)
!3122 = !DILocation(line: 171, column: 10, scope: !3112)
!3123 = !DILocation(line: 172, column: 11, scope: !3116)
!3124 = !DILocation(line: 172, column: 23, scope: !3116)
!3125 = !DILocation(line: 172, column: 32, scope: !3116)
!3126 = !DILocation(line: 172, column: 3, scope: !3116)
!3127 = !DILocation(line: 170, column: 63, scope: !3112)
!3128 = !DILocation(line: 170, column: 2, scope: !3112)
!3129 = distinct !{!3129, !3114, !3130}
!3130 = !DILocation(line: 172, column: 38, scope: !3106)
!3131 = !DILocation(line: 175, column: 5, scope: !3060)
!3132 = !DILocation(line: 176, column: 1, scope: !3060)
!3133 = distinct !DISubprogram(name: "jbig2_get_region_segment_info", scope: !441, file: !441, line: 180, type: !3134, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !440, retainedNodes: !70)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{null, !3136, !431}
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RegionSegmentInfo", file: !90, line: 148, baseType: !3138)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !90, line: 141, size: 192, elements: !3139)
!3139 = !{!3140, !3141, !3142, !3143, !3144, !3146}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3138, file: !90, line: 142, baseType: !141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3138, file: !90, line: 143, baseType: !141, size: 32, offset: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3138, file: !90, line: 144, baseType: !141, size: 32, offset: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3138, file: !90, line: 145, baseType: !141, size: 32, offset: 96)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3138, file: !90, line: 146, baseType: !3145, size: 32, offset: 128)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ComposeOp", file: !90, line: 134, baseType: !443)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3138, file: !90, line: 147, baseType: !42, size: 8, offset: 160)
!3147 = !DILocalVariable(name: "info", arg: 1, scope: !3133, file: !441, line: 180, type: !3136)
!3148 = !DILocation(line: 180, column: 55, scope: !3133)
!3149 = !DILocalVariable(name: "segment_data", arg: 2, scope: !3133, file: !441, line: 181, type: !431)
!3150 = !DILocation(line: 181, column: 25, scope: !3133)
!3151 = !DILocation(line: 184, column: 33, scope: !3133)
!3152 = !DILocation(line: 184, column: 17, scope: !3133)
!3153 = !DILocation(line: 184, column: 3, scope: !3133)
!3154 = !DILocation(line: 184, column: 9, scope: !3133)
!3155 = !DILocation(line: 184, column: 15, scope: !3133)
!3156 = !DILocation(line: 185, column: 34, scope: !3133)
!3157 = !DILocation(line: 185, column: 47, scope: !3133)
!3158 = !DILocation(line: 185, column: 18, scope: !3133)
!3159 = !DILocation(line: 185, column: 3, scope: !3133)
!3160 = !DILocation(line: 185, column: 9, scope: !3133)
!3161 = !DILocation(line: 185, column: 16, scope: !3133)
!3162 = !DILocation(line: 186, column: 29, scope: !3133)
!3163 = !DILocation(line: 186, column: 42, scope: !3133)
!3164 = !DILocation(line: 186, column: 13, scope: !3133)
!3165 = !DILocation(line: 186, column: 3, scope: !3133)
!3166 = !DILocation(line: 186, column: 9, scope: !3133)
!3167 = !DILocation(line: 186, column: 11, scope: !3133)
!3168 = !DILocation(line: 187, column: 29, scope: !3133)
!3169 = !DILocation(line: 187, column: 42, scope: !3133)
!3170 = !DILocation(line: 187, column: 13, scope: !3133)
!3171 = !DILocation(line: 187, column: 3, scope: !3133)
!3172 = !DILocation(line: 187, column: 9, scope: !3133)
!3173 = !DILocation(line: 187, column: 11, scope: !3133)
!3174 = !DILocation(line: 188, column: 17, scope: !3133)
!3175 = !DILocation(line: 188, column: 3, scope: !3133)
!3176 = !DILocation(line: 188, column: 9, scope: !3133)
!3177 = !DILocation(line: 188, column: 15, scope: !3133)
!3178 = !DILocation(line: 189, column: 14, scope: !3133)
!3179 = !DILocation(line: 189, column: 20, scope: !3133)
!3180 = !DILocation(line: 189, column: 26, scope: !3133)
!3181 = !DILocation(line: 189, column: 3, scope: !3133)
!3182 = !DILocation(line: 189, column: 9, scope: !3133)
!3183 = !DILocation(line: 189, column: 12, scope: !3133)
!3184 = !DILocation(line: 190, column: 1, scope: !3133)
!3185 = distinct !DISubprogram(name: "jbig2_parse_extension_segment", scope: !441, file: !441, line: 193, type: !3186, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !440, retainedNodes: !70)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!6, !2725, !451, !431}
!3188 = !DILocalVariable(name: "ctx", arg: 1, scope: !3185, file: !441, line: 193, type: !2725)
!3189 = !DILocation(line: 193, column: 45, scope: !3185)
!3190 = !DILocalVariable(name: "segment", arg: 2, scope: !3185, file: !441, line: 193, type: !451)
!3191 = !DILocation(line: 193, column: 64, scope: !3185)
!3192 = !DILocalVariable(name: "segment_data", arg: 3, scope: !3185, file: !441, line: 194, type: !431)
!3193 = !DILocation(line: 194, column: 44, scope: !3185)
!3194 = !DILocalVariable(name: "type", scope: !3185, file: !441, line: 196, type: !32)
!3195 = !DILocation(line: 196, column: 14, scope: !3185)
!3196 = !DILocalVariable(name: "reserved", scope: !3185, file: !441, line: 197, type: !188)
!3197 = !DILocation(line: 197, column: 10, scope: !3185)
!3198 = !DILocalVariable(name: "dependent", scope: !3185, file: !441, line: 197, type: !188)
!3199 = !DILocation(line: 197, column: 20, scope: !3185)
!3200 = !DILocalVariable(name: "necessary", scope: !3185, file: !441, line: 197, type: !188)
!3201 = !DILocation(line: 197, column: 31, scope: !3185)
!3202 = !DILocation(line: 199, column: 28, scope: !3185)
!3203 = !DILocation(line: 199, column: 12, scope: !3185)
!3204 = !DILocation(line: 199, column: 10, scope: !3185)
!3205 = !DILocation(line: 201, column: 16, scope: !3185)
!3206 = !DILocation(line: 201, column: 21, scope: !3185)
!3207 = !DILocation(line: 201, column: 14, scope: !3185)
!3208 = !DILocation(line: 202, column: 17, scope: !3185)
!3209 = !DILocation(line: 202, column: 22, scope: !3185)
!3210 = !DILocation(line: 202, column: 15, scope: !3185)
!3211 = !DILocation(line: 203, column: 17, scope: !3185)
!3212 = !DILocation(line: 203, column: 22, scope: !3185)
!3213 = !DILocation(line: 203, column: 15, scope: !3185)
!3214 = !DILocation(line: 205, column: 9, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3185, file: !441, line: 205, column: 9)
!3216 = !DILocation(line: 205, column: 19, scope: !3215)
!3217 = !DILocation(line: 205, column: 23, scope: !3215)
!3218 = !DILocation(line: 205, column: 9, scope: !3185)
!3219 = !DILocation(line: 206, column: 21, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3215, file: !441, line: 205, column: 33)
!3221 = !DILocation(line: 206, column: 50, scope: !3220)
!3222 = !DILocation(line: 206, column: 59, scope: !3220)
!3223 = !DILocation(line: 206, column: 9, scope: !3220)
!3224 = !DILocation(line: 208, column: 5, scope: !3220)
!3225 = !DILocation(line: 210, column: 13, scope: !3185)
!3226 = !DILocation(line: 210, column: 5, scope: !3185)
!3227 = !DILocation(line: 211, column: 59, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3185, file: !441, line: 210, column: 19)
!3229 = !DILocation(line: 211, column: 64, scope: !3228)
!3230 = !DILocation(line: 211, column: 73, scope: !3228)
!3231 = !DILocation(line: 211, column: 33, scope: !3228)
!3232 = !DILocation(line: 211, column: 26, scope: !3228)
!3233 = !DILocation(line: 212, column: 61, scope: !3228)
!3234 = !DILocation(line: 212, column: 66, scope: !3228)
!3235 = !DILocation(line: 212, column: 75, scope: !3228)
!3236 = !DILocation(line: 212, column: 33, scope: !3228)
!3237 = !DILocation(line: 212, column: 26, scope: !3228)
!3238 = !DILocation(line: 214, column: 17, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3228, file: !441, line: 214, column: 17)
!3240 = !DILocation(line: 214, column: 17, scope: !3228)
!3241 = !DILocation(line: 215, column: 36, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3239, file: !441, line: 214, column: 28)
!3243 = !DILocation(line: 215, column: 63, scope: !3242)
!3244 = !DILocation(line: 215, column: 72, scope: !3242)
!3245 = !DILocation(line: 216, column: 74, scope: !3242)
!3246 = !DILocation(line: 215, column: 24, scope: !3242)
!3247 = !DILocation(line: 215, column: 17, scope: !3242)
!3248 = !DILocation(line: 218, column: 36, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3239, file: !441, line: 217, column: 20)
!3250 = !DILocation(line: 218, column: 65, scope: !3249)
!3251 = !DILocation(line: 218, column: 74, scope: !3249)
!3252 = !DILocation(line: 218, column: 24, scope: !3249)
!3253 = !DILocation(line: 218, column: 17, scope: !3249)
!3254 = !DILocation(line: 224, column: 1, scope: !3185)
!3255 = distinct !DISubprogram(name: "jbig2_parse_segment", scope: !441, file: !441, line: 227, type: !3186, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !440, retainedNodes: !70)
!3256 = !DILocalVariable(name: "ctx", arg: 1, scope: !3255, file: !441, line: 227, type: !2725)
!3257 = !DILocation(line: 227, column: 36, scope: !3255)
!3258 = !DILocalVariable(name: "segment", arg: 2, scope: !3255, file: !441, line: 227, type: !451)
!3259 = !DILocation(line: 227, column: 55, scope: !3255)
!3260 = !DILocalVariable(name: "segment_data", arg: 3, scope: !3255, file: !441, line: 228, type: !431)
!3261 = !DILocation(line: 228, column: 20, scope: !3255)
!3262 = !DILocation(line: 230, column: 15, scope: !3255)
!3263 = !DILocation(line: 230, column: 41, scope: !3255)
!3264 = !DILocation(line: 230, column: 50, scope: !3255)
!3265 = !DILocation(line: 232, column: 8, scope: !3255)
!3266 = !DILocation(line: 232, column: 17, scope: !3255)
!3267 = !DILocation(line: 232, column: 25, scope: !3255)
!3268 = !DILocation(line: 232, column: 34, scope: !3255)
!3269 = !DILocation(line: 232, column: 41, scope: !3255)
!3270 = !DILocation(line: 232, column: 50, scope: !3255)
!3271 = !DILocation(line: 232, column: 56, scope: !3255)
!3272 = !DILocation(line: 233, column: 8, scope: !3255)
!3273 = !DILocation(line: 233, column: 17, scope: !3255)
!3274 = !DILocation(line: 230, column: 3, scope: !3255)
!3275 = !DILocation(line: 234, column: 11, scope: !3255)
!3276 = !DILocation(line: 234, column: 20, scope: !3255)
!3277 = !DILocation(line: 234, column: 26, scope: !3255)
!3278 = !DILocation(line: 234, column: 3, scope: !3255)
!3279 = !DILocation(line: 237, column: 38, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3255, file: !441, line: 235, column: 5)
!3281 = !DILocation(line: 237, column: 43, scope: !3280)
!3282 = !DILocation(line: 237, column: 52, scope: !3280)
!3283 = !DILocation(line: 237, column: 14, scope: !3280)
!3284 = !DILocation(line: 237, column: 7, scope: !3280)
!3285 = !DILocation(line: 241, column: 38, scope: !3280)
!3286 = !DILocation(line: 241, column: 43, scope: !3280)
!3287 = !DILocation(line: 241, column: 52, scope: !3280)
!3288 = !DILocation(line: 241, column: 14, scope: !3280)
!3289 = !DILocation(line: 241, column: 7, scope: !3280)
!3290 = !DILocation(line: 251, column: 26, scope: !3280)
!3291 = !DILocation(line: 251, column: 55, scope: !3280)
!3292 = !DILocation(line: 251, column: 64, scope: !3280)
!3293 = !DILocation(line: 251, column: 14, scope: !3280)
!3294 = !DILocation(line: 251, column: 7, scope: !3280)
!3295 = !DILocation(line: 254, column: 26, scope: !3280)
!3296 = !DILocation(line: 254, column: 55, scope: !3280)
!3297 = !DILocation(line: 254, column: 64, scope: !3280)
!3298 = !DILocation(line: 254, column: 14, scope: !3280)
!3299 = !DILocation(line: 254, column: 7, scope: !3280)
!3300 = !DILocation(line: 257, column: 26, scope: !3280)
!3301 = !DILocation(line: 257, column: 55, scope: !3280)
!3302 = !DILocation(line: 257, column: 64, scope: !3280)
!3303 = !DILocation(line: 257, column: 14, scope: !3280)
!3304 = !DILocation(line: 257, column: 7, scope: !3280)
!3305 = !DILocation(line: 260, column: 26, scope: !3280)
!3306 = !DILocation(line: 260, column: 55, scope: !3280)
!3307 = !DILocation(line: 260, column: 64, scope: !3280)
!3308 = !DILocation(line: 260, column: 14, scope: !3280)
!3309 = !DILocation(line: 260, column: 7, scope: !3280)
!3310 = !DILocation(line: 264, column: 26, scope: !3280)
!3311 = !DILocation(line: 264, column: 55, scope: !3280)
!3312 = !DILocation(line: 264, column: 64, scope: !3280)
!3313 = !DILocation(line: 264, column: 14, scope: !3280)
!3314 = !DILocation(line: 264, column: 7, scope: !3280)
!3315 = !DILocation(line: 268, column: 45, scope: !3280)
!3316 = !DILocation(line: 268, column: 50, scope: !3280)
!3317 = !DILocation(line: 268, column: 59, scope: !3280)
!3318 = !DILocation(line: 268, column: 14, scope: !3280)
!3319 = !DILocation(line: 268, column: 7, scope: !3280)
!3320 = !DILocation(line: 272, column: 38, scope: !3280)
!3321 = !DILocation(line: 272, column: 43, scope: !3280)
!3322 = !DILocation(line: 272, column: 52, scope: !3280)
!3323 = !DILocation(line: 272, column: 14, scope: !3280)
!3324 = !DILocation(line: 272, column: 7, scope: !3280)
!3325 = !DILocation(line: 274, column: 36, scope: !3280)
!3326 = !DILocation(line: 274, column: 41, scope: !3280)
!3327 = !DILocation(line: 274, column: 50, scope: !3280)
!3328 = !DILocation(line: 274, column: 14, scope: !3280)
!3329 = !DILocation(line: 274, column: 7, scope: !3280)
!3330 = !DILocation(line: 276, column: 38, scope: !3280)
!3331 = !DILocation(line: 276, column: 43, scope: !3280)
!3332 = !DILocation(line: 276, column: 52, scope: !3280)
!3333 = !DILocation(line: 276, column: 14, scope: !3280)
!3334 = !DILocation(line: 276, column: 7, scope: !3280)
!3335 = !DILocation(line: 278, column: 40, scope: !3280)
!3336 = !DILocation(line: 278, column: 45, scope: !3280)
!3337 = !DILocation(line: 278, column: 54, scope: !3280)
!3338 = !DILocation(line: 278, column: 14, scope: !3280)
!3339 = !DILocation(line: 278, column: 7, scope: !3280)
!3340 = !DILocation(line: 280, column: 7, scope: !3280)
!3341 = !DILocation(line: 280, column: 12, scope: !3280)
!3342 = !DILocation(line: 280, column: 18, scope: !3280)
!3343 = !DILocation(line: 281, column: 26, scope: !3280)
!3344 = !DILocation(line: 281, column: 52, scope: !3280)
!3345 = !DILocation(line: 281, column: 61, scope: !3280)
!3346 = !DILocation(line: 281, column: 14, scope: !3280)
!3347 = !DILocation(line: 281, column: 7, scope: !3280)
!3348 = !DILocation(line: 284, column: 26, scope: !3280)
!3349 = !DILocation(line: 284, column: 55, scope: !3280)
!3350 = !DILocation(line: 284, column: 64, scope: !3280)
!3351 = !DILocation(line: 284, column: 14, scope: !3280)
!3352 = !DILocation(line: 284, column: 7, scope: !3280)
!3353 = !DILocation(line: 287, column: 26, scope: !3280)
!3354 = !DILocation(line: 287, column: 55, scope: !3280)
!3355 = !DILocation(line: 287, column: 64, scope: !3280)
!3356 = !DILocation(line: 287, column: 14, scope: !3280)
!3357 = !DILocation(line: 287, column: 7, scope: !3280)
!3358 = !DILocation(line: 290, column: 44, scope: !3280)
!3359 = !DILocation(line: 290, column: 49, scope: !3280)
!3360 = !DILocation(line: 290, column: 58, scope: !3280)
!3361 = !DILocation(line: 290, column: 14, scope: !3280)
!3362 = !DILocation(line: 290, column: 7, scope: !3280)
!3363 = !DILocation(line: 292, column: 21, scope: !3280)
!3364 = !DILocation(line: 292, column: 50, scope: !3280)
!3365 = !DILocation(line: 292, column: 59, scope: !3280)
!3366 = !DILocation(line: 293, column: 38, scope: !3280)
!3367 = !DILocation(line: 293, column: 47, scope: !3280)
!3368 = !DILocation(line: 293, column: 53, scope: !3280)
!3369 = !DILocation(line: 292, column: 9, scope: !3280)
!3370 = !DILocation(line: 294, column: 5, scope: !3280)
!3371 = !DILocation(line: 295, column: 3, scope: !3255)
!3372 = !DILocation(line: 296, column: 1, scope: !3255)
!3373 = distinct !DISubprogram(name: "jbig2_parse_page_info", scope: !463, file: !463, line: 67, type: !3374, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!6, !3376, !3413, !431}
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !3378)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !3379)
!3379 = !{!3380, !3397, !3398, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3424, !3425, !3426, !3427, !3428}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !3378, file: !90, line: 45, baseType: !3381, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !3383)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !3384)
!3384 = !{!3385, !3389, !3393}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3383, file: !58, line: 86, baseType: !3386, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!68, !3381, !119}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3383, file: !58, line: 87, baseType: !3390, size: 64, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{null, !3381, !68}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !3383, file: !58, line: 88, baseType: !3394, size: 64, offset: 128)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!68, !3381, !68, !119}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !3378, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !3378, file: !90, line: 47, baseType: !3399, size: 64, offset: 128)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3377)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !3378, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !3378, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3378, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !3378, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !3378, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !3378, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3378, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !3378, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !3378, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !3378, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !3378, file: !90, line: 62, baseType: !3412, size: 64, offset: 640)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !3415)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !3416)
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422, !3423}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !3415, file: !58, line: 117, baseType: !32, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3415, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !3415, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !3415, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !3415, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !3415, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3415, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !3378, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !3378, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !3378, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !3378, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3378, file: !90, line: 70, baseType: !3429, size: 64, offset: 832)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !3431)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !3432)
!3432 = !{!3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3431, file: !90, line: 111, baseType: !178, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !3431, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3431, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3431, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !3431, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !3431, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !3431, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !3431, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !3431, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3431, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3431, file: !90, line: 120, baseType: !3444, size: 64, offset: 320)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !3446)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !3447)
!3447 = !{!3448, !3449, !3450, !3451, !3452}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3446, file: !58, line: 57, baseType: !6, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3446, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !3446, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3446, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3446, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!3453 = !DILocalVariable(name: "ctx", arg: 1, scope: !3373, file: !463, line: 67, type: !3376)
!3454 = !DILocation(line: 67, column: 34, scope: !3373)
!3455 = !DILocalVariable(name: "segment", arg: 2, scope: !3373, file: !463, line: 67, type: !3413)
!3456 = !DILocation(line: 67, column: 53, scope: !3373)
!3457 = !DILocalVariable(name: "segment_data", arg: 3, scope: !3373, file: !463, line: 67, type: !431)
!3458 = !DILocation(line: 67, column: 77, scope: !3373)
!3459 = !DILocalVariable(name: "page", scope: !3373, file: !463, line: 69, type: !3429)
!3460 = !DILocation(line: 69, column: 16, scope: !3373)
!3461 = !DILocation(line: 72, column: 14, scope: !3373)
!3462 = !DILocation(line: 72, column: 19, scope: !3373)
!3463 = !DILocation(line: 72, column: 25, scope: !3373)
!3464 = !DILocation(line: 72, column: 30, scope: !3373)
!3465 = !DILocation(line: 72, column: 10, scope: !3373)
!3466 = !DILocation(line: 73, column: 10, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 73, column: 9)
!3468 = !DILocation(line: 73, column: 16, scope: !3467)
!3469 = !DILocation(line: 73, column: 23, scope: !3467)
!3470 = !DILocation(line: 73, column: 29, scope: !3467)
!3471 = !DILocation(line: 74, column: 15, scope: !3467)
!3472 = !DILocation(line: 74, column: 21, scope: !3467)
!3473 = !DILocation(line: 74, column: 27, scope: !3467)
!3474 = !DILocation(line: 74, column: 46, scope: !3467)
!3475 = !DILocation(line: 74, column: 50, scope: !3467)
!3476 = !DILocation(line: 74, column: 56, scope: !3467)
!3477 = !DILocation(line: 74, column: 62, scope: !3467)
!3478 = !DILocation(line: 73, column: 9, scope: !3373)
!3479 = !DILocation(line: 75, column: 9, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3467, file: !463, line: 74, column: 84)
!3481 = !DILocation(line: 75, column: 15, scope: !3480)
!3482 = !DILocation(line: 75, column: 21, scope: !3480)
!3483 = !DILocation(line: 76, column: 21, scope: !3480)
!3484 = !DILocation(line: 76, column: 50, scope: !3480)
!3485 = !DILocation(line: 76, column: 59, scope: !3480)
!3486 = !DILocation(line: 76, column: 9, scope: !3480)
!3487 = !DILocation(line: 78, column: 5, scope: !3480)
!3488 = !DILocalVariable(name: "index", scope: !3489, file: !463, line: 82, type: !6)
!3489 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 81, column: 5)
!3490 = !DILocation(line: 82, column: 13, scope: !3489)
!3491 = !DILocalVariable(name: "j", scope: !3489, file: !463, line: 82, type: !6)
!3492 = !DILocation(line: 82, column: 20, scope: !3489)
!3493 = !DILocation(line: 83, column: 17, scope: !3489)
!3494 = !DILocation(line: 83, column: 22, scope: !3489)
!3495 = !DILocation(line: 83, column: 15, scope: !3489)
!3496 = !DILocation(line: 84, column: 9, scope: !3489)
!3497 = !DILocation(line: 84, column: 16, scope: !3489)
!3498 = !DILocation(line: 84, column: 21, scope: !3489)
!3499 = !DILocation(line: 84, column: 27, scope: !3489)
!3500 = !DILocation(line: 84, column: 34, scope: !3489)
!3501 = !DILocation(line: 84, column: 40, scope: !3489)
!3502 = !DILocation(line: 85, column: 18, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3489, file: !463, line: 84, column: 60)
!3504 = !DILocation(line: 86, column: 17, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3503, file: !463, line: 86, column: 17)
!3506 = !DILocation(line: 86, column: 26, scope: !3505)
!3507 = !DILocation(line: 86, column: 31, scope: !3505)
!3508 = !DILocation(line: 86, column: 23, scope: !3505)
!3509 = !DILocation(line: 86, column: 17, scope: !3503)
!3510 = !DILocation(line: 88, column: 30, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3505, file: !463, line: 86, column: 47)
!3512 = !DILocation(line: 88, column: 35, scope: !3511)
!3513 = !DILocation(line: 88, column: 46, scope: !3511)
!3514 = !DILocation(line: 88, column: 51, scope: !3511)
!3515 = !DILocation(line: 89, column: 5, scope: !3511)
!3516 = !DILocation(line: 89, column: 10, scope: !3511)
!3517 = !DILocation(line: 89, column: 25, scope: !3511)
!3518 = !DILocation(line: 89, column: 4, scope: !3511)
!3519 = !DILocation(line: 89, column: 32, scope: !3511)
!3520 = !DILocation(line: 88, column: 16, scope: !3511)
!3521 = !DILocation(line: 88, column: 3, scope: !3511)
!3522 = !DILocation(line: 88, column: 8, scope: !3511)
!3523 = !DILocation(line: 88, column: 14, scope: !3511)
!3524 = !DILocation(line: 90, column: 24, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3511, file: !463, line: 90, column: 17)
!3526 = !DILocation(line: 90, column: 23, scope: !3525)
!3527 = !DILocation(line: 90, column: 22, scope: !3525)
!3528 = !DILocation(line: 90, column: 31, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3525, file: !463, line: 90, column: 17)
!3530 = !DILocation(line: 90, column: 35, scope: !3529)
!3531 = !DILocation(line: 90, column: 40, scope: !3529)
!3532 = !DILocation(line: 90, column: 33, scope: !3529)
!3533 = !DILocation(line: 90, column: 17, scope: !3525)
!3534 = !DILocation(line: 92, column: 21, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3529, file: !463, line: 90, column: 61)
!3536 = !DILocation(line: 92, column: 26, scope: !3535)
!3537 = !DILocation(line: 92, column: 32, scope: !3535)
!3538 = !DILocation(line: 92, column: 35, scope: !3535)
!3539 = !DILocation(line: 92, column: 41, scope: !3535)
!3540 = !DILocation(line: 93, column: 21, scope: !3535)
!3541 = !DILocation(line: 93, column: 26, scope: !3535)
!3542 = !DILocation(line: 93, column: 32, scope: !3535)
!3543 = !DILocation(line: 93, column: 35, scope: !3535)
!3544 = !DILocation(line: 93, column: 42, scope: !3535)
!3545 = !DILocation(line: 94, column: 21, scope: !3535)
!3546 = !DILocation(line: 94, column: 26, scope: !3535)
!3547 = !DILocation(line: 94, column: 32, scope: !3535)
!3548 = !DILocation(line: 94, column: 35, scope: !3535)
!3549 = !DILocation(line: 94, column: 41, scope: !3535)
!3550 = !DILocation(line: 96, column: 17, scope: !3535)
!3551 = !DILocation(line: 90, column: 57, scope: !3529)
!3552 = !DILocation(line: 90, column: 17, scope: !3529)
!3553 = distinct !{!3553, !3533, !3554}
!3554 = !DILocation(line: 96, column: 17, scope: !3525)
!3555 = !DILocation(line: 97, column: 13, scope: !3511)
!3556 = distinct !{!3556, !3496, !3557}
!3557 = !DILocation(line: 98, column: 9, scope: !3489)
!3558 = !DILocation(line: 99, column: 18, scope: !3489)
!3559 = !DILocation(line: 99, column: 23, scope: !3489)
!3560 = !DILocation(line: 99, column: 29, scope: !3489)
!3561 = !DILocation(line: 99, column: 14, scope: !3489)
!3562 = !DILocation(line: 100, column: 29, scope: !3489)
!3563 = !DILocation(line: 100, column: 9, scope: !3489)
!3564 = !DILocation(line: 100, column: 14, scope: !3489)
!3565 = !DILocation(line: 100, column: 27, scope: !3489)
!3566 = !DILocation(line: 101, column: 9, scope: !3489)
!3567 = !DILocation(line: 101, column: 15, scope: !3489)
!3568 = !DILocation(line: 101, column: 21, scope: !3489)
!3569 = !DILocation(line: 102, column: 24, scope: !3489)
!3570 = !DILocation(line: 102, column: 33, scope: !3489)
!3571 = !DILocation(line: 102, column: 9, scope: !3489)
!3572 = !DILocation(line: 102, column: 15, scope: !3489)
!3573 = !DILocation(line: 102, column: 22, scope: !3489)
!3574 = !DILocation(line: 106, column: 9, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 106, column: 9)
!3576 = !DILocation(line: 106, column: 18, scope: !3575)
!3577 = !DILocation(line: 106, column: 30, scope: !3575)
!3578 = !DILocation(line: 106, column: 9, scope: !3373)
!3579 = !DILocation(line: 107, column: 28, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3575, file: !463, line: 106, column: 36)
!3581 = !DILocation(line: 107, column: 55, scope: !3580)
!3582 = !DILocation(line: 107, column: 64, scope: !3580)
!3583 = !DILocation(line: 107, column: 16, scope: !3580)
!3584 = !DILocation(line: 107, column: 9, scope: !3580)
!3585 = !DILocation(line: 112, column: 35, scope: !3373)
!3586 = !DILocation(line: 112, column: 19, scope: !3373)
!3587 = !DILocation(line: 112, column: 5, scope: !3373)
!3588 = !DILocation(line: 112, column: 11, scope: !3373)
!3589 = !DILocation(line: 112, column: 17, scope: !3373)
!3590 = !DILocation(line: 113, column: 36, scope: !3373)
!3591 = !DILocation(line: 113, column: 49, scope: !3373)
!3592 = !DILocation(line: 113, column: 20, scope: !3373)
!3593 = !DILocation(line: 113, column: 5, scope: !3373)
!3594 = !DILocation(line: 113, column: 11, scope: !3373)
!3595 = !DILocation(line: 113, column: 18, scope: !3373)
!3596 = !DILocation(line: 115, column: 42, scope: !3373)
!3597 = !DILocation(line: 115, column: 55, scope: !3373)
!3598 = !DILocation(line: 115, column: 26, scope: !3373)
!3599 = !DILocation(line: 115, column: 5, scope: !3373)
!3600 = !DILocation(line: 115, column: 11, scope: !3373)
!3601 = !DILocation(line: 115, column: 24, scope: !3373)
!3602 = !DILocation(line: 116, column: 42, scope: !3373)
!3603 = !DILocation(line: 116, column: 55, scope: !3373)
!3604 = !DILocation(line: 116, column: 26, scope: !3373)
!3605 = !DILocation(line: 116, column: 5, scope: !3373)
!3606 = !DILocation(line: 116, column: 11, scope: !3373)
!3607 = !DILocation(line: 116, column: 24, scope: !3373)
!3608 = !DILocation(line: 117, column: 19, scope: !3373)
!3609 = !DILocation(line: 117, column: 5, scope: !3373)
!3610 = !DILocation(line: 117, column: 11, scope: !3373)
!3611 = !DILocation(line: 117, column: 17, scope: !3373)
!3612 = !DILocalVariable(name: "striping", scope: !3613, file: !463, line: 121, type: !2054)
!3613 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 120, column: 5)
!3614 = !DILocation(line: 121, column: 17, scope: !3613)
!3615 = !DILocation(line: 121, column: 44, scope: !3613)
!3616 = !DILocation(line: 121, column: 57, scope: !3613)
!3617 = !DILocation(line: 121, column: 28, scope: !3613)
!3618 = !DILocation(line: 122, column: 13, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3613, file: !463, line: 122, column: 13)
!3620 = !DILocation(line: 122, column: 22, scope: !3619)
!3621 = !DILocation(line: 122, column: 13, scope: !3613)
!3622 = !DILocation(line: 123, column: 13, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3619, file: !463, line: 122, column: 32)
!3624 = !DILocation(line: 123, column: 19, scope: !3623)
!3625 = !DILocation(line: 123, column: 27, scope: !3623)
!3626 = !DILocation(line: 124, column: 33, scope: !3623)
!3627 = !DILocation(line: 124, column: 42, scope: !3623)
!3628 = !DILocation(line: 124, column: 13, scope: !3623)
!3629 = !DILocation(line: 124, column: 19, scope: !3623)
!3630 = !DILocation(line: 124, column: 31, scope: !3623)
!3631 = !DILocation(line: 125, column: 9, scope: !3623)
!3632 = !DILocation(line: 126, column: 13, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3619, file: !463, line: 125, column: 16)
!3634 = !DILocation(line: 126, column: 19, scope: !3633)
!3635 = !DILocation(line: 126, column: 27, scope: !3633)
!3636 = !DILocation(line: 127, column: 13, scope: !3633)
!3637 = !DILocation(line: 127, column: 19, scope: !3633)
!3638 = !DILocation(line: 127, column: 31, scope: !3633)
!3639 = !DILocation(line: 130, column: 9, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 130, column: 9)
!3641 = !DILocation(line: 130, column: 15, scope: !3640)
!3642 = !DILocation(line: 130, column: 22, scope: !3640)
!3643 = !DILocation(line: 130, column: 36, scope: !3640)
!3644 = !DILocation(line: 130, column: 39, scope: !3640)
!3645 = !DILocation(line: 130, column: 45, scope: !3640)
!3646 = !DILocation(line: 130, column: 53, scope: !3640)
!3647 = !DILocation(line: 130, column: 9, scope: !3373)
!3648 = !DILocation(line: 131, column: 21, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3640, file: !463, line: 130, column: 63)
!3650 = !DILocation(line: 131, column: 50, scope: !3649)
!3651 = !DILocation(line: 131, column: 59, scope: !3649)
!3652 = !DILocation(line: 131, column: 9, scope: !3649)
!3653 = !DILocation(line: 133, column: 9, scope: !3649)
!3654 = !DILocation(line: 133, column: 15, scope: !3649)
!3655 = !DILocation(line: 133, column: 23, scope: !3649)
!3656 = !DILocation(line: 134, column: 5, scope: !3649)
!3657 = !DILocation(line: 135, column: 5, scope: !3373)
!3658 = !DILocation(line: 135, column: 11, scope: !3373)
!3659 = !DILocation(line: 135, column: 19, scope: !3373)
!3660 = !DILocation(line: 137, column: 9, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 137, column: 9)
!3662 = !DILocation(line: 137, column: 18, scope: !3661)
!3663 = !DILocation(line: 137, column: 30, scope: !3661)
!3664 = !DILocation(line: 137, column: 9, scope: !3373)
!3665 = !DILocation(line: 138, column: 21, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3661, file: !463, line: 137, column: 36)
!3667 = !DILocation(line: 138, column: 50, scope: !3666)
!3668 = !DILocation(line: 138, column: 59, scope: !3666)
!3669 = !DILocation(line: 138, column: 9, scope: !3666)
!3670 = !DILocation(line: 140, column: 5, scope: !3666)
!3671 = !DILocation(line: 142, column: 20, scope: !3373)
!3672 = !DILocation(line: 142, column: 25, scope: !3373)
!3673 = !DILocation(line: 142, column: 34, scope: !3373)
!3674 = !DILocation(line: 142, column: 5, scope: !3373)
!3675 = !DILocation(line: 146, column: 9, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 146, column: 9)
!3677 = !DILocation(line: 146, column: 15, scope: !3676)
!3678 = !DILocation(line: 146, column: 22, scope: !3676)
!3679 = !DILocation(line: 146, column: 9, scope: !3373)
!3680 = !DILocation(line: 147, column: 39, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3676, file: !463, line: 146, column: 37)
!3682 = !DILocation(line: 147, column: 44, scope: !3681)
!3683 = !DILocation(line: 147, column: 50, scope: !3681)
!3684 = !DILocation(line: 147, column: 57, scope: !3681)
!3685 = !DILocation(line: 147, column: 63, scope: !3681)
!3686 = !DILocation(line: 147, column: 23, scope: !3681)
!3687 = !DILocation(line: 147, column: 9, scope: !3681)
!3688 = !DILocation(line: 147, column: 15, scope: !3681)
!3689 = !DILocation(line: 147, column: 21, scope: !3681)
!3690 = !DILocation(line: 148, column: 5, scope: !3681)
!3691 = !DILocation(line: 149, column: 39, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3676, file: !463, line: 148, column: 12)
!3693 = !DILocation(line: 149, column: 44, scope: !3692)
!3694 = !DILocation(line: 149, column: 50, scope: !3692)
!3695 = !DILocation(line: 149, column: 57, scope: !3692)
!3696 = !DILocation(line: 149, column: 63, scope: !3692)
!3697 = !DILocation(line: 149, column: 23, scope: !3692)
!3698 = !DILocation(line: 149, column: 9, scope: !3692)
!3699 = !DILocation(line: 149, column: 15, scope: !3692)
!3700 = !DILocation(line: 149, column: 21, scope: !3692)
!3701 = !DILocation(line: 151, column: 9, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3373, file: !463, line: 151, column: 9)
!3703 = !DILocation(line: 151, column: 15, scope: !3702)
!3704 = !DILocation(line: 151, column: 21, scope: !3702)
!3705 = !DILocation(line: 151, column: 9, scope: !3373)
!3706 = !DILocation(line: 152, column: 20, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3702, file: !463, line: 151, column: 30)
!3708 = !DILocation(line: 152, column: 25, scope: !3707)
!3709 = !DILocation(line: 152, column: 36, scope: !3707)
!3710 = !DILocation(line: 152, column: 9, scope: !3707)
!3711 = !DILocation(line: 153, column: 28, scope: !3707)
!3712 = !DILocation(line: 153, column: 55, scope: !3707)
!3713 = !DILocation(line: 153, column: 64, scope: !3707)
!3714 = !DILocation(line: 153, column: 16, scope: !3707)
!3715 = !DILocation(line: 153, column: 9, scope: !3707)
!3716 = !DILocation(line: 157, column: 20, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3702, file: !463, line: 155, column: 12)
!3718 = !DILocation(line: 157, column: 25, scope: !3717)
!3719 = !DILocation(line: 157, column: 31, scope: !3717)
!3720 = !DILocation(line: 157, column: 39, scope: !3717)
!3721 = !DILocation(line: 157, column: 45, scope: !3717)
!3722 = !DILocation(line: 157, column: 51, scope: !3717)
!3723 = !DILocation(line: 157, column: 2, scope: !3717)
!3724 = !DILocation(line: 158, column: 21, scope: !3717)
!3725 = !DILocation(line: 158, column: 48, scope: !3717)
!3726 = !DILocation(line: 158, column: 57, scope: !3717)
!3727 = !DILocation(line: 160, column: 13, scope: !3717)
!3728 = !DILocation(line: 160, column: 19, scope: !3717)
!3729 = !DILocation(line: 160, column: 26, scope: !3717)
!3730 = !DILocation(line: 160, column: 33, scope: !3717)
!3731 = !DILocation(line: 160, column: 39, scope: !3717)
!3732 = !DILocation(line: 160, column: 46, scope: !3717)
!3733 = !DILocation(line: 161, column: 13, scope: !3717)
!3734 = !DILocation(line: 161, column: 19, scope: !3717)
!3735 = !DILocation(line: 161, column: 26, scope: !3717)
!3736 = !DILocation(line: 161, column: 33, scope: !3717)
!3737 = !DILocation(line: 161, column: 39, scope: !3717)
!3738 = !DILocation(line: 161, column: 46, scope: !3717)
!3739 = !DILocation(line: 161, column: 32, scope: !3717)
!3740 = !DILocation(line: 158, column: 9, scope: !3717)
!3741 = !DILocation(line: 164, column: 5, scope: !3373)
!3742 = !DILocation(line: 165, column: 1, scope: !3373)
!3743 = distinct !DISubprogram(name: "dump_page_info", scope: !463, file: !463, line: 36, type: !3744, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !462, retainedNodes: !70)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{null, !3376, !3413, !3429}
!3746 = !DILocalVariable(name: "ctx", arg: 1, scope: !3743, file: !463, line: 36, type: !3376)
!3747 = !DILocation(line: 36, column: 26, scope: !3743)
!3748 = !DILocalVariable(name: "segment", arg: 2, scope: !3743, file: !463, line: 36, type: !3413)
!3749 = !DILocation(line: 36, column: 45, scope: !3743)
!3750 = !DILocalVariable(name: "page", arg: 3, scope: !3743, file: !463, line: 36, type: !3429)
!3751 = !DILocation(line: 36, column: 65, scope: !3743)
!3752 = !DILocation(line: 38, column: 9, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3743, file: !463, line: 38, column: 9)
!3754 = !DILocation(line: 38, column: 15, scope: !3753)
!3755 = !DILocation(line: 38, column: 28, scope: !3753)
!3756 = !DILocation(line: 38, column: 9, scope: !3743)
!3757 = !DILocation(line: 39, column: 21, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3753, file: !463, line: 38, column: 34)
!3759 = !DILocation(line: 39, column: 47, scope: !3758)
!3760 = !DILocation(line: 39, column: 56, scope: !3758)
!3761 = !DILocation(line: 40, column: 53, scope: !3758)
!3762 = !DILocation(line: 40, column: 59, scope: !3758)
!3763 = !DILocation(line: 41, column: 13, scope: !3758)
!3764 = !DILocation(line: 41, column: 19, scope: !3758)
!3765 = !DILocation(line: 41, column: 26, scope: !3758)
!3766 = !DILocation(line: 41, column: 32, scope: !3758)
!3767 = !DILocation(line: 39, column: 9, scope: !3758)
!3768 = !DILocation(line: 42, column: 5, scope: !3758)
!3769 = !DILocation(line: 42, column: 16, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3753, file: !463, line: 42, column: 16)
!3771 = !DILocation(line: 42, column: 22, scope: !3770)
!3772 = !DILocation(line: 42, column: 38, scope: !3770)
!3773 = !DILocation(line: 42, column: 44, scope: !3770)
!3774 = !DILocation(line: 42, column: 35, scope: !3770)
!3775 = !DILocation(line: 42, column: 16, scope: !3753)
!3776 = !DILocation(line: 43, column: 21, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3770, file: !463, line: 42, column: 58)
!3778 = !DILocation(line: 43, column: 47, scope: !3777)
!3779 = !DILocation(line: 43, column: 56, scope: !3777)
!3780 = !DILocation(line: 44, column: 48, scope: !3777)
!3781 = !DILocation(line: 44, column: 54, scope: !3777)
!3782 = !DILocation(line: 45, column: 13, scope: !3777)
!3783 = !DILocation(line: 45, column: 19, scope: !3777)
!3784 = !DILocation(line: 45, column: 26, scope: !3777)
!3785 = !DILocation(line: 45, column: 32, scope: !3777)
!3786 = !DILocation(line: 46, column: 13, scope: !3777)
!3787 = !DILocation(line: 46, column: 19, scope: !3777)
!3788 = !DILocation(line: 43, column: 9, scope: !3777)
!3789 = !DILocation(line: 47, column: 5, scope: !3777)
!3790 = !DILocation(line: 48, column: 21, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3770, file: !463, line: 47, column: 12)
!3792 = !DILocation(line: 48, column: 47, scope: !3791)
!3793 = !DILocation(line: 48, column: 56, scope: !3791)
!3794 = !DILocation(line: 49, column: 51, scope: !3791)
!3795 = !DILocation(line: 49, column: 57, scope: !3791)
!3796 = !DILocation(line: 50, column: 13, scope: !3791)
!3797 = !DILocation(line: 50, column: 19, scope: !3791)
!3798 = !DILocation(line: 50, column: 26, scope: !3791)
!3799 = !DILocation(line: 50, column: 32, scope: !3791)
!3800 = !DILocation(line: 51, column: 13, scope: !3791)
!3801 = !DILocation(line: 51, column: 19, scope: !3791)
!3802 = !DILocation(line: 51, column: 33, scope: !3791)
!3803 = !DILocation(line: 51, column: 39, scope: !3791)
!3804 = !DILocation(line: 48, column: 9, scope: !3791)
!3805 = !DILocation(line: 53, column: 9, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3743, file: !463, line: 53, column: 9)
!3807 = !DILocation(line: 53, column: 15, scope: !3806)
!3808 = !DILocation(line: 53, column: 9, scope: !3743)
!3809 = !DILocation(line: 54, column: 21, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3806, file: !463, line: 53, column: 24)
!3811 = !DILocation(line: 54, column: 47, scope: !3810)
!3812 = !DILocation(line: 54, column: 56, scope: !3810)
!3813 = !DILocation(line: 55, column: 42, scope: !3810)
!3814 = !DILocation(line: 55, column: 48, scope: !3810)
!3815 = !DILocation(line: 54, column: 9, scope: !3810)
!3816 = !DILocation(line: 56, column: 5, scope: !3810)
!3817 = !DILocation(line: 57, column: 1, scope: !3743)
!3818 = distinct !DISubprogram(name: "jbig2_parse_end_of_stripe", scope: !463, file: !463, line: 171, type: !3374, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!3819 = !DILocalVariable(name: "ctx", arg: 1, scope: !3818, file: !463, line: 171, type: !3376)
!3820 = !DILocation(line: 171, column: 37, scope: !3818)
!3821 = !DILocalVariable(name: "segment", arg: 2, scope: !3818, file: !463, line: 171, type: !3413)
!3822 = !DILocation(line: 171, column: 56, scope: !3818)
!3823 = !DILocalVariable(name: "segment_data", arg: 3, scope: !3818, file: !463, line: 171, type: !431)
!3824 = !DILocation(line: 171, column: 80, scope: !3818)
!3825 = !DILocalVariable(name: "page", scope: !3818, file: !463, line: 173, type: !3430)
!3826 = !DILocation(line: 173, column: 15, scope: !3818)
!3827 = !DILocation(line: 173, column: 22, scope: !3818)
!3828 = !DILocation(line: 173, column: 27, scope: !3818)
!3829 = !DILocation(line: 173, column: 33, scope: !3818)
!3830 = !DILocation(line: 173, column: 38, scope: !3818)
!3831 = !DILocalVariable(name: "end_row", scope: !3818, file: !463, line: 174, type: !6)
!3832 = !DILocation(line: 174, column: 9, scope: !3818)
!3833 = !DILocation(line: 176, column: 31, scope: !3818)
!3834 = !DILocation(line: 176, column: 15, scope: !3818)
!3835 = !DILocation(line: 176, column: 13, scope: !3818)
!3836 = !DILocation(line: 177, column: 9, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3818, file: !463, line: 177, column: 9)
!3838 = !DILocation(line: 177, column: 24, scope: !3837)
!3839 = !DILocation(line: 177, column: 17, scope: !3837)
!3840 = !DILocation(line: 177, column: 9, scope: !3818)
!3841 = !DILocation(line: 178, column: 14, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3837, file: !463, line: 177, column: 33)
!3843 = !DILocation(line: 178, column: 43, scope: !3842)
!3844 = !DILocation(line: 178, column: 52, scope: !3842)
!3845 = !DILocation(line: 181, column: 6, scope: !3842)
!3846 = !DILocation(line: 181, column: 20, scope: !3842)
!3847 = !DILocation(line: 178, column: 2, scope: !3842)
!3848 = !DILocation(line: 182, column: 5, scope: !3842)
!3849 = !DILocation(line: 183, column: 14, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3837, file: !463, line: 182, column: 12)
!3851 = !DILocation(line: 183, column: 40, scope: !3850)
!3852 = !DILocation(line: 183, column: 49, scope: !3850)
!3853 = !DILocation(line: 184, column: 48, scope: !3850)
!3854 = !DILocation(line: 183, column: 2, scope: !3850)
!3855 = !DILocation(line: 187, column: 20, scope: !3818)
!3856 = !DILocation(line: 187, column: 10, scope: !3818)
!3857 = !DILocation(line: 187, column: 18, scope: !3818)
!3858 = !DILocation(line: 189, column: 5, scope: !3818)
!3859 = distinct !DISubprogram(name: "jbig2_complete_page", scope: !463, file: !463, line: 201, type: !3860, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!6, !3376}
!3862 = !DILocalVariable(name: "ctx", arg: 1, scope: !3859, file: !463, line: 201, type: !3376)
!3863 = !DILocation(line: 201, column: 32, scope: !3859)
!3864 = !DILocation(line: 205, column: 9, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3859, file: !463, line: 205, column: 9)
!3866 = !DILocation(line: 205, column: 14, scope: !3865)
!3867 = !DILocation(line: 205, column: 31, scope: !3865)
!3868 = !DILocation(line: 205, column: 36, scope: !3865)
!3869 = !DILocation(line: 205, column: 28, scope: !3865)
!3870 = !DILocation(line: 205, column: 9, scope: !3859)
!3871 = !DILocalVariable(name: "segment", scope: !3872, file: !463, line: 206, type: !3413)
!3872 = distinct !DILexicalBlock(scope: !3865, file: !463, line: 205, column: 48)
!3873 = !DILocation(line: 206, column: 21, scope: !3872)
!3874 = !DILocation(line: 206, column: 31, scope: !3872)
!3875 = !DILocation(line: 206, column: 36, scope: !3872)
!3876 = !DILocation(line: 206, column: 45, scope: !3872)
!3877 = !DILocation(line: 206, column: 50, scope: !3872)
!3878 = !DILocalVariable(name: "code", scope: !3872, file: !463, line: 207, type: !6)
!3879 = !DILocation(line: 207, column: 11, scope: !3872)
!3880 = !DILocation(line: 211, column: 12, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3872, file: !463, line: 211, column: 11)
!3882 = !DILocation(line: 211, column: 21, scope: !3881)
!3883 = !DILocation(line: 211, column: 33, scope: !3881)
!3884 = !DILocation(line: 211, column: 47, scope: !3881)
!3885 = !DILocation(line: 211, column: 11, scope: !3872)
!3886 = !DILocation(line: 212, column: 21, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3881, file: !463, line: 211, column: 62)
!3888 = !DILocation(line: 212, column: 50, scope: !3887)
!3889 = !DILocation(line: 212, column: 59, scope: !3887)
!3890 = !DILocation(line: 212, column: 9, scope: !3887)
!3891 = !DILocation(line: 215, column: 32, scope: !3887)
!3892 = !DILocation(line: 215, column: 37, scope: !3887)
!3893 = !DILocation(line: 215, column: 49, scope: !3887)
!3894 = !DILocation(line: 215, column: 54, scope: !3887)
!3895 = !DILocation(line: 215, column: 47, scope: !3887)
!3896 = !DILocation(line: 215, column: 9, scope: !3887)
!3897 = !DILocation(line: 215, column: 18, scope: !3887)
!3898 = !DILocation(line: 215, column: 30, scope: !3887)
!3899 = !DILocation(line: 216, column: 36, scope: !3887)
!3900 = !DILocation(line: 216, column: 41, scope: !3887)
!3901 = !DILocation(line: 216, column: 50, scope: !3887)
!3902 = !DILocation(line: 216, column: 55, scope: !3887)
!3903 = !DILocation(line: 216, column: 61, scope: !3887)
!3904 = !DILocation(line: 216, column: 66, scope: !3887)
!3905 = !DILocation(line: 216, column: 59, scope: !3887)
!3906 = !DILocation(line: 216, column: 16, scope: !3887)
!3907 = !DILocation(line: 216, column: 14, scope: !3887)
!3908 = !DILocation(line: 217, column: 27, scope: !3887)
!3909 = !DILocation(line: 217, column: 36, scope: !3887)
!3910 = !DILocation(line: 217, column: 9, scope: !3887)
!3911 = !DILocation(line: 217, column: 14, scope: !3887)
!3912 = !DILocation(line: 217, column: 24, scope: !3887)
!3913 = !DILocation(line: 218, column: 9, scope: !3887)
!3914 = !DILocation(line: 218, column: 14, scope: !3887)
!3915 = !DILocation(line: 218, column: 27, scope: !3887)
!3916 = !DILocation(line: 219, column: 7, scope: !3887)
!3917 = !DILocation(line: 220, column: 5, scope: !3872)
!3918 = !DILocation(line: 221, column: 5, scope: !3859)
!3919 = !DILocation(line: 221, column: 10, scope: !3859)
!3920 = !DILocation(line: 221, column: 16, scope: !3859)
!3921 = !DILocation(line: 221, column: 21, scope: !3859)
!3922 = !DILocation(line: 221, column: 35, scope: !3859)
!3923 = !DILocation(line: 221, column: 41, scope: !3859)
!3924 = !DILocation(line: 223, column: 5, scope: !3859)
!3925 = distinct !DISubprogram(name: "jbig2_parse_end_of_page", scope: !463, file: !463, line: 230, type: !3374, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!3926 = !DILocalVariable(name: "ctx", arg: 1, scope: !3925, file: !463, line: 230, type: !3376)
!3927 = !DILocation(line: 230, column: 35, scope: !3925)
!3928 = !DILocalVariable(name: "segment", arg: 2, scope: !3925, file: !463, line: 230, type: !3413)
!3929 = !DILocation(line: 230, column: 54, scope: !3925)
!3930 = !DILocalVariable(name: "segment_data", arg: 3, scope: !3925, file: !463, line: 230, type: !431)
!3931 = !DILocation(line: 230, column: 78, scope: !3925)
!3932 = !DILocalVariable(name: "page_number", scope: !3925, file: !463, line: 232, type: !32)
!3933 = !DILocation(line: 232, column: 14, scope: !3925)
!3934 = !DILocation(line: 232, column: 28, scope: !3925)
!3935 = !DILocation(line: 232, column: 33, scope: !3925)
!3936 = !DILocation(line: 232, column: 39, scope: !3925)
!3937 = !DILocation(line: 232, column: 44, scope: !3925)
!3938 = !DILocation(line: 232, column: 58, scope: !3925)
!3939 = !DILocation(line: 234, column: 9, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3925, file: !463, line: 234, column: 9)
!3941 = !DILocation(line: 234, column: 18, scope: !3940)
!3942 = !DILocation(line: 234, column: 38, scope: !3940)
!3943 = !DILocation(line: 234, column: 35, scope: !3940)
!3944 = !DILocation(line: 234, column: 9, scope: !3925)
!3945 = !DILocation(line: 235, column: 21, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3940, file: !463, line: 234, column: 51)
!3947 = !DILocation(line: 235, column: 50, scope: !3946)
!3948 = !DILocation(line: 235, column: 59, scope: !3946)
!3949 = !DILocation(line: 237, column: 13, scope: !3946)
!3950 = !DILocation(line: 237, column: 22, scope: !3946)
!3951 = !DILocation(line: 237, column: 40, scope: !3946)
!3952 = !DILocation(line: 235, column: 9, scope: !3946)
!3953 = !DILocation(line: 238, column: 5, scope: !3946)
!3954 = !DILocation(line: 240, column: 17, scope: !3925)
!3955 = !DILocation(line: 240, column: 43, scope: !3925)
!3956 = !DILocation(line: 240, column: 52, scope: !3925)
!3957 = !DILocation(line: 241, column: 27, scope: !3925)
!3958 = !DILocation(line: 240, column: 5, scope: !3925)
!3959 = !DILocation(line: 243, column: 25, scope: !3925)
!3960 = !DILocation(line: 243, column: 5, scope: !3925)
!3961 = !DILocation(line: 249, column: 5, scope: !3925)
!3962 = distinct !DISubprogram(name: "jbig2_page_add_result", scope: !463, file: !463, line: 259, type: !3963, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!6, !3376, !3429, !3444, !6, !6, !3145}
!3965 = !DILocalVariable(name: "ctx", arg: 1, scope: !3962, file: !463, line: 259, type: !3376)
!3966 = !DILocation(line: 259, column: 33, scope: !3962)
!3967 = !DILocalVariable(name: "page", arg: 2, scope: !3962, file: !463, line: 259, type: !3429)
!3968 = !DILocation(line: 259, column: 49, scope: !3962)
!3969 = !DILocalVariable(name: "image", arg: 3, scope: !3962, file: !463, line: 259, type: !3444)
!3970 = !DILocation(line: 259, column: 67, scope: !3962)
!3971 = !DILocalVariable(name: "x", arg: 4, scope: !3962, file: !463, line: 260, type: !6)
!3972 = !DILocation(line: 260, column: 13, scope: !3962)
!3973 = !DILocalVariable(name: "y", arg: 5, scope: !3962, file: !463, line: 260, type: !6)
!3974 = !DILocation(line: 260, column: 20, scope: !3962)
!3975 = !DILocalVariable(name: "op", arg: 6, scope: !3962, file: !463, line: 260, type: !3145)
!3976 = !DILocation(line: 260, column: 38, scope: !3962)
!3977 = !DILocation(line: 263, column: 9, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3962, file: !463, line: 263, column: 9)
!3979 = !DILocation(line: 263, column: 15, scope: !3978)
!3980 = !DILocation(line: 263, column: 9, scope: !3962)
!3981 = !DILocalVariable(name: "new_height", scope: !3982, file: !463, line: 264, type: !6)
!3982 = distinct !DILexicalBlock(scope: !3978, file: !463, line: 263, column: 24)
!3983 = !DILocation(line: 264, column: 6, scope: !3982)
!3984 = !DILocation(line: 264, column: 19, scope: !3982)
!3985 = !DILocation(line: 264, column: 23, scope: !3982)
!3986 = !DILocation(line: 264, column: 30, scope: !3982)
!3987 = !DILocation(line: 264, column: 21, scope: !3982)
!3988 = !DILocation(line: 264, column: 39, scope: !3982)
!3989 = !DILocation(line: 264, column: 45, scope: !3982)
!3990 = !DILocation(line: 264, column: 37, scope: !3982)
!3991 = !DILocation(line: 265, column: 6, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3982, file: !463, line: 265, column: 6)
!3993 = !DILocation(line: 265, column: 12, scope: !3992)
!3994 = !DILocation(line: 265, column: 19, scope: !3992)
!3995 = !DILocation(line: 265, column: 28, scope: !3992)
!3996 = !DILocation(line: 265, column: 26, scope: !3992)
!3997 = !DILocation(line: 265, column: 6, scope: !3982)
!3998 = !DILocation(line: 266, column: 18, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3992, file: !463, line: 265, column: 40)
!4000 = !DILocation(line: 268, column: 31, scope: !3999)
!4001 = !DILocation(line: 266, column: 6, scope: !3999)
!4002 = !DILocation(line: 269, column: 25, scope: !3999)
!4003 = !DILocation(line: 269, column: 30, scope: !3999)
!4004 = !DILocation(line: 269, column: 36, scope: !3999)
!4005 = !DILocation(line: 270, column: 3, scope: !3999)
!4006 = !DILocation(line: 270, column: 9, scope: !3999)
!4007 = !DILocation(line: 270, column: 16, scope: !3999)
!4008 = !DILocation(line: 270, column: 23, scope: !3999)
!4009 = !DILocation(line: 269, column: 6, scope: !3999)
!4010 = !DILocation(line: 271, column: 2, scope: !3999)
!4011 = !DILocation(line: 272, column: 5, scope: !3982)
!4012 = !DILocation(line: 274, column: 25, scope: !3962)
!4013 = !DILocation(line: 274, column: 30, scope: !3962)
!4014 = !DILocation(line: 274, column: 36, scope: !3962)
!4015 = !DILocation(line: 274, column: 43, scope: !3962)
!4016 = !DILocation(line: 275, column: 25, scope: !3962)
!4017 = !DILocation(line: 275, column: 28, scope: !3962)
!4018 = !DILocation(line: 275, column: 32, scope: !3962)
!4019 = !DILocation(line: 275, column: 38, scope: !3962)
!4020 = !DILocation(line: 275, column: 30, scope: !3962)
!4021 = !DILocation(line: 274, column: 5, scope: !3962)
!4022 = !DILocation(line: 277, column: 5, scope: !3962)
!4023 = distinct !DISubprogram(name: "jbig2_page_out", scope: !463, file: !463, line: 292, type: !4024, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!3444, !3376}
!4026 = !DILocalVariable(name: "ctx", arg: 1, scope: !4023, file: !463, line: 292, type: !3376)
!4027 = !DILocation(line: 292, column: 38, scope: !4023)
!4028 = !DILocalVariable(name: "index", scope: !4023, file: !463, line: 294, type: !6)
!4029 = !DILocation(line: 294, column: 9, scope: !4023)
!4030 = !DILocation(line: 297, column: 15, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4023, file: !463, line: 297, column: 5)
!4032 = !DILocation(line: 297, column: 10, scope: !4031)
!4033 = !DILocation(line: 297, column: 19, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4031, file: !463, line: 297, column: 5)
!4035 = !DILocation(line: 297, column: 27, scope: !4034)
!4036 = !DILocation(line: 297, column: 32, scope: !4034)
!4037 = !DILocation(line: 297, column: 25, scope: !4034)
!4038 = !DILocation(line: 297, column: 5, scope: !4031)
!4039 = !DILocation(line: 298, column: 13, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !463, line: 298, column: 13)
!4041 = distinct !DILexicalBlock(scope: !4034, file: !463, line: 297, column: 57)
!4042 = !DILocation(line: 298, column: 18, scope: !4040)
!4043 = !DILocation(line: 298, column: 24, scope: !4040)
!4044 = !DILocation(line: 298, column: 31, scope: !4040)
!4045 = !DILocation(line: 298, column: 37, scope: !4040)
!4046 = !DILocation(line: 298, column: 13, scope: !4041)
!4047 = !DILocation(line: 299, column: 13, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4040, file: !463, line: 298, column: 61)
!4049 = !DILocation(line: 299, column: 18, scope: !4048)
!4050 = !DILocation(line: 299, column: 24, scope: !4048)
!4051 = !DILocation(line: 299, column: 31, scope: !4048)
!4052 = !DILocation(line: 299, column: 37, scope: !4048)
!4053 = !DILocation(line: 300, column: 25, scope: !4048)
!4054 = !DILocation(line: 301, column: 51, scope: !4048)
!4055 = !DILocation(line: 301, column: 56, scope: !4048)
!4056 = !DILocation(line: 301, column: 62, scope: !4048)
!4057 = !DILocation(line: 301, column: 69, scope: !4048)
!4058 = !DILocation(line: 300, column: 13, scope: !4048)
!4059 = !DILocation(line: 302, column: 20, scope: !4048)
!4060 = !DILocation(line: 302, column: 25, scope: !4048)
!4061 = !DILocation(line: 302, column: 31, scope: !4048)
!4062 = !DILocation(line: 302, column: 38, scope: !4048)
!4063 = !DILocation(line: 302, column: 13, scope: !4048)
!4064 = !DILocation(line: 304, column: 5, scope: !4041)
!4065 = !DILocation(line: 297, column: 53, scope: !4034)
!4066 = !DILocation(line: 297, column: 5, scope: !4034)
!4067 = distinct !{!4067, !4038, !4068}
!4068 = !DILocation(line: 304, column: 5, scope: !4031)
!4069 = !DILocation(line: 307, column: 5, scope: !4023)
!4070 = !DILocation(line: 308, column: 1, scope: !4023)
!4071 = distinct !DISubprogram(name: "jbig2_release_page", scope: !463, file: !463, line: 313, type: !4072, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !70)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!6, !3376, !3444}
!4074 = !DILocalVariable(name: "ctx", arg: 1, scope: !4071, file: !463, line: 313, type: !3376)
!4075 = !DILocation(line: 313, column: 34, scope: !4071)
!4076 = !DILocalVariable(name: "image", arg: 2, scope: !4071, file: !463, line: 313, type: !3444)
!4077 = !DILocation(line: 313, column: 51, scope: !4071)
!4078 = !DILocalVariable(name: "index", scope: !4071, file: !463, line: 315, type: !6)
!4079 = !DILocation(line: 315, column: 9, scope: !4071)
!4080 = !DILocation(line: 318, column: 16, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4071, file: !463, line: 318, column: 5)
!4082 = !DILocation(line: 318, column: 10, scope: !4081)
!4083 = !DILocation(line: 318, column: 21, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4081, file: !463, line: 318, column: 5)
!4085 = !DILocation(line: 318, column: 29, scope: !4084)
!4086 = !DILocation(line: 318, column: 34, scope: !4084)
!4087 = !DILocation(line: 318, column: 27, scope: !4084)
!4088 = !DILocation(line: 318, column: 5, scope: !4081)
!4089 = !DILocation(line: 319, column: 13, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !463, line: 319, column: 13)
!4091 = distinct !DILexicalBlock(scope: !4084, file: !463, line: 318, column: 59)
!4092 = !DILocation(line: 319, column: 18, scope: !4090)
!4093 = !DILocation(line: 319, column: 24, scope: !4090)
!4094 = !DILocation(line: 319, column: 31, scope: !4090)
!4095 = !DILocation(line: 319, column: 40, scope: !4090)
!4096 = !DILocation(line: 319, column: 37, scope: !4090)
!4097 = !DILocation(line: 319, column: 13, scope: !4091)
!4098 = !DILocation(line: 321, column: 13, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4090, file: !463, line: 319, column: 47)
!4100 = !DILocation(line: 321, column: 18, scope: !4099)
!4101 = !DILocation(line: 321, column: 24, scope: !4099)
!4102 = !DILocation(line: 321, column: 31, scope: !4099)
!4103 = !DILocation(line: 321, column: 37, scope: !4099)
!4104 = !DILocation(line: 322, column: 25, scope: !4099)
!4105 = !DILocation(line: 323, column: 51, scope: !4099)
!4106 = !DILocation(line: 323, column: 56, scope: !4099)
!4107 = !DILocation(line: 323, column: 62, scope: !4099)
!4108 = !DILocation(line: 323, column: 69, scope: !4099)
!4109 = !DILocation(line: 322, column: 13, scope: !4099)
!4110 = !DILocation(line: 324, column: 13, scope: !4099)
!4111 = !DILocation(line: 326, column: 5, scope: !4091)
!4112 = !DILocation(line: 318, column: 55, scope: !4084)
!4113 = !DILocation(line: 318, column: 5, scope: !4084)
!4114 = distinct !{!4114, !4088, !4115}
!4115 = !DILocation(line: 326, column: 5, scope: !4081)
!4116 = !DILocation(line: 329, column: 17, scope: !4071)
!4117 = !DILocation(line: 329, column: 5, scope: !4071)
!4118 = !DILocation(line: 331, column: 5, scope: !4071)
!4119 = !DILocation(line: 332, column: 1, scope: !4071)
!4120 = distinct !DISubprogram(name: "jbig2_sd_new", scope: !465, file: !465, line: 93, type: !4121, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!475, !4123, !6}
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !4125)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !4126)
!4126 = !{!4127, !4144, !4145, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4171, !4172, !4173, !4174, !4175}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !4125, file: !90, line: 45, baseType: !4128, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !4130)
!4130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !4131)
!4131 = !{!4132, !4136, !4140}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4130, file: !58, line: 86, baseType: !4133, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!68, !4128, !119}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4130, file: !58, line: 87, baseType: !4137, size: 64, offset: 64)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{null, !4128, !68}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !4130, file: !58, line: 88, baseType: !4141, size: 64, offset: 128)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!68, !4128, !68, !119}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4125, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !4125, file: !90, line: 47, baseType: !4146, size: 64, offset: 128)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4124)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !4125, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !4125, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4125, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !4125, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !4125, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !4125, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4125, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !4125, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !4125, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !4125, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !4125, file: !90, line: 62, baseType: !4159, size: 64, offset: 640)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !4162)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !4163)
!4163 = !{!4164, !4165, !4166, !4167, !4168, !4169, !4170}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4162, file: !58, line: 117, baseType: !32, size: 32)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4162, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !4162, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !4162, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !4162, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !4162, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4162, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !4125, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !4125, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !4125, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !4125, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4125, file: !90, line: 70, baseType: !4176, size: 64, offset: 832)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !4178)
!4178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !4179)
!4179 = !{!4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4178, file: !90, line: 111, baseType: !178, size: 32)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4178, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4178, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4178, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !4178, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !4178, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !4178, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !4178, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !4178, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4178, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4178, file: !90, line: 120, baseType: !483, size: 64, offset: 320)
!4191 = !DILocalVariable(name: "ctx", arg: 1, scope: !4120, file: !465, line: 93, type: !4123)
!4192 = !DILocation(line: 93, column: 24, scope: !4120)
!4193 = !DILocalVariable(name: "n_symbols", arg: 2, scope: !4120, file: !465, line: 93, type: !6)
!4194 = !DILocation(line: 93, column: 33, scope: !4120)
!4195 = !DILocalVariable(name: "new", scope: !4120, file: !465, line: 95, type: !475)
!4196 = !DILocation(line: 95, column: 21, scope: !4120)
!4197 = !DILocation(line: 97, column: 41, scope: !4120)
!4198 = !DILocation(line: 97, column: 46, scope: !4120)
!4199 = !DILocation(line: 97, column: 29, scope: !4120)
!4200 = !DILocation(line: 97, column: 10, scope: !4120)
!4201 = !DILocation(line: 97, column: 8, scope: !4120)
!4202 = !DILocation(line: 99, column: 8, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4120, file: !465, line: 99, column: 8)
!4204 = !DILocation(line: 99, column: 12, scope: !4203)
!4205 = !DILocation(line: 99, column: 8, scope: !4120)
!4206 = !DILocation(line: 100, column: 47, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4203, file: !465, line: 99, column: 21)
!4208 = !DILocation(line: 100, column: 52, scope: !4207)
!4209 = !DILocation(line: 101, column: 10, scope: !4207)
!4210 = !DILocation(line: 101, column: 19, scope: !4207)
!4211 = !DILocation(line: 100, column: 35, scope: !4207)
!4212 = !DILocation(line: 100, column: 20, scope: !4207)
!4213 = !DILocation(line: 100, column: 6, scope: !4207)
!4214 = !DILocation(line: 100, column: 11, scope: !4207)
!4215 = !DILocation(line: 100, column: 18, scope: !4207)
!4216 = !DILocation(line: 102, column: 23, scope: !4207)
!4217 = !DILocation(line: 102, column: 6, scope: !4207)
!4218 = !DILocation(line: 102, column: 11, scope: !4207)
!4219 = !DILocation(line: 102, column: 21, scope: !4207)
!4220 = !DILocation(line: 103, column: 4, scope: !4207)
!4221 = !DILocation(line: 104, column: 6, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4203, file: !465, line: 103, column: 11)
!4223 = !DILocation(line: 107, column: 8, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4120, file: !465, line: 107, column: 8)
!4225 = !DILocation(line: 107, column: 13, scope: !4224)
!4226 = !DILocation(line: 107, column: 20, scope: !4224)
!4227 = !DILocation(line: 107, column: 8, scope: !4120)
!4228 = !DILocation(line: 108, column: 13, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4224, file: !465, line: 107, column: 29)
!4230 = !DILocation(line: 108, column: 18, scope: !4229)
!4231 = !DILocation(line: 108, column: 6, scope: !4229)
!4232 = !DILocation(line: 108, column: 29, scope: !4229)
!4233 = !DILocation(line: 108, column: 38, scope: !4229)
!4234 = !DILocation(line: 109, column: 4, scope: !4229)
!4235 = !DILocation(line: 110, column: 17, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4224, file: !465, line: 109, column: 11)
!4237 = !DILocation(line: 110, column: 22, scope: !4236)
!4238 = !DILocation(line: 110, column: 33, scope: !4236)
!4239 = !DILocation(line: 110, column: 6, scope: !4236)
!4240 = !DILocation(line: 111, column: 6, scope: !4236)
!4241 = !DILocation(line: 114, column: 11, scope: !4120)
!4242 = !DILocation(line: 114, column: 4, scope: !4120)
!4243 = !DILocation(line: 115, column: 1, scope: !4120)
!4244 = distinct !DISubprogram(name: "jbig2_sd_release", scope: !465, file: !465, line: 119, type: !4245, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{null, !4123, !475}
!4247 = !DILocalVariable(name: "ctx", arg: 1, scope: !4244, file: !465, line: 119, type: !4123)
!4248 = !DILocation(line: 119, column: 28, scope: !4244)
!4249 = !DILocalVariable(name: "dict", arg: 2, scope: !4244, file: !465, line: 119, type: !475)
!4250 = !DILocation(line: 119, column: 50, scope: !4244)
!4251 = !DILocalVariable(name: "i", scope: !4244, file: !465, line: 121, type: !6)
!4252 = !DILocation(line: 121, column: 8, scope: !4244)
!4253 = !DILocation(line: 123, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4244, file: !465, line: 123, column: 8)
!4255 = !DILocation(line: 123, column: 13, scope: !4254)
!4256 = !DILocation(line: 123, column: 8, scope: !4244)
!4257 = !DILocation(line: 123, column: 22, scope: !4254)
!4258 = !DILocation(line: 124, column: 11, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4244, file: !465, line: 124, column: 4)
!4260 = !DILocation(line: 124, column: 9, scope: !4259)
!4261 = !DILocation(line: 124, column: 16, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4259, file: !465, line: 124, column: 4)
!4263 = !DILocation(line: 124, column: 20, scope: !4262)
!4264 = !DILocation(line: 124, column: 26, scope: !4262)
!4265 = !DILocation(line: 124, column: 18, scope: !4262)
!4266 = !DILocation(line: 124, column: 4, scope: !4259)
!4267 = !DILocation(line: 125, column: 10, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4262, file: !465, line: 125, column: 10)
!4269 = !DILocation(line: 125, column: 16, scope: !4268)
!4270 = !DILocation(line: 125, column: 23, scope: !4268)
!4271 = !DILocation(line: 125, column: 10, scope: !4262)
!4272 = !DILocation(line: 125, column: 47, scope: !4268)
!4273 = !DILocation(line: 125, column: 52, scope: !4268)
!4274 = !DILocation(line: 125, column: 58, scope: !4268)
!4275 = !DILocation(line: 125, column: 65, scope: !4268)
!4276 = !DILocation(line: 125, column: 27, scope: !4268)
!4277 = !DILocation(line: 125, column: 24, scope: !4268)
!4278 = !DILocation(line: 124, column: 38, scope: !4262)
!4279 = !DILocation(line: 124, column: 4, scope: !4262)
!4280 = distinct !{!4280, !4266, !4281}
!4281 = !DILocation(line: 125, column: 67, scope: !4259)
!4282 = !DILocation(line: 126, column: 15, scope: !4244)
!4283 = !DILocation(line: 126, column: 20, scope: !4244)
!4284 = !DILocation(line: 126, column: 31, scope: !4244)
!4285 = !DILocation(line: 126, column: 37, scope: !4244)
!4286 = !DILocation(line: 126, column: 4, scope: !4244)
!4287 = !DILocation(line: 127, column: 15, scope: !4244)
!4288 = !DILocation(line: 127, column: 20, scope: !4244)
!4289 = !DILocation(line: 127, column: 31, scope: !4244)
!4290 = !DILocation(line: 127, column: 4, scope: !4244)
!4291 = !DILocation(line: 128, column: 1, scope: !4244)
!4292 = distinct !DISubprogram(name: "jbig2_sd_glyph", scope: !465, file: !465, line: 132, type: !4293, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!483, !475, !17}
!4295 = !DILocalVariable(name: "dict", arg: 1, scope: !4292, file: !465, line: 132, type: !475)
!4296 = !DILocation(line: 132, column: 33, scope: !4292)
!4297 = !DILocalVariable(name: "id", arg: 2, scope: !4292, file: !465, line: 132, type: !17)
!4298 = !DILocation(line: 132, column: 52, scope: !4292)
!4299 = !DILocation(line: 134, column: 8, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4292, file: !465, line: 134, column: 8)
!4301 = !DILocation(line: 134, column: 13, scope: !4300)
!4302 = !DILocation(line: 134, column: 8, scope: !4292)
!4303 = !DILocation(line: 134, column: 22, scope: !4300)
!4304 = !DILocation(line: 135, column: 11, scope: !4292)
!4305 = !DILocation(line: 135, column: 17, scope: !4292)
!4306 = !DILocation(line: 135, column: 24, scope: !4292)
!4307 = !DILocation(line: 135, column: 4, scope: !4292)
!4308 = !DILocation(line: 136, column: 1, scope: !4292)
!4309 = distinct !DISubprogram(name: "jbig2_sd_count_referred", scope: !465, file: !465, line: 140, type: !4310, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!6, !4123, !4160}
!4312 = !DILocalVariable(name: "ctx", arg: 1, scope: !4309, file: !465, line: 140, type: !4123)
!4313 = !DILocation(line: 140, column: 35, scope: !4309)
!4314 = !DILocalVariable(name: "segment", arg: 2, scope: !4309, file: !465, line: 140, type: !4160)
!4315 = !DILocation(line: 140, column: 54, scope: !4309)
!4316 = !DILocalVariable(name: "index", scope: !4309, file: !465, line: 142, type: !6)
!4317 = !DILocation(line: 142, column: 9, scope: !4309)
!4318 = !DILocalVariable(name: "rsegment", scope: !4309, file: !465, line: 143, type: !4160)
!4319 = !DILocation(line: 143, column: 19, scope: !4309)
!4320 = !DILocalVariable(name: "n_dicts", scope: !4309, file: !465, line: 144, type: !6)
!4321 = !DILocation(line: 144, column: 9, scope: !4309)
!4322 = !DILocation(line: 146, column: 16, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4309, file: !465, line: 146, column: 5)
!4324 = !DILocation(line: 146, column: 10, scope: !4323)
!4325 = !DILocation(line: 146, column: 21, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4323, file: !465, line: 146, column: 5)
!4327 = !DILocation(line: 146, column: 29, scope: !4326)
!4328 = !DILocation(line: 146, column: 38, scope: !4326)
!4329 = !DILocation(line: 146, column: 27, scope: !4326)
!4330 = !DILocation(line: 146, column: 5, scope: !4323)
!4331 = !DILocation(line: 147, column: 39, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4326, file: !465, line: 146, column: 74)
!4333 = !DILocation(line: 147, column: 44, scope: !4332)
!4334 = !DILocation(line: 147, column: 53, scope: !4332)
!4335 = !DILocation(line: 147, column: 74, scope: !4332)
!4336 = !DILocation(line: 147, column: 20, scope: !4332)
!4337 = !DILocation(line: 147, column: 18, scope: !4332)
!4338 = !DILocation(line: 148, column: 13, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4332, file: !465, line: 148, column: 13)
!4340 = !DILocation(line: 148, column: 22, scope: !4339)
!4341 = !DILocation(line: 148, column: 27, scope: !4339)
!4342 = !DILocation(line: 148, column: 37, scope: !4339)
!4343 = !DILocation(line: 148, column: 43, scope: !4339)
!4344 = !DILocation(line: 148, column: 49, scope: !4339)
!4345 = !DILocation(line: 148, column: 13, scope: !4332)
!4346 = !DILocation(line: 148, column: 63, scope: !4339)
!4347 = !DILocation(line: 148, column: 56, scope: !4339)
!4348 = !DILocation(line: 149, column: 5, scope: !4332)
!4349 = !DILocation(line: 146, column: 70, scope: !4326)
!4350 = !DILocation(line: 146, column: 5, scope: !4326)
!4351 = distinct !{!4351, !4330, !4352}
!4352 = !DILocation(line: 149, column: 5, scope: !4323)
!4353 = !DILocation(line: 151, column: 13, scope: !4309)
!4354 = !DILocation(line: 151, column: 5, scope: !4309)
!4355 = distinct !DISubprogram(name: "jbig2_sd_list_referred", scope: !465, file: !465, line: 156, type: !4356, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!4358, !4123, !4160}
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!4359 = !DILocalVariable(name: "ctx", arg: 1, scope: !4355, file: !465, line: 156, type: !4123)
!4360 = !DILocation(line: 156, column: 34, scope: !4355)
!4361 = !DILocalVariable(name: "segment", arg: 2, scope: !4355, file: !465, line: 156, type: !4160)
!4362 = !DILocation(line: 156, column: 53, scope: !4355)
!4363 = !DILocalVariable(name: "index", scope: !4355, file: !465, line: 158, type: !6)
!4364 = !DILocation(line: 158, column: 9, scope: !4355)
!4365 = !DILocalVariable(name: "rsegment", scope: !4355, file: !465, line: 159, type: !4160)
!4366 = !DILocation(line: 159, column: 19, scope: !4355)
!4367 = !DILocalVariable(name: "dicts", scope: !4355, file: !465, line: 160, type: !4358)
!4368 = !DILocation(line: 160, column: 23, scope: !4355)
!4369 = !DILocalVariable(name: "n_dicts", scope: !4355, file: !465, line: 161, type: !6)
!4370 = !DILocation(line: 161, column: 9, scope: !4355)
!4371 = !DILocation(line: 161, column: 43, scope: !4355)
!4372 = !DILocation(line: 161, column: 48, scope: !4355)
!4373 = !DILocation(line: 161, column: 19, scope: !4355)
!4374 = !DILocalVariable(name: "dindex", scope: !4355, file: !465, line: 162, type: !6)
!4375 = !DILocation(line: 162, column: 9, scope: !4355)
!4376 = !DILocation(line: 164, column: 25, scope: !4355)
!4377 = !DILocation(line: 164, column: 30, scope: !4355)
!4378 = !DILocation(line: 164, column: 69, scope: !4355)
!4379 = !DILocation(line: 164, column: 67, scope: !4355)
!4380 = !DILocation(line: 164, column: 13, scope: !4355)
!4381 = !DILocation(line: 164, column: 11, scope: !4355)
!4382 = !DILocation(line: 165, column: 16, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4355, file: !465, line: 165, column: 5)
!4384 = !DILocation(line: 165, column: 10, scope: !4383)
!4385 = !DILocation(line: 165, column: 21, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4383, file: !465, line: 165, column: 5)
!4387 = !DILocation(line: 165, column: 29, scope: !4386)
!4388 = !DILocation(line: 165, column: 38, scope: !4386)
!4389 = !DILocation(line: 165, column: 27, scope: !4386)
!4390 = !DILocation(line: 165, column: 5, scope: !4383)
!4391 = !DILocation(line: 166, column: 39, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4386, file: !465, line: 165, column: 74)
!4393 = !DILocation(line: 166, column: 44, scope: !4392)
!4394 = !DILocation(line: 166, column: 53, scope: !4392)
!4395 = !DILocation(line: 166, column: 74, scope: !4392)
!4396 = !DILocation(line: 166, column: 20, scope: !4392)
!4397 = !DILocation(line: 166, column: 18, scope: !4392)
!4398 = !DILocation(line: 167, column: 13, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4392, file: !465, line: 167, column: 13)
!4400 = !DILocation(line: 167, column: 22, scope: !4399)
!4401 = !DILocation(line: 167, column: 27, scope: !4399)
!4402 = !DILocation(line: 167, column: 37, scope: !4399)
!4403 = !DILocation(line: 167, column: 43, scope: !4399)
!4404 = !DILocation(line: 167, column: 49, scope: !4399)
!4405 = !DILocation(line: 167, column: 13, scope: !4392)
!4406 = !DILocation(line: 169, column: 50, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4399, file: !465, line: 167, column: 56)
!4408 = !DILocation(line: 169, column: 60, scope: !4407)
!4409 = !DILocation(line: 169, column: 31, scope: !4407)
!4410 = !DILocation(line: 169, column: 13, scope: !4407)
!4411 = !DILocation(line: 169, column: 25, scope: !4407)
!4412 = !DILocation(line: 169, column: 29, scope: !4407)
!4413 = !DILocation(line: 170, column: 9, scope: !4407)
!4414 = !DILocation(line: 171, column: 5, scope: !4392)
!4415 = !DILocation(line: 165, column: 70, scope: !4386)
!4416 = !DILocation(line: 165, column: 5, scope: !4386)
!4417 = distinct !{!4417, !4390, !4418}
!4418 = !DILocation(line: 171, column: 5, scope: !4383)
!4419 = !DILocation(line: 173, column: 9, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4355, file: !465, line: 173, column: 9)
!4421 = !DILocation(line: 173, column: 19, scope: !4420)
!4422 = !DILocation(line: 173, column: 16, scope: !4420)
!4423 = !DILocation(line: 173, column: 9, scope: !4355)
!4424 = !DILocation(line: 175, column: 21, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4420, file: !465, line: 173, column: 28)
!4426 = !DILocation(line: 175, column: 48, scope: !4425)
!4427 = !DILocation(line: 175, column: 57, scope: !4425)
!4428 = !DILocation(line: 177, column: 13, scope: !4425)
!4429 = !DILocation(line: 177, column: 22, scope: !4425)
!4430 = !DILocation(line: 175, column: 9, scope: !4425)
!4431 = !DILocation(line: 178, column: 5, scope: !4425)
!4432 = !DILocation(line: 180, column: 13, scope: !4355)
!4433 = !DILocation(line: 180, column: 5, scope: !4355)
!4434 = distinct !DISubprogram(name: "jbig2_sd_cat", scope: !465, file: !465, line: 186, type: !4435, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!475, !4123, !6, !4358}
!4437 = !DILocalVariable(name: "ctx", arg: 1, scope: !4434, file: !465, line: 186, type: !4123)
!4438 = !DILocation(line: 186, column: 24, scope: !4434)
!4439 = !DILocalVariable(name: "n_dicts", arg: 2, scope: !4434, file: !465, line: 186, type: !6)
!4440 = !DILocation(line: 186, column: 33, scope: !4434)
!4441 = !DILocalVariable(name: "dicts", arg: 3, scope: !4434, file: !465, line: 186, type: !4358)
!4442 = !DILocation(line: 186, column: 60, scope: !4434)
!4443 = !DILocalVariable(name: "i", scope: !4434, file: !465, line: 188, type: !6)
!4444 = !DILocation(line: 188, column: 7, scope: !4434)
!4445 = !DILocalVariable(name: "j", scope: !4434, file: !465, line: 188, type: !6)
!4446 = !DILocation(line: 188, column: 9, scope: !4434)
!4447 = !DILocalVariable(name: "k", scope: !4434, file: !465, line: 188, type: !6)
!4448 = !DILocation(line: 188, column: 11, scope: !4434)
!4449 = !DILocalVariable(name: "symbols", scope: !4434, file: !465, line: 188, type: !6)
!4450 = !DILocation(line: 188, column: 14, scope: !4434)
!4451 = !DILocalVariable(name: "new", scope: !4434, file: !465, line: 189, type: !475)
!4452 = !DILocation(line: 189, column: 20, scope: !4434)
!4453 = !DILocation(line: 192, column: 11, scope: !4434)
!4454 = !DILocation(line: 193, column: 9, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4434, file: !465, line: 193, column: 3)
!4456 = !DILocation(line: 193, column: 7, scope: !4455)
!4457 = !DILocation(line: 193, column: 14, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4455, file: !465, line: 193, column: 3)
!4459 = !DILocation(line: 193, column: 18, scope: !4458)
!4460 = !DILocation(line: 193, column: 16, scope: !4458)
!4461 = !DILocation(line: 193, column: 3, scope: !4455)
!4462 = !DILocation(line: 194, column: 16, scope: !4458)
!4463 = !DILocation(line: 194, column: 22, scope: !4458)
!4464 = !DILocation(line: 194, column: 26, scope: !4458)
!4465 = !DILocation(line: 194, column: 13, scope: !4458)
!4466 = !DILocation(line: 194, column: 5, scope: !4458)
!4467 = !DILocation(line: 193, column: 28, scope: !4458)
!4468 = !DILocation(line: 193, column: 3, scope: !4458)
!4469 = distinct !{!4469, !4461, !4470}
!4470 = !DILocation(line: 194, column: 26, scope: !4455)
!4471 = !DILocation(line: 197, column: 22, scope: !4434)
!4472 = !DILocation(line: 197, column: 27, scope: !4434)
!4473 = !DILocation(line: 197, column: 9, scope: !4434)
!4474 = !DILocation(line: 197, column: 7, scope: !4434)
!4475 = !DILocation(line: 198, column: 7, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4434, file: !465, line: 198, column: 7)
!4477 = !DILocation(line: 198, column: 11, scope: !4476)
!4478 = !DILocation(line: 198, column: 7, scope: !4434)
!4479 = !DILocation(line: 199, column: 7, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4476, file: !465, line: 198, column: 20)
!4481 = !DILocation(line: 200, column: 12, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4480, file: !465, line: 200, column: 5)
!4483 = !DILocation(line: 200, column: 10, scope: !4482)
!4484 = !DILocation(line: 200, column: 17, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4482, file: !465, line: 200, column: 5)
!4486 = !DILocation(line: 200, column: 21, scope: !4485)
!4487 = !DILocation(line: 200, column: 19, scope: !4485)
!4488 = !DILocation(line: 200, column: 5, scope: !4482)
!4489 = !DILocation(line: 201, column: 14, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4485, file: !465, line: 201, column: 7)
!4491 = !DILocation(line: 201, column: 12, scope: !4490)
!4492 = !DILocation(line: 201, column: 19, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4490, file: !465, line: 201, column: 7)
!4494 = !DILocation(line: 201, column: 23, scope: !4493)
!4495 = !DILocation(line: 201, column: 29, scope: !4493)
!4496 = !DILocation(line: 201, column: 33, scope: !4493)
!4497 = !DILocation(line: 201, column: 21, scope: !4493)
!4498 = !DILocation(line: 201, column: 7, scope: !4490)
!4499 = !DILocation(line: 202, column: 46, scope: !4493)
!4500 = !DILocation(line: 202, column: 51, scope: !4493)
!4501 = !DILocation(line: 202, column: 57, scope: !4493)
!4502 = !DILocation(line: 202, column: 61, scope: !4493)
!4503 = !DILocation(line: 202, column: 68, scope: !4493)
!4504 = !DILocation(line: 202, column: 28, scope: !4493)
!4505 = !DILocation(line: 202, column: 9, scope: !4493)
!4506 = !DILocation(line: 202, column: 14, scope: !4493)
!4507 = !DILocation(line: 202, column: 22, scope: !4493)
!4508 = !DILocation(line: 202, column: 26, scope: !4493)
!4509 = !DILocation(line: 201, column: 45, scope: !4493)
!4510 = !DILocation(line: 201, column: 7, scope: !4493)
!4511 = distinct !{!4511, !4498, !4512}
!4512 = !DILocation(line: 202, column: 70, scope: !4490)
!4513 = !DILocation(line: 200, column: 31, scope: !4485)
!4514 = !DILocation(line: 200, column: 5, scope: !4485)
!4515 = distinct !{!4515, !4488, !4516}
!4516 = !DILocation(line: 202, column: 70, scope: !4482)
!4517 = !DILocation(line: 203, column: 3, scope: !4480)
!4518 = !DILocation(line: 205, column: 10, scope: !4434)
!4519 = !DILocation(line: 205, column: 3, scope: !4434)
!4520 = distinct !DISubprogram(name: "jbig2_symbol_dictionary", scope: !465, file: !465, line: 741, type: !4521, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!6, !4123, !4160, !219}
!4523 = !DILocalVariable(name: "ctx", arg: 1, scope: !4520, file: !465, line: 741, type: !4123)
!4524 = !DILocation(line: 741, column: 35, scope: !4520)
!4525 = !DILocalVariable(name: "segment", arg: 2, scope: !4520, file: !465, line: 741, type: !4160)
!4526 = !DILocation(line: 741, column: 54, scope: !4520)
!4527 = !DILocalVariable(name: "segment_data", arg: 3, scope: !4520, file: !465, line: 742, type: !219)
!4528 = !DILocation(line: 742, column: 16, scope: !4520)
!4529 = !DILocalVariable(name: "params", scope: !4520, file: !465, line: 744, type: !4530)
!4530 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2SymbolDictParams", file: !465, line: 61, baseType: !4531)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !465, line: 46, size: 704, elements: !4532)
!4532 = !{!4533, !4534, !4535, !4536, !4537, !4538, !4539, !4558, !4559, !4560, !4561, !4562, !4565, !4566}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "SDHUFF", scope: !4531, file: !465, line: 47, baseType: !188, size: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "SDREFAGG", scope: !4531, file: !465, line: 48, baseType: !188, size: 32, offset: 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "SDNUMINSYMS", scope: !4531, file: !465, line: 49, baseType: !141, size: 32, offset: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "SDINSYMS", scope: !4531, file: !465, line: 50, baseType: !475, size: 64, offset: 128)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "SDNUMNEWSYMS", scope: !4531, file: !465, line: 51, baseType: !32, size: 32, offset: 192)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "SDNUMEXSYMS", scope: !4531, file: !465, line: 52, baseType: !32, size: 32, offset: 224)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "SDHUFFDH", scope: !4531, file: !465, line: 53, baseType: !4540, size: 64, offset: 256)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanTable", file: !293, line: 26, baseType: !4542)
!4542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanTable", file: !293, line: 39, size: 128, elements: !4543)
!4543 = !{!4544, !4545}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "log_table_size", scope: !4542, file: !293, line: 40, baseType: !6, size: 32)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4542, file: !293, line: 41, baseType: !4546, size: 64, offset: 64)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4547 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanEntry", file: !293, line: 24, baseType: !4548)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanEntry", file: !293, line: 29, size: 128, elements: !4549)
!4549 = !{!4550, !4555, !4556, !4557}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !4548, file: !293, line: 33, baseType: !4551, size: 64)
!4551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4548, file: !293, line: 30, size: 64, elements: !4552)
!4552 = !{!4553, !4554}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELOW", scope: !4551, file: !293, line: 31, baseType: !141, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "ext_table", scope: !4551, file: !293, line: 32, baseType: !4540, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "PREFLEN", scope: !4548, file: !293, line: 34, baseType: !145, size: 8, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELEN", scope: !4548, file: !293, line: 35, baseType: !145, size: 8, offset: 72)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4548, file: !293, line: 36, baseType: !145, size: 8, offset: 80)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "SDHUFFDW", scope: !4531, file: !465, line: 54, baseType: !4540, size: 64, offset: 320)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "SDHUFFBMSIZE", scope: !4531, file: !465, line: 55, baseType: !4540, size: 64, offset: 384)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "SDHUFFAGGINST", scope: !4531, file: !465, line: 56, baseType: !4540, size: 64, offset: 448)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "SDTEMPLATE", scope: !4531, file: !465, line: 57, baseType: !6, size: 32, offset: 512)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "sdat", scope: !4531, file: !465, line: 58, baseType: !4563, size: 64, offset: 544)
!4563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4564, size: 64, elements: !243)
!4564 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !33, line: 36, baseType: !645)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "SDRTEMPLATE", scope: !4531, file: !465, line: 59, baseType: !188, size: 32, offset: 608)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "sdrat", scope: !4531, file: !465, line: 60, baseType: !4567, size: 32, offset: 640)
!4567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4564, size: 32, elements: !4568)
!4568 = !{!4569}
!4569 = !DISubrange(count: 4)
!4570 = !DILocation(line: 744, column: 25, scope: !4520)
!4571 = !DILocalVariable(name: "flags", scope: !4520, file: !465, line: 745, type: !185)
!4572 = !DILocation(line: 745, column: 12, scope: !4520)
!4573 = !DILocalVariable(name: "sdat_bytes", scope: !4520, file: !465, line: 746, type: !6)
!4574 = !DILocation(line: 746, column: 7, scope: !4520)
!4575 = !DILocalVariable(name: "offset", scope: !4520, file: !465, line: 747, type: !6)
!4576 = !DILocation(line: 747, column: 7, scope: !4520)
!4577 = !DILocalVariable(name: "GB_stats", scope: !4520, file: !465, line: 748, type: !595)
!4578 = !DILocation(line: 748, column: 17, scope: !4520)
!4579 = !DILocalVariable(name: "GR_stats", scope: !4520, file: !465, line: 749, type: !595)
!4580 = !DILocation(line: 749, column: 17, scope: !4520)
!4581 = !DILocation(line: 751, column: 7, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 751, column: 7)
!4583 = !DILocation(line: 751, column: 16, scope: !4582)
!4584 = !DILocation(line: 751, column: 28, scope: !4582)
!4585 = !DILocation(line: 751, column: 7, scope: !4520)
!4586 = !DILocation(line: 752, column: 5, scope: !4582)
!4587 = !DILocation(line: 755, column: 27, scope: !4520)
!4588 = !DILocation(line: 755, column: 11, scope: !4520)
!4589 = !DILocation(line: 755, column: 9, scope: !4520)
!4590 = !DILocation(line: 756, column: 19, scope: !4520)
!4591 = !DILocation(line: 756, column: 25, scope: !4520)
!4592 = !DILocation(line: 756, column: 10, scope: !4520)
!4593 = !DILocation(line: 756, column: 17, scope: !4520)
!4594 = !DILocation(line: 757, column: 22, scope: !4520)
!4595 = !DILocation(line: 757, column: 28, scope: !4520)
!4596 = !DILocation(line: 757, column: 34, scope: !4520)
!4597 = !DILocation(line: 757, column: 10, scope: !4520)
!4598 = !DILocation(line: 757, column: 19, scope: !4520)
!4599 = !DILocation(line: 758, column: 24, scope: !4520)
!4600 = !DILocation(line: 758, column: 30, scope: !4520)
!4601 = !DILocation(line: 758, column: 37, scope: !4520)
!4602 = !DILocation(line: 758, column: 10, scope: !4520)
!4603 = !DILocation(line: 758, column: 21, scope: !4520)
!4604 = !DILocation(line: 759, column: 25, scope: !4520)
!4605 = !DILocation(line: 759, column: 31, scope: !4520)
!4606 = !DILocation(line: 759, column: 38, scope: !4520)
!4607 = !DILocation(line: 759, column: 10, scope: !4520)
!4608 = !DILocation(line: 759, column: 22, scope: !4520)
!4609 = !DILocation(line: 761, column: 10, scope: !4520)
!4610 = !DILocation(line: 761, column: 19, scope: !4520)
!4611 = !DILocation(line: 762, column: 10, scope: !4520)
!4612 = !DILocation(line: 762, column: 19, scope: !4520)
!4613 = !DILocation(line: 763, column: 10, scope: !4520)
!4614 = !DILocation(line: 763, column: 23, scope: !4520)
!4615 = !DILocation(line: 764, column: 10, scope: !4520)
!4616 = !DILocation(line: 764, column: 24, scope: !4520)
!4617 = !DILocation(line: 766, column: 14, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 766, column: 7)
!4619 = !DILocation(line: 766, column: 7, scope: !4618)
!4620 = !DILocation(line: 766, column: 7, scope: !4520)
!4621 = !DILocation(line: 767, column: 14, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !465, line: 766, column: 22)
!4623 = !DILocation(line: 767, column: 20, scope: !4622)
!4624 = !DILocation(line: 767, column: 30, scope: !4622)
!4625 = !DILocation(line: 767, column: 5, scope: !4622)
!4626 = !DILocation(line: 769, column: 46, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !465, line: 767, column: 36)
!4628 = !DILocation(line: 769, column: 20, scope: !4627)
!4629 = !DILocation(line: 769, column: 9, scope: !4627)
!4630 = !DILocation(line: 769, column: 18, scope: !4627)
!4631 = !DILocation(line: 771, column: 2, scope: !4627)
!4632 = !DILocation(line: 773, column: 46, scope: !4627)
!4633 = !DILocation(line: 773, column: 20, scope: !4627)
!4634 = !DILocation(line: 773, column: 9, scope: !4627)
!4635 = !DILocation(line: 773, column: 18, scope: !4627)
!4636 = !DILocation(line: 775, column: 2, scope: !4627)
!4637 = !DILocation(line: 778, column: 21, scope: !4627)
!4638 = !DILocation(line: 778, column: 48, scope: !4627)
!4639 = !DILocation(line: 778, column: 57, scope: !4627)
!4640 = !DILocation(line: 778, column: 9, scope: !4627)
!4641 = !DILocation(line: 778, column: 2, scope: !4627)
!4642 = !DILocation(line: 782, column: 21, scope: !4627)
!4643 = !DILocation(line: 782, column: 48, scope: !4627)
!4644 = !DILocation(line: 782, column: 57, scope: !4627)
!4645 = !DILocation(line: 782, column: 9, scope: !4627)
!4646 = !DILocation(line: 782, column: 2, scope: !4627)
!4647 = !DILocation(line: 786, column: 14, scope: !4622)
!4648 = !DILocation(line: 786, column: 20, scope: !4622)
!4649 = !DILocation(line: 786, column: 30, scope: !4622)
!4650 = !DILocation(line: 786, column: 5, scope: !4622)
!4651 = !DILocation(line: 788, column: 46, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4622, file: !465, line: 786, column: 36)
!4653 = !DILocation(line: 788, column: 20, scope: !4652)
!4654 = !DILocation(line: 788, column: 9, scope: !4652)
!4655 = !DILocation(line: 788, column: 18, scope: !4652)
!4656 = !DILocation(line: 790, column: 2, scope: !4652)
!4657 = !DILocation(line: 792, column: 46, scope: !4652)
!4658 = !DILocation(line: 792, column: 20, scope: !4652)
!4659 = !DILocation(line: 792, column: 9, scope: !4652)
!4660 = !DILocation(line: 792, column: 18, scope: !4652)
!4661 = !DILocation(line: 794, column: 2, scope: !4652)
!4662 = !DILocation(line: 797, column: 21, scope: !4652)
!4663 = !DILocation(line: 797, column: 48, scope: !4652)
!4664 = !DILocation(line: 797, column: 57, scope: !4652)
!4665 = !DILocation(line: 797, column: 9, scope: !4652)
!4666 = !DILocation(line: 797, column: 2, scope: !4652)
!4667 = !DILocation(line: 801, column: 21, scope: !4652)
!4668 = !DILocation(line: 801, column: 48, scope: !4652)
!4669 = !DILocation(line: 801, column: 57, scope: !4652)
!4670 = !DILocation(line: 801, column: 9, scope: !4652)
!4671 = !DILocation(line: 801, column: 2, scope: !4652)
!4672 = !DILocation(line: 805, column: 9, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4622, file: !465, line: 805, column: 9)
!4674 = !DILocation(line: 805, column: 15, scope: !4673)
!4675 = !DILocation(line: 805, column: 9, scope: !4622)
!4676 = !DILocation(line: 807, column: 21, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !465, line: 805, column: 25)
!4678 = !DILocation(line: 807, column: 48, scope: !4677)
!4679 = !DILocation(line: 807, column: 57, scope: !4677)
!4680 = !DILocation(line: 807, column: 9, scope: !4677)
!4681 = !DILocation(line: 807, column: 2, scope: !4677)
!4682 = !DILocation(line: 811, column: 50, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4673, file: !465, line: 809, column: 12)
!4684 = !DILocation(line: 811, column: 24, scope: !4683)
!4685 = !DILocation(line: 811, column: 9, scope: !4683)
!4686 = !DILocation(line: 811, column: 22, scope: !4683)
!4687 = !DILocation(line: 814, column: 9, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4622, file: !465, line: 814, column: 9)
!4689 = !DILocation(line: 814, column: 15, scope: !4688)
!4690 = !DILocation(line: 814, column: 9, scope: !4622)
!4691 = !DILocation(line: 816, column: 21, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4688, file: !465, line: 814, column: 25)
!4693 = !DILocation(line: 816, column: 48, scope: !4692)
!4694 = !DILocation(line: 816, column: 57, scope: !4692)
!4695 = !DILocation(line: 816, column: 9, scope: !4692)
!4696 = !DILocation(line: 816, column: 2, scope: !4692)
!4697 = !DILocation(line: 820, column: 51, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4688, file: !465, line: 818, column: 12)
!4699 = !DILocation(line: 820, column: 25, scope: !4698)
!4700 = !DILocation(line: 820, column: 9, scope: !4698)
!4701 = !DILocation(line: 820, column: 23, scope: !4698)
!4702 = !DILocation(line: 823, column: 3, scope: !4622)
!4703 = !DILocation(line: 827, column: 15, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 827, column: 7)
!4705 = !DILocation(line: 827, column: 8, scope: !4704)
!4706 = !DILocation(line: 827, column: 7, scope: !4520)
!4707 = !DILocation(line: 828, column: 9, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !465, line: 828, column: 9)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !465, line: 827, column: 23)
!4710 = !DILocation(line: 828, column: 15, scope: !4708)
!4711 = !DILocation(line: 828, column: 9, scope: !4709)
!4712 = !DILocation(line: 829, column: 19, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4708, file: !465, line: 828, column: 25)
!4714 = !DILocation(line: 829, column: 48, scope: !4713)
!4715 = !DILocation(line: 829, column: 57, scope: !4713)
!4716 = !DILocation(line: 829, column: 7, scope: !4713)
!4717 = !DILocation(line: 831, column: 5, scope: !4713)
!4718 = !DILocation(line: 832, column: 9, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4709, file: !465, line: 832, column: 9)
!4720 = !DILocation(line: 832, column: 15, scope: !4719)
!4721 = !DILocation(line: 832, column: 9, scope: !4709)
!4722 = !DILocation(line: 833, column: 19, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4719, file: !465, line: 832, column: 25)
!4724 = !DILocation(line: 833, column: 48, scope: !4723)
!4725 = !DILocation(line: 833, column: 57, scope: !4723)
!4726 = !DILocation(line: 833, column: 7, scope: !4723)
!4727 = !DILocation(line: 835, column: 5, scope: !4723)
!4728 = !DILocation(line: 836, column: 3, scope: !4709)
!4729 = !DILocation(line: 838, column: 7, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 838, column: 7)
!4731 = !DILocation(line: 838, column: 13, scope: !4730)
!4732 = !DILocation(line: 838, column: 7, scope: !4520)
!4733 = !DILocation(line: 839, column: 19, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !465, line: 838, column: 23)
!4735 = !DILocation(line: 839, column: 48, scope: !4734)
!4736 = !DILocation(line: 839, column: 57, scope: !4734)
!4737 = !DILocation(line: 839, column: 7, scope: !4734)
!4738 = !DILocation(line: 841, column: 3, scope: !4734)
!4739 = !DILocation(line: 844, column: 23, scope: !4520)
!4740 = !DILocation(line: 844, column: 16, scope: !4520)
!4741 = !DILocation(line: 844, column: 43, scope: !4520)
!4742 = !DILocation(line: 844, column: 54, scope: !4520)
!4743 = !DILocation(line: 844, column: 36, scope: !4520)
!4744 = !DILocation(line: 844, column: 14, scope: !4520)
!4745 = !DILocation(line: 845, column: 17, scope: !4520)
!4746 = !DILocation(line: 845, column: 3, scope: !4520)
!4747 = !DILocation(line: 845, column: 23, scope: !4520)
!4748 = !DILocation(line: 845, column: 36, scope: !4520)
!4749 = !DILocation(line: 845, column: 41, scope: !4520)
!4750 = !DILocation(line: 846, column: 16, scope: !4520)
!4751 = !DILocation(line: 846, column: 14, scope: !4520)
!4752 = !DILocation(line: 846, column: 10, scope: !4520)
!4753 = !DILocation(line: 849, column: 14, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 849, column: 7)
!4755 = !DILocation(line: 849, column: 7, scope: !4754)
!4756 = !DILocation(line: 849, column: 23, scope: !4754)
!4757 = !DILocation(line: 849, column: 34, scope: !4754)
!4758 = !DILocation(line: 849, column: 27, scope: !4754)
!4759 = !DILocation(line: 849, column: 7, scope: !4520)
!4760 = !DILocation(line: 850, column: 11, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !465, line: 850, column: 11)
!4762 = distinct !DILexicalBlock(scope: !4754, file: !465, line: 849, column: 47)
!4763 = !DILocation(line: 850, column: 18, scope: !4761)
!4764 = !DILocation(line: 850, column: 24, scope: !4761)
!4765 = !DILocation(line: 850, column: 33, scope: !4761)
!4766 = !DILocation(line: 850, column: 22, scope: !4761)
!4767 = !DILocation(line: 850, column: 11, scope: !4762)
!4768 = !DILocation(line: 851, column: 2, scope: !4761)
!4769 = !DILocation(line: 852, column: 21, scope: !4762)
!4770 = !DILocation(line: 852, column: 7, scope: !4762)
!4771 = !DILocation(line: 852, column: 28, scope: !4762)
!4772 = !DILocation(line: 852, column: 43, scope: !4762)
!4773 = !DILocation(line: 852, column: 41, scope: !4762)
!4774 = !DILocation(line: 853, column: 14, scope: !4762)
!4775 = !DILocation(line: 854, column: 3, scope: !4762)
!4776 = !DILocation(line: 857, column: 21, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4754, file: !465, line: 854, column: 10)
!4778 = !DILocation(line: 857, column: 7, scope: !4777)
!4779 = !DILocation(line: 860, column: 7, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 860, column: 7)
!4781 = !DILocation(line: 860, column: 14, scope: !4780)
!4782 = !DILocation(line: 860, column: 20, scope: !4780)
!4783 = !DILocation(line: 860, column: 29, scope: !4780)
!4784 = !DILocation(line: 860, column: 18, scope: !4780)
!4785 = !DILocation(line: 860, column: 7, scope: !4520)
!4786 = !DILocation(line: 861, column: 5, scope: !4780)
!4787 = !DILocation(line: 864, column: 40, scope: !4520)
!4788 = !DILocation(line: 864, column: 55, scope: !4520)
!4789 = !DILocation(line: 864, column: 53, scope: !4520)
!4790 = !DILocation(line: 864, column: 24, scope: !4520)
!4791 = !DILocation(line: 864, column: 10, scope: !4520)
!4792 = !DILocation(line: 864, column: 22, scope: !4520)
!4793 = !DILocation(line: 866, column: 41, scope: !4520)
!4794 = !DILocation(line: 866, column: 56, scope: !4520)
!4795 = !DILocation(line: 866, column: 54, scope: !4520)
!4796 = !DILocation(line: 866, column: 63, scope: !4520)
!4797 = !DILocation(line: 866, column: 25, scope: !4520)
!4798 = !DILocation(line: 866, column: 10, scope: !4520)
!4799 = !DILocation(line: 866, column: 23, scope: !4520)
!4800 = !DILocation(line: 867, column: 10, scope: !4520)
!4801 = !DILocation(line: 869, column: 15, scope: !4520)
!4802 = !DILocation(line: 869, column: 41, scope: !4520)
!4803 = !DILocation(line: 869, column: 50, scope: !4520)
!4804 = !DILocation(line: 871, column: 8, scope: !4520)
!4805 = !DILocation(line: 871, column: 22, scope: !4520)
!4806 = !DILocation(line: 871, column: 42, scope: !4520)
!4807 = !DILocation(line: 869, column: 3, scope: !4520)
!4808 = !DILocation(line: 875, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 874, column: 3)
!4810 = !DILocalVariable(name: "n_dicts", scope: !4809, file: !465, line: 875, type: !6)
!4811 = !DILocation(line: 875, column: 43, scope: !4809)
!4812 = !DILocation(line: 875, column: 48, scope: !4809)
!4813 = !DILocation(line: 875, column: 19, scope: !4809)
!4814 = !DILocalVariable(name: "dicts", scope: !4809, file: !465, line: 876, type: !4358)
!4815 = !DILocation(line: 876, column: 23, scope: !4809)
!4816 = !DILocation(line: 878, column: 12, scope: !4809)
!4817 = !DILocation(line: 878, column: 21, scope: !4809)
!4818 = !DILocation(line: 879, column: 9, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4809, file: !465, line: 879, column: 9)
!4820 = !DILocation(line: 879, column: 17, scope: !4819)
!4821 = !DILocation(line: 879, column: 9, scope: !4809)
!4822 = !DILocation(line: 880, column: 38, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4819, file: !465, line: 879, column: 22)
!4824 = !DILocation(line: 880, column: 43, scope: !4823)
!4825 = !DILocation(line: 880, column: 15, scope: !4823)
!4826 = !DILocation(line: 880, column: 13, scope: !4823)
!4827 = !DILocation(line: 881, column: 38, scope: !4823)
!4828 = !DILocation(line: 881, column: 43, scope: !4823)
!4829 = !DILocation(line: 881, column: 52, scope: !4823)
!4830 = !DILocation(line: 881, column: 25, scope: !4823)
!4831 = !DILocation(line: 881, column: 14, scope: !4823)
!4832 = !DILocation(line: 881, column: 23, scope: !4823)
!4833 = !DILocation(line: 882, column: 5, scope: !4823)
!4834 = !DILocation(line: 883, column: 16, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4809, file: !465, line: 883, column: 9)
!4836 = !DILocation(line: 883, column: 25, scope: !4835)
!4837 = !DILocation(line: 883, column: 9, scope: !4809)
!4838 = !DILocation(line: 884, column: 35, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4835, file: !465, line: 883, column: 34)
!4840 = !DILocation(line: 884, column: 45, scope: !4839)
!4841 = !DILocation(line: 884, column: 14, scope: !4839)
!4842 = !DILocation(line: 884, column: 26, scope: !4839)
!4843 = !DILocation(line: 885, column: 5, scope: !4839)
!4844 = !DILocation(line: 886, column: 13, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4835, file: !465, line: 885, column: 12)
!4846 = !DILocation(line: 886, column: 25, scope: !4845)
!4847 = !DILocation(line: 891, column: 15, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 891, column: 7)
!4849 = !DILocation(line: 891, column: 8, scope: !4848)
!4850 = !DILocation(line: 891, column: 7, scope: !4520)
!4851 = !DILocalVariable(name: "stats_size", scope: !4852, file: !465, line: 892, type: !6)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !465, line: 891, column: 23)
!4853 = !DILocation(line: 892, column: 11, scope: !4852)
!4854 = !DILocation(line: 892, column: 31, scope: !4852)
!4855 = !DILocation(line: 892, column: 42, scope: !4852)
!4856 = !DILocation(line: 892, column: 24, scope: !4852)
!4857 = !DILocation(line: 893, column: 9, scope: !4852)
!4858 = !DILocation(line: 893, column: 20, scope: !4852)
!4859 = !DILocation(line: 893, column: 2, scope: !4852)
!4860 = !DILocation(line: 894, column: 30, scope: !4852)
!4861 = !DILocation(line: 894, column: 35, scope: !4852)
!4862 = !DILocation(line: 894, column: 46, scope: !4852)
!4863 = !DILocation(line: 894, column: 18, scope: !4852)
!4864 = !DILocation(line: 894, column: 16, scope: !4852)
!4865 = !DILocation(line: 895, column: 14, scope: !4852)
!4866 = !DILocation(line: 895, column: 27, scope: !4852)
!4867 = !DILocation(line: 895, column: 7, scope: !4852)
!4868 = !DILocation(line: 896, column: 18, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4852, file: !465, line: 896, column: 11)
!4870 = !DILocation(line: 896, column: 11, scope: !4869)
!4871 = !DILocation(line: 896, column: 11, scope: !4852)
!4872 = !DILocation(line: 897, column: 22, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !465, line: 896, column: 28)
!4874 = !DILocation(line: 897, column: 15, scope: !4873)
!4875 = !DILocation(line: 897, column: 13, scope: !4873)
!4876 = !DILocation(line: 898, column: 25, scope: !4873)
!4877 = !DILocation(line: 898, column: 30, scope: !4873)
!4878 = !DILocation(line: 898, column: 41, scope: !4873)
!4879 = !DILocation(line: 898, column: 13, scope: !4873)
!4880 = !DILocation(line: 898, column: 11, scope: !4873)
!4881 = !DILocation(line: 899, column: 9, scope: !4873)
!4882 = !DILocation(line: 899, column: 22, scope: !4873)
!4883 = !DILocation(line: 899, column: 2, scope: !4873)
!4884 = !DILocation(line: 900, column: 7, scope: !4873)
!4885 = !DILocation(line: 901, column: 3, scope: !4852)
!4886 = !DILocation(line: 903, column: 7, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 903, column: 7)
!4888 = !DILocation(line: 903, column: 13, scope: !4887)
!4889 = !DILocation(line: 903, column: 7, scope: !4520)
!4890 = !DILocation(line: 904, column: 19, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !465, line: 903, column: 23)
!4892 = !DILocation(line: 904, column: 48, scope: !4891)
!4893 = !DILocation(line: 904, column: 57, scope: !4891)
!4894 = !DILocation(line: 904, column: 7, scope: !4891)
!4895 = !DILocation(line: 906, column: 3, scope: !4891)
!4896 = !DILocation(line: 908, column: 54, scope: !4520)
!4897 = !DILocation(line: 908, column: 59, scope: !4520)
!4898 = !DILocation(line: 910, column: 7, scope: !4520)
!4899 = !DILocation(line: 910, column: 22, scope: !4520)
!4900 = !DILocation(line: 910, column: 20, scope: !4520)
!4901 = !DILocation(line: 911, column: 7, scope: !4520)
!4902 = !DILocation(line: 911, column: 16, scope: !4520)
!4903 = !DILocation(line: 911, column: 30, scope: !4520)
!4904 = !DILocation(line: 911, column: 28, scope: !4520)
!4905 = !DILocation(line: 912, column: 7, scope: !4520)
!4906 = !DILocation(line: 912, column: 17, scope: !4520)
!4907 = !DILocation(line: 908, column: 29, scope: !4520)
!4908 = !DILocation(line: 908, column: 21, scope: !4520)
!4909 = !DILocation(line: 908, column: 3, scope: !4520)
!4910 = !DILocation(line: 908, column: 12, scope: !4520)
!4911 = !DILocation(line: 908, column: 19, scope: !4520)
!4912 = !DILocation(line: 917, column: 14, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4520, file: !465, line: 917, column: 7)
!4914 = !DILocation(line: 917, column: 7, scope: !4913)
!4915 = !DILocation(line: 917, column: 7, scope: !4520)
!4916 = !DILocation(line: 918, column: 35, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !465, line: 917, column: 22)
!4918 = !DILocation(line: 918, column: 47, scope: !4917)
!4919 = !DILocation(line: 918, column: 7, scope: !4917)
!4920 = !DILocation(line: 919, column: 35, scope: !4917)
!4921 = !DILocation(line: 919, column: 47, scope: !4917)
!4922 = !DILocation(line: 919, column: 7, scope: !4917)
!4923 = !DILocation(line: 920, column: 35, scope: !4917)
!4924 = !DILocation(line: 920, column: 47, scope: !4917)
!4925 = !DILocation(line: 920, column: 7, scope: !4917)
!4926 = !DILocation(line: 921, column: 35, scope: !4917)
!4927 = !DILocation(line: 921, column: 47, scope: !4917)
!4928 = !DILocation(line: 921, column: 7, scope: !4917)
!4929 = !DILocation(line: 922, column: 3, scope: !4917)
!4930 = !DILocation(line: 926, column: 11, scope: !4520)
!4931 = !DILocation(line: 926, column: 20, scope: !4520)
!4932 = !DILocation(line: 926, column: 27, scope: !4520)
!4933 = !DILocation(line: 926, column: 10, scope: !4520)
!4934 = !DILocation(line: 926, column: 3, scope: !4520)
!4935 = !DILocation(line: 929, column: 22, scope: !4520)
!4936 = !DILocation(line: 929, column: 49, scope: !4520)
!4937 = !DILocation(line: 929, column: 58, scope: !4520)
!4938 = !DILocation(line: 929, column: 10, scope: !4520)
!4939 = !DILocation(line: 929, column: 3, scope: !4520)
!4940 = !DILocation(line: 931, column: 1, scope: !4520)
!4941 = distinct !DISubprogram(name: "jbig2_decode_symbol_dict", scope: !465, file: !465, line: 213, type: !4942, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !70)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{!475, !4123, !4160, !4944, !219, !119, !595, !595}
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 64)
!4945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4530)
!4946 = !DILocalVariable(name: "ctx", arg: 1, scope: !4941, file: !465, line: 213, type: !4123)
!4947 = !DILocation(line: 213, column: 36, scope: !4941)
!4948 = !DILocalVariable(name: "segment", arg: 2, scope: !4941, file: !465, line: 214, type: !4160)
!4949 = !DILocation(line: 214, column: 19, scope: !4941)
!4950 = !DILocalVariable(name: "params", arg: 3, scope: !4941, file: !465, line: 215, type: !4944)
!4951 = !DILocation(line: 215, column: 34, scope: !4941)
!4952 = !DILocalVariable(name: "data", arg: 4, scope: !4941, file: !465, line: 216, type: !219)
!4953 = !DILocation(line: 216, column: 17, scope: !4941)
!4954 = !DILocalVariable(name: "size", arg: 5, scope: !4941, file: !465, line: 216, type: !119)
!4955 = !DILocation(line: 216, column: 30, scope: !4941)
!4956 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !4941, file: !465, line: 217, type: !595)
!4957 = !DILocation(line: 217, column: 19, scope: !4941)
!4958 = !DILocalVariable(name: "GR_stats", arg: 7, scope: !4941, file: !465, line: 218, type: !595)
!4959 = !DILocation(line: 218, column: 19, scope: !4941)
!4960 = !DILocalVariable(name: "SDNEWSYMS", scope: !4941, file: !465, line: 220, type: !475)
!4961 = !DILocation(line: 220, column: 20, scope: !4941)
!4962 = !DILocalVariable(name: "SDEXSYMS", scope: !4941, file: !465, line: 221, type: !475)
!4963 = !DILocation(line: 221, column: 20, scope: !4941)
!4964 = !DILocalVariable(name: "HCHEIGHT", scope: !4941, file: !465, line: 222, type: !141)
!4965 = !DILocation(line: 222, column: 11, scope: !4941)
!4966 = !DILocalVariable(name: "NSYMSDECODED", scope: !4941, file: !465, line: 223, type: !32)
!4967 = !DILocation(line: 223, column: 12, scope: !4941)
!4968 = !DILocalVariable(name: "SYMWIDTH", scope: !4941, file: !465, line: 224, type: !141)
!4969 = !DILocation(line: 224, column: 11, scope: !4941)
!4970 = !DILocalVariable(name: "TOTWIDTH", scope: !4941, file: !465, line: 224, type: !141)
!4971 = !DILocation(line: 224, column: 21, scope: !4941)
!4972 = !DILocalVariable(name: "HCFIRSTSYM", scope: !4941, file: !465, line: 225, type: !32)
!4973 = !DILocation(line: 225, column: 12, scope: !4941)
!4974 = !DILocalVariable(name: "SDNEWSYMWIDTHS", scope: !4941, file: !465, line: 226, type: !166)
!4975 = !DILocation(line: 226, column: 13, scope: !4941)
!4976 = !DILocalVariable(name: "SBSYMCODELEN", scope: !4941, file: !465, line: 227, type: !6)
!4977 = !DILocation(line: 227, column: 7, scope: !4941)
!4978 = !DILocalVariable(name: "ws", scope: !4941, file: !465, line: 228, type: !497)
!4979 = !DILocation(line: 228, column: 20, scope: !4941)
!4980 = !DILocalVariable(name: "hs", scope: !4941, file: !465, line: 229, type: !4981)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanState", file: !293, line: 25, baseType: !4983)
!4983 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanState", file: !293, line: 25, flags: DIFlagFwdDecl)
!4984 = !DILocation(line: 229, column: 22, scope: !4941)
!4985 = !DILocalVariable(name: "SDHUFFRDX", scope: !4941, file: !465, line: 230, type: !4540)
!4986 = !DILocation(line: 230, column: 22, scope: !4941)
!4987 = !DILocalVariable(name: "as", scope: !4941, file: !465, line: 231, type: !4988)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithState", file: !257, line: 19, baseType: !4990)
!4990 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2ArithState", file: !257, line: 19, flags: DIFlagFwdDecl)
!4991 = !DILocation(line: 231, column: 20, scope: !4941)
!4992 = !DILocalVariable(name: "IADH", scope: !4941, file: !465, line: 232, type: !4993)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithIntCtx", file: !577, line: 19, baseType: !4995)
!4995 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2ArithIntCtx", file: !577, line: 19, flags: DIFlagFwdDecl)
!4996 = !DILocation(line: 232, column: 21, scope: !4941)
!4997 = !DILocalVariable(name: "IADW", scope: !4941, file: !465, line: 233, type: !4993)
!4998 = !DILocation(line: 233, column: 21, scope: !4941)
!4999 = !DILocalVariable(name: "IAEX", scope: !4941, file: !465, line: 234, type: !4993)
!5000 = !DILocation(line: 234, column: 21, scope: !4941)
!5001 = !DILocalVariable(name: "IAAI", scope: !4941, file: !465, line: 235, type: !4993)
!5002 = !DILocation(line: 235, column: 21, scope: !4941)
!5003 = !DILocalVariable(name: "IAID", scope: !4941, file: !465, line: 236, type: !5004)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2ArithIaidCtx", file: !590, line: 19, baseType: !5006)
!5006 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2ArithIaidCtx", file: !590, line: 19, flags: DIFlagFwdDecl)
!5007 = !DILocation(line: 236, column: 22, scope: !4941)
!5008 = !DILocalVariable(name: "IARDX", scope: !4941, file: !465, line: 237, type: !4993)
!5009 = !DILocation(line: 237, column: 21, scope: !4941)
!5010 = !DILocalVariable(name: "IARDY", scope: !4941, file: !465, line: 238, type: !4993)
!5011 = !DILocation(line: 238, column: 21, scope: !4941)
!5012 = !DILocalVariable(name: "code", scope: !4941, file: !465, line: 239, type: !6)
!5013 = !DILocation(line: 239, column: 7, scope: !4941)
!5014 = !DILocalVariable(name: "refagg_dicts", scope: !4941, file: !465, line: 240, type: !4358)
!5015 = !DILocation(line: 240, column: 21, scope: !4941)
!5016 = !DILocalVariable(name: "n_refagg_dicts", scope: !4941, file: !465, line: 241, type: !6)
!5017 = !DILocation(line: 241, column: 7, scope: !4941)
!5018 = !DILocalVariable(name: "tparams", scope: !4941, file: !465, line: 243, type: !5019)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2TextRegionParams", file: !468, line: 67, baseType: !5021)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !468, line: 30, size: 1536, elements: !5022)
!5022 = !{!5023, !5024, !5025, !5026, !5027, !5028, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5048, !5049, !5050, !5051, !5052, !5053}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFF", scope: !5021, file: !468, line: 31, baseType: !188, size: 32)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "SBREFINE", scope: !5021, file: !468, line: 32, baseType: !188, size: 32, offset: 32)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "SBDEFPIXEL", scope: !5021, file: !468, line: 33, baseType: !188, size: 32, offset: 64)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "SBCOMBOP", scope: !5021, file: !468, line: 34, baseType: !3145, size: 32, offset: 96)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSPOSED", scope: !5021, file: !468, line: 35, baseType: !188, size: 32, offset: 128)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "REFCORNER", scope: !5021, file: !468, line: 36, baseType: !5029, size: 32, offset: 160)
!5029 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RefCorner", file: !468, line: 28, baseType: !467)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "SBDSOFFSET", scope: !5021, file: !468, line: 37, baseType: !6, size: 32, offset: 192)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "SBNUMINSTANCES", scope: !5021, file: !468, line: 40, baseType: !32, size: 32, offset: 224)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "LOGSBSTRIPS", scope: !5021, file: !468, line: 41, baseType: !6, size: 32, offset: 256)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "SBSTRIPS", scope: !5021, file: !468, line: 42, baseType: !6, size: 32, offset: 288)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFFS", scope: !5021, file: !468, line: 47, baseType: !4540, size: 64, offset: 320)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFDS", scope: !5021, file: !468, line: 48, baseType: !4540, size: 64, offset: 384)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFDT", scope: !5021, file: !468, line: 49, baseType: !4540, size: 64, offset: 448)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDW", scope: !5021, file: !468, line: 50, baseType: !4540, size: 64, offset: 512)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDH", scope: !5021, file: !468, line: 51, baseType: !4540, size: 64, offset: 576)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDX", scope: !5021, file: !468, line: 52, baseType: !4540, size: 64, offset: 640)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDY", scope: !5021, file: !468, line: 53, baseType: !4540, size: 64, offset: 704)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRSIZE", scope: !5021, file: !468, line: 54, baseType: !4540, size: 64, offset: 768)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "IADT", scope: !5021, file: !468, line: 55, baseType: !4993, size: 64, offset: 832)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "IAFS", scope: !5021, file: !468, line: 56, baseType: !4993, size: 64, offset: 896)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "IADS", scope: !5021, file: !468, line: 57, baseType: !4993, size: 64, offset: 960)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "IAIT", scope: !5021, file: !468, line: 58, baseType: !4993, size: 64, offset: 1024)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "IAID", scope: !5021, file: !468, line: 59, baseType: !5004, size: 64, offset: 1088)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "IARI", scope: !5021, file: !468, line: 60, baseType: !4993, size: 64, offset: 1152)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "IARDW", scope: !5021, file: !468, line: 61, baseType: !4993, size: 64, offset: 1216)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "IARDH", scope: !5021, file: !468, line: 62, baseType: !4993, size: 64, offset: 1280)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "IARDX", scope: !5021, file: !468, line: 63, baseType: !4993, size: 64, offset: 1344)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "IARDY", scope: !5021, file: !468, line: 64, baseType: !4993, size: 64, offset: 1408)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "SBRTEMPLATE", scope: !5021, file: !468, line: 65, baseType: !188, size: 32, offset: 1472)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "sbrat", scope: !5021, file: !468, line: 66, baseType: !4567, size: 32, offset: 1504)
!5054 = !DILocation(line: 243, column: 26, scope: !4941)
!5055 = !DILocation(line: 246, column: 12, scope: !4941)
!5056 = !DILocation(line: 247, column: 16, scope: !4941)
!5057 = !DILocation(line: 249, column: 34, scope: !4941)
!5058 = !DILocation(line: 249, column: 39, scope: !4941)
!5059 = !DILocation(line: 249, column: 45, scope: !4941)
!5060 = !DILocation(line: 249, column: 8, scope: !4941)
!5061 = !DILocation(line: 249, column: 6, scope: !4941)
!5062 = !DILocation(line: 251, column: 8, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !4941, file: !465, line: 251, column: 7)
!5064 = !DILocation(line: 251, column: 16, scope: !5063)
!5065 = !DILocation(line: 251, column: 7, scope: !4941)
!5066 = !DILocation(line: 252, column: 28, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5063, file: !465, line: 251, column: 24)
!5068 = !DILocation(line: 252, column: 33, scope: !5067)
!5069 = !DILocation(line: 252, column: 12, scope: !5067)
!5070 = !DILocation(line: 252, column: 10, scope: !5067)
!5071 = !DILocation(line: 253, column: 38, scope: !5067)
!5072 = !DILocation(line: 253, column: 14, scope: !5067)
!5073 = !DILocation(line: 253, column: 12, scope: !5067)
!5074 = !DILocation(line: 254, column: 38, scope: !5067)
!5075 = !DILocation(line: 254, column: 14, scope: !5067)
!5076 = !DILocation(line: 254, column: 12, scope: !5067)
!5077 = !DILocation(line: 255, column: 38, scope: !5067)
!5078 = !DILocation(line: 255, column: 14, scope: !5067)
!5079 = !DILocation(line: 255, column: 12, scope: !5067)
!5080 = !DILocation(line: 256, column: 38, scope: !5067)
!5081 = !DILocation(line: 256, column: 14, scope: !5067)
!5082 = !DILocation(line: 256, column: 12, scope: !5067)
!5083 = !DILocation(line: 257, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5067, file: !465, line: 257, column: 11)
!5085 = !DILocation(line: 257, column: 19, scope: !5084)
!5086 = !DILocation(line: 257, column: 11, scope: !5067)
!5087 = !DILocalVariable(name: "tmp", scope: !5088, file: !465, line: 258, type: !6)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !465, line: 257, column: 29)
!5089 = !DILocation(line: 258, column: 8, scope: !5088)
!5090 = !DILocation(line: 258, column: 14, scope: !5088)
!5091 = !DILocation(line: 258, column: 22, scope: !5088)
!5092 = !DILocation(line: 258, column: 32, scope: !5088)
!5093 = !DILocation(line: 258, column: 44, scope: !5088)
!5094 = !DILocation(line: 258, column: 52, scope: !5088)
!5095 = !DILocation(line: 258, column: 42, scope: !5088)
!5096 = !DILocation(line: 259, column: 22, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5088, file: !465, line: 259, column: 4)
!5098 = !DILocation(line: 259, column: 9, scope: !5097)
!5099 = !DILocation(line: 259, column: 33, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5097, file: !465, line: 259, column: 4)
!5101 = !DILocation(line: 259, column: 30, scope: !5100)
!5102 = !DILocation(line: 259, column: 49, scope: !5100)
!5103 = !DILocation(line: 259, column: 47, scope: !5100)
!5104 = !DILocation(line: 259, column: 4, scope: !5097)
!5105 = !DILocation(line: 259, column: 66, scope: !5100)
!5106 = !DILocation(line: 259, column: 4, scope: !5100)
!5107 = distinct !{!5107, !5104, !5108}
!5108 = !DILocation(line: 259, column: 69, scope: !5097)
!5109 = !DILocation(line: 260, column: 36, scope: !5088)
!5110 = !DILocation(line: 260, column: 41, scope: !5088)
!5111 = !DILocation(line: 260, column: 11, scope: !5088)
!5112 = !DILocation(line: 260, column: 9, scope: !5088)
!5113 = !DILocation(line: 261, column: 36, scope: !5088)
!5114 = !DILocation(line: 261, column: 12, scope: !5088)
!5115 = !DILocation(line: 261, column: 10, scope: !5088)
!5116 = !DILocation(line: 262, column: 36, scope: !5088)
!5117 = !DILocation(line: 262, column: 12, scope: !5088)
!5118 = !DILocation(line: 262, column: 10, scope: !5088)
!5119 = !DILocation(line: 263, column: 7, scope: !5088)
!5120 = !DILocation(line: 264, column: 3, scope: !5067)
!5121 = !DILocation(line: 265, column: 19, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5063, file: !465, line: 264, column: 10)
!5123 = !DILocation(line: 265, column: 46, scope: !5122)
!5124 = !DILocation(line: 265, column: 55, scope: !5122)
!5125 = !DILocation(line: 265, column: 7, scope: !5122)
!5126 = !DILocation(line: 267, column: 30, scope: !5122)
!5127 = !DILocation(line: 267, column: 35, scope: !5122)
!5128 = !DILocation(line: 267, column: 12, scope: !5122)
!5129 = !DILocation(line: 267, column: 10, scope: !5122)
!5130 = !DILocation(line: 268, column: 45, scope: !5122)
!5131 = !DILocation(line: 268, column: 19, scope: !5122)
!5132 = !DILocation(line: 268, column: 17, scope: !5122)
!5133 = !DILocation(line: 270, column: 12, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5122, file: !465, line: 270, column: 11)
!5135 = !DILocation(line: 270, column: 20, scope: !5134)
!5136 = !DILocation(line: 270, column: 11, scope: !5122)
!5137 = !DILocation(line: 271, column: 33, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5134, file: !465, line: 270, column: 30)
!5139 = !DILocation(line: 271, column: 38, scope: !5138)
!5140 = !DILocation(line: 272, column: 27, scope: !5138)
!5141 = !DILocation(line: 272, column: 35, scope: !5138)
!5142 = !DILocation(line: 272, column: 26, scope: !5138)
!5143 = !DILocation(line: 271, column: 21, scope: !5138)
!5144 = !DILocation(line: 271, column: 19, scope: !5138)
!5145 = !DILocation(line: 273, column: 8, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5138, file: !465, line: 273, column: 8)
!5147 = !DILocation(line: 273, column: 23, scope: !5146)
!5148 = !DILocation(line: 273, column: 8, scope: !5138)
!5149 = !DILocation(line: 274, column: 18, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5146, file: !465, line: 273, column: 32)
!5151 = !DILocation(line: 274, column: 45, scope: !5150)
!5152 = !DILocation(line: 274, column: 54, scope: !5150)
!5153 = !DILocation(line: 274, column: 6, scope: !5150)
!5154 = !DILocation(line: 276, column: 6, scope: !5150)
!5155 = !DILocation(line: 278, column: 7, scope: !5138)
!5156 = !DILocation(line: 281, column: 28, scope: !4941)
!5157 = !DILocation(line: 281, column: 33, scope: !4941)
!5158 = !DILocation(line: 281, column: 41, scope: !4941)
!5159 = !DILocation(line: 281, column: 15, scope: !4941)
!5160 = !DILocation(line: 281, column: 13, scope: !4941)
!5161 = !DILocation(line: 284, column: 3, scope: !4941)
!5162 = !DILocation(line: 284, column: 10, scope: !4941)
!5163 = !DILocation(line: 284, column: 25, scope: !4941)
!5164 = !DILocation(line: 284, column: 33, scope: !4941)
!5165 = !DILocation(line: 284, column: 23, scope: !4941)
!5166 = !DILocalVariable(name: "HCDH", scope: !5167, file: !465, line: 285, type: !141)
!5167 = distinct !DILexicalBlock(scope: !4941, file: !465, line: 284, column: 47)
!5168 = !DILocation(line: 285, column: 15, scope: !5167)
!5169 = !DILocalVariable(name: "DW", scope: !5167, file: !465, line: 285, type: !141)
!5170 = !DILocation(line: 285, column: 21, scope: !5167)
!5171 = !DILocation(line: 288, column: 11, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5167, file: !465, line: 288, column: 11)
!5173 = !DILocation(line: 288, column: 19, scope: !5172)
!5174 = !DILocation(line: 288, column: 11, scope: !5167)
!5175 = !DILocation(line: 289, column: 29, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5172, file: !465, line: 288, column: 27)
!5177 = !DILocation(line: 289, column: 33, scope: !5176)
!5178 = !DILocation(line: 289, column: 41, scope: !5176)
!5179 = !DILocation(line: 289, column: 11, scope: !5176)
!5180 = !DILocation(line: 289, column: 9, scope: !5176)
!5181 = !DILocation(line: 290, column: 7, scope: !5176)
!5182 = !DILocation(line: 291, column: 34, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5172, file: !465, line: 290, column: 14)
!5184 = !DILocation(line: 291, column: 40, scope: !5183)
!5185 = !DILocation(line: 291, column: 11, scope: !5183)
!5186 = !DILocation(line: 291, column: 9, scope: !5183)
!5187 = !DILocation(line: 294, column: 11, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5167, file: !465, line: 294, column: 11)
!5189 = !DILocation(line: 294, column: 16, scope: !5188)
!5190 = !DILocation(line: 294, column: 11, scope: !5167)
!5191 = !DILocation(line: 295, column: 14, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !465, line: 294, column: 22)
!5193 = !DILocation(line: 295, column: 43, scope: !5192)
!5194 = !DILocation(line: 295, column: 52, scope: !5192)
!5195 = !DILocation(line: 296, column: 55, scope: !5192)
!5196 = !DILocation(line: 295, column: 2, scope: !5192)
!5197 = !DILocation(line: 297, column: 7, scope: !5192)
!5198 = !DILocation(line: 300, column: 18, scope: !5167)
!5199 = !DILocation(line: 300, column: 29, scope: !5167)
!5200 = !DILocation(line: 300, column: 27, scope: !5167)
!5201 = !DILocation(line: 300, column: 16, scope: !5167)
!5202 = !DILocation(line: 301, column: 16, scope: !5167)
!5203 = !DILocation(line: 302, column: 16, scope: !5167)
!5204 = !DILocation(line: 303, column: 20, scope: !5167)
!5205 = !DILocation(line: 303, column: 18, scope: !5167)
!5206 = !DILocation(line: 305, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5167, file: !465, line: 305, column: 11)
!5208 = !DILocation(line: 305, column: 20, scope: !5207)
!5209 = !DILocation(line: 305, column: 11, scope: !5167)
!5210 = !DILocation(line: 307, column: 23, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !465, line: 305, column: 25)
!5212 = !DILocation(line: 307, column: 50, scope: !5211)
!5213 = !DILocation(line: 307, column: 59, scope: !5211)
!5214 = !DILocation(line: 307, column: 11, scope: !5211)
!5215 = !DILocation(line: 307, column: 9, scope: !5211)
!5216 = !DILocation(line: 309, column: 11, scope: !5211)
!5217 = !DILocation(line: 315, column: 19, scope: !5167)
!5218 = !DILocation(line: 315, column: 46, scope: !5167)
!5219 = !DILocation(line: 315, column: 55, scope: !5167)
!5220 = !DILocation(line: 316, column: 58, scope: !5167)
!5221 = !DILocation(line: 316, column: 68, scope: !5167)
!5222 = !DILocation(line: 315, column: 7, scope: !5167)
!5223 = !DILocation(line: 318, column: 7, scope: !5167)
!5224 = !DILocation(line: 320, column: 9, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5226, file: !465, line: 320, column: 9)
!5226 = distinct !DILexicalBlock(scope: !5227, file: !465, line: 318, column: 16)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !465, line: 318, column: 7)
!5228 = distinct !DILexicalBlock(scope: !5167, file: !465, line: 318, column: 7)
!5229 = !DILocation(line: 320, column: 24, scope: !5225)
!5230 = !DILocation(line: 320, column: 32, scope: !5225)
!5231 = !DILocation(line: 320, column: 22, scope: !5225)
!5232 = !DILocation(line: 320, column: 9, scope: !5226)
!5233 = !DILocation(line: 323, column: 20, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5225, file: !465, line: 321, column: 6)
!5235 = !DILocation(line: 323, column: 49, scope: !5234)
!5236 = !DILocation(line: 323, column: 58, scope: !5234)
!5237 = !DILocation(line: 324, column: 54, scope: !5234)
!5238 = !DILocation(line: 323, column: 8, scope: !5234)
!5239 = !DILocation(line: 325, column: 8, scope: !5234)
!5240 = !DILocation(line: 328, column: 8, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5226, file: !465, line: 328, column: 8)
!5242 = !DILocation(line: 328, column: 16, scope: !5241)
!5243 = !DILocation(line: 328, column: 8, scope: !5226)
!5244 = !DILocation(line: 329, column: 31, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5241, file: !465, line: 328, column: 24)
!5246 = !DILocation(line: 329, column: 35, scope: !5245)
!5247 = !DILocation(line: 329, column: 43, scope: !5245)
!5248 = !DILocation(line: 329, column: 13, scope: !5245)
!5249 = !DILocation(line: 329, column: 11, scope: !5245)
!5250 = !DILocation(line: 330, column: 4, scope: !5245)
!5251 = !DILocation(line: 331, column: 38, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5241, file: !465, line: 330, column: 11)
!5253 = !DILocation(line: 331, column: 44, scope: !5252)
!5254 = !DILocation(line: 331, column: 15, scope: !5252)
!5255 = !DILocation(line: 331, column: 13, scope: !5252)
!5256 = !DILocation(line: 335, column: 8, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5226, file: !465, line: 335, column: 8)
!5258 = !DILocation(line: 335, column: 13, scope: !5257)
!5259 = !DILocation(line: 335, column: 8, scope: !5226)
!5260 = !DILocation(line: 336, column: 18, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !465, line: 335, column: 19)
!5262 = !DILocation(line: 336, column: 45, scope: !5261)
!5263 = !DILocation(line: 336, column: 54, scope: !5261)
!5264 = !DILocation(line: 337, column: 45, scope: !5261)
!5265 = !DILocation(line: 336, column: 6, scope: !5261)
!5266 = !DILocation(line: 338, column: 6, scope: !5261)
!5267 = !DILocation(line: 340, column: 15, scope: !5226)
!5268 = !DILocation(line: 340, column: 26, scope: !5226)
!5269 = !DILocation(line: 340, column: 24, scope: !5226)
!5270 = !DILocation(line: 340, column: 13, scope: !5226)
!5271 = !DILocation(line: 341, column: 15, scope: !5226)
!5272 = !DILocation(line: 341, column: 26, scope: !5226)
!5273 = !DILocation(line: 341, column: 24, scope: !5226)
!5274 = !DILocation(line: 341, column: 13, scope: !5226)
!5275 = !DILocation(line: 342, column: 8, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5226, file: !465, line: 342, column: 8)
!5277 = !DILocation(line: 342, column: 17, scope: !5276)
!5278 = !DILocation(line: 342, column: 8, scope: !5226)
!5279 = !DILocation(line: 344, column: 34, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5276, file: !465, line: 342, column: 22)
!5281 = !DILocation(line: 344, column: 61, scope: !5280)
!5282 = !DILocation(line: 344, column: 70, scope: !5280)
!5283 = !DILocation(line: 345, column: 61, scope: !5280)
!5284 = !DILocation(line: 345, column: 71, scope: !5280)
!5285 = !DILocation(line: 345, column: 83, scope: !5280)
!5286 = !DILocation(line: 344, column: 22, scope: !5280)
!5287 = !DILocation(line: 344, column: 20, scope: !5280)
!5288 = !DILocation(line: 346, column: 15, scope: !5280)
!5289 = !DILocation(line: 353, column: 9, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5226, file: !465, line: 353, column: 8)
!5291 = !DILocation(line: 353, column: 17, scope: !5290)
!5292 = !DILocation(line: 353, column: 24, scope: !5290)
!5293 = !DILocation(line: 353, column: 27, scope: !5290)
!5294 = !DILocation(line: 353, column: 35, scope: !5290)
!5295 = !DILocation(line: 353, column: 8, scope: !5226)
!5296 = !DILocation(line: 359, column: 13, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5298, file: !465, line: 359, column: 12)
!5298 = distinct !DILexicalBlock(scope: !5290, file: !465, line: 353, column: 45)
!5299 = !DILocation(line: 359, column: 21, scope: !5297)
!5300 = !DILocation(line: 359, column: 12, scope: !5298)
!5301 = !DILocalVariable(name: "region_params", scope: !5302, file: !465, line: 360, type: !5303)
!5302 = distinct !DILexicalBlock(scope: !5297, file: !465, line: 359, column: 31)
!5303 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2GenericRegionParams", file: !5304, line: 33, baseType: !5305)
!5304 = !DIFile(filename: "./jbig2_generic.h", directory: "/root/llvm/codesample/39apps/ghostscript-8.64/jbig2dec")
!5305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5304, line: 24, size: 192, elements: !5306)
!5306 = !{!5307, !5308, !5309, !5310, !5311}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "MMR", scope: !5305, file: !5304, line: 25, baseType: !188, size: 32)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "GBTEMPLATE", scope: !5305, file: !5304, line: 28, baseType: !6, size: 32, offset: 32)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "TPGDON", scope: !5305, file: !5304, line: 29, baseType: !188, size: 32, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "USESKIP", scope: !5305, file: !5304, line: 30, baseType: !188, size: 32, offset: 96)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "gbat", scope: !5305, file: !5304, line: 32, baseType: !4563, size: 64, offset: 128)
!5312 = !DILocation(line: 360, column: 30, scope: !5302)
!5313 = !DILocalVariable(name: "sdat_bytes", scope: !5302, file: !465, line: 361, type: !6)
!5314 = !DILocation(line: 361, column: 9, scope: !5302)
!5315 = !DILocalVariable(name: "image", scope: !5302, file: !465, line: 362, type: !483)
!5316 = !DILocation(line: 362, column: 17, scope: !5302)
!5317 = !DILocation(line: 365, column: 19, scope: !5302)
!5318 = !DILocation(line: 365, column: 23, scope: !5302)
!5319 = !DILocation(line: 366, column: 32, scope: !5302)
!5320 = !DILocation(line: 366, column: 40, scope: !5302)
!5321 = !DILocation(line: 366, column: 19, scope: !5302)
!5322 = !DILocation(line: 366, column: 30, scope: !5302)
!5323 = !DILocation(line: 367, column: 19, scope: !5302)
!5324 = !DILocation(line: 367, column: 26, scope: !5302)
!5325 = !DILocation(line: 368, column: 19, scope: !5302)
!5326 = !DILocation(line: 368, column: 27, scope: !5302)
!5327 = !DILocation(line: 369, column: 18, scope: !5302)
!5328 = !DILocation(line: 369, column: 26, scope: !5302)
!5329 = !DILocation(line: 369, column: 37, scope: !5302)
!5330 = !DILocation(line: 369, column: 16, scope: !5302)
!5331 = !DILocation(line: 370, column: 26, scope: !5302)
!5332 = !DILocation(line: 370, column: 5, scope: !5302)
!5333 = !DILocation(line: 370, column: 32, scope: !5302)
!5334 = !DILocation(line: 370, column: 40, scope: !5302)
!5335 = !DILocation(line: 370, column: 46, scope: !5302)
!5336 = !DILocation(line: 372, column: 29, scope: !5302)
!5337 = !DILocation(line: 372, column: 34, scope: !5302)
!5338 = !DILocation(line: 372, column: 44, scope: !5302)
!5339 = !DILocation(line: 372, column: 13, scope: !5302)
!5340 = !DILocation(line: 372, column: 11, scope: !5302)
!5341 = !DILocation(line: 374, column: 40, scope: !5302)
!5342 = !DILocation(line: 374, column: 45, scope: !5302)
!5343 = !DILocation(line: 375, column: 12, scope: !5302)
!5344 = !DILocation(line: 375, column: 16, scope: !5302)
!5345 = !DILocation(line: 375, column: 23, scope: !5302)
!5346 = !DILocation(line: 374, column: 12, scope: !5302)
!5347 = !DILocation(line: 374, column: 10, scope: !5302)
!5348 = !DILocation(line: 378, column: 53, scope: !5302)
!5349 = !DILocation(line: 378, column: 19, scope: !5302)
!5350 = !DILocation(line: 378, column: 30, scope: !5302)
!5351 = !DILocation(line: 378, column: 37, scope: !5302)
!5352 = !DILocation(line: 378, column: 51, scope: !5302)
!5353 = !DILocation(line: 380, column: 8, scope: !5302)
!5354 = !DILocalVariable(name: "REFAGGNINST", scope: !5355, file: !465, line: 382, type: !32)
!5355 = distinct !DILexicalBlock(scope: !5297, file: !465, line: 380, column: 15)
!5356 = !DILocation(line: 382, column: 28, scope: !5355)
!5357 = !DILocation(line: 384, column: 9, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5355, file: !465, line: 384, column: 9)
!5359 = !DILocation(line: 384, column: 17, scope: !5358)
!5360 = !DILocation(line: 384, column: 9, scope: !5355)
!5361 = !DILocation(line: 385, column: 41, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !465, line: 384, column: 25)
!5363 = !DILocation(line: 385, column: 45, scope: !5362)
!5364 = !DILocation(line: 385, column: 53, scope: !5362)
!5365 = !DILocation(line: 385, column: 23, scope: !5362)
!5366 = !DILocation(line: 385, column: 21, scope: !5362)
!5367 = !DILocation(line: 386, column: 5, scope: !5362)
!5368 = !DILocation(line: 387, column: 39, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5358, file: !465, line: 386, column: 12)
!5370 = !DILocation(line: 387, column: 45, scope: !5369)
!5371 = !DILocation(line: 387, column: 16, scope: !5369)
!5372 = !DILocation(line: 387, column: 14, scope: !5369)
!5373 = !DILocation(line: 389, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5355, file: !465, line: 389, column: 9)
!5375 = !DILocation(line: 389, column: 14, scope: !5374)
!5376 = !DILocation(line: 389, column: 26, scope: !5374)
!5377 = !DILocation(line: 389, column: 38, scope: !5374)
!5378 = !DILocation(line: 389, column: 9, scope: !5355)
!5379 = !DILocation(line: 390, column: 28, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5374, file: !465, line: 389, column: 44)
!5381 = !DILocation(line: 390, column: 55, scope: !5380)
!5382 = !DILocation(line: 390, column: 64, scope: !5380)
!5383 = !DILocation(line: 390, column: 16, scope: !5380)
!5384 = !DILocation(line: 390, column: 14, scope: !5380)
!5385 = !DILocation(line: 392, column: 9, scope: !5380)
!5386 = !DILocation(line: 395, column: 17, scope: !5355)
!5387 = !DILocation(line: 395, column: 44, scope: !5355)
!5388 = !DILocation(line: 395, column: 53, scope: !5355)
!5389 = !DILocation(line: 396, column: 49, scope: !5355)
!5390 = !DILocation(line: 395, column: 5, scope: !5355)
!5391 = !DILocation(line: 398, column: 9, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5355, file: !465, line: 398, column: 9)
!5393 = !DILocation(line: 398, column: 21, scope: !5392)
!5394 = !DILocation(line: 398, column: 9, scope: !5355)
!5395 = !DILocalVariable(name: "image", scope: !5396, file: !465, line: 399, type: !483)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !465, line: 398, column: 26)
!5397 = !DILocation(line: 399, column: 21, scope: !5396)
!5398 = !DILocalVariable(name: "i", scope: !5396, file: !465, line: 400, type: !6)
!5399 = !DILocation(line: 400, column: 13, scope: !5396)
!5400 = !DILocation(line: 402, column: 13, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5396, file: !465, line: 402, column: 13)
!5402 = !DILocation(line: 402, column: 21, scope: !5401)
!5403 = !DILocation(line: 402, column: 13, scope: !5396)
!5404 = !DILocation(line: 407, column: 33, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !465, line: 403, column: 9)
!5406 = !DILocation(line: 407, column: 38, scope: !5405)
!5407 = !DILocation(line: 407, column: 77, scope: !5405)
!5408 = !DILocation(line: 407, column: 75, scope: !5405)
!5409 = !DILocation(line: 407, column: 21, scope: !5405)
!5410 = !DILocation(line: 407, column: 19, scope: !5405)
!5411 = !DILocation(line: 408, column: 17, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5405, file: !465, line: 408, column: 17)
!5413 = !DILocation(line: 408, column: 30, scope: !5412)
!5414 = !DILocation(line: 408, column: 17, scope: !5405)
!5415 = !DILocation(line: 409, column: 29, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5412, file: !465, line: 408, column: 39)
!5417 = !DILocation(line: 409, column: 56, scope: !5416)
!5418 = !DILocation(line: 409, column: 65, scope: !5416)
!5419 = !DILocation(line: 409, column: 17, scope: !5416)
!5420 = !DILocation(line: 409, column: 15, scope: !5416)
!5421 = !DILocation(line: 411, column: 17, scope: !5416)
!5422 = !DILocation(line: 413, column: 44, scope: !5405)
!5423 = !DILocation(line: 413, column: 49, scope: !5405)
!5424 = !DILocation(line: 413, column: 57, scope: !5405)
!5425 = !DILocation(line: 413, column: 71, scope: !5405)
!5426 = !DILocation(line: 413, column: 79, scope: !5405)
!5427 = !DILocation(line: 413, column: 69, scope: !5405)
!5428 = !DILocation(line: 413, column: 31, scope: !5405)
!5429 = !DILocation(line: 413, column: 13, scope: !5405)
!5430 = !DILocation(line: 413, column: 29, scope: !5405)
!5431 = !DILocation(line: 414, column: 17, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5405, file: !465, line: 414, column: 17)
!5433 = !DILocation(line: 414, column: 33, scope: !5432)
!5434 = !DILocation(line: 414, column: 17, scope: !5405)
!5435 = !DILocation(line: 415, column: 29, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5432, file: !465, line: 414, column: 42)
!5437 = !DILocation(line: 415, column: 56, scope: !5436)
!5438 = !DILocation(line: 415, column: 65, scope: !5436)
!5439 = !DILocation(line: 415, column: 17, scope: !5436)
!5440 = !DILocation(line: 415, column: 15, scope: !5436)
!5441 = !DILocation(line: 417, column: 28, scope: !5436)
!5442 = !DILocation(line: 417, column: 33, scope: !5436)
!5443 = !DILocation(line: 417, column: 44, scope: !5436)
!5444 = !DILocation(line: 417, column: 17, scope: !5436)
!5445 = !DILocation(line: 418, column: 17, scope: !5436)
!5446 = !DILocation(line: 420, column: 42, scope: !5405)
!5447 = !DILocation(line: 420, column: 50, scope: !5405)
!5448 = !DILocation(line: 420, column: 64, scope: !5405)
!5449 = !DILocation(line: 420, column: 72, scope: !5405)
!5450 = !DILocation(line: 420, column: 62, scope: !5405)
!5451 = !DILocation(line: 420, column: 13, scope: !5405)
!5452 = !DILocation(line: 420, column: 30, scope: !5405)
!5453 = !DILocation(line: 420, column: 40, scope: !5405)
!5454 = !DILocation(line: 421, column: 19, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5405, file: !465, line: 421, column: 13)
!5456 = !DILocation(line: 421, column: 18, scope: !5455)
!5457 = !DILocation(line: 421, column: 22, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5455, file: !465, line: 421, column: 13)
!5459 = !DILocation(line: 421, column: 26, scope: !5458)
!5460 = !DILocation(line: 421, column: 34, scope: !5458)
!5461 = !DILocation(line: 421, column: 24, scope: !5458)
!5462 = !DILocation(line: 421, column: 13, scope: !5455)
!5463 = !DILocation(line: 423, column: 57, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5458, file: !465, line: 422, column: 13)
!5465 = !DILocation(line: 423, column: 62, scope: !5464)
!5466 = !DILocation(line: 423, column: 70, scope: !5464)
!5467 = !DILocation(line: 423, column: 80, scope: !5464)
!5468 = !DILocation(line: 423, column: 87, scope: !5464)
!5469 = !DILocation(line: 423, column: 39, scope: !5464)
!5470 = !DILocation(line: 423, column: 10, scope: !5464)
!5471 = !DILocation(line: 423, column: 27, scope: !5464)
!5472 = !DILocation(line: 423, column: 34, scope: !5464)
!5473 = !DILocation(line: 423, column: 37, scope: !5464)
!5474 = !DILocation(line: 424, column: 13, scope: !5464)
!5475 = !DILocation(line: 421, column: 47, scope: !5458)
!5476 = !DILocation(line: 421, column: 13, scope: !5458)
!5477 = distinct !{!5477, !5462, !5478}
!5478 = !DILocation(line: 424, column: 13, scope: !5455)
!5479 = !DILocation(line: 426, column: 28, scope: !5405)
!5480 = !DILocation(line: 426, column: 33, scope: !5405)
!5481 = !DILocation(line: 426, column: 16, scope: !5405)
!5482 = !DILocation(line: 426, column: 14, scope: !5405)
!5483 = !DILocation(line: 427, column: 10, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5405, file: !465, line: 427, column: 10)
!5485 = !DILocation(line: 427, column: 18, scope: !5484)
!5486 = !DILocation(line: 427, column: 10, scope: !5405)
!5487 = !DILocation(line: 428, column: 29, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5484, file: !465, line: 427, column: 27)
!5489 = !DILocation(line: 428, column: 56, scope: !5488)
!5490 = !DILocation(line: 428, column: 65, scope: !5488)
!5491 = !DILocation(line: 428, column: 17, scope: !5488)
!5492 = !DILocation(line: 428, column: 15, scope: !5488)
!5493 = !DILocation(line: 430, column: 27, scope: !5488)
!5494 = !DILocation(line: 430, column: 32, scope: !5488)
!5495 = !DILocation(line: 430, column: 10, scope: !5488)
!5496 = !DILocation(line: 431, column: 21, scope: !5488)
!5497 = !DILocation(line: 431, column: 26, scope: !5488)
!5498 = !DILocation(line: 431, column: 37, scope: !5488)
!5499 = !DILocation(line: 431, column: 10, scope: !5488)
!5500 = !DILocation(line: 432, column: 10, scope: !5488)
!5501 = !DILocation(line: 434, column: 22, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5405, file: !465, line: 434, column: 21)
!5503 = !DILocation(line: 434, column: 30, scope: !5502)
!5504 = !DILocation(line: 434, column: 21, scope: !5405)
!5505 = !DILocation(line: 436, column: 50, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5502, file: !465, line: 434, column: 38)
!5507 = !DILocation(line: 436, column: 26, scope: !5506)
!5508 = !DILocation(line: 436, column: 10, scope: !5506)
!5509 = !DILocation(line: 436, column: 19, scope: !5506)
!5510 = !DILocation(line: 436, column: 24, scope: !5506)
!5511 = !DILocation(line: 437, column: 50, scope: !5506)
!5512 = !DILocation(line: 437, column: 26, scope: !5506)
!5513 = !DILocation(line: 437, column: 10, scope: !5506)
!5514 = !DILocation(line: 437, column: 19, scope: !5506)
!5515 = !DILocation(line: 437, column: 24, scope: !5506)
!5516 = !DILocation(line: 438, column: 50, scope: !5506)
!5517 = !DILocation(line: 438, column: 26, scope: !5506)
!5518 = !DILocation(line: 438, column: 10, scope: !5506)
!5519 = !DILocation(line: 438, column: 19, scope: !5506)
!5520 = !DILocation(line: 438, column: 24, scope: !5506)
!5521 = !DILocation(line: 439, column: 50, scope: !5506)
!5522 = !DILocation(line: 439, column: 26, scope: !5506)
!5523 = !DILocation(line: 439, column: 10, scope: !5506)
!5524 = !DILocation(line: 439, column: 19, scope: !5506)
!5525 = !DILocation(line: 439, column: 24, scope: !5506)
!5526 = !DILocation(line: 441, column: 28, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5506, file: !465, line: 441, column: 10)
!5528 = !DILocation(line: 441, column: 15, scope: !5527)
!5529 = !DILocation(line: 441, column: 39, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5527, file: !465, line: 441, column: 10)
!5531 = !DILocation(line: 441, column: 36, scope: !5530)
!5532 = !DILocation(line: 442, column: 13, scope: !5530)
!5533 = !DILocation(line: 442, column: 21, scope: !5530)
!5534 = !DILocation(line: 442, column: 35, scope: !5530)
!5535 = !DILocation(line: 442, column: 43, scope: !5530)
!5536 = !DILocation(line: 442, column: 33, scope: !5530)
!5537 = !DILocation(line: 441, column: 53, scope: !5530)
!5538 = !DILocation(line: 441, column: 10, scope: !5527)
!5539 = !DILocation(line: 442, column: 70, scope: !5530)
!5540 = !DILocation(line: 441, column: 10, scope: !5530)
!5541 = distinct !{!5541, !5538, !5542}
!5542 = !DILocation(line: 442, column: 73, scope: !5527)
!5543 = !DILocation(line: 443, column: 51, scope: !5506)
!5544 = !DILocation(line: 443, column: 56, scope: !5506)
!5545 = !DILocation(line: 443, column: 26, scope: !5506)
!5546 = !DILocation(line: 443, column: 10, scope: !5506)
!5547 = !DILocation(line: 443, column: 19, scope: !5506)
!5548 = !DILocation(line: 443, column: 24, scope: !5506)
!5549 = !DILocation(line: 444, column: 50, scope: !5506)
!5550 = !DILocation(line: 444, column: 26, scope: !5506)
!5551 = !DILocation(line: 444, column: 10, scope: !5506)
!5552 = !DILocation(line: 444, column: 19, scope: !5506)
!5553 = !DILocation(line: 444, column: 24, scope: !5506)
!5554 = !DILocation(line: 445, column: 51, scope: !5506)
!5555 = !DILocation(line: 445, column: 27, scope: !5506)
!5556 = !DILocation(line: 445, column: 10, scope: !5506)
!5557 = !DILocation(line: 445, column: 19, scope: !5506)
!5558 = !DILocation(line: 445, column: 25, scope: !5506)
!5559 = !DILocation(line: 446, column: 51, scope: !5506)
!5560 = !DILocation(line: 446, column: 27, scope: !5506)
!5561 = !DILocation(line: 446, column: 10, scope: !5506)
!5562 = !DILocation(line: 446, column: 19, scope: !5506)
!5563 = !DILocation(line: 446, column: 25, scope: !5506)
!5564 = !DILocation(line: 447, column: 51, scope: !5506)
!5565 = !DILocation(line: 447, column: 27, scope: !5506)
!5566 = !DILocation(line: 447, column: 10, scope: !5506)
!5567 = !DILocation(line: 447, column: 19, scope: !5506)
!5568 = !DILocation(line: 447, column: 25, scope: !5506)
!5569 = !DILocation(line: 448, column: 51, scope: !5506)
!5570 = !DILocation(line: 448, column: 27, scope: !5506)
!5571 = !DILocation(line: 448, column: 10, scope: !5506)
!5572 = !DILocation(line: 448, column: 19, scope: !5506)
!5573 = !DILocation(line: 448, column: 25, scope: !5506)
!5574 = !DILocation(line: 449, column: 6, scope: !5506)
!5575 = !DILocation(line: 450, column: 56, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5502, file: !465, line: 449, column: 13)
!5577 = !DILocation(line: 450, column: 30, scope: !5576)
!5578 = !DILocation(line: 450, column: 10, scope: !5576)
!5579 = !DILocation(line: 450, column: 19, scope: !5576)
!5580 = !DILocation(line: 450, column: 28, scope: !5576)
!5581 = !DILocation(line: 452, column: 56, scope: !5576)
!5582 = !DILocation(line: 452, column: 30, scope: !5576)
!5583 = !DILocation(line: 452, column: 10, scope: !5576)
!5584 = !DILocation(line: 452, column: 19, scope: !5576)
!5585 = !DILocation(line: 452, column: 28, scope: !5576)
!5586 = !DILocation(line: 454, column: 56, scope: !5576)
!5587 = !DILocation(line: 454, column: 30, scope: !5576)
!5588 = !DILocation(line: 454, column: 10, scope: !5576)
!5589 = !DILocation(line: 454, column: 19, scope: !5576)
!5590 = !DILocation(line: 454, column: 28, scope: !5576)
!5591 = !DILocation(line: 456, column: 57, scope: !5576)
!5592 = !DILocation(line: 456, column: 31, scope: !5576)
!5593 = !DILocation(line: 456, column: 10, scope: !5576)
!5594 = !DILocation(line: 456, column: 19, scope: !5576)
!5595 = !DILocation(line: 456, column: 29, scope: !5576)
!5596 = !DILocation(line: 458, column: 57, scope: !5576)
!5597 = !DILocation(line: 458, column: 31, scope: !5576)
!5598 = !DILocation(line: 458, column: 10, scope: !5576)
!5599 = !DILocation(line: 458, column: 19, scope: !5576)
!5600 = !DILocation(line: 458, column: 29, scope: !5576)
!5601 = !DILocation(line: 460, column: 57, scope: !5576)
!5602 = !DILocation(line: 460, column: 31, scope: !5576)
!5603 = !DILocation(line: 460, column: 10, scope: !5576)
!5604 = !DILocation(line: 460, column: 19, scope: !5576)
!5605 = !DILocation(line: 460, column: 29, scope: !5576)
!5606 = !DILocation(line: 462, column: 57, scope: !5576)
!5607 = !DILocation(line: 462, column: 31, scope: !5576)
!5608 = !DILocation(line: 462, column: 10, scope: !5576)
!5609 = !DILocation(line: 462, column: 19, scope: !5576)
!5610 = !DILocation(line: 462, column: 29, scope: !5576)
!5611 = !DILocation(line: 465, column: 24, scope: !5405)
!5612 = !DILocation(line: 465, column: 32, scope: !5405)
!5613 = !DILocation(line: 465, column: 6, scope: !5405)
!5614 = !DILocation(line: 465, column: 15, scope: !5405)
!5615 = !DILocation(line: 465, column: 22, scope: !5405)
!5616 = !DILocation(line: 466, column: 6, scope: !5405)
!5617 = !DILocation(line: 466, column: 15, scope: !5405)
!5618 = !DILocation(line: 466, column: 24, scope: !5405)
!5619 = !DILocation(line: 467, column: 6, scope: !5405)
!5620 = !DILocation(line: 467, column: 15, scope: !5405)
!5621 = !DILocation(line: 467, column: 24, scope: !5405)
!5622 = !DILocation(line: 468, column: 6, scope: !5405)
!5623 = !DILocation(line: 468, column: 15, scope: !5405)
!5624 = !DILocation(line: 468, column: 26, scope: !5405)
!5625 = !DILocation(line: 469, column: 6, scope: !5405)
!5626 = !DILocation(line: 469, column: 15, scope: !5405)
!5627 = !DILocation(line: 469, column: 24, scope: !5405)
!5628 = !DILocation(line: 470, column: 6, scope: !5405)
!5629 = !DILocation(line: 470, column: 15, scope: !5405)
!5630 = !DILocation(line: 470, column: 26, scope: !5405)
!5631 = !DILocation(line: 471, column: 6, scope: !5405)
!5632 = !DILocation(line: 471, column: 15, scope: !5405)
!5633 = !DILocation(line: 471, column: 25, scope: !5405)
!5634 = !DILocation(line: 472, column: 6, scope: !5405)
!5635 = !DILocation(line: 472, column: 15, scope: !5405)
!5636 = !DILocation(line: 472, column: 26, scope: !5405)
!5637 = !DILocation(line: 473, column: 29, scope: !5405)
!5638 = !DILocation(line: 473, column: 37, scope: !5405)
!5639 = !DILocation(line: 473, column: 6, scope: !5405)
!5640 = !DILocation(line: 473, column: 15, scope: !5405)
!5641 = !DILocation(line: 473, column: 27, scope: !5405)
!5642 = !DILocation(line: 474, column: 9, scope: !5405)
!5643 = !DILocation(line: 475, column: 35, scope: !5396)
!5644 = !DILocation(line: 475, column: 9, scope: !5396)
!5645 = !DILocation(line: 475, column: 18, scope: !5396)
!5646 = !DILocation(line: 475, column: 33, scope: !5396)
!5647 = !DILocation(line: 477, column: 39, scope: !5396)
!5648 = !DILocation(line: 477, column: 44, scope: !5396)
!5649 = !DILocation(line: 477, column: 54, scope: !5396)
!5650 = !DILocation(line: 477, column: 23, scope: !5396)
!5651 = !DILocation(line: 477, column: 21, scope: !5396)
!5652 = !DILocation(line: 478, column: 13, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5396, file: !465, line: 478, column: 13)
!5654 = !DILocation(line: 478, column: 19, scope: !5653)
!5655 = !DILocation(line: 478, column: 13, scope: !5396)
!5656 = !DILocation(line: 479, column: 25, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !465, line: 478, column: 28)
!5658 = !DILocation(line: 479, column: 52, scope: !5657)
!5659 = !DILocation(line: 479, column: 61, scope: !5657)
!5660 = !DILocation(line: 479, column: 13, scope: !5657)
!5661 = !DILocation(line: 479, column: 11, scope: !5657)
!5662 = !DILocation(line: 481, column: 24, scope: !5657)
!5663 = !DILocation(line: 481, column: 29, scope: !5657)
!5664 = !DILocation(line: 481, column: 40, scope: !5657)
!5665 = !DILocation(line: 481, column: 13, scope: !5657)
!5666 = !DILocation(line: 482, column: 23, scope: !5657)
!5667 = !DILocation(line: 482, column: 28, scope: !5657)
!5668 = !DILocation(line: 482, column: 6, scope: !5657)
!5669 = !DILocation(line: 483, column: 24, scope: !5657)
!5670 = !DILocation(line: 483, column: 29, scope: !5657)
!5671 = !DILocation(line: 483, column: 40, scope: !5657)
!5672 = !DILocation(line: 483, column: 13, scope: !5657)
!5673 = !DILocation(line: 484, column: 13, scope: !5657)
!5674 = !DILocation(line: 488, column: 34, scope: !5396)
!5675 = !DILocation(line: 488, column: 39, scope: !5396)
!5676 = !DILocation(line: 488, column: 48, scope: !5396)
!5677 = !DILocation(line: 488, column: 90, scope: !5396)
!5678 = !DILocation(line: 489, column: 6, scope: !5396)
!5679 = !DILocation(line: 489, column: 22, scope: !5396)
!5680 = !DILocation(line: 489, column: 29, scope: !5396)
!5681 = !DILocation(line: 489, column: 35, scope: !5396)
!5682 = !DILocation(line: 489, column: 41, scope: !5396)
!5683 = !DILocation(line: 489, column: 51, scope: !5396)
!5684 = !DILocation(line: 488, column: 9, scope: !5396)
!5685 = !DILocation(line: 491, column: 43, scope: !5396)
!5686 = !DILocation(line: 491, column: 9, scope: !5396)
!5687 = !DILocation(line: 491, column: 20, scope: !5396)
!5688 = !DILocation(line: 491, column: 27, scope: !5396)
!5689 = !DILocation(line: 491, column: 41, scope: !5396)
!5690 = !DILocation(line: 492, column: 89, scope: !5396)
!5691 = !DILocation(line: 492, column: 94, scope: !5396)
!5692 = !DILocation(line: 492, column: 105, scope: !5396)
!5693 = !DILocation(line: 492, column: 112, scope: !5396)
!5694 = !DILocation(line: 492, column: 71, scope: !5396)
!5695 = !DILocation(line: 492, column: 9, scope: !5396)
!5696 = !DILocation(line: 492, column: 26, scope: !5396)
!5697 = !DILocation(line: 492, column: 33, scope: !5396)
!5698 = !DILocation(line: 492, column: 41, scope: !5396)
!5699 = !DILocation(line: 492, column: 55, scope: !5396)
!5700 = !DILocation(line: 492, column: 53, scope: !5396)
!5701 = !DILocation(line: 492, column: 69, scope: !5396)
!5702 = !DILocation(line: 493, column: 5, scope: !5396)
!5703 = !DILocalVariable(name: "rparams", scope: !5704, file: !465, line: 496, type: !5705)
!5704 = distinct !DILexicalBlock(scope: !5392, file: !465, line: 493, column: 12)
!5705 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RefinementRegionParams", file: !5304, line: 57, baseType: !5706)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5304, line: 49, size: 256, elements: !5707)
!5707 = !{!5708, !5709, !5710, !5711, !5712, !5713}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "GRTEMPLATE", scope: !5706, file: !5304, line: 52, baseType: !188, size: 32)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !5706, file: !5304, line: 53, baseType: !483, size: 64, offset: 64)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "DX", scope: !5706, file: !5304, line: 54, baseType: !141, size: 32, offset: 128)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "DY", scope: !5706, file: !5304, line: 54, baseType: !141, size: 32, offset: 160)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "TPGRON", scope: !5706, file: !5304, line: 55, baseType: !188, size: 32, offset: 192)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "grat", scope: !5706, file: !5304, line: 56, baseType: !4567, size: 32, offset: 224)
!5714 = !DILocation(line: 496, column: 37, scope: !5704)
!5715 = !DILocalVariable(name: "image", scope: !5704, file: !465, line: 497, type: !483)
!5716 = !DILocation(line: 497, column: 21, scope: !5704)
!5717 = !DILocalVariable(name: "ID", scope: !5704, file: !465, line: 498, type: !32)
!5718 = !DILocation(line: 498, column: 18, scope: !5704)
!5719 = !DILocalVariable(name: "RDX", scope: !5704, file: !465, line: 499, type: !141)
!5720 = !DILocation(line: 499, column: 17, scope: !5704)
!5721 = !DILocalVariable(name: "RDY", scope: !5704, file: !465, line: 499, type: !141)
!5722 = !DILocation(line: 499, column: 22, scope: !5704)
!5723 = !DILocalVariable(name: "ninsyms", scope: !5704, file: !465, line: 500, type: !6)
!5724 = !DILocation(line: 500, column: 13, scope: !5704)
!5725 = !DILocation(line: 500, column: 23, scope: !5704)
!5726 = !DILocation(line: 500, column: 31, scope: !5704)
!5727 = !DILocation(line: 500, column: 41, scope: !5704)
!5728 = !DILocation(line: 502, column: 13, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5704, file: !465, line: 502, column: 13)
!5730 = !DILocation(line: 502, column: 21, scope: !5729)
!5731 = !DILocation(line: 502, column: 13, scope: !5704)
!5732 = !DILocation(line: 503, column: 34, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5729, file: !465, line: 502, column: 29)
!5734 = !DILocation(line: 503, column: 38, scope: !5733)
!5735 = !DILocation(line: 503, column: 11, scope: !5733)
!5736 = !DILocation(line: 503, column: 9, scope: !5733)
!5737 = !DILocation(line: 504, column: 30, scope: !5733)
!5738 = !DILocation(line: 504, column: 34, scope: !5733)
!5739 = !DILocation(line: 504, column: 12, scope: !5733)
!5740 = !DILocation(line: 504, column: 10, scope: !5733)
!5741 = !DILocation(line: 505, column: 30, scope: !5733)
!5742 = !DILocation(line: 505, column: 34, scope: !5733)
!5743 = !DILocation(line: 505, column: 12, scope: !5733)
!5744 = !DILocation(line: 505, column: 10, scope: !5733)
!5745 = !DILocation(line: 506, column: 9, scope: !5733)
!5746 = !DILocation(line: 507, column: 37, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5729, file: !465, line: 506, column: 16)
!5748 = !DILocation(line: 507, column: 43, scope: !5747)
!5749 = !DILocation(line: 507, column: 13, scope: !5747)
!5750 = !DILocation(line: 507, column: 11, scope: !5747)
!5751 = !DILocation(line: 508, column: 43, scope: !5747)
!5752 = !DILocation(line: 508, column: 50, scope: !5747)
!5753 = !DILocation(line: 508, column: 20, scope: !5747)
!5754 = !DILocation(line: 508, column: 18, scope: !5747)
!5755 = !DILocation(line: 509, column: 43, scope: !5747)
!5756 = !DILocation(line: 509, column: 50, scope: !5747)
!5757 = !DILocation(line: 509, column: 20, scope: !5747)
!5758 = !DILocation(line: 509, column: 18, scope: !5747)
!5759 = !DILocation(line: 512, column: 13, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5704, file: !465, line: 512, column: 13)
!5761 = !DILocation(line: 512, column: 19, scope: !5760)
!5762 = !DILocation(line: 512, column: 27, scope: !5760)
!5763 = !DILocation(line: 512, column: 26, scope: !5760)
!5764 = !DILocation(line: 512, column: 16, scope: !5760)
!5765 = !DILocation(line: 512, column: 13, scope: !5704)
!5766 = !DILocation(line: 513, column: 23, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5760, file: !465, line: 512, column: 41)
!5768 = !DILocation(line: 513, column: 50, scope: !5767)
!5769 = !DILocation(line: 513, column: 59, scope: !5767)
!5770 = !DILocation(line: 514, column: 49, scope: !5767)
!5771 = !DILocation(line: 513, column: 11, scope: !5767)
!5772 = !DILocation(line: 513, column: 9, scope: !5767)
!5773 = !DILocation(line: 515, column: 4, scope: !5767)
!5774 = !DILocation(line: 518, column: 21, scope: !5704)
!5775 = !DILocation(line: 518, column: 48, scope: !5704)
!5776 = !DILocation(line: 518, column: 57, scope: !5704)
!5777 = !DILocation(line: 520, column: 4, scope: !5704)
!5778 = !DILocation(line: 520, column: 8, scope: !5704)
!5779 = !DILocation(line: 520, column: 13, scope: !5704)
!5780 = !DILocation(line: 518, column: 9, scope: !5704)
!5781 = !DILocation(line: 522, column: 33, scope: !5704)
!5782 = !DILocation(line: 522, column: 38, scope: !5704)
!5783 = !DILocation(line: 522, column: 48, scope: !5704)
!5784 = !DILocation(line: 522, column: 17, scope: !5704)
!5785 = !DILocation(line: 522, column: 15, scope: !5704)
!5786 = !DILocation(line: 525, column: 30, scope: !5704)
!5787 = !DILocation(line: 525, column: 38, scope: !5704)
!5788 = !DILocation(line: 525, column: 17, scope: !5704)
!5789 = !DILocation(line: 525, column: 28, scope: !5704)
!5790 = !DILocation(line: 526, column: 30, scope: !5704)
!5791 = !DILocation(line: 526, column: 35, scope: !5704)
!5792 = !DILocation(line: 526, column: 33, scope: !5704)
!5793 = !DILocation(line: 526, column: 29, scope: !5704)
!5794 = !DILocation(line: 527, column: 6, scope: !5704)
!5795 = !DILocation(line: 527, column: 14, scope: !5704)
!5796 = !DILocation(line: 527, column: 24, scope: !5704)
!5797 = !DILocation(line: 527, column: 31, scope: !5704)
!5798 = !DILocation(line: 528, column: 6, scope: !5704)
!5799 = !DILocation(line: 528, column: 17, scope: !5704)
!5800 = !DILocation(line: 528, column: 24, scope: !5704)
!5801 = !DILocation(line: 528, column: 27, scope: !5704)
!5802 = !DILocation(line: 528, column: 26, scope: !5704)
!5803 = !DILocation(line: 526, column: 17, scope: !5704)
!5804 = !DILocation(line: 526, column: 27, scope: !5704)
!5805 = !DILocation(line: 529, column: 22, scope: !5704)
!5806 = !DILocation(line: 529, column: 17, scope: !5704)
!5807 = !DILocation(line: 529, column: 20, scope: !5704)
!5808 = !DILocation(line: 530, column: 22, scope: !5704)
!5809 = !DILocation(line: 530, column: 17, scope: !5704)
!5810 = !DILocation(line: 530, column: 20, scope: !5704)
!5811 = !DILocation(line: 531, column: 17, scope: !5704)
!5812 = !DILocation(line: 531, column: 24, scope: !5704)
!5813 = !DILocation(line: 532, column: 24, scope: !5704)
!5814 = !DILocation(line: 532, column: 9, scope: !5704)
!5815 = !DILocation(line: 532, column: 30, scope: !5704)
!5816 = !DILocation(line: 532, column: 38, scope: !5704)
!5817 = !DILocation(line: 533, column: 40, scope: !5704)
!5818 = !DILocation(line: 533, column: 45, scope: !5704)
!5819 = !DILocation(line: 534, column: 23, scope: !5704)
!5820 = !DILocation(line: 534, column: 27, scope: !5704)
!5821 = !DILocation(line: 534, column: 34, scope: !5704)
!5822 = !DILocation(line: 533, column: 9, scope: !5704)
!5823 = !DILocation(line: 536, column: 43, scope: !5704)
!5824 = !DILocation(line: 536, column: 9, scope: !5704)
!5825 = !DILocation(line: 536, column: 20, scope: !5704)
!5826 = !DILocation(line: 536, column: 27, scope: !5704)
!5827 = !DILocation(line: 536, column: 41, scope: !5704)
!5828 = !DILocation(line: 555, column: 4, scope: !5298)
!5829 = !DILocation(line: 558, column: 8, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5226, file: !465, line: 558, column: 8)
!5831 = !DILocation(line: 558, column: 16, scope: !5830)
!5832 = !DILocation(line: 558, column: 23, scope: !5830)
!5833 = !DILocation(line: 558, column: 27, scope: !5830)
!5834 = !DILocation(line: 558, column: 35, scope: !5830)
!5835 = !DILocation(line: 558, column: 8, scope: !5226)
!5836 = !DILocation(line: 559, column: 37, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5830, file: !465, line: 558, column: 45)
!5838 = !DILocation(line: 559, column: 6, scope: !5837)
!5839 = !DILocation(line: 559, column: 21, scope: !5837)
!5840 = !DILocation(line: 559, column: 35, scope: !5837)
!5841 = !DILocation(line: 560, column: 4, scope: !5837)
!5842 = !DILocation(line: 562, column: 16, scope: !5226)
!5843 = !DILocation(line: 562, column: 43, scope: !5226)
!5844 = !DILocation(line: 562, column: 52, scope: !5226)
!5845 = !DILocation(line: 564, column: 3, scope: !5226)
!5846 = !DILocation(line: 564, column: 17, scope: !5226)
!5847 = !DILocation(line: 564, column: 25, scope: !5226)
!5848 = !DILocation(line: 565, column: 3, scope: !5226)
!5849 = !DILocation(line: 565, column: 13, scope: !5226)
!5850 = !DILocation(line: 562, column: 4, scope: !5226)
!5851 = !DILocation(line: 568, column: 19, scope: !5226)
!5852 = !DILocation(line: 568, column: 32, scope: !5226)
!5853 = !DILocation(line: 568, column: 17, scope: !5226)
!5854 = !DILocation(line: 318, column: 7, scope: !5227)
!5855 = distinct !{!5855, !5856, !5857}
!5856 = !DILocation(line: 318, column: 7, scope: !5228)
!5857 = !DILocation(line: 570, column: 7, scope: !5228)
!5858 = !DILocation(line: 573, column: 11, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5167, file: !465, line: 573, column: 11)
!5860 = !DILocation(line: 573, column: 19, scope: !5859)
!5861 = !DILocation(line: 573, column: 26, scope: !5859)
!5862 = !DILocation(line: 573, column: 30, scope: !5859)
!5863 = !DILocation(line: 573, column: 38, scope: !5859)
!5864 = !DILocation(line: 573, column: 11, scope: !5167)
!5865 = !DILocalVariable(name: "image", scope: !5866, file: !465, line: 575, type: !483)
!5866 = distinct !DILexicalBlock(scope: !5859, file: !465, line: 573, column: 48)
!5867 = !DILocation(line: 575, column: 14, scope: !5866)
!5868 = !DILocalVariable(name: "BMSIZE", scope: !5866, file: !465, line: 576, type: !6)
!5869 = !DILocation(line: 576, column: 6, scope: !5866)
!5870 = !DILocation(line: 576, column: 33, scope: !5866)
!5871 = !DILocation(line: 576, column: 37, scope: !5866)
!5872 = !DILocation(line: 576, column: 45, scope: !5866)
!5873 = !DILocation(line: 576, column: 15, scope: !5866)
!5874 = !DILocalVariable(name: "j", scope: !5866, file: !465, line: 577, type: !6)
!5875 = !DILocation(line: 577, column: 6, scope: !5866)
!5876 = !DILocalVariable(name: "x", scope: !5866, file: !465, line: 577, type: !6)
!5877 = !DILocation(line: 577, column: 9, scope: !5866)
!5878 = !DILocation(line: 579, column: 6, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5866, file: !465, line: 579, column: 6)
!5880 = !DILocation(line: 579, column: 11, scope: !5879)
!5881 = !DILocation(line: 579, column: 15, scope: !5879)
!5882 = !DILocation(line: 579, column: 22, scope: !5879)
!5883 = !DILocation(line: 579, column: 6, scope: !5866)
!5884 = !DILocation(line: 580, column: 16, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5879, file: !465, line: 579, column: 28)
!5886 = !DILocation(line: 580, column: 43, scope: !5885)
!5887 = !DILocation(line: 580, column: 52, scope: !5885)
!5888 = !DILocation(line: 580, column: 4, scope: !5885)
!5889 = !DILocation(line: 583, column: 4, scope: !5885)
!5890 = !DILocation(line: 587, column: 21, scope: !5866)
!5891 = !DILocation(line: 587, column: 2, scope: !5866)
!5892 = !DILocation(line: 589, column: 26, scope: !5866)
!5893 = !DILocation(line: 589, column: 31, scope: !5866)
!5894 = !DILocation(line: 589, column: 41, scope: !5866)
!5895 = !DILocation(line: 589, column: 10, scope: !5866)
!5896 = !DILocation(line: 589, column: 8, scope: !5866)
!5897 = !DILocation(line: 590, column: 6, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5866, file: !465, line: 590, column: 6)
!5899 = !DILocation(line: 590, column: 12, scope: !5898)
!5900 = !DILocation(line: 590, column: 6, scope: !5866)
!5901 = !DILocation(line: 591, column: 16, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5898, file: !465, line: 590, column: 21)
!5903 = !DILocation(line: 591, column: 43, scope: !5902)
!5904 = !DILocation(line: 591, column: 52, scope: !5902)
!5905 = !DILocation(line: 591, column: 4, scope: !5902)
!5906 = !DILocation(line: 594, column: 4, scope: !5902)
!5907 = !DILocation(line: 597, column: 6, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5866, file: !465, line: 597, column: 6)
!5909 = !DILocation(line: 597, column: 13, scope: !5908)
!5910 = !DILocation(line: 597, column: 6, scope: !5866)
!5911 = !DILocalVariable(name: "src", scope: !5912, file: !465, line: 599, type: !219)
!5912 = distinct !DILexicalBlock(scope: !5908, file: !465, line: 597, column: 19)
!5913 = !DILocation(line: 599, column: 16, scope: !5912)
!5914 = !DILocation(line: 599, column: 22, scope: !5912)
!5915 = !DILocation(line: 599, column: 50, scope: !5912)
!5916 = !DILocation(line: 599, column: 29, scope: !5912)
!5917 = !DILocation(line: 599, column: 27, scope: !5912)
!5918 = !DILocalVariable(name: "stride", scope: !5912, file: !465, line: 600, type: !5919)
!5919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!5920 = !DILocation(line: 600, column: 14, scope: !5912)
!5921 = !DILocation(line: 600, column: 24, scope: !5912)
!5922 = !DILocation(line: 600, column: 31, scope: !5912)
!5923 = !DILocation(line: 600, column: 37, scope: !5912)
!5924 = !DILocation(line: 601, column: 5, scope: !5912)
!5925 = !DILocation(line: 601, column: 12, scope: !5912)
!5926 = !DILocation(line: 601, column: 18, scope: !5912)
!5927 = !DILocation(line: 601, column: 4, scope: !5912)
!5928 = !DILocation(line: 600, column: 43, scope: !5912)
!5929 = !DILocalVariable(name: "dst", scope: !5912, file: !465, line: 602, type: !144)
!5930 = !DILocation(line: 602, column: 10, scope: !5912)
!5931 = !DILocation(line: 602, column: 16, scope: !5912)
!5932 = !DILocation(line: 602, column: 23, scope: !5912)
!5933 = !DILocation(line: 604, column: 13, scope: !5912)
!5934 = !DILocation(line: 604, column: 20, scope: !5912)
!5935 = !DILocation(line: 604, column: 29, scope: !5912)
!5936 = !DILocation(line: 604, column: 27, scope: !5912)
!5937 = !DILocation(line: 604, column: 11, scope: !5912)
!5938 = !DILocation(line: 605, column: 16, scope: !5912)
!5939 = !DILocation(line: 605, column: 43, scope: !5912)
!5940 = !DILocation(line: 605, column: 52, scope: !5912)
!5941 = !DILocation(line: 608, column: 6, scope: !5912)
!5942 = !DILocation(line: 608, column: 13, scope: !5912)
!5943 = !DILocation(line: 608, column: 20, scope: !5912)
!5944 = !DILocation(line: 608, column: 27, scope: !5912)
!5945 = !DILocation(line: 608, column: 35, scope: !5912)
!5946 = !DILocation(line: 608, column: 50, scope: !5912)
!5947 = !DILocation(line: 608, column: 48, scope: !5912)
!5948 = !DILocation(line: 608, column: 62, scope: !5912)
!5949 = !DILocation(line: 605, column: 4, scope: !5912)
!5950 = !DILocation(line: 610, column: 11, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5912, file: !465, line: 610, column: 4)
!5952 = !DILocation(line: 610, column: 9, scope: !5951)
!5953 = !DILocation(line: 610, column: 16, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5951, file: !465, line: 610, column: 4)
!5955 = !DILocation(line: 610, column: 20, scope: !5954)
!5956 = !DILocation(line: 610, column: 27, scope: !5954)
!5957 = !DILocation(line: 610, column: 18, scope: !5954)
!5958 = !DILocation(line: 610, column: 4, scope: !5951)
!5959 = !DILocation(line: 611, column: 13, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5954, file: !465, line: 610, column: 40)
!5961 = !DILocation(line: 611, column: 18, scope: !5960)
!5962 = !DILocation(line: 611, column: 23, scope: !5960)
!5963 = !DILocation(line: 611, column: 6, scope: !5960)
!5964 = !DILocation(line: 612, column: 13, scope: !5960)
!5965 = !DILocation(line: 612, column: 20, scope: !5960)
!5966 = !DILocation(line: 612, column: 10, scope: !5960)
!5967 = !DILocation(line: 613, column: 13, scope: !5960)
!5968 = !DILocation(line: 613, column: 10, scope: !5960)
!5969 = !DILocation(line: 614, column: 4, scope: !5960)
!5970 = !DILocation(line: 610, column: 36, scope: !5954)
!5971 = !DILocation(line: 610, column: 4, scope: !5954)
!5972 = distinct !{!5972, !5958, !5973}
!5973 = !DILocation(line: 614, column: 4, scope: !5951)
!5974 = !DILocation(line: 615, column: 2, scope: !5912)
!5975 = !DILocalVariable(name: "rparams", scope: !5976, file: !465, line: 616, type: !5303)
!5976 = distinct !DILexicalBlock(scope: !5908, file: !465, line: 615, column: 9)
!5977 = !DILocation(line: 616, column: 29, scope: !5976)
!5978 = !DILocation(line: 618, column: 16, scope: !5976)
!5979 = !DILocation(line: 618, column: 43, scope: !5976)
!5980 = !DILocation(line: 618, column: 52, scope: !5976)
!5981 = !DILocation(line: 620, column: 6, scope: !5976)
!5982 = !DILocation(line: 620, column: 13, scope: !5976)
!5983 = !DILocation(line: 620, column: 20, scope: !5976)
!5984 = !DILocation(line: 620, column: 27, scope: !5976)
!5985 = !DILocation(line: 620, column: 35, scope: !5976)
!5986 = !DILocation(line: 620, column: 50, scope: !5976)
!5987 = !DILocation(line: 620, column: 48, scope: !5976)
!5988 = !DILocation(line: 620, column: 62, scope: !5976)
!5989 = !DILocation(line: 618, column: 4, scope: !5976)
!5990 = !DILocation(line: 622, column: 12, scope: !5976)
!5991 = !DILocation(line: 622, column: 16, scope: !5976)
!5992 = !DILocation(line: 623, column: 36, scope: !5976)
!5993 = !DILocation(line: 623, column: 41, scope: !5976)
!5994 = !DILocation(line: 624, column: 6, scope: !5976)
!5995 = !DILocation(line: 624, column: 34, scope: !5976)
!5996 = !DILocation(line: 624, column: 13, scope: !5976)
!5997 = !DILocation(line: 624, column: 11, scope: !5976)
!5998 = !DILocation(line: 624, column: 39, scope: !5976)
!5999 = !DILocation(line: 624, column: 47, scope: !5976)
!6000 = !DILocation(line: 623, column: 11, scope: !5976)
!6001 = !DILocation(line: 623, column: 9, scope: !5976)
!6002 = !DILocation(line: 625, column: 8, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5976, file: !465, line: 625, column: 8)
!6004 = !DILocation(line: 625, column: 8, scope: !5976)
!6005 = !DILocation(line: 626, column: 18, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6003, file: !465, line: 625, column: 14)
!6007 = !DILocation(line: 626, column: 45, scope: !6006)
!6008 = !DILocation(line: 626, column: 54, scope: !6006)
!6009 = !DILocation(line: 626, column: 6, scope: !6006)
!6010 = !DILocation(line: 629, column: 6, scope: !6006)
!6011 = !DILocation(line: 634, column: 24, scope: !5866)
!6012 = !DILocation(line: 634, column: 28, scope: !5866)
!6013 = !DILocation(line: 634, column: 2, scope: !5866)
!6014 = !DILocation(line: 637, column: 4, scope: !5866)
!6015 = !DILocation(line: 638, column: 11, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5866, file: !465, line: 638, column: 2)
!6017 = !DILocation(line: 638, column: 9, scope: !6016)
!6018 = !DILocation(line: 638, column: 7, scope: !6016)
!6019 = !DILocation(line: 638, column: 23, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6016, file: !465, line: 638, column: 2)
!6021 = !DILocation(line: 638, column: 27, scope: !6020)
!6022 = !DILocation(line: 638, column: 25, scope: !6020)
!6023 = !DILocation(line: 638, column: 2, scope: !6016)
!6024 = !DILocalVariable(name: "glyph", scope: !6025, file: !465, line: 639, type: !483)
!6025 = distinct !DILexicalBlock(scope: !6020, file: !465, line: 638, column: 46)
!6026 = !DILocation(line: 639, column: 16, scope: !6025)
!6027 = !DILocation(line: 640, column: 28, scope: !6025)
!6028 = !DILocation(line: 640, column: 33, scope: !6025)
!6029 = !DILocation(line: 640, column: 48, scope: !6025)
!6030 = !DILocation(line: 640, column: 52, scope: !6025)
!6031 = !DILocation(line: 640, column: 12, scope: !6025)
!6032 = !DILocation(line: 640, column: 10, scope: !6025)
!6033 = !DILocation(line: 641, column: 24, scope: !6025)
!6034 = !DILocation(line: 641, column: 29, scope: !6025)
!6035 = !DILocation(line: 641, column: 36, scope: !6025)
!6036 = !DILocation(line: 642, column: 4, scope: !6025)
!6037 = !DILocation(line: 642, column: 3, scope: !6025)
!6038 = !DILocation(line: 641, column: 4, scope: !6025)
!6039 = !DILocation(line: 643, column: 9, scope: !6025)
!6040 = !DILocation(line: 643, column: 24, scope: !6025)
!6041 = !DILocation(line: 643, column: 6, scope: !6025)
!6042 = !DILocation(line: 644, column: 27, scope: !6025)
!6043 = !DILocation(line: 644, column: 4, scope: !6025)
!6044 = !DILocation(line: 644, column: 15, scope: !6025)
!6045 = !DILocation(line: 644, column: 22, scope: !6025)
!6046 = !DILocation(line: 644, column: 25, scope: !6025)
!6047 = !DILocation(line: 645, column: 2, scope: !6025)
!6048 = !DILocation(line: 638, column: 42, scope: !6020)
!6049 = !DILocation(line: 638, column: 2, scope: !6020)
!6050 = distinct !{!6050, !6023, !6051}
!6051 = !DILocation(line: 645, column: 2, scope: !6016)
!6052 = !DILocation(line: 646, column: 22, scope: !5866)
!6053 = !DILocation(line: 646, column: 27, scope: !5866)
!6054 = !DILocation(line: 646, column: 2, scope: !5866)
!6055 = !DILocation(line: 647, column: 7, scope: !5866)
!6056 = distinct !{!6056, !5161, !6057}
!6057 = !DILocation(line: 649, column: 3, scope: !4941)
!6058 = !DILocation(line: 651, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !4941, file: !465, line: 651, column: 7)
!6060 = !DILocation(line: 651, column: 15, scope: !6059)
!6061 = !DILocation(line: 651, column: 7, scope: !4941)
!6062 = !DILocation(line: 653, column: 12, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !465, line: 653, column: 11)
!6064 = distinct !DILexicalBlock(scope: !6059, file: !465, line: 652, column: 3)
!6065 = !DILocation(line: 653, column: 20, scope: !6063)
!6066 = !DILocation(line: 653, column: 11, scope: !6064)
!6067 = !DILocation(line: 655, column: 36, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6063, file: !465, line: 654, column: 7)
!6069 = !DILocation(line: 655, column: 41, scope: !6068)
!6070 = !DILocation(line: 655, column: 50, scope: !6068)
!6071 = !DILocation(line: 655, column: 11, scope: !6068)
!6072 = !DILocation(line: 656, column: 36, scope: !6068)
!6073 = !DILocation(line: 656, column: 41, scope: !6068)
!6074 = !DILocation(line: 656, column: 50, scope: !6068)
!6075 = !DILocation(line: 656, column: 11, scope: !6068)
!6076 = !DILocation(line: 657, column: 36, scope: !6068)
!6077 = !DILocation(line: 657, column: 41, scope: !6068)
!6078 = !DILocation(line: 657, column: 50, scope: !6068)
!6079 = !DILocation(line: 657, column: 11, scope: !6068)
!6080 = !DILocation(line: 658, column: 36, scope: !6068)
!6081 = !DILocation(line: 658, column: 41, scope: !6068)
!6082 = !DILocation(line: 658, column: 50, scope: !6068)
!6083 = !DILocation(line: 658, column: 11, scope: !6068)
!6084 = !DILocation(line: 659, column: 37, scope: !6068)
!6085 = !DILocation(line: 659, column: 42, scope: !6068)
!6086 = !DILocation(line: 659, column: 51, scope: !6068)
!6087 = !DILocation(line: 659, column: 11, scope: !6068)
!6088 = !DILocation(line: 660, column: 36, scope: !6068)
!6089 = !DILocation(line: 660, column: 41, scope: !6068)
!6090 = !DILocation(line: 660, column: 50, scope: !6068)
!6091 = !DILocation(line: 660, column: 11, scope: !6068)
!6092 = !DILocation(line: 661, column: 36, scope: !6068)
!6093 = !DILocation(line: 661, column: 41, scope: !6068)
!6094 = !DILocation(line: 661, column: 50, scope: !6068)
!6095 = !DILocation(line: 661, column: 11, scope: !6068)
!6096 = !DILocation(line: 662, column: 36, scope: !6068)
!6097 = !DILocation(line: 662, column: 41, scope: !6068)
!6098 = !DILocation(line: 662, column: 50, scope: !6068)
!6099 = !DILocation(line: 662, column: 11, scope: !6068)
!6100 = !DILocation(line: 663, column: 36, scope: !6068)
!6101 = !DILocation(line: 663, column: 41, scope: !6068)
!6102 = !DILocation(line: 663, column: 50, scope: !6068)
!6103 = !DILocation(line: 663, column: 11, scope: !6068)
!6104 = !DILocation(line: 664, column: 36, scope: !6068)
!6105 = !DILocation(line: 664, column: 41, scope: !6068)
!6106 = !DILocation(line: 664, column: 50, scope: !6068)
!6107 = !DILocation(line: 664, column: 11, scope: !6068)
!6108 = !DILocation(line: 665, column: 7, scope: !6068)
!6109 = !DILocation(line: 668, column: 39, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6063, file: !465, line: 667, column: 7)
!6111 = !DILocation(line: 668, column: 44, scope: !6110)
!6112 = !DILocation(line: 668, column: 53, scope: !6110)
!6113 = !DILocation(line: 668, column: 11, scope: !6110)
!6114 = !DILocation(line: 669, column: 39, scope: !6110)
!6115 = !DILocation(line: 669, column: 44, scope: !6110)
!6116 = !DILocation(line: 669, column: 53, scope: !6110)
!6117 = !DILocation(line: 669, column: 11, scope: !6110)
!6118 = !DILocation(line: 670, column: 39, scope: !6110)
!6119 = !DILocation(line: 670, column: 44, scope: !6110)
!6120 = !DILocation(line: 670, column: 53, scope: !6110)
!6121 = !DILocation(line: 670, column: 11, scope: !6110)
!6122 = !DILocation(line: 671, column: 39, scope: !6110)
!6123 = !DILocation(line: 671, column: 44, scope: !6110)
!6124 = !DILocation(line: 671, column: 53, scope: !6110)
!6125 = !DILocation(line: 671, column: 11, scope: !6110)
!6126 = !DILocation(line: 672, column: 39, scope: !6110)
!6127 = !DILocation(line: 672, column: 44, scope: !6110)
!6128 = !DILocation(line: 672, column: 53, scope: !6110)
!6129 = !DILocation(line: 672, column: 11, scope: !6110)
!6130 = !DILocation(line: 673, column: 39, scope: !6110)
!6131 = !DILocation(line: 673, column: 44, scope: !6110)
!6132 = !DILocation(line: 673, column: 53, scope: !6110)
!6133 = !DILocation(line: 673, column: 11, scope: !6110)
!6134 = !DILocation(line: 674, column: 39, scope: !6110)
!6135 = !DILocation(line: 674, column: 44, scope: !6110)
!6136 = !DILocation(line: 674, column: 53, scope: !6110)
!6137 = !DILocation(line: 674, column: 11, scope: !6110)
!6138 = !DILocation(line: 676, column: 18, scope: !6064)
!6139 = !DILocation(line: 676, column: 23, scope: !6064)
!6140 = !DILocation(line: 676, column: 34, scope: !6064)
!6141 = !DILocation(line: 676, column: 7, scope: !6064)
!6142 = !DILocation(line: 677, column: 15, scope: !6064)
!6143 = !DILocation(line: 678, column: 24, scope: !6064)
!6144 = !DILocation(line: 678, column: 29, scope: !6064)
!6145 = !DILocation(line: 678, column: 7, scope: !6064)
!6146 = !DILocation(line: 679, column: 18, scope: !6064)
!6147 = !DILocation(line: 679, column: 23, scope: !6064)
!6148 = !DILocation(line: 679, column: 34, scope: !6064)
!6149 = !DILocation(line: 679, column: 7, scope: !6064)
!6150 = !DILocation(line: 680, column: 3, scope: !6064)
!6151 = !DILocation(line: 682, column: 14, scope: !4941)
!6152 = !DILocation(line: 682, column: 19, scope: !4941)
!6153 = !DILocation(line: 682, column: 30, scope: !4941)
!6154 = !DILocation(line: 682, column: 3, scope: !4941)
!6155 = !DILocation(line: 685, column: 27, scope: !4941)
!6156 = !DILocation(line: 685, column: 32, scope: !4941)
!6157 = !DILocation(line: 685, column: 40, scope: !4941)
!6158 = !DILocation(line: 685, column: 14, scope: !4941)
!6159 = !DILocation(line: 685, column: 12, scope: !4941)
!6160 = !DILocalVariable(name: "i", scope: !6161, file: !465, line: 687, type: !6)
!6161 = distinct !DILexicalBlock(scope: !4941, file: !465, line: 686, column: 3)
!6162 = !DILocation(line: 687, column: 9, scope: !6161)
!6163 = !DILocalVariable(name: "j", scope: !6161, file: !465, line: 688, type: !6)
!6164 = !DILocation(line: 688, column: 9, scope: !6161)
!6165 = !DILocalVariable(name: "k", scope: !6161, file: !465, line: 689, type: !6)
!6166 = !DILocation(line: 689, column: 9, scope: !6161)
!6167 = !DILocalVariable(name: "m", scope: !6161, file: !465, line: 689, type: !6)
!6168 = !DILocation(line: 689, column: 12, scope: !6161)
!6169 = !DILocalVariable(name: "exflag", scope: !6161, file: !465, line: 689, type: !6)
!6170 = !DILocation(line: 689, column: 15, scope: !6161)
!6171 = !DILocalVariable(name: "exrunlength", scope: !6161, file: !465, line: 690, type: !141)
!6172 = !DILocation(line: 690, column: 13, scope: !6161)
!6173 = !DILocation(line: 692, column: 9, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6161, file: !465, line: 692, column: 9)
!6175 = !DILocation(line: 692, column: 17, scope: !6174)
!6176 = !DILocation(line: 692, column: 26, scope: !6174)
!6177 = !DILocation(line: 692, column: 9, scope: !6161)
!6178 = !DILocation(line: 693, column: 11, scope: !6174)
!6179 = !DILocation(line: 693, column: 19, scope: !6174)
!6180 = !DILocation(line: 693, column: 29, scope: !6174)
!6181 = !DILocation(line: 693, column: 9, scope: !6174)
!6182 = !DILocation(line: 693, column: 7, scope: !6174)
!6183 = !DILocation(line: 695, column: 9, scope: !6174)
!6184 = !DILocation(line: 696, column: 5, scope: !6161)
!6185 = !DILocation(line: 696, column: 12, scope: !6161)
!6186 = !DILocation(line: 696, column: 16, scope: !6161)
!6187 = !DILocation(line: 696, column: 24, scope: !6161)
!6188 = !DILocation(line: 696, column: 14, scope: !6161)
!6189 = !DILocation(line: 697, column: 11, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !465, line: 697, column: 11)
!6191 = distinct !DILexicalBlock(scope: !6161, file: !465, line: 696, column: 37)
!6192 = !DILocation(line: 697, column: 19, scope: !6190)
!6193 = !DILocation(line: 697, column: 11, scope: !6191)
!6194 = !DILocation(line: 699, column: 23, scope: !6190)
!6195 = !DILocation(line: 699, column: 31, scope: !6190)
!6196 = !DILocation(line: 699, column: 21, scope: !6190)
!6197 = !DILocation(line: 699, column: 9, scope: !6190)
!6198 = !DILocation(line: 701, column: 39, scope: !6190)
!6199 = !DILocation(line: 701, column: 45, scope: !6190)
!6200 = !DILocation(line: 701, column: 16, scope: !6190)
!6201 = !DILocation(line: 701, column: 14, scope: !6190)
!6202 = !DILocation(line: 702, column: 13, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6191, file: !465, line: 702, column: 7)
!6204 = !DILocation(line: 702, column: 11, scope: !6203)
!6205 = !DILocation(line: 702, column: 18, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6203, file: !465, line: 702, column: 7)
!6207 = !DILocation(line: 702, column: 22, scope: !6206)
!6208 = !DILocation(line: 702, column: 20, scope: !6206)
!6209 = !DILocation(line: 702, column: 7, scope: !6203)
!6210 = !DILocation(line: 703, column: 13, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6206, file: !465, line: 703, column: 13)
!6212 = !DILocation(line: 703, column: 13, scope: !6206)
!6213 = !DILocation(line: 704, column: 36, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6211, file: !465, line: 703, column: 21)
!6215 = !DILocation(line: 704, column: 40, scope: !6214)
!6216 = !DILocation(line: 704, column: 38, scope: !6214)
!6217 = !DILocation(line: 704, column: 35, scope: !6214)
!6218 = !DILocation(line: 705, column: 31, scope: !6214)
!6219 = !DILocation(line: 705, column: 36, scope: !6214)
!6220 = !DILocation(line: 705, column: 44, scope: !6214)
!6221 = !DILocation(line: 705, column: 54, scope: !6214)
!6222 = !DILocation(line: 705, column: 61, scope: !6214)
!6223 = !DILocation(line: 705, column: 13, scope: !6214)
!6224 = !DILocation(line: 706, column: 31, scope: !6214)
!6225 = !DILocation(line: 706, column: 36, scope: !6214)
!6226 = !DILocation(line: 706, column: 47, scope: !6214)
!6227 = !DILocation(line: 706, column: 54, scope: !6214)
!6228 = !DILocation(line: 706, column: 56, scope: !6214)
!6229 = !DILocation(line: 706, column: 55, scope: !6214)
!6230 = !DILocation(line: 706, column: 13, scope: !6214)
!6231 = !DILocation(line: 704, column: 11, scope: !6214)
!6232 = !DILocation(line: 704, column: 21, scope: !6214)
!6233 = !DILocation(line: 704, column: 29, scope: !6214)
!6234 = !DILocation(line: 704, column: 33, scope: !6214)
!6235 = !DILocation(line: 707, column: 12, scope: !6214)
!6236 = !DILocation(line: 708, column: 9, scope: !6214)
!6237 = !DILocation(line: 702, column: 36, scope: !6206)
!6238 = !DILocation(line: 702, column: 7, scope: !6206)
!6239 = distinct !{!6239, !6209, !6240}
!6240 = !DILocation(line: 708, column: 9, scope: !6203)
!6241 = !DILocation(line: 709, column: 19, scope: !6191)
!6242 = !DILocation(line: 709, column: 18, scope: !6191)
!6243 = !DILocation(line: 709, column: 16, scope: !6191)
!6244 = distinct !{!6244, !6184, !6245}
!6245 = !DILocation(line: 710, column: 5, scope: !6161)
!6246 = !DILocation(line: 713, column: 20, scope: !4941)
!6247 = !DILocation(line: 713, column: 25, scope: !4941)
!6248 = !DILocation(line: 713, column: 3, scope: !4941)
!6249 = !DILocation(line: 715, column: 8, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !4941, file: !465, line: 715, column: 7)
!6251 = !DILocation(line: 715, column: 16, scope: !6250)
!6252 = !DILocation(line: 715, column: 7, scope: !4941)
!6253 = !DILocation(line: 716, column: 32, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6250, file: !465, line: 715, column: 24)
!6255 = !DILocation(line: 716, column: 37, scope: !6254)
!6256 = !DILocation(line: 716, column: 7, scope: !6254)
!6257 = !DILocation(line: 717, column: 32, scope: !6254)
!6258 = !DILocation(line: 717, column: 37, scope: !6254)
!6259 = !DILocation(line: 717, column: 7, scope: !6254)
!6260 = !DILocation(line: 718, column: 32, scope: !6254)
!6261 = !DILocation(line: 718, column: 37, scope: !6254)
!6262 = !DILocation(line: 718, column: 7, scope: !6254)
!6263 = !DILocation(line: 719, column: 32, scope: !6254)
!6264 = !DILocation(line: 719, column: 37, scope: !6254)
!6265 = !DILocation(line: 719, column: 7, scope: !6254)
!6266 = !DILocation(line: 720, column: 11, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6254, file: !465, line: 720, column: 11)
!6268 = !DILocation(line: 720, column: 19, scope: !6267)
!6269 = !DILocation(line: 720, column: 11, scope: !6254)
!6270 = !DILocation(line: 721, column: 35, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !465, line: 720, column: 29)
!6272 = !DILocation(line: 721, column: 40, scope: !6271)
!6273 = !DILocation(line: 721, column: 9, scope: !6271)
!6274 = !DILocation(line: 722, column: 34, scope: !6271)
!6275 = !DILocation(line: 722, column: 39, scope: !6271)
!6276 = !DILocation(line: 722, column: 9, scope: !6271)
!6277 = !DILocation(line: 723, column: 34, scope: !6271)
!6278 = !DILocation(line: 723, column: 39, scope: !6271)
!6279 = !DILocation(line: 723, column: 9, scope: !6271)
!6280 = !DILocation(line: 724, column: 7, scope: !6271)
!6281 = !DILocation(line: 725, column: 18, scope: !6254)
!6282 = !DILocation(line: 725, column: 23, scope: !6254)
!6283 = !DILocation(line: 725, column: 34, scope: !6254)
!6284 = !DILocation(line: 725, column: 7, scope: !6254)
!6285 = !DILocation(line: 726, column: 3, scope: !6254)
!6286 = !DILocation(line: 727, column: 11, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !465, line: 727, column: 11)
!6288 = distinct !DILexicalBlock(scope: !6250, file: !465, line: 726, column: 10)
!6289 = !DILocation(line: 727, column: 19, scope: !6287)
!6290 = !DILocation(line: 727, column: 11, scope: !6288)
!6291 = !DILocation(line: 728, column: 13, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6287, file: !465, line: 727, column: 29)
!6293 = !DILocation(line: 728, column: 18, scope: !6292)
!6294 = !DILocation(line: 728, column: 29, scope: !6292)
!6295 = !DILocation(line: 728, column: 2, scope: !6292)
!6296 = !DILocation(line: 729, column: 7, scope: !6292)
!6297 = !DILocation(line: 730, column: 35, scope: !6288)
!6298 = !DILocation(line: 730, column: 40, scope: !6288)
!6299 = !DILocation(line: 730, column: 7, scope: !6288)
!6300 = !DILocation(line: 731, column: 18, scope: !6288)
!6301 = !DILocation(line: 731, column: 23, scope: !6288)
!6302 = !DILocation(line: 731, column: 34, scope: !6288)
!6303 = !DILocation(line: 731, column: 7, scope: !6288)
!6304 = !DILocation(line: 734, column: 30, scope: !4941)
!6305 = !DILocation(line: 734, column: 35, scope: !4941)
!6306 = !DILocation(line: 734, column: 3, scope: !4941)
!6307 = !DILocation(line: 736, column: 10, scope: !4941)
!6308 = !DILocation(line: 736, column: 3, scope: !4941)
!6309 = !DILocation(line: 737, column: 1, scope: !4941)
!6310 = distinct !DISubprogram(name: "jbig2_decode_text_region", scope: !506, file: !506, line: 56, type: !6311, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !505, retainedNodes: !70)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!6, !6313, !6350, !6381, !508, !5919, !518, !219, !1559, !595, !4988, !6434}
!6313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6314, size: 64)
!6314 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !6315)
!6315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !6316)
!6316 = !{!6317, !6334, !6335, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6361, !6362, !6363, !6364, !6365}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !6315, file: !90, line: 45, baseType: !6318, size: 64)
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6319 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !6320)
!6320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !6321)
!6321 = !{!6322, !6326, !6330}
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6320, file: !58, line: 86, baseType: !6323, size: 64)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!68, !6318, !119}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6320, file: !58, line: 87, baseType: !6327, size: 64, offset: 64)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{null, !6318, !68}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !6320, file: !58, line: 88, baseType: !6331, size: 64, offset: 128)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6332, size: 64)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{!68, !6318, !68, !119}
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !6315, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !6315, file: !90, line: 47, baseType: !6336, size: 64, offset: 128)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6314)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !6315, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !6315, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6315, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !6315, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !6315, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !6315, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6315, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !6315, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !6315, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !6315, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !6315, file: !90, line: 62, baseType: !6349, size: 64, offset: 640)
!6349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6350, size: 64)
!6350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6351, size: 64)
!6351 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !6352)
!6352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !6353)
!6353 = !{!6354, !6355, !6356, !6357, !6358, !6359, !6360}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !6352, file: !58, line: 117, baseType: !32, size: 32)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6352, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !6352, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !6352, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !6352, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !6352, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !6352, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !6315, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !6315, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !6315, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !6315, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6315, file: !90, line: 70, baseType: !6366, size: 64, offset: 832)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !6368)
!6368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !6369)
!6369 = !{!6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380}
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6368, file: !90, line: 111, baseType: !178, size: 32)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !6368, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !6368, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6368, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !6368, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !6368, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !6368, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !6368, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !6368, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6368, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6368, file: !90, line: 120, baseType: !518, size: 64, offset: 320)
!6381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6382, size: 64)
!6382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6383)
!6383 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2TextRegionParams", file: !468, line: 67, baseType: !6384)
!6384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !468, line: 30, size: 1536, elements: !6385)
!6385 = !{!6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6415, !6416, !6417, !6418, !6419, !6420, !6421, !6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433}
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFF", scope: !6384, file: !468, line: 31, baseType: !188, size: 32)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "SBREFINE", scope: !6384, file: !468, line: 32, baseType: !188, size: 32, offset: 32)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "SBDEFPIXEL", scope: !6384, file: !468, line: 33, baseType: !188, size: 32, offset: 64)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "SBCOMBOP", scope: !6384, file: !468, line: 34, baseType: !3145, size: 32, offset: 96)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSPOSED", scope: !6384, file: !468, line: 35, baseType: !188, size: 32, offset: 128)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "REFCORNER", scope: !6384, file: !468, line: 36, baseType: !5029, size: 32, offset: 160)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "SBDSOFFSET", scope: !6384, file: !468, line: 37, baseType: !6, size: 32, offset: 192)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "SBNUMINSTANCES", scope: !6384, file: !468, line: 40, baseType: !32, size: 32, offset: 224)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "LOGSBSTRIPS", scope: !6384, file: !468, line: 41, baseType: !6, size: 32, offset: 256)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "SBSTRIPS", scope: !6384, file: !468, line: 42, baseType: !6, size: 32, offset: 288)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFFS", scope: !6384, file: !468, line: 47, baseType: !6397, size: 64, offset: 320)
!6397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 64)
!6398 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanTable", file: !293, line: 26, baseType: !6399)
!6399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanTable", file: !293, line: 39, size: 128, elements: !6400)
!6400 = !{!6401, !6402}
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "log_table_size", scope: !6399, file: !293, line: 40, baseType: !6, size: 32)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !6399, file: !293, line: 41, baseType: !6403, size: 64, offset: 64)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 64)
!6404 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanEntry", file: !293, line: 24, baseType: !6405)
!6405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanEntry", file: !293, line: 29, size: 128, elements: !6406)
!6406 = !{!6407, !6412, !6413, !6414}
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6405, file: !293, line: 33, baseType: !6408, size: 64)
!6408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6405, file: !293, line: 30, size: 64, elements: !6409)
!6409 = !{!6410, !6411}
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELOW", scope: !6408, file: !293, line: 31, baseType: !141, size: 32)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "ext_table", scope: !6408, file: !293, line: 32, baseType: !6397, size: 64)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "PREFLEN", scope: !6405, file: !293, line: 34, baseType: !145, size: 8, offset: 64)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELEN", scope: !6405, file: !293, line: 35, baseType: !145, size: 8, offset: 72)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6405, file: !293, line: 36, baseType: !145, size: 8, offset: 80)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFDS", scope: !6384, file: !468, line: 48, baseType: !6397, size: 64, offset: 384)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFDT", scope: !6384, file: !468, line: 49, baseType: !6397, size: 64, offset: 448)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDW", scope: !6384, file: !468, line: 50, baseType: !6397, size: 64, offset: 512)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDH", scope: !6384, file: !468, line: 51, baseType: !6397, size: 64, offset: 576)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDX", scope: !6384, file: !468, line: 52, baseType: !6397, size: 64, offset: 640)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRDY", scope: !6384, file: !468, line: 53, baseType: !6397, size: 64, offset: 704)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "SBHUFFRSIZE", scope: !6384, file: !468, line: 54, baseType: !6397, size: 64, offset: 768)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "IADT", scope: !6384, file: !468, line: 55, baseType: !4993, size: 64, offset: 832)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "IAFS", scope: !6384, file: !468, line: 56, baseType: !4993, size: 64, offset: 896)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "IADS", scope: !6384, file: !468, line: 57, baseType: !4993, size: 64, offset: 960)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "IAIT", scope: !6384, file: !468, line: 58, baseType: !4993, size: 64, offset: 1024)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "IAID", scope: !6384, file: !468, line: 59, baseType: !5004, size: 64, offset: 1088)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "IARI", scope: !6384, file: !468, line: 60, baseType: !4993, size: 64, offset: 1152)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "IARDW", scope: !6384, file: !468, line: 61, baseType: !4993, size: 64, offset: 1216)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "IARDH", scope: !6384, file: !468, line: 62, baseType: !4993, size: 64, offset: 1280)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "IARDX", scope: !6384, file: !468, line: 63, baseType: !4993, size: 64, offset: 1344)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "IARDY", scope: !6384, file: !468, line: 64, baseType: !4993, size: 64, offset: 1408)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "SBRTEMPLATE", scope: !6384, file: !468, line: 65, baseType: !188, size: 32, offset: 1472)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "sbrat", scope: !6384, file: !468, line: 66, baseType: !4567, size: 32, offset: 1504)
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6435, size: 64)
!6435 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !6436)
!6436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !6437)
!6437 = !{!6438}
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !6436, file: !90, line: 167, baseType: !6439, size: 64)
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6440, size: 64)
!6440 = !DISubroutineType(types: !6441)
!6441 = !{!32, !6434, !6}
!6442 = !DILocalVariable(name: "ctx", arg: 1, scope: !6310, file: !506, line: 56, type: !6313)
!6443 = !DILocation(line: 56, column: 36, scope: !6310)
!6444 = !DILocalVariable(name: "segment", arg: 2, scope: !6310, file: !506, line: 56, type: !6350)
!6445 = !DILocation(line: 56, column: 55, scope: !6310)
!6446 = !DILocalVariable(name: "params", arg: 3, scope: !6310, file: !506, line: 57, type: !6381)
!6447 = !DILocation(line: 57, column: 59, scope: !6310)
!6448 = !DILocalVariable(name: "dicts", arg: 4, scope: !6310, file: !506, line: 58, type: !508)
!6449 = !DILocation(line: 58, column: 61, scope: !6310)
!6450 = !DILocalVariable(name: "n_dicts", arg: 5, scope: !6310, file: !506, line: 58, type: !5919)
!6451 = !DILocation(line: 58, column: 78, scope: !6310)
!6452 = !DILocalVariable(name: "image", arg: 6, scope: !6310, file: !506, line: 59, type: !518)
!6453 = !DILocation(line: 59, column: 42, scope: !6310)
!6454 = !DILocalVariable(name: "data", arg: 7, scope: !6310, file: !506, line: 60, type: !219)
!6455 = !DILocation(line: 60, column: 42, scope: !6310)
!6456 = !DILocalVariable(name: "size", arg: 8, scope: !6310, file: !506, line: 60, type: !1559)
!6457 = !DILocation(line: 60, column: 61, scope: !6310)
!6458 = !DILocalVariable(name: "GR_stats", arg: 9, scope: !6310, file: !506, line: 61, type: !595)
!6459 = !DILocation(line: 61, column: 23, scope: !6310)
!6460 = !DILocalVariable(name: "as", arg: 10, scope: !6310, file: !506, line: 61, type: !4988)
!6461 = !DILocation(line: 61, column: 50, scope: !6310)
!6462 = !DILocalVariable(name: "ws", arg: 11, scope: !6310, file: !506, line: 61, type: !6434)
!6463 = !DILocation(line: 61, column: 71, scope: !6310)
!6464 = !DILocalVariable(name: "NINSTANCES", scope: !6310, file: !506, line: 64, type: !32)
!6465 = !DILocation(line: 64, column: 14, scope: !6310)
!6466 = !DILocalVariable(name: "ID", scope: !6310, file: !506, line: 65, type: !32)
!6467 = !DILocation(line: 65, column: 14, scope: !6310)
!6468 = !DILocalVariable(name: "STRIPT", scope: !6310, file: !506, line: 66, type: !141)
!6469 = !DILocation(line: 66, column: 13, scope: !6310)
!6470 = !DILocalVariable(name: "FIRSTS", scope: !6310, file: !506, line: 67, type: !141)
!6471 = !DILocation(line: 67, column: 13, scope: !6310)
!6472 = !DILocalVariable(name: "DT", scope: !6310, file: !506, line: 68, type: !141)
!6473 = !DILocation(line: 68, column: 13, scope: !6310)
!6474 = !DILocalVariable(name: "DFS", scope: !6310, file: !506, line: 69, type: !141)
!6475 = !DILocation(line: 69, column: 13, scope: !6310)
!6476 = !DILocalVariable(name: "IDS", scope: !6310, file: !506, line: 70, type: !141)
!6477 = !DILocation(line: 70, column: 13, scope: !6310)
!6478 = !DILocalVariable(name: "CURS", scope: !6310, file: !506, line: 71, type: !141)
!6479 = !DILocation(line: 71, column: 13, scope: !6310)
!6480 = !DILocalVariable(name: "CURT", scope: !6310, file: !506, line: 72, type: !141)
!6481 = !DILocation(line: 72, column: 13, scope: !6310)
!6482 = !DILocalVariable(name: "S", scope: !6310, file: !506, line: 73, type: !6)
!6483 = !DILocation(line: 73, column: 9, scope: !6310)
!6484 = !DILocalVariable(name: "T", scope: !6310, file: !506, line: 73, type: !6)
!6485 = !DILocation(line: 73, column: 11, scope: !6310)
!6486 = !DILocalVariable(name: "x", scope: !6310, file: !506, line: 74, type: !6)
!6487 = !DILocation(line: 74, column: 9, scope: !6310)
!6488 = !DILocalVariable(name: "y", scope: !6310, file: !506, line: 74, type: !6)
!6489 = !DILocation(line: 74, column: 11, scope: !6310)
!6490 = !DILocalVariable(name: "first_symbol", scope: !6310, file: !506, line: 75, type: !188)
!6491 = !DILocation(line: 75, column: 10, scope: !6310)
!6492 = !DILocalVariable(name: "index", scope: !6310, file: !506, line: 76, type: !32)
!6493 = !DILocation(line: 76, column: 14, scope: !6310)
!6494 = !DILocalVariable(name: "SBNUMSYMS", scope: !6310, file: !506, line: 76, type: !32)
!6495 = !DILocation(line: 76, column: 21, scope: !6310)
!6496 = !DILocalVariable(name: "IB", scope: !6310, file: !506, line: 77, type: !518)
!6497 = !DILocation(line: 77, column: 17, scope: !6310)
!6498 = !DILocalVariable(name: "hs", scope: !6310, file: !506, line: 78, type: !4981)
!6499 = !DILocation(line: 78, column: 24, scope: !6310)
!6500 = !DILocalVariable(name: "SBSYMCODES", scope: !6310, file: !506, line: 79, type: !6397)
!6501 = !DILocation(line: 79, column: 24, scope: !6310)
!6502 = !DILocalVariable(name: "code", scope: !6310, file: !506, line: 80, type: !6)
!6503 = !DILocation(line: 80, column: 9, scope: !6310)
!6504 = !DILocalVariable(name: "RI", scope: !6310, file: !506, line: 81, type: !6)
!6505 = !DILocation(line: 81, column: 9, scope: !6310)
!6506 = !DILocation(line: 83, column: 15, scope: !6310)
!6507 = !DILocation(line: 84, column: 16, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6310, file: !506, line: 84, column: 5)
!6509 = !DILocation(line: 84, column: 10, scope: !6508)
!6510 = !DILocation(line: 84, column: 21, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6508, file: !506, line: 84, column: 5)
!6512 = !DILocation(line: 84, column: 29, scope: !6511)
!6513 = !DILocation(line: 84, column: 27, scope: !6511)
!6514 = !DILocation(line: 84, column: 5, scope: !6508)
!6515 = !DILocation(line: 85, column: 22, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6511, file: !506, line: 84, column: 47)
!6517 = !DILocation(line: 85, column: 28, scope: !6516)
!6518 = !DILocation(line: 85, column: 36, scope: !6516)
!6519 = !DILocation(line: 85, column: 19, scope: !6516)
!6520 = !DILocation(line: 86, column: 5, scope: !6516)
!6521 = !DILocation(line: 84, column: 43, scope: !6511)
!6522 = !DILocation(line: 84, column: 5, scope: !6511)
!6523 = distinct !{!6523, !6514, !6524}
!6524 = !DILocation(line: 86, column: 5, scope: !6508)
!6525 = !DILocation(line: 87, column: 17, scope: !6310)
!6526 = !DILocation(line: 87, column: 44, scope: !6310)
!6527 = !DILocation(line: 87, column: 53, scope: !6310)
!6528 = !DILocation(line: 88, column: 62, scope: !6310)
!6529 = !DILocation(line: 88, column: 73, scope: !6310)
!6530 = !DILocation(line: 87, column: 5, scope: !6310)
!6531 = !DILocation(line: 90, column: 9, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6310, file: !506, line: 90, column: 9)
!6533 = !DILocation(line: 90, column: 17, scope: !6532)
!6534 = !DILocation(line: 90, column: 9, scope: !6310)
!6535 = !DILocalVariable(name: "runcodes", scope: !6536, file: !506, line: 91, type: !6397)
!6536 = distinct !DILexicalBlock(scope: !6532, file: !506, line: 90, column: 25)
!6537 = !DILocation(line: 91, column: 21, scope: !6536)
!6538 = !DILocalVariable(name: "runcodeparams", scope: !6536, file: !506, line: 92, type: !6539)
!6539 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanParams", file: !293, line: 27, baseType: !6540)
!6540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanParams", file: !293, line: 52, size: 128, elements: !6541)
!6541 = !{!6542, !6543, !6544}
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "HTOOB", scope: !6540, file: !293, line: 53, baseType: !188, size: 32)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "n_lines", scope: !6540, file: !293, line: 54, baseType: !6, size: 32, offset: 32)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !6540, file: !293, line: 55, baseType: !6545, size: 64, offset: 64)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6547)
!6547 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2HuffmanLine", file: !293, line: 44, baseType: !6548)
!6548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2HuffmanLine", file: !293, line: 46, size: 96, elements: !6549)
!6549 = !{!6550, !6551, !6552}
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "PREFLEN", scope: !6548, file: !293, line: 47, baseType: !6, size: 32)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELEN", scope: !6548, file: !293, line: 48, baseType: !6, size: 32, offset: 32)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "RANGELOW", scope: !6548, file: !293, line: 49, baseType: !6, size: 32, offset: 64)
!6553 = !DILocation(line: 92, column: 21, scope: !6536)
!6554 = !DILocalVariable(name: "runcodelengths", scope: !6536, file: !506, line: 93, type: !6555)
!6555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6547, size: 3360, elements: !6556)
!6556 = !{!6557}
!6557 = !DISubrange(count: 35)
!6558 = !DILocation(line: 93, column: 19, scope: !6536)
!6559 = !DILocalVariable(name: "symcodelengths", scope: !6536, file: !506, line: 94, type: !6560)
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 64)
!6561 = !DILocation(line: 94, column: 20, scope: !6536)
!6562 = !DILocalVariable(name: "symcodeparams", scope: !6536, file: !506, line: 95, type: !6539)
!6563 = !DILocation(line: 95, column: 21, scope: !6536)
!6564 = !DILocalVariable(name: "code", scope: !6536, file: !506, line: 96, type: !6)
!6565 = !DILocation(line: 96, column: 6, scope: !6536)
!6566 = !DILocalVariable(name: "err", scope: !6536, file: !506, line: 96, type: !6)
!6567 = !DILocation(line: 96, column: 12, scope: !6536)
!6568 = !DILocalVariable(name: "len", scope: !6536, file: !506, line: 96, type: !6)
!6569 = !DILocation(line: 96, column: 17, scope: !6536)
!6570 = !DILocalVariable(name: "range", scope: !6536, file: !506, line: 96, type: !6)
!6571 = !DILocation(line: 96, column: 22, scope: !6536)
!6572 = !DILocalVariable(name: "r", scope: !6536, file: !506, line: 96, type: !6)
!6573 = !DILocation(line: 96, column: 29, scope: !6536)
!6574 = !DILocation(line: 98, column: 14, scope: !6536)
!6575 = !DILocation(line: 98, column: 41, scope: !6536)
!6576 = !DILocation(line: 98, column: 50, scope: !6536)
!6577 = !DILocation(line: 98, column: 2, scope: !6536)
!6578 = !DILocation(line: 100, column: 25, scope: !6536)
!6579 = !DILocation(line: 100, column: 30, scope: !6536)
!6580 = !DILocation(line: 100, column: 7, scope: !6536)
!6581 = !DILocation(line: 100, column: 5, scope: !6536)
!6582 = !DILocation(line: 107, column: 13, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6536, file: !506, line: 107, column: 2)
!6584 = !DILocation(line: 107, column: 7, scope: !6583)
!6585 = !DILocation(line: 107, column: 18, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !506, line: 107, column: 2)
!6587 = !DILocation(line: 107, column: 24, scope: !6586)
!6588 = !DILocation(line: 107, column: 2, scope: !6583)
!6589 = !DILocation(line: 108, column: 59, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6586, file: !506, line: 107, column: 39)
!6591 = !DILocation(line: 108, column: 36, scope: !6590)
!6592 = !DILocation(line: 108, column: 19, scope: !6590)
!6593 = !DILocation(line: 108, column: 4, scope: !6590)
!6594 = !DILocation(line: 108, column: 26, scope: !6590)
!6595 = !DILocation(line: 108, column: 34, scope: !6590)
!6596 = !DILocation(line: 109, column: 19, scope: !6590)
!6597 = !DILocation(line: 109, column: 4, scope: !6590)
!6598 = !DILocation(line: 109, column: 26, scope: !6590)
!6599 = !DILocation(line: 109, column: 35, scope: !6590)
!6600 = !DILocation(line: 110, column: 37, scope: !6590)
!6601 = !DILocation(line: 110, column: 19, scope: !6590)
!6602 = !DILocation(line: 110, column: 4, scope: !6590)
!6603 = !DILocation(line: 110, column: 26, scope: !6590)
!6604 = !DILocation(line: 110, column: 35, scope: !6590)
!6605 = !DILocation(line: 111, column: 16, scope: !6590)
!6606 = !DILocation(line: 111, column: 43, scope: !6590)
!6607 = !DILocation(line: 111, column: 52, scope: !6590)
!6608 = !DILocation(line: 112, column: 36, scope: !6590)
!6609 = !DILocation(line: 112, column: 58, scope: !6590)
!6610 = !DILocation(line: 112, column: 43, scope: !6590)
!6611 = !DILocation(line: 112, column: 65, scope: !6590)
!6612 = !DILocation(line: 111, column: 4, scope: !6590)
!6613 = !DILocation(line: 113, column: 2, scope: !6590)
!6614 = !DILocation(line: 107, column: 35, scope: !6586)
!6615 = !DILocation(line: 107, column: 2, scope: !6586)
!6616 = distinct !{!6616, !6588, !6617}
!6617 = !DILocation(line: 113, column: 2, scope: !6583)
!6618 = !DILocation(line: 114, column: 16, scope: !6536)
!6619 = !DILocation(line: 114, column: 22, scope: !6536)
!6620 = !DILocation(line: 115, column: 24, scope: !6536)
!6621 = !DILocation(line: 115, column: 16, scope: !6536)
!6622 = !DILocation(line: 115, column: 22, scope: !6536)
!6623 = !DILocation(line: 116, column: 16, scope: !6536)
!6624 = !DILocation(line: 116, column: 24, scope: !6536)
!6625 = !DILocation(line: 117, column: 39, scope: !6536)
!6626 = !DILocation(line: 117, column: 13, scope: !6536)
!6627 = !DILocation(line: 117, column: 11, scope: !6536)
!6628 = !DILocation(line: 118, column: 6, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6536, file: !506, line: 118, column: 6)
!6630 = !DILocation(line: 118, column: 15, scope: !6629)
!6631 = !DILocation(line: 118, column: 6, scope: !6536)
!6632 = !DILocation(line: 119, column: 16, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6629, file: !506, line: 118, column: 24)
!6634 = !DILocation(line: 119, column: 43, scope: !6633)
!6635 = !DILocation(line: 119, column: 52, scope: !6633)
!6636 = !DILocation(line: 119, column: 4, scope: !6633)
!6637 = !DILocation(line: 121, column: 4, scope: !6633)
!6638 = !DILocation(line: 125, column: 31, scope: !6536)
!6639 = !DILocation(line: 125, column: 36, scope: !6536)
!6640 = !DILocation(line: 125, column: 47, scope: !6536)
!6641 = !DILocation(line: 125, column: 56, scope: !6536)
!6642 = !DILocation(line: 125, column: 19, scope: !6536)
!6643 = !DILocation(line: 125, column: 17, scope: !6536)
!6644 = !DILocation(line: 126, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6536, file: !506, line: 126, column: 6)
!6646 = !DILocation(line: 126, column: 21, scope: !6645)
!6647 = !DILocation(line: 126, column: 6, scope: !6536)
!6648 = !DILocation(line: 127, column: 16, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6645, file: !506, line: 126, column: 30)
!6650 = !DILocation(line: 127, column: 43, scope: !6649)
!6651 = !DILocation(line: 127, column: 52, scope: !6649)
!6652 = !DILocation(line: 127, column: 4, scope: !6649)
!6653 = !DILocation(line: 129, column: 4, scope: !6649)
!6654 = !DILocation(line: 131, column: 8, scope: !6536)
!6655 = !DILocation(line: 132, column: 2, scope: !6536)
!6656 = !DILocation(line: 132, column: 9, scope: !6536)
!6657 = !DILocation(line: 132, column: 17, scope: !6536)
!6658 = !DILocation(line: 132, column: 15, scope: !6536)
!6659 = !DILocation(line: 133, column: 29, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6536, file: !506, line: 132, column: 28)
!6661 = !DILocation(line: 133, column: 33, scope: !6660)
!6662 = !DILocation(line: 133, column: 11, scope: !6660)
!6663 = !DILocation(line: 133, column: 9, scope: !6660)
!6664 = !DILocation(line: 134, column: 8, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6660, file: !506, line: 134, column: 8)
!6666 = !DILocation(line: 134, column: 12, scope: !6665)
!6667 = !DILocation(line: 134, column: 17, scope: !6665)
!6668 = !DILocation(line: 134, column: 20, scope: !6665)
!6669 = !DILocation(line: 134, column: 25, scope: !6665)
!6670 = !DILocation(line: 134, column: 29, scope: !6665)
!6671 = !DILocation(line: 134, column: 32, scope: !6665)
!6672 = !DILocation(line: 134, column: 37, scope: !6665)
!6673 = !DILocation(line: 134, column: 8, scope: !6660)
!6674 = !DILocation(line: 135, column: 18, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6665, file: !506, line: 134, column: 44)
!6676 = !DILocation(line: 135, column: 45, scope: !6675)
!6677 = !DILocation(line: 135, column: 54, scope: !6675)
!6678 = !DILocation(line: 135, column: 6, scope: !6675)
!6679 = !DILocation(line: 137, column: 13, scope: !6675)
!6680 = !DILocation(line: 137, column: 19, scope: !6675)
!6681 = !DILocation(line: 137, column: 6, scope: !6675)
!6682 = !DILocation(line: 140, column: 8, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6660, file: !506, line: 140, column: 8)
!6684 = !DILocation(line: 140, column: 13, scope: !6683)
!6685 = !DILocation(line: 140, column: 8, scope: !6660)
!6686 = !DILocation(line: 141, column: 12, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !506, line: 140, column: 19)
!6688 = !DILocation(line: 141, column: 10, scope: !6687)
!6689 = !DILocation(line: 142, column: 12, scope: !6687)
!6690 = !DILocation(line: 143, column: 4, scope: !6687)
!6691 = !DILocation(line: 144, column: 10, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !506, line: 144, column: 10)
!6693 = distinct !DILexicalBlock(scope: !6683, file: !506, line: 143, column: 11)
!6694 = !DILocation(line: 144, column: 16, scope: !6692)
!6695 = !DILocation(line: 144, column: 10, scope: !6693)
!6696 = !DILocation(line: 145, column: 20, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !506, line: 144, column: 21)
!6698 = !DILocation(line: 145, column: 47, scope: !6697)
!6699 = !DILocation(line: 145, column: 56, scope: !6697)
!6700 = !DILocation(line: 145, column: 8, scope: !6697)
!6701 = !DILocation(line: 148, column: 8, scope: !6697)
!6702 = !DILocation(line: 150, column: 10, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6693, file: !506, line: 150, column: 10)
!6704 = !DILocation(line: 150, column: 15, scope: !6703)
!6705 = !DILocation(line: 150, column: 10, scope: !6693)
!6706 = !DILocation(line: 151, column: 14, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6703, file: !506, line: 150, column: 22)
!6708 = !DILocation(line: 151, column: 29, scope: !6707)
!6709 = !DILocation(line: 151, column: 34, scope: !6707)
!6710 = !DILocation(line: 151, column: 38, scope: !6707)
!6711 = !DILocation(line: 151, column: 12, scope: !6707)
!6712 = !DILocation(line: 152, column: 6, scope: !6707)
!6713 = !DILocation(line: 153, column: 12, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6703, file: !506, line: 152, column: 13)
!6715 = !DILocation(line: 155, column: 10, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6693, file: !506, line: 155, column: 10)
!6717 = !DILocation(line: 155, column: 15, scope: !6716)
!6718 = !DILocation(line: 155, column: 10, scope: !6693)
!6719 = !DILocation(line: 155, column: 53, scope: !6716)
!6720 = !DILocation(line: 155, column: 30, scope: !6716)
!6721 = !DILocation(line: 155, column: 60, scope: !6716)
!6722 = !DILocation(line: 155, column: 28, scope: !6716)
!6723 = !DILocation(line: 155, column: 22, scope: !6716)
!6724 = !DILocation(line: 156, column: 15, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6716, file: !506, line: 156, column: 15)
!6726 = !DILocation(line: 156, column: 20, scope: !6725)
!6727 = !DILocation(line: 156, column: 15, scope: !6716)
!6728 = !DILocation(line: 156, column: 58, scope: !6725)
!6729 = !DILocation(line: 156, column: 35, scope: !6725)
!6730 = !DILocation(line: 156, column: 65, scope: !6725)
!6731 = !DILocation(line: 156, column: 33, scope: !6725)
!6732 = !DILocation(line: 156, column: 27, scope: !6725)
!6733 = !DILocation(line: 157, column: 15, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6725, file: !506, line: 157, column: 15)
!6735 = !DILocation(line: 157, column: 20, scope: !6734)
!6736 = !DILocation(line: 157, column: 15, scope: !6725)
!6737 = !DILocation(line: 157, column: 58, scope: !6734)
!6738 = !DILocation(line: 157, column: 35, scope: !6734)
!6739 = !DILocation(line: 157, column: 65, scope: !6734)
!6740 = !DILocation(line: 157, column: 33, scope: !6734)
!6741 = !DILocation(line: 157, column: 27, scope: !6734)
!6742 = !DILocation(line: 159, column: 16, scope: !6660)
!6743 = !DILocation(line: 159, column: 43, scope: !6660)
!6744 = !DILocation(line: 159, column: 52, scope: !6660)
!6745 = !DILocation(line: 160, column: 59, scope: !6660)
!6746 = !DILocation(line: 160, column: 65, scope: !6660)
!6747 = !DILocation(line: 160, column: 72, scope: !6660)
!6748 = !DILocation(line: 160, column: 77, scope: !6660)
!6749 = !DILocation(line: 159, column: 4, scope: !6660)
!6750 = !DILocation(line: 161, column: 8, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6660, file: !506, line: 161, column: 8)
!6752 = !DILocation(line: 161, column: 14, scope: !6751)
!6753 = !DILocation(line: 161, column: 13, scope: !6751)
!6754 = !DILocation(line: 161, column: 22, scope: !6751)
!6755 = !DILocation(line: 161, column: 20, scope: !6751)
!6756 = !DILocation(line: 161, column: 8, scope: !6660)
!6757 = !DILocation(line: 162, column: 18, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6751, file: !506, line: 161, column: 33)
!6759 = !DILocation(line: 162, column: 47, scope: !6758)
!6760 = !DILocation(line: 162, column: 56, scope: !6758)
!6761 = !DILocation(line: 164, column: 3, scope: !6758)
!6762 = !DILocation(line: 164, column: 9, scope: !6758)
!6763 = !DILocation(line: 164, column: 8, scope: !6758)
!6764 = !DILocation(line: 164, column: 17, scope: !6758)
!6765 = !DILocation(line: 164, column: 15, scope: !6758)
!6766 = !DILocation(line: 162, column: 6, scope: !6758)
!6767 = !DILocation(line: 165, column: 14, scope: !6758)
!6768 = !DILocation(line: 165, column: 26, scope: !6758)
!6769 = !DILocation(line: 165, column: 24, scope: !6758)
!6770 = !DILocation(line: 165, column: 12, scope: !6758)
!6771 = !DILocation(line: 166, column: 4, scope: !6758)
!6772 = !DILocation(line: 167, column: 11, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6660, file: !506, line: 167, column: 4)
!6774 = !DILocation(line: 167, column: 9, scope: !6773)
!6775 = !DILocation(line: 167, column: 16, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !506, line: 167, column: 4)
!6777 = !DILocation(line: 167, column: 20, scope: !6776)
!6778 = !DILocation(line: 167, column: 18, scope: !6776)
!6779 = !DILocation(line: 167, column: 4, scope: !6773)
!6780 = !DILocation(line: 168, column: 40, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6776, file: !506, line: 167, column: 32)
!6782 = !DILocation(line: 168, column: 6, scope: !6781)
!6783 = !DILocation(line: 168, column: 21, scope: !6781)
!6784 = !DILocation(line: 168, column: 27, scope: !6781)
!6785 = !DILocation(line: 168, column: 26, scope: !6781)
!6786 = !DILocation(line: 168, column: 30, scope: !6781)
!6787 = !DILocation(line: 168, column: 38, scope: !6781)
!6788 = !DILocation(line: 169, column: 6, scope: !6781)
!6789 = !DILocation(line: 169, column: 21, scope: !6781)
!6790 = !DILocation(line: 169, column: 27, scope: !6781)
!6791 = !DILocation(line: 169, column: 26, scope: !6781)
!6792 = !DILocation(line: 169, column: 30, scope: !6781)
!6793 = !DILocation(line: 169, column: 39, scope: !6781)
!6794 = !DILocation(line: 170, column: 41, scope: !6781)
!6795 = !DILocation(line: 170, column: 49, scope: !6781)
!6796 = !DILocation(line: 170, column: 47, scope: !6781)
!6797 = !DILocation(line: 170, column: 6, scope: !6781)
!6798 = !DILocation(line: 170, column: 21, scope: !6781)
!6799 = !DILocation(line: 170, column: 27, scope: !6781)
!6800 = !DILocation(line: 170, column: 26, scope: !6781)
!6801 = !DILocation(line: 170, column: 30, scope: !6781)
!6802 = !DILocation(line: 170, column: 39, scope: !6781)
!6803 = !DILocation(line: 171, column: 4, scope: !6781)
!6804 = !DILocation(line: 167, column: 28, scope: !6776)
!6805 = !DILocation(line: 167, column: 4, scope: !6776)
!6806 = distinct !{!6806, !6779, !6807}
!6807 = !DILocation(line: 171, column: 4, scope: !6773)
!6808 = !DILocation(line: 172, column: 13, scope: !6660)
!6809 = !DILocation(line: 172, column: 10, scope: !6660)
!6810 = distinct !{!6810, !6655, !6811}
!6811 = !DILocation(line: 173, column: 2, scope: !6536)
!6812 = !DILocation(line: 175, column: 6, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6536, file: !506, line: 175, column: 6)
!6814 = !DILocation(line: 175, column: 14, scope: !6813)
!6815 = !DILocation(line: 175, column: 12, scope: !6813)
!6816 = !DILocation(line: 175, column: 6, scope: !6536)
!6817 = !DILocation(line: 176, column: 16, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6813, file: !506, line: 175, column: 25)
!6819 = !DILocation(line: 176, column: 45, scope: !6818)
!6820 = !DILocation(line: 176, column: 54, scope: !6818)
!6821 = !DILocation(line: 176, column: 4, scope: !6818)
!6822 = !DILocation(line: 178, column: 2, scope: !6818)
!6823 = !DILocation(line: 179, column: 16, scope: !6536)
!6824 = !DILocation(line: 179, column: 22, scope: !6536)
!6825 = !DILocation(line: 180, column: 24, scope: !6536)
!6826 = !DILocation(line: 180, column: 16, scope: !6536)
!6827 = !DILocation(line: 180, column: 22, scope: !6536)
!6828 = !DILocation(line: 181, column: 26, scope: !6536)
!6829 = !DILocation(line: 181, column: 16, scope: !6536)
!6830 = !DILocation(line: 181, column: 24, scope: !6536)
!6831 = !DILocation(line: 184, column: 21, scope: !6536)
!6832 = !DILocation(line: 184, column: 2, scope: !6536)
!6833 = !DILocation(line: 187, column: 41, scope: !6536)
!6834 = !DILocation(line: 187, column: 15, scope: !6536)
!6835 = !DILocation(line: 187, column: 13, scope: !6536)
!6836 = !DILocation(line: 189, column: 13, scope: !6536)
!6837 = !DILocation(line: 189, column: 18, scope: !6536)
!6838 = !DILocation(line: 189, column: 29, scope: !6536)
!6839 = !DILocation(line: 189, column: 2, scope: !6536)
!6840 = !DILocation(line: 190, column: 30, scope: !6536)
!6841 = !DILocation(line: 190, column: 35, scope: !6536)
!6842 = !DILocation(line: 190, column: 2, scope: !6536)
!6843 = !DILocation(line: 192, column: 6, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6536, file: !506, line: 192, column: 6)
!6845 = !DILocation(line: 192, column: 17, scope: !6844)
!6846 = !DILocation(line: 192, column: 6, scope: !6536)
!6847 = !DILocation(line: 193, column: 18, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6844, file: !506, line: 192, column: 26)
!6849 = !DILocation(line: 193, column: 45, scope: !6848)
!6850 = !DILocation(line: 193, column: 54, scope: !6848)
!6851 = !DILocation(line: 193, column: 6, scope: !6848)
!6852 = !DILocation(line: 195, column: 6, scope: !6848)
!6853 = !DILocation(line: 197, column: 5, scope: !6536)
!6854 = !DILocation(line: 200, column: 23, scope: !6310)
!6855 = !DILocation(line: 200, column: 28, scope: !6310)
!6856 = !DILocation(line: 200, column: 35, scope: !6310)
!6857 = !DILocation(line: 200, column: 43, scope: !6310)
!6858 = !DILocation(line: 200, column: 5, scope: !6310)
!6859 = !DILocation(line: 203, column: 9, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6310, file: !506, line: 203, column: 9)
!6861 = !DILocation(line: 203, column: 17, scope: !6860)
!6862 = !DILocation(line: 203, column: 9, scope: !6310)
!6863 = !DILocation(line: 204, column: 36, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !506, line: 203, column: 25)
!6865 = !DILocation(line: 204, column: 40, scope: !6864)
!6866 = !DILocation(line: 204, column: 48, scope: !6864)
!6867 = !DILocation(line: 204, column: 18, scope: !6864)
!6868 = !DILocation(line: 204, column: 16, scope: !6864)
!6869 = !DILocation(line: 205, column: 5, scope: !6864)
!6870 = !DILocation(line: 206, column: 39, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6860, file: !506, line: 205, column: 12)
!6872 = !DILocation(line: 206, column: 47, scope: !6871)
!6873 = !DILocation(line: 206, column: 53, scope: !6871)
!6874 = !DILocation(line: 206, column: 16, scope: !6871)
!6875 = !DILocation(line: 206, column: 14, scope: !6871)
!6876 = !DILocation(line: 210, column: 17, scope: !6310)
!6877 = !DILocation(line: 210, column: 25, scope: !6310)
!6878 = !DILocation(line: 210, column: 15, scope: !6310)
!6879 = !DILocation(line: 210, column: 12, scope: !6310)
!6880 = !DILocation(line: 211, column: 12, scope: !6310)
!6881 = !DILocation(line: 212, column: 16, scope: !6310)
!6882 = !DILocation(line: 215, column: 5, scope: !6310)
!6883 = !DILocation(line: 215, column: 12, scope: !6310)
!6884 = !DILocation(line: 215, column: 25, scope: !6310)
!6885 = !DILocation(line: 215, column: 33, scope: !6310)
!6886 = !DILocation(line: 215, column: 23, scope: !6310)
!6887 = !DILocation(line: 217, column: 13, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !506, line: 217, column: 13)
!6889 = distinct !DILexicalBlock(scope: !6310, file: !506, line: 215, column: 49)
!6890 = !DILocation(line: 217, column: 21, scope: !6888)
!6891 = !DILocation(line: 217, column: 13, scope: !6889)
!6892 = !DILocation(line: 218, column: 36, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6888, file: !506, line: 217, column: 29)
!6894 = !DILocation(line: 218, column: 40, scope: !6893)
!6895 = !DILocation(line: 218, column: 48, scope: !6893)
!6896 = !DILocation(line: 218, column: 18, scope: !6893)
!6897 = !DILocation(line: 218, column: 16, scope: !6893)
!6898 = !DILocation(line: 219, column: 9, scope: !6893)
!6899 = !DILocation(line: 220, column: 43, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6888, file: !506, line: 219, column: 16)
!6901 = !DILocation(line: 220, column: 51, scope: !6900)
!6902 = !DILocation(line: 220, column: 57, scope: !6900)
!6903 = !DILocation(line: 220, column: 20, scope: !6900)
!6904 = !DILocation(line: 220, column: 18, scope: !6900)
!6905 = !DILocation(line: 222, column: 15, scope: !6889)
!6906 = !DILocation(line: 222, column: 23, scope: !6889)
!6907 = !DILocation(line: 222, column: 12, scope: !6889)
!6908 = !DILocation(line: 223, column: 19, scope: !6889)
!6909 = !DILocation(line: 223, column: 16, scope: !6889)
!6910 = !DILocation(line: 225, column: 15, scope: !6889)
!6911 = !DILocation(line: 227, column: 2, scope: !6889)
!6912 = !DILocation(line: 229, column: 10, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 229, column: 10)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !506, line: 227, column: 11)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !506, line: 227, column: 2)
!6916 = distinct !DILexicalBlock(scope: !6889, file: !506, line: 227, column: 2)
!6917 = !DILocation(line: 229, column: 10, scope: !6914)
!6918 = !DILocation(line: 231, column: 7, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !506, line: 231, column: 7)
!6920 = distinct !DILexicalBlock(scope: !6913, file: !506, line: 229, column: 24)
!6921 = !DILocation(line: 231, column: 15, scope: !6919)
!6922 = !DILocation(line: 231, column: 7, scope: !6920)
!6923 = !DILocation(line: 232, column: 31, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6919, file: !506, line: 231, column: 23)
!6925 = !DILocation(line: 232, column: 35, scope: !6924)
!6926 = !DILocation(line: 232, column: 43, scope: !6924)
!6927 = !DILocation(line: 232, column: 13, scope: !6924)
!6928 = !DILocation(line: 232, column: 11, scope: !6924)
!6929 = !DILocation(line: 233, column: 3, scope: !6924)
!6930 = !DILocation(line: 234, column: 37, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6919, file: !506, line: 233, column: 10)
!6932 = !DILocation(line: 234, column: 45, scope: !6931)
!6933 = !DILocation(line: 234, column: 51, scope: !6931)
!6934 = !DILocation(line: 234, column: 14, scope: !6931)
!6935 = !DILocation(line: 234, column: 12, scope: !6931)
!6936 = !DILocation(line: 236, column: 13, scope: !6920)
!6937 = !DILocation(line: 236, column: 10, scope: !6920)
!6938 = !DILocation(line: 237, column: 10, scope: !6920)
!6939 = !DILocation(line: 237, column: 8, scope: !6920)
!6940 = !DILocation(line: 238, column: 16, scope: !6920)
!6941 = !DILocation(line: 240, column: 6, scope: !6920)
!6942 = !DILocation(line: 242, column: 7, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !506, line: 242, column: 7)
!6944 = distinct !DILexicalBlock(scope: !6913, file: !506, line: 240, column: 13)
!6945 = !DILocation(line: 242, column: 15, scope: !6943)
!6946 = !DILocation(line: 242, column: 7, scope: !6944)
!6947 = !DILocation(line: 243, column: 31, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6943, file: !506, line: 242, column: 23)
!6949 = !DILocation(line: 243, column: 35, scope: !6948)
!6950 = !DILocation(line: 243, column: 43, scope: !6948)
!6951 = !DILocation(line: 243, column: 13, scope: !6948)
!6952 = !DILocation(line: 243, column: 11, scope: !6948)
!6953 = !DILocation(line: 244, column: 3, scope: !6948)
!6954 = !DILocation(line: 245, column: 37, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6943, file: !506, line: 244, column: 10)
!6956 = !DILocation(line: 245, column: 45, scope: !6955)
!6957 = !DILocation(line: 245, column: 51, scope: !6955)
!6958 = !DILocation(line: 245, column: 14, scope: !6955)
!6959 = !DILocation(line: 245, column: 12, scope: !6955)
!6960 = !DILocation(line: 247, column: 7, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6944, file: !506, line: 247, column: 7)
!6962 = !DILocation(line: 247, column: 7, scope: !6944)
!6963 = !DILocation(line: 248, column: 7, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6961, file: !506, line: 247, column: 13)
!6965 = !DILocation(line: 250, column: 11, scope: !6944)
!6966 = !DILocation(line: 250, column: 17, scope: !6944)
!6967 = !DILocation(line: 250, column: 25, scope: !6944)
!6968 = !DILocation(line: 250, column: 15, scope: !6944)
!6969 = !DILocation(line: 250, column: 8, scope: !6944)
!6970 = !DILocation(line: 254, column: 10, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 254, column: 10)
!6972 = !DILocation(line: 254, column: 18, scope: !6971)
!6973 = !DILocation(line: 254, column: 27, scope: !6971)
!6974 = !DILocation(line: 254, column: 10, scope: !6914)
!6975 = !DILocation(line: 255, column: 8, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6971, file: !506, line: 254, column: 33)
!6977 = !DILocation(line: 256, column: 6, scope: !6976)
!6978 = !DILocation(line: 256, column: 17, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6971, file: !506, line: 256, column: 17)
!6980 = !DILocation(line: 256, column: 25, scope: !6979)
!6981 = !DILocation(line: 256, column: 17, scope: !6971)
!6982 = !DILocation(line: 257, column: 33, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6979, file: !506, line: 256, column: 33)
!6984 = !DILocation(line: 257, column: 37, scope: !6983)
!6985 = !DILocation(line: 257, column: 45, scope: !6983)
!6986 = !DILocation(line: 257, column: 10, scope: !6983)
!6987 = !DILocation(line: 257, column: 8, scope: !6983)
!6988 = !DILocation(line: 258, column: 6, scope: !6983)
!6989 = !DILocation(line: 259, column: 33, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6979, file: !506, line: 258, column: 13)
!6991 = !DILocation(line: 259, column: 41, scope: !6990)
!6992 = !DILocation(line: 259, column: 47, scope: !6990)
!6993 = !DILocation(line: 259, column: 10, scope: !6990)
!6994 = !DILocation(line: 259, column: 8, scope: !6990)
!6995 = !DILocation(line: 261, column: 10, scope: !6914)
!6996 = !DILocation(line: 261, column: 19, scope: !6914)
!6997 = !DILocation(line: 261, column: 17, scope: !6914)
!6998 = !DILocation(line: 261, column: 8, scope: !6914)
!6999 = !DILocation(line: 264, column: 10, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 264, column: 10)
!7001 = !DILocation(line: 264, column: 18, scope: !7000)
!7002 = !DILocation(line: 264, column: 10, scope: !6914)
!7003 = !DILocation(line: 265, column: 26, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7000, file: !506, line: 264, column: 26)
!7005 = !DILocation(line: 265, column: 30, scope: !7004)
!7006 = !DILocation(line: 265, column: 8, scope: !7004)
!7007 = !DILocation(line: 265, column: 6, scope: !7004)
!7008 = !DILocation(line: 266, column: 6, scope: !7004)
!7009 = !DILocation(line: 267, column: 34, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7000, file: !506, line: 266, column: 13)
!7011 = !DILocation(line: 267, column: 42, scope: !7010)
!7012 = !DILocation(line: 267, column: 48, scope: !7010)
!7013 = !DILocation(line: 267, column: 10, scope: !7010)
!7014 = !DILocation(line: 267, column: 8, scope: !7010)
!7015 = !DILocation(line: 269, column: 10, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 269, column: 10)
!7017 = !DILocation(line: 269, column: 16, scope: !7016)
!7018 = !DILocation(line: 269, column: 13, scope: !7016)
!7019 = !DILocation(line: 269, column: 10, scope: !6914)
!7020 = !DILocation(line: 270, column: 22, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7016, file: !506, line: 269, column: 27)
!7022 = !DILocation(line: 270, column: 49, scope: !7021)
!7023 = !DILocation(line: 270, column: 58, scope: !7021)
!7024 = !DILocation(line: 271, column: 56, scope: !7021)
!7025 = !DILocation(line: 271, column: 60, scope: !7021)
!7026 = !DILocation(line: 270, column: 10, scope: !7021)
!7027 = !DILocation(line: 270, column: 3, scope: !7021)
!7028 = !DILocalVariable(name: "id", scope: !7029, file: !506, line: 276, type: !32)
!7029 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 275, column: 6)
!7030 = !DILocation(line: 276, column: 12, scope: !7029)
!7031 = !DILocation(line: 276, column: 17, scope: !7029)
!7032 = !DILocation(line: 278, column: 9, scope: !7029)
!7033 = !DILocation(line: 279, column: 3, scope: !7029)
!7034 = !DILocation(line: 279, column: 10, scope: !7029)
!7035 = !DILocation(line: 279, column: 16, scope: !7029)
!7036 = !DILocation(line: 279, column: 22, scope: !7029)
!7037 = !DILocation(line: 279, column: 30, scope: !7029)
!7038 = !DILocation(line: 279, column: 13, scope: !7029)
!7039 = !DILocation(line: 280, column: 13, scope: !7029)
!7040 = !DILocation(line: 280, column: 24, scope: !7029)
!7041 = !DILocation(line: 280, column: 29, scope: !7029)
!7042 = !DILocation(line: 280, column: 10, scope: !7029)
!7043 = distinct !{!7043, !7033, !7041}
!7044 = !DILocation(line: 281, column: 26, scope: !7029)
!7045 = !DILocation(line: 281, column: 31, scope: !7029)
!7046 = !DILocation(line: 281, column: 37, scope: !7029)
!7047 = !DILocation(line: 281, column: 45, scope: !7029)
!7048 = !DILocation(line: 281, column: 52, scope: !7029)
!7049 = !DILocation(line: 281, column: 8, scope: !7029)
!7050 = !DILocation(line: 281, column: 6, scope: !7029)
!7051 = !DILocation(line: 283, column: 10, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 283, column: 10)
!7053 = !DILocation(line: 283, column: 18, scope: !7052)
!7054 = !DILocation(line: 283, column: 10, scope: !6914)
!7055 = !DILocation(line: 284, column: 12, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !506, line: 284, column: 12)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !506, line: 283, column: 28)
!7058 = !DILocation(line: 284, column: 20, scope: !7056)
!7059 = !DILocation(line: 284, column: 12, scope: !7057)
!7060 = !DILocation(line: 285, column: 31, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7056, file: !506, line: 284, column: 28)
!7062 = !DILocation(line: 285, column: 8, scope: !7061)
!7063 = !DILocation(line: 285, column: 6, scope: !7061)
!7064 = !DILocation(line: 286, column: 8, scope: !7061)
!7065 = !DILocation(line: 287, column: 33, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7056, file: !506, line: 286, column: 15)
!7067 = !DILocation(line: 287, column: 41, scope: !7066)
!7068 = !DILocation(line: 287, column: 47, scope: !7066)
!7069 = !DILocation(line: 287, column: 10, scope: !7066)
!7070 = !DILocation(line: 287, column: 8, scope: !7066)
!7071 = !DILocation(line: 289, column: 6, scope: !7057)
!7072 = !DILocation(line: 290, column: 6, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7052, file: !506, line: 289, column: 13)
!7074 = !DILocation(line: 292, column: 10, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 292, column: 10)
!7076 = !DILocation(line: 292, column: 10, scope: !6914)
!7077 = !DILocalVariable(name: "rparams", scope: !7078, file: !506, line: 293, type: !7079)
!7078 = distinct !DILexicalBlock(scope: !7075, file: !506, line: 292, column: 14)
!7079 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RefinementRegionParams", file: !5304, line: 57, baseType: !7080)
!7080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5304, line: 49, size: 256, elements: !7081)
!7081 = !{!7082, !7083, !7084, !7085, !7086, !7087}
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "GRTEMPLATE", scope: !7080, file: !5304, line: 52, baseType: !188, size: 32)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !7080, file: !5304, line: 53, baseType: !518, size: 64, offset: 64)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "DX", scope: !7080, file: !5304, line: 54, baseType: !141, size: 32, offset: 128)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "DY", scope: !7080, file: !5304, line: 54, baseType: !141, size: 32, offset: 160)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "TPGRON", scope: !7080, file: !5304, line: 55, baseType: !188, size: 32, offset: 192)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "grat", scope: !7080, file: !5304, line: 56, baseType: !4567, size: 32, offset: 224)
!7088 = !DILocation(line: 293, column: 31, scope: !7078)
!7089 = !DILocalVariable(name: "IBO", scope: !7078, file: !506, line: 294, type: !518)
!7090 = !DILocation(line: 294, column: 15, scope: !7078)
!7091 = !DILocalVariable(name: "RDW", scope: !7078, file: !506, line: 295, type: !141)
!7092 = !DILocation(line: 295, column: 11, scope: !7078)
!7093 = !DILocalVariable(name: "RDH", scope: !7078, file: !506, line: 295, type: !141)
!7094 = !DILocation(line: 295, column: 16, scope: !7078)
!7095 = !DILocalVariable(name: "RDX", scope: !7078, file: !506, line: 295, type: !141)
!7096 = !DILocation(line: 295, column: 21, scope: !7078)
!7097 = !DILocalVariable(name: "RDY", scope: !7078, file: !506, line: 295, type: !141)
!7098 = !DILocation(line: 295, column: 26, scope: !7078)
!7099 = !DILocalVariable(name: "image", scope: !7078, file: !506, line: 296, type: !518)
!7100 = !DILocation(line: 296, column: 15, scope: !7078)
!7101 = !DILocalVariable(name: "BMSIZE", scope: !7078, file: !506, line: 297, type: !6)
!7102 = !DILocation(line: 297, column: 7, scope: !7078)
!7103 = !DILocation(line: 300, column: 8, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7078, file: !506, line: 300, column: 7)
!7105 = !DILocation(line: 300, column: 16, scope: !7104)
!7106 = !DILocation(line: 300, column: 7, scope: !7078)
!7107 = !DILocation(line: 301, column: 35, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7104, file: !506, line: 300, column: 24)
!7109 = !DILocation(line: 301, column: 43, scope: !7108)
!7110 = !DILocation(line: 301, column: 50, scope: !7108)
!7111 = !DILocation(line: 301, column: 12, scope: !7108)
!7112 = !DILocation(line: 301, column: 10, scope: !7108)
!7113 = !DILocation(line: 302, column: 35, scope: !7108)
!7114 = !DILocation(line: 302, column: 43, scope: !7108)
!7115 = !DILocation(line: 302, column: 50, scope: !7108)
!7116 = !DILocation(line: 302, column: 12, scope: !7108)
!7117 = !DILocation(line: 302, column: 10, scope: !7108)
!7118 = !DILocation(line: 303, column: 35, scope: !7108)
!7119 = !DILocation(line: 303, column: 43, scope: !7108)
!7120 = !DILocation(line: 303, column: 50, scope: !7108)
!7121 = !DILocation(line: 303, column: 12, scope: !7108)
!7122 = !DILocation(line: 303, column: 10, scope: !7108)
!7123 = !DILocation(line: 304, column: 35, scope: !7108)
!7124 = !DILocation(line: 304, column: 43, scope: !7108)
!7125 = !DILocation(line: 304, column: 50, scope: !7108)
!7126 = !DILocation(line: 304, column: 12, scope: !7108)
!7127 = !DILocation(line: 304, column: 10, scope: !7108)
!7128 = !DILocation(line: 305, column: 3, scope: !7108)
!7129 = !DILocation(line: 306, column: 29, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7104, file: !506, line: 305, column: 10)
!7131 = !DILocation(line: 306, column: 33, scope: !7130)
!7132 = !DILocation(line: 306, column: 41, scope: !7130)
!7133 = !DILocation(line: 306, column: 11, scope: !7130)
!7134 = !DILocation(line: 306, column: 9, scope: !7130)
!7135 = !DILocation(line: 307, column: 29, scope: !7130)
!7136 = !DILocation(line: 307, column: 33, scope: !7130)
!7137 = !DILocation(line: 307, column: 41, scope: !7130)
!7138 = !DILocation(line: 307, column: 11, scope: !7130)
!7139 = !DILocation(line: 307, column: 9, scope: !7130)
!7140 = !DILocation(line: 308, column: 29, scope: !7130)
!7141 = !DILocation(line: 308, column: 33, scope: !7130)
!7142 = !DILocation(line: 308, column: 41, scope: !7130)
!7143 = !DILocation(line: 308, column: 11, scope: !7130)
!7144 = !DILocation(line: 308, column: 9, scope: !7130)
!7145 = !DILocation(line: 309, column: 29, scope: !7130)
!7146 = !DILocation(line: 309, column: 33, scope: !7130)
!7147 = !DILocation(line: 309, column: 41, scope: !7130)
!7148 = !DILocation(line: 309, column: 11, scope: !7130)
!7149 = !DILocation(line: 309, column: 9, scope: !7130)
!7150 = !DILocation(line: 310, column: 32, scope: !7130)
!7151 = !DILocation(line: 310, column: 36, scope: !7130)
!7152 = !DILocation(line: 310, column: 44, scope: !7130)
!7153 = !DILocation(line: 310, column: 14, scope: !7130)
!7154 = !DILocation(line: 310, column: 12, scope: !7130)
!7155 = !DILocation(line: 311, column: 24, scope: !7130)
!7156 = !DILocation(line: 311, column: 5, scope: !7130)
!7157 = !DILocation(line: 315, column: 9, scope: !7078)
!7158 = !DILocation(line: 315, column: 7, scope: !7078)
!7159 = !DILocation(line: 316, column: 27, scope: !7078)
!7160 = !DILocation(line: 316, column: 32, scope: !7078)
!7161 = !DILocation(line: 316, column: 37, scope: !7078)
!7162 = !DILocation(line: 316, column: 45, scope: !7078)
!7163 = !DILocation(line: 316, column: 43, scope: !7078)
!7164 = !DILocation(line: 317, column: 11, scope: !7078)
!7165 = !DILocation(line: 317, column: 16, scope: !7078)
!7166 = !DILocation(line: 317, column: 25, scope: !7078)
!7167 = !DILocation(line: 317, column: 23, scope: !7078)
!7168 = !DILocation(line: 316, column: 11, scope: !7078)
!7169 = !DILocation(line: 316, column: 9, scope: !7078)
!7170 = !DILocation(line: 320, column: 24, scope: !7078)
!7171 = !DILocation(line: 320, column: 32, scope: !7078)
!7172 = !DILocation(line: 320, column: 11, scope: !7078)
!7173 = !DILocation(line: 320, column: 22, scope: !7078)
!7174 = !DILocation(line: 321, column: 23, scope: !7078)
!7175 = !DILocation(line: 321, column: 11, scope: !7078)
!7176 = !DILocation(line: 321, column: 21, scope: !7078)
!7177 = !DILocation(line: 322, column: 17, scope: !7078)
!7178 = !DILocation(line: 322, column: 21, scope: !7078)
!7179 = !DILocation(line: 322, column: 29, scope: !7078)
!7180 = !DILocation(line: 322, column: 27, scope: !7078)
!7181 = !DILocation(line: 322, column: 11, scope: !7078)
!7182 = !DILocation(line: 322, column: 14, scope: !7078)
!7183 = !DILocation(line: 323, column: 17, scope: !7078)
!7184 = !DILocation(line: 323, column: 21, scope: !7078)
!7185 = !DILocation(line: 323, column: 29, scope: !7078)
!7186 = !DILocation(line: 323, column: 27, scope: !7078)
!7187 = !DILocation(line: 323, column: 11, scope: !7078)
!7188 = !DILocation(line: 323, column: 14, scope: !7078)
!7189 = !DILocation(line: 324, column: 11, scope: !7078)
!7190 = !DILocation(line: 324, column: 18, scope: !7078)
!7191 = !DILocation(line: 325, column: 18, scope: !7078)
!7192 = !DILocation(line: 325, column: 3, scope: !7078)
!7193 = !DILocation(line: 325, column: 24, scope: !7078)
!7194 = !DILocation(line: 325, column: 32, scope: !7078)
!7195 = !DILocation(line: 326, column: 34, scope: !7078)
!7196 = !DILocation(line: 326, column: 39, scope: !7078)
!7197 = !DILocation(line: 327, column: 17, scope: !7078)
!7198 = !DILocation(line: 327, column: 21, scope: !7078)
!7199 = !DILocation(line: 327, column: 28, scope: !7078)
!7200 = !DILocation(line: 326, column: 3, scope: !7078)
!7201 = !DILocation(line: 328, column: 8, scope: !7078)
!7202 = !DILocation(line: 328, column: 6, scope: !7078)
!7203 = !DILocation(line: 330, column: 23, scope: !7078)
!7204 = !DILocation(line: 330, column: 28, scope: !7078)
!7205 = !DILocation(line: 330, column: 3, scope: !7078)
!7206 = !DILocation(line: 333, column: 7, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7078, file: !506, line: 333, column: 7)
!7208 = !DILocation(line: 333, column: 15, scope: !7207)
!7209 = !DILocation(line: 333, column: 7, scope: !7078)
!7210 = !DILocation(line: 334, column: 27, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !506, line: 333, column: 23)
!7212 = !DILocation(line: 334, column: 31, scope: !7211)
!7213 = !DILocation(line: 334, column: 5, scope: !7211)
!7214 = !DILocation(line: 335, column: 3, scope: !7211)
!7215 = !DILocation(line: 337, column: 6, scope: !7078)
!7216 = !DILocation(line: 340, column: 12, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 340, column: 10)
!7218 = !DILocation(line: 340, column: 20, scope: !7217)
!7219 = !DILocation(line: 340, column: 32, scope: !7217)
!7220 = !DILocation(line: 340, column: 36, scope: !7217)
!7221 = !DILocation(line: 340, column: 44, scope: !7217)
!7222 = !DILocation(line: 340, column: 54, scope: !7217)
!7223 = !DILocation(line: 340, column: 10, scope: !6914)
!7224 = !DILocation(line: 341, column: 11, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7217, file: !506, line: 340, column: 60)
!7226 = !DILocation(line: 341, column: 15, scope: !7225)
!7227 = !DILocation(line: 341, column: 21, scope: !7225)
!7228 = !DILocation(line: 341, column: 8, scope: !7225)
!7229 = !DILocation(line: 342, column: 6, scope: !7225)
!7230 = !DILocation(line: 342, column: 18, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7217, file: !506, line: 342, column: 17)
!7232 = !DILocation(line: 342, column: 26, scope: !7231)
!7233 = !DILocation(line: 342, column: 17, scope: !7231)
!7234 = !DILocation(line: 342, column: 38, scope: !7231)
!7235 = !DILocation(line: 342, column: 43, scope: !7231)
!7236 = !DILocation(line: 342, column: 51, scope: !7231)
!7237 = !DILocation(line: 342, column: 61, scope: !7231)
!7238 = !DILocation(line: 342, column: 17, scope: !7217)
!7239 = !DILocation(line: 343, column: 11, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7231, file: !506, line: 342, column: 67)
!7241 = !DILocation(line: 343, column: 15, scope: !7240)
!7242 = !DILocation(line: 343, column: 22, scope: !7240)
!7243 = !DILocation(line: 343, column: 8, scope: !7240)
!7244 = !DILocation(line: 344, column: 6, scope: !7240)
!7245 = !DILocation(line: 347, column: 10, scope: !6914)
!7246 = !DILocation(line: 347, column: 8, scope: !6914)
!7247 = !DILocation(line: 350, column: 11, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 350, column: 10)
!7249 = !DILocation(line: 350, column: 19, scope: !7248)
!7250 = !DILocation(line: 350, column: 10, scope: !6914)
!7251 = !DILocation(line: 351, column: 11, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7248, file: !506, line: 350, column: 31)
!7253 = !DILocation(line: 351, column: 19, scope: !7252)
!7254 = !DILocation(line: 351, column: 3, scope: !7252)
!7255 = !DILocation(line: 352, column: 34, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7252, file: !506, line: 351, column: 30)
!7257 = !DILocation(line: 352, column: 32, scope: !7256)
!7258 = !DILocation(line: 352, column: 41, scope: !7256)
!7259 = !DILocation(line: 352, column: 39, scope: !7256)
!7260 = !DILocation(line: 352, column: 44, scope: !7256)
!7261 = !DILocation(line: 353, column: 35, scope: !7256)
!7262 = !DILocation(line: 353, column: 39, scope: !7256)
!7263 = !DILocation(line: 353, column: 43, scope: !7256)
!7264 = !DILocation(line: 353, column: 37, scope: !7256)
!7265 = !DILocation(line: 353, column: 49, scope: !7256)
!7266 = !DILocation(line: 353, column: 33, scope: !7256)
!7267 = !DILocation(line: 353, column: 58, scope: !7256)
!7268 = !DILocation(line: 353, column: 56, scope: !7256)
!7269 = !DILocation(line: 353, column: 61, scope: !7256)
!7270 = !DILocation(line: 354, column: 37, scope: !7256)
!7271 = !DILocation(line: 354, column: 35, scope: !7256)
!7272 = !DILocation(line: 354, column: 44, scope: !7256)
!7273 = !DILocation(line: 354, column: 48, scope: !7256)
!7274 = !DILocation(line: 354, column: 52, scope: !7256)
!7275 = !DILocation(line: 354, column: 46, scope: !7256)
!7276 = !DILocation(line: 354, column: 59, scope: !7256)
!7277 = !DILocation(line: 354, column: 42, scope: !7256)
!7278 = !DILocation(line: 354, column: 64, scope: !7256)
!7279 = !DILocation(line: 355, column: 38, scope: !7256)
!7280 = !DILocation(line: 355, column: 42, scope: !7256)
!7281 = !DILocation(line: 355, column: 46, scope: !7256)
!7282 = !DILocation(line: 355, column: 40, scope: !7256)
!7283 = !DILocation(line: 355, column: 52, scope: !7256)
!7284 = !DILocation(line: 355, column: 36, scope: !7256)
!7285 = !DILocation(line: 355, column: 61, scope: !7256)
!7286 = !DILocation(line: 355, column: 65, scope: !7256)
!7287 = !DILocation(line: 355, column: 69, scope: !7256)
!7288 = !DILocation(line: 355, column: 63, scope: !7256)
!7289 = !DILocation(line: 355, column: 76, scope: !7256)
!7290 = !DILocation(line: 355, column: 59, scope: !7256)
!7291 = !DILocation(line: 355, column: 81, scope: !7256)
!7292 = !DILocation(line: 357, column: 6, scope: !7252)
!7293 = !DILocation(line: 358, column: 11, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7248, file: !506, line: 357, column: 13)
!7295 = !DILocation(line: 358, column: 19, scope: !7294)
!7296 = !DILocation(line: 358, column: 3, scope: !7294)
!7297 = !DILocation(line: 359, column: 34, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7294, file: !506, line: 358, column: 30)
!7299 = !DILocation(line: 359, column: 32, scope: !7298)
!7300 = !DILocation(line: 359, column: 41, scope: !7298)
!7301 = !DILocation(line: 359, column: 39, scope: !7298)
!7302 = !DILocation(line: 359, column: 44, scope: !7298)
!7303 = !DILocation(line: 360, column: 35, scope: !7298)
!7304 = !DILocation(line: 360, column: 39, scope: !7298)
!7305 = !DILocation(line: 360, column: 43, scope: !7298)
!7306 = !DILocation(line: 360, column: 37, scope: !7298)
!7307 = !DILocation(line: 360, column: 49, scope: !7298)
!7308 = !DILocation(line: 360, column: 33, scope: !7298)
!7309 = !DILocation(line: 360, column: 58, scope: !7298)
!7310 = !DILocation(line: 360, column: 56, scope: !7298)
!7311 = !DILocation(line: 360, column: 61, scope: !7298)
!7312 = !DILocation(line: 361, column: 37, scope: !7298)
!7313 = !DILocation(line: 361, column: 35, scope: !7298)
!7314 = !DILocation(line: 361, column: 44, scope: !7298)
!7315 = !DILocation(line: 361, column: 48, scope: !7298)
!7316 = !DILocation(line: 361, column: 52, scope: !7298)
!7317 = !DILocation(line: 361, column: 46, scope: !7298)
!7318 = !DILocation(line: 361, column: 59, scope: !7298)
!7319 = !DILocation(line: 361, column: 42, scope: !7298)
!7320 = !DILocation(line: 361, column: 64, scope: !7298)
!7321 = !DILocation(line: 362, column: 38, scope: !7298)
!7322 = !DILocation(line: 362, column: 42, scope: !7298)
!7323 = !DILocation(line: 362, column: 46, scope: !7298)
!7324 = !DILocation(line: 362, column: 40, scope: !7298)
!7325 = !DILocation(line: 362, column: 52, scope: !7298)
!7326 = !DILocation(line: 362, column: 36, scope: !7298)
!7327 = !DILocation(line: 362, column: 61, scope: !7298)
!7328 = !DILocation(line: 362, column: 65, scope: !7298)
!7329 = !DILocation(line: 362, column: 69, scope: !7298)
!7330 = !DILocation(line: 362, column: 63, scope: !7298)
!7331 = !DILocation(line: 362, column: 76, scope: !7298)
!7332 = !DILocation(line: 362, column: 59, scope: !7298)
!7333 = !DILocation(line: 362, column: 81, scope: !7298)
!7334 = !DILocation(line: 373, column: 26, scope: !6914)
!7335 = !DILocation(line: 373, column: 31, scope: !6914)
!7336 = !DILocation(line: 373, column: 38, scope: !6914)
!7337 = !DILocation(line: 373, column: 42, scope: !6914)
!7338 = !DILocation(line: 373, column: 45, scope: !6914)
!7339 = !DILocation(line: 373, column: 48, scope: !6914)
!7340 = !DILocation(line: 373, column: 56, scope: !6914)
!7341 = !DILocation(line: 373, column: 6, scope: !6914)
!7342 = !DILocation(line: 376, column: 12, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !6914, file: !506, line: 376, column: 10)
!7344 = !DILocation(line: 376, column: 20, scope: !7343)
!7345 = !DILocation(line: 376, column: 32, scope: !7343)
!7346 = !DILocation(line: 376, column: 36, scope: !7343)
!7347 = !DILocation(line: 376, column: 44, scope: !7343)
!7348 = !DILocation(line: 376, column: 54, scope: !7343)
!7349 = !DILocation(line: 376, column: 10, scope: !6914)
!7350 = !DILocation(line: 377, column: 11, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7343, file: !506, line: 376, column: 60)
!7352 = !DILocation(line: 377, column: 15, scope: !7351)
!7353 = !DILocation(line: 377, column: 21, scope: !7351)
!7354 = !DILocation(line: 377, column: 8, scope: !7351)
!7355 = !DILocation(line: 378, column: 6, scope: !7351)
!7356 = !DILocation(line: 378, column: 18, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7343, file: !506, line: 378, column: 17)
!7358 = !DILocation(line: 378, column: 26, scope: !7357)
!7359 = !DILocation(line: 378, column: 17, scope: !7357)
!7360 = !DILocation(line: 378, column: 38, scope: !7357)
!7361 = !DILocation(line: 378, column: 42, scope: !7357)
!7362 = !DILocation(line: 378, column: 50, scope: !7357)
!7363 = !DILocation(line: 378, column: 60, scope: !7357)
!7364 = !DILocation(line: 378, column: 17, scope: !7343)
!7365 = !DILocation(line: 379, column: 11, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7357, file: !506, line: 378, column: 66)
!7367 = !DILocation(line: 379, column: 15, scope: !7366)
!7368 = !DILocation(line: 379, column: 22, scope: !7366)
!7369 = !DILocation(line: 379, column: 8, scope: !7366)
!7370 = !DILocation(line: 380, column: 6, scope: !7366)
!7371 = !DILocation(line: 383, column: 16, scope: !6914)
!7372 = !DILocation(line: 385, column: 26, scope: !6914)
!7373 = !DILocation(line: 385, column: 31, scope: !6914)
!7374 = !DILocation(line: 385, column: 6, scope: !6914)
!7375 = !DILocation(line: 227, column: 2, scope: !6915)
!7376 = distinct !{!7376, !7377, !7378}
!7377 = !DILocation(line: 227, column: 2, scope: !6916)
!7378 = !DILocation(line: 386, column: 2, scope: !6916)
!7379 = distinct !{!7379, !6882, !7380}
!7380 = !DILocation(line: 388, column: 5, scope: !6310)
!7381 = !DILocation(line: 391, column: 9, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !6310, file: !506, line: 391, column: 9)
!7383 = !DILocation(line: 391, column: 17, scope: !7382)
!7384 = !DILocation(line: 391, column: 9, scope: !6310)
!7385 = !DILocation(line: 392, column: 35, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7382, file: !506, line: 391, column: 25)
!7387 = !DILocation(line: 392, column: 40, scope: !7386)
!7388 = !DILocation(line: 392, column: 7, scope: !7386)
!7389 = !DILocation(line: 393, column: 5, scope: !7386)
!7390 = !DILocation(line: 395, column: 5, scope: !6310)
!7391 = !DILocation(line: 396, column: 1, scope: !6310)
!7392 = distinct !DISubprogram(name: "jbig2_parse_text_region", scope: !506, file: !506, line: 402, type: !7393, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !505, retainedNodes: !70)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!6, !6313, !6350, !219}
!7395 = !DILocalVariable(name: "ctx", arg: 1, scope: !7392, file: !506, line: 402, type: !6313)
!7396 = !DILocation(line: 402, column: 35, scope: !7392)
!7397 = !DILocalVariable(name: "segment", arg: 2, scope: !7392, file: !506, line: 402, type: !6350)
!7398 = !DILocation(line: 402, column: 54, scope: !7392)
!7399 = !DILocalVariable(name: "segment_data", arg: 3, scope: !7392, file: !506, line: 402, type: !219)
!7400 = !DILocation(line: 402, column: 75, scope: !7392)
!7401 = !DILocalVariable(name: "offset", scope: !7392, file: !506, line: 404, type: !6)
!7402 = !DILocation(line: 404, column: 9, scope: !7392)
!7403 = !DILocalVariable(name: "region_info", scope: !7392, file: !506, line: 405, type: !7404)
!7404 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RegionSegmentInfo", file: !90, line: 148, baseType: !7405)
!7405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !90, line: 141, size: 192, elements: !7406)
!7406 = !{!7407, !7408, !7409, !7410, !7411, !7412}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !7405, file: !90, line: 142, baseType: !141, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7405, file: !90, line: 143, baseType: !141, size: 32, offset: 32)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !7405, file: !90, line: 144, baseType: !141, size: 32, offset: 64)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !7405, file: !90, line: 145, baseType: !141, size: 32, offset: 96)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !7405, file: !90, line: 146, baseType: !3145, size: 32, offset: 128)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7405, file: !90, line: 147, baseType: !42, size: 8, offset: 160)
!7413 = !DILocation(line: 405, column: 28, scope: !7392)
!7414 = !DILocalVariable(name: "params", scope: !7392, file: !506, line: 406, type: !6383)
!7415 = !DILocation(line: 406, column: 27, scope: !7392)
!7416 = !DILocalVariable(name: "image", scope: !7392, file: !506, line: 407, type: !518)
!7417 = !DILocation(line: 407, column: 17, scope: !7392)
!7418 = !DILocalVariable(name: "dicts", scope: !7392, file: !506, line: 408, type: !7419)
!7419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7420, size: 64)
!7420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!7421 = !DILocation(line: 408, column: 23, scope: !7392)
!7422 = !DILocalVariable(name: "n_dicts", scope: !7392, file: !506, line: 409, type: !6)
!7423 = !DILocation(line: 409, column: 9, scope: !7392)
!7424 = !DILocalVariable(name: "flags", scope: !7392, file: !506, line: 410, type: !185)
!7425 = !DILocation(line: 410, column: 14, scope: !7392)
!7426 = !DILocalVariable(name: "huffman_flags", scope: !7392, file: !506, line: 411, type: !185)
!7427 = !DILocation(line: 411, column: 14, scope: !7392)
!7428 = !DILocalVariable(name: "GR_stats", scope: !7392, file: !506, line: 412, type: !595)
!7429 = !DILocation(line: 412, column: 19, scope: !7392)
!7430 = !DILocalVariable(name: "code", scope: !7392, file: !506, line: 413, type: !6)
!7431 = !DILocation(line: 413, column: 9, scope: !7392)
!7432 = !DILocalVariable(name: "ws", scope: !7392, file: !506, line: 414, type: !6434)
!7433 = !DILocation(line: 414, column: 22, scope: !7392)
!7434 = !DILocalVariable(name: "as", scope: !7392, file: !506, line: 415, type: !4988)
!7435 = !DILocation(line: 415, column: 22, scope: !7392)
!7436 = !DILocation(line: 418, column: 9, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 418, column: 9)
!7438 = !DILocation(line: 418, column: 18, scope: !7437)
!7439 = !DILocation(line: 418, column: 30, scope: !7437)
!7440 = !DILocation(line: 418, column: 9, scope: !7392)
!7441 = !DILocation(line: 419, column: 9, scope: !7437)
!7442 = !DILocation(line: 420, column: 49, scope: !7392)
!7443 = !DILocation(line: 420, column: 5, scope: !7392)
!7444 = !DILocation(line: 421, column: 12, scope: !7392)
!7445 = !DILocation(line: 424, column: 29, scope: !7392)
!7446 = !DILocation(line: 424, column: 44, scope: !7392)
!7447 = !DILocation(line: 424, column: 42, scope: !7392)
!7448 = !DILocation(line: 424, column: 13, scope: !7392)
!7449 = !DILocation(line: 424, column: 11, scope: !7392)
!7450 = !DILocation(line: 425, column: 12, scope: !7392)
!7451 = !DILocation(line: 427, column: 17, scope: !7392)
!7452 = !DILocation(line: 427, column: 44, scope: !7392)
!7453 = !DILocation(line: 427, column: 53, scope: !7392)
!7454 = !DILocation(line: 428, column: 37, scope: !7392)
!7455 = !DILocation(line: 427, column: 5, scope: !7392)
!7456 = !DILocation(line: 430, column: 21, scope: !7392)
!7457 = !DILocation(line: 430, column: 27, scope: !7392)
!7458 = !DILocation(line: 430, column: 12, scope: !7392)
!7459 = !DILocation(line: 430, column: 19, scope: !7392)
!7460 = !DILocation(line: 431, column: 23, scope: !7392)
!7461 = !DILocation(line: 431, column: 29, scope: !7392)
!7462 = !DILocation(line: 431, column: 12, scope: !7392)
!7463 = !DILocation(line: 431, column: 21, scope: !7392)
!7464 = !DILocation(line: 432, column: 27, scope: !7392)
!7465 = !DILocation(line: 432, column: 33, scope: !7392)
!7466 = !DILocation(line: 432, column: 43, scope: !7392)
!7467 = !DILocation(line: 432, column: 12, scope: !7392)
!7468 = !DILocation(line: 432, column: 24, scope: !7392)
!7469 = !DILocation(line: 433, column: 35, scope: !7392)
!7470 = !DILocation(line: 433, column: 25, scope: !7392)
!7471 = !DILocation(line: 433, column: 12, scope: !7392)
!7472 = !DILocation(line: 433, column: 21, scope: !7392)
!7473 = !DILocation(line: 434, column: 25, scope: !7392)
!7474 = !DILocation(line: 434, column: 31, scope: !7392)
!7475 = !DILocation(line: 434, column: 41, scope: !7392)
!7476 = !DILocation(line: 434, column: 12, scope: !7392)
!7477 = !DILocation(line: 434, column: 22, scope: !7392)
!7478 = !DILocation(line: 435, column: 25, scope: !7392)
!7479 = !DILocation(line: 435, column: 31, scope: !7392)
!7480 = !DILocation(line: 435, column: 12, scope: !7392)
!7481 = !DILocation(line: 435, column: 23, scope: !7392)
!7482 = !DILocation(line: 436, column: 24, scope: !7392)
!7483 = !DILocation(line: 436, column: 30, scope: !7392)
!7484 = !DILocation(line: 436, column: 40, scope: !7392)
!7485 = !DILocation(line: 436, column: 12, scope: !7392)
!7486 = !DILocation(line: 436, column: 21, scope: !7392)
!7487 = !DILocation(line: 437, column: 25, scope: !7392)
!7488 = !DILocation(line: 437, column: 31, scope: !7392)
!7489 = !DILocation(line: 437, column: 12, scope: !7392)
!7490 = !DILocation(line: 437, column: 23, scope: !7392)
!7491 = !DILocation(line: 439, column: 26, scope: !7392)
!7492 = !DILocation(line: 439, column: 32, scope: !7392)
!7493 = !DILocation(line: 439, column: 42, scope: !7392)
!7494 = !DILocation(line: 439, column: 12, scope: !7392)
!7495 = !DILocation(line: 439, column: 23, scope: !7392)
!7496 = !DILocation(line: 440, column: 16, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 440, column: 9)
!7498 = !DILocation(line: 440, column: 27, scope: !7497)
!7499 = !DILocation(line: 440, column: 9, scope: !7392)
!7500 = !DILocation(line: 440, column: 42, scope: !7497)
!7501 = !DILocation(line: 440, column: 53, scope: !7497)
!7502 = !DILocation(line: 440, column: 35, scope: !7497)
!7503 = !DILocation(line: 441, column: 26, scope: !7392)
!7504 = !DILocation(line: 441, column: 32, scope: !7392)
!7505 = !DILocation(line: 441, column: 12, scope: !7392)
!7506 = !DILocation(line: 441, column: 24, scope: !7392)
!7507 = !DILocation(line: 443, column: 16, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 443, column: 9)
!7509 = !DILocation(line: 443, column: 9, scope: !7508)
!7510 = !DILocation(line: 443, column: 9, scope: !7392)
!7511 = !DILocation(line: 444, column: 19, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !506, line: 443, column: 28)
!7513 = !DILocation(line: 444, column: 46, scope: !7512)
!7514 = !DILocation(line: 444, column: 55, scope: !7512)
!7515 = !DILocation(line: 445, column: 42, scope: !7512)
!7516 = !DILocation(line: 444, column: 7, scope: !7512)
!7517 = !DILocation(line: 446, column: 5, scope: !7512)
!7518 = !DILocation(line: 448, column: 16, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 448, column: 9)
!7520 = !DILocation(line: 448, column: 9, scope: !7519)
!7521 = !DILocation(line: 448, column: 9, scope: !7392)
!7522 = !DILocation(line: 451, column: 41, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7519, file: !506, line: 449, column: 7)
!7524 = !DILocation(line: 451, column: 56, scope: !7523)
!7525 = !DILocation(line: 451, column: 54, scope: !7523)
!7526 = !DILocation(line: 451, column: 25, scope: !7523)
!7527 = !DILocation(line: 451, column: 23, scope: !7523)
!7528 = !DILocation(line: 452, column: 16, scope: !7523)
!7529 = !DILocation(line: 454, column: 13, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7523, file: !506, line: 454, column: 13)
!7531 = !DILocation(line: 454, column: 27, scope: !7530)
!7532 = !DILocation(line: 454, column: 13, scope: !7523)
!7533 = !DILocation(line: 455, column: 25, scope: !7530)
!7534 = !DILocation(line: 455, column: 54, scope: !7530)
!7535 = !DILocation(line: 455, column: 63, scope: !7530)
!7536 = !DILocation(line: 455, column: 13, scope: !7530)
!7537 = !DILocation(line: 457, column: 7, scope: !7523)
!7538 = !DILocation(line: 461, column: 21, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !506, line: 461, column: 13)
!7540 = distinct !DILexicalBlock(scope: !7519, file: !506, line: 459, column: 7)
!7541 = !DILocation(line: 461, column: 13, scope: !7539)
!7542 = !DILocation(line: 461, column: 31, scope: !7539)
!7543 = !DILocation(line: 461, column: 43, scope: !7539)
!7544 = !DILocation(line: 461, column: 35, scope: !7539)
!7545 = !DILocation(line: 461, column: 13, scope: !7540)
!7546 = !DILocation(line: 463, column: 31, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7539, file: !506, line: 462, column: 11)
!7548 = !DILocation(line: 463, column: 44, scope: !7547)
!7549 = !DILocation(line: 463, column: 20, scope: !7547)
!7550 = !DILocation(line: 463, column: 13, scope: !7547)
!7551 = !DILocation(line: 463, column: 29, scope: !7547)
!7552 = !DILocation(line: 464, column: 31, scope: !7547)
!7553 = !DILocation(line: 464, column: 44, scope: !7547)
!7554 = !DILocation(line: 464, column: 51, scope: !7547)
!7555 = !DILocation(line: 464, column: 20, scope: !7547)
!7556 = !DILocation(line: 464, column: 13, scope: !7547)
!7557 = !DILocation(line: 464, column: 29, scope: !7547)
!7558 = !DILocation(line: 465, column: 31, scope: !7547)
!7559 = !DILocation(line: 465, column: 44, scope: !7547)
!7560 = !DILocation(line: 465, column: 51, scope: !7547)
!7561 = !DILocation(line: 465, column: 20, scope: !7547)
!7562 = !DILocation(line: 465, column: 13, scope: !7547)
!7563 = !DILocation(line: 465, column: 29, scope: !7547)
!7564 = !DILocation(line: 466, column: 31, scope: !7547)
!7565 = !DILocation(line: 466, column: 44, scope: !7547)
!7566 = !DILocation(line: 466, column: 51, scope: !7547)
!7567 = !DILocation(line: 466, column: 20, scope: !7547)
!7568 = !DILocation(line: 466, column: 13, scope: !7547)
!7569 = !DILocation(line: 466, column: 29, scope: !7547)
!7570 = !DILocation(line: 467, column: 20, scope: !7547)
!7571 = !DILocation(line: 468, column: 4, scope: !7547)
!7572 = !DILocation(line: 472, column: 45, scope: !7392)
!7573 = !DILocation(line: 472, column: 60, scope: !7392)
!7574 = !DILocation(line: 472, column: 58, scope: !7392)
!7575 = !DILocation(line: 472, column: 29, scope: !7392)
!7576 = !DILocation(line: 472, column: 12, scope: !7392)
!7577 = !DILocation(line: 472, column: 27, scope: !7392)
!7578 = !DILocation(line: 473, column: 12, scope: !7392)
!7579 = !DILocation(line: 475, column: 16, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 475, column: 9)
!7581 = !DILocation(line: 475, column: 9, scope: !7580)
!7582 = !DILocation(line: 475, column: 9, scope: !7392)
!7583 = !DILocation(line: 480, column: 10, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !506, line: 475, column: 24)
!7585 = !DILocation(line: 480, column: 24, scope: !7584)
!7586 = !DILocation(line: 480, column: 2, scope: !7584)
!7587 = !DILocation(line: 482, column: 50, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 480, column: 34)
!7589 = !DILocation(line: 482, column: 24, scope: !7588)
!7590 = !DILocation(line: 482, column: 13, scope: !7588)
!7591 = !DILocation(line: 482, column: 22, scope: !7588)
!7592 = !DILocation(line: 484, column: 6, scope: !7588)
!7593 = !DILocation(line: 486, column: 50, scope: !7588)
!7594 = !DILocation(line: 486, column: 24, scope: !7588)
!7595 = !DILocation(line: 486, column: 13, scope: !7588)
!7596 = !DILocation(line: 486, column: 22, scope: !7588)
!7597 = !DILocation(line: 488, column: 6, scope: !7588)
!7598 = !DILocation(line: 491, column: 25, scope: !7588)
!7599 = !DILocation(line: 491, column: 52, scope: !7588)
!7600 = !DILocation(line: 491, column: 61, scope: !7588)
!7601 = !DILocation(line: 491, column: 13, scope: !7588)
!7602 = !DILocation(line: 491, column: 6, scope: !7588)
!7603 = !DILocation(line: 496, column: 25, scope: !7588)
!7604 = !DILocation(line: 496, column: 52, scope: !7588)
!7605 = !DILocation(line: 496, column: 61, scope: !7588)
!7606 = !DILocation(line: 496, column: 13, scope: !7588)
!7607 = !DILocation(line: 496, column: 6, scope: !7588)
!7608 = !DILocation(line: 500, column: 11, scope: !7584)
!7609 = !DILocation(line: 500, column: 25, scope: !7584)
!7610 = !DILocation(line: 500, column: 35, scope: !7584)
!7611 = !DILocation(line: 500, column: 2, scope: !7584)
!7612 = !DILocation(line: 502, column: 50, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 500, column: 41)
!7614 = !DILocation(line: 502, column: 24, scope: !7613)
!7615 = !DILocation(line: 502, column: 13, scope: !7613)
!7616 = !DILocation(line: 502, column: 22, scope: !7613)
!7617 = !DILocation(line: 504, column: 6, scope: !7613)
!7618 = !DILocation(line: 506, column: 50, scope: !7613)
!7619 = !DILocation(line: 506, column: 24, scope: !7613)
!7620 = !DILocation(line: 506, column: 13, scope: !7613)
!7621 = !DILocation(line: 506, column: 22, scope: !7613)
!7622 = !DILocation(line: 508, column: 6, scope: !7613)
!7623 = !DILocation(line: 510, column: 50, scope: !7613)
!7624 = !DILocation(line: 510, column: 24, scope: !7613)
!7625 = !DILocation(line: 510, column: 13, scope: !7613)
!7626 = !DILocation(line: 510, column: 22, scope: !7613)
!7627 = !DILocation(line: 512, column: 6, scope: !7613)
!7628 = !DILocation(line: 515, column: 25, scope: !7613)
!7629 = !DILocation(line: 515, column: 52, scope: !7613)
!7630 = !DILocation(line: 515, column: 61, scope: !7613)
!7631 = !DILocation(line: 515, column: 13, scope: !7613)
!7632 = !DILocation(line: 515, column: 6, scope: !7613)
!7633 = !DILocation(line: 519, column: 11, scope: !7584)
!7634 = !DILocation(line: 519, column: 25, scope: !7584)
!7635 = !DILocation(line: 519, column: 35, scope: !7584)
!7636 = !DILocation(line: 519, column: 2, scope: !7584)
!7637 = !DILocation(line: 521, column: 50, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 519, column: 41)
!7639 = !DILocation(line: 521, column: 24, scope: !7638)
!7640 = !DILocation(line: 521, column: 13, scope: !7638)
!7641 = !DILocation(line: 521, column: 22, scope: !7638)
!7642 = !DILocation(line: 523, column: 6, scope: !7638)
!7643 = !DILocation(line: 525, column: 50, scope: !7638)
!7644 = !DILocation(line: 525, column: 24, scope: !7638)
!7645 = !DILocation(line: 525, column: 13, scope: !7638)
!7646 = !DILocation(line: 525, column: 22, scope: !7638)
!7647 = !DILocation(line: 527, column: 6, scope: !7638)
!7648 = !DILocation(line: 529, column: 50, scope: !7638)
!7649 = !DILocation(line: 529, column: 24, scope: !7638)
!7650 = !DILocation(line: 529, column: 13, scope: !7638)
!7651 = !DILocation(line: 529, column: 22, scope: !7638)
!7652 = !DILocation(line: 531, column: 6, scope: !7638)
!7653 = !DILocation(line: 534, column: 25, scope: !7638)
!7654 = !DILocation(line: 534, column: 52, scope: !7638)
!7655 = !DILocation(line: 534, column: 61, scope: !7638)
!7656 = !DILocation(line: 534, column: 13, scope: !7638)
!7657 = !DILocation(line: 534, column: 6, scope: !7638)
!7658 = !DILocation(line: 538, column: 11, scope: !7584)
!7659 = !DILocation(line: 538, column: 25, scope: !7584)
!7660 = !DILocation(line: 538, column: 35, scope: !7584)
!7661 = !DILocation(line: 538, column: 2, scope: !7584)
!7662 = !DILocation(line: 540, column: 51, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 538, column: 41)
!7664 = !DILocation(line: 540, column: 25, scope: !7663)
!7665 = !DILocation(line: 540, column: 13, scope: !7663)
!7666 = !DILocation(line: 540, column: 23, scope: !7663)
!7667 = !DILocation(line: 542, column: 6, scope: !7663)
!7668 = !DILocation(line: 544, column: 51, scope: !7663)
!7669 = !DILocation(line: 544, column: 25, scope: !7663)
!7670 = !DILocation(line: 544, column: 13, scope: !7663)
!7671 = !DILocation(line: 544, column: 23, scope: !7663)
!7672 = !DILocation(line: 546, column: 6, scope: !7663)
!7673 = !DILocation(line: 549, column: 25, scope: !7663)
!7674 = !DILocation(line: 549, column: 52, scope: !7663)
!7675 = !DILocation(line: 549, column: 61, scope: !7663)
!7676 = !DILocation(line: 549, column: 13, scope: !7663)
!7677 = !DILocation(line: 549, column: 6, scope: !7663)
!7678 = !DILocation(line: 554, column: 25, scope: !7663)
!7679 = !DILocation(line: 554, column: 52, scope: !7663)
!7680 = !DILocation(line: 554, column: 61, scope: !7663)
!7681 = !DILocation(line: 554, column: 13, scope: !7663)
!7682 = !DILocation(line: 554, column: 6, scope: !7663)
!7683 = !DILocation(line: 558, column: 11, scope: !7584)
!7684 = !DILocation(line: 558, column: 25, scope: !7584)
!7685 = !DILocation(line: 558, column: 35, scope: !7584)
!7686 = !DILocation(line: 558, column: 2, scope: !7584)
!7687 = !DILocation(line: 560, column: 51, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 558, column: 41)
!7689 = !DILocation(line: 560, column: 25, scope: !7688)
!7690 = !DILocation(line: 560, column: 13, scope: !7688)
!7691 = !DILocation(line: 560, column: 23, scope: !7688)
!7692 = !DILocation(line: 562, column: 6, scope: !7688)
!7693 = !DILocation(line: 564, column: 51, scope: !7688)
!7694 = !DILocation(line: 564, column: 25, scope: !7688)
!7695 = !DILocation(line: 564, column: 13, scope: !7688)
!7696 = !DILocation(line: 564, column: 23, scope: !7688)
!7697 = !DILocation(line: 566, column: 6, scope: !7688)
!7698 = !DILocation(line: 569, column: 25, scope: !7688)
!7699 = !DILocation(line: 569, column: 52, scope: !7688)
!7700 = !DILocation(line: 569, column: 61, scope: !7688)
!7701 = !DILocation(line: 569, column: 13, scope: !7688)
!7702 = !DILocation(line: 569, column: 6, scope: !7688)
!7703 = !DILocation(line: 574, column: 25, scope: !7688)
!7704 = !DILocation(line: 574, column: 52, scope: !7688)
!7705 = !DILocation(line: 574, column: 61, scope: !7688)
!7706 = !DILocation(line: 574, column: 13, scope: !7688)
!7707 = !DILocation(line: 574, column: 6, scope: !7688)
!7708 = !DILocation(line: 578, column: 18, scope: !7584)
!7709 = !DILocation(line: 578, column: 32, scope: !7584)
!7710 = !DILocation(line: 578, column: 42, scope: !7584)
!7711 = !DILocation(line: 578, column: 9, scope: !7584)
!7712 = !DILocation(line: 580, column: 51, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 578, column: 49)
!7714 = !DILocation(line: 580, column: 25, scope: !7713)
!7715 = !DILocation(line: 580, column: 13, scope: !7713)
!7716 = !DILocation(line: 580, column: 23, scope: !7713)
!7717 = !DILocation(line: 582, column: 6, scope: !7713)
!7718 = !DILocation(line: 584, column: 51, scope: !7713)
!7719 = !DILocation(line: 584, column: 25, scope: !7713)
!7720 = !DILocation(line: 584, column: 13, scope: !7713)
!7721 = !DILocation(line: 584, column: 23, scope: !7713)
!7722 = !DILocation(line: 586, column: 6, scope: !7713)
!7723 = !DILocation(line: 589, column: 25, scope: !7713)
!7724 = !DILocation(line: 589, column: 52, scope: !7713)
!7725 = !DILocation(line: 589, column: 61, scope: !7713)
!7726 = !DILocation(line: 589, column: 13, scope: !7713)
!7727 = !DILocation(line: 589, column: 6, scope: !7713)
!7728 = !DILocation(line: 594, column: 25, scope: !7713)
!7729 = !DILocation(line: 594, column: 52, scope: !7713)
!7730 = !DILocation(line: 594, column: 61, scope: !7713)
!7731 = !DILocation(line: 594, column: 13, scope: !7713)
!7732 = !DILocation(line: 594, column: 6, scope: !7713)
!7733 = !DILocation(line: 598, column: 11, scope: !7584)
!7734 = !DILocation(line: 598, column: 25, scope: !7584)
!7735 = !DILocation(line: 598, column: 35, scope: !7584)
!7736 = !DILocation(line: 598, column: 2, scope: !7584)
!7737 = !DILocation(line: 600, column: 51, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 598, column: 42)
!7739 = !DILocation(line: 600, column: 25, scope: !7738)
!7740 = !DILocation(line: 600, column: 13, scope: !7738)
!7741 = !DILocation(line: 600, column: 23, scope: !7738)
!7742 = !DILocation(line: 602, column: 6, scope: !7738)
!7743 = !DILocation(line: 604, column: 51, scope: !7738)
!7744 = !DILocation(line: 604, column: 25, scope: !7738)
!7745 = !DILocation(line: 604, column: 13, scope: !7738)
!7746 = !DILocation(line: 604, column: 23, scope: !7738)
!7747 = !DILocation(line: 606, column: 6, scope: !7738)
!7748 = !DILocation(line: 609, column: 25, scope: !7738)
!7749 = !DILocation(line: 609, column: 52, scope: !7738)
!7750 = !DILocation(line: 609, column: 61, scope: !7738)
!7751 = !DILocation(line: 609, column: 13, scope: !7738)
!7752 = !DILocation(line: 609, column: 6, scope: !7738)
!7753 = !DILocation(line: 614, column: 25, scope: !7738)
!7754 = !DILocation(line: 614, column: 52, scope: !7738)
!7755 = !DILocation(line: 614, column: 61, scope: !7738)
!7756 = !DILocation(line: 614, column: 13, scope: !7738)
!7757 = !DILocation(line: 614, column: 6, scope: !7738)
!7758 = !DILocation(line: 618, column: 11, scope: !7584)
!7759 = !DILocation(line: 618, column: 25, scope: !7584)
!7760 = !DILocation(line: 618, column: 35, scope: !7584)
!7761 = !DILocation(line: 618, column: 2, scope: !7584)
!7762 = !DILocation(line: 620, column: 53, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 618, column: 42)
!7764 = !DILocation(line: 620, column: 27, scope: !7763)
!7765 = !DILocation(line: 620, column: 13, scope: !7763)
!7766 = !DILocation(line: 620, column: 25, scope: !7763)
!7767 = !DILocation(line: 622, column: 6, scope: !7763)
!7768 = !DILocation(line: 625, column: 25, scope: !7763)
!7769 = !DILocation(line: 625, column: 52, scope: !7763)
!7770 = !DILocation(line: 625, column: 61, scope: !7763)
!7771 = !DILocation(line: 625, column: 13, scope: !7763)
!7772 = !DILocation(line: 625, column: 6, scope: !7763)
!7773 = !DILocation(line: 630, column: 13, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7584, file: !506, line: 630, column: 13)
!7775 = !DILocation(line: 630, column: 27, scope: !7774)
!7776 = !DILocation(line: 630, column: 13, scope: !7584)
!7777 = !DILocation(line: 631, column: 16, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !506, line: 630, column: 37)
!7779 = !DILocation(line: 631, column: 45, scope: !7778)
!7780 = !DILocation(line: 631, column: 54, scope: !7778)
!7781 = !DILocation(line: 631, column: 4, scope: !7778)
!7782 = !DILocation(line: 633, column: 2, scope: !7778)
!7783 = !DILocation(line: 637, column: 5, scope: !7584)
!7784 = !DILocation(line: 639, column: 17, scope: !7392)
!7785 = !DILocation(line: 639, column: 43, scope: !7392)
!7786 = !DILocation(line: 639, column: 52, scope: !7392)
!7787 = !DILocation(line: 641, column: 21, scope: !7392)
!7788 = !DILocation(line: 641, column: 40, scope: !7392)
!7789 = !DILocation(line: 642, column: 21, scope: !7392)
!7790 = !DILocation(line: 642, column: 36, scope: !7392)
!7791 = !DILocation(line: 642, column: 46, scope: !7392)
!7792 = !DILocation(line: 639, column: 5, scope: !7392)
!7793 = !DILocation(line: 645, column: 39, scope: !7392)
!7794 = !DILocation(line: 645, column: 44, scope: !7392)
!7795 = !DILocation(line: 645, column: 15, scope: !7392)
!7796 = !DILocation(line: 645, column: 13, scope: !7392)
!7797 = !DILocation(line: 646, column: 9, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 646, column: 9)
!7799 = !DILocation(line: 646, column: 17, scope: !7798)
!7800 = !DILocation(line: 646, column: 9, scope: !7392)
!7801 = !DILocation(line: 647, column: 40, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7798, file: !506, line: 646, column: 23)
!7803 = !DILocation(line: 647, column: 45, scope: !7802)
!7804 = !DILocation(line: 647, column: 17, scope: !7802)
!7805 = !DILocation(line: 647, column: 15, scope: !7802)
!7806 = !DILocation(line: 648, column: 5, scope: !7802)
!7807 = !DILocation(line: 649, column: 28, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7798, file: !506, line: 648, column: 12)
!7809 = !DILocation(line: 649, column: 55, scope: !7808)
!7810 = !DILocation(line: 649, column: 64, scope: !7808)
!7811 = !DILocation(line: 649, column: 16, scope: !7808)
!7812 = !DILocation(line: 649, column: 9, scope: !7808)
!7813 = !DILocation(line: 652, column: 9, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 652, column: 9)
!7815 = !DILocation(line: 652, column: 15, scope: !7814)
!7816 = !DILocation(line: 652, column: 9, scope: !7392)
!7817 = !DILocation(line: 653, column: 21, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7814, file: !506, line: 652, column: 24)
!7819 = !DILocation(line: 653, column: 48, scope: !7818)
!7820 = !DILocation(line: 653, column: 57, scope: !7818)
!7821 = !DILocation(line: 653, column: 9, scope: !7818)
!7822 = !DILocation(line: 653, column: 2, scope: !7818)
!7823 = !DILocalVariable(name: "index", scope: !7824, file: !506, line: 657, type: !6)
!7824 = distinct !DILexicalBlock(scope: !7814, file: !506, line: 656, column: 12)
!7825 = !DILocation(line: 657, column: 6, scope: !7824)
!7826 = !DILocation(line: 658, column: 6, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !506, line: 658, column: 6)
!7828 = !DILocation(line: 658, column: 15, scope: !7827)
!7829 = !DILocation(line: 658, column: 6, scope: !7824)
!7830 = !DILocation(line: 659, column: 25, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !506, line: 658, column: 24)
!7832 = !DILocation(line: 660, column: 4, scope: !7831)
!7833 = !DILocation(line: 660, column: 13, scope: !7831)
!7834 = !DILocation(line: 659, column: 13, scope: !7831)
!7835 = !DILocation(line: 659, column: 6, scope: !7831)
!7836 = !DILocation(line: 663, column: 13, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7824, file: !506, line: 663, column: 2)
!7838 = !DILocation(line: 663, column: 7, scope: !7837)
!7839 = !DILocation(line: 663, column: 18, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7837, file: !506, line: 663, column: 2)
!7841 = !DILocation(line: 663, column: 26, scope: !7840)
!7842 = !DILocation(line: 663, column: 24, scope: !7840)
!7843 = !DILocation(line: 663, column: 2, scope: !7837)
!7844 = !DILocation(line: 664, column: 10, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7840, file: !506, line: 664, column: 10)
!7846 = !DILocation(line: 664, column: 16, scope: !7845)
!7847 = !DILocation(line: 664, column: 23, scope: !7845)
!7848 = !DILocation(line: 664, column: 10, scope: !7840)
!7849 = !DILocation(line: 665, column: 15, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !506, line: 664, column: 32)
!7851 = !DILocation(line: 665, column: 44, scope: !7850)
!7852 = !DILocation(line: 665, column: 53, scope: !7850)
!7853 = !DILocation(line: 665, column: 3, scope: !7850)
!7854 = !DILocation(line: 667, column: 16, scope: !7850)
!7855 = !DILocation(line: 667, column: 14, scope: !7850)
!7856 = !DILocation(line: 668, column: 2, scope: !7850)
!7857 = !DILocation(line: 664, column: 26, scope: !7845)
!7858 = !DILocation(line: 663, column: 40, scope: !7840)
!7859 = !DILocation(line: 663, column: 2, scope: !7840)
!7860 = distinct !{!7860, !7843, !7861}
!7861 = !DILocation(line: 668, column: 2, scope: !7837)
!7862 = !DILocation(line: 672, column: 17, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 672, column: 9)
!7864 = !DILocation(line: 672, column: 10, scope: !7863)
!7865 = !DILocation(line: 672, column: 24, scope: !7863)
!7866 = !DILocation(line: 672, column: 34, scope: !7863)
!7867 = !DILocation(line: 672, column: 27, scope: !7863)
!7868 = !DILocation(line: 672, column: 9, scope: !7392)
!7869 = !DILocalVariable(name: "stats_size", scope: !7870, file: !506, line: 673, type: !6)
!7870 = distinct !DILexicalBlock(scope: !7863, file: !506, line: 672, column: 44)
!7871 = !DILocation(line: 673, column: 6, scope: !7870)
!7872 = !DILocation(line: 673, column: 26, scope: !7870)
!7873 = !DILocation(line: 673, column: 19, scope: !7870)
!7874 = !DILocation(line: 674, column: 25, scope: !7870)
!7875 = !DILocation(line: 674, column: 30, scope: !7870)
!7876 = !DILocation(line: 674, column: 41, scope: !7870)
!7877 = !DILocation(line: 674, column: 13, scope: !7870)
!7878 = !DILocation(line: 674, column: 11, scope: !7870)
!7879 = !DILocation(line: 675, column: 9, scope: !7870)
!7880 = !DILocation(line: 675, column: 22, scope: !7870)
!7881 = !DILocation(line: 675, column: 2, scope: !7870)
!7882 = !DILocation(line: 676, column: 5, scope: !7870)
!7883 = !DILocation(line: 678, column: 29, scope: !7392)
!7884 = !DILocation(line: 678, column: 46, scope: !7392)
!7885 = !DILocation(line: 678, column: 65, scope: !7392)
!7886 = !DILocation(line: 678, column: 13, scope: !7392)
!7887 = !DILocation(line: 678, column: 11, scope: !7392)
!7888 = !DILocation(line: 680, column: 36, scope: !7392)
!7889 = !DILocation(line: 680, column: 41, scope: !7392)
!7890 = !DILocation(line: 680, column: 56, scope: !7392)
!7891 = !DILocation(line: 680, column: 54, scope: !7392)
!7892 = !DILocation(line: 680, column: 64, scope: !7392)
!7893 = !DILocation(line: 680, column: 73, scope: !7392)
!7894 = !DILocation(line: 680, column: 87, scope: !7392)
!7895 = !DILocation(line: 680, column: 85, scope: !7392)
!7896 = !DILocation(line: 680, column: 10, scope: !7392)
!7897 = !DILocation(line: 680, column: 8, scope: !7392)
!7898 = !DILocation(line: 681, column: 17, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 681, column: 9)
!7900 = !DILocation(line: 681, column: 10, scope: !7899)
!7901 = !DILocation(line: 681, column: 9, scope: !7392)
!7902 = !DILocalVariable(name: "SBSYMCODELEN", scope: !7903, file: !506, line: 682, type: !6)
!7903 = distinct !DILexicalBlock(scope: !7899, file: !506, line: 681, column: 25)
!7904 = !DILocation(line: 682, column: 6, scope: !7903)
!7905 = !DILocalVariable(name: "index", scope: !7903, file: !506, line: 682, type: !6)
!7906 = !DILocation(line: 682, column: 20, scope: !7903)
!7907 = !DILocalVariable(name: "SBNUMSYMS", scope: !7903, file: !506, line: 683, type: !6)
!7908 = !DILocation(line: 683, column: 13, scope: !7903)
!7909 = !DILocation(line: 684, column: 13, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7903, file: !506, line: 684, column: 2)
!7911 = !DILocation(line: 684, column: 7, scope: !7910)
!7912 = !DILocation(line: 684, column: 18, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7910, file: !506, line: 684, column: 2)
!7914 = !DILocation(line: 684, column: 26, scope: !7913)
!7915 = !DILocation(line: 684, column: 24, scope: !7913)
!7916 = !DILocation(line: 684, column: 2, scope: !7910)
!7917 = !DILocation(line: 685, column: 19, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !506, line: 684, column: 44)
!7919 = !DILocation(line: 685, column: 25, scope: !7918)
!7920 = !DILocation(line: 685, column: 33, scope: !7918)
!7921 = !DILocation(line: 685, column: 16, scope: !7918)
!7922 = !DILocation(line: 686, column: 2, scope: !7918)
!7923 = !DILocation(line: 684, column: 40, scope: !7913)
!7924 = !DILocation(line: 684, column: 2, scope: !7913)
!7925 = distinct !{!7925, !7916, !7926}
!7926 = !DILocation(line: 686, column: 2, scope: !7910)
!7927 = !DILocation(line: 688, column: 23, scope: !7903)
!7928 = !DILocation(line: 688, column: 28, scope: !7903)
!7929 = !DILocation(line: 688, column: 7, scope: !7903)
!7930 = !DILocation(line: 688, column: 5, scope: !7903)
!7931 = !DILocation(line: 689, column: 5, scope: !7903)
!7932 = !DILocation(line: 691, column: 47, scope: !7903)
!7933 = !DILocation(line: 691, column: 23, scope: !7903)
!7934 = !DILocation(line: 691, column: 16, scope: !7903)
!7935 = !DILocation(line: 691, column: 21, scope: !7903)
!7936 = !DILocation(line: 692, column: 47, scope: !7903)
!7937 = !DILocation(line: 692, column: 23, scope: !7903)
!7938 = !DILocation(line: 692, column: 16, scope: !7903)
!7939 = !DILocation(line: 692, column: 21, scope: !7903)
!7940 = !DILocation(line: 693, column: 47, scope: !7903)
!7941 = !DILocation(line: 693, column: 23, scope: !7903)
!7942 = !DILocation(line: 693, column: 16, scope: !7903)
!7943 = !DILocation(line: 693, column: 21, scope: !7903)
!7944 = !DILocation(line: 694, column: 47, scope: !7903)
!7945 = !DILocation(line: 694, column: 23, scope: !7903)
!7946 = !DILocation(line: 694, column: 16, scope: !7903)
!7947 = !DILocation(line: 694, column: 21, scope: !7903)
!7948 = !DILocation(line: 696, column: 20, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7903, file: !506, line: 696, column: 2)
!7950 = !DILocation(line: 696, column: 7, scope: !7949)
!7951 = !DILocation(line: 696, column: 31, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7949, file: !506, line: 696, column: 2)
!7953 = !DILocation(line: 696, column: 28, scope: !7952)
!7954 = !DILocation(line: 696, column: 47, scope: !7952)
!7955 = !DILocation(line: 696, column: 45, scope: !7952)
!7956 = !DILocation(line: 696, column: 2, scope: !7949)
!7957 = !DILocation(line: 696, column: 70, scope: !7952)
!7958 = !DILocation(line: 696, column: 2, scope: !7952)
!7959 = distinct !{!7959, !7956, !7960}
!7960 = !DILocation(line: 696, column: 73, scope: !7949)
!7961 = !DILocation(line: 697, column: 48, scope: !7903)
!7962 = !DILocation(line: 697, column: 53, scope: !7903)
!7963 = !DILocation(line: 697, column: 23, scope: !7903)
!7964 = !DILocation(line: 697, column: 16, scope: !7903)
!7965 = !DILocation(line: 697, column: 21, scope: !7903)
!7966 = !DILocation(line: 698, column: 40, scope: !7903)
!7967 = !DILocation(line: 698, column: 16, scope: !7903)
!7968 = !DILocation(line: 698, column: 9, scope: !7903)
!7969 = !DILocation(line: 698, column: 14, scope: !7903)
!7970 = !DILocation(line: 699, column: 41, scope: !7903)
!7971 = !DILocation(line: 699, column: 17, scope: !7903)
!7972 = !DILocation(line: 699, column: 9, scope: !7903)
!7973 = !DILocation(line: 699, column: 15, scope: !7903)
!7974 = !DILocation(line: 700, column: 41, scope: !7903)
!7975 = !DILocation(line: 700, column: 17, scope: !7903)
!7976 = !DILocation(line: 700, column: 9, scope: !7903)
!7977 = !DILocation(line: 700, column: 15, scope: !7903)
!7978 = !DILocation(line: 701, column: 41, scope: !7903)
!7979 = !DILocation(line: 701, column: 17, scope: !7903)
!7980 = !DILocation(line: 701, column: 9, scope: !7903)
!7981 = !DILocation(line: 701, column: 15, scope: !7903)
!7982 = !DILocation(line: 702, column: 41, scope: !7903)
!7983 = !DILocation(line: 702, column: 17, scope: !7903)
!7984 = !DILocation(line: 702, column: 9, scope: !7903)
!7985 = !DILocation(line: 702, column: 15, scope: !7903)
!7986 = !DILocation(line: 703, column: 5, scope: !7903)
!7987 = !DILocation(line: 705, column: 37, scope: !7392)
!7988 = !DILocation(line: 705, column: 42, scope: !7392)
!7989 = !DILocation(line: 706, column: 50, scope: !7392)
!7990 = !DILocation(line: 706, column: 57, scope: !7392)
!7991 = !DILocation(line: 706, column: 66, scope: !7392)
!7992 = !DILocation(line: 707, column: 17, scope: !7392)
!7993 = !DILocation(line: 707, column: 32, scope: !7392)
!7994 = !DILocation(line: 707, column: 30, scope: !7392)
!7995 = !DILocation(line: 707, column: 40, scope: !7392)
!7996 = !DILocation(line: 707, column: 49, scope: !7392)
!7997 = !DILocation(line: 707, column: 63, scope: !7392)
!7998 = !DILocation(line: 707, column: 61, scope: !7392)
!7999 = !DILocation(line: 708, column: 3, scope: !7392)
!8000 = !DILocation(line: 708, column: 13, scope: !7392)
!8001 = !DILocation(line: 708, column: 17, scope: !7392)
!8002 = !DILocation(line: 705, column: 12, scope: !7392)
!8003 = !DILocation(line: 705, column: 10, scope: !7392)
!8004 = !DILocation(line: 710, column: 17, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 710, column: 9)
!8006 = !DILocation(line: 710, column: 10, scope: !8005)
!8007 = !DILocation(line: 710, column: 24, scope: !8005)
!8008 = !DILocation(line: 710, column: 34, scope: !8005)
!8009 = !DILocation(line: 710, column: 27, scope: !8005)
!8010 = !DILocation(line: 710, column: 9, scope: !7392)
!8011 = !DILocation(line: 711, column: 13, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8005, file: !506, line: 710, column: 44)
!8013 = !DILocation(line: 711, column: 18, scope: !8012)
!8014 = !DILocation(line: 711, column: 29, scope: !8012)
!8015 = !DILocation(line: 711, column: 2, scope: !8012)
!8016 = !DILocation(line: 712, column: 5, scope: !8012)
!8017 = !DILocation(line: 714, column: 16, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 714, column: 9)
!8019 = !DILocation(line: 714, column: 9, scope: !8018)
!8020 = !DILocation(line: 714, column: 9, scope: !7392)
!8021 = !DILocation(line: 715, column: 35, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8018, file: !506, line: 714, column: 24)
!8023 = !DILocation(line: 715, column: 47, scope: !8022)
!8024 = !DILocation(line: 715, column: 7, scope: !8022)
!8025 = !DILocation(line: 716, column: 35, scope: !8022)
!8026 = !DILocation(line: 716, column: 47, scope: !8022)
!8027 = !DILocation(line: 716, column: 7, scope: !8022)
!8028 = !DILocation(line: 717, column: 35, scope: !8022)
!8029 = !DILocation(line: 717, column: 47, scope: !8022)
!8030 = !DILocation(line: 717, column: 7, scope: !8022)
!8031 = !DILocation(line: 718, column: 35, scope: !8022)
!8032 = !DILocation(line: 718, column: 47, scope: !8022)
!8033 = !DILocation(line: 718, column: 7, scope: !8022)
!8034 = !DILocation(line: 719, column: 35, scope: !8022)
!8035 = !DILocation(line: 719, column: 47, scope: !8022)
!8036 = !DILocation(line: 719, column: 7, scope: !8022)
!8037 = !DILocation(line: 720, column: 35, scope: !8022)
!8038 = !DILocation(line: 720, column: 47, scope: !8022)
!8039 = !DILocation(line: 720, column: 7, scope: !8022)
!8040 = !DILocation(line: 721, column: 35, scope: !8022)
!8041 = !DILocation(line: 721, column: 47, scope: !8022)
!8042 = !DILocation(line: 721, column: 7, scope: !8022)
!8043 = !DILocation(line: 722, column: 35, scope: !8022)
!8044 = !DILocation(line: 722, column: 47, scope: !8022)
!8045 = !DILocation(line: 722, column: 7, scope: !8022)
!8046 = !DILocation(line: 723, column: 5, scope: !8022)
!8047 = !DILocation(line: 725, column: 27, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8018, file: !506, line: 724, column: 10)
!8049 = !DILocation(line: 725, column: 39, scope: !8048)
!8050 = !DILocation(line: 725, column: 2, scope: !8048)
!8051 = !DILocation(line: 726, column: 27, scope: !8048)
!8052 = !DILocation(line: 726, column: 39, scope: !8048)
!8053 = !DILocation(line: 726, column: 2, scope: !8048)
!8054 = !DILocation(line: 727, column: 27, scope: !8048)
!8055 = !DILocation(line: 727, column: 39, scope: !8048)
!8056 = !DILocation(line: 727, column: 2, scope: !8048)
!8057 = !DILocation(line: 728, column: 27, scope: !8048)
!8058 = !DILocation(line: 728, column: 39, scope: !8048)
!8059 = !DILocation(line: 728, column: 2, scope: !8048)
!8060 = !DILocation(line: 729, column: 28, scope: !8048)
!8061 = !DILocation(line: 729, column: 40, scope: !8048)
!8062 = !DILocation(line: 729, column: 2, scope: !8048)
!8063 = !DILocation(line: 730, column: 27, scope: !8048)
!8064 = !DILocation(line: 730, column: 39, scope: !8048)
!8065 = !DILocation(line: 730, column: 2, scope: !8048)
!8066 = !DILocation(line: 731, column: 27, scope: !8048)
!8067 = !DILocation(line: 731, column: 39, scope: !8048)
!8068 = !DILocation(line: 731, column: 2, scope: !8048)
!8069 = !DILocation(line: 732, column: 27, scope: !8048)
!8070 = !DILocation(line: 732, column: 39, scope: !8048)
!8071 = !DILocation(line: 732, column: 2, scope: !8048)
!8072 = !DILocation(line: 733, column: 27, scope: !8048)
!8073 = !DILocation(line: 733, column: 39, scope: !8048)
!8074 = !DILocation(line: 733, column: 2, scope: !8048)
!8075 = !DILocation(line: 734, column: 27, scope: !8048)
!8076 = !DILocation(line: 734, column: 39, scope: !8048)
!8077 = !DILocation(line: 734, column: 2, scope: !8048)
!8078 = !DILocation(line: 735, column: 13, scope: !8048)
!8079 = !DILocation(line: 735, column: 18, scope: !8048)
!8080 = !DILocation(line: 735, column: 29, scope: !8048)
!8081 = !DILocation(line: 735, column: 2, scope: !8048)
!8082 = !DILocation(line: 736, column: 29, scope: !8048)
!8083 = !DILocation(line: 736, column: 34, scope: !8048)
!8084 = !DILocation(line: 736, column: 2, scope: !8048)
!8085 = !DILocation(line: 739, column: 16, scope: !7392)
!8086 = !DILocation(line: 739, column: 21, scope: !7392)
!8087 = !DILocation(line: 739, column: 32, scope: !7392)
!8088 = !DILocation(line: 739, column: 5, scope: !7392)
!8089 = !DILocation(line: 743, column: 10, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !7392, file: !506, line: 743, column: 9)
!8091 = !DILocation(line: 743, column: 19, scope: !8090)
!8092 = !DILocation(line: 743, column: 25, scope: !8090)
!8093 = !DILocation(line: 743, column: 31, scope: !8090)
!8094 = !DILocation(line: 743, column: 9, scope: !7392)
!8095 = !DILocation(line: 745, column: 27, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8090, file: !506, line: 743, column: 37)
!8097 = !DILocation(line: 745, column: 9, scope: !8096)
!8098 = !DILocation(line: 745, column: 18, scope: !8096)
!8099 = !DILocation(line: 745, column: 25, scope: !8096)
!8100 = !DILocation(line: 746, column: 5, scope: !8096)
!8101 = !DILocation(line: 748, column: 21, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8090, file: !506, line: 746, column: 12)
!8103 = !DILocation(line: 748, column: 48, scope: !8102)
!8104 = !DILocation(line: 748, column: 57, scope: !8102)
!8105 = !DILocation(line: 750, column: 25, scope: !8102)
!8106 = !DILocation(line: 750, column: 44, scope: !8102)
!8107 = !DILocation(line: 750, column: 64, scope: !8102)
!8108 = !DILocation(line: 750, column: 79, scope: !8102)
!8109 = !DILocation(line: 748, column: 9, scope: !8102)
!8110 = !DILocation(line: 751, column: 24, scope: !8102)
!8111 = !DILocation(line: 751, column: 30, scope: !8102)
!8112 = !DILocation(line: 751, column: 35, scope: !8102)
!8113 = !DILocation(line: 751, column: 41, scope: !8102)
!8114 = !DILocation(line: 751, column: 46, scope: !8102)
!8115 = !DILocation(line: 751, column: 61, scope: !8102)
!8116 = !DILocation(line: 752, column: 22, scope: !8102)
!8117 = !DILocation(line: 752, column: 37, scope: !8102)
!8118 = !DILocation(line: 752, column: 52, scope: !8102)
!8119 = !DILocation(line: 751, column: 2, scope: !8102)
!8120 = !DILocation(line: 753, column: 29, scope: !8102)
!8121 = !DILocation(line: 753, column: 34, scope: !8102)
!8122 = !DILocation(line: 753, column: 9, scope: !8102)
!8123 = !DILocation(line: 757, column: 5, scope: !7392)
!8124 = !DILocation(line: 760, column: 28, scope: !7392)
!8125 = !DILocation(line: 760, column: 55, scope: !7392)
!8126 = !DILocation(line: 760, column: 64, scope: !7392)
!8127 = !DILocation(line: 760, column: 16, scope: !7392)
!8128 = !DILocation(line: 760, column: 9, scope: !7392)
!8129 = !DILocation(line: 762, column: 1, scope: !7392)
!8130 = distinct !DISubprogram(name: "jbig2_generic_stats_size", scope: !528, file: !528, line: 47, type: !8131, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !527, retainedNodes: !70)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!6, !8133, !6}
!8133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8134, size: 64)
!8134 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !8135)
!8135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !8136)
!8136 = !{!8137, !8154, !8155, !8158, !8159, !8160, !8161, !8162, !8163, !8164, !8165, !8166, !8167, !8168, !8181, !8182, !8183, !8184, !8185}
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !8135, file: !90, line: 45, baseType: !8138, size: 64)
!8138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8139, size: 64)
!8139 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !8140)
!8140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !8141)
!8141 = !{!8142, !8146, !8150}
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8140, file: !58, line: 86, baseType: !8143, size: 64)
!8143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8144, size: 64)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!68, !8138, !119}
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8140, file: !58, line: 87, baseType: !8147, size: 64, offset: 64)
!8147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8148, size: 64)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{null, !8138, !68}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !8140, file: !58, line: 88, baseType: !8151, size: 64, offset: 128)
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8152, size: 64)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!68, !8138, !68, !119}
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !8135, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !8135, file: !90, line: 47, baseType: !8156, size: 64, offset: 128)
!8156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8157, size: 64)
!8157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8134)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !8135, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !8135, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8135, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !8135, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !8135, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !8135, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8135, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !8135, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !8135, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !8135, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !8135, file: !90, line: 62, baseType: !8169, size: 64, offset: 640)
!8169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8170, size: 64)
!8170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8171, size: 64)
!8171 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !8172)
!8172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !8173)
!8173 = !{!8174, !8175, !8176, !8177, !8178, !8179, !8180}
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !8172, file: !58, line: 117, baseType: !32, size: 32)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8172, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !8172, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !8172, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !8172, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !8172, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !8172, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !8135, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !8135, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !8135, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !8135, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !8135, file: !90, line: 70, baseType: !8186, size: 64, offset: 832)
!8186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8187, size: 64)
!8187 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !8188)
!8188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !8189)
!8189 = !{!8190, !8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200}
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8188, file: !90, line: 111, baseType: !178, size: 32)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !8188, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !8188, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !8188, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !8188, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !8188, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !8188, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !8188, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !8188, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8188, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !8188, file: !90, line: 120, baseType: !8201, size: 64, offset: 320)
!8201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8202, size: 64)
!8202 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !8203)
!8203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !8204)
!8204 = !{!8205, !8206, !8207, !8208, !8209}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !8203, file: !58, line: 57, baseType: !6, size: 32)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !8203, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !8203, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8203, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !8203, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!8210 = !DILocalVariable(name: "ctx", arg: 1, scope: !8130, file: !528, line: 47, type: !8133)
!8211 = !DILocation(line: 47, column: 36, scope: !8130)
!8212 = !DILocalVariable(name: "template", arg: 2, scope: !8130, file: !528, line: 47, type: !6)
!8213 = !DILocation(line: 47, column: 45, scope: !8130)
!8214 = !DILocalVariable(name: "stats_size", scope: !8130, file: !528, line: 49, type: !6)
!8215 = !DILocation(line: 49, column: 7, scope: !8130)
!8216 = !DILocation(line: 49, column: 20, scope: !8130)
!8217 = !DILocation(line: 49, column: 29, scope: !8130)
!8218 = !DILocation(line: 50, column: 9, scope: !8130)
!8219 = !DILocation(line: 50, column: 18, scope: !8130)
!8220 = !DILocation(line: 51, column: 10, scope: !8130)
!8221 = !DILocation(line: 51, column: 3, scope: !8130)
!8222 = distinct !DISubprogram(name: "jbig2_decode_generic_region", scope: !528, file: !528, line: 491, type: !8223, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !527, retainedNodes: !70)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!6, !8133, !8170, !8225, !4988, !8201, !595}
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8226, size: 64)
!8226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8227)
!8227 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2GenericRegionParams", file: !5304, line: 33, baseType: !8228)
!8228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5304, line: 24, size: 192, elements: !8229)
!8229 = !{!8230, !8231, !8232, !8233, !8234}
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "MMR", scope: !8228, file: !5304, line: 25, baseType: !188, size: 32)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "GBTEMPLATE", scope: !8228, file: !5304, line: 28, baseType: !6, size: 32, offset: 32)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "TPGDON", scope: !8228, file: !5304, line: 29, baseType: !188, size: 32, offset: 64)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "USESKIP", scope: !8228, file: !5304, line: 30, baseType: !188, size: 32, offset: 96)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "gbat", scope: !8228, file: !5304, line: 32, baseType: !4563, size: 64, offset: 128)
!8235 = !DILocalVariable(name: "ctx", arg: 1, scope: !8222, file: !528, line: 491, type: !8133)
!8236 = !DILocation(line: 491, column: 39, scope: !8222)
!8237 = !DILocalVariable(name: "segment", arg: 2, scope: !8222, file: !528, line: 492, type: !8170)
!8238 = !DILocation(line: 492, column: 22, scope: !8222)
!8239 = !DILocalVariable(name: "params", arg: 3, scope: !8222, file: !528, line: 493, type: !8225)
!8240 = !DILocation(line: 493, column: 40, scope: !8222)
!8241 = !DILocalVariable(name: "as", arg: 4, scope: !8222, file: !528, line: 494, type: !4988)
!8242 = !DILocation(line: 494, column: 25, scope: !8222)
!8243 = !DILocalVariable(name: "image", arg: 5, scope: !8222, file: !528, line: 495, type: !8201)
!8244 = !DILocation(line: 495, column: 20, scope: !8222)
!8245 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !8222, file: !528, line: 496, type: !595)
!8246 = !DILocation(line: 496, column: 22, scope: !8222)
!8247 = !DILocalVariable(name: "gbat", scope: !8222, file: !528, line: 498, type: !8248)
!8248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8249, size: 64)
!8249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4564)
!8250 = !DILocation(line: 498, column: 17, scope: !8222)
!8251 = !DILocation(line: 498, column: 24, scope: !8222)
!8252 = !DILocation(line: 498, column: 32, scope: !8222)
!8253 = !DILocation(line: 500, column: 8, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8222, file: !528, line: 500, column: 7)
!8255 = !DILocation(line: 500, column: 16, scope: !8254)
!8256 = !DILocation(line: 500, column: 20, scope: !8254)
!8257 = !DILocation(line: 500, column: 23, scope: !8254)
!8258 = !DILocation(line: 500, column: 31, scope: !8254)
!8259 = !DILocation(line: 500, column: 42, scope: !8254)
!8260 = !DILocation(line: 500, column: 7, scope: !8222)
!8261 = !DILocation(line: 501, column: 9, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !528, line: 501, column: 9)
!8263 = distinct !DILexicalBlock(scope: !8254, file: !528, line: 500, column: 48)
!8264 = !DILocation(line: 501, column: 17, scope: !8262)
!8265 = !DILocation(line: 501, column: 23, scope: !8262)
!8266 = !DILocation(line: 501, column: 26, scope: !8262)
!8267 = !DILocation(line: 501, column: 34, scope: !8262)
!8268 = !DILocation(line: 501, column: 40, scope: !8262)
!8269 = !DILocation(line: 502, column: 9, scope: !8262)
!8270 = !DILocation(line: 502, column: 17, scope: !8262)
!8271 = !DILocation(line: 502, column: 23, scope: !8262)
!8272 = !DILocation(line: 502, column: 26, scope: !8262)
!8273 = !DILocation(line: 502, column: 34, scope: !8262)
!8274 = !DILocation(line: 502, column: 40, scope: !8262)
!8275 = !DILocation(line: 503, column: 9, scope: !8262)
!8276 = !DILocation(line: 503, column: 17, scope: !8262)
!8277 = !DILocation(line: 503, column: 23, scope: !8262)
!8278 = !DILocation(line: 503, column: 26, scope: !8262)
!8279 = !DILocation(line: 503, column: 34, scope: !8262)
!8280 = !DILocation(line: 503, column: 40, scope: !8262)
!8281 = !DILocation(line: 504, column: 9, scope: !8262)
!8282 = !DILocation(line: 504, column: 17, scope: !8262)
!8283 = !DILocation(line: 504, column: 23, scope: !8262)
!8284 = !DILocation(line: 504, column: 26, scope: !8262)
!8285 = !DILocation(line: 504, column: 34, scope: !8262)
!8286 = !DILocation(line: 501, column: 9, scope: !8263)
!8287 = !DILocation(line: 505, column: 45, scope: !8262)
!8288 = !DILocation(line: 505, column: 50, scope: !8262)
!8289 = !DILocation(line: 505, column: 59, scope: !8262)
!8290 = !DILocation(line: 506, column: 43, scope: !8262)
!8291 = !DILocation(line: 506, column: 47, scope: !8262)
!8292 = !DILocation(line: 506, column: 54, scope: !8262)
!8293 = !DILocation(line: 505, column: 14, scope: !8262)
!8294 = !DILocation(line: 505, column: 7, scope: !8262)
!8295 = !DILocation(line: 508, column: 51, scope: !8262)
!8296 = !DILocation(line: 508, column: 56, scope: !8262)
!8297 = !DILocation(line: 508, column: 65, scope: !8262)
!8298 = !DILocation(line: 509, column: 43, scope: !8262)
!8299 = !DILocation(line: 509, column: 47, scope: !8262)
!8300 = !DILocation(line: 509, column: 54, scope: !8262)
!8301 = !DILocation(line: 508, column: 14, scope: !8262)
!8302 = !DILocation(line: 508, column: 7, scope: !8262)
!8303 = !DILocation(line: 510, column: 15, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8254, file: !528, line: 510, column: 14)
!8305 = !DILocation(line: 510, column: 23, scope: !8304)
!8306 = !DILocation(line: 510, column: 27, scope: !8304)
!8307 = !DILocation(line: 510, column: 30, scope: !8304)
!8308 = !DILocation(line: 510, column: 38, scope: !8304)
!8309 = !DILocation(line: 510, column: 49, scope: !8304)
!8310 = !DILocation(line: 510, column: 14, scope: !8254)
!8311 = !DILocation(line: 511, column: 43, scope: !8304)
!8312 = !DILocation(line: 511, column: 48, scope: !8304)
!8313 = !DILocation(line: 511, column: 57, scope: !8304)
!8314 = !DILocation(line: 512, column: 8, scope: !8304)
!8315 = !DILocation(line: 512, column: 12, scope: !8304)
!8316 = !DILocation(line: 512, column: 19, scope: !8304)
!8317 = !DILocation(line: 511, column: 12, scope: !8304)
!8318 = !DILocation(line: 511, column: 5, scope: !8304)
!8319 = !DILocation(line: 513, column: 13, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8304, file: !528, line: 513, column: 12)
!8321 = !DILocation(line: 513, column: 21, scope: !8320)
!8322 = !DILocation(line: 513, column: 25, scope: !8320)
!8323 = !DILocation(line: 513, column: 28, scope: !8320)
!8324 = !DILocation(line: 513, column: 36, scope: !8320)
!8325 = !DILocation(line: 513, column: 47, scope: !8320)
!8326 = !DILocation(line: 513, column: 12, scope: !8304)
!8327 = !DILocation(line: 515, column: 11, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !528, line: 515, column: 11)
!8329 = distinct !DILexicalBlock(scope: !8320, file: !528, line: 514, column: 5)
!8330 = !DILocation(line: 515, column: 19, scope: !8328)
!8331 = !DILocation(line: 515, column: 24, scope: !8328)
!8332 = !DILocation(line: 515, column: 27, scope: !8328)
!8333 = !DILocation(line: 515, column: 35, scope: !8328)
!8334 = !DILocation(line: 515, column: 11, scope: !8329)
!8335 = !DILocation(line: 516, column: 41, scope: !8328)
!8336 = !DILocation(line: 516, column: 46, scope: !8328)
!8337 = !DILocation(line: 516, column: 55, scope: !8328)
!8338 = !DILocation(line: 517, column: 13, scope: !8328)
!8339 = !DILocation(line: 517, column: 17, scope: !8328)
!8340 = !DILocation(line: 517, column: 24, scope: !8328)
!8341 = !DILocation(line: 516, column: 9, scope: !8328)
!8342 = !DILocation(line: 516, column: 2, scope: !8328)
!8343 = !DILocation(line: 519, column: 40, scope: !8328)
!8344 = !DILocation(line: 519, column: 45, scope: !8328)
!8345 = !DILocation(line: 519, column: 54, scope: !8328)
!8346 = !DILocation(line: 520, column: 47, scope: !8328)
!8347 = !DILocation(line: 520, column: 51, scope: !8328)
!8348 = !DILocation(line: 520, column: 58, scope: !8328)
!8349 = !DILocation(line: 519, column: 9, scope: !8328)
!8350 = !DILocation(line: 519, column: 2, scope: !8328)
!8351 = !DILocation(line: 522, column: 13, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8320, file: !528, line: 522, column: 12)
!8353 = !DILocation(line: 522, column: 21, scope: !8352)
!8354 = !DILocation(line: 522, column: 25, scope: !8352)
!8355 = !DILocation(line: 522, column: 28, scope: !8352)
!8356 = !DILocation(line: 522, column: 36, scope: !8352)
!8357 = !DILocation(line: 522, column: 47, scope: !8352)
!8358 = !DILocation(line: 522, column: 12, scope: !8320)
!8359 = !DILocation(line: 523, column: 8, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !528, line: 523, column: 8)
!8361 = distinct !DILexicalBlock(scope: !8352, file: !528, line: 522, column: 53)
!8362 = !DILocation(line: 523, column: 16, scope: !8360)
!8363 = !DILocation(line: 523, column: 21, scope: !8360)
!8364 = !DILocation(line: 523, column: 24, scope: !8360)
!8365 = !DILocation(line: 523, column: 32, scope: !8360)
!8366 = !DILocation(line: 523, column: 8, scope: !8361)
!8367 = !DILocation(line: 524, column: 50, scope: !8360)
!8368 = !DILocation(line: 524, column: 55, scope: !8360)
!8369 = !DILocation(line: 524, column: 64, scope: !8360)
!8370 = !DILocation(line: 525, column: 42, scope: !8360)
!8371 = !DILocation(line: 525, column: 46, scope: !8360)
!8372 = !DILocation(line: 525, column: 53, scope: !8360)
!8373 = !DILocation(line: 524, column: 13, scope: !8360)
!8374 = !DILocation(line: 524, column: 6, scope: !8360)
!8375 = !DILocation(line: 527, column: 50, scope: !8360)
!8376 = !DILocation(line: 527, column: 55, scope: !8360)
!8377 = !DILocation(line: 527, column: 64, scope: !8360)
!8378 = !DILocation(line: 528, column: 42, scope: !8360)
!8379 = !DILocation(line: 528, column: 46, scope: !8360)
!8380 = !DILocation(line: 528, column: 53, scope: !8360)
!8381 = !DILocation(line: 527, column: 13, scope: !8360)
!8382 = !DILocation(line: 527, column: 6, scope: !8360)
!8383 = !DILocalVariable(name: "i", scope: !8384, file: !528, line: 532, type: !6)
!8384 = distinct !DILexicalBlock(scope: !8222, file: !528, line: 531, column: 3)
!8385 = !DILocation(line: 532, column: 9, scope: !8384)
!8386 = !DILocation(line: 533, column: 12, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8384, file: !528, line: 533, column: 5)
!8388 = !DILocation(line: 533, column: 10, scope: !8387)
!8389 = !DILocation(line: 533, column: 17, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8387, file: !528, line: 533, column: 5)
!8391 = !DILocation(line: 533, column: 19, scope: !8390)
!8392 = !DILocation(line: 533, column: 5, scope: !8387)
!8393 = !DILocation(line: 534, column: 19, scope: !8390)
!8394 = !DILocation(line: 534, column: 46, scope: !8390)
!8395 = !DILocation(line: 534, column: 55, scope: !8390)
!8396 = !DILocation(line: 535, column: 26, scope: !8390)
!8397 = !DILocation(line: 535, column: 29, scope: !8390)
!8398 = !DILocation(line: 535, column: 37, scope: !8390)
!8399 = !DILocation(line: 535, column: 42, scope: !8390)
!8400 = !DILocation(line: 534, column: 7, scope: !8390)
!8401 = !DILocation(line: 533, column: 25, scope: !8390)
!8402 = !DILocation(line: 533, column: 5, scope: !8390)
!8403 = distinct !{!8403, !8392, !8404}
!8404 = !DILocation(line: 535, column: 44, scope: !8387)
!8405 = !DILocation(line: 537, column: 15, scope: !8222)
!8406 = !DILocation(line: 537, column: 44, scope: !8222)
!8407 = !DILocation(line: 537, column: 53, scope: !8222)
!8408 = !DILocation(line: 539, column: 8, scope: !8222)
!8409 = !DILocation(line: 539, column: 16, scope: !8222)
!8410 = !DILocation(line: 539, column: 21, scope: !8222)
!8411 = !DILocation(line: 539, column: 29, scope: !8222)
!8412 = !DILocation(line: 537, column: 3, scope: !8222)
!8413 = !DILocation(line: 540, column: 3, scope: !8222)
!8414 = !DILocation(line: 541, column: 1, scope: !8222)
!8415 = distinct !DISubprogram(name: "jbig2_decode_generic_template0", scope: !528, file: !528, line: 56, type: !8223, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !70)
!8416 = !DILocalVariable(name: "ctx", arg: 1, scope: !8415, file: !528, line: 56, type: !8133)
!8417 = !DILocation(line: 56, column: 42, scope: !8415)
!8418 = !DILocalVariable(name: "segment", arg: 2, scope: !8415, file: !528, line: 57, type: !8170)
!8419 = !DILocation(line: 57, column: 25, scope: !8415)
!8420 = !DILocalVariable(name: "params", arg: 3, scope: !8415, file: !528, line: 58, type: !8225)
!8421 = !DILocation(line: 58, column: 43, scope: !8415)
!8422 = !DILocalVariable(name: "as", arg: 4, scope: !8415, file: !528, line: 59, type: !4988)
!8423 = !DILocation(line: 59, column: 28, scope: !8415)
!8424 = !DILocalVariable(name: "image", arg: 5, scope: !8415, file: !528, line: 60, type: !8201)
!8425 = !DILocation(line: 60, column: 23, scope: !8415)
!8426 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !8415, file: !528, line: 61, type: !595)
!8427 = !DILocation(line: 61, column: 25, scope: !8415)
!8428 = !DILocalVariable(name: "GBW", scope: !8415, file: !528, line: 63, type: !5919)
!8429 = !DILocation(line: 63, column: 13, scope: !8415)
!8430 = !DILocation(line: 63, column: 19, scope: !8415)
!8431 = !DILocation(line: 63, column: 26, scope: !8415)
!8432 = !DILocalVariable(name: "GBH", scope: !8415, file: !528, line: 64, type: !5919)
!8433 = !DILocation(line: 64, column: 13, scope: !8415)
!8434 = !DILocation(line: 64, column: 19, scope: !8415)
!8435 = !DILocation(line: 64, column: 26, scope: !8415)
!8436 = !DILocalVariable(name: "rowstride", scope: !8415, file: !528, line: 65, type: !5919)
!8437 = !DILocation(line: 65, column: 13, scope: !8415)
!8438 = !DILocation(line: 65, column: 25, scope: !8415)
!8439 = !DILocation(line: 65, column: 32, scope: !8415)
!8440 = !DILocalVariable(name: "x", scope: !8415, file: !528, line: 66, type: !6)
!8441 = !DILocation(line: 66, column: 7, scope: !8415)
!8442 = !DILocalVariable(name: "y", scope: !8415, file: !528, line: 66, type: !6)
!8443 = !DILocation(line: 66, column: 10, scope: !8415)
!8444 = !DILocalVariable(name: "gbreg_line", scope: !8415, file: !528, line: 67, type: !144)
!8445 = !DILocation(line: 67, column: 9, scope: !8415)
!8446 = !DILocation(line: 67, column: 30, scope: !8415)
!8447 = !DILocation(line: 67, column: 37, scope: !8415)
!8448 = !DILocation(line: 75, column: 10, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8415, file: !528, line: 75, column: 3)
!8450 = !DILocation(line: 75, column: 8, scope: !8449)
!8451 = !DILocation(line: 75, column: 15, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8449, file: !528, line: 75, column: 3)
!8453 = !DILocation(line: 75, column: 19, scope: !8452)
!8454 = !DILocation(line: 75, column: 17, scope: !8452)
!8455 = !DILocation(line: 75, column: 3, scope: !8449)
!8456 = !DILocalVariable(name: "CONTEXT", scope: !8457, file: !528, line: 77, type: !32)
!8457 = distinct !DILexicalBlock(scope: !8452, file: !528, line: 76, column: 5)
!8458 = !DILocation(line: 77, column: 16, scope: !8457)
!8459 = !DILocalVariable(name: "line_m1", scope: !8457, file: !528, line: 78, type: !32)
!8460 = !DILocation(line: 78, column: 16, scope: !8457)
!8461 = !DILocalVariable(name: "line_m2", scope: !8457, file: !528, line: 79, type: !32)
!8462 = !DILocation(line: 79, column: 16, scope: !8457)
!8463 = !DILocalVariable(name: "padded_width", scope: !8457, file: !528, line: 80, type: !6)
!8464 = !DILocation(line: 80, column: 11, scope: !8457)
!8465 = !DILocation(line: 80, column: 27, scope: !8457)
!8466 = !DILocation(line: 80, column: 31, scope: !8457)
!8467 = !DILocation(line: 80, column: 36, scope: !8457)
!8468 = !DILocation(line: 82, column: 18, scope: !8457)
!8469 = !DILocation(line: 82, column: 20, scope: !8457)
!8470 = !DILocation(line: 82, column: 17, scope: !8457)
!8471 = !DILocation(line: 82, column: 28, scope: !8457)
!8472 = !DILocation(line: 82, column: 40, scope: !8457)
!8473 = !DILocation(line: 82, column: 39, scope: !8457)
!8474 = !DILocation(line: 82, column: 15, scope: !8457)
!8475 = !DILocation(line: 83, column: 18, scope: !8457)
!8476 = !DILocation(line: 83, column: 20, scope: !8457)
!8477 = !DILocation(line: 83, column: 17, scope: !8457)
!8478 = !DILocation(line: 83, column: 28, scope: !8457)
!8479 = !DILocation(line: 83, column: 41, scope: !8457)
!8480 = !DILocation(line: 83, column: 51, scope: !8457)
!8481 = !DILocation(line: 83, column: 39, scope: !8457)
!8482 = !DILocation(line: 83, column: 58, scope: !8457)
!8483 = !DILocation(line: 83, column: 15, scope: !8457)
!8484 = !DILocation(line: 84, column: 18, scope: !8457)
!8485 = !DILocation(line: 84, column: 26, scope: !8457)
!8486 = !DILocation(line: 84, column: 38, scope: !8457)
!8487 = !DILocation(line: 84, column: 46, scope: !8457)
!8488 = !DILocation(line: 84, column: 35, scope: !8457)
!8489 = !DILocation(line: 84, column: 15, scope: !8457)
!8490 = !DILocation(line: 87, column: 14, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8457, file: !528, line: 87, column: 7)
!8492 = !DILocation(line: 87, column: 12, scope: !8491)
!8493 = !DILocation(line: 87, column: 19, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8491, file: !528, line: 87, column: 7)
!8495 = !DILocation(line: 87, column: 23, scope: !8494)
!8496 = !DILocation(line: 87, column: 21, scope: !8494)
!8497 = !DILocation(line: 87, column: 7, scope: !8491)
!8498 = !DILocalVariable(name: "result", scope: !8499, file: !528, line: 89, type: !145)
!8499 = distinct !DILexicalBlock(scope: !8494, file: !528, line: 88, column: 2)
!8500 = !DILocation(line: 89, column: 9, scope: !8499)
!8501 = !DILocalVariable(name: "x_minor", scope: !8499, file: !528, line: 90, type: !6)
!8502 = !DILocation(line: 90, column: 8, scope: !8499)
!8503 = !DILocalVariable(name: "minor_width", scope: !8499, file: !528, line: 91, type: !6)
!8504 = !DILocation(line: 91, column: 8, scope: !8499)
!8505 = !DILocation(line: 91, column: 22, scope: !8499)
!8506 = !DILocation(line: 91, column: 28, scope: !8499)
!8507 = !DILocation(line: 91, column: 26, scope: !8499)
!8508 = !DILocation(line: 91, column: 30, scope: !8499)
!8509 = !DILocation(line: 91, column: 40, scope: !8499)
!8510 = !DILocation(line: 91, column: 46, scope: !8499)
!8511 = !DILocation(line: 91, column: 44, scope: !8499)
!8512 = !DILocation(line: 93, column: 8, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8499, file: !528, line: 93, column: 8)
!8514 = !DILocation(line: 93, column: 10, scope: !8513)
!8515 = !DILocation(line: 93, column: 8, scope: !8499)
!8516 = !DILocation(line: 94, column: 17, scope: !8513)
!8517 = !DILocation(line: 94, column: 25, scope: !8513)
!8518 = !DILocation(line: 95, column: 9, scope: !8513)
!8519 = !DILocation(line: 95, column: 11, scope: !8513)
!8520 = !DILocation(line: 95, column: 17, scope: !8513)
!8521 = !DILocation(line: 95, column: 15, scope: !8513)
!8522 = !DILocation(line: 95, column: 23, scope: !8513)
!8523 = !DILocation(line: 95, column: 35, scope: !8513)
!8524 = !DILocation(line: 95, column: 34, scope: !8513)
!8525 = !DILocation(line: 95, column: 48, scope: !8513)
!8526 = !DILocation(line: 95, column: 50, scope: !8513)
!8527 = !DILocation(line: 95, column: 45, scope: !8513)
!8528 = !DILocation(line: 95, column: 56, scope: !8513)
!8529 = !DILocation(line: 94, column: 31, scope: !8513)
!8530 = !DILocation(line: 94, column: 14, scope: !8513)
!8531 = !DILocation(line: 94, column: 6, scope: !8513)
!8532 = !DILocation(line: 97, column: 8, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8499, file: !528, line: 97, column: 8)
!8534 = !DILocation(line: 97, column: 10, scope: !8533)
!8535 = !DILocation(line: 97, column: 8, scope: !8499)
!8536 = !DILocation(line: 98, column: 17, scope: !8533)
!8537 = !DILocation(line: 98, column: 25, scope: !8533)
!8538 = !DILocation(line: 99, column: 9, scope: !8533)
!8539 = !DILocation(line: 99, column: 11, scope: !8533)
!8540 = !DILocation(line: 99, column: 17, scope: !8533)
!8541 = !DILocation(line: 99, column: 15, scope: !8533)
!8542 = !DILocation(line: 99, column: 23, scope: !8533)
!8543 = !DILocation(line: 99, column: 36, scope: !8533)
!8544 = !DILocation(line: 99, column: 46, scope: !8533)
!8545 = !DILocation(line: 99, column: 34, scope: !8533)
!8546 = !DILocation(line: 99, column: 55, scope: !8533)
!8547 = !DILocation(line: 99, column: 57, scope: !8533)
!8548 = !DILocation(line: 99, column: 52, scope: !8533)
!8549 = !DILocation(line: 99, column: 63, scope: !8533)
!8550 = !DILocation(line: 99, column: 68, scope: !8533)
!8551 = !DILocation(line: 98, column: 31, scope: !8533)
!8552 = !DILocation(line: 98, column: 14, scope: !8533)
!8553 = !DILocation(line: 98, column: 6, scope: !8533)
!8554 = !DILocation(line: 102, column: 17, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8499, file: !528, line: 102, column: 4)
!8556 = !DILocation(line: 102, column: 9, scope: !8555)
!8557 = !DILocation(line: 102, column: 22, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8555, file: !528, line: 102, column: 4)
!8559 = !DILocation(line: 102, column: 32, scope: !8558)
!8560 = !DILocation(line: 102, column: 30, scope: !8558)
!8561 = !DILocation(line: 102, column: 4, scope: !8555)
!8562 = !DILocalVariable(name: "bit", scope: !8563, file: !528, line: 104, type: !188)
!8563 = distinct !DILexicalBlock(scope: !8558, file: !528, line: 103, column: 6)
!8564 = !DILocation(line: 104, column: 13, scope: !8563)
!8565 = !DILocation(line: 106, column: 33, scope: !8563)
!8566 = !DILocation(line: 106, column: 38, scope: !8563)
!8567 = !DILocation(line: 106, column: 47, scope: !8563)
!8568 = !DILocation(line: 106, column: 14, scope: !8563)
!8569 = !DILocation(line: 106, column: 12, scope: !8563)
!8570 = !DILocation(line: 107, column: 18, scope: !8563)
!8571 = !DILocation(line: 107, column: 30, scope: !8563)
!8572 = !DILocation(line: 107, column: 28, scope: !8563)
!8573 = !DILocation(line: 107, column: 22, scope: !8563)
!8574 = !DILocation(line: 107, column: 15, scope: !8563)
!8575 = !DILocation(line: 108, column: 20, scope: !8563)
!8576 = !DILocation(line: 108, column: 28, scope: !8563)
!8577 = !DILocation(line: 108, column: 38, scope: !8563)
!8578 = !DILocation(line: 108, column: 46, scope: !8563)
!8579 = !DILocation(line: 108, column: 44, scope: !8563)
!8580 = !DILocation(line: 109, column: 5, scope: !8563)
!8581 = !DILocation(line: 109, column: 21, scope: !8563)
!8582 = !DILocation(line: 109, column: 19, scope: !8563)
!8583 = !DILocation(line: 109, column: 13, scope: !8563)
!8584 = !DILocation(line: 109, column: 31, scope: !8563)
!8585 = !DILocation(line: 108, column: 50, scope: !8563)
!8586 = !DILocation(line: 110, column: 5, scope: !8563)
!8587 = !DILocation(line: 110, column: 21, scope: !8563)
!8588 = !DILocation(line: 110, column: 19, scope: !8563)
!8589 = !DILocation(line: 110, column: 13, scope: !8563)
!8590 = !DILocation(line: 110, column: 31, scope: !8563)
!8591 = !DILocation(line: 109, column: 39, scope: !8563)
!8592 = !DILocation(line: 108, column: 16, scope: !8563)
!8593 = !DILocation(line: 111, column: 6, scope: !8563)
!8594 = !DILocation(line: 102, column: 52, scope: !8558)
!8595 = !DILocation(line: 102, column: 4, scope: !8558)
!8596 = distinct !{!8596, !8561, !8597}
!8597 = !DILocation(line: 111, column: 6, scope: !8555)
!8598 = !DILocation(line: 112, column: 25, scope: !8499)
!8599 = !DILocation(line: 112, column: 4, scope: !8499)
!8600 = !DILocation(line: 112, column: 15, scope: !8499)
!8601 = !DILocation(line: 112, column: 17, scope: !8499)
!8602 = !DILocation(line: 112, column: 23, scope: !8499)
!8603 = !DILocation(line: 113, column: 2, scope: !8499)
!8604 = !DILocation(line: 87, column: 39, scope: !8494)
!8605 = !DILocation(line: 87, column: 7, scope: !8494)
!8606 = distinct !{!8606, !8497, !8607}
!8607 = !DILocation(line: 113, column: 2, scope: !8491)
!8608 = !DILocation(line: 117, column: 21, scope: !8457)
!8609 = !DILocation(line: 117, column: 18, scope: !8457)
!8610 = !DILocation(line: 118, column: 5, scope: !8457)
!8611 = !DILocation(line: 75, column: 25, scope: !8452)
!8612 = !DILocation(line: 75, column: 3, scope: !8452)
!8613 = distinct !{!8613, !8455, !8614}
!8614 = !DILocation(line: 118, column: 5, scope: !8449)
!8615 = !DILocation(line: 120, column: 3, scope: !8415)
!8616 = distinct !DISubprogram(name: "jbig2_decode_generic_template0_unopt", scope: !528, file: !528, line: 124, type: !8223, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !70)
!8617 = !DILocalVariable(name: "ctx", arg: 1, scope: !8616, file: !528, line: 124, type: !8133)
!8618 = !DILocation(line: 124, column: 48, scope: !8616)
!8619 = !DILocalVariable(name: "segment", arg: 2, scope: !8616, file: !528, line: 125, type: !8170)
!8620 = !DILocation(line: 125, column: 46, scope: !8616)
!8621 = !DILocalVariable(name: "params", arg: 3, scope: !8616, file: !528, line: 126, type: !8225)
!8622 = !DILocation(line: 126, column: 64, scope: !8616)
!8623 = !DILocalVariable(name: "as", arg: 4, scope: !8616, file: !528, line: 127, type: !4988)
!8624 = !DILocation(line: 127, column: 49, scope: !8616)
!8625 = !DILocalVariable(name: "image", arg: 5, scope: !8616, file: !528, line: 128, type: !8201)
!8626 = !DILocation(line: 128, column: 44, scope: !8616)
!8627 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !8616, file: !528, line: 129, type: !595)
!8628 = !DILocation(line: 129, column: 46, scope: !8616)
!8629 = !DILocalVariable(name: "GBW", scope: !8616, file: !528, line: 131, type: !5919)
!8630 = !DILocation(line: 131, column: 13, scope: !8616)
!8631 = !DILocation(line: 131, column: 19, scope: !8616)
!8632 = !DILocation(line: 131, column: 26, scope: !8616)
!8633 = !DILocalVariable(name: "GBH", scope: !8616, file: !528, line: 132, type: !5919)
!8634 = !DILocation(line: 132, column: 13, scope: !8616)
!8635 = !DILocation(line: 132, column: 19, scope: !8616)
!8636 = !DILocation(line: 132, column: 26, scope: !8616)
!8637 = !DILocalVariable(name: "CONTEXT", scope: !8616, file: !528, line: 133, type: !32)
!8638 = !DILocation(line: 133, column: 12, scope: !8616)
!8639 = !DILocalVariable(name: "x", scope: !8616, file: !528, line: 134, type: !6)
!8640 = !DILocation(line: 134, column: 7, scope: !8616)
!8641 = !DILocalVariable(name: "y", scope: !8616, file: !528, line: 134, type: !6)
!8642 = !DILocation(line: 134, column: 9, scope: !8616)
!8643 = !DILocalVariable(name: "bit", scope: !8616, file: !528, line: 135, type: !188)
!8644 = !DILocation(line: 135, column: 8, scope: !8616)
!8645 = !DILocation(line: 139, column: 10, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8616, file: !528, line: 139, column: 3)
!8647 = !DILocation(line: 139, column: 8, scope: !8646)
!8648 = !DILocation(line: 139, column: 15, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8646, file: !528, line: 139, column: 3)
!8650 = !DILocation(line: 139, column: 19, scope: !8649)
!8651 = !DILocation(line: 139, column: 17, scope: !8649)
!8652 = !DILocation(line: 139, column: 3, scope: !8646)
!8653 = !DILocation(line: 140, column: 12, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !528, line: 140, column: 5)
!8655 = distinct !DILexicalBlock(scope: !8649, file: !528, line: 139, column: 29)
!8656 = !DILocation(line: 140, column: 10, scope: !8654)
!8657 = !DILocation(line: 140, column: 17, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8654, file: !528, line: 140, column: 5)
!8659 = !DILocation(line: 140, column: 21, scope: !8658)
!8660 = !DILocation(line: 140, column: 19, scope: !8658)
!8661 = !DILocation(line: 140, column: 5, scope: !8654)
!8662 = !DILocation(line: 141, column: 15, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8658, file: !528, line: 140, column: 31)
!8664 = !DILocation(line: 142, column: 40, scope: !8663)
!8665 = !DILocation(line: 142, column: 47, scope: !8663)
!8666 = !DILocation(line: 142, column: 49, scope: !8663)
!8667 = !DILocation(line: 142, column: 54, scope: !8663)
!8668 = !DILocation(line: 142, column: 18, scope: !8663)
!8669 = !DILocation(line: 142, column: 57, scope: !8663)
!8670 = !DILocation(line: 142, column: 15, scope: !8663)
!8671 = !DILocation(line: 143, column: 40, scope: !8663)
!8672 = !DILocation(line: 143, column: 47, scope: !8663)
!8673 = !DILocation(line: 143, column: 49, scope: !8663)
!8674 = !DILocation(line: 143, column: 54, scope: !8663)
!8675 = !DILocation(line: 143, column: 18, scope: !8663)
!8676 = !DILocation(line: 143, column: 57, scope: !8663)
!8677 = !DILocation(line: 143, column: 15, scope: !8663)
!8678 = !DILocation(line: 144, column: 40, scope: !8663)
!8679 = !DILocation(line: 144, column: 47, scope: !8663)
!8680 = !DILocation(line: 144, column: 49, scope: !8663)
!8681 = !DILocation(line: 144, column: 54, scope: !8663)
!8682 = !DILocation(line: 144, column: 18, scope: !8663)
!8683 = !DILocation(line: 144, column: 57, scope: !8663)
!8684 = !DILocation(line: 144, column: 15, scope: !8663)
!8685 = !DILocation(line: 145, column: 40, scope: !8663)
!8686 = !DILocation(line: 145, column: 47, scope: !8663)
!8687 = !DILocation(line: 145, column: 49, scope: !8663)
!8688 = !DILocation(line: 145, column: 54, scope: !8663)
!8689 = !DILocation(line: 145, column: 18, scope: !8663)
!8690 = !DILocation(line: 145, column: 57, scope: !8663)
!8691 = !DILocation(line: 145, column: 15, scope: !8663)
!8692 = !DILocation(line: 146, column: 40, scope: !8663)
!8693 = !DILocation(line: 146, column: 47, scope: !8663)
!8694 = !DILocation(line: 146, column: 51, scope: !8663)
!8695 = !DILocation(line: 146, column: 59, scope: !8663)
!8696 = !DILocation(line: 146, column: 49, scope: !8663)
!8697 = !DILocation(line: 147, column: 2, scope: !8663)
!8698 = !DILocation(line: 147, column: 6, scope: !8663)
!8699 = !DILocation(line: 147, column: 14, scope: !8663)
!8700 = !DILocation(line: 147, column: 4, scope: !8663)
!8701 = !DILocation(line: 146, column: 18, scope: !8663)
!8702 = !DILocation(line: 147, column: 23, scope: !8663)
!8703 = !DILocation(line: 146, column: 15, scope: !8663)
!8704 = !DILocation(line: 148, column: 40, scope: !8663)
!8705 = !DILocation(line: 148, column: 47, scope: !8663)
!8706 = !DILocation(line: 148, column: 49, scope: !8663)
!8707 = !DILocation(line: 148, column: 54, scope: !8663)
!8708 = !DILocation(line: 148, column: 56, scope: !8663)
!8709 = !DILocation(line: 148, column: 18, scope: !8663)
!8710 = !DILocation(line: 148, column: 61, scope: !8663)
!8711 = !DILocation(line: 148, column: 15, scope: !8663)
!8712 = !DILocation(line: 149, column: 40, scope: !8663)
!8713 = !DILocation(line: 149, column: 47, scope: !8663)
!8714 = !DILocation(line: 149, column: 49, scope: !8663)
!8715 = !DILocation(line: 149, column: 54, scope: !8663)
!8716 = !DILocation(line: 149, column: 56, scope: !8663)
!8717 = !DILocation(line: 149, column: 18, scope: !8663)
!8718 = !DILocation(line: 149, column: 61, scope: !8663)
!8719 = !DILocation(line: 149, column: 15, scope: !8663)
!8720 = !DILocation(line: 150, column: 40, scope: !8663)
!8721 = !DILocation(line: 150, column: 47, scope: !8663)
!8722 = !DILocation(line: 150, column: 49, scope: !8663)
!8723 = !DILocation(line: 150, column: 54, scope: !8663)
!8724 = !DILocation(line: 150, column: 56, scope: !8663)
!8725 = !DILocation(line: 150, column: 18, scope: !8663)
!8726 = !DILocation(line: 150, column: 61, scope: !8663)
!8727 = !DILocation(line: 150, column: 15, scope: !8663)
!8728 = !DILocation(line: 151, column: 40, scope: !8663)
!8729 = !DILocation(line: 151, column: 47, scope: !8663)
!8730 = !DILocation(line: 151, column: 49, scope: !8663)
!8731 = !DILocation(line: 151, column: 54, scope: !8663)
!8732 = !DILocation(line: 151, column: 56, scope: !8663)
!8733 = !DILocation(line: 151, column: 18, scope: !8663)
!8734 = !DILocation(line: 151, column: 61, scope: !8663)
!8735 = !DILocation(line: 151, column: 15, scope: !8663)
!8736 = !DILocation(line: 152, column: 40, scope: !8663)
!8737 = !DILocation(line: 152, column: 47, scope: !8663)
!8738 = !DILocation(line: 152, column: 49, scope: !8663)
!8739 = !DILocation(line: 152, column: 54, scope: !8663)
!8740 = !DILocation(line: 152, column: 56, scope: !8663)
!8741 = !DILocation(line: 152, column: 18, scope: !8663)
!8742 = !DILocation(line: 152, column: 61, scope: !8663)
!8743 = !DILocation(line: 152, column: 15, scope: !8663)
!8744 = !DILocation(line: 153, column: 40, scope: !8663)
!8745 = !DILocation(line: 153, column: 47, scope: !8663)
!8746 = !DILocation(line: 153, column: 51, scope: !8663)
!8747 = !DILocation(line: 153, column: 59, scope: !8663)
!8748 = !DILocation(line: 153, column: 49, scope: !8663)
!8749 = !DILocation(line: 154, column: 2, scope: !8663)
!8750 = !DILocation(line: 154, column: 6, scope: !8663)
!8751 = !DILocation(line: 154, column: 14, scope: !8663)
!8752 = !DILocation(line: 154, column: 4, scope: !8663)
!8753 = !DILocation(line: 153, column: 18, scope: !8663)
!8754 = !DILocation(line: 154, column: 23, scope: !8663)
!8755 = !DILocation(line: 153, column: 15, scope: !8663)
!8756 = !DILocation(line: 155, column: 40, scope: !8663)
!8757 = !DILocation(line: 155, column: 47, scope: !8663)
!8758 = !DILocation(line: 155, column: 51, scope: !8663)
!8759 = !DILocation(line: 155, column: 59, scope: !8663)
!8760 = !DILocation(line: 155, column: 49, scope: !8663)
!8761 = !DILocation(line: 156, column: 2, scope: !8663)
!8762 = !DILocation(line: 156, column: 6, scope: !8663)
!8763 = !DILocation(line: 156, column: 14, scope: !8663)
!8764 = !DILocation(line: 156, column: 4, scope: !8663)
!8765 = !DILocation(line: 155, column: 18, scope: !8663)
!8766 = !DILocation(line: 156, column: 23, scope: !8663)
!8767 = !DILocation(line: 155, column: 15, scope: !8663)
!8768 = !DILocation(line: 157, column: 40, scope: !8663)
!8769 = !DILocation(line: 157, column: 47, scope: !8663)
!8770 = !DILocation(line: 157, column: 49, scope: !8663)
!8771 = !DILocation(line: 157, column: 54, scope: !8663)
!8772 = !DILocation(line: 157, column: 56, scope: !8663)
!8773 = !DILocation(line: 157, column: 18, scope: !8663)
!8774 = !DILocation(line: 157, column: 61, scope: !8663)
!8775 = !DILocation(line: 157, column: 15, scope: !8663)
!8776 = !DILocation(line: 158, column: 40, scope: !8663)
!8777 = !DILocation(line: 158, column: 47, scope: !8663)
!8778 = !DILocation(line: 158, column: 49, scope: !8663)
!8779 = !DILocation(line: 158, column: 54, scope: !8663)
!8780 = !DILocation(line: 158, column: 56, scope: !8663)
!8781 = !DILocation(line: 158, column: 18, scope: !8663)
!8782 = !DILocation(line: 158, column: 61, scope: !8663)
!8783 = !DILocation(line: 158, column: 15, scope: !8663)
!8784 = !DILocation(line: 159, column: 40, scope: !8663)
!8785 = !DILocation(line: 159, column: 47, scope: !8663)
!8786 = !DILocation(line: 159, column: 49, scope: !8663)
!8787 = !DILocation(line: 159, column: 54, scope: !8663)
!8788 = !DILocation(line: 159, column: 56, scope: !8663)
!8789 = !DILocation(line: 159, column: 18, scope: !8663)
!8790 = !DILocation(line: 159, column: 61, scope: !8663)
!8791 = !DILocation(line: 159, column: 15, scope: !8663)
!8792 = !DILocation(line: 160, column: 40, scope: !8663)
!8793 = !DILocation(line: 160, column: 47, scope: !8663)
!8794 = !DILocation(line: 160, column: 51, scope: !8663)
!8795 = !DILocation(line: 160, column: 59, scope: !8663)
!8796 = !DILocation(line: 160, column: 49, scope: !8663)
!8797 = !DILocation(line: 161, column: 2, scope: !8663)
!8798 = !DILocation(line: 161, column: 6, scope: !8663)
!8799 = !DILocation(line: 161, column: 14, scope: !8663)
!8800 = !DILocation(line: 161, column: 4, scope: !8663)
!8801 = !DILocation(line: 160, column: 18, scope: !8663)
!8802 = !DILocation(line: 161, column: 23, scope: !8663)
!8803 = !DILocation(line: 160, column: 15, scope: !8663)
!8804 = !DILocation(line: 162, column: 32, scope: !8663)
!8805 = !DILocation(line: 162, column: 37, scope: !8663)
!8806 = !DILocation(line: 162, column: 46, scope: !8663)
!8807 = !DILocation(line: 162, column: 13, scope: !8663)
!8808 = !DILocation(line: 162, column: 11, scope: !8663)
!8809 = !DILocation(line: 163, column: 29, scope: !8663)
!8810 = !DILocation(line: 163, column: 36, scope: !8663)
!8811 = !DILocation(line: 163, column: 39, scope: !8663)
!8812 = !DILocation(line: 163, column: 42, scope: !8663)
!8813 = !DILocation(line: 163, column: 7, scope: !8663)
!8814 = !DILocation(line: 164, column: 5, scope: !8663)
!8815 = !DILocation(line: 140, column: 27, scope: !8658)
!8816 = !DILocation(line: 140, column: 5, scope: !8658)
!8817 = distinct !{!8817, !8661, !8818}
!8818 = !DILocation(line: 164, column: 5, scope: !8654)
!8819 = !DILocation(line: 165, column: 3, scope: !8655)
!8820 = !DILocation(line: 139, column: 25, scope: !8649)
!8821 = !DILocation(line: 139, column: 3, scope: !8649)
!8822 = distinct !{!8822, !8652, !8823}
!8823 = !DILocation(line: 165, column: 3, scope: !8646)
!8824 = !DILocation(line: 166, column: 3, scope: !8616)
!8825 = distinct !DISubprogram(name: "jbig2_decode_generic_template1", scope: !528, file: !528, line: 170, type: !8223, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !70)
!8826 = !DILocalVariable(name: "ctx", arg: 1, scope: !8825, file: !528, line: 170, type: !8133)
!8827 = !DILocation(line: 170, column: 42, scope: !8825)
!8828 = !DILocalVariable(name: "segment", arg: 2, scope: !8825, file: !528, line: 171, type: !8170)
!8829 = !DILocation(line: 171, column: 25, scope: !8825)
!8830 = !DILocalVariable(name: "params", arg: 3, scope: !8825, file: !528, line: 172, type: !8225)
!8831 = !DILocation(line: 172, column: 43, scope: !8825)
!8832 = !DILocalVariable(name: "as", arg: 4, scope: !8825, file: !528, line: 173, type: !4988)
!8833 = !DILocation(line: 173, column: 28, scope: !8825)
!8834 = !DILocalVariable(name: "image", arg: 5, scope: !8825, file: !528, line: 174, type: !8201)
!8835 = !DILocation(line: 174, column: 23, scope: !8825)
!8836 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !8825, file: !528, line: 175, type: !595)
!8837 = !DILocation(line: 175, column: 25, scope: !8825)
!8838 = !DILocalVariable(name: "GBW", scope: !8825, file: !528, line: 177, type: !5919)
!8839 = !DILocation(line: 177, column: 13, scope: !8825)
!8840 = !DILocation(line: 177, column: 19, scope: !8825)
!8841 = !DILocation(line: 177, column: 26, scope: !8825)
!8842 = !DILocalVariable(name: "GBH", scope: !8825, file: !528, line: 178, type: !5919)
!8843 = !DILocation(line: 178, column: 13, scope: !8825)
!8844 = !DILocation(line: 178, column: 19, scope: !8825)
!8845 = !DILocation(line: 178, column: 26, scope: !8825)
!8846 = !DILocalVariable(name: "rowstride", scope: !8825, file: !528, line: 179, type: !5919)
!8847 = !DILocation(line: 179, column: 13, scope: !8825)
!8848 = !DILocation(line: 179, column: 25, scope: !8825)
!8849 = !DILocation(line: 179, column: 32, scope: !8825)
!8850 = !DILocalVariable(name: "x", scope: !8825, file: !528, line: 180, type: !6)
!8851 = !DILocation(line: 180, column: 7, scope: !8825)
!8852 = !DILocalVariable(name: "y", scope: !8825, file: !528, line: 180, type: !6)
!8853 = !DILocation(line: 180, column: 10, scope: !8825)
!8854 = !DILocalVariable(name: "gbreg_line", scope: !8825, file: !528, line: 181, type: !144)
!8855 = !DILocation(line: 181, column: 9, scope: !8825)
!8856 = !DILocation(line: 181, column: 30, scope: !8825)
!8857 = !DILocation(line: 181, column: 37, scope: !8825)
!8858 = !DILocation(line: 189, column: 10, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8825, file: !528, line: 189, column: 3)
!8860 = !DILocation(line: 189, column: 8, scope: !8859)
!8861 = !DILocation(line: 189, column: 15, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8859, file: !528, line: 189, column: 3)
!8863 = !DILocation(line: 189, column: 19, scope: !8862)
!8864 = !DILocation(line: 189, column: 17, scope: !8862)
!8865 = !DILocation(line: 189, column: 3, scope: !8859)
!8866 = !DILocalVariable(name: "CONTEXT", scope: !8867, file: !528, line: 191, type: !32)
!8867 = distinct !DILexicalBlock(scope: !8862, file: !528, line: 190, column: 5)
!8868 = !DILocation(line: 191, column: 16, scope: !8867)
!8869 = !DILocalVariable(name: "line_m1", scope: !8867, file: !528, line: 192, type: !32)
!8870 = !DILocation(line: 192, column: 16, scope: !8867)
!8871 = !DILocalVariable(name: "line_m2", scope: !8867, file: !528, line: 193, type: !32)
!8872 = !DILocation(line: 193, column: 16, scope: !8867)
!8873 = !DILocalVariable(name: "padded_width", scope: !8867, file: !528, line: 194, type: !6)
!8874 = !DILocation(line: 194, column: 11, scope: !8867)
!8875 = !DILocation(line: 194, column: 27, scope: !8867)
!8876 = !DILocation(line: 194, column: 31, scope: !8867)
!8877 = !DILocation(line: 194, column: 36, scope: !8867)
!8878 = !DILocation(line: 196, column: 18, scope: !8867)
!8879 = !DILocation(line: 196, column: 20, scope: !8867)
!8880 = !DILocation(line: 196, column: 17, scope: !8867)
!8881 = !DILocation(line: 196, column: 28, scope: !8867)
!8882 = !DILocation(line: 196, column: 40, scope: !8867)
!8883 = !DILocation(line: 196, column: 39, scope: !8867)
!8884 = !DILocation(line: 196, column: 15, scope: !8867)
!8885 = !DILocation(line: 197, column: 18, scope: !8867)
!8886 = !DILocation(line: 197, column: 20, scope: !8867)
!8887 = !DILocation(line: 197, column: 17, scope: !8867)
!8888 = !DILocation(line: 197, column: 28, scope: !8867)
!8889 = !DILocation(line: 197, column: 41, scope: !8867)
!8890 = !DILocation(line: 197, column: 51, scope: !8867)
!8891 = !DILocation(line: 197, column: 39, scope: !8867)
!8892 = !DILocation(line: 197, column: 58, scope: !8867)
!8893 = !DILocation(line: 197, column: 15, scope: !8867)
!8894 = !DILocation(line: 198, column: 19, scope: !8867)
!8895 = !DILocation(line: 198, column: 27, scope: !8867)
!8896 = !DILocation(line: 198, column: 33, scope: !8867)
!8897 = !DILocation(line: 198, column: 46, scope: !8867)
!8898 = !DILocation(line: 198, column: 54, scope: !8867)
!8899 = !DILocation(line: 198, column: 60, scope: !8867)
!8900 = !DILocation(line: 198, column: 42, scope: !8867)
!8901 = !DILocation(line: 198, column: 15, scope: !8867)
!8902 = !DILocation(line: 201, column: 14, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8867, file: !528, line: 201, column: 7)
!8904 = !DILocation(line: 201, column: 12, scope: !8903)
!8905 = !DILocation(line: 201, column: 19, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8903, file: !528, line: 201, column: 7)
!8907 = !DILocation(line: 201, column: 23, scope: !8906)
!8908 = !DILocation(line: 201, column: 21, scope: !8906)
!8909 = !DILocation(line: 201, column: 7, scope: !8903)
!8910 = !DILocalVariable(name: "result", scope: !8911, file: !528, line: 203, type: !145)
!8911 = distinct !DILexicalBlock(scope: !8906, file: !528, line: 202, column: 2)
!8912 = !DILocation(line: 203, column: 9, scope: !8911)
!8913 = !DILocalVariable(name: "x_minor", scope: !8911, file: !528, line: 204, type: !6)
!8914 = !DILocation(line: 204, column: 8, scope: !8911)
!8915 = !DILocalVariable(name: "minor_width", scope: !8911, file: !528, line: 205, type: !6)
!8916 = !DILocation(line: 205, column: 8, scope: !8911)
!8917 = !DILocation(line: 205, column: 22, scope: !8911)
!8918 = !DILocation(line: 205, column: 28, scope: !8911)
!8919 = !DILocation(line: 205, column: 26, scope: !8911)
!8920 = !DILocation(line: 205, column: 30, scope: !8911)
!8921 = !DILocation(line: 205, column: 40, scope: !8911)
!8922 = !DILocation(line: 205, column: 46, scope: !8911)
!8923 = !DILocation(line: 205, column: 44, scope: !8911)
!8924 = !DILocation(line: 207, column: 8, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8911, file: !528, line: 207, column: 8)
!8926 = !DILocation(line: 207, column: 10, scope: !8925)
!8927 = !DILocation(line: 207, column: 8, scope: !8911)
!8928 = !DILocation(line: 208, column: 17, scope: !8925)
!8929 = !DILocation(line: 208, column: 25, scope: !8925)
!8930 = !DILocation(line: 209, column: 9, scope: !8925)
!8931 = !DILocation(line: 209, column: 11, scope: !8925)
!8932 = !DILocation(line: 209, column: 17, scope: !8925)
!8933 = !DILocation(line: 209, column: 15, scope: !8925)
!8934 = !DILocation(line: 209, column: 23, scope: !8925)
!8935 = !DILocation(line: 209, column: 35, scope: !8925)
!8936 = !DILocation(line: 209, column: 34, scope: !8925)
!8937 = !DILocation(line: 209, column: 48, scope: !8925)
!8938 = !DILocation(line: 209, column: 50, scope: !8925)
!8939 = !DILocation(line: 209, column: 45, scope: !8925)
!8940 = !DILocation(line: 209, column: 56, scope: !8925)
!8941 = !DILocation(line: 208, column: 31, scope: !8925)
!8942 = !DILocation(line: 208, column: 14, scope: !8925)
!8943 = !DILocation(line: 208, column: 6, scope: !8925)
!8944 = !DILocation(line: 211, column: 8, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8911, file: !528, line: 211, column: 8)
!8946 = !DILocation(line: 211, column: 10, scope: !8945)
!8947 = !DILocation(line: 211, column: 8, scope: !8911)
!8948 = !DILocation(line: 212, column: 17, scope: !8945)
!8949 = !DILocation(line: 212, column: 25, scope: !8945)
!8950 = !DILocation(line: 213, column: 9, scope: !8945)
!8951 = !DILocation(line: 213, column: 11, scope: !8945)
!8952 = !DILocation(line: 213, column: 17, scope: !8945)
!8953 = !DILocation(line: 213, column: 15, scope: !8945)
!8954 = !DILocation(line: 213, column: 23, scope: !8945)
!8955 = !DILocation(line: 213, column: 36, scope: !8945)
!8956 = !DILocation(line: 213, column: 46, scope: !8945)
!8957 = !DILocation(line: 213, column: 34, scope: !8945)
!8958 = !DILocation(line: 213, column: 55, scope: !8945)
!8959 = !DILocation(line: 213, column: 57, scope: !8945)
!8960 = !DILocation(line: 213, column: 52, scope: !8945)
!8961 = !DILocation(line: 213, column: 63, scope: !8945)
!8962 = !DILocation(line: 213, column: 68, scope: !8945)
!8963 = !DILocation(line: 212, column: 31, scope: !8945)
!8964 = !DILocation(line: 212, column: 14, scope: !8945)
!8965 = !DILocation(line: 212, column: 6, scope: !8945)
!8966 = !DILocation(line: 216, column: 17, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8911, file: !528, line: 216, column: 4)
!8968 = !DILocation(line: 216, column: 9, scope: !8967)
!8969 = !DILocation(line: 216, column: 22, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8967, file: !528, line: 216, column: 4)
!8971 = !DILocation(line: 216, column: 32, scope: !8970)
!8972 = !DILocation(line: 216, column: 30, scope: !8970)
!8973 = !DILocation(line: 216, column: 4, scope: !8967)
!8974 = !DILocalVariable(name: "bit", scope: !8975, file: !528, line: 218, type: !188)
!8975 = distinct !DILexicalBlock(scope: !8970, file: !528, line: 217, column: 6)
!8976 = !DILocation(line: 218, column: 13, scope: !8975)
!8977 = !DILocation(line: 220, column: 33, scope: !8975)
!8978 = !DILocation(line: 220, column: 38, scope: !8975)
!8979 = !DILocation(line: 220, column: 47, scope: !8975)
!8980 = !DILocation(line: 220, column: 14, scope: !8975)
!8981 = !DILocation(line: 220, column: 12, scope: !8975)
!8982 = !DILocation(line: 221, column: 18, scope: !8975)
!8983 = !DILocation(line: 221, column: 30, scope: !8975)
!8984 = !DILocation(line: 221, column: 28, scope: !8975)
!8985 = !DILocation(line: 221, column: 22, scope: !8975)
!8986 = !DILocation(line: 221, column: 15, scope: !8975)
!8987 = !DILocation(line: 222, column: 20, scope: !8975)
!8988 = !DILocation(line: 222, column: 28, scope: !8975)
!8989 = !DILocation(line: 222, column: 37, scope: !8975)
!8990 = !DILocation(line: 222, column: 45, scope: !8975)
!8991 = !DILocation(line: 222, column: 43, scope: !8975)
!8992 = !DILocation(line: 223, column: 5, scope: !8975)
!8993 = !DILocation(line: 223, column: 21, scope: !8975)
!8994 = !DILocation(line: 223, column: 19, scope: !8975)
!8995 = !DILocation(line: 223, column: 13, scope: !8975)
!8996 = !DILocation(line: 223, column: 31, scope: !8975)
!8997 = !DILocation(line: 222, column: 49, scope: !8975)
!8998 = !DILocation(line: 224, column: 5, scope: !8975)
!8999 = !DILocation(line: 224, column: 21, scope: !8975)
!9000 = !DILocation(line: 224, column: 19, scope: !8975)
!9001 = !DILocation(line: 224, column: 13, scope: !8975)
!9002 = !DILocation(line: 224, column: 31, scope: !8975)
!9003 = !DILocation(line: 223, column: 38, scope: !8975)
!9004 = !DILocation(line: 222, column: 16, scope: !8975)
!9005 = !DILocation(line: 225, column: 6, scope: !8975)
!9006 = !DILocation(line: 216, column: 52, scope: !8970)
!9007 = !DILocation(line: 216, column: 4, scope: !8970)
!9008 = distinct !{!9008, !8973, !9009}
!9009 = !DILocation(line: 225, column: 6, scope: !8967)
!9010 = !DILocation(line: 226, column: 25, scope: !8911)
!9011 = !DILocation(line: 226, column: 4, scope: !8911)
!9012 = !DILocation(line: 226, column: 15, scope: !8911)
!9013 = !DILocation(line: 226, column: 17, scope: !8911)
!9014 = !DILocation(line: 226, column: 23, scope: !8911)
!9015 = !DILocation(line: 227, column: 2, scope: !8911)
!9016 = !DILocation(line: 201, column: 39, scope: !8906)
!9017 = !DILocation(line: 201, column: 7, scope: !8906)
!9018 = distinct !{!9018, !8909, !9019}
!9019 = !DILocation(line: 227, column: 2, scope: !8903)
!9020 = !DILocation(line: 231, column: 21, scope: !8867)
!9021 = !DILocation(line: 231, column: 18, scope: !8867)
!9022 = !DILocation(line: 232, column: 5, scope: !8867)
!9023 = !DILocation(line: 189, column: 25, scope: !8862)
!9024 = !DILocation(line: 189, column: 3, scope: !8862)
!9025 = distinct !{!9025, !8865, !9026}
!9026 = !DILocation(line: 232, column: 5, scope: !8859)
!9027 = !DILocation(line: 234, column: 3, scope: !8825)
!9028 = distinct !DISubprogram(name: "jbig2_decode_generic_template2a", scope: !528, file: !528, line: 306, type: !8223, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !70)
!9029 = !DILocalVariable(name: "ctx", arg: 1, scope: !9028, file: !528, line: 306, type: !8133)
!9030 = !DILocation(line: 306, column: 43, scope: !9028)
!9031 = !DILocalVariable(name: "segment", arg: 2, scope: !9028, file: !528, line: 307, type: !8170)
!9032 = !DILocation(line: 307, column: 25, scope: !9028)
!9033 = !DILocalVariable(name: "params", arg: 3, scope: !9028, file: !528, line: 308, type: !8225)
!9034 = !DILocation(line: 308, column: 43, scope: !9028)
!9035 = !DILocalVariable(name: "as", arg: 4, scope: !9028, file: !528, line: 309, type: !4988)
!9036 = !DILocation(line: 309, column: 28, scope: !9028)
!9037 = !DILocalVariable(name: "image", arg: 5, scope: !9028, file: !528, line: 310, type: !8201)
!9038 = !DILocation(line: 310, column: 23, scope: !9028)
!9039 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !9028, file: !528, line: 311, type: !595)
!9040 = !DILocation(line: 311, column: 25, scope: !9028)
!9041 = !DILocalVariable(name: "GBW", scope: !9028, file: !528, line: 313, type: !5919)
!9042 = !DILocation(line: 313, column: 13, scope: !9028)
!9043 = !DILocation(line: 313, column: 19, scope: !9028)
!9044 = !DILocation(line: 313, column: 26, scope: !9028)
!9045 = !DILocalVariable(name: "GBH", scope: !9028, file: !528, line: 314, type: !5919)
!9046 = !DILocation(line: 314, column: 13, scope: !9028)
!9047 = !DILocation(line: 314, column: 19, scope: !9028)
!9048 = !DILocation(line: 314, column: 26, scope: !9028)
!9049 = !DILocalVariable(name: "rowstride", scope: !9028, file: !528, line: 315, type: !5919)
!9050 = !DILocation(line: 315, column: 13, scope: !9028)
!9051 = !DILocation(line: 315, column: 25, scope: !9028)
!9052 = !DILocation(line: 315, column: 32, scope: !9028)
!9053 = !DILocalVariable(name: "x", scope: !9028, file: !528, line: 316, type: !6)
!9054 = !DILocation(line: 316, column: 7, scope: !9028)
!9055 = !DILocalVariable(name: "y", scope: !9028, file: !528, line: 316, type: !6)
!9056 = !DILocation(line: 316, column: 10, scope: !9028)
!9057 = !DILocalVariable(name: "gbreg_line", scope: !9028, file: !528, line: 317, type: !144)
!9058 = !DILocation(line: 317, column: 9, scope: !9028)
!9059 = !DILocation(line: 317, column: 30, scope: !9028)
!9060 = !DILocation(line: 317, column: 37, scope: !9028)
!9061 = !DILocation(line: 325, column: 10, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9028, file: !528, line: 325, column: 3)
!9063 = !DILocation(line: 325, column: 8, scope: !9062)
!9064 = !DILocation(line: 325, column: 15, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9062, file: !528, line: 325, column: 3)
!9066 = !DILocation(line: 325, column: 19, scope: !9065)
!9067 = !DILocation(line: 325, column: 17, scope: !9065)
!9068 = !DILocation(line: 325, column: 3, scope: !9062)
!9069 = !DILocalVariable(name: "CONTEXT", scope: !9070, file: !528, line: 327, type: !32)
!9070 = distinct !DILexicalBlock(scope: !9065, file: !528, line: 326, column: 5)
!9071 = !DILocation(line: 327, column: 16, scope: !9070)
!9072 = !DILocalVariable(name: "line_m1", scope: !9070, file: !528, line: 328, type: !32)
!9073 = !DILocation(line: 328, column: 16, scope: !9070)
!9074 = !DILocalVariable(name: "line_m2", scope: !9070, file: !528, line: 329, type: !32)
!9075 = !DILocation(line: 329, column: 16, scope: !9070)
!9076 = !DILocalVariable(name: "padded_width", scope: !9070, file: !528, line: 330, type: !6)
!9077 = !DILocation(line: 330, column: 11, scope: !9070)
!9078 = !DILocation(line: 330, column: 27, scope: !9070)
!9079 = !DILocation(line: 330, column: 31, scope: !9070)
!9080 = !DILocation(line: 330, column: 36, scope: !9070)
!9081 = !DILocation(line: 332, column: 18, scope: !9070)
!9082 = !DILocation(line: 332, column: 20, scope: !9070)
!9083 = !DILocation(line: 332, column: 17, scope: !9070)
!9084 = !DILocation(line: 332, column: 28, scope: !9070)
!9085 = !DILocation(line: 332, column: 40, scope: !9070)
!9086 = !DILocation(line: 332, column: 39, scope: !9070)
!9087 = !DILocation(line: 332, column: 15, scope: !9070)
!9088 = !DILocation(line: 333, column: 18, scope: !9070)
!9089 = !DILocation(line: 333, column: 20, scope: !9070)
!9090 = !DILocation(line: 333, column: 17, scope: !9070)
!9091 = !DILocation(line: 333, column: 28, scope: !9070)
!9092 = !DILocation(line: 333, column: 41, scope: !9070)
!9093 = !DILocation(line: 333, column: 51, scope: !9070)
!9094 = !DILocation(line: 333, column: 39, scope: !9070)
!9095 = !DILocation(line: 333, column: 58, scope: !9070)
!9096 = !DILocation(line: 333, column: 15, scope: !9070)
!9097 = !DILocation(line: 334, column: 19, scope: !9070)
!9098 = !DILocation(line: 334, column: 27, scope: !9070)
!9099 = !DILocation(line: 334, column: 33, scope: !9070)
!9100 = !DILocation(line: 334, column: 45, scope: !9070)
!9101 = !DILocation(line: 334, column: 53, scope: !9070)
!9102 = !DILocation(line: 334, column: 59, scope: !9070)
!9103 = !DILocation(line: 334, column: 41, scope: !9070)
!9104 = !DILocation(line: 334, column: 70, scope: !9070)
!9105 = !DILocation(line: 334, column: 78, scope: !9070)
!9106 = !DILocation(line: 334, column: 84, scope: !9070)
!9107 = !DILocation(line: 334, column: 66, scope: !9070)
!9108 = !DILocation(line: 334, column: 15, scope: !9070)
!9109 = !DILocation(line: 337, column: 14, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9070, file: !528, line: 337, column: 7)
!9111 = !DILocation(line: 337, column: 12, scope: !9110)
!9112 = !DILocation(line: 337, column: 19, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9110, file: !528, line: 337, column: 7)
!9114 = !DILocation(line: 337, column: 23, scope: !9113)
!9115 = !DILocation(line: 337, column: 21, scope: !9113)
!9116 = !DILocation(line: 337, column: 7, scope: !9110)
!9117 = !DILocalVariable(name: "result", scope: !9118, file: !528, line: 339, type: !145)
!9118 = distinct !DILexicalBlock(scope: !9113, file: !528, line: 338, column: 2)
!9119 = !DILocation(line: 339, column: 9, scope: !9118)
!9120 = !DILocalVariable(name: "x_minor", scope: !9118, file: !528, line: 340, type: !6)
!9121 = !DILocation(line: 340, column: 8, scope: !9118)
!9122 = !DILocalVariable(name: "minor_width", scope: !9118, file: !528, line: 341, type: !6)
!9123 = !DILocation(line: 341, column: 8, scope: !9118)
!9124 = !DILocation(line: 341, column: 22, scope: !9118)
!9125 = !DILocation(line: 341, column: 28, scope: !9118)
!9126 = !DILocation(line: 341, column: 26, scope: !9118)
!9127 = !DILocation(line: 341, column: 30, scope: !9118)
!9128 = !DILocation(line: 341, column: 40, scope: !9118)
!9129 = !DILocation(line: 341, column: 46, scope: !9118)
!9130 = !DILocation(line: 341, column: 44, scope: !9118)
!9131 = !DILocation(line: 343, column: 8, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9118, file: !528, line: 343, column: 8)
!9133 = !DILocation(line: 343, column: 10, scope: !9132)
!9134 = !DILocation(line: 343, column: 8, scope: !9118)
!9135 = !DILocation(line: 344, column: 17, scope: !9132)
!9136 = !DILocation(line: 344, column: 25, scope: !9132)
!9137 = !DILocation(line: 345, column: 9, scope: !9132)
!9138 = !DILocation(line: 345, column: 11, scope: !9132)
!9139 = !DILocation(line: 345, column: 17, scope: !9132)
!9140 = !DILocation(line: 345, column: 15, scope: !9132)
!9141 = !DILocation(line: 345, column: 23, scope: !9132)
!9142 = !DILocation(line: 345, column: 35, scope: !9132)
!9143 = !DILocation(line: 345, column: 34, scope: !9132)
!9144 = !DILocation(line: 345, column: 48, scope: !9132)
!9145 = !DILocation(line: 345, column: 50, scope: !9132)
!9146 = !DILocation(line: 345, column: 45, scope: !9132)
!9147 = !DILocation(line: 345, column: 56, scope: !9132)
!9148 = !DILocation(line: 344, column: 31, scope: !9132)
!9149 = !DILocation(line: 344, column: 14, scope: !9132)
!9150 = !DILocation(line: 344, column: 6, scope: !9132)
!9151 = !DILocation(line: 347, column: 8, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9118, file: !528, line: 347, column: 8)
!9153 = !DILocation(line: 347, column: 10, scope: !9152)
!9154 = !DILocation(line: 347, column: 8, scope: !9118)
!9155 = !DILocation(line: 348, column: 17, scope: !9152)
!9156 = !DILocation(line: 348, column: 25, scope: !9152)
!9157 = !DILocation(line: 349, column: 9, scope: !9152)
!9158 = !DILocation(line: 349, column: 11, scope: !9152)
!9159 = !DILocation(line: 349, column: 17, scope: !9152)
!9160 = !DILocation(line: 349, column: 15, scope: !9152)
!9161 = !DILocation(line: 349, column: 23, scope: !9152)
!9162 = !DILocation(line: 349, column: 36, scope: !9152)
!9163 = !DILocation(line: 349, column: 46, scope: !9152)
!9164 = !DILocation(line: 349, column: 34, scope: !9152)
!9165 = !DILocation(line: 349, column: 55, scope: !9152)
!9166 = !DILocation(line: 349, column: 57, scope: !9152)
!9167 = !DILocation(line: 349, column: 52, scope: !9152)
!9168 = !DILocation(line: 349, column: 63, scope: !9152)
!9169 = !DILocation(line: 349, column: 68, scope: !9152)
!9170 = !DILocation(line: 348, column: 31, scope: !9152)
!9171 = !DILocation(line: 348, column: 14, scope: !9152)
!9172 = !DILocation(line: 348, column: 6, scope: !9152)
!9173 = !DILocation(line: 352, column: 17, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9118, file: !528, line: 352, column: 4)
!9175 = !DILocation(line: 352, column: 9, scope: !9174)
!9176 = !DILocation(line: 352, column: 22, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9174, file: !528, line: 352, column: 4)
!9178 = !DILocation(line: 352, column: 32, scope: !9177)
!9179 = !DILocation(line: 352, column: 30, scope: !9177)
!9180 = !DILocation(line: 352, column: 4, scope: !9174)
!9181 = !DILocalVariable(name: "bit", scope: !9182, file: !528, line: 354, type: !188)
!9182 = distinct !DILexicalBlock(scope: !9177, file: !528, line: 353, column: 6)
!9183 = !DILocation(line: 354, column: 13, scope: !9182)
!9184 = !DILocation(line: 356, column: 33, scope: !9182)
!9185 = !DILocation(line: 356, column: 38, scope: !9182)
!9186 = !DILocation(line: 356, column: 47, scope: !9182)
!9187 = !DILocation(line: 356, column: 14, scope: !9182)
!9188 = !DILocation(line: 356, column: 12, scope: !9182)
!9189 = !DILocation(line: 357, column: 18, scope: !9182)
!9190 = !DILocation(line: 357, column: 30, scope: !9182)
!9191 = !DILocation(line: 357, column: 28, scope: !9182)
!9192 = !DILocation(line: 357, column: 22, scope: !9182)
!9193 = !DILocation(line: 357, column: 15, scope: !9182)
!9194 = !DILocation(line: 358, column: 20, scope: !9182)
!9195 = !DILocation(line: 358, column: 28, scope: !9182)
!9196 = !DILocation(line: 358, column: 37, scope: !9182)
!9197 = !DILocation(line: 358, column: 45, scope: !9182)
!9198 = !DILocation(line: 358, column: 43, scope: !9182)
!9199 = !DILocation(line: 359, column: 5, scope: !9182)
!9200 = !DILocation(line: 359, column: 22, scope: !9182)
!9201 = !DILocation(line: 359, column: 20, scope: !9182)
!9202 = !DILocation(line: 359, column: 13, scope: !9182)
!9203 = !DILocation(line: 359, column: 32, scope: !9182)
!9204 = !DILocation(line: 358, column: 49, scope: !9182)
!9205 = !DILocation(line: 360, column: 5, scope: !9182)
!9206 = !DILocation(line: 360, column: 21, scope: !9182)
!9207 = !DILocation(line: 360, column: 19, scope: !9182)
!9208 = !DILocation(line: 360, column: 13, scope: !9182)
!9209 = !DILocation(line: 360, column: 31, scope: !9182)
!9210 = !DILocation(line: 359, column: 39, scope: !9182)
!9211 = !DILocation(line: 361, column: 5, scope: !9182)
!9212 = !DILocation(line: 361, column: 22, scope: !9182)
!9213 = !DILocation(line: 361, column: 20, scope: !9182)
!9214 = !DILocation(line: 361, column: 13, scope: !9182)
!9215 = !DILocation(line: 361, column: 32, scope: !9182)
!9216 = !DILocation(line: 360, column: 38, scope: !9182)
!9217 = !DILocation(line: 358, column: 16, scope: !9182)
!9218 = !DILocation(line: 362, column: 6, scope: !9182)
!9219 = !DILocation(line: 352, column: 52, scope: !9177)
!9220 = !DILocation(line: 352, column: 4, scope: !9177)
!9221 = distinct !{!9221, !9180, !9222}
!9222 = !DILocation(line: 362, column: 6, scope: !9174)
!9223 = !DILocation(line: 363, column: 25, scope: !9118)
!9224 = !DILocation(line: 363, column: 4, scope: !9118)
!9225 = !DILocation(line: 363, column: 15, scope: !9118)
!9226 = !DILocation(line: 363, column: 17, scope: !9118)
!9227 = !DILocation(line: 363, column: 23, scope: !9118)
!9228 = !DILocation(line: 364, column: 2, scope: !9118)
!9229 = !DILocation(line: 337, column: 39, scope: !9113)
!9230 = !DILocation(line: 337, column: 7, scope: !9113)
!9231 = distinct !{!9231, !9116, !9232}
!9232 = !DILocation(line: 364, column: 2, scope: !9110)
!9233 = !DILocation(line: 368, column: 21, scope: !9070)
!9234 = !DILocation(line: 368, column: 18, scope: !9070)
!9235 = !DILocation(line: 369, column: 5, scope: !9070)
!9236 = !DILocation(line: 325, column: 25, scope: !9065)
!9237 = !DILocation(line: 325, column: 3, scope: !9065)
!9238 = distinct !{!9238, !9068, !9239}
!9239 = !DILocation(line: 369, column: 5, scope: !9062)
!9240 = !DILocation(line: 371, column: 3, scope: !9028)
!9241 = distinct !DISubprogram(name: "jbig2_decode_generic_template2", scope: !528, file: !528, line: 238, type: !8223, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !70)
!9242 = !DILocalVariable(name: "ctx", arg: 1, scope: !9241, file: !528, line: 238, type: !8133)
!9243 = !DILocation(line: 238, column: 42, scope: !9241)
!9244 = !DILocalVariable(name: "segment", arg: 2, scope: !9241, file: !528, line: 239, type: !8170)
!9245 = !DILocation(line: 239, column: 25, scope: !9241)
!9246 = !DILocalVariable(name: "params", arg: 3, scope: !9241, file: !528, line: 240, type: !8225)
!9247 = !DILocation(line: 240, column: 43, scope: !9241)
!9248 = !DILocalVariable(name: "as", arg: 4, scope: !9241, file: !528, line: 241, type: !4988)
!9249 = !DILocation(line: 241, column: 28, scope: !9241)
!9250 = !DILocalVariable(name: "image", arg: 5, scope: !9241, file: !528, line: 242, type: !8201)
!9251 = !DILocation(line: 242, column: 23, scope: !9241)
!9252 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !9241, file: !528, line: 243, type: !595)
!9253 = !DILocation(line: 243, column: 25, scope: !9241)
!9254 = !DILocalVariable(name: "GBW", scope: !9241, file: !528, line: 245, type: !5919)
!9255 = !DILocation(line: 245, column: 13, scope: !9241)
!9256 = !DILocation(line: 245, column: 19, scope: !9241)
!9257 = !DILocation(line: 245, column: 26, scope: !9241)
!9258 = !DILocalVariable(name: "GBH", scope: !9241, file: !528, line: 246, type: !5919)
!9259 = !DILocation(line: 246, column: 13, scope: !9241)
!9260 = !DILocation(line: 246, column: 19, scope: !9241)
!9261 = !DILocation(line: 246, column: 26, scope: !9241)
!9262 = !DILocalVariable(name: "rowstride", scope: !9241, file: !528, line: 247, type: !5919)
!9263 = !DILocation(line: 247, column: 13, scope: !9241)
!9264 = !DILocation(line: 247, column: 25, scope: !9241)
!9265 = !DILocation(line: 247, column: 32, scope: !9241)
!9266 = !DILocalVariable(name: "x", scope: !9241, file: !528, line: 248, type: !6)
!9267 = !DILocation(line: 248, column: 7, scope: !9241)
!9268 = !DILocalVariable(name: "y", scope: !9241, file: !528, line: 248, type: !6)
!9269 = !DILocation(line: 248, column: 10, scope: !9241)
!9270 = !DILocalVariable(name: "gbreg_line", scope: !9241, file: !528, line: 249, type: !144)
!9271 = !DILocation(line: 249, column: 9, scope: !9241)
!9272 = !DILocation(line: 249, column: 30, scope: !9241)
!9273 = !DILocation(line: 249, column: 37, scope: !9241)
!9274 = !DILocation(line: 257, column: 10, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9241, file: !528, line: 257, column: 3)
!9276 = !DILocation(line: 257, column: 8, scope: !9275)
!9277 = !DILocation(line: 257, column: 15, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9275, file: !528, line: 257, column: 3)
!9279 = !DILocation(line: 257, column: 19, scope: !9278)
!9280 = !DILocation(line: 257, column: 17, scope: !9278)
!9281 = !DILocation(line: 257, column: 3, scope: !9275)
!9282 = !DILocalVariable(name: "CONTEXT", scope: !9283, file: !528, line: 259, type: !32)
!9283 = distinct !DILexicalBlock(scope: !9278, file: !528, line: 258, column: 5)
!9284 = !DILocation(line: 259, column: 16, scope: !9283)
!9285 = !DILocalVariable(name: "line_m1", scope: !9283, file: !528, line: 260, type: !32)
!9286 = !DILocation(line: 260, column: 16, scope: !9283)
!9287 = !DILocalVariable(name: "line_m2", scope: !9283, file: !528, line: 261, type: !32)
!9288 = !DILocation(line: 261, column: 16, scope: !9283)
!9289 = !DILocalVariable(name: "padded_width", scope: !9283, file: !528, line: 262, type: !6)
!9290 = !DILocation(line: 262, column: 11, scope: !9283)
!9291 = !DILocation(line: 262, column: 27, scope: !9283)
!9292 = !DILocation(line: 262, column: 31, scope: !9283)
!9293 = !DILocation(line: 262, column: 36, scope: !9283)
!9294 = !DILocation(line: 264, column: 18, scope: !9283)
!9295 = !DILocation(line: 264, column: 20, scope: !9283)
!9296 = !DILocation(line: 264, column: 17, scope: !9283)
!9297 = !DILocation(line: 264, column: 28, scope: !9283)
!9298 = !DILocation(line: 264, column: 40, scope: !9283)
!9299 = !DILocation(line: 264, column: 39, scope: !9283)
!9300 = !DILocation(line: 264, column: 15, scope: !9283)
!9301 = !DILocation(line: 265, column: 18, scope: !9283)
!9302 = !DILocation(line: 265, column: 20, scope: !9283)
!9303 = !DILocation(line: 265, column: 17, scope: !9283)
!9304 = !DILocation(line: 265, column: 28, scope: !9283)
!9305 = !DILocation(line: 265, column: 41, scope: !9283)
!9306 = !DILocation(line: 265, column: 51, scope: !9283)
!9307 = !DILocation(line: 265, column: 39, scope: !9283)
!9308 = !DILocation(line: 265, column: 58, scope: !9283)
!9309 = !DILocation(line: 265, column: 15, scope: !9283)
!9310 = !DILocation(line: 266, column: 19, scope: !9283)
!9311 = !DILocation(line: 266, column: 27, scope: !9283)
!9312 = !DILocation(line: 266, column: 33, scope: !9283)
!9313 = !DILocation(line: 266, column: 45, scope: !9283)
!9314 = !DILocation(line: 266, column: 53, scope: !9283)
!9315 = !DILocation(line: 266, column: 59, scope: !9283)
!9316 = !DILocation(line: 266, column: 41, scope: !9283)
!9317 = !DILocation(line: 266, column: 15, scope: !9283)
!9318 = !DILocation(line: 269, column: 14, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9283, file: !528, line: 269, column: 7)
!9320 = !DILocation(line: 269, column: 12, scope: !9319)
!9321 = !DILocation(line: 269, column: 19, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9319, file: !528, line: 269, column: 7)
!9323 = !DILocation(line: 269, column: 23, scope: !9322)
!9324 = !DILocation(line: 269, column: 21, scope: !9322)
!9325 = !DILocation(line: 269, column: 7, scope: !9319)
!9326 = !DILocalVariable(name: "result", scope: !9327, file: !528, line: 271, type: !145)
!9327 = distinct !DILexicalBlock(scope: !9322, file: !528, line: 270, column: 2)
!9328 = !DILocation(line: 271, column: 9, scope: !9327)
!9329 = !DILocalVariable(name: "x_minor", scope: !9327, file: !528, line: 272, type: !6)
!9330 = !DILocation(line: 272, column: 8, scope: !9327)
!9331 = !DILocalVariable(name: "minor_width", scope: !9327, file: !528, line: 273, type: !6)
!9332 = !DILocation(line: 273, column: 8, scope: !9327)
!9333 = !DILocation(line: 273, column: 22, scope: !9327)
!9334 = !DILocation(line: 273, column: 28, scope: !9327)
!9335 = !DILocation(line: 273, column: 26, scope: !9327)
!9336 = !DILocation(line: 273, column: 30, scope: !9327)
!9337 = !DILocation(line: 273, column: 40, scope: !9327)
!9338 = !DILocation(line: 273, column: 46, scope: !9327)
!9339 = !DILocation(line: 273, column: 44, scope: !9327)
!9340 = !DILocation(line: 275, column: 8, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9327, file: !528, line: 275, column: 8)
!9342 = !DILocation(line: 275, column: 10, scope: !9341)
!9343 = !DILocation(line: 275, column: 8, scope: !9327)
!9344 = !DILocation(line: 276, column: 17, scope: !9341)
!9345 = !DILocation(line: 276, column: 25, scope: !9341)
!9346 = !DILocation(line: 277, column: 9, scope: !9341)
!9347 = !DILocation(line: 277, column: 11, scope: !9341)
!9348 = !DILocation(line: 277, column: 17, scope: !9341)
!9349 = !DILocation(line: 277, column: 15, scope: !9341)
!9350 = !DILocation(line: 277, column: 23, scope: !9341)
!9351 = !DILocation(line: 277, column: 35, scope: !9341)
!9352 = !DILocation(line: 277, column: 34, scope: !9341)
!9353 = !DILocation(line: 277, column: 48, scope: !9341)
!9354 = !DILocation(line: 277, column: 50, scope: !9341)
!9355 = !DILocation(line: 277, column: 45, scope: !9341)
!9356 = !DILocation(line: 277, column: 56, scope: !9341)
!9357 = !DILocation(line: 276, column: 31, scope: !9341)
!9358 = !DILocation(line: 276, column: 14, scope: !9341)
!9359 = !DILocation(line: 276, column: 6, scope: !9341)
!9360 = !DILocation(line: 279, column: 8, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9327, file: !528, line: 279, column: 8)
!9362 = !DILocation(line: 279, column: 10, scope: !9361)
!9363 = !DILocation(line: 279, column: 8, scope: !9327)
!9364 = !DILocation(line: 280, column: 17, scope: !9361)
!9365 = !DILocation(line: 280, column: 25, scope: !9361)
!9366 = !DILocation(line: 281, column: 9, scope: !9361)
!9367 = !DILocation(line: 281, column: 11, scope: !9361)
!9368 = !DILocation(line: 281, column: 17, scope: !9361)
!9369 = !DILocation(line: 281, column: 15, scope: !9361)
!9370 = !DILocation(line: 281, column: 23, scope: !9361)
!9371 = !DILocation(line: 281, column: 36, scope: !9361)
!9372 = !DILocation(line: 281, column: 46, scope: !9361)
!9373 = !DILocation(line: 281, column: 34, scope: !9361)
!9374 = !DILocation(line: 281, column: 55, scope: !9361)
!9375 = !DILocation(line: 281, column: 57, scope: !9361)
!9376 = !DILocation(line: 281, column: 52, scope: !9361)
!9377 = !DILocation(line: 281, column: 63, scope: !9361)
!9378 = !DILocation(line: 281, column: 68, scope: !9361)
!9379 = !DILocation(line: 280, column: 31, scope: !9361)
!9380 = !DILocation(line: 280, column: 14, scope: !9361)
!9381 = !DILocation(line: 280, column: 6, scope: !9361)
!9382 = !DILocation(line: 284, column: 17, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9327, file: !528, line: 284, column: 4)
!9384 = !DILocation(line: 284, column: 9, scope: !9383)
!9385 = !DILocation(line: 284, column: 22, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9383, file: !528, line: 284, column: 4)
!9387 = !DILocation(line: 284, column: 32, scope: !9386)
!9388 = !DILocation(line: 284, column: 30, scope: !9386)
!9389 = !DILocation(line: 284, column: 4, scope: !9383)
!9390 = !DILocalVariable(name: "bit", scope: !9391, file: !528, line: 286, type: !188)
!9391 = distinct !DILexicalBlock(scope: !9386, file: !528, line: 285, column: 6)
!9392 = !DILocation(line: 286, column: 13, scope: !9391)
!9393 = !DILocation(line: 288, column: 33, scope: !9391)
!9394 = !DILocation(line: 288, column: 38, scope: !9391)
!9395 = !DILocation(line: 288, column: 47, scope: !9391)
!9396 = !DILocation(line: 288, column: 14, scope: !9391)
!9397 = !DILocation(line: 288, column: 12, scope: !9391)
!9398 = !DILocation(line: 289, column: 18, scope: !9391)
!9399 = !DILocation(line: 289, column: 30, scope: !9391)
!9400 = !DILocation(line: 289, column: 28, scope: !9391)
!9401 = !DILocation(line: 289, column: 22, scope: !9391)
!9402 = !DILocation(line: 289, column: 15, scope: !9391)
!9403 = !DILocation(line: 290, column: 20, scope: !9391)
!9404 = !DILocation(line: 290, column: 28, scope: !9391)
!9405 = !DILocation(line: 290, column: 37, scope: !9391)
!9406 = !DILocation(line: 290, column: 45, scope: !9391)
!9407 = !DILocation(line: 290, column: 43, scope: !9391)
!9408 = !DILocation(line: 291, column: 5, scope: !9391)
!9409 = !DILocation(line: 291, column: 22, scope: !9391)
!9410 = !DILocation(line: 291, column: 20, scope: !9391)
!9411 = !DILocation(line: 291, column: 13, scope: !9391)
!9412 = !DILocation(line: 291, column: 32, scope: !9391)
!9413 = !DILocation(line: 290, column: 49, scope: !9391)
!9414 = !DILocation(line: 292, column: 5, scope: !9391)
!9415 = !DILocation(line: 292, column: 22, scope: !9391)
!9416 = !DILocation(line: 292, column: 20, scope: !9391)
!9417 = !DILocation(line: 292, column: 13, scope: !9391)
!9418 = !DILocation(line: 292, column: 32, scope: !9391)
!9419 = !DILocation(line: 291, column: 39, scope: !9391)
!9420 = !DILocation(line: 290, column: 16, scope: !9391)
!9421 = !DILocation(line: 293, column: 6, scope: !9391)
!9422 = !DILocation(line: 284, column: 52, scope: !9386)
!9423 = !DILocation(line: 284, column: 4, scope: !9386)
!9424 = distinct !{!9424, !9389, !9425}
!9425 = !DILocation(line: 293, column: 6, scope: !9383)
!9426 = !DILocation(line: 294, column: 25, scope: !9327)
!9427 = !DILocation(line: 294, column: 4, scope: !9327)
!9428 = !DILocation(line: 294, column: 15, scope: !9327)
!9429 = !DILocation(line: 294, column: 17, scope: !9327)
!9430 = !DILocation(line: 294, column: 23, scope: !9327)
!9431 = !DILocation(line: 295, column: 2, scope: !9327)
!9432 = !DILocation(line: 269, column: 39, scope: !9322)
!9433 = !DILocation(line: 269, column: 7, scope: !9322)
!9434 = distinct !{!9434, !9325, !9435}
!9435 = !DILocation(line: 295, column: 2, scope: !9319)
!9436 = !DILocation(line: 299, column: 21, scope: !9283)
!9437 = !DILocation(line: 299, column: 18, scope: !9283)
!9438 = !DILocation(line: 300, column: 5, scope: !9283)
!9439 = !DILocation(line: 257, column: 25, scope: !9278)
!9440 = !DILocation(line: 257, column: 3, scope: !9278)
!9441 = distinct !{!9441, !9281, !9442}
!9442 = !DILocation(line: 300, column: 5, scope: !9275)
!9443 = !DILocation(line: 302, column: 3, scope: !9241)
!9444 = distinct !DISubprogram(name: "jbig2_decode_generic_template3_unopt", scope: !528, file: !528, line: 436, type: !8223, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !70)
!9445 = !DILocalVariable(name: "ctx", arg: 1, scope: !9444, file: !528, line: 436, type: !8133)
!9446 = !DILocation(line: 436, column: 48, scope: !9444)
!9447 = !DILocalVariable(name: "segment", arg: 2, scope: !9444, file: !528, line: 437, type: !8170)
!9448 = !DILocation(line: 437, column: 46, scope: !9444)
!9449 = !DILocalVariable(name: "params", arg: 3, scope: !9444, file: !528, line: 438, type: !8225)
!9450 = !DILocation(line: 438, column: 64, scope: !9444)
!9451 = !DILocalVariable(name: "as", arg: 4, scope: !9444, file: !528, line: 439, type: !4988)
!9452 = !DILocation(line: 439, column: 49, scope: !9444)
!9453 = !DILocalVariable(name: "image", arg: 5, scope: !9444, file: !528, line: 440, type: !8201)
!9454 = !DILocation(line: 440, column: 44, scope: !9444)
!9455 = !DILocalVariable(name: "GB_stats", arg: 6, scope: !9444, file: !528, line: 441, type: !595)
!9456 = !DILocation(line: 441, column: 46, scope: !9444)
!9457 = !DILocalVariable(name: "GBW", scope: !9444, file: !528, line: 443, type: !5919)
!9458 = !DILocation(line: 443, column: 13, scope: !9444)
!9459 = !DILocation(line: 443, column: 19, scope: !9444)
!9460 = !DILocation(line: 443, column: 26, scope: !9444)
!9461 = !DILocalVariable(name: "GBH", scope: !9444, file: !528, line: 444, type: !5919)
!9462 = !DILocation(line: 444, column: 13, scope: !9444)
!9463 = !DILocation(line: 444, column: 19, scope: !9444)
!9464 = !DILocation(line: 444, column: 26, scope: !9444)
!9465 = !DILocalVariable(name: "CONTEXT", scope: !9444, file: !528, line: 445, type: !32)
!9466 = !DILocation(line: 445, column: 12, scope: !9444)
!9467 = !DILocalVariable(name: "x", scope: !9444, file: !528, line: 446, type: !6)
!9468 = !DILocation(line: 446, column: 7, scope: !9444)
!9469 = !DILocalVariable(name: "y", scope: !9444, file: !528, line: 446, type: !6)
!9470 = !DILocation(line: 446, column: 9, scope: !9444)
!9471 = !DILocalVariable(name: "bit", scope: !9444, file: !528, line: 447, type: !188)
!9472 = !DILocation(line: 447, column: 8, scope: !9444)
!9473 = !DILocation(line: 451, column: 10, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9444, file: !528, line: 451, column: 3)
!9475 = !DILocation(line: 451, column: 8, scope: !9474)
!9476 = !DILocation(line: 451, column: 15, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9474, file: !528, line: 451, column: 3)
!9478 = !DILocation(line: 451, column: 19, scope: !9477)
!9479 = !DILocation(line: 451, column: 17, scope: !9477)
!9480 = !DILocation(line: 451, column: 3, scope: !9474)
!9481 = !DILocation(line: 452, column: 12, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !528, line: 452, column: 5)
!9483 = distinct !DILexicalBlock(scope: !9477, file: !528, line: 451, column: 29)
!9484 = !DILocation(line: 452, column: 10, scope: !9482)
!9485 = !DILocation(line: 452, column: 17, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9482, file: !528, line: 452, column: 5)
!9487 = !DILocation(line: 452, column: 21, scope: !9486)
!9488 = !DILocation(line: 452, column: 19, scope: !9486)
!9489 = !DILocation(line: 452, column: 5, scope: !9482)
!9490 = !DILocation(line: 453, column: 15, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9486, file: !528, line: 452, column: 31)
!9492 = !DILocation(line: 454, column: 40, scope: !9491)
!9493 = !DILocation(line: 454, column: 47, scope: !9491)
!9494 = !DILocation(line: 454, column: 49, scope: !9491)
!9495 = !DILocation(line: 454, column: 54, scope: !9491)
!9496 = !DILocation(line: 454, column: 18, scope: !9491)
!9497 = !DILocation(line: 454, column: 57, scope: !9491)
!9498 = !DILocation(line: 454, column: 15, scope: !9491)
!9499 = !DILocation(line: 455, column: 40, scope: !9491)
!9500 = !DILocation(line: 455, column: 47, scope: !9491)
!9501 = !DILocation(line: 455, column: 49, scope: !9491)
!9502 = !DILocation(line: 455, column: 54, scope: !9491)
!9503 = !DILocation(line: 455, column: 18, scope: !9491)
!9504 = !DILocation(line: 455, column: 57, scope: !9491)
!9505 = !DILocation(line: 455, column: 15, scope: !9491)
!9506 = !DILocation(line: 456, column: 40, scope: !9491)
!9507 = !DILocation(line: 456, column: 47, scope: !9491)
!9508 = !DILocation(line: 456, column: 49, scope: !9491)
!9509 = !DILocation(line: 456, column: 54, scope: !9491)
!9510 = !DILocation(line: 456, column: 18, scope: !9491)
!9511 = !DILocation(line: 456, column: 57, scope: !9491)
!9512 = !DILocation(line: 456, column: 15, scope: !9491)
!9513 = !DILocation(line: 457, column: 40, scope: !9491)
!9514 = !DILocation(line: 457, column: 47, scope: !9491)
!9515 = !DILocation(line: 457, column: 49, scope: !9491)
!9516 = !DILocation(line: 457, column: 54, scope: !9491)
!9517 = !DILocation(line: 457, column: 18, scope: !9491)
!9518 = !DILocation(line: 457, column: 57, scope: !9491)
!9519 = !DILocation(line: 457, column: 15, scope: !9491)
!9520 = !DILocation(line: 458, column: 40, scope: !9491)
!9521 = !DILocation(line: 458, column: 47, scope: !9491)
!9522 = !DILocation(line: 458, column: 51, scope: !9491)
!9523 = !DILocation(line: 458, column: 59, scope: !9491)
!9524 = !DILocation(line: 458, column: 49, scope: !9491)
!9525 = !DILocation(line: 459, column: 2, scope: !9491)
!9526 = !DILocation(line: 459, column: 6, scope: !9491)
!9527 = !DILocation(line: 459, column: 14, scope: !9491)
!9528 = !DILocation(line: 459, column: 4, scope: !9491)
!9529 = !DILocation(line: 458, column: 18, scope: !9491)
!9530 = !DILocation(line: 459, column: 23, scope: !9491)
!9531 = !DILocation(line: 458, column: 15, scope: !9491)
!9532 = !DILocation(line: 460, column: 40, scope: !9491)
!9533 = !DILocation(line: 460, column: 47, scope: !9491)
!9534 = !DILocation(line: 460, column: 49, scope: !9491)
!9535 = !DILocation(line: 460, column: 54, scope: !9491)
!9536 = !DILocation(line: 460, column: 56, scope: !9491)
!9537 = !DILocation(line: 460, column: 18, scope: !9491)
!9538 = !DILocation(line: 460, column: 61, scope: !9491)
!9539 = !DILocation(line: 460, column: 15, scope: !9491)
!9540 = !DILocation(line: 461, column: 40, scope: !9491)
!9541 = !DILocation(line: 461, column: 47, scope: !9491)
!9542 = !DILocation(line: 461, column: 49, scope: !9491)
!9543 = !DILocation(line: 461, column: 54, scope: !9491)
!9544 = !DILocation(line: 461, column: 56, scope: !9491)
!9545 = !DILocation(line: 461, column: 18, scope: !9491)
!9546 = !DILocation(line: 461, column: 61, scope: !9491)
!9547 = !DILocation(line: 461, column: 15, scope: !9491)
!9548 = !DILocation(line: 462, column: 40, scope: !9491)
!9549 = !DILocation(line: 462, column: 47, scope: !9491)
!9550 = !DILocation(line: 462, column: 49, scope: !9491)
!9551 = !DILocation(line: 462, column: 54, scope: !9491)
!9552 = !DILocation(line: 462, column: 56, scope: !9491)
!9553 = !DILocation(line: 462, column: 18, scope: !9491)
!9554 = !DILocation(line: 462, column: 61, scope: !9491)
!9555 = !DILocation(line: 462, column: 15, scope: !9491)
!9556 = !DILocation(line: 463, column: 40, scope: !9491)
!9557 = !DILocation(line: 463, column: 47, scope: !9491)
!9558 = !DILocation(line: 463, column: 49, scope: !9491)
!9559 = !DILocation(line: 463, column: 54, scope: !9491)
!9560 = !DILocation(line: 463, column: 56, scope: !9491)
!9561 = !DILocation(line: 463, column: 18, scope: !9491)
!9562 = !DILocation(line: 463, column: 61, scope: !9491)
!9563 = !DILocation(line: 463, column: 15, scope: !9491)
!9564 = !DILocation(line: 464, column: 40, scope: !9491)
!9565 = !DILocation(line: 464, column: 47, scope: !9491)
!9566 = !DILocation(line: 464, column: 49, scope: !9491)
!9567 = !DILocation(line: 464, column: 54, scope: !9491)
!9568 = !DILocation(line: 464, column: 56, scope: !9491)
!9569 = !DILocation(line: 464, column: 18, scope: !9491)
!9570 = !DILocation(line: 464, column: 61, scope: !9491)
!9571 = !DILocation(line: 464, column: 15, scope: !9491)
!9572 = !DILocation(line: 465, column: 32, scope: !9491)
!9573 = !DILocation(line: 465, column: 37, scope: !9491)
!9574 = !DILocation(line: 465, column: 46, scope: !9491)
!9575 = !DILocation(line: 465, column: 13, scope: !9491)
!9576 = !DILocation(line: 465, column: 11, scope: !9491)
!9577 = !DILocation(line: 466, column: 29, scope: !9491)
!9578 = !DILocation(line: 466, column: 36, scope: !9491)
!9579 = !DILocation(line: 466, column: 39, scope: !9491)
!9580 = !DILocation(line: 466, column: 42, scope: !9491)
!9581 = !DILocation(line: 466, column: 7, scope: !9491)
!9582 = !DILocation(line: 467, column: 5, scope: !9491)
!9583 = !DILocation(line: 452, column: 27, scope: !9486)
!9584 = !DILocation(line: 452, column: 5, scope: !9486)
!9585 = distinct !{!9585, !9489, !9586}
!9586 = !DILocation(line: 467, column: 5, scope: !9482)
!9587 = !DILocation(line: 468, column: 3, scope: !9483)
!9588 = !DILocation(line: 451, column: 25, scope: !9477)
!9589 = !DILocation(line: 451, column: 3, scope: !9477)
!9590 = distinct !{!9590, !9480, !9591}
!9591 = !DILocation(line: 468, column: 3, scope: !9474)
!9592 = !DILocation(line: 469, column: 3, scope: !9444)
!9593 = distinct !DISubprogram(name: "jbig2_immediate_generic_region", scope: !528, file: !528, line: 547, type: !9594, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !527, retainedNodes: !70)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{!6, !8133, !8170, !219}
!9596 = !DILocalVariable(name: "ctx", arg: 1, scope: !9593, file: !528, line: 547, type: !8133)
!9597 = !DILocation(line: 547, column: 42, scope: !9593)
!9598 = !DILocalVariable(name: "segment", arg: 2, scope: !9593, file: !528, line: 547, type: !8170)
!9599 = !DILocation(line: 547, column: 61, scope: !9593)
!9600 = !DILocalVariable(name: "segment_data", arg: 3, scope: !9593, file: !528, line: 548, type: !219)
!9601 = !DILocation(line: 548, column: 23, scope: !9593)
!9602 = !DILocalVariable(name: "rsi", scope: !9593, file: !528, line: 550, type: !9603)
!9603 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RegionSegmentInfo", file: !90, line: 148, baseType: !9604)
!9604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !90, line: 141, size: 192, elements: !9605)
!9605 = !{!9606, !9607, !9608, !9609, !9610, !9611}
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9604, file: !90, line: 142, baseType: !141, size: 32)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9604, file: !90, line: 143, baseType: !141, size: 32, offset: 32)
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9604, file: !90, line: 144, baseType: !141, size: 32, offset: 64)
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9604, file: !90, line: 145, baseType: !141, size: 32, offset: 96)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !9604, file: !90, line: 146, baseType: !3145, size: 32, offset: 128)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9604, file: !90, line: 147, baseType: !42, size: 8, offset: 160)
!9612 = !DILocation(line: 550, column: 26, scope: !9593)
!9613 = !DILocalVariable(name: "seg_flags", scope: !9593, file: !528, line: 551, type: !145)
!9614 = !DILocation(line: 551, column: 8, scope: !9593)
!9615 = !DILocalVariable(name: "gbat", scope: !9593, file: !528, line: 552, type: !4563)
!9616 = !DILocation(line: 552, column: 10, scope: !9593)
!9617 = !DILocalVariable(name: "offset", scope: !9593, file: !528, line: 553, type: !6)
!9618 = !DILocation(line: 553, column: 7, scope: !9593)
!9619 = !DILocalVariable(name: "gbat_bytes", scope: !9593, file: !528, line: 554, type: !6)
!9620 = !DILocation(line: 554, column: 7, scope: !9593)
!9621 = !DILocalVariable(name: "params", scope: !9593, file: !528, line: 555, type: !8227)
!9622 = !DILocation(line: 555, column: 28, scope: !9593)
!9623 = !DILocalVariable(name: "code", scope: !9593, file: !528, line: 556, type: !6)
!9624 = !DILocation(line: 556, column: 7, scope: !9593)
!9625 = !DILocalVariable(name: "image", scope: !9593, file: !528, line: 557, type: !8201)
!9626 = !DILocation(line: 557, column: 15, scope: !9593)
!9627 = !DILocalVariable(name: "ws", scope: !9593, file: !528, line: 558, type: !9628)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 64)
!9629 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !9630)
!9630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !9631)
!9631 = !{!9632}
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !9630, file: !90, line: 167, baseType: !9633, size: 64)
!9633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9634, size: 64)
!9634 = !DISubroutineType(types: !9635)
!9635 = !{!32, !9628, !6}
!9636 = !DILocation(line: 558, column: 20, scope: !9593)
!9637 = !DILocalVariable(name: "as", scope: !9593, file: !528, line: 559, type: !4988)
!9638 = !DILocation(line: 559, column: 20, scope: !9593)
!9639 = !DILocalVariable(name: "GB_stats", scope: !9593, file: !528, line: 560, type: !595)
!9640 = !DILocation(line: 560, column: 17, scope: !9593)
!9641 = !DILocation(line: 563, column: 7, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9593, file: !528, line: 563, column: 7)
!9643 = !DILocation(line: 563, column: 16, scope: !9642)
!9644 = !DILocation(line: 563, column: 28, scope: !9642)
!9645 = !DILocation(line: 563, column: 7, scope: !9593)
!9646 = !DILocation(line: 564, column: 24, scope: !9642)
!9647 = !DILocation(line: 564, column: 51, scope: !9642)
!9648 = !DILocation(line: 564, column: 60, scope: !9642)
!9649 = !DILocation(line: 564, column: 12, scope: !9642)
!9650 = !DILocation(line: 564, column: 5, scope: !9642)
!9651 = !DILocation(line: 567, column: 39, scope: !9593)
!9652 = !DILocation(line: 567, column: 3, scope: !9593)
!9653 = !DILocation(line: 568, column: 15, scope: !9593)
!9654 = !DILocation(line: 568, column: 41, scope: !9593)
!9655 = !DILocation(line: 568, column: 50, scope: !9593)
!9656 = !DILocation(line: 570, column: 12, scope: !9593)
!9657 = !DILocation(line: 570, column: 23, scope: !9593)
!9658 = !DILocation(line: 570, column: 35, scope: !9593)
!9659 = !DILocation(line: 570, column: 42, scope: !9593)
!9660 = !DILocation(line: 570, column: 49, scope: !9593)
!9661 = !DILocation(line: 570, column: 45, scope: !9593)
!9662 = !DILocation(line: 568, column: 3, scope: !9593)
!9663 = !DILocation(line: 573, column: 15, scope: !9593)
!9664 = !DILocation(line: 573, column: 13, scope: !9593)
!9665 = !DILocation(line: 574, column: 15, scope: !9593)
!9666 = !DILocation(line: 574, column: 41, scope: !9593)
!9667 = !DILocation(line: 574, column: 50, scope: !9593)
!9668 = !DILocation(line: 575, column: 32, scope: !9593)
!9669 = !DILocation(line: 574, column: 3, scope: !9593)
!9670 = !DILocation(line: 576, column: 8, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9593, file: !528, line: 576, column: 7)
!9672 = !DILocation(line: 576, column: 18, scope: !9671)
!9673 = !DILocation(line: 576, column: 23, scope: !9671)
!9674 = !DILocation(line: 576, column: 27, scope: !9671)
!9675 = !DILocation(line: 576, column: 37, scope: !9671)
!9676 = !DILocation(line: 576, column: 7, scope: !9593)
!9677 = !DILocation(line: 577, column: 17, scope: !9671)
!9678 = !DILocation(line: 577, column: 46, scope: !9671)
!9679 = !DILocation(line: 577, column: 55, scope: !9671)
!9680 = !DILocation(line: 577, column: 5, scope: !9671)
!9681 = !DILocation(line: 581, column: 9, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9593, file: !528, line: 581, column: 7)
!9683 = !DILocation(line: 581, column: 19, scope: !9682)
!9684 = !DILocation(line: 581, column: 7, scope: !9593)
!9685 = !DILocation(line: 583, column: 21, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9682, file: !528, line: 582, column: 5)
!9687 = !DILocation(line: 583, column: 31, scope: !9686)
!9688 = !DILocation(line: 583, column: 20, scope: !9686)
!9689 = !DILocation(line: 583, column: 18, scope: !9686)
!9690 = !DILocation(line: 584, column: 16, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9686, file: !528, line: 584, column: 11)
!9692 = !DILocation(line: 584, column: 14, scope: !9691)
!9693 = !DILocation(line: 584, column: 11, scope: !9691)
!9694 = !DILocation(line: 584, column: 29, scope: !9691)
!9695 = !DILocation(line: 584, column: 38, scope: !9691)
!9696 = !DILocation(line: 584, column: 27, scope: !9691)
!9697 = !DILocation(line: 584, column: 11, scope: !9686)
!9698 = !DILocation(line: 585, column: 21, scope: !9691)
!9699 = !DILocation(line: 585, column: 48, scope: !9691)
!9700 = !DILocation(line: 585, column: 57, scope: !9691)
!9701 = !DILocation(line: 585, column: 9, scope: !9691)
!9702 = !DILocation(line: 585, column: 2, scope: !9691)
!9703 = !DILocation(line: 587, column: 7, scope: !9686)
!9704 = !DILocation(line: 587, column: 20, scope: !9686)
!9705 = !DILocation(line: 587, column: 33, scope: !9686)
!9706 = !DILocation(line: 587, column: 39, scope: !9686)
!9707 = !DILocation(line: 588, column: 19, scope: !9686)
!9708 = !DILocation(line: 588, column: 45, scope: !9686)
!9709 = !DILocation(line: 588, column: 54, scope: !9686)
!9710 = !DILocation(line: 589, column: 21, scope: !9686)
!9711 = !DILocation(line: 589, column: 30, scope: !9686)
!9712 = !DILocation(line: 588, column: 7, scope: !9686)
!9713 = !DILocation(line: 590, column: 5, scope: !9686)
!9714 = !DILocation(line: 592, column: 17, scope: !9593)
!9715 = !DILocation(line: 592, column: 15, scope: !9593)
!9716 = !DILocation(line: 592, column: 10, scope: !9593)
!9717 = !DILocation(line: 595, column: 16, scope: !9593)
!9718 = !DILocation(line: 595, column: 26, scope: !9593)
!9719 = !DILocation(line: 595, column: 10, scope: !9593)
!9720 = !DILocation(line: 595, column: 14, scope: !9593)
!9721 = !DILocation(line: 596, column: 24, scope: !9593)
!9722 = !DILocation(line: 596, column: 34, scope: !9593)
!9723 = !DILocation(line: 596, column: 39, scope: !9593)
!9724 = !DILocation(line: 596, column: 10, scope: !9593)
!9725 = !DILocation(line: 596, column: 21, scope: !9593)
!9726 = !DILocation(line: 597, column: 20, scope: !9593)
!9727 = !DILocation(line: 597, column: 30, scope: !9593)
!9728 = !DILocation(line: 597, column: 35, scope: !9593)
!9729 = !DILocation(line: 597, column: 10, scope: !9593)
!9730 = !DILocation(line: 597, column: 17, scope: !9593)
!9731 = !DILocation(line: 598, column: 10, scope: !9593)
!9732 = !DILocation(line: 598, column: 18, scope: !9593)
!9733 = !DILocation(line: 599, column: 18, scope: !9593)
!9734 = !DILocation(line: 599, column: 3, scope: !9593)
!9735 = !DILocation(line: 599, column: 30, scope: !9593)
!9736 = !DILocation(line: 601, column: 27, scope: !9593)
!9737 = !DILocation(line: 601, column: 36, scope: !9593)
!9738 = !DILocation(line: 601, column: 47, scope: !9593)
!9739 = !DILocation(line: 601, column: 11, scope: !9593)
!9740 = !DILocation(line: 601, column: 9, scope: !9593)
!9741 = !DILocation(line: 602, column: 15, scope: !9593)
!9742 = !DILocation(line: 602, column: 42, scope: !9593)
!9743 = !DILocation(line: 602, column: 51, scope: !9593)
!9744 = !DILocation(line: 604, column: 13, scope: !9593)
!9745 = !DILocation(line: 604, column: 24, scope: !9593)
!9746 = !DILocation(line: 602, column: 3, scope: !9593)
!9747 = !DILocation(line: 606, column: 14, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9593, file: !528, line: 606, column: 7)
!9749 = !DILocation(line: 606, column: 7, scope: !9748)
!9750 = !DILocation(line: 606, column: 7, scope: !9593)
!9751 = !DILocation(line: 608, column: 39, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9748, file: !528, line: 607, column: 5)
!9753 = !DILocation(line: 608, column: 44, scope: !9752)
!9754 = !DILocation(line: 609, column: 11, scope: !9752)
!9755 = !DILocation(line: 609, column: 26, scope: !9752)
!9756 = !DILocation(line: 609, column: 24, scope: !9752)
!9757 = !DILocation(line: 609, column: 34, scope: !9752)
!9758 = !DILocation(line: 609, column: 43, scope: !9752)
!9759 = !DILocation(line: 609, column: 57, scope: !9752)
!9760 = !DILocation(line: 609, column: 55, scope: !9752)
!9761 = !DILocation(line: 610, column: 11, scope: !9752)
!9762 = !DILocation(line: 608, column: 14, scope: !9752)
!9763 = !DILocation(line: 608, column: 12, scope: !9752)
!9764 = !DILocation(line: 611, column: 5, scope: !9752)
!9765 = !DILocalVariable(name: "stats_size", scope: !9766, file: !528, line: 614, type: !6)
!9766 = distinct !DILexicalBlock(scope: !9748, file: !528, line: 613, column: 5)
!9767 = !DILocation(line: 614, column: 11, scope: !9766)
!9768 = !DILocation(line: 614, column: 49, scope: !9766)
!9769 = !DILocation(line: 614, column: 61, scope: !9766)
!9770 = !DILocation(line: 614, column: 24, scope: !9766)
!9771 = !DILocation(line: 615, column: 30, scope: !9766)
!9772 = !DILocation(line: 615, column: 35, scope: !9766)
!9773 = !DILocation(line: 615, column: 46, scope: !9766)
!9774 = !DILocation(line: 615, column: 18, scope: !9766)
!9775 = !DILocation(line: 615, column: 16, scope: !9766)
!9776 = !DILocation(line: 616, column: 14, scope: !9766)
!9777 = !DILocation(line: 616, column: 27, scope: !9766)
!9778 = !DILocation(line: 616, column: 7, scope: !9766)
!9779 = !DILocation(line: 618, column: 38, scope: !9766)
!9780 = !DILocation(line: 619, column: 10, scope: !9766)
!9781 = !DILocation(line: 619, column: 25, scope: !9766)
!9782 = !DILocation(line: 619, column: 23, scope: !9766)
!9783 = !DILocation(line: 620, column: 10, scope: !9766)
!9784 = !DILocation(line: 620, column: 19, scope: !9766)
!9785 = !DILocation(line: 620, column: 33, scope: !9766)
!9786 = !DILocation(line: 620, column: 31, scope: !9766)
!9787 = !DILocation(line: 618, column: 12, scope: !9766)
!9788 = !DILocation(line: 618, column: 10, scope: !9766)
!9789 = !DILocation(line: 621, column: 28, scope: !9766)
!9790 = !DILocation(line: 621, column: 33, scope: !9766)
!9791 = !DILocation(line: 621, column: 12, scope: !9766)
!9792 = !DILocation(line: 621, column: 10, scope: !9766)
!9793 = !DILocation(line: 622, column: 42, scope: !9766)
!9794 = !DILocation(line: 622, column: 47, scope: !9766)
!9795 = !DILocation(line: 623, column: 7, scope: !9766)
!9796 = !DILocation(line: 623, column: 11, scope: !9766)
!9797 = !DILocation(line: 623, column: 18, scope: !9766)
!9798 = !DILocation(line: 622, column: 14, scope: !9766)
!9799 = !DILocation(line: 622, column: 12, scope: !9766)
!9800 = !DILocation(line: 624, column: 18, scope: !9766)
!9801 = !DILocation(line: 624, column: 23, scope: !9766)
!9802 = !DILocation(line: 624, column: 34, scope: !9766)
!9803 = !DILocation(line: 624, column: 7, scope: !9766)
!9804 = !DILocation(line: 625, column: 34, scope: !9766)
!9805 = !DILocation(line: 625, column: 39, scope: !9766)
!9806 = !DILocation(line: 625, column: 7, scope: !9766)
!9807 = !DILocation(line: 627, column: 18, scope: !9766)
!9808 = !DILocation(line: 627, column: 23, scope: !9766)
!9809 = !DILocation(line: 627, column: 34, scope: !9766)
!9810 = !DILocation(line: 627, column: 7, scope: !9766)
!9811 = !DILocation(line: 630, column: 25, scope: !9593)
!9812 = !DILocation(line: 630, column: 31, scope: !9593)
!9813 = !DILocation(line: 630, column: 36, scope: !9593)
!9814 = !DILocation(line: 630, column: 42, scope: !9593)
!9815 = !DILocation(line: 630, column: 47, scope: !9593)
!9816 = !DILocation(line: 631, column: 4, scope: !9593)
!9817 = !DILocation(line: 631, column: 15, scope: !9593)
!9818 = !DILocation(line: 631, column: 22, scope: !9593)
!9819 = !DILocation(line: 630, column: 3, scope: !9593)
!9820 = !DILocation(line: 632, column: 23, scope: !9593)
!9821 = !DILocation(line: 632, column: 28, scope: !9593)
!9822 = !DILocation(line: 632, column: 3, scope: !9593)
!9823 = !DILocation(line: 634, column: 10, scope: !9593)
!9824 = !DILocation(line: 634, column: 3, scope: !9593)
!9825 = !DILocation(line: 635, column: 1, scope: !9593)
!9826 = distinct !DISubprogram(name: "jbig2_decode_refinement_region", scope: !531, file: !531, line: 260, type: !9827, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !70)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{!6, !9829, !9866, !9906, !4988, !9897, !595}
!9829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9830, size: 64)
!9830 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !9831)
!9831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !9832)
!9832 = !{!9833, !9850, !9851, !9854, !9855, !9856, !9857, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9877, !9878, !9879, !9880, !9881}
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !9831, file: !90, line: 45, baseType: !9834, size: 64)
!9834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9835, size: 64)
!9835 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !9836)
!9836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !9837)
!9837 = !{!9838, !9842, !9846}
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !9836, file: !58, line: 86, baseType: !9839, size: 64)
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9840, size: 64)
!9840 = !DISubroutineType(types: !9841)
!9841 = !{!68, !9834, !119}
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !9836, file: !58, line: 87, baseType: !9843, size: 64, offset: 64)
!9843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9844, size: 64)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{null, !9834, !68}
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !9836, file: !58, line: 88, baseType: !9847, size: 64, offset: 128)
!9847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9848, size: 64)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{!68, !9834, !68, !119}
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !9831, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !9831, file: !90, line: 47, baseType: !9852, size: 64, offset: 128)
!9852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9853, size: 64)
!9853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9830)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !9831, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !9831, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !9831, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !9831, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !9831, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !9831, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9831, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !9831, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !9831, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !9831, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !9831, file: !90, line: 62, baseType: !9865, size: 64, offset: 640)
!9865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9866, size: 64)
!9866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9867, size: 64)
!9867 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !9868)
!9868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !9869)
!9869 = !{!9870, !9871, !9872, !9873, !9874, !9875, !9876}
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !9868, file: !58, line: 117, baseType: !32, size: 32)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9868, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !9868, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !9868, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !9868, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !9868, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9868, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !9831, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !9831, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !9831, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !9831, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !9831, file: !90, line: 70, baseType: !9882, size: 64, offset: 832)
!9882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9883, size: 64)
!9883 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !9884)
!9884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !9885)
!9885 = !{!9886, !9887, !9888, !9889, !9890, !9891, !9892, !9893, !9894, !9895, !9896}
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9884, file: !90, line: 111, baseType: !178, size: 32)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !9884, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9884, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9884, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !9884, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!9891 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !9884, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !9884, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !9884, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !9884, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9884, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !9884, file: !90, line: 120, baseType: !9897, size: 64, offset: 320)
!9897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9898, size: 64)
!9898 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !9899)
!9899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !9900)
!9900 = !{!9901, !9902, !9903, !9904, !9905}
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9899, file: !58, line: 57, baseType: !6, size: 32)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9899, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !9899, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9899, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !9899, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!9906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9907, size: 64)
!9907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9908)
!9908 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RefinementRegionParams", file: !5304, line: 57, baseType: !9909)
!9909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5304, line: 49, size: 256, elements: !9910)
!9910 = !{!9911, !9912, !9913, !9914, !9915, !9916}
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "GRTEMPLATE", scope: !9909, file: !5304, line: 52, baseType: !188, size: 32)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !9909, file: !5304, line: 53, baseType: !9897, size: 64, offset: 64)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "DX", scope: !9909, file: !5304, line: 54, baseType: !141, size: 32, offset: 128)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "DY", scope: !9909, file: !5304, line: 54, baseType: !141, size: 32, offset: 160)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "TPGRON", scope: !9909, file: !5304, line: 55, baseType: !188, size: 32, offset: 192)
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "grat", scope: !9909, file: !5304, line: 56, baseType: !4567, size: 32, offset: 224)
!9917 = !DILocalVariable(name: "ctx", arg: 1, scope: !9826, file: !531, line: 260, type: !9829)
!9918 = !DILocation(line: 260, column: 42, scope: !9826)
!9919 = !DILocalVariable(name: "segment", arg: 2, scope: !9826, file: !531, line: 261, type: !9866)
!9920 = !DILocation(line: 261, column: 22, scope: !9826)
!9921 = !DILocalVariable(name: "params", arg: 3, scope: !9826, file: !531, line: 262, type: !9906)
!9922 = !DILocation(line: 262, column: 43, scope: !9826)
!9923 = !DILocalVariable(name: "as", arg: 4, scope: !9826, file: !531, line: 263, type: !4988)
!9924 = !DILocation(line: 263, column: 25, scope: !9826)
!9925 = !DILocalVariable(name: "image", arg: 5, scope: !9826, file: !531, line: 264, type: !9897)
!9926 = !DILocation(line: 264, column: 20, scope: !9826)
!9927 = !DILocalVariable(name: "GR_stats", arg: 6, scope: !9826, file: !531, line: 265, type: !595)
!9928 = !DILocation(line: 265, column: 22, scope: !9826)
!9929 = !DILocation(line: 268, column: 17, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9826, file: !531, line: 267, column: 3)
!9931 = !DILocation(line: 268, column: 44, scope: !9930)
!9932 = !DILocation(line: 268, column: 53, scope: !9930)
!9933 = !DILocation(line: 271, column: 7, scope: !9930)
!9934 = !DILocation(line: 271, column: 15, scope: !9930)
!9935 = !DILocation(line: 271, column: 19, scope: !9930)
!9936 = !DILocation(line: 271, column: 27, scope: !9930)
!9937 = !DILocation(line: 271, column: 31, scope: !9930)
!9938 = !DILocation(line: 271, column: 39, scope: !9930)
!9939 = !DILocation(line: 271, column: 51, scope: !9930)
!9940 = !DILocation(line: 271, column: 59, scope: !9930)
!9941 = !DILocation(line: 272, column: 7, scope: !9930)
!9942 = !DILocation(line: 272, column: 15, scope: !9930)
!9943 = !DILocation(line: 272, column: 24, scope: !9930)
!9944 = !DILocation(line: 272, column: 32, scope: !9930)
!9945 = !DILocation(line: 272, column: 41, scope: !9930)
!9946 = !DILocation(line: 272, column: 49, scope: !9930)
!9947 = !DILocation(line: 272, column: 58, scope: !9930)
!9948 = !DILocation(line: 272, column: 66, scope: !9930)
!9949 = !DILocation(line: 268, column: 5, scope: !9930)
!9950 = !DILocation(line: 274, column: 7, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9826, file: !531, line: 274, column: 7)
!9952 = !DILocation(line: 274, column: 15, scope: !9951)
!9953 = !DILocation(line: 274, column: 7, scope: !9826)
!9954 = !DILocation(line: 275, column: 24, scope: !9951)
!9955 = !DILocation(line: 275, column: 53, scope: !9951)
!9956 = !DILocation(line: 275, column: 62, scope: !9951)
!9957 = !DILocation(line: 275, column: 12, scope: !9951)
!9958 = !DILocation(line: 275, column: 5, scope: !9951)
!9959 = !DILocation(line: 277, column: 7, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9826, file: !531, line: 277, column: 7)
!9961 = !DILocation(line: 277, column: 15, scope: !9960)
!9962 = !DILocation(line: 277, column: 7, scope: !9826)
!9963 = !DILocation(line: 278, column: 52, scope: !9960)
!9964 = !DILocation(line: 278, column: 57, scope: !9960)
!9965 = !DILocation(line: 278, column: 66, scope: !9960)
!9966 = !DILocation(line: 279, column: 46, scope: !9960)
!9967 = !DILocation(line: 279, column: 50, scope: !9960)
!9968 = !DILocation(line: 279, column: 57, scope: !9960)
!9969 = !DILocation(line: 278, column: 12, scope: !9960)
!9970 = !DILocation(line: 278, column: 5, scope: !9960)
!9971 = !DILocation(line: 281, column: 52, scope: !9960)
!9972 = !DILocation(line: 281, column: 57, scope: !9960)
!9973 = !DILocation(line: 281, column: 66, scope: !9960)
!9974 = !DILocation(line: 282, column: 46, scope: !9960)
!9975 = !DILocation(line: 282, column: 50, scope: !9960)
!9976 = !DILocation(line: 282, column: 57, scope: !9960)
!9977 = !DILocation(line: 281, column: 12, scope: !9960)
!9978 = !DILocation(line: 281, column: 5, scope: !9960)
!9979 = !DILocation(line: 283, column: 1, scope: !9826)
!9980 = distinct !DISubprogram(name: "jbig2_decode_refinement_template1_unopt", scope: !531, file: !531, line: 111, type: !9827, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !70)
!9981 = !DILocalVariable(name: "ctx", arg: 1, scope: !9980, file: !531, line: 111, type: !9829)
!9982 = !DILocation(line: 111, column: 51, scope: !9980)
!9983 = !DILocalVariable(name: "segment", arg: 2, scope: !9980, file: !531, line: 112, type: !9866)
!9984 = !DILocation(line: 112, column: 45, scope: !9980)
!9985 = !DILocalVariable(name: "params", arg: 3, scope: !9980, file: !531, line: 113, type: !9906)
!9986 = !DILocation(line: 113, column: 66, scope: !9980)
!9987 = !DILocalVariable(name: "as", arg: 4, scope: !9980, file: !531, line: 114, type: !4988)
!9988 = !DILocation(line: 114, column: 48, scope: !9980)
!9989 = !DILocalVariable(name: "image", arg: 5, scope: !9980, file: !531, line: 115, type: !9897)
!9990 = !DILocation(line: 115, column: 43, scope: !9980)
!9991 = !DILocalVariable(name: "GR_stats", arg: 6, scope: !9980, file: !531, line: 116, type: !595)
!9992 = !DILocation(line: 116, column: 45, scope: !9980)
!9993 = !DILocalVariable(name: "GRW", scope: !9980, file: !531, line: 118, type: !5919)
!9994 = !DILocation(line: 118, column: 13, scope: !9980)
!9995 = !DILocation(line: 118, column: 19, scope: !9980)
!9996 = !DILocation(line: 118, column: 26, scope: !9980)
!9997 = !DILocalVariable(name: "GRH", scope: !9980, file: !531, line: 119, type: !5919)
!9998 = !DILocation(line: 119, column: 13, scope: !9980)
!9999 = !DILocation(line: 119, column: 19, scope: !9980)
!10000 = !DILocation(line: 119, column: 26, scope: !9980)
!10001 = !DILocalVariable(name: "dx", scope: !9980, file: !531, line: 120, type: !5919)
!10002 = !DILocation(line: 120, column: 13, scope: !9980)
!10003 = !DILocation(line: 120, column: 18, scope: !9980)
!10004 = !DILocation(line: 120, column: 26, scope: !9980)
!10005 = !DILocalVariable(name: "dy", scope: !9980, file: !531, line: 121, type: !5919)
!10006 = !DILocation(line: 121, column: 13, scope: !9980)
!10007 = !DILocation(line: 121, column: 18, scope: !9980)
!10008 = !DILocation(line: 121, column: 26, scope: !9980)
!10009 = !DILocalVariable(name: "ref", scope: !9980, file: !531, line: 122, type: !9897)
!10010 = !DILocation(line: 122, column: 15, scope: !9980)
!10011 = !DILocation(line: 122, column: 21, scope: !9980)
!10012 = !DILocation(line: 122, column: 29, scope: !9980)
!10013 = !DILocalVariable(name: "CONTEXT", scope: !9980, file: !531, line: 123, type: !32)
!10014 = !DILocation(line: 123, column: 12, scope: !9980)
!10015 = !DILocalVariable(name: "x", scope: !9980, file: !531, line: 124, type: !6)
!10016 = !DILocation(line: 124, column: 7, scope: !9980)
!10017 = !DILocalVariable(name: "y", scope: !9980, file: !531, line: 124, type: !6)
!10018 = !DILocation(line: 124, column: 9, scope: !9980)
!10019 = !DILocalVariable(name: "bit", scope: !9980, file: !531, line: 125, type: !188)
!10020 = !DILocation(line: 125, column: 8, scope: !9980)
!10021 = !DILocation(line: 127, column: 10, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9980, file: !531, line: 127, column: 3)
!10023 = !DILocation(line: 127, column: 8, scope: !10022)
!10024 = !DILocation(line: 127, column: 15, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10022, file: !531, line: 127, column: 3)
!10026 = !DILocation(line: 127, column: 19, scope: !10025)
!10027 = !DILocation(line: 127, column: 17, scope: !10025)
!10028 = !DILocation(line: 127, column: 3, scope: !10022)
!10029 = !DILocation(line: 128, column: 12, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !531, line: 128, column: 5)
!10031 = distinct !DILexicalBlock(scope: !10025, file: !531, line: 127, column: 29)
!10032 = !DILocation(line: 128, column: 10, scope: !10030)
!10033 = !DILocation(line: 128, column: 17, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10030, file: !531, line: 128, column: 5)
!10035 = !DILocation(line: 128, column: 21, scope: !10034)
!10036 = !DILocation(line: 128, column: 19, scope: !10034)
!10037 = !DILocation(line: 128, column: 5, scope: !10030)
!10038 = !DILocation(line: 129, column: 15, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !531, line: 128, column: 31)
!10040 = !DILocation(line: 130, column: 40, scope: !10039)
!10041 = !DILocation(line: 130, column: 47, scope: !10039)
!10042 = !DILocation(line: 130, column: 49, scope: !10039)
!10043 = !DILocation(line: 130, column: 54, scope: !10039)
!10044 = !DILocation(line: 130, column: 56, scope: !10039)
!10045 = !DILocation(line: 130, column: 18, scope: !10039)
!10046 = !DILocation(line: 130, column: 61, scope: !10039)
!10047 = !DILocation(line: 130, column: 15, scope: !10039)
!10048 = !DILocation(line: 131, column: 40, scope: !10039)
!10049 = !DILocation(line: 131, column: 47, scope: !10039)
!10050 = !DILocation(line: 131, column: 49, scope: !10039)
!10051 = !DILocation(line: 131, column: 54, scope: !10039)
!10052 = !DILocation(line: 131, column: 56, scope: !10039)
!10053 = !DILocation(line: 131, column: 18, scope: !10039)
!10054 = !DILocation(line: 131, column: 61, scope: !10039)
!10055 = !DILocation(line: 131, column: 15, scope: !10039)
!10056 = !DILocation(line: 132, column: 40, scope: !10039)
!10057 = !DILocation(line: 132, column: 47, scope: !10039)
!10058 = !DILocation(line: 132, column: 49, scope: !10039)
!10059 = !DILocation(line: 132, column: 54, scope: !10039)
!10060 = !DILocation(line: 132, column: 56, scope: !10039)
!10061 = !DILocation(line: 132, column: 18, scope: !10039)
!10062 = !DILocation(line: 132, column: 61, scope: !10039)
!10063 = !DILocation(line: 132, column: 15, scope: !10039)
!10064 = !DILocation(line: 133, column: 40, scope: !10039)
!10065 = !DILocation(line: 133, column: 47, scope: !10039)
!10066 = !DILocation(line: 133, column: 49, scope: !10039)
!10067 = !DILocation(line: 133, column: 54, scope: !10039)
!10068 = !DILocation(line: 133, column: 56, scope: !10039)
!10069 = !DILocation(line: 133, column: 18, scope: !10039)
!10070 = !DILocation(line: 133, column: 61, scope: !10039)
!10071 = !DILocation(line: 133, column: 15, scope: !10039)
!10072 = !DILocation(line: 134, column: 40, scope: !10039)
!10073 = !DILocation(line: 134, column: 45, scope: !10039)
!10074 = !DILocation(line: 134, column: 47, scope: !10039)
!10075 = !DILocation(line: 134, column: 46, scope: !10039)
!10076 = !DILocation(line: 134, column: 49, scope: !10039)
!10077 = !DILocation(line: 134, column: 53, scope: !10039)
!10078 = !DILocation(line: 134, column: 55, scope: !10039)
!10079 = !DILocation(line: 134, column: 54, scope: !10039)
!10080 = !DILocation(line: 134, column: 57, scope: !10039)
!10081 = !DILocation(line: 134, column: 18, scope: !10039)
!10082 = !DILocation(line: 134, column: 61, scope: !10039)
!10083 = !DILocation(line: 134, column: 15, scope: !10039)
!10084 = !DILocation(line: 135, column: 40, scope: !10039)
!10085 = !DILocation(line: 135, column: 45, scope: !10039)
!10086 = !DILocation(line: 135, column: 47, scope: !10039)
!10087 = !DILocation(line: 135, column: 46, scope: !10039)
!10088 = !DILocation(line: 135, column: 49, scope: !10039)
!10089 = !DILocation(line: 135, column: 53, scope: !10039)
!10090 = !DILocation(line: 135, column: 55, scope: !10039)
!10091 = !DILocation(line: 135, column: 54, scope: !10039)
!10092 = !DILocation(line: 135, column: 57, scope: !10039)
!10093 = !DILocation(line: 135, column: 18, scope: !10039)
!10094 = !DILocation(line: 135, column: 61, scope: !10039)
!10095 = !DILocation(line: 135, column: 15, scope: !10039)
!10096 = !DILocation(line: 136, column: 40, scope: !10039)
!10097 = !DILocation(line: 136, column: 45, scope: !10039)
!10098 = !DILocation(line: 136, column: 47, scope: !10039)
!10099 = !DILocation(line: 136, column: 46, scope: !10039)
!10100 = !DILocation(line: 136, column: 49, scope: !10039)
!10101 = !DILocation(line: 136, column: 53, scope: !10039)
!10102 = !DILocation(line: 136, column: 55, scope: !10039)
!10103 = !DILocation(line: 136, column: 54, scope: !10039)
!10104 = !DILocation(line: 136, column: 57, scope: !10039)
!10105 = !DILocation(line: 136, column: 18, scope: !10039)
!10106 = !DILocation(line: 136, column: 61, scope: !10039)
!10107 = !DILocation(line: 136, column: 15, scope: !10039)
!10108 = !DILocation(line: 137, column: 40, scope: !10039)
!10109 = !DILocation(line: 137, column: 45, scope: !10039)
!10110 = !DILocation(line: 137, column: 47, scope: !10039)
!10111 = !DILocation(line: 137, column: 46, scope: !10039)
!10112 = !DILocation(line: 137, column: 49, scope: !10039)
!10113 = !DILocation(line: 137, column: 53, scope: !10039)
!10114 = !DILocation(line: 137, column: 55, scope: !10039)
!10115 = !DILocation(line: 137, column: 54, scope: !10039)
!10116 = !DILocation(line: 137, column: 57, scope: !10039)
!10117 = !DILocation(line: 137, column: 18, scope: !10039)
!10118 = !DILocation(line: 137, column: 61, scope: !10039)
!10119 = !DILocation(line: 137, column: 15, scope: !10039)
!10120 = !DILocation(line: 138, column: 40, scope: !10039)
!10121 = !DILocation(line: 138, column: 45, scope: !10039)
!10122 = !DILocation(line: 138, column: 47, scope: !10039)
!10123 = !DILocation(line: 138, column: 46, scope: !10039)
!10124 = !DILocation(line: 138, column: 49, scope: !10039)
!10125 = !DILocation(line: 138, column: 53, scope: !10039)
!10126 = !DILocation(line: 138, column: 55, scope: !10039)
!10127 = !DILocation(line: 138, column: 54, scope: !10039)
!10128 = !DILocation(line: 138, column: 57, scope: !10039)
!10129 = !DILocation(line: 138, column: 18, scope: !10039)
!10130 = !DILocation(line: 138, column: 61, scope: !10039)
!10131 = !DILocation(line: 138, column: 15, scope: !10039)
!10132 = !DILocation(line: 139, column: 40, scope: !10039)
!10133 = !DILocation(line: 139, column: 45, scope: !10039)
!10134 = !DILocation(line: 139, column: 47, scope: !10039)
!10135 = !DILocation(line: 139, column: 46, scope: !10039)
!10136 = !DILocation(line: 139, column: 49, scope: !10039)
!10137 = !DILocation(line: 139, column: 53, scope: !10039)
!10138 = !DILocation(line: 139, column: 55, scope: !10039)
!10139 = !DILocation(line: 139, column: 54, scope: !10039)
!10140 = !DILocation(line: 139, column: 57, scope: !10039)
!10141 = !DILocation(line: 139, column: 18, scope: !10039)
!10142 = !DILocation(line: 139, column: 61, scope: !10039)
!10143 = !DILocation(line: 139, column: 15, scope: !10039)
!10144 = !DILocation(line: 140, column: 32, scope: !10039)
!10145 = !DILocation(line: 140, column: 37, scope: !10039)
!10146 = !DILocation(line: 140, column: 46, scope: !10039)
!10147 = !DILocation(line: 140, column: 13, scope: !10039)
!10148 = !DILocation(line: 140, column: 11, scope: !10039)
!10149 = !DILocation(line: 141, column: 29, scope: !10039)
!10150 = !DILocation(line: 141, column: 36, scope: !10039)
!10151 = !DILocation(line: 141, column: 39, scope: !10039)
!10152 = !DILocation(line: 141, column: 42, scope: !10039)
!10153 = !DILocation(line: 141, column: 7, scope: !10039)
!10154 = !DILocation(line: 142, column: 5, scope: !10039)
!10155 = !DILocation(line: 128, column: 27, scope: !10034)
!10156 = !DILocation(line: 128, column: 5, scope: !10034)
!10157 = distinct !{!10157, !10037, !10158}
!10158 = !DILocation(line: 142, column: 5, scope: !10030)
!10159 = !DILocation(line: 143, column: 3, scope: !10031)
!10160 = !DILocation(line: 127, column: 25, scope: !10025)
!10161 = !DILocation(line: 127, column: 3, scope: !10025)
!10162 = distinct !{!10162, !10028, !10163}
!10163 = !DILocation(line: 143, column: 3, scope: !10022)
!10164 = !DILocation(line: 157, column: 3, scope: !9980)
!10165 = distinct !DISubprogram(name: "jbig2_decode_refinement_template0_unopt", scope: !531, file: !531, line: 56, type: !9827, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !70)
!10166 = !DILocalVariable(name: "ctx", arg: 1, scope: !10165, file: !531, line: 56, type: !9829)
!10167 = !DILocation(line: 56, column: 51, scope: !10165)
!10168 = !DILocalVariable(name: "segment", arg: 2, scope: !10165, file: !531, line: 57, type: !9866)
!10169 = !DILocation(line: 57, column: 45, scope: !10165)
!10170 = !DILocalVariable(name: "params", arg: 3, scope: !10165, file: !531, line: 58, type: !9906)
!10171 = !DILocation(line: 58, column: 66, scope: !10165)
!10172 = !DILocalVariable(name: "as", arg: 4, scope: !10165, file: !531, line: 59, type: !4988)
!10173 = !DILocation(line: 59, column: 48, scope: !10165)
!10174 = !DILocalVariable(name: "image", arg: 5, scope: !10165, file: !531, line: 60, type: !9897)
!10175 = !DILocation(line: 60, column: 43, scope: !10165)
!10176 = !DILocalVariable(name: "GR_stats", arg: 6, scope: !10165, file: !531, line: 61, type: !595)
!10177 = !DILocation(line: 61, column: 45, scope: !10165)
!10178 = !DILocalVariable(name: "GRW", scope: !10165, file: !531, line: 63, type: !5919)
!10179 = !DILocation(line: 63, column: 13, scope: !10165)
!10180 = !DILocation(line: 63, column: 19, scope: !10165)
!10181 = !DILocation(line: 63, column: 26, scope: !10165)
!10182 = !DILocalVariable(name: "GRH", scope: !10165, file: !531, line: 64, type: !5919)
!10183 = !DILocation(line: 64, column: 13, scope: !10165)
!10184 = !DILocation(line: 64, column: 19, scope: !10165)
!10185 = !DILocation(line: 64, column: 26, scope: !10165)
!10186 = !DILocalVariable(name: "dx", scope: !10165, file: !531, line: 65, type: !5919)
!10187 = !DILocation(line: 65, column: 13, scope: !10165)
!10188 = !DILocation(line: 65, column: 18, scope: !10165)
!10189 = !DILocation(line: 65, column: 26, scope: !10165)
!10190 = !DILocalVariable(name: "dy", scope: !10165, file: !531, line: 66, type: !5919)
!10191 = !DILocation(line: 66, column: 13, scope: !10165)
!10192 = !DILocation(line: 66, column: 18, scope: !10165)
!10193 = !DILocation(line: 66, column: 26, scope: !10165)
!10194 = !DILocalVariable(name: "ref", scope: !10165, file: !531, line: 67, type: !9897)
!10195 = !DILocation(line: 67, column: 15, scope: !10165)
!10196 = !DILocation(line: 67, column: 21, scope: !10165)
!10197 = !DILocation(line: 67, column: 29, scope: !10165)
!10198 = !DILocalVariable(name: "CONTEXT", scope: !10165, file: !531, line: 68, type: !32)
!10199 = !DILocation(line: 68, column: 12, scope: !10165)
!10200 = !DILocalVariable(name: "x", scope: !10165, file: !531, line: 69, type: !6)
!10201 = !DILocation(line: 69, column: 7, scope: !10165)
!10202 = !DILocalVariable(name: "y", scope: !10165, file: !531, line: 69, type: !6)
!10203 = !DILocation(line: 69, column: 9, scope: !10165)
!10204 = !DILocalVariable(name: "bit", scope: !10165, file: !531, line: 70, type: !188)
!10205 = !DILocation(line: 70, column: 8, scope: !10165)
!10206 = !DILocation(line: 72, column: 10, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10165, file: !531, line: 72, column: 3)
!10208 = !DILocation(line: 72, column: 8, scope: !10207)
!10209 = !DILocation(line: 72, column: 15, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10207, file: !531, line: 72, column: 3)
!10211 = !DILocation(line: 72, column: 19, scope: !10210)
!10212 = !DILocation(line: 72, column: 17, scope: !10210)
!10213 = !DILocation(line: 72, column: 3, scope: !10207)
!10214 = !DILocation(line: 73, column: 12, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !531, line: 73, column: 5)
!10216 = distinct !DILexicalBlock(scope: !10210, file: !531, line: 72, column: 29)
!10217 = !DILocation(line: 73, column: 10, scope: !10215)
!10218 = !DILocation(line: 73, column: 17, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10215, file: !531, line: 73, column: 5)
!10220 = !DILocation(line: 73, column: 21, scope: !10219)
!10221 = !DILocation(line: 73, column: 19, scope: !10219)
!10222 = !DILocation(line: 73, column: 5, scope: !10215)
!10223 = !DILocation(line: 74, column: 15, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10219, file: !531, line: 73, column: 31)
!10225 = !DILocation(line: 75, column: 40, scope: !10224)
!10226 = !DILocation(line: 75, column: 47, scope: !10224)
!10227 = !DILocation(line: 75, column: 49, scope: !10224)
!10228 = !DILocation(line: 75, column: 54, scope: !10224)
!10229 = !DILocation(line: 75, column: 56, scope: !10224)
!10230 = !DILocation(line: 75, column: 18, scope: !10224)
!10231 = !DILocation(line: 75, column: 61, scope: !10224)
!10232 = !DILocation(line: 75, column: 15, scope: !10224)
!10233 = !DILocation(line: 76, column: 40, scope: !10224)
!10234 = !DILocation(line: 76, column: 47, scope: !10224)
!10235 = !DILocation(line: 76, column: 49, scope: !10224)
!10236 = !DILocation(line: 76, column: 54, scope: !10224)
!10237 = !DILocation(line: 76, column: 56, scope: !10224)
!10238 = !DILocation(line: 76, column: 18, scope: !10224)
!10239 = !DILocation(line: 76, column: 61, scope: !10224)
!10240 = !DILocation(line: 76, column: 15, scope: !10224)
!10241 = !DILocation(line: 77, column: 40, scope: !10224)
!10242 = !DILocation(line: 77, column: 47, scope: !10224)
!10243 = !DILocation(line: 77, column: 49, scope: !10224)
!10244 = !DILocation(line: 77, column: 54, scope: !10224)
!10245 = !DILocation(line: 77, column: 56, scope: !10224)
!10246 = !DILocation(line: 77, column: 18, scope: !10224)
!10247 = !DILocation(line: 77, column: 61, scope: !10224)
!10248 = !DILocation(line: 77, column: 15, scope: !10224)
!10249 = !DILocation(line: 78, column: 40, scope: !10224)
!10250 = !DILocation(line: 78, column: 47, scope: !10224)
!10251 = !DILocation(line: 78, column: 51, scope: !10224)
!10252 = !DILocation(line: 78, column: 59, scope: !10224)
!10253 = !DILocation(line: 78, column: 49, scope: !10224)
!10254 = !DILocation(line: 79, column: 2, scope: !10224)
!10255 = !DILocation(line: 79, column: 6, scope: !10224)
!10256 = !DILocation(line: 79, column: 14, scope: !10224)
!10257 = !DILocation(line: 79, column: 4, scope: !10224)
!10258 = !DILocation(line: 78, column: 18, scope: !10224)
!10259 = !DILocation(line: 79, column: 23, scope: !10224)
!10260 = !DILocation(line: 78, column: 15, scope: !10224)
!10261 = !DILocation(line: 80, column: 40, scope: !10224)
!10262 = !DILocation(line: 80, column: 45, scope: !10224)
!10263 = !DILocation(line: 80, column: 47, scope: !10224)
!10264 = !DILocation(line: 80, column: 46, scope: !10224)
!10265 = !DILocation(line: 80, column: 49, scope: !10224)
!10266 = !DILocation(line: 80, column: 53, scope: !10224)
!10267 = !DILocation(line: 80, column: 55, scope: !10224)
!10268 = !DILocation(line: 80, column: 54, scope: !10224)
!10269 = !DILocation(line: 80, column: 57, scope: !10224)
!10270 = !DILocation(line: 80, column: 18, scope: !10224)
!10271 = !DILocation(line: 80, column: 61, scope: !10224)
!10272 = !DILocation(line: 80, column: 15, scope: !10224)
!10273 = !DILocation(line: 81, column: 40, scope: !10224)
!10274 = !DILocation(line: 81, column: 45, scope: !10224)
!10275 = !DILocation(line: 81, column: 47, scope: !10224)
!10276 = !DILocation(line: 81, column: 46, scope: !10224)
!10277 = !DILocation(line: 81, column: 49, scope: !10224)
!10278 = !DILocation(line: 81, column: 53, scope: !10224)
!10279 = !DILocation(line: 81, column: 55, scope: !10224)
!10280 = !DILocation(line: 81, column: 54, scope: !10224)
!10281 = !DILocation(line: 81, column: 57, scope: !10224)
!10282 = !DILocation(line: 81, column: 18, scope: !10224)
!10283 = !DILocation(line: 81, column: 61, scope: !10224)
!10284 = !DILocation(line: 81, column: 15, scope: !10224)
!10285 = !DILocation(line: 82, column: 40, scope: !10224)
!10286 = !DILocation(line: 82, column: 45, scope: !10224)
!10287 = !DILocation(line: 82, column: 47, scope: !10224)
!10288 = !DILocation(line: 82, column: 46, scope: !10224)
!10289 = !DILocation(line: 82, column: 49, scope: !10224)
!10290 = !DILocation(line: 82, column: 53, scope: !10224)
!10291 = !DILocation(line: 82, column: 55, scope: !10224)
!10292 = !DILocation(line: 82, column: 54, scope: !10224)
!10293 = !DILocation(line: 82, column: 57, scope: !10224)
!10294 = !DILocation(line: 82, column: 18, scope: !10224)
!10295 = !DILocation(line: 82, column: 61, scope: !10224)
!10296 = !DILocation(line: 82, column: 15, scope: !10224)
!10297 = !DILocation(line: 83, column: 40, scope: !10224)
!10298 = !DILocation(line: 83, column: 45, scope: !10224)
!10299 = !DILocation(line: 83, column: 47, scope: !10224)
!10300 = !DILocation(line: 83, column: 46, scope: !10224)
!10301 = !DILocation(line: 83, column: 49, scope: !10224)
!10302 = !DILocation(line: 83, column: 53, scope: !10224)
!10303 = !DILocation(line: 83, column: 55, scope: !10224)
!10304 = !DILocation(line: 83, column: 54, scope: !10224)
!10305 = !DILocation(line: 83, column: 57, scope: !10224)
!10306 = !DILocation(line: 83, column: 18, scope: !10224)
!10307 = !DILocation(line: 83, column: 61, scope: !10224)
!10308 = !DILocation(line: 83, column: 15, scope: !10224)
!10309 = !DILocation(line: 84, column: 40, scope: !10224)
!10310 = !DILocation(line: 84, column: 45, scope: !10224)
!10311 = !DILocation(line: 84, column: 47, scope: !10224)
!10312 = !DILocation(line: 84, column: 46, scope: !10224)
!10313 = !DILocation(line: 84, column: 49, scope: !10224)
!10314 = !DILocation(line: 84, column: 53, scope: !10224)
!10315 = !DILocation(line: 84, column: 55, scope: !10224)
!10316 = !DILocation(line: 84, column: 54, scope: !10224)
!10317 = !DILocation(line: 84, column: 57, scope: !10224)
!10318 = !DILocation(line: 84, column: 18, scope: !10224)
!10319 = !DILocation(line: 84, column: 61, scope: !10224)
!10320 = !DILocation(line: 84, column: 15, scope: !10224)
!10321 = !DILocation(line: 85, column: 40, scope: !10224)
!10322 = !DILocation(line: 85, column: 45, scope: !10224)
!10323 = !DILocation(line: 85, column: 47, scope: !10224)
!10324 = !DILocation(line: 85, column: 46, scope: !10224)
!10325 = !DILocation(line: 85, column: 49, scope: !10224)
!10326 = !DILocation(line: 85, column: 53, scope: !10224)
!10327 = !DILocation(line: 85, column: 55, scope: !10224)
!10328 = !DILocation(line: 85, column: 54, scope: !10224)
!10329 = !DILocation(line: 85, column: 57, scope: !10224)
!10330 = !DILocation(line: 85, column: 18, scope: !10224)
!10331 = !DILocation(line: 85, column: 61, scope: !10224)
!10332 = !DILocation(line: 85, column: 15, scope: !10224)
!10333 = !DILocation(line: 86, column: 40, scope: !10224)
!10334 = !DILocation(line: 86, column: 45, scope: !10224)
!10335 = !DILocation(line: 86, column: 47, scope: !10224)
!10336 = !DILocation(line: 86, column: 46, scope: !10224)
!10337 = !DILocation(line: 86, column: 49, scope: !10224)
!10338 = !DILocation(line: 86, column: 53, scope: !10224)
!10339 = !DILocation(line: 86, column: 55, scope: !10224)
!10340 = !DILocation(line: 86, column: 54, scope: !10224)
!10341 = !DILocation(line: 86, column: 57, scope: !10224)
!10342 = !DILocation(line: 86, column: 18, scope: !10224)
!10343 = !DILocation(line: 86, column: 61, scope: !10224)
!10344 = !DILocation(line: 86, column: 15, scope: !10224)
!10345 = !DILocation(line: 87, column: 40, scope: !10224)
!10346 = !DILocation(line: 87, column: 45, scope: !10224)
!10347 = !DILocation(line: 87, column: 47, scope: !10224)
!10348 = !DILocation(line: 87, column: 46, scope: !10224)
!10349 = !DILocation(line: 87, column: 49, scope: !10224)
!10350 = !DILocation(line: 87, column: 53, scope: !10224)
!10351 = !DILocation(line: 87, column: 55, scope: !10224)
!10352 = !DILocation(line: 87, column: 54, scope: !10224)
!10353 = !DILocation(line: 87, column: 57, scope: !10224)
!10354 = !DILocation(line: 87, column: 18, scope: !10224)
!10355 = !DILocation(line: 87, column: 61, scope: !10224)
!10356 = !DILocation(line: 87, column: 15, scope: !10224)
!10357 = !DILocation(line: 88, column: 40, scope: !10224)
!10358 = !DILocation(line: 88, column: 45, scope: !10224)
!10359 = !DILocation(line: 88, column: 47, scope: !10224)
!10360 = !DILocation(line: 88, column: 46, scope: !10224)
!10361 = !DILocation(line: 88, column: 50, scope: !10224)
!10362 = !DILocation(line: 88, column: 58, scope: !10224)
!10363 = !DILocation(line: 88, column: 49, scope: !10224)
!10364 = !DILocation(line: 89, column: 2, scope: !10224)
!10365 = !DILocation(line: 89, column: 4, scope: !10224)
!10366 = !DILocation(line: 89, column: 3, scope: !10224)
!10367 = !DILocation(line: 89, column: 7, scope: !10224)
!10368 = !DILocation(line: 89, column: 15, scope: !10224)
!10369 = !DILocation(line: 89, column: 6, scope: !10224)
!10370 = !DILocation(line: 88, column: 18, scope: !10224)
!10371 = !DILocation(line: 89, column: 24, scope: !10224)
!10372 = !DILocation(line: 88, column: 15, scope: !10224)
!10373 = !DILocation(line: 90, column: 32, scope: !10224)
!10374 = !DILocation(line: 90, column: 37, scope: !10224)
!10375 = !DILocation(line: 90, column: 46, scope: !10224)
!10376 = !DILocation(line: 90, column: 13, scope: !10224)
!10377 = !DILocation(line: 90, column: 11, scope: !10224)
!10378 = !DILocation(line: 91, column: 29, scope: !10224)
!10379 = !DILocation(line: 91, column: 36, scope: !10224)
!10380 = !DILocation(line: 91, column: 39, scope: !10224)
!10381 = !DILocation(line: 91, column: 42, scope: !10224)
!10382 = !DILocation(line: 91, column: 7, scope: !10224)
!10383 = !DILocation(line: 92, column: 5, scope: !10224)
!10384 = !DILocation(line: 73, column: 27, scope: !10219)
!10385 = !DILocation(line: 73, column: 5, scope: !10219)
!10386 = distinct !{!10386, !10222, !10387}
!10387 = !DILocation(line: 92, column: 5, scope: !10215)
!10388 = !DILocation(line: 93, column: 3, scope: !10216)
!10389 = !DILocation(line: 72, column: 25, scope: !10210)
!10390 = !DILocation(line: 72, column: 3, scope: !10210)
!10391 = distinct !{!10391, !10213, !10392}
!10392 = !DILocation(line: 93, column: 3, scope: !10207)
!10393 = !DILocation(line: 106, column: 3, scope: !10165)
!10394 = distinct !DISubprogram(name: "jbig2_region_find_referred", scope: !531, file: !531, line: 290, type: !10395, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !70)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!9866, !9829, !9866}
!10397 = !DILocalVariable(name: "ctx", arg: 1, scope: !10394, file: !531, line: 290, type: !9829)
!10398 = !DILocation(line: 290, column: 38, scope: !10394)
!10399 = !DILocalVariable(name: "segment", arg: 2, scope: !10394, file: !531, line: 290, type: !9866)
!10400 = !DILocation(line: 290, column: 56, scope: !10394)
!10401 = !DILocalVariable(name: "nsegments", scope: !10394, file: !531, line: 292, type: !5919)
!10402 = !DILocation(line: 292, column: 13, scope: !10394)
!10403 = !DILocation(line: 292, column: 25, scope: !10394)
!10404 = !DILocation(line: 292, column: 34, scope: !10394)
!10405 = !DILocalVariable(name: "rsegment", scope: !10394, file: !531, line: 293, type: !9866)
!10406 = !DILocation(line: 293, column: 17, scope: !10394)
!10407 = !DILocalVariable(name: "index", scope: !10394, file: !531, line: 294, type: !6)
!10408 = !DILocation(line: 294, column: 7, scope: !10394)
!10409 = !DILocation(line: 296, column: 14, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10394, file: !531, line: 296, column: 3)
!10411 = !DILocation(line: 296, column: 8, scope: !10410)
!10412 = !DILocation(line: 296, column: 19, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10410, file: !531, line: 296, column: 3)
!10414 = !DILocation(line: 296, column: 27, scope: !10413)
!10415 = !DILocation(line: 296, column: 25, scope: !10413)
!10416 = !DILocation(line: 296, column: 3, scope: !10410)
!10417 = !DILocation(line: 297, column: 35, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10413, file: !531, line: 296, column: 47)
!10419 = !DILocation(line: 298, column: 7, scope: !10418)
!10420 = !DILocation(line: 298, column: 16, scope: !10418)
!10421 = !DILocation(line: 298, column: 37, scope: !10418)
!10422 = !DILocation(line: 297, column: 16, scope: !10418)
!10423 = !DILocation(line: 297, column: 14, scope: !10418)
!10424 = !DILocation(line: 299, column: 9, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10418, file: !531, line: 299, column: 9)
!10426 = !DILocation(line: 299, column: 18, scope: !10425)
!10427 = !DILocation(line: 299, column: 9, scope: !10418)
!10428 = !DILocation(line: 300, column: 19, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10425, file: !531, line: 299, column: 27)
!10430 = !DILocation(line: 300, column: 48, scope: !10429)
!10431 = !DILocation(line: 300, column: 57, scope: !10429)
!10432 = !DILocation(line: 302, column: 9, scope: !10429)
!10433 = !DILocation(line: 302, column: 18, scope: !10429)
!10434 = !DILocation(line: 302, column: 39, scope: !10429)
!10435 = !DILocation(line: 300, column: 7, scope: !10429)
!10436 = !DILocation(line: 303, column: 7, scope: !10429)
!10437 = !DILocation(line: 305, column: 13, scope: !10418)
!10438 = !DILocation(line: 305, column: 23, scope: !10418)
!10439 = !DILocation(line: 305, column: 29, scope: !10418)
!10440 = !DILocation(line: 305, column: 5, scope: !10418)
!10441 = !DILocation(line: 310, column: 13, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !531, line: 310, column: 13)
!10443 = distinct !DILexicalBlock(scope: !10418, file: !531, line: 305, column: 35)
!10444 = !DILocation(line: 310, column: 23, scope: !10442)
!10445 = !DILocation(line: 310, column: 13, scope: !10443)
!10446 = !DILocation(line: 310, column: 38, scope: !10442)
!10447 = !DILocation(line: 310, column: 31, scope: !10442)
!10448 = !DILocation(line: 311, column: 2, scope: !10443)
!10449 = !DILocation(line: 313, column: 9, scope: !10443)
!10450 = !DILocation(line: 315, column: 3, scope: !10418)
!10451 = !DILocation(line: 296, column: 43, scope: !10413)
!10452 = !DILocation(line: 296, column: 3, scope: !10413)
!10453 = distinct !{!10453, !10416, !10454}
!10454 = !DILocation(line: 315, column: 3, scope: !10410)
!10455 = !DILocation(line: 317, column: 3, scope: !10394)
!10456 = !DILocation(line: 318, column: 1, scope: !10394)
!10457 = distinct !DISubprogram(name: "jbig2_refinement_region", scope: !531, file: !531, line: 324, type: !10458, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !70)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{!6, !9829, !9866, !219}
!10460 = !DILocalVariable(name: "ctx", arg: 1, scope: !10457, file: !531, line: 324, type: !9829)
!10461 = !DILocation(line: 324, column: 35, scope: !10457)
!10462 = !DILocalVariable(name: "segment", arg: 2, scope: !10457, file: !531, line: 324, type: !9866)
!10463 = !DILocation(line: 324, column: 54, scope: !10457)
!10464 = !DILocalVariable(name: "segment_data", arg: 3, scope: !10457, file: !531, line: 325, type: !219)
!10465 = !DILocation(line: 325, column: 44, scope: !10457)
!10466 = !DILocalVariable(name: "params", scope: !10457, file: !531, line: 327, type: !9908)
!10467 = !DILocation(line: 327, column: 31, scope: !10457)
!10468 = !DILocalVariable(name: "rsi", scope: !10457, file: !531, line: 328, type: !10469)
!10469 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2RegionSegmentInfo", file: !90, line: 148, baseType: !10470)
!10470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !90, line: 141, size: 192, elements: !10471)
!10471 = !{!10472, !10473, !10474, !10475, !10476, !10477}
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10470, file: !90, line: 142, baseType: !141, size: 32)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !10470, file: !90, line: 143, baseType: !141, size: 32, offset: 32)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !10470, file: !90, line: 144, baseType: !141, size: 32, offset: 64)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !10470, file: !90, line: 145, baseType: !141, size: 32, offset: 96)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !10470, file: !90, line: 146, baseType: !3145, size: 32, offset: 128)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10470, file: !90, line: 147, baseType: !42, size: 8, offset: 160)
!10478 = !DILocation(line: 328, column: 26, scope: !10457)
!10479 = !DILocalVariable(name: "offset", scope: !10457, file: !531, line: 329, type: !6)
!10480 = !DILocation(line: 329, column: 7, scope: !10457)
!10481 = !DILocalVariable(name: "seg_flags", scope: !10457, file: !531, line: 330, type: !145)
!10482 = !DILocation(line: 330, column: 8, scope: !10457)
!10483 = !DILocation(line: 333, column: 7, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10457, file: !531, line: 333, column: 7)
!10485 = !DILocation(line: 333, column: 16, scope: !10484)
!10486 = !DILocation(line: 333, column: 28, scope: !10484)
!10487 = !DILocation(line: 333, column: 7, scope: !10457)
!10488 = !DILocation(line: 334, column: 24, scope: !10484)
!10489 = !DILocation(line: 334, column: 51, scope: !10484)
!10490 = !DILocation(line: 334, column: 60, scope: !10484)
!10491 = !DILocation(line: 334, column: 12, scope: !10484)
!10492 = !DILocation(line: 334, column: 5, scope: !10484)
!10493 = !DILocation(line: 337, column: 39, scope: !10457)
!10494 = !DILocation(line: 337, column: 3, scope: !10457)
!10495 = !DILocation(line: 338, column: 15, scope: !10457)
!10496 = !DILocation(line: 338, column: 41, scope: !10457)
!10497 = !DILocation(line: 338, column: 50, scope: !10457)
!10498 = !DILocation(line: 340, column: 19, scope: !10457)
!10499 = !DILocation(line: 340, column: 30, scope: !10457)
!10500 = !DILocation(line: 340, column: 42, scope: !10457)
!10501 = !DILocation(line: 340, column: 49, scope: !10457)
!10502 = !DILocation(line: 340, column: 56, scope: !10457)
!10503 = !DILocation(line: 340, column: 52, scope: !10457)
!10504 = !DILocation(line: 338, column: 3, scope: !10457)
!10505 = !DILocation(line: 343, column: 15, scope: !10457)
!10506 = !DILocation(line: 343, column: 13, scope: !10457)
!10507 = !DILocation(line: 344, column: 23, scope: !10457)
!10508 = !DILocation(line: 344, column: 33, scope: !10457)
!10509 = !DILocation(line: 344, column: 10, scope: !10457)
!10510 = !DILocation(line: 344, column: 21, scope: !10457)
!10511 = !DILocation(line: 345, column: 19, scope: !10457)
!10512 = !DILocation(line: 345, column: 29, scope: !10457)
!10513 = !DILocation(line: 345, column: 10, scope: !10457)
!10514 = !DILocation(line: 345, column: 17, scope: !10457)
!10515 = !DILocation(line: 346, column: 15, scope: !10457)
!10516 = !DILocation(line: 346, column: 41, scope: !10457)
!10517 = !DILocation(line: 346, column: 50, scope: !10457)
!10518 = !DILocation(line: 347, column: 44, scope: !10457)
!10519 = !DILocation(line: 348, column: 22, scope: !10457)
!10520 = !DILocation(line: 348, column: 15, scope: !10457)
!10521 = !DILocation(line: 349, column: 22, scope: !10457)
!10522 = !DILocation(line: 349, column: 15, scope: !10457)
!10523 = !DILocation(line: 346, column: 3, scope: !10457)
!10524 = !DILocation(line: 350, column: 7, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10457, file: !531, line: 350, column: 7)
!10526 = !DILocation(line: 350, column: 17, scope: !10525)
!10527 = !DILocation(line: 350, column: 7, scope: !10457)
!10528 = !DILocation(line: 351, column: 17, scope: !10525)
!10529 = !DILocation(line: 351, column: 46, scope: !10525)
!10530 = !DILocation(line: 351, column: 55, scope: !10525)
!10531 = !DILocation(line: 351, column: 5, scope: !10525)
!10532 = !DILocation(line: 353, column: 10, scope: !10457)
!10533 = !DILocation(line: 356, column: 15, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10457, file: !531, line: 356, column: 7)
!10535 = !DILocation(line: 356, column: 8, scope: !10534)
!10536 = !DILocation(line: 356, column: 7, scope: !10457)
!10537 = !DILocation(line: 357, column: 9, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !531, line: 357, column: 9)
!10539 = distinct !DILexicalBlock(scope: !10534, file: !531, line: 356, column: 27)
!10540 = !DILocation(line: 357, column: 18, scope: !10538)
!10541 = !DILocation(line: 357, column: 30, scope: !10538)
!10542 = !DILocation(line: 357, column: 9, scope: !10539)
!10543 = !DILocation(line: 358, column: 26, scope: !10538)
!10544 = !DILocation(line: 358, column: 53, scope: !10538)
!10545 = !DILocation(line: 358, column: 62, scope: !10538)
!10546 = !DILocation(line: 358, column: 14, scope: !10538)
!10547 = !DILocation(line: 358, column: 7, scope: !10538)
!10548 = !DILocation(line: 360, column: 22, scope: !10539)
!10549 = !DILocation(line: 360, column: 35, scope: !10539)
!10550 = !DILocation(line: 360, column: 42, scope: !10539)
!10551 = !DILocation(line: 360, column: 12, scope: !10539)
!10552 = !DILocation(line: 360, column: 5, scope: !10539)
!10553 = !DILocation(line: 360, column: 20, scope: !10539)
!10554 = !DILocation(line: 361, column: 22, scope: !10539)
!10555 = !DILocation(line: 361, column: 35, scope: !10539)
!10556 = !DILocation(line: 361, column: 42, scope: !10539)
!10557 = !DILocation(line: 361, column: 12, scope: !10539)
!10558 = !DILocation(line: 361, column: 5, scope: !10539)
!10559 = !DILocation(line: 361, column: 20, scope: !10539)
!10560 = !DILocation(line: 362, column: 22, scope: !10539)
!10561 = !DILocation(line: 362, column: 35, scope: !10539)
!10562 = !DILocation(line: 362, column: 42, scope: !10539)
!10563 = !DILocation(line: 362, column: 12, scope: !10539)
!10564 = !DILocation(line: 362, column: 5, scope: !10539)
!10565 = !DILocation(line: 362, column: 20, scope: !10539)
!10566 = !DILocation(line: 363, column: 22, scope: !10539)
!10567 = !DILocation(line: 363, column: 35, scope: !10539)
!10568 = !DILocation(line: 363, column: 42, scope: !10539)
!10569 = !DILocation(line: 363, column: 12, scope: !10539)
!10570 = !DILocation(line: 363, column: 5, scope: !10539)
!10571 = !DILocation(line: 363, column: 20, scope: !10539)
!10572 = !DILocation(line: 364, column: 17, scope: !10539)
!10573 = !DILocation(line: 364, column: 43, scope: !10539)
!10574 = !DILocation(line: 364, column: 52, scope: !10539)
!10575 = !DILocation(line: 366, column: 27, scope: !10539)
!10576 = !DILocation(line: 366, column: 20, scope: !10539)
!10577 = !DILocation(line: 366, column: 43, scope: !10539)
!10578 = !DILocation(line: 366, column: 36, scope: !10539)
!10579 = !DILocation(line: 367, column: 27, scope: !10539)
!10580 = !DILocation(line: 367, column: 20, scope: !10539)
!10581 = !DILocation(line: 367, column: 43, scope: !10539)
!10582 = !DILocation(line: 367, column: 36, scope: !10539)
!10583 = !DILocation(line: 364, column: 5, scope: !10539)
!10584 = !DILocation(line: 368, column: 12, scope: !10539)
!10585 = !DILocation(line: 369, column: 3, scope: !10539)
!10586 = !DILocation(line: 372, column: 7, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10457, file: !531, line: 372, column: 7)
!10588 = !DILocation(line: 372, column: 16, scope: !10587)
!10589 = !DILocation(line: 372, column: 7, scope: !10457)
!10590 = !DILocalVariable(name: "ref", scope: !10591, file: !531, line: 373, type: !9866)
!10591 = distinct !DILexicalBlock(scope: !10587, file: !531, line: 372, column: 43)
!10592 = !DILocation(line: 373, column: 19, scope: !10591)
!10593 = !DILocation(line: 375, column: 38, scope: !10591)
!10594 = !DILocation(line: 375, column: 43, scope: !10591)
!10595 = !DILocation(line: 375, column: 11, scope: !10591)
!10596 = !DILocation(line: 375, column: 9, scope: !10591)
!10597 = !DILocation(line: 376, column: 9, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10591, file: !531, line: 376, column: 9)
!10599 = !DILocation(line: 376, column: 13, scope: !10598)
!10600 = !DILocation(line: 376, column: 9, scope: !10591)
!10601 = !DILocation(line: 377, column: 26, scope: !10598)
!10602 = !DILocation(line: 377, column: 53, scope: !10598)
!10603 = !DILocation(line: 377, column: 62, scope: !10598)
!10604 = !DILocation(line: 377, column: 14, scope: !10598)
!10605 = !DILocation(line: 377, column: 7, scope: !10598)
!10606 = !DILocation(line: 384, column: 42, scope: !10591)
!10607 = !DILocation(line: 384, column: 47, scope: !10591)
!10608 = !DILocation(line: 384, column: 52, scope: !10591)
!10609 = !DILocation(line: 384, column: 24, scope: !10591)
!10610 = !DILocation(line: 384, column: 12, scope: !10591)
!10611 = !DILocation(line: 384, column: 22, scope: !10591)
!10612 = !DILocation(line: 385, column: 25, scope: !10591)
!10613 = !DILocation(line: 385, column: 30, scope: !10591)
!10614 = !DILocation(line: 385, column: 35, scope: !10591)
!10615 = !DILocation(line: 385, column: 5, scope: !10591)
!10616 = !DILocation(line: 386, column: 5, scope: !10591)
!10617 = !DILocation(line: 386, column: 10, scope: !10591)
!10618 = !DILocation(line: 386, column: 17, scope: !10591)
!10619 = !DILocation(line: 387, column: 17, scope: !10591)
!10620 = !DILocation(line: 387, column: 44, scope: !10591)
!10621 = !DILocation(line: 387, column: 53, scope: !10591)
!10622 = !DILocation(line: 388, column: 47, scope: !10591)
!10623 = !DILocation(line: 388, column: 52, scope: !10591)
!10624 = !DILocation(line: 387, column: 5, scope: !10591)
!10625 = !DILocation(line: 389, column: 3, scope: !10591)
!10626 = !DILocation(line: 391, column: 42, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10587, file: !531, line: 389, column: 10)
!10628 = !DILocation(line: 392, column: 7, scope: !10627)
!10629 = !DILocation(line: 392, column: 12, scope: !10627)
!10630 = !DILocation(line: 392, column: 18, scope: !10627)
!10631 = !DILocation(line: 392, column: 23, scope: !10627)
!10632 = !DILocation(line: 392, column: 37, scope: !10627)
!10633 = !DILocation(line: 391, column: 24, scope: !10627)
!10634 = !DILocation(line: 391, column: 12, scope: !10627)
!10635 = !DILocation(line: 391, column: 22, scope: !10627)
!10636 = !DILocation(line: 397, column: 10, scope: !10457)
!10637 = !DILocation(line: 397, column: 13, scope: !10457)
!10638 = !DILocation(line: 398, column: 10, scope: !10457)
!10639 = !DILocation(line: 398, column: 13, scope: !10457)
!10640 = !DILocalVariable(name: "ws", scope: !10641, file: !531, line: 400, type: !10642)
!10641 = distinct !DILexicalBlock(scope: !10457, file: !531, line: 399, column: 3)
!10642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10643, size: 64)
!10643 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2WordStream", file: !90, line: 164, baseType: !10644)
!10644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2WordStream", file: !90, line: 166, size: 64, elements: !10645)
!10645 = !{!10646}
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_word", scope: !10644, file: !90, line: 167, baseType: !10647, size: 64)
!10647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10648, size: 64)
!10648 = !DISubroutineType(types: !10649)
!10649 = !{!32, !10642, !6}
!10650 = !DILocation(line: 400, column: 22, scope: !10641)
!10651 = !DILocalVariable(name: "as", scope: !10641, file: !531, line: 401, type: !4988)
!10652 = !DILocation(line: 401, column: 22, scope: !10641)
!10653 = !DILocalVariable(name: "GR_stats", scope: !10641, file: !531, line: 402, type: !595)
!10654 = !DILocation(line: 402, column: 19, scope: !10641)
!10655 = !DILocalVariable(name: "stats_size", scope: !10641, file: !531, line: 403, type: !6)
!10656 = !DILocation(line: 403, column: 9, scope: !10641)
!10657 = !DILocalVariable(name: "image", scope: !10641, file: !531, line: 404, type: !9897)
!10658 = !DILocation(line: 404, column: 17, scope: !10641)
!10659 = !DILocalVariable(name: "code", scope: !10641, file: !531, line: 405, type: !6)
!10660 = !DILocation(line: 405, column: 9, scope: !10641)
!10661 = !DILocation(line: 407, column: 29, scope: !10641)
!10662 = !DILocation(line: 407, column: 38, scope: !10641)
!10663 = !DILocation(line: 407, column: 49, scope: !10641)
!10664 = !DILocation(line: 407, column: 13, scope: !10641)
!10665 = !DILocation(line: 407, column: 11, scope: !10641)
!10666 = !DILocation(line: 408, column: 9, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10641, file: !531, line: 408, column: 9)
!10668 = !DILocation(line: 408, column: 15, scope: !10667)
!10669 = !DILocation(line: 408, column: 9, scope: !10641)
!10670 = !DILocation(line: 409, column: 26, scope: !10667)
!10671 = !DILocation(line: 409, column: 53, scope: !10667)
!10672 = !DILocation(line: 409, column: 62, scope: !10667)
!10673 = !DILocation(line: 409, column: 14, scope: !10667)
!10674 = !DILocation(line: 409, column: 7, scope: !10667)
!10675 = !DILocation(line: 411, column: 17, scope: !10641)
!10676 = !DILocation(line: 411, column: 44, scope: !10641)
!10677 = !DILocation(line: 411, column: 53, scope: !10641)
!10678 = !DILocation(line: 413, column: 15, scope: !10641)
!10679 = !DILocation(line: 413, column: 26, scope: !10641)
!10680 = !DILocation(line: 411, column: 5, scope: !10641)
!10681 = !DILocation(line: 415, column: 25, scope: !10641)
!10682 = !DILocation(line: 415, column: 18, scope: !10641)
!10683 = !DILocation(line: 415, column: 16, scope: !10641)
!10684 = !DILocation(line: 416, column: 28, scope: !10641)
!10685 = !DILocation(line: 416, column: 33, scope: !10641)
!10686 = !DILocation(line: 416, column: 44, scope: !10641)
!10687 = !DILocation(line: 416, column: 16, scope: !10641)
!10688 = !DILocation(line: 416, column: 14, scope: !10641)
!10689 = !DILocation(line: 417, column: 12, scope: !10641)
!10690 = !DILocation(line: 417, column: 25, scope: !10641)
!10691 = !DILocation(line: 417, column: 5, scope: !10641)
!10692 = !DILocation(line: 419, column: 36, scope: !10641)
!10693 = !DILocation(line: 419, column: 41, scope: !10641)
!10694 = !DILocation(line: 419, column: 56, scope: !10641)
!10695 = !DILocation(line: 419, column: 54, scope: !10641)
!10696 = !DILocation(line: 420, column: 12, scope: !10641)
!10697 = !DILocation(line: 420, column: 21, scope: !10641)
!10698 = !DILocation(line: 420, column: 35, scope: !10641)
!10699 = !DILocation(line: 420, column: 33, scope: !10641)
!10700 = !DILocation(line: 419, column: 10, scope: !10641)
!10701 = !DILocation(line: 419, column: 8, scope: !10641)
!10702 = !DILocation(line: 421, column: 26, scope: !10641)
!10703 = !DILocation(line: 421, column: 31, scope: !10641)
!10704 = !DILocation(line: 421, column: 10, scope: !10641)
!10705 = !DILocation(line: 421, column: 8, scope: !10641)
!10706 = !DILocation(line: 422, column: 43, scope: !10641)
!10707 = !DILocation(line: 422, column: 48, scope: !10641)
!10708 = !DILocation(line: 423, column: 31, scope: !10641)
!10709 = !DILocation(line: 423, column: 35, scope: !10641)
!10710 = !DILocation(line: 423, column: 42, scope: !10641)
!10711 = !DILocation(line: 422, column: 12, scope: !10641)
!10712 = !DILocation(line: 422, column: 10, scope: !10641)
!10713 = !DILocation(line: 425, column: 16, scope: !10641)
!10714 = !DILocation(line: 425, column: 21, scope: !10641)
!10715 = !DILocation(line: 425, column: 32, scope: !10641)
!10716 = !DILocation(line: 425, column: 5, scope: !10641)
!10717 = !DILocation(line: 426, column: 32, scope: !10641)
!10718 = !DILocation(line: 426, column: 37, scope: !10641)
!10719 = !DILocation(line: 426, column: 5, scope: !10641)
!10720 = !DILocation(line: 427, column: 16, scope: !10641)
!10721 = !DILocation(line: 427, column: 21, scope: !10641)
!10722 = !DILocation(line: 427, column: 32, scope: !10641)
!10723 = !DILocation(line: 427, column: 5, scope: !10641)
!10724 = !DILocation(line: 429, column: 10, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10641, file: !531, line: 429, column: 9)
!10726 = !DILocation(line: 429, column: 19, scope: !10725)
!10727 = !DILocation(line: 429, column: 25, scope: !10725)
!10728 = !DILocation(line: 429, column: 31, scope: !10725)
!10729 = !DILocation(line: 429, column: 9, scope: !10641)
!10730 = !DILocation(line: 431, column: 20, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10725, file: !531, line: 429, column: 38)
!10732 = !DILocation(line: 431, column: 2, scope: !10731)
!10733 = !DILocation(line: 431, column: 11, scope: !10731)
!10734 = !DILocation(line: 431, column: 18, scope: !10731)
!10735 = !DILocation(line: 432, column: 5, scope: !10731)
!10736 = !DILocation(line: 434, column: 21, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10725, file: !531, line: 432, column: 12)
!10738 = !DILocation(line: 434, column: 48, scope: !10737)
!10739 = !DILocation(line: 434, column: 57, scope: !10737)
!10740 = !DILocation(line: 436, column: 17, scope: !10737)
!10741 = !DILocation(line: 436, column: 28, scope: !10737)
!10742 = !DILocation(line: 436, column: 40, scope: !10737)
!10743 = !DILocation(line: 436, column: 47, scope: !10737)
!10744 = !DILocation(line: 434, column: 9, scope: !10737)
!10745 = !DILocation(line: 437, column: 24, scope: !10737)
!10746 = !DILocation(line: 437, column: 30, scope: !10737)
!10747 = !DILocation(line: 437, column: 35, scope: !10737)
!10748 = !DILocation(line: 437, column: 41, scope: !10737)
!10749 = !DILocation(line: 437, column: 46, scope: !10737)
!10750 = !DILocation(line: 438, column: 11, scope: !10737)
!10751 = !DILocation(line: 438, column: 22, scope: !10737)
!10752 = !DILocation(line: 438, column: 29, scope: !10737)
!10753 = !DILocation(line: 438, column: 36, scope: !10737)
!10754 = !DILocation(line: 437, column: 2, scope: !10737)
!10755 = !DILocation(line: 439, column: 29, scope: !10737)
!10756 = !DILocation(line: 439, column: 34, scope: !10737)
!10757 = !DILocation(line: 439, column: 9, scope: !10737)
!10758 = !DILocation(line: 443, column: 3, scope: !10457)
!10759 = !DILocation(line: 444, column: 1, scope: !10457)
!10760 = distinct !DISubprogram(name: "jbig2_decode_generic_mmr", scope: !226, file: !226, line: 970, type: !10761, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !225, retainedNodes: !70)
!10761 = !DISubroutineType(types: !10762)
!10762 = !{!6, !10763, !10800, !10840, !219, !119, !10831}
!10763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10764, size: 64)
!10764 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !10765)
!10765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !10766)
!10766 = !{!10767, !10784, !10785, !10788, !10789, !10790, !10791, !10792, !10793, !10794, !10795, !10796, !10797, !10798, !10811, !10812, !10813, !10814, !10815}
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !10765, file: !90, line: 45, baseType: !10768, size: 64)
!10768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10769, size: 64)
!10769 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !10770)
!10770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !10771)
!10771 = !{!10772, !10776, !10780}
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !10770, file: !58, line: 86, baseType: !10773, size: 64)
!10773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10774, size: 64)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{!68, !10768, !119}
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10770, file: !58, line: 87, baseType: !10777, size: 64, offset: 64)
!10777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10778, size: 64)
!10778 = !DISubroutineType(types: !10779)
!10779 = !{null, !10768, !68}
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !10770, file: !58, line: 88, baseType: !10781, size: 64, offset: 128)
!10781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10782, size: 64)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!68, !10768, !68, !119}
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !10765, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !10765, file: !90, line: 47, baseType: !10786, size: 64, offset: 128)
!10786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10787, size: 64)
!10787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10764)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !10765, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !10765, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10765, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !10765, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !10765, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !10765, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10765, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !10765, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !10765, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !10765, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!10798 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !10765, file: !90, line: 62, baseType: !10799, size: 64, offset: 640)
!10799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10800, size: 64)
!10800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10801, size: 64)
!10801 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !10802)
!10802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !10803)
!10803 = !{!10804, !10805, !10806, !10807, !10808, !10809, !10810}
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10802, file: !58, line: 117, baseType: !32, size: 32)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10802, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !10802, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !10802, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!10808 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !10802, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !10802, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !10802, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !10765, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !10765, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !10765, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !10765, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !10765, file: !90, line: 70, baseType: !10816, size: 64, offset: 832)
!10816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10817, size: 64)
!10817 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !10818)
!10818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !10819)
!10819 = !{!10820, !10821, !10822, !10823, !10824, !10825, !10826, !10827, !10828, !10829, !10830}
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10818, file: !90, line: 111, baseType: !178, size: 32)
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10818, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!10822 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !10818, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!10823 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10818, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!10824 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !10818, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!10825 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !10818, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !10818, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!10827 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !10818, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!10828 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !10818, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10818, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!10830 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !10818, file: !90, line: 120, baseType: !10831, size: 64, offset: 320)
!10831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10832, size: 64)
!10832 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !10833)
!10833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !10834)
!10834 = !{!10835, !10836, !10837, !10838, !10839}
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10833, file: !58, line: 57, baseType: !6, size: 32)
!10836 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !10833, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!10837 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !10833, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10833, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!10839 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10833, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!10840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10841, size: 64)
!10841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10842)
!10842 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2GenericRegionParams", file: !5304, line: 33, baseType: !10843)
!10843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5304, line: 24, size: 192, elements: !10844)
!10844 = !{!10845, !10846, !10847, !10848, !10849}
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "MMR", scope: !10843, file: !5304, line: 25, baseType: !188, size: 32)
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "GBTEMPLATE", scope: !10843, file: !5304, line: 28, baseType: !6, size: 32, offset: 32)
!10847 = !DIDerivedType(tag: DW_TAG_member, name: "TPGDON", scope: !10843, file: !5304, line: 29, baseType: !188, size: 32, offset: 64)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "USESKIP", scope: !10843, file: !5304, line: 30, baseType: !188, size: 32, offset: 96)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "gbat", scope: !10843, file: !5304, line: 32, baseType: !4563, size: 64, offset: 128)
!10850 = !DILocalVariable(name: "ctx", arg: 1, scope: !10760, file: !226, line: 970, type: !10763)
!10851 = !DILocation(line: 970, column: 36, scope: !10760)
!10852 = !DILocalVariable(name: "segment", arg: 2, scope: !10760, file: !226, line: 971, type: !10800)
!10853 = !DILocation(line: 971, column: 16, scope: !10760)
!10854 = !DILocalVariable(name: "params", arg: 3, scope: !10760, file: !226, line: 972, type: !10840)
!10855 = !DILocation(line: 972, column: 34, scope: !10760)
!10856 = !DILocalVariable(name: "data", arg: 4, scope: !10760, file: !226, line: 973, type: !219)
!10857 = !DILocation(line: 973, column: 14, scope: !10760)
!10858 = !DILocalVariable(name: "size", arg: 5, scope: !10760, file: !226, line: 973, type: !119)
!10859 = !DILocation(line: 973, column: 27, scope: !10760)
!10860 = !DILocalVariable(name: "image", arg: 6, scope: !10760, file: !226, line: 974, type: !10831)
!10861 = !DILocation(line: 974, column: 14, scope: !10760)
!10862 = !DILocalVariable(name: "mmr", scope: !10760, file: !226, line: 976, type: !10863)
!10863 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2MmrCtx", file: !226, line: 42, baseType: !10864)
!10864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !226, line: 34, size: 320, elements: !10865)
!10865 = !{!10866, !10867, !10868, !10869, !10870, !10871, !10872}
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10864, file: !226, line: 35, baseType: !6, size: 32)
!10867 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !10864, file: !226, line: 36, baseType: !6, size: 32, offset: 32)
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10864, file: !226, line: 37, baseType: !219, size: 64, offset: 64)
!10869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10864, file: !226, line: 38, baseType: !119, size: 64, offset: 128)
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "data_index", scope: !10864, file: !226, line: 39, baseType: !6, size: 32, offset: 192)
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "bit_index", scope: !10864, file: !226, line: 40, baseType: !6, size: 32, offset: 224)
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !10864, file: !226, line: 41, baseType: !32, size: 32, offset: 256)
!10873 = !DILocation(line: 976, column: 14, scope: !10760)
!10874 = !DILocalVariable(name: "rowstride", scope: !10760, file: !226, line: 977, type: !5919)
!10875 = !DILocation(line: 977, column: 12, scope: !10760)
!10876 = !DILocation(line: 977, column: 24, scope: !10760)
!10877 = !DILocation(line: 977, column: 31, scope: !10760)
!10878 = !DILocalVariable(name: "dst", scope: !10760, file: !226, line: 978, type: !144)
!10879 = !DILocation(line: 978, column: 8, scope: !10760)
!10880 = !DILocation(line: 978, column: 14, scope: !10760)
!10881 = !DILocation(line: 978, column: 21, scope: !10760)
!10882 = !DILocalVariable(name: "ref", scope: !10760, file: !226, line: 979, type: !144)
!10883 = !DILocation(line: 979, column: 8, scope: !10760)
!10884 = !DILocalVariable(name: "y", scope: !10760, file: !226, line: 980, type: !6)
!10885 = !DILocation(line: 980, column: 6, scope: !10760)
!10886 = !DILocation(line: 982, column: 30, scope: !10760)
!10887 = !DILocation(line: 982, column: 37, scope: !10760)
!10888 = !DILocation(line: 982, column: 44, scope: !10760)
!10889 = !DILocation(line: 982, column: 51, scope: !10760)
!10890 = !DILocation(line: 982, column: 59, scope: !10760)
!10891 = !DILocation(line: 982, column: 65, scope: !10760)
!10892 = !DILocation(line: 982, column: 2, scope: !10760)
!10893 = !DILocation(line: 984, column: 9, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10760, file: !226, line: 984, column: 2)
!10895 = !DILocation(line: 984, column: 7, scope: !10894)
!10896 = !DILocation(line: 984, column: 14, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10894, file: !226, line: 984, column: 2)
!10898 = !DILocation(line: 984, column: 18, scope: !10897)
!10899 = !DILocation(line: 984, column: 25, scope: !10897)
!10900 = !DILocation(line: 984, column: 16, scope: !10897)
!10901 = !DILocation(line: 984, column: 2, scope: !10894)
!10902 = !DILocation(line: 985, column: 10, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10897, file: !226, line: 984, column: 38)
!10904 = !DILocation(line: 985, column: 18, scope: !10903)
!10905 = !DILocation(line: 985, column: 3, scope: !10903)
!10906 = !DILocation(line: 986, column: 31, scope: !10903)
!10907 = !DILocation(line: 986, column: 36, scope: !10903)
!10908 = !DILocation(line: 986, column: 3, scope: !10903)
!10909 = !DILocation(line: 987, column: 9, scope: !10903)
!10910 = !DILocation(line: 987, column: 7, scope: !10903)
!10911 = !DILocation(line: 988, column: 10, scope: !10903)
!10912 = !DILocation(line: 988, column: 7, scope: !10903)
!10913 = !DILocation(line: 989, column: 2, scope: !10903)
!10914 = !DILocation(line: 984, column: 34, scope: !10897)
!10915 = !DILocation(line: 984, column: 2, scope: !10897)
!10916 = distinct !{!10916, !10901, !10917}
!10917 = !DILocation(line: 989, column: 2, scope: !10894)
!10918 = !DILocation(line: 991, column: 2, scope: !10760)
!10919 = distinct !DISubprogram(name: "jbig2_decode_mmr_init", scope: !226, file: !226, line: 46, type: !10920, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{null, !10922, !6, !6, !219, !119}
!10922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10863, size: 64)
!10923 = !DILocalVariable(name: "mmr", arg: 1, scope: !10919, file: !226, line: 46, type: !10922)
!10924 = !DILocation(line: 46, column: 36, scope: !10919)
!10925 = !DILocalVariable(name: "width", arg: 2, scope: !10919, file: !226, line: 46, type: !6)
!10926 = !DILocation(line: 46, column: 45, scope: !10919)
!10927 = !DILocalVariable(name: "height", arg: 3, scope: !10919, file: !226, line: 46, type: !6)
!10928 = !DILocation(line: 46, column: 56, scope: !10919)
!10929 = !DILocalVariable(name: "data", arg: 4, scope: !10919, file: !226, line: 46, type: !219)
!10930 = !DILocation(line: 46, column: 76, scope: !10919)
!10931 = !DILocalVariable(name: "size", arg: 5, scope: !10919, file: !226, line: 46, type: !119)
!10932 = !DILocation(line: 46, column: 89, scope: !10919)
!10933 = !DILocalVariable(name: "i", scope: !10919, file: !226, line: 48, type: !6)
!10934 = !DILocation(line: 48, column: 6, scope: !10919)
!10935 = !DILocalVariable(name: "word", scope: !10919, file: !226, line: 49, type: !32)
!10936 = !DILocation(line: 49, column: 11, scope: !10919)
!10937 = !DILocation(line: 51, column: 15, scope: !10919)
!10938 = !DILocation(line: 51, column: 2, scope: !10919)
!10939 = !DILocation(line: 51, column: 7, scope: !10919)
!10940 = !DILocation(line: 51, column: 13, scope: !10919)
!10941 = !DILocation(line: 52, column: 16, scope: !10919)
!10942 = !DILocation(line: 52, column: 2, scope: !10919)
!10943 = !DILocation(line: 52, column: 7, scope: !10919)
!10944 = !DILocation(line: 52, column: 14, scope: !10919)
!10945 = !DILocation(line: 53, column: 14, scope: !10919)
!10946 = !DILocation(line: 53, column: 2, scope: !10919)
!10947 = !DILocation(line: 53, column: 7, scope: !10919)
!10948 = !DILocation(line: 53, column: 12, scope: !10919)
!10949 = !DILocation(line: 54, column: 14, scope: !10919)
!10950 = !DILocation(line: 54, column: 2, scope: !10919)
!10951 = !DILocation(line: 54, column: 7, scope: !10919)
!10952 = !DILocation(line: 54, column: 12, scope: !10919)
!10953 = !DILocation(line: 55, column: 2, scope: !10919)
!10954 = !DILocation(line: 55, column: 7, scope: !10919)
!10955 = !DILocation(line: 55, column: 18, scope: !10919)
!10956 = !DILocation(line: 56, column: 2, scope: !10919)
!10957 = !DILocation(line: 56, column: 7, scope: !10919)
!10958 = !DILocation(line: 56, column: 17, scope: !10919)
!10959 = !DILocation(line: 58, column: 9, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10919, file: !226, line: 58, column: 2)
!10961 = !DILocation(line: 58, column: 7, scope: !10960)
!10962 = !DILocation(line: 58, column: 14, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10960, file: !226, line: 58, column: 2)
!10964 = !DILocation(line: 58, column: 18, scope: !10963)
!10965 = !DILocation(line: 58, column: 16, scope: !10963)
!10966 = !DILocation(line: 58, column: 23, scope: !10963)
!10967 = !DILocation(line: 58, column: 26, scope: !10963)
!10968 = !DILocation(line: 58, column: 28, scope: !10963)
!10969 = !DILocation(line: 0, scope: !10963)
!10970 = !DILocation(line: 58, column: 2, scope: !10960)
!10971 = !DILocation(line: 59, column: 12, scope: !10963)
!10972 = !DILocation(line: 59, column: 17, scope: !10963)
!10973 = !DILocation(line: 59, column: 29, scope: !10963)
!10974 = !DILocation(line: 59, column: 27, scope: !10963)
!10975 = !DILocation(line: 59, column: 32, scope: !10963)
!10976 = !DILocation(line: 59, column: 20, scope: !10963)
!10977 = !DILocation(line: 59, column: 8, scope: !10963)
!10978 = !DILocation(line: 59, column: 3, scope: !10963)
!10979 = !DILocation(line: 58, column: 34, scope: !10963)
!10980 = !DILocation(line: 58, column: 2, scope: !10963)
!10981 = distinct !{!10981, !10970, !10982}
!10982 = !DILocation(line: 59, column: 37, scope: !10960)
!10983 = !DILocation(line: 60, column: 14, scope: !10919)
!10984 = !DILocation(line: 60, column: 2, scope: !10919)
!10985 = !DILocation(line: 60, column: 7, scope: !10919)
!10986 = !DILocation(line: 60, column: 12, scope: !10919)
!10987 = !DILocation(line: 61, column: 1, scope: !10919)
!10988 = distinct !DISubprogram(name: "jbig2_decode_mmr_line", scope: !226, file: !226, line: 828, type: !10989, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!10989 = !DISubroutineType(types: !10990)
!10990 = !{null, !10922, !219, !144}
!10991 = !DILocalVariable(name: "mmr", arg: 1, scope: !10988, file: !226, line: 828, type: !10922)
!10992 = !DILocation(line: 828, column: 36, scope: !10988)
!10993 = !DILocalVariable(name: "ref", arg: 2, scope: !10988, file: !226, line: 828, type: !219)
!10994 = !DILocation(line: 828, column: 53, scope: !10988)
!10995 = !DILocalVariable(name: "dst", arg: 3, scope: !10988, file: !226, line: 828, type: !144)
!10996 = !DILocation(line: 828, column: 64, scope: !10988)
!10997 = !DILocalVariable(name: "a0", scope: !10988, file: !226, line: 830, type: !6)
!10998 = !DILocation(line: 830, column: 6, scope: !10988)
!10999 = !DILocalVariable(name: "a1", scope: !10988, file: !226, line: 830, type: !6)
!11000 = !DILocation(line: 830, column: 10, scope: !10988)
!11001 = !DILocalVariable(name: "a2", scope: !10988, file: !226, line: 830, type: !6)
!11002 = !DILocation(line: 830, column: 14, scope: !10988)
!11003 = !DILocalVariable(name: "b1", scope: !10988, file: !226, line: 830, type: !6)
!11004 = !DILocation(line: 830, column: 18, scope: !10988)
!11005 = !DILocalVariable(name: "b2", scope: !10988, file: !226, line: 830, type: !6)
!11006 = !DILocation(line: 830, column: 22, scope: !10988)
!11007 = !DILocalVariable(name: "c", scope: !10988, file: !226, line: 831, type: !6)
!11008 = !DILocation(line: 831, column: 6, scope: !10988)
!11009 = !DILocation(line: 833, column: 5, scope: !10988)
!11010 = !DILocation(line: 834, column: 4, scope: !10988)
!11011 = !DILocation(line: 836, column: 2, scope: !10988)
!11012 = !DILocalVariable(name: "word", scope: !11013, file: !226, line: 838, type: !32)
!11013 = distinct !DILexicalBlock(scope: !10988, file: !226, line: 837, column: 2)
!11014 = !DILocation(line: 838, column: 12, scope: !11013)
!11015 = !DILocation(line: 838, column: 19, scope: !11013)
!11016 = !DILocation(line: 838, column: 24, scope: !11013)
!11017 = !DILocation(line: 841, column: 7, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11013, file: !226, line: 841, column: 7)
!11019 = !DILocation(line: 841, column: 13, scope: !11018)
!11020 = !DILocation(line: 841, column: 18, scope: !11018)
!11021 = !DILocation(line: 841, column: 10, scope: !11018)
!11022 = !DILocation(line: 841, column: 7, scope: !11013)
!11023 = !DILocation(line: 842, column: 4, scope: !11018)
!11024 = !DILocation(line: 844, column: 8, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11013, file: !226, line: 844, column: 7)
!11026 = !DILocation(line: 844, column: 13, scope: !11025)
!11027 = !DILocation(line: 844, column: 26, scope: !11025)
!11028 = !DILocation(line: 844, column: 7, scope: !11013)
!11029 = !DILocalVariable(name: "white_run", scope: !11030, file: !226, line: 846, type: !6)
!11030 = distinct !DILexicalBlock(scope: !11025, file: !226, line: 845, column: 3)
!11031 = !DILocation(line: 846, column: 8, scope: !11030)
!11032 = !DILocalVariable(name: "black_run", scope: !11030, file: !226, line: 846, type: !6)
!11033 = !DILocation(line: 846, column: 19, scope: !11030)
!11034 = !DILocation(line: 848, column: 29, scope: !11030)
!11035 = !DILocation(line: 848, column: 4, scope: !11030)
!11036 = !DILocation(line: 850, column: 8, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11030, file: !226, line: 850, column: 8)
!11038 = !DILocation(line: 850, column: 11, scope: !11037)
!11039 = !DILocation(line: 850, column: 8, scope: !11030)
!11040 = !DILocation(line: 851, column: 8, scope: !11037)
!11041 = !DILocation(line: 851, column: 5, scope: !11037)
!11042 = !DILocation(line: 853, column: 8, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11030, file: !226, line: 853, column: 8)
!11044 = !DILocation(line: 853, column: 10, scope: !11043)
!11045 = !DILocation(line: 853, column: 8, scope: !11030)
!11046 = !DILocation(line: 854, column: 38, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11043, file: !226, line: 853, column: 16)
!11048 = !DILocation(line: 854, column: 17, scope: !11047)
!11049 = !DILocation(line: 854, column: 15, scope: !11047)
!11050 = !DILocation(line: 855, column: 38, scope: !11047)
!11051 = !DILocation(line: 855, column: 17, scope: !11047)
!11052 = !DILocation(line: 855, column: 15, scope: !11047)
!11053 = !DILocation(line: 856, column: 10, scope: !11047)
!11054 = !DILocation(line: 856, column: 15, scope: !11047)
!11055 = !DILocation(line: 856, column: 13, scope: !11047)
!11056 = !DILocation(line: 856, column: 8, scope: !11047)
!11057 = !DILocation(line: 857, column: 10, scope: !11047)
!11058 = !DILocation(line: 857, column: 15, scope: !11047)
!11059 = !DILocation(line: 857, column: 13, scope: !11047)
!11060 = !DILocation(line: 857, column: 8, scope: !11047)
!11061 = !DILocation(line: 858, column: 9, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11047, file: !226, line: 858, column: 9)
!11063 = !DILocation(line: 858, column: 14, scope: !11062)
!11064 = !DILocation(line: 858, column: 19, scope: !11062)
!11065 = !DILocation(line: 858, column: 12, scope: !11062)
!11066 = !DILocation(line: 858, column: 9, scope: !11047)
!11067 = !DILocation(line: 858, column: 31, scope: !11062)
!11068 = !DILocation(line: 858, column: 36, scope: !11062)
!11069 = !DILocation(line: 858, column: 29, scope: !11062)
!11070 = !DILocation(line: 858, column: 26, scope: !11062)
!11071 = !DILocation(line: 859, column: 9, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11047, file: !226, line: 859, column: 9)
!11073 = !DILocation(line: 859, column: 14, scope: !11072)
!11074 = !DILocation(line: 859, column: 19, scope: !11072)
!11075 = !DILocation(line: 859, column: 12, scope: !11072)
!11076 = !DILocation(line: 859, column: 9, scope: !11047)
!11077 = !DILocation(line: 859, column: 31, scope: !11072)
!11078 = !DILocation(line: 859, column: 36, scope: !11072)
!11079 = !DILocation(line: 859, column: 29, scope: !11072)
!11080 = !DILocation(line: 859, column: 26, scope: !11072)
!11081 = !DILocation(line: 860, column: 20, scope: !11047)
!11082 = !DILocation(line: 860, column: 25, scope: !11047)
!11083 = !DILocation(line: 860, column: 29, scope: !11047)
!11084 = !DILocation(line: 860, column: 5, scope: !11047)
!11085 = !DILocation(line: 861, column: 10, scope: !11047)
!11086 = !DILocation(line: 861, column: 8, scope: !11047)
!11087 = !DILocation(line: 863, column: 4, scope: !11047)
!11088 = !DILocation(line: 866, column: 38, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11043, file: !226, line: 865, column: 4)
!11090 = !DILocation(line: 866, column: 17, scope: !11089)
!11091 = !DILocation(line: 866, column: 15, scope: !11089)
!11092 = !DILocation(line: 867, column: 38, scope: !11089)
!11093 = !DILocation(line: 867, column: 17, scope: !11089)
!11094 = !DILocation(line: 867, column: 15, scope: !11089)
!11095 = !DILocation(line: 868, column: 10, scope: !11089)
!11096 = !DILocation(line: 868, column: 15, scope: !11089)
!11097 = !DILocation(line: 868, column: 13, scope: !11089)
!11098 = !DILocation(line: 868, column: 8, scope: !11089)
!11099 = !DILocation(line: 869, column: 10, scope: !11089)
!11100 = !DILocation(line: 869, column: 15, scope: !11089)
!11101 = !DILocation(line: 869, column: 13, scope: !11089)
!11102 = !DILocation(line: 869, column: 8, scope: !11089)
!11103 = !DILocation(line: 870, column: 9, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11089, file: !226, line: 870, column: 9)
!11105 = !DILocation(line: 870, column: 14, scope: !11104)
!11106 = !DILocation(line: 870, column: 19, scope: !11104)
!11107 = !DILocation(line: 870, column: 12, scope: !11104)
!11108 = !DILocation(line: 870, column: 9, scope: !11089)
!11109 = !DILocation(line: 870, column: 31, scope: !11104)
!11110 = !DILocation(line: 870, column: 36, scope: !11104)
!11111 = !DILocation(line: 870, column: 29, scope: !11104)
!11112 = !DILocation(line: 870, column: 26, scope: !11104)
!11113 = !DILocation(line: 871, column: 9, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11089, file: !226, line: 871, column: 9)
!11115 = !DILocation(line: 871, column: 14, scope: !11114)
!11116 = !DILocation(line: 871, column: 19, scope: !11114)
!11117 = !DILocation(line: 871, column: 12, scope: !11114)
!11118 = !DILocation(line: 871, column: 9, scope: !11089)
!11119 = !DILocation(line: 871, column: 31, scope: !11114)
!11120 = !DILocation(line: 871, column: 36, scope: !11114)
!11121 = !DILocation(line: 871, column: 29, scope: !11114)
!11122 = !DILocation(line: 871, column: 26, scope: !11114)
!11123 = !DILocation(line: 872, column: 20, scope: !11089)
!11124 = !DILocation(line: 872, column: 25, scope: !11089)
!11125 = !DILocation(line: 872, column: 29, scope: !11089)
!11126 = !DILocation(line: 872, column: 5, scope: !11089)
!11127 = !DILocation(line: 873, column: 10, scope: !11089)
!11128 = !DILocation(line: 873, column: 8, scope: !11089)
!11129 = !DILocation(line: 876, column: 3, scope: !11030)
!11130 = !DILocation(line: 878, column: 13, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11025, file: !226, line: 878, column: 12)
!11132 = !DILocation(line: 878, column: 18, scope: !11131)
!11133 = !DILocation(line: 878, column: 31, scope: !11131)
!11134 = !DILocation(line: 878, column: 12, scope: !11025)
!11135 = !DILocation(line: 881, column: 29, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11131, file: !226, line: 879, column: 3)
!11137 = !DILocation(line: 881, column: 4, scope: !11136)
!11138 = !DILocation(line: 882, column: 46, scope: !11136)
!11139 = !DILocation(line: 882, column: 51, scope: !11136)
!11140 = !DILocation(line: 882, column: 55, scope: !11136)
!11141 = !DILocation(line: 882, column: 60, scope: !11136)
!11142 = !DILocation(line: 882, column: 68, scope: !11136)
!11143 = !DILocation(line: 882, column: 67, scope: !11136)
!11144 = !DILocation(line: 882, column: 9, scope: !11136)
!11145 = !DILocation(line: 882, column: 7, scope: !11136)
!11146 = !DILocation(line: 883, column: 37, scope: !11136)
!11147 = !DILocation(line: 883, column: 42, scope: !11136)
!11148 = !DILocation(line: 883, column: 46, scope: !11136)
!11149 = !DILocation(line: 883, column: 51, scope: !11136)
!11150 = !DILocation(line: 883, column: 9, scope: !11136)
!11151 = !DILocation(line: 883, column: 7, scope: !11136)
!11152 = !DILocation(line: 884, column: 8, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11136, file: !226, line: 884, column: 8)
!11154 = !DILocation(line: 884, column: 8, scope: !11136)
!11155 = !DILocation(line: 884, column: 26, scope: !11153)
!11156 = !DILocation(line: 884, column: 31, scope: !11153)
!11157 = !DILocation(line: 884, column: 35, scope: !11153)
!11158 = !DILocation(line: 884, column: 11, scope: !11153)
!11159 = !DILocation(line: 885, column: 9, scope: !11136)
!11160 = !DILocation(line: 885, column: 7, scope: !11136)
!11161 = !DILocation(line: 886, column: 3, scope: !11136)
!11162 = !DILocation(line: 888, column: 13, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11131, file: !226, line: 888, column: 12)
!11164 = !DILocation(line: 888, column: 18, scope: !11163)
!11165 = !DILocation(line: 888, column: 31, scope: !11163)
!11166 = !DILocation(line: 888, column: 12, scope: !11131)
!11167 = !DILocation(line: 891, column: 29, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11163, file: !226, line: 889, column: 3)
!11169 = !DILocation(line: 891, column: 4, scope: !11168)
!11170 = !DILocation(line: 892, column: 46, scope: !11168)
!11171 = !DILocation(line: 892, column: 51, scope: !11168)
!11172 = !DILocation(line: 892, column: 55, scope: !11168)
!11173 = !DILocation(line: 892, column: 60, scope: !11168)
!11174 = !DILocation(line: 892, column: 68, scope: !11168)
!11175 = !DILocation(line: 892, column: 67, scope: !11168)
!11176 = !DILocation(line: 892, column: 9, scope: !11168)
!11177 = !DILocation(line: 892, column: 7, scope: !11168)
!11178 = !DILocation(line: 893, column: 8, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11168, file: !226, line: 893, column: 8)
!11180 = !DILocation(line: 893, column: 8, scope: !11168)
!11181 = !DILocation(line: 893, column: 26, scope: !11179)
!11182 = !DILocation(line: 893, column: 31, scope: !11179)
!11183 = !DILocation(line: 893, column: 35, scope: !11179)
!11184 = !DILocation(line: 893, column: 11, scope: !11179)
!11185 = !DILocation(line: 894, column: 9, scope: !11168)
!11186 = !DILocation(line: 894, column: 7, scope: !11168)
!11187 = !DILocation(line: 895, column: 9, scope: !11168)
!11188 = !DILocation(line: 895, column: 8, scope: !11168)
!11189 = !DILocation(line: 895, column: 6, scope: !11168)
!11190 = !DILocation(line: 896, column: 3, scope: !11168)
!11191 = !DILocation(line: 898, column: 13, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11163, file: !226, line: 898, column: 12)
!11193 = !DILocation(line: 898, column: 18, scope: !11192)
!11194 = !DILocation(line: 898, column: 31, scope: !11192)
!11195 = !DILocation(line: 898, column: 12, scope: !11163)
!11196 = !DILocation(line: 901, column: 29, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11192, file: !226, line: 899, column: 3)
!11198 = !DILocation(line: 901, column: 4, scope: !11197)
!11199 = !DILocation(line: 902, column: 46, scope: !11197)
!11200 = !DILocation(line: 902, column: 51, scope: !11197)
!11201 = !DILocation(line: 902, column: 55, scope: !11197)
!11202 = !DILocation(line: 902, column: 60, scope: !11197)
!11203 = !DILocation(line: 902, column: 68, scope: !11197)
!11204 = !DILocation(line: 902, column: 67, scope: !11197)
!11205 = !DILocation(line: 902, column: 9, scope: !11197)
!11206 = !DILocation(line: 902, column: 7, scope: !11197)
!11207 = !DILocation(line: 903, column: 8, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11197, file: !226, line: 903, column: 8)
!11209 = !DILocation(line: 903, column: 11, scope: !11208)
!11210 = !DILocation(line: 903, column: 17, scope: !11208)
!11211 = !DILocation(line: 903, column: 22, scope: !11208)
!11212 = !DILocation(line: 903, column: 15, scope: !11208)
!11213 = !DILocation(line: 903, column: 8, scope: !11197)
!11214 = !DILocation(line: 903, column: 29, scope: !11208)
!11215 = !DILocation(line: 904, column: 8, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11197, file: !226, line: 904, column: 8)
!11217 = !DILocation(line: 904, column: 8, scope: !11197)
!11218 = !DILocation(line: 904, column: 26, scope: !11216)
!11219 = !DILocation(line: 904, column: 31, scope: !11216)
!11220 = !DILocation(line: 904, column: 35, scope: !11216)
!11221 = !DILocation(line: 904, column: 38, scope: !11216)
!11222 = !DILocation(line: 904, column: 11, scope: !11216)
!11223 = !DILocation(line: 905, column: 9, scope: !11197)
!11224 = !DILocation(line: 905, column: 12, scope: !11197)
!11225 = !DILocation(line: 905, column: 7, scope: !11197)
!11226 = !DILocation(line: 906, column: 9, scope: !11197)
!11227 = !DILocation(line: 906, column: 8, scope: !11197)
!11228 = !DILocation(line: 906, column: 6, scope: !11197)
!11229 = !DILocation(line: 907, column: 3, scope: !11197)
!11230 = !DILocation(line: 909, column: 13, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11192, file: !226, line: 909, column: 12)
!11232 = !DILocation(line: 909, column: 18, scope: !11231)
!11233 = !DILocation(line: 909, column: 31, scope: !11231)
!11234 = !DILocation(line: 909, column: 12, scope: !11192)
!11235 = !DILocation(line: 912, column: 29, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11231, file: !226, line: 910, column: 3)
!11237 = !DILocation(line: 912, column: 4, scope: !11236)
!11238 = !DILocation(line: 913, column: 46, scope: !11236)
!11239 = !DILocation(line: 913, column: 51, scope: !11236)
!11240 = !DILocation(line: 913, column: 55, scope: !11236)
!11241 = !DILocation(line: 913, column: 60, scope: !11236)
!11242 = !DILocation(line: 913, column: 68, scope: !11236)
!11243 = !DILocation(line: 913, column: 67, scope: !11236)
!11244 = !DILocation(line: 913, column: 9, scope: !11236)
!11245 = !DILocation(line: 913, column: 7, scope: !11236)
!11246 = !DILocation(line: 914, column: 8, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11236, file: !226, line: 914, column: 8)
!11248 = !DILocation(line: 914, column: 11, scope: !11247)
!11249 = !DILocation(line: 914, column: 17, scope: !11247)
!11250 = !DILocation(line: 914, column: 22, scope: !11247)
!11251 = !DILocation(line: 914, column: 15, scope: !11247)
!11252 = !DILocation(line: 914, column: 8, scope: !11236)
!11253 = !DILocation(line: 914, column: 29, scope: !11247)
!11254 = !DILocation(line: 915, column: 8, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11236, file: !226, line: 915, column: 8)
!11256 = !DILocation(line: 915, column: 8, scope: !11236)
!11257 = !DILocation(line: 915, column: 26, scope: !11255)
!11258 = !DILocation(line: 915, column: 31, scope: !11255)
!11259 = !DILocation(line: 915, column: 35, scope: !11255)
!11260 = !DILocation(line: 915, column: 38, scope: !11255)
!11261 = !DILocation(line: 915, column: 11, scope: !11255)
!11262 = !DILocation(line: 916, column: 9, scope: !11236)
!11263 = !DILocation(line: 916, column: 12, scope: !11236)
!11264 = !DILocation(line: 916, column: 7, scope: !11236)
!11265 = !DILocation(line: 917, column: 9, scope: !11236)
!11266 = !DILocation(line: 917, column: 8, scope: !11236)
!11267 = !DILocation(line: 917, column: 6, scope: !11236)
!11268 = !DILocation(line: 918, column: 3, scope: !11236)
!11269 = !DILocation(line: 920, column: 13, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11231, file: !226, line: 920, column: 12)
!11271 = !DILocation(line: 920, column: 18, scope: !11270)
!11272 = !DILocation(line: 920, column: 31, scope: !11270)
!11273 = !DILocation(line: 920, column: 12, scope: !11231)
!11274 = !DILocation(line: 923, column: 29, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11270, file: !226, line: 921, column: 3)
!11276 = !DILocation(line: 923, column: 4, scope: !11275)
!11277 = !DILocation(line: 924, column: 46, scope: !11275)
!11278 = !DILocation(line: 924, column: 51, scope: !11275)
!11279 = !DILocation(line: 924, column: 55, scope: !11275)
!11280 = !DILocation(line: 924, column: 60, scope: !11275)
!11281 = !DILocation(line: 924, column: 68, scope: !11275)
!11282 = !DILocation(line: 924, column: 67, scope: !11275)
!11283 = !DILocation(line: 924, column: 9, scope: !11275)
!11284 = !DILocation(line: 924, column: 7, scope: !11275)
!11285 = !DILocation(line: 925, column: 8, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11275, file: !226, line: 925, column: 8)
!11287 = !DILocation(line: 925, column: 11, scope: !11286)
!11288 = !DILocation(line: 925, column: 17, scope: !11286)
!11289 = !DILocation(line: 925, column: 22, scope: !11286)
!11290 = !DILocation(line: 925, column: 15, scope: !11286)
!11291 = !DILocation(line: 925, column: 8, scope: !11275)
!11292 = !DILocation(line: 925, column: 29, scope: !11286)
!11293 = !DILocation(line: 926, column: 8, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11275, file: !226, line: 926, column: 8)
!11295 = !DILocation(line: 926, column: 8, scope: !11275)
!11296 = !DILocation(line: 926, column: 26, scope: !11294)
!11297 = !DILocation(line: 926, column: 31, scope: !11294)
!11298 = !DILocation(line: 926, column: 35, scope: !11294)
!11299 = !DILocation(line: 926, column: 38, scope: !11294)
!11300 = !DILocation(line: 926, column: 11, scope: !11294)
!11301 = !DILocation(line: 927, column: 9, scope: !11275)
!11302 = !DILocation(line: 927, column: 12, scope: !11275)
!11303 = !DILocation(line: 927, column: 7, scope: !11275)
!11304 = !DILocation(line: 928, column: 9, scope: !11275)
!11305 = !DILocation(line: 928, column: 8, scope: !11275)
!11306 = !DILocation(line: 928, column: 6, scope: !11275)
!11307 = !DILocation(line: 929, column: 3, scope: !11275)
!11308 = !DILocation(line: 931, column: 13, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11270, file: !226, line: 931, column: 12)
!11310 = !DILocation(line: 931, column: 18, scope: !11309)
!11311 = !DILocation(line: 931, column: 31, scope: !11309)
!11312 = !DILocation(line: 931, column: 12, scope: !11270)
!11313 = !DILocation(line: 934, column: 29, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11309, file: !226, line: 932, column: 3)
!11315 = !DILocation(line: 934, column: 4, scope: !11314)
!11316 = !DILocation(line: 935, column: 46, scope: !11314)
!11317 = !DILocation(line: 935, column: 51, scope: !11314)
!11318 = !DILocation(line: 935, column: 55, scope: !11314)
!11319 = !DILocation(line: 935, column: 60, scope: !11314)
!11320 = !DILocation(line: 935, column: 68, scope: !11314)
!11321 = !DILocation(line: 935, column: 67, scope: !11314)
!11322 = !DILocation(line: 935, column: 9, scope: !11314)
!11323 = !DILocation(line: 935, column: 7, scope: !11314)
!11324 = !DILocation(line: 936, column: 8, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11314, file: !226, line: 936, column: 8)
!11326 = !DILocation(line: 936, column: 11, scope: !11325)
!11327 = !DILocation(line: 936, column: 15, scope: !11325)
!11328 = !DILocation(line: 936, column: 8, scope: !11314)
!11329 = !DILocation(line: 936, column: 20, scope: !11325)
!11330 = !DILocation(line: 937, column: 8, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11314, file: !226, line: 937, column: 8)
!11332 = !DILocation(line: 937, column: 8, scope: !11314)
!11333 = !DILocation(line: 937, column: 26, scope: !11331)
!11334 = !DILocation(line: 937, column: 31, scope: !11331)
!11335 = !DILocation(line: 937, column: 35, scope: !11331)
!11336 = !DILocation(line: 937, column: 38, scope: !11331)
!11337 = !DILocation(line: 937, column: 11, scope: !11331)
!11338 = !DILocation(line: 938, column: 9, scope: !11314)
!11339 = !DILocation(line: 938, column: 12, scope: !11314)
!11340 = !DILocation(line: 938, column: 7, scope: !11314)
!11341 = !DILocation(line: 939, column: 9, scope: !11314)
!11342 = !DILocation(line: 939, column: 8, scope: !11314)
!11343 = !DILocation(line: 939, column: 6, scope: !11314)
!11344 = !DILocation(line: 940, column: 3, scope: !11314)
!11345 = !DILocation(line: 942, column: 13, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11309, file: !226, line: 942, column: 12)
!11347 = !DILocation(line: 942, column: 18, scope: !11346)
!11348 = !DILocation(line: 942, column: 31, scope: !11346)
!11349 = !DILocation(line: 942, column: 12, scope: !11309)
!11350 = !DILocation(line: 945, column: 29, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11346, file: !226, line: 943, column: 3)
!11352 = !DILocation(line: 945, column: 4, scope: !11351)
!11353 = !DILocation(line: 946, column: 46, scope: !11351)
!11354 = !DILocation(line: 946, column: 51, scope: !11351)
!11355 = !DILocation(line: 946, column: 55, scope: !11351)
!11356 = !DILocation(line: 946, column: 60, scope: !11351)
!11357 = !DILocation(line: 946, column: 68, scope: !11351)
!11358 = !DILocation(line: 946, column: 67, scope: !11351)
!11359 = !DILocation(line: 946, column: 9, scope: !11351)
!11360 = !DILocation(line: 946, column: 7, scope: !11351)
!11361 = !DILocation(line: 947, column: 8, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11351, file: !226, line: 947, column: 8)
!11363 = !DILocation(line: 947, column: 11, scope: !11362)
!11364 = !DILocation(line: 947, column: 15, scope: !11362)
!11365 = !DILocation(line: 947, column: 8, scope: !11351)
!11366 = !DILocation(line: 947, column: 20, scope: !11362)
!11367 = !DILocation(line: 948, column: 8, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11351, file: !226, line: 948, column: 8)
!11369 = !DILocation(line: 948, column: 8, scope: !11351)
!11370 = !DILocation(line: 948, column: 26, scope: !11368)
!11371 = !DILocation(line: 948, column: 31, scope: !11368)
!11372 = !DILocation(line: 948, column: 35, scope: !11368)
!11373 = !DILocation(line: 948, column: 38, scope: !11368)
!11374 = !DILocation(line: 948, column: 11, scope: !11368)
!11375 = !DILocation(line: 949, column: 9, scope: !11351)
!11376 = !DILocation(line: 949, column: 12, scope: !11351)
!11377 = !DILocation(line: 949, column: 7, scope: !11351)
!11378 = !DILocation(line: 950, column: 9, scope: !11351)
!11379 = !DILocation(line: 950, column: 8, scope: !11351)
!11380 = !DILocation(line: 950, column: 6, scope: !11351)
!11381 = !DILocation(line: 951, column: 3, scope: !11351)
!11382 = !DILocation(line: 953, column: 13, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11346, file: !226, line: 953, column: 12)
!11384 = !DILocation(line: 953, column: 18, scope: !11383)
!11385 = !DILocation(line: 953, column: 31, scope: !11383)
!11386 = !DILocation(line: 953, column: 12, scope: !11346)
!11387 = !DILocation(line: 956, column: 29, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11383, file: !226, line: 954, column: 3)
!11389 = !DILocation(line: 956, column: 4, scope: !11388)
!11390 = !DILocation(line: 957, column: 46, scope: !11388)
!11391 = !DILocation(line: 957, column: 51, scope: !11388)
!11392 = !DILocation(line: 957, column: 55, scope: !11388)
!11393 = !DILocation(line: 957, column: 60, scope: !11388)
!11394 = !DILocation(line: 957, column: 68, scope: !11388)
!11395 = !DILocation(line: 957, column: 67, scope: !11388)
!11396 = !DILocation(line: 957, column: 9, scope: !11388)
!11397 = !DILocation(line: 957, column: 7, scope: !11388)
!11398 = !DILocation(line: 958, column: 8, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11388, file: !226, line: 958, column: 8)
!11400 = !DILocation(line: 958, column: 11, scope: !11399)
!11401 = !DILocation(line: 958, column: 15, scope: !11399)
!11402 = !DILocation(line: 958, column: 8, scope: !11388)
!11403 = !DILocation(line: 958, column: 20, scope: !11399)
!11404 = !DILocation(line: 959, column: 8, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11388, file: !226, line: 959, column: 8)
!11406 = !DILocation(line: 959, column: 8, scope: !11388)
!11407 = !DILocation(line: 959, column: 26, scope: !11405)
!11408 = !DILocation(line: 959, column: 31, scope: !11405)
!11409 = !DILocation(line: 959, column: 35, scope: !11405)
!11410 = !DILocation(line: 959, column: 38, scope: !11405)
!11411 = !DILocation(line: 959, column: 11, scope: !11405)
!11412 = !DILocation(line: 960, column: 9, scope: !11388)
!11413 = !DILocation(line: 960, column: 12, scope: !11388)
!11414 = !DILocation(line: 960, column: 7, scope: !11388)
!11415 = !DILocation(line: 961, column: 9, scope: !11388)
!11416 = !DILocation(line: 961, column: 8, scope: !11388)
!11417 = !DILocation(line: 961, column: 6, scope: !11388)
!11418 = !DILocation(line: 962, column: 3, scope: !11388)
!11419 = !DILocation(line: 965, column: 4, scope: !11383)
!11420 = distinct !{!11420, !11011, !11421}
!11421 = !DILocation(line: 966, column: 2, scope: !10988)
!11422 = !DILocation(line: 967, column: 1, scope: !10988)
!11423 = distinct !DISubprogram(name: "jbig2_decode_mmr_consume", scope: !226, file: !226, line: 64, type: !11424, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!11424 = !DISubroutineType(types: !11425)
!11425 = !{null, !10922, !6}
!11426 = !DILocalVariable(name: "mmr", arg: 1, scope: !11423, file: !226, line: 64, type: !10922)
!11427 = !DILocation(line: 64, column: 39, scope: !11423)
!11428 = !DILocalVariable(name: "n_bits", arg: 2, scope: !11423, file: !226, line: 64, type: !6)
!11429 = !DILocation(line: 64, column: 48, scope: !11423)
!11430 = !DILocation(line: 66, column: 16, scope: !11423)
!11431 = !DILocation(line: 66, column: 2, scope: !11423)
!11432 = !DILocation(line: 66, column: 7, scope: !11423)
!11433 = !DILocation(line: 66, column: 12, scope: !11423)
!11434 = !DILocation(line: 67, column: 20, scope: !11423)
!11435 = !DILocation(line: 67, column: 2, scope: !11423)
!11436 = !DILocation(line: 67, column: 7, scope: !11423)
!11437 = !DILocation(line: 67, column: 17, scope: !11423)
!11438 = !DILocation(line: 68, column: 2, scope: !11423)
!11439 = !DILocation(line: 68, column: 9, scope: !11423)
!11440 = !DILocation(line: 68, column: 14, scope: !11423)
!11441 = !DILocation(line: 68, column: 24, scope: !11423)
!11442 = !DILocation(line: 69, column: 3, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11423, file: !226, line: 68, column: 30)
!11444 = !DILocation(line: 69, column: 8, scope: !11443)
!11445 = !DILocation(line: 69, column: 18, scope: !11443)
!11446 = !DILocation(line: 70, column: 7, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11443, file: !226, line: 70, column: 7)
!11448 = !DILocation(line: 70, column: 12, scope: !11447)
!11449 = !DILocation(line: 70, column: 23, scope: !11447)
!11450 = !DILocation(line: 70, column: 29, scope: !11447)
!11451 = !DILocation(line: 70, column: 34, scope: !11447)
!11452 = !DILocation(line: 70, column: 27, scope: !11447)
!11453 = !DILocation(line: 70, column: 7, scope: !11443)
!11454 = !DILocation(line: 71, column: 18, scope: !11447)
!11455 = !DILocation(line: 71, column: 23, scope: !11447)
!11456 = !DILocation(line: 71, column: 28, scope: !11447)
!11457 = !DILocation(line: 71, column: 33, scope: !11447)
!11458 = !DILocation(line: 71, column: 44, scope: !11447)
!11459 = !DILocation(line: 71, column: 52, scope: !11447)
!11460 = !DILocation(line: 71, column: 57, scope: !11447)
!11461 = !DILocation(line: 71, column: 49, scope: !11447)
!11462 = !DILocation(line: 71, column: 4, scope: !11447)
!11463 = !DILocation(line: 71, column: 9, scope: !11447)
!11464 = !DILocation(line: 71, column: 14, scope: !11447)
!11465 = !DILocation(line: 72, column: 3, scope: !11443)
!11466 = !DILocation(line: 72, column: 8, scope: !11443)
!11467 = !DILocation(line: 72, column: 18, scope: !11443)
!11468 = distinct !{!11468, !11438, !11469}
!11469 = !DILocation(line: 73, column: 2, scope: !11423)
!11470 = !DILocation(line: 74, column: 1, scope: !11423)
!11471 = distinct !DISubprogram(name: "jbig2_decode_get_run", scope: !226, file: !226, line: 814, type: !11472, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!6, !10922, !11474, !6}
!11474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!11475 = !DILocalVariable(name: "mmr", arg: 1, scope: !11471, file: !226, line: 814, type: !10922)
!11476 = !DILocation(line: 814, column: 35, scope: !11471)
!11477 = !DILocalVariable(name: "table", arg: 2, scope: !11471, file: !226, line: 814, type: !11474)
!11478 = !DILocation(line: 814, column: 62, scope: !11471)
!11479 = !DILocalVariable(name: "initial_bits", arg: 3, scope: !11471, file: !226, line: 814, type: !6)
!11480 = !DILocation(line: 814, column: 73, scope: !11471)
!11481 = !DILocalVariable(name: "result", scope: !11471, file: !226, line: 816, type: !6)
!11482 = !DILocation(line: 816, column: 6, scope: !11471)
!11483 = !DILocalVariable(name: "val", scope: !11471, file: !226, line: 817, type: !6)
!11484 = !DILocation(line: 817, column: 6, scope: !11471)
!11485 = !DILocation(line: 819, column: 2, scope: !11471)
!11486 = !DILocation(line: 820, column: 31, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11471, file: !226, line: 819, column: 5)
!11488 = !DILocation(line: 820, column: 36, scope: !11487)
!11489 = !DILocation(line: 820, column: 43, scope: !11487)
!11490 = !DILocation(line: 820, column: 9, scope: !11487)
!11491 = !DILocation(line: 820, column: 7, scope: !11487)
!11492 = !DILocation(line: 821, column: 13, scope: !11487)
!11493 = !DILocation(line: 821, column: 10, scope: !11487)
!11494 = !DILocation(line: 822, column: 2, scope: !11487)
!11495 = !DILocation(line: 822, column: 11, scope: !11471)
!11496 = !DILocation(line: 822, column: 15, scope: !11471)
!11497 = distinct !{!11497, !11485, !11498}
!11498 = !DILocation(line: 822, column: 20, scope: !11471)
!11499 = !DILocation(line: 824, column: 9, scope: !11471)
!11500 = !DILocation(line: 824, column: 2, scope: !11471)
!11501 = distinct !DISubprogram(name: "jbig2_set_bits", scope: !226, file: !226, line: 771, type: !11502, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{null, !144, !6, !6}
!11504 = !DILocalVariable(name: "line", arg: 1, scope: !11501, file: !226, line: 771, type: !144)
!11505 = !DILocation(line: 771, column: 22, scope: !11501)
!11506 = !DILocalVariable(name: "x0", arg: 2, scope: !11501, file: !226, line: 771, type: !6)
!11507 = !DILocation(line: 771, column: 32, scope: !11501)
!11508 = !DILocalVariable(name: "x1", arg: 3, scope: !11501, file: !226, line: 771, type: !6)
!11509 = !DILocation(line: 771, column: 40, scope: !11501)
!11510 = !DILocalVariable(name: "a0", scope: !11501, file: !226, line: 773, type: !6)
!11511 = !DILocation(line: 773, column: 6, scope: !11501)
!11512 = !DILocalVariable(name: "a1", scope: !11501, file: !226, line: 773, type: !6)
!11513 = !DILocation(line: 773, column: 10, scope: !11501)
!11514 = !DILocalVariable(name: "b0", scope: !11501, file: !226, line: 773, type: !6)
!11515 = !DILocation(line: 773, column: 14, scope: !11501)
!11516 = !DILocalVariable(name: "b1", scope: !11501, file: !226, line: 773, type: !6)
!11517 = !DILocation(line: 773, column: 18, scope: !11501)
!11518 = !DILocalVariable(name: "a", scope: !11501, file: !226, line: 773, type: !6)
!11519 = !DILocation(line: 773, column: 22, scope: !11501)
!11520 = !DILocation(line: 775, column: 7, scope: !11501)
!11521 = !DILocation(line: 775, column: 10, scope: !11501)
!11522 = !DILocation(line: 775, column: 5, scope: !11501)
!11523 = !DILocation(line: 776, column: 7, scope: !11501)
!11524 = !DILocation(line: 776, column: 10, scope: !11501)
!11525 = !DILocation(line: 776, column: 5, scope: !11501)
!11526 = !DILocation(line: 778, column: 7, scope: !11501)
!11527 = !DILocation(line: 778, column: 10, scope: !11501)
!11528 = !DILocation(line: 778, column: 5, scope: !11501)
!11529 = !DILocation(line: 779, column: 7, scope: !11501)
!11530 = !DILocation(line: 779, column: 10, scope: !11501)
!11531 = !DILocation(line: 779, column: 5, scope: !11501)
!11532 = !DILocation(line: 781, column: 6, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11501, file: !226, line: 781, column: 6)
!11534 = !DILocation(line: 781, column: 12, scope: !11533)
!11535 = !DILocation(line: 781, column: 9, scope: !11533)
!11536 = !DILocation(line: 781, column: 6, scope: !11501)
!11537 = !DILocation(line: 782, column: 18, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11533, file: !226, line: 781, column: 16)
!11539 = !DILocation(line: 782, column: 15, scope: !11538)
!11540 = !DILocation(line: 782, column: 27, scope: !11538)
!11541 = !DILocation(line: 782, column: 24, scope: !11538)
!11542 = !DILocation(line: 782, column: 22, scope: !11538)
!11543 = !DILocation(line: 782, column: 3, scope: !11538)
!11544 = !DILocation(line: 782, column: 8, scope: !11538)
!11545 = !DILocation(line: 782, column: 12, scope: !11538)
!11546 = !DILocation(line: 783, column: 2, scope: !11538)
!11547 = !DILocation(line: 785, column: 18, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11533, file: !226, line: 784, column: 7)
!11549 = !DILocation(line: 785, column: 15, scope: !11548)
!11550 = !DILocation(line: 785, column: 3, scope: !11548)
!11551 = !DILocation(line: 785, column: 8, scope: !11548)
!11552 = !DILocation(line: 785, column: 12, scope: !11548)
!11553 = !DILocation(line: 786, column: 12, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11548, file: !226, line: 786, column: 3)
!11555 = !DILocation(line: 786, column: 15, scope: !11554)
!11556 = !DILocation(line: 786, column: 10, scope: !11554)
!11557 = !DILocation(line: 786, column: 8, scope: !11554)
!11558 = !DILocation(line: 786, column: 20, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11554, file: !226, line: 786, column: 3)
!11560 = !DILocation(line: 786, column: 24, scope: !11559)
!11561 = !DILocation(line: 786, column: 22, scope: !11559)
!11562 = !DILocation(line: 786, column: 3, scope: !11554)
!11563 = !DILocation(line: 787, column: 4, scope: !11559)
!11564 = !DILocation(line: 787, column: 9, scope: !11559)
!11565 = !DILocation(line: 787, column: 12, scope: !11559)
!11566 = !DILocation(line: 786, column: 29, scope: !11559)
!11567 = !DILocation(line: 786, column: 3, scope: !11559)
!11568 = distinct !{!11568, !11562, !11569}
!11569 = !DILocation(line: 787, column: 14, scope: !11554)
!11570 = !DILocation(line: 788, column: 18, scope: !11548)
!11571 = !DILocation(line: 788, column: 15, scope: !11548)
!11572 = !DILocation(line: 788, column: 3, scope: !11548)
!11573 = !DILocation(line: 788, column: 8, scope: !11548)
!11574 = !DILocation(line: 788, column: 12, scope: !11548)
!11575 = !DILocation(line: 790, column: 1, scope: !11501)
!11576 = distinct !DISubprogram(name: "jbig2_find_changing_element_of_color", scope: !226, file: !226, line: 757, type: !11577, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!11577 = !DISubroutineType(types: !11578)
!11578 = !{!6, !219, !6, !6, !6}
!11579 = !DILocalVariable(name: "line", arg: 1, scope: !11576, file: !226, line: 757, type: !219)
!11580 = !DILocation(line: 757, column: 50, scope: !11576)
!11581 = !DILocalVariable(name: "x", arg: 2, scope: !11576, file: !226, line: 757, type: !6)
!11582 = !DILocation(line: 757, column: 60, scope: !11576)
!11583 = !DILocalVariable(name: "w", arg: 3, scope: !11576, file: !226, line: 757, type: !6)
!11584 = !DILocation(line: 757, column: 67, scope: !11576)
!11585 = !DILocalVariable(name: "color", arg: 4, scope: !11576, file: !226, line: 757, type: !6)
!11586 = !DILocation(line: 757, column: 74, scope: !11576)
!11587 = !DILocation(line: 759, column: 6, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11576, file: !226, line: 759, column: 6)
!11589 = !DILocation(line: 759, column: 11, scope: !11588)
!11590 = !DILocation(line: 759, column: 6, scope: !11576)
!11591 = !DILocation(line: 760, column: 10, scope: !11588)
!11592 = !DILocation(line: 760, column: 3, scope: !11588)
!11593 = !DILocation(line: 761, column: 34, scope: !11576)
!11594 = !DILocation(line: 761, column: 40, scope: !11576)
!11595 = !DILocation(line: 761, column: 43, scope: !11576)
!11596 = !DILocation(line: 761, column: 6, scope: !11576)
!11597 = !DILocation(line: 761, column: 4, scope: !11576)
!11598 = !DILocation(line: 762, column: 6, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11576, file: !226, line: 762, column: 6)
!11600 = !DILocation(line: 762, column: 10, scope: !11599)
!11601 = !DILocation(line: 762, column: 8, scope: !11599)
!11602 = !DILocation(line: 762, column: 12, scope: !11599)
!11603 = !DILocation(line: 762, column: 15, scope: !11599)
!11604 = !DILocation(line: 762, column: 34, scope: !11599)
!11605 = !DILocation(line: 762, column: 31, scope: !11599)
!11606 = !DILocation(line: 762, column: 6, scope: !11576)
!11607 = !DILocation(line: 763, column: 35, scope: !11599)
!11608 = !DILocation(line: 763, column: 41, scope: !11599)
!11609 = !DILocation(line: 763, column: 44, scope: !11599)
!11610 = !DILocation(line: 763, column: 7, scope: !11599)
!11611 = !DILocation(line: 763, column: 5, scope: !11599)
!11612 = !DILocation(line: 763, column: 3, scope: !11599)
!11613 = !DILocation(line: 764, column: 9, scope: !11576)
!11614 = !DILocation(line: 764, column: 2, scope: !11576)
!11615 = !DILocation(line: 765, column: 1, scope: !11576)
!11616 = distinct !DISubprogram(name: "jbig2_find_changing_element", scope: !226, file: !226, line: 730, type: !11617, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!6, !219, !6, !6}
!11619 = !DILocalVariable(name: "line", arg: 1, scope: !11616, file: !226, line: 730, type: !219)
!11620 = !DILocation(line: 730, column: 41, scope: !11616)
!11621 = !DILocalVariable(name: "x", arg: 2, scope: !11616, file: !226, line: 730, type: !6)
!11622 = !DILocation(line: 730, column: 51, scope: !11616)
!11623 = !DILocalVariable(name: "w", arg: 3, scope: !11616, file: !226, line: 730, type: !6)
!11624 = !DILocation(line: 730, column: 58, scope: !11616)
!11625 = !DILocalVariable(name: "a", scope: !11616, file: !226, line: 732, type: !6)
!11626 = !DILocation(line: 732, column: 6, scope: !11616)
!11627 = !DILocalVariable(name: "b", scope: !11616, file: !226, line: 732, type: !6)
!11628 = !DILocation(line: 732, column: 9, scope: !11616)
!11629 = !DILocation(line: 734, column: 6, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11616, file: !226, line: 734, column: 6)
!11631 = !DILocation(line: 734, column: 11, scope: !11630)
!11632 = !DILocation(line: 734, column: 6, scope: !11616)
!11633 = !DILocation(line: 735, column: 10, scope: !11630)
!11634 = !DILocation(line: 735, column: 3, scope: !11630)
!11635 = !DILocation(line: 737, column: 6, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11616, file: !226, line: 737, column: 6)
!11637 = !DILocation(line: 737, column: 8, scope: !11636)
!11638 = !DILocation(line: 737, column: 6, scope: !11616)
!11639 = !DILocation(line: 738, column: 5, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11636, file: !226, line: 737, column: 15)
!11641 = !DILocation(line: 739, column: 5, scope: !11640)
!11642 = !DILocation(line: 740, column: 2, scope: !11640)
!11643 = !DILocation(line: 742, column: 7, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11636, file: !226, line: 741, column: 7)
!11645 = !DILocation(line: 742, column: 5, scope: !11644)
!11646 = !DILocation(line: 743, column: 5, scope: !11644)
!11647 = !DILocation(line: 746, column: 2, scope: !11616)
!11648 = !DILocation(line: 746, column: 9, scope: !11616)
!11649 = !DILocation(line: 746, column: 13, scope: !11616)
!11650 = !DILocation(line: 746, column: 11, scope: !11616)
!11651 = !DILocation(line: 747, column: 7, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11616, file: !226, line: 746, column: 16)
!11653 = !DILocation(line: 747, column: 5, scope: !11652)
!11654 = !DILocation(line: 748, column: 7, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11652, file: !226, line: 748, column: 7)
!11656 = !DILocation(line: 748, column: 12, scope: !11655)
!11657 = !DILocation(line: 748, column: 9, scope: !11655)
!11658 = !DILocation(line: 748, column: 7, scope: !11652)
!11659 = !DILocation(line: 749, column: 4, scope: !11655)
!11660 = !DILocation(line: 750, column: 4, scope: !11652)
!11661 = distinct !{!11661, !11647, !11662}
!11662 = !DILocation(line: 751, column: 2, scope: !11616)
!11663 = !DILocation(line: 753, column: 9, scope: !11616)
!11664 = !DILocation(line: 753, column: 2, scope: !11616)
!11665 = !DILocation(line: 754, column: 1, scope: !11616)
!11666 = distinct !DISubprogram(name: "jbig2_decode_get_code", scope: !226, file: !226, line: 794, type: !11472, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !225, retainedNodes: !70)
!11667 = !DILocalVariable(name: "mmr", arg: 1, scope: !11666, file: !226, line: 794, type: !10922)
!11668 = !DILocation(line: 794, column: 36, scope: !11666)
!11669 = !DILocalVariable(name: "table", arg: 2, scope: !11666, file: !226, line: 794, type: !11474)
!11670 = !DILocation(line: 794, column: 63, scope: !11666)
!11671 = !DILocalVariable(name: "initial_bits", arg: 3, scope: !11666, file: !226, line: 794, type: !6)
!11672 = !DILocation(line: 794, column: 74, scope: !11666)
!11673 = !DILocalVariable(name: "word", scope: !11666, file: !226, line: 796, type: !32)
!11674 = !DILocation(line: 796, column: 11, scope: !11666)
!11675 = !DILocation(line: 796, column: 18, scope: !11666)
!11676 = !DILocation(line: 796, column: 23, scope: !11666)
!11677 = !DILocalVariable(name: "table_ix", scope: !11666, file: !226, line: 797, type: !6)
!11678 = !DILocation(line: 797, column: 6, scope: !11666)
!11679 = !DILocation(line: 797, column: 17, scope: !11666)
!11680 = !DILocation(line: 797, column: 31, scope: !11666)
!11681 = !DILocation(line: 797, column: 29, scope: !11666)
!11682 = !DILocation(line: 797, column: 22, scope: !11666)
!11683 = !DILocalVariable(name: "val", scope: !11666, file: !226, line: 798, type: !6)
!11684 = !DILocation(line: 798, column: 6, scope: !11666)
!11685 = !DILocation(line: 798, column: 12, scope: !11666)
!11686 = !DILocation(line: 798, column: 18, scope: !11666)
!11687 = !DILocation(line: 798, column: 28, scope: !11666)
!11688 = !DILocalVariable(name: "n_bits", scope: !11666, file: !226, line: 799, type: !6)
!11689 = !DILocation(line: 799, column: 6, scope: !11666)
!11690 = !DILocation(line: 799, column: 15, scope: !11666)
!11691 = !DILocation(line: 799, column: 21, scope: !11666)
!11692 = !DILocation(line: 799, column: 31, scope: !11666)
!11693 = !DILocation(line: 801, column: 6, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11666, file: !226, line: 801, column: 6)
!11695 = !DILocation(line: 801, column: 15, scope: !11694)
!11696 = !DILocation(line: 801, column: 13, scope: !11694)
!11697 = !DILocation(line: 801, column: 6, scope: !11666)
!11698 = !DILocalVariable(name: "mask", scope: !11699, file: !226, line: 802, type: !6)
!11699 = distinct !DILexicalBlock(scope: !11694, file: !226, line: 801, column: 29)
!11700 = !DILocation(line: 802, column: 7, scope: !11699)
!11701 = !DILocation(line: 802, column: 26, scope: !11699)
!11702 = !DILocation(line: 802, column: 24, scope: !11699)
!11703 = !DILocation(line: 802, column: 17, scope: !11699)
!11704 = !DILocation(line: 802, column: 41, scope: !11699)
!11705 = !DILocation(line: 803, column: 14, scope: !11699)
!11706 = !DILocation(line: 803, column: 22, scope: !11699)
!11707 = !DILocation(line: 803, column: 29, scope: !11699)
!11708 = !DILocation(line: 803, column: 27, scope: !11699)
!11709 = !DILocation(line: 803, column: 44, scope: !11699)
!11710 = !DILocation(line: 803, column: 42, scope: !11699)
!11711 = !DILocation(line: 803, column: 35, scope: !11699)
!11712 = !DILocation(line: 803, column: 18, scope: !11699)
!11713 = !DILocation(line: 803, column: 12, scope: !11699)
!11714 = !DILocation(line: 804, column: 9, scope: !11699)
!11715 = !DILocation(line: 804, column: 15, scope: !11699)
!11716 = !DILocation(line: 804, column: 25, scope: !11699)
!11717 = !DILocation(line: 804, column: 7, scope: !11699)
!11718 = !DILocation(line: 805, column: 12, scope: !11699)
!11719 = !DILocation(line: 805, column: 27, scope: !11699)
!11720 = !DILocation(line: 805, column: 33, scope: !11699)
!11721 = !DILocation(line: 805, column: 43, scope: !11699)
!11722 = !DILocation(line: 805, column: 25, scope: !11699)
!11723 = !DILocation(line: 805, column: 10, scope: !11699)
!11724 = !DILocation(line: 806, column: 2, scope: !11699)
!11725 = !DILocation(line: 808, column: 27, scope: !11666)
!11726 = !DILocation(line: 808, column: 32, scope: !11666)
!11727 = !DILocation(line: 808, column: 2, scope: !11666)
!11728 = !DILocation(line: 810, column: 9, scope: !11666)
!11729 = !DILocation(line: 810, column: 2, scope: !11666)
!11730 = distinct !DISubprogram(name: "jbig2_image_new", scope: !533, file: !533, line: 34, type: !11731, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!11731 = !DISubroutineType(types: !11732)
!11732 = !{!535, !11733, !6, !6}
!11733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11734, size: 64)
!11734 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !11735)
!11735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !11736)
!11736 = !{!11737, !11754, !11755, !11758, !11759, !11760, !11761, !11762, !11763, !11764, !11765, !11766, !11767, !11768, !11781, !11782, !11783, !11784, !11785}
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !11735, file: !90, line: 45, baseType: !11738, size: 64)
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11739, size: 64)
!11739 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !11740)
!11740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !11741)
!11741 = !{!11742, !11746, !11750}
!11742 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !11740, file: !58, line: 86, baseType: !11743, size: 64)
!11743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11744, size: 64)
!11744 = !DISubroutineType(types: !11745)
!11745 = !{!68, !11738, !119}
!11746 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !11740, file: !58, line: 87, baseType: !11747, size: 64, offset: 64)
!11747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11748, size: 64)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{null, !11738, !68}
!11750 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !11740, file: !58, line: 88, baseType: !11751, size: 64, offset: 128)
!11751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11752, size: 64)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{!68, !11738, !68, !119}
!11754 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !11735, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!11755 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !11735, file: !90, line: 47, baseType: !11756, size: 64, offset: 128)
!11756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11757, size: 64)
!11757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11734)
!11758 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !11735, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!11759 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !11735, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!11760 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !11735, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!11761 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !11735, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!11762 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !11735, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!11763 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !11735, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!11764 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11735, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!11765 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !11735, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !11735, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !11735, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !11735, file: !90, line: 62, baseType: !11769, size: 64, offset: 640)
!11769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11770, size: 64)
!11770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11771, size: 64)
!11771 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !11772)
!11772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !11773)
!11773 = !{!11774, !11775, !11776, !11777, !11778, !11779, !11780}
!11774 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !11772, file: !58, line: 117, baseType: !32, size: 32)
!11775 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11772, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!11776 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !11772, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !11772, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !11772, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!11779 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !11772, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!11780 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !11772, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !11735, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !11735, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !11735, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!11784 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !11735, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!11785 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !11735, file: !90, line: 70, baseType: !11786, size: 64, offset: 832)
!11786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11787, size: 64)
!11787 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !11788)
!11788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !11789)
!11789 = !{!11790, !11791, !11792, !11793, !11794, !11795, !11796, !11797, !11798, !11799, !11800}
!11790 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11788, file: !90, line: 111, baseType: !178, size: 32)
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !11788, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !11788, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !11788, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !11788, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !11788, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !11788, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !11788, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !11788, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11788, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !11788, file: !90, line: 120, baseType: !535, size: 64, offset: 320)
!11801 = !DILocalVariable(name: "ctx", arg: 1, scope: !11730, file: !533, line: 34, type: !11733)
!11802 = !DILocation(line: 34, column: 39, scope: !11730)
!11803 = !DILocalVariable(name: "width", arg: 2, scope: !11730, file: !533, line: 34, type: !6)
!11804 = !DILocation(line: 34, column: 48, scope: !11730)
!11805 = !DILocalVariable(name: "height", arg: 3, scope: !11730, file: !533, line: 34, type: !6)
!11806 = !DILocation(line: 34, column: 59, scope: !11730)
!11807 = !DILocalVariable(name: "image", scope: !11730, file: !533, line: 36, type: !535)
!11808 = !DILocation(line: 36, column: 14, scope: !11730)
!11809 = !DILocalVariable(name: "stride", scope: !11730, file: !533, line: 37, type: !6)
!11810 = !DILocation(line: 37, column: 7, scope: !11730)
!11811 = !DILocation(line: 39, column: 36, scope: !11730)
!11812 = !DILocation(line: 39, column: 41, scope: !11730)
!11813 = !DILocation(line: 39, column: 24, scope: !11730)
!11814 = !DILocation(line: 39, column: 10, scope: !11730)
!11815 = !DILocation(line: 39, column: 8, scope: !11730)
!11816 = !DILocation(line: 40, column: 6, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11730, file: !533, line: 40, column: 6)
!11818 = !DILocation(line: 40, column: 12, scope: !11817)
!11819 = !DILocation(line: 40, column: 6, scope: !11730)
!11820 = !DILocation(line: 41, column: 15, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11817, file: !533, line: 40, column: 21)
!11822 = !DILocation(line: 41, column: 3, scope: !11821)
!11823 = !DILocation(line: 43, column: 3, scope: !11821)
!11824 = !DILocation(line: 46, column: 13, scope: !11730)
!11825 = !DILocation(line: 46, column: 19, scope: !11730)
!11826 = !DILocation(line: 46, column: 24, scope: !11730)
!11827 = !DILocation(line: 46, column: 30, scope: !11730)
!11828 = !DILocation(line: 46, column: 9, scope: !11730)
!11829 = !DILocation(line: 47, column: 39, scope: !11730)
!11830 = !DILocation(line: 47, column: 44, scope: !11730)
!11831 = !DILocation(line: 47, column: 55, scope: !11730)
!11832 = !DILocation(line: 47, column: 62, scope: !11730)
!11833 = !DILocation(line: 47, column: 61, scope: !11730)
!11834 = !DILocation(line: 47, column: 27, scope: !11730)
!11835 = !DILocation(line: 47, column: 2, scope: !11730)
!11836 = !DILocation(line: 47, column: 9, scope: !11730)
!11837 = !DILocation(line: 47, column: 14, scope: !11730)
!11838 = !DILocation(line: 48, column: 6, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11730, file: !533, line: 48, column: 6)
!11840 = !DILocation(line: 48, column: 13, scope: !11839)
!11841 = !DILocation(line: 48, column: 18, scope: !11839)
!11842 = !DILocation(line: 48, column: 6, scope: !11730)
!11843 = !DILocation(line: 49, column: 29, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11839, file: !533, line: 48, column: 27)
!11845 = !DILocation(line: 50, column: 75, scope: !11844)
!11846 = !DILocation(line: 50, column: 82, scope: !11844)
!11847 = !DILocation(line: 50, column: 81, scope: !11844)
!11848 = !DILocation(line: 49, column: 17, scope: !11844)
!11849 = !DILocation(line: 51, column: 14, scope: !11844)
!11850 = !DILocation(line: 51, column: 19, scope: !11844)
!11851 = !DILocation(line: 51, column: 30, scope: !11844)
!11852 = !DILocation(line: 51, column: 3, scope: !11844)
!11853 = !DILocation(line: 52, column: 3, scope: !11844)
!11854 = !DILocation(line: 55, column: 17, scope: !11730)
!11855 = !DILocation(line: 55, column: 2, scope: !11730)
!11856 = !DILocation(line: 55, column: 9, scope: !11730)
!11857 = !DILocation(line: 55, column: 15, scope: !11730)
!11858 = !DILocation(line: 56, column: 18, scope: !11730)
!11859 = !DILocation(line: 56, column: 2, scope: !11730)
!11860 = !DILocation(line: 56, column: 9, scope: !11730)
!11861 = !DILocation(line: 56, column: 16, scope: !11730)
!11862 = !DILocation(line: 57, column: 18, scope: !11730)
!11863 = !DILocation(line: 57, column: 2, scope: !11730)
!11864 = !DILocation(line: 57, column: 9, scope: !11730)
!11865 = !DILocation(line: 57, column: 16, scope: !11730)
!11866 = !DILocation(line: 58, column: 2, scope: !11730)
!11867 = !DILocation(line: 58, column: 9, scope: !11730)
!11868 = !DILocation(line: 58, column: 18, scope: !11730)
!11869 = !DILocation(line: 60, column: 9, scope: !11730)
!11870 = !DILocation(line: 60, column: 2, scope: !11730)
!11871 = !DILocation(line: 61, column: 1, scope: !11730)
!11872 = distinct !DISubprogram(name: "jbig2_image_clone", scope: !533, file: !533, line: 64, type: !11873, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!11873 = !DISubroutineType(types: !11874)
!11874 = !{!535, !11733, !535}
!11875 = !DILocalVariable(name: "ctx", arg: 1, scope: !11872, file: !533, line: 64, type: !11733)
!11876 = !DILocation(line: 64, column: 41, scope: !11872)
!11877 = !DILocalVariable(name: "image", arg: 2, scope: !11872, file: !533, line: 64, type: !535)
!11878 = !DILocation(line: 64, column: 58, scope: !11872)
!11879 = !DILocation(line: 66, column: 2, scope: !11872)
!11880 = !DILocation(line: 66, column: 9, scope: !11872)
!11881 = !DILocation(line: 66, column: 17, scope: !11872)
!11882 = !DILocation(line: 67, column: 9, scope: !11872)
!11883 = !DILocation(line: 67, column: 2, scope: !11872)
!11884 = distinct !DISubprogram(name: "jbig2_image_release", scope: !533, file: !533, line: 71, type: !11885, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!11885 = !DISubroutineType(types: !11886)
!11886 = !{null, !11733, !535}
!11887 = !DILocalVariable(name: "ctx", arg: 1, scope: !11884, file: !533, line: 71, type: !11733)
!11888 = !DILocation(line: 71, column: 36, scope: !11884)
!11889 = !DILocalVariable(name: "image", arg: 2, scope: !11884, file: !533, line: 71, type: !535)
!11890 = !DILocation(line: 71, column: 53, scope: !11884)
!11891 = !DILocation(line: 73, column: 2, scope: !11884)
!11892 = !DILocation(line: 73, column: 9, scope: !11884)
!11893 = !DILocation(line: 73, column: 17, scope: !11884)
!11894 = !DILocation(line: 74, column: 7, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11884, file: !533, line: 74, column: 6)
!11896 = !DILocation(line: 74, column: 14, scope: !11895)
!11897 = !DILocation(line: 74, column: 6, scope: !11884)
!11898 = !DILocation(line: 74, column: 41, scope: !11895)
!11899 = !DILocation(line: 74, column: 46, scope: !11895)
!11900 = !DILocation(line: 74, column: 24, scope: !11895)
!11901 = !DILocation(line: 75, column: 1, scope: !11884)
!11902 = distinct !DISubprogram(name: "jbig2_image_free", scope: !533, file: !533, line: 78, type: !11885, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!11903 = !DILocalVariable(name: "ctx", arg: 1, scope: !11902, file: !533, line: 78, type: !11733)
!11904 = !DILocation(line: 78, column: 33, scope: !11902)
!11905 = !DILocalVariable(name: "image", arg: 2, scope: !11902, file: !533, line: 78, type: !535)
!11906 = !DILocation(line: 78, column: 50, scope: !11902)
!11907 = !DILocation(line: 80, column: 13, scope: !11902)
!11908 = !DILocation(line: 80, column: 18, scope: !11902)
!11909 = !DILocation(line: 80, column: 29, scope: !11902)
!11910 = !DILocation(line: 80, column: 36, scope: !11902)
!11911 = !DILocation(line: 80, column: 2, scope: !11902)
!11912 = !DILocation(line: 81, column: 13, scope: !11902)
!11913 = !DILocation(line: 81, column: 18, scope: !11902)
!11914 = !DILocation(line: 81, column: 29, scope: !11902)
!11915 = !DILocation(line: 81, column: 2, scope: !11902)
!11916 = !DILocation(line: 82, column: 1, scope: !11902)
!11917 = distinct !DISubprogram(name: "jbig2_image_resize", scope: !533, file: !533, line: 85, type: !11918, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!535, !11733, !535, !6, !6}
!11920 = !DILocalVariable(name: "ctx", arg: 1, scope: !11917, file: !533, line: 85, type: !11733)
!11921 = !DILocation(line: 85, column: 42, scope: !11917)
!11922 = !DILocalVariable(name: "image", arg: 2, scope: !11917, file: !533, line: 85, type: !535)
!11923 = !DILocation(line: 85, column: 59, scope: !11917)
!11924 = !DILocalVariable(name: "width", arg: 3, scope: !11917, file: !533, line: 86, type: !6)
!11925 = !DILocation(line: 86, column: 9, scope: !11917)
!11926 = !DILocalVariable(name: "height", arg: 4, scope: !11917, file: !533, line: 86, type: !6)
!11927 = !DILocation(line: 86, column: 20, scope: !11917)
!11928 = !DILocation(line: 88, column: 6, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11917, file: !533, line: 88, column: 6)
!11930 = !DILocation(line: 88, column: 15, scope: !11929)
!11931 = !DILocation(line: 88, column: 22, scope: !11929)
!11932 = !DILocation(line: 88, column: 12, scope: !11929)
!11933 = !DILocation(line: 88, column: 6, scope: !11917)
!11934 = !DILocation(line: 90, column: 34, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11929, file: !533, line: 88, column: 29)
!11936 = !DILocation(line: 90, column: 39, scope: !11935)
!11937 = !DILocation(line: 91, column: 17, scope: !11935)
!11938 = !DILocation(line: 91, column: 24, scope: !11935)
!11939 = !DILocation(line: 91, column: 30, scope: !11935)
!11940 = !DILocation(line: 91, column: 37, scope: !11935)
!11941 = !DILocation(line: 91, column: 44, scope: !11935)
!11942 = !DILocation(line: 91, column: 43, scope: !11935)
!11943 = !DILocation(line: 90, column: 20, scope: !11935)
!11944 = !DILocation(line: 90, column: 6, scope: !11935)
!11945 = !DILocation(line: 90, column: 13, scope: !11935)
!11946 = !DILocation(line: 90, column: 18, scope: !11935)
!11947 = !DILocation(line: 92, column: 17, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11935, file: !533, line: 92, column: 17)
!11949 = !DILocation(line: 92, column: 24, scope: !11948)
!11950 = !DILocation(line: 92, column: 29, scope: !11948)
!11951 = !DILocation(line: 92, column: 17, scope: !11935)
!11952 = !DILocation(line: 93, column: 29, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11948, file: !533, line: 92, column: 38)
!11954 = !DILocation(line: 93, column: 17, scope: !11953)
!11955 = !DILocation(line: 95, column: 3, scope: !11953)
!11956 = !DILocation(line: 97, column: 10, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11935, file: !533, line: 97, column: 10)
!11958 = !DILocation(line: 97, column: 19, scope: !11957)
!11959 = !DILocation(line: 97, column: 26, scope: !11957)
!11960 = !DILocation(line: 97, column: 17, scope: !11957)
!11961 = !DILocation(line: 97, column: 10, scope: !11935)
!11962 = !DILocation(line: 98, column: 10, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11957, file: !533, line: 97, column: 34)
!11964 = !DILocation(line: 98, column: 17, scope: !11963)
!11965 = !DILocation(line: 98, column: 24, scope: !11963)
!11966 = !DILocation(line: 98, column: 31, scope: !11963)
!11967 = !DILocation(line: 98, column: 38, scope: !11963)
!11968 = !DILocation(line: 98, column: 45, scope: !11963)
!11969 = !DILocation(line: 98, column: 37, scope: !11963)
!11970 = !DILocation(line: 98, column: 22, scope: !11963)
!11971 = !DILocation(line: 99, column: 8, scope: !11963)
!11972 = !DILocation(line: 99, column: 17, scope: !11963)
!11973 = !DILocation(line: 99, column: 24, scope: !11963)
!11974 = !DILocation(line: 99, column: 15, scope: !11963)
!11975 = !DILocation(line: 99, column: 32, scope: !11963)
!11976 = !DILocation(line: 99, column: 39, scope: !11963)
!11977 = !DILocation(line: 99, column: 31, scope: !11963)
!11978 = !DILocation(line: 99, column: 7, scope: !11963)
!11979 = !DILocation(line: 98, column: 3, scope: !11963)
!11980 = !DILocation(line: 100, column: 6, scope: !11963)
!11981 = !DILocation(line: 101, column: 29, scope: !11935)
!11982 = !DILocation(line: 101, column: 13, scope: !11935)
!11983 = !DILocation(line: 101, column: 20, scope: !11935)
!11984 = !DILocation(line: 101, column: 27, scope: !11935)
!11985 = !DILocation(line: 103, column: 2, scope: !11935)
!11986 = !DILocation(line: 105, column: 18, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11929, file: !533, line: 103, column: 9)
!11988 = !DILocation(line: 105, column: 6, scope: !11987)
!11989 = !DILocation(line: 109, column: 2, scope: !11917)
!11990 = !DILocation(line: 110, column: 1, scope: !11917)
!11991 = distinct !DISubprogram(name: "jbig2_image_compose_unopt", scope: !533, file: !533, line: 114, type: !11992, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!11992 = !DISubroutineType(types: !11993)
!11993 = !{!6, !11733, !535, !535, !6, !6, !3145}
!11994 = !DILocalVariable(name: "ctx", arg: 1, scope: !11991, file: !533, line: 114, type: !11733)
!11995 = !DILocation(line: 114, column: 41, scope: !11991)
!11996 = !DILocalVariable(name: "dst", arg: 2, scope: !11991, file: !533, line: 115, type: !535)
!11997 = !DILocation(line: 115, column: 16, scope: !11991)
!11998 = !DILocalVariable(name: "src", arg: 3, scope: !11991, file: !533, line: 115, type: !535)
!11999 = !DILocation(line: 115, column: 33, scope: !11991)
!12000 = !DILocalVariable(name: "x", arg: 4, scope: !11991, file: !533, line: 116, type: !6)
!12001 = !DILocation(line: 116, column: 29, scope: !11991)
!12002 = !DILocalVariable(name: "y", arg: 5, scope: !11991, file: !533, line: 116, type: !6)
!12003 = !DILocation(line: 116, column: 36, scope: !11991)
!12004 = !DILocalVariable(name: "op", arg: 6, scope: !11991, file: !533, line: 116, type: !3145)
!12005 = !DILocation(line: 116, column: 54, scope: !11991)
!12006 = !DILocalVariable(name: "i", scope: !11991, file: !533, line: 118, type: !6)
!12007 = !DILocation(line: 118, column: 9, scope: !11991)
!12008 = !DILocalVariable(name: "j", scope: !11991, file: !533, line: 118, type: !6)
!12009 = !DILocation(line: 118, column: 12, scope: !11991)
!12010 = !DILocalVariable(name: "sw", scope: !11991, file: !533, line: 119, type: !6)
!12011 = !DILocation(line: 119, column: 9, scope: !11991)
!12012 = !DILocation(line: 119, column: 14, scope: !11991)
!12013 = !DILocation(line: 119, column: 19, scope: !11991)
!12014 = !DILocalVariable(name: "sh", scope: !11991, file: !533, line: 120, type: !6)
!12015 = !DILocation(line: 120, column: 9, scope: !11991)
!12016 = !DILocation(line: 120, column: 14, scope: !11991)
!12017 = !DILocation(line: 120, column: 19, scope: !11991)
!12018 = !DILocalVariable(name: "sx", scope: !11991, file: !533, line: 121, type: !6)
!12019 = !DILocation(line: 121, column: 9, scope: !11991)
!12020 = !DILocalVariable(name: "sy", scope: !11991, file: !533, line: 122, type: !6)
!12021 = !DILocation(line: 122, column: 9, scope: !11991)
!12022 = !DILocation(line: 125, column: 9, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !11991, file: !533, line: 125, column: 9)
!12024 = !DILocation(line: 125, column: 11, scope: !12023)
!12025 = !DILocation(line: 125, column: 9, scope: !11991)
!12026 = !DILocation(line: 125, column: 25, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12023, file: !533, line: 125, column: 16)
!12028 = !DILocation(line: 125, column: 24, scope: !12027)
!12029 = !DILocation(line: 125, column: 21, scope: !12027)
!12030 = !DILocation(line: 125, column: 35, scope: !12027)
!12031 = !DILocation(line: 125, column: 34, scope: !12027)
!12032 = !DILocation(line: 125, column: 31, scope: !12027)
!12033 = !DILocation(line: 125, column: 40, scope: !12027)
!12034 = !DILocation(line: 125, column: 45, scope: !12027)
!12035 = !DILocation(line: 126, column: 9, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !11991, file: !533, line: 126, column: 9)
!12037 = !DILocation(line: 126, column: 11, scope: !12036)
!12038 = !DILocation(line: 126, column: 9, scope: !11991)
!12039 = !DILocation(line: 126, column: 25, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12036, file: !533, line: 126, column: 16)
!12041 = !DILocation(line: 126, column: 24, scope: !12040)
!12042 = !DILocation(line: 126, column: 21, scope: !12040)
!12043 = !DILocation(line: 126, column: 35, scope: !12040)
!12044 = !DILocation(line: 126, column: 34, scope: !12040)
!12045 = !DILocation(line: 126, column: 31, scope: !12040)
!12046 = !DILocation(line: 126, column: 40, scope: !12040)
!12047 = !DILocation(line: 126, column: 45, scope: !12040)
!12048 = !DILocation(line: 127, column: 9, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !11991, file: !533, line: 127, column: 9)
!12050 = !DILocation(line: 127, column: 13, scope: !12049)
!12051 = !DILocation(line: 127, column: 11, scope: !12049)
!12052 = !DILocation(line: 127, column: 19, scope: !12049)
!12053 = !DILocation(line: 127, column: 24, scope: !12049)
!12054 = !DILocation(line: 127, column: 16, scope: !12049)
!12055 = !DILocation(line: 127, column: 9, scope: !11991)
!12056 = !DILocation(line: 127, column: 36, scope: !12049)
!12057 = !DILocation(line: 127, column: 41, scope: !12049)
!12058 = !DILocation(line: 127, column: 49, scope: !12049)
!12059 = !DILocation(line: 127, column: 47, scope: !12049)
!12060 = !DILocation(line: 127, column: 34, scope: !12049)
!12061 = !DILocation(line: 127, column: 31, scope: !12049)
!12062 = !DILocation(line: 128, column: 9, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !11991, file: !533, line: 128, column: 9)
!12064 = !DILocation(line: 128, column: 13, scope: !12063)
!12065 = !DILocation(line: 128, column: 11, scope: !12063)
!12066 = !DILocation(line: 128, column: 19, scope: !12063)
!12067 = !DILocation(line: 128, column: 24, scope: !12063)
!12068 = !DILocation(line: 128, column: 16, scope: !12063)
!12069 = !DILocation(line: 128, column: 9, scope: !11991)
!12070 = !DILocation(line: 128, column: 37, scope: !12063)
!12071 = !DILocation(line: 128, column: 42, scope: !12063)
!12072 = !DILocation(line: 128, column: 51, scope: !12063)
!12073 = !DILocation(line: 128, column: 49, scope: !12063)
!12074 = !DILocation(line: 128, column: 35, scope: !12063)
!12075 = !DILocation(line: 128, column: 32, scope: !12063)
!12076 = !DILocation(line: 130, column: 13, scope: !11991)
!12077 = !DILocation(line: 130, column: 5, scope: !11991)
!12078 = !DILocation(line: 132, column: 13, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !533, line: 132, column: 6)
!12080 = distinct !DILexicalBlock(scope: !11991, file: !533, line: 130, column: 17)
!12081 = !DILocation(line: 132, column: 11, scope: !12079)
!12082 = !DILocation(line: 132, column: 18, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12079, file: !533, line: 132, column: 6)
!12084 = !DILocation(line: 132, column: 22, scope: !12083)
!12085 = !DILocation(line: 132, column: 20, scope: !12083)
!12086 = !DILocation(line: 132, column: 6, scope: !12079)
!12087 = !DILocation(line: 133, column: 10, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !533, line: 133, column: 3)
!12089 = distinct !DILexicalBlock(scope: !12083, file: !533, line: 132, column: 31)
!12090 = !DILocation(line: 133, column: 8, scope: !12088)
!12091 = !DILocation(line: 133, column: 15, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12088, file: !533, line: 133, column: 3)
!12093 = !DILocation(line: 133, column: 19, scope: !12092)
!12094 = !DILocation(line: 133, column: 17, scope: !12092)
!12095 = !DILocation(line: 133, column: 3, scope: !12088)
!12096 = !DILocation(line: 134, column: 29, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12092, file: !533, line: 133, column: 28)
!12098 = !DILocation(line: 134, column: 34, scope: !12097)
!12099 = !DILocation(line: 134, column: 36, scope: !12097)
!12100 = !DILocation(line: 134, column: 35, scope: !12097)
!12101 = !DILocation(line: 134, column: 39, scope: !12097)
!12102 = !DILocation(line: 134, column: 41, scope: !12097)
!12103 = !DILocation(line: 134, column: 40, scope: !12097)
!12104 = !DILocation(line: 135, column: 26, scope: !12097)
!12105 = !DILocation(line: 135, column: 31, scope: !12097)
!12106 = !DILocation(line: 135, column: 33, scope: !12097)
!12107 = !DILocation(line: 135, column: 32, scope: !12097)
!12108 = !DILocation(line: 135, column: 37, scope: !12097)
!12109 = !DILocation(line: 135, column: 39, scope: !12097)
!12110 = !DILocation(line: 135, column: 38, scope: !12097)
!12111 = !DILocation(line: 135, column: 4, scope: !12097)
!12112 = !DILocation(line: 136, column: 26, scope: !12097)
!12113 = !DILocation(line: 136, column: 31, scope: !12097)
!12114 = !DILocation(line: 136, column: 33, scope: !12097)
!12115 = !DILocation(line: 136, column: 32, scope: !12097)
!12116 = !DILocation(line: 136, column: 36, scope: !12097)
!12117 = !DILocation(line: 136, column: 38, scope: !12097)
!12118 = !DILocation(line: 136, column: 37, scope: !12097)
!12119 = !DILocation(line: 136, column: 4, scope: !12097)
!12120 = !DILocation(line: 135, column: 43, scope: !12097)
!12121 = !DILocation(line: 134, column: 7, scope: !12097)
!12122 = !DILocation(line: 137, column: 3, scope: !12097)
!12123 = !DILocation(line: 133, column: 24, scope: !12092)
!12124 = !DILocation(line: 133, column: 3, scope: !12092)
!12125 = distinct !{!12125, !12095, !12126}
!12126 = !DILocation(line: 137, column: 3, scope: !12088)
!12127 = !DILocation(line: 138, column: 10, scope: !12089)
!12128 = !DILocation(line: 132, column: 27, scope: !12083)
!12129 = !DILocation(line: 132, column: 6, scope: !12083)
!12130 = distinct !{!12130, !12086, !12131}
!12131 = !DILocation(line: 138, column: 10, scope: !12079)
!12132 = !DILocation(line: 139, column: 6, scope: !12080)
!12133 = !DILocation(line: 141, column: 13, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12080, file: !533, line: 141, column: 6)
!12135 = !DILocation(line: 141, column: 11, scope: !12134)
!12136 = !DILocation(line: 141, column: 18, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12134, file: !533, line: 141, column: 6)
!12138 = !DILocation(line: 141, column: 22, scope: !12137)
!12139 = !DILocation(line: 141, column: 20, scope: !12137)
!12140 = !DILocation(line: 141, column: 6, scope: !12134)
!12141 = !DILocation(line: 142, column: 10, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !533, line: 142, column: 3)
!12143 = distinct !DILexicalBlock(scope: !12137, file: !533, line: 141, column: 31)
!12144 = !DILocation(line: 142, column: 8, scope: !12142)
!12145 = !DILocation(line: 142, column: 15, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12142, file: !533, line: 142, column: 3)
!12147 = !DILocation(line: 142, column: 19, scope: !12146)
!12148 = !DILocation(line: 142, column: 17, scope: !12146)
!12149 = !DILocation(line: 142, column: 3, scope: !12142)
!12150 = !DILocation(line: 143, column: 29, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12146, file: !533, line: 142, column: 28)
!12152 = !DILocation(line: 143, column: 34, scope: !12151)
!12153 = !DILocation(line: 143, column: 36, scope: !12151)
!12154 = !DILocation(line: 143, column: 35, scope: !12151)
!12155 = !DILocation(line: 143, column: 39, scope: !12151)
!12156 = !DILocation(line: 143, column: 41, scope: !12151)
!12157 = !DILocation(line: 143, column: 40, scope: !12151)
!12158 = !DILocation(line: 144, column: 26, scope: !12151)
!12159 = !DILocation(line: 144, column: 31, scope: !12151)
!12160 = !DILocation(line: 144, column: 33, scope: !12151)
!12161 = !DILocation(line: 144, column: 32, scope: !12151)
!12162 = !DILocation(line: 144, column: 37, scope: !12151)
!12163 = !DILocation(line: 144, column: 39, scope: !12151)
!12164 = !DILocation(line: 144, column: 38, scope: !12151)
!12165 = !DILocation(line: 144, column: 4, scope: !12151)
!12166 = !DILocation(line: 145, column: 26, scope: !12151)
!12167 = !DILocation(line: 145, column: 31, scope: !12151)
!12168 = !DILocation(line: 145, column: 33, scope: !12151)
!12169 = !DILocation(line: 145, column: 32, scope: !12151)
!12170 = !DILocation(line: 145, column: 36, scope: !12151)
!12171 = !DILocation(line: 145, column: 38, scope: !12151)
!12172 = !DILocation(line: 145, column: 37, scope: !12151)
!12173 = !DILocation(line: 145, column: 4, scope: !12151)
!12174 = !DILocation(line: 144, column: 43, scope: !12151)
!12175 = !DILocation(line: 143, column: 7, scope: !12151)
!12176 = !DILocation(line: 146, column: 3, scope: !12151)
!12177 = !DILocation(line: 142, column: 24, scope: !12146)
!12178 = !DILocation(line: 142, column: 3, scope: !12146)
!12179 = distinct !{!12179, !12149, !12180}
!12180 = !DILocation(line: 146, column: 3, scope: !12142)
!12181 = !DILocation(line: 147, column: 10, scope: !12143)
!12182 = !DILocation(line: 141, column: 27, scope: !12137)
!12183 = !DILocation(line: 141, column: 6, scope: !12137)
!12184 = distinct !{!12184, !12140, !12185}
!12185 = !DILocation(line: 147, column: 10, scope: !12134)
!12186 = !DILocation(line: 148, column: 6, scope: !12080)
!12187 = !DILocation(line: 150, column: 13, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12080, file: !533, line: 150, column: 6)
!12189 = !DILocation(line: 150, column: 11, scope: !12188)
!12190 = !DILocation(line: 150, column: 18, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12188, file: !533, line: 150, column: 6)
!12192 = !DILocation(line: 150, column: 22, scope: !12191)
!12193 = !DILocation(line: 150, column: 20, scope: !12191)
!12194 = !DILocation(line: 150, column: 6, scope: !12188)
!12195 = !DILocation(line: 151, column: 10, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !533, line: 151, column: 3)
!12197 = distinct !DILexicalBlock(scope: !12191, file: !533, line: 150, column: 31)
!12198 = !DILocation(line: 151, column: 8, scope: !12196)
!12199 = !DILocation(line: 151, column: 15, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12196, file: !533, line: 151, column: 3)
!12201 = !DILocation(line: 151, column: 19, scope: !12200)
!12202 = !DILocation(line: 151, column: 17, scope: !12200)
!12203 = !DILocation(line: 151, column: 3, scope: !12196)
!12204 = !DILocation(line: 152, column: 29, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12200, file: !533, line: 151, column: 28)
!12206 = !DILocation(line: 152, column: 34, scope: !12205)
!12207 = !DILocation(line: 152, column: 36, scope: !12205)
!12208 = !DILocation(line: 152, column: 35, scope: !12205)
!12209 = !DILocation(line: 152, column: 39, scope: !12205)
!12210 = !DILocation(line: 152, column: 41, scope: !12205)
!12211 = !DILocation(line: 152, column: 40, scope: !12205)
!12212 = !DILocation(line: 153, column: 26, scope: !12205)
!12213 = !DILocation(line: 153, column: 31, scope: !12205)
!12214 = !DILocation(line: 153, column: 33, scope: !12205)
!12215 = !DILocation(line: 153, column: 32, scope: !12205)
!12216 = !DILocation(line: 153, column: 37, scope: !12205)
!12217 = !DILocation(line: 153, column: 39, scope: !12205)
!12218 = !DILocation(line: 153, column: 38, scope: !12205)
!12219 = !DILocation(line: 153, column: 4, scope: !12205)
!12220 = !DILocation(line: 154, column: 26, scope: !12205)
!12221 = !DILocation(line: 154, column: 31, scope: !12205)
!12222 = !DILocation(line: 154, column: 33, scope: !12205)
!12223 = !DILocation(line: 154, column: 32, scope: !12205)
!12224 = !DILocation(line: 154, column: 36, scope: !12205)
!12225 = !DILocation(line: 154, column: 38, scope: !12205)
!12226 = !DILocation(line: 154, column: 37, scope: !12205)
!12227 = !DILocation(line: 154, column: 4, scope: !12205)
!12228 = !DILocation(line: 153, column: 43, scope: !12205)
!12229 = !DILocation(line: 152, column: 7, scope: !12205)
!12230 = !DILocation(line: 155, column: 3, scope: !12205)
!12231 = !DILocation(line: 151, column: 24, scope: !12200)
!12232 = !DILocation(line: 151, column: 3, scope: !12200)
!12233 = distinct !{!12233, !12203, !12234}
!12234 = !DILocation(line: 155, column: 3, scope: !12196)
!12235 = !DILocation(line: 156, column: 10, scope: !12197)
!12236 = !DILocation(line: 150, column: 27, scope: !12191)
!12237 = !DILocation(line: 150, column: 6, scope: !12191)
!12238 = distinct !{!12238, !12194, !12239}
!12239 = !DILocation(line: 156, column: 10, scope: !12188)
!12240 = !DILocation(line: 157, column: 6, scope: !12080)
!12241 = !DILocation(line: 159, column: 13, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12080, file: !533, line: 159, column: 6)
!12243 = !DILocation(line: 159, column: 11, scope: !12242)
!12244 = !DILocation(line: 159, column: 18, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12242, file: !533, line: 159, column: 6)
!12246 = !DILocation(line: 159, column: 22, scope: !12245)
!12247 = !DILocation(line: 159, column: 20, scope: !12245)
!12248 = !DILocation(line: 159, column: 6, scope: !12242)
!12249 = !DILocation(line: 160, column: 10, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12251, file: !533, line: 160, column: 3)
!12251 = distinct !DILexicalBlock(scope: !12245, file: !533, line: 159, column: 31)
!12252 = !DILocation(line: 160, column: 8, scope: !12250)
!12253 = !DILocation(line: 160, column: 15, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12250, file: !533, line: 160, column: 3)
!12255 = !DILocation(line: 160, column: 19, scope: !12254)
!12256 = !DILocation(line: 160, column: 17, scope: !12254)
!12257 = !DILocation(line: 160, column: 3, scope: !12250)
!12258 = !DILocation(line: 161, column: 29, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12254, file: !533, line: 160, column: 28)
!12260 = !DILocation(line: 161, column: 34, scope: !12259)
!12261 = !DILocation(line: 161, column: 36, scope: !12259)
!12262 = !DILocation(line: 161, column: 35, scope: !12259)
!12263 = !DILocation(line: 161, column: 39, scope: !12259)
!12264 = !DILocation(line: 161, column: 41, scope: !12259)
!12265 = !DILocation(line: 161, column: 40, scope: !12259)
!12266 = !DILocation(line: 162, column: 28, scope: !12259)
!12267 = !DILocation(line: 162, column: 33, scope: !12259)
!12268 = !DILocation(line: 162, column: 35, scope: !12259)
!12269 = !DILocation(line: 162, column: 34, scope: !12259)
!12270 = !DILocation(line: 162, column: 39, scope: !12259)
!12271 = !DILocation(line: 162, column: 41, scope: !12259)
!12272 = !DILocation(line: 162, column: 40, scope: !12259)
!12273 = !DILocation(line: 162, column: 6, scope: !12259)
!12274 = !DILocation(line: 163, column: 26, scope: !12259)
!12275 = !DILocation(line: 163, column: 31, scope: !12259)
!12276 = !DILocation(line: 163, column: 33, scope: !12259)
!12277 = !DILocation(line: 163, column: 32, scope: !12259)
!12278 = !DILocation(line: 163, column: 36, scope: !12259)
!12279 = !DILocation(line: 163, column: 38, scope: !12259)
!12280 = !DILocation(line: 163, column: 37, scope: !12259)
!12281 = !DILocation(line: 163, column: 4, scope: !12259)
!12282 = !DILocation(line: 162, column: 45, scope: !12259)
!12283 = !DILocation(line: 162, column: 4, scope: !12259)
!12284 = !DILocation(line: 161, column: 7, scope: !12259)
!12285 = !DILocation(line: 164, column: 3, scope: !12259)
!12286 = !DILocation(line: 160, column: 24, scope: !12254)
!12287 = !DILocation(line: 160, column: 3, scope: !12254)
!12288 = distinct !{!12288, !12257, !12289}
!12289 = !DILocation(line: 164, column: 3, scope: !12250)
!12290 = !DILocation(line: 165, column: 10, scope: !12251)
!12291 = !DILocation(line: 159, column: 27, scope: !12245)
!12292 = !DILocation(line: 159, column: 6, scope: !12245)
!12293 = distinct !{!12293, !12248, !12294}
!12294 = !DILocation(line: 165, column: 10, scope: !12242)
!12295 = !DILocation(line: 166, column: 6, scope: !12080)
!12296 = !DILocation(line: 168, column: 13, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12080, file: !533, line: 168, column: 6)
!12298 = !DILocation(line: 168, column: 11, scope: !12297)
!12299 = !DILocation(line: 168, column: 18, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12297, file: !533, line: 168, column: 6)
!12301 = !DILocation(line: 168, column: 22, scope: !12300)
!12302 = !DILocation(line: 168, column: 20, scope: !12300)
!12303 = !DILocation(line: 168, column: 6, scope: !12297)
!12304 = !DILocation(line: 169, column: 10, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !533, line: 169, column: 3)
!12306 = distinct !DILexicalBlock(scope: !12300, file: !533, line: 168, column: 31)
!12307 = !DILocation(line: 169, column: 8, scope: !12305)
!12308 = !DILocation(line: 169, column: 15, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !533, line: 169, column: 3)
!12310 = !DILocation(line: 169, column: 19, scope: !12309)
!12311 = !DILocation(line: 169, column: 17, scope: !12309)
!12312 = !DILocation(line: 169, column: 3, scope: !12305)
!12313 = !DILocation(line: 170, column: 29, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12309, file: !533, line: 169, column: 28)
!12315 = !DILocation(line: 170, column: 34, scope: !12314)
!12316 = !DILocation(line: 170, column: 36, scope: !12314)
!12317 = !DILocation(line: 170, column: 35, scope: !12314)
!12318 = !DILocation(line: 170, column: 39, scope: !12314)
!12319 = !DILocation(line: 170, column: 41, scope: !12314)
!12320 = !DILocation(line: 170, column: 40, scope: !12314)
!12321 = !DILocation(line: 171, column: 26, scope: !12314)
!12322 = !DILocation(line: 171, column: 31, scope: !12314)
!12323 = !DILocation(line: 171, column: 33, scope: !12314)
!12324 = !DILocation(line: 171, column: 32, scope: !12314)
!12325 = !DILocation(line: 171, column: 37, scope: !12314)
!12326 = !DILocation(line: 171, column: 39, scope: !12314)
!12327 = !DILocation(line: 171, column: 38, scope: !12314)
!12328 = !DILocation(line: 171, column: 4, scope: !12314)
!12329 = !DILocation(line: 170, column: 7, scope: !12314)
!12330 = !DILocation(line: 172, column: 3, scope: !12314)
!12331 = !DILocation(line: 169, column: 24, scope: !12309)
!12332 = !DILocation(line: 169, column: 3, scope: !12309)
!12333 = distinct !{!12333, !12312, !12334}
!12334 = !DILocation(line: 172, column: 3, scope: !12305)
!12335 = !DILocation(line: 173, column: 10, scope: !12306)
!12336 = !DILocation(line: 168, column: 27, scope: !12300)
!12337 = !DILocation(line: 168, column: 6, scope: !12300)
!12338 = distinct !{!12338, !12303, !12339}
!12339 = !DILocation(line: 173, column: 10, scope: !12297)
!12340 = !DILocation(line: 174, column: 6, scope: !12080)
!12341 = !DILocation(line: 177, column: 5, scope: !11991)
!12342 = distinct !DISubprogram(name: "jbig2_image_get_pixel", scope: !533, file: !533, line: 284, type: !12343, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!12343 = !DISubroutineType(types: !12344)
!12344 = !{!6, !535, !6, !6}
!12345 = !DILocalVariable(name: "image", arg: 1, scope: !12342, file: !533, line: 284, type: !535)
!12346 = !DILocation(line: 284, column: 39, scope: !12342)
!12347 = !DILocalVariable(name: "x", arg: 2, scope: !12342, file: !533, line: 284, type: !6)
!12348 = !DILocation(line: 284, column: 50, scope: !12342)
!12349 = !DILocalVariable(name: "y", arg: 3, scope: !12342, file: !533, line: 284, type: !6)
!12350 = !DILocation(line: 284, column: 57, scope: !12342)
!12351 = !DILocalVariable(name: "w", scope: !12342, file: !533, line: 286, type: !5919)
!12352 = !DILocation(line: 286, column: 13, scope: !12342)
!12353 = !DILocation(line: 286, column: 17, scope: !12342)
!12354 = !DILocation(line: 286, column: 24, scope: !12342)
!12355 = !DILocalVariable(name: "h", scope: !12342, file: !533, line: 287, type: !5919)
!12356 = !DILocation(line: 287, column: 13, scope: !12342)
!12357 = !DILocation(line: 287, column: 17, scope: !12342)
!12358 = !DILocation(line: 287, column: 24, scope: !12342)
!12359 = !DILocalVariable(name: "byte", scope: !12342, file: !533, line: 288, type: !5919)
!12360 = !DILocation(line: 288, column: 13, scope: !12342)
!12361 = !DILocation(line: 288, column: 21, scope: !12342)
!12362 = !DILocation(line: 288, column: 23, scope: !12342)
!12363 = !DILocation(line: 288, column: 31, scope: !12342)
!12364 = !DILocation(line: 288, column: 33, scope: !12342)
!12365 = !DILocation(line: 288, column: 40, scope: !12342)
!12366 = !DILocation(line: 288, column: 32, scope: !12342)
!12367 = !DILocation(line: 288, column: 29, scope: !12342)
!12368 = !DILocalVariable(name: "bit", scope: !12342, file: !533, line: 289, type: !5919)
!12369 = !DILocation(line: 289, column: 13, scope: !12342)
!12370 = !DILocation(line: 289, column: 24, scope: !12342)
!12371 = !DILocation(line: 289, column: 26, scope: !12342)
!12372 = !DILocation(line: 289, column: 21, scope: !12342)
!12373 = !DILocation(line: 291, column: 8, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12342, file: !533, line: 291, column: 7)
!12375 = !DILocation(line: 291, column: 10, scope: !12374)
!12376 = !DILocation(line: 291, column: 15, scope: !12374)
!12377 = !DILocation(line: 291, column: 19, scope: !12374)
!12378 = !DILocation(line: 291, column: 24, scope: !12374)
!12379 = !DILocation(line: 291, column: 21, scope: !12374)
!12380 = !DILocation(line: 291, column: 7, scope: !12342)
!12381 = !DILocation(line: 291, column: 28, scope: !12374)
!12382 = !DILocation(line: 292, column: 8, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12342, file: !533, line: 292, column: 7)
!12384 = !DILocation(line: 292, column: 10, scope: !12383)
!12385 = !DILocation(line: 292, column: 15, scope: !12383)
!12386 = !DILocation(line: 292, column: 19, scope: !12383)
!12387 = !DILocation(line: 292, column: 24, scope: !12383)
!12388 = !DILocation(line: 292, column: 21, scope: !12383)
!12389 = !DILocation(line: 292, column: 7, scope: !12342)
!12390 = !DILocation(line: 292, column: 28, scope: !12383)
!12391 = !DILocation(line: 294, column: 12, scope: !12342)
!12392 = !DILocation(line: 294, column: 19, scope: !12342)
!12393 = !DILocation(line: 294, column: 24, scope: !12342)
!12394 = !DILocation(line: 294, column: 31, scope: !12342)
!12395 = !DILocation(line: 294, column: 29, scope: !12342)
!12396 = !DILocation(line: 294, column: 36, scope: !12342)
!12397 = !DILocation(line: 294, column: 3, scope: !12342)
!12398 = !DILocation(line: 295, column: 1, scope: !12342)
!12399 = distinct !DISubprogram(name: "jbig2_image_set_pixel", scope: !533, file: !533, line: 298, type: !12400, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!12400 = !DISubroutineType(types: !12401)
!12401 = !{!6, !535, !6, !6, !188}
!12402 = !DILocalVariable(name: "image", arg: 1, scope: !12399, file: !533, line: 298, type: !535)
!12403 = !DILocation(line: 298, column: 39, scope: !12399)
!12404 = !DILocalVariable(name: "x", arg: 2, scope: !12399, file: !533, line: 298, type: !6)
!12405 = !DILocation(line: 298, column: 50, scope: !12399)
!12406 = !DILocalVariable(name: "y", arg: 3, scope: !12399, file: !533, line: 298, type: !6)
!12407 = !DILocation(line: 298, column: 57, scope: !12399)
!12408 = !DILocalVariable(name: "value", arg: 4, scope: !12399, file: !533, line: 298, type: !188)
!12409 = !DILocation(line: 298, column: 65, scope: !12399)
!12410 = !DILocalVariable(name: "w", scope: !12399, file: !533, line: 300, type: !5919)
!12411 = !DILocation(line: 300, column: 13, scope: !12399)
!12412 = !DILocation(line: 300, column: 17, scope: !12399)
!12413 = !DILocation(line: 300, column: 24, scope: !12399)
!12414 = !DILocalVariable(name: "h", scope: !12399, file: !533, line: 301, type: !5919)
!12415 = !DILocation(line: 301, column: 13, scope: !12399)
!12416 = !DILocation(line: 301, column: 17, scope: !12399)
!12417 = !DILocation(line: 301, column: 24, scope: !12399)
!12418 = !DILocalVariable(name: "scratch", scope: !12399, file: !533, line: 302, type: !6)
!12419 = !DILocation(line: 302, column: 7, scope: !12399)
!12420 = !DILocalVariable(name: "mask", scope: !12399, file: !533, line: 302, type: !6)
!12421 = !DILocation(line: 302, column: 16, scope: !12399)
!12422 = !DILocalVariable(name: "bit", scope: !12399, file: !533, line: 303, type: !6)
!12423 = !DILocation(line: 303, column: 7, scope: !12399)
!12424 = !DILocalVariable(name: "byte", scope: !12399, file: !533, line: 303, type: !6)
!12425 = !DILocation(line: 303, column: 12, scope: !12399)
!12426 = !DILocation(line: 305, column: 8, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12399, file: !533, line: 305, column: 7)
!12428 = !DILocation(line: 305, column: 10, scope: !12427)
!12429 = !DILocation(line: 305, column: 15, scope: !12427)
!12430 = !DILocation(line: 305, column: 19, scope: !12427)
!12431 = !DILocation(line: 305, column: 24, scope: !12427)
!12432 = !DILocation(line: 305, column: 21, scope: !12427)
!12433 = !DILocation(line: 305, column: 7, scope: !12399)
!12434 = !DILocation(line: 305, column: 28, scope: !12427)
!12435 = !DILocation(line: 306, column: 8, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12399, file: !533, line: 306, column: 7)
!12437 = !DILocation(line: 306, column: 10, scope: !12436)
!12438 = !DILocation(line: 306, column: 15, scope: !12436)
!12439 = !DILocation(line: 306, column: 19, scope: !12436)
!12440 = !DILocation(line: 306, column: 24, scope: !12436)
!12441 = !DILocation(line: 306, column: 21, scope: !12436)
!12442 = !DILocation(line: 306, column: 7, scope: !12399)
!12443 = !DILocation(line: 306, column: 28, scope: !12436)
!12444 = !DILocation(line: 308, column: 11, scope: !12399)
!12445 = !DILocation(line: 308, column: 13, scope: !12399)
!12446 = !DILocation(line: 308, column: 21, scope: !12399)
!12447 = !DILocation(line: 308, column: 23, scope: !12399)
!12448 = !DILocation(line: 308, column: 30, scope: !12399)
!12449 = !DILocation(line: 308, column: 22, scope: !12399)
!12450 = !DILocation(line: 308, column: 19, scope: !12399)
!12451 = !DILocation(line: 308, column: 8, scope: !12399)
!12452 = !DILocation(line: 309, column: 14, scope: !12399)
!12453 = !DILocation(line: 309, column: 16, scope: !12399)
!12454 = !DILocation(line: 309, column: 11, scope: !12399)
!12455 = !DILocation(line: 309, column: 7, scope: !12399)
!12456 = !DILocation(line: 310, column: 16, scope: !12399)
!12457 = !DILocation(line: 310, column: 13, scope: !12399)
!12458 = !DILocation(line: 310, column: 21, scope: !12399)
!12459 = !DILocation(line: 310, column: 8, scope: !12399)
!12460 = !DILocation(line: 312, column: 13, scope: !12399)
!12461 = !DILocation(line: 312, column: 20, scope: !12399)
!12462 = !DILocation(line: 312, column: 25, scope: !12399)
!12463 = !DILocation(line: 312, column: 33, scope: !12399)
!12464 = !DILocation(line: 312, column: 31, scope: !12399)
!12465 = !DILocation(line: 312, column: 11, scope: !12399)
!12466 = !DILocation(line: 313, column: 23, scope: !12399)
!12467 = !DILocation(line: 313, column: 34, scope: !12399)
!12468 = !DILocation(line: 313, column: 43, scope: !12399)
!12469 = !DILocation(line: 313, column: 40, scope: !12399)
!12470 = !DILocation(line: 313, column: 31, scope: !12399)
!12471 = !DILocation(line: 313, column: 3, scope: !12399)
!12472 = !DILocation(line: 313, column: 10, scope: !12399)
!12473 = !DILocation(line: 313, column: 15, scope: !12399)
!12474 = !DILocation(line: 313, column: 21, scope: !12399)
!12475 = !DILocation(line: 315, column: 3, scope: !12399)
!12476 = !DILocation(line: 316, column: 1, scope: !12399)
!12477 = distinct !DISubprogram(name: "jbig2_image_compose", scope: !533, file: !533, line: 181, type: !11992, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!12478 = !DILocalVariable(name: "ctx", arg: 1, scope: !12477, file: !533, line: 181, type: !11733)
!12479 = !DILocation(line: 181, column: 35, scope: !12477)
!12480 = !DILocalVariable(name: "dst", arg: 2, scope: !12477, file: !533, line: 181, type: !535)
!12481 = !DILocation(line: 181, column: 52, scope: !12477)
!12482 = !DILocalVariable(name: "src", arg: 3, scope: !12477, file: !533, line: 181, type: !535)
!12483 = !DILocation(line: 181, column: 69, scope: !12477)
!12484 = !DILocalVariable(name: "x", arg: 4, scope: !12477, file: !533, line: 182, type: !6)
!12485 = !DILocation(line: 182, column: 8, scope: !12477)
!12486 = !DILocalVariable(name: "y", arg: 5, scope: !12477, file: !533, line: 182, type: !6)
!12487 = !DILocation(line: 182, column: 15, scope: !12477)
!12488 = !DILocalVariable(name: "op", arg: 6, scope: !12477, file: !533, line: 182, type: !3145)
!12489 = !DILocation(line: 182, column: 33, scope: !12477)
!12490 = !DILocalVariable(name: "i", scope: !12477, file: !533, line: 184, type: !6)
!12491 = !DILocation(line: 184, column: 9, scope: !12477)
!12492 = !DILocalVariable(name: "j", scope: !12477, file: !533, line: 184, type: !6)
!12493 = !DILocation(line: 184, column: 12, scope: !12477)
!12494 = !DILocalVariable(name: "w", scope: !12477, file: !533, line: 185, type: !6)
!12495 = !DILocation(line: 185, column: 9, scope: !12477)
!12496 = !DILocalVariable(name: "h", scope: !12477, file: !533, line: 185, type: !6)
!12497 = !DILocation(line: 185, column: 12, scope: !12477)
!12498 = !DILocalVariable(name: "leftbyte", scope: !12477, file: !533, line: 186, type: !6)
!12499 = !DILocation(line: 186, column: 9, scope: !12477)
!12500 = !DILocalVariable(name: "rightbyte", scope: !12477, file: !533, line: 186, type: !6)
!12501 = !DILocation(line: 186, column: 19, scope: !12477)
!12502 = !DILocalVariable(name: "shift", scope: !12477, file: !533, line: 187, type: !6)
!12503 = !DILocation(line: 187, column: 9, scope: !12477)
!12504 = !DILocalVariable(name: "s", scope: !12477, file: !533, line: 188, type: !200)
!12505 = !DILocation(line: 188, column: 14, scope: !12477)
!12506 = !DILocalVariable(name: "ss", scope: !12477, file: !533, line: 188, type: !200)
!12507 = !DILocation(line: 188, column: 18, scope: !12477)
!12508 = !DILocalVariable(name: "d", scope: !12477, file: !533, line: 189, type: !200)
!12509 = !DILocation(line: 189, column: 14, scope: !12477)
!12510 = !DILocalVariable(name: "dd", scope: !12477, file: !533, line: 189, type: !200)
!12511 = !DILocation(line: 189, column: 18, scope: !12477)
!12512 = !DILocalVariable(name: "mask", scope: !12477, file: !533, line: 190, type: !42)
!12513 = !DILocation(line: 190, column: 13, scope: !12477)
!12514 = !DILocalVariable(name: "rightmask", scope: !12477, file: !533, line: 190, type: !42)
!12515 = !DILocation(line: 190, column: 19, scope: !12477)
!12516 = !DILocation(line: 192, column: 9, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12477, file: !533, line: 192, column: 9)
!12518 = !DILocation(line: 192, column: 12, scope: !12517)
!12519 = !DILocation(line: 192, column: 9, scope: !12477)
!12520 = !DILocation(line: 194, column: 35, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12517, file: !533, line: 192, column: 33)
!12522 = !DILocation(line: 194, column: 40, scope: !12521)
!12523 = !DILocation(line: 194, column: 45, scope: !12521)
!12524 = !DILocation(line: 194, column: 50, scope: !12521)
!12525 = !DILocation(line: 194, column: 53, scope: !12521)
!12526 = !DILocation(line: 194, column: 56, scope: !12521)
!12527 = !DILocation(line: 194, column: 9, scope: !12521)
!12528 = !DILocation(line: 194, column: 2, scope: !12521)
!12529 = !DILocation(line: 198, column: 9, scope: !12477)
!12530 = !DILocation(line: 198, column: 14, scope: !12477)
!12531 = !DILocation(line: 198, column: 7, scope: !12477)
!12532 = !DILocation(line: 199, column: 9, scope: !12477)
!12533 = !DILocation(line: 199, column: 14, scope: !12477)
!12534 = !DILocation(line: 199, column: 7, scope: !12477)
!12535 = !DILocation(line: 200, column: 10, scope: !12477)
!12536 = !DILocation(line: 200, column: 15, scope: !12477)
!12537 = !DILocation(line: 200, column: 8, scope: !12477)
!12538 = !DILocation(line: 202, column: 9, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12477, file: !533, line: 202, column: 9)
!12540 = !DILocation(line: 202, column: 11, scope: !12539)
!12541 = !DILocation(line: 202, column: 9, scope: !12477)
!12542 = !DILocation(line: 202, column: 23, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12539, file: !533, line: 202, column: 16)
!12544 = !DILocation(line: 202, column: 20, scope: !12543)
!12545 = !DILocation(line: 202, column: 28, scope: !12543)
!12546 = !DILocation(line: 202, column: 33, scope: !12543)
!12547 = !DILocation(line: 203, column: 9, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12477, file: !533, line: 203, column: 9)
!12549 = !DILocation(line: 203, column: 11, scope: !12548)
!12550 = !DILocation(line: 203, column: 9, scope: !12477)
!12551 = !DILocation(line: 203, column: 23, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12548, file: !533, line: 203, column: 16)
!12553 = !DILocation(line: 203, column: 20, scope: !12552)
!12554 = !DILocation(line: 203, column: 28, scope: !12552)
!12555 = !DILocation(line: 203, column: 33, scope: !12552)
!12556 = !DILocation(line: 204, column: 10, scope: !12477)
!12557 = !DILocation(line: 204, column: 14, scope: !12477)
!12558 = !DILocation(line: 204, column: 12, scope: !12477)
!12559 = !DILocation(line: 204, column: 18, scope: !12477)
!12560 = !DILocation(line: 204, column: 23, scope: !12477)
!12561 = !DILocation(line: 204, column: 16, scope: !12477)
!12562 = !DILocation(line: 204, column: 9, scope: !12477)
!12563 = !DILocation(line: 204, column: 32, scope: !12477)
!12564 = !DILocation(line: 204, column: 36, scope: !12477)
!12565 = !DILocation(line: 204, column: 41, scope: !12477)
!12566 = !DILocation(line: 204, column: 49, scope: !12477)
!12567 = !DILocation(line: 204, column: 47, scope: !12477)
!12568 = !DILocation(line: 204, column: 7, scope: !12477)
!12569 = !DILocation(line: 205, column: 10, scope: !12477)
!12570 = !DILocation(line: 205, column: 14, scope: !12477)
!12571 = !DILocation(line: 205, column: 12, scope: !12477)
!12572 = !DILocation(line: 205, column: 18, scope: !12477)
!12573 = !DILocation(line: 205, column: 23, scope: !12477)
!12574 = !DILocation(line: 205, column: 16, scope: !12477)
!12575 = !DILocation(line: 205, column: 9, scope: !12477)
!12576 = !DILocation(line: 205, column: 33, scope: !12477)
!12577 = !DILocation(line: 205, column: 37, scope: !12477)
!12578 = !DILocation(line: 205, column: 42, scope: !12477)
!12579 = !DILocation(line: 205, column: 51, scope: !12477)
!12580 = !DILocation(line: 205, column: 49, scope: !12477)
!12581 = !DILocation(line: 205, column: 7, scope: !12477)
!12582 = !DILocation(line: 222, column: 16, scope: !12477)
!12583 = !DILocation(line: 222, column: 18, scope: !12477)
!12584 = !DILocation(line: 222, column: 14, scope: !12477)
!12585 = !DILocation(line: 223, column: 18, scope: !12477)
!12586 = !DILocation(line: 223, column: 22, scope: !12477)
!12587 = !DILocation(line: 223, column: 20, scope: !12477)
!12588 = !DILocation(line: 223, column: 24, scope: !12477)
!12589 = !DILocation(line: 223, column: 29, scope: !12477)
!12590 = !DILocation(line: 223, column: 15, scope: !12477)
!12591 = !DILocation(line: 224, column: 13, scope: !12477)
!12592 = !DILocation(line: 224, column: 15, scope: !12477)
!12593 = !DILocation(line: 224, column: 11, scope: !12477)
!12594 = !DILocation(line: 227, column: 9, scope: !12477)
!12595 = !DILocation(line: 227, column: 7, scope: !12477)
!12596 = !DILocation(line: 228, column: 14, scope: !12477)
!12597 = !DILocation(line: 228, column: 19, scope: !12477)
!12598 = !DILocation(line: 228, column: 26, scope: !12477)
!12599 = !DILocation(line: 228, column: 28, scope: !12477)
!12600 = !DILocation(line: 228, column: 33, scope: !12477)
!12601 = !DILocation(line: 228, column: 27, scope: !12477)
!12602 = !DILocation(line: 228, column: 24, scope: !12477)
!12603 = !DILocation(line: 228, column: 42, scope: !12477)
!12604 = !DILocation(line: 228, column: 40, scope: !12477)
!12605 = !DILocation(line: 228, column: 12, scope: !12477)
!12606 = !DILocation(line: 228, column: 7, scope: !12477)
!12607 = !DILocation(line: 229, column: 9, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12477, file: !533, line: 229, column: 9)
!12609 = !DILocation(line: 229, column: 21, scope: !12608)
!12610 = !DILocation(line: 229, column: 18, scope: !12608)
!12611 = !DILocation(line: 229, column: 9, scope: !12477)
!12612 = !DILocation(line: 230, column: 27, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12608, file: !533, line: 229, column: 32)
!12614 = !DILocation(line: 230, column: 24, scope: !12613)
!12615 = !DILocation(line: 230, column: 15, scope: !12613)
!12616 = !DILocation(line: 230, column: 9, scope: !12613)
!12617 = !DILocation(line: 230, column: 7, scope: !12613)
!12618 = !DILocation(line: 231, column: 16, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12613, file: !533, line: 231, column: 9)
!12620 = !DILocation(line: 231, column: 14, scope: !12619)
!12621 = !DILocation(line: 231, column: 21, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12619, file: !533, line: 231, column: 9)
!12623 = !DILocation(line: 231, column: 25, scope: !12622)
!12624 = !DILocation(line: 231, column: 23, scope: !12622)
!12625 = !DILocation(line: 231, column: 9, scope: !12619)
!12626 = !DILocation(line: 232, column: 21, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12622, file: !533, line: 231, column: 33)
!12628 = !DILocation(line: 232, column: 20, scope: !12627)
!12629 = !DILocation(line: 232, column: 25, scope: !12627)
!12630 = !DILocation(line: 232, column: 23, scope: !12627)
!12631 = !DILocation(line: 232, column: 34, scope: !12627)
!12632 = !DILocation(line: 232, column: 31, scope: !12627)
!12633 = !DILocation(line: 232, column: 14, scope: !12627)
!12634 = !DILocation(line: 232, column: 16, scope: !12627)
!12635 = !DILocation(line: 233, column: 18, scope: !12627)
!12636 = !DILocation(line: 233, column: 23, scope: !12627)
!12637 = !DILocation(line: 233, column: 15, scope: !12627)
!12638 = !DILocation(line: 234, column: 18, scope: !12627)
!12639 = !DILocation(line: 234, column: 23, scope: !12627)
!12640 = !DILocation(line: 234, column: 15, scope: !12627)
!12641 = !DILocation(line: 235, column: 9, scope: !12627)
!12642 = !DILocation(line: 231, column: 29, scope: !12622)
!12643 = !DILocation(line: 231, column: 9, scope: !12622)
!12644 = distinct !{!12644, !12625, !12645}
!12645 = !DILocation(line: 235, column: 9, scope: !12619)
!12646 = !DILocation(line: 236, column: 5, scope: !12613)
!12647 = !DILocation(line: 236, column: 16, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12608, file: !533, line: 236, column: 16)
!12649 = !DILocation(line: 236, column: 22, scope: !12648)
!12650 = !DILocation(line: 236, column: 16, scope: !12608)
!12651 = !DILocation(line: 237, column: 15, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12648, file: !533, line: 236, column: 28)
!12653 = !DILocation(line: 237, column: 17, scope: !12652)
!12654 = !DILocation(line: 237, column: 14, scope: !12652)
!12655 = !DILocation(line: 237, column: 44, scope: !12652)
!12656 = !DILocation(line: 237, column: 46, scope: !12652)
!12657 = !DILocation(line: 237, column: 41, scope: !12652)
!12658 = !DILocation(line: 237, column: 35, scope: !12652)
!12659 = !DILocation(line: 237, column: 30, scope: !12652)
!12660 = !DILocation(line: 237, column: 12, scope: !12652)
!12661 = !DILocation(line: 238, column: 16, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12652, file: !533, line: 238, column: 9)
!12663 = !DILocation(line: 238, column: 14, scope: !12662)
!12664 = !DILocation(line: 238, column: 21, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12662, file: !533, line: 238, column: 9)
!12666 = !DILocation(line: 238, column: 25, scope: !12665)
!12667 = !DILocation(line: 238, column: 23, scope: !12665)
!12668 = !DILocation(line: 238, column: 9, scope: !12662)
!12669 = !DILocation(line: 239, column: 15, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !533, line: 239, column: 6)
!12671 = distinct !DILexicalBlock(scope: !12665, file: !533, line: 238, column: 33)
!12672 = !DILocation(line: 239, column: 13, scope: !12670)
!12673 = !DILocation(line: 239, column: 11, scope: !12670)
!12674 = !DILocation(line: 239, column: 25, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12670, file: !533, line: 239, column: 6)
!12676 = !DILocation(line: 239, column: 29, scope: !12675)
!12677 = !DILocation(line: 239, column: 27, scope: !12675)
!12678 = !DILocation(line: 239, column: 6, scope: !12670)
!12679 = !DILocation(line: 240, column: 13, scope: !12675)
!12680 = !DILocation(line: 240, column: 11, scope: !12675)
!12681 = !DILocation(line: 240, column: 5, scope: !12675)
!12682 = !DILocation(line: 240, column: 8, scope: !12675)
!12683 = !DILocation(line: 240, column: 3, scope: !12675)
!12684 = !DILocation(line: 239, column: 41, scope: !12675)
!12685 = !DILocation(line: 239, column: 6, scope: !12675)
!12686 = distinct !{!12686, !12678, !12687}
!12687 = !DILocation(line: 240, column: 13, scope: !12670)
!12688 = !DILocation(line: 241, column: 13, scope: !12671)
!12689 = !DILocation(line: 241, column: 12, scope: !12671)
!12690 = !DILocation(line: 241, column: 17, scope: !12671)
!12691 = !DILocation(line: 241, column: 15, scope: !12671)
!12692 = !DILocation(line: 241, column: 7, scope: !12671)
!12693 = !DILocation(line: 241, column: 9, scope: !12671)
!12694 = !DILocation(line: 242, column: 24, scope: !12671)
!12695 = !DILocation(line: 242, column: 29, scope: !12671)
!12696 = !DILocation(line: 242, column: 21, scope: !12671)
!12697 = !DILocation(line: 242, column: 15, scope: !12671)
!12698 = !DILocation(line: 243, column: 24, scope: !12671)
!12699 = !DILocation(line: 243, column: 29, scope: !12671)
!12700 = !DILocation(line: 243, column: 21, scope: !12671)
!12701 = !DILocation(line: 243, column: 15, scope: !12671)
!12702 = !DILocation(line: 244, column: 2, scope: !12671)
!12703 = !DILocation(line: 238, column: 29, scope: !12665)
!12704 = !DILocation(line: 238, column: 9, scope: !12665)
!12705 = distinct !{!12705, !12668, !12706}
!12706 = !DILocation(line: 244, column: 2, scope: !12662)
!12707 = !DILocation(line: 245, column: 5, scope: !12652)
!12708 = !DILocalVariable(name: "overlap", scope: !12709, file: !533, line: 246, type: !188)
!12709 = distinct !DILexicalBlock(scope: !12648, file: !533, line: 245, column: 12)
!12710 = !DILocation(line: 246, column: 7, scope: !12709)
!12711 = !DILocation(line: 246, column: 20, scope: !12709)
!12712 = !DILocation(line: 246, column: 22, scope: !12709)
!12713 = !DILocation(line: 246, column: 27, scope: !12709)
!12714 = !DILocation(line: 246, column: 37, scope: !12709)
!12715 = !DILocation(line: 246, column: 41, scope: !12709)
!12716 = !DILocation(line: 246, column: 39, scope: !12709)
!12717 = !DILocation(line: 246, column: 43, scope: !12709)
!12718 = !DILocation(line: 246, column: 48, scope: !12709)
!12719 = !DILocation(line: 246, column: 57, scope: !12709)
!12720 = !DILocation(line: 246, column: 59, scope: !12709)
!12721 = !DILocation(line: 246, column: 54, scope: !12709)
!12722 = !DILocation(line: 246, column: 33, scope: !12709)
!12723 = !DILocation(line: 247, column: 23, scope: !12709)
!12724 = !DILocation(line: 247, column: 20, scope: !12709)
!12725 = !DILocation(line: 247, column: 15, scope: !12709)
!12726 = !DILocation(line: 247, column: 9, scope: !12709)
!12727 = !DILocation(line: 247, column: 7, scope: !12709)
!12728 = !DILocation(line: 248, column: 6, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12709, file: !533, line: 248, column: 6)
!12730 = !DILocation(line: 248, column: 6, scope: !12709)
!12731 = !DILocation(line: 249, column: 39, scope: !12729)
!12732 = !DILocation(line: 249, column: 43, scope: !12729)
!12733 = !DILocation(line: 249, column: 41, scope: !12729)
!12734 = !DILocation(line: 249, column: 46, scope: !12729)
!12735 = !DILocation(line: 249, column: 34, scope: !12729)
!12736 = !DILocation(line: 249, column: 25, scope: !12729)
!12737 = !DILocation(line: 249, column: 61, scope: !12729)
!12738 = !DILocation(line: 249, column: 59, scope: !12729)
!12739 = !DILocation(line: 249, column: 53, scope: !12729)
!12740 = !DILocation(line: 249, column: 18, scope: !12729)
!12741 = !DILocation(line: 249, column: 16, scope: !12729)
!12742 = !DILocation(line: 249, column: 6, scope: !12729)
!12743 = !DILocation(line: 251, column: 37, scope: !12729)
!12744 = !DILocation(line: 251, column: 39, scope: !12729)
!12745 = !DILocation(line: 251, column: 33, scope: !12729)
!12746 = !DILocation(line: 251, column: 24, scope: !12729)
!12747 = !DILocation(line: 251, column: 18, scope: !12729)
!12748 = !DILocation(line: 251, column: 16, scope: !12729)
!12749 = !DILocation(line: 252, column: 16, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12709, file: !533, line: 252, column: 9)
!12751 = !DILocation(line: 252, column: 14, scope: !12750)
!12752 = !DILocation(line: 252, column: 21, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12750, file: !533, line: 252, column: 9)
!12754 = !DILocation(line: 252, column: 25, scope: !12753)
!12755 = !DILocation(line: 252, column: 23, scope: !12753)
!12756 = !DILocation(line: 252, column: 9, scope: !12750)
!12757 = !DILocation(line: 253, column: 16, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12753, file: !533, line: 252, column: 33)
!12759 = !DILocation(line: 253, column: 15, scope: !12758)
!12760 = !DILocation(line: 253, column: 20, scope: !12758)
!12761 = !DILocation(line: 253, column: 18, scope: !12758)
!12762 = !DILocation(line: 253, column: 29, scope: !12758)
!12763 = !DILocation(line: 253, column: 26, scope: !12758)
!12764 = !DILocation(line: 253, column: 8, scope: !12758)
!12765 = !DILocation(line: 253, column: 11, scope: !12758)
!12766 = !DILocation(line: 254, column: 21, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12758, file: !533, line: 254, column: 13)
!12768 = !DILocation(line: 254, column: 19, scope: !12767)
!12769 = !DILocation(line: 254, column: 17, scope: !12767)
!12770 = !DILocation(line: 254, column: 31, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12767, file: !533, line: 254, column: 13)
!12772 = !DILocation(line: 254, column: 35, scope: !12771)
!12773 = !DILocation(line: 254, column: 45, scope: !12771)
!12774 = !DILocation(line: 254, column: 33, scope: !12771)
!12775 = !DILocation(line: 254, column: 13, scope: !12767)
!12776 = !DILocation(line: 255, column: 13, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12771, file: !533, line: 254, column: 55)
!12778 = !DILocation(line: 255, column: 11, scope: !12777)
!12779 = !DILocation(line: 255, column: 19, scope: !12777)
!12780 = !DILocation(line: 255, column: 18, scope: !12777)
!12781 = !DILocation(line: 255, column: 16, scope: !12777)
!12782 = !DILocation(line: 255, column: 33, scope: !12777)
!12783 = !DILocation(line: 255, column: 31, scope: !12777)
!12784 = !DILocation(line: 255, column: 25, scope: !12777)
!12785 = !DILocation(line: 255, column: 4, scope: !12777)
!12786 = !DILocation(line: 255, column: 6, scope: !12777)
!12787 = !DILocation(line: 256, column: 14, scope: !12777)
!12788 = !DILocation(line: 256, column: 13, scope: !12777)
!12789 = !DILocation(line: 256, column: 18, scope: !12777)
!12790 = !DILocation(line: 256, column: 16, scope: !12777)
!12791 = !DILocation(line: 256, column: 27, scope: !12777)
!12792 = !DILocation(line: 256, column: 24, scope: !12777)
!12793 = !DILocation(line: 256, column: 5, scope: !12777)
!12794 = !DILocation(line: 256, column: 8, scope: !12777)
!12795 = !DILocation(line: 257, column: 6, scope: !12777)
!12796 = !DILocation(line: 254, column: 51, scope: !12771)
!12797 = !DILocation(line: 254, column: 13, scope: !12771)
!12798 = distinct !{!12798, !12775, !12799}
!12799 = !DILocation(line: 257, column: 6, scope: !12767)
!12800 = !DILocation(line: 258, column: 10, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12758, file: !533, line: 258, column: 10)
!12802 = !DILocation(line: 258, column: 10, scope: !12758)
!12803 = !DILocation(line: 259, column: 11, scope: !12801)
!12804 = !DILocation(line: 259, column: 10, scope: !12801)
!12805 = !DILocation(line: 259, column: 15, scope: !12801)
!12806 = !DILocation(line: 259, column: 13, scope: !12801)
!12807 = !DILocation(line: 259, column: 34, scope: !12801)
!12808 = !DILocation(line: 259, column: 32, scope: !12801)
!12809 = !DILocation(line: 259, column: 26, scope: !12801)
!12810 = !DILocation(line: 259, column: 4, scope: !12801)
!12811 = !DILocation(line: 259, column: 6, scope: !12801)
!12812 = !DILocation(line: 259, column: 3, scope: !12801)
!12813 = !DILocation(line: 261, column: 11, scope: !12801)
!12814 = !DILocation(line: 261, column: 19, scope: !12801)
!12815 = !DILocation(line: 261, column: 18, scope: !12801)
!12816 = !DILocation(line: 261, column: 16, scope: !12801)
!12817 = !DILocation(line: 261, column: 33, scope: !12801)
!12818 = !DILocation(line: 261, column: 31, scope: !12801)
!12819 = !DILocation(line: 261, column: 25, scope: !12801)
!12820 = !DILocation(line: 262, column: 9, scope: !12801)
!12821 = !DILocation(line: 262, column: 16, scope: !12801)
!12822 = !DILocation(line: 262, column: 14, scope: !12801)
!12823 = !DILocation(line: 262, column: 30, scope: !12801)
!12824 = !DILocation(line: 262, column: 27, scope: !12801)
!12825 = !DILocation(line: 261, column: 41, scope: !12801)
!12826 = !DILocation(line: 261, column: 4, scope: !12801)
!12827 = !DILocation(line: 261, column: 6, scope: !12801)
!12828 = !DILocation(line: 263, column: 17, scope: !12758)
!12829 = !DILocation(line: 263, column: 22, scope: !12758)
!12830 = !DILocation(line: 263, column: 14, scope: !12758)
!12831 = !DILocation(line: 263, column: 8, scope: !12758)
!12832 = !DILocation(line: 264, column: 17, scope: !12758)
!12833 = !DILocation(line: 264, column: 22, scope: !12758)
!12834 = !DILocation(line: 264, column: 14, scope: !12758)
!12835 = !DILocation(line: 264, column: 8, scope: !12758)
!12836 = !DILocation(line: 265, column: 2, scope: !12758)
!12837 = !DILocation(line: 252, column: 29, scope: !12753)
!12838 = !DILocation(line: 252, column: 9, scope: !12753)
!12839 = distinct !{!12839, !12756, !12840}
!12840 = !DILocation(line: 265, column: 2, scope: !12750)
!12841 = !DILocation(line: 268, column: 5, scope: !12477)
!12842 = !DILocation(line: 269, column: 1, scope: !12477)
!12843 = distinct !DISubprogram(name: "jbig2_image_clear", scope: !533, file: !533, line: 273, type: !12844, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !532, retainedNodes: !70)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{null, !11733, !535, !6}
!12846 = !DILocalVariable(name: "ctx", arg: 1, scope: !12843, file: !533, line: 273, type: !11733)
!12847 = !DILocation(line: 273, column: 34, scope: !12843)
!12848 = !DILocalVariable(name: "image", arg: 2, scope: !12843, file: !533, line: 273, type: !535)
!12849 = !DILocation(line: 273, column: 51, scope: !12843)
!12850 = !DILocalVariable(name: "value", arg: 3, scope: !12843, file: !533, line: 273, type: !6)
!12851 = !DILocation(line: 273, column: 62, scope: !12843)
!12852 = !DILocalVariable(name: "fill", scope: !12843, file: !533, line: 275, type: !432)
!12853 = !DILocation(line: 275, column: 19, scope: !12843)
!12854 = !DILocation(line: 275, column: 26, scope: !12843)
!12855 = !DILocation(line: 277, column: 12, scope: !12843)
!12856 = !DILocation(line: 277, column: 19, scope: !12843)
!12857 = !DILocation(line: 277, column: 25, scope: !12843)
!12858 = !DILocation(line: 277, column: 5, scope: !12843)
!12859 = !DILocation(line: 277, column: 31, scope: !12843)
!12860 = !DILocation(line: 277, column: 38, scope: !12843)
!12861 = !DILocation(line: 277, column: 45, scope: !12843)
!12862 = !DILocation(line: 277, column: 52, scope: !12843)
!12863 = !DILocation(line: 277, column: 44, scope: !12843)
!12864 = !DILocation(line: 278, column: 1, scope: !12843)
!12865 = distinct !DISubprogram(name: "jbig2_image_write_pbm_file", scope: !545, file: !545, line: 32, type: !12866, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !544, retainedNodes: !70)
!12866 = !DISubroutineType(types: !12867)
!12867 = !{!6, !12868, !8}
!12868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12869, size: 64)
!12869 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !12870)
!12870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !12871)
!12871 = !{!12872, !12873, !12874, !12875, !12876}
!12872 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !12870, file: !58, line: 57, baseType: !6, size: 32)
!12873 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !12870, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!12874 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !12870, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!12875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12870, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!12876 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !12870, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!12877 = !DILocalVariable(name: "image", arg: 1, scope: !12865, file: !545, line: 32, type: !12868)
!12878 = !DILocation(line: 32, column: 44, scope: !12865)
!12879 = !DILocalVariable(name: "filename", arg: 2, scope: !12865, file: !545, line: 32, type: !8)
!12880 = !DILocation(line: 32, column: 57, scope: !12865)
!12881 = !DILocalVariable(name: "out", scope: !12865, file: !545, line: 34, type: !12882)
!12882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12883, size: 64)
!12883 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !612, line: 48, baseType: !12884)
!12884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !614, line: 241, size: 1728, elements: !12885)
!12885 = !{!12886, !12887, !12888, !12889, !12890, !12891, !12892, !12893, !12894, !12895, !12896, !12897, !12898, !12906, !12907, !12908, !12909, !12910, !12911, !12912, !12913, !12914, !12915, !12916, !12917, !12918, !12919, !12920, !12921}
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !12884, file: !614, line: 242, baseType: !6, size: 32)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !12884, file: !614, line: 247, baseType: !8, size: 64, offset: 64)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !12884, file: !614, line: 248, baseType: !8, size: 64, offset: 128)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !12884, file: !614, line: 249, baseType: !8, size: 64, offset: 192)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !12884, file: !614, line: 250, baseType: !8, size: 64, offset: 256)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !12884, file: !614, line: 251, baseType: !8, size: 64, offset: 320)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !12884, file: !614, line: 252, baseType: !8, size: 64, offset: 384)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !12884, file: !614, line: 253, baseType: !8, size: 64, offset: 448)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !12884, file: !614, line: 254, baseType: !8, size: 64, offset: 512)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !12884, file: !614, line: 256, baseType: !8, size: 64, offset: 576)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !12884, file: !614, line: 257, baseType: !8, size: 64, offset: 640)
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !12884, file: !614, line: 258, baseType: !8, size: 64, offset: 704)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !12884, file: !614, line: 260, baseType: !12899, size: 64, offset: 768)
!12899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12900, size: 64)
!12900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !614, line: 156, size: 192, elements: !12901)
!12901 = !{!12902, !12903, !12905}
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !12900, file: !614, line: 157, baseType: !12899, size: 64)
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !12900, file: !614, line: 158, baseType: !12904, size: 64, offset: 64)
!12904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12884, size: 64)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !12900, file: !614, line: 162, baseType: !6, size: 32, offset: 128)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !12884, file: !614, line: 262, baseType: !12904, size: 64, offset: 832)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !12884, file: !614, line: 264, baseType: !6, size: 32, offset: 896)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !12884, file: !614, line: 268, baseType: !6, size: 32, offset: 928)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !12884, file: !614, line: 270, baseType: !640, size: 64, offset: 960)
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !12884, file: !614, line: 274, baseType: !186, size: 16, offset: 1024)
!12911 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !12884, file: !614, line: 275, baseType: !645, size: 8, offset: 1040)
!12912 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !12884, file: !614, line: 276, baseType: !647, size: 8, offset: 1048)
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !12884, file: !614, line: 280, baseType: !651, size: 64, offset: 1088)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !12884, file: !614, line: 289, baseType: !654, size: 64, offset: 1152)
!12915 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !12884, file: !614, line: 297, baseType: !68, size: 64, offset: 1216)
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !12884, file: !614, line: 298, baseType: !68, size: 64, offset: 1280)
!12917 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !12884, file: !614, line: 299, baseType: !68, size: 64, offset: 1344)
!12918 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !12884, file: !614, line: 300, baseType: !68, size: 64, offset: 1408)
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !12884, file: !614, line: 302, baseType: !119, size: 64, offset: 1472)
!12920 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !12884, file: !614, line: 303, baseType: !6, size: 32, offset: 1536)
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !12884, file: !614, line: 305, baseType: !662, size: 160, offset: 1568)
!12922 = !DILocation(line: 34, column: 11, scope: !12865)
!12923 = !DILocalVariable(name: "error", scope: !12865, file: !545, line: 35, type: !6)
!12924 = !DILocation(line: 35, column: 9, scope: !12865)
!12925 = !DILocation(line: 37, column: 22, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12865, file: !545, line: 37, column: 9)
!12927 = !DILocation(line: 37, column: 16, scope: !12926)
!12928 = !DILocation(line: 37, column: 14, scope: !12926)
!12929 = !DILocation(line: 37, column: 39, scope: !12926)
!12930 = !DILocation(line: 37, column: 9, scope: !12865)
!12931 = !DILocation(line: 38, column: 17, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12926, file: !545, line: 37, column: 48)
!12933 = !DILocation(line: 38, column: 60, scope: !12932)
!12934 = !DILocation(line: 38, column: 9, scope: !12932)
!12935 = !DILocation(line: 39, column: 9, scope: !12932)
!12936 = !DILocation(line: 42, column: 35, scope: !12865)
!12937 = !DILocation(line: 42, column: 42, scope: !12865)
!12938 = !DILocation(line: 42, column: 13, scope: !12865)
!12939 = !DILocation(line: 42, column: 11, scope: !12865)
!12940 = !DILocation(line: 44, column: 12, scope: !12865)
!12941 = !DILocation(line: 44, column: 5, scope: !12865)
!12942 = !DILocation(line: 45, column: 13, scope: !12865)
!12943 = !DILocation(line: 45, column: 5, scope: !12865)
!12944 = !DILocation(line: 46, column: 1, scope: !12865)
!12945 = distinct !DISubprogram(name: "jbig2_image_write_pbm", scope: !545, file: !545, line: 50, type: !12946, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !544, retainedNodes: !70)
!12946 = !DISubroutineType(types: !12947)
!12947 = !{!6, !12868, !12882}
!12948 = !DILocalVariable(name: "image", arg: 1, scope: !12945, file: !545, line: 50, type: !12868)
!12949 = !DILocation(line: 50, column: 39, scope: !12945)
!12950 = !DILocalVariable(name: "out", arg: 2, scope: !12945, file: !545, line: 50, type: !12882)
!12951 = !DILocation(line: 50, column: 52, scope: !12945)
!12952 = !DILocation(line: 53, column: 17, scope: !12945)
!12953 = !DILocation(line: 53, column: 37, scope: !12945)
!12954 = !DILocation(line: 53, column: 44, scope: !12945)
!12955 = !DILocation(line: 53, column: 51, scope: !12945)
!12956 = !DILocation(line: 53, column: 58, scope: !12945)
!12957 = !DILocation(line: 53, column: 9, scope: !12945)
!12958 = !DILocation(line: 58, column: 16, scope: !12945)
!12959 = !DILocation(line: 58, column: 23, scope: !12945)
!12960 = !DILocation(line: 58, column: 32, scope: !12945)
!12961 = !DILocation(line: 58, column: 39, scope: !12945)
!12962 = !DILocation(line: 58, column: 46, scope: !12945)
!12963 = !DILocation(line: 58, column: 53, scope: !12945)
!12964 = !DILocation(line: 58, column: 45, scope: !12945)
!12965 = !DILocation(line: 58, column: 61, scope: !12945)
!12966 = !DILocation(line: 58, column: 9, scope: !12945)
!12967 = !DILocation(line: 61, column: 2, scope: !12945)
!12968 = distinct !DISubprogram(name: "jbig2_image_read_pbm_file", scope: !545, file: !545, line: 65, type: !12969, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !544, retainedNodes: !70)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!12868, !669, !8}
!12971 = !DILocalVariable(name: "ctx", arg: 1, scope: !12968, file: !545, line: 65, type: !669)
!12972 = !DILocation(line: 65, column: 49, scope: !12968)
!12973 = !DILocalVariable(name: "filename", arg: 2, scope: !12968, file: !545, line: 65, type: !8)
!12974 = !DILocation(line: 65, column: 60, scope: !12968)
!12975 = !DILocalVariable(name: "in", scope: !12968, file: !545, line: 67, type: !12882)
!12976 = !DILocation(line: 67, column: 11, scope: !12968)
!12977 = !DILocalVariable(name: "image", scope: !12968, file: !545, line: 68, type: !12868)
!12978 = !DILocation(line: 68, column: 17, scope: !12968)
!12979 = !DILocation(line: 70, column: 21, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12968, file: !545, line: 70, column: 9)
!12981 = !DILocation(line: 70, column: 15, scope: !12980)
!12982 = !DILocation(line: 70, column: 13, scope: !12980)
!12983 = !DILocation(line: 70, column: 38, scope: !12980)
!12984 = !DILocation(line: 70, column: 9, scope: !12968)
!12985 = !DILocation(line: 71, column: 11, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12980, file: !545, line: 70, column: 47)
!12987 = !DILocation(line: 71, column: 56, scope: !12986)
!12988 = !DILocation(line: 71, column: 3, scope: !12986)
!12989 = !DILocation(line: 72, column: 3, scope: !12986)
!12990 = !DILocation(line: 75, column: 34, scope: !12968)
!12991 = !DILocation(line: 75, column: 39, scope: !12968)
!12992 = !DILocation(line: 75, column: 13, scope: !12968)
!12993 = !DILocation(line: 75, column: 11, scope: !12968)
!12994 = !DILocation(line: 77, column: 13, scope: !12968)
!12995 = !DILocation(line: 77, column: 5, scope: !12968)
!12996 = !DILocation(line: 78, column: 1, scope: !12968)
!12997 = distinct !DISubprogram(name: "jbig2_image_read_pbm", scope: !545, file: !545, line: 81, type: !12998, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !544, retainedNodes: !70)
!12998 = !DISubroutineType(types: !12999)
!12999 = !{!12868, !669, !12882}
!13000 = !DILocalVariable(name: "ctx", arg: 1, scope: !12997, file: !545, line: 81, type: !669)
!13001 = !DILocation(line: 81, column: 44, scope: !12997)
!13002 = !DILocalVariable(name: "in", arg: 2, scope: !12997, file: !545, line: 81, type: !12882)
!13003 = !DILocation(line: 81, column: 55, scope: !12997)
!13004 = !DILocalVariable(name: "i", scope: !12997, file: !545, line: 83, type: !6)
!13005 = !DILocation(line: 83, column: 9, scope: !12997)
!13006 = !DILocalVariable(name: "dim", scope: !12997, file: !545, line: 83, type: !13007)
!13007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !38)
!13008 = !DILocation(line: 83, column: 12, scope: !12997)
!13009 = !DILocalVariable(name: "done", scope: !12997, file: !545, line: 84, type: !6)
!13010 = !DILocation(line: 84, column: 9, scope: !12997)
!13011 = !DILocalVariable(name: "image", scope: !12997, file: !545, line: 85, type: !12868)
!13012 = !DILocation(line: 85, column: 17, scope: !12997)
!13013 = !DILocalVariable(name: "c", scope: !12997, file: !545, line: 86, type: !6)
!13014 = !DILocation(line: 86, column: 9, scope: !12997)
!13015 = !DILocalVariable(name: "buf", scope: !12997, file: !545, line: 87, type: !13016)
!13016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 256, elements: !13017)
!13017 = !{!13018}
!13018 = !DISubrange(count: 32)
!13019 = !DILocation(line: 87, column: 10, scope: !12997)
!13020 = !DILocation(line: 90, column: 5, scope: !12997)
!13021 = !DILocation(line: 90, column: 23, scope: !12997)
!13022 = !DILocation(line: 90, column: 17, scope: !12997)
!13023 = !DILocation(line: 90, column: 15, scope: !12997)
!13024 = !DILocation(line: 90, column: 28, scope: !12997)
!13025 = !DILocation(line: 91, column: 18, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !545, line: 91, column: 13)
!13027 = distinct !DILexicalBlock(scope: !12997, file: !545, line: 90, column: 36)
!13028 = !DILocation(line: 91, column: 13, scope: !13026)
!13029 = !DILocation(line: 91, column: 13, scope: !13027)
!13030 = !DILocation(line: 91, column: 23, scope: !13026)
!13031 = distinct !{!13031, !13020, !13032}
!13032 = !DILocation(line: 92, column: 5, scope: !12997)
!13033 = !DILocation(line: 93, column: 20, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !12997, file: !545, line: 93, column: 9)
!13035 = !DILocation(line: 93, column: 14, scope: !13034)
!13036 = !DILocation(line: 93, column: 12, scope: !13034)
!13037 = !DILocation(line: 93, column: 25, scope: !13034)
!13038 = !DILocation(line: 93, column: 9, scope: !12997)
!13039 = !DILocation(line: 94, column: 17, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13034, file: !545, line: 93, column: 33)
!13041 = !DILocation(line: 94, column: 9, scope: !13040)
!13042 = !DILocation(line: 95, column: 9, scope: !13040)
!13043 = !DILocation(line: 101, column: 10, scope: !12997)
!13044 = !DILocation(line: 102, column: 7, scope: !12997)
!13045 = !DILocation(line: 103, column: 5, scope: !12997)
!13046 = !DILocation(line: 103, column: 12, scope: !12997)
!13047 = !DILocation(line: 103, column: 17, scope: !12997)
!13048 = !DILocation(line: 104, column: 19, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !12997, file: !545, line: 103, column: 22)
!13050 = !DILocation(line: 104, column: 13, scope: !13049)
!13051 = !DILocation(line: 104, column: 11, scope: !13049)
!13052 = !DILocation(line: 106, column: 13, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13049, file: !545, line: 106, column: 13)
!13054 = !DILocation(line: 106, column: 15, scope: !13053)
!13055 = !DILocation(line: 106, column: 22, scope: !13053)
!13056 = !DILocation(line: 106, column: 25, scope: !13053)
!13057 = !DILocation(line: 106, column: 27, scope: !13053)
!13058 = !DILocation(line: 106, column: 35, scope: !13053)
!13059 = !DILocation(line: 106, column: 38, scope: !13053)
!13060 = !DILocation(line: 106, column: 40, scope: !13053)
!13061 = !DILocation(line: 106, column: 48, scope: !13053)
!13062 = !DILocation(line: 106, column: 51, scope: !13053)
!13063 = !DILocation(line: 106, column: 53, scope: !13053)
!13064 = !DILocation(line: 106, column: 13, scope: !13049)
!13065 = !DILocation(line: 106, column: 62, scope: !13053)
!13066 = distinct !{!13066, !13045, !13067}
!13067 = !DILocation(line: 125, column: 5, scope: !12997)
!13068 = !DILocation(line: 108, column: 13, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13049, file: !545, line: 108, column: 13)
!13070 = !DILocation(line: 108, column: 15, scope: !13069)
!13071 = !DILocation(line: 108, column: 13, scope: !13049)
!13072 = !DILocation(line: 109, column: 13, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13069, file: !545, line: 108, column: 23)
!13074 = !DILocation(line: 109, column: 31, scope: !13073)
!13075 = !DILocation(line: 109, column: 25, scope: !13073)
!13076 = !DILocation(line: 109, column: 23, scope: !13073)
!13077 = !DILocation(line: 109, column: 36, scope: !13073)
!13078 = distinct !{!13078, !13072, !13079}
!13079 = !DILocation(line: 109, column: 44, scope: !13073)
!13080 = !DILocation(line: 110, column: 13, scope: !13073)
!13081 = !DILocation(line: 112, column: 13, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13049, file: !545, line: 112, column: 13)
!13083 = !DILocation(line: 112, column: 13, scope: !13049)
!13084 = !DILocation(line: 113, column: 24, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13082, file: !545, line: 112, column: 25)
!13086 = !DILocation(line: 113, column: 18, scope: !13085)
!13087 = !DILocation(line: 113, column: 13, scope: !13085)
!13088 = !DILocation(line: 113, column: 22, scope: !13085)
!13089 = !DILocation(line: 114, column: 13, scope: !13085)
!13090 = !DILocation(line: 114, column: 20, scope: !13085)
!13091 = !DILocation(line: 115, column: 26, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13093, file: !545, line: 115, column: 21)
!13093 = distinct !DILexicalBlock(scope: !13085, file: !545, line: 114, column: 51)
!13094 = !DILocation(line: 115, column: 21, scope: !13092)
!13095 = !DILocation(line: 115, column: 30, scope: !13092)
!13096 = !DILocation(line: 115, column: 33, scope: !13092)
!13097 = !DILocation(line: 115, column: 35, scope: !13092)
!13098 = !DILocation(line: 115, column: 21, scope: !13093)
!13099 = !DILocation(line: 116, column: 29, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13092, file: !545, line: 115, column: 42)
!13101 = !DILocation(line: 116, column: 21, scope: !13100)
!13102 = !DILocation(line: 117, column: 21, scope: !13100)
!13103 = distinct !{!13103, !13089, !13104}
!13104 = !DILocation(line: 119, column: 13, scope: !13085)
!13105 = !DILocation(line: 120, column: 17, scope: !13085)
!13106 = !DILocation(line: 120, column: 13, scope: !13085)
!13107 = !DILocation(line: 120, column: 20, scope: !13085)
!13108 = !DILocation(line: 121, column: 20, scope: !13085)
!13109 = !DILocation(line: 121, column: 36, scope: !13085)
!13110 = !DILocation(line: 121, column: 32, scope: !13085)
!13111 = !DILocation(line: 121, column: 13, scope: !13085)
!13112 = !DILocation(line: 122, column: 15, scope: !13085)
!13113 = !DILocation(line: 123, column: 17, scope: !13085)
!13114 = !DILocation(line: 124, column: 9, scope: !13085)
!13115 = !DILocation(line: 127, column: 29, scope: !12997)
!13116 = !DILocation(line: 127, column: 34, scope: !12997)
!13117 = !DILocation(line: 127, column: 42, scope: !12997)
!13118 = !DILocation(line: 127, column: 13, scope: !12997)
!13119 = !DILocation(line: 127, column: 11, scope: !12997)
!13120 = !DILocation(line: 128, column: 9, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !12997, file: !545, line: 128, column: 9)
!13122 = !DILocation(line: 128, column: 15, scope: !13121)
!13123 = !DILocation(line: 128, column: 9, scope: !12997)
!13124 = !DILocation(line: 129, column: 17, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13121, file: !545, line: 128, column: 24)
!13126 = !DILocation(line: 129, column: 74, scope: !13125)
!13127 = !DILocation(line: 129, column: 82, scope: !13125)
!13128 = !DILocation(line: 129, column: 9, scope: !13125)
!13129 = !DILocation(line: 130, column: 9, scope: !13125)
!13130 = !DILocation(line: 134, column: 11, scope: !12997)
!13131 = !DILocation(line: 134, column: 18, scope: !12997)
!13132 = !DILocation(line: 134, column: 27, scope: !12997)
!13133 = !DILocation(line: 134, column: 34, scope: !12997)
!13134 = !DILocation(line: 134, column: 41, scope: !12997)
!13135 = !DILocation(line: 134, column: 48, scope: !12997)
!13136 = !DILocation(line: 134, column: 40, scope: !12997)
!13137 = !DILocation(line: 134, column: 56, scope: !12997)
!13138 = !DILocation(line: 134, column: 5, scope: !12997)
!13139 = !DILocation(line: 135, column: 14, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !12997, file: !545, line: 135, column: 9)
!13141 = !DILocation(line: 135, column: 9, scope: !13140)
!13142 = !DILocation(line: 135, column: 9, scope: !12997)
!13143 = !DILocation(line: 136, column: 17, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13140, file: !545, line: 135, column: 19)
!13145 = !DILocation(line: 136, column: 9, scope: !13144)
!13146 = !DILocation(line: 137, column: 29, scope: !13144)
!13147 = !DILocation(line: 137, column: 34, scope: !13144)
!13148 = !DILocation(line: 137, column: 9, scope: !13144)
!13149 = !DILocation(line: 138, column: 9, scope: !13144)
!13150 = !DILocation(line: 141, column: 12, scope: !12997)
!13151 = !DILocation(line: 141, column: 5, scope: !12997)
!13152 = !DILocation(line: 142, column: 1, scope: !12997)
!13153 = distinct !DISubprogram(name: "jbig2_metadata_new", scope: !564, file: !564, line: 32, type: !13154, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !563, retainedNodes: !70)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{!13156, !13166, !13161}
!13156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13157, size: 64)
!13157 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Metadata", file: !567, line: 31, baseType: !13158)
!13158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Metadata", file: !567, line: 39, size: 256, elements: !13159)
!13159 = !{!13160, !13162, !13163, !13164, !13165}
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !13158, file: !567, line: 40, baseType: !13161, size: 32)
!13161 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Encoding", file: !567, line: 29, baseType: !566)
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !13158, file: !567, line: 41, baseType: !7, size: 64, offset: 64)
!13163 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !13158, file: !567, line: 41, baseType: !7, size: 64, offset: 128)
!13164 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !13158, file: !567, line: 42, baseType: !6, size: 32, offset: 192)
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !13158, file: !567, line: 42, baseType: !6, size: 32, offset: 224)
!13166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13167, size: 64)
!13167 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !13168)
!13168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !13169)
!13169 = !{!13170, !13187, !13188, !13191, !13192, !13193, !13194, !13195, !13196, !13197, !13198, !13199, !13200, !13201, !13214, !13215, !13216, !13217, !13218}
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !13168, file: !90, line: 45, baseType: !13171, size: 64)
!13171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13172, size: 64)
!13172 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !13173)
!13173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !13174)
!13174 = !{!13175, !13179, !13183}
!13175 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !13173, file: !58, line: 86, baseType: !13176, size: 64)
!13176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13177, size: 64)
!13177 = !DISubroutineType(types: !13178)
!13178 = !{!68, !13171, !119}
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !13173, file: !58, line: 87, baseType: !13180, size: 64, offset: 64)
!13180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13181, size: 64)
!13181 = !DISubroutineType(types: !13182)
!13182 = !{null, !13171, !68}
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !13173, file: !58, line: 88, baseType: !13184, size: 64, offset: 128)
!13184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13185, size: 64)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{!68, !13171, !68, !119}
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !13168, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !13168, file: !90, line: 47, baseType: !13189, size: 64, offset: 128)
!13189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13190, size: 64)
!13190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13167)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !13168, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!13192 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !13168, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !13168, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!13194 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !13168, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!13195 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !13168, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !13168, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13168, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !13168, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !13168, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !13168, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !13168, file: !90, line: 62, baseType: !13202, size: 64, offset: 640)
!13202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13203, size: 64)
!13203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13204, size: 64)
!13204 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !13205)
!13205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !13206)
!13206 = !{!13207, !13208, !13209, !13210, !13211, !13212, !13213}
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !13205, file: !58, line: 117, baseType: !32, size: 32)
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13205, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !13205, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !13205, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!13211 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !13205, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!13212 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !13205, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !13205, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !13168, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !13168, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !13168, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !13168, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !13168, file: !90, line: 70, baseType: !13219, size: 64, offset: 832)
!13219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13220, size: 64)
!13220 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !13221)
!13221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !13222)
!13222 = !{!13223, !13224, !13225, !13226, !13227, !13228, !13229, !13230, !13231, !13232, !13233}
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13221, file: !90, line: 111, baseType: !178, size: 32)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !13221, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !13221, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !13221, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !13221, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !13221, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!13229 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !13221, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!13230 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !13221, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !13221, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13221, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !13221, file: !90, line: 120, baseType: !13234, size: 64, offset: 320)
!13234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13235, size: 64)
!13235 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !13236)
!13236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !13237)
!13237 = !{!13238, !13239, !13240, !13241, !13242}
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !13236, file: !58, line: 57, baseType: !6, size: 32)
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !13236, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !13236, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13236, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !13236, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!13243 = !DILocalVariable(name: "ctx", arg: 1, scope: !13153, file: !564, line: 32, type: !13166)
!13244 = !DILocation(line: 32, column: 45, scope: !13153)
!13245 = !DILocalVariable(name: "encoding", arg: 2, scope: !13153, file: !564, line: 32, type: !13161)
!13246 = !DILocation(line: 32, column: 64, scope: !13153)
!13247 = !DILocalVariable(name: "md", scope: !13153, file: !564, line: 34, type: !13156)
!13248 = !DILocation(line: 34, column: 20, scope: !13153)
!13249 = !DILocation(line: 34, column: 37, scope: !13153)
!13250 = !DILocation(line: 34, column: 42, scope: !13153)
!13251 = !DILocation(line: 34, column: 25, scope: !13153)
!13252 = !DILocation(line: 36, column: 9, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13153, file: !564, line: 36, column: 9)
!13254 = !DILocation(line: 36, column: 12, scope: !13253)
!13255 = !DILocation(line: 36, column: 9, scope: !13153)
!13256 = !DILocation(line: 37, column: 24, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13253, file: !564, line: 36, column: 21)
!13258 = !DILocation(line: 37, column: 9, scope: !13257)
!13259 = !DILocation(line: 37, column: 13, scope: !13257)
!13260 = !DILocation(line: 37, column: 22, scope: !13257)
!13261 = !DILocation(line: 38, column: 9, scope: !13257)
!13262 = !DILocation(line: 38, column: 13, scope: !13257)
!13263 = !DILocation(line: 38, column: 21, scope: !13257)
!13264 = !DILocation(line: 39, column: 9, scope: !13257)
!13265 = !DILocation(line: 39, column: 13, scope: !13257)
!13266 = !DILocation(line: 39, column: 25, scope: !13257)
!13267 = !DILocation(line: 40, column: 32, scope: !13257)
!13268 = !DILocation(line: 40, column: 37, scope: !13257)
!13269 = !DILocation(line: 40, column: 48, scope: !13257)
!13270 = !DILocation(line: 40, column: 52, scope: !13257)
!13271 = !DILocation(line: 40, column: 63, scope: !13257)
!13272 = !DILocation(line: 40, column: 20, scope: !13257)
!13273 = !DILocation(line: 40, column: 9, scope: !13257)
!13274 = !DILocation(line: 40, column: 13, scope: !13257)
!13275 = !DILocation(line: 40, column: 18, scope: !13257)
!13276 = !DILocation(line: 41, column: 34, scope: !13257)
!13277 = !DILocation(line: 41, column: 39, scope: !13257)
!13278 = !DILocation(line: 41, column: 50, scope: !13257)
!13279 = !DILocation(line: 41, column: 54, scope: !13257)
!13280 = !DILocation(line: 41, column: 65, scope: !13257)
!13281 = !DILocation(line: 41, column: 22, scope: !13257)
!13282 = !DILocation(line: 41, column: 9, scope: !13257)
!13283 = !DILocation(line: 41, column: 13, scope: !13257)
!13284 = !DILocation(line: 41, column: 20, scope: !13257)
!13285 = !DILocation(line: 42, column: 13, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13257, file: !564, line: 42, column: 13)
!13287 = !DILocation(line: 42, column: 17, scope: !13286)
!13288 = !DILocation(line: 42, column: 22, scope: !13286)
!13289 = !DILocation(line: 42, column: 30, scope: !13286)
!13290 = !DILocation(line: 42, column: 33, scope: !13286)
!13291 = !DILocation(line: 42, column: 37, scope: !13286)
!13292 = !DILocation(line: 42, column: 44, scope: !13286)
!13293 = !DILocation(line: 42, column: 13, scope: !13257)
!13294 = !DILocation(line: 43, column: 33, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13286, file: !564, line: 42, column: 53)
!13296 = !DILocation(line: 43, column: 38, scope: !13295)
!13297 = !DILocation(line: 43, column: 13, scope: !13295)
!13298 = !DILocation(line: 44, column: 16, scope: !13295)
!13299 = !DILocation(line: 45, column: 9, scope: !13295)
!13300 = !DILocation(line: 46, column: 5, scope: !13257)
!13301 = !DILocation(line: 47, column: 12, scope: !13153)
!13302 = !DILocation(line: 47, column: 5, scope: !13153)
!13303 = distinct !DISubprogram(name: "jbig2_metadata_free", scope: !564, file: !564, line: 50, type: !13304, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !563, retainedNodes: !70)
!13304 = !DISubroutineType(types: !13305)
!13305 = !{null, !13166, !13156}
!13306 = !DILocalVariable(name: "ctx", arg: 1, scope: !13303, file: !564, line: 50, type: !13166)
!13307 = !DILocation(line: 50, column: 36, scope: !13303)
!13308 = !DILocalVariable(name: "md", arg: 2, scope: !13303, file: !564, line: 50, type: !13156)
!13309 = !DILocation(line: 50, column: 56, scope: !13303)
!13310 = !DILocalVariable(name: "i", scope: !13303, file: !564, line: 52, type: !6)
!13311 = !DILocation(line: 52, column: 9, scope: !13303)
!13312 = !DILocation(line: 54, column: 9, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13303, file: !564, line: 54, column: 9)
!13314 = !DILocation(line: 54, column: 13, scope: !13313)
!13315 = !DILocation(line: 54, column: 9, scope: !13303)
!13316 = !DILocation(line: 56, column: 14, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13318, file: !564, line: 56, column: 7)
!13318 = distinct !DILexicalBlock(scope: !13313, file: !564, line: 54, column: 19)
!13319 = !DILocation(line: 56, column: 12, scope: !13317)
!13320 = !DILocation(line: 56, column: 19, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13317, file: !564, line: 56, column: 7)
!13322 = !DILocation(line: 56, column: 23, scope: !13321)
!13323 = !DILocation(line: 56, column: 27, scope: !13321)
!13324 = !DILocation(line: 56, column: 21, scope: !13321)
!13325 = !DILocation(line: 56, column: 7, scope: !13317)
!13326 = !DILocation(line: 57, column: 20, scope: !13321)
!13327 = !DILocation(line: 57, column: 25, scope: !13321)
!13328 = !DILocation(line: 57, column: 36, scope: !13321)
!13329 = !DILocation(line: 57, column: 40, scope: !13321)
!13330 = !DILocation(line: 57, column: 45, scope: !13321)
!13331 = !DILocation(line: 57, column: 9, scope: !13321)
!13332 = !DILocation(line: 56, column: 37, scope: !13321)
!13333 = !DILocation(line: 56, column: 7, scope: !13321)
!13334 = distinct !{!13334, !13325, !13335}
!13335 = !DILocation(line: 57, column: 47, scope: !13317)
!13336 = !DILocation(line: 58, column: 18, scope: !13318)
!13337 = !DILocation(line: 58, column: 23, scope: !13318)
!13338 = !DILocation(line: 58, column: 34, scope: !13318)
!13339 = !DILocation(line: 58, column: 38, scope: !13318)
!13340 = !DILocation(line: 58, column: 7, scope: !13318)
!13341 = !DILocation(line: 59, column: 5, scope: !13318)
!13342 = !DILocation(line: 60, column: 9, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13303, file: !564, line: 60, column: 9)
!13344 = !DILocation(line: 60, column: 13, scope: !13343)
!13345 = !DILocation(line: 60, column: 9, scope: !13303)
!13346 = !DILocation(line: 61, column: 14, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !564, line: 61, column: 7)
!13348 = distinct !DILexicalBlock(scope: !13343, file: !564, line: 60, column: 21)
!13349 = !DILocation(line: 61, column: 12, scope: !13347)
!13350 = !DILocation(line: 61, column: 19, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13347, file: !564, line: 61, column: 7)
!13352 = !DILocation(line: 61, column: 23, scope: !13351)
!13353 = !DILocation(line: 61, column: 27, scope: !13351)
!13354 = !DILocation(line: 61, column: 21, scope: !13351)
!13355 = !DILocation(line: 61, column: 7, scope: !13347)
!13356 = !DILocation(line: 62, column: 20, scope: !13351)
!13357 = !DILocation(line: 62, column: 25, scope: !13351)
!13358 = !DILocation(line: 62, column: 36, scope: !13351)
!13359 = !DILocation(line: 62, column: 40, scope: !13351)
!13360 = !DILocation(line: 62, column: 47, scope: !13351)
!13361 = !DILocation(line: 62, column: 9, scope: !13351)
!13362 = !DILocation(line: 61, column: 37, scope: !13351)
!13363 = !DILocation(line: 61, column: 7, scope: !13351)
!13364 = distinct !{!13364, !13355, !13365}
!13365 = !DILocation(line: 62, column: 49, scope: !13347)
!13366 = !DILocation(line: 63, column: 18, scope: !13348)
!13367 = !DILocation(line: 63, column: 23, scope: !13348)
!13368 = !DILocation(line: 63, column: 34, scope: !13348)
!13369 = !DILocation(line: 63, column: 38, scope: !13348)
!13370 = !DILocation(line: 63, column: 7, scope: !13348)
!13371 = !DILocation(line: 64, column: 5, scope: !13348)
!13372 = !DILocation(line: 65, column: 16, scope: !13303)
!13373 = !DILocation(line: 65, column: 21, scope: !13303)
!13374 = !DILocation(line: 65, column: 32, scope: !13303)
!13375 = !DILocation(line: 65, column: 5, scope: !13303)
!13376 = !DILocation(line: 66, column: 1, scope: !13303)
!13377 = distinct !DISubprogram(name: "jbig2_metadata_add", scope: !564, file: !564, line: 80, type: !13378, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !563, retainedNodes: !70)
!13378 = !DISubroutineType(types: !13379)
!13379 = !{!6, !13166, !13156, !76, !5919, !76, !5919}
!13380 = !DILocalVariable(name: "ctx", arg: 1, scope: !13377, file: !564, line: 80, type: !13166)
!13381 = !DILocation(line: 80, column: 34, scope: !13377)
!13382 = !DILocalVariable(name: "md", arg: 2, scope: !13377, file: !564, line: 80, type: !13156)
!13383 = !DILocation(line: 80, column: 54, scope: !13377)
!13384 = !DILocalVariable(name: "key", arg: 3, scope: !13377, file: !564, line: 81, type: !76)
!13385 = !DILocation(line: 81, column: 37, scope: !13377)
!13386 = !DILocalVariable(name: "key_length", arg: 4, scope: !13377, file: !564, line: 81, type: !5919)
!13387 = !DILocation(line: 81, column: 52, scope: !13377)
!13388 = !DILocalVariable(name: "value", arg: 5, scope: !13377, file: !564, line: 82, type: !76)
!13389 = !DILocation(line: 82, column: 37, scope: !13377)
!13390 = !DILocalVariable(name: "value_length", arg: 6, scope: !13377, file: !564, line: 82, type: !5919)
!13391 = !DILocation(line: 82, column: 54, scope: !13377)
!13392 = !DILocalVariable(name: "keys", scope: !13377, file: !564, line: 84, type: !7)
!13393 = !DILocation(line: 84, column: 12, scope: !13377)
!13394 = !DILocalVariable(name: "values", scope: !13377, file: !564, line: 84, type: !7)
!13395 = !DILocation(line: 84, column: 20, scope: !13377)
!13396 = !DILocation(line: 87, column: 9, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13377, file: !564, line: 87, column: 9)
!13398 = !DILocation(line: 87, column: 13, scope: !13397)
!13399 = !DILocation(line: 87, column: 24, scope: !13397)
!13400 = !DILocation(line: 87, column: 28, scope: !13397)
!13401 = !DILocation(line: 87, column: 21, scope: !13397)
!13402 = !DILocation(line: 87, column: 9, scope: !13377)
!13403 = !DILocation(line: 88, column: 9, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13397, file: !564, line: 87, column: 41)
!13405 = !DILocation(line: 88, column: 13, scope: !13404)
!13406 = !DILocation(line: 88, column: 25, scope: !13404)
!13407 = !DILocation(line: 89, column: 30, scope: !13404)
!13408 = !DILocation(line: 89, column: 35, scope: !13404)
!13409 = !DILocation(line: 89, column: 46, scope: !13404)
!13410 = !DILocation(line: 89, column: 50, scope: !13404)
!13411 = !DILocation(line: 89, column: 56, scope: !13404)
!13412 = !DILocation(line: 89, column: 60, scope: !13404)
!13413 = !DILocation(line: 89, column: 16, scope: !13404)
!13414 = !DILocation(line: 89, column: 14, scope: !13404)
!13415 = !DILocation(line: 90, column: 32, scope: !13404)
!13416 = !DILocation(line: 90, column: 37, scope: !13404)
!13417 = !DILocation(line: 90, column: 48, scope: !13404)
!13418 = !DILocation(line: 90, column: 52, scope: !13404)
!13419 = !DILocation(line: 90, column: 60, scope: !13404)
!13420 = !DILocation(line: 90, column: 64, scope: !13404)
!13421 = !DILocation(line: 90, column: 18, scope: !13404)
!13422 = !DILocation(line: 90, column: 16, scope: !13404)
!13423 = !DILocation(line: 91, column: 13, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13404, file: !564, line: 91, column: 13)
!13425 = !DILocation(line: 91, column: 18, scope: !13424)
!13426 = !DILocation(line: 91, column: 26, scope: !13424)
!13427 = !DILocation(line: 91, column: 29, scope: !13424)
!13428 = !DILocation(line: 91, column: 36, scope: !13424)
!13429 = !DILocation(line: 91, column: 13, scope: !13404)
!13430 = !DILocation(line: 92, column: 25, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13424, file: !564, line: 91, column: 45)
!13432 = !DILocation(line: 92, column: 13, scope: !13431)
!13433 = !DILocation(line: 94, column: 13, scope: !13431)
!13434 = !DILocation(line: 96, column: 20, scope: !13404)
!13435 = !DILocation(line: 96, column: 9, scope: !13404)
!13436 = !DILocation(line: 96, column: 13, scope: !13404)
!13437 = !DILocation(line: 96, column: 18, scope: !13404)
!13438 = !DILocation(line: 97, column: 22, scope: !13404)
!13439 = !DILocation(line: 97, column: 9, scope: !13404)
!13440 = !DILocation(line: 97, column: 13, scope: !13404)
!13441 = !DILocation(line: 97, column: 20, scope: !13404)
!13442 = !DILocation(line: 98, column: 5, scope: !13404)
!13443 = !DILocation(line: 101, column: 43, scope: !13377)
!13444 = !DILocation(line: 101, column: 48, scope: !13377)
!13445 = !DILocation(line: 101, column: 53, scope: !13377)
!13446 = !DILocation(line: 101, column: 29, scope: !13377)
!13447 = !DILocation(line: 101, column: 5, scope: !13377)
!13448 = !DILocation(line: 101, column: 9, scope: !13377)
!13449 = !DILocation(line: 101, column: 14, scope: !13377)
!13450 = !DILocation(line: 101, column: 18, scope: !13377)
!13451 = !DILocation(line: 101, column: 27, scope: !13377)
!13452 = !DILocation(line: 102, column: 45, scope: !13377)
!13453 = !DILocation(line: 102, column: 50, scope: !13377)
!13454 = !DILocation(line: 102, column: 57, scope: !13377)
!13455 = !DILocation(line: 102, column: 31, scope: !13377)
!13456 = !DILocation(line: 102, column: 5, scope: !13377)
!13457 = !DILocation(line: 102, column: 9, scope: !13377)
!13458 = !DILocation(line: 102, column: 16, scope: !13377)
!13459 = !DILocation(line: 102, column: 20, scope: !13377)
!13460 = !DILocation(line: 102, column: 29, scope: !13377)
!13461 = !DILocation(line: 103, column: 5, scope: !13377)
!13462 = !DILocation(line: 103, column: 9, scope: !13377)
!13463 = !DILocation(line: 103, column: 16, scope: !13377)
!13464 = !DILocation(line: 105, column: 5, scope: !13377)
!13465 = !DILocation(line: 106, column: 1, scope: !13377)
!13466 = distinct !DISubprogram(name: "jbig2_strndup", scope: !564, file: !564, line: 68, type: !13467, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !563, retainedNodes: !70)
!13467 = !DISubroutineType(types: !13468)
!13468 = !{!8, !13166, !76, !5919}
!13469 = !DILocalVariable(name: "ctx", arg: 1, scope: !13466, file: !564, line: 68, type: !13166)
!13470 = !DILocation(line: 68, column: 38, scope: !13466)
!13471 = !DILocalVariable(name: "c", arg: 2, scope: !13466, file: !564, line: 68, type: !76)
!13472 = !DILocation(line: 68, column: 55, scope: !13466)
!13473 = !DILocalVariable(name: "len", arg: 3, scope: !13466, file: !564, line: 68, type: !5919)
!13474 = !DILocation(line: 68, column: 68, scope: !13466)
!13475 = !DILocalVariable(name: "s", scope: !13466, file: !564, line: 70, type: !8)
!13476 = !DILocation(line: 70, column: 11, scope: !13466)
!13477 = !DILocation(line: 70, column: 27, scope: !13466)
!13478 = !DILocation(line: 70, column: 32, scope: !13466)
!13479 = !DILocation(line: 70, column: 43, scope: !13466)
!13480 = !DILocation(line: 70, column: 46, scope: !13466)
!13481 = !DILocation(line: 70, column: 15, scope: !13466)
!13482 = !DILocation(line: 71, column: 9, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13466, file: !564, line: 71, column: 9)
!13484 = !DILocation(line: 71, column: 11, scope: !13483)
!13485 = !DILocation(line: 71, column: 9, scope: !13466)
!13486 = !DILocation(line: 72, column: 21, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13483, file: !564, line: 71, column: 20)
!13488 = !DILocation(line: 72, column: 9, scope: !13487)
!13489 = !DILocation(line: 74, column: 5, scope: !13487)
!13490 = !DILocation(line: 75, column: 16, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13483, file: !564, line: 74, column: 12)
!13492 = !DILocation(line: 75, column: 19, scope: !13491)
!13493 = !DILocation(line: 75, column: 22, scope: !13491)
!13494 = !DILocation(line: 75, column: 9, scope: !13491)
!13495 = !DILocation(line: 77, column: 12, scope: !13466)
!13496 = !DILocation(line: 77, column: 5, scope: !13466)
!13497 = distinct !DISubprogram(name: "jbig2_parse_comment_ascii", scope: !564, file: !564, line: 110, type: !13498, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !563, retainedNodes: !70)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{!6, !13166, !13203, !431}
!13500 = !DILocalVariable(name: "ctx", arg: 1, scope: !13497, file: !564, line: 110, type: !13166)
!13501 = !DILocation(line: 110, column: 41, scope: !13497)
!13502 = !DILocalVariable(name: "segment", arg: 2, scope: !13497, file: !564, line: 110, type: !13203)
!13503 = !DILocation(line: 110, column: 60, scope: !13497)
!13504 = !DILocalVariable(name: "segment_data", arg: 3, scope: !13497, file: !564, line: 111, type: !431)
!13505 = !DILocation(line: 111, column: 47, scope: !13497)
!13506 = !DILocalVariable(name: "s", scope: !13497, file: !564, line: 113, type: !8)
!13507 = !DILocation(line: 113, column: 11, scope: !13497)
!13508 = !DILocation(line: 113, column: 24, scope: !13497)
!13509 = !DILocation(line: 113, column: 37, scope: !13497)
!13510 = !DILocalVariable(name: "end", scope: !13497, file: !564, line: 114, type: !8)
!13511 = !DILocation(line: 114, column: 11, scope: !13497)
!13512 = !DILocation(line: 114, column: 26, scope: !13497)
!13513 = !DILocation(line: 114, column: 41, scope: !13497)
!13514 = !DILocation(line: 114, column: 50, scope: !13497)
!13515 = !DILocation(line: 114, column: 39, scope: !13497)
!13516 = !DILocalVariable(name: "comment", scope: !13497, file: !564, line: 115, type: !13156)
!13517 = !DILocation(line: 115, column: 20, scope: !13497)
!13518 = !DILocalVariable(name: "key", scope: !13497, file: !564, line: 116, type: !8)
!13519 = !DILocation(line: 116, column: 11, scope: !13497)
!13520 = !DILocalVariable(name: "value", scope: !13497, file: !564, line: 116, type: !8)
!13521 = !DILocation(line: 116, column: 17, scope: !13497)
!13522 = !DILocalVariable(name: "key_length", scope: !13497, file: !564, line: 117, type: !6)
!13523 = !DILocation(line: 117, column: 9, scope: !13497)
!13524 = !DILocalVariable(name: "value_length", scope: !13497, file: !564, line: 117, type: !6)
!13525 = !DILocation(line: 117, column: 21, scope: !13497)
!13526 = !DILocation(line: 119, column: 17, scope: !13497)
!13527 = !DILocation(line: 119, column: 43, scope: !13497)
!13528 = !DILocation(line: 119, column: 52, scope: !13497)
!13529 = !DILocation(line: 119, column: 5, scope: !13497)
!13530 = !DILocation(line: 122, column: 34, scope: !13497)
!13531 = !DILocation(line: 122, column: 15, scope: !13497)
!13532 = !DILocation(line: 122, column: 13, scope: !13497)
!13533 = !DILocation(line: 123, column: 9, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13497, file: !564, line: 123, column: 9)
!13535 = !DILocation(line: 123, column: 17, scope: !13534)
!13536 = !DILocation(line: 123, column: 9, scope: !13497)
!13537 = !DILocation(line: 124, column: 21, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13534, file: !564, line: 123, column: 26)
!13539 = !DILocation(line: 124, column: 50, scope: !13538)
!13540 = !DILocation(line: 124, column: 59, scope: !13538)
!13541 = !DILocation(line: 124, column: 9, scope: !13538)
!13542 = !DILocation(line: 126, column: 9, scope: !13538)
!13543 = !DILocation(line: 129, column: 5, scope: !13497)
!13544 = !DILocation(line: 129, column: 12, scope: !13497)
!13545 = !DILocation(line: 129, column: 11, scope: !13497)
!13546 = !DILocation(line: 129, column: 14, scope: !13497)
!13547 = !DILocation(line: 129, column: 17, scope: !13497)
!13548 = !DILocation(line: 129, column: 21, scope: !13497)
!13549 = !DILocation(line: 129, column: 19, scope: !13497)
!13550 = !DILocation(line: 0, scope: !13497)
!13551 = !DILocation(line: 130, column: 29, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13497, file: !564, line: 129, column: 26)
!13553 = !DILocation(line: 130, column: 22, scope: !13552)
!13554 = !DILocation(line: 130, column: 32, scope: !13552)
!13555 = !DILocation(line: 130, column: 20, scope: !13552)
!13556 = !DILocation(line: 131, column: 15, scope: !13552)
!13557 = !DILocation(line: 131, column: 13, scope: !13552)
!13558 = !DILocation(line: 131, column: 23, scope: !13552)
!13559 = !DILocation(line: 131, column: 20, scope: !13552)
!13560 = !DILocation(line: 132, column: 13, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13552, file: !564, line: 132, column: 13)
!13562 = !DILocation(line: 132, column: 18, scope: !13561)
!13563 = !DILocation(line: 132, column: 15, scope: !13561)
!13564 = !DILocation(line: 132, column: 13, scope: !13552)
!13565 = !DILocation(line: 132, column: 23, scope: !13561)
!13566 = !DILocation(line: 133, column: 31, scope: !13552)
!13567 = !DILocation(line: 133, column: 24, scope: !13552)
!13568 = !DILocation(line: 133, column: 34, scope: !13552)
!13569 = !DILocation(line: 133, column: 22, scope: !13552)
!13570 = !DILocation(line: 134, column: 17, scope: !13552)
!13571 = !DILocation(line: 134, column: 15, scope: !13552)
!13572 = !DILocation(line: 134, column: 25, scope: !13552)
!13573 = !DILocation(line: 134, column: 22, scope: !13552)
!13574 = !DILocation(line: 135, column: 13, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13552, file: !564, line: 135, column: 13)
!13576 = !DILocation(line: 135, column: 18, scope: !13575)
!13577 = !DILocation(line: 135, column: 15, scope: !13575)
!13578 = !DILocation(line: 135, column: 13, scope: !13552)
!13579 = !DILocation(line: 135, column: 23, scope: !13575)
!13580 = !DILocation(line: 136, column: 28, scope: !13552)
!13581 = !DILocation(line: 136, column: 33, scope: !13552)
!13582 = !DILocation(line: 136, column: 42, scope: !13552)
!13583 = !DILocation(line: 136, column: 47, scope: !13552)
!13584 = !DILocation(line: 136, column: 59, scope: !13552)
!13585 = !DILocation(line: 136, column: 66, scope: !13552)
!13586 = !DILocation(line: 136, column: 9, scope: !13552)
!13587 = !DILocation(line: 137, column: 21, scope: !13552)
!13588 = !DILocation(line: 137, column: 47, scope: !13552)
!13589 = !DILocation(line: 137, column: 56, scope: !13552)
!13590 = !DILocation(line: 138, column: 27, scope: !13552)
!13591 = !DILocation(line: 138, column: 32, scope: !13552)
!13592 = !DILocation(line: 137, column: 9, scope: !13552)
!13593 = distinct !{!13593, !13543, !13594}
!13594 = !DILocation(line: 139, column: 5, scope: !13497)
!13595 = !DILocation(line: 142, column: 23, scope: !13497)
!13596 = !DILocation(line: 142, column: 5, scope: !13497)
!13597 = !DILocation(line: 142, column: 14, scope: !13497)
!13598 = !DILocation(line: 142, column: 21, scope: !13497)
!13599 = !DILocation(line: 144, column: 5, scope: !13497)
!13600 = !DILocation(line: 147, column: 25, scope: !13497)
!13601 = !DILocation(line: 147, column: 30, scope: !13497)
!13602 = !DILocation(line: 147, column: 5, scope: !13497)
!13603 = !DILocation(line: 148, column: 24, scope: !13497)
!13604 = !DILocation(line: 148, column: 53, scope: !13497)
!13605 = !DILocation(line: 148, column: 62, scope: !13497)
!13606 = !DILocation(line: 148, column: 12, scope: !13497)
!13607 = !DILocation(line: 148, column: 5, scope: !13497)
!13608 = !DILocation(line: 150, column: 1, scope: !13497)
!13609 = distinct !DISubprogram(name: "jbig2_parse_comment_unicode", scope: !564, file: !564, line: 153, type: !13498, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !563, retainedNodes: !70)
!13610 = !DILocalVariable(name: "ctx", arg: 1, scope: !13609, file: !564, line: 153, type: !13166)
!13611 = !DILocation(line: 153, column: 43, scope: !13609)
!13612 = !DILocalVariable(name: "segment", arg: 2, scope: !13609, file: !564, line: 153, type: !13203)
!13613 = !DILocation(line: 153, column: 62, scope: !13609)
!13614 = !DILocalVariable(name: "segment_data", arg: 3, scope: !13609, file: !564, line: 154, type: !431)
!13615 = !DILocation(line: 154, column: 47, scope: !13609)
!13616 = !DILocation(line: 156, column: 24, scope: !13609)
!13617 = !DILocation(line: 156, column: 53, scope: !13609)
!13618 = !DILocation(line: 156, column: 62, scope: !13609)
!13619 = !DILocation(line: 156, column: 12, scope: !13609)
!13620 = !DILocation(line: 156, column: 5, scope: !13609)
!13621 = distinct !DISubprogram(name: "jbig2_arith_new", scope: !253, file: !253, line: 182, type: !13622, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !70)
!13622 = !DISubroutineType(types: !13623)
!13623 = !{!255, !13624, !266}
!13624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13625, size: 64)
!13625 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !13626)
!13626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !13627)
!13627 = !{!13628, !13645, !13646, !13649, !13650, !13651, !13652, !13653, !13654, !13655, !13656, !13657, !13658, !13659, !13672, !13673, !13674, !13675, !13676}
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !13626, file: !90, line: 45, baseType: !13629, size: 64)
!13629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13630, size: 64)
!13630 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !13631)
!13631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !13632)
!13632 = !{!13633, !13637, !13641}
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !13631, file: !58, line: 86, baseType: !13634, size: 64)
!13634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13635, size: 64)
!13635 = !DISubroutineType(types: !13636)
!13636 = !{!68, !13629, !119}
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !13631, file: !58, line: 87, baseType: !13638, size: 64, offset: 64)
!13638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13639, size: 64)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !13629, !68}
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !13631, file: !58, line: 88, baseType: !13642, size: 64, offset: 128)
!13642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13643, size: 64)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{!68, !13629, !68, !119}
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !13626, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !13626, file: !90, line: 47, baseType: !13647, size: 64, offset: 128)
!13647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13648, size: 64)
!13648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13625)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !13626, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !13626, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !13626, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !13626, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !13626, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !13626, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13626, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !13626, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !13626, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !13626, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !13626, file: !90, line: 62, baseType: !13660, size: 64, offset: 640)
!13660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13661, size: 64)
!13661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13662, size: 64)
!13662 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !13663)
!13663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !13664)
!13664 = !{!13665, !13666, !13667, !13668, !13669, !13670, !13671}
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !13663, file: !58, line: 117, baseType: !32, size: 32)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13663, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !13663, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !13663, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !13663, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !13663, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !13663, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !13626, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !13626, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !13626, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !13626, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !13626, file: !90, line: 70, baseType: !13677, size: 64, offset: 832)
!13677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13678, size: 64)
!13678 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !13679)
!13679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !13680)
!13680 = !{!13681, !13682, !13683, !13684, !13685, !13686, !13687, !13688, !13689, !13690, !13691}
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13679, file: !90, line: 111, baseType: !178, size: 32)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !13679, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !13679, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !13679, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !13679, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !13679, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !13679, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !13679, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !13679, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13679, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !13679, file: !90, line: 120, baseType: !13692, size: 64, offset: 320)
!13692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13693, size: 64)
!13693 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !13694)
!13694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !13695)
!13695 = !{!13696, !13697, !13698, !13699, !13700}
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !13694, file: !58, line: 57, baseType: !6, size: 32)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !13694, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !13694, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13694, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !13694, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!13701 = !DILocalVariable(name: "ctx", arg: 1, scope: !13621, file: !253, line: 182, type: !13624)
!13702 = !DILocation(line: 182, column: 28, scope: !13621)
!13703 = !DILocalVariable(name: "ws", arg: 2, scope: !13621, file: !253, line: 182, type: !266)
!13704 = !DILocation(line: 182, column: 50, scope: !13621)
!13705 = !DILocalVariable(name: "result", scope: !13621, file: !253, line: 184, type: !255)
!13706 = !DILocation(line: 184, column: 20, scope: !13621)
!13707 = !DILocation(line: 186, column: 43, scope: !13621)
!13708 = !DILocation(line: 186, column: 48, scope: !13621)
!13709 = !DILocation(line: 186, column: 31, scope: !13621)
!13710 = !DILocation(line: 186, column: 12, scope: !13621)
!13711 = !DILocation(line: 186, column: 10, scope: !13621)
!13712 = !DILocation(line: 189, column: 16, scope: !13621)
!13713 = !DILocation(line: 189, column: 3, scope: !13621)
!13714 = !DILocation(line: 189, column: 11, scope: !13621)
!13715 = !DILocation(line: 189, column: 14, scope: !13621)
!13716 = !DILocation(line: 191, column: 23, scope: !13621)
!13717 = !DILocation(line: 191, column: 27, scope: !13621)
!13718 = !DILocation(line: 191, column: 42, scope: !13621)
!13719 = !DILocation(line: 191, column: 3, scope: !13621)
!13720 = !DILocation(line: 191, column: 11, scope: !13621)
!13721 = !DILocation(line: 191, column: 21, scope: !13621)
!13722 = !DILocation(line: 192, column: 3, scope: !13621)
!13723 = !DILocation(line: 192, column: 11, scope: !13621)
!13724 = !DILocation(line: 192, column: 27, scope: !13621)
!13725 = !DILocation(line: 193, column: 3, scope: !13621)
!13726 = !DILocation(line: 193, column: 11, scope: !13621)
!13727 = !DILocation(line: 193, column: 18, scope: !13621)
!13728 = !DILocation(line: 199, column: 16, scope: !13621)
!13729 = !DILocation(line: 199, column: 24, scope: !13621)
!13730 = !DILocation(line: 199, column: 34, scope: !13621)
!13731 = !DILocation(line: 199, column: 40, scope: !13621)
!13732 = !DILocation(line: 199, column: 3, scope: !13621)
!13733 = !DILocation(line: 199, column: 11, scope: !13621)
!13734 = !DILocation(line: 199, column: 13, scope: !13621)
!13735 = !DILocation(line: 202, column: 23, scope: !13621)
!13736 = !DILocation(line: 202, column: 3, scope: !13621)
!13737 = !DILocation(line: 203, column: 3, scope: !13621)
!13738 = !DILocation(line: 203, column: 11, scope: !13621)
!13739 = !DILocation(line: 203, column: 13, scope: !13621)
!13740 = !DILocation(line: 204, column: 3, scope: !13621)
!13741 = !DILocation(line: 204, column: 11, scope: !13621)
!13742 = !DILocation(line: 204, column: 14, scope: !13621)
!13743 = !DILocation(line: 205, column: 3, scope: !13621)
!13744 = !DILocation(line: 205, column: 11, scope: !13621)
!13745 = !DILocation(line: 205, column: 13, scope: !13621)
!13746 = !DILocation(line: 207, column: 10, scope: !13621)
!13747 = !DILocation(line: 207, column: 3, scope: !13621)
!13748 = distinct !DISubprogram(name: "jbig2_arith_bytein", scope: !253, file: !253, line: 68, type: !13749, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !252, retainedNodes: !70)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{null, !255}
!13751 = !DILocalVariable(name: "as", arg: 1, scope: !13748, file: !253, line: 68, type: !255)
!13752 = !DILocation(line: 68, column: 38, scope: !13748)
!13753 = !DILocalVariable(name: "B", scope: !13748, file: !253, line: 70, type: !145)
!13754 = !DILocation(line: 70, column: 8, scope: !13748)
!13755 = !DILocation(line: 75, column: 15, scope: !13748)
!13756 = !DILocation(line: 75, column: 19, scope: !13748)
!13757 = !DILocation(line: 75, column: 29, scope: !13748)
!13758 = !DILocation(line: 75, column: 36, scope: !13748)
!13759 = !DILocation(line: 75, column: 7, scope: !13748)
!13760 = !DILocation(line: 75, column: 5, scope: !13748)
!13761 = !DILocation(line: 76, column: 7, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13748, file: !253, line: 76, column: 7)
!13763 = !DILocation(line: 76, column: 9, scope: !13762)
!13764 = !DILocation(line: 76, column: 7, scope: !13748)
!13765 = !DILocalVariable(name: "B1", scope: !13766, file: !253, line: 78, type: !145)
!13766 = distinct !DILexicalBlock(scope: !13762, file: !253, line: 77, column: 5)
!13767 = !DILocation(line: 78, column: 12, scope: !13766)
!13768 = !DILocation(line: 79, column: 11, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13766, file: !253, line: 79, column: 11)
!13770 = !DILocation(line: 79, column: 15, scope: !13769)
!13771 = !DILocation(line: 79, column: 31, scope: !13769)
!13772 = !DILocation(line: 79, column: 11, scope: !13766)
!13773 = !DILocalVariable(name: "ws", scope: !13774, file: !253, line: 81, type: !266)
!13774 = distinct !DILexicalBlock(scope: !13769, file: !253, line: 80, column: 2)
!13775 = !DILocation(line: 81, column: 21, scope: !13774)
!13776 = !DILocation(line: 81, column: 26, scope: !13774)
!13777 = !DILocation(line: 81, column: 30, scope: !13774)
!13778 = !DILocation(line: 82, column: 20, scope: !13774)
!13779 = !DILocation(line: 82, column: 24, scope: !13774)
!13780 = !DILocation(line: 82, column: 39, scope: !13774)
!13781 = !DILocation(line: 82, column: 43, scope: !13774)
!13782 = !DILocation(line: 82, column: 47, scope: !13774)
!13783 = !DILocation(line: 82, column: 4, scope: !13774)
!13784 = !DILocation(line: 82, column: 8, scope: !13774)
!13785 = !DILocation(line: 82, column: 18, scope: !13774)
!13786 = !DILocation(line: 83, column: 4, scope: !13774)
!13787 = !DILocation(line: 83, column: 8, scope: !13774)
!13788 = !DILocation(line: 83, column: 15, scope: !13774)
!13789 = !DILocation(line: 84, column: 17, scope: !13774)
!13790 = !DILocation(line: 84, column: 21, scope: !13774)
!13791 = !DILocation(line: 84, column: 31, scope: !13774)
!13792 = !DILocation(line: 84, column: 38, scope: !13774)
!13793 = !DILocation(line: 84, column: 9, scope: !13774)
!13794 = !DILocation(line: 84, column: 7, scope: !13774)
!13795 = !DILocation(line: 85, column: 8, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13774, file: !253, line: 85, column: 8)
!13797 = !DILocation(line: 85, column: 11, scope: !13796)
!13798 = !DILocation(line: 85, column: 8, scope: !13774)
!13799 = !DILocation(line: 91, column: 8, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13796, file: !253, line: 86, column: 6)
!13801 = !DILocation(line: 91, column: 12, scope: !13800)
!13802 = !DILocation(line: 91, column: 14, scope: !13800)
!13803 = !DILocation(line: 93, column: 8, scope: !13800)
!13804 = !DILocation(line: 93, column: 12, scope: !13800)
!13805 = !DILocation(line: 93, column: 15, scope: !13800)
!13806 = !DILocation(line: 94, column: 34, scope: !13800)
!13807 = !DILocation(line: 94, column: 32, scope: !13800)
!13808 = !DILocation(line: 94, column: 38, scope: !13800)
!13809 = !DILocation(line: 94, column: 8, scope: !13800)
!13810 = !DILocation(line: 94, column: 12, scope: !13800)
!13811 = !DILocation(line: 94, column: 22, scope: !13800)
!13812 = !DILocation(line: 95, column: 8, scope: !13800)
!13813 = !DILocation(line: 95, column: 12, scope: !13800)
!13814 = !DILocation(line: 95, column: 28, scope: !13800)
!13815 = !DILocation(line: 96, column: 6, scope: !13800)
!13816 = !DILocation(line: 105, column: 17, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13796, file: !253, line: 98, column: 6)
!13818 = !DILocation(line: 105, column: 20, scope: !13817)
!13819 = !DILocation(line: 105, column: 8, scope: !13817)
!13820 = !DILocation(line: 105, column: 12, scope: !13817)
!13821 = !DILocation(line: 105, column: 14, scope: !13817)
!13822 = !DILocation(line: 107, column: 8, scope: !13817)
!13823 = !DILocation(line: 107, column: 12, scope: !13817)
!13824 = !DILocation(line: 107, column: 15, scope: !13817)
!13825 = !DILocation(line: 108, column: 8, scope: !13817)
!13826 = !DILocation(line: 108, column: 12, scope: !13817)
!13827 = !DILocation(line: 108, column: 28, scope: !13817)
!13828 = !DILocation(line: 110, column: 2, scope: !13774)
!13829 = !DILocation(line: 113, column: 17, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13769, file: !253, line: 112, column: 2)
!13831 = !DILocation(line: 113, column: 21, scope: !13830)
!13832 = !DILocation(line: 113, column: 31, scope: !13830)
!13833 = !DILocation(line: 113, column: 38, scope: !13830)
!13834 = !DILocation(line: 113, column: 9, scope: !13830)
!13835 = !DILocation(line: 113, column: 7, scope: !13830)
!13836 = !DILocation(line: 114, column: 8, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13830, file: !253, line: 114, column: 8)
!13838 = !DILocation(line: 114, column: 11, scope: !13837)
!13839 = !DILocation(line: 114, column: 8, scope: !13830)
!13840 = !DILocation(line: 120, column: 8, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !253, line: 115, column: 6)
!13842 = !DILocation(line: 120, column: 12, scope: !13841)
!13843 = !DILocation(line: 120, column: 14, scope: !13841)
!13844 = !DILocation(line: 122, column: 8, scope: !13841)
!13845 = !DILocation(line: 122, column: 12, scope: !13841)
!13846 = !DILocation(line: 122, column: 15, scope: !13841)
!13847 = !DILocation(line: 123, column: 6, scope: !13841)
!13848 = !DILocation(line: 126, column: 8, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13837, file: !253, line: 125, column: 6)
!13850 = !DILocation(line: 126, column: 12, scope: !13849)
!13851 = !DILocation(line: 126, column: 27, scope: !13849)
!13852 = !DILocation(line: 127, column: 8, scope: !13849)
!13853 = !DILocation(line: 127, column: 12, scope: !13849)
!13854 = !DILocation(line: 127, column: 22, scope: !13849)
!13855 = !DILocation(line: 135, column: 18, scope: !13849)
!13856 = !DILocation(line: 135, column: 21, scope: !13849)
!13857 = !DILocation(line: 135, column: 8, scope: !13849)
!13858 = !DILocation(line: 135, column: 12, scope: !13849)
!13859 = !DILocation(line: 135, column: 14, scope: !13849)
!13860 = !DILocation(line: 137, column: 8, scope: !13849)
!13861 = !DILocation(line: 137, column: 12, scope: !13849)
!13862 = !DILocation(line: 137, column: 15, scope: !13849)
!13863 = !DILocation(line: 140, column: 5, scope: !13766)
!13864 = !DILocation(line: 146, column: 7, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13762, file: !253, line: 142, column: 5)
!13866 = !DILocation(line: 146, column: 11, scope: !13865)
!13867 = !DILocation(line: 146, column: 14, scope: !13865)
!13868 = !DILocation(line: 147, column: 7, scope: !13865)
!13869 = !DILocation(line: 147, column: 11, scope: !13865)
!13870 = !DILocation(line: 147, column: 21, scope: !13865)
!13871 = !DILocation(line: 148, column: 7, scope: !13865)
!13872 = !DILocation(line: 148, column: 11, scope: !13865)
!13873 = !DILocation(line: 148, column: 26, scope: !13865)
!13874 = !DILocation(line: 149, column: 11, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13865, file: !253, line: 149, column: 11)
!13876 = !DILocation(line: 149, column: 15, scope: !13875)
!13877 = !DILocation(line: 149, column: 31, scope: !13875)
!13878 = !DILocation(line: 149, column: 11, scope: !13865)
!13879 = !DILocalVariable(name: "ws", scope: !13880, file: !253, line: 151, type: !266)
!13880 = distinct !DILexicalBlock(scope: !13875, file: !253, line: 150, column: 2)
!13881 = !DILocation(line: 151, column: 21, scope: !13880)
!13882 = !DILocation(line: 151, column: 26, scope: !13880)
!13883 = !DILocation(line: 151, column: 30, scope: !13880)
!13884 = !DILocation(line: 153, column: 20, scope: !13880)
!13885 = !DILocation(line: 153, column: 24, scope: !13880)
!13886 = !DILocation(line: 153, column: 39, scope: !13880)
!13887 = !DILocation(line: 153, column: 43, scope: !13880)
!13888 = !DILocation(line: 153, column: 47, scope: !13880)
!13889 = !DILocation(line: 153, column: 4, scope: !13880)
!13890 = !DILocation(line: 153, column: 8, scope: !13880)
!13891 = !DILocation(line: 153, column: 18, scope: !13880)
!13892 = !DILocation(line: 154, column: 4, scope: !13880)
!13893 = !DILocation(line: 154, column: 8, scope: !13880)
!13894 = !DILocation(line: 154, column: 15, scope: !13880)
!13895 = !DILocation(line: 155, column: 4, scope: !13880)
!13896 = !DILocation(line: 155, column: 8, scope: !13880)
!13897 = !DILocation(line: 155, column: 24, scope: !13880)
!13898 = !DILocation(line: 156, column: 2, scope: !13880)
!13899 = !DILocation(line: 157, column: 19, scope: !13865)
!13900 = !DILocation(line: 157, column: 23, scope: !13865)
!13901 = !DILocation(line: 157, column: 33, scope: !13865)
!13902 = !DILocation(line: 157, column: 40, scope: !13865)
!13903 = !DILocation(line: 157, column: 11, scope: !13865)
!13904 = !DILocation(line: 157, column: 9, scope: !13865)
!13905 = !DILocation(line: 161, column: 17, scope: !13865)
!13906 = !DILocation(line: 161, column: 19, scope: !13865)
!13907 = !DILocation(line: 161, column: 7, scope: !13865)
!13908 = !DILocation(line: 161, column: 11, scope: !13865)
!13909 = !DILocation(line: 161, column: 13, scope: !13865)
!13910 = !DILocation(line: 164, column: 1, scope: !13748)
!13911 = distinct !DISubprogram(name: "jbig2_arith_decode", scope: !253, file: !253, line: 283, type: !13912, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !70)
!13912 = !DISubroutineType(types: !13913)
!13913 = !{!188, !255, !595}
!13914 = !DILocalVariable(name: "as", arg: 1, scope: !13911, file: !253, line: 283, type: !255)
!13915 = !DILocation(line: 283, column: 38, scope: !13911)
!13916 = !DILocalVariable(name: "pcx", arg: 2, scope: !13911, file: !253, line: 283, type: !595)
!13917 = !DILocation(line: 283, column: 56, scope: !13911)
!13918 = !DILocalVariable(name: "cx", scope: !13911, file: !253, line: 285, type: !582)
!13919 = !DILocation(line: 285, column: 16, scope: !13911)
!13920 = !DILocation(line: 285, column: 22, scope: !13911)
!13921 = !DILocation(line: 285, column: 21, scope: !13911)
!13922 = !DILocalVariable(name: "pqe", scope: !13911, file: !253, line: 286, type: !13923)
!13923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!13924 = !DILocation(line: 286, column: 23, scope: !13911)
!13925 = !DILocation(line: 286, column: 45, scope: !13911)
!13926 = !DILocation(line: 286, column: 48, scope: !13911)
!13927 = !DILocation(line: 286, column: 30, scope: !13911)
!13928 = !DILocalVariable(name: "D", scope: !13911, file: !253, line: 287, type: !188)
!13929 = !DILocation(line: 287, column: 8, scope: !13911)
!13930 = !DILocation(line: 290, column: 12, scope: !13911)
!13931 = !DILocation(line: 290, column: 17, scope: !13911)
!13932 = !DILocation(line: 290, column: 3, scope: !13911)
!13933 = !DILocation(line: 290, column: 7, scope: !13911)
!13934 = !DILocation(line: 290, column: 9, scope: !13911)
!13935 = !DILocation(line: 296, column: 10, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13911, file: !253, line: 296, column: 7)
!13937 = !DILocation(line: 296, column: 14, scope: !13936)
!13938 = !DILocation(line: 296, column: 16, scope: !13936)
!13939 = !DILocation(line: 296, column: 25, scope: !13936)
!13940 = !DILocation(line: 296, column: 30, scope: !13936)
!13941 = !DILocation(line: 296, column: 23, scope: !13936)
!13942 = !DILocation(line: 296, column: 7, scope: !13911)
!13943 = !DILocation(line: 301, column: 16, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13936, file: !253, line: 299, column: 5)
!13945 = !DILocation(line: 301, column: 21, scope: !13944)
!13946 = !DILocation(line: 301, column: 24, scope: !13944)
!13947 = !DILocation(line: 301, column: 7, scope: !13944)
!13948 = !DILocation(line: 301, column: 11, scope: !13944)
!13949 = !DILocation(line: 301, column: 13, scope: !13944)
!13950 = !DILocation(line: 303, column: 12, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13944, file: !253, line: 303, column: 11)
!13952 = !DILocation(line: 303, column: 16, scope: !13951)
!13953 = !DILocation(line: 303, column: 18, scope: !13951)
!13954 = !DILocation(line: 303, column: 28, scope: !13951)
!13955 = !DILocation(line: 303, column: 11, scope: !13944)
!13956 = !DILocation(line: 306, column: 8, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13958, file: !253, line: 306, column: 8)
!13958 = distinct !DILexicalBlock(scope: !13951, file: !253, line: 304, column: 2)
!13959 = !DILocation(line: 306, column: 12, scope: !13957)
!13960 = !DILocation(line: 306, column: 16, scope: !13957)
!13961 = !DILocation(line: 306, column: 21, scope: !13957)
!13962 = !DILocation(line: 306, column: 14, scope: !13957)
!13963 = !DILocation(line: 306, column: 8, scope: !13958)
!13964 = !DILocation(line: 308, column: 17, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13957, file: !253, line: 307, column: 6)
!13966 = !DILocation(line: 308, column: 20, scope: !13965)
!13967 = !DILocation(line: 308, column: 14, scope: !13965)
!13968 = !DILocation(line: 308, column: 10, scope: !13965)
!13969 = !DILocation(line: 309, column: 16, scope: !13965)
!13970 = !DILocation(line: 309, column: 21, scope: !13965)
!13971 = !DILocation(line: 309, column: 9, scope: !13965)
!13972 = !DILocation(line: 309, column: 13, scope: !13965)
!13973 = !DILocation(line: 310, column: 6, scope: !13965)
!13974 = !DILocation(line: 313, column: 12, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13957, file: !253, line: 312, column: 6)
!13976 = !DILocation(line: 313, column: 15, scope: !13975)
!13977 = !DILocation(line: 313, column: 10, scope: !13975)
!13978 = !DILocation(line: 314, column: 16, scope: !13975)
!13979 = !DILocation(line: 314, column: 21, scope: !13975)
!13980 = !DILocation(line: 314, column: 9, scope: !13975)
!13981 = !DILocation(line: 314, column: 13, scope: !13975)
!13982 = !DILocation(line: 316, column: 25, scope: !13958)
!13983 = !DILocation(line: 316, column: 4, scope: !13958)
!13984 = !DILocation(line: 317, column: 11, scope: !13958)
!13985 = !DILocation(line: 317, column: 4, scope: !13958)
!13986 = !DILocation(line: 320, column: 9, scope: !13951)
!13987 = !DILocation(line: 320, column: 12, scope: !13951)
!13988 = !DILocation(line: 320, column: 2, scope: !13951)
!13989 = !DILocation(line: 328, column: 11, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !253, line: 328, column: 11)
!13991 = distinct !DILexicalBlock(scope: !13936, file: !253, line: 323, column: 5)
!13992 = !DILocation(line: 328, column: 15, scope: !13990)
!13993 = !DILocation(line: 328, column: 19, scope: !13990)
!13994 = !DILocation(line: 328, column: 24, scope: !13990)
!13995 = !DILocation(line: 328, column: 17, scope: !13990)
!13996 = !DILocation(line: 328, column: 11, scope: !13991)
!13997 = !DILocation(line: 330, column: 12, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13990, file: !253, line: 329, column: 2)
!13999 = !DILocation(line: 330, column: 17, scope: !13998)
!14000 = !DILocation(line: 330, column: 4, scope: !13998)
!14001 = !DILocation(line: 330, column: 8, scope: !13998)
!14002 = !DILocation(line: 330, column: 10, scope: !13998)
!14003 = !DILocation(line: 331, column: 8, scope: !13998)
!14004 = !DILocation(line: 331, column: 11, scope: !13998)
!14005 = !DILocation(line: 331, column: 6, scope: !13998)
!14006 = !DILocation(line: 332, column: 12, scope: !13998)
!14007 = !DILocation(line: 332, column: 17, scope: !13998)
!14008 = !DILocation(line: 332, column: 5, scope: !13998)
!14009 = !DILocation(line: 332, column: 9, scope: !13998)
!14010 = !DILocation(line: 333, column: 2, scope: !13998)
!14011 = !DILocation(line: 336, column: 12, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !13990, file: !253, line: 335, column: 2)
!14013 = !DILocation(line: 336, column: 17, scope: !14012)
!14014 = !DILocation(line: 336, column: 4, scope: !14012)
!14015 = !DILocation(line: 336, column: 8, scope: !14012)
!14016 = !DILocation(line: 336, column: 10, scope: !14012)
!14017 = !DILocation(line: 337, column: 13, scope: !14012)
!14018 = !DILocation(line: 337, column: 16, scope: !14012)
!14019 = !DILocation(line: 337, column: 10, scope: !14012)
!14020 = !DILocation(line: 337, column: 6, scope: !14012)
!14021 = !DILocation(line: 338, column: 12, scope: !14012)
!14022 = !DILocation(line: 338, column: 17, scope: !14012)
!14023 = !DILocation(line: 338, column: 5, scope: !14012)
!14024 = !DILocation(line: 338, column: 9, scope: !14012)
!14025 = !DILocation(line: 340, column: 28, scope: !13991)
!14026 = !DILocation(line: 340, column: 7, scope: !13991)
!14027 = !DILocation(line: 341, column: 14, scope: !13991)
!14028 = !DILocation(line: 341, column: 7, scope: !13991)
!14029 = !DILocation(line: 343, column: 1, scope: !13911)
!14030 = distinct !DISubprogram(name: "jbig2_arith_renormd", scope: !253, file: !253, line: 268, type: !13749, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !252, retainedNodes: !70)
!14031 = !DILocalVariable(name: "as", arg: 1, scope: !14030, file: !253, line: 268, type: !255)
!14032 = !DILocation(line: 268, column: 39, scope: !14030)
!14033 = !DILocation(line: 271, column: 3, scope: !14030)
!14034 = !DILocation(line: 273, column: 11, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !253, line: 273, column: 11)
!14036 = distinct !DILexicalBlock(scope: !14030, file: !253, line: 272, column: 5)
!14037 = !DILocation(line: 273, column: 15, scope: !14035)
!14038 = !DILocation(line: 273, column: 18, scope: !14035)
!14039 = !DILocation(line: 273, column: 11, scope: !14036)
!14040 = !DILocation(line: 274, column: 22, scope: !14035)
!14041 = !DILocation(line: 274, column: 2, scope: !14035)
!14042 = !DILocation(line: 275, column: 7, scope: !14036)
!14043 = !DILocation(line: 275, column: 11, scope: !14036)
!14044 = !DILocation(line: 275, column: 13, scope: !14036)
!14045 = !DILocation(line: 276, column: 7, scope: !14036)
!14046 = !DILocation(line: 276, column: 11, scope: !14036)
!14047 = !DILocation(line: 276, column: 13, scope: !14036)
!14048 = !DILocation(line: 277, column: 7, scope: !14036)
!14049 = !DILocation(line: 277, column: 11, scope: !14036)
!14050 = !DILocation(line: 277, column: 13, scope: !14036)
!14051 = !DILocation(line: 278, column: 5, scope: !14036)
!14052 = !DILocation(line: 279, column: 11, scope: !14030)
!14053 = !DILocation(line: 279, column: 15, scope: !14030)
!14054 = !DILocation(line: 279, column: 17, scope: !14030)
!14055 = !DILocation(line: 279, column: 27, scope: !14030)
!14056 = distinct !{!14056, !14033, !14057}
!14057 = !DILocation(line: 279, column: 31, scope: !14030)
!14058 = !DILocation(line: 280, column: 1, scope: !14030)
!14059 = distinct !DISubprogram(name: "jbig2_arith_int_ctx_new", scope: !573, file: !573, line: 42, type: !14060, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !572, retainedNodes: !70)
!14060 = !DISubroutineType(types: !14061)
!14061 = !{!575, !14062}
!14062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14063, size: 64)
!14063 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !14064)
!14064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !14065)
!14065 = !{!14066, !14083, !14084, !14087, !14088, !14089, !14090, !14091, !14092, !14093, !14094, !14095, !14096, !14097, !14110, !14111, !14112, !14113, !14114}
!14066 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !14064, file: !90, line: 45, baseType: !14067, size: 64)
!14067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14068, size: 64)
!14068 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !14069)
!14069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !14070)
!14070 = !{!14071, !14075, !14079}
!14071 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !14069, file: !58, line: 86, baseType: !14072, size: 64)
!14072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14073, size: 64)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{!68, !14067, !119}
!14075 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !14069, file: !58, line: 87, baseType: !14076, size: 64, offset: 64)
!14076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14077, size: 64)
!14077 = !DISubroutineType(types: !14078)
!14078 = !{null, !14067, !68}
!14079 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !14069, file: !58, line: 88, baseType: !14080, size: 64, offset: 128)
!14080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14081, size: 64)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{!68, !14067, !68, !119}
!14083 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !14064, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!14084 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !14064, file: !90, line: 47, baseType: !14085, size: 64, offset: 128)
!14085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14086, size: 64)
!14086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14063)
!14087 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !14064, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!14088 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !14064, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!14089 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !14064, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!14090 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !14064, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!14091 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !14064, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!14092 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !14064, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!14093 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14064, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!14094 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !14064, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!14095 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !14064, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!14096 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !14064, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!14097 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !14064, file: !90, line: 62, baseType: !14098, size: 64, offset: 640)
!14098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14099, size: 64)
!14099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14100, size: 64)
!14100 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !14101)
!14101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !14102)
!14102 = !{!14103, !14104, !14105, !14106, !14107, !14108, !14109}
!14103 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !14101, file: !58, line: 117, baseType: !32, size: 32)
!14104 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14101, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!14105 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !14101, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!14106 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !14101, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!14107 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !14101, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!14108 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !14101, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!14109 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !14101, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!14110 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !14064, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!14111 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !14064, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !14064, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!14113 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !14064, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!14114 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !14064, file: !90, line: 70, baseType: !14115, size: 64, offset: 832)
!14115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14116, size: 64)
!14116 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !14117)
!14117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !14118)
!14118 = !{!14119, !14120, !14121, !14122, !14123, !14124, !14125, !14126, !14127, !14128, !14129}
!14119 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14117, file: !90, line: 111, baseType: !178, size: 32)
!14120 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !14117, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!14121 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !14117, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!14122 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !14117, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!14123 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !14117, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!14124 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !14117, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!14125 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !14117, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!14126 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !14117, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!14127 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !14117, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!14128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14117, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!14129 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !14117, file: !90, line: 120, baseType: !14130, size: 64, offset: 320)
!14130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14131, size: 64)
!14131 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !14132)
!14132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !14133)
!14133 = !{!14134, !14135, !14136, !14137, !14138}
!14134 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !14132, file: !58, line: 57, baseType: !6, size: 32)
!14135 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !14132, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!14136 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !14132, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!14137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14132, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!14138 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !14132, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!14139 = !DILocalVariable(name: "ctx", arg: 1, scope: !14059, file: !573, line: 42, type: !14062)
!14140 = !DILocation(line: 42, column: 35, scope: !14059)
!14141 = !DILocalVariable(name: "result", scope: !14059, file: !573, line: 44, type: !575)
!14142 = !DILocation(line: 44, column: 21, scope: !14059)
!14143 = !DILocation(line: 44, column: 30, scope: !14059)
!14144 = !DILocation(line: 46, column: 10, scope: !14059)
!14145 = !DILocation(line: 46, column: 18, scope: !14059)
!14146 = !DILocation(line: 46, column: 3, scope: !14059)
!14147 = !DILocation(line: 48, column: 10, scope: !14059)
!14148 = !DILocation(line: 48, column: 3, scope: !14059)
!14149 = distinct !DISubprogram(name: "jbig2_arith_int_decode", scope: !573, file: !573, line: 54, type: !14150, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !572, retainedNodes: !70)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{!6, !575, !4988, !492}
!14152 = !DILocalVariable(name: "ctx", arg: 1, scope: !14149, file: !573, line: 54, type: !575)
!14153 = !DILocation(line: 54, column: 42, scope: !14149)
!14154 = !DILocalVariable(name: "as", arg: 2, scope: !14149, file: !573, line: 54, type: !4988)
!14155 = !DILocation(line: 54, column: 64, scope: !14149)
!14156 = !DILocalVariable(name: "p_result", arg: 3, scope: !14149, file: !573, line: 55, type: !492)
!14157 = !DILocation(line: 55, column: 19, scope: !14149)
!14158 = !DILocalVariable(name: "IAx", scope: !14149, file: !573, line: 57, type: !595)
!14159 = !DILocation(line: 57, column: 17, scope: !14149)
!14160 = !DILocation(line: 57, column: 23, scope: !14149)
!14161 = !DILocation(line: 57, column: 28, scope: !14149)
!14162 = !DILocalVariable(name: "PREV", scope: !14149, file: !573, line: 58, type: !6)
!14163 = !DILocation(line: 58, column: 7, scope: !14149)
!14164 = !DILocalVariable(name: "S", scope: !14149, file: !573, line: 59, type: !6)
!14165 = !DILocation(line: 59, column: 7, scope: !14149)
!14166 = !DILocalVariable(name: "V", scope: !14149, file: !573, line: 59, type: !6)
!14167 = !DILocation(line: 59, column: 10, scope: !14149)
!14168 = !DILocalVariable(name: "bit", scope: !14149, file: !573, line: 60, type: !6)
!14169 = !DILocation(line: 60, column: 7, scope: !14149)
!14170 = !DILocalVariable(name: "n_tail", scope: !14149, file: !573, line: 61, type: !6)
!14171 = !DILocation(line: 61, column: 7, scope: !14149)
!14172 = !DILocalVariable(name: "offset", scope: !14149, file: !573, line: 61, type: !6)
!14173 = !DILocation(line: 61, column: 15, scope: !14149)
!14174 = !DILocalVariable(name: "i", scope: !14149, file: !573, line: 62, type: !6)
!14175 = !DILocation(line: 62, column: 7, scope: !14149)
!14176 = !DILocation(line: 64, column: 26, scope: !14149)
!14177 = !DILocation(line: 64, column: 31, scope: !14149)
!14178 = !DILocation(line: 64, column: 35, scope: !14149)
!14179 = !DILocation(line: 64, column: 7, scope: !14149)
!14180 = !DILocation(line: 64, column: 5, scope: !14149)
!14181 = !DILocation(line: 65, column: 11, scope: !14149)
!14182 = !DILocation(line: 65, column: 16, scope: !14149)
!14183 = !DILocation(line: 65, column: 24, scope: !14149)
!14184 = !DILocation(line: 65, column: 22, scope: !14149)
!14185 = !DILocation(line: 65, column: 8, scope: !14149)
!14186 = !DILocation(line: 67, column: 28, scope: !14149)
!14187 = !DILocation(line: 67, column: 33, scope: !14149)
!14188 = !DILocation(line: 67, column: 37, scope: !14149)
!14189 = !DILocation(line: 67, column: 9, scope: !14149)
!14190 = !DILocation(line: 67, column: 7, scope: !14149)
!14191 = !DILocation(line: 68, column: 11, scope: !14149)
!14192 = !DILocation(line: 68, column: 16, scope: !14149)
!14193 = !DILocation(line: 68, column: 24, scope: !14149)
!14194 = !DILocation(line: 68, column: 22, scope: !14149)
!14195 = !DILocation(line: 68, column: 8, scope: !14149)
!14196 = !DILocation(line: 69, column: 7, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14149, file: !573, line: 69, column: 7)
!14198 = !DILocation(line: 69, column: 7, scope: !14149)
!14199 = !DILocation(line: 71, column: 32, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14197, file: !573, line: 70, column: 5)
!14201 = !DILocation(line: 71, column: 37, scope: !14200)
!14202 = !DILocation(line: 71, column: 41, scope: !14200)
!14203 = !DILocation(line: 71, column: 13, scope: !14200)
!14204 = !DILocation(line: 71, column: 11, scope: !14200)
!14205 = !DILocation(line: 72, column: 15, scope: !14200)
!14206 = !DILocation(line: 72, column: 20, scope: !14200)
!14207 = !DILocation(line: 72, column: 28, scope: !14200)
!14208 = !DILocation(line: 72, column: 26, scope: !14200)
!14209 = !DILocation(line: 72, column: 12, scope: !14200)
!14210 = !DILocation(line: 74, column: 11, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14200, file: !573, line: 74, column: 11)
!14212 = !DILocation(line: 74, column: 11, scope: !14200)
!14213 = !DILocation(line: 76, column: 29, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14211, file: !573, line: 75, column: 2)
!14215 = !DILocation(line: 76, column: 34, scope: !14214)
!14216 = !DILocation(line: 76, column: 38, scope: !14214)
!14217 = !DILocation(line: 76, column: 10, scope: !14214)
!14218 = !DILocation(line: 76, column: 8, scope: !14214)
!14219 = !DILocation(line: 77, column: 12, scope: !14214)
!14220 = !DILocation(line: 77, column: 17, scope: !14214)
!14221 = !DILocation(line: 77, column: 25, scope: !14214)
!14222 = !DILocation(line: 77, column: 23, scope: !14214)
!14223 = !DILocation(line: 77, column: 9, scope: !14214)
!14224 = !DILocation(line: 79, column: 8, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14214, file: !573, line: 79, column: 8)
!14226 = !DILocation(line: 79, column: 8, scope: !14214)
!14227 = !DILocation(line: 81, column: 33, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14225, file: !573, line: 80, column: 6)
!14229 = !DILocation(line: 81, column: 38, scope: !14228)
!14230 = !DILocation(line: 81, column: 42, scope: !14228)
!14231 = !DILocation(line: 81, column: 14, scope: !14228)
!14232 = !DILocation(line: 81, column: 12, scope: !14228)
!14233 = !DILocation(line: 82, column: 16, scope: !14228)
!14234 = !DILocation(line: 82, column: 21, scope: !14228)
!14235 = !DILocation(line: 82, column: 29, scope: !14228)
!14236 = !DILocation(line: 82, column: 27, scope: !14228)
!14237 = !DILocation(line: 82, column: 13, scope: !14228)
!14238 = !DILocation(line: 84, column: 12, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14228, file: !573, line: 84, column: 12)
!14240 = !DILocation(line: 84, column: 12, scope: !14228)
!14241 = !DILocation(line: 86, column: 30, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14239, file: !573, line: 85, column: 3)
!14243 = !DILocation(line: 86, column: 35, scope: !14242)
!14244 = !DILocation(line: 86, column: 39, scope: !14242)
!14245 = !DILocation(line: 86, column: 11, scope: !14242)
!14246 = !DILocation(line: 86, column: 9, scope: !14242)
!14247 = !DILocation(line: 87, column: 13, scope: !14242)
!14248 = !DILocation(line: 87, column: 18, scope: !14242)
!14249 = !DILocation(line: 87, column: 26, scope: !14242)
!14250 = !DILocation(line: 87, column: 24, scope: !14242)
!14251 = !DILocation(line: 87, column: 10, scope: !14242)
!14252 = !DILocation(line: 89, column: 9, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14242, file: !573, line: 89, column: 9)
!14254 = !DILocation(line: 89, column: 9, scope: !14242)
!14255 = !DILocation(line: 91, column: 16, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14253, file: !573, line: 90, column: 7)
!14257 = !DILocation(line: 92, column: 16, scope: !14256)
!14258 = !DILocation(line: 93, column: 7, scope: !14256)
!14259 = !DILocation(line: 96, column: 16, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14253, file: !573, line: 95, column: 7)
!14261 = !DILocation(line: 97, column: 16, scope: !14260)
!14262 = !DILocation(line: 99, column: 3, scope: !14242)
!14263 = !DILocation(line: 102, column: 12, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14239, file: !573, line: 101, column: 3)
!14265 = !DILocation(line: 103, column: 12, scope: !14264)
!14266 = !DILocation(line: 105, column: 6, scope: !14228)
!14267 = !DILocation(line: 108, column: 15, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14225, file: !573, line: 107, column: 6)
!14269 = !DILocation(line: 109, column: 15, scope: !14268)
!14270 = !DILocation(line: 111, column: 2, scope: !14214)
!14271 = !DILocation(line: 114, column: 11, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14211, file: !573, line: 113, column: 2)
!14273 = !DILocation(line: 115, column: 11, scope: !14272)
!14274 = !DILocation(line: 117, column: 5, scope: !14200)
!14275 = !DILocation(line: 120, column: 14, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14197, file: !573, line: 119, column: 5)
!14277 = !DILocation(line: 121, column: 14, scope: !14276)
!14278 = !DILocation(line: 124, column: 5, scope: !14149)
!14279 = !DILocation(line: 125, column: 10, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14149, file: !573, line: 125, column: 3)
!14281 = !DILocation(line: 125, column: 8, scope: !14280)
!14282 = !DILocation(line: 125, column: 15, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14280, file: !573, line: 125, column: 3)
!14284 = !DILocation(line: 125, column: 19, scope: !14283)
!14285 = !DILocation(line: 125, column: 17, scope: !14283)
!14286 = !DILocation(line: 125, column: 3, scope: !14280)
!14287 = !DILocation(line: 127, column: 32, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14283, file: !573, line: 126, column: 5)
!14289 = !DILocation(line: 127, column: 37, scope: !14288)
!14290 = !DILocation(line: 127, column: 41, scope: !14288)
!14291 = !DILocation(line: 127, column: 13, scope: !14288)
!14292 = !DILocation(line: 127, column: 11, scope: !14288)
!14293 = !DILocation(line: 128, column: 16, scope: !14288)
!14294 = !DILocation(line: 128, column: 21, scope: !14288)
!14295 = !DILocation(line: 128, column: 27, scope: !14288)
!14296 = !DILocation(line: 128, column: 37, scope: !14288)
!14297 = !DILocation(line: 128, column: 42, scope: !14288)
!14298 = !DILocation(line: 128, column: 34, scope: !14288)
!14299 = !DILocation(line: 128, column: 51, scope: !14288)
!14300 = !DILocation(line: 128, column: 49, scope: !14288)
!14301 = !DILocation(line: 128, column: 12, scope: !14288)
!14302 = !DILocation(line: 129, column: 12, scope: !14288)
!14303 = !DILocation(line: 129, column: 14, scope: !14288)
!14304 = !DILocation(line: 129, column: 22, scope: !14288)
!14305 = !DILocation(line: 129, column: 20, scope: !14288)
!14306 = !DILocation(line: 129, column: 9, scope: !14288)
!14307 = !DILocation(line: 130, column: 5, scope: !14288)
!14308 = !DILocation(line: 125, column: 28, scope: !14283)
!14309 = !DILocation(line: 125, column: 3, scope: !14283)
!14310 = distinct !{!14310, !14286, !14311}
!14311 = !DILocation(line: 130, column: 5, scope: !14280)
!14312 = !DILocation(line: 132, column: 8, scope: !14149)
!14313 = !DILocation(line: 132, column: 5, scope: !14149)
!14314 = !DILocation(line: 133, column: 7, scope: !14149)
!14315 = !DILocation(line: 133, column: 12, scope: !14149)
!14316 = !DILocation(line: 133, column: 11, scope: !14149)
!14317 = !DILocation(line: 133, column: 16, scope: !14149)
!14318 = !DILocation(line: 133, column: 5, scope: !14149)
!14319 = !DILocation(line: 134, column: 15, scope: !14149)
!14320 = !DILocation(line: 134, column: 4, scope: !14149)
!14321 = !DILocation(line: 134, column: 13, scope: !14149)
!14322 = !DILocation(line: 135, column: 10, scope: !14149)
!14323 = !DILocation(line: 135, column: 12, scope: !14149)
!14324 = !DILocation(line: 135, column: 15, scope: !14149)
!14325 = !DILocation(line: 135, column: 17, scope: !14149)
!14326 = !DILocation(line: 0, scope: !14149)
!14327 = !DILocation(line: 135, column: 3, scope: !14149)
!14328 = distinct !DISubprogram(name: "jbig2_arith_int_ctx_free", scope: !573, file: !573, line: 139, type: !14329, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !572, retainedNodes: !70)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{null, !14062, !575}
!14331 = !DILocalVariable(name: "ctx", arg: 1, scope: !14328, file: !573, line: 139, type: !14062)
!14332 = !DILocation(line: 139, column: 36, scope: !14328)
!14333 = !DILocalVariable(name: "iax", arg: 2, scope: !14328, file: !573, line: 139, type: !575)
!14334 = !DILocation(line: 139, column: 59, scope: !14328)
!14335 = !DILocation(line: 141, column: 14, scope: !14328)
!14336 = !DILocation(line: 141, column: 19, scope: !14328)
!14337 = !DILocation(line: 141, column: 30, scope: !14328)
!14338 = !DILocation(line: 141, column: 3, scope: !14328)
!14339 = !DILocation(line: 142, column: 1, scope: !14328)
!14340 = distinct !DISubprogram(name: "jbig2_arith_iaid_ctx_new", scope: !586, file: !586, line: 47, type: !14341, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !585, retainedNodes: !70)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!588, !14343, !6}
!14343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14344, size: 64)
!14344 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !14345)
!14345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !14346)
!14346 = !{!14347, !14364, !14365, !14368, !14369, !14370, !14371, !14372, !14373, !14374, !14375, !14376, !14377, !14378, !14391, !14392, !14393, !14394, !14395}
!14347 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !14345, file: !90, line: 45, baseType: !14348, size: 64)
!14348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14349, size: 64)
!14349 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !14350)
!14350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !14351)
!14351 = !{!14352, !14356, !14360}
!14352 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !14350, file: !58, line: 86, baseType: !14353, size: 64)
!14353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14354, size: 64)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{!68, !14348, !119}
!14356 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !14350, file: !58, line: 87, baseType: !14357, size: 64, offset: 64)
!14357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14358, size: 64)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{null, !14348, !68}
!14360 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !14350, file: !58, line: 88, baseType: !14361, size: 64, offset: 128)
!14361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14362, size: 64)
!14362 = !DISubroutineType(types: !14363)
!14363 = !{!68, !14348, !68, !119}
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !14345, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !14345, file: !90, line: 47, baseType: !14366, size: 64, offset: 128)
!14366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14367, size: 64)
!14367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14344)
!14368 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !14345, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!14369 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !14345, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!14370 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !14345, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!14371 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !14345, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!14372 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !14345, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!14373 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !14345, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!14374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14345, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!14375 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !14345, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!14376 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !14345, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!14377 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !14345, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !14345, file: !90, line: 62, baseType: !14379, size: 64, offset: 640)
!14379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14380, size: 64)
!14380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14381, size: 64)
!14381 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !14382)
!14382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !14383)
!14383 = !{!14384, !14385, !14386, !14387, !14388, !14389, !14390}
!14384 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !14382, file: !58, line: 117, baseType: !32, size: 32)
!14385 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14382, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!14386 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !14382, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!14387 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !14382, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!14388 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !14382, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!14389 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !14382, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!14390 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !14382, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!14391 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !14345, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!14392 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !14345, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!14393 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !14345, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!14394 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !14345, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!14395 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !14345, file: !90, line: 70, baseType: !14396, size: 64, offset: 832)
!14396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14397, size: 64)
!14397 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !14398)
!14398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !14399)
!14399 = !{!14400, !14401, !14402, !14403, !14404, !14405, !14406, !14407, !14408, !14409, !14410}
!14400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14398, file: !90, line: 111, baseType: !178, size: 32)
!14401 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !14398, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !14398, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!14403 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !14398, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!14404 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !14398, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!14405 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !14398, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!14406 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !14398, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!14407 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !14398, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!14408 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !14398, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!14409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14398, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!14410 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !14398, file: !90, line: 120, baseType: !14411, size: 64, offset: 320)
!14411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14412, size: 64)
!14412 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !14413)
!14413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !14414)
!14414 = !{!14415, !14416, !14417, !14418, !14419}
!14415 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !14413, file: !58, line: 57, baseType: !6, size: 32)
!14416 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !14413, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !14413, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!14418 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14413, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!14419 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !14413, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!14420 = !DILocalVariable(name: "ctx", arg: 1, scope: !14340, file: !586, line: 47, type: !14343)
!14421 = !DILocation(line: 47, column: 36, scope: !14340)
!14422 = !DILocalVariable(name: "SBSYMCODELEN", arg: 2, scope: !14340, file: !586, line: 47, type: !6)
!14423 = !DILocation(line: 47, column: 45, scope: !14340)
!14424 = !DILocalVariable(name: "result", scope: !14340, file: !586, line: 49, type: !588)
!14425 = !DILocation(line: 49, column: 22, scope: !14340)
!14426 = !DILocation(line: 49, column: 31, scope: !14340)
!14427 = !DILocalVariable(name: "ctx_size", scope: !14340, file: !586, line: 50, type: !6)
!14428 = !DILocation(line: 50, column: 7, scope: !14340)
!14429 = !DILocation(line: 50, column: 23, scope: !14340)
!14430 = !DILocation(line: 50, column: 20, scope: !14340)
!14431 = !DILocation(line: 52, column: 26, scope: !14340)
!14432 = !DILocation(line: 52, column: 3, scope: !14340)
!14433 = !DILocation(line: 52, column: 11, scope: !14340)
!14434 = !DILocation(line: 52, column: 24, scope: !14340)
!14435 = !DILocation(line: 53, column: 31, scope: !14340)
!14436 = !DILocation(line: 53, column: 36, scope: !14340)
!14437 = !DILocation(line: 53, column: 47, scope: !14340)
!14438 = !DILocation(line: 53, column: 19, scope: !14340)
!14439 = !DILocation(line: 53, column: 3, scope: !14340)
!14440 = !DILocation(line: 53, column: 11, scope: !14340)
!14441 = !DILocation(line: 53, column: 17, scope: !14340)
!14442 = !DILocation(line: 54, column: 10, scope: !14340)
!14443 = !DILocation(line: 54, column: 18, scope: !14340)
!14444 = !DILocation(line: 54, column: 28, scope: !14340)
!14445 = !DILocation(line: 54, column: 3, scope: !14340)
!14446 = !DILocation(line: 56, column: 10, scope: !14340)
!14447 = !DILocation(line: 56, column: 3, scope: !14340)
!14448 = distinct !DISubprogram(name: "jbig2_arith_iaid_decode", scope: !586, file: !586, line: 62, type: !14449, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !585, retainedNodes: !70)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{!6, !588, !4988, !492}
!14451 = !DILocalVariable(name: "ctx", arg: 1, scope: !14448, file: !586, line: 62, type: !588)
!14452 = !DILocation(line: 62, column: 44, scope: !14448)
!14453 = !DILocalVariable(name: "as", arg: 2, scope: !14448, file: !586, line: 62, type: !4988)
!14454 = !DILocation(line: 62, column: 66, scope: !14448)
!14455 = !DILocalVariable(name: "p_result", arg: 3, scope: !14448, file: !586, line: 63, type: !492)
!14456 = !DILocation(line: 63, column: 19, scope: !14448)
!14457 = !DILocalVariable(name: "IAIDx", scope: !14448, file: !586, line: 65, type: !595)
!14458 = !DILocation(line: 65, column: 17, scope: !14448)
!14459 = !DILocation(line: 65, column: 25, scope: !14448)
!14460 = !DILocation(line: 65, column: 30, scope: !14448)
!14461 = !DILocalVariable(name: "SBSYMCODELEN", scope: !14448, file: !586, line: 66, type: !6)
!14462 = !DILocation(line: 66, column: 7, scope: !14448)
!14463 = !DILocation(line: 66, column: 22, scope: !14448)
!14464 = !DILocation(line: 66, column: 27, scope: !14448)
!14465 = !DILocalVariable(name: "PREV", scope: !14448, file: !586, line: 67, type: !6)
!14466 = !DILocation(line: 67, column: 7, scope: !14448)
!14467 = !DILocalVariable(name: "D", scope: !14448, file: !586, line: 68, type: !6)
!14468 = !DILocation(line: 68, column: 7, scope: !14448)
!14469 = !DILocalVariable(name: "i", scope: !14448, file: !586, line: 69, type: !6)
!14470 = !DILocation(line: 69, column: 7, scope: !14448)
!14471 = !DILocation(line: 72, column: 10, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14448, file: !586, line: 72, column: 3)
!14473 = !DILocation(line: 72, column: 8, scope: !14472)
!14474 = !DILocation(line: 72, column: 15, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14472, file: !586, line: 72, column: 3)
!14476 = !DILocation(line: 72, column: 19, scope: !14475)
!14477 = !DILocation(line: 72, column: 17, scope: !14475)
!14478 = !DILocation(line: 72, column: 3, scope: !14472)
!14479 = !DILocation(line: 74, column: 30, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14475, file: !586, line: 73, column: 5)
!14481 = !DILocation(line: 74, column: 35, scope: !14480)
!14482 = !DILocation(line: 74, column: 41, scope: !14480)
!14483 = !DILocation(line: 74, column: 11, scope: !14480)
!14484 = !DILocation(line: 74, column: 9, scope: !14480)
!14485 = !DILocation(line: 78, column: 15, scope: !14480)
!14486 = !DILocation(line: 78, column: 20, scope: !14480)
!14487 = !DILocation(line: 78, column: 28, scope: !14480)
!14488 = !DILocation(line: 78, column: 26, scope: !14480)
!14489 = !DILocation(line: 78, column: 12, scope: !14480)
!14490 = !DILocation(line: 79, column: 5, scope: !14480)
!14491 = !DILocation(line: 72, column: 34, scope: !14475)
!14492 = !DILocation(line: 72, column: 3, scope: !14475)
!14493 = distinct !{!14493, !14478, !14494}
!14494 = !DILocation(line: 79, column: 5, scope: !14472)
!14495 = !DILocation(line: 81, column: 16, scope: !14448)
!14496 = !DILocation(line: 81, column: 13, scope: !14448)
!14497 = !DILocation(line: 81, column: 8, scope: !14448)
!14498 = !DILocation(line: 85, column: 15, scope: !14448)
!14499 = !DILocation(line: 85, column: 4, scope: !14448)
!14500 = !DILocation(line: 85, column: 13, scope: !14448)
!14501 = !DILocation(line: 86, column: 3, scope: !14448)
!14502 = distinct !DISubprogram(name: "jbig2_arith_iaid_ctx_free", scope: !586, file: !586, line: 90, type: !14503, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !585, retainedNodes: !70)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{null, !14343, !588}
!14505 = !DILocalVariable(name: "ctx", arg: 1, scope: !14502, file: !586, line: 90, type: !14343)
!14506 = !DILocation(line: 90, column: 37, scope: !14502)
!14507 = !DILocalVariable(name: "iax", arg: 2, scope: !14502, file: !586, line: 90, type: !588)
!14508 = !DILocation(line: 90, column: 61, scope: !14502)
!14509 = !DILocation(line: 92, column: 14, scope: !14502)
!14510 = !DILocation(line: 92, column: 19, scope: !14502)
!14511 = !DILocation(line: 92, column: 30, scope: !14502)
!14512 = !DILocation(line: 92, column: 35, scope: !14502)
!14513 = !DILocation(line: 92, column: 3, scope: !14502)
!14514 = !DILocation(line: 93, column: 14, scope: !14502)
!14515 = !DILocation(line: 93, column: 19, scope: !14502)
!14516 = !DILocation(line: 93, column: 30, scope: !14502)
!14517 = !DILocation(line: 93, column: 3, scope: !14502)
!14518 = !DILocation(line: 94, column: 1, scope: !14502)
!14519 = distinct !DISubprogram(name: "jbig2_huffman_new", scope: !289, file: !289, line: 62, type: !14520, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!291, !14522, !301}
!14522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14523, size: 64)
!14523 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Ctx", file: !58, line: 40, baseType: !14524)
!14524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Ctx", file: !90, line: 44, size: 896, elements: !14525)
!14525 = !{!14526, !14543, !14544, !14547, !14548, !14549, !14550, !14551, !14552, !14553, !14554, !14555, !14556, !14557, !14570, !14571, !14572, !14573, !14574}
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !14524, file: !90, line: 45, baseType: !14527, size: 64)
!14527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14528, size: 64)
!14528 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Allocator", file: !58, line: 39, baseType: !14529)
!14529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Allocator", file: !58, line: 85, size: 192, elements: !14530)
!14530 = !{!14531, !14535, !14539}
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !14529, file: !58, line: 86, baseType: !14532, size: 64)
!14532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14533, size: 64)
!14533 = !DISubroutineType(types: !14534)
!14534 = !{!68, !14527, !119}
!14535 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !14529, file: !58, line: 87, baseType: !14536, size: 64, offset: 64)
!14536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14537, size: 64)
!14537 = !DISubroutineType(types: !14538)
!14538 = !{null, !14527, !68}
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !14529, file: !58, line: 88, baseType: !14540, size: 64, offset: 128)
!14540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14541, size: 64)
!14541 = !DISubroutineType(types: !14542)
!14542 = !{!68, !14527, !68, !119}
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !14524, file: !90, line: 46, baseType: !131, size: 32, offset: 64)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "global_ctx", scope: !14524, file: !90, line: 47, baseType: !14545, size: 64, offset: 128)
!14545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14546, size: 64)
!14546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14523)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback", scope: !14524, file: !90, line: 48, baseType: !136, size: 64, offset: 192)
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_data", scope: !14524, file: !90, line: 49, baseType: !68, size: 64, offset: 256)
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !14524, file: !90, line: 51, baseType: !144, size: 64, offset: 320)
!14550 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !14524, file: !90, line: 52, baseType: !119, size: 64, offset: 384)
!14551 = !DIDerivedType(tag: DW_TAG_member, name: "buf_rd_ix", scope: !14524, file: !90, line: 53, baseType: !17, size: 32, offset: 448)
!14552 = !DIDerivedType(tag: DW_TAG_member, name: "buf_wr_ix", scope: !14524, file: !90, line: 54, baseType: !17, size: 32, offset: 480)
!14553 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14524, file: !90, line: 56, baseType: !150, size: 32, offset: 512)
!14554 = !DIDerivedType(tag: DW_TAG_member, name: "file_header_flags", scope: !14524, file: !90, line: 58, baseType: !42, size: 8, offset: 544)
!14555 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !14524, file: !90, line: 59, baseType: !141, size: 32, offset: 576)
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments_max", scope: !14524, file: !90, line: 61, baseType: !6, size: 32, offset: 608)
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !14524, file: !90, line: 62, baseType: !14558, size: 64, offset: 640)
!14558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14559, size: 64)
!14559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14560, size: 64)
!14560 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Segment", file: !58, line: 42, baseType: !14561)
!14561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Segment", file: !58, line: 116, size: 384, elements: !14562)
!14562 = !{!14563, !14564, !14565, !14566, !14567, !14568, !14569}
!14563 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !14561, file: !58, line: 117, baseType: !32, size: 32)
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14561, file: !58, line: 118, baseType: !42, size: 8, offset: 32)
!14565 = !DIDerivedType(tag: DW_TAG_member, name: "page_association", scope: !14561, file: !58, line: 119, baseType: !32, size: 32, offset: 64)
!14566 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !14561, file: !58, line: 120, baseType: !119, size: 64, offset: 128)
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segment_count", scope: !14561, file: !58, line: 121, baseType: !6, size: 32, offset: 192)
!14568 = !DIDerivedType(tag: DW_TAG_member, name: "referred_to_segments", scope: !14561, file: !58, line: 122, baseType: !166, size: 64, offset: 256)
!14569 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !14561, file: !58, line: 123, baseType: !68, size: 64, offset: 320)
!14570 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !14524, file: !90, line: 63, baseType: !6, size: 32, offset: 704)
!14571 = !DIDerivedType(tag: DW_TAG_member, name: "segment_index", scope: !14524, file: !90, line: 64, baseType: !6, size: 32, offset: 736)
!14572 = !DIDerivedType(tag: DW_TAG_member, name: "current_page", scope: !14524, file: !90, line: 68, baseType: !6, size: 32, offset: 768)
!14573 = !DIDerivedType(tag: DW_TAG_member, name: "max_page_index", scope: !14524, file: !90, line: 69, baseType: !6, size: 32, offset: 800)
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !14524, file: !90, line: 70, baseType: !14575, size: 64, offset: 832)
!14575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14576, size: 64)
!14576 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Page", file: !58, line: 46, baseType: !14577)
!14577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Page", file: !90, line: 110, size: 384, elements: !14578)
!14578 = !{!14579, !14580, !14581, !14582, !14583, !14584, !14585, !14586, !14587, !14588, !14589}
!14579 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14577, file: !90, line: 111, baseType: !178, size: 32)
!14580 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !14577, file: !90, line: 112, baseType: !32, size: 32, offset: 32)
!14581 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !14577, file: !90, line: 113, baseType: !32, size: 32, offset: 64)
!14582 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !14577, file: !90, line: 113, baseType: !32, size: 32, offset: 96)
!14583 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !14577, file: !90, line: 114, baseType: !32, size: 32, offset: 128)
!14584 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !14577, file: !90, line: 115, baseType: !32, size: 32, offset: 160)
!14585 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !14577, file: !90, line: 116, baseType: !185, size: 16, offset: 192)
!14586 = !DIDerivedType(tag: DW_TAG_member, name: "striped", scope: !14577, file: !90, line: 117, baseType: !188, size: 32, offset: 224)
!14587 = !DIDerivedType(tag: DW_TAG_member, name: "end_row", scope: !14577, file: !90, line: 118, baseType: !6, size: 32, offset: 256)
!14588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14577, file: !90, line: 119, baseType: !42, size: 8, offset: 288)
!14589 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !14577, file: !90, line: 120, baseType: !14590, size: 64, offset: 320)
!14590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14591, size: 64)
!14591 = !DIDerivedType(tag: DW_TAG_typedef, name: "Jbig2Image", file: !58, line: 43, baseType: !14592)
!14592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Jbig2Image", file: !58, line: 56, size: 256, elements: !14593)
!14593 = !{!14594, !14595, !14596, !14597, !14598}
!14594 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !14592, file: !58, line: 57, baseType: !6, size: 32)
!14595 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !14592, file: !58, line: 57, baseType: !6, size: 32, offset: 32)
!14596 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !14592, file: !58, line: 57, baseType: !6, size: 32, offset: 64)
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14592, file: !58, line: 58, baseType: !200, size: 64, offset: 128)
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !14592, file: !58, line: 59, baseType: !6, size: 32, offset: 192)
!14599 = !DILocalVariable(name: "ctx", arg: 1, scope: !14519, file: !289, line: 62, type: !14522)
!14600 = !DILocation(line: 62, column: 30, scope: !14519)
!14601 = !DILocalVariable(name: "ws", arg: 2, scope: !14519, file: !289, line: 62, type: !301)
!14602 = !DILocation(line: 62, column: 52, scope: !14519)
!14603 = !DILocalVariable(name: "result", scope: !14519, file: !289, line: 64, type: !291)
!14604 = !DILocation(line: 64, column: 22, scope: !14519)
!14605 = !DILocation(line: 66, column: 45, scope: !14519)
!14606 = !DILocation(line: 66, column: 50, scope: !14519)
!14607 = !DILocation(line: 66, column: 33, scope: !14519)
!14608 = !DILocation(line: 66, column: 12, scope: !14519)
!14609 = !DILocation(line: 66, column: 10, scope: !14519)
!14610 = !DILocation(line: 69, column: 7, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14519, file: !289, line: 69, column: 7)
!14612 = !DILocation(line: 69, column: 14, scope: !14611)
!14613 = !DILocation(line: 69, column: 7, scope: !14519)
!14614 = !DILocation(line: 70, column: 7, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14611, file: !289, line: 69, column: 23)
!14616 = !DILocation(line: 70, column: 15, scope: !14615)
!14617 = !DILocation(line: 70, column: 22, scope: !14615)
!14618 = !DILocation(line: 71, column: 7, scope: !14615)
!14619 = !DILocation(line: 71, column: 15, scope: !14615)
!14620 = !DILocation(line: 71, column: 27, scope: !14615)
!14621 = !DILocation(line: 72, column: 27, scope: !14615)
!14622 = !DILocation(line: 72, column: 31, scope: !14615)
!14623 = !DILocation(line: 72, column: 46, scope: !14615)
!14624 = !DILocation(line: 72, column: 7, scope: !14615)
!14625 = !DILocation(line: 72, column: 15, scope: !14615)
!14626 = !DILocation(line: 72, column: 25, scope: !14615)
!14627 = !DILocation(line: 73, column: 27, scope: !14615)
!14628 = !DILocation(line: 73, column: 31, scope: !14615)
!14629 = !DILocation(line: 73, column: 46, scope: !14615)
!14630 = !DILocation(line: 73, column: 7, scope: !14615)
!14631 = !DILocation(line: 73, column: 15, scope: !14615)
!14632 = !DILocation(line: 73, column: 25, scope: !14615)
!14633 = !DILocation(line: 75, column: 20, scope: !14615)
!14634 = !DILocation(line: 75, column: 7, scope: !14615)
!14635 = !DILocation(line: 75, column: 15, scope: !14615)
!14636 = !DILocation(line: 75, column: 18, scope: !14615)
!14637 = !DILocation(line: 76, column: 3, scope: !14615)
!14638 = !DILocation(line: 78, column: 10, scope: !14519)
!14639 = !DILocation(line: 78, column: 3, scope: !14519)
!14640 = distinct !DISubprogram(name: "jbig2_huffman_free", scope: !289, file: !289, line: 85, type: !14641, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{null, !14522, !291}
!14643 = !DILocalVariable(name: "ctx", arg: 1, scope: !14640, file: !289, line: 85, type: !14522)
!14644 = !DILocation(line: 85, column: 31, scope: !14640)
!14645 = !DILocalVariable(name: "hs", arg: 2, scope: !14640, file: !289, line: 85, type: !291)
!14646 = !DILocation(line: 85, column: 55, scope: !14640)
!14647 = !DILocation(line: 87, column: 7, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14640, file: !289, line: 87, column: 7)
!14649 = !DILocation(line: 87, column: 10, scope: !14648)
!14650 = !DILocation(line: 87, column: 7, scope: !14640)
!14651 = !DILocation(line: 87, column: 24, scope: !14648)
!14652 = !DILocation(line: 87, column: 19, scope: !14648)
!14653 = !DILocation(line: 88, column: 3, scope: !14640)
!14654 = distinct !DISubprogram(name: "jbig2_huffman_skip", scope: !289, file: !289, line: 117, type: !14655, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14655 = !DISubroutineType(types: !14656)
!14656 = !{null, !291}
!14657 = !DILocalVariable(name: "hs", arg: 1, scope: !14654, file: !289, line: 117, type: !291)
!14658 = !DILocation(line: 117, column: 39, scope: !14654)
!14659 = !DILocalVariable(name: "bits", scope: !14654, file: !289, line: 119, type: !6)
!14660 = !DILocation(line: 119, column: 7, scope: !14654)
!14661 = !DILocation(line: 119, column: 14, scope: !14654)
!14662 = !DILocation(line: 119, column: 18, scope: !14654)
!14663 = !DILocation(line: 119, column: 30, scope: !14654)
!14664 = !DILocation(line: 121, column: 7, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14654, file: !289, line: 121, column: 7)
!14666 = !DILocation(line: 121, column: 7, scope: !14654)
!14667 = !DILocation(line: 122, column: 16, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14665, file: !289, line: 121, column: 13)
!14669 = !DILocation(line: 122, column: 14, scope: !14668)
!14670 = !DILocation(line: 122, column: 10, scope: !14668)
!14671 = !DILocation(line: 123, column: 24, scope: !14668)
!14672 = !DILocation(line: 123, column: 5, scope: !14668)
!14673 = !DILocation(line: 123, column: 9, scope: !14668)
!14674 = !DILocation(line: 123, column: 21, scope: !14668)
!14675 = !DILocation(line: 124, column: 22, scope: !14668)
!14676 = !DILocation(line: 124, column: 26, scope: !14668)
!14677 = !DILocation(line: 124, column: 39, scope: !14668)
!14678 = !DILocation(line: 124, column: 36, scope: !14668)
!14679 = !DILocation(line: 125, column: 3, scope: !14668)
!14680 = !DILocation(line: 125, column: 7, scope: !14668)
!14681 = !DILocation(line: 125, column: 26, scope: !14668)
!14682 = !DILocation(line: 125, column: 30, scope: !14668)
!14683 = !DILocation(line: 125, column: 24, scope: !14668)
!14684 = !DILocation(line: 125, column: 17, scope: !14668)
!14685 = !DILocation(line: 124, column: 45, scope: !14668)
!14686 = !DILocation(line: 124, column: 5, scope: !14668)
!14687 = !DILocation(line: 124, column: 9, scope: !14668)
!14688 = !DILocation(line: 124, column: 19, scope: !14668)
!14689 = !DILocation(line: 126, column: 3, scope: !14668)
!14690 = !DILocation(line: 128, column: 7, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14654, file: !289, line: 128, column: 7)
!14692 = !DILocation(line: 128, column: 11, scope: !14691)
!14693 = !DILocation(line: 128, column: 23, scope: !14691)
!14694 = !DILocation(line: 128, column: 7, scope: !14654)
!14695 = !DILocalVariable(name: "ws", scope: !14696, file: !289, line: 129, type: !301)
!14696 = distinct !DILexicalBlock(scope: !14691, file: !289, line: 128, column: 30)
!14697 = !DILocation(line: 129, column: 22, scope: !14696)
!14698 = !DILocation(line: 129, column: 27, scope: !14696)
!14699 = !DILocation(line: 129, column: 31, scope: !14696)
!14700 = !DILocation(line: 130, column: 21, scope: !14696)
!14701 = !DILocation(line: 130, column: 25, scope: !14696)
!14702 = !DILocation(line: 130, column: 5, scope: !14696)
!14703 = !DILocation(line: 130, column: 9, scope: !14696)
!14704 = !DILocation(line: 130, column: 19, scope: !14696)
!14705 = !DILocation(line: 131, column: 5, scope: !14696)
!14706 = !DILocation(line: 131, column: 9, scope: !14696)
!14707 = !DILocation(line: 131, column: 16, scope: !14696)
!14708 = !DILocation(line: 132, column: 21, scope: !14696)
!14709 = !DILocation(line: 132, column: 25, scope: !14696)
!14710 = !DILocation(line: 132, column: 40, scope: !14696)
!14711 = !DILocation(line: 132, column: 44, scope: !14696)
!14712 = !DILocation(line: 132, column: 48, scope: !14696)
!14713 = !DILocation(line: 132, column: 55, scope: !14696)
!14714 = !DILocation(line: 132, column: 5, scope: !14696)
!14715 = !DILocation(line: 132, column: 9, scope: !14696)
!14716 = !DILocation(line: 132, column: 19, scope: !14696)
!14717 = !DILocation(line: 133, column: 5, scope: !14696)
!14718 = !DILocation(line: 133, column: 9, scope: !14696)
!14719 = !DILocation(line: 133, column: 21, scope: !14696)
!14720 = !DILocation(line: 134, column: 9, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14696, file: !289, line: 134, column: 9)
!14722 = !DILocation(line: 134, column: 13, scope: !14721)
!14723 = !DILocation(line: 134, column: 9, scope: !14696)
!14724 = !DILocation(line: 135, column: 24, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14721, file: !289, line: 134, column: 26)
!14726 = !DILocation(line: 135, column: 28, scope: !14725)
!14727 = !DILocation(line: 135, column: 41, scope: !14725)
!14728 = !DILocation(line: 135, column: 45, scope: !14725)
!14729 = !DILocation(line: 135, column: 38, scope: !14725)
!14730 = !DILocation(line: 136, column: 3, scope: !14725)
!14731 = !DILocation(line: 136, column: 7, scope: !14725)
!14732 = !DILocation(line: 136, column: 26, scope: !14725)
!14733 = !DILocation(line: 136, column: 30, scope: !14725)
!14734 = !DILocation(line: 136, column: 24, scope: !14725)
!14735 = !DILocation(line: 136, column: 17, scope: !14725)
!14736 = !DILocation(line: 135, column: 58, scope: !14725)
!14737 = !DILocation(line: 135, column: 7, scope: !14725)
!14738 = !DILocation(line: 135, column: 11, scope: !14725)
!14739 = !DILocation(line: 135, column: 21, scope: !14725)
!14740 = !DILocation(line: 137, column: 5, scope: !14725)
!14741 = !DILocation(line: 138, column: 3, scope: !14696)
!14742 = !DILocation(line: 139, column: 1, scope: !14654)
!14743 = distinct !DISubprogram(name: "jbig2_huffman_advance", scope: !289, file: !289, line: 143, type: !14744, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14744 = !DISubroutineType(types: !14745)
!14745 = !{null, !291, !6}
!14746 = !DILocalVariable(name: "hs", arg: 1, scope: !14743, file: !289, line: 143, type: !291)
!14747 = !DILocation(line: 143, column: 47, scope: !14743)
!14748 = !DILocalVariable(name: "offset", arg: 2, scope: !14743, file: !289, line: 143, type: !6)
!14749 = !DILocation(line: 143, column: 55, scope: !14743)
!14750 = !DILocalVariable(name: "ws", scope: !14743, file: !289, line: 145, type: !301)
!14751 = !DILocation(line: 145, column: 20, scope: !14743)
!14752 = !DILocation(line: 145, column: 25, scope: !14743)
!14753 = !DILocation(line: 145, column: 29, scope: !14743)
!14754 = !DILocation(line: 147, column: 17, scope: !14743)
!14755 = !DILocation(line: 147, column: 24, scope: !14743)
!14756 = !DILocation(line: 147, column: 3, scope: !14743)
!14757 = !DILocation(line: 147, column: 7, scope: !14743)
!14758 = !DILocation(line: 147, column: 14, scope: !14743)
!14759 = !DILocation(line: 148, column: 23, scope: !14743)
!14760 = !DILocation(line: 148, column: 30, scope: !14743)
!14761 = !DILocation(line: 148, column: 35, scope: !14743)
!14762 = !DILocation(line: 148, column: 3, scope: !14743)
!14763 = !DILocation(line: 148, column: 7, scope: !14743)
!14764 = !DILocation(line: 148, column: 19, scope: !14743)
!14765 = !DILocation(line: 149, column: 7, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14743, file: !289, line: 149, column: 7)
!14767 = !DILocation(line: 149, column: 11, scope: !14766)
!14768 = !DILocation(line: 149, column: 23, scope: !14766)
!14769 = !DILocation(line: 149, column: 7, scope: !14743)
!14770 = !DILocation(line: 150, column: 5, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14766, file: !289, line: 149, column: 30)
!14772 = !DILocation(line: 150, column: 9, scope: !14771)
!14773 = !DILocation(line: 150, column: 16, scope: !14771)
!14774 = !DILocation(line: 151, column: 5, scope: !14771)
!14775 = !DILocation(line: 151, column: 9, scope: !14771)
!14776 = !DILocation(line: 151, column: 21, scope: !14771)
!14777 = !DILocation(line: 152, column: 3, scope: !14771)
!14778 = !DILocation(line: 153, column: 19, scope: !14743)
!14779 = !DILocation(line: 153, column: 23, scope: !14743)
!14780 = !DILocation(line: 153, column: 38, scope: !14743)
!14781 = !DILocation(line: 153, column: 42, scope: !14743)
!14782 = !DILocation(line: 153, column: 46, scope: !14743)
!14783 = !DILocation(line: 153, column: 3, scope: !14743)
!14784 = !DILocation(line: 153, column: 7, scope: !14743)
!14785 = !DILocation(line: 153, column: 17, scope: !14743)
!14786 = !DILocation(line: 154, column: 19, scope: !14743)
!14787 = !DILocation(line: 154, column: 23, scope: !14743)
!14788 = !DILocation(line: 154, column: 38, scope: !14743)
!14789 = !DILocation(line: 154, column: 42, scope: !14743)
!14790 = !DILocation(line: 154, column: 46, scope: !14743)
!14791 = !DILocation(line: 154, column: 53, scope: !14743)
!14792 = !DILocation(line: 154, column: 3, scope: !14743)
!14793 = !DILocation(line: 154, column: 7, scope: !14743)
!14794 = !DILocation(line: 154, column: 17, scope: !14743)
!14795 = !DILocation(line: 155, column: 7, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14743, file: !289, line: 155, column: 7)
!14797 = !DILocation(line: 155, column: 11, scope: !14796)
!14798 = !DILocation(line: 155, column: 23, scope: !14796)
!14799 = !DILocation(line: 155, column: 7, scope: !14743)
!14800 = !DILocation(line: 156, column: 22, scope: !14796)
!14801 = !DILocation(line: 156, column: 26, scope: !14796)
!14802 = !DILocation(line: 156, column: 39, scope: !14796)
!14803 = !DILocation(line: 156, column: 43, scope: !14796)
!14804 = !DILocation(line: 156, column: 36, scope: !14796)
!14805 = !DILocation(line: 157, column: 3, scope: !14796)
!14806 = !DILocation(line: 157, column: 7, scope: !14796)
!14807 = !DILocation(line: 157, column: 26, scope: !14796)
!14808 = !DILocation(line: 157, column: 30, scope: !14796)
!14809 = !DILocation(line: 157, column: 24, scope: !14796)
!14810 = !DILocation(line: 157, column: 17, scope: !14796)
!14811 = !DILocation(line: 156, column: 56, scope: !14796)
!14812 = !DILocation(line: 156, column: 5, scope: !14796)
!14813 = !DILocation(line: 156, column: 9, scope: !14796)
!14814 = !DILocation(line: 156, column: 19, scope: !14796)
!14815 = !DILocation(line: 158, column: 1, scope: !14743)
!14816 = distinct !DISubprogram(name: "jbig2_huffman_offset", scope: !289, file: !289, line: 164, type: !14817, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14817 = !DISubroutineType(types: !14818)
!14818 = !{!6, !291}
!14819 = !DILocalVariable(name: "hs", arg: 1, scope: !14816, file: !289, line: 164, type: !291)
!14820 = !DILocation(line: 164, column: 41, scope: !14816)
!14821 = !DILocation(line: 166, column: 10, scope: !14816)
!14822 = !DILocation(line: 166, column: 14, scope: !14816)
!14823 = !DILocation(line: 166, column: 24, scope: !14816)
!14824 = !DILocation(line: 166, column: 28, scope: !14816)
!14825 = !DILocation(line: 166, column: 40, scope: !14816)
!14826 = !DILocation(line: 166, column: 21, scope: !14816)
!14827 = !DILocation(line: 166, column: 3, scope: !14816)
!14828 = distinct !DISubprogram(name: "jbig2_huffman_get_bits", scope: !289, file: !289, line: 173, type: !14829, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14829 = !DISubroutineType(types: !14830)
!14830 = !{!141, !291, !5919}
!14831 = !DILocalVariable(name: "hs", arg: 1, scope: !14828, file: !289, line: 173, type: !291)
!14832 = !DILocation(line: 173, column: 44, scope: !14828)
!14833 = !DILocalVariable(name: "bits", arg: 2, scope: !14828, file: !289, line: 173, type: !5919)
!14834 = !DILocation(line: 173, column: 58, scope: !14828)
!14835 = !DILocalVariable(name: "this_word", scope: !14828, file: !289, line: 175, type: !32)
!14836 = !DILocation(line: 175, column: 12, scope: !14828)
!14837 = !DILocation(line: 175, column: 24, scope: !14828)
!14838 = !DILocation(line: 175, column: 28, scope: !14828)
!14839 = !DILocalVariable(name: "result", scope: !14828, file: !289, line: 176, type: !141)
!14840 = !DILocation(line: 176, column: 11, scope: !14828)
!14841 = !DILocation(line: 178, column: 12, scope: !14828)
!14842 = !DILocation(line: 178, column: 31, scope: !14828)
!14843 = !DILocation(line: 178, column: 29, scope: !14828)
!14844 = !DILocation(line: 178, column: 22, scope: !14828)
!14845 = !DILocation(line: 178, column: 10, scope: !14828)
!14846 = !DILocation(line: 179, column: 22, scope: !14828)
!14847 = !DILocation(line: 179, column: 3, scope: !14828)
!14848 = !DILocation(line: 179, column: 7, scope: !14828)
!14849 = !DILocation(line: 179, column: 19, scope: !14828)
!14850 = !DILocation(line: 180, column: 7, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14828, file: !289, line: 180, column: 7)
!14852 = !DILocation(line: 180, column: 11, scope: !14851)
!14853 = !DILocation(line: 180, column: 23, scope: !14851)
!14854 = !DILocation(line: 180, column: 7, scope: !14828)
!14855 = !DILocation(line: 181, column: 5, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14851, file: !289, line: 180, column: 30)
!14857 = !DILocation(line: 181, column: 9, scope: !14856)
!14858 = !DILocation(line: 181, column: 16, scope: !14856)
!14859 = !DILocation(line: 182, column: 5, scope: !14856)
!14860 = !DILocation(line: 182, column: 9, scope: !14856)
!14861 = !DILocation(line: 182, column: 21, scope: !14856)
!14862 = !DILocation(line: 183, column: 21, scope: !14856)
!14863 = !DILocation(line: 183, column: 25, scope: !14856)
!14864 = !DILocation(line: 183, column: 5, scope: !14856)
!14865 = !DILocation(line: 183, column: 9, scope: !14856)
!14866 = !DILocation(line: 183, column: 19, scope: !14856)
!14867 = !DILocation(line: 184, column: 21, scope: !14856)
!14868 = !DILocation(line: 184, column: 25, scope: !14856)
!14869 = !DILocation(line: 184, column: 29, scope: !14856)
!14870 = !DILocation(line: 184, column: 43, scope: !14856)
!14871 = !DILocation(line: 184, column: 47, scope: !14856)
!14872 = !DILocation(line: 184, column: 51, scope: !14856)
!14873 = !DILocation(line: 184, column: 55, scope: !14856)
!14874 = !DILocation(line: 184, column: 62, scope: !14856)
!14875 = !DILocation(line: 184, column: 5, scope: !14856)
!14876 = !DILocation(line: 184, column: 9, scope: !14856)
!14877 = !DILocation(line: 184, column: 19, scope: !14856)
!14878 = !DILocation(line: 185, column: 9, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14856, file: !289, line: 185, column: 9)
!14880 = !DILocation(line: 185, column: 13, scope: !14879)
!14881 = !DILocation(line: 185, column: 9, scope: !14856)
!14882 = !DILocation(line: 186, column: 24, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14879, file: !289, line: 185, column: 26)
!14884 = !DILocation(line: 186, column: 28, scope: !14883)
!14885 = !DILocation(line: 186, column: 41, scope: !14883)
!14886 = !DILocation(line: 186, column: 45, scope: !14883)
!14887 = !DILocation(line: 186, column: 38, scope: !14883)
!14888 = !DILocation(line: 187, column: 3, scope: !14883)
!14889 = !DILocation(line: 187, column: 7, scope: !14883)
!14890 = !DILocation(line: 187, column: 26, scope: !14883)
!14891 = !DILocation(line: 187, column: 30, scope: !14883)
!14892 = !DILocation(line: 187, column: 24, scope: !14883)
!14893 = !DILocation(line: 187, column: 17, scope: !14883)
!14894 = !DILocation(line: 186, column: 58, scope: !14883)
!14895 = !DILocation(line: 186, column: 7, scope: !14883)
!14896 = !DILocation(line: 186, column: 11, scope: !14883)
!14897 = !DILocation(line: 186, column: 21, scope: !14883)
!14898 = !DILocation(line: 188, column: 5, scope: !14883)
!14899 = !DILocation(line: 189, column: 24, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14879, file: !289, line: 188, column: 12)
!14901 = !DILocation(line: 189, column: 28, scope: !14900)
!14902 = !DILocation(line: 189, column: 41, scope: !14900)
!14903 = !DILocation(line: 189, column: 45, scope: !14900)
!14904 = !DILocation(line: 189, column: 38, scope: !14900)
!14905 = !DILocation(line: 189, column: 7, scope: !14900)
!14906 = !DILocation(line: 189, column: 11, scope: !14900)
!14907 = !DILocation(line: 189, column: 21, scope: !14900)
!14908 = !DILocation(line: 191, column: 3, scope: !14856)
!14909 = !DILocation(line: 192, column: 22, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14851, file: !289, line: 191, column: 10)
!14911 = !DILocation(line: 192, column: 35, scope: !14910)
!14912 = !DILocation(line: 192, column: 32, scope: !14910)
!14913 = !DILocation(line: 193, column: 3, scope: !14910)
!14914 = !DILocation(line: 193, column: 7, scope: !14910)
!14915 = !DILocation(line: 193, column: 26, scope: !14910)
!14916 = !DILocation(line: 193, column: 30, scope: !14910)
!14917 = !DILocation(line: 193, column: 24, scope: !14910)
!14918 = !DILocation(line: 193, column: 17, scope: !14910)
!14919 = !DILocation(line: 192, column: 41, scope: !14910)
!14920 = !DILocation(line: 192, column: 5, scope: !14910)
!14921 = !DILocation(line: 192, column: 9, scope: !14910)
!14922 = !DILocation(line: 192, column: 19, scope: !14910)
!14923 = !DILocation(line: 196, column: 10, scope: !14828)
!14924 = !DILocation(line: 196, column: 3, scope: !14828)
!14925 = distinct !DISubprogram(name: "jbig2_huffman_get", scope: !289, file: !289, line: 200, type: !14926, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!14926 = !DISubroutineType(types: !14927)
!14927 = !{!141, !291, !14928, !14930}
!14928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14929, size: 64)
!14929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !310)
!14930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!14931 = !DILocalVariable(name: "hs", arg: 1, scope: !14925, file: !289, line: 200, type: !291)
!14932 = !DILocation(line: 200, column: 39, scope: !14925)
!14933 = !DILocalVariable(name: "table", arg: 2, scope: !14925, file: !289, line: 201, type: !14928)
!14934 = !DILocation(line: 201, column: 31, scope: !14925)
!14935 = !DILocalVariable(name: "oob", arg: 3, scope: !14925, file: !289, line: 201, type: !14930)
!14936 = !DILocation(line: 201, column: 44, scope: !14925)
!14937 = !DILocalVariable(name: "entry", scope: !14925, file: !289, line: 203, type: !315)
!14938 = !DILocation(line: 203, column: 22, scope: !14925)
!14939 = !DILocalVariable(name: "flags", scope: !14925, file: !289, line: 204, type: !145)
!14940 = !DILocation(line: 204, column: 8, scope: !14925)
!14941 = !DILocalVariable(name: "offset_bits", scope: !14925, file: !289, line: 205, type: !6)
!14942 = !DILocation(line: 205, column: 7, scope: !14925)
!14943 = !DILocation(line: 205, column: 21, scope: !14925)
!14944 = !DILocation(line: 205, column: 25, scope: !14925)
!14945 = !DILocalVariable(name: "this_word", scope: !14925, file: !289, line: 206, type: !32)
!14946 = !DILocation(line: 206, column: 12, scope: !14925)
!14947 = !DILocation(line: 206, column: 24, scope: !14925)
!14948 = !DILocation(line: 206, column: 28, scope: !14925)
!14949 = !DILocalVariable(name: "next_word", scope: !14925, file: !289, line: 207, type: !32)
!14950 = !DILocation(line: 207, column: 12, scope: !14925)
!14951 = !DILocalVariable(name: "RANGELEN", scope: !14925, file: !289, line: 208, type: !6)
!14952 = !DILocation(line: 208, column: 7, scope: !14925)
!14953 = !DILocalVariable(name: "result", scope: !14925, file: !289, line: 209, type: !141)
!14954 = !DILocation(line: 209, column: 11, scope: !14925)
!14955 = !DILocation(line: 211, column: 3, scope: !14925)
!14956 = !DILocalVariable(name: "log_table_size", scope: !14957, file: !289, line: 213, type: !6)
!14957 = distinct !DILexicalBlock(scope: !14958, file: !289, line: 212, column: 5)
!14958 = distinct !DILexicalBlock(scope: !14959, file: !289, line: 211, column: 3)
!14959 = distinct !DILexicalBlock(scope: !14925, file: !289, line: 211, column: 3)
!14960 = !DILocation(line: 213, column: 11, scope: !14957)
!14961 = !DILocation(line: 213, column: 28, scope: !14957)
!14962 = !DILocation(line: 213, column: 35, scope: !14957)
!14963 = !DILocalVariable(name: "PREFLEN", scope: !14957, file: !289, line: 214, type: !6)
!14964 = !DILocation(line: 214, column: 11, scope: !14957)
!14965 = !DILocation(line: 216, column: 16, scope: !14957)
!14966 = !DILocation(line: 216, column: 23, scope: !14957)
!14967 = !DILocation(line: 216, column: 31, scope: !14957)
!14968 = !DILocation(line: 216, column: 50, scope: !14957)
!14969 = !DILocation(line: 216, column: 48, scope: !14957)
!14970 = !DILocation(line: 216, column: 41, scope: !14957)
!14971 = !DILocation(line: 216, column: 13, scope: !14957)
!14972 = !DILocation(line: 217, column: 15, scope: !14957)
!14973 = !DILocation(line: 217, column: 22, scope: !14957)
!14974 = !DILocation(line: 217, column: 13, scope: !14957)
!14975 = !DILocation(line: 218, column: 17, scope: !14957)
!14976 = !DILocation(line: 218, column: 24, scope: !14957)
!14977 = !DILocation(line: 218, column: 15, scope: !14957)
!14978 = !DILocation(line: 220, column: 19, scope: !14957)
!14979 = !DILocation(line: 220, column: 23, scope: !14957)
!14980 = !DILocation(line: 220, column: 17, scope: !14957)
!14981 = !DILocation(line: 221, column: 22, scope: !14957)
!14982 = !DILocation(line: 221, column: 19, scope: !14957)
!14983 = !DILocation(line: 222, column: 11, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14957, file: !289, line: 222, column: 11)
!14985 = !DILocation(line: 222, column: 23, scope: !14984)
!14986 = !DILocation(line: 222, column: 11, scope: !14957)
!14987 = !DILocalVariable(name: "ws", scope: !14988, file: !289, line: 224, type: !301)
!14988 = distinct !DILexicalBlock(scope: !14984, file: !289, line: 223, column: 2)
!14989 = !DILocation(line: 224, column: 21, scope: !14988)
!14990 = !DILocation(line: 224, column: 26, scope: !14988)
!14991 = !DILocation(line: 224, column: 30, scope: !14988)
!14992 = !DILocation(line: 225, column: 16, scope: !14988)
!14993 = !DILocation(line: 225, column: 14, scope: !14988)
!14994 = !DILocation(line: 226, column: 4, scope: !14988)
!14995 = !DILocation(line: 226, column: 8, scope: !14988)
!14996 = !DILocation(line: 226, column: 15, scope: !14988)
!14997 = !DILocation(line: 227, column: 16, scope: !14988)
!14998 = !DILocation(line: 227, column: 20, scope: !14988)
!14999 = !DILocation(line: 227, column: 35, scope: !14988)
!15000 = !DILocation(line: 227, column: 39, scope: !14988)
!15001 = !DILocation(line: 227, column: 43, scope: !14988)
!15002 = !DILocation(line: 227, column: 50, scope: !14988)
!15003 = !DILocation(line: 227, column: 14, scope: !14988)
!15004 = !DILocation(line: 228, column: 16, scope: !14988)
!15005 = !DILocation(line: 229, column: 20, scope: !14988)
!15006 = !DILocation(line: 229, column: 4, scope: !14988)
!15007 = !DILocation(line: 229, column: 8, scope: !14988)
!15008 = !DILocation(line: 229, column: 18, scope: !14988)
!15009 = !DILocation(line: 230, column: 14, scope: !14988)
!15010 = !DILocation(line: 230, column: 12, scope: !14988)
!15011 = !DILocation(line: 231, column: 2, scope: !14988)
!15012 = !DILocation(line: 232, column: 11, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !14957, file: !289, line: 232, column: 11)
!15014 = !DILocation(line: 232, column: 11, scope: !14957)
!15015 = !DILocation(line: 233, column: 15, scope: !15013)
!15016 = !DILocation(line: 233, column: 28, scope: !15013)
!15017 = !DILocation(line: 233, column: 25, scope: !15013)
!15018 = !DILocation(line: 234, column: 5, scope: !15013)
!15019 = !DILocation(line: 234, column: 24, scope: !15013)
!15020 = !DILocation(line: 234, column: 22, scope: !15013)
!15021 = !DILocation(line: 234, column: 15, scope: !15013)
!15022 = !DILocation(line: 233, column: 37, scope: !15013)
!15023 = !DILocation(line: 233, column: 12, scope: !15013)
!15024 = !DILocation(line: 233, column: 2, scope: !15013)
!15025 = !DILocation(line: 235, column: 11, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !14957, file: !289, line: 235, column: 11)
!15027 = !DILocation(line: 235, column: 17, scope: !15026)
!15028 = !DILocation(line: 235, column: 11, scope: !14957)
!15029 = !DILocation(line: 237, column: 12, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15026, file: !289, line: 236, column: 2)
!15031 = !DILocation(line: 237, column: 19, scope: !15030)
!15032 = !DILocation(line: 237, column: 21, scope: !15030)
!15033 = !DILocation(line: 237, column: 10, scope: !15030)
!15034 = !DILocation(line: 238, column: 2, scope: !15030)
!15035 = !DILocation(line: 240, column: 2, scope: !15026)
!15036 = !DILocation(line: 211, column: 3, scope: !14958)
!15037 = distinct !{!15037, !15038, !15039}
!15038 = !DILocation(line: 211, column: 3, scope: !14959)
!15039 = !DILocation(line: 241, column: 5, scope: !14959)
!15040 = !DILocation(line: 242, column: 12, scope: !14925)
!15041 = !DILocation(line: 242, column: 19, scope: !14925)
!15042 = !DILocation(line: 242, column: 21, scope: !14925)
!15043 = !DILocation(line: 242, column: 10, scope: !14925)
!15044 = !DILocation(line: 243, column: 14, scope: !14925)
!15045 = !DILocation(line: 243, column: 21, scope: !14925)
!15046 = !DILocation(line: 243, column: 12, scope: !14925)
!15047 = !DILocation(line: 244, column: 7, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !14925, file: !289, line: 244, column: 7)
!15049 = !DILocation(line: 244, column: 16, scope: !15048)
!15050 = !DILocation(line: 244, column: 7, scope: !14925)
!15051 = !DILocalVariable(name: "HTOFFSET", scope: !15052, file: !289, line: 246, type: !141)
!15052 = distinct !DILexicalBlock(scope: !15048, file: !289, line: 245, column: 5)
!15053 = !DILocation(line: 246, column: 15, scope: !15052)
!15054 = !DILocation(line: 248, column: 18, scope: !15052)
!15055 = !DILocation(line: 248, column: 37, scope: !15052)
!15056 = !DILocation(line: 248, column: 35, scope: !15052)
!15057 = !DILocation(line: 248, column: 28, scope: !15052)
!15058 = !DILocation(line: 248, column: 16, scope: !15052)
!15059 = !DILocation(line: 249, column: 11, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15052, file: !289, line: 249, column: 11)
!15061 = !DILocation(line: 249, column: 17, scope: !15060)
!15062 = !DILocation(line: 249, column: 11, scope: !15052)
!15063 = !DILocation(line: 250, column: 12, scope: !15060)
!15064 = !DILocation(line: 250, column: 9, scope: !15060)
!15065 = !DILocation(line: 250, column: 2, scope: !15060)
!15066 = !DILocation(line: 252, column: 12, scope: !15060)
!15067 = !DILocation(line: 252, column: 9, scope: !15060)
!15068 = !DILocation(line: 254, column: 22, scope: !15052)
!15069 = !DILocation(line: 254, column: 19, scope: !15052)
!15070 = !DILocation(line: 255, column: 11, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15052, file: !289, line: 255, column: 11)
!15072 = !DILocation(line: 255, column: 23, scope: !15071)
!15073 = !DILocation(line: 255, column: 11, scope: !15052)
!15074 = !DILocalVariable(name: "ws", scope: !15075, file: !289, line: 257, type: !301)
!15075 = distinct !DILexicalBlock(scope: !15071, file: !289, line: 256, column: 2)
!15076 = !DILocation(line: 257, column: 21, scope: !15075)
!15077 = !DILocation(line: 257, column: 26, scope: !15075)
!15078 = !DILocation(line: 257, column: 30, scope: !15075)
!15079 = !DILocation(line: 258, column: 16, scope: !15075)
!15080 = !DILocation(line: 258, column: 14, scope: !15075)
!15081 = !DILocation(line: 259, column: 4, scope: !15075)
!15082 = !DILocation(line: 259, column: 8, scope: !15075)
!15083 = !DILocation(line: 259, column: 15, scope: !15075)
!15084 = !DILocation(line: 260, column: 16, scope: !15075)
!15085 = !DILocation(line: 260, column: 20, scope: !15075)
!15086 = !DILocation(line: 260, column: 35, scope: !15075)
!15087 = !DILocation(line: 260, column: 39, scope: !15075)
!15088 = !DILocation(line: 260, column: 43, scope: !15075)
!15089 = !DILocation(line: 260, column: 50, scope: !15075)
!15090 = !DILocation(line: 260, column: 14, scope: !15075)
!15091 = !DILocation(line: 261, column: 16, scope: !15075)
!15092 = !DILocation(line: 262, column: 20, scope: !15075)
!15093 = !DILocation(line: 262, column: 4, scope: !15075)
!15094 = !DILocation(line: 262, column: 8, scope: !15075)
!15095 = !DILocation(line: 262, column: 18, scope: !15075)
!15096 = !DILocation(line: 263, column: 15, scope: !15075)
!15097 = !DILocation(line: 263, column: 13, scope: !15075)
!15098 = !DILocation(line: 264, column: 2, scope: !15075)
!15099 = !DILocation(line: 265, column: 5, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15052, file: !289, line: 265, column: 5)
!15101 = !DILocation(line: 265, column: 5, scope: !15052)
!15102 = !DILocation(line: 266, column: 20, scope: !15100)
!15103 = !DILocation(line: 266, column: 33, scope: !15100)
!15104 = !DILocation(line: 266, column: 30, scope: !15100)
!15105 = !DILocation(line: 267, column: 3, scope: !15100)
!15106 = !DILocation(line: 267, column: 22, scope: !15100)
!15107 = !DILocation(line: 267, column: 20, scope: !15100)
!15108 = !DILocation(line: 267, column: 13, scope: !15100)
!15109 = !DILocation(line: 266, column: 43, scope: !15100)
!15110 = !DILocation(line: 266, column: 17, scope: !15100)
!15111 = !DILocation(line: 266, column: 7, scope: !15100)
!15112 = !DILocation(line: 268, column: 5, scope: !15052)
!15113 = !DILocation(line: 270, column: 19, scope: !14925)
!15114 = !DILocation(line: 270, column: 3, scope: !14925)
!15115 = !DILocation(line: 270, column: 7, scope: !14925)
!15116 = !DILocation(line: 270, column: 17, scope: !14925)
!15117 = !DILocation(line: 271, column: 21, scope: !14925)
!15118 = !DILocation(line: 271, column: 3, scope: !14925)
!15119 = !DILocation(line: 271, column: 7, scope: !14925)
!15120 = !DILocation(line: 271, column: 19, scope: !14925)
!15121 = !DILocation(line: 273, column: 7, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !14925, file: !289, line: 273, column: 7)
!15123 = !DILocation(line: 273, column: 11, scope: !15122)
!15124 = !DILocation(line: 273, column: 7, scope: !14925)
!15125 = !DILocation(line: 274, column: 13, scope: !15122)
!15126 = !DILocation(line: 274, column: 19, scope: !15122)
!15127 = !DILocation(line: 274, column: 6, scope: !15122)
!15128 = !DILocation(line: 274, column: 10, scope: !15122)
!15129 = !DILocation(line: 274, column: 5, scope: !15122)
!15130 = !DILocation(line: 276, column: 10, scope: !14925)
!15131 = !DILocation(line: 276, column: 3, scope: !14925)
!15132 = distinct !DISubprogram(name: "jbig2_build_huffman_table", scope: !289, file: !289, line: 288, type: !15133, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!15133 = !DISubroutineType(types: !15134)
!15134 = !{!309, !14522, !15135}
!15135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!15136 = !DILocalVariable(name: "ctx", arg: 1, scope: !15132, file: !289, line: 288, type: !14522)
!15137 = !DILocation(line: 288, column: 38, scope: !15132)
!15138 = !DILocalVariable(name: "params", arg: 2, scope: !15132, file: !289, line: 288, type: !15135)
!15139 = !DILocation(line: 288, column: 69, scope: !15132)
!15140 = !DILocalVariable(name: "LENCOUNT", scope: !15132, file: !289, line: 290, type: !15141)
!15141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2097152, elements: !15142)
!15142 = !{!15143}
!15143 = !DISubrange(count: 65536)
!15144 = !DILocation(line: 290, column: 7, scope: !15132)
!15145 = !DILocalVariable(name: "LENMAX", scope: !15132, file: !289, line: 291, type: !6)
!15146 = !DILocation(line: 291, column: 7, scope: !15132)
!15147 = !DILocalVariable(name: "lines", scope: !15132, file: !289, line: 292, type: !338)
!15148 = !DILocation(line: 292, column: 27, scope: !15132)
!15149 = !DILocation(line: 292, column: 35, scope: !15132)
!15150 = !DILocation(line: 292, column: 43, scope: !15132)
!15151 = !DILocalVariable(name: "n_lines", scope: !15132, file: !289, line: 293, type: !6)
!15152 = !DILocation(line: 293, column: 7, scope: !15132)
!15153 = !DILocation(line: 293, column: 17, scope: !15132)
!15154 = !DILocation(line: 293, column: 25, scope: !15132)
!15155 = !DILocalVariable(name: "i", scope: !15132, file: !289, line: 294, type: !6)
!15156 = !DILocation(line: 294, column: 7, scope: !15132)
!15157 = !DILocalVariable(name: "j", scope: !15132, file: !289, line: 294, type: !6)
!15158 = !DILocation(line: 294, column: 10, scope: !15132)
!15159 = !DILocalVariable(name: "max_j", scope: !15132, file: !289, line: 295, type: !6)
!15160 = !DILocation(line: 295, column: 7, scope: !15132)
!15161 = !DILocalVariable(name: "log_table_size", scope: !15132, file: !289, line: 296, type: !6)
!15162 = !DILocation(line: 296, column: 7, scope: !15132)
!15163 = !DILocalVariable(name: "result", scope: !15132, file: !289, line: 297, type: !309)
!15164 = !DILocation(line: 297, column: 22, scope: !15132)
!15165 = !DILocalVariable(name: "entries", scope: !15132, file: !289, line: 298, type: !315)
!15166 = !DILocation(line: 298, column: 22, scope: !15132)
!15167 = !DILocalVariable(name: "CURLEN", scope: !15132, file: !289, line: 299, type: !6)
!15168 = !DILocation(line: 299, column: 7, scope: !15132)
!15169 = !DILocalVariable(name: "firstcode", scope: !15132, file: !289, line: 300, type: !6)
!15170 = !DILocation(line: 300, column: 7, scope: !15132)
!15171 = !DILocalVariable(name: "CURCODE", scope: !15132, file: !289, line: 301, type: !6)
!15172 = !DILocation(line: 301, column: 7, scope: !15132)
!15173 = !DILocalVariable(name: "CURTEMP", scope: !15132, file: !289, line: 302, type: !6)
!15174 = !DILocation(line: 302, column: 7, scope: !15132)
!15175 = !DILocation(line: 305, column: 10, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15132, file: !289, line: 305, column: 3)
!15177 = !DILocation(line: 305, column: 8, scope: !15176)
!15178 = !DILocation(line: 305, column: 15, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15176, file: !289, line: 305, column: 3)
!15180 = !DILocation(line: 305, column: 19, scope: !15179)
!15181 = !DILocation(line: 305, column: 27, scope: !15179)
!15182 = !DILocation(line: 305, column: 17, scope: !15179)
!15183 = !DILocation(line: 305, column: 3, scope: !15176)
!15184 = !DILocalVariable(name: "PREFLEN", scope: !15185, file: !289, line: 307, type: !6)
!15185 = distinct !DILexicalBlock(scope: !15179, file: !289, line: 306, column: 5)
!15186 = !DILocation(line: 307, column: 11, scope: !15185)
!15187 = !DILocation(line: 307, column: 21, scope: !15185)
!15188 = !DILocation(line: 307, column: 27, scope: !15185)
!15189 = !DILocation(line: 307, column: 30, scope: !15185)
!15190 = !DILocalVariable(name: "lts", scope: !15185, file: !289, line: 308, type: !6)
!15191 = !DILocation(line: 308, column: 11, scope: !15185)
!15192 = !DILocation(line: 310, column: 11, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15185, file: !289, line: 310, column: 11)
!15194 = !DILocation(line: 310, column: 21, scope: !15193)
!15195 = !DILocation(line: 310, column: 19, scope: !15193)
!15196 = !DILocation(line: 310, column: 11, scope: !15185)
!15197 = !DILocation(line: 312, column: 13, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !289, line: 312, column: 4)
!15199 = distinct !DILexicalBlock(scope: !15193, file: !289, line: 311, column: 3)
!15200 = !DILocation(line: 312, column: 20, scope: !15198)
!15201 = !DILocation(line: 312, column: 11, scope: !15198)
!15202 = !DILocation(line: 312, column: 9, scope: !15198)
!15203 = !DILocation(line: 312, column: 25, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15198, file: !289, line: 312, column: 4)
!15205 = !DILocation(line: 312, column: 29, scope: !15204)
!15206 = !DILocation(line: 312, column: 37, scope: !15204)
!15207 = !DILocation(line: 312, column: 27, scope: !15204)
!15208 = !DILocation(line: 312, column: 4, scope: !15198)
!15209 = !DILocation(line: 313, column: 14, scope: !15204)
!15210 = !DILocation(line: 313, column: 5, scope: !15204)
!15211 = !DILocation(line: 313, column: 17, scope: !15204)
!15212 = !DILocation(line: 312, column: 43, scope: !15204)
!15213 = !DILocation(line: 312, column: 4, scope: !15204)
!15214 = distinct !{!15214, !15208, !15215}
!15215 = !DILocation(line: 313, column: 19, scope: !15198)
!15216 = !DILocation(line: 314, column: 13, scope: !15199)
!15217 = !DILocation(line: 314, column: 11, scope: !15199)
!15218 = !DILocation(line: 315, column: 3, scope: !15199)
!15219 = !DILocation(line: 316, column: 16, scope: !15185)
!15220 = !DILocation(line: 316, column: 7, scope: !15185)
!15221 = !DILocation(line: 316, column: 24, scope: !15185)
!15222 = !DILocation(line: 318, column: 13, scope: !15185)
!15223 = !DILocation(line: 318, column: 23, scope: !15185)
!15224 = !DILocation(line: 318, column: 29, scope: !15185)
!15225 = !DILocation(line: 318, column: 32, scope: !15185)
!15226 = !DILocation(line: 318, column: 21, scope: !15185)
!15227 = !DILocation(line: 318, column: 11, scope: !15185)
!15228 = !DILocation(line: 319, column: 11, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15185, file: !289, line: 319, column: 11)
!15230 = !DILocation(line: 319, column: 15, scope: !15229)
!15231 = !DILocation(line: 319, column: 11, scope: !15185)
!15232 = !DILocation(line: 320, column: 9, scope: !15229)
!15233 = !DILocation(line: 320, column: 7, scope: !15229)
!15234 = !DILocation(line: 320, column: 3, scope: !15229)
!15235 = !DILocation(line: 321, column: 11, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15185, file: !289, line: 321, column: 11)
!15237 = !DILocation(line: 321, column: 15, scope: !15236)
!15238 = !DILocation(line: 321, column: 37, scope: !15236)
!15239 = !DILocation(line: 321, column: 40, scope: !15236)
!15240 = !DILocation(line: 321, column: 57, scope: !15236)
!15241 = !DILocation(line: 321, column: 55, scope: !15236)
!15242 = !DILocation(line: 321, column: 11, scope: !15185)
!15243 = !DILocation(line: 322, column: 20, scope: !15236)
!15244 = !DILocation(line: 322, column: 18, scope: !15236)
!15245 = !DILocation(line: 322, column: 3, scope: !15236)
!15246 = !DILocation(line: 323, column: 5, scope: !15185)
!15247 = !DILocation(line: 305, column: 37, scope: !15179)
!15248 = !DILocation(line: 305, column: 3, scope: !15179)
!15249 = distinct !{!15249, !15183, !15250}
!15250 = !DILocation(line: 323, column: 5, scope: !15176)
!15251 = !DILocation(line: 324, column: 15, scope: !15132)
!15252 = !DILocation(line: 325, column: 44, scope: !15132)
!15253 = !DILocation(line: 324, column: 3, scope: !15132)
!15254 = !DILocation(line: 326, column: 16, scope: !15132)
!15255 = !DILocation(line: 326, column: 13, scope: !15132)
!15256 = !DILocation(line: 326, column: 9, scope: !15132)
!15257 = !DILocation(line: 328, column: 45, scope: !15132)
!15258 = !DILocation(line: 328, column: 50, scope: !15132)
!15259 = !DILocation(line: 328, column: 33, scope: !15132)
!15260 = !DILocation(line: 328, column: 12, scope: !15132)
!15261 = !DILocation(line: 328, column: 10, scope: !15132)
!15262 = !DILocation(line: 329, column: 28, scope: !15132)
!15263 = !DILocation(line: 329, column: 3, scope: !15132)
!15264 = !DILocation(line: 329, column: 11, scope: !15132)
!15265 = !DILocation(line: 329, column: 26, scope: !15132)
!15266 = !DILocation(line: 330, column: 46, scope: !15132)
!15267 = !DILocation(line: 330, column: 51, scope: !15132)
!15268 = !DILocation(line: 330, column: 62, scope: !15132)
!15269 = !DILocation(line: 330, column: 68, scope: !15132)
!15270 = !DILocation(line: 330, column: 34, scope: !15132)
!15271 = !DILocation(line: 330, column: 13, scope: !15132)
!15272 = !DILocation(line: 330, column: 11, scope: !15132)
!15273 = !DILocation(line: 331, column: 21, scope: !15132)
!15274 = !DILocation(line: 331, column: 3, scope: !15132)
!15275 = !DILocation(line: 331, column: 11, scope: !15132)
!15276 = !DILocation(line: 331, column: 19, scope: !15132)
!15277 = !DILocation(line: 333, column: 3, scope: !15132)
!15278 = !DILocation(line: 333, column: 15, scope: !15132)
!15279 = !DILocation(line: 335, column: 15, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15132, file: !289, line: 335, column: 3)
!15281 = !DILocation(line: 335, column: 8, scope: !15280)
!15282 = !DILocation(line: 335, column: 20, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15280, file: !289, line: 335, column: 3)
!15284 = !DILocation(line: 335, column: 30, scope: !15283)
!15285 = !DILocation(line: 335, column: 27, scope: !15283)
!15286 = !DILocation(line: 335, column: 3, scope: !15280)
!15287 = !DILocalVariable(name: "shift", scope: !15288, file: !289, line: 337, type: !6)
!15288 = distinct !DILexicalBlock(scope: !15283, file: !289, line: 336, column: 5)
!15289 = !DILocation(line: 337, column: 11, scope: !15288)
!15290 = !DILocation(line: 337, column: 19, scope: !15288)
!15291 = !DILocation(line: 337, column: 36, scope: !15288)
!15292 = !DILocation(line: 337, column: 34, scope: !15288)
!15293 = !DILocation(line: 340, column: 20, scope: !15288)
!15294 = !DILocation(line: 340, column: 41, scope: !15288)
!15295 = !DILocation(line: 340, column: 48, scope: !15288)
!15296 = !DILocation(line: 340, column: 32, scope: !15288)
!15297 = !DILocation(line: 340, column: 30, scope: !15288)
!15298 = !DILocation(line: 340, column: 54, scope: !15288)
!15299 = !DILocation(line: 340, column: 17, scope: !15288)
!15300 = !DILocation(line: 341, column: 17, scope: !15288)
!15301 = !DILocation(line: 341, column: 15, scope: !15288)
!15302 = !DILocation(line: 343, column: 20, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15288, file: !289, line: 343, column: 7)
!15304 = !DILocation(line: 343, column: 12, scope: !15303)
!15305 = !DILocation(line: 343, column: 25, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15303, file: !289, line: 343, column: 7)
!15307 = !DILocation(line: 343, column: 35, scope: !15306)
!15308 = !DILocation(line: 343, column: 33, scope: !15306)
!15309 = !DILocation(line: 343, column: 7, scope: !15303)
!15310 = !DILocalVariable(name: "PREFLEN", scope: !15311, file: !289, line: 345, type: !6)
!15311 = distinct !DILexicalBlock(scope: !15306, file: !289, line: 344, column: 2)
!15312 = !DILocation(line: 345, column: 8, scope: !15311)
!15313 = !DILocation(line: 345, column: 18, scope: !15311)
!15314 = !DILocation(line: 345, column: 24, scope: !15311)
!15315 = !DILocation(line: 345, column: 33, scope: !15311)
!15316 = !DILocation(line: 346, column: 8, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15311, file: !289, line: 346, column: 8)
!15318 = !DILocation(line: 346, column: 19, scope: !15317)
!15319 = !DILocation(line: 346, column: 16, scope: !15317)
!15320 = !DILocation(line: 346, column: 8, scope: !15311)
!15321 = !DILocalVariable(name: "RANGELEN", scope: !15322, file: !289, line: 348, type: !6)
!15322 = distinct !DILexicalBlock(scope: !15317, file: !289, line: 347, column: 6)
!15323 = !DILocation(line: 348, column: 12, scope: !15322)
!15324 = !DILocation(line: 348, column: 23, scope: !15322)
!15325 = !DILocation(line: 348, column: 29, scope: !15322)
!15326 = !DILocation(line: 348, column: 38, scope: !15322)
!15327 = !DILocalVariable(name: "start_j", scope: !15322, file: !289, line: 349, type: !6)
!15328 = !DILocation(line: 349, column: 12, scope: !15322)
!15329 = !DILocation(line: 349, column: 22, scope: !15322)
!15330 = !DILocation(line: 349, column: 33, scope: !15322)
!15331 = !DILocation(line: 349, column: 30, scope: !15322)
!15332 = !DILocalVariable(name: "end_j", scope: !15322, file: !289, line: 350, type: !6)
!15333 = !DILocation(line: 350, column: 12, scope: !15322)
!15334 = !DILocation(line: 350, column: 21, scope: !15322)
!15335 = !DILocation(line: 350, column: 29, scope: !15322)
!15336 = !DILocation(line: 350, column: 37, scope: !15322)
!15337 = !DILocation(line: 350, column: 34, scope: !15322)
!15338 = !DILocalVariable(name: "eflags", scope: !15322, file: !289, line: 351, type: !145)
!15339 = !DILocation(line: 351, column: 13, scope: !15322)
!15340 = !DILocation(line: 353, column: 12, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15322, file: !289, line: 353, column: 12)
!15342 = !DILocation(line: 353, column: 20, scope: !15341)
!15343 = !DILocation(line: 353, column: 18, scope: !15341)
!15344 = !DILocation(line: 353, column: 12, scope: !15322)
!15345 = !DILocation(line: 354, column: 15, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15341, file: !289, line: 353, column: 27)
!15347 = !DILocation(line: 356, column: 5, scope: !15346)
!15348 = !DILocation(line: 356, column: 12, scope: !15346)
!15349 = !DILocation(line: 354, column: 3, scope: !15346)
!15350 = !DILocation(line: 357, column: 14, scope: !15346)
!15351 = !DILocation(line: 357, column: 19, scope: !15346)
!15352 = !DILocation(line: 357, column: 30, scope: !15346)
!15353 = !DILocation(line: 357, column: 38, scope: !15346)
!15354 = !DILocation(line: 357, column: 3, scope: !15346)
!15355 = !DILocation(line: 358, column: 14, scope: !15346)
!15356 = !DILocation(line: 358, column: 19, scope: !15346)
!15357 = !DILocation(line: 358, column: 30, scope: !15346)
!15358 = !DILocation(line: 358, column: 3, scope: !15346)
!15359 = !DILocation(line: 359, column: 3, scope: !15346)
!15360 = !DILocation(line: 362, column: 12, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15322, file: !289, line: 362, column: 12)
!15362 = !DILocation(line: 362, column: 20, scope: !15361)
!15363 = !DILocation(line: 362, column: 26, scope: !15361)
!15364 = !DILocation(line: 362, column: 29, scope: !15361)
!15365 = !DILocation(line: 362, column: 40, scope: !15361)
!15366 = !DILocation(line: 362, column: 48, scope: !15361)
!15367 = !DILocation(line: 362, column: 37, scope: !15361)
!15368 = !DILocation(line: 362, column: 12, scope: !15322)
!15369 = !DILocation(line: 363, column: 10, scope: !15361)
!15370 = !DILocation(line: 363, column: 3, scope: !15361)
!15371 = !DILocation(line: 364, column: 12, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15322, file: !289, line: 364, column: 12)
!15373 = !DILocation(line: 364, column: 23, scope: !15372)
!15374 = !DILocation(line: 364, column: 34, scope: !15372)
!15375 = !DILocation(line: 364, column: 42, scope: !15372)
!15376 = !DILocation(line: 364, column: 31, scope: !15372)
!15377 = !DILocation(line: 364, column: 20, scope: !15372)
!15378 = !DILocation(line: 364, column: 12, scope: !15322)
!15379 = !DILocation(line: 365, column: 10, scope: !15372)
!15380 = !DILocation(line: 365, column: 3, scope: !15372)
!15381 = !DILocation(line: 366, column: 12, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15322, file: !289, line: 366, column: 12)
!15383 = !DILocation(line: 366, column: 22, scope: !15382)
!15384 = !DILocation(line: 366, column: 20, scope: !15382)
!15385 = !DILocation(line: 366, column: 31, scope: !15382)
!15386 = !DILocation(line: 366, column: 12, scope: !15322)
!15387 = !DILocation(line: 367, column: 14, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !289, line: 367, column: 5)
!15389 = distinct !DILexicalBlock(scope: !15382, file: !289, line: 366, column: 53)
!15390 = !DILocation(line: 367, column: 12, scope: !15388)
!15391 = !DILocation(line: 367, column: 10, scope: !15388)
!15392 = !DILocation(line: 367, column: 23, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15388, file: !289, line: 367, column: 5)
!15394 = !DILocation(line: 367, column: 27, scope: !15393)
!15395 = !DILocation(line: 367, column: 25, scope: !15393)
!15396 = !DILocation(line: 367, column: 5, scope: !15388)
!15397 = !DILocation(line: 368, column: 33, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15393, file: !289, line: 367, column: 39)
!15399 = !DILocation(line: 368, column: 39, scope: !15398)
!15400 = !DILocation(line: 368, column: 48, scope: !15398)
!15401 = !DILocation(line: 368, column: 9, scope: !15398)
!15402 = !DILocation(line: 368, column: 17, scope: !15398)
!15403 = !DILocation(line: 368, column: 20, scope: !15398)
!15404 = !DILocation(line: 368, column: 22, scope: !15398)
!15405 = !DILocation(line: 368, column: 31, scope: !15398)
!15406 = !DILocation(line: 369, column: 30, scope: !15398)
!15407 = !DILocation(line: 369, column: 9, scope: !15398)
!15408 = !DILocation(line: 369, column: 17, scope: !15398)
!15409 = !DILocation(line: 369, column: 20, scope: !15398)
!15410 = !DILocation(line: 369, column: 28, scope: !15398)
!15411 = !DILocation(line: 370, column: 31, scope: !15398)
!15412 = !DILocation(line: 370, column: 9, scope: !15398)
!15413 = !DILocation(line: 370, column: 17, scope: !15398)
!15414 = !DILocation(line: 370, column: 20, scope: !15398)
!15415 = !DILocation(line: 370, column: 29, scope: !15398)
!15416 = !DILocation(line: 371, column: 28, scope: !15398)
!15417 = !DILocation(line: 371, column: 9, scope: !15398)
!15418 = !DILocation(line: 371, column: 17, scope: !15398)
!15419 = !DILocation(line: 371, column: 20, scope: !15398)
!15420 = !DILocation(line: 371, column: 26, scope: !15398)
!15421 = !DILocation(line: 372, column: 7, scope: !15398)
!15422 = !DILocation(line: 367, column: 35, scope: !15393)
!15423 = !DILocation(line: 367, column: 5, scope: !15393)
!15424 = distinct !{!15424, !15396, !15425}
!15425 = !DILocation(line: 372, column: 7, scope: !15388)
!15426 = !DILocation(line: 373, column: 8, scope: !15389)
!15427 = !DILocation(line: 374, column: 14, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15429, file: !289, line: 374, column: 5)
!15429 = distinct !DILexicalBlock(scope: !15382, file: !289, line: 373, column: 15)
!15430 = !DILocation(line: 374, column: 12, scope: !15428)
!15431 = !DILocation(line: 374, column: 10, scope: !15428)
!15432 = !DILocation(line: 374, column: 23, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15428, file: !289, line: 374, column: 5)
!15434 = !DILocation(line: 374, column: 27, scope: !15433)
!15435 = !DILocation(line: 374, column: 25, scope: !15433)
!15436 = !DILocation(line: 374, column: 5, scope: !15428)
!15437 = !DILocalVariable(name: "HTOFFSET", scope: !15438, file: !289, line: 375, type: !141)
!15438 = distinct !DILexicalBlock(scope: !15433, file: !289, line: 374, column: 39)
!15439 = !DILocation(line: 375, column: 17, scope: !15438)
!15440 = !DILocation(line: 375, column: 29, scope: !15438)
!15441 = !DILocation(line: 375, column: 35, scope: !15438)
!15442 = !DILocation(line: 375, column: 43, scope: !15438)
!15443 = !DILocation(line: 375, column: 41, scope: !15438)
!15444 = !DILocation(line: 375, column: 31, scope: !15438)
!15445 = !DILocation(line: 376, column: 11, scope: !15438)
!15446 = !DILocation(line: 376, column: 8, scope: !15438)
!15447 = !DILocation(line: 376, column: 21, scope: !15438)
!15448 = !DILocation(line: 375, column: 54, scope: !15438)
!15449 = !DILocation(line: 377, column: 13, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15438, file: !289, line: 377, column: 13)
!15451 = !DILocation(line: 377, column: 20, scope: !15450)
!15452 = !DILocation(line: 377, column: 13, scope: !15438)
!15453 = !DILocation(line: 378, column: 28, scope: !15450)
!15454 = !DILocation(line: 378, column: 34, scope: !15450)
!15455 = !DILocation(line: 378, column: 43, scope: !15450)
!15456 = !DILocation(line: 379, column: 6, scope: !15450)
!15457 = !DILocation(line: 378, column: 52, scope: !15450)
!15458 = !DILocation(line: 378, column: 4, scope: !15450)
!15459 = !DILocation(line: 378, column: 12, scope: !15450)
!15460 = !DILocation(line: 378, column: 15, scope: !15450)
!15461 = !DILocation(line: 378, column: 17, scope: !15450)
!15462 = !DILocation(line: 378, column: 26, scope: !15450)
!15463 = !DILocation(line: 381, column: 28, scope: !15450)
!15464 = !DILocation(line: 381, column: 34, scope: !15450)
!15465 = !DILocation(line: 381, column: 43, scope: !15450)
!15466 = !DILocation(line: 382, column: 6, scope: !15450)
!15467 = !DILocation(line: 381, column: 52, scope: !15450)
!15468 = !DILocation(line: 381, column: 4, scope: !15450)
!15469 = !DILocation(line: 381, column: 12, scope: !15450)
!15470 = !DILocation(line: 381, column: 15, scope: !15450)
!15471 = !DILocation(line: 381, column: 17, scope: !15450)
!15472 = !DILocation(line: 381, column: 26, scope: !15450)
!15473 = !DILocation(line: 383, column: 30, scope: !15438)
!15474 = !DILocation(line: 383, column: 40, scope: !15438)
!15475 = !DILocation(line: 383, column: 38, scope: !15438)
!15476 = !DILocation(line: 383, column: 9, scope: !15438)
!15477 = !DILocation(line: 383, column: 17, scope: !15438)
!15478 = !DILocation(line: 383, column: 20, scope: !15438)
!15479 = !DILocation(line: 383, column: 28, scope: !15438)
!15480 = !DILocation(line: 384, column: 9, scope: !15438)
!15481 = !DILocation(line: 384, column: 17, scope: !15438)
!15482 = !DILocation(line: 384, column: 20, scope: !15438)
!15483 = !DILocation(line: 384, column: 29, scope: !15438)
!15484 = !DILocation(line: 385, column: 28, scope: !15438)
!15485 = !DILocation(line: 385, column: 9, scope: !15438)
!15486 = !DILocation(line: 385, column: 17, scope: !15438)
!15487 = !DILocation(line: 385, column: 20, scope: !15438)
!15488 = !DILocation(line: 385, column: 26, scope: !15438)
!15489 = !DILocation(line: 386, column: 7, scope: !15438)
!15490 = !DILocation(line: 374, column: 35, scope: !15433)
!15491 = !DILocation(line: 374, column: 5, scope: !15433)
!15492 = distinct !{!15492, !15436, !15493}
!15493 = !DILocation(line: 386, column: 7, scope: !15428)
!15494 = !DILocation(line: 388, column: 15, scope: !15322)
!15495 = !DILocation(line: 389, column: 6, scope: !15322)
!15496 = !DILocation(line: 390, column: 2, scope: !15311)
!15497 = !DILocation(line: 343, column: 51, scope: !15306)
!15498 = !DILocation(line: 343, column: 7, scope: !15306)
!15499 = distinct !{!15499, !15309, !15500}
!15500 = !DILocation(line: 390, column: 2, scope: !15303)
!15501 = !DILocation(line: 391, column: 5, scope: !15288)
!15502 = !DILocation(line: 335, column: 44, scope: !15283)
!15503 = !DILocation(line: 335, column: 3, scope: !15283)
!15504 = distinct !{!15504, !15286, !15505}
!15505 = !DILocation(line: 391, column: 5, scope: !15280)
!15506 = !DILocation(line: 393, column: 10, scope: !15132)
!15507 = !DILocation(line: 393, column: 3, scope: !15132)
!15508 = !DILocation(line: 394, column: 1, scope: !15132)
!15509 = distinct !DISubprogram(name: "jbig2_release_huffman_table", scope: !289, file: !289, line: 398, type: !15510, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !288, retainedNodes: !70)
!15510 = !DISubroutineType(types: !15511)
!15511 = !{null, !14522, !309}
!15512 = !DILocalVariable(name: "ctx", arg: 1, scope: !15509, file: !289, line: 398, type: !14522)
!15513 = !DILocation(line: 398, column: 40, scope: !15509)
!15514 = !DILocalVariable(name: "table", arg: 2, scope: !15509, file: !289, line: 398, type: !309)
!15515 = !DILocation(line: 398, column: 64, scope: !15509)
!15516 = !DILocation(line: 400, column: 7, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15509, file: !289, line: 400, column: 7)
!15518 = !DILocation(line: 400, column: 13, scope: !15517)
!15519 = !DILocation(line: 400, column: 7, scope: !15509)
!15520 = !DILocation(line: 401, column: 18, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15517, file: !289, line: 400, column: 22)
!15522 = !DILocation(line: 401, column: 23, scope: !15521)
!15523 = !DILocation(line: 401, column: 34, scope: !15521)
!15524 = !DILocation(line: 401, column: 41, scope: !15521)
!15525 = !DILocation(line: 401, column: 7, scope: !15521)
!15526 = !DILocation(line: 402, column: 18, scope: !15521)
!15527 = !DILocation(line: 402, column: 23, scope: !15521)
!15528 = !DILocation(line: 402, column: 34, scope: !15521)
!15529 = !DILocation(line: 402, column: 7, scope: !15521)
!15530 = !DILocation(line: 403, column: 3, scope: !15521)
!15531 = !DILocation(line: 404, column: 3, scope: !15509)

; ModuleID = 'ld-temp.o'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__res_state = type { i32, i32, i64, i32, [3 x %struct.sockaddr_in], i16, [7 x i8*], [256 x i8], i64, i8, [3 x i8], [10 x %struct.anon], i32 (%struct.sockaddr_in**, i8**, i32*, i8*, i32, i32*)*, i32 (%struct.sockaddr_in*, i8*, i32, i8*, i32, i32*)*, i32, i32, i32, [52 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.anon = type { %struct.in_addr, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.HostInfo = type { i8*, i8**, i8**, i32, i32, %struct.ServerInfo** }
%struct.ServerInfo = type { i8*, i8**, i8** }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.ServerTable = type { i8*, [35 x i8*], i32, [35 x i8*], i32 }
%struct.res_sym = type { i32, i8*, i8* }
%struct.yy_buffer_state = type { %struct._IO_FILE*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%struct._ns_flagdata = type { i32, i32 }
%struct.hostent = type { i8*, i8**, i32, i32, i8** }
%union.querybuf = type { [65536 x i8] }
%struct.HEADER = type { [12 x i8] }
%struct.protoent = type { i8*, i8**, i32 }
%struct.servent = type { i8*, i8**, i32, i8* }
%struct.timeval = type { i64, i64 }
%struct.iovec = type { i8*, i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.__ns_msg = type { i8*, i8*, i16, i16, [4 x i16], [4 x i8*], i32, i32, i8* }
%union.querybuf.33 = type { [512 x i8] }
%struct.__ns_rr = type { [1025 x i8], i16, i16, i32, i16, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@res = internal global %struct.__res_state zeroinitializer, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [32 x i8] c"*** Can't initialize resolver.\0A\00", align 1
@defaultPtr = internal global %struct.HostInfo* null, align 8
@.str.1 = private unnamed_addr constant [41 x i8] c"*** Can't find server address for '%s': \00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"*** Can't find server name for address %s: %s\0A\00", align 1
@defaultAddr = internal global %struct.in_addr zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [39 x i8] c"*** Default servers are not available\0A\00", align 1
@defaultServer = internal global [256 x i8] zeroinitializer, align 16
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"Default Server:\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"PAGER\00", align 1
@pager = internal global i8* null, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"more\00", align 1
@env = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16
@.str.7 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@curHostValid = internal global i32 0, align 4
@.str.18 = private unnamed_addr constant [22 x i8] c"*** invalid name: %s\0A\00", align 1
@filePtr = internal global %struct._IO_FILE* null, align 8
@.str.19 = private unnamed_addr constant [31 x i8] c"*** Can't open %s for writing\0A\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"> %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"Server:\00", align 1
@queryType = internal global i32 1, align 4
@curHostInfo = internal global %struct.HostInfo zeroinitializer, align 8
@queryClass = internal global i32 1, align 4
@.str.80 = private unnamed_addr constant [6 x i8] c"Name:\00", align 1
@.str.81 = private unnamed_addr constant [41 x i8] c"*** No %s (%s) records available for %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"*** Request to %s timed-out\0A\00", align 1
@.str.83 = private unnamed_addr constant [26 x i8] c"*** %s can't find %s: %s\0A\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"%d.%d.%d.%d.in-addr.arpa.\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"0.0.0.0\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Usage:\0A\00", align 1
@.str.10 = private unnamed_addr constant [76 x i8] c"   nslookup [-opt ...]             # interactive mode using default server\0A\00", align 1
@.str.11 = private unnamed_addr constant [70 x i8] c"   nslookup [-opt ...] - server    # interactive mode using 'server'\0A\00", align 1
@.str.12 = private unnamed_addr constant [79 x i8] c"   nslookup [-opt ...] host        # just look up 'host' using default server\0A\00", align 1
@.str.13 = private unnamed_addr constant [73 x i8] c"   nslookup [-opt ...] host server # just look up 'host' using 'server'\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"set \00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"*** Invalid set command\0A\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"d2\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"nod2\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"d2 mode disabled; still in debug mode\0A\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"def\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"nodef\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"** invalid 'domain' value: %s\0A\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"deb\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"nodeb\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"ig\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"noig\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"po\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"%hu\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"ty\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"*** invalid type value: %s\0A\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"*** invalid class : %s\0A\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"rec\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"norec\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"ret\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@rootServerName = internal global [256 x i8] c"a.root-servers.net.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@.str.50 = private unnamed_addr constant [35 x i8] c"*** invalid root server name : %s\0A\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"sea\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"nosea\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"srchl\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"ti\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"nov\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"*** Invalid option: %s\0A\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"Host:\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"Set options:\0A\00", align 1
@.str.61 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"  %sdebug  \09\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"  %sdefname\09\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"  %ssearch\09\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"  %srecurse\0A\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"  %sd2\09\09\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"  %svc\09\09\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"  %signoretc\09\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"  port=%u\0A\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"  querytype=%s\09\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"  class=%s\09\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"  timeout=%d\09\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"  retry=%d\0A\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"  root=%s\0A\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"  domain=%s\0A\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"  srchlist=%s\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"%c%s\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"/.nslookuprc\00", align 1
@.str.88 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c" lserver \00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"SetDefaultServer: invalid name: %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c" server \00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"*** Can't find address for server %s: %s\0A\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"*** invalid server name: %s\0A\00", align 1
@LookupHostWithServer.serverInfo = internal global %struct.HostInfo zeroinitializer, align 8
@.str.78 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"/usr/lib/nslookup.help\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"[%s]\00", align 1
@.str.1.90 = private unnamed_addr constant [18 x i8] c"Aliased to \22%s\22\0A\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [10 x i8] c"%.*s.%.*s\00", align 1
@.str.3.92 = private unnamed_addr constant [21 x i8] c"Res_nmkquery failed\0A\00", align 1
@.str.6.95 = private unnamed_addr constant [20 x i8] c"SendRequest failed\0A\00", align 1
@hostbuf = internal global [1025 x i8] zeroinitializer, align 16
@host_aliases = internal global [35 x i8*] zeroinitializer, align 16
@addr_list = internal global [36 x i8*] zeroinitializer, align 16
@.str.7.96 = private unnamed_addr constant [36 x i8] c"Answer crypto-validated by server:\0A\00", align 1
@.str.8.97 = private unnamed_addr constant [27 x i8] c"Non-authoritative answer:\0A\00", align 1
@host_aliases_len = internal global [35 x i32] zeroinitializer, align 16
@.str.9.98 = private unnamed_addr constant [19 x i8] c"Size (%d) too big\0A\00", align 1
@.str.10.99 = private unnamed_addr constant [37 x i8] c"MAXADDRS exceeded: skipping address\0A\00", align 1
@.str.11.100 = private unnamed_addr constant [42 x i8] c"Authoritative answers can be found from:\0A\00", align 1
@server = internal global [10 x %struct.ServerTable] zeroinitializer, align 16
@.str.4.103 = private unnamed_addr constant [25 x i8] c"%u.%u.%u.%u.in-addr.arpa\00", align 1
@.str.5.104 = private unnamed_addr constant [23 x i8] c"res_nmkquery() failed\0A\00", align 1
@.str.105 = private unnamed_addr constant [13 x i8] c"    HEADER:\0A\00", align 1
@.str.1.106 = private unnamed_addr constant [13 x i8] c"\09opcode = %s\00", align 1
@.str.2.107 = private unnamed_addr constant [10 x i8] c", id = %d\00", align 1
@.str.3.108 = private unnamed_addr constant [14 x i8] c", rcode = %s\0A\00", align 1
@.str.4.109 = private unnamed_addr constant [16 x i8] c"\09header flags: \00", align 1
@.str.5.110 = private unnamed_addr constant [10 x i8] c" response\00", align 1
@.str.6.111 = private unnamed_addr constant [7 x i8] c" query\00", align 1
@.str.7.112 = private unnamed_addr constant [15 x i8] c", auth. answer\00", align 1
@.str.8.113 = private unnamed_addr constant [13 x i8] c", truncation\00", align 1
@.str.9.114 = private unnamed_addr constant [17 x i8] c", want recursion\00", align 1
@.str.10.115 = private unnamed_addr constant [19 x i8] c", recursion avail.\00", align 1
@.str.11.116 = private unnamed_addr constant [19 x i8] c", UNUSED-QUERY_BIT\00", align 1
@.str.12.117 = private unnamed_addr constant [17 x i8] c", authentic data\00", align 1
@.str.13.118 = private unnamed_addr constant [20 x i8] c", checking disabled\00", align 1
@.str.14.119 = private unnamed_addr constant [17 x i8] c"\0A\09questions = %d\00", align 1
@.str.15.120 = private unnamed_addr constant [16 x i8] c",  answers = %d\00", align 1
@.str.16.121 = private unnamed_addr constant [26 x i8] c",  authority records = %d\00", align 1
@.str.17.122 = private unnamed_addr constant [21 x i8] c",  additional = %d\0A\0A\00", align 1
@.str.18.123 = private unnamed_addr constant [16 x i8] c"    QUESTIONS:\0A\00", align 1
@.str.19.124 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.20.125 = private unnamed_addr constant [12 x i8] c", type = %s\00", align 1
@.str.21.126 = private unnamed_addr constant [14 x i8] c", class = %s\0A\00", align 1
@.str.22.127 = private unnamed_addr constant [14 x i8] c"    ANSWERS:\0A\00", align 1
@.str.23.128 = private unnamed_addr constant [38 x i8] c"Limiting response to MAX Addrs = %d \0A\00", align 1
@.str.24.129 = private unnamed_addr constant [9 x i8] c"    ->  \00", align 1
@.str.25.132 = private unnamed_addr constant [24 x i8] c"    AUTHORITY RECORDS:\0A\00", align 1
@.str.26.133 = private unnamed_addr constant [25 x i8] c"    ADDITIONAL RECORDS:\0A\00", align 1
@.str.27.134 = private unnamed_addr constant [15 x i8] c"\0A------------\0A\00", align 1
@.str.30.135 = private unnamed_addr constant [19 x i8] c"(name truncated?)\0A\00", align 1
@.str.31.136 = private unnamed_addr constant [15 x i8] c"(form error.)\0A\00", align 1
@.str.32.137 = private unnamed_addr constant [35 x i8] c"\0A\09type = %s, class = %s, dlen = %d\00", align 1
@.str.33.138 = private unnamed_addr constant [17 x i8] c"\0A\09ttl = %lu (%s)\00", align 1
@.str.34.139 = private unnamed_addr constant [24 x i8] c"\09internet address = %s\0A\00", align 1
@.str.35.140 = private unnamed_addr constant [19 x i8] c"\09canonical name = \00", align 1
@.str.36.141 = private unnamed_addr constant [22 x i8] c"\09mail group member = \00", align 1
@.str.37.142 = private unnamed_addr constant [13 x i8] c"\09mail box = \00", align 1
@.str.38.143 = private unnamed_addr constant [19 x i8] c"\09mailbox rename = \00", align 1
@.str.39.144 = private unnamed_addr constant [17 x i8] c"\09preference = %u\00", align 1
@.str.40.145 = private unnamed_addr constant [20 x i8] c", mail exchanger = \00", align 1
@.str.41.146 = private unnamed_addr constant [12 x i8] c"\09order = %u\00", align 1
@.str.42.147 = private unnamed_addr constant [19 x i8] c", preference = %u\0A\00", align 1
@.str.43.148 = private unnamed_addr constant [17 x i8] c"\09flags = \22%.*s\22\0A\00", align 1
@.str.44.149 = private unnamed_addr constant [20 x i8] c"\09services = \22%.*s\22\0A\00", align 1
@.str.45.150 = private unnamed_addr constant [16 x i8] c"\09rule = \22%.*s\22\0A\00", align 1
@.str.46.151 = private unnamed_addr constant [16 x i8] c"\09replacement = \00", align 1
@.str.47.152 = private unnamed_addr constant [26 x i8] c"(replacement truncated?)\0A\00", align 1
@.str.48.153 = private unnamed_addr constant [15 x i8] c"\09priority = %u\00", align 1
@.str.49.154 = private unnamed_addr constant [14 x i8] c", weight = %u\00", align 1
@.str.50.155 = private unnamed_addr constant [12 x i8] c", port= %u\0A\00", align 1
@.str.51.156 = private unnamed_addr constant [9 x i8] c"\09host = \00", align 1
@.str.52.157 = private unnamed_addr constant [13 x i8] c", RFC 822 = \00", align 1
@.str.53.158 = private unnamed_addr constant [10 x i8] c"\0AX.400 = \00", align 1
@.str.54.159 = private unnamed_addr constant [12 x i8] c", router = \00", align 1
@.str.55.160 = private unnamed_addr constant [14 x i8] c"\09subtype = %d\00", align 1
@.str.56.161 = private unnamed_addr constant [20 x i8] c", DCE/AFS server = \00", align 1
@.str.57.162 = private unnamed_addr constant [15 x i8] c"\09nameserver = \00", align 1
@.str.58.163 = private unnamed_addr constant [9 x i8] c"\09name = \00", align 1
@.str.59.164 = private unnamed_addr constant [12 x i8] c"\09CPU = %.*s\00", align 1
@.str.60.165 = private unnamed_addr constant [12 x i8] c"\09OS = %.*s\0A\00", align 1
@.str.61.166 = private unnamed_addr constant [34 x i8] c"\0A*** Warning *** OS-type missing\0A\00", align 1
@.str.62.167 = private unnamed_addr constant [14 x i8] c"\09ISDN = \22%.*s\00", align 1
@.str.63.168 = private unnamed_addr constant [8 x i8] c"-%.*s\22\0A\00", align 1
@.str.64.169 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.65.170 = private unnamed_addr constant [11 x i8] c"\09origin = \00", align 1
@.str.66.171 = private unnamed_addr constant [15 x i8] c"\0A\09mail addr = \00", align 1
@.str.67.172 = private unnamed_addr constant [15 x i8] c"\0A\09serial = %lu\00", align 1
@.str.68.173 = private unnamed_addr constant [21 x i8] c"\0A\09refresh = %lu (%s)\00", align 1
@.str.69.174 = private unnamed_addr constant [21 x i8] c"\0A\09retry   = %lu (%s)\00", align 1
@.str.70.175 = private unnamed_addr constant [21 x i8] c"\0A\09expire  = %lu (%s)\00", align 1
@.str.71.176 = private unnamed_addr constant [26 x i8] c"\0A\09minimum ttl = %lu (%s)\0A\00", align 1
@.str.72.177 = private unnamed_addr constant [13 x i8] c"\09requests = \00", align 1
@.str.73.178 = private unnamed_addr constant [12 x i8] c"\0A\09errors = \00", align 1
@.str.74.179 = private unnamed_addr constant [12 x i8] c"\09mailbox = \00", align 1
@.str.75.180 = private unnamed_addr constant [10 x i8] c"\0A\09text = \00", align 1
@.str.76.181 = private unnamed_addr constant [9 x i8] c"\09text = \00", align 1
@.str.77.182 = private unnamed_addr constant [9 x i8] c"\09X25 = \22\00", align 1
@.str.78.183 = private unnamed_addr constant [12 x i8] c"\09nsap = %s\0A\00", align 1
@.str.79.184 = private unnamed_addr constant [20 x i8] c"\09IPv6 address = %s\0A\00", align 1
@.str.80.185 = private unnamed_addr constant [36 x i8] c"\09inet address = %s, protocol = %s\0A\09\00", align 1
@.str.81.186 = private unnamed_addr constant [36 x i8] c"\09inet address = %s, protocol = %d\0A\09\00", align 1
@.str.82.187 = private unnamed_addr constant [5 x i8] c"  %s\00", align 1
@.str.83.188 = private unnamed_addr constant [5 x i8] c" #%d\00", align 1
@.str.84.189 = private unnamed_addr constant [17 x i8] c"\09NULL (dlen %d)\0A\00", align 1
@.str.85.190 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.86.191 = private unnamed_addr constant [13 x i8] c"ns_sprintrrf\00", align 1
@.str.87.192 = private unnamed_addr constant [37 x i8] c"\09record type %s, interpreted as:\0A%s\0A\00", align 1
@.str.88.193 = private unnamed_addr constant [17 x i8] c"\09ttl = %lu (%s)\0A\00", align 1
@.str.89.194 = private unnamed_addr constant [47 x i8] c"\0A*** Error: record size incorrect (%d != %d)\0A\0A\00", align 1
@.str.28.195 = private unnamed_addr constant [7 x i8] c"(root)\00", align 1
@.str.29.196 = private unnamed_addr constant [6 x i8] c"%-30s\00", align 1
@.str.199 = private unnamed_addr constant [36 x i8] c"------------\0ASendRequest(), len %d\0A\00", align 1
@nsport = internal global i16 53, align 2
@s = internal global i32 -1, align 4
@.str.1.202 = private unnamed_addr constant [19 x i8] c"socket (vc) failed\00", align 1
@.str.2.203 = private unnamed_addr constant [15 x i8] c"connect failed\00", align 1
@.str.3.204 = private unnamed_addr constant [13 x i8] c"write failed\00", align 1
@.str.4.205 = private unnamed_addr constant [12 x i8] c"read failed\00", align 1
@.str.5.206 = private unnamed_addr constant [20 x i8] c"response truncated\0A\00", align 1
@.str.6.207 = private unnamed_addr constant [19 x i8] c"socket (dg) failed\00", align 1
@.str.7.208 = private unnamed_addr constant [7 x i8] c"sendto\00", align 1
@.str.8.209 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.9.210 = private unnamed_addr constant [9 x i8] c"timeout\0A\00", align 1
@.str.10.211 = private unnamed_addr constant [9 x i8] c"recvfrom\00", align 1
@.str.11.212 = private unnamed_addr constant [26 x i8] c"------------\0AOld answer:\0A\00", align 1
@.str.12.213 = private unnamed_addr constant [18 x i8] c"truncated answer\0A\00", align 1
@.str.13.214 = private unnamed_addr constant [37 x i8] c"------------\0AGot answer (%d bytes):\0A\00", align 1
@.str.14.215 = private unnamed_addr constant [26 x i8] c"------------\0AGot answer:\0A\00", align 1
@.str.218 = private unnamed_addr constant [8 x i8] c" ls -t \00", align 1
@.str.1.219 = private unnamed_addr constant [28 x i8] c"*** ls: invalid request %s\0A\00", align 1
@.str.2.220 = private unnamed_addr constant [30 x i8] c"*** Can't list domain %s: %s\0A\00", align 1
@.str.11.221 = private unnamed_addr constant [29 x i8] c"*** ls: res_nmkquery failed\0A\00", align 1
@sockFD = internal global i32 -1, align 4
@.str.12.222 = private unnamed_addr constant [11 x i8] c"ls: socket\00", align 1
@.str.13.223 = private unnamed_addr constant [12 x i8] c"ls: connect\00", align 1
@.str.14.224 = private unnamed_addr constant [10 x i8] c"ls: write\00", align 1
@.str.15.225 = private unnamed_addr constant [6 x i8] c"[%s]\0A\00", align 1
@.str.16.226 = private unnamed_addr constant [31 x i8] c"*** Can't open %s for writing\0A\00", align 1
@.str.17.227 = private unnamed_addr constant [6 x i8] c"> %s\0A\00", align 1
@ListSubr.answerLen = internal global i32 0, align 4
@ListSubr.answer = internal global i8* null, align 8
@.str.18.228 = private unnamed_addr constant [13 x i8] c"ns_initparse\00", align 1
@.str.19.229 = private unnamed_addr constant [11 x i8] c"ns_parserr\00", align 1
@.str.20.230 = private unnamed_addr constant [2 x i8] c".\00", align 1
@ListSubr.origin = internal global [1025 x i8] zeroinitializer, align 16
@.str.21.231 = private unnamed_addr constant [13 x i8] c"$ORIGIN %s.\0A\00", align 1
@ListSubr.name_ctx = internal global [1025 x i8] zeroinitializer, align 16
@.str.22.232 = private unnamed_addr constant [12 x i8] c"ns_sprintrr\00", align 1
@.str.23.233 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.25.234 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.26.235 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27.236 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.24.237 = private unnamed_addr constant [39 x i8] c"%sReceived %d answer%s (%d record%s).\0A\00", align 1
@.str.28.238 = private unnamed_addr constant [40 x i8] c"*** ls: error receiving zone transfer:\0A\00", align 1
@.str.29.239 = private unnamed_addr constant [61 x i8] c"  result: %s, answers = %d, authority = %d, additional = %d\0A\00", align 1
@.str.3.240 = private unnamed_addr constant [5 x i8] c" ls \00", align 1
@.str.4.241 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@.str.5.242 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.6.243 = private unnamed_addr constant [3 x i8] c"-m\00", align 1
@.str.7.244 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.8.245 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.9.246 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.10.247 = private unnamed_addr constant [3 x i8] c"-n\00", align 1
@.str.30.248 = private unnamed_addr constant [7 x i8] c" view \00", align 1
@.str.31.249 = private unnamed_addr constant [27 x i8] c"*** invalid file name: %s\0A\00", align 1
@.str.32.250 = private unnamed_addr constant [28 x i8] c"/var/tmp/nslookup_tmpXXXXXX\00", align 1
@.str.33.251 = private unnamed_addr constant [29 x i8] c"*** cannot create temp file\0A\00", align 1
@.str.34.252 = private unnamed_addr constant [138 x i8] c"sed '/^$/,${/@/,$d}/^[^\09]/{hs/^\5C([^\09]*\09*\5C).*/\5C1/x}1,/^$/{w %sd}/^\09/{Gs/^\09*//s/^\5C(.*\5C)\5Cn\5C(.*\5C)$/\5C2\5C1/}' %s | sort | (cat %s -; rm %s) | %s\00", align 1
@.str.35.253 = private unnamed_addr constant [34 x i8] c"Finger: no current host defined.\0A\00", align 1
@.str.36.254 = private unnamed_addr constant [9 x i8] c" finger \00", align 1
@.str.37.255 = private unnamed_addr constant [7 x i8] c"finger\00", align 1
@.str.38.256 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str.39.257 = private unnamed_addr constant [25 x i8] c"Finger: unknown service\0A\00", align 1
@.str.40.258 = private unnamed_addr constant [15 x i8] c"finger: socket\00", align 1
@.str.41.259 = private unnamed_addr constant [16 x i8] c"finger: connect\00", align 1
@.str.42.260 = private unnamed_addr constant [4 x i8] c"/W \00", align 1
@.str.43.261 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.44.262 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.265 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1.268 = private unnamed_addr constant [27 x i8] c"*** Can't allocate memory\0A\00", align 1
@.str.2.273 = private unnamed_addr constant [9 x i8] c"%-7s  %s\00", align 1
@.str.3.274 = private unnamed_addr constant [12 x i8] c"\0AAddresses:\00", align 1
@.str.4.275 = private unnamed_addr constant [10 x i8] c"\0AAddress:\00", align 1
@.str.5.276 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.6.277 = private unnamed_addr constant [6 x i8] c"%c %s\00", align 1
@.str.7.278 = private unnamed_addr constant [10 x i8] c"\0AAliases:\00", align 1
@.str.8.279 = private unnamed_addr constant [13 x i8] c"\0AServed by:\0A\00", align 1
@.str.9.280 = private unnamed_addr constant [7 x i8] c"- %s\0A\09\00", align 1
@.str.10.281 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.11.286 = private unnamed_addr constant [3 x i8] c"a+\00", align 1
@.str.12.287 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@error_syms = internal constant [12 x %struct.res_sym] [%struct.res_sym { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.291, i32 0, i32 0), i8* null }, %struct.res_sym { i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.292, i32 0, i32 0), i8* null }, %struct.res_sym { i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15.293, i32 0, i32 0), i8* null }, %struct.res_sym { i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16.294, i32 0, i32 0), i8* null }, %struct.res_sym { i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17.295, i32 0, i32 0), i8* null }, %struct.res_sym { i32 5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.296, i32 0, i32 0), i8* null }, %struct.res_sym { i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.297, i32 0, i32 0), i8* null }, %struct.res_sym { i32 -2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20.298, i32 0, i32 0), i8* null }, %struct.res_sym { i32 -3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.299, i32 0, i32 0), i8* null }, %struct.res_sym { i32 -4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22.300, i32 0, i32 0), i8* null }, %struct.res_sym { i32 -5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23.301, i32 0, i32 0), i8* null }, %struct.res_sym zeroinitializer], align 16
@.str.24.290 = private unnamed_addr constant [16 x i8] c"BAD ERROR VALUE\00", align 1
@.str.13.291 = private unnamed_addr constant [8 x i8] c"Success\00", align 1
@.str.14.292 = private unnamed_addr constant [13 x i8] c"Format error\00", align 1
@.str.15.293 = private unnamed_addr constant [14 x i8] c"Server failed\00", align 1
@.str.16.294 = private unnamed_addr constant [25 x i8] c"Non-existent host/domain\00", align 1
@.str.17.295 = private unnamed_addr constant [16 x i8] c"Not implemented\00", align 1
@.str.18.296 = private unnamed_addr constant [14 x i8] c"Query refused\00", align 1
@.str.19.297 = private unnamed_addr constant [10 x i8] c"Timed out\00", align 1
@.str.20.298 = private unnamed_addr constant [15 x i8] c"No information\00", align 1
@.str.21.299 = private unnamed_addr constant [18 x i8] c"Unspecified error\00", align 1
@.str.22.300 = private unnamed_addr constant [25 x i8] c"Non-authoritative answer\00", align 1
@.str.23.301 = private unnamed_addr constant [24 x i8] c"No response from server\00", align 1
@.str.25.304 = private unnamed_addr constant [25 x i8] c"unknown query class: %s\0A\00", align 1
@.str.26.307 = private unnamed_addr constant [24 x i8] c"unknown query type: %s\0A\00", align 1
@yy_init = internal global i32 1, align 4
@yy_start = internal global i32 0, align 4
@yyin = internal global %struct._IO_FILE* null, align 8
@stdin = external dso_local global %struct._IO_FILE*, align 8
@yyout = internal global %struct._IO_FILE* null, align 8
@yy_current_buffer = internal global %struct.yy_buffer_state* null, align 8
@yy_c_buf_p = internal global i8* null, align 8
@yy_hold_char = internal global i8 0, align 1
@yy_ec = internal constant [256 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 3, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 4, i32 1, i32 1, i32 5, i32 4, i32 6, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 1, i32 1, i32 1, i32 6, i32 7, i32 8, i32 1, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 1, i32 9, i32 1, i32 1, i32 10, i32 1, i32 11, i32 4, i32 4, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 4, i32 4, i32 18, i32 19, i32 20, i32 21, i32 22, i32 4, i32 23, i32 24, i32 25, i32 4, i32 26, i32 27, i32 28, i32 4, i32 4, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], align 16
@yy_accept = internal constant [171 x i16] [i16 0, i16 0, i16 0, i16 23, i16 22, i16 21, i16 22, i16 22, i16 19, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 0, i16 20, i16 0, i16 19, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 16, i16 0, i16 0, i16 14, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 18, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 15, i16 0, i16 3, i16 0, i16 0, i16 13, i16 0, i16 9, i16 0, i16 0, i16 0, i16 0, i16 0, i16 4, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 0, i16 0, i16 12, i16 0, i16 0, i16 0, i16 17, i16 0, i16 6, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 7, i16 0, i16 0, i16 7, i16 0, i16 0, i16 0, i16 0, i16 9, i16 0, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 6, i16 0, i16 0, i16 0, i16 0, i16 0, i16 8, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 0, i16 0, i16 0, i16 5, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 2, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 5, i16 0, i16 8, i16 0, i16 10, i16 0], align 16
@yy_last_accepting_state = internal global i32 0, align 4
@yy_last_accepting_cpos = internal global i8* null, align 8
@yy_base = internal constant [203 x i16] [i16 0, i16 504, i16 0, i16 497, i16 626, i16 626, i16 484, i16 28, i16 626, i16 56, i16 58, i16 65, i16 52, i16 49, i16 47, i16 55, i16 57, i16 61, i16 477, i16 626, i16 0, i16 626, i16 451, i16 79, i16 0, i16 62, i16 71, i16 63, i16 67, i16 73, i16 75, i16 103, i16 626, i16 450, i16 94, i16 626, i16 90, i16 74, i16 96, i16 113, i16 95, i16 94, i16 107, i16 141, i16 150, i16 100, i16 106, i16 105, i16 159, i16 108, i16 104, i16 72, i16 128, i16 110, i16 168, i16 626, i16 175, i16 184, i16 137, i16 0, i16 144, i16 160, i16 152, i16 193, i16 200, i16 153, i16 187, i16 185, i16 225, i16 195, i16 235, i16 202, i16 626, i16 244, i16 626, i16 186, i16 204, i16 626, i16 215, i16 626, i16 254, i16 218, i16 237, i16 245, i16 257, i16 626, i16 241, i16 273, i16 282, i16 291, i16 301, i16 263, i16 0, i16 284, i16 265, i16 312, i16 322, i16 283, i16 277, i16 331, i16 626, i16 338, i16 268, i16 626, i16 347, i16 356, i16 275, i16 626, i16 365, i16 626, i16 375, i16 466, i16 384, i16 393, i16 314, i16 402, i16 411, i16 626, i16 418, i16 333, i16 626, i16 427, i16 436, i16 445, i16 448, i16 626, i16 455, i16 464, i16 626, i16 474, i16 483, i16 493, i16 496, i16 626, i16 503, i16 512, i16 341, i16 0, i16 349, i16 626, i16 515, i16 522, i16 525, i16 532, i16 535, i16 626, i16 542, i16 551, i16 358, i16 626, i16 560, i16 377, i16 563, i16 570, i16 579, i16 386, i16 582, i16 626, i16 589, i16 598, i16 395, i16 0, i16 607, i16 616, i16 413, i16 626, i16 420, i16 626, i16 429, i16 626, i16 626, i16 460, i16 459, i16 458, i16 448, i16 441, i16 440, i16 439, i16 432, i16 423, i16 416, i16 405, i16 398, i16 389, i16 380, i16 368, i16 361, i16 352, i16 336, i16 325, i16 306, i16 294, i16 287, i16 267, i16 247, i16 240, i16 228, i16 209, i16 207, i16 198, i16 173, i16 162, i16 144], align 16
@yy_chk = internal constant [655 x i16] [i16 0, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 9, i16 9, i16 9, i16 10, i16 10, i16 13, i16 9, i16 9, i16 9, i16 11, i16 11, i16 11, i16 12, i16 16, i16 14, i16 11, i16 11, i16 11, i16 14, i16 15, i16 13, i16 17, i16 25, i16 12, i16 23, i16 23, i16 15, i16 26, i16 16, i16 29, i16 27, i16 28, i16 17, i16 25, i16 27, i16 30, i16 11, i16 37, i16 28, i16 34, i16 34, i16 51, i16 26, i16 51, i16 29, i16 37, i16 30, i16 31, i16 31, i16 31, i16 36, i16 31, i16 31, i16 31, i16 31, i16 31, i16 31, i16 38, i16 39, i16 40, i16 41, i16 36, i16 41, i16 42, i16 46, i16 41, i16 40, i16 38, i16 45, i16 39, i16 47, i16 45, i16 50, i16 52, i16 49, i16 50, i16 47, i16 46, i16 42, i16 49, i16 53, i16 53, i16 58, i16 58, i16 39, i16 43, i16 43, i16 43, i16 202, i16 60, i16 60, i16 43, i16 43, i16 43, i16 44, i16 44, i16 44, i16 62, i16 62, i16 52, i16 44, i16 44, i16 44, i16 48, i16 48, i16 48, i16 201, i16 48, i16 48, i16 48, i16 48, i16 48, i16 48, i16 54, i16 54, i16 60, i16 61, i16 200, i16 54, i16 56, i16 56, i16 56, i16 65, i16 62, i16 65, i16 56, i16 56, i16 56, i16 57, i16 57, i16 57, i16 61, i16 66, i16 66, i16 57, i16 57, i16 57, i16 63, i16 63, i16 63, i16 69, i16 67, i16 199, i16 63, i16 63, i16 63, i16 64, i16 71, i16 71, i16 76, i16 76, i16 198, i16 75, i16 197, i16 64, i16 64, i16 67, i16 75, i16 66, i16 64, i16 78, i16 78, i16 64, i16 81, i16 81, i16 78, i16 69, i16 64, i16 64, i16 68, i16 68, i16 68, i16 196, i16 68, i16 68, i16 68, i16 68, i16 68, i16 68, i16 70, i16 70, i16 70, i16 82, i16 82, i16 195, i16 70, i16 70, i16 70, i16 73, i16 73, i16 73, i16 194, i16 73, i16 73, i16 73, i16 73, i16 73, i16 73, i16 80, i16 80, i16 80, i16 83, i16 84, i16 84, i16 80, i16 80, i16 80, i16 86, i16 91, i16 91, i16 94, i16 193, i16 86, i16 102, i16 102, i16 94, i16 83, i16 87, i16 87, i16 87, i16 106, i16 106, i16 98, i16 87, i16 87, i16 87, i16 88, i16 88, i16 88, i16 93, i16 93, i16 192, i16 88, i16 88, i16 88, i16 89, i16 89, i16 89, i16 191, i16 89, i16 89, i16 89, i16 89, i16 89, i16 89, i16 90, i16 90, i16 90, i16 98, i16 97, i16 190, i16 90, i16 90, i16 90, i16 97, i16 93, i16 95, i16 95, i16 95, i16 114, i16 95, i16 95, i16 95, i16 95, i16 95, i16 95, i16 96, i16 96, i16 96, i16 189, i16 96, i16 96, i16 96, i16 96, i16 96, i16 96, i16 99, i16 99, i16 119, i16 119, i16 188, i16 99, i16 101, i16 101, i16 101, i16 114, i16 136, i16 136, i16 101, i16 101, i16 101, i16 104, i16 104, i16 104, i16 138, i16 138, i16 187, i16 104, i16 104, i16 104, i16 105, i16 105, i16 105, i16 148, i16 148, i16 186, i16 105, i16 105, i16 105, i16 108, i16 108, i16 108, i16 185, i16 108, i16 108, i16 108, i16 108, i16 108, i16 108, i16 110, i16 110, i16 110, i16 151, i16 151, i16 184, i16 110, i16 110, i16 110, i16 112, i16 112, i16 112, i16 155, i16 155, i16 183, i16 112, i16 112, i16 112, i16 113, i16 113, i16 113, i16 160, i16 160, i16 182, i16 113, i16 113, i16 113, i16 115, i16 115, i16 115, i16 181, i16 115, i16 115, i16 115, i16 115, i16 115, i16 115, i16 116, i16 116, i16 164, i16 164, i16 180, i16 116, i16 118, i16 118, i16 118, i16 166, i16 166, i16 179, i16 118, i16 118, i16 118, i16 121, i16 121, i16 121, i16 168, i16 168, i16 178, i16 121, i16 121, i16 121, i16 122, i16 122, i16 122, i16 177, i16 176, i16 175, i16 122, i16 122, i16 122, i16 123, i16 123, i16 123, i16 174, i16 124, i16 124, i16 123, i16 123, i16 123, i16 124, i16 126, i16 126, i16 126, i16 173, i16 172, i16 171, i16 126, i16 126, i16 126, i16 127, i16 127, i16 127, i16 111, i16 127, i16 127, i16 127, i16 127, i16 127, i16 127, i16 129, i16 129, i16 129, i16 33, i16 22, i16 18, i16 129, i16 129, i16 129, i16 130, i16 130, i16 130, i16 6, i16 130, i16 130, i16 130, i16 130, i16 130, i16 130, i16 131, i16 131, i16 131, i16 3, i16 132, i16 132, i16 131, i16 131, i16 131, i16 132, i16 134, i16 134, i16 134, i16 1, i16 0, i16 0, i16 134, i16 134, i16 134, i16 135, i16 135, i16 135, i16 0, i16 140, i16 140, i16 135, i16 135, i16 135, i16 140, i16 141, i16 141, i16 141, i16 0, i16 142, i16 142, i16 141, i16 141, i16 141, i16 142, i16 143, i16 143, i16 143, i16 0, i16 144, i16 144, i16 143, i16 143, i16 143, i16 144, i16 146, i16 146, i16 146, i16 0, i16 0, i16 0, i16 146, i16 146, i16 146, i16 147, i16 147, i16 147, i16 0, i16 0, i16 0, i16 147, i16 147, i16 147, i16 150, i16 150, i16 150, i16 0, i16 152, i16 152, i16 150, i16 150, i16 150, i16 152, i16 153, i16 153, i16 153, i16 0, i16 0, i16 0, i16 153, i16 153, i16 153, i16 154, i16 154, i16 154, i16 0, i16 156, i16 156, i16 154, i16 154, i16 154, i16 156, i16 158, i16 158, i16 158, i16 0, i16 0, i16 0, i16 158, i16 158, i16 158, i16 159, i16 159, i16 159, i16 0, i16 0, i16 0, i16 159, i16 159, i16 159, i16 162, i16 162, i16 162, i16 0, i16 0, i16 0, i16 162, i16 162, i16 162, i16 163, i16 163, i16 163, i16 0, i16 0, i16 0, i16 163, i16 163, i16 163, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170], align 16
@yy_def = internal constant [203 x i16] [i16 0, i16 171, i16 170, i16 170, i16 170, i16 170, i16 172, i16 170, i16 170, i16 173, i16 172, i16 173, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 172, i16 170, i16 7, i16 170, i16 11, i16 172, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 174, i16 170, i16 11, i16 172, i16 170, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 175, i16 176, i16 11, i16 11, i16 11, i16 177, i16 11, i16 11, i16 11, i16 11, i16 11, i16 172, i16 170, i16 175, i16 176, i16 57, i16 57, i16 11, i16 11, i16 11, i16 178, i16 172, i16 11, i16 11, i16 11, i16 179, i16 11, i16 180, i16 172, i16 170, i16 174, i16 170, i16 11, i16 73, i16 170, i16 172, i16 170, i16 178, i16 172, i16 172, i16 11, i16 73, i16 170, i16 11, i16 181, i16 182, i16 183, i16 180, i16 90, i16 90, i16 11, i16 90, i16 184, i16 185, i16 11, i16 11, i16 172, i16 170, i16 181, i16 172, i16 170, i16 186, i16 187, i16 172, i16 170, i16 188, i16 170, i16 189, i16 90, i16 190, i16 191, i16 11, i16 192, i16 172, i16 170, i16 186, i16 172, i16 170, i16 193, i16 194, i16 189, i16 172, i16 170, i16 190, i16 195, i16 170, i16 191, i16 196, i16 197, i16 172, i16 170, i16 193, i16 194, i16 135, i16 135, i16 172, i16 170, i16 172, i16 198, i16 172, i16 199, i16 172, i16 170, i16 197, i16 200, i16 172, i16 170, i16 201, i16 172, i16 172, i16 198, i16 202, i16 172, i16 172, i16 170, i16 199, i16 200, i16 159, i16 159, i16 201, i16 202, i16 172, i16 170, i16 172, i16 170, i16 172, i16 170, i16 0, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170], align 16
@yy_meta = internal constant [29 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], align 16
@yy_nxt = internal constant [655 x i16] [i16 0, i16 6, i16 7, i16 8, i16 9, i16 6, i16 6, i16 6, i16 10, i16 9, i16 9, i16 9, i16 9, i16 11, i16 12, i16 9, i16 13, i16 9, i16 14, i16 9, i16 9, i16 9, i16 9, i16 15, i16 16, i16 9, i16 17, i16 9, i16 9, i16 18, i16 20, i16 21, i16 22, i16 18, i16 18, i16 18, i16 23, i16 22, i16 22, i16 22, i16 22, i16 24, i16 25, i16 22, i16 26, i16 22, i16 27, i16 22, i16 22, i16 22, i16 22, i16 28, i16 29, i16 22, i16 30, i16 22, i16 22, i16 18, i16 31, i16 32, i16 34, i16 35, i16 38, i16 18, i16 18, i16 18, i16 18, i16 31, i16 32, i16 37, i16 41, i16 39, i16 18, i16 18, i16 18, i16 33, i16 40, i16 33, i16 42, i16 37, i16 33, i16 34, i16 35, i16 33, i16 38, i16 33, i16 41, i16 39, i16 40, i16 33, i16 33, i16 33, i16 42, i16 36, i16 46, i16 33, i16 34, i16 35, i16 67, i16 33, i16 33, i16 33, i16 33, i16 33, i16 18, i16 31, i16 32, i16 45, i16 18, i16 18, i16 44, i16 18, i16 18, i16 18, i16 47, i16 48, i16 50, i16 51, i16 33, i16 52, i16 53, i16 61, i16 33, i16 33, i16 33, i16 60, i16 49, i16 62, i16 33, i16 66, i16 68, i16 65, i16 33, i16 33, i16 33, i16 33, i16 33, i16 69, i16 33, i16 71, i16 72, i16 33, i16 18, i16 54, i16 55, i16 163, i16 73, i16 74, i16 18, i16 18, i16 18, i16 18, i16 57, i16 19, i16 76, i16 77, i16 33, i16 59, i16 18, i16 18, i16 18, i16 48, i16 32, i16 162, i16 64, i16 18, i16 44, i16 18, i16 18, i16 18, i16 54, i16 55, i16 33, i16 75, i16 160, i16 70, i16 18, i16 54, i16 55, i16 83, i16 33, i16 33, i16 18, i16 18, i16 18, i16 18, i16 57, i16 19, i16 33, i16 84, i16 85, i16 18, i16 18, i16 18, i16 18, i16 78, i16 79, i16 89, i16 86, i16 158, i16 18, i16 18, i16 18, i16 19, i16 71, i16 72, i16 76, i16 77, i16 153, i16 93, i16 146, i16 81, i16 81, i16 33, i16 33, i16 33, i16 81, i16 78, i16 79, i16 81, i16 95, i16 19, i16 94, i16 33, i16 81, i16 82, i16 18, i16 68, i16 32, i16 143, i16 88, i16 88, i16 44, i16 18, i16 18, i16 88, i16 18, i16 90, i16 19, i16 96, i16 19, i16 141, i16 92, i16 18, i16 18, i16 18, i16 73, i16 74, i16 136, i16 18, i16 18, i16 44, i16 18, i16 18, i16 18, i16 18, i16 78, i16 79, i16 97, i16 84, i16 85, i16 18, i16 18, i16 18, i16 98, i16 106, i16 107, i16 110, i16 134, i16 33, i16 102, i16 103, i16 111, i16 33, i16 18, i16 99, i16 100, i16 106, i16 107, i16 115, i16 18, i16 18, i16 18, i16 18, i16 102, i16 103, i16 108, i16 109, i16 131, i16 18, i16 18, i16 18, i16 18, i16 89, i16 32, i16 129, i16 105, i16 105, i16 44, i16 18, i16 18, i16 105, i16 18, i16 90, i16 19, i16 33, i16 114, i16 126, i16 18, i16 18, i16 18, i16 33, i16 33, i16 18, i16 95, i16 19, i16 130, i16 18, i16 18, i16 18, i16 18, i16 18, i16 18, i16 18, i16 96, i16 19, i16 123, i16 18, i16 18, i16 18, i16 18, i16 18, i16 18, i16 99, i16 100, i16 119, i16 120, i16 121, i16 70, i16 18, i16 99, i16 100, i16 33, i16 148, i16 149, i16 18, i16 18, i16 18, i16 18, i16 116, i16 117, i16 138, i16 139, i16 105, i16 18, i16 18, i16 18, i16 18, i16 119, i16 120, i16 148, i16 149, i16 118, i16 18, i16 18, i16 18, i16 18, i16 108, i16 109, i16 113, i16 18, i16 18, i16 122, i16 18, i16 18, i16 18, i16 18, i16 110, i16 19, i16 150, i16 19, i16 112, i16 18, i16 18, i16 18, i16 18, i16 124, i16 125, i16 154, i16 19, i16 104, i16 18, i16 18, i16 18, i16 18, i16 127, i16 128, i16 164, i16 165, i16 88, i16 18, i16 18, i16 18, i16 18, i16 115, i16 32, i16 101, i16 18, i16 18, i16 44, i16 18, i16 18, i16 18, i16 116, i16 117, i16 164, i16 165, i16 91, i16 70, i16 18, i16 116, i16 117, i16 166, i16 167, i16 87, i16 18, i16 18, i16 18, i16 18, i16 132, i16 133, i16 168, i16 169, i16 80, i16 18, i16 18, i16 18, i16 18, i16 135, i16 19, i16 63, i16 58, i16 56, i16 137, i16 18, i16 18, i16 18, i16 138, i16 139, i16 43, i16 124, i16 125, i16 18, i16 18, i16 18, i16 140, i16 18, i16 124, i16 125, i16 33, i16 18, i16 4, i16 18, i16 18, i16 18, i16 18, i16 127, i16 128, i16 110, i16 18, i16 18, i16 142, i16 18, i16 18, i16 18, i16 18, i16 127, i16 128, i16 33, i16 33, i16 19, i16 18, i16 18, i16 18, i16 18, i16 130, i16 32, i16 19, i16 18, i16 18, i16 44, i16 18, i16 18, i16 18, i16 18, i16 144, i16 145, i16 170, i16 132, i16 133, i16 18, i16 18, i16 18, i16 147, i16 18, i16 132, i16 133, i16 5, i16 170, i16 170, i16 18, i16 18, i16 18, i16 18, i16 135, i16 19, i16 170, i16 150, i16 19, i16 18, i16 18, i16 18, i16 151, i16 18, i16 152, i16 128, i16 170, i16 154, i16 19, i16 18, i16 18, i16 18, i16 155, i16 18, i16 156, i16 157, i16 170, i16 144, i16 145, i16 18, i16 18, i16 18, i16 70, i16 18, i16 144, i16 145, i16 170, i16 170, i16 170, i16 18, i16 18, i16 18, i16 18, i16 159, i16 19, i16 170, i16 170, i16 170, i16 161, i16 18, i16 18, i16 18, i16 150, i16 19, i16 170, i16 152, i16 128, i16 18, i16 18, i16 18, i16 142, i16 18, i16 152, i16 128, i16 170, i16 170, i16 170, i16 18, i16 18, i16 18, i16 18, i16 154, i16 19, i16 170, i16 156, i16 157, i16 18, i16 18, i16 18, i16 70, i16 18, i16 156, i16 157, i16 170, i16 170, i16 170, i16 18, i16 18, i16 18, i16 18, i16 159, i16 19, i16 170, i16 170, i16 170, i16 18, i16 18, i16 18, i16 18, i16 166, i16 167, i16 170, i16 170, i16 170, i16 18, i16 18, i16 18, i16 18, i16 168, i16 169, i16 170, i16 170, i16 170, i16 18, i16 18, i16 18, i16 3, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170, i16 170], align 16
@yytext = internal global i8* null, align 8
@yyleng = internal global i32 0, align 4
@.str.314 = private unnamed_addr constant [25 x i8] c"Unrecognized command: %s\00", align 1
@yy_n_chars = internal global i32 0, align 4
@yy_did_buffer_switch_on_eof = internal global i32 0, align 4
@.str.1.315 = private unnamed_addr constant [51 x i8] c"fatal flex scanner internal error--no action found\00", align 1
@.str.9.316 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.6.317 = private unnamed_addr constant [56 x i8] c"fatal flex scanner internal error--end of buffer missed\00", align 1
@.str.7.318 = private unnamed_addr constant [44 x i8] c"fatal error - scanner input buffer overflow\00", align 1
@.str.8.319 = private unnamed_addr constant [29 x i8] c"input in flex scanner failed\00", align 1
@.str.2.320 = private unnamed_addr constant [44 x i8] c"out of dynamic memory in yy_create_buffer()\00", align 1
@.str.5.323 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.6.324 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7.325 = private unnamed_addr constant [24 x i8] c"Resolver internal error\00", align 1
@h_nerr = dso_local global i32 5, align 4
@h_errlist = dso_local global [5 x i8*] [i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.328, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.329, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.330, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4.331, i32 0, i32 0)], align 16
@.str.8.326 = private unnamed_addr constant [23 x i8] c"Unknown resolver error\00", align 1
@.str.327 = private unnamed_addr constant [28 x i8] c"Resolver Error 0 (no error)\00", align 1
@.str.1.328 = private unnamed_addr constant [13 x i8] c"Unknown host\00", align 1
@.str.2.329 = private unnamed_addr constant [25 x i8] c"Host name lookup failure\00", align 1
@.str.3.330 = private unnamed_addr constant [21 x i8] c"Unknown server error\00", align 1
@.str.4.331 = private unnamed_addr constant [32 x i8] c"No address associated with name\00", align 1
@__p_rcode_syms = internal constant [16 x %struct.res_sym] [%struct.res_sym { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i32 0, i32 0) }, %struct.res_sym { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.138, i32 0, i32 0) }, %struct.res_sym { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i32 0, i32 0) }, %struct.res_sym { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.142, i32 0, i32 0) }, %struct.res_sym { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.144, i32 0, i32 0) }, %struct.res_sym { i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i32 0, i32 0) }, %struct.res_sym { i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.148, i32 0, i32 0) }, %struct.res_sym { i32 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.150, i32 0, i32 0) }, %struct.res_sym { i32 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i32 0, i32 0) }, %struct.res_sym { i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.154, i32 0, i32 0) }, %struct.res_sym { i32 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.156, i32 0, i32 0) }, %struct.res_sym { i32 11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.157, i32 0, i32 0) }, %struct.res_sym { i32 16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0) }, %struct.res_sym { i32 17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0) }, %struct.res_sym { i32 18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.163, i32 0, i32 0) }, %struct.res_sym zeroinitializer], align 16
@__sym_ntos.unname = internal global [20 x i8] zeroinitializer, align 16
@.str.164 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.135 = private unnamed_addr constant [8 x i8] c"NOERROR\00", align 1
@.str.136 = private unnamed_addr constant [9 x i8] c"no error\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"FORMERR\00", align 1
@.str.138 = private unnamed_addr constant [13 x i8] c"format error\00", align 1
@.str.139 = private unnamed_addr constant [9 x i8] c"SERVFAIL\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"server failed\00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c"NXDOMAIN\00", align 1
@.str.142 = private unnamed_addr constant [20 x i8] c"no such domain name\00", align 1
@.str.143 = private unnamed_addr constant [7 x i8] c"NOTIMP\00", align 1
@.str.144 = private unnamed_addr constant [16 x i8] c"not implemented\00", align 1
@.str.145 = private unnamed_addr constant [8 x i8] c"REFUSED\00", align 1
@.str.146 = private unnamed_addr constant [8 x i8] c"refused\00", align 1
@.str.147 = private unnamed_addr constant [9 x i8] c"YXDOMAIN\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"domain name exists\00", align 1
@.str.149 = private unnamed_addr constant [8 x i8] c"YXRRSET\00", align 1
@.str.150 = private unnamed_addr constant [13 x i8] c"rrset exists\00", align 1
@.str.151 = private unnamed_addr constant [8 x i8] c"NXRRSET\00", align 1
@.str.152 = private unnamed_addr constant [20 x i8] c"rrset doesn't exist\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"NOTAUTH\00", align 1
@.str.154 = private unnamed_addr constant [18 x i8] c"not authoritative\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"NOTZONE\00", align 1
@.str.156 = private unnamed_addr constant [12 x i8] c"Not in zone\00", align 1
@.str.157 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"BADSIG\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"bad signature\00", align 1
@.str.160 = private unnamed_addr constant [7 x i8] c"BADKEY\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"bad key\00", align 1
@.str.162 = private unnamed_addr constant [8 x i8] c"BADTIME\00", align 1
@.str.163 = private unnamed_addr constant [9 x i8] c"bad time\00", align 1
@__sym_ntop.unname = internal global [20 x i8] zeroinitializer, align 16
@__p_type_syms = internal constant [45 x %struct.res_sym] [%struct.res_sym { i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49.344, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50.345, i32 0, i32 0) }, %struct.res_sym { i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51.346, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52.347, i32 0, i32 0) }, %struct.res_sym { i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53.348, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54.349, i32 0, i32 0) }, %struct.res_sym { i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55.350, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.56.351, i32 0, i32 0) }, %struct.res_sym { i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57.352, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58.353, i32 0, i32 0) }, %struct.res_sym { i32 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59.354, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60.355, i32 0, i32 0) }, %struct.res_sym { i32 7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61.356, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62.357, i32 0, i32 0) }, %struct.res_sym { i32 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.358, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64.359, i32 0, i32 0) }, %struct.res_sym { i32 9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65.360, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66.361, i32 0, i32 0) }, %struct.res_sym { i32 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67.362, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68.363, i32 0, i32 0) }, %struct.res_sym { i32 11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69.364, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70.365, i32 0, i32 0) }, %struct.res_sym { i32 12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71.366, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72.367, i32 0, i32 0) }, %struct.res_sym { i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73.368, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74.369, i32 0, i32 0) }, %struct.res_sym { i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75.370, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.76.371, i32 0, i32 0) }, %struct.res_sym { i32 15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.372, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78.373, i32 0, i32 0) }, %struct.res_sym { i32 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79.374, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80.375, i32 0, i32 0) }, %struct.res_sym { i32 17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81.376, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.82.377, i32 0, i32 0) }, %struct.res_sym { i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83.378, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.84.379, i32 0, i32 0) }, %struct.res_sym { i32 19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85.380, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86.381, i32 0, i32 0) }, %struct.res_sym { i32 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87.382, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.88.383, i32 0, i32 0) }, %struct.res_sym { i32 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89.384, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0) }, %struct.res_sym { i32 22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0) }, %struct.res_sym { i32 23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72.367, i32 0, i32 0) }, %struct.res_sym { i32 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.95, i32 0, i32 0) }, %struct.res_sym { i32 25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0) }, %struct.res_sym { i32 26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.99, i32 0, i32 0) }, %struct.res_sym { i32 27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.101, i32 0, i32 0) }, %struct.res_sym { i32 28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.103, i32 0, i32 0) }, %struct.res_sym { i32 29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105.385, i32 0, i32 0) }, %struct.res_sym { i32 30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.107, i32 0, i32 0) }, %struct.res_sym { i32 31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.109, i32 0, i32 0) }, %struct.res_sym { i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.111, i32 0, i32 0) }, %struct.res_sym { i32 33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.113, i32 0, i32 0) }, %struct.res_sym { i32 34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i32 0, i32 0) }, %struct.res_sym { i32 250, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.117, i32 0, i32 0) }, %struct.res_sym { i32 251, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.119, i32 0, i32 0) }, %struct.res_sym { i32 252, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0) }, %struct.res_sym { i32 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i32 0, i32 0) }, %struct.res_sym { i32 253, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.125, i32 0, i32 0) }, %struct.res_sym { i32 254, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.127, i32 0, i32 0) }, %struct.res_sym { i32 35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i32 0, i32 0) }, %struct.res_sym { i32 36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.131, i32 0, i32 0) }, %struct.res_sym { i32 37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.133, i32 0, i32 0) }, %struct.res_sym { i32 255, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.386, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0) }, %struct.res_sym zeroinitializer], align 16
@.str.49.344 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.50.345 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.51.346 = private unnamed_addr constant [3 x i8] c"NS\00", align 1
@.str.52.347 = private unnamed_addr constant [12 x i8] c"name server\00", align 1
@.str.53.348 = private unnamed_addr constant [3 x i8] c"MD\00", align 1
@.str.54.349 = private unnamed_addr constant [30 x i8] c"mail destination (deprecated)\00", align 1
@.str.55.350 = private unnamed_addr constant [3 x i8] c"MF\00", align 1
@.str.56.351 = private unnamed_addr constant [28 x i8] c"mail forwarder (deprecated)\00", align 1
@.str.57.352 = private unnamed_addr constant [6 x i8] c"CNAME\00", align 1
@.str.58.353 = private unnamed_addr constant [15 x i8] c"canonical name\00", align 1
@.str.59.354 = private unnamed_addr constant [4 x i8] c"SOA\00", align 1
@.str.60.355 = private unnamed_addr constant [19 x i8] c"start of authority\00", align 1
@.str.61.356 = private unnamed_addr constant [3 x i8] c"MB\00", align 1
@.str.62.357 = private unnamed_addr constant [8 x i8] c"mailbox\00", align 1
@.str.63.358 = private unnamed_addr constant [3 x i8] c"MG\00", align 1
@.str.64.359 = private unnamed_addr constant [18 x i8] c"mail group member\00", align 1
@.str.65.360 = private unnamed_addr constant [3 x i8] c"MR\00", align 1
@.str.66.361 = private unnamed_addr constant [12 x i8] c"mail rename\00", align 1
@.str.67.362 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.68.363 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.69.364 = private unnamed_addr constant [4 x i8] c"WKS\00", align 1
@.str.70.365 = private unnamed_addr constant [32 x i8] c"well-known service (deprecated)\00", align 1
@.str.71.366 = private unnamed_addr constant [4 x i8] c"PTR\00", align 1
@.str.72.367 = private unnamed_addr constant [20 x i8] c"domain name pointer\00", align 1
@.str.73.368 = private unnamed_addr constant [6 x i8] c"HINFO\00", align 1
@.str.74.369 = private unnamed_addr constant [17 x i8] c"host information\00", align 1
@.str.75.370 = private unnamed_addr constant [6 x i8] c"MINFO\00", align 1
@.str.76.371 = private unnamed_addr constant [20 x i8] c"mailbox information\00", align 1
@.str.77.372 = private unnamed_addr constant [3 x i8] c"MX\00", align 1
@.str.78.373 = private unnamed_addr constant [15 x i8] c"mail exchanger\00", align 1
@.str.79.374 = private unnamed_addr constant [4 x i8] c"TXT\00", align 1
@.str.80.375 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.81.376 = private unnamed_addr constant [3 x i8] c"RP\00", align 1
@.str.82.377 = private unnamed_addr constant [19 x i8] c"responsible person\00", align 1
@.str.83.378 = private unnamed_addr constant [6 x i8] c"AFSDB\00", align 1
@.str.84.379 = private unnamed_addr constant [18 x i8] c"DCE or AFS server\00", align 1
@.str.85.380 = private unnamed_addr constant [4 x i8] c"X25\00", align 1
@.str.86.381 = private unnamed_addr constant [12 x i8] c"X25 address\00", align 1
@.str.87.382 = private unnamed_addr constant [5 x i8] c"ISDN\00", align 1
@.str.88.383 = private unnamed_addr constant [13 x i8] c"ISDN address\00", align 1
@.str.89.384 = private unnamed_addr constant [3 x i8] c"RT\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"router\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"NSAP\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"nsap address\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"NSAP_PTR\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"SIG\00", align 1
@.str.95 = private unnamed_addr constant [10 x i8] c"signature\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"KEY\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c"PX\00", align 1
@.str.99 = private unnamed_addr constant [20 x i8] c"mapping information\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"GPOS\00", align 1
@.str.101 = private unnamed_addr constant [34 x i8] c"geographical position (withdrawn)\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"AAAA\00", align 1
@.str.103 = private unnamed_addr constant [13 x i8] c"IPv6 address\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"LOC\00", align 1
@.str.105.385 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"NXT\00", align 1
@.str.107 = private unnamed_addr constant [32 x i8] c"next valid name (unimplemented)\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"EID\00", align 1
@.str.109 = private unnamed_addr constant [36 x i8] c"endpoint identifier (unimplemented)\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"NIMLOC\00", align 1
@.str.111 = private unnamed_addr constant [31 x i8] c"NIMROD locator (unimplemented)\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"SRV\00", align 1
@.str.113 = private unnamed_addr constant [17 x i8] c"server selection\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"ATMA\00", align 1
@.str.115 = private unnamed_addr constant [28 x i8] c"ATM address (unimplemented)\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"TSIG\00", align 1
@.str.117 = private unnamed_addr constant [22 x i8] c"transaction signature\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"IXFR\00", align 1
@.str.119 = private unnamed_addr constant [26 x i8] c"incremental zone transfer\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"AXFR\00", align 1
@.str.121 = private unnamed_addr constant [14 x i8] c"zone transfer\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"ZXFR\00", align 1
@.str.123 = private unnamed_addr constant [25 x i8] c"compressed zone transfer\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"MAILB\00", align 1
@.str.125 = private unnamed_addr constant [34 x i8] c"mailbox-related data (deprecated)\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"MAILA\00", align 1
@.str.127 = private unnamed_addr constant [24 x i8] c"mail agent (deprecated)\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"NAPTR\00", align 1
@.str.129 = private unnamed_addr constant [21 x i8] c"URN Naming Authority\00", align 1
@.str.130 = private unnamed_addr constant [3 x i8] c"KX\00", align 1
@.str.131 = private unnamed_addr constant [13 x i8] c"Key Exchange\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"CERT\00", align 1
@.str.133 = private unnamed_addr constant [12 x i8] c"Certificate\00", align 1
@.str.20.386 = private unnamed_addr constant [4 x i8] c"ANY\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"\22any\22\00", align 1
@__p_class_syms = internal constant [7 x %struct.res_sym] [%struct.res_sym { i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.391, i32 0, i32 0), i8* null }, %struct.res_sym { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.392, i32 0, i32 0), i8* null }, %struct.res_sym { i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.393, i32 0, i32 0), i8* null }, %struct.res_sym { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.394, i32 0, i32 0), i8* null }, %struct.res_sym { i32 255, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.386, i32 0, i32 0), i8* null }, %struct.res_sym { i32 254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.395, i32 0, i32 0), i8* null }, %struct.res_sym { i32 1, i8* null, i8* null }], align 16
@.str.16.391 = private unnamed_addr constant [3 x i8] c"IN\00", align 1
@.str.17.392 = private unnamed_addr constant [6 x i8] c"CHAOS\00", align 1
@.str.18.393 = private unnamed_addr constant [3 x i8] c"HS\00", align 1
@.str.19.394 = private unnamed_addr constant [7 x i8] c"HESIOD\00", align 1
@.str.21.395 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@__p_time.nbuf = internal global [40 x i8] zeroinitializer, align 16
@.str.178 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@__loc_ntoa.tmpbuf = internal global [87 x i8] zeroinitializer, align 16
@.str.180 = private unnamed_addr constant [32 x i8] c"; error: unknown LOC RR version\00", align 1
@__loc_ntoa.error = internal global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i32 0, i32 0), align 8
@.str.181 = private unnamed_addr constant [63 x i8] c"%d %.2d %.2d.%.3d %c %d %.2d %.2d.%.3d %c %d.%.2dm %sm %sm %sm\00", align 1
@.str.179 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@poweroften = internal global [10 x i32] [i32 1, i32 10, i32 100, i32 1000, i32 10000, i32 100000, i32 1000000, i32 10000000, i32 100000000, i32 1000000000], align 16
@precsize_ntoa.retbuf = internal global [12 x i8] zeroinitializer, align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"%ld.%.2ld\00", align 1
@__p_secstodate.output = internal global [15 x i8] zeroinitializer, align 1
@.str.182 = private unnamed_addr constant [25 x i8] c"%04d%02d%02d%02d%02d%02d\00", align 1
@_res = internal global %struct.__res_state zeroinitializer, align 8
@_res_opcodes = internal global [16 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.404, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.405, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.406, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.407, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.408, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.409, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.410, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.411, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.412, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.413, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.414, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.415, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.416, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.417, i32 0, i32 0)], align 16
@.str.402 = private unnamed_addr constant [6 x i8] c"QUERY\00", align 1
@.str.1.403 = private unnamed_addr constant [7 x i8] c"IQUERY\00", align 1
@.str.2.404 = private unnamed_addr constant [8 x i8] c"CQUERYM\00", align 1
@.str.3.405 = private unnamed_addr constant [8 x i8] c"CQUERYU\00", align 1
@.str.4.406 = private unnamed_addr constant [7 x i8] c"NOTIFY\00", align 1
@.str.5.407 = private unnamed_addr constant [7 x i8] c"UPDATE\00", align 1
@.str.6.408 = private unnamed_addr constant [2 x i8] c"6\00", align 1
@.str.7.409 = private unnamed_addr constant [2 x i8] c"7\00", align 1
@.str.8.410 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.9.411 = private unnamed_addr constant [2 x i8] c"9\00", align 1
@.str.10.412 = private unnamed_addr constant [3 x i8] c"10\00", align 1
@.str.11.413 = private unnamed_addr constant [3 x i8] c"11\00", align 1
@.str.12.414 = private unnamed_addr constant [3 x i8] c"12\00", align 1
@.str.13.415 = private unnamed_addr constant [3 x i8] c"13\00", align 1
@.str.14.416 = private unnamed_addr constant [9 x i8] c"ZONEINIT\00", align 1
@.str.15.417 = private unnamed_addr constant [8 x i8] c"ZONEREF\00", align 1
@.str.430 = private unnamed_addr constant [12 x i8] c"LOCALDOMAIN\00", align 1
@.str.1.431 = private unnamed_addr constant [17 x i8] c"/etc/resolv.conf\00", align 1
@.str.2.432 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.3.433 = private unnamed_addr constant [7 x i8] c"domain\00", align 1
@.str.4.434 = private unnamed_addr constant [4 x i8] c" \09\0A\00", align 1
@.str.5.435 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.6.436 = private unnamed_addr constant [11 x i8] c"nameserver\00", align 1
@.str.7.437 = private unnamed_addr constant [9 x i8] c"sortlist\00", align 1
@sort_mask = internal constant [3 x i8] c"/&\00", align 1
@.str.8.438 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@.str.9.439 = private unnamed_addr constant [5 x i8] c"conf\00", align 1
@.str.10.440 = private unnamed_addr constant [12 x i8] c"RES_OPTIONS\00", align 1
@.str.11.441 = private unnamed_addr constant [4 x i8] c"env\00", align 1
@.str.12.442 = private unnamed_addr constant [34 x i8] c";; res_setoptions(\22%s\22, \22%s\22)...\0A\00", align 1
@.str.13.443 = private unnamed_addr constant [7 x i8] c"ndots:\00", align 1
@.str.14.444 = private unnamed_addr constant [13 x i8] c";;\09ndots=%d\0A\00", align 1
@.str.15.445 = private unnamed_addr constant [9 x i8] c"timeout:\00", align 1
@.str.16.446 = private unnamed_addr constant [10 x i8] c"attempts:\00", align 1
@.str.17.447 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.18.448 = private unnamed_addr constant [33 x i8] c";; res_setoptions(\22%s\22, \22%s\22)..\0A\00", align 1
@.str.19.449 = private unnamed_addr constant [10 x i8] c";;\09debug\0A\00", align 1
@.str.20.450 = private unnamed_addr constant [6 x i8] c"inet6\00", align 1
@.str.21.451 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.22.452 = private unnamed_addr constant [15 x i8] c"no-check-names\00", align 1
@.str.455 = private unnamed_addr constant [33 x i8] c";; res_nmkquery(%s, %s, %s, %s)\0A\00", align 1
@.str.7.458 = private unnamed_addr constant [12 x i8] c"HOSTALIASES\00", align 1
@.str.8.459 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@__inet_nsap_ntoa.tmpbuf = internal global [765 x i8] zeroinitializer, align 16
@.str.466 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@inet_ntop4.fmt = internal constant [12 x i8] c"%u.%u.%u.%u\00", align 1
@__inet_ntoa.ret = internal global [18 x i8] zeroinitializer, align 16
@.str.469 = private unnamed_addr constant [18 x i8] c"[inet_ntoa error]\00", align 1
@_ns_flagdata = internal global [16 x %struct._ns_flagdata] [%struct._ns_flagdata { i32 32768, i32 15 }, %struct._ns_flagdata { i32 30720, i32 11 }, %struct._ns_flagdata { i32 1024, i32 10 }, %struct._ns_flagdata { i32 512, i32 9 }, %struct._ns_flagdata { i32 256, i32 8 }, %struct._ns_flagdata { i32 128, i32 7 }, %struct._ns_flagdata { i32 64, i32 6 }, %struct._ns_flagdata { i32 32, i32 5 }, %struct._ns_flagdata { i32 16, i32 4 }, %struct._ns_flagdata { i32 15, i32 0 }, %struct._ns_flagdata zeroinitializer, %struct._ns_flagdata zeroinitializer, %struct._ns_flagdata zeroinitializer, %struct._ns_flagdata zeroinitializer, %struct._ns_flagdata zeroinitializer, %struct._ns_flagdata zeroinitializer], align 16
@.str.478 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.481 = private unnamed_addr constant [4 x i8] c"\09\09\09\00", align 1
@.str.2.482 = private unnamed_addr constant [5 x i8] c"@\09\09\09\00", align 1
@.str.3.483 = private unnamed_addr constant [7 x i8] c" %s %s\00", align 1
@.str.4.484 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5.485 = private unnamed_addr constant [4 x i8] c" (\0A\00", align 1
@.str.6.486 = private unnamed_addr constant [6 x i8] c"\09\09\09\09\09\00", align 1
@.str.7.487 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.8.488 = private unnamed_addr constant [10 x i8] c"; serial\0A\00", align 1
@.str.9.489 = private unnamed_addr constant [11 x i8] c"; refresh\0A\00", align 1
@.str.10.490 = private unnamed_addr constant [9 x i8] c"; retry\0A\00", align 1
@.str.11.491 = private unnamed_addr constant [10 x i8] c"; expiry\0A\00", align 1
@.str.12.492 = private unnamed_addr constant [3 x i8] c" )\00", align 1
@.str.13.493 = private unnamed_addr constant [11 x i8] c"; minimum\0A\00", align 1
@.str.14.494 = private unnamed_addr constant [4 x i8] c"%u \00", align 1
@.str.15.495 = private unnamed_addr constant [7 x i8] c"%u %u \00", align 1
@.str.16.496 = private unnamed_addr constant [10 x i8] c"%u %u %u \00", align 1
@.str.17.497 = private unnamed_addr constant [7 x i8] c" %u ( \00", align 1
@.str.18.498 = private unnamed_addr constant [6 x i8] c"\0A\09\09\09\09\00", align 1
@.str.19.499 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.20.500 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.21.501 = private unnamed_addr constant [13 x i8] c"0x%04x %u %u\00", align 1
@.str.22.502 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.23.503 = private unnamed_addr constant [4 x i8] c"\0A\09\09\00", align 1
@.str.24.504 = private unnamed_addr constant [11 x i8] c"%s %d %lu \00", align 1
@.str.25.505 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.26.506 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.27.507 = private unnamed_addr constant [10 x i8] c"%d %d %d \00", align 1
@.str.28.508 = private unnamed_addr constant [25 x i8] c"record too long to print\00", align 1
@.str.29.509 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.30.510 = private unnamed_addr constant [16 x i8] c"unknown RR type\00", align 1
@.str.31.511 = private unnamed_addr constant [16 x i8] c"RR format error\00", align 1
@.str.32.512 = private unnamed_addr constant [10 x i8] c"\5C#(\09\09; %s\00", align 1
@.str.33.513 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.34.514 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.35.515 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.36.516 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.37.517 = private unnamed_addr constant [4 x i8] c"\0A\22\5C\00", align 1
@.str.38.518 = private unnamed_addr constant [2 x i8] c"\5C\00", align 1
@__assertion_failed = external dso_local global void (i8*, i32, i32, i8*, i32)*, align 8
@.str.39.519 = private unnamed_addr constant [11 x i8] c"ns_print.c\00", align 1
@.str.40.520 = private unnamed_addr constant [15 x i8] c"len <= *buflen\00", align 1
@.str.41.521 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.42.522 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.533 = private unnamed_addr constant [5 x i8] c"%d%c\00", align 1
@digits = internal constant [11 x i8] c"0123456789\00", align 1
@bnAdd = internal global [8 x i8] zeroinitializer, align 8
@bnAddQ = internal global [8 x i8] zeroinitializer, align 8
@bnBits = internal global [8 x i8] zeroinitializer, align 8
@bnCmp = internal global [8 x i8] zeroinitializer, align 8
@bnCmpQ = internal global [8 x i8] zeroinitializer, align 8
@bnCopy = internal global [8 x i8] zeroinitializer, align 8
@bnDivMod = internal global [8 x i8] zeroinitializer, align 8
@bnDoubleExpMod = internal global [8 x i8] zeroinitializer, align 8
@bnEnd = internal global [8 x i8] zeroinitializer, align 8
@bnExpMod = internal global [8 x i8] zeroinitializer, align 8
@bnExtractBigBytes = internal global [8 x i8] zeroinitializer, align 8
@bnExtractLittleBytes = internal global [8 x i8] zeroinitializer, align 8
@bnGcd = internal global [8 x i8] zeroinitializer, align 8
@bnInsertBigBytes = internal global [8 x i8] zeroinitializer, align 8
@bnInsertLittleBytes = internal global [8 x i8] zeroinitializer, align 8
@bnInv = internal global [8 x i8] zeroinitializer, align 8
@bnLSWord = internal global [8 x i8] zeroinitializer, align 8
@bnLShift = internal global [8 x i8] zeroinitializer, align 8
@bnMakeOdd = internal global [8 x i8] zeroinitializer, align 8
@bnMod = internal global [8 x i8] zeroinitializer, align 8
@bnModQ = internal global [8 x i8] zeroinitializer, align 8
@bnMul = internal global [8 x i8] zeroinitializer, align 8
@bnMulQ = internal global [8 x i8] zeroinitializer, align 8
@bnNorm = internal global [8 x i8] zeroinitializer, align 8
@bnPrealloc = internal global [8 x i8] zeroinitializer, align 8
@bnRShift = internal global [8 x i8] zeroinitializer, align 8
@bnSetQ = internal global [8 x i8] zeroinitializer, align 8
@bnSquare = internal global [8 x i8] zeroinitializer, align 8
@bnSub = internal global [8 x i8] zeroinitializer, align 8
@bnSubQ = internal global [8 x i8] zeroinitializer, align 8
@bnTwoExpMod = internal global [8 x i8] zeroinitializer, align 8
@dst_t_func = internal global [1264 x i8] zeroinitializer, align 16
@h_errno = internal global [4 x i8] zeroinitializer, align 4
@mtime = internal global [8 x i8] zeroinitializer, align 8
@specialMalloc = external thread_local global i8, align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.hostent*, align 8
  %11 = alloca %struct.in_addr, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %6, align 8
  %12 = call i32 @__res_ninit(%struct.__res_state* @res)
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %17

; <label>:14:                                     ; preds = %2
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0))
  call void @exit(i32 1) #8
  unreachable

; <label>:17:                                     ; preds = %2
  %18 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 1, i64 40)
  %19 = bitcast i8* %18 to %struct.HostInfo*
  store %struct.HostInfo* %19, %struct.HostInfo** @defaultPtr, align 8
  call void @ReadRC()
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i32 1
  store i8** %21, i8*** %5, align 8
  %22 = load i32, i32* %4, align 4
  %23 = add nsw i32 %22, -1
  store i32 %23, i32* %4, align 4
  br label %24

; <label>:24:                                     ; preds = %44, %17
  %25 = load i32, i32* %4, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %42

; <label>:27:                                     ; preds = %24
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 45
  br i1 %33, label %34, label %42

; <label>:34:                                     ; preds = %27
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp ne i32 %40, 0
  br label %42

; <label>:42:                                     ; preds = %34, %27, %24
  %43 = phi i1 [ false, %27 ], [ false, %24 ], [ %41, %34 ]
  br i1 %43, label %44, label %54

; <label>:44:                                     ; preds = %42
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = call i32 @SetOption(i8* %48)
  %50 = load i8**, i8*** %5, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i32 1
  store i8** %51, i8*** %5, align 8
  %52 = load i32, i32* %4, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %4, align 4
  br label %24

; <label>:54:                                     ; preds = %42
  %55 = load i32, i32* %4, align 4
  %56 = icmp sgt i32 %55, 2
  br i1 %56, label %57, label %59

; <label>:57:                                     ; preds = %54
  %58 = call i32 @Usage()
  br label %59

; <label>:59:                                     ; preds = %57, %54
  %60 = load i32, i32* %4, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %72

; <label>:62:                                     ; preds = %59
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 0
  %65 = load i8*, i8** %64, align 8
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp ne i32 %67, 45
  br i1 %68, label %69, label %72

; <label>:69:                                     ; preds = %62
  %70 = load i8**, i8*** %5, align 8
  %71 = load i8*, i8** %70, align 8
  store i8* %71, i8** %6, align 8
  br label %72

; <label>:72:                                     ; preds = %69, %62, %59
  store i32 0, i32* %7, align 4
  %73 = load i32, i32* %4, align 4
  %74 = icmp eq i32 %73, 2
  br i1 %74, label %75, label %135

; <label>:75:                                     ; preds = %72
  %76 = load i8**, i8*** %5, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i32 1
  store i8** %77, i8*** %5, align 8
  %78 = load i8*, i8** %77, align 8
  %79 = call i32 @__inet_aton(i8* %78, %struct.in_addr* %11)
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %83

; <label>:81:                                     ; preds = %75
  store i32 1, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 3), align 8
  %82 = bitcast %struct.in_addr* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.in_addr* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4, i64 0, i32 2) to i8*), i8* align 4 %82, i64 4, i1 false)
  br label %134

; <label>:83:                                     ; preds = %75
  %84 = load i8**, i8*** %5, align 8
  %85 = load i8*, i8** %84, align 8
  %86 = call %struct.hostent* @gethostbyname(i8* %85)
  store %struct.hostent* %86, %struct.hostent** %10, align 8
  %87 = load %struct.hostent*, %struct.hostent** %10, align 8
  %88 = icmp eq %struct.hostent* %87, null
  br i1 %88, label %89, label %96

; <label>:89:                                     ; preds = %83
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %91 = load i8**, i8*** %5, align 8
  %92 = load i8*, i8** %91, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i32 0, i32 0), i8* %92)
  call void @herror(i8* null)
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %95 = call i32 @fputc(i32 10, %struct._IO_FILE* %94)
  br label %133

; <label>:96:                                     ; preds = %83
  store i32 0, i32* %9, align 4
  br label %97

; <label>:97:                                     ; preds = %128, %96
  %98 = load i32, i32* %9, align 4
  %99 = icmp slt i32 %98, 3
  br i1 %99, label %100, label %109

; <label>:100:                                    ; preds = %97
  %101 = load %struct.hostent*, %struct.hostent** %10, align 8
  %102 = getelementptr inbounds %struct.hostent, %struct.hostent* %101, i32 0, i32 4
  %103 = load i8**, i8*** %102, align 8
  %104 = load i32, i32* %9, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8*, i8** %103, i64 %105
  %107 = load i8*, i8** %106, align 8
  %108 = icmp ne i8* %107, null
  br label %109

; <label>:109:                                    ; preds = %100, %97
  %110 = phi i1 [ false, %97 ], [ %108, %100 ]
  br i1 %110, label %111, label %131

; <label>:111:                                    ; preds = %109
  %112 = load i32, i32* %9, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4), i64 0, i64 %113
  %115 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %114, i32 0, i32 2
  %116 = bitcast %struct.in_addr* %115 to i8*
  %117 = load %struct.hostent*, %struct.hostent** %10, align 8
  %118 = getelementptr inbounds %struct.hostent, %struct.hostent* %117, i32 0, i32 4
  %119 = load i8**, i8*** %118, align 8
  %120 = load i32, i32* %9, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %119, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = load %struct.hostent*, %struct.hostent** %10, align 8
  %125 = getelementptr inbounds %struct.hostent, %struct.hostent* %124, i32 0, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 1 %123, i64 %127, i1 false)
  br label %128

; <label>:128:                                    ; preds = %111
  %129 = load i32, i32* %9, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %9, align 4
  br label %97

; <label>:131:                                    ; preds = %109
  %132 = load i32, i32* %9, align 4
  store i32 %132, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 3), align 8
  br label %133

; <label>:133:                                    ; preds = %131, %89
  br label %134

; <label>:134:                                    ; preds = %133, %81
  br label %135

; <label>:135:                                    ; preds = %134, %72
  %136 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 3), align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

; <label>:138:                                    ; preds = %135
  %139 = load i32, i32* %7, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %143

; <label>:141:                                    ; preds = %138, %135
  %142 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void @LocalServer(%struct.HostInfo* %142)
  br label %202

; <label>:143:                                    ; preds = %138
  store i32 0, i32* %9, align 4
  br label %144

; <label>:144:                                    ; preds = %191, %143
  %145 = load i32, i32* %9, align 4
  %146 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 3), align 8
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %148, label %194

; <label>:148:                                    ; preds = %144
  %149 = load i32, i32* %9, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4), i64 0, i64 %150
  %152 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %151, i32 0, i32 2
  %153 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %152, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

; <label>:156:                                    ; preds = %148
  %157 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void @LocalServer(%struct.HostInfo* %157)
  br label %194

; <label>:158:                                    ; preds = %148
  %159 = load i32, i32* %9, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4), i64 0, i64 %160
  %162 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %161, i32 0, i32 2
  %163 = load i32, i32* %9, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4), i64 0, i64 %164
  %166 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %165, i32 0, i32 2
  %167 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %168 = call i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*, ...) bitcast (i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*)* @GetHostInfoByAddr to i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*, ...)*)(%struct.in_addr* %162, %struct.in_addr* %166, %struct.HostInfo* %167)
  store i32 %168, i32* %8, align 4
  %169 = load i32, i32* %8, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %183

; <label>:171:                                    ; preds = %158
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %173 = load i32, i32* %9, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4), i64 0, i64 %174
  %176 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %175, i32 0, i32 2
  %177 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %176, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = call i8* @__inet_ntoa(i32 %178)
  %180 = load i32, i32* %8, align 4
  %181 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeError to i8* (i32, ...)*)(i32 %180)
  %182 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %172, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i32 0, i32 0), i8* %179, i8* %181)
  br label %189

; <label>:183:                                    ; preds = %158
  %184 = load i32, i32* %9, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 4), i64 0, i64 %185
  %187 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %186, i32 0, i32 2
  %188 = bitcast %struct.in_addr* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.in_addr* @defaultAddr to i8*), i8* align 4 %188, i64 4, i1 false)
  br label %194

; <label>:189:                                    ; preds = %171
  br label %190

; <label>:190:                                    ; preds = %189
  br label %191

; <label>:191:                                    ; preds = %190
  %192 = load i32, i32* %9, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %9, align 4
  br label %144

; <label>:194:                                    ; preds = %183, %156, %144
  %195 = load i32, i32* %9, align 4
  %196 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 3), align 8
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %198, label %201

; <label>:198:                                    ; preds = %194
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %200 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %199, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0))
  call void @exit(i32 1) #8
  unreachable

; <label>:201:                                    ; preds = %194
  br label %202

; <label>:202:                                    ; preds = %201, %141
  %203 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %204 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %203, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @defaultServer, i32 0, i32 0), i8* %205) #9
  %207 = load i8*, i8** %6, align 8
  %208 = icmp ne i8* %207, null
  br i1 %208, label %209, label %212

; <label>:209:                                    ; preds = %202
  %210 = load i8*, i8** %6, align 8
  %211 = call i32 @LookupHost(i8* %210, i32 0)
  br label %234

; <label>:212:                                    ; preds = %202
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %214 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %213, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), %struct.HostInfo* %214)
  %215 = call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0)) #9
  store i8* %215, i8** @pager, align 8
  %216 = load i8*, i8** @pager, align 8
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %219

; <label>:218:                                    ; preds = %212
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8** @pager, align 8
  br label %219

; <label>:219:                                    ; preds = %218, %212
  %220 = call i32 @_setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @env, i32 0, i32 0)) #10
  %221 = call void (i32)* @signal(i32 2, void (i32)* bitcast (void ()* @IntrHandler to void (i32)*)) #9
  %222 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #9
  %223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0))
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %225 = call i32 @fflush(%struct._IO_FILE* %224)
  br label %226

; <label>:226:                                    ; preds = %229, %219
  %227 = call i32 (...) bitcast (i32 ()* @yylex to i32 (...)*)()
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %229, label %233

; <label>:229:                                    ; preds = %226
  %230 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0))
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %232 = call i32 @fflush(%struct._IO_FILE* %231)
  br label %226

; <label>:233:                                    ; preds = %226
  br label %234

; <label>:234:                                    ; preds = %233, %209
  call void @exit(i32 0) #8
  unreachable
                                                  ; No predecessors!
  %236 = load i32, i32* %3, align 4
  ret i32 %236
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ReadRC() #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca [4096 x i8], align 16
  %4 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0)) #9
  store i8* %4, i8** %2, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %39

; <label>:6:                                      ; preds = %0
  %7 = load i8*, i8** %2, align 8
  %8 = call i64 @strlen(i8* %7) #11
  %9 = add i64 %8, 12
  %10 = icmp ult i64 %9, 4096
  br i1 %10, label %11, label %39

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %13 = load i8*, i8** %2, align 8
  %14 = call i8* @strcpy(i8* %12, i8* %13) #9
  %15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %16 = call i8* @strcat(i8* %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0)) #9
  %17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %18 = call %struct._IO_FILE* @fopen(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i32 0, i32 0))
  store %struct._IO_FILE* %18, %struct._IO_FILE** %1, align 8
  %19 = icmp ne %struct._IO_FILE* %18, null
  br i1 %19, label %20, label %38

; <label>:20:                                     ; preds = %11
  br label %21

; <label>:21:                                     ; preds = %32, %20
  %22 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %24 = call i8* @fgets(i8* %22, i32 4096, %struct._IO_FILE* %23)
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %35

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %28 = call i8* @strchr(i8* %27, i32 10) #11
  store i8* %28, i8** %2, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %26
  %31 = load i8*, i8** %2, align 8
  store i8 0, i8* %31, align 1
  br label %32

; <label>:32:                                     ; preds = %30, %26
  %33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %34 = call i32 @SetOption(i8* %33)
  br label %21

; <label>:35:                                     ; preds = %21
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %37 = call i32 @fclose(%struct._IO_FILE* %36)
  br label %38

; <label>:38:                                     ; preds = %35, %11
  br label %39

; <label>:39:                                     ; preds = %38, %6, %0
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @SetOption(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca [256 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  br label %8

; <label>:8:                                      ; preds = %20, %1
  %9 = call i16** @__ctype_b_loc() #12
  %10 = load i16*, i16** %9, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %10, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 8192
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %8
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %22, i8** %3, align 8
  br label %8

; <label>:23:                                     ; preds = %8
  %24 = load i8*, i8** %3, align 8
  %25 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i64 4) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

; <label>:27:                                     ; preds = %23
  %28 = load i8*, i8** %3, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  store i8* %29, i8** %3, align 8
  br label %30

; <label>:30:                                     ; preds = %27, %23
  br label %31

; <label>:31:                                     ; preds = %43, %30
  %32 = call i16** @__ctype_b_loc() #12
  %33 = load i16*, i16** %32, align 8
  %34 = load i8*, i8** %3, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %33, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 8192
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %46

; <label>:43:                                     ; preds = %31
  %44 = load i8*, i8** %3, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %3, align 8
  br label %31

; <label>:46:                                     ; preds = %31
  %47 = load i8*, i8** %3, align 8
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

; <label>:51:                                     ; preds = %46
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0))
  store i32 -3, i32* %2, align 4
  br label %355

; <label>:54:                                     ; preds = %46
  %55 = load i8*, i8** %3, align 8
  %56 = call i32 @strncmp(i8* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i64 3) #11
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

; <label>:58:                                     ; preds = %54
  call void @ShowOptions()
  br label %353

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %3, align 8
  %61 = call i32 @strncmp(i8* %60, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i64 3) #11
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %59
  call void @ShowOptions()
  br label %352

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %3, align 8
  %66 = call i32 @strncmp(i8* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i64 2) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

; <label>:68:                                     ; preds = %64
  %69 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %70 = or i64 %69, 2147483650
  store i64 %70, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %351

; <label>:71:                                     ; preds = %64
  %72 = load i8*, i8** %3, align 8
  %73 = call i32 @strncmp(i8* %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i64 4) #11
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

; <label>:75:                                     ; preds = %71
  %76 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %77 = and i64 %76, 2147483647
  store i64 %77, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i32 0, i32 0))
  br label %350

; <label>:79:                                     ; preds = %71
  %80 = load i8*, i8** %3, align 8
  %81 = call i32 @strncmp(i8* %80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i64 3) #11
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

; <label>:83:                                     ; preds = %79
  %84 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %85 = or i64 %84, 128
  store i64 %85, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %349

; <label>:86:                                     ; preds = %79
  %87 = load i8*, i8** %3, align 8
  %88 = call i32 @strncmp(i8* %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i64 5) #11
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %93

; <label>:90:                                     ; preds = %86
  %91 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %92 = and i64 %91, -129
  store i64 %92, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %348

; <label>:93:                                     ; preds = %86
  %94 = load i8*, i8** %3, align 8
  %95 = call i32 @strncmp(i8* %94, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i64 2) #11
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %114

; <label>:97:                                     ; preds = %93
  %98 = load i8*, i8** %3, align 8
  %99 = call i8* @strchr(i8* %98, i32 61) #11
  store i8* %99, i8** %5, align 8
  %100 = load i8*, i8** %5, align 8
  %101 = icmp ne i8* %100, null
  br i1 %101, label %102, label %113

; <label>:102:                                    ; preds = %97
  %103 = load i8*, i8** %5, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %5, align 8
  %105 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %104, i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i64 256)
  store i32 %105, i32* %7, align 4
  %106 = load i32, i32* %7, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %112

; <label>:108:                                    ; preds = %102
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = load i8*, i8** %5, align 8
  %111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i8* %110)
  store i32 -3, i32* %2, align 4
  br label %355

; <label>:112:                                    ; preds = %102
  call void @res_re_init()
  br label %113

; <label>:113:                                    ; preds = %112, %97
  br label %347

; <label>:114:                                    ; preds = %93
  %115 = load i8*, i8** %3, align 8
  %116 = call i32 @strncmp(i8* %115, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i32 0, i32 0), i64 1) #11
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

; <label>:118:                                    ; preds = %114
  %119 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %120 = or i64 %119, 2
  store i64 %120, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %346

; <label>:121:                                    ; preds = %114
  %122 = load i8*, i8** %3, align 8
  %123 = call i32 @strncmp(i8* %122, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i64 5) #11
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %128

; <label>:125:                                    ; preds = %121
  %126 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %127 = and i64 %126, 2147483645
  store i64 %127, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %345

; <label>:128:                                    ; preds = %121
  %129 = load i8*, i8** %3, align 8
  %130 = call i32 @strncmp(i8* %129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i64 2) #11
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135

; <label>:132:                                    ; preds = %128
  %133 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %134 = or i64 %133, 32
  store i64 %134, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %344

; <label>:135:                                    ; preds = %128
  %136 = load i8*, i8** %3, align 8
  %137 = call i32 @strncmp(i8* %136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i64 4) #11
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %142

; <label>:139:                                    ; preds = %135
  %140 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %141 = and i64 %140, -33
  store i64 %141, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %343

; <label>:142:                                    ; preds = %135
  %143 = load i8*, i8** %3, align 8
  %144 = call i32 @strncmp(i8* %143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i64 2) #11
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %156

; <label>:146:                                    ; preds = %142
  %147 = load i8*, i8** %3, align 8
  %148 = call i8* @strchr(i8* %147, i32 61) #11
  store i8* %148, i8** %5, align 8
  %149 = load i8*, i8** %5, align 8
  %150 = icmp ne i8* %149, null
  br i1 %150, label %151, label %155

; <label>:151:                                    ; preds = %146
  %152 = load i8*, i8** %5, align 8
  %153 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %153, i8** %5, align 8
  %154 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %153, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i16* @nsport) #9
  br label %155

; <label>:155:                                    ; preds = %151, %146
  br label %342

; <label>:156:                                    ; preds = %142
  %157 = load i8*, i8** %3, align 8
  %158 = call i32 @strncmp(i8* %157, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i64 1) #11
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %164, label %160

; <label>:160:                                    ; preds = %156
  %161 = load i8*, i8** %3, align 8
  %162 = call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i64 2) #11
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %186

; <label>:164:                                    ; preds = %160, %156
  %165 = load i8*, i8** %3, align 8
  %166 = call i8* @strchr(i8* %165, i32 61) #11
  store i8* %166, i8** %5, align 8
  %167 = load i8*, i8** %5, align 8
  %168 = icmp ne i8* %167, null
  br i1 %168, label %169, label %185

; <label>:169:                                    ; preds = %164
  %170 = load i8*, i8** %5, align 8
  %171 = getelementptr inbounds i8, i8* %170, i32 1
  store i8* %171, i8** %5, align 8
  %172 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %173 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %171, i8* %172, i64 256)
  store i32 %173, i32* %7, align 4
  %174 = load i32, i32* %7, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %180

; <label>:176:                                    ; preds = %169
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %178 = load i8*, i8** %5, align 8
  %179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i32 0, i32 0), i8* %178)
  store i32 -3, i32* %2, align 4
  br label %355

; <label>:180:                                    ; preds = %169
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %182 = load i32, i32* @queryType, align 4
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %184 = call i32 (i8*, i32, %struct._IO_FILE*, ...) bitcast (i32 (i8*, i32, %struct._IO_FILE*)* @StringToType to i32 (i8*, i32, %struct._IO_FILE*, ...)*)(i8* %181, i32 %182, %struct._IO_FILE* %183)
  store i32 %184, i32* @queryType, align 4
  br label %185

; <label>:185:                                    ; preds = %180, %164
  br label %341

; <label>:186:                                    ; preds = %160
  %187 = load i8*, i8** %3, align 8
  %188 = call i32 @strncmp(i8* %187, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), i64 2) #11
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %212

; <label>:190:                                    ; preds = %186
  %191 = load i8*, i8** %3, align 8
  %192 = call i8* @strchr(i8* %191, i32 61) #11
  store i8* %192, i8** %5, align 8
  %193 = load i8*, i8** %5, align 8
  %194 = icmp ne i8* %193, null
  br i1 %194, label %195, label %211

; <label>:195:                                    ; preds = %190
  %196 = load i8*, i8** %5, align 8
  %197 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %197, i8** %5, align 8
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %199 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %197, i8* %198, i64 256)
  store i32 %199, i32* %7, align 4
  %200 = load i32, i32* %7, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %206

; <label>:202:                                    ; preds = %195
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %204 = load i8*, i8** %5, align 8
  %205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %203, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i32 0, i32 0), i8* %204)
  store i32 -3, i32* %2, align 4
  br label %355

; <label>:206:                                    ; preds = %195
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %208 = load i32, i32* @queryClass, align 4
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %210 = call i32 (i8*, i32, %struct._IO_FILE*, ...) bitcast (i32 (i8*, i32, %struct._IO_FILE*)* @StringToClass to i32 (i8*, i32, %struct._IO_FILE*, ...)*)(i8* %207, i32 %208, %struct._IO_FILE* %209)
  store i32 %210, i32* @queryClass, align 4
  br label %211

; <label>:211:                                    ; preds = %206, %190
  br label %340

; <label>:212:                                    ; preds = %186
  %213 = load i8*, i8** %3, align 8
  %214 = call i32 @strncmp(i8* %213, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i64 3) #11
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %219

; <label>:216:                                    ; preds = %212
  %217 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %218 = or i64 %217, 64
  store i64 %218, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %339

; <label>:219:                                    ; preds = %212
  %220 = load i8*, i8** %3, align 8
  %221 = call i32 @strncmp(i8* %220, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i64 5) #11
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %226

; <label>:223:                                    ; preds = %219
  %224 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %225 = and i64 %224, -65
  store i64 %225, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %338

; <label>:226:                                    ; preds = %219
  %227 = load i8*, i8** %3, align 8
  %228 = call i32 @strncmp(i8* %227, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), i64 3) #11
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %245

; <label>:230:                                    ; preds = %226
  %231 = load i8*, i8** %3, align 8
  %232 = call i8* @strchr(i8* %231, i32 61) #11
  store i8* %232, i8** %5, align 8
  %233 = load i8*, i8** %5, align 8
  %234 = icmp ne i8* %233, null
  br i1 %234, label %235, label %244

; <label>:235:                                    ; preds = %230
  %236 = load i8*, i8** %5, align 8
  %237 = getelementptr inbounds i8, i8* %236, i32 1
  store i8* %237, i8** %5, align 8
  %238 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %237, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i32* %6) #9
  %239 = load i32, i32* %6, align 4
  %240 = icmp sge i32 %239, 0
  br i1 %240, label %241, label %243

; <label>:241:                                    ; preds = %235
  %242 = load i32, i32* %6, align 4
  store i32 %242, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 1), align 4
  br label %243

; <label>:243:                                    ; preds = %241, %235
  br label %244

; <label>:244:                                    ; preds = %243, %230
  br label %337

; <label>:245:                                    ; preds = %226
  %246 = load i8*, i8** %3, align 8
  %247 = call i32 @strncmp(i8* %246, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i64 2) #11
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %266

; <label>:249:                                    ; preds = %245
  %250 = load i8*, i8** %3, align 8
  %251 = call i8* @strchr(i8* %250, i32 61) #11
  store i8* %251, i8** %5, align 8
  %252 = load i8*, i8** %5, align 8
  %253 = icmp ne i8* %252, null
  br i1 %253, label %254, label %265

; <label>:254:                                    ; preds = %249
  %255 = load i8*, i8** %5, align 8
  %256 = getelementptr inbounds i8, i8* %255, i32 1
  store i8* %256, i8** %5, align 8
  %257 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @rootServerName, i32 0, i32 0), i64 256)
  store i32 %257, i32* %7, align 4
  %258 = load i32, i32* %7, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %264

; <label>:260:                                    ; preds = %254
  %261 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %262 = load i8*, i8** %5, align 8
  %263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %261, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i32 0, i32 0), i8* %262)
  store i32 -3, i32* %2, align 4
  br label %355

; <label>:264:                                    ; preds = %254
  br label %265

; <label>:265:                                    ; preds = %264, %249
  br label %336

; <label>:266:                                    ; preds = %245
  %267 = load i8*, i8** %3, align 8
  %268 = call i32 @strncmp(i8* %267, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i64 3) #11
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %273

; <label>:270:                                    ; preds = %266
  %271 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %272 = or i64 %271, 512
  store i64 %272, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %335

; <label>:273:                                    ; preds = %266
  %274 = load i8*, i8** %3, align 8
  %275 = call i32 @strncmp(i8* %274, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i64 5) #11
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %280

; <label>:277:                                    ; preds = %273
  %278 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %279 = and i64 %278, -513
  store i64 %279, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %334

; <label>:280:                                    ; preds = %273
  %281 = load i8*, i8** %3, align 8
  %282 = call i32 @strncmp(i8* %281, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i64 5) #11
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %293

; <label>:284:                                    ; preds = %280
  %285 = load i8*, i8** %3, align 8
  %286 = call i8* @strchr(i8* %285, i32 61) #11
  store i8* %286, i8** %5, align 8
  %287 = load i8*, i8** %5, align 8
  %288 = icmp ne i8* %287, null
  br i1 %288, label %289, label %292

; <label>:289:                                    ; preds = %284
  %290 = load i8*, i8** %5, align 8
  %291 = getelementptr inbounds i8, i8* %290, i32 1
  store i8* %291, i8** %5, align 8
  call void @res_dnsrch(i8* %291)
  br label %292

; <label>:292:                                    ; preds = %289, %284
  br label %333

; <label>:293:                                    ; preds = %280
  %294 = load i8*, i8** %3, align 8
  %295 = call i32 @strncmp(i8* %294, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i64 2) #11
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %312

; <label>:297:                                    ; preds = %293
  %298 = load i8*, i8** %3, align 8
  %299 = call i8* @strchr(i8* %298, i32 61) #11
  store i8* %299, i8** %5, align 8
  %300 = load i8*, i8** %5, align 8
  %301 = icmp ne i8* %300, null
  br i1 %301, label %302, label %311

; <label>:302:                                    ; preds = %297
  %303 = load i8*, i8** %5, align 8
  %304 = getelementptr inbounds i8, i8* %303, i32 1
  store i8* %304, i8** %5, align 8
  %305 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %304, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i32* %6) #9
  %306 = load i32, i32* %6, align 4
  %307 = icmp sge i32 %306, 0
  br i1 %307, label %308, label %310

; <label>:308:                                    ; preds = %302
  %309 = load i32, i32* %6, align 4
  store i32 %309, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 0), align 8
  br label %310

; <label>:310:                                    ; preds = %308, %302
  br label %311

; <label>:311:                                    ; preds = %310, %297
  br label %332

; <label>:312:                                    ; preds = %293
  %313 = load i8*, i8** %3, align 8
  %314 = call i32 @strncmp(i8* %313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0), i64 1) #11
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %319

; <label>:316:                                    ; preds = %312
  %317 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %318 = or i64 %317, 8
  store i64 %318, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %331

; <label>:319:                                    ; preds = %312
  %320 = load i8*, i8** %3, align 8
  %321 = call i32 @strncmp(i8* %320, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i64 3) #11
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %326

; <label>:323:                                    ; preds = %319
  %324 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %325 = and i64 %324, -9
  store i64 %325, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  br label %330

; <label>:326:                                    ; preds = %319
  %327 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %328 = load i8*, i8** %3, align 8
  %329 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %327, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i32 0, i32 0), i8* %328)
  store i32 -3, i32* %2, align 4
  br label %355

; <label>:330:                                    ; preds = %323
  br label %331

; <label>:331:                                    ; preds = %330, %316
  br label %332

; <label>:332:                                    ; preds = %331, %311
  br label %333

; <label>:333:                                    ; preds = %332, %292
  br label %334

; <label>:334:                                    ; preds = %333, %277
  br label %335

; <label>:335:                                    ; preds = %334, %270
  br label %336

; <label>:336:                                    ; preds = %335, %265
  br label %337

; <label>:337:                                    ; preds = %336, %244
  br label %338

; <label>:338:                                    ; preds = %337, %223
  br label %339

; <label>:339:                                    ; preds = %338, %216
  br label %340

; <label>:340:                                    ; preds = %339, %211
  br label %341

; <label>:341:                                    ; preds = %340, %185
  br label %342

; <label>:342:                                    ; preds = %341, %155
  br label %343

; <label>:343:                                    ; preds = %342, %139
  br label %344

; <label>:344:                                    ; preds = %343, %132
  br label %345

; <label>:345:                                    ; preds = %344, %125
  br label %346

; <label>:346:                                    ; preds = %345, %118
  br label %347

; <label>:347:                                    ; preds = %346, %113
  br label %348

; <label>:348:                                    ; preds = %347, %90
  br label %349

; <label>:349:                                    ; preds = %348, %83
  br label %350

; <label>:350:                                    ; preds = %349, %75
  br label %351

; <label>:351:                                    ; preds = %350, %68
  br label %352

; <label>:352:                                    ; preds = %351, %63
  br label %353

; <label>:353:                                    ; preds = %352, %58
  br label %354

; <label>:354:                                    ; preds = %353
  store i32 0, i32* %2, align 4
  br label %355

; <label>:355:                                    ; preds = %354, %326, %260, %202, %176, %108, %51
  %356 = load i32, i32* %2, align 4
  ret i32 %356
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @Usage() #0 {
  %1 = alloca i32, align 4
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0))
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.10, i32 0, i32 0))
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.11, i32 0, i32 0))
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.12, i32 0, i32 0))
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.13, i32 0, i32 0))
  call void @exit(i32 1) #8
  unreachable
                                                  ; No predecessors!
  %13 = load i32, i32* %1, align 4
  ret i32 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #3

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @LocalServer(%struct.HostInfo*) #0 {
  %2 = alloca %struct.HostInfo*, align 8
  %3 = alloca [256 x i8], align 16
  store %struct.HostInfo* %0, %struct.HostInfo** %2, align 8
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %5 = call i32 (i8*, i64, ...) bitcast (i32 (...)* @gethostname to i32 (i8*, i64, ...)*)(i8* %4, i64 256)
  %6 = call i32 @htonl(i32 0) #12
  store i32 %6, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @defaultAddr, i32 0, i32 0), align 4
  %7 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %8 = call i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...) bitcast (i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32)* @GetHostInfoByName to i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...)*)(%struct.in_addr* @defaultAddr, i32 1, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), %struct.HostInfo* %7, i32 1)
  %9 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %10 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  call void @free(i8* %11) #9
  %12 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 1, i64 257)
  %13 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %14 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %13, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %16 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %19 = call i8* @strcpy(i8* %17, i8* %18) #9
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @LookupHost(i8*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [256 x i8], align 16
  %7 = alloca [4096 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* @curHostValid, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %12 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %10, i8* %11, i64 256)
  store i32 %12, i32* %9, align 4
  %13 = load i32, i32* %9, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

; <label>:15:                                     ; preds = %2
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i32 0, i32 0), i8* %17)
  store i32 -3, i32* %3, align 4
  br label %51

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* %5, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %24, label %22

; <label>:22:                                     ; preds = %19
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %23, %struct._IO_FILE** @filePtr, align 8
  br label %38

; <label>:24:                                     ; preds = %19
  %25 = load i8*, i8** %4, align 8
  %26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %27 = call %struct._IO_FILE* (i8*, i8*, i64, ...) bitcast (%struct._IO_FILE* (i8*, i8*, i64)* @OpenFile to %struct._IO_FILE* (i8*, i8*, i64, ...)*)(i8* %25, i8* %26, i64 4096)
  store %struct._IO_FILE* %27, %struct._IO_FILE** @filePtr, align 8
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %29 = icmp eq %struct._IO_FILE* %28, null
  br i1 %29, label %30, label %34

; <label>:30:                                     ; preds = %24
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i32 0, i32 0), i8* %32)
  store i32 -3, i32* %3, align 4
  br label %51

; <label>:34:                                     ; preds = %24
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %36 = load i8*, i8** %4, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* %36)
  br label %38

; <label>:38:                                     ; preds = %34, %22
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %40 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), %struct.HostInfo* %40)
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %42 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %43 = call i32 @DoLookup(i8* %41, %struct.HostInfo* %42, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @defaultServer, i32 0, i32 0))
  store i32 %43, i32* %8, align 4
  %44 = load i32, i32* %5, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %49

; <label>:46:                                     ; preds = %38
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %48 = call i32 @fclose(%struct._IO_FILE* %47)
  store %struct._IO_FILE* null, %struct._IO_FILE** @filePtr, align 8
  br label %49

; <label>:49:                                     ; preds = %46, %38
  %50 = load i32, i32* %8, align 4
  store i32 %50, i32* %3, align 4
  br label %51

; <label>:51:                                     ; preds = %49, %30, %15
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #4

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%struct.__jmp_buf_tag*) #5

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #4

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @DoLookup(i8*, %struct.HostInfo*, i8*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.HostInfo*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.in_addr*, align 8
  %9 = alloca %struct.in_addr, align 4
  store i8* %0, i8** %4, align 8
  store %struct.HostInfo* %1, %struct.HostInfo** %5, align 8
  store i8* %2, i8** %6, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp eq i32 %13, 92
  br i1 %14, label %15, label %18

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %17, i8** %4, align 8
  br label %18

; <label>:18:                                     ; preds = %15, %3
  %19 = load %struct.HostInfo*, %struct.HostInfo** %5, align 8
  %20 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %19, i32 0, i32 2
  %21 = load i8**, i8*** %20, align 8
  %22 = icmp ne i8** %21, null
  br i1 %22, label %23, label %30

; <label>:23:                                     ; preds = %18
  %24 = load %struct.HostInfo*, %struct.HostInfo** %5, align 8
  %25 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %24, i32 0, i32 2
  %26 = load i8**, i8*** %25, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to %struct.in_addr*
  store %struct.in_addr* %29, %struct.in_addr** %8, align 8
  br label %41

; <label>:30:                                     ; preds = %18
  %31 = load %struct.HostInfo*, %struct.HostInfo** %5, align 8
  %32 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %31, i32 0, i32 5
  %33 = load %struct.ServerInfo**, %struct.ServerInfo*** %32, align 8
  %34 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %33, i64 0
  %35 = load %struct.ServerInfo*, %struct.ServerInfo** %34, align 8
  %36 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %35, i32 0, i32 2
  %37 = load i8**, i8*** %36, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast i8* %39 to %struct.in_addr*
  store %struct.in_addr* %40, %struct.in_addr** %8, align 8
  br label %41

; <label>:41:                                     ; preds = %30, %23
  %42 = load i32, i32* @queryType, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %51

; <label>:44:                                     ; preds = %41
  %45 = load i8*, i8** %4, align 8
  %46 = call i32 @IsAddr(i8* %45, %struct.in_addr* %9)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %51

; <label>:48:                                     ; preds = %44
  %49 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %50 = call i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*, ...) bitcast (i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*)* @GetHostInfoByAddr to i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*, ...)*)(%struct.in_addr* %49, %struct.in_addr* %9, %struct.HostInfo* @curHostInfo)
  store i32 %50, i32* %7, align 4
  br label %62

; <label>:51:                                     ; preds = %44, %41
  %52 = load i32, i32* @queryType, align 4
  %53 = icmp eq i32 %52, 12
  br i1 %53, label %54, label %56

; <label>:54:                                     ; preds = %51
  %55 = load i8*, i8** %4, align 8
  call void @CvtAddrToPtr(i8* %55)
  br label %56

; <label>:56:                                     ; preds = %54, %51
  %57 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %58 = load i32, i32* @queryClass, align 4
  %59 = load i32, i32* @queryType, align 4
  %60 = load i8*, i8** %4, align 8
  %61 = call i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...) bitcast (i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32)* @GetHostInfoByName to i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...)*)(%struct.in_addr* %57, i32 %58, i32 %59, i8* %60, %struct.HostInfo* @curHostInfo, i32 0)
  store i32 %61, i32* %7, align 4
  br label %62

; <label>:62:                                     ; preds = %56, %48
  %63 = load i32, i32* %7, align 4
  switch i32 %63, label %84 [
    i32 0, label %64
    i32 -4, label %70
    i32 -2, label %72
    i32 -1, label %80
  ]

; <label>:64:                                     ; preds = %62
  %65 = load i32, i32* @queryType, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

; <label>:67:                                     ; preds = %64
  store i32 1, i32* @curHostValid, align 4
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i32 0, i32 0), %struct.HostInfo* @curHostInfo)
  br label %69

; <label>:69:                                     ; preds = %67, %64
  br label %91

; <label>:70:                                     ; preds = %62
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i32 0, i32 0), %struct.HostInfo* @curHostInfo)
  br label %91

; <label>:72:                                     ; preds = %62
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %74 = load i32, i32* @queryType, align 4
  %75 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeType to i8* (i32, ...)*)(i32 %74)
  %76 = load i32, i32* @queryType, align 4
  %77 = call i8* @__p_type(i32 %76)
  %78 = load i8*, i8** %4, align 8
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.81, i32 0, i32 0), i8* %75, i8* %77, i8* %78)
  br label %91

; <label>:80:                                     ; preds = %62
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = load i8*, i8** %6, align 8
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* %82)
  br label %91

; <label>:84:                                     ; preds = %62
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = load i8*, i8** %6, align 8
  %87 = load i8*, i8** %4, align 8
  %88 = load i32, i32* %7, align 4
  %89 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeError to i8* (i32, ...)*)(i32 %88)
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.83, i32 0, i32 0), i8* %86, i8* %87, i8* %89)
  br label %91

; <label>:91:                                     ; preds = %84, %80, %72, %70, %69
  %92 = load i32, i32* %7, align 4
  ret i32 %92
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @IsAddr(i8*, %struct.in_addr*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.in_addr*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store %struct.in_addr* %1, %struct.in_addr** %5, align 8
  %7 = call i16** @__ctype_b_loc() #12
  %8 = load i16*, i16** %7, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i16, i16* %8, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = and i32 %16, 2048
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %58

; <label>:19:                                     ; preds = %2
  %20 = load i8*, i8** %4, align 8
  store i8* %20, i8** %6, align 8
  br label %21

; <label>:21:                                     ; preds = %44, %19
  %22 = load i8*, i8** %6, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp ne i8 %23, 0
  br i1 %24, label %25, label %47

; <label>:25:                                     ; preds = %21
  %26 = call i16** @__ctype_b_loc() #12
  %27 = load i16*, i16** %26, align 8
  %28 = load i8*, i8** %6, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %27, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 2048
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %43, label %37

; <label>:37:                                     ; preds = %25
  %38 = load i8*, i8** %6, align 8
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp ne i32 %40, 46
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %37
  store i32 0, i32* %3, align 4
  br label %59

; <label>:43:                                     ; preds = %37, %25
  br label %44

; <label>:44:                                     ; preds = %43
  %45 = load i8*, i8** %6, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %6, align 8
  br label %21

; <label>:47:                                     ; preds = %21
  %48 = load i8*, i8** %6, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 -1
  store i8* %49, i8** %6, align 8
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp ne i32 %51, 46
  br i1 %52, label %53, label %57

; <label>:53:                                     ; preds = %47
  %54 = load i8*, i8** %4, align 8
  %55 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %56 = call i32 @__inet_aton(i8* %54, %struct.in_addr* %55)
  store i32 %56, i32* %3, align 4
  br label %59

; <label>:57:                                     ; preds = %47
  br label %58

; <label>:58:                                     ; preds = %57, %2
  store i32 0, i32* %3, align 4
  br label %59

; <label>:59:                                     ; preds = %58, %53, %42
  %60 = load i32, i32* %3, align 4
  ret i32 %60
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @CvtAddrToPtr(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [4 x i32], align 16
  %5 = alloca %struct.in_addr, align 4
  store i8* %0, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = call i32 @IsAddr(i8* %6, %struct.in_addr* %5)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %32

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %5, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = call i8* @__inet_ntoa(i32 %11)
  store i8* %12, i8** %3, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %18 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), i32* %14, i32* %15, i32* %16, i32* %17) #9
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %31

; <label>:20:                                     ; preds = %9
  %21 = load i8*, i8** %2, align 8
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %29 = load i32, i32* %28, align 16
  %30 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.85, i32 0, i32 0), i32 %23, i32 %25, i32 %27, i32 %29) #9
  br label %31

; <label>:31:                                     ; preds = %20, %9
  br label %32

; <label>:32:                                     ; preds = %31, %1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #4

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #6

declare dso_local i32 @gethostname(...) #1

; Function Attrs: nounwind readnone
declare dso_local i32 @htonl(i32) #6

; Function Attrs: nounwind
declare dso_local void @free(i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ShowOptions() #0 {
  %1 = alloca i8**, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %3 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), %struct.HostInfo* %3)
  %4 = load i32, i32* @curHostValid, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %8

; <label>:6:                                      ; preds = %0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), %struct.HostInfo* @curHostInfo)
  br label %8

; <label>:8:                                      ; preds = %6, %0
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i32 0, i32 0))
  %10 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %11 = and i64 %10, 2
  %12 = icmp ne i64 %11, 0
  %13 = zext i1 %12 to i64
  %14 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0), i8* %14)
  %16 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %17 = and i64 %16, 128
  %18 = icmp ne i64 %17, 0
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0), i8* %20)
  %22 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %23 = and i64 %22, 512
  %24 = icmp ne i64 %23, 0
  %25 = zext i1 %24 to i64
  %26 = select i1 %24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0), i8* %26)
  %28 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %29 = and i64 %28, 64
  %30 = icmp ne i64 %29, 0
  %31 = zext i1 %30 to i64
  %32 = select i1 %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0), i8* %32)
  %34 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %35 = and i64 %34, 2147483648
  %36 = icmp ne i64 %35, 0
  %37 = zext i1 %36 to i64
  %38 = select i1 %36, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i8* %38)
  %40 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %41 = and i64 %40, 8
  %42 = icmp ne i64 %41, 0
  %43 = zext i1 %42 to i64
  %44 = select i1 %42, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i32 0, i32 0), i8* %44)
  %46 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %47 = and i64 %46, 32
  %48 = icmp ne i64 %47, 0
  %49 = zext i1 %48 to i64
  %50 = select i1 %48, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0), i8* %50)
  %52 = load i16, i16* @nsport, align 2
  %53 = zext i16 %52 to i32
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i32 0, i32 0), i32 %53)
  %55 = load i32, i32* @queryType, align 4
  %56 = call i8* @__p_type(i32 %55)
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i32 0, i32 0), i8* %56)
  %58 = load i32, i32* @queryClass, align 4
  %59 = call i8* @__p_class(i32 %58)
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), i8* %59)
  %61 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 0), align 8
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i32 %61)
  %63 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 1), align 4
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i32 0, i32 0), i32 %63)
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @rootServerName, i32 0, i32 0))
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0))
  store i8** getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 6, i32 0), i8*** %1, align 8
  %67 = load i8**, i8*** %1, align 8
  %68 = icmp ne i8** %67, null
  br i1 %68, label %69, label %88

; <label>:69:                                     ; preds = %8
  %70 = load i8**, i8*** %1, align 8
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0), i8* %71)
  %73 = load i8**, i8*** %1, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i32 1
  store i8** %74, i8*** %1, align 8
  br label %75

; <label>:75:                                     ; preds = %83, %69
  %76 = load i8**, i8*** %1, align 8
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ne i8* %77, null
  br i1 %78, label %79, label %86

; <label>:79:                                     ; preds = %75
  %80 = load i8**, i8*** %1, align 8
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i32 47, i8* %81)
  br label %83

; <label>:83:                                     ; preds = %79
  %84 = load i8**, i8*** %1, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i32 1
  store i8** %85, i8*** %1, align 8
  br label %75

; <label>:86:                                     ; preds = %75
  %87 = call i32 @putchar(i32 10)
  br label %88

; <label>:88:                                     ; preds = %86, %8
  %89 = call i32 @putchar(i32 10)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @res_re_init() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  store i8** getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 6, i32 0), i8*** %2, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = getelementptr inbounds i8*, i8** %4, i32 1
  store i8** %5, i8*** %2, align 8
  store i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i8** %4, align 8
  store i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i8** %1, align 8
  store i32 0, i32* %3, align 4
  br label %6

; <label>:6:                                      ; preds = %19, %0
  %7 = load i8*, i8** %1, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %6
  %11 = load i8*, i8** %1, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp eq i32 %13, 46
  br i1 %14, label %15, label %18

; <label>:15:                                     ; preds = %10
  %16 = load i32, i32* %3, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %3, align 4
  br label %18

; <label>:18:                                     ; preds = %15, %10
  br label %19

; <label>:19:                                     ; preds = %18
  %20 = load i8*, i8** %1, align 8
  %21 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %21, i8** %1, align 8
  br label %6

; <label>:22:                                     ; preds = %6
  store i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i8** %1, align 8
  br label %23

; <label>:23:                                     ; preds = %38, %22
  %24 = load i32, i32* %3, align 4
  %25 = icmp sge i32 %24, 2
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %23
  %27 = load i8**, i8*** %2, align 8
  %28 = icmp ult i8** %27, getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 6, i64 3)
  br label %29

; <label>:29:                                     ; preds = %26, %23
  %30 = phi i1 [ false, %23 ], [ %28, %26 ]
  br i1 %30, label %31, label %41

; <label>:31:                                     ; preds = %29
  %32 = load i8*, i8** %1, align 8
  %33 = call i8* @strchr(i8* %32, i32 46) #11
  store i8* %33, i8** %1, align 8
  %34 = load i8*, i8** %1, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %1, align 8
  %36 = load i8**, i8*** %2, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i32 1
  store i8** %37, i8*** %2, align 8
  store i8* %35, i8** %36, align 8
  br label %38

; <label>:38:                                     ; preds = %31
  %39 = load i32, i32* %3, align 4
  %40 = add nsw i32 %39, -1
  store i32 %40, i32* %3, align 4
  br label %23

; <label>:41:                                     ; preds = %29
  %42 = load i8**, i8*** %2, align 8
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %44 = or i64 %43, 1
  store i64 %44, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @res_dnsrch(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i8* @strncpy(i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i8* %5, i64 255) #9
  store i8 0, i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i64 255), align 1
  %7 = call i8* @strchr(i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i32 10) #11
  store i8* %7, i8** %2, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %11

; <label>:9:                                      ; preds = %1
  %10 = load i8*, i8** %2, align 8
  store i8 0, i8* %10, align 1
  br label %11

; <label>:11:                                     ; preds = %9, %1
  store i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 7, i32 0), i8** %2, align 8
  store i8** getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 6, i32 0), i8*** %3, align 8
  %12 = load i8*, i8** %2, align 8
  %13 = load i8**, i8*** %3, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i32 1
  store i8** %14, i8*** %3, align 8
  store i8* %12, i8** %13, align 8
  store i32 0, i32* %4, align 4
  br label %15

; <label>:15:                                     ; preds = %41, %11
  %16 = load i8*, i8** %2, align 8
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %15
  %21 = load i8**, i8*** %3, align 8
  %22 = icmp ult i8** %21, getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 6, i64 6)
  br label %23

; <label>:23:                                     ; preds = %20, %15
  %24 = phi i1 [ false, %15 ], [ %22, %20 ]
  br i1 %24, label %25, label %44

; <label>:25:                                     ; preds = %23
  %26 = load i8*, i8** %2, align 8
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 47
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %25
  %31 = load i8*, i8** %2, align 8
  store i8 0, i8* %31, align 1
  store i32 1, i32* %4, align 4
  br label %40

; <label>:32:                                     ; preds = %25
  %33 = load i32, i32* %4, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %39

; <label>:35:                                     ; preds = %32
  %36 = load i8*, i8** %2, align 8
  %37 = load i8**, i8*** %3, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i32 1
  store i8** %38, i8*** %3, align 8
  store i8* %36, i8** %37, align 8
  store i32 0, i32* %4, align 4
  br label %39

; <label>:39:                                     ; preds = %35, %32
  br label %40

; <label>:40:                                     ; preds = %39, %30
  br label %41

; <label>:41:                                     ; preds = %40
  %42 = load i8*, i8** %2, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %2, align 8
  br label %15

; <label>:44:                                     ; preds = %23
  %45 = load i8**, i8*** %3, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 -1
  %47 = load i8*, i8** %46, align 8
  %48 = call i8* @strchr(i8* %47, i32 47) #11
  store i8* %48, i8** %2, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %44
  %51 = load i8*, i8** %2, align 8
  store i8 0, i8* %51, align 1
  br label %52

; <label>:52:                                     ; preds = %50, %44
  %53 = load i8**, i8*** %3, align 8
  store i8* null, i8** %53, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #4

declare dso_local i32 @putchar(i32) #1

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #4

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #1

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @SetDefaultServer(i8*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.HostInfo*, align 8
  %7 = alloca %struct.in_addr*, align 8
  %8 = alloca %struct.in_addr, align 4
  %9 = alloca [256 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %38

; <label>:15:                                     ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @matchString to i32 (i8*, i8*, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* %16)
  store i32 %17, i32* %11, align 4
  %18 = load i32, i32* %11, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %37

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %4, align 8
  %22 = load i32, i32* %11, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %26 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %24, i8* %25, i64 256)
  store i32 %26, i32* %12, align 4
  %27 = load i32, i32* %12, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %20
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %31 = load i8*, i8** %4, align 8
  %32 = load i32, i32* %11, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i32 0, i32 0), i8* %34)
  store i32 -3, i32* %3, align 4
  br label %185

; <label>:36:                                     ; preds = %20
  br label %37

; <label>:37:                                     ; preds = %36, %15
  br label %61

; <label>:38:                                     ; preds = %2
  %39 = load i8*, i8** %4, align 8
  %40 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @matchString to i32 (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i8* %39)
  store i32 %40, i32* %11, align 4
  %41 = load i32, i32* %11, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %60

; <label>:43:                                     ; preds = %38
  %44 = load i8*, i8** %4, align 8
  %45 = load i32, i32* %11, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %49 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %47, i8* %48, i64 256)
  store i32 %49, i32* %12, align 4
  %50 = load i32, i32* %12, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

; <label>:52:                                     ; preds = %43
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %54 = load i8*, i8** %4, align 8
  %55 = load i32, i32* %11, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i32 0, i32 0), i8* %57)
  store i32 -3, i32* %3, align 4
  br label %185

; <label>:59:                                     ; preds = %43
  br label %60

; <label>:60:                                     ; preds = %59, %38
  br label %61

; <label>:61:                                     ; preds = %60, %37
  %62 = load i32, i32* %11, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %75

; <label>:64:                                     ; preds = %61
  %65 = load i8*, i8** %4, align 8
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %67 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %65, i8* %66, i64 256)
  store i32 %67, i32* %11, align 4
  %68 = load i32, i32* %11, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

; <label>:70:                                     ; preds = %64
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load i8*, i8** %4, align 8
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i32 0, i32 0), i8* %72)
  store i32 -3, i32* %3, align 4
  br label %185

; <label>:74:                                     ; preds = %64
  br label %75

; <label>:75:                                     ; preds = %74, %61
  %76 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 1, i64 40)
  %77 = bitcast i8* %76 to %struct.HostInfo*
  store %struct.HostInfo* %77, %struct.HostInfo** %6, align 8
  %78 = load i32, i32* %5, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %75
  store %struct.in_addr* @defaultAddr, %struct.in_addr** %7, align 8
  br label %105

; <label>:81:                                     ; preds = %75
  %82 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %83 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %82, i32 0, i32 2
  %84 = load i8**, i8*** %83, align 8
  %85 = icmp ne i8** %84, null
  br i1 %85, label %86, label %93

; <label>:86:                                     ; preds = %81
  %87 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %88 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %87, i32 0, i32 2
  %89 = load i8**, i8*** %88, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 0
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast i8* %91 to %struct.in_addr*
  store %struct.in_addr* %92, %struct.in_addr** %7, align 8
  br label %104

; <label>:93:                                     ; preds = %81
  %94 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %95 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %94, i32 0, i32 5
  %96 = load %struct.ServerInfo**, %struct.ServerInfo*** %95, align 8
  %97 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %96, i64 0
  %98 = load %struct.ServerInfo*, %struct.ServerInfo** %97, align 8
  %99 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %98, i32 0, i32 2
  %100 = load i8**, i8*** %99, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 0
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast i8* %102 to %struct.in_addr*
  store %struct.in_addr* %103, %struct.in_addr** %7, align 8
  br label %104

; <label>:104:                                    ; preds = %93, %86
  br label %105

; <label>:105:                                    ; preds = %104, %80
  store i32 -3, i32* %10, align 4
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %107 = call i32 @IsAddr(i8* %106, %struct.in_addr* %8)
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %113

; <label>:109:                                    ; preds = %105
  %110 = load %struct.in_addr*, %struct.in_addr** %7, align 8
  %111 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %112 = call i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*, ...) bitcast (i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*)* @GetHostInfoByAddr to i32 (%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*, ...)*)(%struct.in_addr* %110, %struct.in_addr* %8, %struct.HostInfo* %111)
  store i32 %112, i32* %10, align 4
  br label %113

; <label>:113:                                    ; preds = %109, %105
  %114 = load i32, i32* %10, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %124

; <label>:116:                                    ; preds = %113
  %117 = load i32, i32* %10, align 4
  %118 = icmp ne i32 %117, -4
  br i1 %118, label %119, label %124

; <label>:119:                                    ; preds = %116
  %120 = load %struct.in_addr*, %struct.in_addr** %7, align 8
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %122 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %123 = call i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...) bitcast (i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32)* @GetHostInfoByName to i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...)*)(%struct.in_addr* %120, i32 1, i32 1, i8* %121, %struct.HostInfo* %122, i32 1)
  store i32 %123, i32* %10, align 4
  br label %124

; <label>:124:                                    ; preds = %119, %116, %113
  %125 = load i32, i32* %10, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

; <label>:127:                                    ; preds = %124
  %128 = load i32, i32* %10, align 4
  %129 = icmp eq i32 %128, -4
  br i1 %129, label %130, label %176

; <label>:130:                                    ; preds = %127, %124
  %131 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %132 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %131, i32 0, i32 2
  %133 = load i8**, i8*** %132, align 8
  %134 = icmp ne i8** %133, null
  br i1 %134, label %135, label %142

; <label>:135:                                    ; preds = %130
  %136 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %137 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %136, i32 0, i32 2
  %138 = load i8**, i8*** %137, align 8
  %139 = getelementptr inbounds i8*, i8** %138, i64 0
  %140 = load i8*, i8** %139, align 8
  %141 = icmp ne i8* %140, null
  br i1 %141, label %165, label %142

; <label>:142:                                    ; preds = %135, %130
  %143 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %144 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %143, i32 0, i32 5
  %145 = load %struct.ServerInfo**, %struct.ServerInfo*** %144, align 8
  %146 = icmp ne %struct.ServerInfo** %145, null
  br i1 %146, label %147, label %176

; <label>:147:                                    ; preds = %142
  %148 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %149 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %148, i32 0, i32 5
  %150 = load %struct.ServerInfo**, %struct.ServerInfo*** %149, align 8
  %151 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %150, i64 0
  %152 = load %struct.ServerInfo*, %struct.ServerInfo** %151, align 8
  %153 = icmp ne %struct.ServerInfo* %152, null
  br i1 %153, label %154, label %176

; <label>:154:                                    ; preds = %147
  %155 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %156 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %155, i32 0, i32 5
  %157 = load %struct.ServerInfo**, %struct.ServerInfo*** %156, align 8
  %158 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %157, i64 0
  %159 = load %struct.ServerInfo*, %struct.ServerInfo** %158, align 8
  %160 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %159, i32 0, i32 2
  %161 = load i8**, i8*** %160, align 8
  %162 = getelementptr inbounds i8*, i8** %161, i64 0
  %163 = load i8*, i8** %162, align 8
  %164 = icmp ne i8* %163, null
  br i1 %164, label %165, label %176

; <label>:165:                                    ; preds = %154, %135
  %166 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void (%struct.HostInfo*, ...) bitcast (void (%struct.HostInfo*)* @FreeHostInfoPtr to void (%struct.HostInfo*, ...)*)(%struct.HostInfo* %166)
  %167 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %168 = bitcast %struct.HostInfo* %167 to i8*
  call void @free(i8* %168) #9
  %169 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  store %struct.HostInfo* %169, %struct.HostInfo** @defaultPtr, align 8
  %170 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %171 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %170, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @defaultServer, i32 0, i32 0), i8* %172) #9
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %175 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %174, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), %struct.HostInfo* %175)
  store i32 0, i32* %3, align 4
  br label %185

; <label>:176:                                    ; preds = %154, %147, %142, %127
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %178 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %179 = load i32, i32* %10, align 4
  %180 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeError to i8* (i32, ...)*)(i32 %179)
  %181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i32 0, i32 0), i8* %178, i8* %180)
  %182 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %183 = bitcast %struct.HostInfo* %182 to i8*
  call void @free(i8* %183) #9
  %184 = load i32, i32* %10, align 4
  store i32 %184, i32* %3, align 4
  br label %185

; <label>:185:                                    ; preds = %176, %165, %70, %52, %29
  %186 = load i32, i32* %3, align 4
  ret i32 %186
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @LookupHostWithServer(i8*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [4096 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [256 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* @curHostValid, align 4
  %12 = load i8*, i8** %4, align 8
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %14 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %12, i8* %13, i64 256)
  store i32 %14, i32* %10, align 4
  %15 = load i32, i32* %10, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

; <label>:17:                                     ; preds = %2
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = load i8*, i8** %4, align 8
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i32 0, i32 0), i8* %19)
  store i32 -3, i32* %3, align 4
  br label %104

; <label>:21:                                     ; preds = %2
  %22 = load i8*, i8** %4, align 8
  %23 = load i32, i32* %10, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0
  %27 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %25, i8* %26, i64 256)
  store i32 %27, i32* %11, align 4
  %28 = load i32, i32* %11, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

; <label>:30:                                     ; preds = %21
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = load i8*, i8** %4, align 8
  %33 = load i32, i32* %10, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i32 0, i32 0), i8* %35)
  store i32 -3, i32* %3, align 4
  br label %104

; <label>:37:                                     ; preds = %21
  %38 = load i32, i32* %5, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %42, label %40

; <label>:40:                                     ; preds = %37
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %41, %struct._IO_FILE** @filePtr, align 8
  br label %56

; <label>:42:                                     ; preds = %37
  %43 = load i8*, i8** %4, align 8
  %44 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %45 = call %struct._IO_FILE* (i8*, i8*, i64, ...) bitcast (%struct._IO_FILE* (i8*, i8*, i64)* @OpenFile to %struct._IO_FILE* (i8*, i8*, i64, ...)*)(i8* %43, i8* %44, i64 4096)
  store %struct._IO_FILE* %45, %struct._IO_FILE** @filePtr, align 8
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %47 = icmp eq %struct._IO_FILE* %46, null
  br i1 %47, label %48, label %52

; <label>:48:                                     ; preds = %42
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i32 0, i32 0), i8* %50)
  store i32 -3, i32* %3, align 4
  br label %104

; <label>:52:                                     ; preds = %42
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %54 = load i8*, i8** %4, align 8
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* %54)
  br label %56

; <label>:56:                                     ; preds = %52, %40
  %57 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %58 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %57, i32 0, i32 2
  %59 = load i8**, i8*** %58, align 8
  %60 = icmp ne i8** %59, null
  br i1 %60, label %61, label %68

; <label>:61:                                     ; preds = %56
  %62 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %63 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %62, i32 0, i32 2
  %64 = load i8**, i8*** %63, align 8
  %65 = getelementptr inbounds i8*, i8** %64, i64 0
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to %struct.in_addr*
  br label %79

; <label>:68:                                     ; preds = %56
  %69 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %70 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %69, i32 0, i32 5
  %71 = load %struct.ServerInfo**, %struct.ServerInfo*** %70, align 8
  %72 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %71, i64 0
  %73 = load %struct.ServerInfo*, %struct.ServerInfo** %72, align 8
  %74 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %73, i32 0, i32 2
  %75 = load i8**, i8*** %74, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 0
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast i8* %77 to %struct.in_addr*
  br label %79

; <label>:79:                                     ; preds = %68, %61
  %80 = phi %struct.in_addr* [ %67, %61 ], [ %78, %68 ]
  %81 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0
  %82 = call i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...) bitcast (i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32)* @GetHostInfoByName to i32 (%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32, ...)*)(%struct.in_addr* %80, i32 1, i32 1, i8* %81, %struct.HostInfo* @LookupHostWithServer.serverInfo, i32 1)
  store i32 %82, i32* %9, align 4
  %83 = load i32, i32* %9, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %91

; <label>:85:                                     ; preds = %79
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0
  %88 = load i32, i32* %9, align 4
  %89 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeError to i8* (i32, ...)*)(i32 %88)
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i32 0, i32 0), i8* %87, i8* %89)
  br label %96

; <label>:91:                                     ; preds = %79
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  call void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...) bitcast (void (%struct._IO_FILE*, i8*, %struct.HostInfo*)* @PrintHostInfo to void (%struct._IO_FILE*, i8*, %struct.HostInfo*, ...)*)(%struct._IO_FILE* %92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), %struct.HostInfo* @LookupHostWithServer.serverInfo)
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0
  %95 = call i32 @DoLookup(i8* %93, %struct.HostInfo* @LookupHostWithServer.serverInfo, i8* %94)
  store i32 %95, i32* %9, align 4
  br label %96

; <label>:96:                                     ; preds = %91, %85
  %97 = load i32, i32* %5, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %102

; <label>:99:                                     ; preds = %96
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %101 = call i32 @fclose(%struct._IO_FILE* %100)
  store %struct._IO_FILE* null, %struct._IO_FILE** @filePtr, align 8
  br label %102

; <label>:102:                                    ; preds = %99, %96
  %103 = load i32, i32* %9, align 4
  store i32 %103, i32* %3, align 4
  br label %104

; <label>:104:                                    ; preds = %102, %48, %30, %17
  %105 = load i32, i32* %3, align 4
  ret i32 %105
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @PrintHelp() #0 {
  %1 = alloca [4096 x i8], align 16
  %2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i32 0, i32 0
  %3 = load i8*, i8** @pager, align 8
  %4 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.79, i32 0, i32 0)) #9
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i32 0, i32 0
  %6 = call i32 @system(i8* %5)
  ret void
}

declare dso_local i32 @system(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @GetHostInfoByName(%struct.in_addr*, i32, i32, i8*, %struct.HostInfo*, i32) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.in_addr*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.HostInfo*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8**, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca %struct.in_addr, align 4
  %20 = alloca i32, align 4
  %21 = alloca [1025 x i8], align 16
  store %struct.in_addr* %0, %struct.in_addr** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store %struct.HostInfo* %4, %struct.HostInfo** %12, align 8
  store i32 %5, i32* %13, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %20, align 4
  %22 = load i32, i32* %10, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %67

; <label>:24:                                     ; preds = %6
  %25 = load i8*, i8** %11, align 8
  %26 = call i32 (i8*, %struct.in_addr*, ...) bitcast (i32 (i8*, %struct.in_addr*)* @IsAddr to i32 (i8*, %struct.in_addr*, ...)*)(i8* %25, %struct.in_addr* %19)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %67

; <label>:28:                                     ; preds = %24
  %29 = load i8*, i8** %11, align 8
  %30 = call i64 @strlen(i8* %29)
  %31 = add i64 %30, 3
  %32 = call i8* (i64, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i64, i32, ...)*)(i64 %31, i32 1)
  %33 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %34 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %33, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %36 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = load i8*, i8** %11, align 8
  %39 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i8* %38) #9
  %40 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %41 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %40, i32 0, i32 1
  store i8** null, i8*** %41, align 8
  %42 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %43 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %42, i32 0, i32 5
  store %struct.ServerInfo** null, %struct.ServerInfo*** %43, align 8
  %44 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %45 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %44, i32 0, i32 3
  store i32 2, i32* %45, align 8
  %46 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %47 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %46, i32 0, i32 4
  store i32 4, i32* %47, align 4
  %48 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 2, i64 8)
  %49 = bitcast i8* %48 to i8**
  %50 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %51 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %50, i32 0, i32 2
  store i8** %49, i8*** %51, align 8
  %52 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 4, i64 1)
  %53 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %54 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %53, i32 0, i32 2
  %55 = load i8**, i8*** %54, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 0
  store i8* %52, i8** %56, align 8
  %57 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %58 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %57, i32 0, i32 2
  %59 = load i8**, i8*** %58, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %struct.in_addr* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 4 %62, i64 4, i1 false)
  %63 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %64 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %63, i32 0, i32 2
  %65 = load i8**, i8*** %64, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 1
  store i8* null, i8** %66, align 8
  store i32 0, i32* %7, align 4
  br label %214

; <label>:67:                                     ; preds = %24, %6
  store i32 3, i32* %15, align 4
  %68 = load i8*, i8** %11, align 8
  store i8* %68, i8** %17, align 8
  store i32 0, i32* %14, align 4
  br label %69

; <label>:69:                                     ; preds = %82, %67
  %70 = load i8*, i8** %17, align 8
  %71 = load i8, i8* %70, align 1
  %72 = icmp ne i8 %71, 0
  br i1 %72, label %73, label %85

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %17, align 8
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %76, 46
  br i1 %77, label %78, label %81

; <label>:78:                                     ; preds = %73
  %79 = load i32, i32* %14, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %14, align 4
  br label %81

; <label>:81:                                     ; preds = %78, %73
  br label %82

; <label>:82:                                     ; preds = %81
  %83 = load i8*, i8** %17, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %17, align 8
  br label %69

; <label>:85:                                     ; preds = %69
  %86 = load i32, i32* %14, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %103

; <label>:88:                                     ; preds = %85
  %89 = load i8*, i8** %11, align 8
  %90 = getelementptr inbounds [1025 x i8], [1025 x i8]* %21, i32 0, i32 0
  store volatile i8 1, i8* @specialMalloc, align 1
  %91 = call i8* @__res_hostalias(%struct.__res_state* @res, i8* %89, i8* %90, i64 1025)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %91, i8** %17, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %103

; <label>:93:                                     ; preds = %88
  %94 = load i8*, i8** %17, align 8
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.90, i32 0, i32 0), i8* %94)
  %96 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %97 = load i32, i32* %9, align 4
  %98 = load i32, i32* %10, align 4
  %99 = load i8*, i8** %17, align 8
  %100 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %101 = load i32, i32* %13, align 4
  %102 = call i32 @GetHostDomain(%struct.in_addr* %96, i32 %97, i32 %98, i8* %99, i8* null, %struct.HostInfo* %100, i32 %101)
  store i32 %102, i32* %7, align 4
  br label %214

; <label>:103:                                    ; preds = %88, %85
  %104 = load i32, i32* %14, align 4
  %105 = load i8, i8* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 9), align 8
  %106 = and i8 %105, 15
  %107 = zext i8 %106 to i32
  %108 = icmp sge i32 %104, %107
  br i1 %108, label %109, label %130

; <label>:109:                                    ; preds = %103
  %110 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %111 = load i32, i32* %9, align 4
  %112 = load i32, i32* %10, align 4
  %113 = load i8*, i8** %11, align 8
  %114 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %115 = load i32, i32* %13, align 4
  %116 = call i32 @GetHostDomain(%struct.in_addr* %110, i32 %111, i32 %112, i8* %113, i8* null, %struct.HostInfo* %114, i32 %115)
  store i32 %116, i32* %15, align 4
  %117 = load i32, i32* %15, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

; <label>:119:                                    ; preds = %109
  %120 = load i32, i32* %15, align 4
  store i32 %120, i32* %7, align 4
  br label %214

; <label>:121:                                    ; preds = %109
  %122 = load i32, i32* %15, align 4
  %123 = icmp eq i32 %122, -2
  br i1 %123, label %124, label %127

; <label>:124:                                    ; preds = %121
  %125 = load i32, i32* %18, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %18, align 4
  br label %127

; <label>:127:                                    ; preds = %124, %121
  %128 = load i32, i32* %20, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %20, align 4
  br label %130

; <label>:130:                                    ; preds = %127, %103
  %131 = load i32, i32* %14, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %137

; <label>:133:                                    ; preds = %130
  %134 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %135 = and i64 %134, 128
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %150, label %137

; <label>:137:                                    ; preds = %133, %130
  %138 = load i32, i32* %14, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %194

; <label>:140:                                    ; preds = %137
  %141 = load i8*, i8** %17, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 -1
  store i8* %142, i8** %17, align 8
  %143 = load i8, i8* %142, align 1
  %144 = sext i8 %143 to i32
  %145 = icmp ne i32 %144, 46
  br i1 %145, label %146, label %194

; <label>:146:                                    ; preds = %140
  %147 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %148 = and i64 %147, 512
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %194

; <label>:150:                                    ; preds = %146, %133
  store i8** getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 6, i32 0), i8*** %16, align 8
  br label %151

; <label>:151:                                    ; preds = %190, %150
  %152 = load i8**, i8*** %16, align 8
  %153 = load i8*, i8** %152, align 8
  %154 = icmp ne i8* %153, null
  br i1 %154, label %155, label %193

; <label>:155:                                    ; preds = %151
  %156 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %157 = load i32, i32* %9, align 4
  %158 = load i32, i32* %10, align 4
  %159 = load i8*, i8** %11, align 8
  %160 = load i8**, i8*** %16, align 8
  %161 = load i8*, i8** %160, align 8
  %162 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %163 = load i32, i32* %13, align 4
  %164 = call i32 @GetHostDomain(%struct.in_addr* %156, i32 %157, i32 %158, i8* %159, i8* %161, %struct.HostInfo* %162, i32 %163)
  store i32 %164, i32* %15, align 4
  %165 = load i32, i32* %15, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %170, label %167

; <label>:167:                                    ; preds = %155
  %168 = load i32, i32* %15, align 4
  %169 = icmp eq i32 %168, -5
  br i1 %169, label %170, label %172

; <label>:170:                                    ; preds = %167, %155
  %171 = load i32, i32* %15, align 4
  store i32 %171, i32* %7, align 4
  br label %214

; <label>:172:                                    ; preds = %167
  %173 = load i32, i32* %15, align 4
  %174 = icmp eq i32 %173, -2
  br i1 %174, label %175, label %178

; <label>:175:                                    ; preds = %172
  %176 = load i32, i32* %18, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %18, align 4
  br label %178

; <label>:178:                                    ; preds = %175, %172
  %179 = load i32, i32* %15, align 4
  %180 = icmp ne i32 %179, 3
  br i1 %180, label %181, label %184

; <label>:181:                                    ; preds = %178
  %182 = load i32, i32* %15, align 4
  %183 = icmp ne i32 %182, -2
  br i1 %183, label %188, label %184

; <label>:184:                                    ; preds = %181, %178
  %185 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %186 = and i64 %185, 512
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %189

; <label>:188:                                    ; preds = %184, %181
  br label %193

; <label>:189:                                    ; preds = %184
  br label %190

; <label>:190:                                    ; preds = %189
  %191 = load i8**, i8*** %16, align 8
  %192 = getelementptr inbounds i8*, i8** %191, i32 1
  store i8** %192, i8*** %16, align 8
  br label %151

; <label>:193:                                    ; preds = %188, %151
  br label %194

; <label>:194:                                    ; preds = %193, %146, %140, %137
  %195 = load i32, i32* %20, align 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %208, label %197

; <label>:197:                                    ; preds = %194
  %198 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %199 = load i32, i32* %9, align 4
  %200 = load i32, i32* %10, align 4
  %201 = load i8*, i8** %11, align 8
  %202 = load %struct.HostInfo*, %struct.HostInfo** %12, align 8
  %203 = load i32, i32* %13, align 4
  %204 = call i32 @GetHostDomain(%struct.in_addr* %198, i32 %199, i32 %200, i8* %201, i8* null, %struct.HostInfo* %202, i32 %203)
  store i32 %204, i32* %15, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %208

; <label>:206:                                    ; preds = %197
  %207 = load i32, i32* %15, align 4
  store i32 %207, i32* %7, align 4
  br label %214

; <label>:208:                                    ; preds = %197, %194
  %209 = load i32, i32* %18, align 4
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %211, label %212

; <label>:211:                                    ; preds = %208
  store i32 -2, i32* %15, align 4
  br label %212

; <label>:212:                                    ; preds = %211, %208
  %213 = load i32, i32* %15, align 4
  store i32 %213, i32* %7, align 4
  br label %214

; <label>:214:                                    ; preds = %212, %206, %170, %119, %93, %28
  %215 = load i32, i32* %7, align 4
  ret i32 %215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @GetHostDomain(%struct.in_addr*, i32, i32, i8*, i8*, %struct.HostInfo*, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.in_addr*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.HostInfo*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %union.querybuf, align 4
  %17 = alloca [2052 x i8], align 16
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.in_addr* %0, %struct.in_addr** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i8* %3, i8** %12, align 8
  store i8* %4, i8** %13, align 8
  store %struct.HostInfo* %5, %struct.HostInfo** %14, align 8
  store i32 %6, i32* %15, align 4
  %21 = getelementptr inbounds [2052 x i8], [2052 x i8]* %17, i32 0, i32 0
  store i8* %21, i8** %18, align 8
  %22 = load i8*, i8** %13, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %51

; <label>:24:                                     ; preds = %7
  %25 = load i8*, i8** %12, align 8
  %26 = call i64 @strlen(i8* %25)
  %27 = sub i64 %26, 1
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %19, align 4
  %29 = load i8*, i8** %12, align 8
  %30 = load i32, i32* %19, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 46
  br i1 %35, label %36, label %48

; <label>:36:                                     ; preds = %24
  %37 = load i32, i32* %19, align 4
  %38 = sext i32 %37 to i64
  %39 = icmp ult i64 %38, 2051
  br i1 %39, label %40, label %48

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds [2052 x i8], [2052 x i8]* %17, i32 0, i32 0
  %42 = load i8*, i8** %12, align 8
  %43 = load i32, i32* %19, align 4
  %44 = sext i32 %43 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %41, i8* align 1 %42, i64 %44, i1 false)
  %45 = load i32, i32* %19, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [2052 x i8], [2052 x i8]* %17, i64 0, i64 %46
  store i8 0, i8* %47, align 1
  br label %50

; <label>:48:                                     ; preds = %36, %24
  %49 = load i8*, i8** %12, align 8
  store i8* %49, i8** %18, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %40
  br label %57

; <label>:51:                                     ; preds = %7
  %52 = getelementptr inbounds [2052 x i8], [2052 x i8]* %17, i32 0, i32 0
  %53 = load i8*, i8** %12, align 8
  %54 = load i8*, i8** %13, align 8
  %55 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.91, i32 0, i32 0), i32 1025, i8* %53, i32 1025, i8* %54) #9
  %56 = getelementptr inbounds [2052 x i8], [2052 x i8]* %17, i32 0, i32 0
  store i8* %56, i8** %18, align 8
  br label %57

; <label>:57:                                     ; preds = %51, %50
  %58 = load i8*, i8** %18, align 8
  %59 = load i32, i32* %10, align 4
  %60 = load i32, i32* %11, align 4
  %61 = bitcast %union.querybuf* %16 to [65536 x i8]*
  %62 = getelementptr inbounds [65536 x i8], [65536 x i8]* %61, i32 0, i32 0
  %63 = call i32 @__res_nmkquery(%struct.__res_state* @res, i32 0, i8* %58, i32 %59, i32 %60, i8* null, i32 0, i8* null, i8* %62, i32 65536)
  store i32 %63, i32* %19, align 4
  %64 = load i32, i32* %19, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %66, label %73

; <label>:66:                                     ; preds = %57
  %67 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %68 = and i64 %67, 2
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %70, label %72

; <label>:70:                                     ; preds = %66
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.92, i32 0, i32 0))
  br label %72

; <label>:72:                                     ; preds = %70, %66
  store i32 -3, i32* %8, align 4
  br label %106

; <label>:73:                                     ; preds = %57
  %74 = load %struct.in_addr*, %struct.in_addr** %9, align 8
  %75 = load i32, i32* %11, align 4
  %76 = bitcast %union.querybuf* %16 to i8*
  %77 = load i32, i32* %19, align 4
  %78 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %79 = load i32, i32* %15, align 4
  %80 = call i32 @GetAnswer(%struct.in_addr* %74, i32 %75, i8* %76, i32 %77, i32 0, %struct.HostInfo* %78, i32 %79)
  store i32 %80, i32* %19, align 4
  %81 = load i32, i32* %19, align 4
  %82 = icmp eq i32 %81, -4
  br i1 %82, label %83, label %104

; <label>:83:                                     ; preds = %73
  %84 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %85 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %84, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %103

; <label>:88:                                     ; preds = %83
  %89 = load i8*, i8** %18, align 8
  %90 = call i64 @strlen(i8* %89)
  %91 = add i64 %90, 1
  %92 = trunc i64 %91 to i32
  store i32 %92, i32* %20, align 4
  %93 = load i32, i32* %20, align 4
  %94 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 %93, i64 1)
  %95 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %96 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %95, i32 0, i32 0
  store i8* %94, i8** %96, align 8
  %97 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %98 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %97, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = load i8*, i8** %18, align 8
  %101 = load i32, i32* %20, align 4
  %102 = sext i32 %101 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %100, i64 %102, i1 false)
  br label %103

; <label>:103:                                    ; preds = %88, %83
  br label %104

; <label>:104:                                    ; preds = %103, %73
  %105 = load i32, i32* %19, align 4
  store i32 %105, i32* %8, align 4
  br label %106

; <label>:106:                                    ; preds = %104, %72
  %107 = load i32, i32* %8, align 4
  ret i32 %107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @GetAnswer(%struct.in_addr*, i32, i8*, i32, i32, %struct.HostInfo*, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.in_addr*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.HostInfo*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.HEADER*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %union.querybuf, align 4
  %19 = alloca i8**, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8**, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  store %struct.in_addr* %0, %struct.in_addr** %9, align 8
  store i32 %1, i32* %10, align 4
  store i8* %2, i8** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store %struct.HostInfo* %5, %struct.HostInfo** %14, align 8
  store i32 %6, i32* %15, align 4
  store i32 0, i32* %33, align 4
  store i32 0, i32* %34, align 4
  store i32 0, i32* %43, align 4
  %45 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  call void @FreeHostInfoPtr(%struct.HostInfo* %45)
  %46 = load %struct.in_addr*, %struct.in_addr** %9, align 8
  %47 = load i8*, i8** %11, align 8
  %48 = load i32, i32* %12, align 4
  %49 = bitcast %union.querybuf* %18 to i8*
  %50 = call i32 (%struct.in_addr*, i8*, i32, i8*, i64, i32*, ...) bitcast (i32 (%struct.in_addr*, i8*, i32, i8*, i32, i32*)* @SendRequest to i32 (%struct.in_addr*, i8*, i32, i8*, i64, i32*, ...)*)(%struct.in_addr* %46, i8* %47, i32 %48, i8* %49, i64 65536, i32* %35)
  store i32 %50, i32* %40, align 4
  %51 = load i32, i32* %40, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %61

; <label>:53:                                     ; preds = %7
  %54 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %55 = and i64 %54, 2147483648
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %57, label %59

; <label>:57:                                     ; preds = %53
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.95, i32 0, i32 0))
  br label %59

; <label>:59:                                     ; preds = %57, %53
  %60 = load i32, i32* %40, align 4
  store i32 %60, i32* %8, align 4
  br label %1126

; <label>:61:                                     ; preds = %7
  %62 = bitcast %union.querybuf* %18 to i8*
  %63 = load i32, i32* %35, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  store i8* %65, i8** %20, align 8
  %66 = bitcast %union.querybuf* %18 to %struct.HEADER*
  store %struct.HEADER* %66, %struct.HEADER** %16, align 8
  %67 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %68 = bitcast %struct.HEADER* %67 to i96*
  %69 = load i96, i96* %68, align 4
  %70 = lshr i96 %69, 24
  %71 = and i96 %70, 15
  %72 = trunc i96 %71 to i32
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %81

; <label>:74:                                     ; preds = %61
  %75 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %76 = bitcast %struct.HEADER* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = lshr i96 %77, 24
  %79 = and i96 %78, 15
  %80 = trunc i96 %79 to i32
  store i32 %80, i32* %8, align 4
  br label %1126

; <label>:81:                                     ; preds = %61
  %82 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %83 = bitcast %struct.HEADER* %82 to i96*
  %84 = load i96, i96* %83, align 4
  %85 = lshr i96 %84, 32
  %86 = and i96 %85, 65535
  %87 = trunc i96 %86 to i32
  %88 = trunc i32 %87 to i16
  %89 = call zeroext i16 @ntohs(i16 zeroext %88) #12
  %90 = zext i16 %89 to i32
  store i32 %90, i32* %27, align 4
  %91 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %92 = bitcast %struct.HEADER* %91 to i96*
  %93 = load i96, i96* %92, align 4
  %94 = lshr i96 %93, 48
  %95 = and i96 %94, 65535
  %96 = trunc i96 %95 to i32
  %97 = trunc i32 %96 to i16
  %98 = call zeroext i16 @ntohs(i16 zeroext %97) #12
  %99 = zext i16 %98 to i32
  store i32 %99, i32* %28, align 4
  %100 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %101 = bitcast %struct.HEADER* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = lshr i96 %102, 80
  %104 = trunc i96 %103 to i32
  %105 = trunc i32 %104 to i16
  %106 = call zeroext i16 @ntohs(i16 zeroext %105) #12
  %107 = zext i16 %106 to i32
  store i32 %107, i32* %29, align 4
  %108 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %109 = bitcast %struct.HEADER* %108 to i96*
  %110 = load i96, i96* %109, align 4
  %111 = lshr i96 %110, 64
  %112 = and i96 %111, 65535
  %113 = trunc i96 %112 to i32
  %114 = trunc i32 %113 to i16
  %115 = call zeroext i16 @ntohs(i16 zeroext %114) #12
  %116 = zext i16 %115 to i32
  store i32 %116, i32* %30, align 4
  %117 = load i32, i32* %28, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %126

; <label>:119:                                    ; preds = %81
  %120 = load i32, i32* %30, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %126

; <label>:122:                                    ; preds = %119
  %123 = load i32, i32* %29, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

; <label>:125:                                    ; preds = %122
  store i32 -2, i32* %8, align 4
  br label %1126

; <label>:126:                                    ; preds = %122, %119, %81
  store i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @hostbuf, i32 0, i32 0), i8** %21, align 8
  store i32 1025, i32* %31, align 4
  %127 = bitcast %union.querybuf* %18 to i8*
  %128 = getelementptr inbounds i8, i8* %127, i64 12
  store i8* %128, i8** %17, align 8
  br label %129

; <label>:129:                                    ; preds = %150, %126
  %130 = load i32, i32* %27, align 4
  %131 = add nsw i32 %130, -1
  store i32 %131, i32* %27, align 4
  %132 = icmp sgt i32 %130, 0
  br i1 %132, label %133, label %151

; <label>:133:                                    ; preds = %129
  %134 = load i8*, i8** %17, align 8
  %135 = load i8*, i8** %20, align 8
  %136 = call i32 @__dn_skipname(i8* %134, i8* %135)
  store i32 %136, i32* %35, align 4
  %137 = load i32, i32* %35, align 4
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %139, label %140

; <label>:139:                                    ; preds = %133
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:140:                                    ; preds = %133
  %141 = load i32, i32* %35, align 4
  %142 = add nsw i32 %141, 4
  %143 = load i8*, i8** %17, align 8
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8* %145, i8** %17, align 8
  %146 = load i8*, i8** %17, align 8
  %147 = load i8*, i8** %20, align 8
  %148 = icmp ugt i8* %146, %147
  br i1 %148, label %149, label %150

; <label>:149:                                    ; preds = %140
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:150:                                    ; preds = %140
  br label %129

; <label>:151:                                    ; preds = %129
  store i8** getelementptr inbounds ([35 x i8*], [35 x i8*]* @host_aliases, i32 0, i32 0), i8*** %19, align 8
  store i8** getelementptr inbounds ([36 x i8*], [36 x i8*]* @addr_list, i32 0, i32 0), i8*** %22, align 8
  store i32 0, i32* %42, align 4
  %152 = load i32, i32* %28, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %442

; <label>:154:                                    ; preds = %151
  %155 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %156 = bitcast %struct.HEADER* %155 to i96*
  %157 = load i96, i96* %156, align 4
  %158 = lshr i96 %157, 29
  %159 = and i96 %158, 1
  %160 = trunc i96 %159 to i32
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %164

; <label>:162:                                    ; preds = %154
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.96, i32 0, i32 0))
  br label %164

; <label>:164:                                    ; preds = %162, %154
  %165 = load i32, i32* %15, align 4
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %177, label %167

; <label>:167:                                    ; preds = %164
  %168 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %169 = bitcast %struct.HEADER* %168 to i96*
  %170 = load i96, i96* %169, align 4
  %171 = lshr i96 %170, 18
  %172 = and i96 %171, 1
  %173 = trunc i96 %172 to i32
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %177, label %175

; <label>:175:                                    ; preds = %167
  %176 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.97, i32 0, i32 0))
  br label %177

; <label>:177:                                    ; preds = %175, %167, %164
  %178 = load i32, i32* %10, align 4
  %179 = icmp ne i32 %178, 1
  br i1 %179, label %180, label %207

; <label>:180:                                    ; preds = %177
  %181 = load i32, i32* %13, align 4
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %186

; <label>:183:                                    ; preds = %180
  %184 = load i32, i32* %10, align 4
  %185 = icmp eq i32 %184, 12
  br i1 %185, label %207, label %186

; <label>:186:                                    ; preds = %183, %180
  br label %187

; <label>:187:                                    ; preds = %205, %186
  %188 = load i32, i32* %28, align 4
  %189 = add nsw i32 %188, -1
  store i32 %189, i32* %28, align 4
  %190 = icmp sge i32 %189, 0
  br i1 %190, label %191, label %195

; <label>:191:                                    ; preds = %187
  %192 = load i8*, i8** %17, align 8
  %193 = load i8*, i8** %20, align 8
  %194 = icmp ult i8* %192, %193
  br label %195

; <label>:195:                                    ; preds = %191, %187
  %196 = phi i1 [ false, %187 ], [ %194, %191 ]
  br i1 %196, label %197, label %206

; <label>:197:                                    ; preds = %195
  %198 = load i8*, i8** %17, align 8
  %199 = bitcast %union.querybuf* %18 to i8*
  %200 = load i8*, i8** %20, align 8
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %202 = call i8* @Print_rr(i8* %198, i8* %199, i8* %200, %struct._IO_FILE* %201)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %202, i8** %17, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %204, label %205

; <label>:204:                                    ; preds = %197
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:205:                                    ; preds = %197
  br label %187

; <label>:206:                                    ; preds = %195
  store i32 1, i32* %43, align 4
  br label %441

; <label>:207:                                    ; preds = %183, %177
  br label %208

; <label>:208:                                    ; preds = %423, %417, %363, %354, %334, %307, %273, %272, %207
  %209 = load i32, i32* %28, align 4
  %210 = add nsw i32 %209, -1
  store i32 %210, i32* %28, align 4
  %211 = icmp sge i32 %210, 0
  br i1 %211, label %212, label %216

; <label>:212:                                    ; preds = %208
  %213 = load i8*, i8** %17, align 8
  %214 = load i8*, i8** %20, align 8
  %215 = icmp ult i8* %213, %214
  br label %216

; <label>:216:                                    ; preds = %212, %208
  %217 = phi i1 [ false, %208 ], [ %215, %212 ]
  br i1 %217, label %218, label %440

; <label>:218:                                    ; preds = %216
  %219 = bitcast %union.querybuf* %18 to [65536 x i8]*
  %220 = getelementptr inbounds [65536 x i8], [65536 x i8]* %219, i32 0, i32 0
  %221 = load i8*, i8** %20, align 8
  %222 = load i8*, i8** %17, align 8
  %223 = load i8*, i8** %21, align 8
  %224 = load i32, i32* %31, align 4
  %225 = call i32 @__dn_expand(i8* %220, i8* %221, i8* %222, i8* %223, i32 %224)
  store i32 %225, i32* %35, align 4
  %226 = load i32, i32* %35, align 4
  %227 = icmp slt i32 %226, 0
  br i1 %227, label %228, label %229

; <label>:228:                                    ; preds = %218
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:229:                                    ; preds = %218
  %230 = load i32, i32* %35, align 4
  %231 = load i8*, i8** %17, align 8
  %232 = sext i32 %230 to i64
  %233 = getelementptr inbounds i8, i8* %231, i64 %232
  store i8* %233, i8** %17, align 8
  %234 = load i8*, i8** %17, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 6
  %236 = getelementptr inbounds i8, i8* %235, i64 4
  %237 = load i8*, i8** %20, align 8
  %238 = icmp ugt i8* %236, %237
  br i1 %238, label %239, label %240

; <label>:239:                                    ; preds = %229
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:240:                                    ; preds = %229
  %241 = load i8*, i8** %17, align 8
  %242 = call i32 @__ns_get16(i8* %241)
  store i32 %242, i32* %25, align 4
  %243 = load i8*, i8** %17, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 2
  store i8* %244, i8** %17, align 8
  %245 = load i8*, i8** %17, align 8
  %246 = call i32 @__ns_get16(i8* %245)
  store i32 %246, i32* %26, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 2
  store i8* %248, i8** %17, align 8
  %249 = load i8*, i8** %17, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 4
  store i8* %250, i8** %17, align 8
  %251 = load i8*, i8** %17, align 8
  %252 = call i32 @__ns_get16(i8* %251)
  store i32 %252, i32* %39, align 4
  %253 = load i8*, i8** %17, align 8
  %254 = getelementptr inbounds i8, i8* %253, i64 2
  store i8* %254, i8** %17, align 8
  %255 = load i8*, i8** %17, align 8
  %256 = load i32, i32* %39, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i8, i8* %255, i64 %257
  %259 = load i8*, i8** %20, align 8
  %260 = icmp ugt i8* %258, %259
  br i1 %260, label %261, label %262

; <label>:261:                                    ; preds = %240
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:262:                                    ; preds = %240
  %263 = load i32, i32* %25, align 4
  %264 = icmp eq i32 %263, 5
  br i1 %264, label %265, label %294

; <label>:265:                                    ; preds = %262
  %266 = load i32, i32* %39, align 4
  %267 = load i8*, i8** %17, align 8
  %268 = sext i32 %266 to i64
  %269 = getelementptr inbounds i8, i8* %267, i64 %268
  store i8* %269, i8** %17, align 8
  %270 = load i8**, i8*** %19, align 8
  %271 = icmp uge i8** %270, getelementptr inbounds ([35 x i8*], [35 x i8*]* @host_aliases, i64 0, i64 34)
  br i1 %271, label %272, label %273

; <label>:272:                                    ; preds = %265
  br label %208

; <label>:273:                                    ; preds = %265
  %274 = load i8*, i8** %21, align 8
  %275 = load i8**, i8*** %19, align 8
  %276 = getelementptr inbounds i8*, i8** %275, i32 1
  store i8** %276, i8*** %19, align 8
  store i8* %274, i8** %275, align 8
  %277 = load i8*, i8** %21, align 8
  %278 = call i64 @strlen(i8* %277)
  %279 = add i64 %278, 1
  %280 = trunc i64 %279 to i32
  store i32 %280, i32* %35, align 4
  %281 = load i32, i32* %35, align 4
  %282 = load i32, i32* %33, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [35 x i32], [35 x i32]* @host_aliases_len, i64 0, i64 %283
  store i32 %281, i32* %284, align 4
  %285 = load i32, i32* %33, align 4
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %33, align 4
  %287 = load i32, i32* %35, align 4
  %288 = load i8*, i8** %21, align 8
  %289 = sext i32 %287 to i64
  %290 = getelementptr inbounds i8, i8* %288, i64 %289
  store i8* %290, i8** %21, align 8
  %291 = load i32, i32* %35, align 4
  %292 = load i32, i32* %31, align 4
  %293 = sub nsw i32 %292, %291
  store i32 %293, i32* %31, align 4
  br label %208

; <label>:294:                                    ; preds = %262
  %295 = load i32, i32* %25, align 4
  %296 = icmp eq i32 %295, 12
  br i1 %296, label %297, label %331

; <label>:297:                                    ; preds = %294
  %298 = bitcast %union.querybuf* %18 to [65536 x i8]*
  %299 = getelementptr inbounds [65536 x i8], [65536 x i8]* %298, i32 0, i32 0
  %300 = load i8*, i8** %20, align 8
  %301 = load i8*, i8** %17, align 8
  %302 = load i8*, i8** %21, align 8
  %303 = load i32, i32* %31, align 4
  %304 = call i32 @__dn_expand(i8* %299, i8* %300, i8* %301, i8* %302, i32 %303)
  store i32 %304, i32* %35, align 4
  %305 = load i32, i32* %35, align 4
  %306 = icmp slt i32 %305, 0
  br i1 %306, label %307, label %312

; <label>:307:                                    ; preds = %297
  %308 = load i32, i32* %35, align 4
  %309 = load i8*, i8** %17, align 8
  %310 = sext i32 %308 to i64
  %311 = getelementptr inbounds i8, i8* %309, i64 %310
  store i8* %311, i8** %17, align 8
  br label %208

; <label>:312:                                    ; preds = %297
  %313 = load i32, i32* %35, align 4
  %314 = load i8*, i8** %17, align 8
  %315 = sext i32 %313 to i64
  %316 = getelementptr inbounds i8, i8* %314, i64 %315
  store i8* %316, i8** %17, align 8
  %317 = load i8*, i8** %21, align 8
  %318 = call i64 @strlen(i8* %317)
  %319 = add i64 %318, 1
  %320 = trunc i64 %319 to i32
  store i32 %320, i32* %38, align 4
  %321 = load i32, i32* %38, align 4
  %322 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %321)
  %323 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %324 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %323, i32 0, i32 0
  store i8* %322, i8** %324, align 8
  %325 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %326 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %325, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = load i8*, i8** %21, align 8
  %329 = load i32, i32* %38, align 4
  %330 = sext i32 %329 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %327, i8* align 1 %328, i64 %330, i1 false)
  store i32 1, i32* %42, align 4
  br label %440

; <label>:331:                                    ; preds = %294
  %332 = load i32, i32* %25, align 4
  %333 = icmp ne i32 %332, 1
  br i1 %333, label %334, label %339

; <label>:334:                                    ; preds = %331
  %335 = load i32, i32* %39, align 4
  %336 = load i8*, i8** %17, align 8
  %337 = sext i32 %335 to i64
  %338 = getelementptr inbounds i8, i8* %336, i64 %337
  store i8* %338, i8** %17, align 8
  br label %208

; <label>:339:                                    ; preds = %331
  br label %340

; <label>:340:                                    ; preds = %339
  br label %341

; <label>:341:                                    ; preds = %340
  %342 = load i32, i32* %39, align 4
  %343 = icmp ne i32 %342, 4
  br i1 %343, label %344, label %345

; <label>:344:                                    ; preds = %341
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:345:                                    ; preds = %341
  %346 = load i32, i32* %42, align 4
  %347 = icmp ne i32 %346, 0
  br i1 %347, label %348, label %369

; <label>:348:                                    ; preds = %345
  %349 = load i32, i32* %39, align 4
  %350 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %351 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %350, i32 0, i32 4
  %352 = load i32, i32* %351, align 4
  %353 = icmp ne i32 %349, %352
  br i1 %353, label %354, label %359

; <label>:354:                                    ; preds = %348
  %355 = load i32, i32* %39, align 4
  %356 = load i8*, i8** %17, align 8
  %357 = sext i32 %355 to i64
  %358 = getelementptr inbounds i8, i8* %356, i64 %357
  store i8* %358, i8** %17, align 8
  br label %208

; <label>:359:                                    ; preds = %348
  %360 = load i32, i32* %26, align 4
  %361 = load i32, i32* %32, align 4
  %362 = icmp ne i32 %360, %361
  br i1 %362, label %363, label %368

; <label>:363:                                    ; preds = %359
  %364 = load i32, i32* %39, align 4
  %365 = load i8*, i8** %17, align 8
  %366 = sext i32 %364 to i64
  %367 = getelementptr inbounds i8, i8* %365, i64 %366
  store i8* %367, i8** %17, align 8
  br label %208

; <label>:368:                                    ; preds = %359
  br label %394

; <label>:369:                                    ; preds = %345
  %370 = load i32, i32* %39, align 4
  %371 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %372 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %371, i32 0, i32 4
  store i32 %370, i32* %372, align 4
  %373 = load i32, i32* %26, align 4
  store i32 %373, i32* %32, align 4
  %374 = load i32, i32* %26, align 4
  %375 = icmp eq i32 %374, 1
  %376 = zext i1 %375 to i64
  %377 = select i1 %375, i32 2, i32 0
  %378 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %379 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %378, i32 0, i32 3
  store i32 %377, i32* %379, align 8
  %380 = load i8*, i8** %21, align 8
  %381 = call i64 @strlen(i8* %380)
  %382 = add i64 %381, 1
  %383 = trunc i64 %382 to i32
  store i32 %383, i32* %38, align 4
  %384 = load i32, i32* %38, align 4
  %385 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %384)
  %386 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %387 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %386, i32 0, i32 0
  store i8* %385, i8** %387, align 8
  %388 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %389 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %388, i32 0, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = load i8*, i8** %21, align 8
  %392 = load i32, i32* %38, align 4
  %393 = sext i32 %392 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %390, i8* align 1 %391, i64 %393, i1 false)
  br label %394

; <label>:394:                                    ; preds = %369, %368
  %395 = load i8*, i8** %21, align 8
  %396 = ptrtoint i8* %395 to i32
  %397 = zext i32 %396 to i64
  %398 = urem i64 %397, 4
  %399 = load i8*, i8** %21, align 8
  %400 = getelementptr inbounds i8, i8* %399, i64 %398
  store i8* %400, i8** %21, align 8
  %401 = load i8*, i8** %21, align 8
  %402 = load i32, i32* %39, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i8, i8* %401, i64 %403
  %405 = icmp uge i8* %404, getelementptr inbounds ([1025 x i8], [1025 x i8]* @hostbuf, i64 1, i64 0)
  br i1 %405, label %406, label %414

; <label>:406:                                    ; preds = %394
  %407 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %408 = and i64 %407, 2
  %409 = icmp ne i64 %408, 0
  br i1 %409, label %410, label %413

; <label>:410:                                    ; preds = %406
  %411 = load i32, i32* %39, align 4
  %412 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.98, i32 0, i32 0), i32 %411)
  br label %413

; <label>:413:                                    ; preds = %410, %406
  br label %440

; <label>:414:                                    ; preds = %394
  %415 = load i32, i32* %34, align 4
  %416 = icmp sge i32 %415, 35
  br i1 %416, label %417, label %423

; <label>:417:                                    ; preds = %414
  %418 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.99, i32 0, i32 0))
  %419 = load i32, i32* %39, align 4
  %420 = load i8*, i8** %17, align 8
  %421 = sext i32 %419 to i64
  %422 = getelementptr inbounds i8, i8* %420, i64 %421
  store i8* %422, i8** %17, align 8
  br label %208

; <label>:423:                                    ; preds = %414
  %424 = load i8*, i8** %21, align 8
  %425 = load i8**, i8*** %22, align 8
  %426 = getelementptr inbounds i8*, i8** %425, i32 1
  store i8** %426, i8*** %22, align 8
  store i8* %424, i8** %425, align 8
  %427 = load i8*, i8** %17, align 8
  %428 = load i32, i32* %39, align 4
  %429 = sext i32 %428 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %424, i8* align 1 %427, i64 %429, i1 false)
  %430 = load i32, i32* %39, align 4
  %431 = load i8*, i8** %21, align 8
  %432 = sext i32 %430 to i64
  %433 = getelementptr inbounds i8, i8* %431, i64 %432
  store i8* %433, i8** %21, align 8
  %434 = load i32, i32* %39, align 4
  %435 = load i8*, i8** %17, align 8
  %436 = sext i32 %434 to i64
  %437 = getelementptr inbounds i8, i8* %435, i64 %436
  store i8* %437, i8** %17, align 8
  %438 = load i32, i32* %34, align 4
  %439 = add nsw i32 %438, 1
  store i32 %439, i32* %34, align 4
  store i32 1, i32* %42, align 4
  br label %208

; <label>:440:                                    ; preds = %413, %312, %216
  br label %441

; <label>:441:                                    ; preds = %440, %206
  br label %442

; <label>:442:                                    ; preds = %441, %151
  %443 = load i32, i32* %10, align 4
  %444 = icmp eq i32 %443, 1
  br i1 %444, label %448, label %445

; <label>:445:                                    ; preds = %442
  %446 = load i32, i32* %10, align 4
  %447 = icmp eq i32 %446, 12
  br i1 %447, label %448, label %556

; <label>:448:                                    ; preds = %445, %442
  %449 = load i32, i32* %42, align 4
  %450 = icmp ne i32 %449, 0
  br i1 %450, label %451, label %556

; <label>:451:                                    ; preds = %448
  %452 = load i32, i32* %33, align 4
  %453 = icmp sgt i32 %452, 0
  br i1 %453, label %454, label %503

; <label>:454:                                    ; preds = %451
  %455 = load i32, i32* %33, align 4
  %456 = add nsw i32 1, %455
  %457 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 %456, i64 8)
  %458 = bitcast i8* %457 to i8**
  %459 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %460 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %459, i32 0, i32 1
  store i8** %458, i8*** %460, align 8
  store i32 0, i32* %36, align 4
  br label %461

; <label>:461:                                    ; preds = %493, %454
  %462 = load i32, i32* %36, align 4
  %463 = load i32, i32* %33, align 4
  %464 = icmp slt i32 %462, %463
  br i1 %464, label %465, label %496

; <label>:465:                                    ; preds = %461
  %466 = load i32, i32* %36, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [35 x i32], [35 x i32]* @host_aliases_len, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %469)
  %471 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %472 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %471, i32 0, i32 1
  %473 = load i8**, i8*** %472, align 8
  %474 = load i32, i32* %36, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds i8*, i8** %473, i64 %475
  store i8* %470, i8** %476, align 8
  %477 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %478 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %477, i32 0, i32 1
  %479 = load i8**, i8*** %478, align 8
  %480 = load i32, i32* %36, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds i8*, i8** %479, i64 %481
  %483 = load i8*, i8** %482, align 8
  %484 = load i32, i32* %36, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds [35 x i8*], [35 x i8*]* @host_aliases, i64 0, i64 %485
  %487 = load i8*, i8** %486, align 8
  %488 = load i32, i32* %36, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds [35 x i32], [35 x i32]* @host_aliases_len, i64 0, i64 %489
  %491 = load i32, i32* %490, align 4
  %492 = sext i32 %491 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %483, i8* align 1 %487, i64 %492, i1 false)
  br label %493

; <label>:493:                                    ; preds = %465
  %494 = load i32, i32* %36, align 4
  %495 = add nsw i32 %494, 1
  store i32 %495, i32* %36, align 4
  br label %461

; <label>:496:                                    ; preds = %461
  %497 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %498 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %497, i32 0, i32 1
  %499 = load i8**, i8*** %498, align 8
  %500 = load i32, i32* %36, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i8*, i8** %499, i64 %501
  store i8* null, i8** %502, align 8
  br label %503

; <label>:503:                                    ; preds = %496, %451
  %504 = load i32, i32* %34, align 4
  %505 = icmp sgt i32 %504, 0
  br i1 %505, label %506, label %553

; <label>:506:                                    ; preds = %503
  %507 = load i32, i32* %34, align 4
  %508 = add nsw i32 1, %507
  %509 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 %508, i64 8)
  %510 = bitcast i8* %509 to i8**
  %511 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %512 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %511, i32 0, i32 2
  store i8** %510, i8*** %512, align 8
  store i32 0, i32* %36, align 4
  br label %513

; <label>:513:                                    ; preds = %543, %506
  %514 = load i32, i32* %36, align 4
  %515 = load i32, i32* %34, align 4
  %516 = icmp slt i32 %514, %515
  br i1 %516, label %517, label %546

; <label>:517:                                    ; preds = %513
  %518 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %519 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %518, i32 0, i32 4
  %520 = load i32, i32* %519, align 4
  %521 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %520)
  %522 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %523 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %522, i32 0, i32 2
  %524 = load i8**, i8*** %523, align 8
  %525 = load i32, i32* %36, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds i8*, i8** %524, i64 %526
  store i8* %521, i8** %527, align 8
  %528 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %529 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %528, i32 0, i32 2
  %530 = load i8**, i8*** %529, align 8
  %531 = load i32, i32* %36, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8*, i8** %530, i64 %532
  %534 = load i8*, i8** %533, align 8
  %535 = load i32, i32* %36, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [36 x i8*], [36 x i8*]* @addr_list, i64 0, i64 %536
  %538 = load i8*, i8** %537, align 8
  %539 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %540 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %539, i32 0, i32 4
  %541 = load i32, i32* %540, align 4
  %542 = sext i32 %541 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %534, i8* align 1 %538, i64 %542, i1 false)
  br label %543

; <label>:543:                                    ; preds = %517
  %544 = load i32, i32* %36, align 4
  %545 = add nsw i32 %544, 1
  store i32 %545, i32* %36, align 4
  br label %513

; <label>:546:                                    ; preds = %513
  %547 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %548 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %547, i32 0, i32 2
  %549 = load i8**, i8*** %548, align 8
  %550 = load i32, i32* %36, align 4
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds i8*, i8** %549, i64 %551
  store i8* null, i8** %552, align 8
  br label %553

; <label>:553:                                    ; preds = %546, %503
  %554 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %555 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %554, i32 0, i32 5
  store %struct.ServerInfo** null, %struct.ServerInfo*** %555, align 8
  store i32 0, i32* %8, align 4
  br label %1126

; <label>:556:                                    ; preds = %448, %445
  %557 = load %struct.HEADER*, %struct.HEADER** %16, align 8
  %558 = bitcast %struct.HEADER* %557 to i96*
  %559 = load i96, i96* %558, align 4
  %560 = lshr i96 %559, 18
  %561 = and i96 %560, 1
  %562 = trunc i96 %561 to i32
  %563 = icmp ne i32 %562, 0
  br i1 %563, label %580, label %564

; <label>:564:                                    ; preds = %556
  %565 = load i32, i32* %10, align 4
  %566 = icmp ne i32 %565, 1
  br i1 %566, label %567, label %580

; <label>:567:                                    ; preds = %564
  %568 = load i32, i32* %30, align 4
  %569 = icmp sgt i32 %568, 0
  br i1 %569, label %573, label %570

; <label>:570:                                    ; preds = %567
  %571 = load i32, i32* %29, align 4
  %572 = icmp sgt i32 %571, 0
  br i1 %572, label %573, label %580

; <label>:573:                                    ; preds = %570, %567
  %574 = load i32, i32* %43, align 4
  %575 = icmp ne i32 %574, 0
  br i1 %575, label %576, label %578

; <label>:576:                                    ; preds = %573
  %577 = call i32 @putchar(i32 10)
  br label %578

; <label>:578:                                    ; preds = %576, %573
  %579 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11.100, i32 0, i32 0))
  br label %580

; <label>:580:                                    ; preds = %578, %570, %564, %556
  %581 = bitcast %union.querybuf* %18 to i8*
  %582 = load i8*, i8** %20, align 8
  %583 = call i8* (i8*, i32, i8*, ...) bitcast (i8* (i8*, i32, i8*)* @res_skip to i8* (i8*, i32, i8*, ...)*)(i8* %581, i32 2, i8* %582)
  store i8* %583, i8** %17, align 8
  store i32 0, i32* %41, align 4
  %584 = load i32, i32* %10, align 4
  %585 = icmp ne i32 %584, 1
  br i1 %585, label %586, label %607

; <label>:586:                                    ; preds = %580
  br label %587

; <label>:587:                                    ; preds = %605, %586
  %588 = load i32, i32* %30, align 4
  %589 = add nsw i32 %588, -1
  store i32 %589, i32* %30, align 4
  %590 = icmp sge i32 %589, 0
  br i1 %590, label %591, label %595

; <label>:591:                                    ; preds = %587
  %592 = load i8*, i8** %17, align 8
  %593 = load i8*, i8** %20, align 8
  %594 = icmp ult i8* %592, %593
  br label %595

; <label>:595:                                    ; preds = %591, %587
  %596 = phi i1 [ false, %587 ], [ %594, %591 ]
  br i1 %596, label %597, label %606

; <label>:597:                                    ; preds = %595
  %598 = load i8*, i8** %17, align 8
  %599 = bitcast %union.querybuf* %18 to i8*
  %600 = load i8*, i8** %20, align 8
  %601 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %602 = call i8* @Print_rr(i8* %598, i8* %599, i8* %600, %struct._IO_FILE* %601)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %602, i8** %17, align 8
  %603 = icmp eq i8* %602, null
  br i1 %603, label %604, label %605

; <label>:604:                                    ; preds = %597
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:605:                                    ; preds = %597
  br label %587

; <label>:606:                                    ; preds = %595
  br label %785

; <label>:607:                                    ; preds = %580
  br label %608

; <label>:608:                                    ; preds = %783, %607
  %609 = load i32, i32* %30, align 4
  %610 = add nsw i32 %609, -1
  store i32 %610, i32* %30, align 4
  %611 = icmp sge i32 %610, 0
  br i1 %611, label %612, label %616

; <label>:612:                                    ; preds = %608
  %613 = load i8*, i8** %17, align 8
  %614 = load i8*, i8** %20, align 8
  %615 = icmp ult i8* %613, %614
  br label %616

; <label>:616:                                    ; preds = %612, %608
  %617 = phi i1 [ false, %608 ], [ %615, %612 ]
  br i1 %617, label %618, label %784

; <label>:618:                                    ; preds = %616
  %619 = bitcast %union.querybuf* %18 to [65536 x i8]*
  %620 = getelementptr inbounds [65536 x i8], [65536 x i8]* %619, i32 0, i32 0
  %621 = load i8*, i8** %20, align 8
  %622 = load i8*, i8** %17, align 8
  %623 = load i8*, i8** %21, align 8
  %624 = load i32, i32* %31, align 4
  %625 = call i32 @__dn_expand(i8* %620, i8* %621, i8* %622, i8* %623, i32 %624)
  store i32 %625, i32* %35, align 4
  %626 = load i32, i32* %35, align 4
  %627 = icmp slt i32 %626, 0
  br i1 %627, label %628, label %629

; <label>:628:                                    ; preds = %618
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:629:                                    ; preds = %618
  %630 = load i32, i32* %35, align 4
  %631 = load i8*, i8** %17, align 8
  %632 = sext i32 %630 to i64
  %633 = getelementptr inbounds i8, i8* %631, i64 %632
  store i8* %633, i8** %17, align 8
  %634 = load i8*, i8** %21, align 8
  %635 = call i64 @strlen(i8* %634)
  %636 = add i64 %635, 1
  %637 = trunc i64 %636 to i32
  store i32 %637, i32* %38, align 4
  %638 = load i32, i32* %38, align 4
  %639 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %638)
  store i8* %639, i8** %24, align 8
  %640 = load i8*, i8** %24, align 8
  %641 = load i8*, i8** %21, align 8
  %642 = load i32, i32* %38, align 4
  %643 = sext i32 %642 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %640, i8* align 1 %641, i64 %643, i1 false)
  %644 = load i8*, i8** %17, align 8
  %645 = getelementptr inbounds i8, i8* %644, i64 6
  %646 = getelementptr inbounds i8, i8* %645, i64 4
  %647 = load i8*, i8** %20, align 8
  %648 = icmp ugt i8* %646, %647
  br i1 %648, label %649, label %650

; <label>:649:                                    ; preds = %629
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:650:                                    ; preds = %629
  %651 = load i8*, i8** %17, align 8
  %652 = call i32 @__ns_get16(i8* %651)
  store i32 %652, i32* %25, align 4
  %653 = load i8*, i8** %17, align 8
  %654 = getelementptr inbounds i8, i8* %653, i64 2
  store i8* %654, i8** %17, align 8
  %655 = load i8*, i8** %17, align 8
  %656 = call i32 @__ns_get16(i8* %655)
  store i32 %656, i32* %26, align 4
  %657 = load i8*, i8** %17, align 8
  %658 = getelementptr inbounds i8, i8* %657, i64 2
  store i8* %658, i8** %17, align 8
  %659 = load i8*, i8** %17, align 8
  %660 = getelementptr inbounds i8, i8* %659, i64 4
  store i8* %660, i8** %17, align 8
  %661 = load i8*, i8** %17, align 8
  %662 = call i32 @__ns_get16(i8* %661)
  store i32 %662, i32* %39, align 4
  %663 = load i8*, i8** %17, align 8
  %664 = getelementptr inbounds i8, i8* %663, i64 2
  store i8* %664, i8** %17, align 8
  %665 = load i8*, i8** %17, align 8
  %666 = load i32, i32* %39, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds i8, i8* %665, i64 %667
  %669 = load i8*, i8** %20, align 8
  %670 = icmp ugt i8* %668, %669
  br i1 %670, label %671, label %672

; <label>:671:                                    ; preds = %650
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:672:                                    ; preds = %650
  %673 = load i32, i32* %25, align 4
  %674 = icmp ne i32 %673, 2
  br i1 %674, label %675, label %680

; <label>:675:                                    ; preds = %672
  %676 = load i32, i32* %39, align 4
  %677 = load i8*, i8** %17, align 8
  %678 = sext i32 %676 to i64
  %679 = getelementptr inbounds i8, i8* %677, i64 %678
  store i8* %679, i8** %17, align 8
  br label %783

; <label>:680:                                    ; preds = %672
  %681 = bitcast %union.querybuf* %18 to [65536 x i8]*
  %682 = getelementptr inbounds [65536 x i8], [65536 x i8]* %681, i32 0, i32 0
  %683 = load i8*, i8** %20, align 8
  %684 = load i8*, i8** %17, align 8
  %685 = load i8*, i8** %21, align 8
  %686 = load i32, i32* %31, align 4
  %687 = call i32 @__dn_expand(i8* %682, i8* %683, i8* %684, i8* %685, i32 %686)
  store i32 %687, i32* %35, align 4
  %688 = load i32, i32* %35, align 4
  %689 = icmp slt i32 %688, 0
  br i1 %689, label %690, label %691

; <label>:690:                                    ; preds = %680
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:691:                                    ; preds = %680
  %692 = load i32, i32* %35, align 4
  %693 = load i8*, i8** %17, align 8
  %694 = sext i32 %692 to i64
  %695 = getelementptr inbounds i8, i8* %693, i64 %694
  store i8* %695, i8** %17, align 8
  %696 = load i8*, i8** %21, align 8
  %697 = call i64 @strlen(i8* %696)
  %698 = add i64 %697, 1
  %699 = trunc i64 %698 to i32
  store i32 %699, i32* %38, align 4
  %700 = load i32, i32* %38, align 4
  %701 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %700)
  store i8* %701, i8** %23, align 8
  %702 = load i8*, i8** %23, align 8
  %703 = load i8*, i8** %21, align 8
  %704 = load i32, i32* %38, align 4
  %705 = sext i32 %704 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %702, i8* align 1 %703, i64 %705, i1 false)
  store i32 0, i32* %44, align 4
  store i32 0, i32* %37, align 4
  br label %706

; <label>:706:                                    ; preds = %722, %691
  %707 = load i32, i32* %37, align 4
  %708 = load i32, i32* %41, align 4
  %709 = icmp slt i32 %707, %708
  br i1 %709, label %710, label %725

; <label>:710:                                    ; preds = %706
  %711 = load i8*, i8** %23, align 8
  %712 = load i32, i32* %37, align 4
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %713
  %715 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %714, i32 0, i32 0
  %716 = load i8*, i8** %715, align 8
  %717 = call i32 @strcmp(i8* %711, i8* %716)
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %721

; <label>:719:                                    ; preds = %710
  store i32 1, i32* %44, align 4
  %720 = load i8*, i8** %23, align 8
  call void @free(i8* %720) #9
  br label %725

; <label>:721:                                    ; preds = %710
  br label %722

; <label>:722:                                    ; preds = %721
  %723 = load i32, i32* %37, align 4
  %724 = add nsw i32 %723, 1
  store i32 %724, i32* %37, align 4
  br label %706

; <label>:725:                                    ; preds = %719, %706
  %726 = load i32, i32* %44, align 4
  %727 = icmp ne i32 %726, 0
  br i1 %727, label %728, label %756

; <label>:728:                                    ; preds = %725
  %729 = load i32, i32* %37, align 4
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %730
  %732 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %731, i32 0, i32 2
  %733 = load i32, i32* %732, align 8
  %734 = add nsw i32 %733, 1
  store i32 %734, i32* %732, align 8
  %735 = load i32, i32* %37, align 4
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %736
  %738 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %737, i32 0, i32 2
  %739 = load i32, i32* %738, align 8
  %740 = icmp sle i32 %739, 35
  br i1 %740, label %741, label %755

; <label>:741:                                    ; preds = %728
  %742 = load i8*, i8** %24, align 8
  %743 = load i32, i32* %37, align 4
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %744
  %746 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %745, i32 0, i32 1
  %747 = load i32, i32* %37, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %748
  %750 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %749, i32 0, i32 2
  %751 = load i32, i32* %750, align 8
  %752 = sub nsw i32 %751, 1
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [35 x i8*], [35 x i8*]* %746, i64 0, i64 %753
  store i8* %742, i8** %754, align 8
  br label %755

; <label>:755:                                    ; preds = %741, %728
  br label %782

; <label>:756:                                    ; preds = %725
  %757 = load i32, i32* %41, align 4
  %758 = icmp sge i32 %757, 10
  br i1 %758, label %759, label %760

; <label>:759:                                    ; preds = %756
  br label %784

; <label>:760:                                    ; preds = %756
  %761 = load i8*, i8** %23, align 8
  %762 = load i32, i32* %41, align 4
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %763
  %765 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %764, i32 0, i32 0
  store i8* %761, i8** %765, align 8
  %766 = load i8*, i8** %24, align 8
  %767 = load i32, i32* %41, align 4
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %768
  %770 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %769, i32 0, i32 1
  %771 = getelementptr inbounds [35 x i8*], [35 x i8*]* %770, i64 0, i64 0
  store i8* %766, i8** %771, align 8
  %772 = load i32, i32* %41, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %773
  %775 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %774, i32 0, i32 2
  store i32 1, i32* %775, align 8
  %776 = load i32, i32* %41, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %777
  %779 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %778, i32 0, i32 4
  store i32 0, i32* %779, align 8
  %780 = load i32, i32* %41, align 4
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* %41, align 4
  br label %782

; <label>:782:                                    ; preds = %760, %755
  br label %783

; <label>:783:                                    ; preds = %782, %675
  br label %608

; <label>:784:                                    ; preds = %759, %616
  br label %785

; <label>:785:                                    ; preds = %784, %606
  %786 = bitcast %union.querybuf* %18 to i8*
  %787 = load i8*, i8** %20, align 8
  %788 = call i8* (i8*, i32, i8*, ...) bitcast (i8* (i8*, i32, i8*)* @res_skip to i8* (i8*, i32, i8*, ...)*)(i8* %786, i32 3, i8* %787)
  store i8* %788, i8** %17, align 8
  %789 = load i32, i32* %10, align 4
  %790 = icmp ne i32 %789, 1
  br i1 %790, label %791, label %812

; <label>:791:                                    ; preds = %785
  br label %792

; <label>:792:                                    ; preds = %810, %791
  %793 = load i32, i32* %29, align 4
  %794 = add nsw i32 %793, -1
  store i32 %794, i32* %29, align 4
  %795 = icmp sge i32 %794, 0
  br i1 %795, label %796, label %800

; <label>:796:                                    ; preds = %792
  %797 = load i8*, i8** %17, align 8
  %798 = load i8*, i8** %20, align 8
  %799 = icmp ult i8* %797, %798
  br label %800

; <label>:800:                                    ; preds = %796, %792
  %801 = phi i1 [ false, %792 ], [ %799, %796 ]
  br i1 %801, label %802, label %811

; <label>:802:                                    ; preds = %800
  %803 = load i8*, i8** %17, align 8
  %804 = bitcast %union.querybuf* %18 to i8*
  %805 = load i8*, i8** %20, align 8
  %806 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %807 = call i8* @Print_rr(i8* %803, i8* %804, i8* %805, %struct._IO_FILE* %806)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %807, i8** %17, align 8
  %808 = icmp eq i8* %807, null
  br i1 %808, label %809, label %810

; <label>:809:                                    ; preds = %802
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:810:                                    ; preds = %802
  br label %792

; <label>:811:                                    ; preds = %800
  br label %949

; <label>:812:                                    ; preds = %785
  br label %813

; <label>:813:                                    ; preds = %947, %870, %812
  %814 = load i32, i32* %29, align 4
  %815 = add nsw i32 %814, -1
  store i32 %815, i32* %29, align 4
  %816 = icmp sge i32 %815, 0
  br i1 %816, label %817, label %821

; <label>:817:                                    ; preds = %813
  %818 = load i8*, i8** %17, align 8
  %819 = load i8*, i8** %20, align 8
  %820 = icmp ult i8* %818, %819
  br label %821

; <label>:821:                                    ; preds = %817, %813
  %822 = phi i1 [ false, %813 ], [ %820, %817 ]
  br i1 %822, label %823, label %948

; <label>:823:                                    ; preds = %821
  %824 = bitcast %union.querybuf* %18 to [65536 x i8]*
  %825 = getelementptr inbounds [65536 x i8], [65536 x i8]* %824, i32 0, i32 0
  %826 = load i8*, i8** %20, align 8
  %827 = load i8*, i8** %17, align 8
  %828 = load i8*, i8** %21, align 8
  %829 = load i32, i32* %31, align 4
  %830 = call i32 @__dn_expand(i8* %825, i8* %826, i8* %827, i8* %828, i32 %829)
  store i32 %830, i32* %35, align 4
  %831 = load i32, i32* %35, align 4
  %832 = icmp slt i32 %831, 0
  br i1 %832, label %833, label %834

; <label>:833:                                    ; preds = %823
  br label %948

; <label>:834:                                    ; preds = %823
  %835 = load i32, i32* %35, align 4
  %836 = load i8*, i8** %17, align 8
  %837 = sext i32 %835 to i64
  %838 = getelementptr inbounds i8, i8* %836, i64 %837
  store i8* %838, i8** %17, align 8
  %839 = load i8*, i8** %17, align 8
  %840 = getelementptr inbounds i8, i8* %839, i64 6
  %841 = getelementptr inbounds i8, i8* %840, i64 4
  %842 = load i8*, i8** %20, align 8
  %843 = icmp ugt i8* %841, %842
  br i1 %843, label %844, label %845

; <label>:844:                                    ; preds = %834
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:845:                                    ; preds = %834
  %846 = load i8*, i8** %17, align 8
  %847 = call i32 @__ns_get16(i8* %846)
  store i32 %847, i32* %25, align 4
  %848 = load i8*, i8** %17, align 8
  %849 = getelementptr inbounds i8, i8* %848, i64 2
  store i8* %849, i8** %17, align 8
  %850 = load i8*, i8** %17, align 8
  %851 = call i32 @__ns_get16(i8* %850)
  store i32 %851, i32* %26, align 4
  %852 = load i8*, i8** %17, align 8
  %853 = getelementptr inbounds i8, i8* %852, i64 2
  store i8* %853, i8** %17, align 8
  %854 = load i8*, i8** %17, align 8
  %855 = getelementptr inbounds i8, i8* %854, i64 4
  store i8* %855, i8** %17, align 8
  %856 = load i8*, i8** %17, align 8
  %857 = call i32 @__ns_get16(i8* %856)
  store i32 %857, i32* %39, align 4
  %858 = load i8*, i8** %17, align 8
  %859 = getelementptr inbounds i8, i8* %858, i64 2
  store i8* %859, i8** %17, align 8
  %860 = load i8*, i8** %17, align 8
  %861 = load i32, i32* %39, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds i8, i8* %860, i64 %862
  %864 = load i8*, i8** %20, align 8
  %865 = icmp ugt i8* %863, %864
  br i1 %865, label %866, label %867

; <label>:866:                                    ; preds = %845
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:867:                                    ; preds = %845
  %868 = load i32, i32* %25, align 4
  %869 = icmp ne i32 %868, 1
  br i1 %869, label %870, label %875

; <label>:870:                                    ; preds = %867
  %871 = load i32, i32* %39, align 4
  %872 = load i8*, i8** %17, align 8
  %873 = sext i32 %871 to i64
  %874 = getelementptr inbounds i8, i8* %872, i64 %873
  store i8* %874, i8** %17, align 8
  br label %813

; <label>:875:                                    ; preds = %867
  %876 = load i32, i32* %39, align 4
  %877 = icmp ne i32 %876, 4
  br i1 %877, label %878, label %879

; <label>:878:                                    ; preds = %875
  store i32 -3, i32* %8, align 4
  br label %1126

; <label>:879:                                    ; preds = %875
  store i32 0, i32* %37, align 4
  br label %880

; <label>:880:                                    ; preds = %939, %879
  %881 = load i32, i32* %37, align 4
  %882 = load i32, i32* %41, align 4
  %883 = icmp slt i32 %881, %882
  br i1 %883, label %884, label %942

; <label>:884:                                    ; preds = %880
  %885 = load i8*, i8** %21, align 8
  %886 = load i32, i32* %37, align 4
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %887
  %889 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %888, i32 0, i32 0
  %890 = load i8*, i8** %889, align 8
  %891 = call i32 @strcmp(i8* %885, i8* %890)
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %893, label %938

; <label>:893:                                    ; preds = %884
  %894 = load i32, i32* %37, align 4
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %895
  %897 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %896, i32 0, i32 4
  %898 = load i32, i32* %897, align 8
  %899 = add nsw i32 %898, 1
  store i32 %899, i32* %897, align 8
  %900 = load i32, i32* %37, align 4
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %901
  %903 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %902, i32 0, i32 4
  %904 = load i32, i32* %903, align 8
  %905 = icmp sle i32 %904, 35
  br i1 %905, label %906, label %937

; <label>:906:                                    ; preds = %893
  %907 = load i32, i32* %39, align 4
  %908 = call i8* (i32, i32, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i32, ...)*)(i32 1, i32 %907)
  %909 = load i32, i32* %37, align 4
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %910
  %912 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %911, i32 0, i32 3
  %913 = load i32, i32* %37, align 4
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %914
  %916 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %915, i32 0, i32 4
  %917 = load i32, i32* %916, align 8
  %918 = sub nsw i32 %917, 1
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds [35 x i8*], [35 x i8*]* %912, i64 0, i64 %919
  store i8* %908, i8** %920, align 8
  %921 = load i32, i32* %37, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %922
  %924 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %923, i32 0, i32 3
  %925 = load i32, i32* %37, align 4
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %926
  %928 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %927, i32 0, i32 4
  %929 = load i32, i32* %928, align 8
  %930 = sub nsw i32 %929, 1
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds [35 x i8*], [35 x i8*]* %924, i64 0, i64 %931
  %933 = load i8*, i8** %932, align 8
  %934 = load i8*, i8** %17, align 8
  %935 = load i32, i32* %39, align 4
  %936 = sext i32 %935 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %933, i8* align 1 %934, i64 %936, i1 false)
  br label %942

; <label>:937:                                    ; preds = %893
  br label %938

; <label>:938:                                    ; preds = %937, %884
  br label %939

; <label>:939:                                    ; preds = %938
  %940 = load i32, i32* %37, align 4
  %941 = add nsw i32 %940, 1
  store i32 %941, i32* %37, align 4
  br label %880

; <label>:942:                                    ; preds = %906, %880
  %943 = load i32, i32* %39, align 4
  %944 = load i8*, i8** %17, align 8
  %945 = sext i32 %943 to i64
  %946 = getelementptr inbounds i8, i8* %944, i64 %945
  store i8* %946, i8** %17, align 8
  br label %947

; <label>:947:                                    ; preds = %942
  br label %813

; <label>:948:                                    ; preds = %833, %821
  br label %949

; <label>:949:                                    ; preds = %948, %811
  %950 = load i32, i32* %41, align 4
  %951 = icmp sgt i32 %950, 0
  br i1 %951, label %952, label %1117

; <label>:952:                                    ; preds = %949
  %953 = load i32, i32* %41, align 4
  %954 = add nsw i32 %953, 1
  %955 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 %954, i64 8)
  %956 = bitcast i8* %955 to %struct.ServerInfo**
  %957 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %958 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %957, i32 0, i32 5
  store %struct.ServerInfo** %956, %struct.ServerInfo*** %958, align 8
  store i32 0, i32* %36, align 4
  br label %959

; <label>:959:                                    ; preds = %1107, %952
  %960 = load i32, i32* %36, align 4
  %961 = load i32, i32* %41, align 4
  %962 = icmp slt i32 %960, %961
  br i1 %962, label %963, label %1110

; <label>:963:                                    ; preds = %959
  %964 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 1, i64 24)
  %965 = bitcast i8* %964 to %struct.ServerInfo*
  %966 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %967 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %966, i32 0, i32 5
  %968 = load %struct.ServerInfo**, %struct.ServerInfo*** %967, align 8
  %969 = load i32, i32* %36, align 4
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %968, i64 %970
  store %struct.ServerInfo* %965, %struct.ServerInfo** %971, align 8
  %972 = load i32, i32* %36, align 4
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %973
  %975 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %974, i32 0, i32 0
  %976 = load i8*, i8** %975, align 8
  %977 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %978 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %977, i32 0, i32 5
  %979 = load %struct.ServerInfo**, %struct.ServerInfo*** %978, align 8
  %980 = load i32, i32* %36, align 4
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %979, i64 %981
  %983 = load %struct.ServerInfo*, %struct.ServerInfo** %982, align 8
  %984 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %983, i32 0, i32 0
  store i8* %976, i8** %984, align 8
  %985 = load i32, i32* %36, align 4
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %986
  %988 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %987, i32 0, i32 2
  %989 = load i32, i32* %988, align 8
  %990 = add nsw i32 %989, 1
  %991 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 %990, i64 8)
  %992 = bitcast i8* %991 to i8**
  %993 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %994 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %993, i32 0, i32 5
  %995 = load %struct.ServerInfo**, %struct.ServerInfo*** %994, align 8
  %996 = load i32, i32* %36, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %995, i64 %997
  %999 = load %struct.ServerInfo*, %struct.ServerInfo** %998, align 8
  %1000 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %999, i32 0, i32 1
  store i8** %992, i8*** %1000, align 8
  store i32 0, i32* %37, align 4
  br label %1001

; <label>:1001:                                   ; preds = %1030, %963
  %1002 = load i32, i32* %37, align 4
  %1003 = load i32, i32* %36, align 4
  %1004 = sext i32 %1003 to i64
  %1005 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %1004
  %1006 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %1005, i32 0, i32 2
  %1007 = load i32, i32* %1006, align 8
  %1008 = icmp slt i32 %1002, %1007
  br i1 %1008, label %1009, label %1033

; <label>:1009:                                   ; preds = %1001
  %1010 = load i32, i32* %36, align 4
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %1011
  %1013 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %1012, i32 0, i32 1
  %1014 = load i32, i32* %37, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds [35 x i8*], [35 x i8*]* %1013, i64 0, i64 %1015
  %1017 = load i8*, i8** %1016, align 8
  %1018 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %1019 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %1018, i32 0, i32 5
  %1020 = load %struct.ServerInfo**, %struct.ServerInfo*** %1019, align 8
  %1021 = load i32, i32* %36, align 4
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %1020, i64 %1022
  %1024 = load %struct.ServerInfo*, %struct.ServerInfo** %1023, align 8
  %1025 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %1024, i32 0, i32 1
  %1026 = load i8**, i8*** %1025, align 8
  %1027 = load i32, i32* %37, align 4
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds i8*, i8** %1026, i64 %1028
  store i8* %1017, i8** %1029, align 8
  br label %1030

; <label>:1030:                                   ; preds = %1009
  %1031 = load i32, i32* %37, align 4
  %1032 = add nsw i32 %1031, 1
  store i32 %1032, i32* %37, align 4
  br label %1001

; <label>:1033:                                   ; preds = %1001
  %1034 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %1035 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %1034, i32 0, i32 5
  %1036 = load %struct.ServerInfo**, %struct.ServerInfo*** %1035, align 8
  %1037 = load i32, i32* %36, align 4
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %1036, i64 %1038
  %1040 = load %struct.ServerInfo*, %struct.ServerInfo** %1039, align 8
  %1041 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %1040, i32 0, i32 1
  %1042 = load i8**, i8*** %1041, align 8
  %1043 = load i32, i32* %37, align 4
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds i8*, i8** %1042, i64 %1044
  store i8* null, i8** %1045, align 8
  %1046 = load i32, i32* %36, align 4
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %1047
  %1049 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %1048, i32 0, i32 4
  %1050 = load i32, i32* %1049, align 8
  %1051 = add nsw i32 %1050, 1
  %1052 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 %1051, i64 8)
  %1053 = bitcast i8* %1052 to i8**
  %1054 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %1055 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %1054, i32 0, i32 5
  %1056 = load %struct.ServerInfo**, %struct.ServerInfo*** %1055, align 8
  %1057 = load i32, i32* %36, align 4
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %1056, i64 %1058
  %1060 = load %struct.ServerInfo*, %struct.ServerInfo** %1059, align 8
  %1061 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %1060, i32 0, i32 2
  store i8** %1053, i8*** %1061, align 8
  store i32 0, i32* %37, align 4
  br label %1062

; <label>:1062:                                   ; preds = %1091, %1033
  %1063 = load i32, i32* %37, align 4
  %1064 = load i32, i32* %36, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %1065
  %1067 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %1066, i32 0, i32 4
  %1068 = load i32, i32* %1067, align 8
  %1069 = icmp slt i32 %1063, %1068
  br i1 %1069, label %1070, label %1094

; <label>:1070:                                   ; preds = %1062
  %1071 = load i32, i32* %36, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds [10 x %struct.ServerTable], [10 x %struct.ServerTable]* @server, i64 0, i64 %1072
  %1074 = getelementptr inbounds %struct.ServerTable, %struct.ServerTable* %1073, i32 0, i32 3
  %1075 = load i32, i32* %37, align 4
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds [35 x i8*], [35 x i8*]* %1074, i64 0, i64 %1076
  %1078 = load i8*, i8** %1077, align 8
  %1079 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %1080 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %1079, i32 0, i32 5
  %1081 = load %struct.ServerInfo**, %struct.ServerInfo*** %1080, align 8
  %1082 = load i32, i32* %36, align 4
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %1081, i64 %1083
  %1085 = load %struct.ServerInfo*, %struct.ServerInfo** %1084, align 8
  %1086 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %1085, i32 0, i32 2
  %1087 = load i8**, i8*** %1086, align 8
  %1088 = load i32, i32* %37, align 4
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8*, i8** %1087, i64 %1089
  store i8* %1078, i8** %1090, align 8
  br label %1091

; <label>:1091:                                   ; preds = %1070
  %1092 = load i32, i32* %37, align 4
  %1093 = add nsw i32 %1092, 1
  store i32 %1093, i32* %37, align 4
  br label %1062

; <label>:1094:                                   ; preds = %1062
  %1095 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %1096 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %1095, i32 0, i32 5
  %1097 = load %struct.ServerInfo**, %struct.ServerInfo*** %1096, align 8
  %1098 = load i32, i32* %36, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %1097, i64 %1099
  %1101 = load %struct.ServerInfo*, %struct.ServerInfo** %1100, align 8
  %1102 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %1101, i32 0, i32 2
  %1103 = load i8**, i8*** %1102, align 8
  %1104 = load i32, i32* %37, align 4
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds i8*, i8** %1103, i64 %1105
  store i8* null, i8** %1106, align 8
  br label %1107

; <label>:1107:                                   ; preds = %1094
  %1108 = load i32, i32* %36, align 4
  %1109 = add nsw i32 %1108, 1
  store i32 %1109, i32* %36, align 4
  br label %959

; <label>:1110:                                   ; preds = %959
  %1111 = load %struct.HostInfo*, %struct.HostInfo** %14, align 8
  %1112 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %1111, i32 0, i32 5
  %1113 = load %struct.ServerInfo**, %struct.ServerInfo*** %1112, align 8
  %1114 = load i32, i32* %36, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %1113, i64 %1115
  store %struct.ServerInfo* null, %struct.ServerInfo** %1116, align 8
  br label %1117

; <label>:1117:                                   ; preds = %1110, %949
  %1118 = load i32, i32* %10, align 4
  switch i32 %1118, label %1125 [
    i32 1, label %1119
    i32 12, label %1120
  ]

; <label>:1119:                                   ; preds = %1117
  store i32 -4, i32* %8, align 4
  br label %1126

; <label>:1120:                                   ; preds = %1117
  %1121 = load i32, i32* %13, align 4
  %1122 = icmp ne i32 %1121, 0
  br i1 %1122, label %1123, label %1124

; <label>:1123:                                   ; preds = %1120
  store i32 -2, i32* %8, align 4
  br label %1126

; <label>:1124:                                   ; preds = %1120
  br label %1125

; <label>:1125:                                   ; preds = %1124, %1117
  store i32 0, i32* %8, align 4
  br label %1126

; <label>:1126:                                   ; preds = %1125, %1123, %1119, %878, %866, %844, %809, %690, %671, %649, %628, %604, %553, %344, %261, %239, %228, %204, %149, %139, %125, %74, %59
  %1127 = load i32, i32* %8, align 4
  ret i32 %1127
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @FreeHostInfoPtr(%struct.HostInfo*) #0 {
  %2 = alloca %struct.HostInfo*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.HostInfo* %0, %struct.HostInfo** %2, align 8
  %5 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %6 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %5, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %1
  %10 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %11 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #9
  %13 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %14 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %13, i32 0, i32 0
  store i8* null, i8** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %9, %1
  %16 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %17 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %16, i32 0, i32 1
  %18 = load i8**, i8*** %17, align 8
  %19 = icmp ne i8** %18, null
  br i1 %19, label %20, label %47

; <label>:20:                                     ; preds = %15
  store i32 0, i32* %3, align 4
  br label %21

; <label>:21:                                     ; preds = %30, %20
  %22 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %23 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %22, i32 0, i32 1
  %24 = load i8**, i8*** %23, align 8
  %25 = load i32, i32* %3, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %24, i64 %26
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %40

; <label>:30:                                     ; preds = %21
  %31 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %32 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %31, i32 0, i32 1
  %33 = load i8**, i8*** %32, align 8
  %34 = load i32, i32* %3, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8*, i8** %33, i64 %35
  %37 = load i8*, i8** %36, align 8
  call void @free(i8* %37) #9
  %38 = load i32, i32* %3, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %3, align 4
  br label %21

; <label>:40:                                     ; preds = %21
  %41 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %42 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %41, i32 0, i32 1
  %43 = load i8**, i8*** %42, align 8
  %44 = bitcast i8** %43 to i8*
  call void @free(i8* %44) #9
  %45 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %46 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %45, i32 0, i32 1
  store i8** null, i8*** %46, align 8
  br label %47

; <label>:47:                                     ; preds = %40, %15
  %48 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %49 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %48, i32 0, i32 2
  %50 = load i8**, i8*** %49, align 8
  %51 = icmp ne i8** %50, null
  br i1 %51, label %52, label %79

; <label>:52:                                     ; preds = %47
  store i32 0, i32* %3, align 4
  br label %53

; <label>:53:                                     ; preds = %62, %52
  %54 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %55 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %54, i32 0, i32 2
  %56 = load i8**, i8*** %55, align 8
  %57 = load i32, i32* %3, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %72

; <label>:62:                                     ; preds = %53
  %63 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %64 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %63, i32 0, i32 2
  %65 = load i8**, i8*** %64, align 8
  %66 = load i32, i32* %3, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8*, i8** %65, i64 %67
  %69 = load i8*, i8** %68, align 8
  call void @free(i8* %69) #9
  %70 = load i32, i32* %3, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %3, align 4
  br label %53

; <label>:72:                                     ; preds = %53
  %73 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %74 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %73, i32 0, i32 2
  %75 = load i8**, i8*** %74, align 8
  %76 = bitcast i8** %75 to i8*
  call void @free(i8* %76) #9
  %77 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %78 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %77, i32 0, i32 2
  store i8** null, i8*** %78, align 8
  br label %79

; <label>:79:                                     ; preds = %72, %47
  %80 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %81 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %80, i32 0, i32 5
  %82 = load %struct.ServerInfo**, %struct.ServerInfo*** %81, align 8
  %83 = icmp ne %struct.ServerInfo** %82, null
  br i1 %83, label %84, label %241

; <label>:84:                                     ; preds = %79
  store i32 0, i32* %3, align 4
  br label %85

; <label>:85:                                     ; preds = %223, %84
  %86 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %87 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %86, i32 0, i32 5
  %88 = load %struct.ServerInfo**, %struct.ServerInfo*** %87, align 8
  %89 = load i32, i32* %3, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %88, i64 %90
  %92 = load %struct.ServerInfo*, %struct.ServerInfo** %91, align 8
  %93 = icmp ne %struct.ServerInfo* %92, null
  br i1 %93, label %94, label %234

; <label>:94:                                     ; preds = %85
  %95 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %96 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %95, i32 0, i32 5
  %97 = load %struct.ServerInfo**, %struct.ServerInfo*** %96, align 8
  %98 = load i32, i32* %3, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %97, i64 %99
  %101 = load %struct.ServerInfo*, %struct.ServerInfo** %100, align 8
  %102 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %101, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = icmp ne i8* %103, null
  br i1 %104, label %105, label %115

; <label>:105:                                    ; preds = %94
  %106 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %107 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %106, i32 0, i32 5
  %108 = load %struct.ServerInfo**, %struct.ServerInfo*** %107, align 8
  %109 = load i32, i32* %3, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %108, i64 %110
  %112 = load %struct.ServerInfo*, %struct.ServerInfo** %111, align 8
  %113 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %112, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @free(i8* %114) #9
  br label %115

; <label>:115:                                    ; preds = %105, %94
  %116 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %117 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %116, i32 0, i32 5
  %118 = load %struct.ServerInfo**, %struct.ServerInfo*** %117, align 8
  %119 = load i32, i32* %3, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %118, i64 %120
  %122 = load %struct.ServerInfo*, %struct.ServerInfo** %121, align 8
  %123 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %122, i32 0, i32 1
  %124 = load i8**, i8*** %123, align 8
  %125 = icmp ne i8** %124, null
  br i1 %125, label %126, label %169

; <label>:126:                                    ; preds = %115
  store i32 0, i32* %4, align 4
  br label %127

; <label>:127:                                    ; preds = %142, %126
  %128 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %129 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %128, i32 0, i32 5
  %130 = load %struct.ServerInfo**, %struct.ServerInfo*** %129, align 8
  %131 = load i32, i32* %3, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %130, i64 %132
  %134 = load %struct.ServerInfo*, %struct.ServerInfo** %133, align 8
  %135 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %134, i32 0, i32 1
  %136 = load i8**, i8*** %135, align 8
  %137 = load i32, i32* %4, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8*, i8** %136, i64 %138
  %140 = load i8*, i8** %139, align 8
  %141 = icmp ne i8* %140, null
  br i1 %141, label %142, label %158

; <label>:142:                                    ; preds = %127
  %143 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %144 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %143, i32 0, i32 5
  %145 = load %struct.ServerInfo**, %struct.ServerInfo*** %144, align 8
  %146 = load i32, i32* %3, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %145, i64 %147
  %149 = load %struct.ServerInfo*, %struct.ServerInfo** %148, align 8
  %150 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %149, i32 0, i32 1
  %151 = load i8**, i8*** %150, align 8
  %152 = load i32, i32* %4, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8*, i8** %151, i64 %153
  %155 = load i8*, i8** %154, align 8
  call void @free(i8* %155) #9
  %156 = load i32, i32* %4, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %4, align 4
  br label %127

; <label>:158:                                    ; preds = %127
  %159 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %160 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %159, i32 0, i32 5
  %161 = load %struct.ServerInfo**, %struct.ServerInfo*** %160, align 8
  %162 = load i32, i32* %3, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %161, i64 %163
  %165 = load %struct.ServerInfo*, %struct.ServerInfo** %164, align 8
  %166 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %165, i32 0, i32 1
  %167 = load i8**, i8*** %166, align 8
  %168 = bitcast i8** %167 to i8*
  call void @free(i8* %168) #9
  br label %169

; <label>:169:                                    ; preds = %158, %115
  %170 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %171 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %170, i32 0, i32 5
  %172 = load %struct.ServerInfo**, %struct.ServerInfo*** %171, align 8
  %173 = load i32, i32* %3, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %172, i64 %174
  %176 = load %struct.ServerInfo*, %struct.ServerInfo** %175, align 8
  %177 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %176, i32 0, i32 2
  %178 = load i8**, i8*** %177, align 8
  %179 = icmp ne i8** %178, null
  br i1 %179, label %180, label %223

; <label>:180:                                    ; preds = %169
  store i32 0, i32* %4, align 4
  br label %181

; <label>:181:                                    ; preds = %196, %180
  %182 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %183 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %182, i32 0, i32 5
  %184 = load %struct.ServerInfo**, %struct.ServerInfo*** %183, align 8
  %185 = load i32, i32* %3, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %184, i64 %186
  %188 = load %struct.ServerInfo*, %struct.ServerInfo** %187, align 8
  %189 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %188, i32 0, i32 2
  %190 = load i8**, i8*** %189, align 8
  %191 = load i32, i32* %4, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8*, i8** %190, i64 %192
  %194 = load i8*, i8** %193, align 8
  %195 = icmp ne i8* %194, null
  br i1 %195, label %196, label %212

; <label>:196:                                    ; preds = %181
  %197 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %198 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %197, i32 0, i32 5
  %199 = load %struct.ServerInfo**, %struct.ServerInfo*** %198, align 8
  %200 = load i32, i32* %3, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %199, i64 %201
  %203 = load %struct.ServerInfo*, %struct.ServerInfo** %202, align 8
  %204 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %203, i32 0, i32 2
  %205 = load i8**, i8*** %204, align 8
  %206 = load i32, i32* %4, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8*, i8** %205, i64 %207
  %209 = load i8*, i8** %208, align 8
  call void @free(i8* %209) #9
  %210 = load i32, i32* %4, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %4, align 4
  br label %181

; <label>:212:                                    ; preds = %181
  %213 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %214 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %213, i32 0, i32 5
  %215 = load %struct.ServerInfo**, %struct.ServerInfo*** %214, align 8
  %216 = load i32, i32* %3, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %215, i64 %217
  %219 = load %struct.ServerInfo*, %struct.ServerInfo** %218, align 8
  %220 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %219, i32 0, i32 2
  %221 = load i8**, i8*** %220, align 8
  %222 = bitcast i8** %221 to i8*
  call void @free(i8* %222) #9
  br label %223

; <label>:223:                                    ; preds = %212, %169
  %224 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %225 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %224, i32 0, i32 5
  %226 = load %struct.ServerInfo**, %struct.ServerInfo*** %225, align 8
  %227 = load i32, i32* %3, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %226, i64 %228
  %230 = load %struct.ServerInfo*, %struct.ServerInfo** %229, align 8
  %231 = bitcast %struct.ServerInfo* %230 to i8*
  call void @free(i8* %231) #9
  %232 = load i32, i32* %3, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %3, align 4
  br label %85

; <label>:234:                                    ; preds = %85
  %235 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %236 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %235, i32 0, i32 5
  %237 = load %struct.ServerInfo**, %struct.ServerInfo*** %236, align 8
  %238 = bitcast %struct.ServerInfo** %237 to i8*
  call void @free(i8* %238) #9
  %239 = load %struct.HostInfo*, %struct.HostInfo** %2, align 8
  %240 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %239, i32 0, i32 5
  store %struct.ServerInfo** null, %struct.ServerInfo*** %240, align 8
  br label %241

; <label>:241:                                    ; preds = %234, %79
  ret void
}

; Function Attrs: nounwind readnone
declare dso_local zeroext i16 @ntohs(i16 zeroext) #6

declare dso_local i32 @strcmp(i8*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @GetHostInfoByAddr(%struct.in_addr*, %struct.in_addr*, %struct.HostInfo*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.in_addr*, align 8
  %6 = alloca %struct.in_addr*, align 8
  %7 = alloca %struct.HostInfo*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %union.querybuf, align 4
  %10 = alloca [1025 x i8], align 16
  %11 = alloca i8*, align 8
  store %struct.in_addr* %0, %struct.in_addr** %5, align 8
  store %struct.in_addr* %1, %struct.in_addr** %6, align 8
  store %struct.HostInfo* %2, %struct.HostInfo** %7, align 8
  %12 = load %struct.in_addr*, %struct.in_addr** %6, align 8
  %13 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %12, i32 0, i32 0
  %14 = bitcast i32* %13 to i8*
  store i8* %14, i8** %11, align 8
  %15 = getelementptr inbounds [1025 x i8], [1025 x i8]* %10, i32 0, i32 0
  %16 = load i8*, i8** %11, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = and i32 %19, 255
  %21 = load i8*, i8** %11, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = and i32 %24, 255
  %26 = load i8*, i8** %11, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = and i32 %29, 255
  %31 = load i8*, i8** %11, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = and i32 %34, 255
  %36 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4.103, i32 0, i32 0), i32 %20, i32 %25, i32 %30, i32 %35) #9
  %37 = getelementptr inbounds [1025 x i8], [1025 x i8]* %10, i32 0, i32 0
  %38 = bitcast %union.querybuf* %9 to [65536 x i8]*
  %39 = getelementptr inbounds [65536 x i8], [65536 x i8]* %38, i32 0, i32 0
  %40 = call i32 @__res_nmkquery(%struct.__res_state* @res, i32 0, i8* %37, i32 1, i32 12, i8* null, i32 0, i8* null, i8* %39, i32 65536)
  store i32 %40, i32* %8, align 4
  %41 = load i32, i32* %8, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %50

; <label>:43:                                     ; preds = %3
  %44 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %45 = and i64 %44, 2
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %49

; <label>:47:                                     ; preds = %43
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.104, i32 0, i32 0))
  br label %49

; <label>:49:                                     ; preds = %47, %43
  store i32 -3, i32* %4, align 4
  br label %84

; <label>:50:                                     ; preds = %3
  %51 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %52 = bitcast %union.querybuf* %9 to i8*
  %53 = load i32, i32* %8, align 4
  %54 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %55 = call i32 @GetAnswer(%struct.in_addr* %51, i32 12, i8* %52, i32 %53, i32 1, %struct.HostInfo* %54, i32 1)
  store i32 %55, i32* %8, align 4
  %56 = load i32, i32* %8, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %82

; <label>:58:                                     ; preds = %50
  %59 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %60 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %59, i32 0, i32 3
  store i32 2, i32* %60, align 8
  %61 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %62 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %61, i32 0, i32 4
  store i32 4, i32* %62, align 4
  %63 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 2, i64 8)
  %64 = bitcast i8* %63 to i8**
  %65 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %66 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %65, i32 0, i32 2
  store i8** %64, i8*** %66, align 8
  %67 = call i8* (i32, i64, ...) bitcast (i8* (i32, i32)* @Calloc to i8* (i32, i64, ...)*)(i32 4, i64 1)
  %68 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %69 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %68, i32 0, i32 2
  %70 = load i8**, i8*** %69, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 0
  store i8* %67, i8** %71, align 8
  %72 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %73 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %72, i32 0, i32 2
  %74 = load i8**, i8*** %73, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 0
  %76 = load i8*, i8** %75, align 8
  %77 = load i8*, i8** %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %77, i64 4, i1 false)
  %78 = load %struct.HostInfo*, %struct.HostInfo** %7, align 8
  %79 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %78, i32 0, i32 2
  %80 = load i8**, i8*** %79, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 1
  store i8* null, i8** %81, align 8
  br label %82

; <label>:82:                                     ; preds = %58, %50
  %83 = load i32, i32* %8, align 4
  store i32 %83, i32* %4, align 4
  br label %84

; <label>:84:                                     ; preds = %82, %49
  %85 = load i32, i32* %4, align 4
  ret i32 %85
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @Print_query(i8*, i8*, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @Fprint_query(i8* %7, i8* %8, i32 %9, %struct._IO_FILE* %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @Fprint_query(i8*, i8*, i32, %struct._IO_FILE*) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.HEADER*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store %struct._IO_FILE* %3, %struct._IO_FILE** %8, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = bitcast i8* %14 to %struct.HEADER*
  store %struct.HEADER* %15, %struct.HEADER** %10, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 12
  store i8* %17, i8** %9, align 8
  %18 = load i32, i32* %7, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %4
  %21 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %22 = and i64 %21, 2147483648
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %193

; <label>:24:                                     ; preds = %20, %4
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0))
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %28 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %29 = bitcast %struct.HEADER* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = lshr i96 %30, 19
  %32 = and i96 %31, 15
  %33 = trunc i96 %32 to i32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([16 x i8*]* @_res_opcodes to [0 x i8*]*), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.106, i32 0, i32 0), i8* %36)
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %39 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %40 = bitcast %struct.HEADER* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 65535
  %43 = trunc i96 %42 to i32
  %44 = trunc i32 %43 to i16
  %45 = call zeroext i16 @ntohs(i16 zeroext %44) #12
  %46 = zext i16 %45 to i32
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.107, i32 0, i32 0), i32 %46)
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %49 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %50 = bitcast %struct.HEADER* %49 to i96*
  %51 = load i96, i96* %50, align 4
  %52 = lshr i96 %51, 24
  %53 = and i96 %52, 15
  %54 = trunc i96 %53 to i32
  %55 = call i8* @__p_rcode(i32 %54)
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.108, i32 0, i32 0), i8* %55)
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.109, i32 0, i32 0))
  %59 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %60 = bitcast %struct.HEADER* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = lshr i96 %61, 23
  %63 = and i96 %62, 1
  %64 = trunc i96 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %69

; <label>:66:                                     ; preds = %24
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.110, i32 0, i32 0))
  br label %72

; <label>:69:                                     ; preds = %24
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.111, i32 0, i32 0))
  br label %72

; <label>:72:                                     ; preds = %69, %66
  %73 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %74 = bitcast %struct.HEADER* %73 to i96*
  %75 = load i96, i96* %74, align 4
  %76 = lshr i96 %75, 18
  %77 = and i96 %76, 1
  %78 = trunc i96 %77 to i32
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %83

; <label>:80:                                     ; preds = %72
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.112, i32 0, i32 0))
  br label %83

; <label>:83:                                     ; preds = %80, %72
  %84 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %85 = bitcast %struct.HEADER* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = lshr i96 %86, 17
  %88 = and i96 %87, 1
  %89 = trunc i96 %88 to i32
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %94

; <label>:91:                                     ; preds = %83
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.113, i32 0, i32 0))
  br label %94

; <label>:94:                                     ; preds = %91, %83
  %95 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %96 = bitcast %struct.HEADER* %95 to i96*
  %97 = load i96, i96* %96, align 4
  %98 = lshr i96 %97, 16
  %99 = and i96 %98, 1
  %100 = trunc i96 %99 to i32
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %105

; <label>:102:                                    ; preds = %94
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %103, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9.114, i32 0, i32 0))
  br label %105

; <label>:105:                                    ; preds = %102, %94
  %106 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %107 = bitcast %struct.HEADER* %106 to i96*
  %108 = load i96, i96* %107, align 4
  %109 = lshr i96 %108, 31
  %110 = and i96 %109, 1
  %111 = trunc i96 %110 to i32
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %116

; <label>:113:                                    ; preds = %105
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %114, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10.115, i32 0, i32 0))
  br label %116

; <label>:116:                                    ; preds = %113, %105
  %117 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %118 = bitcast %struct.HEADER* %117 to i96*
  %119 = load i96, i96* %118, align 4
  %120 = lshr i96 %119, 30
  %121 = and i96 %120, 1
  %122 = trunc i96 %121 to i32
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %127

; <label>:124:                                    ; preds = %116
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11.116, i32 0, i32 0))
  br label %127

; <label>:127:                                    ; preds = %124, %116
  %128 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %129 = bitcast %struct.HEADER* %128 to i96*
  %130 = load i96, i96* %129, align 4
  %131 = lshr i96 %130, 29
  %132 = and i96 %131, 1
  %133 = trunc i96 %132 to i32
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %138

; <label>:135:                                    ; preds = %127
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.117, i32 0, i32 0))
  br label %138

; <label>:138:                                    ; preds = %135, %127
  %139 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %140 = bitcast %struct.HEADER* %139 to i96*
  %141 = load i96, i96* %140, align 4
  %142 = lshr i96 %141, 28
  %143 = and i96 %142, 1
  %144 = trunc i96 %143 to i32
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %149

; <label>:146:                                    ; preds = %138
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13.118, i32 0, i32 0))
  br label %149

; <label>:149:                                    ; preds = %146, %138
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %151 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %152 = bitcast %struct.HEADER* %151 to i96*
  %153 = load i96, i96* %152, align 4
  %154 = lshr i96 %153, 32
  %155 = and i96 %154, 65535
  %156 = trunc i96 %155 to i32
  %157 = trunc i32 %156 to i16
  %158 = call zeroext i16 @ntohs(i16 zeroext %157) #12
  %159 = zext i16 %158 to i32
  %160 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.119, i32 0, i32 0), i32 %159)
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %162 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %163 = bitcast %struct.HEADER* %162 to i96*
  %164 = load i96, i96* %163, align 4
  %165 = lshr i96 %164, 48
  %166 = and i96 %165, 65535
  %167 = trunc i96 %166 to i32
  %168 = trunc i32 %167 to i16
  %169 = call zeroext i16 @ntohs(i16 zeroext %168) #12
  %170 = zext i16 %169 to i32
  %171 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.120, i32 0, i32 0), i32 %170)
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %173 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %174 = bitcast %struct.HEADER* %173 to i96*
  %175 = load i96, i96* %174, align 4
  %176 = lshr i96 %175, 64
  %177 = and i96 %176, 65535
  %178 = trunc i96 %177 to i32
  %179 = trunc i32 %178 to i16
  %180 = call zeroext i16 @ntohs(i16 zeroext %179) #12
  %181 = zext i16 %180 to i32
  %182 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %172, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.121, i32 0, i32 0), i32 %181)
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %184 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %185 = bitcast %struct.HEADER* %184 to i96*
  %186 = load i96, i96* %185, align 4
  %187 = lshr i96 %186, 80
  %188 = trunc i96 %187 to i32
  %189 = trunc i32 %188 to i16
  %190 = call zeroext i16 @ntohs(i16 zeroext %189) #12
  %191 = zext i16 %190 to i32
  %192 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.122, i32 0, i32 0), i32 %191)
  br label %193

; <label>:193:                                    ; preds = %149, %20
  %194 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %195 = bitcast %struct.HEADER* %194 to i96*
  %196 = load i96, i96* %195, align 4
  %197 = lshr i96 %196, 32
  %198 = and i96 %197, 65535
  %199 = trunc i96 %198 to i32
  %200 = trunc i32 %199 to i16
  %201 = call zeroext i16 @ntohs(i16 zeroext %200) #12
  %202 = zext i16 %201 to i32
  store i32 %202, i32* %11, align 4
  %203 = load i32, i32* %11, align 4
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %205, label %241

; <label>:205:                                    ; preds = %193
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %207 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18.123, i32 0, i32 0))
  br label %208

; <label>:208:                                    ; preds = %223, %205
  %209 = load i32, i32* %11, align 4
  %210 = add nsw i32 %209, -1
  store i32 %210, i32* %11, align 4
  %211 = icmp sge i32 %210, 0
  br i1 %211, label %212, label %240

; <label>:212:                                    ; preds = %208
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %214 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.124, i32 0, i32 0))
  %215 = load i8*, i8** %9, align 8
  %216 = load i8*, i8** %5, align 8
  %217 = load i8*, i8** %6, align 8
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %219 = call i8* @Print_cdname(i8* %215, i8* %216, i8* %217, %struct._IO_FILE* %218)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %219, i8** %9, align 8
  %220 = load i8*, i8** %9, align 8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %222, label %223

; <label>:222:                                    ; preds = %212
  br label %347

; <label>:223:                                    ; preds = %212
  %224 = load i8*, i8** %9, align 8
  %225 = call i32 @__ns_get16(i8* %224)
  store i32 %225, i32* %13, align 4
  %226 = load i8*, i8** %9, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 2
  store i8* %227, i8** %9, align 8
  %228 = load i8*, i8** %9, align 8
  %229 = call i32 @__ns_get16(i8* %228)
  store i32 %229, i32* %12, align 4
  %230 = load i8*, i8** %9, align 8
  %231 = getelementptr inbounds i8, i8* %230, i64 2
  store i8* %231, i8** %9, align 8
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %233 = load i32, i32* %13, align 4
  %234 = call i8* @__p_type(i32 %233)
  %235 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %232, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.125, i32 0, i32 0), i8* %234)
  %236 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %237 = load i32, i32* %12, align 4
  %238 = call i8* @__p_class(i32 %237)
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %236, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21.126, i32 0, i32 0), i8* %238)
  br label %208

; <label>:240:                                    ; preds = %208
  br label %241

; <label>:241:                                    ; preds = %240, %193
  %242 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %243 = bitcast %struct.HEADER* %242 to i96*
  %244 = load i96, i96* %243, align 4
  %245 = lshr i96 %244, 48
  %246 = and i96 %245, 65535
  %247 = trunc i96 %246 to i32
  %248 = trunc i32 %247 to i16
  %249 = call zeroext i16 @ntohs(i16 zeroext %248) #12
  %250 = zext i16 %249 to i32
  store i32 %250, i32* %11, align 4
  %251 = load i32, i32* %11, align 4
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %281

; <label>:253:                                    ; preds = %241
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %254, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22.127, i32 0, i32 0))
  %256 = load i32, i32* %13, align 4
  %257 = icmp eq i32 %256, 1
  br i1 %257, label %258, label %263

; <label>:258:                                    ; preds = %253
  %259 = load i32, i32* %11, align 4
  %260 = icmp sgt i32 %259, 35
  br i1 %260, label %261, label %263

; <label>:261:                                    ; preds = %258
  %262 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23.128, i32 0, i32 0), i32 35)
  store i32 35, i32* %11, align 4
  br label %263

; <label>:263:                                    ; preds = %261, %258, %253
  br label %264

; <label>:264:                                    ; preds = %279, %263
  %265 = load i32, i32* %11, align 4
  %266 = add nsw i32 %265, -1
  store i32 %266, i32* %11, align 4
  %267 = icmp sge i32 %266, 0
  br i1 %267, label %268, label %280

; <label>:268:                                    ; preds = %264
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %270 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %269, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.129, i32 0, i32 0))
  %271 = load i8*, i8** %9, align 8
  %272 = load i8*, i8** %5, align 8
  %273 = load i8*, i8** %6, align 8
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %275 = call i8* @Print_rr(i8* %271, i8* %272, i8* %273, %struct._IO_FILE* %274)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %275, i8** %9, align 8
  %276 = load i8*, i8** %9, align 8
  %277 = icmp eq i8* %276, null
  br i1 %277, label %278, label %279

; <label>:278:                                    ; preds = %268
  br label %347

; <label>:279:                                    ; preds = %268
  br label %264

; <label>:280:                                    ; preds = %264
  br label %281

; <label>:281:                                    ; preds = %280, %241
  %282 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %283 = bitcast %struct.HEADER* %282 to i96*
  %284 = load i96, i96* %283, align 4
  %285 = lshr i96 %284, 64
  %286 = and i96 %285, 65535
  %287 = trunc i96 %286 to i32
  %288 = trunc i32 %287 to i16
  %289 = call zeroext i16 @ntohs(i16 zeroext %288) #12
  %290 = zext i16 %289 to i32
  store i32 %290, i32* %11, align 4
  %291 = load i32, i32* %11, align 4
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %293, label %313

; <label>:293:                                    ; preds = %281
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %295 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %294, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25.132, i32 0, i32 0))
  br label %296

; <label>:296:                                    ; preds = %311, %293
  %297 = load i32, i32* %11, align 4
  %298 = add nsw i32 %297, -1
  store i32 %298, i32* %11, align 4
  %299 = icmp sge i32 %298, 0
  br i1 %299, label %300, label %312

; <label>:300:                                    ; preds = %296
  %301 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %302 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %301, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.129, i32 0, i32 0))
  %303 = load i8*, i8** %9, align 8
  %304 = load i8*, i8** %5, align 8
  %305 = load i8*, i8** %6, align 8
  %306 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %307 = call i8* @Print_rr(i8* %303, i8* %304, i8* %305, %struct._IO_FILE* %306)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %307, i8** %9, align 8
  %308 = load i8*, i8** %9, align 8
  %309 = icmp eq i8* %308, null
  br i1 %309, label %310, label %311

; <label>:310:                                    ; preds = %300
  br label %347

; <label>:311:                                    ; preds = %300
  br label %296

; <label>:312:                                    ; preds = %296
  br label %313

; <label>:313:                                    ; preds = %312, %281
  %314 = load %struct.HEADER*, %struct.HEADER** %10, align 8
  %315 = bitcast %struct.HEADER* %314 to i96*
  %316 = load i96, i96* %315, align 4
  %317 = lshr i96 %316, 80
  %318 = trunc i96 %317 to i32
  %319 = trunc i32 %318 to i16
  %320 = call zeroext i16 @ntohs(i16 zeroext %319) #12
  %321 = zext i16 %320 to i32
  store i32 %321, i32* %11, align 4
  %322 = load i32, i32* %11, align 4
  %323 = icmp sgt i32 %322, 0
  br i1 %323, label %324, label %344

; <label>:324:                                    ; preds = %313
  %325 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %326 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %325, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26.133, i32 0, i32 0))
  br label %327

; <label>:327:                                    ; preds = %342, %324
  %328 = load i32, i32* %11, align 4
  %329 = add nsw i32 %328, -1
  store i32 %329, i32* %11, align 4
  %330 = icmp sge i32 %329, 0
  br i1 %330, label %331, label %343

; <label>:331:                                    ; preds = %327
  %332 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %333 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %332, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.129, i32 0, i32 0))
  %334 = load i8*, i8** %9, align 8
  %335 = load i8*, i8** %5, align 8
  %336 = load i8*, i8** %6, align 8
  %337 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %338 = call i8* @Print_rr(i8* %334, i8* %335, i8* %336, %struct._IO_FILE* %337)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %338, i8** %9, align 8
  %339 = load i8*, i8** %9, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %341, label %342

; <label>:341:                                    ; preds = %331
  br label %347

; <label>:342:                                    ; preds = %331
  br label %327

; <label>:343:                                    ; preds = %327
  br label %344

; <label>:344:                                    ; preds = %343, %313
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %346 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %345, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27.134, i32 0, i32 0))
  br label %347

; <label>:347:                                    ; preds = %344, %341, %310, %278, %222
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @Print_cdname(i8*, i8*, i8*, %struct._IO_FILE*) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct._IO_FILE* %3, %struct._IO_FILE** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %13 = call i8* @Print_cdname_sub(i8* %9, i8* %10, i8* %11, %struct._IO_FILE* %12, i32 0)
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @Print_rr(i8*, i8*, i8*, %struct._IO_FILE*) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.in_addr, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca [46 x i8], align 16
  %27 = alloca %struct.protoent*, align 8
  %28 = alloca %struct.servent*, align 8
  %29 = alloca [2048 x i8], align 16
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store %struct._IO_FILE* %3, %struct._IO_FILE** %9, align 8
  %30 = load i8*, i8** %6, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = load i8*, i8** %8, align 8
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %34 = call i8* @Print_cdname(i8* %30, i8* %31, i8* %32, %struct._IO_FILE* %33)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %34, i8** %19, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %39

; <label>:36:                                     ; preds = %4
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:39:                                     ; preds = %4
  br label %40

; <label>:40:                                     ; preds = %39
  %41 = load i8*, i8** %19, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 10
  %43 = load i8*, i8** %8, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %45, label %48

; <label>:45:                                     ; preds = %40
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:48:                                     ; preds = %40
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i8*, i8** %19, align 8
  store i8* %50, i8** %22, align 8
  %51 = load i8*, i8** %22, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = zext i16 %54 to i32
  %56 = shl i32 %55, 8
  %57 = load i8*, i8** %22, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = zext i16 %60 to i32
  %62 = or i32 %56, %61
  store i32 %62, i32* %10, align 4
  %63 = load i8*, i8** %19, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 2
  store i8* %64, i8** %19, align 8
  %65 = load i8*, i8** %19, align 8
  store i8* %65, i8** %23, align 8
  %66 = load i8*, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = zext i16 %69 to i32
  %71 = shl i32 %70, 8
  %72 = load i8*, i8** %23, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = zext i16 %75 to i32
  %77 = or i32 %71, %76
  store i32 %77, i32* %11, align 4
  %78 = load i8*, i8** %19, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 2
  store i8* %79, i8** %19, align 8
  %80 = load i8*, i8** %19, align 8
  store i8* %80, i8** %24, align 8
  %81 = load i8*, i8** %24, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl i32 %84, 24
  %86 = load i8*, i8** %24, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = shl i32 %89, 16
  %91 = or i32 %85, %90
  %92 = load i8*, i8** %24, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, 8
  %97 = or i32 %91, %96
  %98 = load i8*, i8** %24, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 3
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %97, %101
  %103 = zext i32 %102 to i64
  store i64 %103, i64* %16, align 8
  %104 = load i8*, i8** %19, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 4
  store i8* %105, i8** %19, align 8
  %106 = load i8*, i8** %19, align 8
  store i8* %106, i8** %25, align 8
  %107 = load i8*, i8** %25, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 0
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = zext i16 %110 to i32
  %112 = shl i32 %111, 8
  %113 = load i8*, i8** %25, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = zext i16 %116 to i32
  %118 = or i32 %112, %117
  store i32 %118, i32* %12, align 4
  %119 = load i8*, i8** %19, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 2
  store i8* %120, i8** %19, align 8
  br label %121

; <label>:121:                                    ; preds = %49
  %122 = load i8*, i8** %19, align 8
  %123 = load i32, i32* %12, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  %126 = load i8*, i8** %8, align 8
  %127 = icmp ugt i8* %125, %126
  br i1 %127, label %128, label %131

; <label>:128:                                    ; preds = %121
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:131:                                    ; preds = %121
  br label %132

; <label>:132:                                    ; preds = %131
  %133 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %134 = and i64 %133, 2147483650
  %135 = trunc i64 %134 to i32
  store i32 %135, i32* %15, align 4
  %136 = load i32, i32* %15, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %163

; <label>:138:                                    ; preds = %132
  %139 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %140 = and i64 %139, 2147483648
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %150

; <label>:142:                                    ; preds = %138
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %144 = load i32, i32* %10, align 4
  %145 = call i8* @__p_type(i32 %144)
  %146 = load i32, i32* %11, align 4
  %147 = call i8* @__p_class(i32 %146)
  %148 = load i32, i32* %12, align 4
  %149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32.137, i32 0, i32 0), i8* %145, i8* %147, i32 %148)
  br label %150

; <label>:150:                                    ; preds = %142, %138
  %151 = load i32, i32* %10, align 4
  %152 = icmp eq i32 %151, 6
  br i1 %152, label %153, label %160

; <label>:153:                                    ; preds = %150
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %155 = load i64, i64* %16, align 8
  %156 = load i64, i64* %16, align 8
  %157 = trunc i64 %156 to i32
  %158 = call i8* @__p_time(i32 %157)
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33.138, i32 0, i32 0), i64 %155, i8* %158)
  br label %160

; <label>:160:                                    ; preds = %153, %150
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %162 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %161)
  br label %163

; <label>:163:                                    ; preds = %160, %132
  %164 = load i8*, i8** %19, align 8
  store i8* %164, i8** %20, align 8
  %165 = load i32, i32* %10, align 4
  switch i32 %165, label %1077 [
    i32 1, label %166
    i32 5, label %188
    i32 8, label %191
    i32 7, label %194
    i32 9, label %197
    i32 15, label %200
    i32 35, label %219
    i32 33, label %359
    i32 26, label %390
    i32 21, label %435
    i32 18, label %454
    i32 2, label %473
    i32 12, label %476
    i32 13, label %493
    i32 20, label %569
    i32 6, label %646
    i32 14, label %735
    i32 17, label %770
    i32 16, label %805
    i32 19, label %878
    i32 22, label %937
    i32 28, label %947
    i32 11, label %965
    i32 10, label %1068
    i32 30, label %1076
    i32 24, label %1076
    i32 25, label %1076
  ]

; <label>:166:                                    ; preds = %163
  br label %167

; <label>:167:                                    ; preds = %166
  %168 = load i8*, i8** %19, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 4
  %170 = load i8*, i8** %8, align 8
  %171 = icmp ugt i8* %169, %170
  br i1 %171, label %172, label %175

; <label>:172:                                    ; preds = %167
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %174 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %173, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:175:                                    ; preds = %167
  br label %176

; <label>:176:                                    ; preds = %175
  %177 = bitcast %struct.in_addr* %18 to i8*
  %178 = load i8*, i8** %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 1 %178, i64 4, i1 false)
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %180 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %18, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = call i8* @__inet_ntoa(i32 %181)
  %183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34.139, i32 0, i32 0), i8* %182)
  %184 = load i32, i32* %12, align 4
  %185 = load i8*, i8** %19, align 8
  %186 = sext i32 %184 to i64
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  store i8* %187, i8** %19, align 8
  br label %1105

; <label>:188:                                    ; preds = %163
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %189, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35.140, i32 0, i32 0))
  br label %479

; <label>:191:                                    ; preds = %163
  %192 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %193 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %192, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36.141, i32 0, i32 0))
  br label %479

; <label>:194:                                    ; preds = %163
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %195, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37.142, i32 0, i32 0))
  br label %479

; <label>:197:                                    ; preds = %163
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %199 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %198, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38.143, i32 0, i32 0))
  br label %479

; <label>:200:                                    ; preds = %163
  br label %201

; <label>:201:                                    ; preds = %200
  %202 = load i8*, i8** %19, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 2
  %204 = load i8*, i8** %8, align 8
  %205 = icmp ugt i8* %203, %204
  br i1 %205, label %206, label %209

; <label>:206:                                    ; preds = %201
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %208 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %207, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:209:                                    ; preds = %201
  br label %210

; <label>:210:                                    ; preds = %209
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %212 = load i8*, i8** %19, align 8
  %213 = call i32 @__ns_get16(i8* %212)
  %214 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %211, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39.144, i32 0, i32 0), i32 %213)
  %215 = load i8*, i8** %19, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 2
  store i8* %216, i8** %19, align 8
  %217 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %217, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40.145, i32 0, i32 0))
  br label %479

; <label>:219:                                    ; preds = %163
  br label %220

; <label>:220:                                    ; preds = %219
  %221 = load i8*, i8** %19, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 4
  %223 = load i8*, i8** %8, align 8
  %224 = icmp ugt i8* %222, %223
  br i1 %224, label %225, label %228

; <label>:225:                                    ; preds = %220
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %226, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:228:                                    ; preds = %220
  br label %229

; <label>:229:                                    ; preds = %228
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %231 = load i8*, i8** %19, align 8
  %232 = call i32 @__ns_get16(i8* %231)
  %233 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %230, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41.146, i32 0, i32 0), i32 %232)
  %234 = load i8*, i8** %19, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 2
  store i8* %235, i8** %19, align 8
  %236 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %237 = load i8*, i8** %19, align 8
  %238 = call i32 @__ns_get16(i8* %237)
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %236, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42.147, i32 0, i32 0), i32 %238)
  %240 = load i8*, i8** %19, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 2
  store i8* %241, i8** %19, align 8
  br label %242

; <label>:242:                                    ; preds = %229
  %243 = load i8*, i8** %19, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 1
  %245 = load i8*, i8** %8, align 8
  %246 = icmp ugt i8* %244, %245
  br i1 %246, label %247, label %250

; <label>:247:                                    ; preds = %242
  %248 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %249 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %248, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:250:                                    ; preds = %242
  br label %251

; <label>:251:                                    ; preds = %250
  %252 = load i8*, i8** %19, align 8
  %253 = getelementptr inbounds i8, i8* %252, i32 1
  store i8* %253, i8** %19, align 8
  %254 = load i8, i8* %252, align 1
  %255 = zext i8 %254 to i32
  store i32 %255, i32* %13, align 4
  br label %256

; <label>:256:                                    ; preds = %251
  %257 = load i8*, i8** %19, align 8
  %258 = load i32, i32* %13, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds i8, i8* %257, i64 %259
  %261 = load i8*, i8** %8, align 8
  %262 = icmp ugt i8* %260, %261
  br i1 %262, label %263, label %266

; <label>:263:                                    ; preds = %256
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %265 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %264, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:266:                                    ; preds = %256
  br label %267

; <label>:267:                                    ; preds = %266
  %268 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %269 = load i32, i32* %13, align 4
  %270 = load i8*, i8** %19, align 8
  %271 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %268, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.148, i32 0, i32 0), i32 %269, i8* %270)
  %272 = load i32, i32* %13, align 4
  %273 = load i8*, i8** %19, align 8
  %274 = sext i32 %272 to i64
  %275 = getelementptr inbounds i8, i8* %273, i64 %274
  store i8* %275, i8** %19, align 8
  br label %276

; <label>:276:                                    ; preds = %267
  %277 = load i8*, i8** %19, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 1
  %279 = load i8*, i8** %8, align 8
  %280 = icmp ugt i8* %278, %279
  br i1 %280, label %281, label %284

; <label>:281:                                    ; preds = %276
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %283 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:284:                                    ; preds = %276
  br label %285

; <label>:285:                                    ; preds = %284
  %286 = load i8*, i8** %19, align 8
  %287 = getelementptr inbounds i8, i8* %286, i32 1
  store i8* %287, i8** %19, align 8
  %288 = load i8, i8* %286, align 1
  %289 = zext i8 %288 to i32
  store i32 %289, i32* %13, align 4
  br label %290

; <label>:290:                                    ; preds = %285
  %291 = load i8*, i8** %19, align 8
  %292 = load i32, i32* %13, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i8, i8* %291, i64 %293
  %295 = load i8*, i8** %8, align 8
  %296 = icmp ugt i8* %294, %295
  br i1 %296, label %297, label %300

; <label>:297:                                    ; preds = %290
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %299 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %298, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:300:                                    ; preds = %290
  br label %301

; <label>:301:                                    ; preds = %300
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %303 = load i32, i32* %13, align 4
  %304 = load i8*, i8** %19, align 8
  %305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %302, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44.149, i32 0, i32 0), i32 %303, i8* %304)
  %306 = load i32, i32* %13, align 4
  %307 = load i8*, i8** %19, align 8
  %308 = sext i32 %306 to i64
  %309 = getelementptr inbounds i8, i8* %307, i64 %308
  store i8* %309, i8** %19, align 8
  br label %310

; <label>:310:                                    ; preds = %301
  %311 = load i8*, i8** %19, align 8
  %312 = getelementptr inbounds i8, i8* %311, i64 1
  %313 = load i8*, i8** %8, align 8
  %314 = icmp ugt i8* %312, %313
  br i1 %314, label %315, label %318

; <label>:315:                                    ; preds = %310
  %316 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %317 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %316, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:318:                                    ; preds = %310
  br label %319

; <label>:319:                                    ; preds = %318
  %320 = load i8*, i8** %19, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 1
  store i8* %321, i8** %19, align 8
  %322 = load i8, i8* %320, align 1
  %323 = zext i8 %322 to i32
  store i32 %323, i32* %13, align 4
  br label %324

; <label>:324:                                    ; preds = %319
  %325 = load i8*, i8** %19, align 8
  %326 = load i32, i32* %13, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i8, i8* %325, i64 %327
  %329 = load i8*, i8** %8, align 8
  %330 = icmp ugt i8* %328, %329
  br i1 %330, label %331, label %334

; <label>:331:                                    ; preds = %324
  %332 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %333 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %332, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:334:                                    ; preds = %324
  br label %335

; <label>:335:                                    ; preds = %334
  %336 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %337 = load i32, i32* %13, align 4
  %338 = load i8*, i8** %19, align 8
  %339 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %336, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45.150, i32 0, i32 0), i32 %337, i8* %338)
  %340 = load i32, i32* %13, align 4
  %341 = load i8*, i8** %19, align 8
  %342 = sext i32 %340 to i64
  %343 = getelementptr inbounds i8, i8* %341, i64 %342
  store i8* %343, i8** %19, align 8
  %344 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %345 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %344, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46.151, i32 0, i32 0))
  %346 = load i8*, i8** %19, align 8
  %347 = load i8*, i8** %7, align 8
  %348 = load i8*, i8** %8, align 8
  %349 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %350 = call i8* @Print_cdname(i8* %346, i8* %347, i8* %348, %struct._IO_FILE* %349)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %350, i8** %19, align 8
  %351 = load i8*, i8** %19, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %353, label %356

; <label>:353:                                    ; preds = %335
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %355 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %354, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47.152, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:356:                                    ; preds = %335
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %358 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %357)
  br label %1105

; <label>:359:                                    ; preds = %163
  br label %360

; <label>:360:                                    ; preds = %359
  %361 = load i8*, i8** %19, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 6
  %363 = load i8*, i8** %8, align 8
  %364 = icmp ugt i8* %362, %363
  br i1 %364, label %365, label %368

; <label>:365:                                    ; preds = %360
  %366 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %367 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %366, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:368:                                    ; preds = %360
  br label %369

; <label>:369:                                    ; preds = %368
  %370 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %371 = load i8*, i8** %19, align 8
  %372 = call i32 @__ns_get16(i8* %371)
  %373 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %370, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48.153, i32 0, i32 0), i32 %372)
  %374 = load i8*, i8** %19, align 8
  %375 = getelementptr inbounds i8, i8* %374, i64 2
  store i8* %375, i8** %19, align 8
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %377 = load i8*, i8** %19, align 8
  %378 = call i32 @__ns_get16(i8* %377)
  %379 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %376, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49.154, i32 0, i32 0), i32 %378)
  %380 = load i8*, i8** %19, align 8
  %381 = getelementptr inbounds i8, i8* %380, i64 2
  store i8* %381, i8** %19, align 8
  %382 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %383 = load i8*, i8** %19, align 8
  %384 = call i32 @__ns_get16(i8* %383)
  %385 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %382, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50.155, i32 0, i32 0), i32 %384)
  %386 = load i8*, i8** %19, align 8
  %387 = getelementptr inbounds i8, i8* %386, i64 2
  store i8* %387, i8** %19, align 8
  %388 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %389 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %388, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51.156, i32 0, i32 0))
  br label %479

; <label>:390:                                    ; preds = %163
  br label %391

; <label>:391:                                    ; preds = %390
  %392 = load i8*, i8** %19, align 8
  %393 = getelementptr inbounds i8, i8* %392, i64 2
  %394 = load i8*, i8** %8, align 8
  %395 = icmp ugt i8* %393, %394
  br i1 %395, label %396, label %399

; <label>:396:                                    ; preds = %391
  %397 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %398 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %397, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:399:                                    ; preds = %391
  br label %400

; <label>:400:                                    ; preds = %399
  %401 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %402 = load i8*, i8** %19, align 8
  %403 = call i32 @__ns_get16(i8* %402)
  %404 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %401, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39.144, i32 0, i32 0), i32 %403)
  %405 = load i8*, i8** %19, align 8
  %406 = getelementptr inbounds i8, i8* %405, i64 2
  store i8* %406, i8** %19, align 8
  %407 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %408 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %407, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52.157, i32 0, i32 0))
  %409 = load i8*, i8** %19, align 8
  %410 = load i8*, i8** %7, align 8
  %411 = load i8*, i8** %8, align 8
  %412 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %413 = call i8* @Print_cdname(i8* %409, i8* %410, i8* %411, %struct._IO_FILE* %412)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %413, i8** %19, align 8
  %414 = load i8*, i8** %19, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %416, label %419

; <label>:416:                                    ; preds = %400
  %417 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %418 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %417, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:419:                                    ; preds = %400
  %420 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %421 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %420, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53.158, i32 0, i32 0))
  %422 = load i8*, i8** %19, align 8
  %423 = load i8*, i8** %7, align 8
  %424 = load i8*, i8** %8, align 8
  %425 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %426 = call i8* @Print_cdname(i8* %422, i8* %423, i8* %424, %struct._IO_FILE* %425)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %426, i8** %19, align 8
  %427 = load i8*, i8** %19, align 8
  %428 = icmp eq i8* %427, null
  br i1 %428, label %429, label %432

; <label>:429:                                    ; preds = %419
  %430 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %431 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %430, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:432:                                    ; preds = %419
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %434 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %433)
  br label %1105

; <label>:435:                                    ; preds = %163
  br label %436

; <label>:436:                                    ; preds = %435
  %437 = load i8*, i8** %19, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 2
  %439 = load i8*, i8** %8, align 8
  %440 = icmp ugt i8* %438, %439
  br i1 %440, label %441, label %444

; <label>:441:                                    ; preds = %436
  %442 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %443 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %442, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:444:                                    ; preds = %436
  br label %445

; <label>:445:                                    ; preds = %444
  %446 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %447 = load i8*, i8** %19, align 8
  %448 = call i32 @__ns_get16(i8* %447)
  %449 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %446, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39.144, i32 0, i32 0), i32 %448)
  %450 = load i8*, i8** %19, align 8
  %451 = getelementptr inbounds i8, i8* %450, i64 2
  store i8* %451, i8** %19, align 8
  %452 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %452, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54.159, i32 0, i32 0))
  br label %479

; <label>:454:                                    ; preds = %163
  br label %455

; <label>:455:                                    ; preds = %454
  %456 = load i8*, i8** %19, align 8
  %457 = getelementptr inbounds i8, i8* %456, i64 2
  %458 = load i8*, i8** %8, align 8
  %459 = icmp ugt i8* %457, %458
  br i1 %459, label %460, label %463

; <label>:460:                                    ; preds = %455
  %461 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %462 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %461, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:463:                                    ; preds = %455
  br label %464

; <label>:464:                                    ; preds = %463
  %465 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %466 = load i8*, i8** %19, align 8
  %467 = call i32 @__ns_get16(i8* %466)
  %468 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %465, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55.160, i32 0, i32 0), i32 %467)
  %469 = load i8*, i8** %19, align 8
  %470 = getelementptr inbounds i8, i8* %469, i64 2
  store i8* %470, i8** %19, align 8
  %471 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %471, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56.161, i32 0, i32 0))
  br label %479

; <label>:473:                                    ; preds = %163
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %475 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %474, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57.162, i32 0, i32 0))
  br label %479

; <label>:476:                                    ; preds = %163
  %477 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %478 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %477, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58.163, i32 0, i32 0))
  br label %479

; <label>:479:                                    ; preds = %476, %473, %464, %445, %369, %210, %197, %194, %191, %188
  %480 = load i8*, i8** %19, align 8
  %481 = load i8*, i8** %7, align 8
  %482 = load i8*, i8** %8, align 8
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %484 = call i8* @Print_cdname(i8* %480, i8* %481, i8* %482, %struct._IO_FILE* %483)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %484, i8** %19, align 8
  %485 = load i8*, i8** %19, align 8
  %486 = icmp eq i8* %485, null
  br i1 %486, label %487, label %490

; <label>:487:                                    ; preds = %479
  %488 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %489 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %488, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:490:                                    ; preds = %479
  %491 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %492 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %491)
  br label %1105

; <label>:493:                                    ; preds = %163
  %494 = load i8*, i8** %19, align 8
  %495 = load i32, i32* %12, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds i8, i8* %494, i64 %496
  store i8* %497, i8** %21, align 8
  br label %498

; <label>:498:                                    ; preds = %493
  %499 = load i8*, i8** %19, align 8
  %500 = getelementptr inbounds i8, i8* %499, i64 1
  %501 = load i8*, i8** %8, align 8
  %502 = icmp ugt i8* %500, %501
  br i1 %502, label %503, label %506

; <label>:503:                                    ; preds = %498
  %504 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %505 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %504, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:506:                                    ; preds = %498
  br label %507

; <label>:507:                                    ; preds = %506
  %508 = load i8*, i8** %19, align 8
  %509 = getelementptr inbounds i8, i8* %508, i32 1
  store i8* %509, i8** %19, align 8
  %510 = load i8, i8* %508, align 1
  %511 = zext i8 %510 to i32
  store i32 %511, i32* %13, align 4
  %512 = icmp ne i32 %511, 0
  br i1 %512, label %513, label %534

; <label>:513:                                    ; preds = %507
  br label %514

; <label>:514:                                    ; preds = %513
  %515 = load i8*, i8** %19, align 8
  %516 = load i32, i32* %13, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i8, i8* %515, i64 %517
  %519 = load i8*, i8** %8, align 8
  %520 = icmp ugt i8* %518, %519
  br i1 %520, label %521, label %524

; <label>:521:                                    ; preds = %514
  %522 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %523 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %522, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:524:                                    ; preds = %514
  br label %525

; <label>:525:                                    ; preds = %524
  %526 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %527 = load i32, i32* %13, align 4
  %528 = load i8*, i8** %19, align 8
  %529 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %526, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59.164, i32 0, i32 0), i32 %527, i8* %528)
  %530 = load i32, i32* %13, align 4
  %531 = load i8*, i8** %19, align 8
  %532 = sext i32 %530 to i64
  %533 = getelementptr inbounds i8, i8* %531, i64 %532
  store i8* %533, i8** %19, align 8
  br label %534

; <label>:534:                                    ; preds = %525, %507
  %535 = load i8*, i8** %19, align 8
  %536 = load i8*, i8** %21, align 8
  %537 = icmp ult i8* %535, %536
  br i1 %537, label %538, label %565

; <label>:538:                                    ; preds = %534
  %539 = load i8*, i8** %19, align 8
  %540 = getelementptr inbounds i8, i8* %539, i32 1
  store i8* %540, i8** %19, align 8
  %541 = load i8, i8* %539, align 1
  %542 = zext i8 %541 to i32
  store i32 %542, i32* %13, align 4
  %543 = icmp ne i32 %542, 0
  br i1 %543, label %544, label %565

; <label>:544:                                    ; preds = %538
  br label %545

; <label>:545:                                    ; preds = %544
  %546 = load i8*, i8** %19, align 8
  %547 = load i32, i32* %13, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds i8, i8* %546, i64 %548
  %550 = load i8*, i8** %8, align 8
  %551 = icmp ugt i8* %549, %550
  br i1 %551, label %552, label %555

; <label>:552:                                    ; preds = %545
  %553 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %554 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %553, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:555:                                    ; preds = %545
  br label %556

; <label>:556:                                    ; preds = %555
  %557 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %558 = load i32, i32* %13, align 4
  %559 = load i8*, i8** %19, align 8
  %560 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %557, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60.165, i32 0, i32 0), i32 %558, i8* %559)
  %561 = load i32, i32* %13, align 4
  %562 = load i8*, i8** %19, align 8
  %563 = sext i32 %561 to i64
  %564 = getelementptr inbounds i8, i8* %562, i64 %563
  store i8* %564, i8** %19, align 8
  br label %568

; <label>:565:                                    ; preds = %538, %534
  %566 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %567 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %566, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61.166, i32 0, i32 0))
  br label %568

; <label>:568:                                    ; preds = %565, %556
  br label %1105

; <label>:569:                                    ; preds = %163
  %570 = load i8*, i8** %19, align 8
  %571 = load i32, i32* %12, align 4
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds i8, i8* %570, i64 %572
  store i8* %573, i8** %21, align 8
  br label %574

; <label>:574:                                    ; preds = %569
  %575 = load i8*, i8** %19, align 8
  %576 = getelementptr inbounds i8, i8* %575, i64 1
  %577 = load i8*, i8** %8, align 8
  %578 = icmp ugt i8* %576, %577
  br i1 %578, label %579, label %582

; <label>:579:                                    ; preds = %574
  %580 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %581 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %580, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:582:                                    ; preds = %574
  br label %583

; <label>:583:                                    ; preds = %582
  %584 = load i8*, i8** %19, align 8
  %585 = getelementptr inbounds i8, i8* %584, i32 1
  store i8* %585, i8** %19, align 8
  %586 = load i8, i8* %584, align 1
  %587 = zext i8 %586 to i32
  store i32 %587, i32* %13, align 4
  %588 = load i32, i32* %13, align 4
  %589 = icmp ne i32 %588, 0
  br i1 %589, label %590, label %611

; <label>:590:                                    ; preds = %583
  br label %591

; <label>:591:                                    ; preds = %590
  %592 = load i8*, i8** %19, align 8
  %593 = load i32, i32* %13, align 4
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds i8, i8* %592, i64 %594
  %596 = load i8*, i8** %8, align 8
  %597 = icmp ugt i8* %595, %596
  br i1 %597, label %598, label %601

; <label>:598:                                    ; preds = %591
  %599 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %600 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %599, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:601:                                    ; preds = %591
  br label %602

; <label>:602:                                    ; preds = %601
  %603 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %604 = load i32, i32* %13, align 4
  %605 = load i8*, i8** %19, align 8
  %606 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %603, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62.167, i32 0, i32 0), i32 %604, i8* %605)
  %607 = load i32, i32* %13, align 4
  %608 = load i8*, i8** %19, align 8
  %609 = sext i32 %607 to i64
  %610 = getelementptr inbounds i8, i8* %608, i64 %609
  store i8* %610, i8** %19, align 8
  br label %611

; <label>:611:                                    ; preds = %602, %583
  %612 = load i8*, i8** %19, align 8
  %613 = load i8*, i8** %21, align 8
  %614 = icmp ult i8* %612, %613
  br i1 %614, label %615, label %642

; <label>:615:                                    ; preds = %611
  %616 = load i8*, i8** %19, align 8
  %617 = getelementptr inbounds i8, i8* %616, i32 1
  store i8* %617, i8** %19, align 8
  %618 = load i8, i8* %616, align 1
  %619 = zext i8 %618 to i32
  store i32 %619, i32* %13, align 4
  %620 = icmp ne i32 %619, 0
  br i1 %620, label %621, label %642

; <label>:621:                                    ; preds = %615
  br label %622

; <label>:622:                                    ; preds = %621
  %623 = load i8*, i8** %19, align 8
  %624 = load i32, i32* %13, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds i8, i8* %623, i64 %625
  %627 = load i8*, i8** %8, align 8
  %628 = icmp ugt i8* %626, %627
  br i1 %628, label %629, label %632

; <label>:629:                                    ; preds = %622
  %630 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %631 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %630, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:632:                                    ; preds = %622
  br label %633

; <label>:633:                                    ; preds = %632
  %634 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %635 = load i32, i32* %13, align 4
  %636 = load i8*, i8** %19, align 8
  %637 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63.168, i32 0, i32 0), i32 %635, i8* %636)
  %638 = load i32, i32* %13, align 4
  %639 = load i8*, i8** %19, align 8
  %640 = sext i32 %638 to i64
  %641 = getelementptr inbounds i8, i8* %639, i64 %640
  store i8* %641, i8** %19, align 8
  br label %645

; <label>:642:                                    ; preds = %615, %611
  %643 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %644 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %643, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.169, i32 0, i32 0))
  br label %645

; <label>:645:                                    ; preds = %642, %633
  br label %1105

; <label>:646:                                    ; preds = %163
  %647 = load i32, i32* %15, align 4
  %648 = icmp ne i32 %647, 0
  br i1 %648, label %652, label %649

; <label>:649:                                    ; preds = %646
  %650 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %651 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %650)
  br label %652

; <label>:652:                                    ; preds = %649, %646
  %653 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %654 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %653, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65.170, i32 0, i32 0))
  %655 = load i8*, i8** %19, align 8
  %656 = load i8*, i8** %7, align 8
  %657 = load i8*, i8** %8, align 8
  %658 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %659 = call i8* @Print_cdname(i8* %655, i8* %656, i8* %657, %struct._IO_FILE* %658)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %659, i8** %19, align 8
  %660 = load i8*, i8** %19, align 8
  %661 = icmp eq i8* %660, null
  br i1 %661, label %662, label %665

; <label>:662:                                    ; preds = %652
  %663 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %664 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %663, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:665:                                    ; preds = %652
  %666 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %667 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %666, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66.171, i32 0, i32 0))
  %668 = load i8*, i8** %19, align 8
  %669 = load i8*, i8** %7, align 8
  %670 = load i8*, i8** %8, align 8
  %671 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %672 = call i8* @Print_cdname(i8* %668, i8* %669, i8* %670, %struct._IO_FILE* %671)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %672, i8** %19, align 8
  %673 = load i8*, i8** %19, align 8
  %674 = icmp eq i8* %673, null
  br i1 %674, label %675, label %678

; <label>:675:                                    ; preds = %665
  %676 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %677 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %676, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:678:                                    ; preds = %665
  br label %679

; <label>:679:                                    ; preds = %678
  %680 = load i8*, i8** %19, align 8
  %681 = getelementptr inbounds i8, i8* %680, i64 20
  %682 = load i8*, i8** %8, align 8
  %683 = icmp ugt i8* %681, %682
  br i1 %683, label %684, label %687

; <label>:684:                                    ; preds = %679
  %685 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %686 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %685, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:687:                                    ; preds = %679
  br label %688

; <label>:688:                                    ; preds = %687
  %689 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %690 = load i8*, i8** %19, align 8
  %691 = call i64 @__ns_get32(i8* %690)
  %692 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %689, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67.172, i32 0, i32 0), i64 %691)
  %693 = load i8*, i8** %19, align 8
  %694 = getelementptr inbounds i8, i8* %693, i64 4
  store i8* %694, i8** %19, align 8
  %695 = load i8*, i8** %19, align 8
  %696 = call i64 @__ns_get32(i8* %695)
  store i64 %696, i64* %17, align 8
  %697 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %698 = load i64, i64* %17, align 8
  %699 = load i64, i64* %17, align 8
  %700 = trunc i64 %699 to i32
  %701 = call i8* @__p_time(i32 %700)
  %702 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %697, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68.173, i32 0, i32 0), i64 %698, i8* %701)
  %703 = load i8*, i8** %19, align 8
  %704 = getelementptr inbounds i8, i8* %703, i64 4
  store i8* %704, i8** %19, align 8
  %705 = load i8*, i8** %19, align 8
  %706 = call i64 @__ns_get32(i8* %705)
  store i64 %706, i64* %17, align 8
  %707 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %708 = load i64, i64* %17, align 8
  %709 = load i64, i64* %17, align 8
  %710 = trunc i64 %709 to i32
  %711 = call i8* @__p_time(i32 %710)
  %712 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %707, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69.174, i32 0, i32 0), i64 %708, i8* %711)
  %713 = load i8*, i8** %19, align 8
  %714 = getelementptr inbounds i8, i8* %713, i64 4
  store i8* %714, i8** %19, align 8
  %715 = load i8*, i8** %19, align 8
  %716 = call i64 @__ns_get32(i8* %715)
  store i64 %716, i64* %17, align 8
  %717 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %718 = load i64, i64* %17, align 8
  %719 = load i64, i64* %17, align 8
  %720 = trunc i64 %719 to i32
  %721 = call i8* @__p_time(i32 %720)
  %722 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %717, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70.175, i32 0, i32 0), i64 %718, i8* %721)
  %723 = load i8*, i8** %19, align 8
  %724 = getelementptr inbounds i8, i8* %723, i64 4
  store i8* %724, i8** %19, align 8
  %725 = load i8*, i8** %19, align 8
  %726 = call i64 @__ns_get32(i8* %725)
  store i64 %726, i64* %17, align 8
  %727 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %728 = load i64, i64* %17, align 8
  %729 = load i64, i64* %17, align 8
  %730 = trunc i64 %729 to i32
  %731 = call i8* @__p_time(i32 %730)
  %732 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %727, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71.176, i32 0, i32 0), i64 %728, i8* %731)
  %733 = load i8*, i8** %19, align 8
  %734 = getelementptr inbounds i8, i8* %733, i64 4
  store i8* %734, i8** %19, align 8
  br label %1105

; <label>:735:                                    ; preds = %163
  %736 = load i32, i32* %15, align 4
  %737 = icmp ne i32 %736, 0
  br i1 %737, label %741, label %738

; <label>:738:                                    ; preds = %735
  %739 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %740 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %739)
  br label %741

; <label>:741:                                    ; preds = %738, %735
  %742 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %743 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %742, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72.177, i32 0, i32 0))
  %744 = load i8*, i8** %19, align 8
  %745 = load i8*, i8** %7, align 8
  %746 = load i8*, i8** %8, align 8
  %747 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %748 = call i8* @Print_cdname(i8* %744, i8* %745, i8* %746, %struct._IO_FILE* %747)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %748, i8** %19, align 8
  %749 = load i8*, i8** %19, align 8
  %750 = icmp eq i8* %749, null
  br i1 %750, label %751, label %754

; <label>:751:                                    ; preds = %741
  %752 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %753 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %752, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:754:                                    ; preds = %741
  %755 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %756 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %755, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73.178, i32 0, i32 0))
  %757 = load i8*, i8** %19, align 8
  %758 = load i8*, i8** %7, align 8
  %759 = load i8*, i8** %8, align 8
  %760 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %761 = call i8* @Print_cdname(i8* %757, i8* %758, i8* %759, %struct._IO_FILE* %760)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %761, i8** %19, align 8
  %762 = load i8*, i8** %19, align 8
  %763 = icmp eq i8* %762, null
  br i1 %763, label %764, label %767

; <label>:764:                                    ; preds = %754
  %765 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %766 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %765, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:767:                                    ; preds = %754
  %768 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %769 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %768)
  br label %1105

; <label>:770:                                    ; preds = %163
  %771 = load i32, i32* %15, align 4
  %772 = icmp ne i32 %771, 0
  br i1 %772, label %776, label %773

; <label>:773:                                    ; preds = %770
  %774 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %775 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %774)
  br label %776

; <label>:776:                                    ; preds = %773, %770
  %777 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %778 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %777, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74.179, i32 0, i32 0))
  %779 = load i8*, i8** %19, align 8
  %780 = load i8*, i8** %7, align 8
  %781 = load i8*, i8** %8, align 8
  %782 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %783 = call i8* @Print_cdname(i8* %779, i8* %780, i8* %781, %struct._IO_FILE* %782)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %783, i8** %19, align 8
  %784 = load i8*, i8** %19, align 8
  %785 = icmp eq i8* %784, null
  br i1 %785, label %786, label %789

; <label>:786:                                    ; preds = %776
  %787 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %788 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %787, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:789:                                    ; preds = %776
  %790 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %791 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %790, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75.180, i32 0, i32 0))
  %792 = load i8*, i8** %19, align 8
  %793 = load i8*, i8** %7, align 8
  %794 = load i8*, i8** %8, align 8
  %795 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %796 = call i8* @Print_cdname(i8* %792, i8* %793, i8* %794, %struct._IO_FILE* %795)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %796, i8** %19, align 8
  %797 = load i8*, i8** %19, align 8
  %798 = icmp eq i8* %797, null
  br i1 %798, label %799, label %802

; <label>:799:                                    ; preds = %789
  %800 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %801 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %800, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.135, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:802:                                    ; preds = %789
  %803 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %804 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %803)
  br label %1105

; <label>:805:                                    ; preds = %163
  %806 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %807 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76.181, i32 0, i32 0), %struct._IO_FILE* %806)
  %808 = load i8*, i8** %20, align 8
  %809 = load i32, i32* %12, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds i8, i8* %808, i64 %810
  store i8* %811, i8** %21, align 8
  br label %812

; <label>:812:                                    ; preds = %874, %805
  %813 = load i8*, i8** %19, align 8
  %814 = load i8*, i8** %21, align 8
  %815 = icmp ult i8* %813, %814
  br i1 %815, label %816, label %875

; <label>:816:                                    ; preds = %812
  %817 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %818 = call i32 @_IO_putc(i32 34, %struct._IO_FILE* %817)
  %819 = load i8*, i8** %19, align 8
  %820 = getelementptr inbounds i8, i8* %819, i32 1
  store i8* %820, i8** %19, align 8
  %821 = load i8, i8* %819, align 1
  %822 = zext i8 %821 to i32
  store i32 %822, i32* %13, align 4
  %823 = load i32, i32* %13, align 4
  %824 = icmp ne i32 %823, 0
  br i1 %824, label %825, label %865

; <label>:825:                                    ; preds = %816
  %826 = load i32, i32* %13, align 4
  store i32 %826, i32* %14, align 4
  br label %827

; <label>:827:                                    ; preds = %861, %825
  %828 = load i32, i32* %14, align 4
  %829 = icmp sgt i32 %828, 0
  br i1 %829, label %830, label %834

; <label>:830:                                    ; preds = %827
  %831 = load i8*, i8** %19, align 8
  %832 = load i8*, i8** %21, align 8
  %833 = icmp ult i8* %831, %832
  br label %834

; <label>:834:                                    ; preds = %830, %827
  %835 = phi i1 [ false, %827 ], [ %833, %830 ]
  br i1 %835, label %836, label %864

; <label>:836:                                    ; preds = %834
  %837 = load i8*, i8** %19, align 8
  %838 = load i8, i8* %837, align 1
  %839 = zext i8 %838 to i32
  %840 = icmp eq i32 %839, 10
  br i1 %840, label %851, label %841

; <label>:841:                                    ; preds = %836
  %842 = load i8*, i8** %19, align 8
  %843 = load i8, i8* %842, align 1
  %844 = zext i8 %843 to i32
  %845 = icmp eq i32 %844, 34
  br i1 %845, label %851, label %846

; <label>:846:                                    ; preds = %841
  %847 = load i8*, i8** %19, align 8
  %848 = load i8, i8* %847, align 1
  %849 = zext i8 %848 to i32
  %850 = icmp eq i32 %849, 92
  br i1 %850, label %851, label %854

; <label>:851:                                    ; preds = %846, %841, %836
  %852 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %853 = call i32 @_IO_putc(i32 92, %struct._IO_FILE* %852)
  br label %854

; <label>:854:                                    ; preds = %851, %846
  %855 = load i8*, i8** %19, align 8
  %856 = getelementptr inbounds i8, i8* %855, i32 1
  store i8* %856, i8** %19, align 8
  %857 = load i8, i8* %855, align 1
  %858 = zext i8 %857 to i32
  %859 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %860 = call i32 @_IO_putc(i32 %858, %struct._IO_FILE* %859)
  br label %861

; <label>:861:                                    ; preds = %854
  %862 = load i32, i32* %14, align 4
  %863 = add nsw i32 %862, -1
  store i32 %863, i32* %14, align 4
  br label %827

; <label>:864:                                    ; preds = %834
  br label %865

; <label>:865:                                    ; preds = %864, %816
  %866 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %867 = call i32 @_IO_putc(i32 34, %struct._IO_FILE* %866)
  %868 = load i8*, i8** %19, align 8
  %869 = load i8*, i8** %21, align 8
  %870 = icmp ult i8* %868, %869
  br i1 %870, label %871, label %874

; <label>:871:                                    ; preds = %865
  %872 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %873 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %872)
  br label %874

; <label>:874:                                    ; preds = %871, %865
  br label %812

; <label>:875:                                    ; preds = %812
  %876 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %877 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %876)
  br label %1105

; <label>:878:                                    ; preds = %163
  %879 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %880 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77.182, i32 0, i32 0), %struct._IO_FILE* %879)
  %881 = load i8*, i8** %20, align 8
  %882 = load i32, i32* %12, align 4
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds i8, i8* %881, i64 %883
  store i8* %884, i8** %21, align 8
  br label %885

; <label>:885:                                    ; preds = %933, %878
  %886 = load i8*, i8** %19, align 8
  %887 = load i8*, i8** %21, align 8
  %888 = icmp ult i8* %886, %887
  br i1 %888, label %889, label %934

; <label>:889:                                    ; preds = %885
  %890 = load i8*, i8** %19, align 8
  %891 = getelementptr inbounds i8, i8* %890, i32 1
  store i8* %891, i8** %19, align 8
  %892 = load i8, i8* %890, align 1
  %893 = zext i8 %892 to i32
  store i32 %893, i32* %13, align 4
  %894 = load i32, i32* %13, align 4
  %895 = icmp ne i32 %894, 0
  br i1 %895, label %896, label %933

; <label>:896:                                    ; preds = %889
  %897 = load i32, i32* %13, align 4
  store i32 %897, i32* %14, align 4
  br label %898

; <label>:898:                                    ; preds = %929, %896
  %899 = load i32, i32* %14, align 4
  %900 = icmp sgt i32 %899, 0
  br i1 %900, label %901, label %905

; <label>:901:                                    ; preds = %898
  %902 = load i8*, i8** %19, align 8
  %903 = load i8*, i8** %21, align 8
  %904 = icmp ult i8* %902, %903
  br label %905

; <label>:905:                                    ; preds = %901, %898
  %906 = phi i1 [ false, %898 ], [ %904, %901 ]
  br i1 %906, label %907, label %932

; <label>:907:                                    ; preds = %905
  %908 = load i8*, i8** %19, align 8
  %909 = load i8, i8* %908, align 1
  %910 = zext i8 %909 to i32
  %911 = icmp eq i32 %910, 10
  br i1 %911, label %912, label %921

; <label>:912:                                    ; preds = %907
  %913 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %914 = call i32 @_IO_putc(i32 92, %struct._IO_FILE* %913)
  %915 = load i8*, i8** %19, align 8
  %916 = getelementptr inbounds i8, i8* %915, i32 1
  store i8* %916, i8** %19, align 8
  %917 = load i8, i8* %915, align 1
  %918 = zext i8 %917 to i32
  %919 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %920 = call i32 @_IO_putc(i32 %918, %struct._IO_FILE* %919)
  br label %928

; <label>:921:                                    ; preds = %907
  %922 = load i8*, i8** %19, align 8
  %923 = getelementptr inbounds i8, i8* %922, i32 1
  store i8* %923, i8** %19, align 8
  %924 = load i8, i8* %922, align 1
  %925 = zext i8 %924 to i32
  %926 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %927 = call i32 @_IO_putc(i32 %925, %struct._IO_FILE* %926)
  br label %928

; <label>:928:                                    ; preds = %921, %912
  br label %929

; <label>:929:                                    ; preds = %928
  %930 = load i32, i32* %14, align 4
  %931 = add nsw i32 %930, -1
  store i32 %931, i32* %14, align 4
  br label %898

; <label>:932:                                    ; preds = %905
  br label %933

; <label>:933:                                    ; preds = %932, %889
  br label %885

; <label>:934:                                    ; preds = %885
  %935 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %936 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.169, i32 0, i32 0), %struct._IO_FILE* %935)
  br label %1105

; <label>:937:                                    ; preds = %163
  %938 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %939 = load i32, i32* %12, align 4
  %940 = load i8*, i8** %19, align 8
  %941 = call i8* @__inet_nsap_ntoa(i32 %939, i8* %940, i8* null)
  %942 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %938, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78.183, i32 0, i32 0), i8* %941)
  %943 = load i32, i32* %12, align 4
  %944 = load i8*, i8** %19, align 8
  %945 = sext i32 %943 to i64
  %946 = getelementptr inbounds i8, i8* %944, i64 %945
  store i8* %946, i8** %19, align 8
  br label %1105

; <label>:947:                                    ; preds = %163
  br label %948

; <label>:948:                                    ; preds = %947
  %949 = load i8*, i8** %19, align 8
  %950 = getelementptr inbounds i8, i8* %949, i64 16
  %951 = load i8*, i8** %8, align 8
  %952 = icmp ugt i8* %950, %951
  br i1 %952, label %953, label %956

; <label>:953:                                    ; preds = %948
  %954 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %955 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %954, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:956:                                    ; preds = %948
  br label %957

; <label>:957:                                    ; preds = %956
  %958 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %959 = load i8*, i8** %19, align 8
  %960 = getelementptr inbounds [46 x i8], [46 x i8]* %26, i32 0, i32 0
  %961 = call i8* @__inet_ntop(i32 10, i8* %959, i8* %960, i64 46)
  %962 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %958, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.79.184, i32 0, i32 0), i8* %961)
  %963 = load i8*, i8** %19, align 8
  %964 = getelementptr inbounds i8, i8* %963, i64 16
  store i8* %964, i8** %19, align 8
  br label %1105

; <label>:965:                                    ; preds = %163
  br label %966

; <label>:966:                                    ; preds = %965
  %967 = load i8*, i8** %19, align 8
  %968 = getelementptr inbounds i8, i8* %967, i64 5
  %969 = load i8*, i8** %8, align 8
  %970 = icmp ugt i8* %968, %969
  br i1 %970, label %971, label %974

; <label>:971:                                    ; preds = %966
  %972 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %973 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %972, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.136, i32 0, i32 0))
  store i8* null, i8** %5, align 8
  br label %1137

; <label>:974:                                    ; preds = %966
  br label %975

; <label>:975:                                    ; preds = %974
  %976 = load i32, i32* %15, align 4
  %977 = icmp ne i32 %976, 0
  br i1 %977, label %981, label %978

; <label>:978:                                    ; preds = %975
  %979 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %980 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %979)
  br label %981

; <label>:981:                                    ; preds = %978, %975
  %982 = bitcast %struct.in_addr* %18 to i8*
  %983 = load i8*, i8** %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %982, i8* align 1 %983, i64 4, i1 false)
  %984 = load i8*, i8** %19, align 8
  %985 = getelementptr inbounds i8, i8* %984, i64 4
  store i8* %985, i8** %19, align 8
  %986 = load i8*, i8** %19, align 8
  %987 = load i8, i8* %986, align 1
  %988 = zext i8 %987 to i32
  %989 = call %struct.protoent* @getprotobynumber(i32 %988)
  store %struct.protoent* %989, %struct.protoent** %27, align 8
  %990 = icmp ne %struct.protoent* %989, null
  br i1 %990, label %991, label %1000

; <label>:991:                                    ; preds = %981
  %992 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %993 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %18, i32 0, i32 0
  %994 = load i32, i32* %993, align 4
  %995 = call i8* @__inet_ntoa(i32 %994)
  %996 = load %struct.protoent*, %struct.protoent** %27, align 8
  %997 = getelementptr inbounds %struct.protoent, %struct.protoent* %996, i32 0, i32 0
  %998 = load i8*, i8** %997, align 8
  %999 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %992, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.80.185, i32 0, i32 0), i8* %995, i8* %998)
  br label %1009

; <label>:1000:                                   ; preds = %981
  %1001 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1002 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %18, i32 0, i32 0
  %1003 = load i32, i32* %1002, align 4
  %1004 = call i8* @__inet_ntoa(i32 %1003)
  %1005 = load i8*, i8** %19, align 8
  %1006 = load i8, i8* %1005, align 1
  %1007 = zext i8 %1006 to i32
  %1008 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1001, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81.186, i32 0, i32 0), i8* %1004, i32 %1007)
  br label %1009

; <label>:1009:                                   ; preds = %1000, %991
  %1010 = load i8*, i8** %19, align 8
  %1011 = getelementptr inbounds i8, i8* %1010, i32 1
  store i8* %1011, i8** %19, align 8
  store i32 0, i32* %13, align 4
  br label %1012

; <label>:1012:                                   ; preds = %1064, %1009
  %1013 = load i8*, i8** %19, align 8
  %1014 = load i8*, i8** %20, align 8
  %1015 = load i32, i32* %12, align 4
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i8, i8* %1014, i64 %1016
  %1018 = icmp ult i8* %1013, %1017
  br i1 %1018, label %1019, label %1065

; <label>:1019:                                   ; preds = %1012
  %1020 = load i8*, i8** %19, align 8
  %1021 = getelementptr inbounds i8, i8* %1020, i32 1
  store i8* %1021, i8** %19, align 8
  %1022 = load i8, i8* %1020, align 1
  %1023 = zext i8 %1022 to i32
  store i32 %1023, i32* %14, align 4
  br label %1024

; <label>:1024:                                   ; preds = %1059, %1019
  %1025 = load i32, i32* %14, align 4
  %1026 = and i32 %1025, 128
  %1027 = icmp ne i32 %1026, 0
  br i1 %1027, label %1028, label %1056

; <label>:1028:                                   ; preds = %1024
  %1029 = load i32, i32* %13, align 4
  %1030 = trunc i32 %1029 to i16
  %1031 = call zeroext i16 @htons(i16 zeroext %1030) #12
  %1032 = zext i16 %1031 to i32
  %1033 = load %struct.protoent*, %struct.protoent** %27, align 8
  %1034 = icmp ne %struct.protoent* %1033, null
  br i1 %1034, label %1035, label %1039

; <label>:1035:                                   ; preds = %1028
  %1036 = load %struct.protoent*, %struct.protoent** %27, align 8
  %1037 = getelementptr inbounds %struct.protoent, %struct.protoent* %1036, i32 0, i32 0
  %1038 = load i8*, i8** %1037, align 8
  br label %1040

; <label>:1039:                                   ; preds = %1028
  br label %1040

; <label>:1040:                                   ; preds = %1039, %1035
  %1041 = phi i8* [ %1038, %1035 ], [ null, %1039 ]
  %1042 = call %struct.servent* @getservbyport(i32 %1032, i8* %1041)
  store %struct.servent* %1042, %struct.servent** %28, align 8
  %1043 = load %struct.servent*, %struct.servent** %28, align 8
  %1044 = icmp ne %struct.servent* %1043, null
  br i1 %1044, label %1045, label %1051

; <label>:1045:                                   ; preds = %1040
  %1046 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1047 = load %struct.servent*, %struct.servent** %28, align 8
  %1048 = getelementptr inbounds %struct.servent, %struct.servent* %1047, i32 0, i32 0
  %1049 = load i8*, i8** %1048, align 8
  %1050 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1046, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82.187, i32 0, i32 0), i8* %1049)
  br label %1055

; <label>:1051:                                   ; preds = %1040
  %1052 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1053 = load i32, i32* %13, align 4
  %1054 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1052, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83.188, i32 0, i32 0), i32 %1053)
  br label %1055

; <label>:1055:                                   ; preds = %1051, %1045
  br label %1056

; <label>:1056:                                   ; preds = %1055, %1024
  %1057 = load i32, i32* %14, align 4
  %1058 = shl i32 %1057, 1
  store i32 %1058, i32* %14, align 4
  br label %1059

; <label>:1059:                                   ; preds = %1056
  %1060 = load i32, i32* %13, align 4
  %1061 = add nsw i32 %1060, 1
  store i32 %1061, i32* %13, align 4
  %1062 = and i32 %1061, 7
  %1063 = icmp ne i32 %1062, 0
  br i1 %1063, label %1024, label %1064

; <label>:1064:                                   ; preds = %1059
  br label %1012

; <label>:1065:                                   ; preds = %1012
  %1066 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1067 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %1066)
  br label %1105

; <label>:1068:                                   ; preds = %163
  %1069 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1070 = load i32, i32* %12, align 4
  %1071 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1069, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84.189, i32 0, i32 0), i32 %1070)
  %1072 = load i32, i32* %12, align 4
  %1073 = load i8*, i8** %19, align 8
  %1074 = sext i32 %1072 to i64
  %1075 = getelementptr inbounds i8, i8* %1073, i64 %1074
  store i8* %1075, i8** %19, align 8
  br label %1105

; <label>:1076:                                   ; preds = %163, %163, %163
  br label %1077

; <label>:1077:                                   ; preds = %1076, %163
  %1078 = load i8*, i8** %7, align 8
  %1079 = load i8*, i8** %8, align 8
  %1080 = load i8*, i8** %7, align 8
  %1081 = ptrtoint i8* %1079 to i64
  %1082 = ptrtoint i8* %1080 to i64
  %1083 = sub i64 %1081, %1082
  %1084 = load i32, i32* %11, align 4
  %1085 = load i32, i32* %10, align 4
  %1086 = load i64, i64* %16, align 8
  %1087 = load i8*, i8** %20, align 8
  %1088 = load i32, i32* %12, align 4
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds [2048 x i8], [2048 x i8]* %29, i32 0, i32 0
  %1091 = call i32 @__ns_sprintrrf(i8* %1078, i64 %1083, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.190, i32 0, i32 0), i32 %1084, i32 %1085, i64 %1086, i8* %1087, i64 %1089, i8* null, i8* null, i8* %1090, i64 2048)
  %1092 = icmp slt i32 %1091, 0
  br i1 %1092, label %1093, label %1094

; <label>:1093:                                   ; preds = %1077
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86.191, i32 0, i32 0))
  br label %1100

; <label>:1094:                                   ; preds = %1077
  %1095 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1096 = load i32, i32* %10, align 4
  %1097 = call i8* @__p_type(i32 %1096)
  %1098 = getelementptr inbounds [2048 x i8], [2048 x i8]* %29, i32 0, i32 0
  %1099 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1095, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.87.192, i32 0, i32 0), i8* %1097, i8* %1098)
  br label %1100

; <label>:1100:                                   ; preds = %1094, %1093
  %1101 = load i32, i32* %12, align 4
  %1102 = load i8*, i8** %19, align 8
  %1103 = sext i32 %1101 to i64
  %1104 = getelementptr inbounds i8, i8* %1102, i64 %1103
  store i8* %1104, i8** %19, align 8
  br label %1105

; <label>:1105:                                   ; preds = %1100, %1068, %1065, %957, %937, %934, %875, %802, %767, %688, %645, %568, %490, %432, %356, %176
  %1106 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %1107 = and i64 %1106, 2
  %1108 = icmp ne i64 %1107, 0
  br i1 %1108, label %1109, label %1119

; <label>:1109:                                   ; preds = %1105
  %1110 = load i32, i32* %10, align 4
  %1111 = icmp ne i32 %1110, 6
  br i1 %1111, label %1112, label %1119

; <label>:1112:                                   ; preds = %1109
  %1113 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1114 = load i64, i64* %16, align 8
  %1115 = load i64, i64* %16, align 8
  %1116 = trunc i64 %1115 to i32
  %1117 = call i8* @__p_time(i32 %1116)
  %1118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1113, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88.193, i32 0, i32 0), i64 %1114, i8* %1117)
  br label %1119

; <label>:1119:                                   ; preds = %1112, %1109, %1105
  %1120 = load i8*, i8** %19, align 8
  %1121 = load i8*, i8** %20, align 8
  %1122 = load i32, i32* %12, align 4
  %1123 = sext i32 %1122 to i64
  %1124 = getelementptr inbounds i8, i8* %1121, i64 %1123
  %1125 = icmp ne i8* %1120, %1124
  br i1 %1125, label %1126, label %1135

; <label>:1126:                                   ; preds = %1119
  %1127 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1128 = load i8*, i8** %19, align 8
  %1129 = load i8*, i8** %20, align 8
  %1130 = ptrtoint i8* %1128 to i64
  %1131 = ptrtoint i8* %1129 to i64
  %1132 = sub i64 %1130, %1131
  %1133 = load i32, i32* %12, align 4
  %1134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1127, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.89.194, i32 0, i32 0), i64 %1132, i32 %1133)
  store i8* null, i8** %19, align 8
  br label %1135

; <label>:1135:                                   ; preds = %1126, %1119
  %1136 = load i8*, i8** %19, align 8
  store i8* %1136, i8** %5, align 8
  br label %1137

; <label>:1137:                                   ; preds = %1135, %971, %953, %799, %786, %764, %751, %684, %675, %662, %629, %598, %579, %552, %521, %503, %487, %460, %441, %429, %416, %396, %365, %353, %331, %315, %297, %281, %263, %247, %225, %206, %172, %128, %45, %36
  %1138 = load i8*, i8** %5, align 8
  ret i8* %1138
}

declare dso_local i32 @_IO_putc(i32, %struct._IO_FILE*) #1

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #1

declare dso_local %struct.protoent* @getprotobynumber(i32) #1

; Function Attrs: nounwind readnone
declare dso_local zeroext i16 @htons(i16 zeroext) #6

declare dso_local %struct.servent* @getservbyport(i32, i8*) #1

declare dso_local void @perror(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @Print_cdname_sub(i8*, i8*, i8*, %struct._IO_FILE*, i32) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i32, align 4
  %12 = alloca [1025 x i8], align 16
  %13 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store %struct._IO_FILE* %3, %struct._IO_FILE** %10, align 8
  store i32 %4, i32* %11, align 4
  %14 = load i8*, i8** %8, align 8
  %15 = load i8*, i8** %9, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = getelementptr inbounds [1025 x i8], [1025 x i8]* %12, i32 0, i32 0
  %18 = call i32 @__dn_expand(i8* %14, i8* %15, i8* %16, i8* %17, i32 1025)
  store i32 %18, i32* %13, align 4
  %19 = load i32, i32* %13, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %5
  store i8* null, i8** %6, align 8
  br label %46

; <label>:22:                                     ; preds = %5
  %23 = getelementptr inbounds [1025 x i8], [1025 x i8]* %12, i64 0, i64 0
  %24 = load i8, i8* %23, align 16
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds [1025 x i8], [1025 x i8]* %12, i32 0, i32 0
  %29 = call i8* @strcpy(i8* %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.195, i32 0, i32 0))
  br label %30

; <label>:30:                                     ; preds = %27, %22
  %31 = load i32, i32* %11, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %30
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %35 = getelementptr inbounds [1025 x i8], [1025 x i8]* %12, i32 0, i32 0
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.196, i32 0, i32 0), i8* %35)
  br label %41

; <label>:37:                                     ; preds = %30
  %38 = getelementptr inbounds [1025 x i8], [1025 x i8]* %12, i32 0, i32 0
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %40 = call i32 @fputs(i8* %38, %struct._IO_FILE* %39)
  br label %41

; <label>:41:                                     ; preds = %37, %33
  %42 = load i8*, i8** %7, align 8
  %43 = load i32, i32* %13, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  store i8* %45, i8** %6, align 8
  br label %46

; <label>:46:                                     ; preds = %41, %21
  %47 = load i8*, i8** %6, align 8
  ret i8* %47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @SendRequest(%struct.in_addr*, i8*, i32, i8*, i32, i32*) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.in_addr*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i16, align 2
  %23 = alloca i16, align 2
  %24 = alloca i8*, align 8
  %25 = alloca %struct.__sigset_t, align 8
  %26 = alloca %struct.timeval, align 8
  %27 = alloca %struct.HEADER*, align 8
  %28 = alloca %struct.HEADER*, align 8
  %29 = alloca [2 x %struct.iovec], align 16
  %30 = alloca i32, align 4
  %31 = alloca [512 x i8], align 16
  %32 = alloca %struct.sockaddr_in, align 4
  %33 = alloca %struct.sockaddr_in, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  store %struct.in_addr* %0, %struct.in_addr** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32* %5, i32** %13, align 8
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  %37 = load i8*, i8** %9, align 8
  %38 = bitcast i8* %37 to %struct.HEADER*
  store %struct.HEADER* %38, %struct.HEADER** %27, align 8
  %39 = load i8*, i8** %11, align 8
  %40 = bitcast i8* %39 to %struct.HEADER*
  store %struct.HEADER* %40, %struct.HEADER** %28, align 8
  store i32 110, i32* %30, align 4
  %41 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %42 = and i64 %41, 2147483648
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %44, label %52

; <label>:44:                                     ; preds = %6
  %45 = load i32, i32* %10, align 4
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.199, i32 0, i32 0), i32 %45)
  %47 = load i8*, i8** %9, align 8
  %48 = load i8*, i8** %9, align 8
  %49 = load i32, i32* %10, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  call void @Print_query(i8* %47, i8* %51, i32 1)
  br label %52

; <label>:52:                                     ; preds = %44, %6
  %53 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %32, i32 0, i32 0
  store i16 2, i16* %53, align 4
  %54 = load i16, i16* @nsport, align 2
  %55 = call zeroext i16 @htons(i16 zeroext %54) #12
  %56 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %32, i32 0, i32 1
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %32, i32 0, i32 2
  %58 = load %struct.in_addr*, %struct.in_addr** %8, align 8
  %59 = bitcast %struct.in_addr* %57 to i8*
  %60 = bitcast %struct.in_addr* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 4, i1 false)
  %61 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %62 = and i64 %61, 8
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %67, label %64

; <label>:64:                                     ; preds = %52
  %65 = load i32, i32* %10, align 4
  %66 = icmp sgt i32 %65, 512
  br label %67

; <label>:67:                                     ; preds = %64, %52
  %68 = phi i1 [ true, %52 ], [ %66, %64 ]
  %69 = zext i1 %68 to i32
  store i32 %69, i32* %16, align 4
  %70 = load %struct.HEADER*, %struct.HEADER** %27, align 8
  %71 = bitcast %struct.HEADER* %70 to i96*
  %72 = load i96, i96* %71, align 4
  %73 = and i96 %72, 65535
  %74 = trunc i96 %73 to i32
  %75 = trunc i32 %74 to i16
  store i16 %75, i16* %22, align 2
  store i32 0, i32* %15, align 4
  br label %76

; <label>:76:                                     ; preds = %468, %67
  %77 = load i32, i32* %15, align 4
  %78 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 1), align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %471

; <label>:80:                                     ; preds = %76
  br label %81

; <label>:81:                                     ; preds = %440, %80
  %82 = load i32, i32* %16, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %297

; <label>:84:                                     ; preds = %81
  store i32 0, i32* %34, align 4
  %85 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 1), align 4
  store i32 %85, i32* %15, align 4
  %86 = load i32, i32* @s, align 4
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %116

; <label>:88:                                     ; preds = %84
  %89 = call i32 @socket(i32 2, i32 1, i32 0) #9
  store i32 %89, i32* @s, align 4
  %90 = load i32, i32* @s, align 4
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %92, label %100

; <label>:92:                                     ; preds = %88
  %93 = call i32* @__errno_location() #12
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %30, align 4
  %95 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %96 = and i64 %95, 2
  %97 = icmp ne i64 %96, 0
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %92
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.202, i32 0, i32 0))
  br label %99

; <label>:99:                                     ; preds = %98, %92
  br label %468

; <label>:100:                                    ; preds = %88
  %101 = load i32, i32* @s, align 4
  %102 = bitcast %struct.sockaddr_in* %32 to %struct.sockaddr*
  %103 = call i32 @connect(i32 %101, %struct.sockaddr* %102, i32 16)
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %115

; <label>:105:                                    ; preds = %100
  %106 = call i32* @__errno_location() #12
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %30, align 4
  %108 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %109 = and i64 %108, 2
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

; <label>:111:                                    ; preds = %105
  call void @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.203, i32 0, i32 0))
  br label %112

; <label>:112:                                    ; preds = %111, %105
  %113 = load i32, i32* @s, align 4
  %114 = call i32 @close(i32 %113)
  store i32 -1, i32* @s, align 4
  br label %468

; <label>:115:                                    ; preds = %100
  br label %116

; <label>:116:                                    ; preds = %115, %84
  %117 = load i32, i32* %10, align 4
  %118 = trunc i32 %117 to i16
  %119 = bitcast i16* %23 to i8*
  call void @__putshort(i16 zeroext %118, i8* %119)
  %120 = bitcast i16* %23 to i8*
  %121 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %29, i64 0, i64 0
  %122 = getelementptr inbounds %struct.iovec, %struct.iovec* %121, i32 0, i32 0
  store i8* %120, i8** %122, align 16
  %123 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %29, i64 0, i64 0
  %124 = getelementptr inbounds %struct.iovec, %struct.iovec* %123, i32 0, i32 1
  store i64 2, i64* %124, align 8
  %125 = load i8*, i8** %9, align 8
  %126 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %29, i64 0, i64 1
  %127 = getelementptr inbounds %struct.iovec, %struct.iovec* %126, i32 0, i32 0
  store i8* %125, i8** %127, align 16
  %128 = load i32, i32* %10, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %29, i64 0, i64 1
  %131 = getelementptr inbounds %struct.iovec, %struct.iovec* %130, i32 0, i32 1
  store i64 %129, i64* %131, align 8
  %132 = load i32, i32* @s, align 4
  %133 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %29, i32 0, i32 0
  %134 = call i64 @writev(i32 %132, %struct.iovec* %133, i32 2)
  %135 = load i32, i32* %10, align 4
  %136 = add nsw i32 2, %135
  %137 = sext i32 %136 to i64
  %138 = icmp ne i64 %134, %137
  br i1 %138, label %139, label %149

; <label>:139:                                    ; preds = %116
  %140 = call i32* @__errno_location() #12
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %30, align 4
  %142 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %143 = and i64 %142, 2
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %146

; <label>:145:                                    ; preds = %139
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.204, i32 0, i32 0))
  br label %146

; <label>:146:                                    ; preds = %145, %139
  %147 = load i32, i32* @s, align 4
  %148 = call i32 @close(i32 %147)
  store i32 -1, i32* @s, align 4
  br label %468

; <label>:149:                                    ; preds = %116
  %150 = load i8*, i8** %11, align 8
  store i8* %150, i8** %24, align 8
  store i16 2, i16* %23, align 2
  br label %151

; <label>:151:                                    ; preds = %173, %149
  %152 = load i32, i32* @s, align 4
  %153 = load i8*, i8** %24, align 8
  %154 = load i16, i16* %23, align 2
  %155 = zext i16 %154 to i32
  %156 = sext i32 %155 to i64
  %157 = call i64 @read(i32 %152, i8* %153, i64 %156)
  %158 = trunc i64 %157 to i32
  store i32 %158, i32* %14, align 4
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %174

; <label>:160:                                    ; preds = %151
  %161 = load i32, i32* %14, align 4
  %162 = load i8*, i8** %24, align 8
  %163 = sext i32 %161 to i64
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  store i8* %164, i8** %24, align 8
  %165 = load i32, i32* %14, align 4
  %166 = load i16, i16* %23, align 2
  %167 = zext i16 %166 to i32
  %168 = sub nsw i32 %167, %165
  %169 = trunc i32 %168 to i16
  store i16 %169, i16* %23, align 2
  %170 = zext i16 %169 to i32
  %171 = icmp sle i32 %170, 0
  br i1 %171, label %172, label %173

; <label>:172:                                    ; preds = %160
  br label %174

; <label>:173:                                    ; preds = %160
  br label %151

; <label>:174:                                    ; preds = %172, %151
  %175 = load i32, i32* %14, align 4
  %176 = icmp sle i32 %175, 0
  br i1 %176, label %177, label %194

; <label>:177:                                    ; preds = %174
  %178 = call i32* @__errno_location() #12
  %179 = load i32, i32* %178, align 4
  store i32 %179, i32* %30, align 4
  %180 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %181 = and i64 %180, 2
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %184

; <label>:183:                                    ; preds = %177
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.205, i32 0, i32 0))
  br label %184

; <label>:184:                                    ; preds = %183, %177
  %185 = load i32, i32* @s, align 4
  %186 = call i32 @close(i32 %185)
  store i32 -1, i32* @s, align 4
  %187 = load i32, i32* %30, align 4
  %188 = icmp eq i32 %187, 104
  br i1 %188, label %189, label %193

; <label>:189:                                    ; preds = %184
  %190 = load i32, i32* %21, align 4
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %193, label %192

; <label>:192:                                    ; preds = %189
  store i32 1, i32* %21, align 4
  br label %193

; <label>:193:                                    ; preds = %192, %189, %184
  br label %468

; <label>:194:                                    ; preds = %174
  %195 = load i8*, i8** %11, align 8
  store i8* %195, i8** %24, align 8
  %196 = load i8*, i8** %24, align 8
  %197 = call i32 @__ns_get16(i8* %196)
  store i32 %197, i32* %17, align 4
  %198 = load i32, i32* %12, align 4
  %199 = icmp ugt i32 %197, %198
  br i1 %199, label %200, label %210

; <label>:200:                                    ; preds = %194
  %201 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %202 = and i64 %201, 2
  %203 = icmp ne i64 %202, 0
  br i1 %203, label %204, label %207

; <label>:204:                                    ; preds = %200
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %206 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.206, i32 0, i32 0))
  br label %207

; <label>:207:                                    ; preds = %204, %200
  %208 = load i32, i32* %12, align 4
  %209 = trunc i32 %208 to i16
  store i16 %209, i16* %23, align 2
  store i32 1, i32* %34, align 4
  br label %213

; <label>:210:                                    ; preds = %194
  %211 = load i32, i32* %17, align 4
  %212 = trunc i32 %211 to i16
  store i16 %212, i16* %23, align 2
  br label %213

; <label>:213:                                    ; preds = %210, %207
  br label %214

; <label>:214:                                    ; preds = %229, %213
  %215 = load i16, i16* %23, align 2
  %216 = zext i16 %215 to i32
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %227

; <label>:218:                                    ; preds = %214
  %219 = load i32, i32* @s, align 4
  %220 = load i8*, i8** %24, align 8
  %221 = load i16, i16* %23, align 2
  %222 = zext i16 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @read(i32 %219, i8* %220, i64 %223)
  %225 = trunc i64 %224 to i32
  store i32 %225, i32* %14, align 4
  %226 = icmp sgt i32 %225, 0
  br label %227

; <label>:227:                                    ; preds = %218, %214
  %228 = phi i1 [ false, %214 ], [ %226, %218 ]
  br i1 %228, label %229, label %239

; <label>:229:                                    ; preds = %227
  %230 = load i32, i32* %14, align 4
  %231 = load i8*, i8** %24, align 8
  %232 = sext i32 %230 to i64
  %233 = getelementptr inbounds i8, i8* %231, i64 %232
  store i8* %233, i8** %24, align 8
  %234 = load i32, i32* %14, align 4
  %235 = load i16, i16* %23, align 2
  %236 = zext i16 %235 to i32
  %237 = sub nsw i32 %236, %234
  %238 = trunc i32 %237 to i16
  store i16 %238, i16* %23, align 2
  br label %214

; <label>:239:                                    ; preds = %227
  %240 = load i32, i32* %14, align 4
  %241 = icmp sle i32 %240, 0
  br i1 %241, label %242, label %252

; <label>:242:                                    ; preds = %239
  %243 = call i32* @__errno_location() #12
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %30, align 4
  %245 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %246 = and i64 %245, 2
  %247 = icmp ne i64 %246, 0
  br i1 %247, label %248, label %249

; <label>:248:                                    ; preds = %242
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.205, i32 0, i32 0))
  br label %249

; <label>:249:                                    ; preds = %248, %242
  %250 = load i32, i32* @s, align 4
  %251 = call i32 @close(i32 %250)
  store i32 -1, i32* @s, align 4
  br label %468

; <label>:252:                                    ; preds = %239
  %253 = load i32, i32* %34, align 4
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %255, label %296

; <label>:255:                                    ; preds = %252
  %256 = load %struct.HEADER*, %struct.HEADER** %28, align 8
  %257 = bitcast %struct.HEADER* %256 to i96*
  %258 = load i96, i96* %257, align 4
  %259 = and i96 %258, -131073
  %260 = or i96 %259, 131072
  store i96 %260, i96* %257, align 4
  %261 = load i32, i32* %17, align 4
  %262 = load i32, i32* %12, align 4
  %263 = sub i32 %261, %262
  %264 = trunc i32 %263 to i16
  store i16 %264, i16* %23, align 2
  br label %265

; <label>:265:                                    ; preds = %294, %255
  %266 = load i16, i16* %23, align 2
  %267 = zext i16 %266 to i32
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %269, label %295

; <label>:269:                                    ; preds = %265
  %270 = load i16, i16* %23, align 2
  %271 = zext i16 %270 to i64
  %272 = icmp ugt i64 %271, 512
  br i1 %272, label %273, label %274

; <label>:273:                                    ; preds = %269
  br label %277

; <label>:274:                                    ; preds = %269
  %275 = load i16, i16* %23, align 2
  %276 = zext i16 %275 to i64
  br label %277

; <label>:277:                                    ; preds = %274, %273
  %278 = phi i64 [ 512, %273 ], [ %276, %274 ]
  %279 = trunc i64 %278 to i32
  store i32 %279, i32* %14, align 4
  %280 = load i32, i32* @s, align 4
  %281 = getelementptr inbounds [512 x i8], [512 x i8]* %31, i32 0, i32 0
  %282 = load i32, i32* %14, align 4
  %283 = sext i32 %282 to i64
  %284 = call i64 @read(i32 %280, i8* %281, i64 %283)
  %285 = trunc i64 %284 to i32
  store i32 %285, i32* %14, align 4
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %287, label %293

; <label>:287:                                    ; preds = %277
  %288 = load i32, i32* %14, align 4
  %289 = load i16, i16* %23, align 2
  %290 = zext i16 %289 to i32
  %291 = sub nsw i32 %290, %288
  %292 = trunc i32 %291 to i16
  store i16 %292, i16* %23, align 2
  br label %294

; <label>:293:                                    ; preds = %277
  br label %295

; <label>:294:                                    ; preds = %287
  br label %265

; <label>:295:                                    ; preds = %293, %265
  br label %296

; <label>:296:                                    ; preds = %295, %252
  br label %444

; <label>:297:                                    ; preds = %81
  %298 = load i32, i32* @s, align 4
  %299 = icmp slt i32 %298, 0
  br i1 %299, label %300, label %313

; <label>:300:                                    ; preds = %297
  %301 = call i32 @socket(i32 2, i32 2, i32 0) #9
  store i32 %301, i32* @s, align 4
  %302 = load i32, i32* @s, align 4
  %303 = icmp slt i32 %302, 0
  br i1 %303, label %304, label %312

; <label>:304:                                    ; preds = %300
  %305 = call i32* @__errno_location() #12
  %306 = load i32, i32* %305, align 4
  store i32 %306, i32* %30, align 4
  %307 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %308 = and i64 %307, 2
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %311

; <label>:310:                                    ; preds = %304
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.207, i32 0, i32 0))
  br label %311

; <label>:311:                                    ; preds = %310, %304
  br label %468

; <label>:312:                                    ; preds = %300
  br label %313

; <label>:313:                                    ; preds = %312, %297
  %314 = load i32, i32* @s, align 4
  %315 = load i8*, i8** %9, align 8
  %316 = load i32, i32* %10, align 4
  %317 = sext i32 %316 to i64
  %318 = bitcast %struct.sockaddr_in* %32 to %struct.sockaddr*
  %319 = call i64 @sendto(i32 %314, i8* %315, i64 %317, i32 0, %struct.sockaddr* %318, i32 16)
  %320 = load i32, i32* %10, align 4
  %321 = sext i32 %320 to i64
  %322 = icmp ne i64 %319, %321
  br i1 %322, label %323, label %329

; <label>:323:                                    ; preds = %313
  %324 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %325 = and i64 %324, 2
  %326 = icmp ne i64 %325, 0
  br i1 %326, label %327, label %328

; <label>:327:                                    ; preds = %323
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.208, i32 0, i32 0))
  br label %328

; <label>:328:                                    ; preds = %327, %323
  br label %468

; <label>:329:                                    ; preds = %313
  %330 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 0), align 8
  %331 = load i32, i32* %15, align 4
  %332 = shl i32 %330, %331
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0
  %336 = load i64, i64* %335, align 8
  %337 = icmp sle i64 %336, 0
  br i1 %337, label %338, label %340

; <label>:338:                                    ; preds = %329
  %339 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0
  store i64 1, i64* %339, align 8
  br label %340

; <label>:340:                                    ; preds = %338, %329
  %341 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 1
  store i64 0, i64* %341, align 8
  br label %342

; <label>:342:                                    ; preds = %421, %340
  br label %343

; <label>:343:                                    ; preds = %342
  %344 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %25, i32 0, i32 0
  %345 = getelementptr inbounds [16 x i64], [16 x i64]* %344, i64 0, i64 0
  %346 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %345) #9, !srcloc !4
  %347 = extractvalue { i64, i64* } %346, 0
  %348 = extractvalue { i64, i64* } %346, 1
  %349 = trunc i64 %347 to i32
  store i32 %349, i32* %35, align 4
  %350 = ptrtoint i64* %348 to i64
  %351 = trunc i64 %350 to i32
  store i32 %351, i32* %36, align 4
  br label %352

; <label>:352:                                    ; preds = %343
  %353 = load i32, i32* @s, align 4
  %354 = srem i32 %353, 64
  %355 = zext i32 %354 to i64
  %356 = shl i64 1, %355
  %357 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %25, i32 0, i32 0
  %358 = load i32, i32* @s, align 4
  %359 = sdiv i32 %358, 64
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [16 x i64], [16 x i64]* %357, i64 0, i64 %360
  %362 = load i64, i64* %361, align 8
  %363 = or i64 %362, %356
  store i64 %363, i64* %361, align 8
  %364 = load i32, i32* @s, align 4
  %365 = add nsw i32 %364, 1
  %366 = call i32 @select(i32 %365, %struct.__sigset_t* %25, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timeval* %26)
  store i32 %366, i32* %14, align 4
  %367 = load i32, i32* %14, align 4
  %368 = icmp slt i32 %367, 0
  br i1 %368, label %369, label %375

; <label>:369:                                    ; preds = %352
  %370 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %371 = and i64 %370, 2
  %372 = icmp ne i64 %371, 0
  br i1 %372, label %373, label %374

; <label>:373:                                    ; preds = %369
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.209, i32 0, i32 0))
  br label %374

; <label>:374:                                    ; preds = %373, %369
  br label %468

; <label>:375:                                    ; preds = %352
  %376 = load i32, i32* %14, align 4
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %385

; <label>:378:                                    ; preds = %375
  %379 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %380 = and i64 %379, 2
  %381 = icmp ne i64 %380, 0
  br i1 %381, label %382, label %384

; <label>:382:                                    ; preds = %378
  %383 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.210, i32 0, i32 0))
  br label %384

; <label>:384:                                    ; preds = %382, %378
  br label %468

; <label>:385:                                    ; preds = %375
  store i32 16, i32* %18, align 4
  %386 = load i32, i32* @s, align 4
  %387 = load i8*, i8** %11, align 8
  %388 = load i32, i32* %12, align 4
  %389 = zext i32 %388 to i64
  %390 = bitcast %struct.sockaddr_in* %33 to %struct.sockaddr*
  %391 = call i64 @recvfrom(i32 %386, i8* %387, i64 %389, i32 0, %struct.sockaddr* %390, i32* %18)
  %392 = trunc i64 %391 to i32
  store i32 %392, i32* %17, align 4
  %393 = load i32, i32* %17, align 4
  %394 = icmp sle i32 %393, 0
  br i1 %394, label %395, label %401

; <label>:395:                                    ; preds = %385
  %396 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %397 = and i64 %396, 2
  %398 = icmp ne i64 %397, 0
  br i1 %398, label %399, label %400

; <label>:399:                                    ; preds = %395
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.211, i32 0, i32 0))
  br label %400

; <label>:400:                                    ; preds = %399, %395
  br label %468

; <label>:401:                                    ; preds = %385
  store i32 1, i32* %19, align 4
  %402 = load i16, i16* %22, align 2
  %403 = zext i16 %402 to i32
  %404 = load %struct.HEADER*, %struct.HEADER** %28, align 8
  %405 = bitcast %struct.HEADER* %404 to i96*
  %406 = load i96, i96* %405, align 4
  %407 = and i96 %406, 65535
  %408 = trunc i96 %407 to i32
  %409 = icmp ne i32 %403, %408
  br i1 %409, label %410, label %422

; <label>:410:                                    ; preds = %401
  %411 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %412 = and i64 %411, 2147483648
  %413 = icmp ne i64 %412, 0
  br i1 %413, label %414, label %421

; <label>:414:                                    ; preds = %410
  %415 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.212, i32 0, i32 0))
  %416 = load i8*, i8** %11, align 8
  %417 = load i8*, i8** %11, align 8
  %418 = load i32, i32* %17, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %417, i64 %419
  call void @Print_query(i8* %416, i8* %420, i32 1)
  br label %421

; <label>:421:                                    ; preds = %414, %410
  br label %342

; <label>:422:                                    ; preds = %401
  %423 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %424 = and i64 %423, 32
  %425 = icmp ne i64 %424, 0
  br i1 %425, label %443, label %426

; <label>:426:                                    ; preds = %422
  %427 = load %struct.HEADER*, %struct.HEADER** %28, align 8
  %428 = bitcast %struct.HEADER* %427 to i96*
  %429 = load i96, i96* %428, align 4
  %430 = lshr i96 %429, 17
  %431 = and i96 %430, 1
  %432 = trunc i96 %431 to i32
  %433 = icmp ne i32 %432, 0
  br i1 %433, label %434, label %443

; <label>:434:                                    ; preds = %426
  %435 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %436 = and i64 %435, 2
  %437 = icmp ne i64 %436, 0
  br i1 %437, label %438, label %440

; <label>:438:                                    ; preds = %434
  %439 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.213, i32 0, i32 0))
  br label %440

; <label>:440:                                    ; preds = %438, %434
  %441 = load i32, i32* @s, align 4
  %442 = call i32 @close(i32 %441)
  store i32 -1, i32* @s, align 4
  store i32 1, i32* %16, align 4
  br label %81

; <label>:443:                                    ; preds = %426, %422
  br label %444

; <label>:444:                                    ; preds = %443, %296
  %445 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %446 = and i64 %445, 2
  %447 = icmp ne i64 %446, 0
  br i1 %447, label %448, label %463

; <label>:448:                                    ; preds = %444
  %449 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @res, i32 0, i32 2), align 8
  %450 = and i64 %449, 2147483648
  %451 = icmp ne i64 %450, 0
  br i1 %451, label %452, label %455

; <label>:452:                                    ; preds = %448
  %453 = load i32, i32* %17, align 4
  %454 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.214, i32 0, i32 0), i32 %453)
  br label %457

; <label>:455:                                    ; preds = %448
  %456 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14.215, i32 0, i32 0))
  br label %457

; <label>:457:                                    ; preds = %455, %452
  %458 = load i8*, i8** %11, align 8
  %459 = load i8*, i8** %11, align 8
  %460 = load i32, i32* %17, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i8, i8* %459, i64 %461
  call void @Print_query(i8* %458, i8* %462, i32 1)
  br label %463

; <label>:463:                                    ; preds = %457, %444
  %464 = load i32, i32* @s, align 4
  %465 = call i32 @close(i32 %464)
  store i32 -1, i32* @s, align 4
  %466 = load i32, i32* %17, align 4
  %467 = load i32*, i32** %13, align 8
  store i32 %466, i32* %467, align 4
  store i32 0, i32* %7, align 4
  br label %491

; <label>:468:                                    ; preds = %400, %384, %374, %328, %311, %249, %193, %146, %112, %99
  %469 = load i32, i32* %15, align 4
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %15, align 4
  br label %76

; <label>:471:                                    ; preds = %76
  %472 = load i32, i32* @s, align 4
  %473 = icmp sge i32 %472, 0
  br i1 %473, label %474, label %477

; <label>:474:                                    ; preds = %471
  %475 = load i32, i32* @s, align 4
  %476 = call i32 @close(i32 %475)
  store i32 -1, i32* @s, align 4
  br label %477

; <label>:477:                                    ; preds = %474, %471
  %478 = load i32, i32* %16, align 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %485

; <label>:480:                                    ; preds = %477
  %481 = load i32, i32* %19, align 4
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %484

; <label>:483:                                    ; preds = %480
  store i32 -5, i32* %7, align 4
  br label %491

; <label>:484:                                    ; preds = %480
  store i32 -1, i32* %7, align 4
  br label %491

; <label>:485:                                    ; preds = %477
  %486 = call i32* @__errno_location() #12
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 111
  br i1 %488, label %489, label %490

; <label>:489:                                    ; preds = %485
  store i32 -5, i32* %7, align 4
  br label %491

; <label>:490:                                    ; preds = %485
  store i32 -3, i32* %7, align 4
  br label %491

; <label>:491:                                    ; preds = %490, %489, %484, %483, %463
  %492 = load i32, i32* %7, align 4
  ret i32 %492
}

; Function Attrs: nounwind
declare dso_local i32 @socket(i32, i32, i32) #4

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #6

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @writev(i32, %struct.iovec*, i32) #1

declare dso_local i64 @read(i32, i8*, i64) #1

declare dso_local i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @select(i32, %struct.__sigset_t*, %struct.__sigset_t*, %struct.__sigset_t*, %struct.timeval*) #1

declare dso_local i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @SendRequest_close() #0 {
  %1 = load i32, i32* @s, align 4
  %2 = icmp ne i32 %1, -1
  br i1 %2, label %3, label %6

; <label>:3:                                      ; preds = %0
  %4 = load i32, i32* @s, align 4
  %5 = call i32 @close(i32 %4)
  store i32 -1, i32* @s, align 4
  br label %6

; <label>:6:                                      ; preds = %3, %0
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @res_skip(i8*, i32, i8*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.HEADER*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = bitcast i8* %12 to %struct.HEADER*
  store %struct.HEADER* %13, %struct.HEADER** %9, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 12
  store i8* %15, i8** %8, align 8
  %16 = load %struct.HEADER*, %struct.HEADER** %9, align 8
  %17 = bitcast %struct.HEADER* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = lshr i96 %18, 32
  %20 = and i96 %19, 65535
  %21 = trunc i96 %20 to i32
  %22 = trunc i32 %21 to i16
  %23 = call zeroext i16 @ntohs(i16 zeroext %22) #12
  %24 = zext i16 %23 to i32
  store i32 %24, i32* %11, align 4
  %25 = load i32, i32* %11, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %55

; <label>:27:                                     ; preds = %3
  br label %28

; <label>:28:                                     ; preds = %45, %27
  %29 = load i32, i32* %11, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %11, align 4
  %31 = icmp sge i32 %30, 0
  br i1 %31, label %32, label %36

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %8, align 8
  %34 = load i8*, i8** %7, align 8
  %35 = icmp ult i8* %33, %34
  br label %36

; <label>:36:                                     ; preds = %32, %28
  %37 = phi i1 [ false, %28 ], [ %35, %32 ]
  br i1 %37, label %38, label %54

; <label>:38:                                     ; preds = %36
  %39 = load i8*, i8** %8, align 8
  %40 = load i8*, i8** %7, align 8
  %41 = call i32 @__dn_skipname(i8* %39, i8* %40)
  store i32 %41, i32* %10, align 4
  %42 = load i32, i32* %10, align 4
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %45

; <label>:44:                                     ; preds = %38
  store i8* null, i8** %4, align 8
  br label %170

; <label>:45:                                     ; preds = %38
  %46 = load i32, i32* %10, align 4
  %47 = load i8*, i8** %8, align 8
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %8, align 8
  %50 = load i8*, i8** %8, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 2
  store i8* %51, i8** %8, align 8
  %52 = load i8*, i8** %8, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 2
  store i8* %53, i8** %8, align 8
  br label %28

; <label>:54:                                     ; preds = %36
  br label %55

; <label>:55:                                     ; preds = %54, %3
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %6, align 4
  %58 = icmp sle i32 %57, 0
  br i1 %58, label %59, label %61

; <label>:59:                                     ; preds = %55
  %60 = load i8*, i8** %8, align 8
  store i8* %60, i8** %4, align 8
  br label %170

; <label>:61:                                     ; preds = %55
  %62 = load %struct.HEADER*, %struct.HEADER** %9, align 8
  %63 = bitcast %struct.HEADER* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = lshr i96 %64, 48
  %66 = and i96 %65, 65535
  %67 = trunc i96 %66 to i32
  %68 = trunc i32 %67 to i16
  %69 = call zeroext i16 @ntohs(i16 zeroext %68) #12
  %70 = zext i16 %69 to i32
  store i32 %70, i32* %11, align 4
  %71 = load i32, i32* %11, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %93

; <label>:73:                                     ; preds = %61
  br label %74

; <label>:74:                                     ; preds = %91, %73
  %75 = load i32, i32* %11, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %11, align 4
  %77 = icmp sge i32 %76, 0
  br i1 %77, label %78, label %82

; <label>:78:                                     ; preds = %74
  %79 = load i8*, i8** %8, align 8
  %80 = load i8*, i8** %7, align 8
  %81 = icmp ult i8* %79, %80
  br label %82

; <label>:82:                                     ; preds = %78, %74
  %83 = phi i1 [ false, %74 ], [ %81, %78 ]
  br i1 %83, label %84, label %92

; <label>:84:                                     ; preds = %82
  %85 = load i8*, i8** %8, align 8
  %86 = load i8*, i8** %7, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %87 = call i8* @res_skip_rr(i8* %85, i8* %86)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %87, i8** %8, align 8
  %88 = load i8*, i8** %8, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %91

; <label>:90:                                     ; preds = %84
  store i8* null, i8** %4, align 8
  br label %170

; <label>:91:                                     ; preds = %84
  br label %74

; <label>:92:                                     ; preds = %82
  br label %93

; <label>:93:                                     ; preds = %92, %61
  %94 = load i32, i32* %6, align 4
  %95 = add nsw i32 %94, -1
  store i32 %95, i32* %6, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

; <label>:97:                                     ; preds = %93
  %98 = load i8*, i8** %8, align 8
  store i8* %98, i8** %4, align 8
  br label %170

; <label>:99:                                     ; preds = %93
  %100 = load %struct.HEADER*, %struct.HEADER** %9, align 8
  %101 = bitcast %struct.HEADER* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = lshr i96 %102, 64
  %104 = and i96 %103, 65535
  %105 = trunc i96 %104 to i32
  %106 = trunc i32 %105 to i16
  %107 = call zeroext i16 @ntohs(i16 zeroext %106) #12
  %108 = zext i16 %107 to i32
  store i32 %108, i32* %11, align 4
  %109 = load i32, i32* %11, align 4
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %131

; <label>:111:                                    ; preds = %99
  br label %112

; <label>:112:                                    ; preds = %129, %111
  %113 = load i32, i32* %11, align 4
  %114 = add nsw i32 %113, -1
  store i32 %114, i32* %11, align 4
  %115 = icmp sge i32 %114, 0
  br i1 %115, label %116, label %120

; <label>:116:                                    ; preds = %112
  %117 = load i8*, i8** %8, align 8
  %118 = load i8*, i8** %7, align 8
  %119 = icmp ult i8* %117, %118
  br label %120

; <label>:120:                                    ; preds = %116, %112
  %121 = phi i1 [ false, %112 ], [ %119, %116 ]
  br i1 %121, label %122, label %130

; <label>:122:                                    ; preds = %120
  %123 = load i8*, i8** %8, align 8
  %124 = load i8*, i8** %7, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %125 = call i8* @res_skip_rr(i8* %123, i8* %124)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %125, i8** %8, align 8
  %126 = load i8*, i8** %8, align 8
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %129

; <label>:128:                                    ; preds = %122
  store i8* null, i8** %4, align 8
  br label %170

; <label>:129:                                    ; preds = %122
  br label %112

; <label>:130:                                    ; preds = %120
  br label %131

; <label>:131:                                    ; preds = %130, %99
  %132 = load i32, i32* %6, align 4
  %133 = add nsw i32 %132, -1
  store i32 %133, i32* %6, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

; <label>:135:                                    ; preds = %131
  %136 = load i8*, i8** %8, align 8
  store i8* %136, i8** %4, align 8
  br label %170

; <label>:137:                                    ; preds = %131
  %138 = load %struct.HEADER*, %struct.HEADER** %9, align 8
  %139 = bitcast %struct.HEADER* %138 to i96*
  %140 = load i96, i96* %139, align 4
  %141 = lshr i96 %140, 80
  %142 = trunc i96 %141 to i32
  %143 = trunc i32 %142 to i16
  %144 = call zeroext i16 @ntohs(i16 zeroext %143) #12
  %145 = zext i16 %144 to i32
  store i32 %145, i32* %11, align 4
  %146 = load i32, i32* %11, align 4
  %147 = icmp sgt i32 %146, 0
  br i1 %147, label %148, label %168

; <label>:148:                                    ; preds = %137
  br label %149

; <label>:149:                                    ; preds = %166, %148
  %150 = load i32, i32* %11, align 4
  %151 = add nsw i32 %150, -1
  store i32 %151, i32* %11, align 4
  %152 = icmp sge i32 %151, 0
  br i1 %152, label %153, label %157

; <label>:153:                                    ; preds = %149
  %154 = load i8*, i8** %8, align 8
  %155 = load i8*, i8** %7, align 8
  %156 = icmp ult i8* %154, %155
  br label %157

; <label>:157:                                    ; preds = %153, %149
  %158 = phi i1 [ false, %149 ], [ %156, %153 ]
  br i1 %158, label %159, label %167

; <label>:159:                                    ; preds = %157
  %160 = load i8*, i8** %8, align 8
  %161 = load i8*, i8** %7, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %162 = call i8* @res_skip_rr(i8* %160, i8* %161)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %162, i8** %8, align 8
  %163 = load i8*, i8** %8, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %166

; <label>:165:                                    ; preds = %159
  store i8* null, i8** %4, align 8
  br label %170

; <label>:166:                                    ; preds = %159
  br label %149

; <label>:167:                                    ; preds = %157
  br label %168

; <label>:168:                                    ; preds = %167, %137
  %169 = load i8*, i8** %8, align 8
  store i8* %169, i8** %4, align 8
  br label %170

; <label>:170:                                    ; preds = %168, %165, %135, %128, %97, %90, %59, %44
  %171 = load i8*, i8** %4, align 8
  ret i8* %171
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @res_skip_rr(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call i32 @__dn_skipname(i8* %8, i8* %9)
  store i32 %10, i32* %6, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %2
  store i8* null, i8** %3, align 8
  br label %44

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* %6, align 4
  %15 = load i8*, i8** %4, align 8
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  store i8* %17, i8** %4, align 8
  %18 = load i8*, i8** %4, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 10
  %20 = load i8*, i8** %5, align 8
  %21 = icmp ugt i8* %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %13
  store i8* null, i8** %3, align 8
  br label %44

; <label>:23:                                     ; preds = %13
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 2
  store i8* %25, i8** %4, align 8
  %26 = load i8*, i8** %4, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  store i8* %27, i8** %4, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  store i8* %29, i8** %4, align 8
  %30 = load i8*, i8** %4, align 8
  %31 = call i32 @__ns_get16(i8* %30)
  store i32 %31, i32* %7, align 4
  %32 = load i8*, i8** %4, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 2
  store i8* %33, i8** %4, align 8
  %34 = load i32, i32* %7, align 4
  %35 = load i8*, i8** %4, align 8
  %36 = sext i32 %34 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %4, align 8
  %38 = load i8*, i8** %4, align 8
  %39 = load i8*, i8** %5, align 8
  %40 = icmp ugt i8* %38, %39
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %23
  store i8* null, i8** %3, align 8
  br label %44

; <label>:42:                                     ; preds = %23
  %43 = load i8*, i8** %4, align 8
  store i8* %43, i8** %3, align 8
  br label %44

; <label>:44:                                     ; preds = %42, %41, %22, %12
  %45 = load i8*, i8** %3, align 8
  ret i8* %45
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ListHostsByType(i8*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca [256 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %12 = load i8*, i8** %3, align 8
  %13 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @matchString to i32 (i8*, i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.218, i32 0, i32 0), i8* %12)
  store i32 %13, i32* %8, align 4
  %14 = load i32, i32* %8, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %42

; <label>:16:                                     ; preds = %2
  %17 = load i8*, i8** %3, align 8
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %22 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %20, i8* %21, i64 256)
  store i32 %22, i32* %9, align 4
  %23 = load i32, i32* %9, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %40

; <label>:25:                                     ; preds = %16
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %34 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %32, i8* %33, i64 256)
  store i32 %34, i32* %9, align 4
  %35 = load i32, i32* %9, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %25
  store i32 2, i32* %8, align 4
  br label %39

; <label>:38:                                     ; preds = %25
  store i32 1, i32* %8, align 4
  br label %39

; <label>:39:                                     ; preds = %38, %37
  br label %41

; <label>:40:                                     ; preds = %16
  store i32 0, i32* %8, align 4
  br label %41

; <label>:41:                                     ; preds = %40, %39
  br label %42

; <label>:42:                                     ; preds = %41, %2
  %43 = load i32, i32* %4, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %56

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %8, align 4
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %56

; <label>:48:                                     ; preds = %45
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  %50 = load i8, i8* %49, align 16
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 62
  br i1 %52, label %53, label %56

; <label>:53:                                     ; preds = %48
  %54 = load i32, i32* %8, align 4
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %8, align 4
  br label %56

; <label>:56:                                     ; preds = %53, %48, %45, %42
  %57 = load i32, i32* %8, align 4
  %58 = icmp eq i32 %57, 2
  br i1 %58, label %59, label %68

; <label>:59:                                     ; preds = %56
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %62 = call i32 (i8*, i32, %struct._IO_FILE*, ...) bitcast (i32 (i8*, i32, %struct._IO_FILE*)* @StringToType to i32 (i8*, i32, %struct._IO_FILE*, ...)*)(i8* %60, i32 -1, %struct._IO_FILE* %61)
  store i32 %62, i32* %10, align 4
  %63 = load i32, i32* %10, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %66

; <label>:65:                                     ; preds = %59
  br label %98

; <label>:66:                                     ; preds = %59
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  store i8* %67, i8** %5, align 8
  br label %79

; <label>:68:                                     ; preds = %56
  %69 = load i32, i32* %8, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %74

; <label>:71:                                     ; preds = %68
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  store i8* %72, i8** %5, align 8
  %73 = load i32, i32* @queryType, align 4
  store i32 %73, i32* %10, align 4
  br label %78

; <label>:74:                                     ; preds = %68
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %76 = load i8*, i8** %3, align 8
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.219, i32 0, i32 0), i8* %76)
  br label %98

; <label>:78:                                     ; preds = %71
  br label %79

; <label>:79:                                     ; preds = %78, %66
  %80 = load i32, i32* %10, align 4
  %81 = load i8*, i8** %5, align 8
  %82 = load i32, i32* %4, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %86

; <label>:84:                                     ; preds = %79
  %85 = load i8*, i8** %3, align 8
  br label %87

; <label>:86:                                     ; preds = %79
  br label %87

; <label>:87:                                     ; preds = %86, %84
  %88 = phi i8* [ %85, %84 ], [ null, %86 ]
  %89 = call i32 @ListSubr(i32 %80, i8* %81, i8* %88)
  store i32 %89, i32* %11, align 4
  %90 = load i32, i32* %11, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %98

; <label>:92:                                     ; preds = %87
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %94 = load i8*, i8** %5, align 8
  %95 = load i32, i32* %11, align 4
  %96 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeError to i8* (i32, ...)*)(i32 %95)
  %97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.220, i32 0, i32 0), i8* %94, i8* %96)
  br label %98

; <label>:98:                                     ; preds = %92, %87, %74, %65
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @ListSubr(i32, i8*, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__ns_msg, align 8
  %9 = alloca %union.querybuf.33, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca %struct.HEADER*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca [2 x i8], align 1
  %22 = alloca i8*, align 8
  %23 = alloca [2 x [256 x i8]], align 16
  %24 = alloca [4096 x i8], align 16
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca [2048 x i8], align 16
  %29 = alloca %struct.__ns_rr, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %25, align 4
  %30 = load i8*, i8** %6, align 8
  %31 = load i32, i32* @queryClass, align 4
  %32 = bitcast %union.querybuf.33* %9 to [512 x i8]*
  %33 = getelementptr inbounds [512 x i8], [512 x i8]* %32, i32 0, i32 0
  %34 = call i32 @__res_nmkquery(%struct.__res_state* @res, i32 0, i8* %30, i32 %31, i32 252, i8* null, i32 0, i8* null, i8* %33, i32 512)
  store i32 %34, i32* %12, align 4
  %35 = load i32, i32* %12, align 4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %45

; <label>:37:                                     ; preds = %3
  %38 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 2), align 8
  %39 = and i64 %38, 2
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %44

; <label>:41:                                     ; preds = %37
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.221, i32 0, i32 0))
  br label %44

; <label>:44:                                     ; preds = %41, %37
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:45:                                     ; preds = %3
  %46 = bitcast %struct.sockaddr_in* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 16, i1 false)
  %47 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  store i16 2, i16* %47, align 4
  %48 = load i16, i16* @nsport, align 2
  %49 = call zeroext i16 @htons(i16 zeroext %48) #12
  %50 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i16 %49, i16* %50, align 2
  %51 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %52 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %51, i32 0, i32 2
  %53 = load i8**, i8*** %52, align 8
  %54 = icmp ne i8** %53, null
  br i1 %54, label %55, label %65

; <label>:55:                                     ; preds = %45
  %56 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %57 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %58 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %57, i32 0, i32 2
  %59 = load i8**, i8*** %58, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast i8* %61 to %struct.in_addr*
  %63 = bitcast %struct.in_addr* %56 to i8*
  %64 = bitcast %struct.in_addr* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 4, i1 false)
  br label %79

; <label>:65:                                     ; preds = %45
  %66 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %67 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %68 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %67, i32 0, i32 5
  %69 = load %struct.ServerInfo**, %struct.ServerInfo*** %68, align 8
  %70 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %69, i64 0
  %71 = load %struct.ServerInfo*, %struct.ServerInfo** %70, align 8
  %72 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %71, i32 0, i32 2
  %73 = load i8**, i8*** %72, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 0
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast i8* %75 to %struct.in_addr*
  %77 = bitcast %struct.in_addr* %66 to i8*
  %78 = bitcast %struct.in_addr* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 4, i1 false)
  br label %79

; <label>:79:                                     ; preds = %65, %55
  %80 = call i32 @socket(i32 2, i32 1, i32 0) #9
  store i32 %80, i32* @sockFD, align 4
  %81 = load i32, i32* @sockFD, align 4
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %79
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.222, i32 0, i32 0))
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:84:                                     ; preds = %79
  %85 = load i32, i32* @sockFD, align 4
  %86 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %87 = call i32 @connect(i32 %85, %struct.sockaddr* %86, i32 16)
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %99

; <label>:89:                                     ; preds = %84
  %90 = call i32* @__errno_location() #12
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 111
  br i1 %92, label %93, label %94

; <label>:93:                                     ; preds = %89
  store i32 -5, i32* %26, align 4
  br label %95

; <label>:94:                                     ; preds = %89
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.223, i32 0, i32 0))
  store i32 -3, i32* %26, align 4
  br label %95

; <label>:95:                                     ; preds = %94, %93
  %96 = load i32, i32* @sockFD, align 4
  %97 = call i32 @close(i32 %96)
  store i32 -1, i32* @sockFD, align 4
  %98 = load i32, i32* %26, align 4
  store i32 %98, i32* %4, align 4
  br label %471

; <label>:99:                                     ; preds = %84
  %100 = load i32, i32* %12, align 4
  %101 = getelementptr inbounds [2 x i8], [2 x i8]* %21, i32 0, i32 0
  call void @__ns_put16(i32 %100, i8* %101)
  %102 = load i32, i32* @sockFD, align 4
  %103 = getelementptr inbounds [2 x i8], [2 x i8]* %21, i32 0, i32 0
  %104 = call i64 @write(i32 %102, i8* %103, i64 2)
  %105 = icmp ne i64 %104, 2
  br i1 %105, label %116, label %106

; <label>:106:                                    ; preds = %99
  %107 = load i32, i32* @sockFD, align 4
  %108 = bitcast %union.querybuf.33* %9 to [512 x i8]*
  %109 = getelementptr inbounds [512 x i8], [512 x i8]* %108, i32 0, i32 0
  %110 = load i32, i32* %12, align 4
  %111 = sext i32 %110 to i64
  %112 = call i64 @write(i32 %107, i8* %109, i64 %111)
  %113 = load i32, i32* %12, align 4
  %114 = sext i32 %113 to i64
  %115 = icmp ne i64 %112, %114
  br i1 %115, label %116, label %119

; <label>:116:                                    ; preds = %106, %99
  call void @perror(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.224, i32 0, i32 0))
  %117 = load i32, i32* @sockFD, align 4
  %118 = call i32 @close(i32 %117)
  store i32 -1, i32* @sockFD, align 4
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:119:                                    ; preds = %106
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %121 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %122 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %121, i32 0, i32 2
  %123 = load i8**, i8*** %122, align 8
  %124 = icmp ne i8** %123, null
  br i1 %124, label %125, label %129

; <label>:125:                                    ; preds = %119
  %126 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %127 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  br label %137

; <label>:129:                                    ; preds = %119
  %130 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %131 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %130, i32 0, i32 5
  %132 = load %struct.ServerInfo**, %struct.ServerInfo*** %131, align 8
  %133 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %132, i64 0
  %134 = load %struct.ServerInfo*, %struct.ServerInfo** %133, align 8
  %135 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %134, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  br label %137

; <label>:137:                                    ; preds = %129, %125
  %138 = phi i8* [ %128, %125 ], [ %136, %129 ]
  %139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %120, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.225, i32 0, i32 0), i8* %138)
  %140 = load i8*, i8** %7, align 8
  %141 = icmp eq i8* %140, null
  br i1 %141, label %142, label %144

; <label>:142:                                    ; preds = %137
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %143, %struct._IO_FILE** @filePtr, align 8
  br label %180

; <label>:144:                                    ; preds = %137
  %145 = load i8*, i8** %7, align 8
  %146 = getelementptr inbounds [4096 x i8], [4096 x i8]* %24, i32 0, i32 0
  %147 = call %struct._IO_FILE* (i8*, i8*, i64, ...) bitcast (%struct._IO_FILE* (i8*, i8*, i64)* @OpenFile to %struct._IO_FILE* (i8*, i8*, i64, ...)*)(i8* %145, i8* %146, i64 4096)
  store %struct._IO_FILE* %147, %struct._IO_FILE** @filePtr, align 8
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %149 = icmp eq %struct._IO_FILE* %148, null
  br i1 %149, label %150, label %156

; <label>:150:                                    ; preds = %144
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %152 = getelementptr inbounds [4096 x i8], [4096 x i8]* %24, i32 0, i32 0
  %153 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %151, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.226, i32 0, i32 0), i8* %152)
  %154 = load i32, i32* @sockFD, align 4
  %155 = call i32 @close(i32 %154)
  store i32 -1, i32* @sockFD, align 4
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:156:                                    ; preds = %144
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %158 = load i8*, i8** %7, align 8
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %157, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.227, i32 0, i32 0), i8* %158)
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %161 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %162 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %161, i32 0, i32 2
  %163 = load i8**, i8*** %162, align 8
  %164 = icmp ne i8** %163, null
  br i1 %164, label %165, label %169

; <label>:165:                                    ; preds = %156
  %166 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %167 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %166, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  br label %177

; <label>:169:                                    ; preds = %156
  %170 = load %struct.HostInfo*, %struct.HostInfo** @defaultPtr, align 8
  %171 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %170, i32 0, i32 5
  %172 = load %struct.ServerInfo**, %struct.ServerInfo*** %171, align 8
  %173 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %172, i64 0
  %174 = load %struct.ServerInfo*, %struct.ServerInfo** %173, align 8
  %175 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %174, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  br label %177

; <label>:177:                                    ; preds = %169, %165
  %178 = phi i8* [ %168, %165 ], [ %176, %169 ]
  %179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.225, i32 0, i32 0), i8* %178)
  br label %180

; <label>:180:                                    ; preds = %177, %142
  store i32 0, i32* %17, align 4
  br label %181

; <label>:181:                                    ; preds = %393, %180
  %182 = load i32, i32* %17, align 4
  %183 = icmp slt i32 %182, 2
  br i1 %183, label %184, label %394

; <label>:184:                                    ; preds = %181
  %185 = getelementptr inbounds [2 x i8], [2 x i8]* %21, i32 0, i32 0
  store i8* %185, i8** %22, align 8
  store i32 2, i32* %13, align 4
  br label %186

; <label>:186:                                    ; preds = %199, %184
  %187 = load i32, i32* %13, align 4
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %189, label %197

; <label>:189:                                    ; preds = %186
  %190 = load i32, i32* @sockFD, align 4
  %191 = load i8*, i8** %22, align 8
  %192 = load i32, i32* %13, align 4
  %193 = sext i32 %192 to i64
  %194 = call i64 @read(i32 %190, i8* %191, i64 %193)
  %195 = trunc i64 %194 to i32
  store i32 %195, i32* %14, align 4
  %196 = icmp sgt i32 %195, 0
  br label %197

; <label>:197:                                    ; preds = %189, %186
  %198 = phi i1 [ false, %186 ], [ %196, %189 ]
  br i1 %198, label %199, label %207

; <label>:199:                                    ; preds = %197
  %200 = load i32, i32* %14, align 4
  %201 = load i8*, i8** %22, align 8
  %202 = sext i32 %200 to i64
  %203 = getelementptr inbounds i8, i8* %201, i64 %202
  store i8* %203, i8** %22, align 8
  %204 = load i32, i32* %14, align 4
  %205 = load i32, i32* %13, align 4
  %206 = sub nsw i32 %205, %204
  store i32 %206, i32* %13, align 4
  br label %186

; <label>:207:                                    ; preds = %197
  %208 = load i32, i32* %14, align 4
  %209 = icmp sle i32 %208, 0
  br i1 %209, label %210, label %211

; <label>:210:                                    ; preds = %207
  store i32 1, i32* %25, align 4
  br label %394

; <label>:211:                                    ; preds = %207
  %212 = getelementptr inbounds [2 x i8], [2 x i8]* %21, i32 0, i32 0
  %213 = call i32 @__ns_get16(i8* %212)
  store i32 %213, i32* %18, align 4
  %214 = load i32, i32* %18, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

; <label>:216:                                    ; preds = %211
  br label %394

; <label>:217:                                    ; preds = %211
  %218 = load i32, i32* %18, align 4
  %219 = load i32, i32* @ListSubr.answerLen, align 4
  %220 = icmp ugt i32 %218, %219
  br i1 %220, label %221, label %230

; <label>:221:                                    ; preds = %217
  %222 = load i32, i32* @ListSubr.answerLen, align 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %226

; <label>:224:                                    ; preds = %221
  %225 = load i8*, i8** @ListSubr.answer, align 8
  call void @free(i8* %225) #9
  br label %226

; <label>:226:                                    ; preds = %224, %221
  %227 = load i32, i32* %18, align 4
  store i32 %227, i32* @ListSubr.answerLen, align 4
  %228 = load i32, i32* @ListSubr.answerLen, align 4
  %229 = call i8* (i32, ...) bitcast (i8* (i32)* @Malloc to i8* (i32, ...)*)(i32 %228)
  store i8* %229, i8** @ListSubr.answer, align 8
  br label %230

; <label>:230:                                    ; preds = %226, %217
  %231 = load i32, i32* %18, align 4
  store i32 %231, i32* %13, align 4
  %232 = load i8*, i8** @ListSubr.answer, align 8
  store i8* %232, i8** %22, align 8
  br label %233

; <label>:233:                                    ; preds = %246, %230
  %234 = load i32, i32* %13, align 4
  %235 = icmp sgt i32 %234, 0
  br i1 %235, label %236, label %244

; <label>:236:                                    ; preds = %233
  %237 = load i32, i32* @sockFD, align 4
  %238 = load i8*, i8** %22, align 8
  %239 = load i32, i32* %13, align 4
  %240 = sext i32 %239 to i64
  %241 = call i64 @read(i32 %237, i8* %238, i64 %240)
  %242 = trunc i64 %241 to i32
  store i32 %242, i32* %14, align 4
  %243 = icmp sgt i32 %242, 0
  br label %244

; <label>:244:                                    ; preds = %236, %233
  %245 = phi i1 [ false, %233 ], [ %243, %236 ]
  br i1 %245, label %246, label %254

; <label>:246:                                    ; preds = %244
  %247 = load i32, i32* %14, align 4
  %248 = load i8*, i8** %22, align 8
  %249 = sext i32 %247 to i64
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  store i8* %250, i8** %22, align 8
  %251 = load i32, i32* %14, align 4
  %252 = load i32, i32* %13, align 4
  %253 = sub nsw i32 %252, %251
  store i32 %253, i32* %13, align 4
  br label %233

; <label>:254:                                    ; preds = %244
  %255 = load i32, i32* %14, align 4
  %256 = icmp sle i32 %255, 0
  br i1 %256, label %257, label %258

; <label>:257:                                    ; preds = %254
  store i32 2, i32* %25, align 4
  br label %394

; <label>:258:                                    ; preds = %254
  %259 = load i8*, i8** @ListSubr.answer, align 8
  %260 = load i8*, i8** %22, align 8
  %261 = load i8*, i8** @ListSubr.answer, align 8
  %262 = ptrtoint i8* %260 to i64
  %263 = ptrtoint i8* %261 to i64
  %264 = sub i64 %262, %263
  %265 = trunc i64 %264 to i32
  %266 = call i32 @__ns_initparse(i8* %259, i32 %265, %struct.__ns_msg* %8)
  %267 = icmp slt i32 %266, 0
  br i1 %267, label %268, label %269

; <label>:268:                                    ; preds = %258
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.228, i32 0, i32 0))
  store i32 3, i32* %25, align 4
  br label %394

; <label>:269:                                    ; preds = %258
  %270 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %8, i32 0, i32 3
  %271 = load i16, i16* %270, align 2
  %272 = zext i16 %271 to i32
  %273 = load i32, i32* getelementptr inbounds ([16 x %struct._ns_flagdata], [16 x %struct._ns_flagdata]* @_ns_flagdata, i64 0, i64 9, i32 0), align 4
  %274 = and i32 %272, %273
  %275 = load i32, i32* getelementptr inbounds ([16 x %struct._ns_flagdata], [16 x %struct._ns_flagdata]* @_ns_flagdata, i64 0, i64 9, i32 1), align 4
  %276 = ashr i32 %274, %275
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %285, label %278

; <label>:278:                                    ; preds = %269
  %279 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %8, i32 0, i32 4
  %280 = getelementptr inbounds [4 x i16], [4 x i16]* %279, i64 0, i64 1
  %281 = load i16, i16* %280, align 2
  %282 = zext i16 %281 to i32
  %283 = add nsw i32 %282, 0
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

; <label>:285:                                    ; preds = %278, %269
  store i32 3, i32* %25, align 4
  br label %394

; <label>:286:                                    ; preds = %278
  br label %287

; <label>:287:                                    ; preds = %374, %286
  %288 = call i32 @__ns_parserr(%struct.__ns_msg* %8, i32 1, i32 -1, %struct.__ns_rr* %29)
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %296

; <label>:290:                                    ; preds = %287
  %291 = call i32* @__errno_location() #12
  %292 = load i32, i32* %291, align 4
  %293 = icmp ne i32 %292, 19
  br i1 %293, label %294, label %295

; <label>:294:                                    ; preds = %290
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19.229, i32 0, i32 0))
  store i32 3, i32* %25, align 4
  br label %295

; <label>:295:                                    ; preds = %294, %290
  br label %375

; <label>:296:                                    ; preds = %287
  %297 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %29, i32 0, i32 0
  %298 = getelementptr inbounds [1025 x i8], [1025 x i8]* %297, i64 0, i64 0
  %299 = load i8, i8* %298, align 8
  %300 = sext i8 %299 to i32
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %302, label %305

; <label>:302:                                    ; preds = %296
  %303 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %29, i32 0, i32 0
  %304 = getelementptr inbounds [1025 x i8], [1025 x i8]* %303, i32 0, i32 0
  br label %306

; <label>:305:                                    ; preds = %296
  br label %306

; <label>:306:                                    ; preds = %305, %302
  %307 = phi i8* [ %304, %302 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.230, i32 0, i32 0), %305 ]
  store i8* %307, i8** %27, align 8
  %308 = load i8, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.origin, i64 0, i64 0), align 16
  %309 = sext i8 %308 to i32
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %323

; <label>:311:                                    ; preds = %306
  %312 = load i8*, i8** %27, align 8
  %313 = getelementptr inbounds i8, i8* %312, i64 0
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %317, label %323

; <label>:317:                                    ; preds = %311
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %319 = load i8*, i8** %27, align 8
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %318, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21.231, i32 0, i32 0), i8* %319)
  %321 = load i8*, i8** %27, align 8
  %322 = call i8* @strcpy(i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.origin, i32 0, i32 0), i8* %321) #9
  br label %323

; <label>:323:                                    ; preds = %317, %311, %306
  %324 = load i32, i32* %5, align 4
  %325 = icmp eq i32 %324, 255
  br i1 %325, label %333, label %326

; <label>:326:                                    ; preds = %323
  %327 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %29, i32 0, i32 1
  %328 = load i16, i16* %327, align 2
  %329 = zext i16 %328 to i32
  %330 = add nsw i32 %329, 0
  %331 = load i32, i32* %5, align 4
  %332 = icmp eq i32 %330, %331
  br i1 %332, label %333, label %348

; <label>:333:                                    ; preds = %326, %323
  %334 = getelementptr inbounds [2048 x i8], [2048 x i8]* %28, i32 0, i32 0
  %335 = call i32 @__ns_sprintrr(%struct.__ns_msg* %8, %struct.__ns_rr* %29, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.name_ctx, i32 0, i32 0), i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.origin, i32 0, i32 0), i8* %334, i64 2048)
  %336 = icmp slt i32 %335, 0
  br i1 %336, label %337, label %338

; <label>:337:                                    ; preds = %333
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.232, i32 0, i32 0))
  store i32 3, i32* %25, align 4
  br label %375

; <label>:338:                                    ; preds = %333
  %339 = load i8*, i8** %27, align 8
  %340 = call i8* @strcpy(i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.name_ctx, i32 0, i32 0), i8* %339) #9
  %341 = load i32, i32* %20, align 4
  %342 = add nsw i32 %341, 1
  store i32 %342, i32* %20, align 4
  %343 = getelementptr inbounds [2048 x i8], [2048 x i8]* %28, i32 0, i32 0
  %344 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %345 = call i32 @fputs(i8* %343, %struct._IO_FILE* %344)
  %346 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %347 = call i32 @fputc(i32 10, %struct._IO_FILE* %346)
  br label %348

; <label>:348:                                    ; preds = %338, %326
  %349 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %29, i32 0, i32 1
  %350 = load i16, i16* %349, align 2
  %351 = zext i16 %350 to i32
  %352 = add nsw i32 %351, 0
  %353 = icmp eq i32 %352, 6
  br i1 %353, label %354, label %374

; <label>:354:                                    ; preds = %348
  %355 = load i32, i32* %17, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [2 x [256 x i8]], [2 x [256 x i8]]* %23, i64 0, i64 %356
  %358 = getelementptr inbounds [256 x i8], [256 x i8]* %357, i32 0, i32 0
  %359 = load i8*, i8** %27, align 8
  %360 = call i8* @strcpy(i8* %358, i8* %359) #9
  %361 = load i32, i32* %17, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %364

; <label>:363:                                    ; preds = %354
  store i32 1, i32* %17, align 4
  br label %373

; <label>:364:                                    ; preds = %354
  %365 = getelementptr inbounds [2 x [256 x i8]], [2 x [256 x i8]]* %23, i64 0, i64 0
  %366 = getelementptr inbounds [256 x i8], [256 x i8]* %365, i32 0, i32 0
  %367 = getelementptr inbounds [2 x [256 x i8]], [2 x [256 x i8]]* %23, i64 0, i64 1
  %368 = getelementptr inbounds [256 x i8], [256 x i8]* %367, i32 0, i32 0
  %369 = call i32 @strcasecmp(i8* %366, i8* %368) #11
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

; <label>:371:                                    ; preds = %364
  store i32 2, i32* %17, align 4
  store i8 0, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.name_ctx, i64 0, i64 0), align 16
  store i8 0, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @ListSubr.origin, i64 0, i64 0), align 16
  br label %372

; <label>:372:                                    ; preds = %371, %364
  br label %373

; <label>:373:                                    ; preds = %372, %363
  br label %374

; <label>:374:                                    ; preds = %373, %348
  br label %287

; <label>:375:                                    ; preds = %337, %295
  %376 = load i32, i32* %25, align 4
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %378, label %379

; <label>:378:                                    ; preds = %375
  br label %394

; <label>:379:                                    ; preds = %375
  %380 = load i32, i32* %19, align 4
  %381 = add nsw i32 %380, 1
  store i32 %381, i32* %19, align 4
  %382 = load i8*, i8** %7, align 8
  %383 = icmp ne i8* %382, null
  br i1 %383, label %384, label %393

; <label>:384:                                    ; preds = %379
  %385 = load i32, i32* %19, align 4
  %386 = srem i32 %385, 50
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %393

; <label>:388:                                    ; preds = %384
  %389 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %390 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %389, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.233, i32 0, i32 0))
  %391 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %392 = call i32 @fflush(%struct._IO_FILE* %391)
  br label %393

; <label>:393:                                    ; preds = %388, %384, %379
  br label %181

; <label>:394:                                    ; preds = %378, %285, %268, %257, %216, %210, %181
  %395 = load i8*, i8** %7, align 8
  %396 = icmp ne i8* %395, null
  br i1 %396, label %397, label %414

; <label>:397:                                    ; preds = %394
  %398 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %399 = load i32, i32* %19, align 4
  %400 = icmp sge i32 %399, 50
  %401 = zext i1 %400 to i64
  %402 = select i1 %400, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25.234, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26.235, i32 0, i32 0)
  %403 = load i32, i32* %19, align 4
  %404 = load i32, i32* %19, align 4
  %405 = icmp ne i32 %404, 1
  %406 = zext i1 %405 to i64
  %407 = select i1 %405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.236, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26.235, i32 0, i32 0)
  %408 = load i32, i32* %20, align 4
  %409 = load i32, i32* %20, align 4
  %410 = icmp ne i32 %409, 1
  %411 = zext i1 %410 to i64
  %412 = select i1 %410, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.236, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26.235, i32 0, i32 0)
  %413 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %398, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.24.237, i32 0, i32 0), i8* %402, i32 %403, i8* %407, i32 %408, i8* %412)
  br label %414

; <label>:414:                                    ; preds = %397, %394
  %415 = load i32, i32* @sockFD, align 4
  %416 = call i32 @close(i32 %415)
  store i32 -1, i32* @sockFD, align 4
  %417 = load i8*, i8** %7, align 8
  %418 = icmp ne i8* %417, null
  br i1 %418, label %419, label %425

; <label>:419:                                    ; preds = %414
  %420 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %421 = icmp ne %struct._IO_FILE* %420, null
  br i1 %421, label %422, label %425

; <label>:422:                                    ; preds = %419
  %423 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %424 = call i32 @fclose(%struct._IO_FILE* %423)
  store %struct._IO_FILE* null, %struct._IO_FILE** @filePtr, align 8
  br label %425

; <label>:425:                                    ; preds = %422, %419, %414
  %426 = load i32, i32* %25, align 4
  switch i32 %426, label %470 [
    i32 0, label %427
    i32 1, label %428
    i32 3, label %429
    i32 2, label %430
  ]

; <label>:427:                                    ; preds = %425
  store i32 0, i32* %4, align 4
  br label %471

; <label>:428:                                    ; preds = %425
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:429:                                    ; preds = %425
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:430:                                    ; preds = %425
  %431 = load i8*, i8** @ListSubr.answer, align 8
  %432 = bitcast i8* %431 to %struct.HEADER*
  store %struct.HEADER* %432, %struct.HEADER** %11, align 8
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %434 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %433, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28.238, i32 0, i32 0))
  %435 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %436 = load %struct.HEADER*, %struct.HEADER** %11, align 8
  %437 = bitcast %struct.HEADER* %436 to i96*
  %438 = load i96, i96* %437, align 4
  %439 = lshr i96 %438, 24
  %440 = and i96 %439, 15
  %441 = trunc i96 %440 to i32
  %442 = call i8* @__p_rcode(i32 %441)
  %443 = load %struct.HEADER*, %struct.HEADER** %11, align 8
  %444 = bitcast %struct.HEADER* %443 to i96*
  %445 = load i96, i96* %444, align 4
  %446 = lshr i96 %445, 48
  %447 = and i96 %446, 65535
  %448 = trunc i96 %447 to i32
  %449 = trunc i32 %448 to i16
  %450 = call zeroext i16 @ntohs(i16 zeroext %449) #12
  %451 = zext i16 %450 to i32
  %452 = load %struct.HEADER*, %struct.HEADER** %11, align 8
  %453 = bitcast %struct.HEADER* %452 to i96*
  %454 = load i96, i96* %453, align 4
  %455 = lshr i96 %454, 64
  %456 = and i96 %455, 65535
  %457 = trunc i96 %456 to i32
  %458 = trunc i32 %457 to i16
  %459 = call zeroext i16 @ntohs(i16 zeroext %458) #12
  %460 = zext i16 %459 to i32
  %461 = load %struct.HEADER*, %struct.HEADER** %11, align 8
  %462 = bitcast %struct.HEADER* %461 to i96*
  %463 = load i96, i96* %462, align 4
  %464 = lshr i96 %463, 80
  %465 = trunc i96 %464 to i32
  %466 = trunc i32 %465 to i16
  %467 = call zeroext i16 @ntohs(i16 zeroext %466) #12
  %468 = zext i16 %467 to i32
  %469 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %435, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.29.239, i32 0, i32 0), i8* %442, i32 %451, i32 %460, i32 %468)
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:470:                                    ; preds = %425
  store i32 -3, i32* %4, align 4
  br label %471

; <label>:471:                                    ; preds = %470, %430, %429, %428, %427, %150, %116, %95, %83, %44
  %472 = load i32, i32* %4, align 4
  ret i32 %472
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #3

declare dso_local i64 @write(i32, i8*, i64) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ListHosts(i8*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca [256 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %12 = load i8*, i8** %3, align 8
  %13 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @matchString to i32 (i8*, i8*, ...)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.240, i32 0, i32 0), i8* %12)
  store i32 %13, i32* %8, align 4
  %14 = load i32, i32* %8, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %42

; <label>:16:                                     ; preds = %2
  %17 = load i8*, i8** %3, align 8
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %22 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %20, i8* %21, i64 256)
  store i32 %22, i32* %9, align 4
  %23 = load i32, i32* %9, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %40

; <label>:25:                                     ; preds = %16
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %34 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %32, i8* %33, i64 256)
  store i32 %34, i32* %9, align 4
  %35 = load i32, i32* %9, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %25
  store i32 2, i32* %8, align 4
  br label %39

; <label>:38:                                     ; preds = %25
  store i32 1, i32* %8, align 4
  br label %39

; <label>:39:                                     ; preds = %38, %37
  br label %41

; <label>:40:                                     ; preds = %16
  store i32 0, i32* %8, align 4
  br label %41

; <label>:41:                                     ; preds = %40, %39
  br label %42

; <label>:42:                                     ; preds = %41, %2
  %43 = load i32, i32* %4, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %56

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %8, align 4
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %56

; <label>:48:                                     ; preds = %45
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  %50 = load i8, i8* %49, align 16
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 62
  br i1 %52, label %53, label %56

; <label>:53:                                     ; preds = %48
  %54 = load i32, i32* %8, align 4
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %8, align 4
  br label %56

; <label>:56:                                     ; preds = %53, %48, %45, %42
  %57 = load i32, i32* %8, align 4
  %58 = icmp eq i32 %57, 2
  br i1 %58, label %59, label %103

; <label>:59:                                     ; preds = %56
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %61 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.241, i32 0, i32 0), i8* %60) #11
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %59
  store i32 5, i32* %10, align 4
  br label %101

; <label>:64:                                     ; preds = %59
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %66 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.242, i32 0, i32 0), i8* %65) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

; <label>:68:                                     ; preds = %64
  store i32 13, i32* %10, align 4
  br label %100

; <label>:69:                                     ; preds = %64
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %71 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.243, i32 0, i32 0), i8* %70) #11
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

; <label>:73:                                     ; preds = %69
  store i32 15, i32* %10, align 4
  br label %99

; <label>:74:                                     ; preds = %69
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %76 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.244, i32 0, i32 0), i8* %75) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

; <label>:78:                                     ; preds = %74
  store i32 26, i32* %10, align 4
  br label %98

; <label>:79:                                     ; preds = %74
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %81 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.245, i32 0, i32 0), i8* %80) #11
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %79
  store i32 11, i32* %10, align 4
  br label %97

; <label>:84:                                     ; preds = %79
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %86 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.246, i32 0, i32 0), i8* %85) #11
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %84
  store i32 255, i32* %10, align 4
  br label %96

; <label>:89:                                     ; preds = %84
  %90 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  %91 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.247, i32 0, i32 0), i8* %90) #11
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

; <label>:93:                                     ; preds = %89
  store i32 35, i32* %10, align 4
  br label %95

; <label>:94:                                     ; preds = %89
  store i32 1, i32* %10, align 4
  br label %95

; <label>:95:                                     ; preds = %94, %93
  br label %96

; <label>:96:                                     ; preds = %95, %88
  br label %97

; <label>:97:                                     ; preds = %96, %83
  br label %98

; <label>:98:                                     ; preds = %97, %78
  br label %99

; <label>:99:                                     ; preds = %98, %73
  br label %100

; <label>:100:                                    ; preds = %99, %68
  br label %101

; <label>:101:                                    ; preds = %100, %63
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  store i8* %102, i8** %5, align 8
  br label %113

; <label>:103:                                    ; preds = %56
  %104 = load i32, i32* %8, align 4
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %108

; <label>:106:                                    ; preds = %103
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0
  store i8* %107, i8** %5, align 8
  store i32 1, i32* %10, align 4
  br label %112

; <label>:108:                                    ; preds = %103
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = load i8*, i8** %3, align 8
  %111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.219, i32 0, i32 0), i8* %110)
  br label %132

; <label>:112:                                    ; preds = %106
  br label %113

; <label>:113:                                    ; preds = %112, %101
  %114 = load i32, i32* %10, align 4
  %115 = load i8*, i8** %5, align 8
  %116 = load i32, i32* %4, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %120

; <label>:118:                                    ; preds = %113
  %119 = load i8*, i8** %3, align 8
  br label %121

; <label>:120:                                    ; preds = %113
  br label %121

; <label>:121:                                    ; preds = %120, %118
  %122 = phi i8* [ %119, %118 ], [ null, %120 ]
  %123 = call i32 @ListSubr(i32 %114, i8* %115, i8* %122)
  store i32 %123, i32* %11, align 4
  %124 = load i32, i32* %11, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %132

; <label>:126:                                    ; preds = %121
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %128 = load i8*, i8** %5, align 8
  %129 = load i32, i32* %11, align 4
  %130 = call i8* (i32, ...) bitcast (i8* (i32)* @DecodeError to i8* (i32, ...)*)(i32 %129)
  %131 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.220, i32 0, i32 0), i8* %128, i8* %130)
  br label %132

; <label>:132:                                    ; preds = %126, %121, %108
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ViewList(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [4096 x i8], align 16
  %4 = alloca [4096 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [4096 x i8], align 16
  store i8* %0, i8** %2, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @matchString to i32 (i8*, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30.248, i32 0, i32 0), i8* %8)
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %29

; <label>:12:                                     ; preds = %1
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %18 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %16, i8* %17, i64 4096)
  store i32 %18, i32* %6, align 4
  %19 = load i32, i32* %6, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

; <label>:21:                                     ; preds = %12
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = load i8*, i8** %2, align 8
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31.249, i32 0, i32 0), i8* %26)
  br label %47

; <label>:28:                                     ; preds = %12
  br label %29

; <label>:29:                                     ; preds = %28, %1
  %30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %31 = call i8* @strcpy(i8* %30, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32.250, i32 0, i32 0)) #9
  %32 = call i8* @mktemp(i8* %31) #9
  %33 = icmp ne i8* %32, null
  br i1 %33, label %37, label %34

; <label>:34:                                     ; preds = %29
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33.251, i32 0, i32 0))
  br label %47

; <label>:37:                                     ; preds = %29
  %38 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0
  %39 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %40 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %42 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %43 = load i8*, i8** @pager, align 8
  %44 = call i32 (i8*, i8*, ...) @sprintf(i8* %38, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.34.252, i32 0, i32 0), i8* %39, i8* %40, i8* %41, i8* %42, i8* %43) #9
  %45 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0
  %46 = call i32 @system(i8* %45)
  br label %47

; <label>:47:                                     ; preds = %37, %34, %21
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @mktemp(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @Finger(i8*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.servent*, align 8
  %7 = alloca %struct.sockaddr_in, align 4
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [256 x i8], align 16
  %12 = alloca [4096 x i8], align 16
  %13 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %14 = load i32, i32* @curHostValid, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %19, label %16

; <label>:16:                                     ; preds = %2
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35.253, i32 0, i32 0))
  store i32 -3, i32* %3, align 4
  br label %165

; <label>:19:                                     ; preds = %2
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @matchString to i32 (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36.254, i32 0, i32 0), i8* %20)
  store i32 %21, i32* %13, align 4
  %22 = load i32, i32* %13, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %35

; <label>:24:                                     ; preds = %19
  %25 = load i8*, i8** %4, align 8
  %26 = load i32, i32* %13, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i32 0, i32 0
  %30 = call i32 (i8*, i8*, i64, ...) bitcast (i32 (i8*, i8*, i64)* @pickString to i32 (i8*, i8*, i64, ...)*)(i8* %28, i8* %29, i64 256)
  store i32 %30, i32* %13, align 4
  %31 = load i32, i32* %13, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %24
  store i32 1, i32* %13, align 4
  br label %34

; <label>:34:                                     ; preds = %33, %24
  br label %35

; <label>:35:                                     ; preds = %34, %19
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %49

; <label>:38:                                     ; preds = %35
  %39 = load i32, i32* %5, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %48

; <label>:41:                                     ; preds = %38
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %43 = load i8, i8* %42, align 16
  %44 = sext i8 %43 to i32
  %45 = icmp eq i32 %44, 62
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %41
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  store i8 0, i8* %47, align 16
  br label %48

; <label>:48:                                     ; preds = %46, %41, %38
  br label %51

; <label>:49:                                     ; preds = %35
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  store i8 0, i8* %50, align 16
  br label %51

; <label>:51:                                     ; preds = %49, %48
  %52 = call %struct.servent* @getservbyname(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37.255, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38.256, i32 0, i32 0))
  store %struct.servent* %52, %struct.servent** %6, align 8
  %53 = load %struct.servent*, %struct.servent** %6, align 8
  %54 = icmp eq %struct.servent* %53, null
  br i1 %54, label %55, label %58

; <label>:55:                                     ; preds = %51
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39.257, i32 0, i32 0))
  store i32 -3, i32* %3, align 4
  br label %165

; <label>:58:                                     ; preds = %51
  %59 = bitcast %struct.sockaddr_in* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false)
  %60 = load i32, i32* getelementptr inbounds (%struct.HostInfo, %struct.HostInfo* @curHostInfo, i32 0, i32 3), align 8
  %61 = trunc i32 %60 to i16
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 %61, i16* %62, align 4
  %63 = load %struct.servent*, %struct.servent** %6, align 8
  %64 = getelementptr inbounds %struct.servent, %struct.servent* %63, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = trunc i32 %65 to i16
  %67 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %66, i16* %67, align 2
  %68 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %69 = bitcast %struct.in_addr* %68 to i8*
  %70 = load i8**, i8*** getelementptr inbounds (%struct.HostInfo, %struct.HostInfo* @curHostInfo, i32 0, i32 2), align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 0
  %72 = load i8*, i8** %71, align 8
  %73 = load i32, i32* getelementptr inbounds (%struct.HostInfo, %struct.HostInfo* @curHostInfo, i32 0, i32 4), align 4
  %74 = sext i32 %73 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 1 %72, i64 %74, i1 false)
  %75 = load i32, i32* getelementptr inbounds (%struct.HostInfo, %struct.HostInfo* @curHostInfo, i32 0, i32 3), align 8
  %76 = call i32 @socket(i32 %75, i32 1, i32 0) #9
  store i32 %76, i32* @sockFD, align 4
  %77 = load i32, i32* @sockFD, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %82

; <label>:79:                                     ; preds = %58
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %81 = call i32 @fflush(%struct._IO_FILE* %80)
  call void @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40.258, i32 0, i32 0))
  store i32 -3, i32* %3, align 4
  br label %165

; <label>:82:                                     ; preds = %58
  %83 = load i32, i32* @sockFD, align 4
  %84 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %85 = call i32 @connect(i32 %83, %struct.sockaddr* %84, i32 16)
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %87, label %92

; <label>:87:                                     ; preds = %82
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %89 = call i32 @fflush(%struct._IO_FILE* %88)
  call void @perror(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41.259, i32 0, i32 0))
  %90 = load i32, i32* @sockFD, align 4
  %91 = call i32 @close(i32 %90)
  store i32 -1, i32* @sockFD, align 4
  store i32 -3, i32* %3, align 4
  br label %165

; <label>:92:                                     ; preds = %82
  %93 = load i32, i32* %5, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %97, label %95

; <label>:95:                                     ; preds = %92
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %96, %struct._IO_FILE** @filePtr, align 8
  br label %113

; <label>:97:                                     ; preds = %92
  %98 = load i8*, i8** %4, align 8
  %99 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i32 0, i32 0
  %100 = call %struct._IO_FILE* (i8*, i8*, i64, ...) bitcast (%struct._IO_FILE* (i8*, i8*, i64)* @OpenFile to %struct._IO_FILE* (i8*, i8*, i64, ...)*)(i8* %98, i8* %99, i64 4096)
  store %struct._IO_FILE* %100, %struct._IO_FILE** @filePtr, align 8
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %102 = icmp eq %struct._IO_FILE* %101, null
  br i1 %102, label %103, label %109

; <label>:103:                                    ; preds = %97
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %105 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i32 0, i32 0
  %106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.226, i32 0, i32 0), i8* %105)
  %107 = load i32, i32* @sockFD, align 4
  %108 = call i32 @close(i32 %107)
  store i32 -1, i32* @sockFD, align 4
  store i32 -3, i32* %3, align 4
  br label %165

; <label>:109:                                    ; preds = %97
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %111 = load i8*, i8** %4, align 8
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.227, i32 0, i32 0), i8* %111)
  br label %113

; <label>:113:                                    ; preds = %109, %95
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %115 = load i8*, i8** getelementptr inbounds (%struct.HostInfo, %struct.HostInfo* @curHostInfo, i32 0, i32 0), align 8
  %116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %114, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.225, i32 0, i32 0), i8* %115)
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %118 = load i8, i8* %117, align 16
  %119 = sext i8 %118 to i32
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %124

; <label>:121:                                    ; preds = %113
  %122 = load i32, i32* @sockFD, align 4
  %123 = call i64 @write(i32 %122, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.260, i32 0, i32 0), i64 3)
  br label %124

; <label>:124:                                    ; preds = %121, %113
  %125 = load i32, i32* @sockFD, align 4
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i32 0, i32 0
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i32 0, i32 0
  %128 = call i64 @strlen(i8* %127) #11
  %129 = call i64 @write(i32 %125, i8* %126, i64 %128)
  %130 = load i32, i32* @sockFD, align 4
  %131 = call i64 @write(i32 %130, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43.261, i32 0, i32 0), i64 2)
  %132 = load i32, i32* @sockFD, align 4
  %133 = call %struct._IO_FILE* @fdopen(i32 %132, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44.262, i32 0, i32 0)) #9
  store %struct._IO_FILE* %133, %struct._IO_FILE** %8, align 8
  store i32 10, i32* %10, align 4
  br label %134

; <label>:134:                                    ; preds = %144, %124
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %136 = call i32 @_IO_getc(%struct._IO_FILE* %135)
  store i32 %136, i32* %9, align 4
  %137 = icmp ne i32 %136, -1
  br i1 %137, label %138, label %148

; <label>:138:                                    ; preds = %134
  %139 = load i32, i32* %9, align 4
  switch i32 %139, label %144 [
    i32 136, label %140
    i32 137, label %140
    i32 138, label %140
    i32 140, label %140
    i32 141, label %143
  ]

; <label>:140:                                    ; preds = %138, %138, %138, %138
  %141 = load i32, i32* %9, align 4
  %142 = sub nsw i32 %141, 128
  store i32 %142, i32* %9, align 4
  br label %144

; <label>:143:                                    ; preds = %138
  store i32 10, i32* %9, align 4
  br label %144

; <label>:144:                                    ; preds = %143, %140, %138
  %145 = load i32, i32* %9, align 4
  store i32 %145, i32* %10, align 4
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %147 = call i32 @_IO_putc(i32 %145, %struct._IO_FILE* %146)
  br label %134

; <label>:148:                                    ; preds = %134
  %149 = load i32, i32* %10, align 4
  %150 = icmp ne i32 %149, 10
  br i1 %150, label %151, label %154

; <label>:151:                                    ; preds = %148
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %153 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %152)
  br label %154

; <label>:154:                                    ; preds = %151, %148
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %156 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %155)
  %157 = load i32, i32* @sockFD, align 4
  %158 = call i32 @close(i32 %157)
  store i32 -1, i32* @sockFD, align 4
  %159 = load i32, i32* %5, align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %161, label %164

; <label>:161:                                    ; preds = %154
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %163 = call i32 @fclose(%struct._IO_FILE* %162)
  store %struct._IO_FILE* null, %struct._IO_FILE** @filePtr, align 8
  br label %164

; <label>:164:                                    ; preds = %161, %154
  store i32 0, i32* %3, align 4
  br label %165

; <label>:165:                                    ; preds = %164, %103, %87, %79, %55, %16
  %166 = load i32, i32* %3, align 4
  ret i32 %166
}

declare dso_local %struct.servent* @getservbyname(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #4

declare dso_local i32 @_IO_getc(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ListHost_close() #0 {
  %1 = load i32, i32* @sockFD, align 4
  %2 = icmp ne i32 %1, -1
  br i1 %2, label %3, label %6

; <label>:3:                                      ; preds = %0
  %4 = load i32, i32* @sockFD, align 4
  %5 = call i32 @close(i32 %4)
  store i32 -1, i32* @sockFD, align 4
  br label %6

; <label>:6:                                      ; preds = %3, %0
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @IntrHandler() #0 {
  %1 = call i32 (...) bitcast (void ()* @SendRequest_close to i32 (...)*)()
  call void @ListHost_close()
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %3 = icmp ne %struct._IO_FILE* %2, null
  br i1 %3, label %4, label %11

; <label>:4:                                      ; preds = %0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %7 = icmp ne %struct._IO_FILE* %5, %6
  br i1 %7, label %8, label %11

; <label>:8:                                      ; preds = %4
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @filePtr, align 8
  %10 = call i32 @fclose(%struct._IO_FILE* %9)
  store %struct._IO_FILE* null, %struct._IO_FILE** @filePtr, align 8
  br label %11

; <label>:11:                                     ; preds = %8, %4, %0
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.265, i32 0, i32 0))
  call void @longjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @env, i32 0, i32 0), i32 1) #8
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @longjmp(%struct.__jmp_buf_tag*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @Malloc(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.__sigset_t, align 8
  store i32 %0, i32* %2, align 4
  %5 = call i32 @sigemptyset(%struct.__sigset_t* %4) #9
  %6 = call i32 @sigaddset(%struct.__sigset_t* %4, i32 2) #9
  %7 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %4, %struct.__sigset_t* null) #9
  %8 = load i32, i32* %2, align 4
  %9 = zext i32 %8 to i64
  %10 = call noalias i8* @malloc(i64 %9) #9
  store i8* %10, i8** %3, align 8
  %11 = call i32 @sigprocmask(i32 1, %struct.__sigset_t* %4, %struct.__sigset_t* null) #9
  %12 = load i8*, i8** %3, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %21

; <label>:14:                                     ; preds = %1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %16 = call i32 @fflush(%struct._IO_FILE* %15)
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.268, i32 0, i32 0))
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = call i32 @fflush(%struct._IO_FILE* %19)
  call void @abort() #8
  unreachable

; <label>:21:                                     ; preds = %1
  %22 = load i8*, i8** %3, align 8
  ret i8* %22
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #4

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #4

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #4

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @Calloc(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %3, align 4
  %7 = load i32, i32* %4, align 4
  %8 = mul nsw i32 %6, %7
  store volatile i8 1, i8* @specialMalloc, align 1
  %9 = call i8* @Malloc(i32 %8)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i8* %9, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %4, align 4
  %13 = mul nsw i32 %11, %12
  %14 = sext i32 %13 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %14, i1 false)
  %15 = load i8*, i8** %5, align 8
  ret i8* %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @PrintHostInfo(%struct._IO_FILE*, i8*, %struct.HostInfo*) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HostInfo*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca %struct.ServerInfo**, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.HostInfo* %2, %struct.HostInfo** %6, align 8
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %14 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.273, i32 0, i32 0), i8* %12, i8* %15)
  %17 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %18 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %17, i32 0, i32 2
  %19 = load i8**, i8*** %18, align 8
  %20 = icmp ne i8** %19, null
  br i1 %20, label %21, label %70

; <label>:21:                                     ; preds = %3
  %22 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %23 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %22, i32 0, i32 2
  %24 = load i8**, i8*** %23, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 1
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %28, label %31

; <label>:28:                                     ; preds = %21
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.274, i32 0, i32 0))
  br label %34

; <label>:31:                                     ; preds = %21
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.275, i32 0, i32 0))
  br label %34

; <label>:34:                                     ; preds = %31, %28
  store i8 32, i8* %9, align 1
  store i32 0, i32* %10, align 4
  %35 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %36 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %35, i32 0, i32 2
  %37 = load i8**, i8*** %36, align 8
  store i8** %37, i8*** %7, align 8
  br label %38

; <label>:38:                                     ; preds = %66, %34
  %39 = load i8**, i8*** %7, align 8
  %40 = icmp ne i8** %39, null
  br i1 %40, label %41, label %45

; <label>:41:                                     ; preds = %38
  %42 = load i8**, i8*** %7, align 8
  %43 = load i8*, i8** %42, align 8
  %44 = icmp ne i8* %43, null
  br label %45

; <label>:45:                                     ; preds = %41, %38
  %46 = phi i1 [ false, %38 ], [ %44, %41 ]
  br i1 %46, label %47, label %69

; <label>:47:                                     ; preds = %45
  %48 = load i32, i32* %10, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %10, align 4
  %50 = load i32, i32* %10, align 4
  %51 = icmp sgt i32 %50, 4
  br i1 %51, label %52, label %55

; <label>:52:                                     ; preds = %47
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0))
  store i8 32, i8* %9, align 1
  store i32 0, i32* %10, align 4
  br label %55

; <label>:55:                                     ; preds = %52, %47
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %57 = load i8, i8* %9, align 1
  %58 = sext i8 %57 to i32
  %59 = load i8**, i8*** %7, align 8
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast i8* %60 to %struct.in_addr*
  %62 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = call i8* @__inet_ntoa(i32 %63)
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.277, i32 0, i32 0), i32 %58, i8* %64)
  store i8 44, i8* %9, align 1
  br label %66

; <label>:66:                                     ; preds = %55
  %67 = load i8**, i8*** %7, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i32 1
  store i8** %68, i8*** %7, align 8
  br label %38

; <label>:69:                                     ; preds = %45
  br label %70

; <label>:70:                                     ; preds = %69, %3
  %71 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %72 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %71, i32 0, i32 1
  %73 = load i8**, i8*** %72, align 8
  %74 = icmp ne i8** %73, null
  br i1 %74, label %75, label %121

; <label>:75:                                     ; preds = %70
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.278, i32 0, i32 0))
  store i8 32, i8* %9, align 1
  store i32 10, i32* %10, align 4
  %78 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %79 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %78, i32 0, i32 1
  %80 = load i8**, i8*** %79, align 8
  store i8** %80, i8*** %7, align 8
  br label %81

; <label>:81:                                     ; preds = %117, %75
  %82 = load i8**, i8*** %7, align 8
  %83 = icmp ne i8** %82, null
  br i1 %83, label %84, label %94

; <label>:84:                                     ; preds = %81
  %85 = load i8**, i8*** %7, align 8
  %86 = load i8*, i8** %85, align 8
  %87 = icmp ne i8* %86, null
  br i1 %87, label %88, label %94

; <label>:88:                                     ; preds = %84
  %89 = load i8**, i8*** %7, align 8
  %90 = load i8*, i8** %89, align 8
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp ne i32 %92, 0
  br label %94

; <label>:94:                                     ; preds = %88, %84, %81
  %95 = phi i1 [ false, %84 ], [ false, %81 ], [ %93, %88 ]
  br i1 %95, label %96, label %120

; <label>:96:                                     ; preds = %94
  %97 = load i8**, i8*** %7, align 8
  %98 = load i8*, i8** %97, align 8
  %99 = call i64 @strlen(i8* %98) #11
  %100 = add i64 %99, 2
  %101 = load i32, i32* %10, align 4
  %102 = sext i32 %101 to i64
  %103 = add i64 %102, %100
  %104 = trunc i64 %103 to i32
  store i32 %104, i32* %10, align 4
  %105 = load i32, i32* %10, align 4
  %106 = icmp sgt i32 %105, 75
  br i1 %106, label %107, label %110

; <label>:107:                                    ; preds = %96
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0))
  store i8 32, i8* %9, align 1
  store i32 10, i32* %10, align 4
  br label %110

; <label>:110:                                    ; preds = %107, %96
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %112 = load i8, i8* %9, align 1
  %113 = sext i8 %112 to i32
  %114 = load i8**, i8*** %7, align 8
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.277, i32 0, i32 0), i32 %113, i8* %115)
  store i8 44, i8* %9, align 1
  br label %117

; <label>:117:                                    ; preds = %110
  %118 = load i8**, i8*** %7, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i32 1
  store i8** %119, i8*** %7, align 8
  br label %81

; <label>:120:                                    ; preds = %94
  br label %121

; <label>:121:                                    ; preds = %120, %70
  %122 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %123 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %122, i32 0, i32 5
  %124 = load %struct.ServerInfo**, %struct.ServerInfo*** %123, align 8
  %125 = icmp ne %struct.ServerInfo** %124, null
  br i1 %125, label %126, label %237

; <label>:126:                                    ; preds = %121
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.279, i32 0, i32 0))
  %129 = load %struct.HostInfo*, %struct.HostInfo** %6, align 8
  %130 = getelementptr inbounds %struct.HostInfo, %struct.HostInfo* %129, i32 0, i32 5
  %131 = load %struct.ServerInfo**, %struct.ServerInfo*** %130, align 8
  store %struct.ServerInfo** %131, %struct.ServerInfo*** %8, align 8
  br label %132

; <label>:132:                                    ; preds = %233, %126
  %133 = load %struct.ServerInfo**, %struct.ServerInfo*** %8, align 8
  %134 = load %struct.ServerInfo*, %struct.ServerInfo** %133, align 8
  %135 = icmp ne %struct.ServerInfo* %134, null
  br i1 %135, label %136, label %236

; <label>:136:                                    ; preds = %132
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %138 = load %struct.ServerInfo**, %struct.ServerInfo*** %8, align 8
  %139 = load %struct.ServerInfo*, %struct.ServerInfo** %138, align 8
  %140 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %139, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.280, i32 0, i32 0), i8* %141)
  store i8 32, i8* %9, align 1
  store i32 0, i32* %10, align 4
  %143 = load %struct.ServerInfo**, %struct.ServerInfo*** %8, align 8
  %144 = load %struct.ServerInfo*, %struct.ServerInfo** %143, align 8
  %145 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %144, i32 0, i32 2
  %146 = load i8**, i8*** %145, align 8
  store i8** %146, i8*** %7, align 8
  br label %147

; <label>:147:                                    ; preds = %181, %136
  %148 = load i8**, i8*** %7, align 8
  %149 = icmp ne i8** %148, null
  br i1 %149, label %150, label %160

; <label>:150:                                    ; preds = %147
  %151 = load i8**, i8*** %7, align 8
  %152 = load i8*, i8** %151, align 8
  %153 = icmp ne i8* %152, null
  br i1 %153, label %154, label %160

; <label>:154:                                    ; preds = %150
  %155 = load i8**, i8*** %7, align 8
  %156 = load i8*, i8** %155, align 8
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp ne i32 %158, 0
  br label %160

; <label>:160:                                    ; preds = %154, %150, %147
  %161 = phi i1 [ false, %150 ], [ false, %147 ], [ %159, %154 ]
  br i1 %161, label %162, label %184

; <label>:162:                                    ; preds = %160
  %163 = load i32, i32* %10, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %10, align 4
  %165 = load i32, i32* %10, align 4
  %166 = icmp sgt i32 %165, 4
  br i1 %166, label %167, label %170

; <label>:167:                                    ; preds = %162
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %169 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0))
  store i8 32, i8* %9, align 1
  store i32 0, i32* %10, align 4
  br label %170

; <label>:170:                                    ; preds = %167, %162
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %172 = load i8, i8* %9, align 1
  %173 = sext i8 %172 to i32
  %174 = load i8**, i8*** %7, align 8
  %175 = load i8*, i8** %174, align 8
  %176 = bitcast i8* %175 to %struct.in_addr*
  %177 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %176, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = call i8* @__inet_ntoa(i32 %178)
  %180 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.277, i32 0, i32 0), i32 %173, i8* %179)
  store i8 44, i8* %9, align 1
  br label %181

; <label>:181:                                    ; preds = %170
  %182 = load i8**, i8*** %7, align 8
  %183 = getelementptr inbounds i8*, i8** %182, i32 1
  store i8** %183, i8*** %7, align 8
  br label %147

; <label>:184:                                    ; preds = %160
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %186 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0))
  store i8 32, i8* %9, align 1
  store i32 10, i32* %10, align 4
  %187 = load %struct.ServerInfo**, %struct.ServerInfo*** %8, align 8
  %188 = load %struct.ServerInfo*, %struct.ServerInfo** %187, align 8
  %189 = getelementptr inbounds %struct.ServerInfo, %struct.ServerInfo* %188, i32 0, i32 1
  %190 = load i8**, i8*** %189, align 8
  store i8** %190, i8*** %7, align 8
  br label %191

; <label>:191:                                    ; preds = %227, %184
  %192 = load i8**, i8*** %7, align 8
  %193 = icmp ne i8** %192, null
  br i1 %193, label %194, label %204

; <label>:194:                                    ; preds = %191
  %195 = load i8**, i8*** %7, align 8
  %196 = load i8*, i8** %195, align 8
  %197 = icmp ne i8* %196, null
  br i1 %197, label %198, label %204

; <label>:198:                                    ; preds = %194
  %199 = load i8**, i8*** %7, align 8
  %200 = load i8*, i8** %199, align 8
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = icmp ne i32 %202, 0
  br label %204

; <label>:204:                                    ; preds = %198, %194, %191
  %205 = phi i1 [ false, %194 ], [ false, %191 ], [ %203, %198 ]
  br i1 %205, label %206, label %230

; <label>:206:                                    ; preds = %204
  %207 = load i8**, i8*** %7, align 8
  %208 = load i8*, i8** %207, align 8
  %209 = call i64 @strlen(i8* %208) #11
  %210 = add i64 %209, 2
  %211 = load i32, i32* %10, align 4
  %212 = sext i32 %211 to i64
  %213 = add i64 %212, %210
  %214 = trunc i64 %213 to i32
  store i32 %214, i32* %10, align 4
  %215 = load i32, i32* %10, align 4
  %216 = icmp sgt i32 %215, 75
  br i1 %216, label %217, label %220

; <label>:217:                                    ; preds = %206
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %219 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %218, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0))
  store i8 32, i8* %9, align 1
  store i32 10, i32* %10, align 4
  br label %220

; <label>:220:                                    ; preds = %217, %206
  %221 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %222 = load i8, i8* %9, align 1
  %223 = sext i8 %222 to i32
  %224 = load i8**, i8*** %7, align 8
  %225 = load i8*, i8** %224, align 8
  %226 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %221, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.277, i32 0, i32 0), i32 %223, i8* %225)
  store i8 44, i8* %9, align 1
  br label %227

; <label>:227:                                    ; preds = %220
  %228 = load i8**, i8*** %7, align 8
  %229 = getelementptr inbounds i8*, i8** %228, i32 1
  store i8** %229, i8*** %7, align 8
  br label %191

; <label>:230:                                    ; preds = %204
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %232 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %231, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.265, i32 0, i32 0))
  br label %233

; <label>:233:                                    ; preds = %230
  %234 = load %struct.ServerInfo**, %struct.ServerInfo*** %8, align 8
  %235 = getelementptr inbounds %struct.ServerInfo*, %struct.ServerInfo** %234, i32 1
  store %struct.ServerInfo** %235, %struct.ServerInfo*** %8, align 8
  br label %132

; <label>:236:                                    ; preds = %132
  br label %237

; <label>:237:                                    ; preds = %236, %121
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %238, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.281, i32 0, i32 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @OpenFile(i8*, i8*, i64) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = call i8* @strchr(i8* %11, i32 62) #11
  store i8* %12, i8** %8, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %3
  store %struct._IO_FILE* null, %struct._IO_FILE** %4, align 8
  br label %54

; <label>:16:                                     ; preds = %3
  store %struct._IO_FILE* null, %struct._IO_FILE** %9, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp eq i32 %20, 62
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %16
  %23 = load i8*, i8** %8, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 2
  %25 = load i8*, i8** %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = call i32 @pickString(i8* %24, i8* %25, i64 %26)
  store i32 %27, i32* %10, align 4
  %28 = load i32, i32* %10, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %33

; <label>:30:                                     ; preds = %22
  %31 = load i8*, i8** %6, align 8
  %32 = call %struct._IO_FILE* @fopen(i8* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.286, i32 0, i32 0))
  store %struct._IO_FILE* %32, %struct._IO_FILE** %9, align 8
  br label %33

; <label>:33:                                     ; preds = %30, %22
  br label %46

; <label>:34:                                     ; preds = %16
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = load i8*, i8** %6, align 8
  %38 = load i64, i64* %7, align 8
  %39 = call i32 @pickString(i8* %36, i8* %37, i64 %38)
  store i32 %39, i32* %10, align 4
  %40 = load i32, i32* %10, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %45

; <label>:42:                                     ; preds = %34
  %43 = load i8*, i8** %6, align 8
  %44 = call %struct._IO_FILE* @fopen(i8* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.287, i32 0, i32 0))
  store %struct._IO_FILE* %44, %struct._IO_FILE** %9, align 8
  br label %45

; <label>:45:                                     ; preds = %42, %34
  br label %46

; <label>:46:                                     ; preds = %45, %33
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %48 = icmp ne %struct._IO_FILE* %47, null
  br i1 %48, label %49, label %52

; <label>:49:                                     ; preds = %46
  %50 = load i8*, i8** %8, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  store i8 0, i8* %51, align 1
  br label %52

; <label>:52:                                     ; preds = %49, %46
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  store %struct._IO_FILE* %53, %struct._IO_FILE** %4, align 8
  br label %54

; <label>:54:                                     ; preds = %52, %15
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  ret %struct._IO_FILE* %55
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @pickString(i8*, i8*, i64) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %11 = load i64, i64* %7, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13

; <label>:13:                                     ; preds = %3
  %14 = load i8*, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

; <label>:16:                                     ; preds = %13
  %17 = load i8*, i8** %5, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %16, %13, %3
  store i32 0, i32* %4, align 4
  br label %80

; <label>:20:                                     ; preds = %16
  %21 = load i8*, i8** %5, align 8
  store i8* %21, i8** %8, align 8
  br label %22

; <label>:22:                                     ; preds = %29, %20
  %23 = load i8*, i8** %8, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = call i32 @isspace(i32 %25) #11
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %32

; <label>:28:                                     ; preds = %22
  br label %29

; <label>:29:                                     ; preds = %28
  %30 = load i8*, i8** %8, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %8, align 8
  br label %22

; <label>:32:                                     ; preds = %22
  %33 = load i8*, i8** %8, align 8
  store i8* %33, i8** %9, align 8
  br label %34

; <label>:34:                                     ; preds = %49, %32
  %35 = load i8*, i8** %9, align 8
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %34
  %40 = load i8*, i8** %9, align 8
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = call i32 @isspace(i32 %42) #11
  %44 = icmp ne i32 %43, 0
  %45 = xor i1 %44, true
  br label %46

; <label>:46:                                     ; preds = %39, %34
  %47 = phi i1 [ false, %34 ], [ %45, %39 ]
  br i1 %47, label %48, label %52

; <label>:48:                                     ; preds = %46
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i8*, i8** %9, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %9, align 8
  br label %34

; <label>:52:                                     ; preds = %46
  %53 = load i8*, i8** %9, align 8
  %54 = load i8*, i8** %8, align 8
  %55 = ptrtoint i8* %53 to i64
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  store i64 %57, i64* %10, align 8
  %58 = load i64, i64* %10, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

; <label>:60:                                     ; preds = %52
  %61 = load i64, i64* %10, align 8
  %62 = load i64, i64* %7, align 8
  %63 = sub i64 %62, 1
  %64 = icmp ugt i64 %61, %63
  br i1 %64, label %65, label %66

; <label>:65:                                     ; preds = %60, %52
  store i32 0, i32* %4, align 4
  br label %80

; <label>:66:                                     ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = load i8*, i8** %8, align 8
  %69 = load i64, i64* %10, align 8
  %70 = call i8* @strncpy(i8* %67, i8* %68, i64 %69) #9
  %71 = load i8*, i8** %6, align 8
  %72 = load i64, i64* %10, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  store i8 0, i8* %73, align 1
  %74 = load i8*, i8** %9, align 8
  %75 = load i8*, i8** %5, align 8
  %76 = ptrtoint i8* %74 to i64
  %77 = ptrtoint i8* %75 to i64
  %78 = sub i64 %76, %77
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %4, align 4
  br label %80

; <label>:80:                                     ; preds = %66, %65, %19
  %81 = load i32, i32* %4, align 4
  ret i32 %81
}

; Function Attrs: nounwind readonly
declare dso_local i32 @isspace(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @DecodeError(i32) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = call i8* @__sym_ntos(%struct.res_sym* getelementptr inbounds ([12 x %struct.res_sym], [12 x %struct.res_sym]* @error_syms, i32 0, i32 0), i32 %6, i32* %5)
  store i8* %7, i8** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %1
  %11 = load i8*, i8** %4, align 8
  store i8* %11, i8** %2, align 8
  br label %13

; <label>:12:                                     ; preds = %1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24.290, i32 0, i32 0), i8** %2, align 8
  br label %13

; <label>:13:                                     ; preds = %12, %10
  %14 = load i8*, i8** %2, align 8
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @StringToClass(i8*, i32, %struct._IO_FILE*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct._IO_FILE* %2, %struct._IO_FILE** %7, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = call i32 @__sym_ston(%struct.res_sym* getelementptr inbounds ([7 x %struct.res_sym], [7 x %struct.res_sym]* @__p_class_syms, i32 0, i32 0), i8* %10, i32* %9)
  store i32 %11, i32* %8, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %4, align 4
  br label %25

; <label>:16:                                     ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %18 = icmp ne %struct._IO_FILE* %17, null
  br i1 %18, label %19, label %23

; <label>:19:                                     ; preds = %16
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25.304, i32 0, i32 0), i8* %21)
  br label %23

; <label>:23:                                     ; preds = %19, %16
  %24 = load i32, i32* %6, align 4
  store i32 %24, i32* %4, align 4
  br label %25

; <label>:25:                                     ; preds = %23, %14
  %26 = load i32, i32* %4, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @StringToType(i8*, i32, %struct._IO_FILE*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct._IO_FILE* %2, %struct._IO_FILE** %7, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = call i32 @__sym_ston(%struct.res_sym* getelementptr inbounds ([45 x %struct.res_sym], [45 x %struct.res_sym]* @__p_type_syms, i32 0, i32 0), i8* %10, i32* %9)
  store i32 %11, i32* %8, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %4, align 4
  br label %25

; <label>:16:                                     ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %18 = icmp ne %struct._IO_FILE* %17, null
  br i1 %18, label %19, label %23

; <label>:19:                                     ; preds = %16
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26.307, i32 0, i32 0), i8* %21)
  br label %23

; <label>:23:                                     ; preds = %19, %16
  %24 = load i32, i32* %6, align 4
  store i32 %24, i32* %4, align 4
  br label %25

; <label>:25:                                     ; preds = %23, %14
  %26 = load i32, i32* %4, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @DecodeType(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i8* @__sym_ntop(%struct.res_sym* getelementptr inbounds ([45 x %struct.res_sym], [45 x %struct.res_sym]* @__p_type_syms, i32 0, i32 0), i32 %3, i32* null)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @matchString(i8*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %4, align 8
  store i8* %8, i8** %6, align 8
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %7, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %15, label %12

; <label>:12:                                     ; preds = %2
  %13 = load i8*, i8** %7, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %12, %2
  br label %107

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %6, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = call i32 @isspace(i32 %19) #11
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %43

; <label>:22:                                     ; preds = %16
  br label %23

; <label>:23:                                     ; preds = %29, %22
  %24 = load i8*, i8** %6, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = call i32 @isspace(i32 %26) #11
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

; <label>:29:                                     ; preds = %23
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %6, align 8
  br label %23

; <label>:32:                                     ; preds = %23
  br label %33

; <label>:33:                                     ; preds = %39, %32
  %34 = load i8*, i8** %7, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = call i32 @isspace(i32 %36) #11
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %42

; <label>:39:                                     ; preds = %33
  %40 = load i8*, i8** %7, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %7, align 8
  br label %33

; <label>:42:                                     ; preds = %33
  br label %43

; <label>:43:                                     ; preds = %42, %16
  br label %44

; <label>:44:                                     ; preds = %106, %43
  %45 = load i8*, i8** %6, align 8
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = call i32 @isspace(i32 %47) #11
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %78

; <label>:50:                                     ; preds = %44
  %51 = load i8*, i8** %7, align 8
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = call i32 @isspace(i32 %53) #11
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %57, label %56

; <label>:56:                                     ; preds = %50
  br label %107

; <label>:57:                                     ; preds = %50
  br label %58

; <label>:58:                                     ; preds = %64, %57
  %59 = load i8*, i8** %7, align 8
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = call i32 @isspace(i32 %61) #11
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %67

; <label>:64:                                     ; preds = %58
  %65 = load i8*, i8** %7, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %7, align 8
  br label %58

; <label>:67:                                     ; preds = %58
  br label %68

; <label>:68:                                     ; preds = %74, %67
  %69 = load i8*, i8** %6, align 8
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = call i32 @isspace(i32 %71) #11
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %77

; <label>:74:                                     ; preds = %68
  %75 = load i8*, i8** %6, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %6, align 8
  br label %68

; <label>:77:                                     ; preds = %68
  br label %106

; <label>:78:                                     ; preds = %44
  %79 = load i8*, i8** %6, align 8
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %90

; <label>:83:                                     ; preds = %78
  %84 = load i8*, i8** %7, align 8
  %85 = load i8*, i8** %5, align 8
  %86 = ptrtoint i8* %84 to i64
  %87 = ptrtoint i8* %85 to i64
  %88 = sub i64 %86, %87
  %89 = trunc i64 %88 to i32
  store i32 %89, i32* %3, align 4
  br label %108

; <label>:90:                                     ; preds = %78
  %91 = load i8*, i8** %6, align 8
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = load i8*, i8** %7, align 8
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = icmp ne i32 %93, %96
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %90
  br label %107

; <label>:99:                                     ; preds = %90
  %100 = load i8*, i8** %7, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %7, align 8
  %102 = load i8*, i8** %6, align 8
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %6, align 8
  br label %104

; <label>:104:                                    ; preds = %99
  br label %105

; <label>:105:                                    ; preds = %104
  br label %106

; <label>:106:                                    ; preds = %105, %77
  br label %44

; <label>:107:                                    ; preds = %98, %56, %15
  store i32 0, i32* %3, align 4
  br label %108

; <label>:108:                                    ; preds = %107, %83
  %109 = load i32, i32* %3, align 4
  ret i32 %109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yylex() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = load i32, i32* @yy_init, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %32

; <label>:11:                                     ; preds = %0
  store i32 0, i32* @yy_init, align 4
  %12 = load i32, i32* @yy_start, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

; <label>:14:                                     ; preds = %11
  store i32 1, i32* @yy_start, align 4
  br label %15

; <label>:15:                                     ; preds = %14, %11
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  %17 = icmp ne %struct._IO_FILE* %16, null
  br i1 %17, label %20, label %18

; <label>:18:                                     ; preds = %15
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %19, %struct._IO_FILE** @yyin, align 8
  br label %20

; <label>:20:                                     ; preds = %18, %15
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @yyout, align 8
  %22 = icmp ne %struct._IO_FILE* %21, null
  br i1 %22, label %25, label %23

; <label>:23:                                     ; preds = %20
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %24, %struct._IO_FILE** @yyout, align 8
  br label %25

; <label>:25:                                     ; preds = %23, %20
  %26 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %27 = icmp ne %struct.yy_buffer_state* %26, null
  br i1 %27, label %31, label %28

; <label>:28:                                     ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %30 = call %struct.yy_buffer_state* @yy_create_buffer(%struct._IO_FILE* %29, i32 16384)
  store volatile i8 0, i8* @specialMalloc, align 1
  store %struct.yy_buffer_state* %30, %struct.yy_buffer_state** @yy_current_buffer, align 8
  br label %31

; <label>:31:                                     ; preds = %28, %25
  call void @yy_load_buffer_state()
  br label %32

; <label>:32:                                     ; preds = %31, %0
  br label %33

; <label>:33:                                     ; preds = %902, %32
  %34 = load i8*, i8** @yy_c_buf_p, align 8
  store i8* %34, i8** %3, align 8
  %35 = load i8, i8* @yy_hold_char, align 1
  %36 = load i8*, i8** %3, align 8
  store i8 %35, i8* %36, align 1
  %37 = load i8*, i8** %3, align 8
  store i8* %37, i8** %4, align 8
  %38 = load i32, i32* @yy_start, align 4
  store i32 %38, i32* %2, align 4
  %39 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %40 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %39, i32 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* %2, align 4
  %43 = add nsw i32 %42, %41
  store i32 %43, i32* %2, align 4
  br label %44

; <label>:44:                                     ; preds = %879, %853, %33
  br label %45

; <label>:45:                                     ; preds = %108, %44
  %46 = load i8*, i8** %3, align 8
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [256 x i32], [256 x i32]* @yy_ec, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* %6, align 1
  %53 = load i32, i32* %2, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [171 x i16], [171 x i16]* @yy_accept, i64 0, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp ne i16 %56, 0
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %45
  %59 = load i32, i32* %2, align 4
  store i32 %59, i32* @yy_last_accepting_state, align 4
  %60 = load i8*, i8** %3, align 8
  store i8* %60, i8** @yy_last_accepting_cpos, align 8
  br label %61

; <label>:61:                                     ; preds = %58, %45
  br label %62

; <label>:62:                                     ; preds = %92, %61
  %63 = load i32, i32* %2, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = sext i16 %66 to i32
  %68 = load i8, i8* %6, align 1
  %69 = zext i8 %68 to i32
  %70 = add nsw i32 %67, %69
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [655 x i16], [655 x i16]* @yy_chk, i64 0, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = load i32, i32* %2, align 4
  %76 = icmp ne i32 %74, %75
  br i1 %76, label %77, label %93

; <label>:77:                                     ; preds = %62
  %78 = load i32, i32* %2, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_def, i64 0, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  store i32 %82, i32* %2, align 4
  %83 = load i32, i32* %2, align 4
  %84 = icmp sge i32 %83, 171
  br i1 %84, label %85, label %92

; <label>:85:                                     ; preds = %77
  %86 = load i8, i8* %6, align 1
  %87 = zext i8 %86 to i32
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [29 x i32], [29 x i32]* @yy_meta, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = trunc i32 %90 to i8
  store i8 %91, i8* %6, align 1
  br label %92

; <label>:92:                                     ; preds = %85, %77
  br label %62

; <label>:93:                                     ; preds = %62
  %94 = load i32, i32* %2, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = sext i16 %97 to i32
  %99 = load i8, i8* %6, align 1
  %100 = zext i8 %99 to i32
  %101 = add i32 %98, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [655 x i16], [655 x i16]* @yy_nxt, i64 0, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = sext i16 %104 to i32
  store i32 %105, i32* %2, align 4
  %106 = load i8*, i8** %3, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %3, align 8
  br label %108

; <label>:108:                                    ; preds = %93
  %109 = load i32, i32* %2, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = icmp ne i32 %113, 626
  br i1 %114, label %45, label %115

; <label>:115:                                    ; preds = %108
  br label %116

; <label>:116:                                    ; preds = %888, %857, %146, %115
  %117 = load i32, i32* %2, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [171 x i16], [171 x i16]* @yy_accept, i64 0, i64 %118
  %120 = load i16, i16* %119, align 2
  %121 = sext i16 %120 to i32
  store i32 %121, i32* %5, align 4
  %122 = load i32, i32* %5, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %132

; <label>:124:                                    ; preds = %116
  %125 = load i8*, i8** @yy_last_accepting_cpos, align 8
  store i8* %125, i8** %3, align 8
  %126 = load i32, i32* @yy_last_accepting_state, align 4
  store i32 %126, i32* %2, align 4
  %127 = load i32, i32* %2, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [171 x i16], [171 x i16]* @yy_accept, i64 0, i64 %128
  %130 = load i16, i16* %129, align 2
  %131 = sext i16 %130 to i32
  store i32 %131, i32* %5, align 4
  br label %132

; <label>:132:                                    ; preds = %124, %116
  %133 = load i8*, i8** %4, align 8
  store i8* %133, i8** @yytext, align 8
  %134 = load i8*, i8** %3, align 8
  %135 = load i8*, i8** %4, align 8
  %136 = ptrtoint i8* %134 to i64
  %137 = ptrtoint i8* %135 to i64
  %138 = sub i64 %136, %137
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* @yyleng, align 4
  %140 = load i8*, i8** %3, align 8
  %141 = load i8, i8* %140, align 1
  store i8 %141, i8* @yy_hold_char, align 1
  %142 = load i8*, i8** %3, align 8
  store i8 0, i8* %142, align 1
  %143 = load i8*, i8** %3, align 8
  store i8* %143, i8** @yy_c_buf_p, align 8
  br label %144

; <label>:144:                                    ; preds = %864, %132
  %145 = load i32, i32* %5, align 4
  switch i32 %145, label %901 [
    i32 0, label %146
    i32 1, label %151
    i32 2, label %184
    i32 3, label %217
    i32 4, label %248
    i32 5, label %280
    i32 6, label %313
    i32 7, label %346
    i32 8, label %378
    i32 9, label %411
    i32 10, label %444
    i32 11, label %477
    i32 12, label %510
    i32 13, label %543
    i32 14, label %574
    i32 15, label %605
    i32 16, label %638
    i32 17, label %671
    i32 18, label %704
    i32 19, label %737
    i32 20, label %753
    i32 21, label %771
    i32 22, label %787
    i32 24, label %808
    i32 23, label %809
  ]

; <label>:146:                                    ; preds = %144
  %147 = load i8, i8* @yy_hold_char, align 1
  %148 = load i8*, i8** %3, align 8
  store i8 %147, i8* %148, align 1
  %149 = load i8*, i8** @yy_last_accepting_cpos, align 8
  store i8* %149, i8** %3, align 8
  %150 = load i32, i32* @yy_last_accepting_state, align 4
  store i32 %150, i32* %2, align 4
  br label %116

; <label>:151:                                    ; preds = %144
  %152 = load i8, i8* @yy_hold_char, align 1
  %153 = load i8*, i8** %3, align 8
  store i8 %152, i8* %153, align 1
  %154 = load i8*, i8** %3, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 -1
  store i8* %155, i8** %3, align 8
  store i8* %155, i8** @yy_c_buf_p, align 8
  %156 = load i8*, i8** %4, align 8
  store i8* %156, i8** @yytext, align 8
  %157 = load i8*, i8** %3, align 8
  %158 = load i8*, i8** %4, align 8
  %159 = ptrtoint i8* %157 to i64
  %160 = ptrtoint i8* %158 to i64
  %161 = sub i64 %159, %160
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* @yyleng, align 4
  %163 = load i8*, i8** %3, align 8
  %164 = load i8, i8* %163, align 1
  store i8 %164, i8* @yy_hold_char, align 1
  %165 = load i8*, i8** %3, align 8
  store i8 0, i8* %165, align 1
  %166 = load i8*, i8** %3, align 8
  store i8* %166, i8** @yy_c_buf_p, align 8
  %167 = load i32, i32* @yyleng, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %181

; <label>:169:                                    ; preds = %151
  %170 = load i8*, i8** @yytext, align 8
  %171 = load i32, i32* @yyleng, align 4
  %172 = sub nsw i32 %171, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %170, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = sext i8 %175 to i32
  %177 = icmp eq i32 %176, 10
  %178 = zext i1 %177 to i32
  %179 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %180 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %179, i32 0, i32 7
  store i32 %178, i32* %180, align 8
  br label %181

; <label>:181:                                    ; preds = %169, %151
  %182 = load i8*, i8** @yytext, align 8
  %183 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @SetDefaultServer to i32 (i8*, i32, ...)*)(i8* %182, i32 0)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:184:                                    ; preds = %144
  %185 = load i8, i8* @yy_hold_char, align 1
  %186 = load i8*, i8** %3, align 8
  store i8 %185, i8* %186, align 1
  %187 = load i8*, i8** %3, align 8
  %188 = getelementptr inbounds i8, i8* %187, i64 -1
  store i8* %188, i8** %3, align 8
  store i8* %188, i8** @yy_c_buf_p, align 8
  %189 = load i8*, i8** %4, align 8
  store i8* %189, i8** @yytext, align 8
  %190 = load i8*, i8** %3, align 8
  %191 = load i8*, i8** %4, align 8
  %192 = ptrtoint i8* %190 to i64
  %193 = ptrtoint i8* %191 to i64
  %194 = sub i64 %192, %193
  %195 = trunc i64 %194 to i32
  store i32 %195, i32* @yyleng, align 4
  %196 = load i8*, i8** %3, align 8
  %197 = load i8, i8* %196, align 1
  store i8 %197, i8* @yy_hold_char, align 1
  %198 = load i8*, i8** %3, align 8
  store i8 0, i8* %198, align 1
  %199 = load i8*, i8** %3, align 8
  store i8* %199, i8** @yy_c_buf_p, align 8
  %200 = load i32, i32* @yyleng, align 4
  %201 = icmp sgt i32 %200, 0
  br i1 %201, label %202, label %214

; <label>:202:                                    ; preds = %184
  %203 = load i8*, i8** @yytext, align 8
  %204 = load i32, i32* @yyleng, align 4
  %205 = sub nsw i32 %204, 1
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %203, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = sext i8 %208 to i32
  %210 = icmp eq i32 %209, 10
  %211 = zext i1 %210 to i32
  %212 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %213 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %212, i32 0, i32 7
  store i32 %211, i32* %213, align 8
  br label %214

; <label>:214:                                    ; preds = %202, %184
  %215 = load i8*, i8** @yytext, align 8
  %216 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @SetDefaultServer to i32 (i8*, i32, ...)*)(i8* %215, i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:217:                                    ; preds = %144
  %218 = load i8, i8* @yy_hold_char, align 1
  %219 = load i8*, i8** %3, align 8
  store i8 %218, i8* %219, align 1
  %220 = load i8*, i8** %3, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 -1
  store i8* %221, i8** %3, align 8
  store i8* %221, i8** @yy_c_buf_p, align 8
  %222 = load i8*, i8** %4, align 8
  store i8* %222, i8** @yytext, align 8
  %223 = load i8*, i8** %3, align 8
  %224 = load i8*, i8** %4, align 8
  %225 = ptrtoint i8* %223 to i64
  %226 = ptrtoint i8* %224 to i64
  %227 = sub i64 %225, %226
  %228 = trunc i64 %227 to i32
  store i32 %228, i32* @yyleng, align 4
  %229 = load i8*, i8** %3, align 8
  %230 = load i8, i8* %229, align 1
  store i8 %230, i8* @yy_hold_char, align 1
  %231 = load i8*, i8** %3, align 8
  store i8 0, i8* %231, align 1
  %232 = load i8*, i8** %3, align 8
  store i8* %232, i8** @yy_c_buf_p, align 8
  %233 = load i32, i32* @yyleng, align 4
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %247

; <label>:235:                                    ; preds = %217
  %236 = load i8*, i8** @yytext, align 8
  %237 = load i32, i32* @yyleng, align 4
  %238 = sub nsw i32 %237, 1
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %236, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = sext i8 %241 to i32
  %243 = icmp eq i32 %242, 10
  %244 = zext i1 %243 to i32
  %245 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %246 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %245, i32 0, i32 7
  store i32 %244, i32* %246, align 8
  br label %247

; <label>:247:                                    ; preds = %235, %217
  store i32 0, i32* %1, align 4
  br label %903

; <label>:248:                                    ; preds = %144
  %249 = load i8, i8* @yy_hold_char, align 1
  %250 = load i8*, i8** %3, align 8
  store i8 %249, i8* %250, align 1
  %251 = load i8*, i8** %3, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 -1
  store i8* %252, i8** %3, align 8
  store i8* %252, i8** @yy_c_buf_p, align 8
  %253 = load i8*, i8** %4, align 8
  store i8* %253, i8** @yytext, align 8
  %254 = load i8*, i8** %3, align 8
  %255 = load i8*, i8** %4, align 8
  %256 = ptrtoint i8* %254 to i64
  %257 = ptrtoint i8* %255 to i64
  %258 = sub i64 %256, %257
  %259 = trunc i64 %258 to i32
  store i32 %259, i32* @yyleng, align 4
  %260 = load i8*, i8** %3, align 8
  %261 = load i8, i8* %260, align 1
  store i8 %261, i8* @yy_hold_char, align 1
  %262 = load i8*, i8** %3, align 8
  store i8 0, i8* %262, align 1
  %263 = load i8*, i8** %3, align 8
  store i8* %263, i8** @yy_c_buf_p, align 8
  %264 = load i32, i32* @yyleng, align 4
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %266, label %278

; <label>:266:                                    ; preds = %248
  %267 = load i8*, i8** @yytext, align 8
  %268 = load i32, i32* @yyleng, align 4
  %269 = sub nsw i32 %268, 1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %267, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %273, 10
  %275 = zext i1 %274 to i32
  %276 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %277 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %276, i32 0, i32 7
  store i32 %275, i32* %277, align 8
  br label %278

; <label>:278:                                    ; preds = %266, %248
  %279 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @SetDefaultServer to i32 (i8*, i32, ...)*)(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @rootServerName, i32 0, i32 0), i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:280:                                    ; preds = %144
  %281 = load i8, i8* @yy_hold_char, align 1
  %282 = load i8*, i8** %3, align 8
  store i8 %281, i8* %282, align 1
  %283 = load i8*, i8** %3, align 8
  %284 = getelementptr inbounds i8, i8* %283, i64 -1
  store i8* %284, i8** %3, align 8
  store i8* %284, i8** @yy_c_buf_p, align 8
  %285 = load i8*, i8** %4, align 8
  store i8* %285, i8** @yytext, align 8
  %286 = load i8*, i8** %3, align 8
  %287 = load i8*, i8** %4, align 8
  %288 = ptrtoint i8* %286 to i64
  %289 = ptrtoint i8* %287 to i64
  %290 = sub i64 %288, %289
  %291 = trunc i64 %290 to i32
  store i32 %291, i32* @yyleng, align 4
  %292 = load i8*, i8** %3, align 8
  %293 = load i8, i8* %292, align 1
  store i8 %293, i8* @yy_hold_char, align 1
  %294 = load i8*, i8** %3, align 8
  store i8 0, i8* %294, align 1
  %295 = load i8*, i8** %3, align 8
  store i8* %295, i8** @yy_c_buf_p, align 8
  %296 = load i32, i32* @yyleng, align 4
  %297 = icmp sgt i32 %296, 0
  br i1 %297, label %298, label %310

; <label>:298:                                    ; preds = %280
  %299 = load i8*, i8** @yytext, align 8
  %300 = load i32, i32* @yyleng, align 4
  %301 = sub nsw i32 %300, 1
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i8, i8* %299, i64 %302
  %304 = load i8, i8* %303, align 1
  %305 = sext i8 %304 to i32
  %306 = icmp eq i32 %305, 10
  %307 = zext i1 %306 to i32
  %308 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %309 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %308, i32 0, i32 7
  store i32 %307, i32* %309, align 8
  br label %310

; <label>:310:                                    ; preds = %298, %280
  %311 = load i8*, i8** @yytext, align 8
  %312 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @Finger to i32 (i8*, i32, ...)*)(i8* %311, i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:313:                                    ; preds = %144
  %314 = load i8, i8* @yy_hold_char, align 1
  %315 = load i8*, i8** %3, align 8
  store i8 %314, i8* %315, align 1
  %316 = load i8*, i8** %3, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 -1
  store i8* %317, i8** %3, align 8
  store i8* %317, i8** @yy_c_buf_p, align 8
  %318 = load i8*, i8** %4, align 8
  store i8* %318, i8** @yytext, align 8
  %319 = load i8*, i8** %3, align 8
  %320 = load i8*, i8** %4, align 8
  %321 = ptrtoint i8* %319 to i64
  %322 = ptrtoint i8* %320 to i64
  %323 = sub i64 %321, %322
  %324 = trunc i64 %323 to i32
  store i32 %324, i32* @yyleng, align 4
  %325 = load i8*, i8** %3, align 8
  %326 = load i8, i8* %325, align 1
  store i8 %326, i8* @yy_hold_char, align 1
  %327 = load i8*, i8** %3, align 8
  store i8 0, i8* %327, align 1
  %328 = load i8*, i8** %3, align 8
  store i8* %328, i8** @yy_c_buf_p, align 8
  %329 = load i32, i32* @yyleng, align 4
  %330 = icmp sgt i32 %329, 0
  br i1 %330, label %331, label %343

; <label>:331:                                    ; preds = %313
  %332 = load i8*, i8** @yytext, align 8
  %333 = load i32, i32* @yyleng, align 4
  %334 = sub nsw i32 %333, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8, i8* %332, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = sext i8 %337 to i32
  %339 = icmp eq i32 %338, 10
  %340 = zext i1 %339 to i32
  %341 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %342 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %341, i32 0, i32 7
  store i32 %340, i32* %342, align 8
  br label %343

; <label>:343:                                    ; preds = %331, %313
  %344 = load i8*, i8** @yytext, align 8
  %345 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @Finger to i32 (i8*, i32, ...)*)(i8* %344, i32 0)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:346:                                    ; preds = %144
  %347 = load i8, i8* @yy_hold_char, align 1
  %348 = load i8*, i8** %3, align 8
  store i8 %347, i8* %348, align 1
  %349 = load i8*, i8** %3, align 8
  %350 = getelementptr inbounds i8, i8* %349, i64 -1
  store i8* %350, i8** %3, align 8
  store i8* %350, i8** @yy_c_buf_p, align 8
  %351 = load i8*, i8** %4, align 8
  store i8* %351, i8** @yytext, align 8
  %352 = load i8*, i8** %3, align 8
  %353 = load i8*, i8** %4, align 8
  %354 = ptrtoint i8* %352 to i64
  %355 = ptrtoint i8* %353 to i64
  %356 = sub i64 %354, %355
  %357 = trunc i64 %356 to i32
  store i32 %357, i32* @yyleng, align 4
  %358 = load i8*, i8** %3, align 8
  %359 = load i8, i8* %358, align 1
  store i8 %359, i8* @yy_hold_char, align 1
  %360 = load i8*, i8** %3, align 8
  store i8 0, i8* %360, align 1
  %361 = load i8*, i8** %3, align 8
  store i8* %361, i8** @yy_c_buf_p, align 8
  %362 = load i32, i32* @yyleng, align 4
  %363 = icmp sgt i32 %362, 0
  br i1 %363, label %364, label %376

; <label>:364:                                    ; preds = %346
  %365 = load i8*, i8** @yytext, align 8
  %366 = load i32, i32* @yyleng, align 4
  %367 = sub nsw i32 %366, 1
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds i8, i8* %365, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = sext i8 %370 to i32
  %372 = icmp eq i32 %371, 10
  %373 = zext i1 %372 to i32
  %374 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %375 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %374, i32 0, i32 7
  store i32 %373, i32* %375, align 8
  br label %376

; <label>:376:                                    ; preds = %364, %346
  %377 = load i8*, i8** @yytext, align 8
  call void @ViewList(i8* %377)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:378:                                    ; preds = %144
  %379 = load i8, i8* @yy_hold_char, align 1
  %380 = load i8*, i8** %3, align 8
  store i8 %379, i8* %380, align 1
  %381 = load i8*, i8** %3, align 8
  %382 = getelementptr inbounds i8, i8* %381, i64 -1
  store i8* %382, i8** %3, align 8
  store i8* %382, i8** @yy_c_buf_p, align 8
  %383 = load i8*, i8** %4, align 8
  store i8* %383, i8** @yytext, align 8
  %384 = load i8*, i8** %3, align 8
  %385 = load i8*, i8** %4, align 8
  %386 = ptrtoint i8* %384 to i64
  %387 = ptrtoint i8* %385 to i64
  %388 = sub i64 %386, %387
  %389 = trunc i64 %388 to i32
  store i32 %389, i32* @yyleng, align 4
  %390 = load i8*, i8** %3, align 8
  %391 = load i8, i8* %390, align 1
  store i8 %391, i8* @yy_hold_char, align 1
  %392 = load i8*, i8** %3, align 8
  store i8 0, i8* %392, align 1
  %393 = load i8*, i8** %3, align 8
  store i8* %393, i8** @yy_c_buf_p, align 8
  %394 = load i32, i32* @yyleng, align 4
  %395 = icmp sgt i32 %394, 0
  br i1 %395, label %396, label %408

; <label>:396:                                    ; preds = %378
  %397 = load i8*, i8** @yytext, align 8
  %398 = load i32, i32* @yyleng, align 4
  %399 = sub nsw i32 %398, 1
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i8, i8* %397, i64 %400
  %402 = load i8, i8* %401, align 1
  %403 = sext i8 %402 to i32
  %404 = icmp eq i32 %403, 10
  %405 = zext i1 %404 to i32
  %406 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %407 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %406, i32 0, i32 7
  store i32 %405, i32* %407, align 8
  br label %408

; <label>:408:                                    ; preds = %396, %378
  %409 = load i8*, i8** @yytext, align 8
  %410 = call i32 (i8*, i32, ...) bitcast (void (i8*, i32)* @ListHosts to i32 (i8*, i32, ...)*)(i8* %409, i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:411:                                    ; preds = %144
  %412 = load i8, i8* @yy_hold_char, align 1
  %413 = load i8*, i8** %3, align 8
  store i8 %412, i8* %413, align 1
  %414 = load i8*, i8** %3, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 -1
  store i8* %415, i8** %3, align 8
  store i8* %415, i8** @yy_c_buf_p, align 8
  %416 = load i8*, i8** %4, align 8
  store i8* %416, i8** @yytext, align 8
  %417 = load i8*, i8** %3, align 8
  %418 = load i8*, i8** %4, align 8
  %419 = ptrtoint i8* %417 to i64
  %420 = ptrtoint i8* %418 to i64
  %421 = sub i64 %419, %420
  %422 = trunc i64 %421 to i32
  store i32 %422, i32* @yyleng, align 4
  %423 = load i8*, i8** %3, align 8
  %424 = load i8, i8* %423, align 1
  store i8 %424, i8* @yy_hold_char, align 1
  %425 = load i8*, i8** %3, align 8
  store i8 0, i8* %425, align 1
  %426 = load i8*, i8** %3, align 8
  store i8* %426, i8** @yy_c_buf_p, align 8
  %427 = load i32, i32* @yyleng, align 4
  %428 = icmp sgt i32 %427, 0
  br i1 %428, label %429, label %441

; <label>:429:                                    ; preds = %411
  %430 = load i8*, i8** @yytext, align 8
  %431 = load i32, i32* @yyleng, align 4
  %432 = sub nsw i32 %431, 1
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i8, i8* %430, i64 %433
  %435 = load i8, i8* %434, align 1
  %436 = sext i8 %435 to i32
  %437 = icmp eq i32 %436, 10
  %438 = zext i1 %437 to i32
  %439 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %440 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %439, i32 0, i32 7
  store i32 %438, i32* %440, align 8
  br label %441

; <label>:441:                                    ; preds = %429, %411
  %442 = load i8*, i8** @yytext, align 8
  %443 = call i32 (i8*, i32, ...) bitcast (void (i8*, i32)* @ListHosts to i32 (i8*, i32, ...)*)(i8* %442, i32 0)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:444:                                    ; preds = %144
  %445 = load i8, i8* @yy_hold_char, align 1
  %446 = load i8*, i8** %3, align 8
  store i8 %445, i8* %446, align 1
  %447 = load i8*, i8** %3, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 -1
  store i8* %448, i8** %3, align 8
  store i8* %448, i8** @yy_c_buf_p, align 8
  %449 = load i8*, i8** %4, align 8
  store i8* %449, i8** @yytext, align 8
  %450 = load i8*, i8** %3, align 8
  %451 = load i8*, i8** %4, align 8
  %452 = ptrtoint i8* %450 to i64
  %453 = ptrtoint i8* %451 to i64
  %454 = sub i64 %452, %453
  %455 = trunc i64 %454 to i32
  store i32 %455, i32* @yyleng, align 4
  %456 = load i8*, i8** %3, align 8
  %457 = load i8, i8* %456, align 1
  store i8 %457, i8* @yy_hold_char, align 1
  %458 = load i8*, i8** %3, align 8
  store i8 0, i8* %458, align 1
  %459 = load i8*, i8** %3, align 8
  store i8* %459, i8** @yy_c_buf_p, align 8
  %460 = load i32, i32* @yyleng, align 4
  %461 = icmp sgt i32 %460, 0
  br i1 %461, label %462, label %474

; <label>:462:                                    ; preds = %444
  %463 = load i8*, i8** @yytext, align 8
  %464 = load i32, i32* @yyleng, align 4
  %465 = sub nsw i32 %464, 1
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, i8* %463, i64 %466
  %468 = load i8, i8* %467, align 1
  %469 = sext i8 %468 to i32
  %470 = icmp eq i32 %469, 10
  %471 = zext i1 %470 to i32
  %472 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %473 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %472, i32 0, i32 7
  store i32 %471, i32* %473, align 8
  br label %474

; <label>:474:                                    ; preds = %462, %444
  %475 = load i8*, i8** @yytext, align 8
  %476 = call i32 (i8*, i32, ...) bitcast (void (i8*, i32)* @ListHostsByType to i32 (i8*, i32, ...)*)(i8* %475, i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:477:                                    ; preds = %144
  %478 = load i8, i8* @yy_hold_char, align 1
  %479 = load i8*, i8** %3, align 8
  store i8 %478, i8* %479, align 1
  %480 = load i8*, i8** %3, align 8
  %481 = getelementptr inbounds i8, i8* %480, i64 -1
  store i8* %481, i8** %3, align 8
  store i8* %481, i8** @yy_c_buf_p, align 8
  %482 = load i8*, i8** %4, align 8
  store i8* %482, i8** @yytext, align 8
  %483 = load i8*, i8** %3, align 8
  %484 = load i8*, i8** %4, align 8
  %485 = ptrtoint i8* %483 to i64
  %486 = ptrtoint i8* %484 to i64
  %487 = sub i64 %485, %486
  %488 = trunc i64 %487 to i32
  store i32 %488, i32* @yyleng, align 4
  %489 = load i8*, i8** %3, align 8
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* @yy_hold_char, align 1
  %491 = load i8*, i8** %3, align 8
  store i8 0, i8* %491, align 1
  %492 = load i8*, i8** %3, align 8
  store i8* %492, i8** @yy_c_buf_p, align 8
  %493 = load i32, i32* @yyleng, align 4
  %494 = icmp sgt i32 %493, 0
  br i1 %494, label %495, label %507

; <label>:495:                                    ; preds = %477
  %496 = load i8*, i8** @yytext, align 8
  %497 = load i32, i32* @yyleng, align 4
  %498 = sub nsw i32 %497, 1
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %496, i64 %499
  %501 = load i8, i8* %500, align 1
  %502 = sext i8 %501 to i32
  %503 = icmp eq i32 %502, 10
  %504 = zext i1 %503 to i32
  %505 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %506 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %505, i32 0, i32 7
  store i32 %504, i32* %506, align 8
  br label %507

; <label>:507:                                    ; preds = %495, %477
  %508 = load i8*, i8** @yytext, align 8
  %509 = call i32 (i8*, i32, ...) bitcast (void (i8*, i32)* @ListHostsByType to i32 (i8*, i32, ...)*)(i8* %508, i32 0)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:510:                                    ; preds = %144
  %511 = load i8, i8* @yy_hold_char, align 1
  %512 = load i8*, i8** %3, align 8
  store i8 %511, i8* %512, align 1
  %513 = load i8*, i8** %3, align 8
  %514 = getelementptr inbounds i8, i8* %513, i64 -1
  store i8* %514, i8** %3, align 8
  store i8* %514, i8** @yy_c_buf_p, align 8
  %515 = load i8*, i8** %4, align 8
  store i8* %515, i8** @yytext, align 8
  %516 = load i8*, i8** %3, align 8
  %517 = load i8*, i8** %4, align 8
  %518 = ptrtoint i8* %516 to i64
  %519 = ptrtoint i8* %517 to i64
  %520 = sub i64 %518, %519
  %521 = trunc i64 %520 to i32
  store i32 %521, i32* @yyleng, align 4
  %522 = load i8*, i8** %3, align 8
  %523 = load i8, i8* %522, align 1
  store i8 %523, i8* @yy_hold_char, align 1
  %524 = load i8*, i8** %3, align 8
  store i8 0, i8* %524, align 1
  %525 = load i8*, i8** %3, align 8
  store i8* %525, i8** @yy_c_buf_p, align 8
  %526 = load i32, i32* @yyleng, align 4
  %527 = icmp sgt i32 %526, 0
  br i1 %527, label %528, label %540

; <label>:528:                                    ; preds = %510
  %529 = load i8*, i8** @yytext, align 8
  %530 = load i32, i32* @yyleng, align 4
  %531 = sub nsw i32 %530, 1
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %529, i64 %532
  %534 = load i8, i8* %533, align 1
  %535 = sext i8 %534 to i32
  %536 = icmp eq i32 %535, 10
  %537 = zext i1 %536 to i32
  %538 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %539 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %538, i32 0, i32 7
  store i32 %537, i32* %539, align 8
  br label %540

; <label>:540:                                    ; preds = %528, %510
  %541 = load i8*, i8** @yytext, align 8
  %542 = call i32 (i8*, ...) bitcast (i32 (i8*)* @SetOption to i32 (i8*, ...)*)(i8* %541)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:543:                                    ; preds = %144
  %544 = load i8, i8* @yy_hold_char, align 1
  %545 = load i8*, i8** %3, align 8
  store i8 %544, i8* %545, align 1
  %546 = load i8*, i8** %3, align 8
  %547 = getelementptr inbounds i8, i8* %546, i64 -1
  store i8* %547, i8** %3, align 8
  store i8* %547, i8** @yy_c_buf_p, align 8
  %548 = load i8*, i8** %4, align 8
  store i8* %548, i8** @yytext, align 8
  %549 = load i8*, i8** %3, align 8
  %550 = load i8*, i8** %4, align 8
  %551 = ptrtoint i8* %549 to i64
  %552 = ptrtoint i8* %550 to i64
  %553 = sub i64 %551, %552
  %554 = trunc i64 %553 to i32
  store i32 %554, i32* @yyleng, align 4
  %555 = load i8*, i8** %3, align 8
  %556 = load i8, i8* %555, align 1
  store i8 %556, i8* @yy_hold_char, align 1
  %557 = load i8*, i8** %3, align 8
  store i8 0, i8* %557, align 1
  %558 = load i8*, i8** %3, align 8
  store i8* %558, i8** @yy_c_buf_p, align 8
  %559 = load i32, i32* @yyleng, align 4
  %560 = icmp sgt i32 %559, 0
  br i1 %560, label %561, label %573

; <label>:561:                                    ; preds = %543
  %562 = load i8*, i8** @yytext, align 8
  %563 = load i32, i32* @yyleng, align 4
  %564 = sub nsw i32 %563, 1
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds i8, i8* %562, i64 %565
  %567 = load i8, i8* %566, align 1
  %568 = sext i8 %567 to i32
  %569 = icmp eq i32 %568, 10
  %570 = zext i1 %569 to i32
  %571 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %572 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %571, i32 0, i32 7
  store i32 %570, i32* %572, align 8
  br label %573

; <label>:573:                                    ; preds = %561, %543
  call void (...) bitcast (void ()* @PrintHelp to void (...)*)()
  store i32 1, i32* %1, align 4
  br label %903

; <label>:574:                                    ; preds = %144
  %575 = load i8, i8* @yy_hold_char, align 1
  %576 = load i8*, i8** %3, align 8
  store i8 %575, i8* %576, align 1
  %577 = load i8*, i8** %3, align 8
  %578 = getelementptr inbounds i8, i8* %577, i64 -1
  store i8* %578, i8** %3, align 8
  store i8* %578, i8** @yy_c_buf_p, align 8
  %579 = load i8*, i8** %4, align 8
  store i8* %579, i8** @yytext, align 8
  %580 = load i8*, i8** %3, align 8
  %581 = load i8*, i8** %4, align 8
  %582 = ptrtoint i8* %580 to i64
  %583 = ptrtoint i8* %581 to i64
  %584 = sub i64 %582, %583
  %585 = trunc i64 %584 to i32
  store i32 %585, i32* @yyleng, align 4
  %586 = load i8*, i8** %3, align 8
  %587 = load i8, i8* %586, align 1
  store i8 %587, i8* @yy_hold_char, align 1
  %588 = load i8*, i8** %3, align 8
  store i8 0, i8* %588, align 1
  %589 = load i8*, i8** %3, align 8
  store i8* %589, i8** @yy_c_buf_p, align 8
  %590 = load i32, i32* @yyleng, align 4
  %591 = icmp sgt i32 %590, 0
  br i1 %591, label %592, label %604

; <label>:592:                                    ; preds = %574
  %593 = load i8*, i8** @yytext, align 8
  %594 = load i32, i32* @yyleng, align 4
  %595 = sub nsw i32 %594, 1
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds i8, i8* %593, i64 %596
  %598 = load i8, i8* %597, align 1
  %599 = sext i8 %598 to i32
  %600 = icmp eq i32 %599, 10
  %601 = zext i1 %600 to i32
  %602 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %603 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %602, i32 0, i32 7
  store i32 %601, i32* %603, align 8
  br label %604

; <label>:604:                                    ; preds = %592, %574
  call void (...) bitcast (void ()* @PrintHelp to void (...)*)()
  store i32 1, i32* %1, align 4
  br label %903

; <label>:605:                                    ; preds = %144
  %606 = load i8, i8* @yy_hold_char, align 1
  %607 = load i8*, i8** %3, align 8
  store i8 %606, i8* %607, align 1
  %608 = load i8*, i8** %3, align 8
  %609 = getelementptr inbounds i8, i8* %608, i64 -1
  store i8* %609, i8** %3, align 8
  store i8* %609, i8** @yy_c_buf_p, align 8
  %610 = load i8*, i8** %4, align 8
  store i8* %610, i8** @yytext, align 8
  %611 = load i8*, i8** %3, align 8
  %612 = load i8*, i8** %4, align 8
  %613 = ptrtoint i8* %611 to i64
  %614 = ptrtoint i8* %612 to i64
  %615 = sub i64 %613, %614
  %616 = trunc i64 %615 to i32
  store i32 %616, i32* @yyleng, align 4
  %617 = load i8*, i8** %3, align 8
  %618 = load i8, i8* %617, align 1
  store i8 %618, i8* @yy_hold_char, align 1
  %619 = load i8*, i8** %3, align 8
  store i8 0, i8* %619, align 1
  %620 = load i8*, i8** %3, align 8
  store i8* %620, i8** @yy_c_buf_p, align 8
  %621 = load i32, i32* @yyleng, align 4
  %622 = icmp sgt i32 %621, 0
  br i1 %622, label %623, label %635

; <label>:623:                                    ; preds = %605
  %624 = load i8*, i8** @yytext, align 8
  %625 = load i32, i32* @yyleng, align 4
  %626 = sub nsw i32 %625, 1
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i8, i8* %624, i64 %627
  %629 = load i8, i8* %628, align 1
  %630 = sext i8 %629 to i32
  %631 = icmp eq i32 %630, 10
  %632 = zext i1 %631 to i32
  %633 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %634 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %633, i32 0, i32 7
  store i32 %632, i32* %634, align 8
  br label %635

; <label>:635:                                    ; preds = %623, %605
  %636 = load i8*, i8** @yytext, align 8
  %637 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @LookupHost to i32 (i8*, i32, ...)*)(i8* %636, i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:638:                                    ; preds = %144
  %639 = load i8, i8* @yy_hold_char, align 1
  %640 = load i8*, i8** %3, align 8
  store i8 %639, i8* %640, align 1
  %641 = load i8*, i8** %3, align 8
  %642 = getelementptr inbounds i8, i8* %641, i64 -1
  store i8* %642, i8** %3, align 8
  store i8* %642, i8** @yy_c_buf_p, align 8
  %643 = load i8*, i8** %4, align 8
  store i8* %643, i8** @yytext, align 8
  %644 = load i8*, i8** %3, align 8
  %645 = load i8*, i8** %4, align 8
  %646 = ptrtoint i8* %644 to i64
  %647 = ptrtoint i8* %645 to i64
  %648 = sub i64 %646, %647
  %649 = trunc i64 %648 to i32
  store i32 %649, i32* @yyleng, align 4
  %650 = load i8*, i8** %3, align 8
  %651 = load i8, i8* %650, align 1
  store i8 %651, i8* @yy_hold_char, align 1
  %652 = load i8*, i8** %3, align 8
  store i8 0, i8* %652, align 1
  %653 = load i8*, i8** %3, align 8
  store i8* %653, i8** @yy_c_buf_p, align 8
  %654 = load i32, i32* @yyleng, align 4
  %655 = icmp sgt i32 %654, 0
  br i1 %655, label %656, label %668

; <label>:656:                                    ; preds = %638
  %657 = load i8*, i8** @yytext, align 8
  %658 = load i32, i32* @yyleng, align 4
  %659 = sub nsw i32 %658, 1
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds i8, i8* %657, i64 %660
  %662 = load i8, i8* %661, align 1
  %663 = sext i8 %662 to i32
  %664 = icmp eq i32 %663, 10
  %665 = zext i1 %664 to i32
  %666 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %667 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %666, i32 0, i32 7
  store i32 %665, i32* %667, align 8
  br label %668

; <label>:668:                                    ; preds = %656, %638
  %669 = load i8*, i8** @yytext, align 8
  %670 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @LookupHost to i32 (i8*, i32, ...)*)(i8* %669, i32 0)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:671:                                    ; preds = %144
  %672 = load i8, i8* @yy_hold_char, align 1
  %673 = load i8*, i8** %3, align 8
  store i8 %672, i8* %673, align 1
  %674 = load i8*, i8** %3, align 8
  %675 = getelementptr inbounds i8, i8* %674, i64 -1
  store i8* %675, i8** %3, align 8
  store i8* %675, i8** @yy_c_buf_p, align 8
  %676 = load i8*, i8** %4, align 8
  store i8* %676, i8** @yytext, align 8
  %677 = load i8*, i8** %3, align 8
  %678 = load i8*, i8** %4, align 8
  %679 = ptrtoint i8* %677 to i64
  %680 = ptrtoint i8* %678 to i64
  %681 = sub i64 %679, %680
  %682 = trunc i64 %681 to i32
  store i32 %682, i32* @yyleng, align 4
  %683 = load i8*, i8** %3, align 8
  %684 = load i8, i8* %683, align 1
  store i8 %684, i8* @yy_hold_char, align 1
  %685 = load i8*, i8** %3, align 8
  store i8 0, i8* %685, align 1
  %686 = load i8*, i8** %3, align 8
  store i8* %686, i8** @yy_c_buf_p, align 8
  %687 = load i32, i32* @yyleng, align 4
  %688 = icmp sgt i32 %687, 0
  br i1 %688, label %689, label %701

; <label>:689:                                    ; preds = %671
  %690 = load i8*, i8** @yytext, align 8
  %691 = load i32, i32* @yyleng, align 4
  %692 = sub nsw i32 %691, 1
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, i8* %690, i64 %693
  %695 = load i8, i8* %694, align 1
  %696 = sext i8 %695 to i32
  %697 = icmp eq i32 %696, 10
  %698 = zext i1 %697 to i32
  %699 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %700 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %699, i32 0, i32 7
  store i32 %698, i32* %700, align 8
  br label %701

; <label>:701:                                    ; preds = %689, %671
  %702 = load i8*, i8** @yytext, align 8
  %703 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @LookupHostWithServer to i32 (i8*, i32, ...)*)(i8* %702, i32 1)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:704:                                    ; preds = %144
  %705 = load i8, i8* @yy_hold_char, align 1
  %706 = load i8*, i8** %3, align 8
  store i8 %705, i8* %706, align 1
  %707 = load i8*, i8** %3, align 8
  %708 = getelementptr inbounds i8, i8* %707, i64 -1
  store i8* %708, i8** %3, align 8
  store i8* %708, i8** @yy_c_buf_p, align 8
  %709 = load i8*, i8** %4, align 8
  store i8* %709, i8** @yytext, align 8
  %710 = load i8*, i8** %3, align 8
  %711 = load i8*, i8** %4, align 8
  %712 = ptrtoint i8* %710 to i64
  %713 = ptrtoint i8* %711 to i64
  %714 = sub i64 %712, %713
  %715 = trunc i64 %714 to i32
  store i32 %715, i32* @yyleng, align 4
  %716 = load i8*, i8** %3, align 8
  %717 = load i8, i8* %716, align 1
  store i8 %717, i8* @yy_hold_char, align 1
  %718 = load i8*, i8** %3, align 8
  store i8 0, i8* %718, align 1
  %719 = load i8*, i8** %3, align 8
  store i8* %719, i8** @yy_c_buf_p, align 8
  %720 = load i32, i32* @yyleng, align 4
  %721 = icmp sgt i32 %720, 0
  br i1 %721, label %722, label %734

; <label>:722:                                    ; preds = %704
  %723 = load i8*, i8** @yytext, align 8
  %724 = load i32, i32* @yyleng, align 4
  %725 = sub nsw i32 %724, 1
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds i8, i8* %723, i64 %726
  %728 = load i8, i8* %727, align 1
  %729 = sext i8 %728 to i32
  %730 = icmp eq i32 %729, 10
  %731 = zext i1 %730 to i32
  %732 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %733 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %732, i32 0, i32 7
  store i32 %731, i32* %733, align 8
  br label %734

; <label>:734:                                    ; preds = %722, %704
  %735 = load i8*, i8** @yytext, align 8
  %736 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @LookupHostWithServer to i32 (i8*, i32, ...)*)(i8* %735, i32 0)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:737:                                    ; preds = %144
  %738 = load i32, i32* @yyleng, align 4
  %739 = icmp sgt i32 %738, 0
  br i1 %739, label %740, label %752

; <label>:740:                                    ; preds = %737
  %741 = load i8*, i8** @yytext, align 8
  %742 = load i32, i32* @yyleng, align 4
  %743 = sub nsw i32 %742, 1
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds i8, i8* %741, i64 %744
  %746 = load i8, i8* %745, align 1
  %747 = sext i8 %746 to i32
  %748 = icmp eq i32 %747, 10
  %749 = zext i1 %748 to i32
  %750 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %751 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %750, i32 0, i32 7
  store i32 %749, i32* %751, align 8
  br label %752

; <label>:752:                                    ; preds = %740, %737
  store i32 1, i32* %1, align 4
  br label %903

; <label>:753:                                    ; preds = %144
  %754 = load i32, i32* @yyleng, align 4
  %755 = icmp sgt i32 %754, 0
  br i1 %755, label %756, label %768

; <label>:756:                                    ; preds = %753
  %757 = load i8*, i8** @yytext, align 8
  %758 = load i32, i32* @yyleng, align 4
  %759 = sub nsw i32 %758, 1
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds i8, i8* %757, i64 %760
  %762 = load i8, i8* %761, align 1
  %763 = sext i8 %762 to i32
  %764 = icmp eq i32 %763, 10
  %765 = zext i1 %764 to i32
  %766 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %767 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %766, i32 0, i32 7
  store i32 %765, i32* %767, align 8
  br label %768

; <label>:768:                                    ; preds = %756, %753
  %769 = load i8*, i8** @yytext, align 8
  %770 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.314, i32 0, i32 0), i8* %769)
  store i32 1, i32* %1, align 4
  br label %903

; <label>:771:                                    ; preds = %144
  %772 = load i32, i32* @yyleng, align 4
  %773 = icmp sgt i32 %772, 0
  br i1 %773, label %774, label %786

; <label>:774:                                    ; preds = %771
  %775 = load i8*, i8** @yytext, align 8
  %776 = load i32, i32* @yyleng, align 4
  %777 = sub nsw i32 %776, 1
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds i8, i8* %775, i64 %778
  %780 = load i8, i8* %779, align 1
  %781 = sext i8 %780 to i32
  %782 = icmp eq i32 %781, 10
  %783 = zext i1 %782 to i32
  %784 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %785 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %784, i32 0, i32 7
  store i32 %783, i32* %785, align 8
  br label %786

; <label>:786:                                    ; preds = %774, %771
  br label %902

; <label>:787:                                    ; preds = %144
  %788 = load i32, i32* @yyleng, align 4
  %789 = icmp sgt i32 %788, 0
  br i1 %789, label %790, label %802

; <label>:790:                                    ; preds = %787
  %791 = load i8*, i8** @yytext, align 8
  %792 = load i32, i32* @yyleng, align 4
  %793 = sub nsw i32 %792, 1
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds i8, i8* %791, i64 %794
  %796 = load i8, i8* %795, align 1
  %797 = sext i8 %796 to i32
  %798 = icmp eq i32 %797, 10
  %799 = zext i1 %798 to i32
  %800 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %801 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %800, i32 0, i32 7
  store i32 %799, i32* %801, align 8
  br label %802

; <label>:802:                                    ; preds = %790, %787
  %803 = load i8*, i8** @yytext, align 8
  %804 = load i32, i32* @yyleng, align 4
  %805 = sext i32 %804 to i64
  %806 = load %struct._IO_FILE*, %struct._IO_FILE** @yyout, align 8
  %807 = call i64 @fwrite(i8* %803, i64 %805, i64 1, %struct._IO_FILE* %806)
  br label %902

; <label>:808:                                    ; preds = %144
  store i32 0, i32* %1, align 4
  br label %903

; <label>:809:                                    ; preds = %144
  %810 = load i8*, i8** %3, align 8
  %811 = load i8*, i8** @yytext, align 8
  %812 = ptrtoint i8* %810 to i64
  %813 = ptrtoint i8* %811 to i64
  %814 = sub i64 %812, %813
  %815 = trunc i64 %814 to i32
  %816 = sub nsw i32 %815, 1
  store i32 %816, i32* %7, align 4
  %817 = load i8, i8* @yy_hold_char, align 1
  %818 = load i8*, i8** %3, align 8
  store i8 %817, i8* %818, align 1
  %819 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %820 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %819, i32 0, i32 9
  %821 = load i32, i32* %820, align 8
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %823, label %832

; <label>:823:                                    ; preds = %809
  %824 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %825 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %824, i32 0, i32 4
  %826 = load i32, i32* %825, align 4
  store i32 %826, i32* @yy_n_chars, align 4
  %827 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  %828 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %829 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %828, i32 0, i32 0
  store %struct._IO_FILE* %827, %struct._IO_FILE** %829, align 8
  %830 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %831 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %830, i32 0, i32 9
  store i32 1, i32* %831, align 8
  br label %832

; <label>:832:                                    ; preds = %823, %809
  %833 = load i8*, i8** @yy_c_buf_p, align 8
  %834 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %835 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %834, i32 0, i32 1
  %836 = load i8*, i8** %835, align 8
  %837 = load i32, i32* @yy_n_chars, align 4
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds i8, i8* %836, i64 %838
  %840 = icmp ule i8* %833, %839
  br i1 %840, label %841, label %859

; <label>:841:                                    ; preds = %832
  %842 = load i8*, i8** @yytext, align 8
  %843 = load i32, i32* %7, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds i8, i8* %842, i64 %844
  store i8* %845, i8** @yy_c_buf_p, align 8
  %846 = call i32 @yy_get_previous_state()
  store i32 %846, i32* %2, align 4
  %847 = load i32, i32* %2, align 4
  %848 = call i32 @yy_try_NUL_trans(i32 %847)
  store i32 %848, i32* %8, align 4
  %849 = load i8*, i8** @yytext, align 8
  %850 = getelementptr inbounds i8, i8* %849, i64 0
  store i8* %850, i8** %4, align 8
  %851 = load i32, i32* %8, align 4
  %852 = icmp ne i32 %851, 0
  br i1 %852, label %853, label %857

; <label>:853:                                    ; preds = %841
  %854 = load i8*, i8** @yy_c_buf_p, align 8
  %855 = getelementptr inbounds i8, i8* %854, i32 1
  store i8* %855, i8** @yy_c_buf_p, align 8
  store i8* %855, i8** %3, align 8
  %856 = load i32, i32* %8, align 4
  store i32 %856, i32* %2, align 4
  br label %44

; <label>:857:                                    ; preds = %841
  %858 = load i8*, i8** @yy_c_buf_p, align 8
  store i8* %858, i8** %3, align 8
  br label %116

; <label>:859:                                    ; preds = %832
  %860 = call i32 @yy_get_next_buffer()
  switch i32 %860, label %899 [
    i32 1, label %861
    i32 0, label %879
    i32 2, label %888
  ]

; <label>:861:                                    ; preds = %859
  store i32 0, i32* @yy_did_buffer_switch_on_eof, align 4
  %862 = call i32 @yywrap()
  %863 = icmp ne i32 %862, 0
  br i1 %863, label %864, label %872

; <label>:864:                                    ; preds = %861
  %865 = load i8*, i8** @yytext, align 8
  %866 = getelementptr inbounds i8, i8* %865, i64 0
  store i8* %866, i8** @yy_c_buf_p, align 8
  %867 = load i32, i32* @yy_start, align 4
  %868 = sub nsw i32 %867, 1
  %869 = sdiv i32 %868, 2
  %870 = add nsw i32 23, %869
  %871 = add nsw i32 %870, 1
  store i32 %871, i32* %5, align 4
  br label %144

; <label>:872:                                    ; preds = %861
  %873 = load i32, i32* @yy_did_buffer_switch_on_eof, align 4
  %874 = icmp ne i32 %873, 0
  br i1 %874, label %877, label %875

; <label>:875:                                    ; preds = %872
  %876 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  call void @yyrestart(%struct._IO_FILE* %876)
  br label %877

; <label>:877:                                    ; preds = %875, %872
  br label %878

; <label>:878:                                    ; preds = %877
  br label %899

; <label>:879:                                    ; preds = %859
  %880 = load i8*, i8** @yytext, align 8
  %881 = load i32, i32* %7, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds i8, i8* %880, i64 %882
  store i8* %883, i8** @yy_c_buf_p, align 8
  %884 = call i32 @yy_get_previous_state()
  store i32 %884, i32* %2, align 4
  %885 = load i8*, i8** @yy_c_buf_p, align 8
  store i8* %885, i8** %3, align 8
  %886 = load i8*, i8** @yytext, align 8
  %887 = getelementptr inbounds i8, i8* %886, i64 0
  store i8* %887, i8** %4, align 8
  br label %44

; <label>:888:                                    ; preds = %859
  %889 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %890 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %889, i32 0, i32 1
  %891 = load i8*, i8** %890, align 8
  %892 = load i32, i32* @yy_n_chars, align 4
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds i8, i8* %891, i64 %893
  store i8* %894, i8** @yy_c_buf_p, align 8
  %895 = call i32 @yy_get_previous_state()
  store i32 %895, i32* %2, align 4
  %896 = load i8*, i8** @yy_c_buf_p, align 8
  store i8* %896, i8** %3, align 8
  %897 = load i8*, i8** @yytext, align 8
  %898 = getelementptr inbounds i8, i8* %897, i64 0
  store i8* %898, i8** %4, align 8
  br label %116

; <label>:899:                                    ; preds = %878, %859
  br label %900

; <label>:900:                                    ; preds = %899
  br label %902

; <label>:901:                                    ; preds = %144
  call void @yy_fatal_error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.315, i32 0, i32 0))
  br label %902

; <label>:902:                                    ; preds = %901, %900, %802, %786
  br label %33

; <label>:903:                                    ; preds = %808, %768, %752, %734, %701, %668, %635, %604, %573, %540, %507, %474, %441, %408, %376, %343, %310, %278, %247, %214, %181
  %904 = load i32, i32* %1, align 4
  ret i32 %904
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.yy_buffer_state* @yy_create_buffer(%struct._IO_FILE*, i32) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.yy_buffer_state*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = call i8* @yy_flex_alloc(i32 56)
  %7 = bitcast i8* %6 to %struct.yy_buffer_state*
  store %struct.yy_buffer_state* %7, %struct.yy_buffer_state** %5, align 8
  %8 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %9 = icmp ne %struct.yy_buffer_state* %8, null
  br i1 %9, label %11, label %10

; <label>:10:                                     ; preds = %2
  call void @yy_fatal_error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.320, i32 0, i32 0))
  br label %11

; <label>:11:                                     ; preds = %10, %2
  %12 = load i32, i32* %4, align 4
  %13 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %14 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %13, i32 0, i32 3
  store i32 %12, i32* %14, align 8
  %15 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %16 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 2
  %19 = call i8* @yy_flex_alloc(i32 %18)
  %20 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %21 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %20, i32 0, i32 1
  store i8* %19, i8** %21, align 8
  %22 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %23 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %22, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %27, label %26

; <label>:26:                                     ; preds = %11
  call void @yy_fatal_error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.320, i32 0, i32 0))
  br label %27

; <label>:27:                                     ; preds = %26, %11
  %28 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %29 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %28, i32 0, i32 5
  store i32 1, i32* %29, align 8
  %30 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  call void @yy_init_buffer(%struct.yy_buffer_state* %30, %struct._IO_FILE* %31)
  %32 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %5, align 8
  ret %struct.yy_buffer_state* %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @yy_load_buffer_state() #0 {
  %1 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %2 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %1, i32 0, i32 4
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* @yy_n_chars, align 4
  %4 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %5 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %4, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  store i8* %6, i8** @yy_c_buf_p, align 8
  store i8* %6, i8** @yytext, align 8
  %7 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %8 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %7, i32 0, i32 0
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  store %struct._IO_FILE* %9, %struct._IO_FILE** @yyin, align 8
  %10 = load i8*, i8** @yy_c_buf_p, align 8
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* @yy_hold_char, align 1
  ret void
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yy_get_previous_state() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8, align 1
  %4 = load i32, i32* @yy_start, align 4
  store i32 %4, i32* %1, align 4
  %5 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %6 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %5, i32 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = load i32, i32* %1, align 4
  %9 = add nsw i32 %8, %7
  store i32 %9, i32* %1, align 4
  %10 = load i8*, i8** @yytext, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  store i8* %11, i8** %2, align 8
  br label %12

; <label>:12:                                     ; preds = %85, %0
  %13 = load i8*, i8** %2, align 8
  %14 = load i8*, i8** @yy_c_buf_p, align 8
  %15 = icmp ult i8* %13, %14
  br i1 %15, label %16, label %88

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %2, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %28

; <label>:21:                                     ; preds = %16
  %22 = load i8*, i8** %2, align 8
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds [256 x i32], [256 x i32]* @yy_ec, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  br label %29

; <label>:28:                                     ; preds = %16
  br label %29

; <label>:29:                                     ; preds = %28, %21
  %30 = phi i32 [ %27, %21 ], [ 1, %28 ]
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %3, align 1
  %32 = load i32, i32* %1, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [171 x i16], [171 x i16]* @yy_accept, i64 0, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp ne i16 %35, 0
  br i1 %36, label %37, label %40

; <label>:37:                                     ; preds = %29
  %38 = load i32, i32* %1, align 4
  store i32 %38, i32* @yy_last_accepting_state, align 4
  %39 = load i8*, i8** %2, align 8
  store i8* %39, i8** @yy_last_accepting_cpos, align 8
  br label %40

; <label>:40:                                     ; preds = %37, %29
  br label %41

; <label>:41:                                     ; preds = %71, %40
  %42 = load i32, i32* %1, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = sext i16 %45 to i32
  %47 = load i8, i8* %3, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %46, %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [655 x i16], [655 x i16]* @yy_chk, i64 0, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = load i32, i32* %1, align 4
  %55 = icmp ne i32 %53, %54
  br i1 %55, label %56, label %72

; <label>:56:                                     ; preds = %41
  %57 = load i32, i32* %1, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_def, i64 0, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  store i32 %61, i32* %1, align 4
  %62 = load i32, i32* %1, align 4
  %63 = icmp sge i32 %62, 171
  br i1 %63, label %64, label %71

; <label>:64:                                     ; preds = %56
  %65 = load i8, i8* %3, align 1
  %66 = zext i8 %65 to i32
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [29 x i32], [29 x i32]* @yy_meta, i64 0, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %3, align 1
  br label %71

; <label>:71:                                     ; preds = %64, %56
  br label %41

; <label>:72:                                     ; preds = %41
  %73 = load i32, i32* %1, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = sext i16 %76 to i32
  %78 = load i8, i8* %3, align 1
  %79 = zext i8 %78 to i32
  %80 = add i32 %77, %79
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [655 x i16], [655 x i16]* @yy_nxt, i64 0, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = sext i16 %83 to i32
  store i32 %84, i32* %1, align 4
  br label %85

; <label>:85:                                     ; preds = %72
  %86 = load i8*, i8** %2, align 8
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %2, align 8
  br label %12

; <label>:88:                                     ; preds = %12
  %89 = load i32, i32* %1, align 4
  ret i32 %89
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yy_try_NUL_trans(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  %6 = load i8*, i8** @yy_c_buf_p, align 8
  store i8* %6, i8** %4, align 8
  store i8 1, i8* %5, align 1
  %7 = load i32, i32* %2, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [171 x i16], [171 x i16]* @yy_accept, i64 0, i64 %8
  %10 = load i16, i16* %9, align 2
  %11 = icmp ne i16 %10, 0
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* %2, align 4
  store i32 %13, i32* @yy_last_accepting_state, align 4
  %14 = load i8*, i8** %4, align 8
  store i8* %14, i8** @yy_last_accepting_cpos, align 8
  br label %15

; <label>:15:                                     ; preds = %12, %1
  br label %16

; <label>:16:                                     ; preds = %46, %15
  %17 = load i32, i32* %2, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = load i8, i8* %5, align 1
  %23 = zext i8 %22 to i32
  %24 = add nsw i32 %21, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [655 x i16], [655 x i16]* @yy_chk, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = load i32, i32* %2, align 4
  %30 = icmp ne i32 %28, %29
  br i1 %30, label %31, label %47

; <label>:31:                                     ; preds = %16
  %32 = load i32, i32* %2, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_def, i64 0, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = sext i16 %35 to i32
  store i32 %36, i32* %2, align 4
  %37 = load i32, i32* %2, align 4
  %38 = icmp sge i32 %37, 171
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %31
  %40 = load i8, i8* %5, align 1
  %41 = zext i8 %40 to i32
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [29 x i32], [29 x i32]* @yy_meta, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %5, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %31
  br label %16

; <label>:47:                                     ; preds = %16
  %48 = load i32, i32* %2, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [203 x i16], [203 x i16]* @yy_base, i64 0, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i32
  %53 = load i8, i8* %5, align 1
  %54 = zext i8 %53 to i32
  %55 = add i32 %52, %54
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [655 x i16], [655 x i16]* @yy_nxt, i64 0, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  store i32 %59, i32* %2, align 4
  %60 = load i32, i32* %2, align 4
  %61 = icmp eq i32 %60, 170
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %3, align 4
  %63 = load i32, i32* %3, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %66

; <label>:65:                                     ; preds = %47
  br label %68

; <label>:66:                                     ; preds = %47
  %67 = load i32, i32* %2, align 4
  br label %68

; <label>:68:                                     ; preds = %66, %65
  %69 = phi i32 [ 0, %65 ], [ %67, %66 ]
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yy_get_next_buffer() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.yy_buffer_state*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %14 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %13, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %2, align 8
  %16 = load i8*, i8** @yytext, align 8
  store i8* %16, i8** %3, align 8
  %17 = load i8*, i8** @yy_c_buf_p, align 8
  %18 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %19 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = load i32, i32* @yy_n_chars, align 4
  %22 = add nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = icmp ugt i8* %17, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %0
  call void @yy_fatal_error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6.317, i32 0, i32 0))
  br label %27

; <label>:27:                                     ; preds = %26, %0
  %28 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %29 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %28, i32 0, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %42

; <label>:32:                                     ; preds = %27
  %33 = load i8*, i8** @yy_c_buf_p, align 8
  %34 = load i8*, i8** @yytext, align 8
  %35 = ptrtoint i8* %33 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sub nsw i64 %37, 0
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %32
  store i32 1, i32* %1, align 4
  br label %266

; <label>:41:                                     ; preds = %32
  store i32 2, i32* %1, align 4
  br label %266

; <label>:42:                                     ; preds = %27
  %43 = load i8*, i8** @yy_c_buf_p, align 8
  %44 = load i8*, i8** @yytext, align 8
  %45 = ptrtoint i8* %43 to i64
  %46 = ptrtoint i8* %44 to i64
  %47 = sub i64 %45, %46
  %48 = trunc i64 %47 to i32
  %49 = sub nsw i32 %48, 1
  store i32 %49, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %50

; <label>:50:                                     ; preds = %60, %42
  %51 = load i32, i32* %5, align 4
  %52 = load i32, i32* %4, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %63

; <label>:54:                                     ; preds = %50
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %3, align 8
  %57 = load i8, i8* %55, align 1
  %58 = load i8*, i8** %2, align 8
  %59 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %59, i8** %2, align 8
  store i8 %57, i8* %58, align 1
  br label %60

; <label>:60:                                     ; preds = %54
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %5, align 4
  br label %50

; <label>:63:                                     ; preds = %50
  %64 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %65 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %64, i32 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 2
  br i1 %67, label %68, label %69

; <label>:68:                                     ; preds = %63
  store i32 0, i32* @yy_n_chars, align 4
  br label %231

; <label>:69:                                     ; preds = %63
  %70 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %71 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = load i32, i32* %4, align 4
  %74 = sub i32 %72, %73
  %75 = sub i32 %74, 1
  store i32 %75, i32* %7, align 4
  br label %76

; <label>:76:                                     ; preds = %134, %69
  %77 = load i32, i32* %7, align 4
  %78 = icmp sle i32 %77, 0
  br i1 %78, label %79, label %147

; <label>:79:                                     ; preds = %76
  %80 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  store %struct.yy_buffer_state* %80, %struct.yy_buffer_state** %8, align 8
  %81 = load i8*, i8** @yy_c_buf_p, align 8
  %82 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %83 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %82, i32 0, i32 1
  %84 = load i8*, i8** %83, align 8
  %85 = ptrtoint i8* %81 to i64
  %86 = ptrtoint i8* %84 to i64
  %87 = sub i64 %85, %86
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %9, align 4
  %89 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %90 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %89, i32 0, i32 5
  %91 = load i32, i32* %90, align 8
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %125

; <label>:93:                                     ; preds = %79
  %94 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %95 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %94, i32 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = mul i32 %96, 2
  store i32 %97, i32* %10, align 4
  %98 = load i32, i32* %10, align 4
  %99 = icmp sle i32 %98, 0
  br i1 %99, label %100, label %109

; <label>:100:                                    ; preds = %93
  %101 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %102 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = udiv i32 %103, 8
  %105 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %106 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %105, i32 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %104
  store i32 %108, i32* %106, align 8
  br label %114

; <label>:109:                                    ; preds = %93
  %110 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %111 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %110, i32 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = mul i32 %112, 2
  store i32 %113, i32* %111, align 8
  br label %114

; <label>:114:                                    ; preds = %109, %100
  %115 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %116 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %115, i32 0, i32 1
  %117 = load i8*, i8** %116, align 8
  %118 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %119 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %118, i32 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = add i32 %120, 2
  %122 = call i8* @yy_flex_realloc(i8* %117, i32 %121)
  %123 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %124 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %123, i32 0, i32 1
  store i8* %122, i8** %124, align 8
  br label %128

; <label>:125:                                    ; preds = %79
  %126 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %127 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %126, i32 0, i32 1
  store i8* null, i8** %127, align 8
  br label %128

; <label>:128:                                    ; preds = %125, %114
  %129 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %130 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %129, i32 0, i32 1
  %131 = load i8*, i8** %130, align 8
  %132 = icmp ne i8* %131, null
  br i1 %132, label %134, label %133

; <label>:133:                                    ; preds = %128
  call void @yy_fatal_error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7.318, i32 0, i32 0))
  br label %134

; <label>:134:                                    ; preds = %133, %128
  %135 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %8, align 8
  %136 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %135, i32 0, i32 1
  %137 = load i8*, i8** %136, align 8
  %138 = load i32, i32* %9, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %137, i64 %139
  store i8* %140, i8** @yy_c_buf_p, align 8
  %141 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %142 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %141, i32 0, i32 3
  %143 = load i32, i32* %142, align 8
  %144 = load i32, i32* %4, align 4
  %145 = sub i32 %143, %144
  %146 = sub i32 %145, 1
  store i32 %146, i32* %7, align 4
  br label %76

; <label>:147:                                    ; preds = %76
  %148 = load i32, i32* %7, align 4
  %149 = icmp sgt i32 %148, 8192
  br i1 %149, label %150, label %151

; <label>:150:                                    ; preds = %147
  store i32 8192, i32* %7, align 4
  br label %151

; <label>:151:                                    ; preds = %150, %147
  %152 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %153 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %152, i32 0, i32 6
  %154 = load i32, i32* %153, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %211

; <label>:156:                                    ; preds = %151
  store i32 42, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %157

; <label>:157:                                    ; preds = %182, %156
  %158 = load i32, i32* %12, align 4
  %159 = load i32, i32* %7, align 4
  %160 = icmp slt i32 %158, %159
  br i1 %160, label %161, label %168

; <label>:161:                                    ; preds = %157
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  %163 = call i32 @_IO_getc(%struct._IO_FILE* %162)
  store i32 %163, i32* %11, align 4
  %164 = icmp ne i32 %163, -1
  br i1 %164, label %165, label %168

; <label>:165:                                    ; preds = %161
  %166 = load i32, i32* %11, align 4
  %167 = icmp ne i32 %166, 10
  br label %168

; <label>:168:                                    ; preds = %165, %161, %157
  %169 = phi i1 [ false, %161 ], [ false, %157 ], [ %167, %165 ]
  br i1 %169, label %170, label %185

; <label>:170:                                    ; preds = %168
  %171 = load i32, i32* %11, align 4
  %172 = trunc i32 %171 to i8
  %173 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %174 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %173, i32 0, i32 1
  %175 = load i8*, i8** %174, align 8
  %176 = load i32, i32* %4, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %175, i64 %177
  %179 = load i32, i32* %12, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %178, i64 %180
  store i8 %172, i8* %181, align 1
  br label %182

; <label>:182:                                    ; preds = %170
  %183 = load i32, i32* %12, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %12, align 4
  br label %157

; <label>:185:                                    ; preds = %168
  %186 = load i32, i32* %11, align 4
  %187 = icmp eq i32 %186, 10
  br i1 %187, label %188, label %201

; <label>:188:                                    ; preds = %185
  %189 = load i32, i32* %11, align 4
  %190 = trunc i32 %189 to i8
  %191 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %192 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %191, i32 0, i32 1
  %193 = load i8*, i8** %192, align 8
  %194 = load i32, i32* %4, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %193, i64 %195
  %197 = load i32, i32* %12, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %12, align 4
  %199 = sext i32 %197 to i64
  %200 = getelementptr inbounds i8, i8* %196, i64 %199
  store i8 %190, i8* %200, align 1
  br label %201

; <label>:201:                                    ; preds = %188, %185
  %202 = load i32, i32* %11, align 4
  %203 = icmp eq i32 %202, -1
  br i1 %203, label %204, label %209

; <label>:204:                                    ; preds = %201
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  %206 = call i32 @ferror(%struct._IO_FILE* %205) #9
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %209

; <label>:208:                                    ; preds = %204
  call void @yy_fatal_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.319, i32 0, i32 0))
  br label %209

; <label>:209:                                    ; preds = %208, %204, %201
  %210 = load i32, i32* %12, align 4
  store i32 %210, i32* @yy_n_chars, align 4
  br label %230

; <label>:211:                                    ; preds = %151
  %212 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %213 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %212, i32 0, i32 1
  %214 = load i8*, i8** %213, align 8
  %215 = load i32, i32* %4, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %214, i64 %216
  %218 = load i32, i32* %7, align 4
  %219 = sext i32 %218 to i64
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  %221 = call i64 @fread(i8* %217, i64 1, i64 %219, %struct._IO_FILE* %220)
  %222 = trunc i64 %221 to i32
  store i32 %222, i32* @yy_n_chars, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %229

; <label>:224:                                    ; preds = %211
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  %226 = call i32 @ferror(%struct._IO_FILE* %225) #9
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %228, label %229

; <label>:228:                                    ; preds = %224
  call void @yy_fatal_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.319, i32 0, i32 0))
  br label %229

; <label>:229:                                    ; preds = %228, %224, %211
  br label %230

; <label>:230:                                    ; preds = %229, %209
  br label %231

; <label>:231:                                    ; preds = %230, %68
  %232 = load i32, i32* @yy_n_chars, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %243

; <label>:234:                                    ; preds = %231
  %235 = load i32, i32* %4, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %239

; <label>:237:                                    ; preds = %234
  store i32 1, i32* %6, align 4
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  call void @yyrestart(%struct._IO_FILE* %238)
  br label %242

; <label>:239:                                    ; preds = %234
  store i32 2, i32* %6, align 4
  %240 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %241 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %240, i32 0, i32 9
  store i32 2, i32* %241, align 8
  br label %242

; <label>:242:                                    ; preds = %239, %237
  br label %244

; <label>:243:                                    ; preds = %231
  store i32 0, i32* %6, align 4
  br label %244

; <label>:244:                                    ; preds = %243, %242
  %245 = load i32, i32* %4, align 4
  %246 = load i32, i32* @yy_n_chars, align 4
  %247 = add nsw i32 %246, %245
  store i32 %247, i32* @yy_n_chars, align 4
  %248 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %249 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %248, i32 0, i32 1
  %250 = load i8*, i8** %249, align 8
  %251 = load i32, i32* @yy_n_chars, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, i8* %250, i64 %252
  store i8 0, i8* %253, align 1
  %254 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %255 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %254, i32 0, i32 1
  %256 = load i8*, i8** %255, align 8
  %257 = load i32, i32* @yy_n_chars, align 4
  %258 = add nsw i32 %257, 1
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds i8, i8* %256, i64 %259
  store i8 0, i8* %260, align 1
  %261 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %262 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %261, i32 0, i32 1
  %263 = load i8*, i8** %262, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 0
  store i8* %264, i8** @yytext, align 8
  %265 = load i32, i32* %6, align 4
  store i32 %265, i32* %1, align 4
  br label %266

; <label>:266:                                    ; preds = %244, %41, %40
  %267 = load i32, i32* %1, align 4
  ret i32 %267
}

declare dso_local i32 @yywrap() #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @yyrestart(%struct._IO_FILE*) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %3 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %4 = icmp ne %struct.yy_buffer_state* %3, null
  br i1 %4, label %8, label %5

; <label>:5:                                      ; preds = %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @yyin, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %7 = call %struct.yy_buffer_state* @yy_create_buffer(%struct._IO_FILE* %6, i32 16384)
  store volatile i8 0, i8* @specialMalloc, align 1
  store %struct.yy_buffer_state* %7, %struct.yy_buffer_state** @yy_current_buffer, align 8
  br label %8

; <label>:8:                                      ; preds = %5, %1
  %9 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  call void @yy_init_buffer(%struct.yy_buffer_state* %9, %struct._IO_FILE* %10)
  call void @yy_load_buffer_state()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @yy_fatal_error(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.316, i32 0, i32 0), i8* %4)
  call void @exit(i32 2) #8
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @yy_init_buffer(%struct.yy_buffer_state*, %struct._IO_FILE*) #0 {
  %3 = alloca %struct.yy_buffer_state*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store %struct.yy_buffer_state* %0, %struct.yy_buffer_state** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %5 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %3, align 8
  call void @yy_flush_buffer(%struct.yy_buffer_state* %5)
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %7 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %3, align 8
  %8 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %7, i32 0, i32 0
  store %struct._IO_FILE* %6, %struct._IO_FILE** %8, align 8
  %9 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %3, align 8
  %10 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %9, i32 0, i32 8
  store i32 1, i32* %10, align 4
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %12 = icmp ne %struct._IO_FILE* %11, null
  br i1 %12, label %13, label %19

; <label>:13:                                     ; preds = %2
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %15 = call i32 @fileno(%struct._IO_FILE* %14) #9
  %16 = call i32 @isatty(i32 %15)
  %17 = icmp sgt i32 %16, 0
  %18 = zext i1 %17 to i32
  br label %20

; <label>:19:                                     ; preds = %2
  br label %20

; <label>:20:                                     ; preds = %19, %13
  %21 = phi i32 [ %18, %13 ], [ 0, %19 ]
  %22 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %3, align 8
  %23 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %22, i32 0, i32 6
  store i32 %21, i32* %23, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @yy_flush_buffer(%struct.yy_buffer_state*) #0 {
  %2 = alloca %struct.yy_buffer_state*, align 8
  store %struct.yy_buffer_state* %0, %struct.yy_buffer_state** %2, align 8
  %3 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %4 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %3, i32 0, i32 4
  store i32 0, i32* %4, align 4
  %5 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %6 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %5, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  store i8 0, i8* %8, align 1
  %9 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %10 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  store i8 0, i8* %12, align 1
  %13 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %14 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %13, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %18 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %17, i32 0, i32 2
  store i8* %16, i8** %18, align 8
  %19 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %20 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %19, i32 0, i32 7
  store i32 1, i32* %20, align 8
  %21 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %22 = getelementptr inbounds %struct.yy_buffer_state, %struct.yy_buffer_state* %21, i32 0, i32 9
  store i32 0, i32* %22, align 8
  %23 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** %2, align 8
  %24 = load %struct.yy_buffer_state*, %struct.yy_buffer_state** @yy_current_buffer, align 8
  %25 = icmp eq %struct.yy_buffer_state* %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %1
  call void @yy_load_buffer_state()
  br label %27

; <label>:27:                                     ; preds = %26, %1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #4

declare dso_local i32 @isatty(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @yy_flex_realloc(i8*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = zext i32 %6 to i64
  %8 = call i8* @realloc(i8* %5, i64 %7) #9
  ret i8* %8
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #4

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @yy_flex_alloc(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #9
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @herror(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [4 x %struct.iovec], align 16
  %4 = alloca %struct.iovec*, align 8
  store i8* %0, i8** %2, align 8
  %5 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %3, i32 0, i32 0
  store %struct.iovec* %5, %struct.iovec** %4, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %1
  %9 = load i8*, i8** %2, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %29

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %2, align 8
  %15 = load %struct.iovec*, %struct.iovec** %4, align 8
  %16 = getelementptr inbounds %struct.iovec, %struct.iovec* %15, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = call i64 @strlen(i8* %17) #11
  %19 = load %struct.iovec*, %struct.iovec** %4, align 8
  %20 = getelementptr inbounds %struct.iovec, %struct.iovec* %19, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = load %struct.iovec*, %struct.iovec** %4, align 8
  %22 = getelementptr inbounds %struct.iovec, %struct.iovec* %21, i32 1
  store %struct.iovec* %22, %struct.iovec** %4, align 8
  %23 = load %struct.iovec*, %struct.iovec** %4, align 8
  %24 = getelementptr inbounds %struct.iovec, %struct.iovec* %23, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.323, i32 0, i32 0), i8** %24, align 8
  %25 = load %struct.iovec*, %struct.iovec** %4, align 8
  %26 = getelementptr inbounds %struct.iovec, %struct.iovec* %25, i32 0, i32 1
  store i64 2, i64* %26, align 8
  %27 = load %struct.iovec*, %struct.iovec** %4, align 8
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i32 1
  store %struct.iovec* %28, %struct.iovec** %4, align 8
  br label %29

; <label>:29:                                     ; preds = %13, %8, %1
  %30 = call i32* (...) @__h_errno()
  %31 = load i32, i32* %30, align 4
  %32 = call i8* @hstrerror(i32 %31)
  %33 = load %struct.iovec*, %struct.iovec** %4, align 8
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = load %struct.iovec*, %struct.iovec** %4, align 8
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i64 @strlen(i8* %37) #11
  %39 = load %struct.iovec*, %struct.iovec** %4, align 8
  %40 = getelementptr inbounds %struct.iovec, %struct.iovec* %39, i32 0, i32 1
  store i64 %38, i64* %40, align 8
  %41 = load %struct.iovec*, %struct.iovec** %4, align 8
  %42 = getelementptr inbounds %struct.iovec, %struct.iovec* %41, i32 1
  store %struct.iovec* %42, %struct.iovec** %4, align 8
  %43 = load %struct.iovec*, %struct.iovec** %4, align 8
  %44 = getelementptr inbounds %struct.iovec, %struct.iovec* %43, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.324, i32 0, i32 0), i8** %44, align 8
  %45 = load %struct.iovec*, %struct.iovec** %4, align 8
  %46 = getelementptr inbounds %struct.iovec, %struct.iovec* %45, i32 0, i32 1
  store i64 1, i64* %46, align 8
  %47 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %3, i32 0, i32 0
  %48 = load %struct.iovec*, %struct.iovec** %4, align 8
  %49 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %3, i32 0, i32 0
  %50 = ptrtoint %struct.iovec* %48 to i64
  %51 = ptrtoint %struct.iovec* %49 to i64
  %52 = sub i64 %50, %51
  %53 = sdiv exact i64 %52, 16
  %54 = add nsw i64 %53, 1
  %55 = trunc i64 %54 to i32
  %56 = call i64 @writev(i32 2, %struct.iovec* %47, i32 %55)
  ret void
}

declare dso_local i32* @__h_errno(...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hstrerror(i32) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.325, i32 0, i32 0), i8** %2, align 8
  br label %18

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* @h_nerr, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %16

; <label>:11:                                     ; preds = %7
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* @h_errlist, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %2, align 8
  br label %18

; <label>:16:                                     ; preds = %7
  br label %17

; <label>:17:                                     ; preds = %16
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.326, i32 0, i32 0), i8** %2, align 8
  br label %18

; <label>:18:                                     ; preds = %17, %11, %6
  %19 = load i8*, i8** %2, align 8
  ret i8* %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__p_rcode(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i8* @__sym_ntos(%struct.res_sym* getelementptr inbounds ([16 x %struct.res_sym], [16 x %struct.res_sym]* @__p_rcode_syms, i32 0, i32 0), i32 %3, i32* null)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__sym_ntos(%struct.res_sym*, i32, i32*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.res_sym*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  store %struct.res_sym* %0, %struct.res_sym** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  br label %8

; <label>:8:                                      ; preds = %29, %3
  %9 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %10 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %32

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* %6, align 4
  %15 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %16 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %28

; <label>:19:                                     ; preds = %13
  %20 = load i32*, i32** %7, align 8
  %21 = icmp ne i32* %20, null
  br i1 %21, label %22, label %24

; <label>:22:                                     ; preds = %19
  %23 = load i32*, i32** %7, align 8
  store i32 1, i32* %23, align 4
  br label %24

; <label>:24:                                     ; preds = %22, %19
  %25 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %26 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %25, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %4, align 8
  br label %40

; <label>:28:                                     ; preds = %13
  br label %29

; <label>:29:                                     ; preds = %28
  %30 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %31 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %30, i32 1
  store %struct.res_sym* %31, %struct.res_sym** %5, align 8
  br label %8

; <label>:32:                                     ; preds = %8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__sym_ntos.unname, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.164, i32 0, i32 0), i32 %33) #9
  %35 = load i32*, i32** %7, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %39

; <label>:37:                                     ; preds = %32
  %38 = load i32*, i32** %7, align 8
  store i32 0, i32* %38, align 4
  br label %39

; <label>:39:                                     ; preds = %37, %32
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__sym_ntos.unname, i32 0, i32 0), i8** %4, align 8
  br label %40

; <label>:40:                                     ; preds = %39, %24
  %41 = load i8*, i8** %4, align 8
  ret i8* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__sym_ston(%struct.res_sym*, i8*, i32*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.res_sym*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  store %struct.res_sym* %0, %struct.res_sym** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32* %2, i32** %7, align 8
  br label %8

; <label>:8:                                      ; preds = %30, %3
  %9 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %10 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %33

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %6, align 8
  %15 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %16 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %15, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @strcasecmp(i8* %14, i8* %17) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %29

; <label>:20:                                     ; preds = %13
  %21 = load i32*, i32** %7, align 8
  %22 = icmp ne i32* %21, null
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %20
  %24 = load i32*, i32** %7, align 8
  store i32 1, i32* %24, align 4
  br label %25

; <label>:25:                                     ; preds = %23, %20
  %26 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %27 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %4, align 4
  br label %42

; <label>:29:                                     ; preds = %13
  br label %30

; <label>:30:                                     ; preds = %29
  %31 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %32 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %31, i32 1
  store %struct.res_sym* %32, %struct.res_sym** %5, align 8
  br label %8

; <label>:33:                                     ; preds = %8
  %34 = load i32*, i32** %7, align 8
  %35 = icmp ne i32* %34, null
  br i1 %35, label %36, label %38

; <label>:36:                                     ; preds = %33
  %37 = load i32*, i32** %7, align 8
  store i32 0, i32* %37, align 4
  br label %38

; <label>:38:                                     ; preds = %36, %33
  %39 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %40 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %4, align 4
  br label %42

; <label>:42:                                     ; preds = %38, %25
  %43 = load i32, i32* %4, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__sym_ntop(%struct.res_sym*, i32, i32*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.res_sym*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  store %struct.res_sym* %0, %struct.res_sym** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  br label %8

; <label>:8:                                      ; preds = %29, %3
  %9 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %10 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %32

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* %6, align 4
  %15 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %16 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %28

; <label>:19:                                     ; preds = %13
  %20 = load i32*, i32** %7, align 8
  %21 = icmp ne i32* %20, null
  br i1 %21, label %22, label %24

; <label>:22:                                     ; preds = %19
  %23 = load i32*, i32** %7, align 8
  store i32 1, i32* %23, align 4
  br label %24

; <label>:24:                                     ; preds = %22, %19
  %25 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %26 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %25, i32 0, i32 2
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %4, align 8
  br label %40

; <label>:28:                                     ; preds = %13
  br label %29

; <label>:29:                                     ; preds = %28
  %30 = load %struct.res_sym*, %struct.res_sym** %5, align 8
  %31 = getelementptr inbounds %struct.res_sym, %struct.res_sym* %30, i32 1
  store %struct.res_sym* %31, %struct.res_sym** %5, align 8
  br label %8

; <label>:32:                                     ; preds = %8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__sym_ntop.unname, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.164, i32 0, i32 0), i32 %33) #9
  %35 = load i32*, i32** %7, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %39

; <label>:37:                                     ; preds = %32
  %38 = load i32*, i32** %7, align 8
  store i32 0, i32* %38, align 4
  br label %39

; <label>:39:                                     ; preds = %37, %32
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__sym_ntop.unname, i32 0, i32 0), i8** %4, align 8
  br label %40

; <label>:40:                                     ; preds = %39, %24
  %41 = load i8*, i8** %4, align 8
  ret i8* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__p_type(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i8* @__sym_ntos(%struct.res_sym* getelementptr inbounds ([45 x %struct.res_sym], [45 x %struct.res_sym]* @__p_type_syms, i32 0, i32 0), i32 %3, i32* null)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__p_class(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i8* @__sym_ntos(%struct.res_sym* getelementptr inbounds ([7 x %struct.res_sym], [7 x %struct.res_sym]* @__p_class_syms, i32 0, i32 0), i32 %3, i32* null)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__p_time(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = call i32 @__ns_format_ttl(i64 %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__p_time.nbuf, i32 0, i32 0), i64 40)
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %2, align 4
  %9 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__p_time.nbuf, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.178, i32 0, i32 0), i32 %8) #9
  br label %10

; <label>:10:                                     ; preds = %7, %1
  ret i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__p_time.nbuf, i32 0, i32 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__loc_ntoa(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %35 = load i8*, i8** %4, align 8
  store i8* %35, i8** %6, align 8
  store i32 10000000, i32* %20, align 4
  %36 = load i8*, i8** %6, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %6, align 8
  %38 = load i8, i8* %36, align 1
  store i8 %38, i8* %28, align 1
  %39 = load i8*, i8** %5, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %2
  store i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__loc_ntoa.tmpbuf, i32 0, i32 0), i8** %5, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %2
  %43 = load i8, i8* %28, align 1
  %44 = icmp ne i8 %43, 0
  br i1 %44, label %45, label %49

; <label>:45:                                     ; preds = %42
  %46 = load i8*, i8** %5, align 8
  %47 = call i32 (i8*, i8*, ...) @sprintf(i8* %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.180, i32 0, i32 0)) #9
  %48 = load i8*, i8** %5, align 8
  store i8* %48, i8** %3, align 8
  br label %255

; <label>:49:                                     ; preds = %42
  %50 = load i8*, i8** %6, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %6, align 8
  %52 = load i8, i8* %50, align 1
  store i8 %52, i8* %25, align 1
  %53 = load i8*, i8** %6, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %6, align 8
  %55 = load i8, i8* %53, align 1
  store i8 %55, i8* %26, align 1
  %56 = load i8*, i8** %6, align 8
  %57 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %57, i8** %6, align 8
  %58 = load i8, i8* %56, align 1
  store i8 %58, i8* %27, align 1
  %59 = load i8*, i8** %6, align 8
  store i8* %59, i8** %32, align 8
  %60 = load i8*, i8** %32, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl i32 %63, 24
  %65 = load i8*, i8** %32, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl i32 %68, 16
  %70 = or i32 %64, %69
  %71 = load i8*, i8** %32, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 8
  %76 = or i32 %70, %75
  %77 = load i8*, i8** %32, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = or i32 %76, %80
  store i32 %81, i32* %24, align 4
  %82 = load i8*, i8** %6, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  store i8* %83, i8** %6, align 8
  %84 = load i32, i32* %24, align 4
  %85 = sub i32 %84, -2147483648
  store i32 %85, i32* %21, align 4
  %86 = load i8*, i8** %6, align 8
  store i8* %86, i8** %33, align 8
  %87 = load i8*, i8** %33, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 0
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, 24
  %92 = load i8*, i8** %33, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 1
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, 16
  %97 = or i32 %91, %96
  %98 = load i8*, i8** %33, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 2
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl i32 %101, 8
  %103 = or i32 %97, %102
  %104 = load i8*, i8** %33, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 3
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = or i32 %103, %107
  store i32 %108, i32* %24, align 4
  %109 = load i8*, i8** %6, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 4
  store i8* %110, i8** %6, align 8
  %111 = load i32, i32* %24, align 4
  %112 = sub i32 %111, -2147483648
  store i32 %112, i32* %22, align 4
  %113 = load i8*, i8** %6, align 8
  store i8* %113, i8** %34, align 8
  %114 = load i8*, i8** %34, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 0
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl i32 %117, 24
  %119 = load i8*, i8** %34, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = shl i32 %122, 16
  %124 = or i32 %118, %123
  %125 = load i8*, i8** %34, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl i32 %128, 8
  %130 = or i32 %124, %129
  %131 = load i8*, i8** %34, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = or i32 %130, %134
  store i32 %135, i32* %24, align 4
  %136 = load i8*, i8** %6, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 4
  store i8* %137, i8** %6, align 8
  %138 = load i32, i32* %24, align 4
  %139 = icmp ult i32 %138, 10000000
  br i1 %139, label %140, label %143

; <label>:140:                                    ; preds = %49
  %141 = load i32, i32* %24, align 4
  %142 = sub i32 10000000, %141
  store i32 %142, i32* %23, align 4
  store i32 -1, i32* %19, align 4
  br label %146

; <label>:143:                                    ; preds = %49
  %144 = load i32, i32* %24, align 4
  %145 = sub i32 %144, 10000000
  store i32 %145, i32* %23, align 4
  store i32 1, i32* %19, align 4
  br label %146

; <label>:146:                                    ; preds = %143, %140
  %147 = load i32, i32* %21, align 4
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %149, label %152

; <label>:149:                                    ; preds = %146
  store i8 83, i8* %15, align 1
  %150 = load i32, i32* %21, align 4
  %151 = sub nsw i32 0, %150
  store i32 %151, i32* %21, align 4
  br label %153

; <label>:152:                                    ; preds = %146
  store i8 78, i8* %15, align 1
  br label %153

; <label>:153:                                    ; preds = %152, %149
  %154 = load i32, i32* %21, align 4
  %155 = srem i32 %154, 1000
  store i32 %155, i32* %10, align 4
  %156 = load i32, i32* %21, align 4
  %157 = sdiv i32 %156, 1000
  store i32 %157, i32* %21, align 4
  %158 = load i32, i32* %21, align 4
  %159 = srem i32 %158, 60
  store i32 %159, i32* %9, align 4
  %160 = load i32, i32* %21, align 4
  %161 = sdiv i32 %160, 60
  store i32 %161, i32* %21, align 4
  %162 = load i32, i32* %21, align 4
  %163 = srem i32 %162, 60
  store i32 %163, i32* %8, align 4
  %164 = load i32, i32* %21, align 4
  %165 = sdiv i32 %164, 60
  store i32 %165, i32* %21, align 4
  %166 = load i32, i32* %21, align 4
  store i32 %166, i32* %7, align 4
  %167 = load i32, i32* %22, align 4
  %168 = icmp slt i32 %167, 0
  br i1 %168, label %169, label %172

; <label>:169:                                    ; preds = %153
  store i8 87, i8* %16, align 1
  %170 = load i32, i32* %22, align 4
  %171 = sub nsw i32 0, %170
  store i32 %171, i32* %22, align 4
  br label %173

; <label>:172:                                    ; preds = %153
  store i8 69, i8* %16, align 1
  br label %173

; <label>:173:                                    ; preds = %172, %169
  %174 = load i32, i32* %22, align 4
  %175 = srem i32 %174, 1000
  store i32 %175, i32* %14, align 4
  %176 = load i32, i32* %22, align 4
  %177 = sdiv i32 %176, 1000
  store i32 %177, i32* %22, align 4
  %178 = load i32, i32* %22, align 4
  %179 = srem i32 %178, 60
  store i32 %179, i32* %13, align 4
  %180 = load i32, i32* %22, align 4
  %181 = sdiv i32 %180, 60
  store i32 %181, i32* %22, align 4
  %182 = load i32, i32* %22, align 4
  %183 = srem i32 %182, 60
  store i32 %183, i32* %12, align 4
  %184 = load i32, i32* %22, align 4
  %185 = sdiv i32 %184, 60
  store i32 %185, i32* %22, align 4
  %186 = load i32, i32* %22, align 4
  store i32 %186, i32* %11, align 4
  %187 = load i32, i32* %23, align 4
  %188 = srem i32 %187, 100
  store i32 %188, i32* %18, align 4
  %189 = load i32, i32* %23, align 4
  %190 = sdiv i32 %189, 100
  %191 = load i32, i32* %19, align 4
  %192 = mul nsw i32 %190, %191
  store i32 %192, i32* %17, align 4
  %193 = load i8, i8* %25, align 1
  %194 = zext i8 %193 to i32
  %195 = call i8* @precsize_ntoa(i32 %194)
  %196 = call noalias i8* @strdup(i8* %195) #9
  store i8* %196, i8** %29, align 8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %198, label %200

; <label>:198:                                    ; preds = %173
  %199 = load i8*, i8** @__loc_ntoa.error, align 8
  store i8* %199, i8** %29, align 8
  br label %200

; <label>:200:                                    ; preds = %198, %173
  %201 = load i8, i8* %26, align 1
  %202 = zext i8 %201 to i32
  %203 = call i8* @precsize_ntoa(i32 %202)
  %204 = call noalias i8* @strdup(i8* %203) #9
  store i8* %204, i8** %30, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %206, label %208

; <label>:206:                                    ; preds = %200
  %207 = load i8*, i8** @__loc_ntoa.error, align 8
  store i8* %207, i8** %30, align 8
  br label %208

; <label>:208:                                    ; preds = %206, %200
  %209 = load i8, i8* %27, align 1
  %210 = zext i8 %209 to i32
  %211 = call i8* @precsize_ntoa(i32 %210)
  %212 = call noalias i8* @strdup(i8* %211) #9
  store i8* %212, i8** %31, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %214, label %216

; <label>:214:                                    ; preds = %208
  %215 = load i8*, i8** @__loc_ntoa.error, align 8
  store i8* %215, i8** %31, align 8
  br label %216

; <label>:216:                                    ; preds = %214, %208
  %217 = load i8*, i8** %5, align 8
  %218 = load i32, i32* %7, align 4
  %219 = load i32, i32* %8, align 4
  %220 = load i32, i32* %9, align 4
  %221 = load i32, i32* %10, align 4
  %222 = load i8, i8* %15, align 1
  %223 = sext i8 %222 to i32
  %224 = load i32, i32* %11, align 4
  %225 = load i32, i32* %12, align 4
  %226 = load i32, i32* %13, align 4
  %227 = load i32, i32* %14, align 4
  %228 = load i8, i8* %16, align 1
  %229 = sext i8 %228 to i32
  %230 = load i32, i32* %17, align 4
  %231 = load i32, i32* %18, align 4
  %232 = load i8*, i8** %29, align 8
  %233 = load i8*, i8** %30, align 8
  %234 = load i8*, i8** %31, align 8
  %235 = call i32 (i8*, i8*, ...) @sprintf(i8* %217, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.181, i32 0, i32 0), i32 %218, i32 %219, i32 %220, i32 %221, i32 %223, i32 %224, i32 %225, i32 %226, i32 %227, i32 %229, i32 %230, i32 %231, i8* %232, i8* %233, i8* %234) #9
  %236 = load i8*, i8** %29, align 8
  %237 = load i8*, i8** @__loc_ntoa.error, align 8
  %238 = icmp ne i8* %236, %237
  br i1 %238, label %239, label %241

; <label>:239:                                    ; preds = %216
  %240 = load i8*, i8** %29, align 8
  call void @free(i8* %240) #9
  br label %241

; <label>:241:                                    ; preds = %239, %216
  %242 = load i8*, i8** %30, align 8
  %243 = load i8*, i8** @__loc_ntoa.error, align 8
  %244 = icmp ne i8* %242, %243
  br i1 %244, label %245, label %247

; <label>:245:                                    ; preds = %241
  %246 = load i8*, i8** %30, align 8
  call void @free(i8* %246) #9
  br label %247

; <label>:247:                                    ; preds = %245, %241
  %248 = load i8*, i8** %31, align 8
  %249 = load i8*, i8** @__loc_ntoa.error, align 8
  %250 = icmp ne i8* %248, %249
  br i1 %250, label %251, label %253

; <label>:251:                                    ; preds = %247
  %252 = load i8*, i8** %31, align 8
  call void @free(i8* %252) #9
  br label %253

; <label>:253:                                    ; preds = %251, %247
  %254 = load i8*, i8** %5, align 8
  store i8* %254, i8** %3, align 8
  br label %255

; <label>:255:                                    ; preds = %253, %45
  %256 = load i8*, i8** %3, align 8
  ret i8* %256
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @precsize_ntoa(i32) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = trunc i32 %0 to i8
  store i8 %6, i8* %2, align 1
  %7 = load i8, i8* %2, align 1
  %8 = zext i8 %7 to i32
  %9 = ashr i32 %8, 4
  %10 = and i32 %9, 15
  %11 = srem i32 %10, 10
  store i32 %11, i32* %4, align 4
  %12 = load i8, i8* %2, align 1
  %13 = zext i8 %12 to i32
  %14 = ashr i32 %13, 0
  %15 = and i32 %14, 15
  %16 = srem i32 %15, 10
  store i32 %16, i32* %5, align 4
  %17 = load i32, i32* %4, align 4
  %18 = load i32, i32* %5, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [10 x i32], [10 x i32]* @poweroften, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = mul i32 %17, %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %3, align 8
  %24 = load i64, i64* %3, align 8
  %25 = udiv i64 %24, 100
  %26 = load i64, i64* %3, align 8
  %27 = urem i64 %26, 100
  %28 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @precsize_ntoa.retbuf, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.187, i32 0, i32 0), i64 %25, i64 %27) #9
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @precsize_ntoa.retbuf, i32 0, i32 0)
}

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__dn_count_labels(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = call i64 @strlen(i8* %6) #11
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* %4, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %5, align 4
  br label %9

; <label>:9:                                      ; preds = %25, %1
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %28

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 46
  br i1 %20, label %21, label %24

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* %5, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %5, align 4
  br label %24

; <label>:24:                                     ; preds = %21, %13
  br label %25

; <label>:25:                                     ; preds = %24
  %26 = load i32, i32* %3, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %3, align 4
  br label %9

; <label>:28:                                     ; preds = %9
  %29 = load i8*, i8** %2, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 42
  br i1 %33, label %34, label %41

; <label>:34:                                     ; preds = %28
  %35 = load i32, i32* %5, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %40

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %5, align 4
  br label %40

; <label>:40:                                     ; preds = %37, %34
  br label %41

; <label>:41:                                     ; preds = %40, %28
  %42 = load i32, i32* %4, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %56

; <label>:44:                                     ; preds = %41
  %45 = load i8*, i8** %2, align 8
  %46 = load i32, i32* %4, align 4
  %47 = sub nsw i32 %46, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %45, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp ne i32 %51, 46
  br i1 %52, label %53, label %56

; <label>:53:                                     ; preds = %44
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %56

; <label>:56:                                     ; preds = %53, %44, %41
  %57 = load i32, i32* %5, align 4
  ret i32 %57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__p_secstodate(i64) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm*, align 8
  store i64 %0, i64* %2, align 8
  %5 = load i64, i64* %2, align 8
  store i64 %5, i64* %3, align 8
  %6 = call %struct.tm* @gmtime(i64* %3) #9
  store %struct.tm* %6, %struct.tm** %4, align 8
  %7 = load %struct.tm*, %struct.tm** %4, align 8
  %8 = getelementptr inbounds %struct.tm, %struct.tm* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1900
  store i32 %10, i32* %8, align 4
  %11 = load %struct.tm*, %struct.tm** %4, align 8
  %12 = getelementptr inbounds %struct.tm, %struct.tm* %11, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = load %struct.tm*, %struct.tm** %4, align 8
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.tm*, %struct.tm** %4, align 8
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = load %struct.tm*, %struct.tm** %4, align 8
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.tm*, %struct.tm** %4, align 8
  %25 = getelementptr inbounds %struct.tm, %struct.tm* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = load %struct.tm*, %struct.tm** %4, align 8
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.tm*, %struct.tm** %4, align 8
  %31 = getelementptr inbounds %struct.tm, %struct.tm* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__p_secstodate.output, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.182, i32 0, i32 0), i32 %17, i32 %20, i32 %23, i32 %26, i32 %29, i32 %32) #9
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__p_secstodate.output, i32 0, i32 0)
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @gmtime(i64*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @__res_init() #0 {
  %1 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 0), align 8
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %4, label %3

; <label>:3:                                      ; preds = %0
  store i32 5, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 0), align 8
  br label %4

; <label>:4:                                      ; preds = %3, %0
  %5 = load i32, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 1), align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7:                                      ; preds = %4
  store i32 4, i32* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 1), align 4
  br label %8

; <label>:8:                                      ; preds = %7, %4
  %9 = load i64, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 2), align 8
  %10 = and i64 %9, 1
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %13, label %12

; <label>:12:                                     ; preds = %8
  store i64 704, i64* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 2), align 8
  br label %13

; <label>:13:                                     ; preds = %12, %8
  %14 = load i16, i16* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 5), align 4
  %15 = icmp ne i16 %14, 0
  br i1 %15, label %19, label %16

; <label>:16:                                     ; preds = %13
  %17 = call i32 @__res_randomid()
  %18 = trunc i32 %17 to i16
  store i16 %18, i16* getelementptr inbounds (%struct.__res_state, %struct.__res_state* @_res, i32 0, i32 5), align 4
  br label %19

; <label>:19:                                     ; preds = %16, %13
  %20 = call i32 @__res_vinit(%struct.__res_state* @_res, i32 1)
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__dn_expand(i8*, i8*, i8*, i8*, i32) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = load i8*, i8** %8, align 8
  %15 = load i8*, i8** %9, align 8
  %16 = load i32, i32* %10, align 4
  %17 = sext i32 %16 to i64
  %18 = call i32 @__ns_name_uncompress(i8* %12, i8* %13, i8* %14, i8* %15, i64 %17)
  store i32 %18, i32* %11, align 4
  %19 = load i32, i32* %11, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %30

; <label>:21:                                     ; preds = %5
  %22 = load i8*, i8** %9, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 46
  br i1 %26, label %27, label %30

; <label>:27:                                     ; preds = %21
  %28 = load i8*, i8** %9, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 0
  store i8 0, i8* %29, align 1
  br label %30

; <label>:30:                                     ; preds = %27, %21, %5
  %31 = load i32, i32* %11, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__dn_comp(i8*, i8*, i32, i8**, i8**) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8** %3, i8*** %9, align 8
  store i8** %4, i8*** %10, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = sext i32 %13 to i64
  %15 = load i8**, i8*** %9, align 8
  %16 = load i8**, i8*** %10, align 8
  %17 = call i32 @__ns_name_compress(i8* %11, i8* %12, i64 %14, i8** %15, i8** %16)
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__dn_skipname(i8*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %7 = load i8*, i8** %4, align 8
  store i8* %7, i8** %6, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = call i32 @__ns_name_skip(i8** %4, i8* %8)
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  store i32 -1, i32* %3, align 4
  br label %19

; <label>:12:                                     ; preds = %2
  %13 = load i8*, i8** %4, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = ptrtoint i8* %13 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = sub i64 %15, %16
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %3, align 4
  br label %19

; <label>:19:                                     ; preds = %12, %11
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__putlong(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = zext i32 %5 to i64
  %7 = load i8*, i8** %4, align 8
  call void @__ns_put32(i64 %6, i8* %7)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__putshort(i16 zeroext, i8*) #0 {
  %3 = alloca i16, align 2
  %4 = alloca i8*, align 8
  store i16 %0, i16* %3, align 2
  store i8* %1, i8** %4, align 8
  %5 = load i16, i16* %3, align 2
  %6 = zext i16 %5 to i32
  %7 = load i8*, i8** %4, align 8
  call void @__ns_put16(i32 %6, i8* %7)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @__res_ninit(%struct.__res_state*) #0 {
  %2 = alloca %struct.__res_state*, align 8
  store %struct.__res_state* %0, %struct.__res_state** %2, align 8
  %3 = load %struct.__res_state*, %struct.__res_state** %2, align 8
  %4 = call i32 @__res_vinit(%struct.__res_state* %3, i32 0)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__res_vinit(%struct.__res_state*, i32) #0 {
  %3 = alloca %struct.__res_state*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca [8192 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.in_addr, align 4
  %16 = alloca %struct.in_addr, align 4
  store %struct.__res_state* %0, %struct.__res_state** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  %17 = load i32, i32* %4, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %30, label %19

; <label>:19:                                     ; preds = %2
  %20 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %21 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %20, i32 0, i32 0
  store i32 5, i32* %21, align 8
  %22 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %23 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %22, i32 0, i32 1
  store i32 2, i32* %23, align 4
  %24 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %25 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %24, i32 0, i32 2
  store i64 704, i64* %25, align 8
  %26 = call i32 @__res_randomid()
  %27 = trunc i32 %26 to i16
  %28 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %29 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %28, i32 0, i32 5
  store i16 %27, i16* %29, align 4
  br label %30

; <label>:30:                                     ; preds = %19, %2
  %31 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %32 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %31, i32 0, i32 4
  %33 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* %32, i64 0, i64 0
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %33, i32 0, i32 2
  %35 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %34, i32 0, i32 0
  store i32 0, i32* %35, align 4
  %36 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %37 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %36, i32 0, i32 4
  %38 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* %37, i64 0, i64 0
  %39 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %38, i32 0, i32 0
  store i16 2, i16* %39, align 4
  %40 = call zeroext i16 @htons(i16 zeroext 53) #12
  %41 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %42 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %41, i32 0, i32 4
  %43 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* %42, i64 0, i64 0
  %44 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %43, i32 0, i32 1
  store i16 %40, i16* %44, align 2
  %45 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %46 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %45, i32 0, i32 3
  store i32 1, i32* %46, align 8
  %47 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %48 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %47, i32 0, i32 9
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, -16
  %51 = or i8 %50, 1
  store i8 %51, i8* %48, align 8
  %52 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %53 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %52, i32 0, i32 8
  store i64 0, i64* %53, align 8
  %54 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %55 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %54, i32 0, i32 15
  store i32 -1, i32* %55, align 4
  %56 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %57 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %56, i32 0, i32 16
  store i32 0, i32* %57, align 8
  %58 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %59 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %58, i32 0, i32 12
  store i32 (%struct.sockaddr_in**, i8**, i32*, i8*, i32, i32*)* null, i32 (%struct.sockaddr_in**, i8**, i32*, i8*, i32, i32*)** %59, align 8
  %60 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %61 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %60, i32 0, i32 13
  store i32 (%struct.sockaddr_in*, i8*, i32, i8*, i32, i32*)* null, i32 (%struct.sockaddr_in*, i8*, i32, i8*, i32, i32*)** %61, align 8
  %62 = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.430, i32 0, i32 0)) #9
  store i8* %62, i8** %6, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %64, label %159

; <label>:64:                                     ; preds = %30
  %65 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %66 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %65, i32 0, i32 7
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %66, i32 0, i32 0
  %68 = load i8*, i8** %6, align 8
  %69 = call i8* @strncpy(i8* %67, i8* %68, i64 255) #9
  %70 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %71 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %70, i32 0, i32 7
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %71, i64 0, i64 255
  store i8 0, i8* %72, align 1
  %73 = load i32, i32* %11, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %11, align 4
  %75 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %76 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %75, i32 0, i32 7
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* %76, i32 0, i32 0
  store i8* %77, i8** %6, align 8
  %78 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %79 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %78, i32 0, i32 6
  %80 = getelementptr inbounds [7 x i8*], [7 x i8*]* %79, i32 0, i32 0
  store i8** %80, i8*** %7, align 8
  %81 = load i8*, i8** %6, align 8
  %82 = load i8**, i8*** %7, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i32 1
  store i8** %83, i8*** %7, align 8
  store i8* %81, i8** %82, align 8
  store i32 0, i32* %8, align 4
  br label %84

; <label>:84:                                     ; preds = %126, %64
  %85 = load i8*, i8** %6, align 8
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %96

; <label>:89:                                     ; preds = %84
  %90 = load i8**, i8*** %7, align 8
  %91 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %92 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %91, i32 0, i32 6
  %93 = getelementptr inbounds [7 x i8*], [7 x i8*]* %92, i32 0, i32 0
  %94 = getelementptr inbounds i8*, i8** %93, i64 6
  %95 = icmp ult i8** %90, %94
  br label %96

; <label>:96:                                     ; preds = %89, %84
  %97 = phi i1 [ false, %84 ], [ %95, %89 ]
  br i1 %97, label %98, label %129

; <label>:98:                                     ; preds = %96
  %99 = load i8*, i8** %6, align 8
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp eq i32 %101, 10
  br i1 %102, label %103, label %104

; <label>:103:                                    ; preds = %98
  br label %129

; <label>:104:                                    ; preds = %98
  %105 = load i8*, i8** %6, align 8
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %107, 32
  br i1 %108, label %114, label %109

; <label>:109:                                    ; preds = %104
  %110 = load i8*, i8** %6, align 8
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp eq i32 %112, 9
  br i1 %113, label %114, label %116

; <label>:114:                                    ; preds = %109, %104
  %115 = load i8*, i8** %6, align 8
  store i8 0, i8* %115, align 1
  store i32 1, i32* %8, align 4
  br label %124

; <label>:116:                                    ; preds = %109
  %117 = load i32, i32* %8, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %123

; <label>:119:                                    ; preds = %116
  %120 = load i8*, i8** %6, align 8
  %121 = load i8**, i8*** %7, align 8
  %122 = getelementptr inbounds i8*, i8** %121, i32 1
  store i8** %122, i8*** %7, align 8
  store i8* %120, i8** %121, align 8
  store i32 0, i32* %8, align 4
  store i32 1, i32* %12, align 4
  br label %123

; <label>:123:                                    ; preds = %119, %116
  br label %124

; <label>:124:                                    ; preds = %123, %114
  br label %125

; <label>:125:                                    ; preds = %124
  br label %126

; <label>:126:                                    ; preds = %125
  %127 = load i8*, i8** %6, align 8
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %6, align 8
  br label %84

; <label>:129:                                    ; preds = %103, %96
  br label %130

; <label>:130:                                    ; preds = %152, %129
  %131 = load i8*, i8** %6, align 8
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %150

; <label>:135:                                    ; preds = %130
  %136 = load i8*, i8** %6, align 8
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i32
  %139 = icmp ne i32 %138, 32
  br i1 %139, label %140, label %150

; <label>:140:                                    ; preds = %135
  %141 = load i8*, i8** %6, align 8
  %142 = load i8, i8* %141, align 1
  %143 = sext i8 %142 to i32
  %144 = icmp ne i32 %143, 9
  br i1 %144, label %145, label %150

; <label>:145:                                    ; preds = %140
  %146 = load i8*, i8** %6, align 8
  %147 = load i8, i8* %146, align 1
  %148 = sext i8 %147 to i32
  %149 = icmp ne i32 %148, 10
  br label %150

; <label>:150:                                    ; preds = %145, %140, %135, %130
  %151 = phi i1 [ false, %140 ], [ false, %135 ], [ false, %130 ], [ %149, %145 ]
  br i1 %151, label %152, label %155

; <label>:152:                                    ; preds = %150
  %153 = load i8*, i8** %6, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %6, align 8
  br label %130

; <label>:155:                                    ; preds = %150
  %156 = load i8*, i8** %6, align 8
  store i8 0, i8* %156, align 1
  %157 = load i8**, i8*** %7, align 8
  %158 = getelementptr inbounds i8*, i8** %157, i32 1
  store i8** %158, i8*** %7, align 8
  store i8* null, i8** %157, align 8
  br label %159

; <label>:159:                                    ; preds = %155, %30
  %160 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.431, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.432, i32 0, i32 0))
  store %struct._IO_FILE* %160, %struct._IO_FILE** %5, align 8
  %161 = icmp ne %struct._IO_FILE* %160, null
  br i1 %161, label %162, label %709

; <label>:162:                                    ; preds = %159
  br label %163

; <label>:163:                                    ; preds = %688, %683, %668, %455, %377, %291, %261, %243, %226, %196, %178, %162
  %164 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %166 = call i8* @fgets(i8* %164, i32 8192, %struct._IO_FILE* %165)
  %167 = icmp ne i8* %166, null
  br i1 %167, label %168, label %689

; <label>:168:                                    ; preds = %163
  %169 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %170 = load i8, i8* %169, align 16
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %171, 59
  br i1 %172, label %178, label %173

; <label>:173:                                    ; preds = %168
  %174 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %175 = load i8, i8* %174, align 16
  %176 = sext i8 %175 to i32
  %177 = icmp eq i32 %176, 35
  br i1 %177, label %178, label %179

; <label>:178:                                    ; preds = %173, %168
  br label %163

; <label>:179:                                    ; preds = %173
  %180 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %181 = call i32 @strncmp(i8* %180, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.433, i32 0, i32 0), i64 6) #11
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %244, label %183

; <label>:183:                                    ; preds = %179
  %184 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 6
  %185 = load i8, i8* %184, align 2
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %186, 32
  br i1 %187, label %193, label %188

; <label>:188:                                    ; preds = %183
  %189 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 6
  %190 = load i8, i8* %189, align 2
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %191, 9
  br i1 %192, label %193, label %244

; <label>:193:                                    ; preds = %188, %183
  %194 = load i32, i32* %11, align 4
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %196, label %197

; <label>:196:                                    ; preds = %193
  br label %163

; <label>:197:                                    ; preds = %193
  %198 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %199 = getelementptr inbounds i8, i8* %198, i64 7
  %200 = getelementptr inbounds i8, i8* %199, i64 -1
  store i8* %200, i8** %6, align 8
  br label %201

; <label>:201:                                    ; preds = %213, %197
  %202 = load i8*, i8** %6, align 8
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 32
  br i1 %205, label %211, label %206

; <label>:206:                                    ; preds = %201
  %207 = load i8*, i8** %6, align 8
  %208 = load i8, i8* %207, align 1
  %209 = sext i8 %208 to i32
  %210 = icmp eq i32 %209, 9
  br label %211

; <label>:211:                                    ; preds = %206, %201
  %212 = phi i1 [ true, %201 ], [ %210, %206 ]
  br i1 %212, label %213, label %216

; <label>:213:                                    ; preds = %211
  %214 = load i8*, i8** %6, align 8
  %215 = getelementptr inbounds i8, i8* %214, i32 1
  store i8* %215, i8** %6, align 8
  br label %201

; <label>:216:                                    ; preds = %211
  %217 = load i8*, i8** %6, align 8
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %226, label %221

; <label>:221:                                    ; preds = %216
  %222 = load i8*, i8** %6, align 8
  %223 = load i8, i8* %222, align 1
  %224 = sext i8 %223 to i32
  %225 = icmp eq i32 %224, 10
  br i1 %225, label %226, label %227

; <label>:226:                                    ; preds = %221, %216
  br label %163

; <label>:227:                                    ; preds = %221
  %228 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %229 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %228, i32 0, i32 7
  %230 = getelementptr inbounds [256 x i8], [256 x i8]* %229, i32 0, i32 0
  %231 = load i8*, i8** %6, align 8
  %232 = call i8* @strncpy(i8* %230, i8* %231, i64 255) #9
  %233 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %234 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %233, i32 0, i32 7
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* %234, i64 0, i64 255
  store i8 0, i8* %235, align 1
  %236 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %237 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %236, i32 0, i32 7
  %238 = getelementptr inbounds [256 x i8], [256 x i8]* %237, i32 0, i32 0
  %239 = call i8* @strpbrk(i8* %238, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.434, i32 0, i32 0)) #11
  store i8* %239, i8** %6, align 8
  %240 = icmp ne i8* %239, null
  br i1 %240, label %241, label %243

; <label>:241:                                    ; preds = %227
  %242 = load i8*, i8** %6, align 8
  store i8 0, i8* %242, align 1
  br label %243

; <label>:243:                                    ; preds = %241, %227
  store i32 0, i32* %12, align 4
  br label %163

; <label>:244:                                    ; preds = %188, %179
  %245 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %246 = call i32 @strncmp(i8* %245, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.435, i32 0, i32 0), i64 6) #11
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %381, label %248

; <label>:248:                                    ; preds = %244
  %249 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 6
  %250 = load i8, i8* %249, align 2
  %251 = sext i8 %250 to i32
  %252 = icmp eq i32 %251, 32
  br i1 %252, label %258, label %253

; <label>:253:                                    ; preds = %248
  %254 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 6
  %255 = load i8, i8* %254, align 2
  %256 = sext i8 %255 to i32
  %257 = icmp eq i32 %256, 9
  br i1 %257, label %258, label %381

; <label>:258:                                    ; preds = %253, %248
  %259 = load i32, i32* %11, align 4
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %262

; <label>:261:                                    ; preds = %258
  br label %163

; <label>:262:                                    ; preds = %258
  %263 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %264 = getelementptr inbounds i8, i8* %263, i64 7
  %265 = getelementptr inbounds i8, i8* %264, i64 -1
  store i8* %265, i8** %6, align 8
  br label %266

; <label>:266:                                    ; preds = %278, %262
  %267 = load i8*, i8** %6, align 8
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = icmp eq i32 %269, 32
  br i1 %270, label %276, label %271

; <label>:271:                                    ; preds = %266
  %272 = load i8*, i8** %6, align 8
  %273 = load i8, i8* %272, align 1
  %274 = sext i8 %273 to i32
  %275 = icmp eq i32 %274, 9
  br label %276

; <label>:276:                                    ; preds = %271, %266
  %277 = phi i1 [ true, %266 ], [ %275, %271 ]
  br i1 %277, label %278, label %281

; <label>:278:                                    ; preds = %276
  %279 = load i8*, i8** %6, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %6, align 8
  br label %266

; <label>:281:                                    ; preds = %276
  %282 = load i8*, i8** %6, align 8
  %283 = load i8, i8* %282, align 1
  %284 = sext i8 %283 to i32
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %291, label %286

; <label>:286:                                    ; preds = %281
  %287 = load i8*, i8** %6, align 8
  %288 = load i8, i8* %287, align 1
  %289 = sext i8 %288 to i32
  %290 = icmp eq i32 %289, 10
  br i1 %290, label %291, label %292

; <label>:291:                                    ; preds = %286, %281
  br label %163

; <label>:292:                                    ; preds = %286
  %293 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %294 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %293, i32 0, i32 7
  %295 = getelementptr inbounds [256 x i8], [256 x i8]* %294, i32 0, i32 0
  %296 = load i8*, i8** %6, align 8
  %297 = call i8* @strncpy(i8* %295, i8* %296, i64 255) #9
  %298 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %299 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %298, i32 0, i32 7
  %300 = getelementptr inbounds [256 x i8], [256 x i8]* %299, i64 0, i64 255
  store i8 0, i8* %300, align 1
  %301 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %302 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %301, i32 0, i32 7
  %303 = getelementptr inbounds [256 x i8], [256 x i8]* %302, i32 0, i32 0
  %304 = call i8* @strchr(i8* %303, i32 10) #11
  store i8* %304, i8** %6, align 8
  %305 = icmp ne i8* %304, null
  br i1 %305, label %306, label %308

; <label>:306:                                    ; preds = %292
  %307 = load i8*, i8** %6, align 8
  store i8 0, i8* %307, align 1
  br label %308

; <label>:308:                                    ; preds = %306, %292
  %309 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %310 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %309, i32 0, i32 7
  %311 = getelementptr inbounds [256 x i8], [256 x i8]* %310, i32 0, i32 0
  store i8* %311, i8** %6, align 8
  %312 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %313 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %312, i32 0, i32 6
  %314 = getelementptr inbounds [7 x i8*], [7 x i8*]* %313, i32 0, i32 0
  store i8** %314, i8*** %7, align 8
  %315 = load i8*, i8** %6, align 8
  %316 = load i8**, i8*** %7, align 8
  %317 = getelementptr inbounds i8*, i8** %316, i32 1
  store i8** %317, i8*** %7, align 8
  store i8* %315, i8** %316, align 8
  store i32 0, i32* %8, align 4
  br label %318

; <label>:318:                                    ; preds = %353, %308
  %319 = load i8*, i8** %6, align 8
  %320 = load i8, i8* %319, align 1
  %321 = sext i8 %320 to i32
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %323, label %330

; <label>:323:                                    ; preds = %318
  %324 = load i8**, i8*** %7, align 8
  %325 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %326 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %325, i32 0, i32 6
  %327 = getelementptr inbounds [7 x i8*], [7 x i8*]* %326, i32 0, i32 0
  %328 = getelementptr inbounds i8*, i8** %327, i64 6
  %329 = icmp ult i8** %324, %328
  br label %330

; <label>:330:                                    ; preds = %323, %318
  %331 = phi i1 [ false, %318 ], [ %329, %323 ]
  br i1 %331, label %332, label %356

; <label>:332:                                    ; preds = %330
  %333 = load i8*, i8** %6, align 8
  %334 = load i8, i8* %333, align 1
  %335 = sext i8 %334 to i32
  %336 = icmp eq i32 %335, 32
  br i1 %336, label %342, label %337

; <label>:337:                                    ; preds = %332
  %338 = load i8*, i8** %6, align 8
  %339 = load i8, i8* %338, align 1
  %340 = sext i8 %339 to i32
  %341 = icmp eq i32 %340, 9
  br i1 %341, label %342, label %344

; <label>:342:                                    ; preds = %337, %332
  %343 = load i8*, i8** %6, align 8
  store i8 0, i8* %343, align 1
  store i32 1, i32* %8, align 4
  br label %352

; <label>:344:                                    ; preds = %337
  %345 = load i32, i32* %8, align 4
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %351

; <label>:347:                                    ; preds = %344
  %348 = load i8*, i8** %6, align 8
  %349 = load i8**, i8*** %7, align 8
  %350 = getelementptr inbounds i8*, i8** %349, i32 1
  store i8** %350, i8*** %7, align 8
  store i8* %348, i8** %349, align 8
  store i32 0, i32* %8, align 4
  br label %351

; <label>:351:                                    ; preds = %347, %344
  br label %352

; <label>:352:                                    ; preds = %351, %342
  br label %353

; <label>:353:                                    ; preds = %352
  %354 = load i8*, i8** %6, align 8
  %355 = getelementptr inbounds i8, i8* %354, i32 1
  store i8* %355, i8** %6, align 8
  br label %318

; <label>:356:                                    ; preds = %330
  br label %357

; <label>:357:                                    ; preds = %374, %356
  %358 = load i8*, i8** %6, align 8
  %359 = load i8, i8* %358, align 1
  %360 = sext i8 %359 to i32
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %362, label %372

; <label>:362:                                    ; preds = %357
  %363 = load i8*, i8** %6, align 8
  %364 = load i8, i8* %363, align 1
  %365 = sext i8 %364 to i32
  %366 = icmp ne i32 %365, 32
  br i1 %366, label %367, label %372

; <label>:367:                                    ; preds = %362
  %368 = load i8*, i8** %6, align 8
  %369 = load i8, i8* %368, align 1
  %370 = sext i8 %369 to i32
  %371 = icmp ne i32 %370, 9
  br label %372

; <label>:372:                                    ; preds = %367, %362, %357
  %373 = phi i1 [ false, %362 ], [ false, %357 ], [ %371, %367 ]
  br i1 %373, label %374, label %377

; <label>:374:                                    ; preds = %372
  %375 = load i8*, i8** %6, align 8
  %376 = getelementptr inbounds i8, i8* %375, i32 1
  store i8* %376, i8** %6, align 8
  br label %357

; <label>:377:                                    ; preds = %372
  %378 = load i8*, i8** %6, align 8
  store i8 0, i8* %378, align 1
  %379 = load i8**, i8*** %7, align 8
  %380 = getelementptr inbounds i8*, i8** %379, i32 1
  store i8** %380, i8*** %7, align 8
  store i8* null, i8** %379, align 8
  store i32 1, i32* %12, align 4
  br label %163

; <label>:381:                                    ; preds = %253, %244
  %382 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %383 = call i32 @strncmp(i8* %382, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.436, i32 0, i32 0), i64 10) #11
  %384 = icmp ne i32 %383, 0
  br i1 %384, label %456, label %385

; <label>:385:                                    ; preds = %381
  %386 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 10
  %387 = load i8, i8* %386, align 2
  %388 = sext i8 %387 to i32
  %389 = icmp eq i32 %388, 32
  br i1 %389, label %395, label %390

; <label>:390:                                    ; preds = %385
  %391 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 10
  %392 = load i8, i8* %391, align 2
  %393 = sext i8 %392 to i32
  %394 = icmp eq i32 %393, 9
  br i1 %394, label %395, label %456

; <label>:395:                                    ; preds = %390, %385
  %396 = load i32, i32* %10, align 4
  %397 = icmp slt i32 %396, 3
  br i1 %397, label %398, label %456

; <label>:398:                                    ; preds = %395
  %399 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %400 = getelementptr inbounds i8, i8* %399, i64 11
  %401 = getelementptr inbounds i8, i8* %400, i64 -1
  store i8* %401, i8** %6, align 8
  br label %402

; <label>:402:                                    ; preds = %414, %398
  %403 = load i8*, i8** %6, align 8
  %404 = load i8, i8* %403, align 1
  %405 = sext i8 %404 to i32
  %406 = icmp eq i32 %405, 32
  br i1 %406, label %412, label %407

; <label>:407:                                    ; preds = %402
  %408 = load i8*, i8** %6, align 8
  %409 = load i8, i8* %408, align 1
  %410 = sext i8 %409 to i32
  %411 = icmp eq i32 %410, 9
  br label %412

; <label>:412:                                    ; preds = %407, %402
  %413 = phi i1 [ true, %402 ], [ %411, %407 ]
  br i1 %413, label %414, label %417

; <label>:414:                                    ; preds = %412
  %415 = load i8*, i8** %6, align 8
  %416 = getelementptr inbounds i8, i8* %415, i32 1
  store i8* %416, i8** %6, align 8
  br label %402

; <label>:417:                                    ; preds = %412
  %418 = load i8*, i8** %6, align 8
  %419 = load i8, i8* %418, align 1
  %420 = sext i8 %419 to i32
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %422, label %455

; <label>:422:                                    ; preds = %417
  %423 = load i8*, i8** %6, align 8
  %424 = load i8, i8* %423, align 1
  %425 = sext i8 %424 to i32
  %426 = icmp ne i32 %425, 10
  br i1 %426, label %427, label %455

; <label>:427:                                    ; preds = %422
  %428 = load i8*, i8** %6, align 8
  %429 = call i32 @__inet_aton(i8* %428, %struct.in_addr* %15)
  %430 = icmp ne i32 %429, 0
  br i1 %430, label %431, label %455

; <label>:431:                                    ; preds = %427
  %432 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %433 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %432, i32 0, i32 4
  %434 = load i32, i32* %10, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* %433, i64 0, i64 %435
  %437 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %436, i32 0, i32 2
  %438 = bitcast %struct.in_addr* %437 to i8*
  %439 = bitcast %struct.in_addr* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %438, i8* align 4 %439, i64 4, i1 false)
  %440 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %441 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %440, i32 0, i32 4
  %442 = load i32, i32* %10, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* %441, i64 0, i64 %443
  %445 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %444, i32 0, i32 0
  store i16 2, i16* %445, align 4
  %446 = call zeroext i16 @htons(i16 zeroext 53) #12
  %447 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %448 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %447, i32 0, i32 4
  %449 = load i32, i32* %10, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [3 x %struct.sockaddr_in], [3 x %struct.sockaddr_in]* %448, i64 0, i64 %450
  %452 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %451, i32 0, i32 1
  store i16 %446, i16* %452, align 2
  %453 = load i32, i32* %10, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %10, align 4
  br label %455

; <label>:455:                                    ; preds = %431, %427, %422, %417
  br label %163

; <label>:456:                                    ; preds = %395, %390, %381
  %457 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %458 = call i32 @strncmp(i8* %457, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.437, i32 0, i32 0), i64 8) #11
  %459 = icmp ne i32 %458, 0
  br i1 %459, label %669, label %460

; <label>:460:                                    ; preds = %456
  %461 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 8
  %462 = load i8, i8* %461, align 8
  %463 = sext i8 %462 to i32
  %464 = icmp eq i32 %463, 32
  br i1 %464, label %470, label %465

; <label>:465:                                    ; preds = %460
  %466 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 8
  %467 = load i8, i8* %466, align 8
  %468 = sext i8 %467 to i32
  %469 = icmp eq i32 %468, 9
  br i1 %469, label %470, label %669

; <label>:470:                                    ; preds = %465, %460
  %471 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %472 = getelementptr inbounds i8, i8* %471, i64 9
  %473 = getelementptr inbounds i8, i8* %472, i64 -1
  store i8* %473, i8** %6, align 8
  br label %474

; <label>:474:                                    ; preds = %664, %470
  %475 = load i32, i32* %13, align 4
  %476 = icmp slt i32 %475, 10
  br i1 %476, label %477, label %668

; <label>:477:                                    ; preds = %474
  br label %478

; <label>:478:                                    ; preds = %490, %477
  %479 = load i8*, i8** %6, align 8
  %480 = load i8, i8* %479, align 1
  %481 = sext i8 %480 to i32
  %482 = icmp eq i32 %481, 32
  br i1 %482, label %488, label %483

; <label>:483:                                    ; preds = %478
  %484 = load i8*, i8** %6, align 8
  %485 = load i8, i8* %484, align 1
  %486 = sext i8 %485 to i32
  %487 = icmp eq i32 %486, 9
  br label %488

; <label>:488:                                    ; preds = %483, %478
  %489 = phi i1 [ true, %478 ], [ %487, %483 ]
  br i1 %489, label %490, label %493

; <label>:490:                                    ; preds = %488
  %491 = load i8*, i8** %6, align 8
  %492 = getelementptr inbounds i8, i8* %491, i32 1
  store i8* %492, i8** %6, align 8
  br label %478

; <label>:493:                                    ; preds = %488
  %494 = load i8*, i8** %6, align 8
  %495 = load i8, i8* %494, align 1
  %496 = sext i8 %495 to i32
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %508, label %498

; <label>:498:                                    ; preds = %493
  %499 = load i8*, i8** %6, align 8
  %500 = load i8, i8* %499, align 1
  %501 = sext i8 %500 to i32
  %502 = icmp eq i32 %501, 10
  br i1 %502, label %508, label %503

; <label>:503:                                    ; preds = %498
  %504 = load i8*, i8** %6, align 8
  %505 = load i8, i8* %504, align 1
  %506 = sext i8 %505 to i32
  %507 = icmp eq i32 %506, 59
  br i1 %507, label %508, label %509

; <label>:508:                                    ; preds = %503, %498, %493
  br label %668

; <label>:509:                                    ; preds = %503
  %510 = load i8*, i8** %6, align 8
  store i8* %510, i8** %14, align 8
  br label %511

; <label>:511:                                    ; preds = %548, %509
  %512 = load i8*, i8** %6, align 8
  %513 = load i8, i8* %512, align 1
  %514 = sext i8 %513 to i32
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %546

; <label>:516:                                    ; preds = %511
  %517 = load i8*, i8** %6, align 8
  %518 = load i8, i8* %517, align 1
  %519 = sext i8 %518 to i32
  %520 = call i8* @strchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @sort_mask, i32 0, i32 0), i32 %519) #11
  %521 = icmp ne i8* %520, null
  br i1 %521, label %546, label %522

; <label>:522:                                    ; preds = %516
  %523 = load i8*, i8** %6, align 8
  %524 = load i8, i8* %523, align 1
  %525 = sext i8 %524 to i32
  %526 = icmp ne i32 %525, 59
  br i1 %526, label %527, label %546

; <label>:527:                                    ; preds = %522
  %528 = load i8*, i8** %6, align 8
  %529 = load i8, i8* %528, align 1
  %530 = sext i8 %529 to i32
  %531 = and i32 %530, -128
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %546

; <label>:533:                                    ; preds = %527
  %534 = call i16** @__ctype_b_loc() #12
  %535 = load i16*, i16** %534, align 8
  %536 = load i8*, i8** %6, align 8
  %537 = load i8, i8* %536, align 1
  %538 = sext i8 %537 to i32
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds i16, i16* %535, i64 %539
  %541 = load i16, i16* %540, align 2
  %542 = zext i16 %541 to i32
  %543 = and i32 %542, 8192
  %544 = icmp ne i32 %543, 0
  %545 = xor i1 %544, true
  br label %546

; <label>:546:                                    ; preds = %533, %527, %522, %516, %511
  %547 = phi i1 [ false, %527 ], [ false, %522 ], [ false, %516 ], [ false, %511 ], [ %545, %533 ]
  br i1 %547, label %548, label %551

; <label>:548:                                    ; preds = %546
  %549 = load i8*, i8** %6, align 8
  %550 = getelementptr inbounds i8, i8* %549, i32 1
  store i8* %550, i8** %6, align 8
  br label %511

; <label>:551:                                    ; preds = %546
  %552 = load i8*, i8** %6, align 8
  %553 = load i8, i8* %552, align 1
  %554 = sext i8 %553 to i32
  store i32 %554, i32* %8, align 4
  %555 = load i8*, i8** %6, align 8
  store i8 0, i8* %555, align 1
  %556 = load i8*, i8** %14, align 8
  %557 = call i32 @__inet_aton(i8* %556, %struct.in_addr* %16)
  %558 = icmp ne i32 %557, 0
  br i1 %558, label %559, label %664

; <label>:559:                                    ; preds = %551
  %560 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %561 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %560, i32 0, i32 11
  %562 = load i32, i32* %13, align 4
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* %561, i64 0, i64 %563
  %565 = getelementptr inbounds %struct.anon, %struct.anon* %564, i32 0, i32 0
  %566 = bitcast %struct.in_addr* %565 to i8*
  %567 = bitcast %struct.in_addr* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %566, i8* align 4 %567, i64 4, i1 false)
  %568 = load i32, i32* %8, align 4
  %569 = call i8* @strchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @sort_mask, i32 0, i32 0), i32 %568) #11
  %570 = icmp ne i8* %569, null
  br i1 %570, label %571, label %645

; <label>:571:                                    ; preds = %559
  %572 = load i32, i32* %8, align 4
  %573 = trunc i32 %572 to i8
  %574 = load i8*, i8** %6, align 8
  %575 = getelementptr inbounds i8, i8* %574, i32 1
  store i8* %575, i8** %6, align 8
  store i8 %573, i8* %574, align 1
  %576 = load i8*, i8** %6, align 8
  store i8* %576, i8** %14, align 8
  br label %577

; <label>:577:                                    ; preds = %608, %571
  %578 = load i8*, i8** %6, align 8
  %579 = load i8, i8* %578, align 1
  %580 = sext i8 %579 to i32
  %581 = icmp ne i32 %580, 0
  br i1 %581, label %582, label %606

; <label>:582:                                    ; preds = %577
  %583 = load i8*, i8** %6, align 8
  %584 = load i8, i8* %583, align 1
  %585 = sext i8 %584 to i32
  %586 = icmp ne i32 %585, 59
  br i1 %586, label %587, label %606

; <label>:587:                                    ; preds = %582
  %588 = load i8*, i8** %6, align 8
  %589 = load i8, i8* %588, align 1
  %590 = sext i8 %589 to i32
  %591 = and i32 %590, -128
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %606

; <label>:593:                                    ; preds = %587
  %594 = call i16** @__ctype_b_loc() #12
  %595 = load i16*, i16** %594, align 8
  %596 = load i8*, i8** %6, align 8
  %597 = load i8, i8* %596, align 1
  %598 = sext i8 %597 to i32
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds i16, i16* %595, i64 %599
  %601 = load i16, i16* %600, align 2
  %602 = zext i16 %601 to i32
  %603 = and i32 %602, 8192
  %604 = icmp ne i32 %603, 0
  %605 = xor i1 %604, true
  br label %606

; <label>:606:                                    ; preds = %593, %587, %582, %577
  %607 = phi i1 [ false, %587 ], [ false, %582 ], [ false, %577 ], [ %605, %593 ]
  br i1 %607, label %608, label %611

; <label>:608:                                    ; preds = %606
  %609 = load i8*, i8** %6, align 8
  %610 = getelementptr inbounds i8, i8* %609, i32 1
  store i8* %610, i8** %6, align 8
  br label %577

; <label>:611:                                    ; preds = %606
  %612 = load i8*, i8** %6, align 8
  %613 = load i8, i8* %612, align 1
  %614 = sext i8 %613 to i32
  store i32 %614, i32* %8, align 4
  %615 = load i8*, i8** %6, align 8
  store i8 0, i8* %615, align 1
  %616 = load i8*, i8** %14, align 8
  %617 = call i32 @__inet_aton(i8* %616, %struct.in_addr* %16)
  %618 = icmp ne i32 %617, 0
  br i1 %618, label %619, label %628

; <label>:619:                                    ; preds = %611
  %620 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %16, i32 0, i32 0
  %621 = load i32, i32* %620, align 4
  %622 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %623 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %622, i32 0, i32 11
  %624 = load i32, i32* %13, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* %623, i64 0, i64 %625
  %627 = getelementptr inbounds %struct.anon, %struct.anon* %626, i32 0, i32 1
  store i32 %621, i32* %627, align 4
  br label %644

; <label>:628:                                    ; preds = %611
  %629 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %630 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %629, i32 0, i32 11
  %631 = load i32, i32* %13, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* %630, i64 0, i64 %632
  %634 = getelementptr inbounds %struct.anon, %struct.anon* %633, i32 0, i32 0
  %635 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %634, i32 0, i32 0
  %636 = load i32, i32* %635, align 4
  %637 = call i32 @net_mask(i32 %636)
  %638 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %639 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %638, i32 0, i32 11
  %640 = load i32, i32* %13, align 4
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* %639, i64 0, i64 %641
  %643 = getelementptr inbounds %struct.anon, %struct.anon* %642, i32 0, i32 1
  store i32 %637, i32* %643, align 4
  br label %644

; <label>:644:                                    ; preds = %628, %619
  br label %661

; <label>:645:                                    ; preds = %559
  %646 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %647 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %646, i32 0, i32 11
  %648 = load i32, i32* %13, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* %647, i64 0, i64 %649
  %651 = getelementptr inbounds %struct.anon, %struct.anon* %650, i32 0, i32 0
  %652 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %651, i32 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = call i32 @net_mask(i32 %653)
  %655 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %656 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %655, i32 0, i32 11
  %657 = load i32, i32* %13, align 4
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* %656, i64 0, i64 %658
  %660 = getelementptr inbounds %struct.anon, %struct.anon* %659, i32 0, i32 1
  store i32 %654, i32* %660, align 4
  br label %661

; <label>:661:                                    ; preds = %645, %644
  %662 = load i32, i32* %13, align 4
  %663 = add nsw i32 %662, 1
  store i32 %663, i32* %13, align 4
  br label %664

; <label>:664:                                    ; preds = %661, %551
  %665 = load i32, i32* %8, align 4
  %666 = trunc i32 %665 to i8
  %667 = load i8*, i8** %6, align 8
  store i8 %666, i8* %667, align 1
  br label %474

; <label>:668:                                    ; preds = %508, %474
  br label %163

; <label>:669:                                    ; preds = %465, %456
  %670 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %671 = call i32 @strncmp(i8* %670, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.438, i32 0, i32 0), i64 7) #11
  %672 = icmp ne i32 %671, 0
  br i1 %672, label %688, label %673

; <label>:673:                                    ; preds = %669
  %674 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 7
  %675 = load i8, i8* %674, align 1
  %676 = sext i8 %675 to i32
  %677 = icmp eq i32 %676, 32
  br i1 %677, label %683, label %678

; <label>:678:                                    ; preds = %673
  %679 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i64 0, i64 7
  %680 = load i8, i8* %679, align 1
  %681 = sext i8 %680 to i32
  %682 = icmp eq i32 %681, 9
  br i1 %682, label %683, label %688

; <label>:683:                                    ; preds = %678, %673
  %684 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %685 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %686 = getelementptr inbounds i8, i8* %685, i64 8
  %687 = getelementptr inbounds i8, i8* %686, i64 -1
  call void @res_setoptions(%struct.__res_state* %684, i8* %687, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.439, i32 0, i32 0))
  br label %163

; <label>:688:                                    ; preds = %678, %669
  br label %163

; <label>:689:                                    ; preds = %163
  %690 = load i32, i32* %10, align 4
  %691 = icmp sgt i32 %690, 1
  br i1 %691, label %692, label %696

; <label>:692:                                    ; preds = %689
  %693 = load i32, i32* %10, align 4
  %694 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %695 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %694, i32 0, i32 3
  store i32 %693, i32* %695, align 8
  br label %696

; <label>:696:                                    ; preds = %692, %689
  %697 = load i32, i32* %13, align 4
  %698 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %699 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %698, i32 0, i32 9
  %700 = trunc i32 %697 to i8
  %701 = load i8, i8* %699, align 8
  %702 = and i8 %700, 15
  %703 = shl i8 %702, 4
  %704 = and i8 %701, 15
  %705 = or i8 %704, %703
  store i8 %705, i8* %699, align 8
  %706 = zext i8 %702 to i32
  %707 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %708 = call i32 @fclose(%struct._IO_FILE* %707)
  br label %709

; <label>:709:                                    ; preds = %696, %159
  %710 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %711 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %710, i32 0, i32 7
  %712 = getelementptr inbounds [256 x i8], [256 x i8]* %711, i64 0, i64 0
  %713 = load i8, i8* %712, align 8
  %714 = sext i8 %713 to i32
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %716, label %731

; <label>:716:                                    ; preds = %709
  %717 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %718 = call i32 bitcast (i32 (...)* @gethostname to i32 (i8*, i64)*)(i8* %717, i64 255) #9
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %731

; <label>:720:                                    ; preds = %716
  %721 = getelementptr inbounds [8192 x i8], [8192 x i8]* %9, i32 0, i32 0
  %722 = call i8* @strchr(i8* %721, i32 46) #11
  store i8* %722, i8** %6, align 8
  %723 = icmp ne i8* %722, null
  br i1 %723, label %724, label %731

; <label>:724:                                    ; preds = %720
  %725 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %726 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %725, i32 0, i32 7
  %727 = getelementptr inbounds [256 x i8], [256 x i8]* %726, i32 0, i32 0
  %728 = load i8*, i8** %6, align 8
  %729 = getelementptr inbounds i8, i8* %728, i64 1
  %730 = call i8* @strcpy(i8* %727, i8* %729) #9
  br label %731

; <label>:731:                                    ; preds = %724, %720, %716, %709
  %732 = load i32, i32* %12, align 4
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %744

; <label>:734:                                    ; preds = %731
  %735 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %736 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %735, i32 0, i32 6
  %737 = getelementptr inbounds [7 x i8*], [7 x i8*]* %736, i32 0, i32 0
  store i8** %737, i8*** %7, align 8
  %738 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %739 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %738, i32 0, i32 7
  %740 = getelementptr inbounds [256 x i8], [256 x i8]* %739, i32 0, i32 0
  %741 = load i8**, i8*** %7, align 8
  %742 = getelementptr inbounds i8*, i8** %741, i32 1
  store i8** %742, i8*** %7, align 8
  store i8* %740, i8** %741, align 8
  %743 = load i8**, i8*** %7, align 8
  store i8* null, i8** %743, align 8
  br label %744

; <label>:744:                                    ; preds = %734, %731
  %745 = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.440, i32 0, i32 0)) #9
  store i8* %745, i8** %6, align 8
  %746 = icmp ne i8* %745, null
  br i1 %746, label %747, label %750

; <label>:747:                                    ; preds = %744
  %748 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %749 = load i8*, i8** %6, align 8
  call void @res_setoptions(%struct.__res_state* %748, i8* %749, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.441, i32 0, i32 0))
  br label %750

; <label>:750:                                    ; preds = %747, %744
  %751 = load %struct.__res_state*, %struct.__res_state** %3, align 8
  %752 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %751, i32 0, i32 2
  %753 = load i64, i64* %752, align 8
  %754 = or i64 %753, 1
  store i64 %754, i64* %752, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @__res_randomid() #0 {
  %1 = alloca %struct.timeval, align 8
  %2 = call i32 @gettimeofday(%struct.timeval* %1, %struct._ns_flagdata* null) #9
  %3 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = xor i64 %4, %6
  %8 = call i32 @getpid() #9
  %9 = sext i32 %8 to i64
  %10 = xor i64 %7, %9
  %11 = and i64 65535, %10
  %12 = trunc i64 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strpbrk(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @net_mask(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.in_addr, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  store i32 %0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = call i32 @ntohl(i32 %7) #12
  store i32 %8, i32* %4, align 4
  %9 = load i32, i32* %4, align 4
  %10 = and i32 %9, -2147483648
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %1
  %13 = call i32 @htonl(i32 -16777216) #12
  store i32 %13, i32* %2, align 4
  br label %23

; <label>:14:                                     ; preds = %1
  %15 = load i32, i32* %4, align 4
  %16 = and i32 %15, -1073741824
  %17 = icmp eq i32 %16, -2147483648
  br i1 %17, label %18, label %20

; <label>:18:                                     ; preds = %14
  %19 = call i32 @htonl(i32 -65536) #12
  store i32 %19, i32* %2, align 4
  br label %23

; <label>:20:                                     ; preds = %14
  br label %21

; <label>:21:                                     ; preds = %20
  %22 = call i32 @htonl(i32 -256) #12
  store i32 %22, i32* %2, align 4
  br label %23

; <label>:23:                                     ; preds = %21, %18, %12
  %24 = load i32, i32* %2, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @res_setoptions(%struct.__res_state*, i8*, i8*) #0 {
  %4 = alloca %struct.__res_state*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.__res_state* %0, %struct.__res_state** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %7, align 8
  %10 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %11 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %10, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 2
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %15, label %19

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %5, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.442, i32 0, i32 0), i8* %16, i8* %17)
  br label %19

; <label>:19:                                     ; preds = %15, %3
  br label %20

; <label>:20:                                     ; preds = %194, %19
  %21 = load i8*, i8** %7, align 8
  %22 = load i8, i8* %21, align 1
  %23 = icmp ne i8 %22, 0
  br i1 %23, label %24, label %195

; <label>:24:                                     ; preds = %20
  br label %25

; <label>:25:                                     ; preds = %37, %24
  %26 = load i8*, i8** %7, align 8
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 32
  br i1 %29, label %35, label %30

; <label>:30:                                     ; preds = %25
  %31 = load i8*, i8** %7, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp eq i32 %33, 9
  br label %35

; <label>:35:                                     ; preds = %30, %25
  %36 = phi i1 [ true, %25 ], [ %34, %30 ]
  br i1 %36, label %37, label %40

; <label>:37:                                     ; preds = %35
  %38 = load i8*, i8** %7, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %7, align 8
  br label %25

; <label>:40:                                     ; preds = %35
  %41 = load i8*, i8** %7, align 8
  %42 = call i32 @strncmp(i8* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.443, i32 0, i32 0), i64 6) #11
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %81, label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %7, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 7
  %47 = getelementptr inbounds i8, i8* %46, i64 -1
  %48 = call i32 @atoi(i8* %47) #11
  store i32 %48, i32* %8, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp sle i32 %49, 15
  br i1 %50, label %51, label %61

; <label>:51:                                     ; preds = %44
  %52 = load i32, i32* %8, align 4
  %53 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %54 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %53, i32 0, i32 9
  %55 = trunc i32 %52 to i8
  %56 = load i8, i8* %54, align 8
  %57 = and i8 %55, 15
  %58 = and i8 %56, -16
  %59 = or i8 %58, %57
  store i8 %59, i8* %54, align 8
  %60 = zext i8 %57 to i32
  br label %67

; <label>:61:                                     ; preds = %44
  %62 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %63 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %62, i32 0, i32 9
  %64 = load i8, i8* %63, align 8
  %65 = and i8 %64, -16
  %66 = or i8 %65, 15
  store i8 %66, i8* %63, align 8
  br label %67

; <label>:67:                                     ; preds = %61, %51
  %68 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %69 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %68, i32 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 2
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %80

; <label>:73:                                     ; preds = %67
  %74 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %75 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %74, i32 0, i32 9
  %76 = load i8, i8* %75, align 8
  %77 = and i8 %76, 15
  %78 = zext i8 %77 to i32
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.444, i32 0, i32 0), i32 %78)
  br label %80

; <label>:80:                                     ; preds = %73, %67
  br label %173

; <label>:81:                                     ; preds = %40
  %82 = load i8*, i8** %7, align 8
  %83 = call i32 @strncmp(i8* %82, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.445, i32 0, i32 0), i64 8) #11
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %100, label %85

; <label>:85:                                     ; preds = %81
  %86 = load i8*, i8** %7, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 9
  %88 = getelementptr inbounds i8, i8* %87, i64 -1
  %89 = call i32 @atoi(i8* %88) #11
  store i32 %89, i32* %8, align 4
  %90 = load i32, i32* %8, align 4
  %91 = icmp sle i32 %90, 30
  br i1 %91, label %92, label %96

; <label>:92:                                     ; preds = %85
  %93 = load i32, i32* %8, align 4
  %94 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %95 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %94, i32 0, i32 0
  store i32 %93, i32* %95, align 8
  br label %99

; <label>:96:                                     ; preds = %85
  %97 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %98 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %97, i32 0, i32 0
  store i32 30, i32* %98, align 8
  br label %99

; <label>:99:                                     ; preds = %96, %92
  br label %172

; <label>:100:                                    ; preds = %81
  %101 = load i8*, i8** %7, align 8
  %102 = call i32 @strncmp(i8* %101, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.446, i32 0, i32 0), i64 9) #11
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %119, label %104

; <label>:104:                                    ; preds = %100
  %105 = load i8*, i8** %7, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 10
  %107 = getelementptr inbounds i8, i8* %106, i64 -1
  %108 = call i32 @atoi(i8* %107) #11
  store i32 %108, i32* %8, align 4
  %109 = load i32, i32* %8, align 4
  %110 = icmp sle i32 %109, 5
  br i1 %110, label %111, label %115

; <label>:111:                                    ; preds = %104
  %112 = load i32, i32* %8, align 4
  %113 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %114 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %113, i32 0, i32 1
  store i32 %112, i32* %114, align 4
  br label %118

; <label>:115:                                    ; preds = %104
  %116 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %117 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %116, i32 0, i32 1
  store i32 5, i32* %117, align 4
  br label %118

; <label>:118:                                    ; preds = %115, %111
  br label %171

; <label>:119:                                    ; preds = %100
  %120 = load i8*, i8** %7, align 8
  %121 = call i32 @strncmp(i8* %120, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.447, i32 0, i32 0), i64 5) #11
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %139, label %123

; <label>:123:                                    ; preds = %119
  %124 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %125 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %124, i32 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 2
  %128 = icmp ne i64 %127, 0
  br i1 %128, label %137, label %129

; <label>:129:                                    ; preds = %123
  %130 = load i8*, i8** %5, align 8
  %131 = load i8*, i8** %6, align 8
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18.448, i32 0, i32 0), i8* %130, i8* %131)
  %133 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %134 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %133, i32 0, i32 2
  %135 = load i64, i64* %134, align 8
  %136 = or i64 %135, 2
  store i64 %136, i64* %134, align 8
  br label %137

; <label>:137:                                    ; preds = %129, %123
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.449, i32 0, i32 0))
  br label %170

; <label>:139:                                    ; preds = %119
  %140 = load i8*, i8** %7, align 8
  %141 = call i32 @strncmp(i8* %140, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.450, i32 0, i32 0), i64 5) #11
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %148, label %143

; <label>:143:                                    ; preds = %139
  %144 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %145 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %144, i32 0, i32 2
  %146 = load i64, i64* %145, align 8
  %147 = or i64 %146, 8192
  store i64 %147, i64* %145, align 8
  br label %169

; <label>:148:                                    ; preds = %139
  %149 = load i8*, i8** %7, align 8
  %150 = call i32 @strncmp(i8* %149, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.451, i32 0, i32 0), i64 6) #11
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %157, label %152

; <label>:152:                                    ; preds = %148
  %153 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %154 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %153, i32 0, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = or i64 %155, 16384
  store i64 %156, i64* %154, align 8
  br label %168

; <label>:157:                                    ; preds = %148
  %158 = load i8*, i8** %7, align 8
  %159 = call i32 @strncmp(i8* %158, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22.452, i32 0, i32 0), i64 14) #11
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %166, label %161

; <label>:161:                                    ; preds = %157
  %162 = load %struct.__res_state*, %struct.__res_state** %4, align 8
  %163 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %162, i32 0, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = or i64 %164, 32768
  store i64 %165, i64* %163, align 8
  br label %167

; <label>:166:                                    ; preds = %157
  br label %167

; <label>:167:                                    ; preds = %166, %161
  br label %168

; <label>:168:                                    ; preds = %167, %152
  br label %169

; <label>:169:                                    ; preds = %168, %143
  br label %170

; <label>:170:                                    ; preds = %169, %137
  br label %171

; <label>:171:                                    ; preds = %170, %118
  br label %172

; <label>:172:                                    ; preds = %171, %99
  br label %173

; <label>:173:                                    ; preds = %172, %80
  br label %174

; <label>:174:                                    ; preds = %191, %173
  %175 = load i8*, i8** %7, align 8
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %179, label %189

; <label>:179:                                    ; preds = %174
  %180 = load i8*, i8** %7, align 8
  %181 = load i8, i8* %180, align 1
  %182 = sext i8 %181 to i32
  %183 = icmp ne i32 %182, 32
  br i1 %183, label %184, label %189

; <label>:184:                                    ; preds = %179
  %185 = load i8*, i8** %7, align 8
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp ne i32 %187, 9
  br label %189

; <label>:189:                                    ; preds = %184, %179, %174
  %190 = phi i1 [ false, %179 ], [ false, %174 ], [ %188, %184 ]
  br i1 %190, label %191, label %194

; <label>:191:                                    ; preds = %189
  %192 = load i8*, i8** %7, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %7, align 8
  br label %174

; <label>:194:                                    ; preds = %189
  br label %20

; <label>:195:                                    ; preds = %20
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #7

; Function Attrs: nounwind readnone
declare dso_local i32 @ntohl(i32) #6

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timeval*, %struct._ns_flagdata*) #4

; Function Attrs: nounwind
declare dso_local i32 @getpid() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__res_nmkquery(%struct.__res_state*, i32, i8*, i32, i32, i8*, i32, i8*, i8*, i32) #0 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.__res_state*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.HEADER*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca [20 x i8*], align 16
  %26 = alloca i8**, align 8
  %27 = alloca i8**, align 8
  store %struct.__res_state* %0, %struct.__res_state** %12, align 8
  store i32 %1, i32* %13, align 4
  store i8* %2, i8** %14, align 8
  store i32 %3, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  store i8* %5, i8** %17, align 8
  store i32 %6, i32* %18, align 4
  store i8* %7, i8** %19, align 8
  store i8* %8, i8** %20, align 8
  store i32 %9, i32* %21, align 4
  %28 = load %struct.__res_state*, %struct.__res_state** %12, align 8
  %29 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 2
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %44

; <label>:33:                                     ; preds = %10
  %34 = load i32, i32* %13, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([16 x i8*]* @_res_opcodes to [0 x i8*]*), i64 0, i64 %35
  %37 = load i8*, i8** %36, align 8
  %38 = load i8*, i8** %14, align 8
  %39 = load i32, i32* %15, align 4
  %40 = call i8* @__p_class(i32 %39)
  %41 = load i32, i32* %16, align 4
  %42 = call i8* @__p_type(i32 %41)
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.455, i32 0, i32 0), i8* %37, i8* %38, i8* %40, i8* %42)
  br label %44

; <label>:44:                                     ; preds = %33, %10
  %45 = load i8*, i8** %20, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

; <label>:47:                                     ; preds = %44
  %48 = load i32, i32* %21, align 4
  %49 = icmp slt i32 %48, 12
  br i1 %49, label %50, label %51

; <label>:50:                                     ; preds = %47, %44
  store i32 -1, i32* %11, align 4
  br label %263

; <label>:51:                                     ; preds = %47
  %52 = load i8*, i8** %20, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 0, i64 12, i1 false)
  %53 = load i8*, i8** %20, align 8
  %54 = bitcast i8* %53 to %struct.HEADER*
  store %struct.HEADER* %54, %struct.HEADER** %22, align 8
  %55 = load %struct.__res_state*, %struct.__res_state** %12, align 8
  %56 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %55, i32 0, i32 5
  %57 = load i16, i16* %56, align 4
  %58 = add i16 %57, 1
  store i16 %58, i16* %56, align 4
  %59 = call zeroext i16 @htons(i16 zeroext %58) #12
  %60 = zext i16 %59 to i32
  %61 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %62 = bitcast %struct.HEADER* %61 to i96*
  %63 = zext i32 %60 to i96
  %64 = load i96, i96* %62, align 4
  %65 = and i96 %63, 65535
  %66 = and i96 %64, -65536
  %67 = or i96 %66, %65
  store i96 %67, i96* %62, align 4
  %68 = trunc i96 %65 to i32
  %69 = load i32, i32* %13, align 4
  %70 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %71 = bitcast %struct.HEADER* %70 to i96*
  %72 = zext i32 %69 to i96
  %73 = load i96, i96* %71, align 4
  %74 = and i96 %72, 15
  %75 = shl i96 %74, 19
  %76 = and i96 %73, -7864321
  %77 = or i96 %76, %75
  store i96 %77, i96* %71, align 4
  %78 = trunc i96 %74 to i32
  %79 = load %struct.__res_state*, %struct.__res_state** %12, align 8
  %80 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %79, i32 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 64
  %83 = icmp ne i64 %82, 0
  %84 = zext i1 %83 to i32
  %85 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %86 = bitcast %struct.HEADER* %85 to i96*
  %87 = zext i32 %84 to i96
  %88 = load i96, i96* %86, align 4
  %89 = and i96 %87, 1
  %90 = shl i96 %89, 16
  %91 = and i96 %88, -65537
  %92 = or i96 %91, %90
  store i96 %92, i96* %86, align 4
  %93 = trunc i96 %89 to i32
  %94 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %95 = bitcast %struct.HEADER* %94 to i96*
  %96 = load i96, i96* %95, align 4
  %97 = and i96 %96, -251658241
  store i96 %97, i96* %95, align 4
  %98 = load i8*, i8** %20, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 12
  store i8* %99, i8** %23, align 8
  %100 = load i32, i32* %21, align 4
  %101 = sub nsw i32 %100, 12
  store i32 %101, i32* %21, align 4
  %102 = getelementptr inbounds [20 x i8*], [20 x i8*]* %25, i32 0, i32 0
  store i8** %102, i8*** %26, align 8
  %103 = load i8*, i8** %20, align 8
  %104 = load i8**, i8*** %26, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i32 1
  store i8** %105, i8*** %26, align 8
  store i8* %103, i8** %104, align 8
  %106 = load i8**, i8*** %26, align 8
  %107 = getelementptr inbounds i8*, i8** %106, i32 1
  store i8** %107, i8*** %26, align 8
  store i8* null, i8** %106, align 8
  %108 = getelementptr inbounds [20 x i8*], [20 x i8*]* %25, i32 0, i32 0
  %109 = getelementptr inbounds i8*, i8** %108, i64 20
  store i8** %109, i8*** %27, align 8
  %110 = load i32, i32* %13, align 4
  switch i32 %110, label %255 [
    i32 0, label %111
    i32 4, label %111
    i32 1, label %205
  ]

; <label>:111:                                    ; preds = %51, %51
  %112 = load i32, i32* %21, align 4
  %113 = sub nsw i32 %112, 4
  store i32 %113, i32* %21, align 4
  %114 = icmp slt i32 %113, 0
  br i1 %114, label %115, label %116

; <label>:115:                                    ; preds = %111
  store i32 -1, i32* %11, align 4
  br label %263

; <label>:116:                                    ; preds = %111
  %117 = load i8*, i8** %14, align 8
  %118 = load i8*, i8** %23, align 8
  %119 = load i32, i32* %21, align 4
  %120 = getelementptr inbounds [20 x i8*], [20 x i8*]* %25, i32 0, i32 0
  %121 = load i8**, i8*** %27, align 8
  %122 = call i32 @__dn_comp(i8* %117, i8* %118, i32 %119, i8** %120, i8** %121)
  store i32 %122, i32* %24, align 4
  %123 = icmp slt i32 %122, 0
  br i1 %123, label %124, label %125

; <label>:124:                                    ; preds = %116
  store i32 -1, i32* %11, align 4
  br label %263

; <label>:125:                                    ; preds = %116
  %126 = load i32, i32* %24, align 4
  %127 = load i8*, i8** %23, align 8
  %128 = sext i32 %126 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  store i8* %129, i8** %23, align 8
  %130 = load i32, i32* %24, align 4
  %131 = load i32, i32* %21, align 4
  %132 = sub nsw i32 %131, %130
  store i32 %132, i32* %21, align 4
  %133 = load i32, i32* %16, align 4
  %134 = trunc i32 %133 to i16
  %135 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext %134, i8* %135)
  %136 = load i8*, i8** %23, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 2
  store i8* %137, i8** %23, align 8
  %138 = load i32, i32* %15, align 4
  %139 = trunc i32 %138 to i16
  %140 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext %139, i8* %140)
  %141 = load i8*, i8** %23, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 2
  store i8* %142, i8** %23, align 8
  %143 = call zeroext i16 @htons(i16 zeroext 1) #12
  %144 = zext i16 %143 to i32
  %145 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %146 = bitcast %struct.HEADER* %145 to i96*
  %147 = zext i32 %144 to i96
  %148 = load i96, i96* %146, align 4
  %149 = and i96 %147, 65535
  %150 = shl i96 %149, 32
  %151 = and i96 %148, -281470681743361
  %152 = or i96 %151, %150
  store i96 %152, i96* %146, align 4
  %153 = trunc i96 %149 to i32
  %154 = load i32, i32* %13, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %159, label %156

; <label>:156:                                    ; preds = %125
  %157 = load i8*, i8** %17, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %159, label %160

; <label>:159:                                    ; preds = %156, %125
  br label %256

; <label>:160:                                    ; preds = %156
  %161 = load i32, i32* %21, align 4
  %162 = sub nsw i32 %161, 10
  store i32 %162, i32* %21, align 4
  %163 = load i8*, i8** %17, align 8
  %164 = load i8*, i8** %23, align 8
  %165 = load i32, i32* %21, align 4
  %166 = getelementptr inbounds [20 x i8*], [20 x i8*]* %25, i32 0, i32 0
  %167 = load i8**, i8*** %27, align 8
  %168 = call i32 @__dn_comp(i8* %163, i8* %164, i32 %165, i8** %166, i8** %167)
  store i32 %168, i32* %24, align 4
  %169 = load i32, i32* %24, align 4
  %170 = icmp slt i32 %169, 0
  br i1 %170, label %171, label %172

; <label>:171:                                    ; preds = %160
  store i32 -1, i32* %11, align 4
  br label %263

; <label>:172:                                    ; preds = %160
  %173 = load i32, i32* %24, align 4
  %174 = load i8*, i8** %23, align 8
  %175 = sext i32 %173 to i64
  %176 = getelementptr inbounds i8, i8* %174, i64 %175
  store i8* %176, i8** %23, align 8
  %177 = load i32, i32* %24, align 4
  %178 = load i32, i32* %21, align 4
  %179 = sub nsw i32 %178, %177
  store i32 %179, i32* %21, align 4
  %180 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext 10, i8* %180)
  %181 = load i8*, i8** %23, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 2
  store i8* %182, i8** %23, align 8
  %183 = load i32, i32* %15, align 4
  %184 = trunc i32 %183 to i16
  %185 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext %184, i8* %185)
  %186 = load i8*, i8** %23, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 2
  store i8* %187, i8** %23, align 8
  %188 = load i8*, i8** %23, align 8
  call void @__putlong(i32 0, i8* %188)
  %189 = load i8*, i8** %23, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 4
  store i8* %190, i8** %23, align 8
  %191 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext 0, i8* %191)
  %192 = load i8*, i8** %23, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 2
  store i8* %193, i8** %23, align 8
  %194 = call zeroext i16 @htons(i16 zeroext 1) #12
  %195 = zext i16 %194 to i32
  %196 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %197 = bitcast %struct.HEADER* %196 to i96*
  %198 = zext i32 %195 to i96
  %199 = load i96, i96* %197, align 4
  %200 = and i96 %198, 65535
  %201 = shl i96 %200, 80
  %202 = and i96 %199, 1208925819614629174706175
  %203 = or i96 %202, %201
  store i96 %203, i96* %197, align 4
  %204 = trunc i96 %200 to i32
  br label %256

; <label>:205:                                    ; preds = %51
  %206 = load i32, i32* %21, align 4
  %207 = load i32, i32* %18, align 4
  %208 = add nsw i32 11, %207
  %209 = icmp slt i32 %206, %208
  br i1 %209, label %210, label %211

; <label>:210:                                    ; preds = %205
  store i32 -1, i32* %11, align 4
  br label %263

; <label>:211:                                    ; preds = %205
  %212 = load i8*, i8** %23, align 8
  %213 = getelementptr inbounds i8, i8* %212, i32 1
  store i8* %213, i8** %23, align 8
  store i8 0, i8* %212, align 1
  %214 = load i32, i32* %16, align 4
  %215 = trunc i32 %214 to i16
  %216 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext %215, i8* %216)
  %217 = load i8*, i8** %23, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 2
  store i8* %218, i8** %23, align 8
  %219 = load i32, i32* %15, align 4
  %220 = trunc i32 %219 to i16
  %221 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext %220, i8* %221)
  %222 = load i8*, i8** %23, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 2
  store i8* %223, i8** %23, align 8
  %224 = load i8*, i8** %23, align 8
  call void @__putlong(i32 0, i8* %224)
  %225 = load i8*, i8** %23, align 8
  %226 = getelementptr inbounds i8, i8* %225, i64 4
  store i8* %226, i8** %23, align 8
  %227 = load i32, i32* %18, align 4
  %228 = trunc i32 %227 to i16
  %229 = load i8*, i8** %23, align 8
  call void @__putshort(i16 zeroext %228, i8* %229)
  %230 = load i8*, i8** %23, align 8
  %231 = getelementptr inbounds i8, i8* %230, i64 2
  store i8* %231, i8** %23, align 8
  %232 = load i32, i32* %18, align 4
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %243

; <label>:234:                                    ; preds = %211
  %235 = load i8*, i8** %23, align 8
  %236 = load i8*, i8** %17, align 8
  %237 = load i32, i32* %18, align 4
  %238 = sext i32 %237 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %236, i64 %238, i1 false)
  %239 = load i32, i32* %18, align 4
  %240 = load i8*, i8** %23, align 8
  %241 = sext i32 %239 to i64
  %242 = getelementptr inbounds i8, i8* %240, i64 %241
  store i8* %242, i8** %23, align 8
  br label %243

; <label>:243:                                    ; preds = %234, %211
  %244 = call zeroext i16 @htons(i16 zeroext 1) #12
  %245 = zext i16 %244 to i32
  %246 = load %struct.HEADER*, %struct.HEADER** %22, align 8
  %247 = bitcast %struct.HEADER* %246 to i96*
  %248 = zext i32 %245 to i96
  %249 = load i96, i96* %247, align 4
  %250 = and i96 %248, 65535
  %251 = shl i96 %250, 48
  %252 = and i96 %249, -18446462598732840961
  %253 = or i96 %252, %251
  store i96 %253, i96* %247, align 4
  %254 = trunc i96 %250 to i32
  br label %256

; <label>:255:                                    ; preds = %51
  store i32 -1, i32* %11, align 4
  br label %263

; <label>:256:                                    ; preds = %243, %172, %159
  %257 = load i8*, i8** %23, align 8
  %258 = load i8*, i8** %20, align 8
  %259 = ptrtoint i8* %257 to i64
  %260 = ptrtoint i8* %258 to i64
  %261 = sub i64 %259, %260
  %262 = trunc i64 %261 to i32
  store i32 %262, i32* %11, align 4
  br label %263

; <label>:263:                                    ; preds = %256, %255, %210, %171, %124, %115, %50
  %264 = load i32, i32* %11, align 4
  ret i32 %264
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__res_hostalias(%struct.__res_state*, i8*, i8*, i64) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__res_state*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [8192 x i8], align 16
  %14 = alloca %struct._IO_FILE*, align 8
  store %struct.__res_state* %0, %struct.__res_state** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %15 = load %struct.__res_state*, %struct.__res_state** %6, align 8
  %16 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 4096
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %4
  store i8* null, i8** %5, align 8
  br label %140

; <label>:21:                                     ; preds = %4
  %22 = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.458, i32 0, i32 0)) #9
  store i8* %22, i8** %10, align 8
  %23 = load i8*, i8** %10, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

; <label>:25:                                     ; preds = %21
  %26 = load i8*, i8** %10, align 8
  %27 = call %struct._IO_FILE* @fopen(i8* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.459, i32 0, i32 0))
  store %struct._IO_FILE* %27, %struct._IO_FILE** %14, align 8
  %28 = icmp eq %struct._IO_FILE* %27, null
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %25, %21
  store i8* null, i8** %5, align 8
  br label %140

; <label>:30:                                     ; preds = %25
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  call void @setbuf(%struct._IO_FILE* %31, i8* null) #9
  %32 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 8191
  store i8 0, i8* %32, align 1
  br label %33

; <label>:33:                                     ; preds = %136, %30
  %34 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i32 0, i32 0
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %36 = call i8* @fgets(i8* %34, i32 8192, %struct._IO_FILE* %35)
  %37 = icmp ne i8* %36, null
  br i1 %37, label %38, label %137

; <label>:38:                                     ; preds = %33
  %39 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i32 0, i32 0
  store i8* %39, i8** %11, align 8
  br label %40

; <label>:40:                                     ; preds = %61, %38
  %41 = load i8*, i8** %11, align 8
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %58

; <label>:45:                                     ; preds = %40
  %46 = call i16** @__ctype_b_loc() #12
  %47 = load i16*, i16** %46, align 8
  %48 = load i8*, i8** %11, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %47, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = and i32 %54, 8192
  %56 = icmp ne i32 %55, 0
  %57 = xor i1 %56, true
  br label %58

; <label>:58:                                     ; preds = %45, %40
  %59 = phi i1 [ false, %40 ], [ %57, %45 ]
  br i1 %59, label %60, label %64

; <label>:60:                                     ; preds = %58
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i8*, i8** %11, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %11, align 8
  br label %40

; <label>:64:                                     ; preds = %58
  %65 = load i8*, i8** %11, align 8
  %66 = load i8, i8* %65, align 1
  %67 = icmp ne i8 %66, 0
  br i1 %67, label %69, label %68

; <label>:68:                                     ; preds = %64
  br label %137

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %11, align 8
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i32 0, i32 0
  %72 = load i8*, i8** %7, align 8
  %73 = call i32 @strcasecmp(i8* %71, i8* %72) #11
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %136, label %75

; <label>:75:                                     ; preds = %69
  br label %76

; <label>:76:                                     ; preds = %89, %75
  %77 = call i16** @__ctype_b_loc() #12
  %78 = load i16*, i16** %77, align 8
  %79 = load i8*, i8** %11, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %11, align 8
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i16, i16* %78, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = and i32 %86, 8192
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %76
  br label %76

; <label>:90:                                     ; preds = %76
  %91 = load i8*, i8** %11, align 8
  %92 = load i8, i8* %91, align 1
  %93 = icmp ne i8 %92, 0
  br i1 %93, label %95, label %94

; <label>:94:                                     ; preds = %90
  br label %137

; <label>:95:                                     ; preds = %90
  %96 = load i8*, i8** %11, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  store i8* %97, i8** %12, align 8
  br label %98

; <label>:98:                                     ; preds = %119, %95
  %99 = load i8*, i8** %12, align 8
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %116

; <label>:103:                                    ; preds = %98
  %104 = call i16** @__ctype_b_loc() #12
  %105 = load i16*, i16** %104, align 8
  %106 = load i8*, i8** %12, align 8
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i16, i16* %105, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = and i32 %112, 8192
  %114 = icmp ne i32 %113, 0
  %115 = xor i1 %114, true
  br label %116

; <label>:116:                                    ; preds = %103, %98
  %117 = phi i1 [ false, %98 ], [ %115, %103 ]
  br i1 %117, label %118, label %122

; <label>:118:                                    ; preds = %116
  br label %119

; <label>:119:                                    ; preds = %118
  %120 = load i8*, i8** %12, align 8
  %121 = getelementptr inbounds i8, i8* %120, i32 1
  store i8* %121, i8** %12, align 8
  br label %98

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** %12, align 8
  store i8 0, i8* %123, align 1
  %124 = load i8*, i8** %8, align 8
  %125 = load i8*, i8** %11, align 8
  %126 = load i64, i64* %9, align 8
  %127 = sub i64 %126, 1
  %128 = call i8* @strncpy(i8* %124, i8* %125, i64 %127) #9
  %129 = load i8*, i8** %8, align 8
  %130 = load i64, i64* %9, align 8
  %131 = sub i64 %130, 1
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  store i8 0, i8* %132, align 1
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %134 = call i32 @fclose(%struct._IO_FILE* %133)
  %135 = load i8*, i8** %8, align 8
  store i8* %135, i8** %5, align 8
  br label %140

; <label>:136:                                    ; preds = %69
  br label %33

; <label>:137:                                    ; preds = %94, %68, %33
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %139 = call i32 @fclose(%struct._IO_FILE* %138)
  store i8* null, i8** %5, align 8
  br label %140

; <label>:140:                                    ; preds = %137, %122, %29, %20
  %141 = load i8*, i8** %5, align 8
  ret i8* %141
}

; Function Attrs: nounwind
declare dso_local void @setbuf(%struct._IO_FILE*, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @__res_nclose(%struct.__res_state*) #0 {
  %2 = alloca %struct.__res_state*, align 8
  store %struct.__res_state* %0, %struct.__res_state** %2, align 8
  %3 = load %struct.__res_state*, %struct.__res_state** %2, align 8
  %4 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %3, i32 0, i32 15
  %5 = load i32, i32* %4, align 4
  %6 = icmp sge i32 %5, 0
  br i1 %6, label %7, label %18

; <label>:7:                                      ; preds = %1
  %8 = load %struct.__res_state*, %struct.__res_state** %2, align 8
  %9 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %8, i32 0, i32 15
  %10 = load i32, i32* %9, align 4
  %11 = call i32 @close(i32 %10)
  %12 = load %struct.__res_state*, %struct.__res_state** %2, align 8
  %13 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %12, i32 0, i32 15
  store i32 -1, i32* %13, align 4
  %14 = load %struct.__res_state*, %struct.__res_state** %2, align 8
  %15 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %14, i32 0, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, -4
  store i32 %17, i32* %15, align 8
  br label %18

; <label>:18:                                     ; preds = %7, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__inet_nsap_ntoa(i32, i8*, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %3
  %13 = load i8*, i8** %6, align 8
  store i8* %13, i8** %9, align 8
  br label %15

; <label>:14:                                     ; preds = %3
  store i8* getelementptr inbounds ([765 x i8], [765 x i8]* @__inet_nsap_ntoa.tmpbuf, i32 0, i32 0), i8** %6, align 8
  store i8* getelementptr inbounds ([765 x i8], [765 x i8]* @__inet_nsap_ntoa.tmpbuf, i32 0, i32 0), i8** %9, align 8
  br label %15

; <label>:15:                                     ; preds = %14, %12
  %16 = load i32, i32* %4, align 4
  %17 = icmp sgt i32 %16, 255
  br i1 %17, label %18, label %19

; <label>:18:                                     ; preds = %15
  store i32 255, i32* %4, align 4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  store i32 0, i32* %8, align 4
  br label %20

; <label>:20:                                     ; preds = %64, %19
  %21 = load i32, i32* %8, align 4
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %67

; <label>:24:                                     ; preds = %20
  %25 = load i8*, i8** %5, align 8
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = ashr i32 %27, 4
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %7, align 4
  %31 = icmp slt i32 %30, 10
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 48, i32 55
  %34 = add nsw i32 %29, %33
  %35 = trunc i32 %34 to i8
  %36 = load i8*, i8** %6, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %6, align 8
  store i8 %35, i8* %36, align 1
  %38 = load i8*, i8** %5, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %5, align 8
  %40 = load i8, i8* %38, align 1
  %41 = zext i8 %40 to i32
  %42 = and i32 %41, 15
  store i32 %42, i32* %7, align 4
  %43 = load i32, i32* %7, align 4
  %44 = load i32, i32* %7, align 4
  %45 = icmp slt i32 %44, 10
  %46 = zext i1 %45 to i64
  %47 = select i1 %45, i32 48, i32 55
  %48 = add nsw i32 %43, %47
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %6, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %6, align 8
  store i8 %49, i8* %50, align 1
  %52 = load i32, i32* %8, align 4
  %53 = srem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %63

; <label>:55:                                     ; preds = %24
  %56 = load i32, i32* %8, align 4
  %57 = add nsw i32 %56, 1
  %58 = load i32, i32* %4, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %63

; <label>:60:                                     ; preds = %55
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %6, align 8
  store i8 46, i8* %61, align 1
  br label %63

; <label>:63:                                     ; preds = %60, %55, %24
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* %8, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %8, align 4
  br label %20

; <label>:67:                                     ; preds = %20
  %68 = load i8*, i8** %6, align 8
  store i8 0, i8* %68, align 1
  %69 = load i8*, i8** %9, align 8
  ret i8* %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__inet_aton(i8*, %struct.in_addr*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.in_addr*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca [4 x i8], align 1
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store %struct.in_addr* %1, %struct.in_addr** %5, align 8
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 0
  store i8* %13, i8** %11, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = load i8, i8* %14, align 1
  store i8 %15, i8* %9, align 1
  br label %16

; <label>:16:                                     ; preds = %159, %2
  %17 = call i16** @__ctype_b_loc() #12
  %18 = load i16*, i16** %17, align 8
  %19 = load i8, i8* %9, align 1
  %20 = sext i8 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %18, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 2048
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %28, label %27

; <label>:27:                                     ; preds = %16
  store i32 0, i32* %3, align 4
  br label %256

; <label>:28:                                     ; preds = %16
  store i64 0, i64* %6, align 8
  store i32 10, i32* %7, align 4
  store i32 0, i32* %12, align 4
  %29 = load i8, i8* %9, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 48
  br i1 %31, label %32, label %49

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %4, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %4, align 8
  %35 = load i8, i8* %34, align 1
  store i8 %35, i8* %9, align 1
  %36 = load i8, i8* %9, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp eq i32 %37, 120
  br i1 %38, label %43, label %39

; <label>:39:                                     ; preds = %32
  %40 = load i8, i8* %9, align 1
  %41 = sext i8 %40 to i32
  %42 = icmp eq i32 %41, 88
  br i1 %42, label %43, label %47

; <label>:43:                                     ; preds = %39, %32
  store i32 16, i32* %7, align 4
  %44 = load i8*, i8** %4, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %4, align 8
  %46 = load i8, i8* %45, align 1
  store i8 %46, i8* %9, align 1
  br label %48

; <label>:47:                                     ; preds = %39
  store i32 8, i32* %7, align 4
  store i32 1, i32* %12, align 4
  br label %48

; <label>:48:                                     ; preds = %47, %43
  br label %49

; <label>:49:                                     ; preds = %48, %28
  br label %50

; <label>:50:                                     ; preds = %136, %49
  %51 = load i8, i8* %9, align 1
  %52 = sext i8 %51 to i32
  %53 = and i32 %52, -128
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %91

; <label>:55:                                     ; preds = %50
  %56 = call i16** @__ctype_b_loc() #12
  %57 = load i16*, i16** %56, align 8
  %58 = load i8, i8* %9, align 1
  %59 = sext i8 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %57, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = and i32 %63, 2048
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %91

; <label>:66:                                     ; preds = %55
  %67 = load i32, i32* %7, align 4
  %68 = icmp eq i32 %67, 8
  br i1 %68, label %69, label %78

; <label>:69:                                     ; preds = %66
  %70 = load i8, i8* %9, align 1
  %71 = sext i8 %70 to i32
  %72 = icmp eq i32 %71, 56
  br i1 %72, label %77, label %73

; <label>:73:                                     ; preds = %69
  %74 = load i8, i8* %9, align 1
  %75 = sext i8 %74 to i32
  %76 = icmp eq i32 %75, 57
  br i1 %76, label %77, label %78

; <label>:77:                                     ; preds = %73, %69
  store i32 0, i32* %3, align 4
  br label %256

; <label>:78:                                     ; preds = %73, %66
  %79 = load i64, i64* %6, align 8
  %80 = load i32, i32* %7, align 4
  %81 = sext i32 %80 to i64
  %82 = mul i64 %79, %81
  %83 = load i8, i8* %9, align 1
  %84 = sext i8 %83 to i32
  %85 = sub nsw i32 %84, 48
  %86 = sext i32 %85 to i64
  %87 = add i64 %82, %86
  store i64 %87, i64* %6, align 8
  %88 = load i8*, i8** %4, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %89, i8** %4, align 8
  %90 = load i8, i8* %89, align 1
  store i8 %90, i8* %9, align 1
  store i32 1, i32* %12, align 4
  br label %136

; <label>:91:                                     ; preds = %55, %50
  %92 = load i32, i32* %7, align 4
  %93 = icmp eq i32 %92, 16
  br i1 %93, label %94, label %134

; <label>:94:                                     ; preds = %91
  %95 = load i8, i8* %9, align 1
  %96 = sext i8 %95 to i32
  %97 = and i32 %96, -128
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %134

; <label>:99:                                     ; preds = %94
  %100 = call i16** @__ctype_b_loc() #12
  %101 = load i16*, i16** %100, align 8
  %102 = load i8, i8* %9, align 1
  %103 = sext i8 %102 to i32
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i16, i16* %101, i64 %104
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = and i32 %107, 4096
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %134

; <label>:110:                                    ; preds = %99
  %111 = load i64, i64* %6, align 8
  %112 = shl i64 %111, 4
  %113 = load i8, i8* %9, align 1
  %114 = sext i8 %113 to i32
  %115 = add nsw i32 %114, 10
  %116 = call i16** @__ctype_b_loc() #12
  %117 = load i16*, i16** %116, align 8
  %118 = load i8, i8* %9, align 1
  %119 = sext i8 %118 to i32
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i16, i16* %117, i64 %120
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = and i32 %123, 512
  %125 = icmp ne i32 %124, 0
  %126 = zext i1 %125 to i64
  %127 = select i1 %125, i32 97, i32 65
  %128 = sub nsw i32 %115, %127
  %129 = sext i32 %128 to i64
  %130 = or i64 %112, %129
  store i64 %130, i64* %6, align 8
  %131 = load i8*, i8** %4, align 8
  %132 = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %132, i8** %4, align 8
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %9, align 1
  store i32 1, i32* %12, align 4
  br label %135

; <label>:134:                                    ; preds = %99, %94, %91
  br label %137

; <label>:135:                                    ; preds = %110
  br label %136

; <label>:136:                                    ; preds = %135, %78
  br label %50

; <label>:137:                                    ; preds = %134
  %138 = load i8, i8* %9, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %139, 46
  br i1 %140, label %141, label %158

; <label>:141:                                    ; preds = %137
  %142 = load i8*, i8** %11, align 8
  %143 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 0
  %144 = getelementptr inbounds i8, i8* %143, i64 3
  %145 = icmp uge i8* %142, %144
  br i1 %145, label %149, label %146

; <label>:146:                                    ; preds = %141
  %147 = load i64, i64* %6, align 8
  %148 = icmp ugt i64 %147, 255
  br i1 %148, label %149, label %150

; <label>:149:                                    ; preds = %146, %141
  store i32 0, i32* %3, align 4
  br label %256

; <label>:150:                                    ; preds = %146
  %151 = load i64, i64* %6, align 8
  %152 = trunc i64 %151 to i8
  %153 = load i8*, i8** %11, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %11, align 8
  store i8 %152, i8* %153, align 1
  %155 = load i8*, i8** %4, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %156, i8** %4, align 8
  %157 = load i8, i8* %156, align 1
  store i8 %157, i8* %9, align 1
  br label %159

; <label>:158:                                    ; preds = %137
  br label %160

; <label>:159:                                    ; preds = %150
  br label %16

; <label>:160:                                    ; preds = %158
  %161 = load i8, i8* %9, align 1
  %162 = sext i8 %161 to i32
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %181

; <label>:164:                                    ; preds = %160
  %165 = load i8, i8* %9, align 1
  %166 = sext i8 %165 to i32
  %167 = and i32 %166, -128
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %180

; <label>:169:                                    ; preds = %164
  %170 = call i16** @__ctype_b_loc() #12
  %171 = load i16*, i16** %170, align 8
  %172 = load i8, i8* %9, align 1
  %173 = sext i8 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i16, i16* %171, i64 %174
  %176 = load i16, i16* %175, align 2
  %177 = zext i16 %176 to i32
  %178 = and i32 %177, 8192
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %181, label %180

; <label>:180:                                    ; preds = %169, %164
  store i32 0, i32* %3, align 4
  br label %256

; <label>:181:                                    ; preds = %169, %160
  %182 = load i32, i32* %12, align 4
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %185, label %184

; <label>:184:                                    ; preds = %181
  store i32 0, i32* %3, align 4
  br label %256

; <label>:185:                                    ; preds = %181
  %186 = load i8*, i8** %11, align 8
  %187 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 0
  %188 = ptrtoint i8* %186 to i64
  %189 = ptrtoint i8* %187 to i64
  %190 = sub i64 %188, %189
  %191 = add nsw i64 %190, 1
  %192 = trunc i64 %191 to i32
  store i32 %192, i32* %8, align 4
  %193 = load i32, i32* %8, align 4
  switch i32 %193, label %246 [
    i32 1, label %194
    i32 2, label %195
    i32 3, label %207
    i32 4, label %224
  ]

; <label>:194:                                    ; preds = %185
  br label %246

; <label>:195:                                    ; preds = %185
  %196 = load i64, i64* %6, align 8
  %197 = icmp ugt i64 %196, 16777215
  br i1 %197, label %198, label %199

; <label>:198:                                    ; preds = %195
  store i32 0, i32* %3, align 4
  br label %256

; <label>:199:                                    ; preds = %195
  %200 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = shl i32 %202, 24
  %204 = sext i32 %203 to i64
  %205 = load i64, i64* %6, align 8
  %206 = or i64 %205, %204
  store i64 %206, i64* %6, align 8
  br label %246

; <label>:207:                                    ; preds = %185
  %208 = load i64, i64* %6, align 8
  %209 = icmp ugt i64 %208, 65535
  br i1 %209, label %210, label %211

; <label>:210:                                    ; preds = %207
  store i32 0, i32* %3, align 4
  br label %256

; <label>:211:                                    ; preds = %207
  %212 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = shl i32 %214, 24
  %216 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = shl i32 %218, 16
  %220 = or i32 %215, %219
  %221 = sext i32 %220 to i64
  %222 = load i64, i64* %6, align 8
  %223 = or i64 %222, %221
  store i64 %223, i64* %6, align 8
  br label %246

; <label>:224:                                    ; preds = %185
  %225 = load i64, i64* %6, align 8
  %226 = icmp ugt i64 %225, 255
  br i1 %226, label %227, label %228

; <label>:227:                                    ; preds = %224
  store i32 0, i32* %3, align 4
  br label %256

; <label>:228:                                    ; preds = %224
  %229 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = shl i32 %231, 24
  %233 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = shl i32 %235, 16
  %237 = or i32 %232, %236
  %238 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 2
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = shl i32 %240, 8
  %242 = or i32 %237, %241
  %243 = sext i32 %242 to i64
  %244 = load i64, i64* %6, align 8
  %245 = or i64 %244, %243
  store i64 %245, i64* %6, align 8
  br label %246

; <label>:246:                                    ; preds = %228, %211, %199, %194, %185
  %247 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %248 = icmp ne %struct.in_addr* %247, null
  br i1 %248, label %249, label %255

; <label>:249:                                    ; preds = %246
  %250 = load i64, i64* %6, align 8
  %251 = trunc i64 %250 to i32
  %252 = call i32 @htonl(i32 %251) #12
  %253 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %254 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %253, i32 0, i32 0
  store i32 %252, i32* %254, align 4
  br label %255

; <label>:255:                                    ; preds = %249, %246
  store i32 1, i32* %3, align 4
  br label %256

; <label>:256:                                    ; preds = %255, %227, %210, %198, %184, %180, %149, %77, %27
  %257 = load i32, i32* %3, align 4
  ret i32 %257
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__inet_ntop(i32, i8*, i8*, i64) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %10 = load i32, i32* %6, align 4
  switch i32 %10, label %21 [
    i32 2, label %11
    i32 10, label %16
  ]

; <label>:11:                                     ; preds = %4
  %12 = load i8*, i8** %7, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = call i8* @inet_ntop4(i8* %12, i8* %13, i64 %14)
  store i8* %15, i8** %5, align 8
  br label %23

; <label>:16:                                     ; preds = %4
  %17 = load i8*, i8** %7, align 8
  %18 = load i8*, i8** %8, align 8
  %19 = load i64, i64* %9, align 8
  %20 = call i8* @inet_ntop6(i8* %17, i8* %18, i64 %19)
  store i8* %20, i8** %5, align 8
  br label %23

; <label>:21:                                     ; preds = %4
  %22 = call i32* @__errno_location() #12
  store i32 97, i32* %22, align 4
  store i8* null, i8** %5, align 8
  br label %23

; <label>:23:                                     ; preds = %21, %16, %11
  %24 = load i8*, i8** %5, align 8
  ret i8* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @inet_ntop4(i8*, i8*, i64) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [16 x i8], align 16
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0
  %10 = load i8*, i8** %5, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = load i8*, i8** %5, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = load i8*, i8** %5, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8*, i8** %5, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = call i32 (i8*, i8*, ...) @sprintf(i8* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @inet_ntop4.fmt, i32 0, i32 0), i32 %13, i32 %17, i32 %21, i32 %25) #9
  %27 = sext i32 %26 to i64
  %28 = load i64, i64* %7, align 8
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %3
  %31 = call i32* @__errno_location() #12
  store i32 28, i32* %31, align 4
  store i8* null, i8** %4, align 8
  br label %37

; <label>:32:                                     ; preds = %3
  %33 = load i8*, i8** %6, align 8
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0
  %35 = call i8* @strcpy(i8* %33, i8* %34) #9
  %36 = load i8*, i8** %6, align 8
  store i8* %36, i8** %4, align 8
  br label %37

; <label>:37:                                     ; preds = %32, %30
  %38 = load i8*, i8** %4, align 8
  ret i8* %38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @inet_ntop6(i8*, i8*, i64) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [46 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca %struct._ns_flagdata, align 4
  %11 = alloca %struct._ns_flagdata, align 4
  %12 = alloca [8 x i32], align 16
  %13 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i32 0, i32 0
  %15 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 32, i1 false)
  store i32 0, i32* %13, align 4
  br label %16

; <label>:16:                                     ; preds = %37, %3
  %17 = load i32, i32* %13, align 4
  %18 = icmp slt i32 %17, 16
  br i1 %18, label %19, label %40

; <label>:19:                                     ; preds = %16
  %20 = load i8*, i8** %5, align 8
  %21 = load i32, i32* %13, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %20, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = load i32, i32* %13, align 4
  %27 = srem i32 %26, 2
  %28 = sub nsw i32 1, %27
  %29 = shl i32 %28, 3
  %30 = shl i32 %25, %29
  %31 = load i32, i32* %13, align 4
  %32 = sdiv i32 %31, 2
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, %30
  store i32 %36, i32* %34, align 4
  br label %37

; <label>:37:                                     ; preds = %19
  %38 = load i32, i32* %13, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %13, align 4
  br label %16

; <label>:40:                                     ; preds = %16
  %41 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  store i32 -1, i32* %41, align 4
  %42 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 0
  store i32 -1, i32* %42, align 4
  store i32 0, i32* %13, align 4
  br label %43

; <label>:43:                                     ; preds = %86, %40
  %44 = load i32, i32* %13, align 4
  %45 = icmp slt i32 %44, 8
  br i1 %45, label %46, label %89

; <label>:46:                                     ; preds = %43
  %47 = load i32, i32* %13, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

; <label>:52:                                     ; preds = %46
  %53 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %60

; <label>:56:                                     ; preds = %52
  %57 = load i32, i32* %13, align 4
  %58 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 0
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 1
  store i32 1, i32* %59, align 4
  br label %64

; <label>:60:                                     ; preds = %52
  %61 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %61, align 4
  br label %64

; <label>:64:                                     ; preds = %60, %56
  br label %85

; <label>:65:                                     ; preds = %46
  %66 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, -1
  br i1 %68, label %69, label %84

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %79, label %73

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %75, %77
  br i1 %78, label %79, label %82

; <label>:79:                                     ; preds = %73, %69
  %80 = bitcast %struct._ns_flagdata* %10 to i8*
  %81 = bitcast %struct._ns_flagdata* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 8, i1 false)
  br label %82

; <label>:82:                                     ; preds = %79, %73
  %83 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 0
  store i32 -1, i32* %83, align 4
  br label %84

; <label>:84:                                     ; preds = %82, %65
  br label %85

; <label>:85:                                     ; preds = %84, %64
  br label %86

; <label>:86:                                     ; preds = %85
  %87 = load i32, i32* %13, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %13, align 4
  br label %43

; <label>:89:                                     ; preds = %43
  %90 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp ne i32 %91, -1
  br i1 %92, label %93, label %107

; <label>:93:                                     ; preds = %89
  %94 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %103, label %97

; <label>:97:                                     ; preds = %93
  %98 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %11, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %99, %101
  br i1 %102, label %103, label %106

; <label>:103:                                    ; preds = %97, %93
  %104 = bitcast %struct._ns_flagdata* %10 to i8*
  %105 = bitcast %struct._ns_flagdata* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 8, i1 false)
  br label %106

; <label>:106:                                    ; preds = %103, %97
  br label %107

; <label>:107:                                    ; preds = %106, %89
  %108 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp ne i32 %109, -1
  br i1 %110, label %111, label %117

; <label>:111:                                    ; preds = %107
  %112 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp slt i32 %113, 2
  br i1 %114, label %115, label %117

; <label>:115:                                    ; preds = %111
  %116 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  store i32 -1, i32* %116, align 4
  br label %117

; <label>:117:                                    ; preds = %115, %111, %107
  %118 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0
  store i8* %118, i8** %9, align 8
  store i32 0, i32* %13, align 4
  br label %119

; <label>:119:                                    ; preds = %201, %117
  %120 = load i32, i32* %13, align 4
  %121 = icmp slt i32 %120, 8
  br i1 %121, label %122, label %204

; <label>:122:                                    ; preds = %119
  %123 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp ne i32 %124, -1
  br i1 %125, label %126, label %148

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* %13, align 4
  %128 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp sge i32 %127, %129
  br i1 %130, label %131, label %148

; <label>:131:                                    ; preds = %126
  %132 = load i32, i32* %13, align 4
  %133 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = add nsw i32 %134, %136
  %138 = icmp slt i32 %132, %137
  br i1 %138, label %139, label %148

; <label>:139:                                    ; preds = %131
  %140 = load i32, i32* %13, align 4
  %141 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %144, label %147

; <label>:144:                                    ; preds = %139
  %145 = load i8*, i8** %9, align 8
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %9, align 8
  store i8 58, i8* %145, align 1
  br label %147

; <label>:147:                                    ; preds = %144, %139
  br label %201

; <label>:148:                                    ; preds = %131, %126, %122
  %149 = load i32, i32* %13, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %154

; <label>:151:                                    ; preds = %148
  %152 = load i8*, i8** %9, align 8
  %153 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %153, i8** %9, align 8
  store i8 58, i8* %152, align 1
  br label %154

; <label>:154:                                    ; preds = %151, %148
  %155 = load i32, i32* %13, align 4
  %156 = icmp eq i32 %155, 6
  br i1 %156, label %157, label %191

; <label>:157:                                    ; preds = %154
  %158 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %191

; <label>:161:                                    ; preds = %157
  %162 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 6
  br i1 %164, label %173, label %165

; <label>:165:                                    ; preds = %161
  %166 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 5
  br i1 %168, label %169, label %191

; <label>:169:                                    ; preds = %165
  %170 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 5
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 65535
  br i1 %172, label %173, label %191

; <label>:173:                                    ; preds = %169, %161
  %174 = load i8*, i8** %5, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 12
  %176 = load i8*, i8** %9, align 8
  %177 = load i8*, i8** %9, align 8
  %178 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0
  %179 = ptrtoint i8* %177 to i64
  %180 = ptrtoint i8* %178 to i64
  %181 = sub i64 %179, %180
  %182 = sub i64 46, %181
  %183 = call i8* @inet_ntop4(i8* %175, i8* %176, i64 %182)
  %184 = icmp ne i8* %183, null
  br i1 %184, label %186, label %185

; <label>:185:                                    ; preds = %173
  store i8* null, i8** %4, align 8
  br label %235

; <label>:186:                                    ; preds = %173
  %187 = load i8*, i8** %9, align 8
  %188 = call i64 @strlen(i8* %187) #11
  %189 = load i8*, i8** %9, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 %188
  store i8* %190, i8** %9, align 8
  br label %204

; <label>:191:                                    ; preds = %169, %165, %157, %154
  %192 = load i8*, i8** %9, align 8
  %193 = load i32, i32* %13, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = call i32 (i8*, i8*, ...) @sprintf(i8* %192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.466, i32 0, i32 0), i32 %196) #9
  %198 = sext i32 %197 to i64
  %199 = load i8*, i8** %9, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 %198
  store i8* %200, i8** %9, align 8
  br label %201

; <label>:201:                                    ; preds = %191, %147
  %202 = load i32, i32* %13, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %13, align 4
  br label %119

; <label>:204:                                    ; preds = %186, %119
  %205 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp ne i32 %206, -1
  br i1 %207, label %208, label %218

; <label>:208:                                    ; preds = %204
  %209 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %struct._ns_flagdata, %struct._ns_flagdata* %10, i32 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = add nsw i32 %210, %212
  %214 = icmp eq i32 %213, 8
  br i1 %214, label %215, label %218

; <label>:215:                                    ; preds = %208
  %216 = load i8*, i8** %9, align 8
  %217 = getelementptr inbounds i8, i8* %216, i32 1
  store i8* %217, i8** %9, align 8
  store i8 58, i8* %216, align 1
  br label %218

; <label>:218:                                    ; preds = %215, %208, %204
  %219 = load i8*, i8** %9, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 1
  store i8* %220, i8** %9, align 8
  store i8 0, i8* %219, align 1
  %221 = load i8*, i8** %9, align 8
  %222 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0
  %223 = ptrtoint i8* %221 to i64
  %224 = ptrtoint i8* %222 to i64
  %225 = sub i64 %223, %224
  %226 = load i64, i64* %7, align 8
  %227 = icmp ugt i64 %225, %226
  br i1 %227, label %228, label %230

; <label>:228:                                    ; preds = %218
  %229 = call i32* @__errno_location() #12
  store i32 28, i32* %229, align 4
  store i8* null, i8** %4, align 8
  br label %235

; <label>:230:                                    ; preds = %218
  %231 = load i8*, i8** %6, align 8
  %232 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0
  %233 = call i8* @strcpy(i8* %231, i8* %232) #9
  %234 = load i8*, i8** %6, align 8
  store i8* %234, i8** %4, align 8
  br label %235

; <label>:235:                                    ; preds = %230, %228, %185
  %236 = load i8*, i8** %4, align 8
  ret i8* %236
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @__inet_ntoa(i32) #0 {
  %2 = alloca %struct.in_addr, align 4
  %3 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %2, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = call i8* @strcpy(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__inet_ntoa.ret, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.469, i32 0, i32 0)) #9
  %5 = bitcast %struct.in_addr* %2 to i8*
  %6 = call i8* @__inet_ntop(i32 2, i8* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__inet_ntoa.ret, i32 0, i32 0), i64 18)
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__inet_ntoa.ret, i32 0, i32 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_skiprr(i8*, i8*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %10, align 8
  br label %15

; <label>:15:                                     ; preds = %69, %4
  %16 = load i32, i32* %9, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %72

; <label>:18:                                     ; preds = %15
  %19 = load i8*, i8** %6, align 8
  %20 = load i8*, i8** %7, align 8
  %21 = call i32 @__dn_skipname(i8* %19, i8* %20)
  store i32 %21, i32* %11, align 4
  %22 = load i32, i32* %11, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %18
  br label %84

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* %11, align 4
  %27 = add nsw i32 %26, 2
  %28 = add nsw i32 %27, 2
  %29 = load i8*, i8** %6, align 8
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  store i8* %31, i8** %6, align 8
  %32 = load i32, i32* %8, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %68

; <label>:34:                                     ; preds = %25
  %35 = load i8*, i8** %6, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  %37 = load i8*, i8** %7, align 8
  %38 = icmp ugt i8* %36, %37
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %34
  br label %84

; <label>:40:                                     ; preds = %34
  %41 = load i8*, i8** %6, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 4
  store i8* %42, i8** %6, align 8
  %43 = load i8*, i8** %6, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 2
  %45 = load i8*, i8** %7, align 8
  %46 = icmp ugt i8* %44, %45
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %40
  br label %84

; <label>:48:                                     ; preds = %40
  %49 = load i8*, i8** %6, align 8
  store i8* %49, i8** %13, align 8
  %50 = load i8*, i8** %13, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = zext i16 %53 to i32
  %55 = shl i32 %54, 8
  %56 = load i8*, i8** %13, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = zext i16 %59 to i32
  %61 = or i32 %55, %60
  store i32 %61, i32* %12, align 4
  %62 = load i8*, i8** %6, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  store i8* %63, i8** %6, align 8
  %64 = load i32, i32* %12, align 4
  %65 = load i8*, i8** %6, align 8
  %66 = sext i32 %64 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  store i8* %67, i8** %6, align 8
  br label %68

; <label>:68:                                     ; preds = %48, %25
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* %9, align 4
  %71 = add nsw i32 %70, -1
  store i32 %71, i32* %9, align 4
  br label %15

; <label>:72:                                     ; preds = %15
  %73 = load i8*, i8** %6, align 8
  %74 = load i8*, i8** %7, align 8
  %75 = icmp ugt i8* %73, %74
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %72
  br label %84

; <label>:77:                                     ; preds = %72
  %78 = load i8*, i8** %6, align 8
  %79 = load i8*, i8** %10, align 8
  %80 = ptrtoint i8* %78 to i64
  %81 = ptrtoint i8* %79 to i64
  %82 = sub i64 %80, %81
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %5, align 4
  br label %86

; <label>:84:                                     ; preds = %76, %47, %39, %24
  %85 = call i32* @__errno_location() #12
  store i32 90, i32* %85, align 4
  store i32 -1, i32* %5, align 4
  br label %86

; <label>:86:                                     ; preds = %84, %77
  %87 = load i32, i32* %5, align 4
  ret i32 %87
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_initparse(i8*, i32, %struct.__ns_msg*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.__ns_msg*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.__ns_msg* %2, %struct.__ns_msg** %7, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = load i32, i32* %6, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  store i8* %17, i8** %8, align 8
  %18 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %19 = bitcast %struct.__ns_msg* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 94, i64 80, i1 false)
  %20 = load i8*, i8** %5, align 8
  %21 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %22 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %21, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = load i8*, i8** %8, align 8
  %24 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %25 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %24, i32 0, i32 1
  store i8* %23, i8** %25, align 8
  %26 = load i8*, i8** %5, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  %28 = load i8*, i8** %8, align 8
  %29 = icmp ugt i8* %27, %28
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %3
  br label %169

; <label>:31:                                     ; preds = %3
  %32 = load i8*, i8** %5, align 8
  store i8* %32, i8** %10, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = zext i16 %36 to i32
  %38 = shl i32 %37, 8
  %39 = load i8*, i8** %10, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  %43 = zext i16 %42 to i32
  %44 = or i32 %38, %43
  %45 = trunc i32 %44 to i16
  %46 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %47 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %46, i32 0, i32 2
  store i16 %45, i16* %47, align 8
  %48 = load i8*, i8** %5, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 2
  store i8* %49, i8** %5, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 2
  %52 = load i8*, i8** %8, align 8
  %53 = icmp ugt i8* %51, %52
  br i1 %53, label %54, label %55

; <label>:54:                                     ; preds = %31
  br label %169

; <label>:55:                                     ; preds = %31
  %56 = load i8*, i8** %5, align 8
  store i8* %56, i8** %11, align 8
  %57 = load i8*, i8** %11, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = zext i16 %60 to i32
  %62 = shl i32 %61, 8
  %63 = load i8*, i8** %11, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = zext i16 %66 to i32
  %68 = or i32 %62, %67
  %69 = trunc i32 %68 to i16
  %70 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %71 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %70, i32 0, i32 3
  store i16 %69, i16* %71, align 2
  %72 = load i8*, i8** %5, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 2
  store i8* %73, i8** %5, align 8
  store i32 0, i32* %9, align 4
  br label %74

; <label>:74:                                     ; preds = %105, %55
  %75 = load i32, i32* %9, align 4
  %76 = icmp slt i32 %75, 4
  br i1 %76, label %77, label %108

; <label>:77:                                     ; preds = %74
  %78 = load i8*, i8** %5, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 2
  %80 = load i8*, i8** %8, align 8
  %81 = icmp ugt i8* %79, %80
  br i1 %81, label %82, label %83

; <label>:82:                                     ; preds = %77
  br label %169

; <label>:83:                                     ; preds = %77
  %84 = load i8*, i8** %5, align 8
  store i8* %84, i8** %12, align 8
  %85 = load i8*, i8** %12, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 0
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i16
  %89 = zext i16 %88 to i32
  %90 = shl i32 %89, 8
  %91 = load i8*, i8** %12, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = zext i16 %94 to i32
  %96 = or i32 %90, %95
  %97 = trunc i32 %96 to i16
  %98 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %99 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %98, i32 0, i32 4
  %100 = load i32, i32* %9, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [4 x i16], [4 x i16]* %99, i64 0, i64 %101
  store i16 %97, i16* %102, align 2
  %103 = load i8*, i8** %5, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 2
  store i8* %104, i8** %5, align 8
  br label %105

; <label>:105:                                    ; preds = %83
  %106 = load i32, i32* %9, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %9, align 4
  br label %74

; <label>:108:                                    ; preds = %74
  store i32 0, i32* %9, align 4
  br label %109

; <label>:109:                                    ; preds = %154, %108
  %110 = load i32, i32* %9, align 4
  %111 = icmp slt i32 %110, 4
  br i1 %111, label %112, label %157

; <label>:112:                                    ; preds = %109
  %113 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %114 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %113, i32 0, i32 4
  %115 = load i32, i32* %9, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [4 x i16], [4 x i16]* %114, i64 0, i64 %116
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %127

; <label>:121:                                    ; preds = %112
  %122 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %123 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %122, i32 0, i32 5
  %124 = load i32, i32* %9, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [4 x i8*], [4 x i8*]* %123, i64 0, i64 %125
  store i8* null, i8** %126, align 8
  br label %153

; <label>:127:                                    ; preds = %112
  %128 = load i8*, i8** %5, align 8
  %129 = load i8*, i8** %8, align 8
  %130 = load i32, i32* %9, align 4
  %131 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %132 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %131, i32 0, i32 4
  %133 = load i32, i32* %9, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [4 x i16], [4 x i16]* %132, i64 0, i64 %134
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = call i32 @__ns_skiprr(i8* %128, i8* %129, i32 %130, i32 %137)
  store i32 %138, i32* %13, align 4
  %139 = load i32, i32* %13, align 4
  %140 = icmp slt i32 %139, 0
  br i1 %140, label %141, label %142

; <label>:141:                                    ; preds = %127
  store i32 -1, i32* %4, align 4
  br label %171

; <label>:142:                                    ; preds = %127
  %143 = load i8*, i8** %5, align 8
  %144 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %145 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %144, i32 0, i32 5
  %146 = load i32, i32* %9, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [4 x i8*], [4 x i8*]* %145, i64 0, i64 %147
  store i8* %143, i8** %148, align 8
  %149 = load i32, i32* %13, align 4
  %150 = load i8*, i8** %5, align 8
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  store i8* %152, i8** %5, align 8
  br label %153

; <label>:153:                                    ; preds = %142, %121
  br label %154

; <label>:154:                                    ; preds = %153
  %155 = load i32, i32* %9, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %9, align 4
  br label %109

; <label>:157:                                    ; preds = %109
  %158 = load i8*, i8** %5, align 8
  %159 = load i8*, i8** %8, align 8
  %160 = icmp ne i8* %158, %159
  br i1 %160, label %161, label %162

; <label>:161:                                    ; preds = %157
  br label %169

; <label>:162:                                    ; preds = %157
  %163 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %164 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %163, i32 0, i32 6
  store i32 4, i32* %164, align 8
  %165 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %166 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %165, i32 0, i32 7
  store i32 -1, i32* %166, align 4
  %167 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %168 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %167, i32 0, i32 8
  store i8* null, i8** %168, align 8
  store i32 0, i32* %4, align 4
  br label %171

; <label>:169:                                    ; preds = %161, %82, %54, %30
  %170 = call i32* @__errno_location() #12
  store i32 90, i32* %170, align 4
  store i32 -1, i32* %4, align 4
  br label %171

; <label>:171:                                    ; preds = %169, %162, %141
  %172 = load i32, i32* %4, align 4
  ret i32 %172
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_parserr(%struct.__ns_msg*, i32, i32, %struct.__ns_rr*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.__ns_msg*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.__ns_rr*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  store %struct.__ns_msg* %0, %struct.__ns_msg** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store %struct.__ns_rr* %3, %struct.__ns_rr** %9, align 8
  %15 = load i32, i32* %7, align 4
  %16 = icmp ult i32 %15, 0
  br i1 %16, label %20, label %17

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* %7, align 4
  %19 = icmp uge i32 %18, 4
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %17, %4
  br label %310

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* %7, align 4
  %23 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %24 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %23, i32 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %22, %25
  br i1 %26, label %27, label %41

; <label>:27:                                     ; preds = %21
  %28 = load i32, i32* %7, align 4
  %29 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %30 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %29, i32 0, i32 6
  store i32 %28, i32* %30, align 8
  %31 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %32 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %31, i32 0, i32 7
  store i32 0, i32* %32, align 4
  %33 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %34 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %33, i32 0, i32 5
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [4 x i8*], [4 x i8*]* %34, i64 0, i64 %36
  %38 = load i8*, i8** %37, align 8
  %39 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %40 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %39, i32 0, i32 8
  store i8* %38, i8** %40, align 8
  br label %41

; <label>:41:                                     ; preds = %27, %21
  %42 = load i32, i32* %8, align 4
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %48

; <label>:44:                                     ; preds = %41
  %45 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %46 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %45, i32 0, i32 7
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %8, align 4
  br label %48

; <label>:48:                                     ; preds = %44, %41
  %49 = load i32, i32* %8, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %61, label %51

; <label>:51:                                     ; preds = %48
  %52 = load i32, i32* %8, align 4
  %53 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %54 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %53, i32 0, i32 4
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [4 x i16], [4 x i16]* %54, i64 0, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = icmp sge i32 %52, %59
  br i1 %60, label %61, label %62

; <label>:61:                                     ; preds = %51, %48
  br label %310

; <label>:62:                                     ; preds = %51
  %63 = load i32, i32* %8, align 4
  %64 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %65 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %63, %66
  br i1 %67, label %68, label %79

; <label>:68:                                     ; preds = %62
  %69 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %70 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %69, i32 0, i32 7
  store i32 0, i32* %70, align 4
  %71 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %72 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %71, i32 0, i32 5
  %73 = load i32, i32* %7, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [4 x i8*], [4 x i8*]* %72, i64 0, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %78 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %77, i32 0, i32 8
  store i8* %76, i8** %78, align 8
  br label %79

; <label>:79:                                     ; preds = %68, %62
  %80 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %81 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %84 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %83, i32 0, i32 1
  %85 = load i8*, i8** %84, align 8
  %86 = load i32, i32* %7, align 4
  %87 = load i32, i32* %8, align 4
  %88 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %89 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %88, i32 0, i32 7
  %90 = load i32, i32* %89, align 4
  %91 = sub nsw i32 %87, %90
  %92 = call i32 @__ns_skiprr(i8* %82, i8* %85, i32 %86, i32 %91)
  store i32 %92, i32* %10, align 4
  %93 = load i32, i32* %10, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %95, label %96

; <label>:95:                                     ; preds = %79
  store i32 -1, i32* %5, align 4
  br label %314

; <label>:96:                                     ; preds = %79
  %97 = load i32, i32* %10, align 4
  %98 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %99 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %98, i32 0, i32 8
  %100 = load i8*, i8** %99, align 8
  %101 = sext i32 %97 to i64
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  store i8* %102, i8** %99, align 8
  %103 = load i32, i32* %8, align 4
  %104 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %105 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %104, i32 0, i32 7
  store i32 %103, i32* %105, align 4
  %106 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %107 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %106, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %110 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %109, i32 0, i32 1
  %111 = load i8*, i8** %110, align 8
  %112 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %113 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %112, i32 0, i32 8
  %114 = load i8*, i8** %113, align 8
  %115 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %116 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %115, i32 0, i32 0
  %117 = getelementptr inbounds [1025 x i8], [1025 x i8]* %116, i32 0, i32 0
  %118 = call i32 @__dn_expand(i8* %108, i8* %111, i8* %114, i8* %117, i32 1025)
  store i32 %118, i32* %10, align 4
  %119 = load i32, i32* %10, align 4
  %120 = icmp slt i32 %119, 0
  br i1 %120, label %121, label %122

; <label>:121:                                    ; preds = %96
  store i32 -1, i32* %5, align 4
  br label %314

; <label>:122:                                    ; preds = %96
  %123 = load i32, i32* %10, align 4
  %124 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %125 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %124, i32 0, i32 8
  %126 = load i8*, i8** %125, align 8
  %127 = sext i32 %123 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  store i8* %128, i8** %125, align 8
  %129 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %130 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %129, i32 0, i32 8
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 2
  %133 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %134 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %133, i32 0, i32 1
  %135 = load i8*, i8** %134, align 8
  %136 = icmp ugt i8* %132, %135
  br i1 %136, label %137, label %138

; <label>:137:                                    ; preds = %122
  br label %312

; <label>:138:                                    ; preds = %122
  %139 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %140 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %139, i32 0, i32 8
  %141 = load i8*, i8** %140, align 8
  store i8* %141, i8** %11, align 8
  %142 = load i8*, i8** %11, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 0
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  %146 = zext i16 %145 to i32
  %147 = shl i32 %146, 8
  %148 = load i8*, i8** %11, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 1
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i16
  %152 = zext i16 %151 to i32
  %153 = or i32 %147, %152
  %154 = trunc i32 %153 to i16
  %155 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %156 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %155, i32 0, i32 1
  store i16 %154, i16* %156, align 2
  %157 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %158 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %157, i32 0, i32 8
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 2
  store i8* %160, i8** %158, align 8
  %161 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %162 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %161, i32 0, i32 8
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 2
  %165 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %166 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %165, i32 0, i32 1
  %167 = load i8*, i8** %166, align 8
  %168 = icmp ugt i8* %164, %167
  br i1 %168, label %169, label %170

; <label>:169:                                    ; preds = %138
  br label %312

; <label>:170:                                    ; preds = %138
  %171 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %172 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %171, i32 0, i32 8
  %173 = load i8*, i8** %172, align 8
  store i8* %173, i8** %12, align 8
  %174 = load i8*, i8** %12, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 0
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  %178 = zext i16 %177 to i32
  %179 = shl i32 %178, 8
  %180 = load i8*, i8** %12, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i16
  %184 = zext i16 %183 to i32
  %185 = or i32 %179, %184
  %186 = trunc i32 %185 to i16
  %187 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %188 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %187, i32 0, i32 2
  store i16 %186, i16* %188, align 4
  %189 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %190 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %189, i32 0, i32 8
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 2
  store i8* %192, i8** %190, align 8
  %193 = load i32, i32* %7, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %202

; <label>:195:                                    ; preds = %170
  %196 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %197 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %196, i32 0, i32 3
  store i32 0, i32* %197, align 8
  %198 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %199 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %198, i32 0, i32 4
  store i16 0, i16* %199, align 4
  %200 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %201 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %200, i32 0, i32 5
  store i8* null, i8** %201, align 8
  br label %305

; <label>:202:                                    ; preds = %170
  %203 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %204 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %203, i32 0, i32 8
  %205 = load i8*, i8** %204, align 8
  %206 = getelementptr inbounds i8, i8* %205, i64 4
  %207 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %208 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %207, i32 0, i32 1
  %209 = load i8*, i8** %208, align 8
  %210 = icmp ugt i8* %206, %209
  br i1 %210, label %211, label %212

; <label>:211:                                    ; preds = %202
  br label %312

; <label>:212:                                    ; preds = %202
  %213 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %214 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %213, i32 0, i32 8
  %215 = load i8*, i8** %214, align 8
  store i8* %215, i8** %13, align 8
  %216 = load i8*, i8** %13, align 8
  %217 = getelementptr inbounds i8, i8* %216, i64 0
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = shl i32 %219, 24
  %221 = load i8*, i8** %13, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = shl i32 %224, 16
  %226 = or i32 %220, %225
  %227 = load i8*, i8** %13, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 2
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = shl i32 %230, 8
  %232 = or i32 %226, %231
  %233 = load i8*, i8** %13, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 3
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = or i32 %232, %236
  %238 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %239 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %238, i32 0, i32 3
  store i32 %237, i32* %239, align 8
  %240 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %241 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %240, i32 0, i32 8
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 4
  store i8* %243, i8** %241, align 8
  %244 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %245 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %244, i32 0, i32 8
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds i8, i8* %246, i64 2
  %248 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %249 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %248, i32 0, i32 1
  %250 = load i8*, i8** %249, align 8
  %251 = icmp ugt i8* %247, %250
  br i1 %251, label %252, label %253

; <label>:252:                                    ; preds = %212
  br label %312

; <label>:253:                                    ; preds = %212
  %254 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %255 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %254, i32 0, i32 8
  %256 = load i8*, i8** %255, align 8
  store i8* %256, i8** %14, align 8
  %257 = load i8*, i8** %14, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 0
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i16
  %261 = zext i16 %260 to i32
  %262 = shl i32 %261, 8
  %263 = load i8*, i8** %14, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 1
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i16
  %267 = zext i16 %266 to i32
  %268 = or i32 %262, %267
  %269 = trunc i32 %268 to i16
  %270 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %271 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %270, i32 0, i32 4
  store i16 %269, i16* %271, align 4
  %272 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %273 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %272, i32 0, i32 8
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 2
  store i8* %275, i8** %273, align 8
  %276 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %277 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %276, i32 0, i32 8
  %278 = load i8*, i8** %277, align 8
  %279 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %280 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %279, i32 0, i32 4
  %281 = load i16, i16* %280, align 4
  %282 = zext i16 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %278, i64 %283
  %285 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %286 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %285, i32 0, i32 1
  %287 = load i8*, i8** %286, align 8
  %288 = icmp ugt i8* %284, %287
  br i1 %288, label %289, label %290

; <label>:289:                                    ; preds = %253
  br label %312

; <label>:290:                                    ; preds = %253
  %291 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %292 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %291, i32 0, i32 8
  %293 = load i8*, i8** %292, align 8
  %294 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %295 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %294, i32 0, i32 5
  store i8* %293, i8** %295, align 8
  %296 = load %struct.__ns_rr*, %struct.__ns_rr** %9, align 8
  %297 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %296, i32 0, i32 4
  %298 = load i16, i16* %297, align 4
  %299 = zext i16 %298 to i32
  %300 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %301 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %300, i32 0, i32 8
  %302 = load i8*, i8** %301, align 8
  %303 = sext i32 %299 to i64
  %304 = getelementptr inbounds i8, i8* %302, i64 %303
  store i8* %304, i8** %301, align 8
  br label %305

; <label>:305:                                    ; preds = %290, %195
  %306 = load %struct.__ns_msg*, %struct.__ns_msg** %6, align 8
  %307 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %306, i32 0, i32 7
  %308 = load i32, i32* %307, align 4
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* %307, align 4
  store i32 0, i32* %5, align 4
  br label %314

; <label>:310:                                    ; preds = %61, %20
  %311 = call i32* @__errno_location() #12
  store i32 19, i32* %311, align 4
  store i32 -1, i32* %5, align 4
  br label %314

; <label>:312:                                    ; preds = %289, %252, %211, %169, %137
  %313 = call i32* @__errno_location() #12
  store i32 90, i32* %313, align 4
  store i32 -1, i32* %5, align 4
  br label %314

; <label>:314:                                    ; preds = %312, %310, %305, %121, %95
  %315 = load i32, i32* %5, align 4
  ret i32 %315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_sprintrr(%struct.__ns_msg*, %struct.__ns_rr*, i8*, i8*, i8*, i64) #0 {
  %7 = alloca %struct.__ns_msg*, align 8
  %8 = alloca %struct.__ns_rr*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store %struct.__ns_msg* %0, %struct.__ns_msg** %7, align 8
  store %struct.__ns_rr* %1, %struct.__ns_rr** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  store i64 %5, i64* %12, align 8
  %14 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %15 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %19 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = load %struct.__ns_msg*, %struct.__ns_msg** %7, align 8
  %22 = getelementptr inbounds %struct.__ns_msg, %struct.__ns_msg* %21, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %20 to i64
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  %27 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %28 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %27, i32 0, i32 0
  %29 = getelementptr inbounds [1025 x i8], [1025 x i8]* %28, i64 0, i64 0
  %30 = load i8, i8* %29, align 8
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %6
  %34 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %35 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %34, i32 0, i32 0
  %36 = getelementptr inbounds [1025 x i8], [1025 x i8]* %35, i32 0, i32 0
  br label %38

; <label>:37:                                     ; preds = %6
  br label %38

; <label>:38:                                     ; preds = %37, %33
  %39 = phi i8* [ %36, %33 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.478, i32 0, i32 0), %37 ]
  %40 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %41 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %40, i32 0, i32 2
  %42 = load i16, i16* %41, align 4
  %43 = zext i16 %42 to i32
  %44 = add nsw i32 %43, 0
  %45 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %46 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %45, i32 0, i32 1
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nsw i32 %48, 0
  %50 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %51 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %50, i32 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = add i32 %52, 0
  %54 = zext i32 %53 to i64
  %55 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %56 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %55, i32 0, i32 5
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = load %struct.__ns_rr*, %struct.__ns_rr** %8, align 8
  %60 = getelementptr inbounds %struct.__ns_rr, %struct.__ns_rr* %59, i32 0, i32 4
  %61 = load i16, i16* %60, align 4
  %62 = zext i16 %61 to i32
  %63 = add nsw i32 %62, 0
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %9, align 8
  %66 = load i8*, i8** %10, align 8
  %67 = load i8*, i8** %11, align 8
  %68 = load i64, i64* %12, align 8
  store volatile i8 1, i8* @specialMalloc, align 1
  %69 = call i32 @__ns_sprintrrf(i8* %17, i64 %26, i8* %39, i32 %44, i32 %49, i64 %54, i8* %58, i64 %64, i8* %65, i8* %66, i8* %67, i64 %68)
  store volatile i8 0, i8* @specialMalloc, align 1
  store i32 %69, i32* %13, align 4
  %70 = load i32, i32* %13, align 4
  ret i32 %70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_sprintrrf(i8*, i64, i8*, i32, i32, i64, i8*, i64, i8*, i8*, i8*, i64) #0 {
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca [100 x i8], align 16
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca [765 x i8], align 16
  %37 = alloca [255 x i8], align 16
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca [50 x i8], align 16
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca [50 x i8], align 16
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca [6812 x i8], align 16
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i8*, align 8
  %53 = alloca i32, align 4
  %54 = alloca [6812 x i8], align 16
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i8*, align 8
  %60 = alloca i64, align 8
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca [8192 x i8], align 16
  %70 = alloca i8*, align 8
  %71 = alloca [40 x i8], align 16
  %72 = alloca i8*, align 8
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i8*, align 8
  store i8* %0, i8** %14, align 8
  store i64 %1, i64* %15, align 8
  store i8* %2, i8** %16, align 8
  store i32 %3, i32* %17, align 4
  store i32 %4, i32* %18, align 4
  store i64 %5, i64* %19, align 8
  store i8* %6, i8** %20, align 8
  store i64 %7, i64* %21, align 8
  store i8* %8, i8** %22, align 8
  store i8* %9, i8** %23, align 8
  store i8* %10, i8** %24, align 8
  store i64 %11, i64* %25, align 8
  %77 = load i8*, i8** %24, align 8
  store i8* %77, i8** %26, align 8
  %78 = load i8*, i8** %20, align 8
  %79 = load i64, i64* %21, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  store i8* %80, i8** %27, align 8
  store i32 0, i32* %28, align 4
  %81 = load i8*, i8** %22, align 8
  %82 = icmp ne i8* %81, null
  br i1 %82, label %83, label %95

; <label>:83:                                     ; preds = %12
  %84 = load i8*, i8** %22, align 8
  %85 = load i8*, i8** %16, align 8
  %86 = call i32 @strcasecmp(i8* %84, i8* %85) #11
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

; <label>:88:                                     ; preds = %83
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = call i32 @addstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.481, i32 0, i32 0), i64 3, i8** %24, i64* %25)
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %92, label %93

; <label>:92:                                     ; preds = %89
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:93:                                     ; preds = %89
  br label %94

; <label>:94:                                     ; preds = %93
  br label %163

; <label>:95:                                     ; preds = %83, %12
  %96 = load i8*, i8** %16, align 8
  %97 = load i8*, i8** %23, align 8
  %98 = call i64 @prune_origin(i8* %96, i8* %97)
  %99 = trunc i64 %98 to i32
  store i32 %99, i32* %31, align 4
  %100 = load i32, i32* %31, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %109

; <label>:102:                                    ; preds = %95
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = call i32 @addstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.482, i32 0, i32 0), i64 4, i8** %24, i64* %25)
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %106, label %107

; <label>:106:                                    ; preds = %103
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:107:                                    ; preds = %103
  br label %108

; <label>:108:                                    ; preds = %107
  br label %162

; <label>:109:                                    ; preds = %95
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i8*, i8** %16, align 8
  %112 = load i32, i32* %31, align 4
  %113 = sext i32 %112 to i64
  %114 = call i32 @addstr(i8* %111, i64 %113, i8** %24, i64* %25)
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %117

; <label>:116:                                    ; preds = %110
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:117:                                    ; preds = %110
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = load i8*, i8** %23, align 8
  %120 = icmp ne i8* %119, null
  br i1 %120, label %121, label %134

; <label>:121:                                    ; preds = %118
  %122 = load i8*, i8** %23, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %134

; <label>:126:                                    ; preds = %121
  %127 = load i8*, i8** %16, align 8
  %128 = load i32, i32* %31, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %127, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = sext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %152

; <label>:134:                                    ; preds = %126, %121, %118
  %135 = load i8*, i8** %16, align 8
  %136 = load i32, i32* %31, align 4
  %137 = sub nsw i32 %136, 1
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %135, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = sext i8 %140 to i32
  %142 = icmp ne i32 %141, 46
  br i1 %142, label %143, label %152

; <label>:143:                                    ; preds = %134
  br label %144

; <label>:144:                                    ; preds = %143
  %145 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.478, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %146 = icmp slt i32 %145, 0
  br i1 %146, label %147, label %148

; <label>:147:                                    ; preds = %144
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:148:                                    ; preds = %144
  br label %149

; <label>:149:                                    ; preds = %148
  %150 = load i32, i32* %31, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %31, align 4
  br label %152

; <label>:152:                                    ; preds = %149, %134, %126
  br label %153

; <label>:153:                                    ; preds = %152
  %154 = load i32, i32* %31, align 4
  %155 = sext i32 %154 to i64
  %156 = load i32, i32* %28, align 4
  %157 = call i32 @addtab(i64 %155, i64 24, i32 %156, i8** %24, i64* %25)
  store i32 %157, i32* %28, align 4
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %159, label %160

; <label>:159:                                    ; preds = %153
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:160:                                    ; preds = %153
  br label %161

; <label>:161:                                    ; preds = %160
  br label %162

; <label>:162:                                    ; preds = %161, %108
  br label %163

; <label>:163:                                    ; preds = %162, %94
  br label %164

; <label>:164:                                    ; preds = %163
  %165 = load i64, i64* %19, align 8
  %166 = load i8*, i8** %24, align 8
  %167 = load i64, i64* %25, align 8
  %168 = call i32 @__ns_format_ttl(i64 %165, i8* %166, i64 %167)
  store i32 %168, i32* %32, align 4
  %169 = icmp slt i32 %168, 0
  br i1 %169, label %170, label %171

; <label>:170:                                    ; preds = %164
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:171:                                    ; preds = %164
  br label %172

; <label>:172:                                    ; preds = %171
  %173 = load i32, i32* %32, align 4
  %174 = sext i32 %173 to i64
  call void @addlen(i64 %174, i8** %24, i64* %25)
  %175 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %176 = load i32, i32* %17, align 4
  %177 = call i8* @__p_class(i32 %176)
  %178 = load i32, i32* %18, align 4
  %179 = call i8* @__p_type(i32 %178)
  %180 = call i32 (i8*, i8*, ...) @sprintf(i8* %175, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.483, i32 0, i32 0), i8* %177, i8* %179) #9
  %181 = sext i32 %180 to i64
  %182 = trunc i64 %181 to i32
  store i32 %182, i32* %31, align 4
  br label %183

; <label>:183:                                    ; preds = %172
  %184 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %185 = load i32, i32* %31, align 4
  %186 = sext i32 %185 to i64
  %187 = call i32 @addstr(i8* %184, i64 %186, i8** %24, i64* %25)
  %188 = icmp slt i32 %187, 0
  br i1 %188, label %189, label %190

; <label>:189:                                    ; preds = %183
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:190:                                    ; preds = %183
  br label %191

; <label>:191:                                    ; preds = %190
  br label %192

; <label>:192:                                    ; preds = %191
  %193 = load i32, i32* %32, align 4
  %194 = load i32, i32* %31, align 4
  %195 = add nsw i32 %193, %194
  %196 = sext i32 %195 to i64
  %197 = load i32, i32* %28, align 4
  %198 = call i32 @addtab(i64 %196, i64 16, i32 %197, i8** %24, i64* %25)
  store i32 %198, i32* %28, align 4
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %200, label %201

; <label>:200:                                    ; preds = %192
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:201:                                    ; preds = %192
  br label %202

; <label>:202:                                    ; preds = %201
  %203 = load i32, i32* %18, align 4
  switch i32 %203, label %1432 [
    i32 1, label %204
    i32 5, label %215
    i32 7, label %215
    i32 8, label %215
    i32 9, label %215
    i32 2, label %215
    i32 12, label %215
    i32 13, label %225
    i32 20, label %225
    i32 6, label %264
    i32 15, label %492
    i32 18, label %492
    i32 21, label %492
    i32 26, label %524
    i32 19, label %571
    i32 16, label %588
    i32 22, label %622
    i32 28, label %637
    i32 29, label %648
    i32 35, label %661
    i32 33, label %768
    i32 14, label %810
    i32 17, label %810
    i32 11, label %835
    i32 25, label %922
    i32 24, label %1028
    i32 30, label %1210
    i32 37, label %1265
    i32 250, label %1394
  ]

; <label>:204:                                    ; preds = %202
  %205 = load i64, i64* %21, align 8
  %206 = icmp ne i64 %205, 4
  br i1 %206, label %207, label %208

; <label>:207:                                    ; preds = %204
  br label %1440

; <label>:208:                                    ; preds = %204
  %209 = load i8*, i8** %20, align 8
  %210 = load i8*, i8** %24, align 8
  %211 = load i64, i64* %25, align 8
  %212 = call i8* @__inet_ntop(i32 2, i8* %209, i8* %210, i64 %211)
  %213 = load i8*, i8** %24, align 8
  %214 = call i64 @strlen(i8* %213) #11
  call void @addlen(i64 %214, i8** %24, i64* %25)
  br label %1433

; <label>:215:                                    ; preds = %202, %202, %202, %202, %202, %202
  br label %216

; <label>:216:                                    ; preds = %215
  %217 = load i8*, i8** %14, align 8
  %218 = load i64, i64* %15, align 8
  %219 = load i8*, i8** %23, align 8
  %220 = call i32 @addname(i8* %217, i64 %218, i8** %20, i8* %219, i8** %24, i64* %25)
  %221 = icmp slt i32 %220, 0
  br i1 %221, label %222, label %223

; <label>:222:                                    ; preds = %216
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:223:                                    ; preds = %216
  br label %224

; <label>:224:                                    ; preds = %223
  br label %1433

; <label>:225:                                    ; preds = %202, %202
  br label %226

; <label>:226:                                    ; preds = %225
  %227 = load i8*, i8** %20, align 8
  %228 = load i8*, i8** %27, align 8
  %229 = call i32 @charstr(i8* %227, i8* %228, i8** %24, i64* %25)
  store i32 %229, i32* %31, align 4
  %230 = icmp slt i32 %229, 0
  br i1 %230, label %231, label %232

; <label>:231:                                    ; preds = %226
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:232:                                    ; preds = %226
  br label %233

; <label>:233:                                    ; preds = %232
  %234 = load i32, i32* %31, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

; <label>:236:                                    ; preds = %233
  br label %1440

; <label>:237:                                    ; preds = %233
  %238 = load i32, i32* %31, align 4
  %239 = load i8*, i8** %20, align 8
  %240 = sext i32 %238 to i64
  %241 = getelementptr inbounds i8, i8* %239, i64 %240
  store i8* %241, i8** %20, align 8
  br label %242

; <label>:242:                                    ; preds = %237
  %243 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %244 = icmp slt i32 %243, 0
  br i1 %244, label %245, label %246

; <label>:245:                                    ; preds = %242
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:246:                                    ; preds = %242
  br label %247

; <label>:247:                                    ; preds = %246
  br label %248

; <label>:248:                                    ; preds = %247
  %249 = load i8*, i8** %20, align 8
  %250 = load i8*, i8** %27, align 8
  %251 = call i32 @charstr(i8* %249, i8* %250, i8** %24, i64* %25)
  store i32 %251, i32* %31, align 4
  %252 = icmp slt i32 %251, 0
  br i1 %252, label %253, label %254

; <label>:253:                                    ; preds = %248
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:254:                                    ; preds = %248
  br label %255

; <label>:255:                                    ; preds = %254
  %256 = load i32, i32* %31, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

; <label>:258:                                    ; preds = %255
  br label %1440

; <label>:259:                                    ; preds = %255
  %260 = load i32, i32* %31, align 4
  %261 = load i8*, i8** %20, align 8
  %262 = sext i32 %260 to i64
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  store i8* %263, i8** %20, align 8
  br label %1433

; <label>:264:                                    ; preds = %202
  br label %265

; <label>:265:                                    ; preds = %264
  %266 = load i8*, i8** %14, align 8
  %267 = load i64, i64* %15, align 8
  %268 = load i8*, i8** %23, align 8
  %269 = call i32 @addname(i8* %266, i64 %267, i8** %20, i8* %268, i8** %24, i64* %25)
  %270 = icmp slt i32 %269, 0
  br i1 %270, label %271, label %272

; <label>:271:                                    ; preds = %265
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:272:                                    ; preds = %265
  br label %273

; <label>:273:                                    ; preds = %272
  br label %274

; <label>:274:                                    ; preds = %273
  %275 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %276 = icmp slt i32 %275, 0
  br i1 %276, label %277, label %278

; <label>:277:                                    ; preds = %274
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:278:                                    ; preds = %274
  br label %279

; <label>:279:                                    ; preds = %278
  br label %280

; <label>:280:                                    ; preds = %279
  %281 = load i8*, i8** %14, align 8
  %282 = load i64, i64* %15, align 8
  %283 = load i8*, i8** %23, align 8
  %284 = call i32 @addname(i8* %281, i64 %282, i8** %20, i8* %283, i8** %24, i64* %25)
  %285 = icmp slt i32 %284, 0
  br i1 %285, label %286, label %287

; <label>:286:                                    ; preds = %280
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:287:                                    ; preds = %280
  br label %288

; <label>:288:                                    ; preds = %287
  br label %289

; <label>:289:                                    ; preds = %288
  %290 = call i32 @addstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.485, i32 0, i32 0), i64 3, i8** %24, i64* %25)
  %291 = icmp slt i32 %290, 0
  br i1 %291, label %292, label %293

; <label>:292:                                    ; preds = %289
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:293:                                    ; preds = %289
  br label %294

; <label>:294:                                    ; preds = %293
  store i32 0, i32* %28, align 4
  %295 = load i8*, i8** %27, align 8
  %296 = load i8*, i8** %20, align 8
  %297 = ptrtoint i8* %295 to i64
  %298 = ptrtoint i8* %296 to i64
  %299 = sub i64 %297, %298
  %300 = icmp ne i64 %299, 20
  br i1 %300, label %301, label %302

; <label>:301:                                    ; preds = %294
  br label %1440

; <label>:302:                                    ; preds = %294
  %303 = load i8*, i8** %20, align 8
  %304 = call i64 @__ns_get32(i8* %303)
  store i64 %304, i64* %33, align 8
  %305 = load i8*, i8** %20, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 4
  store i8* %306, i8** %20, align 8
  br label %307

; <label>:307:                                    ; preds = %302
  %308 = call i32 @addstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.486, i32 0, i32 0), i64 5, i8** %24, i64* %25)
  %309 = icmp slt i32 %308, 0
  br i1 %309, label %310, label %311

; <label>:310:                                    ; preds = %307
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:311:                                    ; preds = %307
  br label %312

; <label>:312:                                    ; preds = %311
  %313 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %314 = load i64, i64* %33, align 8
  %315 = call i32 (i8*, i8*, ...) @sprintf(i8* %313, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.487, i32 0, i32 0), i64 %314) #9
  %316 = sext i32 %315 to i64
  %317 = trunc i64 %316 to i32
  store i32 %317, i32* %31, align 4
  br label %318

; <label>:318:                                    ; preds = %312
  %319 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %320 = load i32, i32* %31, align 4
  %321 = sext i32 %320 to i64
  %322 = call i32 @addstr(i8* %319, i64 %321, i8** %24, i64* %25)
  %323 = icmp slt i32 %322, 0
  br i1 %323, label %324, label %325

; <label>:324:                                    ; preds = %318
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:325:                                    ; preds = %318
  br label %326

; <label>:326:                                    ; preds = %325
  br label %327

; <label>:327:                                    ; preds = %326
  %328 = load i32, i32* %31, align 4
  %329 = sext i32 %328 to i64
  %330 = load i32, i32* %28, align 4
  %331 = call i32 @addtab(i64 %329, i64 16, i32 %330, i8** %24, i64* %25)
  store i32 %331, i32* %28, align 4
  %332 = icmp slt i32 %331, 0
  br i1 %332, label %333, label %334

; <label>:333:                                    ; preds = %327
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:334:                                    ; preds = %327
  br label %335

; <label>:335:                                    ; preds = %334
  br label %336

; <label>:336:                                    ; preds = %335
  %337 = call i32 @addstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.488, i32 0, i32 0), i64 9, i8** %24, i64* %25)
  %338 = icmp slt i32 %337, 0
  br i1 %338, label %339, label %340

; <label>:339:                                    ; preds = %336
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:340:                                    ; preds = %336
  br label %341

; <label>:341:                                    ; preds = %340
  store i32 0, i32* %28, align 4
  %342 = load i8*, i8** %20, align 8
  %343 = call i64 @__ns_get32(i8* %342)
  store i64 %343, i64* %33, align 8
  %344 = load i8*, i8** %20, align 8
  %345 = getelementptr inbounds i8, i8* %344, i64 4
  store i8* %345, i8** %20, align 8
  br label %346

; <label>:346:                                    ; preds = %341
  %347 = call i32 @addstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.486, i32 0, i32 0), i64 5, i8** %24, i64* %25)
  %348 = icmp slt i32 %347, 0
  br i1 %348, label %349, label %350

; <label>:349:                                    ; preds = %346
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:350:                                    ; preds = %346
  br label %351

; <label>:351:                                    ; preds = %350
  br label %352

; <label>:352:                                    ; preds = %351
  %353 = load i64, i64* %33, align 8
  %354 = load i8*, i8** %24, align 8
  %355 = load i64, i64* %25, align 8
  %356 = call i32 @__ns_format_ttl(i64 %353, i8* %354, i64 %355)
  store i32 %356, i32* %31, align 4
  %357 = icmp slt i32 %356, 0
  br i1 %357, label %358, label %359

; <label>:358:                                    ; preds = %352
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:359:                                    ; preds = %352
  br label %360

; <label>:360:                                    ; preds = %359
  %361 = load i32, i32* %31, align 4
  %362 = sext i32 %361 to i64
  call void @addlen(i64 %362, i8** %24, i64* %25)
  br label %363

; <label>:363:                                    ; preds = %360
  %364 = load i32, i32* %31, align 4
  %365 = sext i32 %364 to i64
  %366 = load i32, i32* %28, align 4
  %367 = call i32 @addtab(i64 %365, i64 16, i32 %366, i8** %24, i64* %25)
  store i32 %367, i32* %28, align 4
  %368 = icmp slt i32 %367, 0
  br i1 %368, label %369, label %370

; <label>:369:                                    ; preds = %363
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:370:                                    ; preds = %363
  br label %371

; <label>:371:                                    ; preds = %370
  br label %372

; <label>:372:                                    ; preds = %371
  %373 = call i32 @addstr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.489, i32 0, i32 0), i64 10, i8** %24, i64* %25)
  %374 = icmp slt i32 %373, 0
  br i1 %374, label %375, label %376

; <label>:375:                                    ; preds = %372
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:376:                                    ; preds = %372
  br label %377

; <label>:377:                                    ; preds = %376
  store i32 0, i32* %28, align 4
  %378 = load i8*, i8** %20, align 8
  %379 = call i64 @__ns_get32(i8* %378)
  store i64 %379, i64* %33, align 8
  %380 = load i8*, i8** %20, align 8
  %381 = getelementptr inbounds i8, i8* %380, i64 4
  store i8* %381, i8** %20, align 8
  br label %382

; <label>:382:                                    ; preds = %377
  %383 = call i32 @addstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.486, i32 0, i32 0), i64 5, i8** %24, i64* %25)
  %384 = icmp slt i32 %383, 0
  br i1 %384, label %385, label %386

; <label>:385:                                    ; preds = %382
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:386:                                    ; preds = %382
  br label %387

; <label>:387:                                    ; preds = %386
  br label %388

; <label>:388:                                    ; preds = %387
  %389 = load i64, i64* %33, align 8
  %390 = load i8*, i8** %24, align 8
  %391 = load i64, i64* %25, align 8
  %392 = call i32 @__ns_format_ttl(i64 %389, i8* %390, i64 %391)
  store i32 %392, i32* %31, align 4
  %393 = icmp slt i32 %392, 0
  br i1 %393, label %394, label %395

; <label>:394:                                    ; preds = %388
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:395:                                    ; preds = %388
  br label %396

; <label>:396:                                    ; preds = %395
  %397 = load i32, i32* %31, align 4
  %398 = sext i32 %397 to i64
  call void @addlen(i64 %398, i8** %24, i64* %25)
  br label %399

; <label>:399:                                    ; preds = %396
  %400 = load i32, i32* %31, align 4
  %401 = sext i32 %400 to i64
  %402 = load i32, i32* %28, align 4
  %403 = call i32 @addtab(i64 %401, i64 16, i32 %402, i8** %24, i64* %25)
  store i32 %403, i32* %28, align 4
  %404 = icmp slt i32 %403, 0
  br i1 %404, label %405, label %406

; <label>:405:                                    ; preds = %399
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:406:                                    ; preds = %399
  br label %407

; <label>:407:                                    ; preds = %406
  br label %408

; <label>:408:                                    ; preds = %407
  %409 = call i32 @addstr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.490, i32 0, i32 0), i64 8, i8** %24, i64* %25)
  %410 = icmp slt i32 %409, 0
  br i1 %410, label %411, label %412

; <label>:411:                                    ; preds = %408
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:412:                                    ; preds = %408
  br label %413

; <label>:413:                                    ; preds = %412
  store i32 0, i32* %28, align 4
  %414 = load i8*, i8** %20, align 8
  %415 = call i64 @__ns_get32(i8* %414)
  store i64 %415, i64* %33, align 8
  %416 = load i8*, i8** %20, align 8
  %417 = getelementptr inbounds i8, i8* %416, i64 4
  store i8* %417, i8** %20, align 8
  br label %418

; <label>:418:                                    ; preds = %413
  %419 = call i32 @addstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.486, i32 0, i32 0), i64 5, i8** %24, i64* %25)
  %420 = icmp slt i32 %419, 0
  br i1 %420, label %421, label %422

; <label>:421:                                    ; preds = %418
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:422:                                    ; preds = %418
  br label %423

; <label>:423:                                    ; preds = %422
  br label %424

; <label>:424:                                    ; preds = %423
  %425 = load i64, i64* %33, align 8
  %426 = load i8*, i8** %24, align 8
  %427 = load i64, i64* %25, align 8
  %428 = call i32 @__ns_format_ttl(i64 %425, i8* %426, i64 %427)
  store i32 %428, i32* %31, align 4
  %429 = icmp slt i32 %428, 0
  br i1 %429, label %430, label %431

; <label>:430:                                    ; preds = %424
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:431:                                    ; preds = %424
  br label %432

; <label>:432:                                    ; preds = %431
  %433 = load i32, i32* %31, align 4
  %434 = sext i32 %433 to i64
  call void @addlen(i64 %434, i8** %24, i64* %25)
  br label %435

; <label>:435:                                    ; preds = %432
  %436 = load i32, i32* %31, align 4
  %437 = sext i32 %436 to i64
  %438 = load i32, i32* %28, align 4
  %439 = call i32 @addtab(i64 %437, i64 16, i32 %438, i8** %24, i64* %25)
  store i32 %439, i32* %28, align 4
  %440 = icmp slt i32 %439, 0
  br i1 %440, label %441, label %442

; <label>:441:                                    ; preds = %435
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:442:                                    ; preds = %435
  br label %443

; <label>:443:                                    ; preds = %442
  br label %444

; <label>:444:                                    ; preds = %443
  %445 = call i32 @addstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.491, i32 0, i32 0), i64 9, i8** %24, i64* %25)
  %446 = icmp slt i32 %445, 0
  br i1 %446, label %447, label %448

; <label>:447:                                    ; preds = %444
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:448:                                    ; preds = %444
  br label %449

; <label>:449:                                    ; preds = %448
  store i32 0, i32* %28, align 4
  %450 = load i8*, i8** %20, align 8
  %451 = call i64 @__ns_get32(i8* %450)
  store i64 %451, i64* %33, align 8
  %452 = load i8*, i8** %20, align 8
  %453 = getelementptr inbounds i8, i8* %452, i64 4
  store i8* %453, i8** %20, align 8
  br label %454

; <label>:454:                                    ; preds = %449
  %455 = call i32 @addstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.486, i32 0, i32 0), i64 5, i8** %24, i64* %25)
  %456 = icmp slt i32 %455, 0
  br i1 %456, label %457, label %458

; <label>:457:                                    ; preds = %454
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:458:                                    ; preds = %454
  br label %459

; <label>:459:                                    ; preds = %458
  br label %460

; <label>:460:                                    ; preds = %459
  %461 = load i64, i64* %33, align 8
  %462 = load i8*, i8** %24, align 8
  %463 = load i64, i64* %25, align 8
  %464 = call i32 @__ns_format_ttl(i64 %461, i8* %462, i64 %463)
  store i32 %464, i32* %31, align 4
  %465 = icmp slt i32 %464, 0
  br i1 %465, label %466, label %467

; <label>:466:                                    ; preds = %460
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:467:                                    ; preds = %460
  br label %468

; <label>:468:                                    ; preds = %467
  %469 = load i32, i32* %31, align 4
  %470 = sext i32 %469 to i64
  call void @addlen(i64 %470, i8** %24, i64* %25)
  br label %471

; <label>:471:                                    ; preds = %468
  %472 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.492, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %473 = icmp slt i32 %472, 0
  br i1 %473, label %474, label %475

; <label>:474:                                    ; preds = %471
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:475:                                    ; preds = %471
  br label %476

; <label>:476:                                    ; preds = %475
  br label %477

; <label>:477:                                    ; preds = %476
  %478 = load i32, i32* %31, align 4
  %479 = sext i32 %478 to i64
  %480 = load i32, i32* %28, align 4
  %481 = call i32 @addtab(i64 %479, i64 16, i32 %480, i8** %24, i64* %25)
  store i32 %481, i32* %28, align 4
  %482 = icmp slt i32 %481, 0
  br i1 %482, label %483, label %484

; <label>:483:                                    ; preds = %477
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:484:                                    ; preds = %477
  br label %485

; <label>:485:                                    ; preds = %484
  br label %486

; <label>:486:                                    ; preds = %485
  %487 = call i32 @addstr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13.493, i32 0, i32 0), i64 10, i8** %24, i64* %25)
  %488 = icmp slt i32 %487, 0
  br i1 %488, label %489, label %490

; <label>:489:                                    ; preds = %486
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:490:                                    ; preds = %486
  br label %491

; <label>:491:                                    ; preds = %490
  br label %1433

; <label>:492:                                    ; preds = %202, %202, %202
  %493 = load i64, i64* %21, align 8
  %494 = icmp ult i64 %493, 2
  br i1 %494, label %495, label %496

; <label>:495:                                    ; preds = %492
  br label %1440

; <label>:496:                                    ; preds = %492
  %497 = load i8*, i8** %20, align 8
  %498 = call i32 @__ns_get16(i8* %497)
  store i32 %498, i32* %34, align 4
  %499 = load i8*, i8** %20, align 8
  %500 = getelementptr inbounds i8, i8* %499, i64 2
  store i8* %500, i8** %20, align 8
  %501 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %502 = load i32, i32* %34, align 4
  %503 = call i32 (i8*, i8*, ...) @sprintf(i8* %501, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.494, i32 0, i32 0), i32 %502) #9
  %504 = sext i32 %503 to i64
  %505 = trunc i64 %504 to i32
  store i32 %505, i32* %31, align 4
  br label %506

; <label>:506:                                    ; preds = %496
  %507 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %508 = load i32, i32* %31, align 4
  %509 = sext i32 %508 to i64
  %510 = call i32 @addstr(i8* %507, i64 %509, i8** %24, i64* %25)
  %511 = icmp slt i32 %510, 0
  br i1 %511, label %512, label %513

; <label>:512:                                    ; preds = %506
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:513:                                    ; preds = %506
  br label %514

; <label>:514:                                    ; preds = %513
  br label %515

; <label>:515:                                    ; preds = %514
  %516 = load i8*, i8** %14, align 8
  %517 = load i64, i64* %15, align 8
  %518 = load i8*, i8** %23, align 8
  %519 = call i32 @addname(i8* %516, i64 %517, i8** %20, i8* %518, i8** %24, i64* %25)
  %520 = icmp slt i32 %519, 0
  br i1 %520, label %521, label %522

; <label>:521:                                    ; preds = %515
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:522:                                    ; preds = %515
  br label %523

; <label>:523:                                    ; preds = %522
  br label %1433

; <label>:524:                                    ; preds = %202
  %525 = load i64, i64* %21, align 8
  %526 = icmp ult i64 %525, 2
  br i1 %526, label %527, label %528

; <label>:527:                                    ; preds = %524
  br label %1440

; <label>:528:                                    ; preds = %524
  %529 = load i8*, i8** %20, align 8
  %530 = call i32 @__ns_get16(i8* %529)
  store i32 %530, i32* %35, align 4
  %531 = load i8*, i8** %20, align 8
  %532 = getelementptr inbounds i8, i8* %531, i64 2
  store i8* %532, i8** %20, align 8
  %533 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %534 = load i32, i32* %35, align 4
  %535 = call i32 (i8*, i8*, ...) @sprintf(i8* %533, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.494, i32 0, i32 0), i32 %534) #9
  %536 = sext i32 %535 to i64
  %537 = trunc i64 %536 to i32
  store i32 %537, i32* %31, align 4
  br label %538

; <label>:538:                                    ; preds = %528
  %539 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %540 = load i32, i32* %31, align 4
  %541 = sext i32 %540 to i64
  %542 = call i32 @addstr(i8* %539, i64 %541, i8** %24, i64* %25)
  %543 = icmp slt i32 %542, 0
  br i1 %543, label %544, label %545

; <label>:544:                                    ; preds = %538
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:545:                                    ; preds = %538
  br label %546

; <label>:546:                                    ; preds = %545
  br label %547

; <label>:547:                                    ; preds = %546
  %548 = load i8*, i8** %14, align 8
  %549 = load i64, i64* %15, align 8
  %550 = load i8*, i8** %23, align 8
  %551 = call i32 @addname(i8* %548, i64 %549, i8** %20, i8* %550, i8** %24, i64* %25)
  %552 = icmp slt i32 %551, 0
  br i1 %552, label %553, label %554

; <label>:553:                                    ; preds = %547
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:554:                                    ; preds = %547
  br label %555

; <label>:555:                                    ; preds = %554
  br label %556

; <label>:556:                                    ; preds = %555
  %557 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %558 = icmp slt i32 %557, 0
  br i1 %558, label %559, label %560

; <label>:559:                                    ; preds = %556
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:560:                                    ; preds = %556
  br label %561

; <label>:561:                                    ; preds = %560
  br label %562

; <label>:562:                                    ; preds = %561
  %563 = load i8*, i8** %14, align 8
  %564 = load i64, i64* %15, align 8
  %565 = load i8*, i8** %23, align 8
  %566 = call i32 @addname(i8* %563, i64 %564, i8** %20, i8* %565, i8** %24, i64* %25)
  %567 = icmp slt i32 %566, 0
  br i1 %567, label %568, label %569

; <label>:568:                                    ; preds = %562
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:569:                                    ; preds = %562
  br label %570

; <label>:570:                                    ; preds = %569
  br label %1433

; <label>:571:                                    ; preds = %202
  br label %572

; <label>:572:                                    ; preds = %571
  %573 = load i8*, i8** %20, align 8
  %574 = load i8*, i8** %27, align 8
  %575 = call i32 @charstr(i8* %573, i8* %574, i8** %24, i64* %25)
  store i32 %575, i32* %31, align 4
  %576 = icmp slt i32 %575, 0
  br i1 %576, label %577, label %578

; <label>:577:                                    ; preds = %572
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:578:                                    ; preds = %572
  br label %579

; <label>:579:                                    ; preds = %578
  %580 = load i32, i32* %31, align 4
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %582, label %583

; <label>:582:                                    ; preds = %579
  br label %1440

; <label>:583:                                    ; preds = %579
  %584 = load i32, i32* %31, align 4
  %585 = load i8*, i8** %20, align 8
  %586 = sext i32 %584 to i64
  %587 = getelementptr inbounds i8, i8* %585, i64 %586
  store i8* %587, i8** %20, align 8
  br label %1433

; <label>:588:                                    ; preds = %202
  br label %589

; <label>:589:                                    ; preds = %620, %588
  %590 = load i8*, i8** %20, align 8
  %591 = load i8*, i8** %27, align 8
  %592 = icmp ult i8* %590, %591
  br i1 %592, label %593, label %621

; <label>:593:                                    ; preds = %589
  br label %594

; <label>:594:                                    ; preds = %593
  %595 = load i8*, i8** %20, align 8
  %596 = load i8*, i8** %27, align 8
  %597 = call i32 @charstr(i8* %595, i8* %596, i8** %24, i64* %25)
  store i32 %597, i32* %31, align 4
  %598 = icmp slt i32 %597, 0
  br i1 %598, label %599, label %600

; <label>:599:                                    ; preds = %594
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:600:                                    ; preds = %594
  br label %601

; <label>:601:                                    ; preds = %600
  %602 = load i32, i32* %31, align 4
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %605

; <label>:604:                                    ; preds = %601
  br label %1440

; <label>:605:                                    ; preds = %601
  %606 = load i32, i32* %31, align 4
  %607 = load i8*, i8** %20, align 8
  %608 = sext i32 %606 to i64
  %609 = getelementptr inbounds i8, i8* %607, i64 %608
  store i8* %609, i8** %20, align 8
  %610 = load i8*, i8** %20, align 8
  %611 = load i8*, i8** %27, align 8
  %612 = icmp ult i8* %610, %611
  br i1 %612, label %613, label %620

; <label>:613:                                    ; preds = %605
  br label %614

; <label>:614:                                    ; preds = %613
  %615 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %616 = icmp slt i32 %615, 0
  br i1 %616, label %617, label %618

; <label>:617:                                    ; preds = %614
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:618:                                    ; preds = %614
  br label %619

; <label>:619:                                    ; preds = %618
  br label %620

; <label>:620:                                    ; preds = %619, %605
  br label %589

; <label>:621:                                    ; preds = %589
  br label %1433

; <label>:622:                                    ; preds = %202
  %623 = load i64, i64* %21, align 8
  %624 = trunc i64 %623 to i32
  %625 = load i8*, i8** %20, align 8
  %626 = getelementptr inbounds [765 x i8], [765 x i8]* %36, i32 0, i32 0
  %627 = call i8* @__inet_nsap_ntoa(i32 %624, i8* %625, i8* %626)
  br label %628

; <label>:628:                                    ; preds = %622
  %629 = getelementptr inbounds [765 x i8], [765 x i8]* %36, i32 0, i32 0
  %630 = getelementptr inbounds [765 x i8], [765 x i8]* %36, i32 0, i32 0
  %631 = call i64 @strlen(i8* %630) #11
  store volatile i8 1, i8* @specialMalloc, align 1
  %632 = call i32 @addstr(i8* %629, i64 %631, i8** %24, i64* %25)
  store volatile i8 0, i8* @specialMalloc, align 1
  %633 = icmp slt i32 %632, 0
  br i1 %633, label %634, label %635

; <label>:634:                                    ; preds = %628
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:635:                                    ; preds = %628
  br label %636

; <label>:636:                                    ; preds = %635
  br label %1433

; <label>:637:                                    ; preds = %202
  %638 = load i64, i64* %21, align 8
  %639 = icmp ne i64 %638, 16
  br i1 %639, label %640, label %641

; <label>:640:                                    ; preds = %637
  br label %1440

; <label>:641:                                    ; preds = %637
  %642 = load i8*, i8** %20, align 8
  %643 = load i8*, i8** %24, align 8
  %644 = load i64, i64* %25, align 8
  %645 = call i8* @__inet_ntop(i32 10, i8* %642, i8* %643, i64 %644)
  %646 = load i8*, i8** %24, align 8
  %647 = call i64 @strlen(i8* %646) #11
  call void @addlen(i64 %647, i8** %24, i64* %25)
  br label %1433

; <label>:648:                                    ; preds = %202
  %649 = load i8*, i8** %20, align 8
  %650 = getelementptr inbounds [255 x i8], [255 x i8]* %37, i32 0, i32 0
  %651 = call i8* @__loc_ntoa(i8* %649, i8* %650)
  br label %652

; <label>:652:                                    ; preds = %648
  %653 = getelementptr inbounds [255 x i8], [255 x i8]* %37, i32 0, i32 0
  %654 = getelementptr inbounds [255 x i8], [255 x i8]* %37, i32 0, i32 0
  %655 = call i64 @strlen(i8* %654) #11
  store volatile i8 1, i8* @specialMalloc, align 1
  %656 = call i32 @addstr(i8* %653, i64 %655, i8** %24, i64* %25)
  store volatile i8 0, i8* @specialMalloc, align 1
  %657 = icmp slt i32 %656, 0
  br i1 %657, label %658, label %659

; <label>:658:                                    ; preds = %652
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:659:                                    ; preds = %652
  br label %660

; <label>:660:                                    ; preds = %659
  br label %1433

; <label>:661:                                    ; preds = %202
  %662 = load i64, i64* %21, align 8
  %663 = icmp ult i64 %662, 4
  br i1 %663, label %664, label %665

; <label>:664:                                    ; preds = %661
  br label %1440

; <label>:665:                                    ; preds = %661
  %666 = load i8*, i8** %20, align 8
  %667 = call i32 @__ns_get16(i8* %666)
  store i32 %667, i32* %38, align 4
  %668 = load i8*, i8** %20, align 8
  %669 = getelementptr inbounds i8, i8* %668, i64 2
  store i8* %669, i8** %20, align 8
  %670 = load i8*, i8** %20, align 8
  %671 = call i32 @__ns_get16(i8* %670)
  store i32 %671, i32* %39, align 4
  %672 = load i8*, i8** %20, align 8
  %673 = getelementptr inbounds i8, i8* %672, i64 2
  store i8* %673, i8** %20, align 8
  %674 = getelementptr inbounds [50 x i8], [50 x i8]* %40, i32 0, i32 0
  %675 = load i32, i32* %38, align 4
  %676 = load i32, i32* %39, align 4
  %677 = call i32 (i8*, i8*, ...) @sprintf(i8* %674, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.495, i32 0, i32 0), i32 %675, i32 %676) #9
  %678 = sext i32 %677 to i64
  %679 = trunc i64 %678 to i32
  store i32 %679, i32* %31, align 4
  br label %680

; <label>:680:                                    ; preds = %665
  %681 = getelementptr inbounds [50 x i8], [50 x i8]* %40, i32 0, i32 0
  %682 = load i32, i32* %31, align 4
  %683 = sext i32 %682 to i64
  %684 = call i32 @addstr(i8* %681, i64 %683, i8** %24, i64* %25)
  %685 = icmp slt i32 %684, 0
  br i1 %685, label %686, label %687

; <label>:686:                                    ; preds = %680
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:687:                                    ; preds = %680
  br label %688

; <label>:688:                                    ; preds = %687
  br label %689

; <label>:689:                                    ; preds = %688
  %690 = load i8*, i8** %20, align 8
  %691 = load i8*, i8** %27, align 8
  %692 = call i32 @charstr(i8* %690, i8* %691, i8** %24, i64* %25)
  store i32 %692, i32* %31, align 4
  %693 = icmp slt i32 %692, 0
  br i1 %693, label %694, label %695

; <label>:694:                                    ; preds = %689
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:695:                                    ; preds = %689
  br label %696

; <label>:696:                                    ; preds = %695
  %697 = load i32, i32* %31, align 4
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %699, label %700

; <label>:699:                                    ; preds = %696
  br label %1440

; <label>:700:                                    ; preds = %696
  %701 = load i32, i32* %31, align 4
  %702 = load i8*, i8** %20, align 8
  %703 = sext i32 %701 to i64
  %704 = getelementptr inbounds i8, i8* %702, i64 %703
  store i8* %704, i8** %20, align 8
  br label %705

; <label>:705:                                    ; preds = %700
  %706 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %707 = icmp slt i32 %706, 0
  br i1 %707, label %708, label %709

; <label>:708:                                    ; preds = %705
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:709:                                    ; preds = %705
  br label %710

; <label>:710:                                    ; preds = %709
  br label %711

; <label>:711:                                    ; preds = %710
  %712 = load i8*, i8** %20, align 8
  %713 = load i8*, i8** %27, align 8
  %714 = call i32 @charstr(i8* %712, i8* %713, i8** %24, i64* %25)
  store i32 %714, i32* %31, align 4
  %715 = icmp slt i32 %714, 0
  br i1 %715, label %716, label %717

; <label>:716:                                    ; preds = %711
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:717:                                    ; preds = %711
  br label %718

; <label>:718:                                    ; preds = %717
  %719 = load i32, i32* %31, align 4
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %722

; <label>:721:                                    ; preds = %718
  br label %1440

; <label>:722:                                    ; preds = %718
  %723 = load i32, i32* %31, align 4
  %724 = load i8*, i8** %20, align 8
  %725 = sext i32 %723 to i64
  %726 = getelementptr inbounds i8, i8* %724, i64 %725
  store i8* %726, i8** %20, align 8
  br label %727

; <label>:727:                                    ; preds = %722
  %728 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %729 = icmp slt i32 %728, 0
  br i1 %729, label %730, label %731

; <label>:730:                                    ; preds = %727
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:731:                                    ; preds = %727
  br label %732

; <label>:732:                                    ; preds = %731
  br label %733

; <label>:733:                                    ; preds = %732
  %734 = load i8*, i8** %20, align 8
  %735 = load i8*, i8** %27, align 8
  %736 = call i32 @charstr(i8* %734, i8* %735, i8** %24, i64* %25)
  store i32 %736, i32* %31, align 4
  %737 = icmp slt i32 %736, 0
  br i1 %737, label %738, label %739

; <label>:738:                                    ; preds = %733
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:739:                                    ; preds = %733
  br label %740

; <label>:740:                                    ; preds = %739
  %741 = load i32, i32* %31, align 4
  %742 = icmp slt i32 %741, 0
  br i1 %742, label %743, label %744

; <label>:743:                                    ; preds = %740
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:744:                                    ; preds = %740
  %745 = load i32, i32* %31, align 4
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %748

; <label>:747:                                    ; preds = %744
  br label %1440

; <label>:748:                                    ; preds = %744
  %749 = load i32, i32* %31, align 4
  %750 = load i8*, i8** %20, align 8
  %751 = sext i32 %749 to i64
  %752 = getelementptr inbounds i8, i8* %750, i64 %751
  store i8* %752, i8** %20, align 8
  br label %753

; <label>:753:                                    ; preds = %748
  %754 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %755 = icmp slt i32 %754, 0
  br i1 %755, label %756, label %757

; <label>:756:                                    ; preds = %753
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:757:                                    ; preds = %753
  br label %758

; <label>:758:                                    ; preds = %757
  br label %759

; <label>:759:                                    ; preds = %758
  %760 = load i8*, i8** %14, align 8
  %761 = load i64, i64* %15, align 8
  %762 = load i8*, i8** %23, align 8
  %763 = call i32 @addname(i8* %760, i64 %761, i8** %20, i8* %762, i8** %24, i64* %25)
  %764 = icmp slt i32 %763, 0
  br i1 %764, label %765, label %766

; <label>:765:                                    ; preds = %759
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:766:                                    ; preds = %759
  br label %767

; <label>:767:                                    ; preds = %766
  br label %1433

; <label>:768:                                    ; preds = %202
  %769 = load i64, i64* %21, align 8
  %770 = icmp ult i64 %769, 6
  br i1 %770, label %771, label %772

; <label>:771:                                    ; preds = %768
  br label %1440

; <label>:772:                                    ; preds = %768
  %773 = load i8*, i8** %20, align 8
  %774 = call i32 @__ns_get16(i8* %773)
  store i32 %774, i32* %41, align 4
  %775 = load i8*, i8** %20, align 8
  %776 = getelementptr inbounds i8, i8* %775, i64 2
  store i8* %776, i8** %20, align 8
  %777 = load i8*, i8** %20, align 8
  %778 = call i32 @__ns_get16(i8* %777)
  store i32 %778, i32* %42, align 4
  %779 = load i8*, i8** %20, align 8
  %780 = getelementptr inbounds i8, i8* %779, i64 2
  store i8* %780, i8** %20, align 8
  %781 = load i8*, i8** %20, align 8
  %782 = call i32 @__ns_get16(i8* %781)
  store i32 %782, i32* %43, align 4
  %783 = load i8*, i8** %20, align 8
  %784 = getelementptr inbounds i8, i8* %783, i64 2
  store i8* %784, i8** %20, align 8
  %785 = getelementptr inbounds [50 x i8], [50 x i8]* %44, i32 0, i32 0
  %786 = load i32, i32* %41, align 4
  %787 = load i32, i32* %42, align 4
  %788 = load i32, i32* %43, align 4
  %789 = call i32 (i8*, i8*, ...) @sprintf(i8* %785, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.496, i32 0, i32 0), i32 %786, i32 %787, i32 %788) #9
  %790 = sext i32 %789 to i64
  %791 = trunc i64 %790 to i32
  store i32 %791, i32* %31, align 4
  br label %792

; <label>:792:                                    ; preds = %772
  %793 = getelementptr inbounds [50 x i8], [50 x i8]* %44, i32 0, i32 0
  %794 = load i32, i32* %31, align 4
  %795 = sext i32 %794 to i64
  %796 = call i32 @addstr(i8* %793, i64 %795, i8** %24, i64* %25)
  %797 = icmp slt i32 %796, 0
  br i1 %797, label %798, label %799

; <label>:798:                                    ; preds = %792
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:799:                                    ; preds = %792
  br label %800

; <label>:800:                                    ; preds = %799
  br label %801

; <label>:801:                                    ; preds = %800
  %802 = load i8*, i8** %14, align 8
  %803 = load i64, i64* %15, align 8
  %804 = load i8*, i8** %23, align 8
  %805 = call i32 @addname(i8* %802, i64 %803, i8** %20, i8* %804, i8** %24, i64* %25)
  %806 = icmp slt i32 %805, 0
  br i1 %806, label %807, label %808

; <label>:807:                                    ; preds = %801
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:808:                                    ; preds = %801
  br label %809

; <label>:809:                                    ; preds = %808
  br label %1433

; <label>:810:                                    ; preds = %202, %202
  br label %811

; <label>:811:                                    ; preds = %810
  %812 = load i8*, i8** %14, align 8
  %813 = load i64, i64* %15, align 8
  %814 = load i8*, i8** %23, align 8
  %815 = call i32 @addname(i8* %812, i64 %813, i8** %20, i8* %814, i8** %24, i64* %25)
  %816 = icmp slt i32 %815, 0
  br i1 %816, label %817, label %818

; <label>:817:                                    ; preds = %811
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:818:                                    ; preds = %811
  br label %819

; <label>:819:                                    ; preds = %818
  br label %820

; <label>:820:                                    ; preds = %819
  %821 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %822 = icmp slt i32 %821, 0
  br i1 %822, label %823, label %824

; <label>:823:                                    ; preds = %820
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:824:                                    ; preds = %820
  br label %825

; <label>:825:                                    ; preds = %824
  br label %826

; <label>:826:                                    ; preds = %825
  %827 = load i8*, i8** %14, align 8
  %828 = load i64, i64* %15, align 8
  %829 = load i8*, i8** %23, align 8
  %830 = call i32 @addname(i8* %827, i64 %828, i8** %20, i8* %829, i8** %24, i64* %25)
  %831 = icmp slt i32 %830, 0
  br i1 %831, label %832, label %833

; <label>:832:                                    ; preds = %826
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:833:                                    ; preds = %826
  br label %834

; <label>:834:                                    ; preds = %833
  br label %1433

; <label>:835:                                    ; preds = %202
  %836 = load i64, i64* %21, align 8
  %837 = icmp ult i64 %836, 5
  br i1 %837, label %838, label %839

; <label>:838:                                    ; preds = %835
  br label %1440

; <label>:839:                                    ; preds = %835
  %840 = load i8*, i8** %20, align 8
  %841 = load i8*, i8** %24, align 8
  %842 = load i64, i64* %25, align 8
  %843 = call i8* @__inet_ntop(i32 2, i8* %840, i8* %841, i64 %842)
  %844 = load i8*, i8** %24, align 8
  %845 = call i64 @strlen(i8* %844) #11
  call void @addlen(i64 %845, i8** %24, i64* %25)
  %846 = load i8*, i8** %20, align 8
  %847 = getelementptr inbounds i8, i8* %846, i64 4
  store i8* %847, i8** %20, align 8
  %848 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %849 = load i8*, i8** %20, align 8
  %850 = load i8, i8* %849, align 1
  %851 = zext i8 %850 to i32
  %852 = call i32 (i8*, i8*, ...) @sprintf(i8* %848, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.497, i32 0, i32 0), i32 %851) #9
  %853 = sext i32 %852 to i64
  %854 = trunc i64 %853 to i32
  store i32 %854, i32* %31, align 4
  br label %855

; <label>:855:                                    ; preds = %839
  %856 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %857 = load i32, i32* %31, align 4
  %858 = sext i32 %857 to i64
  %859 = call i32 @addstr(i8* %856, i64 %858, i8** %24, i64* %25)
  %860 = icmp slt i32 %859, 0
  br i1 %860, label %861, label %862

; <label>:861:                                    ; preds = %855
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:862:                                    ; preds = %855
  br label %863

; <label>:863:                                    ; preds = %862
  %864 = load i8*, i8** %20, align 8
  %865 = getelementptr inbounds i8, i8* %864, i64 1
  store i8* %865, i8** %20, align 8
  store i32 0, i32* %45, align 4
  store i32 0, i32* %46, align 4
  br label %866

; <label>:866:                                    ; preds = %914, %863
  %867 = load i8*, i8** %20, align 8
  %868 = load i8*, i8** %27, align 8
  %869 = icmp ult i8* %867, %868
  br i1 %869, label %870, label %915

; <label>:870:                                    ; preds = %866
  %871 = load i8*, i8** %20, align 8
  %872 = getelementptr inbounds i8, i8* %871, i32 1
  store i8* %872, i8** %20, align 8
  %873 = load i8, i8* %871, align 1
  %874 = zext i8 %873 to i32
  store i32 %874, i32* %47, align 4
  br label %875

; <label>:875:                                    ; preds = %909, %870
  %876 = load i32, i32* %47, align 4
  %877 = and i32 %876, 128
  %878 = icmp ne i32 %877, 0
  br i1 %878, label %879, label %906

; <label>:879:                                    ; preds = %875
  %880 = load i32, i32* %46, align 4
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %889

; <label>:882:                                    ; preds = %879
  br label %883

; <label>:883:                                    ; preds = %882
  %884 = call i32 @addstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.498, i32 0, i32 0), i64 5, i8** %24, i64* %25)
  %885 = icmp slt i32 %884, 0
  br i1 %885, label %886, label %887

; <label>:886:                                    ; preds = %883
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:887:                                    ; preds = %883
  br label %888

; <label>:888:                                    ; preds = %887
  store i32 10, i32* %46, align 4
  store i32 0, i32* %28, align 4
  br label %889

; <label>:889:                                    ; preds = %888, %879
  %890 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %891 = load i32, i32* %45, align 4
  %892 = call i32 (i8*, i8*, ...) @sprintf(i8* %890, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.499, i32 0, i32 0), i32 %891) #9
  %893 = sext i32 %892 to i64
  %894 = trunc i64 %893 to i32
  store i32 %894, i32* %31, align 4
  br label %895

; <label>:895:                                    ; preds = %889
  %896 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %897 = load i32, i32* %31, align 4
  %898 = sext i32 %897 to i64
  %899 = call i32 @addstr(i8* %896, i64 %898, i8** %24, i64* %25)
  %900 = icmp slt i32 %899, 0
  br i1 %900, label %901, label %902

; <label>:901:                                    ; preds = %895
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:902:                                    ; preds = %895
  br label %903

; <label>:903:                                    ; preds = %902
  %904 = load i32, i32* %46, align 4
  %905 = add nsw i32 %904, -1
  store i32 %905, i32* %46, align 4
  br label %906

; <label>:906:                                    ; preds = %903, %875
  %907 = load i32, i32* %47, align 4
  %908 = shl i32 %907, 1
  store i32 %908, i32* %47, align 4
  br label %909

; <label>:909:                                    ; preds = %906
  %910 = load i32, i32* %45, align 4
  %911 = add nsw i32 %910, 1
  store i32 %911, i32* %45, align 4
  %912 = and i32 %911, 7
  %913 = icmp ne i32 %912, 0
  br i1 %913, label %875, label %914

; <label>:914:                                    ; preds = %909
  br label %866

; <label>:915:                                    ; preds = %866
  br label %916

; <label>:916:                                    ; preds = %915
  %917 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.500, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %918 = icmp slt i32 %917, 0
  br i1 %918, label %919, label %920

; <label>:919:                                    ; preds = %916
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:920:                                    ; preds = %916
  br label %921

; <label>:921:                                    ; preds = %920
  br label %1433

; <label>:922:                                    ; preds = %202
  %923 = load i64, i64* %21, align 8
  %924 = icmp ult i64 %923, 4
  br i1 %924, label %925, label %926

; <label>:925:                                    ; preds = %922
  br label %1440

; <label>:926:                                    ; preds = %922
  %927 = load i8*, i8** %20, align 8
  %928 = call i32 @__ns_get16(i8* %927)
  store i32 %928, i32* %49, align 4
  %929 = load i8*, i8** %20, align 8
  %930 = getelementptr inbounds i8, i8* %929, i64 2
  store i8* %930, i8** %20, align 8
  %931 = load i8*, i8** %20, align 8
  %932 = getelementptr inbounds i8, i8* %931, i32 1
  store i8* %932, i8** %20, align 8
  %933 = load i8, i8* %931, align 1
  %934 = zext i8 %933 to i32
  store i32 %934, i32* %50, align 4
  %935 = load i8*, i8** %20, align 8
  %936 = getelementptr inbounds i8, i8* %935, i32 1
  store i8* %936, i8** %20, align 8
  %937 = load i8, i8* %935, align 1
  %938 = zext i8 %937 to i32
  store i32 %938, i32* %51, align 4
  %939 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %940 = load i32, i32* %49, align 4
  %941 = load i32, i32* %50, align 4
  %942 = load i32, i32* %51, align 4
  %943 = call i32 (i8*, i8*, ...) @sprintf(i8* %939, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21.501, i32 0, i32 0), i32 %940, i32 %941, i32 %942) #9
  %944 = sext i32 %943 to i64
  %945 = trunc i64 %944 to i32
  store i32 %945, i32* %31, align 4
  br label %946

; <label>:946:                                    ; preds = %926
  %947 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %948 = load i32, i32* %31, align 4
  %949 = sext i32 %948 to i64
  %950 = call i32 @addstr(i8* %947, i64 %949, i8** %24, i64* %25)
  %951 = icmp slt i32 %950, 0
  br i1 %951, label %952, label %953

; <label>:952:                                    ; preds = %946
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:953:                                    ; preds = %946
  br label %954

; <label>:954:                                    ; preds = %953
  %955 = load i8*, i8** %20, align 8
  %956 = load i8*, i8** %27, align 8
  %957 = load i8*, i8** %20, align 8
  %958 = ptrtoint i8* %956 to i64
  %959 = ptrtoint i8* %957 to i64
  %960 = sub i64 %958, %959
  %961 = getelementptr inbounds [6812 x i8], [6812 x i8]* %48, i32 0, i32 0
  %962 = call i32 @__b64_ntop(i8* %955, i64 %960, i8* %961, i64 6812)
  store i32 %962, i32* %31, align 4
  %963 = load i32, i32* %31, align 4
  %964 = icmp slt i32 %963, 0
  br i1 %964, label %965, label %966

; <label>:965:                                    ; preds = %954
  br label %1440

; <label>:966:                                    ; preds = %954
  %967 = load i32, i32* %31, align 4
  %968 = icmp sgt i32 %967, 15
  br i1 %968, label %969, label %976

; <label>:969:                                    ; preds = %966
  br label %970

; <label>:970:                                    ; preds = %969
  %971 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.502, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %972 = icmp slt i32 %971, 0
  br i1 %972, label %973, label %974

; <label>:973:                                    ; preds = %970
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:974:                                    ; preds = %970
  br label %975

; <label>:975:                                    ; preds = %974
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.503, i32 0, i32 0), i8** %52, align 8
  store i32 0, i32* %28, align 4
  br label %977

; <label>:976:                                    ; preds = %966
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i8** %52, align 8
  br label %977

; <label>:977:                                    ; preds = %976, %975
  store i32 0, i32* %53, align 4
  br label %978

; <label>:978:                                    ; preds = %1014, %977
  %979 = load i32, i32* %53, align 4
  %980 = load i32, i32* %31, align 4
  %981 = icmp slt i32 %979, %980
  br i1 %981, label %982, label %1017

; <label>:982:                                    ; preds = %978
  br label %983

; <label>:983:                                    ; preds = %982
  %984 = load i8*, i8** %52, align 8
  %985 = load i8*, i8** %52, align 8
  %986 = call i64 @strlen(i8* %985) #11
  store volatile i8 1, i8* @specialMalloc, align 1
  %987 = call i32 @addstr(i8* %984, i64 %986, i8** %24, i64* %25)
  store volatile i8 0, i8* @specialMalloc, align 1
  %988 = icmp slt i32 %987, 0
  br i1 %988, label %989, label %990

; <label>:989:                                    ; preds = %983
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:990:                                    ; preds = %983
  br label %991

; <label>:991:                                    ; preds = %990
  br label %992

; <label>:992:                                    ; preds = %991
  %993 = getelementptr inbounds [6812 x i8], [6812 x i8]* %48, i32 0, i32 0
  %994 = load i32, i32* %53, align 4
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds i8, i8* %993, i64 %995
  %997 = load i32, i32* %31, align 4
  %998 = load i32, i32* %53, align 4
  %999 = sub nsw i32 %997, %998
  %1000 = icmp slt i32 %999, 48
  br i1 %1000, label %1001, label %1005

; <label>:1001:                                   ; preds = %992
  %1002 = load i32, i32* %31, align 4
  %1003 = load i32, i32* %53, align 4
  %1004 = sub nsw i32 %1002, %1003
  br label %1006

; <label>:1005:                                   ; preds = %992
  br label %1006

; <label>:1006:                                   ; preds = %1005, %1001
  %1007 = phi i32 [ %1004, %1001 ], [ 48, %1005 ]
  %1008 = sext i32 %1007 to i64
  %1009 = call i32 @addstr(i8* %996, i64 %1008, i8** %24, i64* %25)
  %1010 = icmp slt i32 %1009, 0
  br i1 %1010, label %1011, label %1012

; <label>:1011:                                   ; preds = %1006
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1012:                                   ; preds = %1006
  br label %1013

; <label>:1013:                                   ; preds = %1012
  br label %1014

; <label>:1014:                                   ; preds = %1013
  %1015 = load i32, i32* %53, align 4
  %1016 = add nsw i32 %1015, 48
  store i32 %1016, i32* %53, align 4
  br label %978

; <label>:1017:                                   ; preds = %978
  %1018 = load i32, i32* %31, align 4
  %1019 = icmp sgt i32 %1018, 15
  br i1 %1019, label %1020, label %1027

; <label>:1020:                                   ; preds = %1017
  br label %1021

; <label>:1021:                                   ; preds = %1020
  %1022 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.492, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %1023 = icmp slt i32 %1022, 0
  br i1 %1023, label %1024, label %1025

; <label>:1024:                                   ; preds = %1021
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1025:                                   ; preds = %1021
  br label %1026

; <label>:1026:                                   ; preds = %1025
  br label %1027

; <label>:1027:                                   ; preds = %1026, %1017
  br label %1433

; <label>:1028:                                   ; preds = %202
  %1029 = load i64, i64* %21, align 8
  %1030 = icmp ult i64 %1029, 22
  br i1 %1030, label %1031, label %1032

; <label>:1031:                                   ; preds = %1028
  br label %1440

; <label>:1032:                                   ; preds = %1028
  %1033 = load i8*, i8** %20, align 8
  %1034 = call i32 @__ns_get16(i8* %1033)
  store i32 %1034, i32* %55, align 4
  %1035 = load i8*, i8** %20, align 8
  %1036 = getelementptr inbounds i8, i8* %1035, i64 2
  store i8* %1036, i8** %20, align 8
  %1037 = load i8*, i8** %20, align 8
  %1038 = getelementptr inbounds i8, i8* %1037, i32 1
  store i8* %1038, i8** %20, align 8
  %1039 = load i8, i8* %1037, align 1
  %1040 = zext i8 %1039 to i32
  store i32 %1040, i32* %56, align 4
  %1041 = load i8*, i8** %20, align 8
  %1042 = getelementptr inbounds i8, i8* %1041, i32 1
  store i8* %1042, i8** %20, align 8
  %1043 = load i8, i8* %1041, align 1
  %1044 = zext i8 %1043 to i32
  store i32 %1044, i32* %57, align 4
  %1045 = load i8*, i8** %20, align 8
  %1046 = call i64 @__ns_get32(i8* %1045)
  store i64 %1046, i64* %60, align 8
  %1047 = load i8*, i8** %20, align 8
  %1048 = getelementptr inbounds i8, i8* %1047, i64 4
  store i8* %1048, i8** %20, align 8
  %1049 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1050 = load i32, i32* %55, align 4
  %1051 = call i8* @__p_type(i32 %1050)
  %1052 = load i32, i32* %56, align 4
  %1053 = load i64, i64* %60, align 8
  %1054 = call i32 (i8*, i8*, ...) @sprintf(i8* %1049, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24.504, i32 0, i32 0), i8* %1051, i32 %1052, i64 %1053) #9
  %1055 = sext i32 %1054 to i64
  %1056 = trunc i64 %1055 to i32
  store i32 %1056, i32* %31, align 4
  br label %1057

; <label>:1057:                                   ; preds = %1032
  %1058 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1059 = load i32, i32* %31, align 4
  %1060 = sext i32 %1059 to i64
  %1061 = call i32 @addstr(i8* %1058, i64 %1060, i8** %24, i64* %25)
  %1062 = icmp slt i32 %1061, 0
  br i1 %1062, label %1063, label %1064

; <label>:1063:                                   ; preds = %1057
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1064:                                   ; preds = %1057
  br label %1065

; <label>:1065:                                   ; preds = %1064
  %1066 = load i32, i32* %57, align 4
  %1067 = load i8*, i8** %16, align 8
  %1068 = call i32 @__dn_count_labels(i8* %1067)
  %1069 = icmp ugt i32 %1066, %1068
  br i1 %1069, label %1070, label %1071

; <label>:1070:                                   ; preds = %1065
  br label %1440

; <label>:1071:                                   ; preds = %1065
  %1072 = load i8*, i8** %20, align 8
  %1073 = call i64 @__ns_get32(i8* %1072)
  store i64 %1073, i64* %60, align 8
  %1074 = load i8*, i8** %20, align 8
  %1075 = getelementptr inbounds i8, i8* %1074, i64 4
  store i8* %1075, i8** %20, align 8
  %1076 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1077 = load i64, i64* %60, align 8
  %1078 = call i8* @__p_secstodate(i64 %1077)
  %1079 = call i32 (i8*, i8*, ...) @sprintf(i8* %1076, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.505, i32 0, i32 0), i8* %1078) #9
  %1080 = sext i32 %1079 to i64
  %1081 = trunc i64 %1080 to i32
  store i32 %1081, i32* %31, align 4
  br label %1082

; <label>:1082:                                   ; preds = %1071
  %1083 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1084 = load i32, i32* %31, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = call i32 @addstr(i8* %1083, i64 %1085, i8** %24, i64* %25)
  %1087 = icmp slt i32 %1086, 0
  br i1 %1087, label %1088, label %1089

; <label>:1088:                                   ; preds = %1082
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1089:                                   ; preds = %1082
  br label %1090

; <label>:1090:                                   ; preds = %1089
  %1091 = load i8*, i8** %20, align 8
  %1092 = call i64 @__ns_get32(i8* %1091)
  store i64 %1092, i64* %60, align 8
  %1093 = load i8*, i8** %20, align 8
  %1094 = getelementptr inbounds i8, i8* %1093, i64 4
  store i8* %1094, i8** %20, align 8
  %1095 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1096 = load i64, i64* %60, align 8
  %1097 = call i8* @__p_secstodate(i64 %1096)
  %1098 = call i32 (i8*, i8*, ...) @sprintf(i8* %1095, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.505, i32 0, i32 0), i8* %1097) #9
  %1099 = sext i32 %1098 to i64
  %1100 = trunc i64 %1099 to i32
  store i32 %1100, i32* %31, align 4
  br label %1101

; <label>:1101:                                   ; preds = %1090
  %1102 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1103 = load i32, i32* %31, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = call i32 @addstr(i8* %1102, i64 %1104, i8** %24, i64* %25)
  %1106 = icmp slt i32 %1105, 0
  br i1 %1106, label %1107, label %1108

; <label>:1107:                                   ; preds = %1101
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1108:                                   ; preds = %1101
  br label %1109

; <label>:1109:                                   ; preds = %1108
  %1110 = load i8*, i8** %20, align 8
  %1111 = call i32 @__ns_get16(i8* %1110)
  store i32 %1111, i32* %58, align 4
  %1112 = load i8*, i8** %20, align 8
  %1113 = getelementptr inbounds i8, i8* %1112, i64 2
  store i8* %1113, i8** %20, align 8
  %1114 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1115 = load i32, i32* %58, align 4
  %1116 = call i32 (i8*, i8*, ...) @sprintf(i8* %1114, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.494, i32 0, i32 0), i32 %1115) #9
  %1117 = sext i32 %1116 to i64
  %1118 = trunc i64 %1117 to i32
  store i32 %1118, i32* %31, align 4
  br label %1119

; <label>:1119:                                   ; preds = %1109
  %1120 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1121 = load i32, i32* %31, align 4
  %1122 = sext i32 %1121 to i64
  %1123 = call i32 @addstr(i8* %1120, i64 %1122, i8** %24, i64* %25)
  %1124 = icmp slt i32 %1123, 0
  br i1 %1124, label %1125, label %1126

; <label>:1125:                                   ; preds = %1119
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1126:                                   ; preds = %1119
  br label %1127

; <label>:1127:                                   ; preds = %1126
  br label %1128

; <label>:1128:                                   ; preds = %1127
  %1129 = load i8*, i8** %14, align 8
  %1130 = load i64, i64* %15, align 8
  %1131 = load i8*, i8** %23, align 8
  %1132 = call i32 @addname(i8* %1129, i64 %1130, i8** %20, i8* %1131, i8** %24, i64* %25)
  %1133 = icmp slt i32 %1132, 0
  br i1 %1133, label %1134, label %1135

; <label>:1134:                                   ; preds = %1128
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1135:                                   ; preds = %1128
  br label %1136

; <label>:1136:                                   ; preds = %1135
  %1137 = load i8*, i8** %20, align 8
  %1138 = load i8*, i8** %27, align 8
  %1139 = load i8*, i8** %20, align 8
  %1140 = ptrtoint i8* %1138 to i64
  %1141 = ptrtoint i8* %1139 to i64
  %1142 = sub i64 %1140, %1141
  %1143 = getelementptr inbounds [6812 x i8], [6812 x i8]* %54, i32 0, i32 0
  %1144 = call i32 @__b64_ntop(i8* %1137, i64 %1142, i8* %1143, i64 6812)
  store i32 %1144, i32* %31, align 4
  %1145 = load i32, i32* %31, align 4
  %1146 = icmp sgt i32 %1145, 15
  br i1 %1146, label %1147, label %1154

; <label>:1147:                                   ; preds = %1136
  br label %1148

; <label>:1148:                                   ; preds = %1147
  %1149 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.502, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %1150 = icmp slt i32 %1149, 0
  br i1 %1150, label %1151, label %1152

; <label>:1151:                                   ; preds = %1148
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1152:                                   ; preds = %1148
  br label %1153

; <label>:1153:                                   ; preds = %1152
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.503, i32 0, i32 0), i8** %59, align 8
  store i32 0, i32* %28, align 4
  br label %1155

; <label>:1154:                                   ; preds = %1136
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i8** %59, align 8
  br label %1155

; <label>:1155:                                   ; preds = %1154, %1153
  %1156 = load i32, i32* %31, align 4
  %1157 = icmp slt i32 %1156, 0
  br i1 %1157, label %1158, label %1159

; <label>:1158:                                   ; preds = %1155
  br label %1440

; <label>:1159:                                   ; preds = %1155
  store i32 0, i32* %61, align 4
  br label %1160

; <label>:1160:                                   ; preds = %1196, %1159
  %1161 = load i32, i32* %61, align 4
  %1162 = load i32, i32* %31, align 4
  %1163 = icmp slt i32 %1161, %1162
  br i1 %1163, label %1164, label %1199

; <label>:1164:                                   ; preds = %1160
  br label %1165

; <label>:1165:                                   ; preds = %1164
  %1166 = load i8*, i8** %59, align 8
  %1167 = load i8*, i8** %59, align 8
  %1168 = call i64 @strlen(i8* %1167) #11
  store volatile i8 1, i8* @specialMalloc, align 1
  %1169 = call i32 @addstr(i8* %1166, i64 %1168, i8** %24, i64* %25)
  store volatile i8 0, i8* @specialMalloc, align 1
  %1170 = icmp slt i32 %1169, 0
  br i1 %1170, label %1171, label %1172

; <label>:1171:                                   ; preds = %1165
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1172:                                   ; preds = %1165
  br label %1173

; <label>:1173:                                   ; preds = %1172
  br label %1174

; <label>:1174:                                   ; preds = %1173
  %1175 = getelementptr inbounds [6812 x i8], [6812 x i8]* %54, i32 0, i32 0
  %1176 = load i32, i32* %61, align 4
  %1177 = sext i32 %1176 to i64
  %1178 = getelementptr inbounds i8, i8* %1175, i64 %1177
  %1179 = load i32, i32* %31, align 4
  %1180 = load i32, i32* %61, align 4
  %1181 = sub nsw i32 %1179, %1180
  %1182 = icmp slt i32 %1181, 48
  br i1 %1182, label %1183, label %1187

; <label>:1183:                                   ; preds = %1174
  %1184 = load i32, i32* %31, align 4
  %1185 = load i32, i32* %61, align 4
  %1186 = sub nsw i32 %1184, %1185
  br label %1188

; <label>:1187:                                   ; preds = %1174
  br label %1188

; <label>:1188:                                   ; preds = %1187, %1183
  %1189 = phi i32 [ %1186, %1183 ], [ 48, %1187 ]
  %1190 = sext i32 %1189 to i64
  %1191 = call i32 @addstr(i8* %1178, i64 %1190, i8** %24, i64* %25)
  %1192 = icmp slt i32 %1191, 0
  br i1 %1192, label %1193, label %1194

; <label>:1193:                                   ; preds = %1188
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1194:                                   ; preds = %1188
  br label %1195

; <label>:1195:                                   ; preds = %1194
  br label %1196

; <label>:1196:                                   ; preds = %1195
  %1197 = load i32, i32* %61, align 4
  %1198 = add nsw i32 %1197, 48
  store i32 %1198, i32* %61, align 4
  br label %1160

; <label>:1199:                                   ; preds = %1160
  %1200 = load i32, i32* %31, align 4
  %1201 = icmp sgt i32 %1200, 15
  br i1 %1201, label %1202, label %1209

; <label>:1202:                                   ; preds = %1199
  br label %1203

; <label>:1203:                                   ; preds = %1202
  %1204 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.492, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %1205 = icmp slt i32 %1204, 0
  br i1 %1205, label %1206, label %1207

; <label>:1206:                                   ; preds = %1203
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1207:                                   ; preds = %1203
  br label %1208

; <label>:1208:                                   ; preds = %1207
  br label %1209

; <label>:1209:                                   ; preds = %1208, %1199
  br label %1433

; <label>:1210:                                   ; preds = %202
  br label %1211

; <label>:1211:                                   ; preds = %1210
  %1212 = load i8*, i8** %14, align 8
  %1213 = load i64, i64* %15, align 8
  %1214 = load i8*, i8** %23, align 8
  %1215 = call i32 @addname(i8* %1212, i64 %1213, i8** %20, i8* %1214, i8** %24, i64* %25)
  %1216 = icmp slt i32 %1215, 0
  br i1 %1216, label %1217, label %1218

; <label>:1217:                                   ; preds = %1211
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1218:                                   ; preds = %1211
  br label %1219

; <label>:1219:                                   ; preds = %1218
  %1220 = load i8*, i8** %27, align 8
  %1221 = load i8*, i8** %20, align 8
  %1222 = ptrtoint i8* %1220 to i64
  %1223 = ptrtoint i8* %1221 to i64
  %1224 = sub i64 %1222, %1223
  %1225 = trunc i64 %1224 to i32
  store i32 %1225, i32* %62, align 4
  store i32 0, i32* %63, align 4
  br label %1226

; <label>:1226:                                   ; preds = %1261, %1219
  %1227 = load i32, i32* %63, align 4
  %1228 = load i32, i32* %62, align 4
  %1229 = mul nsw i32 %1228, 8
  %1230 = icmp slt i32 %1227, %1229
  br i1 %1230, label %1231, label %1264

; <label>:1231:                                   ; preds = %1226
  %1232 = load i8*, i8** %20, align 8
  %1233 = load i32, i32* %63, align 4
  %1234 = sdiv i32 %1233, 8
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds i8, i8* %1232, i64 %1235
  %1237 = load i8, i8* %1236, align 1
  %1238 = zext i8 %1237 to i32
  %1239 = load i32, i32* %63, align 4
  %1240 = srem i32 %1239, 8
  %1241 = ashr i32 128, %1240
  %1242 = and i32 %1238, %1241
  %1243 = icmp ne i32 %1242, 0
  br i1 %1243, label %1244, label %1260

; <label>:1244:                                   ; preds = %1231
  %1245 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1246 = load i32, i32* %63, align 4
  %1247 = call i8* @__p_type(i32 %1246)
  %1248 = call i32 (i8*, i8*, ...) @sprintf(i8* %1245, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.506, i32 0, i32 0), i8* %1247) #9
  %1249 = sext i32 %1248 to i64
  %1250 = trunc i64 %1249 to i32
  store i32 %1250, i32* %31, align 4
  br label %1251

; <label>:1251:                                   ; preds = %1244
  %1252 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1253 = load i32, i32* %31, align 4
  %1254 = sext i32 %1253 to i64
  %1255 = call i32 @addstr(i8* %1252, i64 %1254, i8** %24, i64* %25)
  %1256 = icmp slt i32 %1255, 0
  br i1 %1256, label %1257, label %1258

; <label>:1257:                                   ; preds = %1251
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1258:                                   ; preds = %1251
  br label %1259

; <label>:1259:                                   ; preds = %1258
  br label %1260

; <label>:1260:                                   ; preds = %1259, %1231
  br label %1261

; <label>:1261:                                   ; preds = %1260
  %1262 = load i32, i32* %63, align 4
  %1263 = add nsw i32 %1262, 1
  store i32 %1263, i32* %63, align 4
  br label %1226

; <label>:1264:                                   ; preds = %1226
  br label %1433

; <label>:1265:                                   ; preds = %202
  %1266 = load i8*, i8** %20, align 8
  %1267 = call i32 @__ns_get16(i8* %1266)
  store i32 %1267, i32* %64, align 4
  %1268 = load i8*, i8** %20, align 8
  %1269 = getelementptr inbounds i8, i8* %1268, i64 2
  store i8* %1269, i8** %20, align 8
  %1270 = load i8*, i8** %20, align 8
  %1271 = call i32 @__ns_get16(i8* %1270)
  store i32 %1271, i32* %65, align 4
  %1272 = load i8*, i8** %20, align 8
  %1273 = getelementptr inbounds i8, i8* %1272, i64 2
  store i8* %1273, i8** %20, align 8
  %1274 = load i8*, i8** %20, align 8
  %1275 = getelementptr inbounds i8, i8* %1274, i32 1
  store i8* %1275, i8** %20, align 8
  %1276 = load i8, i8* %1274, align 1
  %1277 = zext i8 %1276 to i32
  store i32 %1277, i32* %66, align 4
  %1278 = getelementptr inbounds [40 x i8], [40 x i8]* %71, i32 0, i32 0
  %1279 = load i32, i32* %64, align 4
  %1280 = load i32, i32* %65, align 4
  %1281 = load i32, i32* %66, align 4
  %1282 = call i32 (i8*, i8*, ...) @sprintf(i8* %1278, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27.507, i32 0, i32 0), i32 %1279, i32 %1280, i32 %1281) #9
  %1283 = sext i32 %1282 to i64
  %1284 = trunc i64 %1283 to i32
  store i32 %1284, i32* %31, align 4
  br label %1285

; <label>:1285:                                   ; preds = %1265
  %1286 = getelementptr inbounds [40 x i8], [40 x i8]* %71, i32 0, i32 0
  %1287 = load i32, i32* %31, align 4
  %1288 = sext i32 %1287 to i64
  %1289 = call i32 @addstr(i8* %1286, i64 %1288, i8** %24, i64* %25)
  %1290 = icmp slt i32 %1289, 0
  br i1 %1290, label %1291, label %1292

; <label>:1291:                                   ; preds = %1285
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1292:                                   ; preds = %1285
  br label %1293

; <label>:1293:                                   ; preds = %1292
  %1294 = load i8*, i8** %27, align 8
  %1295 = load i8*, i8** %20, align 8
  %1296 = ptrtoint i8* %1294 to i64
  %1297 = ptrtoint i8* %1295 to i64
  %1298 = sub i64 %1296, %1297
  %1299 = mul nsw i64 %1298, 4
  %1300 = sdiv i64 %1299, 3
  %1301 = add nsw i64 %1300, 4
  %1302 = trunc i64 %1301 to i32
  store i32 %1302, i32* %68, align 4
  %1303 = load i32, i32* %68, align 4
  %1304 = sext i32 %1303 to i64
  %1305 = icmp ugt i64 %1304, 6144
  br i1 %1305, label %1306, label %1316

; <label>:1306:                                   ; preds = %1293
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28.508, i32 0, i32 0), i8** %72, align 8
  br label %1307

; <label>:1307:                                   ; preds = %1306
  %1308 = load i8*, i8** %72, align 8
  %1309 = load i8*, i8** %72, align 8
  %1310 = call i64 @strlen(i8* %1309) #11
  store volatile i8 1, i8* @specialMalloc, align 1
  %1311 = call i32 @addstr(i8* %1308, i64 %1310, i8** %24, i64* %25)
  store volatile i8 0, i8* @specialMalloc, align 1
  %1312 = icmp slt i32 %1311, 0
  br i1 %1312, label %1313, label %1314

; <label>:1313:                                   ; preds = %1307
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1314:                                   ; preds = %1307
  br label %1315

; <label>:1315:                                   ; preds = %1314
  br label %1393

; <label>:1316:                                   ; preds = %1293
  %1317 = load i8*, i8** %20, align 8
  %1318 = load i8*, i8** %27, align 8
  %1319 = load i8*, i8** %20, align 8
  %1320 = ptrtoint i8* %1318 to i64
  %1321 = ptrtoint i8* %1319 to i64
  %1322 = sub i64 %1320, %1321
  %1323 = getelementptr inbounds [8192 x i8], [8192 x i8]* %69, i32 0, i32 0
  %1324 = load i32, i32* %68, align 4
  %1325 = sext i32 %1324 to i64
  %1326 = call i32 @__b64_ntop(i8* %1317, i64 %1322, i8* %1323, i64 %1325)
  store i32 %1326, i32* %31, align 4
  %1327 = load i32, i32* %31, align 4
  %1328 = icmp slt i32 %1327, 0
  br i1 %1328, label %1329, label %1330

; <label>:1329:                                   ; preds = %1316
  br label %1440

; <label>:1330:                                   ; preds = %1316
  %1331 = load i32, i32* %31, align 4
  %1332 = icmp sgt i32 %1331, 15
  br i1 %1332, label %1333, label %1340

; <label>:1333:                                   ; preds = %1330
  br label %1334

; <label>:1334:                                   ; preds = %1333
  %1335 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.502, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %1336 = icmp slt i32 %1335, 0
  br i1 %1336, label %1337, label %1338

; <label>:1337:                                   ; preds = %1334
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1338:                                   ; preds = %1334
  br label %1339

; <label>:1339:                                   ; preds = %1338
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.503, i32 0, i32 0), i8** %70, align 8
  store i32 0, i32* %28, align 4
  br label %1341

; <label>:1340:                                   ; preds = %1330
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i8** %70, align 8
  br label %1341

; <label>:1341:                                   ; preds = %1340, %1339
  br label %1342

; <label>:1342:                                   ; preds = %1341
  store i32 0, i32* %67, align 4
  br label %1343

; <label>:1343:                                   ; preds = %1379, %1342
  %1344 = load i32, i32* %67, align 4
  %1345 = load i32, i32* %31, align 4
  %1346 = icmp slt i32 %1344, %1345
  br i1 %1346, label %1347, label %1382

; <label>:1347:                                   ; preds = %1343
  br label %1348

; <label>:1348:                                   ; preds = %1347
  %1349 = load i8*, i8** %70, align 8
  %1350 = load i8*, i8** %70, align 8
  %1351 = call i64 @strlen(i8* %1350) #11
  store volatile i8 1, i8* @specialMalloc, align 1
  %1352 = call i32 @addstr(i8* %1349, i64 %1351, i8** %24, i64* %25)
  store volatile i8 0, i8* @specialMalloc, align 1
  %1353 = icmp slt i32 %1352, 0
  br i1 %1353, label %1354, label %1355

; <label>:1354:                                   ; preds = %1348
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1355:                                   ; preds = %1348
  br label %1356

; <label>:1356:                                   ; preds = %1355
  br label %1357

; <label>:1357:                                   ; preds = %1356
  %1358 = getelementptr inbounds [8192 x i8], [8192 x i8]* %69, i32 0, i32 0
  %1359 = load i32, i32* %67, align 4
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds i8, i8* %1358, i64 %1360
  %1362 = load i32, i32* %31, align 4
  %1363 = load i32, i32* %67, align 4
  %1364 = sub nsw i32 %1362, %1363
  %1365 = icmp slt i32 %1364, 48
  br i1 %1365, label %1366, label %1370

; <label>:1366:                                   ; preds = %1357
  %1367 = load i32, i32* %31, align 4
  %1368 = load i32, i32* %67, align 4
  %1369 = sub nsw i32 %1367, %1368
  br label %1371

; <label>:1370:                                   ; preds = %1357
  br label %1371

; <label>:1371:                                   ; preds = %1370, %1366
  %1372 = phi i32 [ %1369, %1366 ], [ 48, %1370 ]
  %1373 = sext i32 %1372 to i64
  %1374 = call i32 @addstr(i8* %1361, i64 %1373, i8** %24, i64* %25)
  %1375 = icmp slt i32 %1374, 0
  br i1 %1375, label %1376, label %1377

; <label>:1376:                                   ; preds = %1371
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1377:                                   ; preds = %1371
  br label %1378

; <label>:1378:                                   ; preds = %1377
  br label %1379

; <label>:1379:                                   ; preds = %1378
  %1380 = load i32, i32* %67, align 4
  %1381 = add nsw i32 %1380, 48
  store i32 %1381, i32* %67, align 4
  br label %1343

; <label>:1382:                                   ; preds = %1343
  %1383 = load i32, i32* %31, align 4
  %1384 = icmp sgt i32 %1383, 15
  br i1 %1384, label %1385, label %1392

; <label>:1385:                                   ; preds = %1382
  br label %1386

; <label>:1386:                                   ; preds = %1385
  %1387 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.492, i32 0, i32 0), i64 2, i8** %24, i64* %25)
  %1388 = icmp slt i32 %1387, 0
  br i1 %1388, label %1389, label %1390

; <label>:1389:                                   ; preds = %1386
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1390:                                   ; preds = %1386
  br label %1391

; <label>:1391:                                   ; preds = %1390
  br label %1392

; <label>:1392:                                   ; preds = %1391, %1382
  br label %1393

; <label>:1393:                                   ; preds = %1392, %1315
  br label %1433

; <label>:1394:                                   ; preds = %202
  br label %1395

; <label>:1395:                                   ; preds = %1394
  %1396 = load i8*, i8** %14, align 8
  %1397 = load i64, i64* %15, align 8
  %1398 = load i8*, i8** %23, align 8
  %1399 = call i32 @addname(i8* %1396, i64 %1397, i8** %20, i8* %1398, i8** %24, i64* %25)
  store i32 %1399, i32* %31, align 4
  %1400 = icmp slt i32 %1399, 0
  br i1 %1400, label %1401, label %1402

; <label>:1401:                                   ; preds = %1395
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1402:                                   ; preds = %1395
  br label %1403

; <label>:1403:                                   ; preds = %1402
  br label %1404

; <label>:1404:                                   ; preds = %1403
  %1405 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.484, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %1406 = icmp slt i32 %1405, 0
  br i1 %1406, label %1407, label %1408

; <label>:1407:                                   ; preds = %1404
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1408:                                   ; preds = %1404
  br label %1409

; <label>:1409:                                   ; preds = %1408
  %1410 = load i8*, i8** %20, align 8
  %1411 = getelementptr inbounds i8, i8* %1410, i64 8
  store i8* %1411, i8** %20, align 8
  %1412 = load i8*, i8** %20, align 8
  %1413 = call i32 @__ns_get16(i8* %1412)
  store i32 %1413, i32* %73, align 4
  %1414 = load i8*, i8** %20, align 8
  %1415 = getelementptr inbounds i8, i8* %1414, i64 2
  store i8* %1415, i8** %20, align 8
  %1416 = load i32, i32* %73, align 4
  %1417 = load i8*, i8** %20, align 8
  %1418 = sext i32 %1416 to i64
  %1419 = getelementptr inbounds i8, i8* %1417, i64 %1418
  store i8* %1419, i8** %20, align 8
  %1420 = load i8*, i8** %20, align 8
  %1421 = call i32 @__ns_get16(i8* %1420)
  store i32 %1421, i32* %73, align 4
  %1422 = load i8*, i8** %20, align 8
  %1423 = getelementptr inbounds i8, i8* %1422, i64 2
  store i8* %1423, i8** %20, align 8
  %1424 = load i8*, i8** %24, align 8
  %1425 = load i8*, i8** %20, align 8
  %1426 = call i32 @__ns_get16(i8* %1425)
  %1427 = call i32 (i8*, i8*, ...) @sprintf(i8* %1424, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.509, i32 0, i32 0), i32 %1426) #9
  %1428 = load i8*, i8** %20, align 8
  %1429 = getelementptr inbounds i8, i8* %1428, i64 2
  store i8* %1429, i8** %20, align 8
  %1430 = load i8*, i8** %24, align 8
  %1431 = call i64 @strlen(i8* %1430) #11
  call void @addlen(i64 %1431, i8** %24, i64* %25)
  br label %1433

; <label>:1432:                                   ; preds = %202
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30.510, i32 0, i32 0), i8** %29, align 8
  br label %1441

; <label>:1433:                                   ; preds = %1409, %1393, %1264, %1209, %1027, %921, %834, %809, %767, %660, %641, %636, %621, %583, %570, %523, %491, %259, %224, %208
  %1434 = load i8*, i8** %24, align 8
  %1435 = load i8*, i8** %26, align 8
  %1436 = ptrtoint i8* %1434 to i64
  %1437 = ptrtoint i8* %1435 to i64
  %1438 = sub i64 %1436, %1437
  %1439 = trunc i64 %1438 to i32
  store i32 %1439, i32* %13, align 4
  br label %1612

; <label>:1440:                                   ; preds = %1329, %1158, %1070, %1031, %965, %925, %838, %771, %747, %721, %699, %664, %640, %604, %582, %527, %495, %301, %258, %236, %207
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31.511, i32 0, i32 0), i8** %29, align 8
  br label %1441

; <label>:1441:                                   ; preds = %1440, %1432
  %1442 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1443 = load i8*, i8** %29, align 8
  %1444 = call i32 (i8*, i8*, ...) @sprintf(i8* %1442, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32.512, i32 0, i32 0), i8* %1443) #9
  %1445 = sext i32 %1444 to i64
  %1446 = trunc i64 %1445 to i32
  store i32 %1446, i32* %31, align 4
  br label %1447

; <label>:1447:                                   ; preds = %1441
  %1448 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1449 = load i32, i32* %31, align 4
  %1450 = sext i32 %1449 to i64
  %1451 = call i32 @addstr(i8* %1448, i64 %1450, i8** %24, i64* %25)
  %1452 = icmp slt i32 %1451, 0
  br i1 %1452, label %1453, label %1454

; <label>:1453:                                   ; preds = %1447
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1454:                                   ; preds = %1447
  br label %1455

; <label>:1455:                                   ; preds = %1454
  br label %1456

; <label>:1456:                                   ; preds = %1600, %1455
  %1457 = load i8*, i8** %20, align 8
  %1458 = load i8*, i8** %27, align 8
  %1459 = icmp ult i8* %1457, %1458
  br i1 %1459, label %1460, label %1605

; <label>:1460:                                   ; preds = %1456
  %1461 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  store i8* %1461, i8** %76, align 8
  %1462 = load i8*, i8** %76, align 8
  %1463 = call i32 (i8*, i8*, ...) @sprintf(i8* %1462, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.513, i32 0, i32 0)) #9
  %1464 = sext i32 %1463 to i64
  %1465 = load i8*, i8** %76, align 8
  %1466 = getelementptr inbounds i8, i8* %1465, i64 %1464
  store i8* %1466, i8** %76, align 8
  store i32 0, i32* %28, align 4
  %1467 = load i8*, i8** %27, align 8
  %1468 = load i8*, i8** %20, align 8
  %1469 = ptrtoint i8* %1467 to i64
  %1470 = ptrtoint i8* %1468 to i64
  %1471 = sub i64 %1469, %1470
  %1472 = icmp slt i64 16, %1471
  br i1 %1472, label %1473, label %1474

; <label>:1473:                                   ; preds = %1460
  br label %1480

; <label>:1474:                                   ; preds = %1460
  %1475 = load i8*, i8** %27, align 8
  %1476 = load i8*, i8** %20, align 8
  %1477 = ptrtoint i8* %1475 to i64
  %1478 = ptrtoint i8* %1476 to i64
  %1479 = sub i64 %1477, %1478
  br label %1480

; <label>:1480:                                   ; preds = %1474, %1473
  %1481 = phi i64 [ 16, %1473 ], [ %1479, %1474 ]
  %1482 = trunc i64 %1481 to i32
  store i32 %1482, i32* %74, align 4
  store i32 0, i32* %75, align 4
  br label %1483

; <label>:1483:                                   ; preds = %1499, %1480
  %1484 = load i32, i32* %75, align 4
  %1485 = load i32, i32* %74, align 4
  %1486 = icmp slt i32 %1484, %1485
  br i1 %1486, label %1487, label %1502

; <label>:1487:                                   ; preds = %1483
  %1488 = load i8*, i8** %76, align 8
  %1489 = load i8*, i8** %20, align 8
  %1490 = load i32, i32* %75, align 4
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds i8, i8* %1489, i64 %1491
  %1493 = load i8, i8* %1492, align 1
  %1494 = zext i8 %1493 to i32
  %1495 = call i32 (i8*, i8*, ...) @sprintf(i8* %1488, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34.514, i32 0, i32 0), i32 %1494) #9
  %1496 = sext i32 %1495 to i64
  %1497 = load i8*, i8** %76, align 8
  %1498 = getelementptr inbounds i8, i8* %1497, i64 %1496
  store i8* %1498, i8** %76, align 8
  br label %1499

; <label>:1499:                                   ; preds = %1487
  %1500 = load i32, i32* %75, align 4
  %1501 = add nsw i32 %1500, 1
  store i32 %1501, i32* %75, align 4
  br label %1483

; <label>:1502:                                   ; preds = %1483
  br label %1503

; <label>:1503:                                   ; preds = %1502
  %1504 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1505 = load i8*, i8** %76, align 8
  %1506 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1507 = ptrtoint i8* %1505 to i64
  %1508 = ptrtoint i8* %1506 to i64
  %1509 = sub i64 %1507, %1508
  %1510 = call i32 @addstr(i8* %1504, i64 %1509, i8** %24, i64* %25)
  %1511 = icmp slt i32 %1510, 0
  br i1 %1511, label %1512, label %1513

; <label>:1512:                                   ; preds = %1503
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1513:                                   ; preds = %1503
  br label %1514

; <label>:1514:                                   ; preds = %1513
  %1515 = load i32, i32* %74, align 4
  %1516 = icmp slt i32 %1515, 16
  br i1 %1516, label %1517, label %1537

; <label>:1517:                                   ; preds = %1514
  br label %1518

; <label>:1518:                                   ; preds = %1517
  %1519 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.500, i32 0, i32 0), i64 1, i8** %24, i64* %25)
  %1520 = icmp slt i32 %1519, 0
  br i1 %1520, label %1521, label %1522

; <label>:1521:                                   ; preds = %1518
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1522:                                   ; preds = %1518
  br label %1523

; <label>:1523:                                   ; preds = %1522
  br label %1524

; <label>:1524:                                   ; preds = %1523
  %1525 = load i8*, i8** %76, align 8
  %1526 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1527 = ptrtoint i8* %1525 to i64
  %1528 = ptrtoint i8* %1526 to i64
  %1529 = sub i64 %1527, %1528
  %1530 = add nsw i64 %1529, 1
  %1531 = load i32, i32* %28, align 4
  %1532 = call i32 @addtab(i64 %1530, i64 48, i32 %1531, i8** %24, i64* %25)
  %1533 = icmp slt i32 %1532, 0
  br i1 %1533, label %1534, label %1535

; <label>:1534:                                   ; preds = %1524
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1535:                                   ; preds = %1524
  br label %1536

; <label>:1536:                                   ; preds = %1535
  br label %1537

; <label>:1537:                                   ; preds = %1536, %1514
  %1538 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  store i8* %1538, i8** %76, align 8
  %1539 = load i8*, i8** %76, align 8
  %1540 = call i32 (i8*, i8*, ...) @sprintf(i8* %1539, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.515, i32 0, i32 0)) #9
  %1541 = sext i32 %1540 to i64
  %1542 = load i8*, i8** %76, align 8
  %1543 = getelementptr inbounds i8, i8* %1542, i64 %1541
  store i8* %1543, i8** %76, align 8
  store i32 0, i32* %75, align 4
  br label %1544

; <label>:1544:                                   ; preds = %1585, %1537
  %1545 = load i32, i32* %75, align 4
  %1546 = load i32, i32* %74, align 4
  %1547 = icmp slt i32 %1545, %1546
  br i1 %1547, label %1548, label %1588

; <label>:1548:                                   ; preds = %1544
  %1549 = load i8*, i8** %20, align 8
  %1550 = load i32, i32* %75, align 4
  %1551 = sext i32 %1550 to i64
  %1552 = getelementptr inbounds i8, i8* %1549, i64 %1551
  %1553 = load i8, i8* %1552, align 1
  %1554 = zext i8 %1553 to i32
  %1555 = and i32 %1554, -128
  %1556 = icmp eq i32 %1555, 0
  br i1 %1556, label %1557, label %1579

; <label>:1557:                                   ; preds = %1548
  %1558 = call i16** @__ctype_b_loc() #12
  %1559 = load i16*, i16** %1558, align 8
  %1560 = load i8*, i8** %20, align 8
  %1561 = load i32, i32* %75, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = getelementptr inbounds i8, i8* %1560, i64 %1562
  %1564 = load i8, i8* %1563, align 1
  %1565 = zext i8 %1564 to i32
  %1566 = sext i32 %1565 to i64
  %1567 = getelementptr inbounds i16, i16* %1559, i64 %1566
  %1568 = load i16, i16* %1567, align 2
  %1569 = zext i16 %1568 to i32
  %1570 = and i32 %1569, 16384
  %1571 = icmp ne i32 %1570, 0
  br i1 %1571, label %1572, label %1579

; <label>:1572:                                   ; preds = %1557
  %1573 = load i8*, i8** %20, align 8
  %1574 = load i32, i32* %75, align 4
  %1575 = sext i32 %1574 to i64
  %1576 = getelementptr inbounds i8, i8* %1573, i64 %1575
  %1577 = load i8, i8* %1576, align 1
  %1578 = zext i8 %1577 to i32
  br label %1580

; <label>:1579:                                   ; preds = %1557, %1548
  br label %1580

; <label>:1580:                                   ; preds = %1579, %1572
  %1581 = phi i32 [ %1578, %1572 ], [ 46, %1579 ]
  %1582 = trunc i32 %1581 to i8
  %1583 = load i8*, i8** %76, align 8
  %1584 = getelementptr inbounds i8, i8* %1583, i32 1
  store i8* %1584, i8** %76, align 8
  store i8 %1582, i8* %1583, align 1
  br label %1585

; <label>:1585:                                   ; preds = %1580
  %1586 = load i32, i32* %75, align 4
  %1587 = add nsw i32 %1586, 1
  store i32 %1587, i32* %75, align 4
  br label %1544

; <label>:1588:                                   ; preds = %1544
  br label %1589

; <label>:1589:                                   ; preds = %1588
  %1590 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1591 = load i8*, i8** %76, align 8
  %1592 = getelementptr inbounds [100 x i8], [100 x i8]* %30, i32 0, i32 0
  %1593 = ptrtoint i8* %1591 to i64
  %1594 = ptrtoint i8* %1592 to i64
  %1595 = sub i64 %1593, %1594
  %1596 = call i32 @addstr(i8* %1590, i64 %1595, i8** %24, i64* %25)
  %1597 = icmp slt i32 %1596, 0
  br i1 %1597, label %1598, label %1599

; <label>:1598:                                   ; preds = %1589
  store i32 -1, i32* %13, align 4
  br label %1612

; <label>:1599:                                   ; preds = %1589
  br label %1600

; <label>:1600:                                   ; preds = %1599
  %1601 = load i32, i32* %74, align 4
  %1602 = load i8*, i8** %20, align 8
  %1603 = sext i32 %1601 to i64
  %1604 = getelementptr inbounds i8, i8* %1602, i64 %1603
  store i8* %1604, i8** %20, align 8
  br label %1456

; <label>:1605:                                   ; preds = %1456
  %1606 = load i8*, i8** %24, align 8
  %1607 = load i8*, i8** %26, align 8
  %1608 = ptrtoint i8* %1606 to i64
  %1609 = ptrtoint i8* %1607 to i64
  %1610 = sub i64 %1608, %1609
  %1611 = trunc i64 %1610 to i32
  store i32 %1611, i32* %13, align 4
  br label %1612

; <label>:1612:                                   ; preds = %1605, %1598, %1534, %1521, %1512, %1453, %1433, %1407, %1401, %1389, %1376, %1354, %1337, %1313, %1291, %1257, %1217, %1206, %1193, %1171, %1151, %1134, %1125, %1107, %1088, %1063, %1024, %1011, %989, %973, %952, %919, %901, %886, %861, %832, %823, %817, %807, %798, %765, %756, %743, %738, %730, %716, %708, %694, %686, %658, %634, %617, %599, %577, %568, %559, %553, %544, %521, %512, %489, %483, %474, %466, %457, %447, %441, %430, %421, %411, %405, %394, %385, %375, %369, %358, %349, %339, %333, %324, %310, %292, %286, %277, %271, %253, %245, %231, %222, %200, %189, %170, %159, %147, %116, %106, %92
  %1613 = load i32, i32* %13, align 4
  ret i32 %1613
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @addstr(i8*, i64, i8**, i64*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i64*, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8** %2, i8*** %8, align 8
  store i64* %3, i64** %9, align 8
  %10 = load i64, i64* %7, align 8
  %11 = load i64*, i64** %9, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %4
  %15 = call i32* @__errno_location() #12
  store i32 28, i32* %15, align 4
  store i32 -1, i32* %5, align 4
  br label %26

; <label>:16:                                     ; preds = %4
  %17 = load i8**, i8*** %8, align 8
  %18 = load i8*, i8** %17, align 8
  %19 = load i8*, i8** %6, align 8
  %20 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 %20, i1 false)
  %21 = load i64, i64* %7, align 8
  %22 = load i8**, i8*** %8, align 8
  %23 = load i64*, i64** %9, align 8
  call void @addlen(i64 %21, i8** %22, i64* %23)
  %24 = load i8**, i8*** %8, align 8
  %25 = load i8*, i8** %24, align 8
  store i8 0, i8* %25, align 1
  store i32 0, i32* %5, align 4
  br label %26

; <label>:26:                                     ; preds = %16, %14
  %27 = load i32, i32* %5, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @prune_origin(i8*, i8*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %7 = load i8*, i8** %4, align 8
  store i8* %7, i8** %6, align 8
  br label %8

; <label>:8:                                      ; preds = %65, %2
  %9 = load i8*, i8** %4, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %66

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %5, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %33

; <label>:16:                                     ; preds = %13
  %17 = load i8*, i8** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call i32 @strcasecmp(i8* %17, i8* %18) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %16
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = ptrtoint i8* %22 to i64
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  %27 = load i8*, i8** %4, align 8
  %28 = load i8*, i8** %6, align 8
  %29 = icmp ugt i8* %27, %28
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = sub nsw i64 %26, %31
  store i64 %32, i64* %3, align 8
  br label %72

; <label>:33:                                     ; preds = %16, %13
  br label %34

; <label>:34:                                     ; preds = %62, %33
  %35 = load i8*, i8** %4, align 8
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %65

; <label>:39:                                     ; preds = %34
  %40 = load i8*, i8** %4, align 8
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp eq i32 %42, 92
  br i1 %43, label %44, label %53

; <label>:44:                                     ; preds = %39
  %45 = load i8*, i8** %4, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %4, align 8
  %47 = load i8*, i8** %4, align 8
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

; <label>:51:                                     ; preds = %44
  br label %65

; <label>:52:                                     ; preds = %44
  br label %62

; <label>:53:                                     ; preds = %39
  %54 = load i8*, i8** %4, align 8
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %56, 46
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %4, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %4, align 8
  br label %65

; <label>:61:                                     ; preds = %53
  br label %62

; <label>:62:                                     ; preds = %61, %52
  %63 = load i8*, i8** %4, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %4, align 8
  br label %34

; <label>:65:                                     ; preds = %58, %51, %34
  br label %8

; <label>:66:                                     ; preds = %8
  %67 = load i8*, i8** %4, align 8
  %68 = load i8*, i8** %6, align 8
  %69 = ptrtoint i8* %67 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = sub i64 %69, %70
  store i64 %71, i64* %3, align 8
  br label %72

; <label>:72:                                     ; preds = %66, %21
  %73 = load i64, i64* %3, align 8
  ret i64 %73
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @addtab(i64, i64, i32, i8**, i64*) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  store i64 %0, i64* %7, align 8
  store i64 %1, i64* %8, align 8
  store i32 %2, i32* %9, align 4
  store i8** %3, i8*** %10, align 8
  store i64* %4, i64** %11, align 8
  %15 = load i64*, i64** %11, align 8
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %12, align 8
  %17 = load i8**, i8*** %10, align 8
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %13, align 8
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %26, label %21

; <label>:21:                                     ; preds = %5
  %22 = load i64, i64* %7, align 8
  %23 = load i64, i64* %8, align 8
  %24 = sub i64 %23, 1
  %25 = icmp uge i64 %22, %24
  br i1 %25, label %26, label %35

; <label>:26:                                     ; preds = %21, %5
  br label %27

; <label>:27:                                     ; preds = %26
  %28 = load i8**, i8*** %10, align 8
  %29 = load i64*, i64** %11, align 8
  %30 = call i32 @addstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41.521, i32 0, i32 0), i64 2, i8** %28, i64* %29)
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %27
  store i32 -1, i32* %6, align 4
  br label %62

; <label>:33:                                     ; preds = %27
  br label %34

; <label>:34:                                     ; preds = %33
  store i32 1, i32* %9, align 4
  br label %60

; <label>:35:                                     ; preds = %21
  %36 = load i64, i64* %8, align 8
  %37 = load i64, i64* %7, align 8
  %38 = sub i64 %36, %37
  %39 = sub i64 %38, 1
  %40 = udiv i64 %39, 8
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %14, align 4
  br label %42

; <label>:42:                                     ; preds = %56, %35
  %43 = load i32, i32* %14, align 4
  %44 = icmp sge i32 %43, 0
  br i1 %44, label %45, label %59

; <label>:45:                                     ; preds = %42
  %46 = load i8**, i8*** %10, align 8
  %47 = load i64*, i64** %11, align 8
  %48 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42.522, i32 0, i32 0), i64 1, i8** %46, i64* %47)
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %55

; <label>:50:                                     ; preds = %45
  %51 = load i64, i64* %12, align 8
  %52 = load i64*, i64** %11, align 8
  store i64 %51, i64* %52, align 8
  %53 = load i8*, i8** %13, align 8
  %54 = load i8**, i8*** %10, align 8
  store i8* %53, i8** %54, align 8
  store i32 -1, i32* %6, align 4
  br label %62

; <label>:55:                                     ; preds = %45
  br label %56

; <label>:56:                                     ; preds = %55
  %57 = load i32, i32* %14, align 4
  %58 = add nsw i32 %57, -1
  store i32 %58, i32* %14, align 4
  br label %42

; <label>:59:                                     ; preds = %42
  store i32 0, i32* %9, align 4
  br label %60

; <label>:60:                                     ; preds = %59, %34
  %61 = load i32, i32* %9, align 4
  store i32 %61, i32* %6, align 4
  br label %62

; <label>:62:                                     ; preds = %60, %50, %32
  %63 = load i32, i32* %6, align 4
  ret i32 %63
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @addlen(i64, i8**, i64*) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i64*, align 8
  store i64 %0, i64* %4, align 8
  store i8** %1, i8*** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64, i64* %4, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ule i64 %7, %9
  br i1 %10, label %13, label %11

; <label>:11:                                     ; preds = %3
  %12 = load void (i8*, i32, i32, i8*, i32)*, void (i8*, i32, i32, i8*, i32)** @__assertion_failed, align 8
  call void %12(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39.519, i32 0, i32 0), i32 772, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40.520, i32 0, i32 0), i32 0)
  br label %13

; <label>:13:                                     ; preds = %11, %3
  %14 = phi i1 [ true, %3 ], [ false, %11 ]
  %15 = zext i1 %14 to i32
  %16 = load i64, i64* %4, align 8
  %17 = load i8**, i8*** %5, align 8
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %16
  store i8* %19, i8** %17, align 8
  %20 = load i64, i64* %4, align 8
  %21 = load i64*, i64** %6, align 8
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %20
  store i64 %23, i64* %21, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @addname(i8*, i64, i8**, i8*, i8**, i64*) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8** %2, i8*** %10, align 8
  store i8* %3, i8** %11, align 8
  store i8** %4, i8*** %12, align 8
  store i64* %5, i64** %13, align 8
  %18 = load i64*, i64** %13, align 8
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %15, align 8
  %20 = load i8**, i8*** %12, align 8
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %16, align 8
  %22 = load i8*, i8** %8, align 8
  %23 = load i8*, i8** %8, align 8
  %24 = load i64, i64* %9, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = load i8**, i8*** %10, align 8
  %27 = load i8*, i8** %26, align 8
  %28 = load i8**, i8*** %12, align 8
  %29 = load i8*, i8** %28, align 8
  %30 = load i64*, i64** %13, align 8
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = call i32 @__dn_expand(i8* %22, i8* %25, i8* %27, i8* %29, i32 %32)
  store i32 %33, i32* %17, align 4
  %34 = load i32, i32* %17, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %6
  br label %120

; <label>:37:                                     ; preds = %6
  %38 = load i8**, i8*** %12, align 8
  %39 = load i8*, i8** %38, align 8
  %40 = load i8*, i8** %11, align 8
  %41 = call i64 @prune_origin(i8* %39, i8* %40)
  store i64 %41, i64* %14, align 8
  %42 = load i8*, i8** %11, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %58, label %44

; <label>:44:                                     ; preds = %37
  %45 = load i8*, i8** %11, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

; <label>:50:                                     ; preds = %44
  %51 = load i8**, i8*** %12, align 8
  %52 = load i8*, i8** %51, align 8
  %53 = load i64, i64* %14, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %87

; <label>:58:                                     ; preds = %50, %44, %37
  %59 = load i64, i64* %14, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %70, label %61

; <label>:61:                                     ; preds = %58
  %62 = load i8**, i8*** %12, align 8
  %63 = load i8*, i8** %62, align 8
  %64 = load i64, i64* %14, align 8
  %65 = sub i64 %64, 1
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = icmp ne i32 %68, 46
  br i1 %69, label %70, label %87

; <label>:70:                                     ; preds = %61, %58
  %71 = load i64, i64* %14, align 8
  %72 = add i64 %71, 2
  %73 = load i64*, i64** %13, align 8
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %72, %74
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %70
  br label %120

; <label>:77:                                     ; preds = %70
  %78 = load i8**, i8*** %12, align 8
  %79 = load i8*, i8** %78, align 8
  %80 = load i64, i64* %14, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %14, align 8
  %82 = getelementptr inbounds i8, i8* %79, i64 %80
  store i8 46, i8* %82, align 1
  %83 = load i8**, i8*** %12, align 8
  %84 = load i8*, i8** %83, align 8
  %85 = load i64, i64* %14, align 8
  %86 = getelementptr inbounds i8, i8* %84, i64 %85
  store i8 0, i8* %86, align 1
  br label %87

; <label>:87:                                     ; preds = %77, %61, %50
  %88 = load i64, i64* %14, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %107

; <label>:90:                                     ; preds = %87
  %91 = load i64, i64* %14, align 8
  %92 = add i64 %91, 2
  %93 = load i64*, i64** %13, align 8
  %94 = load i64, i64* %93, align 8
  %95 = icmp ugt i64 %92, %94
  br i1 %95, label %96, label %97

; <label>:96:                                     ; preds = %90
  br label %120

; <label>:97:                                     ; preds = %90
  %98 = load i8**, i8*** %12, align 8
  %99 = load i8*, i8** %98, align 8
  %100 = load i64, i64* %14, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %14, align 8
  %102 = getelementptr inbounds i8, i8* %99, i64 %100
  store i8 64, i8* %102, align 1
  %103 = load i8**, i8*** %12, align 8
  %104 = load i8*, i8** %103, align 8
  %105 = load i64, i64* %14, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  store i8 0, i8* %106, align 1
  br label %107

; <label>:107:                                    ; preds = %97, %87
  %108 = load i32, i32* %17, align 4
  %109 = load i8**, i8*** %10, align 8
  %110 = load i8*, i8** %109, align 8
  %111 = sext i32 %108 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  store i8* %112, i8** %109, align 8
  %113 = load i64, i64* %14, align 8
  %114 = load i8**, i8*** %12, align 8
  %115 = load i64*, i64** %13, align 8
  call void @addlen(i64 %113, i8** %114, i64* %115)
  %116 = load i8**, i8*** %12, align 8
  %117 = load i8*, i8** %116, align 8
  store i8 0, i8* %117, align 1
  %118 = load i64, i64* %14, align 8
  %119 = trunc i64 %118 to i32
  store i32 %119, i32* %7, align 4
  br label %126

; <label>:120:                                    ; preds = %96, %76, %36
  %121 = call i32* @__errno_location() #12
  store i32 28, i32* %121, align 4
  %122 = load i8*, i8** %16, align 8
  %123 = load i8**, i8*** %12, align 8
  store i8* %122, i8** %123, align 8
  %124 = load i64, i64* %15, align 8
  %125 = load i64*, i64** %13, align 8
  store i64 %124, i64* %125, align 8
  store i32 -1, i32* %7, align 4
  br label %126

; <label>:126:                                    ; preds = %120, %107
  %127 = load i32, i32* %7, align 4
  ret i32 %127
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @charstr(i8*, i8*, i8**, i64*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i64* %3, i64** %9, align 8
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %10, align 8
  %15 = load i64*, i64** %9, align 8
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %11, align 8
  %17 = load i8**, i8*** %8, align 8
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %12, align 8
  %19 = load i8**, i8*** %8, align 8
  %20 = load i64*, i64** %9, align 8
  %21 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36.516, i32 0, i32 0), i64 1, i8** %19, i64* %20)
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %4
  br label %84

; <label>:24:                                     ; preds = %4
  %25 = load i8*, i8** %6, align 8
  %26 = load i8*, i8** %7, align 8
  %27 = icmp ult i8* %25, %26
  br i1 %27, label %28, label %71

; <label>:28:                                     ; preds = %24
  %29 = load i8*, i8** %6, align 8
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  store i32 %31, i32* %13, align 4
  %32 = load i8*, i8** %6, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  %34 = load i32, i32* %13, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = load i8*, i8** %7, align 8
  %38 = icmp ule i8* %36, %37
  br i1 %38, label %39, label %70

; <label>:39:                                     ; preds = %28
  %40 = load i8*, i8** %6, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %6, align 8
  br label %42

; <label>:42:                                     ; preds = %66, %39
  %43 = load i32, i32* %13, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %13, align 4
  %45 = icmp sgt i32 %43, 0
  br i1 %45, label %46, label %69

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %6, align 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = call i8* @strchr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37.517, i32 0, i32 0), i32 %49) #11
  %51 = icmp ne i8* %50, null
  br i1 %51, label %52, label %59

; <label>:52:                                     ; preds = %46
  %53 = load i8**, i8*** %8, align 8
  %54 = load i64*, i64** %9, align 8
  %55 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38.518, i32 0, i32 0), i64 1, i8** %53, i64* %54)
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %58

; <label>:57:                                     ; preds = %52
  br label %84

; <label>:58:                                     ; preds = %52
  br label %59

; <label>:59:                                     ; preds = %58, %46
  %60 = load i8*, i8** %6, align 8
  %61 = load i8**, i8*** %8, align 8
  %62 = load i64*, i64** %9, align 8
  %63 = call i32 @addstr(i8* %60, i64 1, i8** %61, i64* %62)
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %65, label %66

; <label>:65:                                     ; preds = %59
  br label %84

; <label>:66:                                     ; preds = %59
  %67 = load i8*, i8** %6, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %6, align 8
  br label %42

; <label>:69:                                     ; preds = %42
  br label %70

; <label>:70:                                     ; preds = %69, %28
  br label %71

; <label>:71:                                     ; preds = %70, %24
  %72 = load i8**, i8*** %8, align 8
  %73 = load i64*, i64** %9, align 8
  %74 = call i32 @addstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36.516, i32 0, i32 0), i64 1, i8** %72, i64* %73)
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %71
  br label %84

; <label>:77:                                     ; preds = %71
  %78 = load i8*, i8** %6, align 8
  %79 = load i8*, i8** %10, align 8
  %80 = ptrtoint i8* %78 to i64
  %81 = ptrtoint i8* %79 to i64
  %82 = sub i64 %80, %81
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %5, align 4
  br label %90

; <label>:84:                                     ; preds = %76, %65, %57, %23
  %85 = call i32* @__errno_location() #12
  store i32 28, i32* %85, align 4
  %86 = load i8*, i8** %12, align 8
  %87 = load i8**, i8*** %8, align 8
  store i8* %86, i8** %87, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load i64*, i64** %9, align 8
  store i64 %88, i64* %89, align 8
  store i32 -1, i32* %5, align 4
  br label %90

; <label>:90:                                     ; preds = %84, %77
  %91 = load i32, i32* %5, align 4
  ret i32 %91
}

declare dso_local i32 @__b64_ntop(i8*, i64, i8*, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_get16(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  store i8* %5, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = zext i16 %9 to i32
  %11 = shl i32 %10, 8
  %12 = load i8*, i8** %4, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = zext i16 %15 to i32
  %17 = or i32 %11, %16
  store i32 %17, i32* %3, align 4
  %18 = load i8*, i8** %2, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 2
  store i8* %19, i8** %2, align 8
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__ns_get32(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  store i8* %5, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 24
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl i32 %14, 16
  %16 = or i32 %10, %15
  %17 = load i8*, i8** %4, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl i32 %20, 8
  %22 = or i32 %16, %21
  %23 = load i8*, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %22, %26
  %28 = zext i32 %27 to i64
  store i64 %28, i64* %3, align 8
  %29 = load i8*, i8** %2, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  store i8* %30, i8** %2, align 8
  %31 = load i64, i64* %3, align 8
  ret i64 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__ns_put16(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %7 = load i32, i32* %3, align 4
  %8 = trunc i32 %7 to i16
  store i16 %8, i16* %5, align 2
  %9 = load i8*, i8** %4, align 8
  store i8* %9, i8** %6, align 8
  %10 = load i16, i16* %5, align 2
  %11 = zext i16 %10 to i32
  %12 = ashr i32 %11, 8
  %13 = trunc i32 %12 to i8
  %14 = load i8*, i8** %6, align 8
  %15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %15, i8** %6, align 8
  store i8 %13, i8* %14, align 1
  %16 = load i16, i16* %5, align 2
  %17 = trunc i16 %16 to i8
  %18 = load i8*, i8** %6, align 8
  store i8 %17, i8* %18, align 1
  %19 = load i8*, i8** %4, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  store i8* %20, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__ns_put32(i64, i8*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i64, i64* %3, align 8
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* %5, align 4
  %9 = load i8*, i8** %4, align 8
  store i8* %9, i8** %6, align 8
  %10 = load i32, i32* %5, align 4
  %11 = lshr i32 %10, 24
  %12 = trunc i32 %11 to i8
  %13 = load i8*, i8** %6, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %14, i8** %6, align 8
  store i8 %12, i8* %13, align 1
  %15 = load i32, i32* %5, align 4
  %16 = lshr i32 %15, 16
  %17 = trunc i32 %16 to i8
  %18 = load i8*, i8** %6, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %6, align 8
  store i8 %17, i8* %18, align 1
  %20 = load i32, i32* %5, align 4
  %21 = lshr i32 %20, 8
  %22 = trunc i32 %21 to i8
  %23 = load i8*, i8** %6, align 8
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %6, align 8
  store i8 %22, i8* %23, align 1
  %25 = load i32, i32* %5, align 4
  %26 = trunc i32 %25 to i8
  %27 = load i8*, i8** %6, align 8
  store i8 %26, i8* %27, align 1
  %28 = load i8*, i8** %4, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  store i8* %29, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_format_ttl(i64, i8*, i64) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [50 x i8], align 16
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %8, align 8
  %19 = load i64, i64* %5, align 8
  %20 = urem i64 %19, 60
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %9, align 4
  %22 = load i64, i64* %5, align 8
  %23 = udiv i64 %22, 60
  store i64 %23, i64* %5, align 8
  %24 = load i64, i64* %5, align 8
  %25 = urem i64 %24, 60
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %10, align 4
  %27 = load i64, i64* %5, align 8
  %28 = udiv i64 %27, 60
  store i64 %28, i64* %5, align 8
  %29 = load i64, i64* %5, align 8
  %30 = urem i64 %29, 24
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %11, align 4
  %32 = load i64, i64* %5, align 8
  %33 = udiv i64 %32, 24
  store i64 %33, i64* %5, align 8
  %34 = load i64, i64* %5, align 8
  %35 = urem i64 %34, 7
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %12, align 4
  %37 = load i64, i64* %5, align 8
  %38 = udiv i64 %37, 7
  store i64 %38, i64* %5, align 8
  %39 = load i64, i64* %5, align 8
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %13, align 4
  store i64 0, i64* %5, align 8
  store i32 0, i32* %14, align 4
  %41 = load i32, i32* %13, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %52

; <label>:43:                                     ; preds = %3
  %44 = load i32, i32* %13, align 4
  %45 = call i32 @fmt1(i32 %44, i8 signext 87, i8** %6, i64* %7)
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %43
  store i32 -1, i32* %4, align 4
  br label %153

; <label>:48:                                     ; preds = %43
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* %14, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %14, align 4
  br label %52

; <label>:52:                                     ; preds = %49, %3
  %53 = load i32, i32* %12, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %64

; <label>:55:                                     ; preds = %52
  %56 = load i32, i32* %12, align 4
  %57 = call i32 @fmt1(i32 %56, i8 signext 68, i8** %6, i64* %7)
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i32 -1, i32* %4, align 4
  br label %153

; <label>:60:                                     ; preds = %55
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i32, i32* %14, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %14, align 4
  br label %64

; <label>:64:                                     ; preds = %61, %52
  %65 = load i32, i32* %11, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %76

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* %11, align 4
  %69 = call i32 @fmt1(i32 %68, i8 signext 72, i8** %6, i64* %7)
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %67
  store i32 -1, i32* %4, align 4
  br label %153

; <label>:72:                                     ; preds = %67
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i32, i32* %14, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %14, align 4
  br label %76

; <label>:76:                                     ; preds = %73, %64
  %77 = load i32, i32* %10, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %88

; <label>:79:                                     ; preds = %76
  %80 = load i32, i32* %10, align 4
  %81 = call i32 @fmt1(i32 %80, i8 signext 77, i8** %6, i64* %7)
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %79
  store i32 -1, i32* %4, align 4
  br label %153

; <label>:84:                                     ; preds = %79
  br label %85

; <label>:85:                                     ; preds = %84
  %86 = load i32, i32* %14, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %14, align 4
  br label %88

; <label>:88:                                     ; preds = %85, %76
  %89 = load i32, i32* %9, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %103, label %91

; <label>:91:                                     ; preds = %88
  %92 = load i32, i32* %13, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %112, label %94

; <label>:94:                                     ; preds = %91
  %95 = load i32, i32* %12, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %112, label %97

; <label>:97:                                     ; preds = %94
  %98 = load i32, i32* %11, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %112, label %100

; <label>:100:                                    ; preds = %97
  %101 = load i32, i32* %10, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %112, label %103

; <label>:103:                                    ; preds = %100, %88
  %104 = load i32, i32* %9, align 4
  %105 = call i32 @fmt1(i32 %104, i8 signext 83, i8** %6, i64* %7)
  %106 = icmp slt i32 %105, 0
  br i1 %106, label %107, label %108

; <label>:107:                                    ; preds = %103
  store i32 -1, i32* %4, align 4
  br label %153

; <label>:108:                                    ; preds = %103
  br label %109

; <label>:109:                                    ; preds = %108
  %110 = load i32, i32* %14, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %14, align 4
  br label %112

; <label>:112:                                    ; preds = %109, %100, %97, %94, %91
  %113 = load i32, i32* %14, align 4
  %114 = icmp sgt i32 %113, 1
  br i1 %114, label %115, label %146

; <label>:115:                                    ; preds = %112
  %116 = load i8*, i8** %8, align 8
  store i8* %116, i8** %16, align 8
  br label %117

; <label>:117:                                    ; preds = %142, %115
  %118 = load i8*, i8** %16, align 8
  %119 = load i8, i8* %118, align 1
  %120 = sext i8 %119 to i32
  store i32 %120, i32* %17, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %145

; <label>:122:                                    ; preds = %117
  %123 = load i32, i32* %17, align 4
  %124 = and i32 %123, -128
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %141

; <label>:126:                                    ; preds = %122
  %127 = call i16** @__ctype_b_loc() #12
  %128 = load i16*, i16** %127, align 8
  %129 = load i32, i32* %17, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i16, i16* %128, i64 %130
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = and i32 %133, 256
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %141

; <label>:136:                                    ; preds = %126
  %137 = load i32, i32* %17, align 4
  %138 = call i32 @tolower(i32 %137) #11
  %139 = trunc i32 %138 to i8
  %140 = load i8*, i8** %16, align 8
  store i8 %139, i8* %140, align 1
  br label %141

; <label>:141:                                    ; preds = %136, %126, %122
  br label %142

; <label>:142:                                    ; preds = %141
  %143 = load i8*, i8** %16, align 8
  %144 = getelementptr inbounds i8, i8* %143, i32 1
  store i8* %144, i8** %16, align 8
  br label %117

; <label>:145:                                    ; preds = %117
  br label %146

; <label>:146:                                    ; preds = %145, %112
  %147 = load i8*, i8** %6, align 8
  %148 = load i8*, i8** %8, align 8
  %149 = ptrtoint i8* %147 to i64
  %150 = ptrtoint i8* %148 to i64
  %151 = sub i64 %149, %150
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %4, align 4
  br label %153

; <label>:153:                                    ; preds = %146, %107, %83, %71, %59, %47
  %154 = load i32, i32* %4, align 4
  ret i32 %154
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fmt1(i32, i8 signext, i8**, i64*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8**, align 8
  %9 = alloca i64*, align 8
  %10 = alloca [50 x i8], align 16
  %11 = alloca i64, align 8
  store i32 %0, i32* %6, align 4
  store i8 %1, i8* %7, align 1
  store i8** %2, i8*** %8, align 8
  store i64* %3, i64** %9, align 8
  %12 = getelementptr inbounds [50 x i8], [50 x i8]* %10, i32 0, i32 0
  %13 = load i32, i32* %6, align 4
  %14 = load i8, i8* %7, align 1
  %15 = sext i8 %14 to i32
  %16 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.533, i32 0, i32 0), i32 %13, i32 %15) #9
  %17 = sext i32 %16 to i64
  store i64 %17, i64* %11, align 8
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %18, 1
  %20 = load i64*, i64** %9, align 8
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %19, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %4
  store i32 -1, i32* %5, align 4
  br label %37

; <label>:24:                                     ; preds = %4
  %25 = load i8**, i8*** %8, align 8
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* %10, i32 0, i32 0
  %28 = call i8* @strcpy(i8* %26, i8* %27) #9
  %29 = load i64, i64* %11, align 8
  %30 = load i8**, i8*** %8, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8* %32, i8** %30, align 8
  %33 = load i64, i64* %11, align 8
  %34 = load i64*, i64** %9, align 8
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %33
  store i64 %36, i64* %34, align 8
  store i32 0, i32* %5, align 4
  br label %37

; <label>:37:                                     ; preds = %24, %23
  %38 = load i32, i32* %5, align 4
  ret i32 %38
}

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_ntop(i8*, i8*, i64) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %13 = load i8*, i8** %5, align 8
  store i8* %13, i8** %8, align 8
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %9, align 8
  %15 = load i8*, i8** %6, align 8
  %16 = load i64, i64* %7, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  store i8* %17, i8** %10, align 8
  br label %18

; <label>:18:                                     ; preds = %132, %3
  %19 = load i8*, i8** %8, align 8
  %20 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = zext i8 %21 to i32
  store i32 %22, i32* %12, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %133

; <label>:24:                                     ; preds = %18
  %25 = load i32, i32* %12, align 4
  %26 = and i32 %25, 192
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %30

; <label>:28:                                     ; preds = %24
  %29 = call i32* @__errno_location() #12
  store i32 90, i32* %29, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:30:                                     ; preds = %24
  %31 = load i8*, i8** %9, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = icmp ne i8* %31, %32
  br i1 %33, label %34, label %43

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %9, align 8
  %36 = load i8*, i8** %10, align 8
  %37 = icmp uge i8* %35, %36
  br i1 %37, label %38, label %40

; <label>:38:                                     ; preds = %34
  %39 = call i32* @__errno_location() #12
  store i32 90, i32* %39, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:40:                                     ; preds = %34
  %41 = load i8*, i8** %9, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %9, align 8
  store i8 46, i8* %41, align 1
  br label %43

; <label>:43:                                     ; preds = %40, %30
  %44 = load i8*, i8** %9, align 8
  %45 = load i32, i32* %12, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = load i8*, i8** %10, align 8
  %49 = icmp uge i8* %47, %48
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %43
  %51 = call i32* @__errno_location() #12
  store i32 90, i32* %51, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:52:                                     ; preds = %43
  br label %53

; <label>:53:                                     ; preds = %129, %52
  %54 = load i32, i32* %12, align 4
  %55 = icmp ugt i32 %54, 0
  br i1 %55, label %56, label %132

; <label>:56:                                     ; preds = %53
  %57 = load i8*, i8** %8, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %8, align 8
  %59 = load i8, i8* %57, align 1
  store i8 %59, i8* %11, align 1
  %60 = load i8, i8* %11, align 1
  %61 = zext i8 %60 to i32
  %62 = call i32 @special(i32 %61)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %77

; <label>:64:                                     ; preds = %56
  %65 = load i8*, i8** %9, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  %67 = load i8*, i8** %10, align 8
  %68 = icmp uge i8* %66, %67
  br i1 %68, label %69, label %71

; <label>:69:                                     ; preds = %64
  %70 = call i32* @__errno_location() #12
  store i32 90, i32* %70, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:71:                                     ; preds = %64
  %72 = load i8*, i8** %9, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %9, align 8
  store i8 92, i8* %72, align 1
  %74 = load i8, i8* %11, align 1
  %75 = load i8*, i8** %9, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %9, align 8
  store i8 %74, i8* %75, align 1
  br label %128

; <label>:77:                                     ; preds = %56
  %78 = load i8, i8* %11, align 1
  %79 = zext i8 %78 to i32
  %80 = call i32 @printable(i32 %79)
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %117, label %82

; <label>:82:                                     ; preds = %77
  %83 = load i8*, i8** %9, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 3
  %85 = load i8*, i8** %10, align 8
  %86 = icmp uge i8* %84, %85
  br i1 %86, label %87, label %89

; <label>:87:                                     ; preds = %82
  %88 = call i32* @__errno_location() #12
  store i32 90, i32* %88, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:89:                                     ; preds = %82
  %90 = load i8*, i8** %9, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %9, align 8
  store i8 92, i8* %90, align 1
  %92 = load i8, i8* %11, align 1
  %93 = zext i8 %92 to i32
  %94 = sdiv i32 %93, 100
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [11 x i8], [11 x i8]* @digits, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = load i8*, i8** %9, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %9, align 8
  store i8 %97, i8* %98, align 1
  %100 = load i8, i8* %11, align 1
  %101 = zext i8 %100 to i32
  %102 = srem i32 %101, 100
  %103 = sdiv i32 %102, 10
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [11 x i8], [11 x i8]* @digits, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = load i8*, i8** %9, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %9, align 8
  store i8 %106, i8* %107, align 1
  %109 = load i8, i8* %11, align 1
  %110 = zext i8 %109 to i32
  %111 = srem i32 %110, 10
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [11 x i8], [11 x i8]* @digits, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = load i8*, i8** %9, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %9, align 8
  store i8 %114, i8* %115, align 1
  br label %127

; <label>:117:                                    ; preds = %77
  %118 = load i8*, i8** %9, align 8
  %119 = load i8*, i8** %10, align 8
  %120 = icmp uge i8* %118, %119
  br i1 %120, label %121, label %123

; <label>:121:                                    ; preds = %117
  %122 = call i32* @__errno_location() #12
  store i32 90, i32* %122, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:123:                                    ; preds = %117
  %124 = load i8, i8* %11, align 1
  %125 = load i8*, i8** %9, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %126, i8** %9, align 8
  store i8 %124, i8* %125, align 1
  br label %127

; <label>:127:                                    ; preds = %123, %89
  br label %128

; <label>:128:                                    ; preds = %127, %71
  br label %129

; <label>:129:                                    ; preds = %128
  %130 = load i32, i32* %12, align 4
  %131 = add i32 %130, -1
  store i32 %131, i32* %12, align 4
  br label %53

; <label>:132:                                    ; preds = %53
  br label %18

; <label>:133:                                    ; preds = %18
  %134 = load i8*, i8** %9, align 8
  %135 = load i8*, i8** %6, align 8
  %136 = icmp eq i8* %134, %135
  br i1 %136, label %137, label %146

; <label>:137:                                    ; preds = %133
  %138 = load i8*, i8** %9, align 8
  %139 = load i8*, i8** %10, align 8
  %140 = icmp uge i8* %138, %139
  br i1 %140, label %141, label %143

; <label>:141:                                    ; preds = %137
  %142 = call i32* @__errno_location() #12
  store i32 90, i32* %142, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:143:                                    ; preds = %137
  %144 = load i8*, i8** %9, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %9, align 8
  store i8 46, i8* %144, align 1
  br label %146

; <label>:146:                                    ; preds = %143, %133
  %147 = load i8*, i8** %9, align 8
  %148 = load i8*, i8** %10, align 8
  %149 = icmp uge i8* %147, %148
  br i1 %149, label %150, label %152

; <label>:150:                                    ; preds = %146
  %151 = call i32* @__errno_location() #12
  store i32 90, i32* %151, align 4
  store i32 -1, i32* %4, align 4
  br label %161

; <label>:152:                                    ; preds = %146
  %153 = load i8*, i8** %9, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %9, align 8
  store i8 0, i8* %153, align 1
  %155 = load i8*, i8** %9, align 8
  %156 = load i8*, i8** %6, align 8
  %157 = ptrtoint i8* %155 to i64
  %158 = ptrtoint i8* %156 to i64
  %159 = sub i64 %157, %158
  %160 = trunc i64 %159 to i32
  store i32 %160, i32* %4, align 4
  br label %161

; <label>:161:                                    ; preds = %152, %150, %141, %121, %87, %69, %50, %38, %28
  %162 = load i32, i32* %4, align 4
  ret i32 %162
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @special(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %6 [
    i32 34, label %5
    i32 46, label %5
    i32 59, label %5
    i32 92, label %5
    i32 64, label %5
    i32 36, label %5
  ]

; <label>:5:                                      ; preds = %1, %1, %1, %1, %1, %1
  store i32 1, i32* %2, align 4
  br label %7

; <label>:6:                                      ; preds = %1
  store i32 0, i32* %2, align 4
  br label %7

; <label>:7:                                      ; preds = %6, %5
  %8 = load i32, i32* %2, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @printable(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 32
  br i1 %4, label %5, label %8

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 127
  br label %8

; <label>:8:                                      ; preds = %5, %1
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_pton(i8*, i8*, i64) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 0, i32* %13, align 4
  %15 = load i8*, i8** %6, align 8
  store i8* %15, i8** %9, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = load i64, i64* %7, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  store i8* %18, i8** %10, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %20, i8** %9, align 8
  store i8* %19, i8** %8, align 8
  br label %21

; <label>:21:                                     ; preds = %163, %152, %89, %3
  %22 = load i8*, i8** %5, align 8
  %23 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %23, i8** %5, align 8
  %24 = load i8, i8* %22, align 1
  %25 = sext i8 %24 to i32
  store i32 %25, i32* %11, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %168

; <label>:27:                                     ; preds = %21
  %28 = load i32, i32* %13, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %86

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* %11, align 4
  %32 = call i8* @strchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @digits, i32 0, i32 0), i32 %31) #11
  store i8* %32, i8** %14, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %85

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %14, align 8
  %36 = ptrtoint i8* %35 to i64
  %37 = sub i64 %36, ptrtoint ([11 x i8]* @digits to i64)
  %38 = mul nsw i64 %37, 100
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %12, align 4
  %40 = load i8*, i8** %5, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %5, align 8
  %42 = load i8, i8* %40, align 1
  %43 = sext i8 %42 to i32
  store i32 %43, i32* %11, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

; <label>:45:                                     ; preds = %34
  %46 = load i32, i32* %11, align 4
  %47 = call i8* @strchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @digits, i32 0, i32 0), i32 %46) #11
  store i8* %47, i8** %14, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %51

; <label>:49:                                     ; preds = %45, %34
  %50 = call i32* @__errno_location() #12
  store i32 90, i32* %50, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:51:                                     ; preds = %45
  %52 = load i8*, i8** %14, align 8
  %53 = ptrtoint i8* %52 to i64
  %54 = sub i64 %53, ptrtoint ([11 x i8]* @digits to i64)
  %55 = mul nsw i64 %54, 10
  %56 = load i32, i32* %12, align 4
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %57, %55
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %12, align 4
  %60 = load i8*, i8** %5, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %5, align 8
  %62 = load i8, i8* %60, align 1
  %63 = sext i8 %62 to i32
  store i32 %63, i32* %11, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

; <label>:65:                                     ; preds = %51
  %66 = load i32, i32* %11, align 4
  %67 = call i8* @strchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @digits, i32 0, i32 0), i32 %66) #11
  store i8* %67, i8** %14, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71

; <label>:69:                                     ; preds = %65, %51
  %70 = call i32* @__errno_location() #12
  store i32 90, i32* %70, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:71:                                     ; preds = %65
  %72 = load i8*, i8** %14, align 8
  %73 = ptrtoint i8* %72 to i64
  %74 = sub i64 %73, ptrtoint ([11 x i8]* @digits to i64)
  %75 = load i32, i32* %12, align 4
  %76 = sext i32 %75 to i64
  %77 = add nsw i64 %76, %74
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %12, align 4
  %79 = load i32, i32* %12, align 4
  %80 = icmp sgt i32 %79, 255
  br i1 %80, label %81, label %83

; <label>:81:                                     ; preds = %71
  %82 = call i32* @__errno_location() #12
  store i32 90, i32* %82, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:83:                                     ; preds = %71
  %84 = load i32, i32* %12, align 4
  store i32 %84, i32* %11, align 4
  br label %85

; <label>:85:                                     ; preds = %83, %30
  store i32 0, i32* %13, align 4
  br label %157

; <label>:86:                                     ; preds = %27
  %87 = load i32, i32* %11, align 4
  %88 = icmp eq i32 %87, 92
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %86
  store i32 1, i32* %13, align 4
  br label %21

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* %11, align 4
  %92 = icmp eq i32 %91, 46
  br i1 %92, label %93, label %155

; <label>:93:                                     ; preds = %90
  %94 = load i8*, i8** %9, align 8
  %95 = load i8*, i8** %8, align 8
  %96 = ptrtoint i8* %94 to i64
  %97 = ptrtoint i8* %95 to i64
  %98 = sub i64 %96, %97
  %99 = sub nsw i64 %98, 1
  %100 = trunc i64 %99 to i32
  store i32 %100, i32* %11, align 4
  %101 = load i32, i32* %11, align 4
  %102 = and i32 %101, 192
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %106

; <label>:104:                                    ; preds = %93
  %105 = call i32* @__errno_location() #12
  store i32 90, i32* %105, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:106:                                    ; preds = %93
  %107 = load i8*, i8** %8, align 8
  %108 = load i8*, i8** %10, align 8
  %109 = icmp uge i8* %107, %108
  br i1 %109, label %110, label %112

; <label>:110:                                    ; preds = %106
  %111 = call i32* @__errno_location() #12
  store i32 90, i32* %111, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:112:                                    ; preds = %106
  %113 = load i32, i32* %11, align 4
  %114 = trunc i32 %113 to i8
  %115 = load i8*, i8** %8, align 8
  store i8 %114, i8* %115, align 1
  %116 = load i8*, i8** %5, align 8
  %117 = load i8, i8* %116, align 1
  %118 = sext i8 %117 to i32
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %142

; <label>:120:                                    ; preds = %112
  %121 = load i32, i32* %11, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %132

; <label>:123:                                    ; preds = %120
  %124 = load i8*, i8** %9, align 8
  %125 = load i8*, i8** %10, align 8
  %126 = icmp uge i8* %124, %125
  br i1 %126, label %127, label %129

; <label>:127:                                    ; preds = %123
  %128 = call i32* @__errno_location() #12
  store i32 90, i32* %128, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:129:                                    ; preds = %123
  %130 = load i8*, i8** %9, align 8
  %131 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %131, i8** %9, align 8
  store i8 0, i8* %130, align 1
  br label %132

; <label>:132:                                    ; preds = %129, %120
  %133 = load i8*, i8** %9, align 8
  %134 = load i8*, i8** %6, align 8
  %135 = ptrtoint i8* %133 to i64
  %136 = ptrtoint i8* %134 to i64
  %137 = sub i64 %135, %136
  %138 = icmp sgt i64 %137, 255
  br i1 %138, label %139, label %141

; <label>:139:                                    ; preds = %132
  %140 = call i32* @__errno_location() #12
  store i32 90, i32* %140, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:141:                                    ; preds = %132
  store i32 1, i32* %4, align 4
  br label %212

; <label>:142:                                    ; preds = %112
  %143 = load i32, i32* %11, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %150, label %145

; <label>:145:                                    ; preds = %142
  %146 = load i8*, i8** %5, align 8
  %147 = load i8, i8* %146, align 1
  %148 = sext i8 %147 to i32
  %149 = icmp eq i32 %148, 46
  br i1 %149, label %150, label %152

; <label>:150:                                    ; preds = %145, %142
  %151 = call i32* @__errno_location() #12
  store i32 90, i32* %151, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:152:                                    ; preds = %145
  %153 = load i8*, i8** %9, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %9, align 8
  store i8* %153, i8** %8, align 8
  br label %21

; <label>:155:                                    ; preds = %90
  br label %156

; <label>:156:                                    ; preds = %155
  br label %157

; <label>:157:                                    ; preds = %156, %85
  %158 = load i8*, i8** %9, align 8
  %159 = load i8*, i8** %10, align 8
  %160 = icmp uge i8* %158, %159
  br i1 %160, label %161, label %163

; <label>:161:                                    ; preds = %157
  %162 = call i32* @__errno_location() #12
  store i32 90, i32* %162, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:163:                                    ; preds = %157
  %164 = load i32, i32* %11, align 4
  %165 = trunc i32 %164 to i8
  %166 = load i8*, i8** %9, align 8
  %167 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %167, i8** %9, align 8
  store i8 %165, i8* %166, align 1
  br label %21

; <label>:168:                                    ; preds = %21
  %169 = load i8*, i8** %9, align 8
  %170 = load i8*, i8** %8, align 8
  %171 = ptrtoint i8* %169 to i64
  %172 = ptrtoint i8* %170 to i64
  %173 = sub i64 %171, %172
  %174 = sub nsw i64 %173, 1
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %11, align 4
  %176 = load i32, i32* %11, align 4
  %177 = and i32 %176, 192
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %179, label %181

; <label>:179:                                    ; preds = %168
  %180 = call i32* @__errno_location() #12
  store i32 90, i32* %180, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:181:                                    ; preds = %168
  %182 = load i8*, i8** %8, align 8
  %183 = load i8*, i8** %10, align 8
  %184 = icmp uge i8* %182, %183
  br i1 %184, label %185, label %187

; <label>:185:                                    ; preds = %181
  %186 = call i32* @__errno_location() #12
  store i32 90, i32* %186, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:187:                                    ; preds = %181
  %188 = load i32, i32* %11, align 4
  %189 = trunc i32 %188 to i8
  %190 = load i8*, i8** %8, align 8
  store i8 %189, i8* %190, align 1
  %191 = load i32, i32* %11, align 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %202

; <label>:193:                                    ; preds = %187
  %194 = load i8*, i8** %9, align 8
  %195 = load i8*, i8** %10, align 8
  %196 = icmp uge i8* %194, %195
  br i1 %196, label %197, label %199

; <label>:197:                                    ; preds = %193
  %198 = call i32* @__errno_location() #12
  store i32 90, i32* %198, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:199:                                    ; preds = %193
  %200 = load i8*, i8** %9, align 8
  %201 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %201, i8** %9, align 8
  store i8 0, i8* %200, align 1
  br label %202

; <label>:202:                                    ; preds = %199, %187
  %203 = load i8*, i8** %9, align 8
  %204 = load i8*, i8** %6, align 8
  %205 = ptrtoint i8* %203 to i64
  %206 = ptrtoint i8* %204 to i64
  %207 = sub i64 %205, %206
  %208 = icmp sgt i64 %207, 255
  br i1 %208, label %209, label %211

; <label>:209:                                    ; preds = %202
  %210 = call i32* @__errno_location() #12
  store i32 90, i32* %210, align 4
  store i32 -1, i32* %4, align 4
  br label %212

; <label>:211:                                    ; preds = %202
  store i32 0, i32* %4, align 4
  br label %212

; <label>:212:                                    ; preds = %211, %209, %197, %185, %179, %161, %150, %141, %139, %127, %110, %104, %81, %69, %49
  %213 = load i32, i32* %4, align 4
  ret i32 %213
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_unpack(i8*, i8*, i8*, i8*, i64) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  store i32 -1, i32* %17, align 4
  store i32 0, i32* %18, align 4
  %19 = load i8*, i8** %10, align 8
  store i8* %19, i8** %14, align 8
  %20 = load i8*, i8** %9, align 8
  store i8* %20, i8** %12, align 8
  %21 = load i8*, i8** %10, align 8
  %22 = load i64, i64* %11, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  store i8* %23, i8** %13, align 8
  %24 = load i8*, i8** %12, align 8
  %25 = load i8*, i8** %7, align 8
  %26 = icmp ult i8* %24, %25
  br i1 %26, label %31, label %27

; <label>:27:                                     ; preds = %5
  %28 = load i8*, i8** %12, align 8
  %29 = load i8*, i8** %8, align 8
  %30 = icmp uge i8* %28, %29
  br i1 %30, label %31, label %33

; <label>:31:                                     ; preds = %27, %5
  %32 = call i32* @__errno_location() #12
  store i32 90, i32* %32, align 4
  store i32 -1, i32* %6, align 4
  br label %149

; <label>:33:                                     ; preds = %27
  br label %34

; <label>:34:                                     ; preds = %135, %33
  %35 = load i8*, i8** %12, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %12, align 8
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  store i32 %38, i32* %15, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %136

; <label>:40:                                     ; preds = %34
  %41 = load i32, i32* %15, align 4
  %42 = and i32 %41, 192
  switch i32 %42, label %133 [
    i32 0, label %43
    i32 192, label %81
  ]

; <label>:43:                                     ; preds = %40
  %44 = load i8*, i8** %14, align 8
  %45 = load i32, i32* %15, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = load i8*, i8** %13, align 8
  %50 = icmp uge i8* %48, %49
  br i1 %50, label %58, label %51

; <label>:51:                                     ; preds = %43
  %52 = load i8*, i8** %12, align 8
  %53 = load i32, i32* %15, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = load i8*, i8** %8, align 8
  %57 = icmp uge i8* %55, %56
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %51, %43
  %59 = call i32* @__errno_location() #12
  store i32 90, i32* %59, align 4
  store i32 -1, i32* %6, align 4
  br label %149

; <label>:60:                                     ; preds = %51
  %61 = load i32, i32* %15, align 4
  %62 = add nsw i32 %61, 1
  %63 = load i32, i32* %18, align 4
  %64 = add nsw i32 %63, %62
  store i32 %64, i32* %18, align 4
  %65 = load i32, i32* %15, align 4
  %66 = trunc i32 %65 to i8
  %67 = load i8*, i8** %14, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %14, align 8
  store i8 %66, i8* %67, align 1
  %69 = load i8*, i8** %14, align 8
  %70 = load i8*, i8** %12, align 8
  %71 = load i32, i32* %15, align 4
  %72 = sext i32 %71 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %70, i64 %72, i1 false)
  %73 = load i32, i32* %15, align 4
  %74 = load i8*, i8** %14, align 8
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  store i8* %76, i8** %14, align 8
  %77 = load i32, i32* %15, align 4
  %78 = load i8*, i8** %12, align 8
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  store i8* %80, i8** %12, align 8
  br label %135

; <label>:81:                                     ; preds = %40
  %82 = load i8*, i8** %12, align 8
  %83 = load i8*, i8** %8, align 8
  %84 = icmp uge i8* %82, %83
  br i1 %84, label %85, label %87

; <label>:85:                                     ; preds = %81
  %86 = call i32* @__errno_location() #12
  store i32 90, i32* %86, align 4
  store i32 -1, i32* %6, align 4
  br label %149

; <label>:87:                                     ; preds = %81
  %88 = load i32, i32* %17, align 4
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %90, label %98

; <label>:90:                                     ; preds = %87
  %91 = load i8*, i8** %12, align 8
  %92 = load i8*, i8** %9, align 8
  %93 = ptrtoint i8* %91 to i64
  %94 = ptrtoint i8* %92 to i64
  %95 = sub i64 %93, %94
  %96 = add nsw i64 %95, 1
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %17, align 4
  br label %98

; <label>:98:                                     ; preds = %90, %87
  %99 = load i8*, i8** %7, align 8
  %100 = load i32, i32* %15, align 4
  %101 = and i32 %100, 63
  %102 = shl i32 %101, 8
  %103 = load i8*, i8** %12, align 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = and i32 %105, 255
  %107 = or i32 %102, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %99, i64 %108
  store i8* %109, i8** %12, align 8
  %110 = load i8*, i8** %12, align 8
  %111 = load i8*, i8** %7, align 8
  %112 = icmp ult i8* %110, %111
  br i1 %112, label %117, label %113

; <label>:113:                                    ; preds = %98
  %114 = load i8*, i8** %12, align 8
  %115 = load i8*, i8** %8, align 8
  %116 = icmp uge i8* %114, %115
  br i1 %116, label %117, label %119

; <label>:117:                                    ; preds = %113, %98
  %118 = call i32* @__errno_location() #12
  store i32 90, i32* %118, align 4
  store i32 -1, i32* %6, align 4
  br label %149

; <label>:119:                                    ; preds = %113
  %120 = load i32, i32* %18, align 4
  %121 = add nsw i32 %120, 2
  store i32 %121, i32* %18, align 4
  %122 = load i32, i32* %18, align 4
  %123 = sext i32 %122 to i64
  %124 = load i8*, i8** %8, align 8
  %125 = load i8*, i8** %7, align 8
  %126 = ptrtoint i8* %124 to i64
  %127 = ptrtoint i8* %125 to i64
  %128 = sub i64 %126, %127
  %129 = icmp sge i64 %123, %128
  br i1 %129, label %130, label %132

; <label>:130:                                    ; preds = %119
  %131 = call i32* @__errno_location() #12
  store i32 90, i32* %131, align 4
  store i32 -1, i32* %6, align 4
  br label %149

; <label>:132:                                    ; preds = %119
  br label %135

; <label>:133:                                    ; preds = %40
  %134 = call i32* @__errno_location() #12
  store i32 90, i32* %134, align 4
  store i32 -1, i32* %6, align 4
  br label %149

; <label>:135:                                    ; preds = %132, %60
  br label %34

; <label>:136:                                    ; preds = %34
  %137 = load i8*, i8** %14, align 8
  store i8 0, i8* %137, align 1
  %138 = load i32, i32* %17, align 4
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %147

; <label>:140:                                    ; preds = %136
  %141 = load i8*, i8** %12, align 8
  %142 = load i8*, i8** %9, align 8
  %143 = ptrtoint i8* %141 to i64
  %144 = ptrtoint i8* %142 to i64
  %145 = sub i64 %143, %144
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %17, align 4
  br label %147

; <label>:147:                                    ; preds = %140, %136
  %148 = load i32, i32* %17, align 4
  store i32 %148, i32* %6, align 4
  br label %149

; <label>:149:                                    ; preds = %147, %133, %130, %117, %85, %58, %31
  %150 = load i32, i32* %6, align 4
  ret i32 %150
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_pack(i8*, i8*, i32, i8**, i8**) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i8**, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8** %3, i8*** %10, align 8
  store i8** %4, i8*** %11, align 8
  %20 = load i8*, i8** %7, align 8
  store i8* %20, i8** %17, align 8
  %21 = load i8*, i8** %8, align 8
  store i8* %21, i8** %12, align 8
  %22 = load i8*, i8** %12, align 8
  %23 = load i32, i32* %9, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  store i8* %25, i8** %15, align 8
  store i8** null, i8*** %13, align 8
  store i8** null, i8*** %14, align 8
  %26 = load i8**, i8*** %10, align 8
  %27 = icmp ne i8** %26, null
  br i1 %27, label %28, label %46

; <label>:28:                                     ; preds = %5
  %29 = load i8**, i8*** %10, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i32 1
  store i8** %30, i8*** %10, align 8
  %31 = load i8*, i8** %29, align 8
  store i8* %31, i8** %16, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %45

; <label>:33:                                     ; preds = %28
  %34 = load i8**, i8*** %10, align 8
  store i8** %34, i8*** %13, align 8
  br label %35

; <label>:35:                                     ; preds = %40, %33
  %36 = load i8**, i8*** %13, align 8
  %37 = load i8*, i8** %36, align 8
  %38 = icmp ne i8* %37, null
  br i1 %38, label %39, label %43

; <label>:39:                                     ; preds = %35
  br label %40

; <label>:40:                                     ; preds = %39
  %41 = load i8**, i8*** %13, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i32 1
  store i8** %42, i8*** %13, align 8
  br label %35

; <label>:43:                                     ; preds = %35
  %44 = load i8**, i8*** %13, align 8
  store i8** %44, i8*** %14, align 8
  br label %45

; <label>:45:                                     ; preds = %43, %28
  br label %47

; <label>:46:                                     ; preds = %5
  store i8* null, i8** %16, align 8
  br label %47

; <label>:47:                                     ; preds = %46, %45
  store i32 0, i32* %19, align 4
  br label %48

; <label>:48:                                     ; preds = %72, %47
  %49 = load i8*, i8** %17, align 8
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  store i32 %51, i32* %18, align 4
  %52 = load i32, i32* %18, align 4
  %53 = and i32 %52, 192
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %57

; <label>:55:                                     ; preds = %48
  %56 = call i32* @__errno_location() #12
  store i32 90, i32* %56, align 4
  store i32 -1, i32* %6, align 4
  br label %191

; <label>:57:                                     ; preds = %48
  %58 = load i32, i32* %18, align 4
  %59 = add nsw i32 %58, 1
  %60 = load i32, i32* %19, align 4
  %61 = add nsw i32 %60, %59
  store i32 %61, i32* %19, align 4
  %62 = load i32, i32* %19, align 4
  %63 = icmp sgt i32 %62, 255
  br i1 %63, label %64, label %66

; <label>:64:                                     ; preds = %57
  %65 = call i32* @__errno_location() #12
  store i32 90, i32* %65, align 4
  store i32 -1, i32* %6, align 4
  br label %191

; <label>:66:                                     ; preds = %57
  %67 = load i32, i32* %18, align 4
  %68 = add nsw i32 %67, 1
  %69 = load i8*, i8** %17, align 8
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  store i8* %71, i8** %17, align 8
  br label %72

; <label>:72:                                     ; preds = %66
  %73 = load i32, i32* %18, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %48, label %75

; <label>:75:                                     ; preds = %72
  %76 = load i8*, i8** %7, align 8
  store i8* %76, i8** %17, align 8
  br label %77

; <label>:77:                                     ; preds = %169, %75
  %78 = load i8*, i8** %17, align 8
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  store i32 %80, i32* %18, align 4
  %81 = load i32, i32* %18, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %139

; <label>:83:                                     ; preds = %77
  %84 = load i8*, i8** %16, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %86, label %139

; <label>:86:                                     ; preds = %83
  %87 = load i8*, i8** %17, align 8
  %88 = load i8*, i8** %16, align 8
  %89 = load i8**, i8*** %10, align 8
  %90 = load i8**, i8*** %14, align 8
  %91 = call i32 @dn_find(i8* %87, i8* %88, i8** %89, i8** %90)
  store i32 %91, i32* %19, align 4
  %92 = load i32, i32* %19, align 4
  %93 = icmp sge i32 %92, 0
  br i1 %93, label %94, label %118

; <label>:94:                                     ; preds = %86
  %95 = load i8*, i8** %12, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 1
  %97 = load i8*, i8** %15, align 8
  %98 = icmp uge i8* %96, %97
  br i1 %98, label %99, label %100

; <label>:99:                                     ; preds = %94
  br label %177

; <label>:100:                                    ; preds = %94
  %101 = load i32, i32* %19, align 4
  %102 = ashr i32 %101, 8
  %103 = or i32 %102, 192
  %104 = trunc i32 %103 to i8
  %105 = load i8*, i8** %12, align 8
  %106 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %106, i8** %12, align 8
  store i8 %104, i8* %105, align 1
  %107 = load i32, i32* %19, align 4
  %108 = srem i32 %107, 256
  %109 = trunc i32 %108 to i8
  %110 = load i8*, i8** %12, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %111, i8** %12, align 8
  store i8 %109, i8* %110, align 1
  %112 = load i8*, i8** %12, align 8
  %113 = load i8*, i8** %8, align 8
  %114 = ptrtoint i8* %112 to i64
  %115 = ptrtoint i8* %113 to i64
  %116 = sub i64 %114, %115
  %117 = trunc i64 %116 to i32
  store i32 %117, i32* %6, align 4
  br label %191

; <label>:118:                                    ; preds = %86
  %119 = load i8**, i8*** %11, align 8
  %120 = icmp ne i8** %119, null
  br i1 %120, label %121, label %138

; <label>:121:                                    ; preds = %118
  %122 = load i8**, i8*** %13, align 8
  %123 = load i8**, i8*** %11, align 8
  %124 = getelementptr inbounds i8*, i8** %123, i64 -1
  %125 = icmp ult i8** %122, %124
  br i1 %125, label %126, label %138

; <label>:126:                                    ; preds = %121
  %127 = load i8*, i8** %12, align 8
  %128 = load i8*, i8** %16, align 8
  %129 = ptrtoint i8* %127 to i64
  %130 = ptrtoint i8* %128 to i64
  %131 = sub i64 %129, %130
  %132 = icmp slt i64 %131, 16384
  br i1 %132, label %133, label %138

; <label>:133:                                    ; preds = %126
  %134 = load i8*, i8** %12, align 8
  %135 = load i8**, i8*** %13, align 8
  %136 = getelementptr inbounds i8*, i8** %135, i32 1
  store i8** %136, i8*** %13, align 8
  store i8* %134, i8** %135, align 8
  %137 = load i8**, i8*** %13, align 8
  store i8* null, i8** %137, align 8
  br label %138

; <label>:138:                                    ; preds = %133, %126, %121, %118
  br label %139

; <label>:139:                                    ; preds = %138, %83, %77
  %140 = load i32, i32* %18, align 4
  %141 = and i32 %140, 192
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %144

; <label>:143:                                    ; preds = %139
  br label %177

; <label>:144:                                    ; preds = %139
  %145 = load i8*, i8** %12, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 1
  %147 = load i32, i32* %18, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %146, i64 %148
  %150 = load i8*, i8** %15, align 8
  %151 = icmp uge i8* %149, %150
  br i1 %151, label %152, label %153

; <label>:152:                                    ; preds = %144
  br label %177

; <label>:153:                                    ; preds = %144
  %154 = load i8*, i8** %12, align 8
  %155 = load i8*, i8** %17, align 8
  %156 = load i32, i32* %18, align 4
  %157 = add nsw i32 %156, 1
  %158 = sext i32 %157 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %155, i64 %158, i1 false)
  %159 = load i32, i32* %18, align 4
  %160 = add nsw i32 %159, 1
  %161 = load i8*, i8** %17, align 8
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i8, i8* %161, i64 %162
  store i8* %163, i8** %17, align 8
  %164 = load i32, i32* %18, align 4
  %165 = add nsw i32 %164, 1
  %166 = load i8*, i8** %12, align 8
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  store i8* %168, i8** %12, align 8
  br label %169

; <label>:169:                                    ; preds = %153
  %170 = load i32, i32* %18, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %77, label %172

; <label>:172:                                    ; preds = %169
  %173 = load i8*, i8** %12, align 8
  %174 = load i8*, i8** %15, align 8
  %175 = icmp ugt i8* %173, %174
  br i1 %175, label %176, label %184

; <label>:176:                                    ; preds = %172
  br label %177

; <label>:177:                                    ; preds = %176, %152, %143, %99
  %178 = load i8*, i8** %16, align 8
  %179 = icmp ne i8* %178, null
  br i1 %179, label %180, label %182

; <label>:180:                                    ; preds = %177
  %181 = load i8**, i8*** %14, align 8
  store i8* null, i8** %181, align 8
  br label %182

; <label>:182:                                    ; preds = %180, %177
  %183 = call i32* @__errno_location() #12
  store i32 90, i32* %183, align 4
  store i32 -1, i32* %6, align 4
  br label %191

; <label>:184:                                    ; preds = %172
  %185 = load i8*, i8** %12, align 8
  %186 = load i8*, i8** %8, align 8
  %187 = ptrtoint i8* %185 to i64
  %188 = ptrtoint i8* %186 to i64
  %189 = sub i64 %187, %188
  %190 = trunc i64 %189 to i32
  store i32 %190, i32* %6, align 4
  br label %191

; <label>:191:                                    ; preds = %184, %182, %100, %64, %55
  %192 = load i32, i32* %6, align 4
  ret i32 %192
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dn_find(i8*, i8*, i8**, i8**) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i8** %3, i8*** %9, align 8
  %15 = load i8**, i8*** %8, align 8
  store i8** %15, i8*** %13, align 8
  br label %16

; <label>:16:                                     ; preds = %101, %4
  %17 = load i8**, i8*** %13, align 8
  %18 = load i8**, i8*** %9, align 8
  %19 = icmp ult i8** %17, %18
  br i1 %19, label %20, label %104

; <label>:20:                                     ; preds = %16
  %21 = load i8*, i8** %6, align 8
  store i8* %21, i8** %10, align 8
  %22 = load i8**, i8*** %13, align 8
  %23 = load i8*, i8** %22, align 8
  store i8* %23, i8** %11, align 8
  store i8* %23, i8** %12, align 8
  br label %24

; <label>:24:                                     ; preds = %98, %83, %20
  %25 = load i8*, i8** %11, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %11, align 8
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i32
  store i32 %28, i32* %14, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %99

; <label>:30:                                     ; preds = %24
  %31 = load i32, i32* %14, align 4
  %32 = and i32 %31, 192
  switch i32 %32, label %96 [
    i32 0, label %33
    i32 192, label %85
  ]

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* %14, align 4
  %35 = load i8*, i8** %10, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %10, align 8
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp ne i32 %34, %38
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %33
  br label %100

; <label>:41:                                     ; preds = %33
  br label %42

; <label>:42:                                     ; preds = %59, %41
  %43 = load i32, i32* %14, align 4
  %44 = icmp ugt i32 %43, 0
  br i1 %44, label %45, label %62

; <label>:45:                                     ; preds = %42
  %46 = load i8*, i8** %10, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %10, align 8
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i32
  %50 = call i32 @mklower(i32 %49)
  %51 = load i8*, i8** %11, align 8
  %52 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %52, i8** %11, align 8
  %53 = load i8, i8* %51, align 1
  %54 = zext i8 %53 to i32
  %55 = call i32 @mklower(i32 %54)
  %56 = icmp ne i32 %50, %55
  br i1 %56, label %57, label %58

; <label>:57:                                     ; preds = %45
  br label %100

; <label>:58:                                     ; preds = %45
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* %14, align 4
  %61 = add i32 %60, -1
  store i32 %61, i32* %14, align 4
  br label %42

; <label>:62:                                     ; preds = %42
  %63 = load i8*, i8** %10, align 8
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

; <label>:67:                                     ; preds = %62
  %68 = load i8*, i8** %11, align 8
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %79

; <label>:72:                                     ; preds = %67
  %73 = load i8*, i8** %12, align 8
  %74 = load i8*, i8** %7, align 8
  %75 = ptrtoint i8* %73 to i64
  %76 = ptrtoint i8* %74 to i64
  %77 = sub i64 %75, %76
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %5, align 4
  br label %106

; <label>:79:                                     ; preds = %67, %62
  %80 = load i8*, i8** %10, align 8
  %81 = load i8, i8* %80, align 1
  %82 = icmp ne i8 %81, 0
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %79
  br label %24

; <label>:84:                                     ; preds = %79
  br label %100

; <label>:85:                                     ; preds = %30
  %86 = load i8*, i8** %7, align 8
  %87 = load i32, i32* %14, align 4
  %88 = and i32 %87, 63
  %89 = shl i32 %88, 8
  %90 = load i8*, i8** %11, align 8
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = or i32 %89, %92
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %86, i64 %94
  store i8* %95, i8** %11, align 8
  br label %98

; <label>:96:                                     ; preds = %30
  %97 = call i32* @__errno_location() #12
  store i32 90, i32* %97, align 4
  store i32 -1, i32* %5, align 4
  br label %106

; <label>:98:                                     ; preds = %85
  br label %24

; <label>:99:                                     ; preds = %24
  br label %100

; <label>:100:                                    ; preds = %99, %84, %57, %40
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i8**, i8*** %13, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i32 1
  store i8** %103, i8*** %13, align 8
  br label %16

; <label>:104:                                    ; preds = %16
  %105 = call i32* @__errno_location() #12
  store i32 2, i32* %105, align 4
  store i32 -1, i32* %5, align 4
  br label %106

; <label>:106:                                    ; preds = %104, %96, %72
  %107 = load i32, i32* %5, align 4
  ret i32 %107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mklower(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp sge i32 %4, 65
  br i1 %5, label %6, label %12

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp sle i32 %7, 90
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %6
  %10 = load i32, i32* %3, align 4
  %11 = add nsw i32 %10, 32
  store i32 %11, i32* %2, align 4
  br label %14

; <label>:12:                                     ; preds = %6, %1
  %13 = load i32, i32* %3, align 4
  store i32 %13, i32* %2, align 4
  br label %14

; <label>:14:                                     ; preds = %12, %9
  %15 = load i32, i32* %2, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_uncompress(i8*, i8*, i8*, i8*, i64) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [255 x i8], align 16
  %13 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  %14 = load i8*, i8** %7, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = getelementptr inbounds [255 x i8], [255 x i8]* %12, i32 0, i32 0
  %18 = call i32 @__ns_name_unpack(i8* %14, i8* %15, i8* %16, i8* %17, i64 255)
  store i32 %18, i32* %13, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %5
  store i32 -1, i32* %6, align 4
  br label %30

; <label>:21:                                     ; preds = %5
  %22 = getelementptr inbounds [255 x i8], [255 x i8]* %12, i32 0, i32 0
  %23 = load i8*, i8** %10, align 8
  %24 = load i64, i64* %11, align 8
  %25 = call i32 @__ns_name_ntop(i8* %22, i8* %23, i64 %24)
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %21
  store i32 -1, i32* %6, align 4
  br label %30

; <label>:28:                                     ; preds = %21
  %29 = load i32, i32* %13, align 4
  store i32 %29, i32* %6, align 4
  br label %30

; <label>:30:                                     ; preds = %28, %27, %20
  %31 = load i32, i32* %6, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_compress(i8*, i8*, i64, i8**, i8**) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  %12 = alloca [255 x i8], align 16
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i64 %2, i64* %9, align 8
  store i8** %3, i8*** %10, align 8
  store i8** %4, i8*** %11, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = getelementptr inbounds [255 x i8], [255 x i8]* %12, i32 0, i32 0
  %15 = call i32 @__ns_name_pton(i8* %13, i8* %14, i64 255)
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %5
  store i32 -1, i32* %6, align 4
  br label %26

; <label>:18:                                     ; preds = %5
  %19 = getelementptr inbounds [255 x i8], [255 x i8]* %12, i32 0, i32 0
  %20 = load i8*, i8** %8, align 8
  %21 = load i64, i64* %9, align 8
  %22 = trunc i64 %21 to i32
  %23 = load i8**, i8*** %10, align 8
  %24 = load i8**, i8*** %11, align 8
  %25 = call i32 @__ns_name_pack(i8* %19, i8* %20, i32 %22, i8** %23, i8** %24)
  store i32 %25, i32* %6, align 4
  br label %26

; <label>:26:                                     ; preds = %18, %17
  %27 = load i32, i32* %6, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @__ns_name_skip(i8**, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8**, i8*** %4, align 8
  %9 = load i8*, i8** %8, align 8
  store i8* %9, i8** %6, align 8
  br label %10

; <label>:10:                                     ; preds = %25, %2
  %11 = load i8*, i8** %6, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = icmp ult i8* %11, %12
  br i1 %13, label %14, label %20

; <label>:14:                                     ; preds = %10
  %15 = load i8*, i8** %6, align 8
  %16 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %16, i8** %6, align 8
  %17 = load i8, i8* %15, align 1
  %18 = zext i8 %17 to i32
  store i32 %18, i32* %7, align 4
  %19 = icmp ne i32 %18, 0
  br label %20

; <label>:20:                                     ; preds = %14, %10
  %21 = phi i1 [ false, %10 ], [ %19, %14 ]
  br i1 %21, label %22, label %36

; <label>:22:                                     ; preds = %20
  %23 = load i32, i32* %7, align 4
  %24 = and i32 %23, 192
  switch i32 %24, label %33 [
    i32 0, label %25
    i32 192, label %30
  ]

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* %7, align 4
  %27 = load i8*, i8** %6, align 8
  %28 = zext i32 %26 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %6, align 8
  br label %10

; <label>:30:                                     ; preds = %22
  %31 = load i8*, i8** %6, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** %6, align 8
  br label %35

; <label>:33:                                     ; preds = %22
  %34 = call i32* @__errno_location() #12
  store i32 90, i32* %34, align 4
  store i32 -1, i32* %3, align 4
  br label %45

; <label>:35:                                     ; preds = %30
  br label %36

; <label>:36:                                     ; preds = %35, %20
  %37 = load i8*, i8** %6, align 8
  %38 = load i8*, i8** %5, align 8
  %39 = icmp ugt i8* %37, %38
  br i1 %39, label %40, label %42

; <label>:40:                                     ; preds = %36
  %41 = call i32* @__errno_location() #12
  store i32 90, i32* %41, align 4
  store i32 -1, i32* %3, align 4
  br label %45

; <label>:42:                                     ; preds = %36
  %43 = load i8*, i8** %6, align 8
  %44 = load i8**, i8*** %4, align 8
  store i8* %43, i8** %44, align 8
  store i32 0, i32* %3, align 4
  br label %45

; <label>:45:                                     ; preds = %42, %40, %33
  %46 = load i32, i32* %3, align 4
  ret i32 %46
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind returns_twice }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind readnone }

!llvm.ident = !{}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git 3b5df6d2abd65c292843e89e82bd69d3349a41e2)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"ThinLTO", i32 0}
!3 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!4 = !{i32 -2146814286}

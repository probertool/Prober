; ModuleID = 'ld-temp.o'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.HXmap_ops = type { i32 (i8*, i8*, i64)*, i8* (i8*, i64)*, void (i8*)*, i8* (i8*, i64)*, void (i8*)*, i64 (i8*, i64)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.HXformat2_fd = type { i8*, i8* (i32, i8**)*, i8*, i1 (%struct.HXmap*)* }
%struct.HXmap = type { i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.HXdeque = type { %struct.HXdeque_node*, i8*, %struct.HXdeque_node*, i32 }
%struct.HXdeque_node = type { %struct.HXdeque_node*, %union.anon, %struct.HXdeque*, %struct.HXdeque_node* }
%union.anon = type { i8* }
%struct.HXformat_map = type opaque
%struct.fmt_entry = type { i8*, i32 }
%struct.anon = type { i8** }
%struct.anon.0 = type { i32* }
%struct.anon.2 = type { i16* }
%struct.anon.8 = type { i64* }
%struct.anon.12 = type { float* }
%struct.anon.13 = type { double* }
%struct.anon.14 = type { i8 }
%struct.anon.16 = type { i16 }
%struct.anon.18 = type { i32 }
%struct.anon.20 = type { i64 }
%struct.HXmap_node = type { %union.anon, %union.anon }
%struct.HXproc = type { %struct.HXproc_ops*, i8*, i32, i32, i32, i32, i32, i8, i8, i8 }
%struct.HXproc_ops = type { void (i8*)*, void (i8*)*, void (i8*)* }
%struct.HXdir = type { %struct.__dirstream*, %union.anon.3 }
%struct.__dirstream = type opaque
%union.anon.3 = type { %struct.dirent }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.HXmap_private = type { i32, i32, i32, i64, i64, %struct.HXmap_ops }
%struct.HXhmap = type { %struct.HXmap_private, %struct.HXlist_head*, i32, i32, i32, i32 }
%struct.HXlist_head = type { %struct.HXlist_head*, %struct.HXlist_head* }
%struct.HXrbtree = type { %struct.HXmap_private, %struct.HXrbtree_node*, i32 }
%struct.HXrbtree_node = type { [2 x %struct.HXrbtree_node*], %union.anon, %union.anon, i8 }
%struct.HXhmap_node = type { %struct.HXlist_head, %union.anon, %union.anon }
%struct.HXhmap_trav = type { %struct.HXmap, %struct.HXhmap*, %struct.HXlist_head*, i32, i32 }
%struct.HXrbtrav = type { %struct.HXmap, i32, %struct.HXrbtree*, %struct.HXrbtree_node*, i8*, [48 x %struct.HXrbtree_node*], [48 x i8], i8 }
%struct.memcont = type { i64, i64, i32, [0 x i8] }
%struct.HXoption = type { i8*, i8, i32, i8*, i8*, void (%struct.HXoptcb*)*, i32, i8*, i8*, i8* }
%struct.HXoptcb = type { i8*, %struct.HXoption*, %struct.HXoption*, i8*, %union.anon.38, i8*, i8 }
%union.anon.38 = type { double }

@fmt_entry_ops = internal constant %struct.HXmap_ops { i32 (i8*, i8*, i64)* null, i8* (i8*, i64)* null, void (i8*)* null, i8* (i8*, i64)* null, void (i8*)* @fmt_entry_free, i64 (i8*, i64)* null }, align 8, !dbg !0
@.str = private unnamed_addr constant [5 x i8] c"\09\0A\0B \00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [20 x i8] c"%s: Bogus key \22%s\22\0A\00", align 1
@__func__.HXformat_add = private unnamed_addr constant [13 x i8] c"HXformat_add\00", align 1
@HXformat2_nexp = internal global i8 0, align 1, !dbg !104
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c") \09\0A\0C\0B\0D\00", align 1
@.str.4 = private unnamed_addr constant [79 x i8] c"libHX-format2: unterminated variable reference / missing closing parenthesis.\0A\00", align 1
@HXformat2_fmap = internal constant [8 x %struct.HXformat2_fd] [%struct.HXformat2_fd { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_echo, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i1 (%struct.HXmap*)* null }, %struct.HXformat2_fd { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_env, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i1 (%struct.HXmap*)* null }, %struct.HXformat2_fd { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_exec, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i1 (%struct.HXmap*)* @HXformat2_execchk }, %struct.HXformat2_fd { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_if, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i1 (%struct.HXmap*)* null }, %struct.HXformat2_fd { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_lower, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i1 (%struct.HXmap*)* null }, %struct.HXformat2_fd { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_shell, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i1 (%struct.HXmap*)* @HXformat2_execchk }, %struct.HXformat2_fd { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_snl, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i1 (%struct.HXmap*)* null }, %struct.HXformat2_fd { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* (i32, i8**)* @HXformat2_upper, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i1 (%struct.HXmap*)* null }], align 16, !dbg !124
@.str.18 = private unnamed_addr constant [3 x i8] c"%(\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"echo\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c") ,\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"env\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"),\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"snl\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@__const.HXformat2_shell.cmd = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* null], align 16
@.str.36 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@__func__.HXformat2_if = private unnamed_addr constant [13 x i8] c"HXformat2_if\00", align 1
@.str.35 = private unnamed_addr constant [43 x i8] c"%s: insufficient number of arguments (%d)\0A\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"/libhx/exec\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"<echo\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c" [\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c">\00", align 1
@HXformat2_xvar.tf = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 16, !dbg !106
@.str.7 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"%hd\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"%hu\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"%s: Illegal type\0A\00", align 1
@__func__.HXformat2_xvar = private unnamed_addr constant [15 x i8] c"HXformat2_xvar\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.39 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.2.40 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.3.41 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@HXhash_primes = constant [28 x i32] [i32 23, i32 53, i32 97, i32 193, i32 389, i32 769, i32 1543, i32 3079, i32 6151, i32 12289, i32 24593, i32 49157, i32 98317, i32 196613, i32 393241, i32 786433, i32 1572869, i32 3145739, i32 6291469, i32 12582917, i32 25165843, i32 50331653, i32 100663319, i32 201326611, i32 402653189, i32 805306457, i32 1610612741, i32 -1073741823], align 16, !dbg !174
@.str.54 = private unnamed_addr constant [54 x i8] c"libHX-map: adding value!=NULL into a set not allowed\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [38 x i8] c"btrav_rewalk: problem: current==NULL\0A\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"libHX-mc error: not a hxmc object!\0A\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"Dumping %u bytes\0A\00", align 1
@.str.1.70 = private unnamed_addr constant [8 x i8] c"%04x | \00", align 1
@.str.2.71 = private unnamed_addr constant [7 x i8] c"%02x%c\00", align 1
@.str.3.72 = private unnamed_addr constant [3 x i8] c"| \00", align 1
@.str.4.73 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.74 = private unnamed_addr constant [11 x i8] c"\1B[31m.\1B[0m\00", align 1
@.str.6.75 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7.76 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8.77 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@.str.1.82 = private unnamed_addr constant [30 x i8] c"libHX-opt: invalid state: %u\0A\00", align 1
@.str.2.83 = private unnamed_addr constant [22 x i8] c"Unknown option: --%s\0A\00", align 1
@.str.3.84 = private unnamed_addr constant [40 x i8] c"Option --%s does not take any argument\0A\00", align 1
@.str.4.85 = private unnamed_addr constant [34 x i8] c"Option --%s requires an argument\0A\00", align 1
@.str.5.86 = private unnamed_addr constant [21 x i8] c"Unknown option: -%c\0A\00", align 1
@.str.6.87 = private unnamed_addr constant [33 x i8] c"Option -%c requires an argument\0A\00", align 1
@.str.9.88 = private unnamed_addr constant [10 x i8] c"Usage: %s\00", align 1
@.str.10.89 = private unnamed_addr constant [7 x i8] c"\0A     \00", align 1
@.str.11.90 = private unnamed_addr constant [4 x i8] c" [-\00", align 1
@.str.12.91 = private unnamed_addr constant [10 x i8] c"%s\0A      \00", align 1
@.str.13.92 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.14.93 = private unnamed_addr constant [8 x i8] c"\0A      \00", align 1
@.str.8.94 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.22.95 = private unnamed_addr constant [4 x i8] c"ARG\00", align 1
@.str.23.96 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.24.97 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.25.98 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.26.99 = private unnamed_addr constant [5 x i8] c"--%s\00", align 1
@.str.27.100 = private unnamed_addr constant [8 x i8] c"--%s=%s\00", align 1
@.str.28.101 = private unnamed_addr constant [10 x i8] c"-%c%s--%s\00", align 1
@.str.29.102 = private unnamed_addr constant [14 x i8] c"-%c%s--%s%c%s\00", align 1
@.str.7.103 = private unnamed_addr constant [11 x i8] c"  %-*s    \00", align 1
@.str.30.104 = private unnamed_addr constant [9 x i8] c"%.*s\0A%*s\00", align 1
@.str.31.105 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17.106 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.18.107 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.19.108 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.20.109 = private unnamed_addr constant [51 x i8] c"libHX-opt: illegal combination of logical op mask\0A\00", align 1
@.str.21.110 = private unnamed_addr constant [28 x i8] c"libHX-opt: illegal type %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.15.112 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.32.114 = private unnamed_addr constant [5 x i8] c"\09\0A ;\00", align 1
@.str.16.115 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @HXrand_init, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @HX_ident, i8* null }]
@.str.1.116 = private unnamed_addr constant [15 x i8] c"LIBHX_IDENTIFY\00", align 1
@.str.2.117 = private unnamed_addr constant [13 x i8] c"# libHX 3.5\0A\00", align 1
@.str.118 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@HX_init_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !263
@HX_use_count = internal global i32 0, align 4, !dbg !269
@.str.3.119 = private unnamed_addr constant [38 x i8] c"%s: reference count is already zero!\0A\00", align 1
@__func__.HX_exit = private unnamed_addr constant [8 x i8] c"HX_exit\00", align 1
@.str.124 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.126 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@HX_quote_chars = internal constant [6 x i8*] [i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.140, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.142, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.143, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.144, i32 0, i32 0)], align 16, !dbg !298
@HX_quote_ldap.hex = internal constant [17 x i8] c"0123456789ABCDEF\00", align 16, !dbg !314
@.str.7.136 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1
@.str.8.137 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.9.138 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1
@.str.10.139 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1
@.str.2.140 = private unnamed_addr constant [3 x i8] c"'\5C\00", align 1
@.str.3.141 = private unnamed_addr constant [3 x i8] c"\22\5C\00", align 1
@.str.4.142 = private unnamed_addr constant [5 x i8] c"\22&<>\00", align 1
@.str.5.143 = private unnamed_addr constant [6 x i8] c"\0A*()\5C\00", align 1
@.str.6.144 = private unnamed_addr constant [12 x i8] c"\0A \22#+,;<=>\5C\00", align 1
@.str.149 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.1.150 = private unnamed_addr constant [12 x i8] c"%s: %s: %s\0A\00", align 1
@__func__.HXproc_run_async = private unnamed_addr constant [17 x i8] c"HXproc_run_async\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXdeque* @HXdeque_init() #0 !dbg !415 {
  %1 = alloca %struct.HXdeque*, align 8
  %2 = alloca %struct.HXdeque*, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %2, metadata !437, metadata !DIExpression()), !dbg !438
  %3 = call noalias i8* @calloc(i64 1, i64 32) #7, !dbg !439
  %4 = bitcast i8* %3 to %struct.HXdeque*, !dbg !439
  store %struct.HXdeque* %4, %struct.HXdeque** %2, align 8, !dbg !441
  %5 = icmp eq %struct.HXdeque* %4, null, !dbg !442
  br i1 %5, label %6, label %7, !dbg !443

; <label>:6:                                      ; preds = %0
  store %struct.HXdeque* null, %struct.HXdeque** %1, align 8, !dbg !444
  br label %9, !dbg !444

; <label>:7:                                      ; preds = %0
  %8 = load %struct.HXdeque*, %struct.HXdeque** %2, align 8, !dbg !445
  store %struct.HXdeque* %8, %struct.HXdeque** %1, align 8, !dbg !446
  br label %9, !dbg !446

; <label>:9:                                      ; preds = %7, %6
  %10 = load %struct.HXdeque*, %struct.HXdeque** %1, align 8, !dbg !447
  ret %struct.HXdeque* %10, !dbg !447
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque*, i8*) #0 !dbg !448 {
  %3 = alloca %struct.HXdeque_node*, align 8
  %4 = alloca %struct.HXdeque*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  %7 = alloca i8*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %4, metadata !451, metadata !DIExpression()), !dbg !452
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !453, metadata !DIExpression()), !dbg !454
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !455, metadata !DIExpression()), !dbg !456
  %8 = call noalias i8* @malloc(i64 32) #7, !dbg !457
  %9 = bitcast i8* %8 to %struct.HXdeque_node*, !dbg !457
  store %struct.HXdeque_node* %9, %struct.HXdeque_node** %6, align 8, !dbg !459
  %10 = icmp eq %struct.HXdeque_node* %9, null, !dbg !460
  br i1 %10, label %11, label %12, !dbg !461

; <label>:11:                                     ; preds = %2
  store %struct.HXdeque_node* null, %struct.HXdeque_node** %3, align 8, !dbg !462
  br label %53, !dbg !462

; <label>:12:                                     ; preds = %2
  %13 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !463
  %14 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %13, i32 0, i32 2, !dbg !464
  %15 = load %struct.HXdeque_node*, %struct.HXdeque_node** %14, align 8, !dbg !464
  %16 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !465
  %17 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %16, i32 0, i32 3, !dbg !466
  store %struct.HXdeque_node* %15, %struct.HXdeque_node** %17, align 8, !dbg !467
  %18 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !468
  %19 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %18, i32 0, i32 0, !dbg !469
  store %struct.HXdeque_node* null, %struct.HXdeque_node** %19, align 8, !dbg !470
  %20 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !471
  %21 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !472
  %22 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %21, i32 0, i32 2, !dbg !473
  store %struct.HXdeque* %20, %struct.HXdeque** %22, align 8, !dbg !474
  %23 = load i8*, i8** %5, align 8, !dbg !475
  store i8* %23, i8** %7, align 8, !dbg !475
  %24 = load i8*, i8** %7, align 8, !dbg !475
  %25 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !477
  %26 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %25, i32 0, i32 1, !dbg !478
  %27 = bitcast %union.anon* %26 to i8**, !dbg !478
  store i8* %24, i8** %27, align 8, !dbg !479
  %28 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !480
  %29 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %28, i32 0, i32 0, !dbg !482
  %30 = load %struct.HXdeque_node*, %struct.HXdeque_node** %29, align 8, !dbg !482
  %31 = icmp eq %struct.HXdeque_node* %30, null, !dbg !483
  br i1 %31, label %32, label %38, !dbg !484

; <label>:32:                                     ; preds = %12
  %33 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !485
  %34 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !487
  %35 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %34, i32 0, i32 2, !dbg !488
  store %struct.HXdeque_node* %33, %struct.HXdeque_node** %35, align 8, !dbg !489
  %36 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !490
  %37 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %36, i32 0, i32 0, !dbg !491
  store %struct.HXdeque_node* %33, %struct.HXdeque_node** %37, align 8, !dbg !492
  br label %47, !dbg !493

; <label>:38:                                     ; preds = %12
  %39 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !494
  %40 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !496
  %41 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %40, i32 0, i32 2, !dbg !497
  %42 = load %struct.HXdeque_node*, %struct.HXdeque_node** %41, align 8, !dbg !497
  %43 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %42, i32 0, i32 0, !dbg !498
  store %struct.HXdeque_node* %39, %struct.HXdeque_node** %43, align 8, !dbg !499
  %44 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !500
  %45 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !501
  %46 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %45, i32 0, i32 2, !dbg !502
  store %struct.HXdeque_node* %44, %struct.HXdeque_node** %46, align 8, !dbg !503
  br label %47

; <label>:47:                                     ; preds = %38, %32
  %48 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !504
  %49 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %48, i32 0, i32 3, !dbg !505
  %50 = load i32, i32* %49, align 8, !dbg !506
  %51 = add i32 %50, 1, !dbg !506
  store i32 %51, i32* %49, align 8, !dbg !506
  %52 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !507
  store %struct.HXdeque_node* %52, %struct.HXdeque_node** %3, align 8, !dbg !508
  br label %53, !dbg !508

; <label>:53:                                     ; preds = %47, %11
  %54 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !509
  ret %struct.HXdeque_node* %54, !dbg !509
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXdeque_pop(%struct.HXdeque*) #0 !dbg !510 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.HXdeque*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %3, metadata !513, metadata !DIExpression()), !dbg !514
  %4 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !515
  %5 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %4, i32 0, i32 2, !dbg !517
  %6 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !517
  %7 = icmp eq %struct.HXdeque_node* %6, null, !dbg !518
  br i1 %7, label %8, label %9, !dbg !519

; <label>:8:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !520
  br label %14, !dbg !520

; <label>:9:                                      ; preds = %1
  %10 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !521
  %11 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %10, i32 0, i32 2, !dbg !522
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %11, align 8, !dbg !522
  %13 = call i8* @HXdeque_del(%struct.HXdeque_node* %12), !dbg !523
  store i8* %13, i8** %2, align 8, !dbg !524
  br label %14, !dbg !524

; <label>:14:                                     ; preds = %9, %8
  %15 = load i8*, i8** %2, align 8, !dbg !525
  ret i8* %15, !dbg !525
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXdeque_del(%struct.HXdeque_node*) #0 !dbg !526 {
  %2 = alloca %struct.HXdeque_node*, align 8
  %3 = alloca i8*, align 8
  store %struct.HXdeque_node* %0, %struct.HXdeque_node** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %2, metadata !529, metadata !DIExpression()), !dbg !530
  call void @llvm.dbg.declare(metadata i8** %3, metadata !531, metadata !DIExpression()), !dbg !532
  %4 = load %struct.HXdeque_node*, %struct.HXdeque_node** %2, align 8, !dbg !533
  %5 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %4, i32 0, i32 1, !dbg !534
  %6 = bitcast %union.anon* %5 to i8**, !dbg !534
  %7 = load i8*, i8** %6, align 8, !dbg !534
  store i8* %7, i8** %3, align 8, !dbg !532
  %8 = load %struct.HXdeque_node*, %struct.HXdeque_node** %2, align 8, !dbg !535
  %9 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %8, i32 0, i32 2, !dbg !536
  %10 = load %struct.HXdeque*, %struct.HXdeque** %9, align 8, !dbg !536
  %11 = load %struct.HXdeque_node*, %struct.HXdeque_node** %2, align 8, !dbg !537
  call void @HXdeque_drop(%struct.HXdeque* %10, %struct.HXdeque_node* %11), !dbg !538
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %2, align 8, !dbg !539
  %13 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %12, i32 0, i32 2, !dbg !540
  %14 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !540
  %15 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %14, i32 0, i32 3, !dbg !541
  %16 = load i32, i32* %15, align 8, !dbg !542
  %17 = add i32 %16, -1, !dbg !542
  store i32 %17, i32* %15, align 8, !dbg !542
  %18 = load %struct.HXdeque_node*, %struct.HXdeque_node** %2, align 8, !dbg !543
  %19 = bitcast %struct.HXdeque_node* %18 to i8*, !dbg !543
  call void @free(i8* %19) #7, !dbg !544
  %20 = load i8*, i8** %3, align 8, !dbg !545
  ret i8* %20, !dbg !546
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXdeque_drop(%struct.HXdeque*, %struct.HXdeque_node*) #0 !dbg !547 {
  %3 = alloca %struct.HXdeque*, align 8
  %4 = alloca %struct.HXdeque_node*, align 8
  %5 = alloca %struct.HXdeque_node*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %3, metadata !550, metadata !DIExpression()), !dbg !551
  store %struct.HXdeque_node* %1, %struct.HXdeque_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %4, metadata !552, metadata !DIExpression()), !dbg !553
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %5, metadata !554, metadata !DIExpression()), !dbg !555
  %7 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !556
  %8 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %7, i32 0, i32 3, !dbg !557
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %8, align 8, !dbg !557
  store %struct.HXdeque_node* %9, %struct.HXdeque_node** %5, align 8, !dbg !555
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !558, metadata !DIExpression()), !dbg !559
  %10 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !560
  %11 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %10, i32 0, i32 0, !dbg !561
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %11, align 8, !dbg !561
  store %struct.HXdeque_node* %12, %struct.HXdeque_node** %6, align 8, !dbg !559
  %13 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !562
  %14 = icmp eq %struct.HXdeque_node* %13, null, !dbg !564
  br i1 %14, label %15, label %19, !dbg !565

; <label>:15:                                     ; preds = %2
  %16 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !566
  %17 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !567
  %18 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %17, i32 0, i32 0, !dbg !568
  store %struct.HXdeque_node* %16, %struct.HXdeque_node** %18, align 8, !dbg !569
  br label %23, !dbg !567

; <label>:19:                                     ; preds = %2
  %20 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !570
  %21 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !571
  %22 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %21, i32 0, i32 0, !dbg !572
  store %struct.HXdeque_node* %20, %struct.HXdeque_node** %22, align 8, !dbg !573
  br label %23

; <label>:23:                                     ; preds = %19, %15
  %24 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !574
  %25 = icmp eq %struct.HXdeque_node* %24, null, !dbg !576
  br i1 %25, label %26, label %30, !dbg !577

; <label>:26:                                     ; preds = %23
  %27 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !578
  %28 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !579
  %29 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %28, i32 0, i32 2, !dbg !580
  store %struct.HXdeque_node* %27, %struct.HXdeque_node** %29, align 8, !dbg !581
  br label %34, !dbg !579

; <label>:30:                                     ; preds = %23
  %31 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !582
  %32 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !583
  %33 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %32, i32 0, i32 3, !dbg !584
  store %struct.HXdeque_node* %31, %struct.HXdeque_node** %33, align 8, !dbg !585
  br label %34

; <label>:34:                                     ; preds = %30, %26
  ret void, !dbg !586
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXdeque_node* @HXdeque_unshift(%struct.HXdeque*, i8*) #0 !dbg !587 {
  %3 = alloca %struct.HXdeque_node*, align 8
  %4 = alloca %struct.HXdeque*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  %7 = alloca i8*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %4, metadata !588, metadata !DIExpression()), !dbg !589
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !590, metadata !DIExpression()), !dbg !591
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !592, metadata !DIExpression()), !dbg !593
  %8 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !594
  %9 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %8, i32 0, i32 0, !dbg !596
  %10 = load %struct.HXdeque_node*, %struct.HXdeque_node** %9, align 8, !dbg !596
  %11 = icmp eq %struct.HXdeque_node* %10, null, !dbg !597
  br i1 %11, label %12, label %16, !dbg !598

; <label>:12:                                     ; preds = %2
  %13 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !599
  %14 = load i8*, i8** %5, align 8, !dbg !600
  %15 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %13, i8* %14), !dbg !601
  store %struct.HXdeque_node* %15, %struct.HXdeque_node** %3, align 8, !dbg !602
  br label %50, !dbg !602

; <label>:16:                                     ; preds = %2
  %17 = call noalias i8* @malloc(i64 32) #7, !dbg !603
  %18 = bitcast i8* %17 to %struct.HXdeque_node*, !dbg !603
  store %struct.HXdeque_node* %18, %struct.HXdeque_node** %6, align 8, !dbg !605
  %19 = icmp eq %struct.HXdeque_node* %18, null, !dbg !606
  br i1 %19, label %20, label %21, !dbg !607

; <label>:20:                                     ; preds = %16
  store %struct.HXdeque_node* null, %struct.HXdeque_node** %3, align 8, !dbg !608
  br label %50, !dbg !608

; <label>:21:                                     ; preds = %16
  %22 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !609
  %23 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %22, i32 0, i32 3, !dbg !610
  store %struct.HXdeque_node* null, %struct.HXdeque_node** %23, align 8, !dbg !611
  %24 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !612
  %25 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %24, i32 0, i32 0, !dbg !613
  %26 = load %struct.HXdeque_node*, %struct.HXdeque_node** %25, align 8, !dbg !613
  %27 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !614
  %28 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %27, i32 0, i32 0, !dbg !615
  store %struct.HXdeque_node* %26, %struct.HXdeque_node** %28, align 8, !dbg !616
  %29 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !617
  %30 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !618
  %31 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %30, i32 0, i32 2, !dbg !619
  store %struct.HXdeque* %29, %struct.HXdeque** %31, align 8, !dbg !620
  %32 = load i8*, i8** %5, align 8, !dbg !621
  store i8* %32, i8** %7, align 8, !dbg !621
  %33 = load i8*, i8** %7, align 8, !dbg !621
  %34 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !623
  %35 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %34, i32 0, i32 1, !dbg !624
  %36 = bitcast %union.anon* %35 to i8**, !dbg !624
  store i8* %33, i8** %36, align 8, !dbg !625
  %37 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !626
  %38 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !627
  %39 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %38, i32 0, i32 0, !dbg !628
  %40 = load %struct.HXdeque_node*, %struct.HXdeque_node** %39, align 8, !dbg !628
  %41 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %40, i32 0, i32 3, !dbg !629
  store %struct.HXdeque_node* %37, %struct.HXdeque_node** %41, align 8, !dbg !630
  %42 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !631
  %43 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !632
  %44 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %43, i32 0, i32 0, !dbg !633
  store %struct.HXdeque_node* %42, %struct.HXdeque_node** %44, align 8, !dbg !634
  %45 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !635
  %46 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %45, i32 0, i32 3, !dbg !636
  %47 = load i32, i32* %46, align 8, !dbg !637
  %48 = add i32 %47, 1, !dbg !637
  store i32 %48, i32* %46, align 8, !dbg !637
  %49 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !638
  store %struct.HXdeque_node* %49, %struct.HXdeque_node** %3, align 8, !dbg !639
  br label %50, !dbg !639

; <label>:50:                                     ; preds = %21, %20, %12
  %51 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !640
  ret %struct.HXdeque_node* %51, !dbg !640
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXdeque_shift(%struct.HXdeque*) #0 !dbg !641 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.HXdeque*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %3, metadata !642, metadata !DIExpression()), !dbg !643
  %4 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !644
  %5 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %4, i32 0, i32 0, !dbg !646
  %6 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !646
  %7 = icmp eq %struct.HXdeque_node* %6, null, !dbg !647
  br i1 %7, label %8, label %9, !dbg !648

; <label>:8:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !649
  br label %14, !dbg !649

; <label>:9:                                      ; preds = %1
  %10 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !650
  %11 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %10, i32 0, i32 0, !dbg !651
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %11, align 8, !dbg !651
  %13 = call i8* @HXdeque_del(%struct.HXdeque_node* %12), !dbg !652
  store i8* %13, i8** %2, align 8, !dbg !653
  br label %14, !dbg !653

; <label>:14:                                     ; preds = %9, %8
  %15 = load i8*, i8** %2, align 8, !dbg !654
  ret i8* %15, !dbg !654
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXdeque_move(%struct.HXdeque_node*, %struct.HXdeque_node*) #0 !dbg !655 {
  %3 = alloca %struct.HXdeque_node*, align 8
  %4 = alloca %struct.HXdeque_node*, align 8
  store %struct.HXdeque_node* %0, %struct.HXdeque_node** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %3, metadata !658, metadata !DIExpression()), !dbg !659
  store %struct.HXdeque_node* %1, %struct.HXdeque_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %4, metadata !660, metadata !DIExpression()), !dbg !661
  %5 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !662
  %6 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %5, i32 0, i32 2, !dbg !663
  %7 = load %struct.HXdeque*, %struct.HXdeque** %6, align 8, !dbg !663
  %8 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !664
  call void @HXdeque_drop(%struct.HXdeque* %7, %struct.HXdeque_node* %8), !dbg !665
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !666
  %10 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !667
  call void @HXdeque_add(%struct.HXdeque_node* %9, %struct.HXdeque_node* %10), !dbg !668
  ret void, !dbg !669
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXdeque_add(%struct.HXdeque_node*, %struct.HXdeque_node*) #0 !dbg !670 {
  %3 = alloca %struct.HXdeque_node*, align 8
  %4 = alloca %struct.HXdeque_node*, align 8
  %5 = alloca %struct.HXdeque*, align 8
  store %struct.HXdeque_node* %0, %struct.HXdeque_node** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %3, metadata !671, metadata !DIExpression()), !dbg !672
  store %struct.HXdeque_node* %1, %struct.HXdeque_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %4, metadata !673, metadata !DIExpression()), !dbg !674
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %5, metadata !675, metadata !DIExpression()), !dbg !676
  %6 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !677
  %7 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %6, i32 0, i32 2, !dbg !678
  %8 = load %struct.HXdeque*, %struct.HXdeque** %7, align 8, !dbg !678
  store %struct.HXdeque* %8, %struct.HXdeque** %5, align 8, !dbg !676
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !679
  %10 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %9, i32 0, i32 0, !dbg !680
  %11 = load %struct.HXdeque_node*, %struct.HXdeque_node** %10, align 8, !dbg !680
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !681
  %13 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %12, i32 0, i32 0, !dbg !682
  store %struct.HXdeque_node* %11, %struct.HXdeque_node** %13, align 8, !dbg !683
  %14 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !684
  %15 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !685
  %16 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %15, i32 0, i32 3, !dbg !686
  store %struct.HXdeque_node* %14, %struct.HXdeque_node** %16, align 8, !dbg !687
  %17 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !688
  %18 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !689
  %19 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %18, i32 0, i32 0, !dbg !690
  store %struct.HXdeque_node* %17, %struct.HXdeque_node** %19, align 8, !dbg !691
  %20 = load %struct.HXdeque*, %struct.HXdeque** %5, align 8, !dbg !692
  %21 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !693
  %22 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %21, i32 0, i32 2, !dbg !694
  store %struct.HXdeque* %20, %struct.HXdeque** %22, align 8, !dbg !695
  %23 = load %struct.HXdeque*, %struct.HXdeque** %5, align 8, !dbg !696
  %24 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %23, i32 0, i32 2, !dbg !698
  %25 = load %struct.HXdeque_node*, %struct.HXdeque_node** %24, align 8, !dbg !698
  %26 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !699
  %27 = icmp eq %struct.HXdeque_node* %25, %26, !dbg !700
  br i1 %27, label %28, label %32, !dbg !701

; <label>:28:                                     ; preds = %2
  %29 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !702
  %30 = load %struct.HXdeque*, %struct.HXdeque** %5, align 8, !dbg !703
  %31 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %30, i32 0, i32 2, !dbg !704
  store %struct.HXdeque_node* %29, %struct.HXdeque_node** %31, align 8, !dbg !705
  br label %32, !dbg !703

; <label>:32:                                     ; preds = %28, %2
  ret void, !dbg !706
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXdeque_free(%struct.HXdeque*) #0 !dbg !707 {
  %2 = alloca %struct.HXdeque*, align 8
  %3 = alloca %struct.HXdeque_node*, align 8
  %4 = alloca %struct.HXdeque_node*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %2, metadata !710, metadata !DIExpression()), !dbg !711
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %3, metadata !712, metadata !DIExpression()), !dbg !713
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %4, metadata !714, metadata !DIExpression()), !dbg !715
  %5 = load %struct.HXdeque*, %struct.HXdeque** %2, align 8, !dbg !716
  %6 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %5, i32 0, i32 0, !dbg !718
  %7 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !718
  store %struct.HXdeque_node* %7, %struct.HXdeque_node** %3, align 8, !dbg !719
  br label %8, !dbg !720

; <label>:8:                                      ; preds = %17, %1
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !721
  %10 = icmp ne %struct.HXdeque_node* %9, null, !dbg !723
  br i1 %10, label %11, label %19, !dbg !724

; <label>:11:                                     ; preds = %8
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !725
  %13 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %12, i32 0, i32 0, !dbg !727
  %14 = load %struct.HXdeque_node*, %struct.HXdeque_node** %13, align 8, !dbg !727
  store %struct.HXdeque_node* %14, %struct.HXdeque_node** %4, align 8, !dbg !728
  %15 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !729
  %16 = bitcast %struct.HXdeque_node* %15 to i8*, !dbg !729
  call void @free(i8* %16) #7, !dbg !730
  br label %17, !dbg !731

; <label>:17:                                     ; preds = %11
  %18 = load %struct.HXdeque_node*, %struct.HXdeque_node** %4, align 8, !dbg !732
  store %struct.HXdeque_node* %18, %struct.HXdeque_node** %3, align 8, !dbg !733
  br label %8, !dbg !734, !llvm.loop !735

; <label>:19:                                     ; preds = %8
  %20 = load %struct.HXdeque*, %struct.HXdeque** %2, align 8, !dbg !737
  %21 = bitcast %struct.HXdeque* %20 to i8*, !dbg !737
  call void @free(i8* %21) #7, !dbg !738
  ret void, !dbg !739
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXdeque_node* @HXdeque_find(%struct.HXdeque*, i8*) #0 !dbg !740 {
  %3 = alloca %struct.HXdeque_node*, align 8
  %4 = alloca %struct.HXdeque*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %4, metadata !741, metadata !DIExpression()), !dbg !742
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !743, metadata !DIExpression()), !dbg !744
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !745, metadata !DIExpression()), !dbg !746
  %7 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !747
  %8 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %7, i32 0, i32 0, !dbg !749
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %8, align 8, !dbg !749
  store %struct.HXdeque_node* %9, %struct.HXdeque_node** %6, align 8, !dbg !750
  br label %10, !dbg !751

; <label>:10:                                     ; preds = %23, %2
  %11 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !752
  %12 = icmp ne %struct.HXdeque_node* %11, null, !dbg !754
  br i1 %12, label %13, label %27, !dbg !755

; <label>:13:                                     ; preds = %10
  %14 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !756
  %15 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %14, i32 0, i32 1, !dbg !758
  %16 = bitcast %union.anon* %15 to i8**, !dbg !758
  %17 = load i8*, i8** %16, align 8, !dbg !758
  %18 = load i8*, i8** %5, align 8, !dbg !759
  %19 = icmp eq i8* %17, %18, !dbg !760
  br i1 %19, label %20, label %22, !dbg !761

; <label>:20:                                     ; preds = %13
  %21 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !762
  store %struct.HXdeque_node* %21, %struct.HXdeque_node** %3, align 8, !dbg !763
  br label %28, !dbg !763

; <label>:22:                                     ; preds = %13
  br label %23, !dbg !759

; <label>:23:                                     ; preds = %22
  %24 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !764
  %25 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %24, i32 0, i32 0, !dbg !765
  %26 = load %struct.HXdeque_node*, %struct.HXdeque_node** %25, align 8, !dbg !765
  store %struct.HXdeque_node* %26, %struct.HXdeque_node** %6, align 8, !dbg !766
  br label %10, !dbg !767, !llvm.loop !768

; <label>:27:                                     ; preds = %10
  store %struct.HXdeque_node* null, %struct.HXdeque_node** %3, align 8, !dbg !770
  br label %28, !dbg !770

; <label>:28:                                     ; preds = %27, %20
  %29 = load %struct.HXdeque_node*, %struct.HXdeque_node** %3, align 8, !dbg !771
  ret %struct.HXdeque_node* %29, !dbg !771
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXdeque_get(%struct.HXdeque*, i8*) #0 !dbg !772 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXdeque*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %4, metadata !775, metadata !DIExpression()), !dbg !776
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !777, metadata !DIExpression()), !dbg !778
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !779, metadata !DIExpression()), !dbg !780
  %7 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !781
  %8 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %7, i32 0, i32 0, !dbg !782
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %8, align 8, !dbg !782
  store %struct.HXdeque_node* %9, %struct.HXdeque_node** %6, align 8, !dbg !780
  %10 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !783
  %11 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %10, i32 0, i32 0, !dbg !785
  %12 = load %struct.HXdeque_node*, %struct.HXdeque_node** %11, align 8, !dbg !785
  store %struct.HXdeque_node* %12, %struct.HXdeque_node** %6, align 8, !dbg !786
  br label %13, !dbg !787

; <label>:13:                                     ; preds = %29, %2
  %14 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !788
  %15 = icmp ne %struct.HXdeque_node* %14, null, !dbg !790
  br i1 %15, label %16, label %33, !dbg !791

; <label>:16:                                     ; preds = %13
  %17 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !792
  %18 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %17, i32 0, i32 1, !dbg !794
  %19 = bitcast %union.anon* %18 to i8**, !dbg !794
  %20 = load i8*, i8** %19, align 8, !dbg !794
  %21 = load i8*, i8** %5, align 8, !dbg !795
  %22 = icmp eq i8* %20, %21, !dbg !796
  br i1 %22, label %23, label %28, !dbg !797

; <label>:23:                                     ; preds = %16
  %24 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !798
  %25 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %24, i32 0, i32 1, !dbg !799
  %26 = bitcast %union.anon* %25 to i8**, !dbg !799
  %27 = load i8*, i8** %26, align 8, !dbg !799
  store i8* %27, i8** %3, align 8, !dbg !800
  br label %34, !dbg !800

; <label>:28:                                     ; preds = %16
  br label %29, !dbg !795

; <label>:29:                                     ; preds = %28
  %30 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !801
  %31 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %30, i32 0, i32 0, !dbg !802
  %32 = load %struct.HXdeque_node*, %struct.HXdeque_node** %31, align 8, !dbg !802
  store %struct.HXdeque_node* %32, %struct.HXdeque_node** %6, align 8, !dbg !803
  br label %13, !dbg !804, !llvm.loop !805

; <label>:33:                                     ; preds = %13
  store i8* null, i8** %3, align 8, !dbg !807
  br label %34, !dbg !807

; <label>:34:                                     ; preds = %33, %23
  %35 = load i8*, i8** %3, align 8, !dbg !808
  ret i8* %35, !dbg !808
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXdeque_genocide2(%struct.HXdeque*, void (i8*)*) #0 !dbg !809 {
  %3 = alloca %struct.HXdeque*, align 8
  %4 = alloca void (i8*)*, align 8
  %5 = alloca %struct.HXdeque_node*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %3, metadata !812, metadata !DIExpression()), !dbg !813
  store void (i8*)* %1, void (i8*)** %4, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %4, metadata !814, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %5, metadata !816, metadata !DIExpression()), !dbg !817
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !818, metadata !DIExpression()), !dbg !819
  %7 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !820
  %8 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %7, i32 0, i32 0, !dbg !822
  %9 = load %struct.HXdeque_node*, %struct.HXdeque_node** %8, align 8, !dbg !822
  store %struct.HXdeque_node* %9, %struct.HXdeque_node** %5, align 8, !dbg !823
  br label %10, !dbg !824

; <label>:10:                                     ; preds = %24, %2
  %11 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !825
  %12 = icmp ne %struct.HXdeque_node* %11, null, !dbg !827
  br i1 %12, label %13, label %26, !dbg !828

; <label>:13:                                     ; preds = %10
  %14 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !829
  %15 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %14, i32 0, i32 0, !dbg !831
  %16 = load %struct.HXdeque_node*, %struct.HXdeque_node** %15, align 8, !dbg !831
  store %struct.HXdeque_node* %16, %struct.HXdeque_node** %6, align 8, !dbg !832
  %17 = load void (i8*)*, void (i8*)** %4, align 8, !dbg !833
  %18 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !834
  %19 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %18, i32 0, i32 1, !dbg !835
  %20 = bitcast %union.anon* %19 to i8**, !dbg !835
  %21 = load i8*, i8** %20, align 8, !dbg !835
  call void %17(i8* %21), !dbg !833
  %22 = load %struct.HXdeque_node*, %struct.HXdeque_node** %5, align 8, !dbg !836
  %23 = bitcast %struct.HXdeque_node* %22 to i8*, !dbg !836
  call void @free(i8* %23) #7, !dbg !837
  br label %24, !dbg !838

; <label>:24:                                     ; preds = %13
  %25 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !839
  store %struct.HXdeque_node* %25, %struct.HXdeque_node** %5, align 8, !dbg !840
  br label %10, !dbg !841, !llvm.loop !842

; <label>:26:                                     ; preds = %10
  %27 = load %struct.HXdeque*, %struct.HXdeque** %3, align 8, !dbg !844
  %28 = bitcast %struct.HXdeque* %27 to i8*, !dbg !844
  call void @free(i8* %28) #7, !dbg !845
  ret void, !dbg !846
}

; Function Attrs: noinline nounwind optnone uwtable
define i8** @HXdeque_to_vec(%struct.HXdeque*, i32*) #0 !dbg !847 {
  %3 = alloca i8**, align 8
  %4 = alloca %struct.HXdeque*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %struct.HXdeque_node*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %4, metadata !854, metadata !DIExpression()), !dbg !855
  store i32* %1, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !856, metadata !DIExpression()), !dbg !857
  call void @llvm.dbg.declare(metadata %struct.HXdeque_node** %6, metadata !858, metadata !DIExpression()), !dbg !861
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !862, metadata !DIExpression()), !dbg !863
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !864, metadata !DIExpression()), !dbg !865
  %9 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !866
  %10 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %9, i32 0, i32 3, !dbg !867
  %11 = load i32, i32* %10, align 8, !dbg !867
  %12 = add i32 %11, 1, !dbg !868
  %13 = zext i32 %12 to i64, !dbg !869
  %14 = mul i64 %13, 8, !dbg !870
  %15 = call noalias i8* @malloc(i64 %14) #7, !dbg !871
  %16 = bitcast i8* %15 to i8**, !dbg !871
  store i8** %16, i8*** %7, align 8, !dbg !872
  %17 = load i8**, i8*** %7, align 8, !dbg !873
  %18 = icmp eq i8** %17, null, !dbg !875
  br i1 %18, label %19, label %20, !dbg !876

; <label>:19:                                     ; preds = %2
  store i8** null, i8*** %3, align 8, !dbg !877
  br label %50, !dbg !877

; <label>:20:                                     ; preds = %2
  %21 = load i8**, i8*** %7, align 8, !dbg !878
  store i8** %21, i8*** %8, align 8, !dbg !879
  %22 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !880
  %23 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %22, i32 0, i32 0, !dbg !882
  %24 = load %struct.HXdeque_node*, %struct.HXdeque_node** %23, align 8, !dbg !882
  store %struct.HXdeque_node* %24, %struct.HXdeque_node** %6, align 8, !dbg !883
  br label %25, !dbg !884

; <label>:25:                                     ; preds = %35, %20
  %26 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !885
  %27 = icmp ne %struct.HXdeque_node* %26, null, !dbg !887
  br i1 %27, label %28, label %39, !dbg !888

; <label>:28:                                     ; preds = %25
  %29 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !889
  %30 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %29, i32 0, i32 1, !dbg !890
  %31 = bitcast %union.anon* %30 to i8**, !dbg !890
  %32 = load i8*, i8** %31, align 8, !dbg !890
  %33 = load i8**, i8*** %8, align 8, !dbg !891
  %34 = getelementptr inbounds i8*, i8** %33, i32 1, !dbg !891
  store i8** %34, i8*** %8, align 8, !dbg !891
  store i8* %32, i8** %33, align 8, !dbg !892
  br label %35, !dbg !893

; <label>:35:                                     ; preds = %28
  %36 = load %struct.HXdeque_node*, %struct.HXdeque_node** %6, align 8, !dbg !894
  %37 = getelementptr inbounds %struct.HXdeque_node, %struct.HXdeque_node* %36, i32 0, i32 0, !dbg !895
  %38 = load %struct.HXdeque_node*, %struct.HXdeque_node** %37, align 8, !dbg !895
  store %struct.HXdeque_node* %38, %struct.HXdeque_node** %6, align 8, !dbg !896
  br label %25, !dbg !897, !llvm.loop !898

; <label>:39:                                     ; preds = %25
  %40 = load i8**, i8*** %8, align 8, !dbg !900
  store i8* null, i8** %40, align 8, !dbg !901
  %41 = load i32*, i32** %5, align 8, !dbg !902
  %42 = icmp ne i32* %41, null, !dbg !904
  br i1 %42, label %43, label %48, !dbg !905

; <label>:43:                                     ; preds = %39
  %44 = load %struct.HXdeque*, %struct.HXdeque** %4, align 8, !dbg !906
  %45 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %44, i32 0, i32 3, !dbg !907
  %46 = load i32, i32* %45, align 8, !dbg !907
  %47 = load i32*, i32** %5, align 8, !dbg !908
  store i32 %46, i32* %47, align 4, !dbg !909
  br label %48, !dbg !910

; <label>:48:                                     ; preds = %43, %39
  %49 = load i8**, i8*** %7, align 8, !dbg !911
  store i8** %49, i8*** %3, align 8, !dbg !912
  br label %50, !dbg !912

; <label>:50:                                     ; preds = %48, %19
  %51 = load i8**, i8*** %3, align 8, !dbg !913
  ret i8** %51, !dbg !913
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_dlopen(i8*) #0 !dbg !914 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !917, metadata !DIExpression()), !dbg !918
  %3 = load i8*, i8** %2, align 8, !dbg !919
  %4 = call i8* @dlopen(i8* %3, i32 1) #7, !dbg !920
  ret i8* %4, !dbg !921
}

; Function Attrs: nounwind
declare i8* @dlopen(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_dlsym(i8*, i8*) #0 !dbg !922 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !925, metadata !DIExpression()), !dbg !926
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !927, metadata !DIExpression()), !dbg !928
  %5 = load i8*, i8** %3, align 8, !dbg !929
  %6 = load i8*, i8** %4, align 8, !dbg !930
  %7 = call i8* @dlsym(i8* %5, i8* %6) #7, !dbg !931
  ret i8* %7, !dbg !932
}

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_dlclose(i8*) #0 !dbg !933 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !934, metadata !DIExpression()), !dbg !935
  %3 = load i8*, i8** %2, align 8, !dbg !936
  %4 = call i32 @dlclose(i8* %3) #7, !dbg !937
  ret void, !dbg !938
}

; Function Attrs: nounwind
declare i32 @dlclose(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_dlerror() #0 !dbg !939 {
  %1 = call i8* @dlerror() #7, !dbg !942
  ret i8* %1, !dbg !943
}

; Function Attrs: nounwind
declare i8* @dlerror() #2

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXformat_map* @HXformat_init() #0 !dbg !944 {
  %1 = alloca %struct.HXformat_map*, align 8
  %2 = alloca %struct.HXmap*, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %2, metadata !949, metadata !DIExpression()), !dbg !951
  %3 = call %struct.HXmap* @HXmap_init5(i32 1, i32 805306368, %struct.HXmap_ops* @fmt_entry_ops, i64 0, i64 16), !dbg !952
  store %struct.HXmap* %3, %struct.HXmap** %2, align 8, !dbg !953
  %4 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !954
  %5 = icmp eq %struct.HXmap* %4, null, !dbg !956
  br i1 %5, label %6, label %7, !dbg !957

; <label>:6:                                      ; preds = %0
  store %struct.HXformat_map* null, %struct.HXformat_map** %1, align 8, !dbg !958
  br label %10, !dbg !958

; <label>:7:                                      ; preds = %0
  %8 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !959
  %9 = call %struct.HXformat_map* @fmt_export(%struct.HXmap* %8), !dbg !960
  store %struct.HXformat_map* %9, %struct.HXformat_map** %1, align 8, !dbg !961
  br label %10, !dbg !961

; <label>:10:                                     ; preds = %7, %6
  %11 = load %struct.HXformat_map*, %struct.HXformat_map** %1, align 8, !dbg !962
  ret %struct.HXformat_map* %11, !dbg !962
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXformat_map* @fmt_export(%struct.HXmap*) #0 !dbg !963 {
  %2 = alloca %struct.HXmap*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %2, metadata !966, metadata !DIExpression()), !dbg !967
  %3 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !968
  %4 = bitcast %struct.HXmap* %3 to i8*, !dbg !969
  %5 = bitcast i8* %4 to %struct.HXformat_map*, !dbg !969
  ret %struct.HXformat_map* %5, !dbg !970
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fmt_entry_free(i8*) #0 !dbg !971 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.fmt_entry*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !972, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.declare(metadata %struct.fmt_entry** %3, metadata !974, metadata !DIExpression()), !dbg !976
  %5 = load i8*, i8** %2, align 8, !dbg !977
  %6 = bitcast i8* %5 to %struct.fmt_entry*, !dbg !977
  store %struct.fmt_entry* %6, %struct.fmt_entry** %3, align 8, !dbg !976
  %7 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !978
  %8 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %7, i32 0, i32 1, !dbg !980
  %9 = load i32, i32* %8, align 8, !dbg !980
  %10 = icmp eq i32 %9, 8209, !dbg !981
  br i1 %10, label %11, label %16, !dbg !982

; <label>:11:                                     ; preds = %1
  %12 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !983
  %13 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %12, i32 0, i32 0, !dbg !983
  %14 = load i8*, i8** %13, align 8, !dbg !983
  store i8* %14, i8** %4, align 8, !dbg !983
  %15 = load i8*, i8** %4, align 8, !dbg !983
  call void @free(i8* %15) #7, !dbg !985
  br label %16, !dbg !985

; <label>:16:                                     ; preds = %11, %1
  %17 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !986
  %18 = bitcast %struct.fmt_entry* %17 to i8*, !dbg !986
  call void @free(i8* %18) #7, !dbg !987
  ret void, !dbg !988
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXformat_free(%struct.HXformat_map*) #0 !dbg !989 {
  %2 = alloca %struct.HXformat_map*, align 8
  store %struct.HXformat_map* %0, %struct.HXformat_map** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXformat_map** %2, metadata !992, metadata !DIExpression()), !dbg !993
  %3 = load %struct.HXformat_map*, %struct.HXformat_map** %2, align 8, !dbg !994
  %4 = call %struct.HXmap* @fmt_import(%struct.HXformat_map* %3), !dbg !995
  call void @HXmap_free(%struct.HXmap* %4), !dbg !996
  ret void, !dbg !997
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap* @fmt_import(%struct.HXformat_map*) #0 !dbg !998 {
  %2 = alloca %struct.HXformat_map*, align 8
  store %struct.HXformat_map* %0, %struct.HXformat_map** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXformat_map** %2, metadata !1003, metadata !DIExpression()), !dbg !1004
  %3 = load %struct.HXformat_map*, %struct.HXformat_map** %2, align 8, !dbg !1005
  %4 = bitcast %struct.HXformat_map* %3 to i8*, !dbg !1006
  %5 = bitcast i8* %4 to %struct.HXmap*, !dbg !1006
  ret %struct.HXmap* %5, !dbg !1007
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXformat_add(%struct.HXformat_map*, i8*, i8*, i32) #0 !dbg !1008 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXformat_map*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.HXmap*, align 8
  %11 = alloca %struct.fmt_entry*, align 8
  %12 = alloca i32, align 4
  store %struct.HXformat_map* %0, %struct.HXformat_map** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXformat_map** %6, metadata !1011, metadata !DIExpression()), !dbg !1012
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1013, metadata !DIExpression()), !dbg !1014
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1015, metadata !DIExpression()), !dbg !1016
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1017, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.declare(metadata %struct.HXmap** %10, metadata !1019, metadata !DIExpression()), !dbg !1020
  %13 = load %struct.HXformat_map*, %struct.HXformat_map** %6, align 8, !dbg !1021
  %14 = call %struct.HXmap* @fmt_import(%struct.HXformat_map* %13), !dbg !1022
  store %struct.HXmap* %14, %struct.HXmap** %10, align 8, !dbg !1020
  call void @llvm.dbg.declare(metadata %struct.fmt_entry** %11, metadata !1023, metadata !DIExpression()), !dbg !1024
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1025, metadata !DIExpression()), !dbg !1026
  %15 = load i8*, i8** %7, align 8, !dbg !1027
  %16 = call i8* @strpbrk(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #10, !dbg !1029
  %17 = icmp ne i8* %16, null, !dbg !1030
  br i1 %17, label %27, label %18, !dbg !1031

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %7, align 8, !dbg !1032
  %20 = call i64 @strlen(i8* %19) #10, !dbg !1033
  %21 = icmp ugt i64 %20, 256, !dbg !1034
  br i1 %21, label %27, label %22, !dbg !1035

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %7, align 8, !dbg !1036
  %24 = load i8, i8* %23, align 1, !dbg !1037
  %25 = sext i8 %24 to i32, !dbg !1037
  %26 = icmp eq i32 %25, 0, !dbg !1038
  br i1 %26, label %27, label %31, !dbg !1039

; <label>:27:                                     ; preds = %22, %18, %4
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1040
  %29 = load i8*, i8** %7, align 8, !dbg !1042
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.HXformat_add, i32 0, i32 0), i8* %29), !dbg !1043
  store i32 -22, i32* %5, align 4, !dbg !1044
  br label %75, !dbg !1044

; <label>:31:                                     ; preds = %22
  %32 = call noalias i8* @malloc(i64 16) #7, !dbg !1045
  %33 = bitcast i8* %32 to %struct.fmt_entry*, !dbg !1045
  store %struct.fmt_entry* %33, %struct.fmt_entry** %11, align 8, !dbg !1047
  %34 = icmp eq %struct.fmt_entry* %33, null, !dbg !1048
  br i1 %34, label %35, label %39, !dbg !1049

; <label>:35:                                     ; preds = %31
  %36 = call i32* @__errno_location() #11, !dbg !1050
  %37 = load i32, i32* %36, align 4, !dbg !1050
  %38 = sub nsw i32 0, %37, !dbg !1051
  store i32 %38, i32* %5, align 4, !dbg !1052
  br label %75, !dbg !1052

; <label>:39:                                     ; preds = %31
  %40 = load i32, i32* %9, align 4, !dbg !1053
  %41 = load %struct.fmt_entry*, %struct.fmt_entry** %11, align 8, !dbg !1054
  %42 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %41, i32 0, i32 1, !dbg !1055
  store i32 %40, i32* %42, align 8, !dbg !1056
  %43 = load i32, i32* %9, align 4, !dbg !1057
  %44 = icmp eq i32 %43, 8209, !dbg !1059
  br i1 %44, label %45, label %58, !dbg !1060

; <label>:45:                                     ; preds = %39
  %46 = load i8*, i8** %8, align 8, !dbg !1061
  %47 = call i8* @HX_strdup(i8* %46), !dbg !1064
  %48 = load %struct.fmt_entry*, %struct.fmt_entry** %11, align 8, !dbg !1065
  %49 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %48, i32 0, i32 0, !dbg !1066
  store i8* %47, i8** %49, align 8, !dbg !1067
  %50 = icmp eq i8* %47, null, !dbg !1068
  br i1 %50, label %51, label %57, !dbg !1069

; <label>:51:                                     ; preds = %45
  %52 = load %struct.fmt_entry*, %struct.fmt_entry** %11, align 8, !dbg !1070
  %53 = bitcast %struct.fmt_entry* %52 to i8*, !dbg !1070
  call void @free(i8* %53) #7, !dbg !1072
  %54 = call i32* @__errno_location() #11, !dbg !1073
  %55 = load i32, i32* %54, align 4, !dbg !1073
  %56 = sub nsw i32 0, %55, !dbg !1074
  store i32 %56, i32* %5, align 4, !dbg !1075
  br label %75, !dbg !1075

; <label>:57:                                     ; preds = %45
  br label %62, !dbg !1076

; <label>:58:                                     ; preds = %39
  %59 = load i8*, i8** %8, align 8, !dbg !1077
  %60 = load %struct.fmt_entry*, %struct.fmt_entry** %11, align 8, !dbg !1079
  %61 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %60, i32 0, i32 0, !dbg !1080
  store i8* %59, i8** %61, align 8, !dbg !1081
  br label %62

; <label>:62:                                     ; preds = %58, %57
  %63 = load %struct.HXmap*, %struct.HXmap** %10, align 8, !dbg !1082
  %64 = load i8*, i8** %7, align 8, !dbg !1083
  %65 = load %struct.fmt_entry*, %struct.fmt_entry** %11, align 8, !dbg !1084
  %66 = bitcast %struct.fmt_entry* %65 to i8*, !dbg !1084
  %67 = call i32 @HXmap_add(%struct.HXmap* %63, i8* %64, i8* %66), !dbg !1085
  store i32 %67, i32* %12, align 4, !dbg !1086
  %68 = load i32, i32* %12, align 4, !dbg !1087
  %69 = icmp sle i32 %68, 0, !dbg !1089
  br i1 %69, label %70, label %74, !dbg !1090

; <label>:70:                                     ; preds = %62
  %71 = load %struct.fmt_entry*, %struct.fmt_entry** %11, align 8, !dbg !1091
  %72 = bitcast %struct.fmt_entry* %71 to i8*, !dbg !1091
  call void @free(i8* %72) #7, !dbg !1093
  %73 = load i32, i32* %12, align 4, !dbg !1094
  store i32 %73, i32* %5, align 4, !dbg !1095
  br label %75, !dbg !1095

; <label>:74:                                     ; preds = %62
  store i32 1, i32* %5, align 4, !dbg !1096
  br label %75, !dbg !1096

; <label>:75:                                     ; preds = %74, %70, %51, %35, %27
  %76 = load i32, i32* %5, align 4, !dbg !1097
  ret i32 %76, !dbg !1097
}

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strdup(i8*) #0 !dbg !1098 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1101, metadata !DIExpression()), !dbg !1102
  %4 = load i8*, i8** %3, align 8, !dbg !1103
  %5 = icmp eq i8* %4, null, !dbg !1105
  br i1 %5, label %6, label %7, !dbg !1106

; <label>:6:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !1107
  br label %13, !dbg !1107

; <label>:7:                                      ; preds = %1
  %8 = load i8*, i8** %3, align 8, !dbg !1108
  %9 = load i8*, i8** %3, align 8, !dbg !1109
  %10 = call i64 @strlen(i8* %9) #10, !dbg !1110
  %11 = add i64 %10, 1, !dbg !1111
  %12 = call i8* @HX_memdup(i8* %8, i64 %11), !dbg !1112
  store i8* %12, i8** %2, align 8, !dbg !1113
  br label %13, !dbg !1113

; <label>:13:                                     ; preds = %7, %6
  %14 = load i8*, i8** %2, align 8, !dbg !1114
  ret i8* %14, !dbg !1114
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_memdup(i8*, i64) #0 !dbg !1115 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1116, metadata !DIExpression()), !dbg !1117
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1118, metadata !DIExpression()), !dbg !1119
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1120, metadata !DIExpression()), !dbg !1121
  %7 = load i64, i64* %5, align 8, !dbg !1122
  %8 = call noalias i8* @malloc(i64 %7) #7, !dbg !1124
  store i8* %8, i8** %6, align 8, !dbg !1125
  %9 = icmp eq i8* %8, null, !dbg !1126
  br i1 %9, label %10, label %11, !dbg !1127

; <label>:10:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !1128
  br label %15, !dbg !1128

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %6, align 8, !dbg !1129
  %13 = load i8*, i8** %4, align 8, !dbg !1130
  %14 = load i64, i64* %5, align 8, !dbg !1131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 %14, i1 false), !dbg !1132
  store i8* %12, i8** %3, align 8, !dbg !1133
  br label %15, !dbg !1133

; <label>:15:                                     ; preds = %11, %10
  %16 = load i8*, i8** %3, align 8, !dbg !1134
  ret i8* %16, !dbg !1134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #6

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXformat2_aprintf(%struct.HXformat_map*, i8**, i8*) #0 !dbg !1135 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXformat_map*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.HXmap*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store %struct.HXformat_map* %0, %struct.HXformat_map** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXformat_map** %5, metadata !1138, metadata !DIExpression()), !dbg !1139
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !1140, metadata !DIExpression()), !dbg !1141
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1142, metadata !DIExpression()), !dbg !1143
  call void @llvm.dbg.declare(metadata %struct.HXmap** %8, metadata !1144, metadata !DIExpression()), !dbg !1145
  %14 = load %struct.HXformat_map*, %struct.HXformat_map** %5, align 8, !dbg !1146
  %15 = call %struct.HXmap* @fmt_import(%struct.HXformat_map* %14), !dbg !1147
  store %struct.HXmap* %15, %struct.HXmap** %8, align 8, !dbg !1145
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1148, metadata !DIExpression()), !dbg !1149
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1150, metadata !DIExpression()), !dbg !1151
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1152, metadata !DIExpression()), !dbg !1153
  %16 = call i8* @HXmc_meminit(i8* null, i64 0), !dbg !1154
  store i8* %16, i8** %11, align 8, !dbg !1153
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1155, metadata !DIExpression()), !dbg !1156
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1157, metadata !DIExpression()), !dbg !1158
  store i32 0, i32* %13, align 4, !dbg !1158
  %17 = load i8*, i8** %7, align 8, !dbg !1159
  store i8* %17, i8** %12, align 8, !dbg !1160
  br label %18, !dbg !1161

; <label>:18:                                     ; preds = %73, %49, %3
  %19 = load i8*, i8** %7, align 8, !dbg !1162
  %20 = call i8* @HX_strchr0(i8* %19, i8 signext 37), !dbg !1163
  store i8* %20, i8** %12, align 8, !dbg !1164
  %21 = icmp ne i8* %20, null, !dbg !1165
  br i1 %21, label %22, label %75, !dbg !1161

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %12, align 8, !dbg !1166
  %24 = load i8*, i8** %7, align 8, !dbg !1169
  %25 = ptrtoint i8* %23 to i64, !dbg !1170
  %26 = ptrtoint i8* %24 to i64, !dbg !1170
  %27 = sub i64 %25, %26, !dbg !1170
  %28 = icmp sgt i64 %27, 0, !dbg !1171
  br i1 %28, label %29, label %37, !dbg !1172

; <label>:29:                                     ; preds = %22
  %30 = load i8*, i8** %7, align 8, !dbg !1173
  %31 = load i8*, i8** %12, align 8, !dbg !1174
  %32 = load i8*, i8** %7, align 8, !dbg !1175
  %33 = ptrtoint i8* %31 to i64, !dbg !1176
  %34 = ptrtoint i8* %32 to i64, !dbg !1176
  %35 = sub i64 %33, %34, !dbg !1176
  %36 = call i8* @HXmc_memcat(i8** %11, i8* %30, i64 %35), !dbg !1177
  br label %37, !dbg !1177

; <label>:37:                                     ; preds = %29, %22
  %38 = load i8*, i8** %12, align 8, !dbg !1178
  %39 = load i8, i8* %38, align 1, !dbg !1180
  %40 = sext i8 %39 to i32, !dbg !1180
  %41 = icmp eq i32 %40, 0, !dbg !1181
  br i1 %41, label %42, label %43, !dbg !1182

; <label>:42:                                     ; preds = %37
  br label %75, !dbg !1183

; <label>:43:                                     ; preds = %37
  %44 = load i8*, i8** %12, align 8, !dbg !1184
  %45 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !1184
  %46 = load i8, i8* %45, align 1, !dbg !1184
  %47 = sext i8 %46 to i32, !dbg !1184
  %48 = icmp ne i32 %47, 40, !dbg !1186
  br i1 %48, label %49, label %54, !dbg !1187

; <label>:49:                                     ; preds = %43
  %50 = load i8*, i8** %12, align 8, !dbg !1188
  %51 = call i8* @HXmc_memcat(i8** %11, i8* %50, i64 2), !dbg !1190
  %52 = load i8*, i8** %12, align 8, !dbg !1191
  %53 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !1192
  store i8* %53, i8** %7, align 8, !dbg !1193
  br label %18, !dbg !1194, !llvm.loop !1195

; <label>:54:                                     ; preds = %43
  %55 = load i8*, i8** %12, align 8, !dbg !1197
  %56 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !1197
  store i8* %56, i8** %12, align 8, !dbg !1197
  %57 = load %struct.HXmap*, %struct.HXmap** %8, align 8, !dbg !1198
  %58 = call i8* @HXformat2_xany(i8** %12, %struct.HXmap* %57), !dbg !1199
  store i8* %58, i8** %9, align 8, !dbg !1200
  %59 = load i8*, i8** %9, align 8, !dbg !1201
  %60 = icmp eq i8* %59, null, !dbg !1203
  br i1 %60, label %61, label %62, !dbg !1204

; <label>:61:                                     ; preds = %54
  br label %81, !dbg !1205

; <label>:62:                                     ; preds = %54
  %63 = load i8*, i8** %9, align 8, !dbg !1206
  %64 = icmp ne i8* %63, @HXformat2_nexp, !dbg !1208
  br i1 %64, label %65, label %73, !dbg !1209

; <label>:65:                                     ; preds = %62
  %66 = load i8*, i8** %9, align 8, !dbg !1210
  %67 = call i8* @HXmc_strcat(i8** %11, i8* %66), !dbg !1212
  store i8* %67, i8** %10, align 8, !dbg !1213
  %68 = load i8*, i8** %9, align 8, !dbg !1214
  call void @HXmc_free(i8* %68), !dbg !1215
  %69 = load i8*, i8** %10, align 8, !dbg !1216
  %70 = icmp eq i8* %69, null, !dbg !1218
  br i1 %70, label %71, label %72, !dbg !1219

; <label>:71:                                     ; preds = %65
  br label %81, !dbg !1220

; <label>:72:                                     ; preds = %65
  br label %73, !dbg !1221

; <label>:73:                                     ; preds = %72, %62
  %74 = load i8*, i8** %12, align 8, !dbg !1222
  store i8* %74, i8** %7, align 8, !dbg !1223
  br label %18, !dbg !1161, !llvm.loop !1195

; <label>:75:                                     ; preds = %42, %18
  %76 = load i8*, i8** %11, align 8, !dbg !1224
  %77 = load i8**, i8*** %6, align 8, !dbg !1225
  store i8* %76, i8** %77, align 8, !dbg !1226
  %78 = load i8*, i8** %11, align 8, !dbg !1227
  %79 = call i64 @strlen(i8* %78) #10, !dbg !1228
  %80 = trunc i64 %79 to i32, !dbg !1228
  store i32 %80, i32* %4, align 4, !dbg !1229
  br label %87, !dbg !1229

; <label>:81:                                     ; preds = %71, %61
  %82 = call i32* @__errno_location() #11, !dbg !1230
  %83 = load i32, i32* %82, align 4, !dbg !1230
  %84 = sub nsw i32 0, %83, !dbg !1231
  store i32 %84, i32* %13, align 4, !dbg !1232
  %85 = load i8*, i8** %11, align 8, !dbg !1233
  call void @HXmc_free(i8* %85), !dbg !1234
  %86 = load i32, i32* %13, align 4, !dbg !1235
  store i32 %86, i32* %4, align 4, !dbg !1236
  br label %87, !dbg !1236

; <label>:87:                                     ; preds = %81, %75
  %88 = load i32, i32* %4, align 4, !dbg !1237
  ret i32 %88, !dbg !1237
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strchr0(i8*, i8 signext) #0 !dbg !1238 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1241, metadata !DIExpression()), !dbg !1242
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !1243, metadata !DIExpression()), !dbg !1244
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1245, metadata !DIExpression()), !dbg !1246
  %8 = load i8*, i8** %4, align 8, !dbg !1247
  %9 = load i8, i8* %5, align 1, !dbg !1248
  %10 = sext i8 %9 to i32, !dbg !1248
  %11 = call i8* @strchr(i8* %8, i32 %10) #10, !dbg !1249
  store i8* %11, i8** %6, align 8, !dbg !1246
  %12 = load i8*, i8** %6, align 8, !dbg !1250
  %13 = icmp ne i8* %12, null, !dbg !1252
  br i1 %13, label %14, label %16, !dbg !1253

; <label>:14:                                     ; preds = %2
  %15 = load i8*, i8** %6, align 8, !dbg !1254
  store i8* %15, i8** %3, align 8, !dbg !1255
  br label %22, !dbg !1255

; <label>:16:                                     ; preds = %2
  %17 = load i8*, i8** %4, align 8, !dbg !1256
  %18 = load i8*, i8** %4, align 8, !dbg !1256
  %19 = call i64 @strlen(i8* %18) #10, !dbg !1256
  %20 = getelementptr inbounds i8, i8* %17, i64 %19, !dbg !1256
  store i8* %20, i8** %7, align 8, !dbg !1256
  %21 = load i8*, i8** %7, align 8, !dbg !1256
  store i8* %21, i8** %3, align 8, !dbg !1258
  br label %22, !dbg !1258

; <label>:22:                                     ; preds = %16, %14
  %23 = load i8*, i8** %3, align 8, !dbg !1259
  ret i8* %23, !dbg !1259
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_xany(i8**, %struct.HXmap*) #0 !dbg !1260 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca %struct.HXmap*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.fmt_entry*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !1263, metadata !DIExpression()), !dbg !1264
  store %struct.HXmap* %1, %struct.HXmap** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %5, metadata !1265, metadata !DIExpression()), !dbg !1266
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1267, metadata !DIExpression()), !dbg !1268
  %12 = load i8**, i8*** %4, align 8, !dbg !1269
  %13 = load i8*, i8** %12, align 8, !dbg !1270
  store i8* %13, i8** %6, align 8, !dbg !1268
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1271, metadata !DIExpression()), !dbg !1272
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1273, metadata !DIExpression()), !dbg !1274
  %14 = load i8*, i8** %6, align 8, !dbg !1275
  %15 = load i8, i8* %14, align 1, !dbg !1277
  %16 = sext i8 %15 to i32, !dbg !1277
  %17 = icmp eq i32 %16, 41, !dbg !1278
  br i1 %17, label %18, label %22, !dbg !1279

; <label>:18:                                     ; preds = %2
  %19 = load i8**, i8*** %4, align 8, !dbg !1280
  %20 = load i8*, i8** %19, align 8, !dbg !1282
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !1282
  store i8* %21, i8** %19, align 8, !dbg !1282
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1283
  br label %116, !dbg !1283

; <label>:22:                                     ; preds = %2
  %23 = load i8*, i8** %6, align 8, !dbg !1284
  %24 = load i8, i8* %23, align 1, !dbg !1286
  %25 = call zeroext i1 @HX_isspace(i8 zeroext %24), !dbg !1287
  br i1 %25, label %26, label %41, !dbg !1288

; <label>:26:                                     ; preds = %22
  br label %27, !dbg !1289

; <label>:27:                                     ; preds = %31, %26
  %28 = load i8*, i8** %6, align 8, !dbg !1291
  %29 = load i8, i8* %28, align 1, !dbg !1292
  %30 = call zeroext i1 @HX_isspace(i8 zeroext %29), !dbg !1293
  br i1 %30, label %31, label %34, !dbg !1289

; <label>:31:                                     ; preds = %27
  %32 = load i8*, i8** %6, align 8, !dbg !1294
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !1294
  store i8* %33, i8** %6, align 8, !dbg !1294
  br label %27, !dbg !1289, !llvm.loop !1295

; <label>:34:                                     ; preds = %27
  %35 = load i8*, i8** %6, align 8, !dbg !1297
  %36 = load i8**, i8*** %4, align 8, !dbg !1298
  %37 = call i8* @HXparse_dequote_fmt(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8** %36), !dbg !1299
  call void @HXmc_free(i8* %37), !dbg !1300
  %38 = load i8**, i8*** %4, align 8, !dbg !1301
  %39 = load i8*, i8** %38, align 8, !dbg !1302
  %40 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !1302
  store i8* %40, i8** %38, align 8, !dbg !1302
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1303
  br label %116, !dbg !1303

; <label>:41:                                     ; preds = %22
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %6, align 8, !dbg !1304
  %44 = load i8**, i8*** %4, align 8, !dbg !1305
  %45 = call i8* @HXparse_dequote_fmt(i8* %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8** %44), !dbg !1306
  store i8* %45, i8** %7, align 8, !dbg !1307
  %46 = load i8*, i8** %7, align 8, !dbg !1308
  %47 = icmp eq i8* %46, null, !dbg !1310
  br i1 %47, label %48, label %49, !dbg !1311

; <label>:48:                                     ; preds = %42
  store i8* null, i8** %3, align 8, !dbg !1312
  br label %116, !dbg !1312

; <label>:49:                                     ; preds = %42
  %50 = load i8**, i8*** %4, align 8, !dbg !1313
  %51 = load i8*, i8** %50, align 8, !dbg !1314
  store i8* %51, i8** %6, align 8, !dbg !1315
  %52 = load i8*, i8** %6, align 8, !dbg !1316
  %53 = load i8, i8* %52, align 1, !dbg !1318
  %54 = sext i8 %53 to i32, !dbg !1318
  %55 = icmp eq i32 %54, 0, !dbg !1319
  br i1 %55, label %56, label %59, !dbg !1320

; <label>:56:                                     ; preds = %49
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1321
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.4, i32 0, i32 0)), !dbg !1323
  store i8* null, i8** %3, align 8, !dbg !1324
  br label %116, !dbg !1324

; <label>:59:                                     ; preds = %49
  %60 = load i8*, i8** %6, align 8, !dbg !1325
  %61 = load i8, i8* %60, align 1, !dbg !1327
  %62 = sext i8 %61 to i32, !dbg !1327
  %63 = icmp eq i32 %62, 41, !dbg !1328
  br i1 %63, label %64, label %97, !dbg !1329

; <label>:64:                                     ; preds = %59
  call void @llvm.dbg.declare(metadata %struct.fmt_entry** %9, metadata !1330, metadata !DIExpression()), !dbg !1332
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1333, metadata !DIExpression()), !dbg !1334
  store i8* null, i8** %10, align 8, !dbg !1334
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1335, metadata !DIExpression()), !dbg !1336
  %65 = load i8*, i8** %6, align 8, !dbg !1337
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !1337
  store i8* %66, i8** %6, align 8, !dbg !1337
  %67 = load i8**, i8*** %4, align 8, !dbg !1338
  store i8* %66, i8** %67, align 8, !dbg !1339
  %68 = load %struct.HXmap*, %struct.HXmap** %5, align 8, !dbg !1340
  %69 = call %struct.HXformat_map* @fmt_export(%struct.HXmap* %68), !dbg !1341
  %70 = load i8*, i8** %7, align 8, !dbg !1342
  %71 = call i32 @HXformat2_aprintf(%struct.HXformat_map* %69, i8** %10, i8* %70), !dbg !1343
  store i32 %71, i32* %11, align 4, !dbg !1344
  %72 = load i32, i32* %11, align 4, !dbg !1345
  %73 = icmp sle i32 %72, 0, !dbg !1347
  br i1 %73, label %74, label %75, !dbg !1348

; <label>:74:                                     ; preds = %64
  store i8* null, i8** %8, align 8, !dbg !1349
  br label %95, !dbg !1351

; <label>:75:                                     ; preds = %64
  %76 = load i8*, i8** %10, align 8, !dbg !1352
  %77 = load i8, i8* %76, align 1, !dbg !1354
  %78 = sext i8 %77 to i32, !dbg !1354
  %79 = icmp eq i32 %78, 0, !dbg !1355
  br i1 %79, label %80, label %81, !dbg !1356

; <label>:80:                                     ; preds = %75
  store i8* @HXformat2_nexp, i8** %8, align 8, !dbg !1357
  br label %94, !dbg !1359

; <label>:81:                                     ; preds = %75
  %82 = load %struct.HXmap*, %struct.HXmap** %5, align 8, !dbg !1360
  %83 = load i8*, i8** %10, align 8, !dbg !1362
  %84 = call i8* @HXmap_get(%struct.HXmap* %82, i8* %83), !dbg !1363
  %85 = bitcast i8* %84 to %struct.fmt_entry*, !dbg !1363
  store %struct.fmt_entry* %85, %struct.fmt_entry** %9, align 8, !dbg !1364
  %86 = load %struct.fmt_entry*, %struct.fmt_entry** %9, align 8, !dbg !1365
  %87 = icmp eq %struct.fmt_entry* %86, null, !dbg !1366
  br i1 %87, label %88, label %89, !dbg !1367

; <label>:88:                                     ; preds = %81
  br label %92, !dbg !1367

; <label>:89:                                     ; preds = %81
  %90 = load %struct.fmt_entry*, %struct.fmt_entry** %9, align 8, !dbg !1368
  %91 = call i8* @HXformat2_xvar(%struct.fmt_entry* %90), !dbg !1369
  br label %92, !dbg !1367

; <label>:92:                                     ; preds = %89, %88
  %93 = phi i8* [ @HXformat2_nexp, %88 ], [ %91, %89 ], !dbg !1367
  store i8* %93, i8** %8, align 8, !dbg !1370
  br label %94

; <label>:94:                                     ; preds = %92, %80
  br label %95

; <label>:95:                                     ; preds = %94, %74
  %96 = load i8*, i8** %10, align 8, !dbg !1371
  call void @HXmc_free(i8* %96), !dbg !1372
  br label %112, !dbg !1373

; <label>:97:                                     ; preds = %59
  br label %98, !dbg !1374

; <label>:98:                                     ; preds = %102, %97
  %99 = load i8*, i8** %6, align 8, !dbg !1376
  %100 = load i8, i8* %99, align 1, !dbg !1377
  %101 = call zeroext i1 @HX_isspace(i8 zeroext %100), !dbg !1378
  br i1 %101, label %102, label %105, !dbg !1374

; <label>:102:                                    ; preds = %98
  %103 = load i8*, i8** %6, align 8, !dbg !1379
  %104 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !1379
  store i8* %104, i8** %6, align 8, !dbg !1379
  br label %98, !dbg !1374, !llvm.loop !1380

; <label>:105:                                    ; preds = %98
  %106 = load i8*, i8** %6, align 8, !dbg !1382
  %107 = load i8**, i8*** %4, align 8, !dbg !1383
  store i8* %106, i8** %107, align 8, !dbg !1384
  %108 = load i8*, i8** %7, align 8, !dbg !1385
  %109 = load i8**, i8*** %4, align 8, !dbg !1386
  %110 = load %struct.HXmap*, %struct.HXmap** %5, align 8, !dbg !1387
  %111 = call i8* @HXformat2_xcall(i8* %108, i8** %109, %struct.HXmap* %110), !dbg !1388
  store i8* %111, i8** %8, align 8, !dbg !1389
  br label %112

; <label>:112:                                    ; preds = %105, %95
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %7, align 8, !dbg !1390
  call void @HXmc_free(i8* %114), !dbg !1391
  %115 = load i8*, i8** %8, align 8, !dbg !1392
  store i8* %115, i8** %3, align 8, !dbg !1393
  br label %116, !dbg !1393

; <label>:116:                                    ; preds = %113, %56, %48, %34, %18
  %117 = load i8*, i8** %3, align 8, !dbg !1394
  ret i8* %117, !dbg !1394
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isspace(i8 zeroext) #0 !dbg !1395 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !1399, metadata !DIExpression()), !dbg !1400
  %3 = call i16** @__ctype_b_loc() #11, !dbg !1401
  %4 = load i16*, i16** %3, align 8, !dbg !1401
  %5 = load i8, i8* %2, align 1, !dbg !1401
  %6 = zext i8 %5 to i32, !dbg !1401
  %7 = sext i32 %6 to i64, !dbg !1401
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !1401
  %9 = load i16, i16* %8, align 2, !dbg !1401
  %10 = zext i16 %9 to i32, !dbg !1401
  %11 = and i32 %10, 8192, !dbg !1401
  %12 = icmp ne i32 %11, 0, !dbg !1401
  ret i1 %12, !dbg !1402
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_xvar(%struct.fmt_entry*) #0 !dbg !108 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.fmt_entry*, align 8
  %4 = alloca [21 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = alloca %struct.anon, align 8
  %7 = alloca %struct.anon.0, align 8
  %8 = alloca %union.anon, align 8
  %9 = alloca %struct.anon.2, align 8
  %10 = alloca %struct.anon.2, align 8
  %11 = alloca %union.anon, align 8
  %12 = alloca %union.anon, align 8
  %13 = alloca %struct.anon.0, align 8
  %14 = alloca %struct.anon.0, align 8
  %15 = alloca %struct.anon.8, align 8
  %16 = alloca %struct.anon.8, align 8
  %17 = alloca %struct.anon.8, align 8
  %18 = alloca %struct.anon.8, align 8
  %19 = alloca %struct.anon.12, align 8
  %20 = alloca %struct.anon.13, align 8
  %21 = alloca %struct.anon.14, align 1
  %22 = alloca %struct.anon.14, align 1
  %23 = alloca %struct.anon.16, align 2
  %24 = alloca %struct.anon.16, align 2
  %25 = alloca %struct.anon.18, align 4
  %26 = alloca %struct.anon.18, align 4
  %27 = alloca %struct.anon.20, align 8
  %28 = alloca %struct.anon.20, align 8
  store %struct.fmt_entry* %0, %struct.fmt_entry** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.fmt_entry** %3, metadata !1403, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.declare(metadata [21 x i8]* %4, metadata !1405, metadata !DIExpression()), !dbg !1409
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1410, metadata !DIExpression()), !dbg !1411
  store i8* null, i8** %5, align 8, !dbg !1411
  %29 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1412
  store i8 0, i8* %29, align 16, !dbg !1413
  %30 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1414
  %31 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %30, i32 0, i32 1, !dbg !1415
  %32 = load i32, i32* %31, align 8, !dbg !1415
  switch i32 %32, label %311 [
    i32 17, label %33
    i32 8209, label %33
    i32 18, label %38
    i32 3, label %48
    i32 8195, label %65
    i32 4, label %75
    i32 8, label %86
    i32 7, label %98
    i32 6, label %110
    i32 5, label %121
    i32 10, label %132
    i32 9, label %143
    i32 12, label %154
    i32 11, label %165
    i32 14, label %176
    i32 13, label %187
    i32 15, label %198
    i32 16, label %210
    i32 8198, label %221
    i32 8197, label %233
    i32 8200, label %245
    i32 8199, label %257
    i32 8202, label %269
    i32 8201, label %280
    i32 8204, label %291
    i32 8203, label %301
  ], !dbg !1416

; <label>:33:                                     ; preds = %1, %1
  %34 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1417
  %35 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %34, i32 0, i32 0, !dbg !1419
  %36 = load i8*, i8** %35, align 8, !dbg !1419
  %37 = call i8* @HXmc_strcpy(i8** %5, i8* %36), !dbg !1420
  br label %314, !dbg !1421

; <label>:38:                                     ; preds = %1
  %39 = getelementptr inbounds %struct.anon, %struct.anon* %6, i32 0, i32 0, !dbg !1422
  %40 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1422
  %41 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %40, i32 0, i32 0, !dbg !1422
  %42 = load i8*, i8** %41, align 8, !dbg !1422
  %43 = bitcast i8* %42 to i8**, !dbg !1422
  store i8** %43, i8*** %39, align 8, !dbg !1422
  %44 = getelementptr inbounds %struct.anon, %struct.anon* %6, i32 0, i32 0, !dbg !1422
  %45 = load i8**, i8*** %44, align 8, !dbg !1422
  %46 = load i8*, i8** %45, align 8, !dbg !1423
  %47 = call i8* @HXmc_strcpy(i8** %5, i8* %46), !dbg !1424
  br label %314, !dbg !1425

; <label>:48:                                     ; preds = %1
  %49 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %7, i32 0, i32 0, !dbg !1426
  %50 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1426
  %51 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %50, i32 0, i32 0, !dbg !1426
  %52 = load i8*, i8** %51, align 8, !dbg !1426
  %53 = bitcast i8* %52 to i32*, !dbg !1426
  store i32* %53, i32** %49, align 8, !dbg !1426
  %54 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %7, i32 0, i32 0, !dbg !1426
  %55 = load i32*, i32** %54, align 8, !dbg !1426
  %56 = load i32, i32* %55, align 4, !dbg !1427
  %57 = icmp ne i32 %56, 0, !dbg !1428
  %58 = xor i1 %57, true, !dbg !1428
  %59 = xor i1 %58, true, !dbg !1429
  %60 = zext i1 %59 to i32, !dbg !1429
  %61 = sext i32 %60 to i64, !dbg !1430
  %62 = getelementptr inbounds [2 x i8*], [2 x i8*]* @HXformat2_xvar.tf, i64 0, i64 %61, !dbg !1430
  %63 = load i8*, i8** %62, align 8, !dbg !1430
  %64 = call i8* @HXmc_strcpy(i8** %5, i8* %63), !dbg !1431
  br label %314, !dbg !1432

; <label>:65:                                     ; preds = %1
  %66 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1433
  %67 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %66, i32 0, i32 0, !dbg !1434
  %68 = load i8*, i8** %67, align 8, !dbg !1434
  %69 = icmp ne i8* %68, null, !dbg !1435
  %70 = zext i1 %69 to i32, !dbg !1435
  %71 = sext i32 %70 to i64, !dbg !1436
  %72 = getelementptr inbounds [2 x i8*], [2 x i8*]* @HXformat2_xvar.tf, i64 0, i64 %71, !dbg !1436
  %73 = load i8*, i8** %72, align 8, !dbg !1436
  %74 = call i8* @HXmc_strcpy(i8** %5, i8* %73), !dbg !1437
  br label %314, !dbg !1438

; <label>:75:                                     ; preds = %1
  %76 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1439
  %77 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !1439
  %78 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1439
  %79 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %78, i32 0, i32 0, !dbg !1439
  %80 = load i8*, i8** %79, align 8, !dbg !1439
  store i8* %80, i8** %77, align 8, !dbg !1439
  %81 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !1439
  %82 = load i8*, i8** %81, align 8, !dbg !1439
  %83 = load i8, i8* %82, align 1, !dbg !1439
  %84 = zext i8 %83 to i32, !dbg !1439
  %85 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %76, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i32 %84) #7, !dbg !1439
  br label %314, !dbg !1439

; <label>:86:                                     ; preds = %1
  %87 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1440
  %88 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0, !dbg !1440
  %89 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1440
  %90 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %89, i32 0, i32 0, !dbg !1440
  %91 = load i8*, i8** %90, align 8, !dbg !1440
  %92 = bitcast i8* %91 to i16*, !dbg !1440
  store i16* %92, i16** %88, align 8, !dbg !1440
  %93 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0, !dbg !1440
  %94 = load i16*, i16** %93, align 8, !dbg !1440
  %95 = load i16, i16* %94, align 2, !dbg !1440
  %96 = sext i16 %95 to i32, !dbg !1440
  %97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %87, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i32 %96) #7, !dbg !1440
  br label %314, !dbg !1440

; <label>:98:                                     ; preds = %1
  %99 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1441
  %100 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 0, !dbg !1441
  %101 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1441
  %102 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %101, i32 0, i32 0, !dbg !1441
  %103 = load i8*, i8** %102, align 8, !dbg !1441
  %104 = bitcast i8* %103 to i16*, !dbg !1441
  store i16* %104, i16** %100, align 8, !dbg !1441
  %105 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 0, !dbg !1441
  %106 = load i16*, i16** %105, align 8, !dbg !1441
  %107 = load i16, i16* %106, align 2, !dbg !1441
  %108 = zext i16 %107 to i32, !dbg !1441
  %109 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %99, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 %108) #7, !dbg !1441
  br label %314, !dbg !1441

; <label>:110:                                    ; preds = %1
  %111 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1442
  %112 = getelementptr inbounds %union.anon, %union.anon* %11, i32 0, i32 0, !dbg !1442
  %113 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1442
  %114 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %113, i32 0, i32 0, !dbg !1442
  %115 = load i8*, i8** %114, align 8, !dbg !1442
  store i8* %115, i8** %112, align 8, !dbg !1442
  %116 = getelementptr inbounds %union.anon, %union.anon* %11, i32 0, i32 0, !dbg !1442
  %117 = load i8*, i8** %116, align 8, !dbg !1442
  %118 = load i8, i8* %117, align 1, !dbg !1442
  %119 = sext i8 %118 to i32, !dbg !1442
  %120 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %111, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i32 %119) #7, !dbg !1442
  br label %314, !dbg !1442

; <label>:121:                                    ; preds = %1
  %122 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1443
  %123 = getelementptr inbounds %union.anon, %union.anon* %12, i32 0, i32 0, !dbg !1443
  %124 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1443
  %125 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %124, i32 0, i32 0, !dbg !1443
  %126 = load i8*, i8** %125, align 8, !dbg !1443
  store i8* %126, i8** %123, align 8, !dbg !1443
  %127 = getelementptr inbounds %union.anon, %union.anon* %12, i32 0, i32 0, !dbg !1443
  %128 = load i8*, i8** %127, align 8, !dbg !1443
  %129 = load i8, i8* %128, align 1, !dbg !1443
  %130 = zext i8 %129 to i32, !dbg !1443
  %131 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %122, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 %130) #7, !dbg !1443
  br label %314, !dbg !1443

; <label>:132:                                    ; preds = %1
  %133 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1444
  %134 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %13, i32 0, i32 0, !dbg !1444
  %135 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1444
  %136 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %135, i32 0, i32 0, !dbg !1444
  %137 = load i8*, i8** %136, align 8, !dbg !1444
  %138 = bitcast i8* %137 to i32*, !dbg !1444
  store i32* %138, i32** %134, align 8, !dbg !1444
  %139 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %13, i32 0, i32 0, !dbg !1444
  %140 = load i32*, i32** %139, align 8, !dbg !1444
  %141 = load i32, i32* %140, align 4, !dbg !1444
  %142 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %133, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i32 %141) #7, !dbg !1444
  br label %314, !dbg !1444

; <label>:143:                                    ; preds = %1
  %144 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1445
  %145 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %14, i32 0, i32 0, !dbg !1445
  %146 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1445
  %147 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %146, i32 0, i32 0, !dbg !1445
  %148 = load i8*, i8** %147, align 8, !dbg !1445
  %149 = bitcast i8* %148 to i32*, !dbg !1445
  store i32* %149, i32** %145, align 8, !dbg !1445
  %150 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %14, i32 0, i32 0, !dbg !1445
  %151 = load i32*, i32** %150, align 8, !dbg !1445
  %152 = load i32, i32* %151, align 4, !dbg !1445
  %153 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %144, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 %152) #7, !dbg !1445
  br label %314, !dbg !1445

; <label>:154:                                    ; preds = %1
  %155 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1446
  %156 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %15, i32 0, i32 0, !dbg !1446
  %157 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1446
  %158 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %157, i32 0, i32 0, !dbg !1446
  %159 = load i8*, i8** %158, align 8, !dbg !1446
  %160 = bitcast i8* %159 to i64*, !dbg !1446
  store i64* %160, i64** %156, align 8, !dbg !1446
  %161 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %15, i32 0, i32 0, !dbg !1446
  %162 = load i64*, i64** %161, align 8, !dbg !1446
  %163 = load i64, i64* %162, align 8, !dbg !1446
  %164 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %155, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i64 %163) #7, !dbg !1446
  br label %314, !dbg !1446

; <label>:165:                                    ; preds = %1
  %166 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1447
  %167 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %16, i32 0, i32 0, !dbg !1447
  %168 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1447
  %169 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %168, i32 0, i32 0, !dbg !1447
  %170 = load i8*, i8** %169, align 8, !dbg !1447
  %171 = bitcast i8* %170 to i64*, !dbg !1447
  store i64* %171, i64** %167, align 8, !dbg !1447
  %172 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %16, i32 0, i32 0, !dbg !1447
  %173 = load i64*, i64** %172, align 8, !dbg !1447
  %174 = load i64, i64* %173, align 8, !dbg !1447
  %175 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %166, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i64 %174) #7, !dbg !1447
  br label %314, !dbg !1447

; <label>:176:                                    ; preds = %1
  %177 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1448
  %178 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %17, i32 0, i32 0, !dbg !1448
  %179 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1448
  %180 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %179, i32 0, i32 0, !dbg !1448
  %181 = load i8*, i8** %180, align 8, !dbg !1448
  %182 = bitcast i8* %181 to i64*, !dbg !1448
  store i64* %182, i64** %178, align 8, !dbg !1448
  %183 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %17, i32 0, i32 0, !dbg !1448
  %184 = load i64*, i64** %183, align 8, !dbg !1448
  %185 = load i64, i64* %184, align 8, !dbg !1448
  %186 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %177, i64 21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i64 %185) #7, !dbg !1448
  br label %314, !dbg !1448

; <label>:187:                                    ; preds = %1
  %188 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1449
  %189 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %18, i32 0, i32 0, !dbg !1449
  %190 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1449
  %191 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %190, i32 0, i32 0, !dbg !1449
  %192 = load i8*, i8** %191, align 8, !dbg !1449
  %193 = bitcast i8* %192 to i64*, !dbg !1449
  store i64* %193, i64** %189, align 8, !dbg !1449
  %194 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %18, i32 0, i32 0, !dbg !1449
  %195 = load i64*, i64** %194, align 8, !dbg !1449
  %196 = load i64, i64* %195, align 8, !dbg !1449
  %197 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %188, i64 21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i64 %196) #7, !dbg !1449
  br label %314, !dbg !1449

; <label>:198:                                    ; preds = %1
  %199 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1450
  %200 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %19, i32 0, i32 0, !dbg !1450
  %201 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1450
  %202 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %201, i32 0, i32 0, !dbg !1450
  %203 = load i8*, i8** %202, align 8, !dbg !1450
  %204 = bitcast i8* %203 to float*, !dbg !1450
  store float* %204, float** %200, align 8, !dbg !1450
  %205 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %19, i32 0, i32 0, !dbg !1450
  %206 = load float*, float** %205, align 8, !dbg !1450
  %207 = load float, float* %206, align 4, !dbg !1450
  %208 = fpext float %207 to double, !dbg !1450
  %209 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %199, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), double %208) #7, !dbg !1450
  br label %314, !dbg !1450

; <label>:210:                                    ; preds = %1
  %211 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1451
  %212 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %20, i32 0, i32 0, !dbg !1451
  %213 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1451
  %214 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %213, i32 0, i32 0, !dbg !1451
  %215 = load i8*, i8** %214, align 8, !dbg !1451
  %216 = bitcast i8* %215 to double*, !dbg !1451
  store double* %216, double** %212, align 8, !dbg !1451
  %217 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %20, i32 0, i32 0, !dbg !1451
  %218 = load double*, double** %217, align 8, !dbg !1451
  %219 = load double, double* %218, align 8, !dbg !1451
  %220 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %211, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), double %219) #7, !dbg !1451
  br label %314, !dbg !1451

; <label>:221:                                    ; preds = %1
  %222 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1452
  %223 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %21, i32 0, i32 0, !dbg !1452
  %224 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1452
  %225 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %224, i32 0, i32 0, !dbg !1452
  %226 = load i8*, i8** %225, align 8, !dbg !1452
  %227 = ptrtoint i8* %226 to i64, !dbg !1452
  %228 = trunc i64 %227 to i8, !dbg !1452
  store i8 %228, i8* %223, align 1, !dbg !1452
  %229 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %21, i32 0, i32 0, !dbg !1452
  %230 = load i8, i8* %229, align 1, !dbg !1452
  %231 = sext i8 %230 to i32, !dbg !1452
  %232 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %222, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i32 %231) #7, !dbg !1452
  br label %314, !dbg !1452

; <label>:233:                                    ; preds = %1
  %234 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1453
  %235 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %22, i32 0, i32 0, !dbg !1453
  %236 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1453
  %237 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %236, i32 0, i32 0, !dbg !1453
  %238 = load i8*, i8** %237, align 8, !dbg !1453
  %239 = ptrtoint i8* %238 to i64, !dbg !1453
  %240 = trunc i64 %239 to i8, !dbg !1453
  store i8 %240, i8* %235, align 1, !dbg !1453
  %241 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %22, i32 0, i32 0, !dbg !1453
  %242 = load i8, i8* %241, align 1, !dbg !1453
  %243 = zext i8 %242 to i32, !dbg !1453
  %244 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %234, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 %243) #7, !dbg !1453
  br label %314, !dbg !1453

; <label>:245:                                    ; preds = %1
  %246 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1454
  %247 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %23, i32 0, i32 0, !dbg !1454
  %248 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1454
  %249 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %248, i32 0, i32 0, !dbg !1454
  %250 = load i8*, i8** %249, align 8, !dbg !1454
  %251 = ptrtoint i8* %250 to i64, !dbg !1454
  %252 = trunc i64 %251 to i16, !dbg !1454
  store i16 %252, i16* %247, align 2, !dbg !1454
  %253 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %23, i32 0, i32 0, !dbg !1454
  %254 = load i16, i16* %253, align 2, !dbg !1454
  %255 = sext i16 %254 to i32, !dbg !1454
  %256 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %246, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i32 %255) #7, !dbg !1454
  br label %314, !dbg !1454

; <label>:257:                                    ; preds = %1
  %258 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1455
  %259 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %24, i32 0, i32 0, !dbg !1455
  %260 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1455
  %261 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %260, i32 0, i32 0, !dbg !1455
  %262 = load i8*, i8** %261, align 8, !dbg !1455
  %263 = ptrtoint i8* %262 to i64, !dbg !1455
  %264 = trunc i64 %263 to i16, !dbg !1455
  store i16 %264, i16* %259, align 2, !dbg !1455
  %265 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %24, i32 0, i32 0, !dbg !1455
  %266 = load i16, i16* %265, align 2, !dbg !1455
  %267 = zext i16 %266 to i32, !dbg !1455
  %268 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %258, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 %267) #7, !dbg !1455
  br label %314, !dbg !1455

; <label>:269:                                    ; preds = %1
  %270 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1456
  %271 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %25, i32 0, i32 0, !dbg !1456
  %272 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1456
  %273 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %272, i32 0, i32 0, !dbg !1456
  %274 = load i8*, i8** %273, align 8, !dbg !1456
  %275 = ptrtoint i8* %274 to i64, !dbg !1456
  %276 = trunc i64 %275 to i32, !dbg !1456
  store i32 %276, i32* %271, align 4, !dbg !1456
  %277 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %25, i32 0, i32 0, !dbg !1456
  %278 = load i32, i32* %277, align 4, !dbg !1456
  %279 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %270, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i32 %278) #7, !dbg !1456
  br label %314, !dbg !1456

; <label>:280:                                    ; preds = %1
  %281 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1457
  %282 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %26, i32 0, i32 0, !dbg !1457
  %283 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1457
  %284 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %283, i32 0, i32 0, !dbg !1457
  %285 = load i8*, i8** %284, align 8, !dbg !1457
  %286 = ptrtoint i8* %285 to i64, !dbg !1457
  %287 = trunc i64 %286 to i32, !dbg !1457
  store i32 %287, i32* %282, align 4, !dbg !1457
  %288 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %26, i32 0, i32 0, !dbg !1457
  %289 = load i32, i32* %288, align 4, !dbg !1457
  %290 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %281, i64 21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 %289) #7, !dbg !1457
  br label %314, !dbg !1457

; <label>:291:                                    ; preds = %1
  %292 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1458
  %293 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %27, i32 0, i32 0, !dbg !1458
  %294 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1458
  %295 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %294, i32 0, i32 0, !dbg !1458
  %296 = load i8*, i8** %295, align 8, !dbg !1458
  %297 = ptrtoint i8* %296 to i64, !dbg !1458
  store i64 %297, i64* %293, align 8, !dbg !1458
  %298 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %27, i32 0, i32 0, !dbg !1458
  %299 = load i64, i64* %298, align 8, !dbg !1458
  %300 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %292, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i64 %299) #7, !dbg !1458
  br label %314, !dbg !1458

; <label>:301:                                    ; preds = %1
  %302 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1459
  %303 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %28, i32 0, i32 0, !dbg !1459
  %304 = load %struct.fmt_entry*, %struct.fmt_entry** %3, align 8, !dbg !1459
  %305 = getelementptr inbounds %struct.fmt_entry, %struct.fmt_entry* %304, i32 0, i32 0, !dbg !1459
  %306 = load i8*, i8** %305, align 8, !dbg !1459
  %307 = ptrtoint i8* %306 to i64, !dbg !1459
  store i64 %307, i64* %303, align 8, !dbg !1459
  %308 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %28, i32 0, i32 0, !dbg !1459
  %309 = load i64, i64* %308, align 8, !dbg !1459
  %310 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %302, i64 21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i64 %309) #7, !dbg !1459
  br label %314, !dbg !1459

; <label>:311:                                    ; preds = %1
  %312 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1460
  %313 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %312, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.HXformat2_xvar, i32 0, i32 0)), !dbg !1461
  store i8* @HXformat2_nexp, i8** %2, align 8, !dbg !1462
  br label %324, !dbg !1462

; <label>:314:                                    ; preds = %301, %291, %280, %269, %257, %245, %233, %221, %210, %198, %187, %176, %165, %154, %143, %132, %121, %110, %98, %86, %75, %65, %48, %38, %33
  %315 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1463
  %316 = load i8, i8* %315, align 16, !dbg !1463
  %317 = sext i8 %316 to i32, !dbg !1463
  %318 = icmp ne i32 %317, 0, !dbg !1465
  br i1 %318, label %319, label %322, !dbg !1466

; <label>:319:                                    ; preds = %314
  %320 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i32 0, i32 0, !dbg !1467
  %321 = call i8* @HXmc_strcpy(i8** %5, i8* %320), !dbg !1468
  br label %322, !dbg !1468

; <label>:322:                                    ; preds = %319, %314
  %323 = load i8*, i8** %5, align 8, !dbg !1469
  store i8* %323, i8** %2, align 8, !dbg !1470
  br label %324, !dbg !1470

; <label>:324:                                    ; preds = %322, %311
  %325 = load i8*, i8** %2, align 8, !dbg !1471
  ret i8* %325, !dbg !1471
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_xcall(i8*, i8**, %struct.HXmap*) #0 !dbg !1472 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca %struct.HXmap*, align 8
  %8 = alloca %struct.HXformat2_fd*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca %struct.HXdeque*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8**, align 8
  %17 = alloca %union.anon, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1475, metadata !DIExpression()), !dbg !1476
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !1477, metadata !DIExpression()), !dbg !1478
  store %struct.HXmap* %2, %struct.HXmap** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %7, metadata !1479, metadata !DIExpression()), !dbg !1480
  call void @llvm.dbg.declare(metadata %struct.HXformat2_fd** %8, metadata !1481, metadata !DIExpression()), !dbg !1483
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1484, metadata !DIExpression()), !dbg !1485
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1486, metadata !DIExpression()), !dbg !1487
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !1488, metadata !DIExpression()), !dbg !1489
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %12, metadata !1490, metadata !DIExpression()), !dbg !1509
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1510, metadata !DIExpression()), !dbg !1511
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1512, metadata !DIExpression()), !dbg !1513
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1514, metadata !DIExpression()), !dbg !1515
  %18 = call %struct.HXdeque* @HXdeque_init(), !dbg !1516
  store %struct.HXdeque* %18, %struct.HXdeque** %12, align 8, !dbg !1517
  %19 = load %struct.HXdeque*, %struct.HXdeque** %12, align 8, !dbg !1518
  %20 = icmp eq %struct.HXdeque* %19, null, !dbg !1520
  br i1 %20, label %21, label %22, !dbg !1521

; <label>:21:                                     ; preds = %3
  store i8* null, i8** %4, align 8, !dbg !1522
  br label %156, !dbg !1522

; <label>:22:                                     ; preds = %3
  %23 = load i8*, i8** %5, align 8, !dbg !1523
  %24 = call i8* @bsearch(i8* %23, i8* bitcast ([8 x %struct.HXformat2_fd]* @HXformat2_fmap to i8*), i64 8, i64 32, i32 (i8*, i8*)* @HXformat2_fmap_compare), !dbg !1524
  %25 = bitcast i8* %24 to %struct.HXformat2_fd*, !dbg !1524
  store %struct.HXformat2_fd* %25, %struct.HXformat2_fd** %8, align 8, !dbg !1525
  %26 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %8, align 8, !dbg !1526
  %27 = icmp ne %struct.HXformat2_fd* %26, null, !dbg !1527
  br i1 %27, label %28, label %32, !dbg !1528

; <label>:28:                                     ; preds = %22
  %29 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %8, align 8, !dbg !1529
  %30 = getelementptr inbounds %struct.HXformat2_fd, %struct.HXformat2_fd* %29, i32 0, i32 2, !dbg !1530
  %31 = load i8*, i8** %30, align 8, !dbg !1530
  br label %33, !dbg !1528

; <label>:32:                                     ; preds = %22
  br label %33, !dbg !1528

; <label>:33:                                     ; preds = %32, %28
  %34 = phi i8* [ %31, %28 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), %32 ], !dbg !1528
  store i8* %34, i8** %14, align 8, !dbg !1531
  %35 = load i8**, i8*** %6, align 8, !dbg !1532
  %36 = load i8*, i8** %35, align 8, !dbg !1534
  %37 = load i8, i8* %36, align 1, !dbg !1535
  %38 = sext i8 %37 to i32, !dbg !1535
  %39 = icmp eq i32 %38, 41, !dbg !1536
  br i1 %39, label %40, label %44, !dbg !1537

; <label>:40:                                     ; preds = %33
  %41 = load i8**, i8*** %6, align 8, !dbg !1538
  %42 = load i8*, i8** %41, align 8, !dbg !1539
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !1539
  store i8* %43, i8** %41, align 8, !dbg !1539
  br label %114, !dbg !1539

; <label>:44:                                     ; preds = %33
  %45 = load i8**, i8*** %6, align 8, !dbg !1540
  %46 = load i8*, i8** %45, align 8, !dbg !1542
  store i8* %46, i8** %13, align 8, !dbg !1543
  br label %47, !dbg !1544

; <label>:47:                                     ; preds = %109, %44
  %48 = load i8*, i8** %13, align 8, !dbg !1545
  %49 = load i8, i8* %48, align 1, !dbg !1547
  %50 = sext i8 %49 to i32, !dbg !1547
  %51 = icmp ne i32 %50, 0, !dbg !1548
  br i1 %51, label %52, label %113, !dbg !1549

; <label>:52:                                     ; preds = %47
  br label %53, !dbg !1550

; <label>:53:                                     ; preds = %57, %52
  %54 = load i8*, i8** %13, align 8, !dbg !1552
  %55 = load i8, i8* %54, align 1, !dbg !1553
  %56 = call zeroext i1 @HX_isspace(i8 zeroext %55), !dbg !1554
  br i1 %56, label %57, label %60, !dbg !1550

; <label>:57:                                     ; preds = %53
  %58 = load i8*, i8** %13, align 8, !dbg !1555
  %59 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !1555
  store i8* %59, i8** %13, align 8, !dbg !1555
  br label %53, !dbg !1550, !llvm.loop !1556

; <label>:60:                                     ; preds = %53
  %61 = load i8*, i8** %13, align 8, !dbg !1558
  %62 = load i8**, i8*** %6, align 8, !dbg !1559
  store i8* %61, i8** %62, align 8, !dbg !1560
  %63 = load i8*, i8** %13, align 8, !dbg !1561
  %64 = load i8*, i8** %14, align 8, !dbg !1562
  %65 = load i8**, i8*** %6, align 8, !dbg !1563
  %66 = call i8* @HXparse_dequote_fmt(i8* %63, i8* %64, i8** %65), !dbg !1564
  store i8* %66, i8** %9, align 8, !dbg !1565
  %67 = load i8*, i8** %9, align 8, !dbg !1566
  %68 = icmp eq i8* %67, null, !dbg !1568
  br i1 %68, label %69, label %70, !dbg !1569

; <label>:69:                                     ; preds = %60
  br label %147, !dbg !1570

; <label>:70:                                     ; preds = %60
  %71 = load i8*, i8** %9, align 8, !dbg !1571
  %72 = call i8* @strstr(i8* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0)) #10, !dbg !1573
  %73 = icmp ne i8* %72, null, !dbg !1574
  br i1 %73, label %74, label %85, !dbg !1575

; <label>:74:                                     ; preds = %70
  store i8* null, i8** %10, align 8, !dbg !1576
  %75 = load %struct.HXmap*, %struct.HXmap** %7, align 8, !dbg !1578
  %76 = call %struct.HXformat_map* @fmt_export(%struct.HXmap* %75), !dbg !1579
  %77 = load i8*, i8** %9, align 8, !dbg !1580
  %78 = call i32 @HXformat2_aprintf(%struct.HXformat_map* %76, i8** %10, i8* %77), !dbg !1581
  store i32 %78, i32* %15, align 4, !dbg !1582
  %79 = load i8*, i8** %10, align 8, !dbg !1583
  %80 = icmp eq i8* %79, null, !dbg !1585
  br i1 %80, label %81, label %82, !dbg !1586

; <label>:81:                                     ; preds = %74
  br label %154, !dbg !1587

; <label>:82:                                     ; preds = %74
  %83 = load i8*, i8** %9, align 8, !dbg !1588
  call void @HXmc_free(i8* %83), !dbg !1589
  %84 = load i8*, i8** %10, align 8, !dbg !1590
  store i8* %84, i8** %9, align 8, !dbg !1591
  br label %85, !dbg !1592

; <label>:85:                                     ; preds = %82, %70
  %86 = load %struct.HXdeque*, %struct.HXdeque** %12, align 8, !dbg !1593
  %87 = load i8*, i8** %9, align 8, !dbg !1595
  %88 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %86, i8* %87), !dbg !1596
  %89 = icmp eq %struct.HXdeque_node* %88, null, !dbg !1597
  br i1 %89, label %90, label %91, !dbg !1598

; <label>:90:                                     ; preds = %85
  br label %154, !dbg !1599

; <label>:91:                                     ; preds = %85
  %92 = load i8**, i8*** %6, align 8, !dbg !1600
  %93 = load i8*, i8** %92, align 8, !dbg !1602
  %94 = load i8, i8* %93, align 1, !dbg !1603
  %95 = sext i8 %94 to i32, !dbg !1603
  %96 = icmp eq i32 %95, 0, !dbg !1604
  br i1 %96, label %97, label %98, !dbg !1605

; <label>:97:                                     ; preds = %91
  br label %113, !dbg !1606

; <label>:98:                                     ; preds = %91
  %99 = load i8**, i8*** %6, align 8, !dbg !1607
  %100 = load i8*, i8** %99, align 8, !dbg !1609
  %101 = load i8, i8* %100, align 1, !dbg !1610
  %102 = sext i8 %101 to i32, !dbg !1610
  %103 = icmp eq i32 %102, 41, !dbg !1611
  br i1 %103, label %104, label %108, !dbg !1612

; <label>:104:                                    ; preds = %98
  %105 = load i8**, i8*** %6, align 8, !dbg !1613
  %106 = load i8*, i8** %105, align 8, !dbg !1615
  %107 = getelementptr inbounds i8, i8* %106, i32 1, !dbg !1615
  store i8* %107, i8** %105, align 8, !dbg !1615
  br label %113, !dbg !1616

; <label>:108:                                    ; preds = %98
  br label %109, !dbg !1617

; <label>:109:                                    ; preds = %108
  %110 = load i8**, i8*** %6, align 8, !dbg !1618
  %111 = load i8*, i8** %110, align 8, !dbg !1619
  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !1619
  store i8* %112, i8** %110, align 8, !dbg !1619
  store i8* %112, i8** %13, align 8, !dbg !1620
  br label %47, !dbg !1621, !llvm.loop !1622

; <label>:113:                                    ; preds = %104, %97, %47
  br label %114

; <label>:114:                                    ; preds = %113, %40
  store i8* null, i8** %9, align 8, !dbg !1624
  %115 = load %struct.HXdeque*, %struct.HXdeque** %12, align 8, !dbg !1625
  %116 = call i8** @HXdeque_to_vec(%struct.HXdeque* %115, i32* null), !dbg !1625
  store i8** %116, i8*** %11, align 8, !dbg !1626
  %117 = load i8**, i8*** %11, align 8, !dbg !1627
  %118 = icmp eq i8** %117, null, !dbg !1629
  br i1 %118, label %119, label %120, !dbg !1630

; <label>:119:                                    ; preds = %114
  br label %147, !dbg !1631

; <label>:120:                                    ; preds = %114
  store i8* @HXformat2_nexp, i8** %9, align 8, !dbg !1632
  %121 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %8, align 8, !dbg !1633
  %122 = icmp ne %struct.HXformat2_fd* %121, null, !dbg !1635
  br i1 %122, label %123, label %144, !dbg !1636

; <label>:123:                                    ; preds = %120
  %124 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %8, align 8, !dbg !1637
  %125 = getelementptr inbounds %struct.HXformat2_fd, %struct.HXformat2_fd* %124, i32 0, i32 3, !dbg !1638
  %126 = load i1 (%struct.HXmap*)*, i1 (%struct.HXmap*)** %125, align 8, !dbg !1638
  %127 = icmp eq i1 (%struct.HXmap*)* %126, null, !dbg !1639
  br i1 %127, label %134, label %128, !dbg !1640

; <label>:128:                                    ; preds = %123
  %129 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %8, align 8, !dbg !1641
  %130 = getelementptr inbounds %struct.HXformat2_fd, %struct.HXformat2_fd* %129, i32 0, i32 3, !dbg !1642
  %131 = load i1 (%struct.HXmap*)*, i1 (%struct.HXmap*)** %130, align 8, !dbg !1642
  %132 = load %struct.HXmap*, %struct.HXmap** %7, align 8, !dbg !1643
  %133 = call zeroext i1 %131(%struct.HXmap* %132), !dbg !1641
  br i1 %133, label %134, label %144, !dbg !1644

; <label>:134:                                    ; preds = %128, %123
  %135 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %8, align 8, !dbg !1645
  %136 = getelementptr inbounds %struct.HXformat2_fd, %struct.HXformat2_fd* %135, i32 0, i32 1, !dbg !1646
  %137 = load i8* (i32, i8**)*, i8* (i32, i8**)** %136, align 8, !dbg !1646
  %138 = load %struct.HXdeque*, %struct.HXdeque** %12, align 8, !dbg !1647
  %139 = getelementptr inbounds %struct.HXdeque, %struct.HXdeque* %138, i32 0, i32 3, !dbg !1648
  %140 = load i32, i32* %139, align 8, !dbg !1648
  %141 = load i8**, i8*** %11, align 8, !dbg !1649
  store i8** %141, i8*** %16, align 8, !dbg !1649
  %142 = load i8**, i8*** %16, align 8, !dbg !1649
  %143 = call i8* %137(i32 %140, i8** %142), !dbg !1645
  store i8* %143, i8** %9, align 8, !dbg !1651
  br label %144, !dbg !1652

; <label>:144:                                    ; preds = %134, %128, %120
  %145 = load i8**, i8*** %11, align 8, !dbg !1653
  %146 = bitcast i8** %145 to i8*, !dbg !1653
  call void @free(i8* %146) #7, !dbg !1654
  br label %147, !dbg !1654

; <label>:147:                                    ; preds = %154, %144, %119, %69
  %148 = load %struct.HXdeque*, %struct.HXdeque** %12, align 8, !dbg !1655
  %149 = getelementptr inbounds %union.anon, %union.anon* %17, i32 0, i32 0, !dbg !1656
  store i8* bitcast (void (i8*)* @HXmc_free to i8*), i8** %149, align 8, !dbg !1656
  %150 = getelementptr inbounds %union.anon, %union.anon* %17, i32 0, i32 0, !dbg !1656
  %151 = load i8*, i8** %150, align 8, !dbg !1656
  %152 = bitcast i8* %151 to void (i8*)*, !dbg !1656
  call void @HXdeque_genocide2(%struct.HXdeque* %148, void (i8*)* %152), !dbg !1657
  %153 = load i8*, i8** %9, align 8, !dbg !1658
  store i8* %153, i8** %4, align 8, !dbg !1659
  br label %156, !dbg !1659

; <label>:154:                                    ; preds = %90, %81
  %155 = load i8*, i8** %9, align 8, !dbg !1660
  call void @HXmc_free(i8* %155), !dbg !1661
  store i8* null, i8** %9, align 8, !dbg !1662
  br label %147, !dbg !1663

; <label>:156:                                    ; preds = %147, %21
  %157 = load i8*, i8** %4, align 8, !dbg !1664
  ret i8* %157, !dbg !1664
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXformat2_fmap_compare(i8*, i8*) #0 !dbg !1665 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXformat2_fd*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1668, metadata !DIExpression()), !dbg !1669
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1670, metadata !DIExpression()), !dbg !1671
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1672, metadata !DIExpression()), !dbg !1673
  %7 = load i8*, i8** %3, align 8, !dbg !1674
  store i8* %7, i8** %5, align 8, !dbg !1673
  call void @llvm.dbg.declare(metadata %struct.HXformat2_fd** %6, metadata !1675, metadata !DIExpression()), !dbg !1676
  %8 = load i8*, i8** %4, align 8, !dbg !1677
  %9 = bitcast i8* %8 to %struct.HXformat2_fd*, !dbg !1677
  store %struct.HXformat2_fd* %9, %struct.HXformat2_fd** %6, align 8, !dbg !1676
  %10 = load i8*, i8** %5, align 8, !dbg !1678
  %11 = load %struct.HXformat2_fd*, %struct.HXformat2_fd** %6, align 8, !dbg !1679
  %12 = getelementptr inbounds %struct.HXformat2_fd, %struct.HXformat2_fd* %11, i32 0, i32 0, !dbg !1680
  %13 = load i8*, i8** %12, align 8, !dbg !1680
  %14 = call i32 @strcmp(i8* %10, i8* %13) #10, !dbg !1681
  ret i32 %14, !dbg !1682
}

declare i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*) #4

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_echo(i32, i8**) #0 !dbg !1683 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1686, metadata !DIExpression()), !dbg !1687
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !1688, metadata !DIExpression()), !dbg !1689
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1690, metadata !DIExpression()), !dbg !1691
  %7 = call i8* @HXmc_meminit(i8* null, i64 0), !dbg !1692
  store i8* %7, i8** %5, align 8, !dbg !1691
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1693, metadata !DIExpression()), !dbg !1694
  %8 = call i8* @HXmc_strcat(i8** %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0)), !dbg !1695
  store i32 0, i32* %6, align 4, !dbg !1696
  br label %9, !dbg !1698

; <label>:9:                                      ; preds = %22, %2
  %10 = load i32, i32* %6, align 4, !dbg !1699
  %11 = load i32, i32* %3, align 4, !dbg !1701
  %12 = icmp slt i32 %10, %11, !dbg !1702
  br i1 %12, label %13, label %25, !dbg !1703

; <label>:13:                                     ; preds = %9
  %14 = call i8* @HXmc_strcat(i8** %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0)), !dbg !1704
  %15 = load i8**, i8*** %4, align 8, !dbg !1706
  %16 = load i32, i32* %6, align 4, !dbg !1707
  %17 = sext i32 %16 to i64, !dbg !1706
  %18 = getelementptr inbounds i8*, i8** %15, i64 %17, !dbg !1706
  %19 = load i8*, i8** %18, align 8, !dbg !1706
  %20 = call i8* @HXmc_strcat(i8** %5, i8* %19), !dbg !1708
  %21 = call i8* @HXmc_strcat(i8** %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0)), !dbg !1709
  br label %22, !dbg !1710

; <label>:22:                                     ; preds = %13
  %23 = load i32, i32* %6, align 4, !dbg !1711
  %24 = add nsw i32 %23, 1, !dbg !1711
  store i32 %24, i32* %6, align 4, !dbg !1711
  br label %9, !dbg !1712, !llvm.loop !1713

; <label>:25:                                     ; preds = %9
  %26 = call i8* @HXmc_strcat(i8** %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0)), !dbg !1715
  %27 = load i8*, i8** %5, align 8, !dbg !1716
  ret i8* %27, !dbg !1717
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_env(i32, i8**) #0 !dbg !1718 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1719, metadata !DIExpression()), !dbg !1720
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1721, metadata !DIExpression()), !dbg !1722
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1723, metadata !DIExpression()), !dbg !1724
  %7 = load i32, i32* %4, align 4, !dbg !1725
  %8 = icmp eq i32 %7, 0, !dbg !1727
  br i1 %8, label %9, label %10, !dbg !1728

; <label>:9:                                      ; preds = %2
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1729
  br label %23, !dbg !1729

; <label>:10:                                     ; preds = %2
  %11 = load i8**, i8*** %5, align 8, !dbg !1730
  %12 = getelementptr inbounds i8*, i8** %11, i64 0, !dbg !1730
  %13 = load i8*, i8** %12, align 8, !dbg !1730
  %14 = call i8* @getenv(i8* %13) #7, !dbg !1731
  store i8* %14, i8** %6, align 8, !dbg !1732
  %15 = load i8*, i8** %6, align 8, !dbg !1733
  %16 = icmp eq i8* %15, null, !dbg !1734
  br i1 %16, label %17, label %18, !dbg !1735

; <label>:17:                                     ; preds = %10
  br label %21, !dbg !1735

; <label>:18:                                     ; preds = %10
  %19 = load i8*, i8** %6, align 8, !dbg !1736
  %20 = call i8* @HXmc_strinit(i8* %19), !dbg !1737
  br label %21, !dbg !1735

; <label>:21:                                     ; preds = %18, %17
  %22 = phi i8* [ @HXformat2_nexp, %17 ], [ %20, %18 ], !dbg !1735
  store i8* %22, i8** %3, align 8, !dbg !1738
  br label %23, !dbg !1738

; <label>:23:                                     ; preds = %21, %9
  %24 = load i8*, i8** %3, align 8, !dbg !1739
  ret i8* %24, !dbg !1739
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_exec(i32, i8**) #0 !dbg !1740 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1741, metadata !DIExpression()), !dbg !1742
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1743, metadata !DIExpression()), !dbg !1744
  %6 = load i32, i32* %4, align 4, !dbg !1745
  %7 = icmp eq i32 %6, 0, !dbg !1747
  br i1 %7, label %8, label %9, !dbg !1748

; <label>:8:                                      ; preds = %2
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1749
  br label %12, !dbg !1749

; <label>:9:                                      ; preds = %2
  %10 = load i8**, i8*** %5, align 8, !dbg !1750
  %11 = call i8* @HXformat2_exec1(i8** %10, i1 zeroext false), !dbg !1751
  store i8* %11, i8** %3, align 8, !dbg !1752
  br label %12, !dbg !1752

; <label>:12:                                     ; preds = %9, %8
  %13 = load i8*, i8** %3, align 8, !dbg !1753
  ret i8* %13, !dbg !1753
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HXformat2_execchk(%struct.HXmap*) #0 !dbg !1754 {
  %2 = alloca %struct.HXmap*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %2, metadata !1755, metadata !DIExpression()), !dbg !1756
  %3 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !1757
  %4 = call %struct.HXmap_node* @HXmap_find(%struct.HXmap* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0)), !dbg !1758
  %5 = icmp ne %struct.HXmap_node* %4, null, !dbg !1759
  ret i1 %5, !dbg !1760
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_if(i32, i8**) #0 !dbg !1761 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1762, metadata !DIExpression()), !dbg !1763
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1764, metadata !DIExpression()), !dbg !1765
  %6 = load i32, i32* %4, align 4, !dbg !1766
  %7 = icmp slt i32 %6, 2, !dbg !1768
  br i1 %7, label %8, label %10, !dbg !1769

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* %4, align 4, !dbg !1770
  call void @HXformat2_insuf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.HXformat2_if, i32 0, i32 0), i32 %9), !dbg !1772
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1773
  br label %50, !dbg !1773

; <label>:10:                                     ; preds = %2
  %11 = load i8**, i8*** %5, align 8, !dbg !1774
  %12 = getelementptr inbounds i8*, i8** %11, i64 0, !dbg !1774
  %13 = load i8*, i8** %12, align 8, !dbg !1774
  %14 = load i8, i8* %13, align 1, !dbg !1776
  %15 = sext i8 %14 to i32, !dbg !1776
  %16 = icmp ne i32 %15, 0, !dbg !1777
  br i1 %16, label %17, label %32, !dbg !1778

; <label>:17:                                     ; preds = %10
  %18 = load i8**, i8*** %5, align 8, !dbg !1779
  %19 = getelementptr inbounds i8*, i8** %18, i64 1, !dbg !1779
  %20 = load i8*, i8** %19, align 8, !dbg !1779
  %21 = load i8, i8* %20, align 1, !dbg !1780
  %22 = sext i8 %21 to i32, !dbg !1780
  %23 = icmp ne i32 %22, 0, !dbg !1781
  br i1 %23, label %24, label %29, !dbg !1782

; <label>:24:                                     ; preds = %17
  %25 = load i8**, i8*** %5, align 8, !dbg !1783
  %26 = getelementptr inbounds i8*, i8** %25, i64 1, !dbg !1783
  %27 = load i8*, i8** %26, align 8, !dbg !1783
  %28 = call i8* @HXmc_strinit(i8* %27), !dbg !1784
  br label %30, !dbg !1782

; <label>:29:                                     ; preds = %17
  br label %30, !dbg !1782

; <label>:30:                                     ; preds = %29, %24
  %31 = phi i8* [ %28, %24 ], [ @HXformat2_nexp, %29 ], !dbg !1782
  store i8* %31, i8** %3, align 8, !dbg !1785
  br label %50, !dbg !1785

; <label>:32:                                     ; preds = %10
  %33 = load i32, i32* %4, align 4, !dbg !1786
  %34 = icmp sge i32 %33, 3, !dbg !1787
  br i1 %34, label %35, label %47, !dbg !1788

; <label>:35:                                     ; preds = %32
  %36 = load i8**, i8*** %5, align 8, !dbg !1789
  %37 = getelementptr inbounds i8*, i8** %36, i64 2, !dbg !1789
  %38 = load i8*, i8** %37, align 8, !dbg !1789
  %39 = load i8, i8* %38, align 1, !dbg !1790
  %40 = sext i8 %39 to i32, !dbg !1790
  %41 = icmp ne i32 %40, 0, !dbg !1791
  br i1 %41, label %42, label %47, !dbg !1792

; <label>:42:                                     ; preds = %35
  %43 = load i8**, i8*** %5, align 8, !dbg !1793
  %44 = getelementptr inbounds i8*, i8** %43, i64 2, !dbg !1793
  %45 = load i8*, i8** %44, align 8, !dbg !1793
  %46 = call i8* @HXmc_strinit(i8* %45), !dbg !1794
  br label %48, !dbg !1792

; <label>:47:                                     ; preds = %35, %32
  br label %48, !dbg !1792

; <label>:48:                                     ; preds = %47, %42
  %49 = phi i8* [ %46, %42 ], [ @HXformat2_nexp, %47 ], !dbg !1792
  store i8* %49, i8** %3, align 8, !dbg !1795
  br label %50, !dbg !1795

; <label>:50:                                     ; preds = %48, %30, %8
  %51 = load i8*, i8** %3, align 8, !dbg !1796
  ret i8* %51, !dbg !1796
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_lower(i32, i8**) #0 !dbg !1797 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1798, metadata !DIExpression()), !dbg !1799
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1800, metadata !DIExpression()), !dbg !1801
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1802, metadata !DIExpression()), !dbg !1803
  %7 = load i32, i32* %4, align 4, !dbg !1804
  %8 = icmp eq i32 %7, 0, !dbg !1806
  br i1 %8, label %9, label %10, !dbg !1807

; <label>:9:                                      ; preds = %2
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1808
  br label %18, !dbg !1808

; <label>:10:                                     ; preds = %2
  %11 = load i8**, i8*** %5, align 8, !dbg !1809
  %12 = getelementptr inbounds i8*, i8** %11, i64 0, !dbg !1809
  %13 = load i8*, i8** %12, align 8, !dbg !1809
  %14 = call i8* @HXmc_strinit(i8* %13), !dbg !1810
  store i8* %14, i8** %6, align 8, !dbg !1811
  %15 = load i8*, i8** %6, align 8, !dbg !1812
  %16 = call i8* @HX_strlower(i8* %15), !dbg !1813
  %17 = load i8*, i8** %6, align 8, !dbg !1814
  store i8* %17, i8** %3, align 8, !dbg !1815
  br label %18, !dbg !1815

; <label>:18:                                     ; preds = %10, %9
  %19 = load i8*, i8** %3, align 8, !dbg !1816
  ret i8* %19, !dbg !1816
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_shell(i32, i8**) #0 !dbg !1817 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4 x i8*], align 16
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1818, metadata !DIExpression()), !dbg !1819
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1820, metadata !DIExpression()), !dbg !1821
  call void @llvm.dbg.declare(metadata [4 x i8*]* %6, metadata !1822, metadata !DIExpression()), !dbg !1826
  %7 = bitcast [4 x i8*]* %6 to i8*, !dbg !1826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([4 x i8*]* @__const.HXformat2_shell.cmd to i8*), i64 32, i1 false), !dbg !1826
  %8 = load i32, i32* %4, align 4, !dbg !1827
  %9 = icmp eq i32 %8, 0, !dbg !1829
  br i1 %9, label %10, label %11, !dbg !1830

; <label>:10:                                     ; preds = %2
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1831
  br label %18, !dbg !1831

; <label>:11:                                     ; preds = %2
  %12 = load i8**, i8*** %5, align 8, !dbg !1832
  %13 = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !1832
  %14 = load i8*, i8** %13, align 8, !dbg !1832
  %15 = getelementptr inbounds [4 x i8*], [4 x i8*]* %6, i64 0, i64 2, !dbg !1833
  store i8* %14, i8** %15, align 16, !dbg !1834
  %16 = getelementptr inbounds [4 x i8*], [4 x i8*]* %6, i32 0, i32 0, !dbg !1835
  %17 = call i8* @HXformat2_exec1(i8** %16, i1 zeroext true), !dbg !1836
  store i8* %17, i8** %3, align 8, !dbg !1837
  br label %18, !dbg !1837

; <label>:18:                                     ; preds = %11, %10
  %19 = load i8*, i8** %3, align 8, !dbg !1838
  ret i8* %19, !dbg !1838
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_snl(i32, i8**) #0 !dbg !1839 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1840, metadata !DIExpression()), !dbg !1841
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1842, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1844, metadata !DIExpression()), !dbg !1845
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1846, metadata !DIExpression()), !dbg !1847
  %8 = load i32, i32* %4, align 4, !dbg !1848
  %9 = icmp eq i32 %8, 0, !dbg !1850
  br i1 %9, label %10, label %11, !dbg !1851

; <label>:10:                                     ; preds = %2
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1852
  br label %30, !dbg !1852

; <label>:11:                                     ; preds = %2
  %12 = load i8**, i8*** %5, align 8, !dbg !1853
  %13 = load i8*, i8** %12, align 8, !dbg !1854
  %14 = call i8* @HXmc_strinit(i8* %13), !dbg !1855
  store i8* %14, i8** %6, align 8, !dbg !1856
  store i8* %14, i8** %7, align 8, !dbg !1857
  %15 = load i8*, i8** %6, align 8, !dbg !1858
  %16 = icmp eq i8* %15, null, !dbg !1860
  br i1 %16, label %17, label %18, !dbg !1861

; <label>:17:                                     ; preds = %11
  store i8* null, i8** %3, align 8, !dbg !1862
  br label %30, !dbg !1862

; <label>:18:                                     ; preds = %11
  %19 = load i8*, i8** %6, align 8, !dbg !1863
  %20 = call i8* @HX_chomp(i8* %19), !dbg !1864
  br label %21, !dbg !1865

; <label>:21:                                     ; preds = %25, %18
  %22 = load i8*, i8** %7, align 8, !dbg !1866
  %23 = call i8* @strchr(i8* %22, i32 10) #10, !dbg !1867
  store i8* %23, i8** %7, align 8, !dbg !1868
  %24 = icmp ne i8* %23, null, !dbg !1869
  br i1 %24, label %25, label %28, !dbg !1865

; <label>:25:                                     ; preds = %21
  %26 = load i8*, i8** %7, align 8, !dbg !1870
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1870
  store i8* %27, i8** %7, align 8, !dbg !1870
  store i8 32, i8* %26, align 1, !dbg !1871
  br label %21, !dbg !1865, !llvm.loop !1872

; <label>:28:                                     ; preds = %21
  %29 = load i8*, i8** %6, align 8, !dbg !1874
  store i8* %29, i8** %3, align 8, !dbg !1875
  br label %30, !dbg !1875

; <label>:30:                                     ; preds = %28, %17, %10
  %31 = load i8*, i8** %3, align 8, !dbg !1876
  ret i8* %31, !dbg !1876
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_upper(i32, i8**) #0 !dbg !1877 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1878, metadata !DIExpression()), !dbg !1879
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1880, metadata !DIExpression()), !dbg !1881
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1882, metadata !DIExpression()), !dbg !1883
  %7 = load i32, i32* %4, align 4, !dbg !1884
  %8 = icmp eq i32 %7, 0, !dbg !1886
  br i1 %8, label %9, label %10, !dbg !1887

; <label>:9:                                      ; preds = %2
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1888
  br label %18, !dbg !1888

; <label>:10:                                     ; preds = %2
  %11 = load i8**, i8*** %5, align 8, !dbg !1889
  %12 = getelementptr inbounds i8*, i8** %11, i64 0, !dbg !1889
  %13 = load i8*, i8** %12, align 8, !dbg !1889
  %14 = call i8* @HXmc_strinit(i8* %13), !dbg !1890
  store i8* %14, i8** %6, align 8, !dbg !1891
  %15 = load i8*, i8** %6, align 8, !dbg !1892
  %16 = call i8* @HX_strupper(i8* %15), !dbg !1893
  %17 = load i8*, i8** %6, align 8, !dbg !1894
  store i8* %17, i8** %3, align 8, !dbg !1895
  br label %18, !dbg !1895

; <label>:18:                                     ; preds = %10, %9
  %19 = load i8*, i8** %3, align 8, !dbg !1896
  ret i8* %19, !dbg !1896
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXformat2_exec1(i8**, i1 zeroext) #0 !dbg !1897 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.HXproc, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !1900, metadata !DIExpression()), !dbg !1901
  %10 = zext i1 %1 to i8
  store i8 %10, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !1902, metadata !DIExpression()), !dbg !1903
  call void @llvm.dbg.declare(metadata %struct.HXproc* %6, metadata !1904, metadata !DIExpression()), !dbg !1924
  %11 = bitcast %struct.HXproc* %6 to i8*, !dbg !1924
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false), !dbg !1924
  %12 = bitcast i8* %11 to %struct.HXproc*, !dbg !1924
  %13 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %12, i32 0, i32 2, !dbg !1924
  store i32 81, i32* %13, align 8, !dbg !1924
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1925, metadata !DIExpression()), !dbg !1926
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1927, metadata !DIExpression()), !dbg !1928
  store i8* null, i8** %8, align 8, !dbg !1928
  call void @llvm.dbg.declare(metadata i64* %9, metadata !1929, metadata !DIExpression()), !dbg !1934
  %14 = call i8* @HXmc_meminit(i8* null, i64 8192), !dbg !1935
  store i8* %14, i8** %7, align 8, !dbg !1936
  %15 = load i8*, i8** %7, align 8, !dbg !1937
  %16 = icmp eq i8* %15, null, !dbg !1939
  br i1 %16, label %17, label %18, !dbg !1940

; <label>:17:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !1941
  br label %54, !dbg !1941

; <label>:18:                                     ; preds = %2
  %19 = call i8* @HXmc_meminit(i8* null, i64 8192), !dbg !1942
  store i8* %19, i8** %8, align 8, !dbg !1943
  %20 = load i8*, i8** %8, align 8, !dbg !1944
  %21 = icmp eq i8* %20, null, !dbg !1946
  br i1 %21, label %22, label %23, !dbg !1947

; <label>:22:                                     ; preds = %18
  br label %51, !dbg !1948

; <label>:23:                                     ; preds = %18
  %24 = load i8**, i8*** %4, align 8, !dbg !1949
  %25 = call i32 @HXproc_run_async(i8** %24, %struct.HXproc* %6), !dbg !1950
  %26 = sext i32 %25 to i64, !dbg !1950
  store i64 %26, i64* %9, align 8, !dbg !1951
  %27 = load i64, i64* %9, align 8, !dbg !1952
  %28 = icmp slt i64 %27, 0, !dbg !1954
  br i1 %28, label %29, label %30, !dbg !1955

; <label>:29:                                     ; preds = %23
  br label %51, !dbg !1956

; <label>:30:                                     ; preds = %23
  br label %31, !dbg !1957

; <label>:31:                                     ; preds = %43, %30
  %32 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %6, i32 0, i32 4, !dbg !1958
  %33 = load i32, i32* %32, align 8, !dbg !1958
  %34 = load i8*, i8** %7, align 8, !dbg !1959
  %35 = call i64 @read(i32 %33, i8* %34, i64 8192), !dbg !1960
  store i64 %35, i64* %9, align 8, !dbg !1961
  %36 = icmp sgt i64 %35, 0, !dbg !1962
  br i1 %36, label %37, label %44, !dbg !1957

; <label>:37:                                     ; preds = %31
  %38 = load i8*, i8** %7, align 8, !dbg !1963
  %39 = load i64, i64* %9, align 8, !dbg !1965
  %40 = call i8* @HXmc_memcat(i8** %8, i8* %38, i64 %39), !dbg !1966
  %41 = icmp eq i8* %40, null, !dbg !1967
  br i1 %41, label %42, label %43, !dbg !1968

; <label>:42:                                     ; preds = %37
  br label %44, !dbg !1969

; <label>:43:                                     ; preds = %37
  br label %31, !dbg !1957, !llvm.loop !1970

; <label>:44:                                     ; preds = %42, %31
  %45 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %6, i32 0, i32 4, !dbg !1972
  %46 = load i32, i32* %45, align 8, !dbg !1972
  %47 = call i32 @close(i32 %46), !dbg !1973
  %48 = call i32 @HXproc_wait(%struct.HXproc* %6), !dbg !1974
  %49 = load i8*, i8** %7, align 8, !dbg !1975
  call void @HXmc_free(i8* %49), !dbg !1976
  %50 = load i8*, i8** %8, align 8, !dbg !1977
  store i8* %50, i8** %3, align 8, !dbg !1978
  br label %54, !dbg !1978

; <label>:51:                                     ; preds = %29, %22
  %52 = load i8*, i8** %8, align 8, !dbg !1979
  call void @HXmc_free(i8* %52), !dbg !1980
  %53 = load i8*, i8** %7, align 8, !dbg !1981
  call void @HXmc_free(i8* %53), !dbg !1982
  store i8* @HXformat2_nexp, i8** %3, align 8, !dbg !1983
  br label %54, !dbg !1983

; <label>:54:                                     ; preds = %51, %44, %17
  %55 = load i8*, i8** %3, align 8, !dbg !1984
  ret i8* %55, !dbg !1984
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #6

declare i64 @read(i32, i8*, i64) #4

declare i32 @close(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXformat2_insuf(i8*, i32) #0 !dbg !1985 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1988, metadata !DIExpression()), !dbg !1989
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1990, metadata !DIExpression()), !dbg !1991
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1992
  %6 = load i8*, i8** %3, align 8, !dbg !1993
  %7 = load i32, i32* %4, align 4, !dbg !1994
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i32 0, i32 0), i8* %6, i32 %7), !dbg !1995
  ret void, !dbg !1996
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #2

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXformat2_fprintf(%struct.HXformat_map*, %struct._IO_FILE*, i8*) #0 !dbg !1997 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXformat_map*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.HXformat_map* %0, %struct.HXformat_map** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXformat_map** %5, metadata !2051, metadata !DIExpression()), !dbg !2052
  store %struct._IO_FILE* %1, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !2053, metadata !DIExpression()), !dbg !2054
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2055, metadata !DIExpression()), !dbg !2056
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2057, metadata !DIExpression()), !dbg !2058
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2059, metadata !DIExpression()), !dbg !2060
  %10 = load %struct.HXformat_map*, %struct.HXformat_map** %5, align 8, !dbg !2061
  %11 = load i8*, i8** %7, align 8, !dbg !2063
  %12 = call i32 @HXformat2_aprintf(%struct.HXformat_map* %10, i8** %8, i8* %11), !dbg !2064
  store i32 %12, i32* %9, align 4, !dbg !2065
  %13 = icmp sle i32 %12, 0, !dbg !2066
  br i1 %13, label %14, label %16, !dbg !2067

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* %9, align 4, !dbg !2068
  store i32 %15, i32* %4, align 4, !dbg !2069
  br label %29, !dbg !2069

; <label>:16:                                     ; preds = %3
  %17 = call i32* @__errno_location() #11, !dbg !2070
  store i32 0, i32* %17, align 4, !dbg !2071
  %18 = load i8*, i8** %8, align 8, !dbg !2072
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !2074
  %20 = call i32 @fputs(i8* %18, %struct._IO_FILE* %19), !dbg !2075
  %21 = icmp slt i32 %20, 0, !dbg !2076
  br i1 %21, label %22, label %26, !dbg !2077

; <label>:22:                                     ; preds = %16
  %23 = call i32* @__errno_location() #11, !dbg !2078
  %24 = load i32, i32* %23, align 4, !dbg !2078
  %25 = sub nsw i32 0, %24, !dbg !2079
  store i32 %25, i32* %9, align 4, !dbg !2080
  br label %26, !dbg !2081

; <label>:26:                                     ; preds = %22, %16
  %27 = load i8*, i8** %8, align 8, !dbg !2082
  call void @HXmc_free(i8* %27), !dbg !2083
  %28 = load i32, i32* %9, align 4, !dbg !2084
  store i32 %28, i32* %4, align 4, !dbg !2085
  br label %29, !dbg !2085

; <label>:29:                                     ; preds = %26, %14
  %30 = load i32, i32* %4, align 4, !dbg !2086
  ret i32 %30, !dbg !2086
}

declare i32 @fputs(i8*, %struct._IO_FILE*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXformat2_sprintf(%struct.HXformat_map*, i8*, i64, i8*) #0 !dbg !2087 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXformat_map*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.HXformat_map* %0, %struct.HXformat_map** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXformat_map** %6, metadata !2090, metadata !DIExpression()), !dbg !2091
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2092, metadata !DIExpression()), !dbg !2093
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !2094, metadata !DIExpression()), !dbg !2095
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2096, metadata !DIExpression()), !dbg !2097
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2098, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2100, metadata !DIExpression()), !dbg !2101
  %12 = load %struct.HXformat_map*, %struct.HXformat_map** %6, align 8, !dbg !2102
  %13 = load i8*, i8** %9, align 8, !dbg !2104
  %14 = call i32 @HXformat2_aprintf(%struct.HXformat_map* %12, i8** %10, i8* %13), !dbg !2105
  store i32 %14, i32* %11, align 4, !dbg !2106
  %15 = icmp slt i32 %14, 0, !dbg !2107
  br i1 %15, label %16, label %18, !dbg !2108

; <label>:16:                                     ; preds = %4
  %17 = load i32, i32* %11, align 4, !dbg !2109
  store i32 %17, i32* %5, align 4, !dbg !2110
  br label %32, !dbg !2110

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* %11, align 4, !dbg !2111
  %20 = icmp eq i32 %19, 0, !dbg !2113
  br i1 %20, label %21, label %23, !dbg !2114

; <label>:21:                                     ; preds = %18
  %22 = load i8*, i8** %7, align 8, !dbg !2115
  store i8 0, i8* %22, align 1, !dbg !2117
  store i32 0, i32* %5, align 4, !dbg !2118
  br label %32, !dbg !2118

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %7, align 8, !dbg !2119
  %25 = load i8*, i8** %10, align 8, !dbg !2120
  %26 = load i64, i64* %8, align 8, !dbg !2121
  %27 = call i8* @strncpy(i8* %24, i8* %25, i64 %26) #7, !dbg !2122
  %28 = load i8*, i8** %10, align 8, !dbg !2123
  call void @HXmc_free(i8* %28), !dbg !2124
  %29 = load i8*, i8** %7, align 8, !dbg !2125
  %30 = call i64 @strlen(i8* %29) #10, !dbg !2126
  %31 = trunc i64 %30 to i32, !dbg !2126
  store i32 %31, i32* %5, align 4, !dbg !2127
  br label %32, !dbg !2127

; <label>:32:                                     ; preds = %23, %21, %16
  %33 = load i32, i32* %5, align 4, !dbg !2128
  ret i32 %33, !dbg !2128
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXdir_open(i8*) #0 !dbg !2129 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXdir*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2130, metadata !DIExpression()), !dbg !2131
  call void @llvm.dbg.declare(metadata %struct.HXdir** %4, metadata !2132, metadata !DIExpression()), !dbg !2161
  %5 = call noalias i8* @malloc(i64 288) #7, !dbg !2162
  %6 = bitcast i8* %5 to %struct.HXdir*, !dbg !2162
  store %struct.HXdir* %6, %struct.HXdir** %4, align 8, !dbg !2164
  %7 = icmp eq %struct.HXdir* %6, null, !dbg !2165
  br i1 %7, label %8, label %9, !dbg !2166

; <label>:8:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !2167
  br label %22, !dbg !2167

; <label>:9:                                      ; preds = %1
  %10 = load i8*, i8** %3, align 8, !dbg !2168
  %11 = call %struct.__dirstream* @opendir(i8* %10), !dbg !2170
  %12 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2171
  %13 = getelementptr inbounds %struct.HXdir, %struct.HXdir* %12, i32 0, i32 0, !dbg !2172
  store %struct.__dirstream* %11, %struct.__dirstream** %13, align 8, !dbg !2173
  %14 = icmp eq %struct.__dirstream* %11, null, !dbg !2174
  br i1 %14, label %15, label %16, !dbg !2175

; <label>:15:                                     ; preds = %9
  br label %19, !dbg !2176

; <label>:16:                                     ; preds = %9
  %17 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2177
  %18 = bitcast %struct.HXdir* %17 to i8*, !dbg !2177
  store i8* %18, i8** %2, align 8, !dbg !2178
  br label %22, !dbg !2178

; <label>:19:                                     ; preds = %15
  %20 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2179
  %21 = bitcast %struct.HXdir* %20 to i8*, !dbg !2179
  call void @free(i8* %21) #7, !dbg !2180
  store i8* null, i8** %2, align 8, !dbg !2181
  br label %22, !dbg !2181

; <label>:22:                                     ; preds = %19, %16, %8
  %23 = load i8*, i8** %2, align 8, !dbg !2182
  ret i8* %23, !dbg !2182
}

declare %struct.__dirstream* @opendir(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXdir_read(i8*) #0 !dbg !2183 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXdir*, align 8
  %5 = alloca %struct.dirent*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2186, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.declare(metadata %struct.HXdir** %4, metadata !2188, metadata !DIExpression()), !dbg !2189
  %7 = load i8*, i8** %3, align 8, !dbg !2190
  %8 = bitcast i8* %7 to %struct.HXdir*, !dbg !2190
  store %struct.HXdir* %8, %struct.HXdir** %4, align 8, !dbg !2189
  %9 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2191
  %10 = icmp eq %struct.HXdir* %9, null, !dbg !2193
  br i1 %10, label %11, label %12, !dbg !2194

; <label>:11:                                     ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !2195
  br label %33, !dbg !2195

; <label>:12:                                     ; preds = %1
  %13 = call i32* @__errno_location() #11, !dbg !2196
  store i32 0, i32* %13, align 4, !dbg !2197
  call void @llvm.dbg.declare(metadata %struct.dirent** %5, metadata !2198, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2202, metadata !DIExpression()), !dbg !2203
  %14 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2204
  %15 = getelementptr inbounds %struct.HXdir, %struct.HXdir* %14, i32 0, i32 0, !dbg !2205
  %16 = load %struct.__dirstream*, %struct.__dirstream** %15, align 8, !dbg !2205
  %17 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2206
  %18 = getelementptr inbounds %struct.HXdir, %struct.HXdir* %17, i32 0, i32 1, !dbg !2207
  %19 = bitcast %union.anon.3* %18 to %struct.dirent*, !dbg !2207
  %20 = call i32 @readdir64_r(%struct.__dirstream* %16, %struct.dirent* %19, %struct.dirent** %5), !dbg !2208
  store i32 %20, i32* %6, align 4, !dbg !2203
  %21 = load %struct.dirent*, %struct.dirent** %5, align 8, !dbg !2209
  %22 = icmp eq %struct.dirent* %21, null, !dbg !2211
  br i1 %22, label %26, label %23, !dbg !2212

; <label>:23:                                     ; preds = %12
  %24 = load i32, i32* %6, align 4, !dbg !2213
  %25 = icmp slt i32 %24, 0, !dbg !2214
  br i1 %25, label %26, label %27, !dbg !2215

; <label>:26:                                     ; preds = %23, %12
  store i8* null, i8** %2, align 8, !dbg !2216
  br label %33, !dbg !2216

; <label>:27:                                     ; preds = %23
  %28 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2217
  %29 = getelementptr inbounds %struct.HXdir, %struct.HXdir* %28, i32 0, i32 1, !dbg !2218
  %30 = bitcast %union.anon.3* %29 to %struct.dirent*, !dbg !2218
  %31 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !2219
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %31, i32 0, i32 0, !dbg !2217
  store i8* %32, i8** %2, align 8, !dbg !2220
  br label %33, !dbg !2220

; <label>:33:                                     ; preds = %27, %26, %11
  %34 = load i8*, i8** %2, align 8, !dbg !2221
  ret i8* %34, !dbg !2221
}

declare i32 @readdir64_r(%struct.__dirstream*, %struct.dirent*, %struct.dirent**) #4

; Function Attrs: noinline nounwind optnone uwtable
define void @HXdir_close(i8*) #0 !dbg !2222 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.HXdir*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2223, metadata !DIExpression()), !dbg !2224
  call void @llvm.dbg.declare(metadata %struct.HXdir** %3, metadata !2225, metadata !DIExpression()), !dbg !2226
  %4 = load i8*, i8** %2, align 8, !dbg !2227
  %5 = bitcast i8* %4 to %struct.HXdir*, !dbg !2227
  store %struct.HXdir* %5, %struct.HXdir** %3, align 8, !dbg !2226
  %6 = load i8*, i8** %2, align 8, !dbg !2228
  %7 = icmp eq i8* %6, null, !dbg !2230
  br i1 %7, label %8, label %9, !dbg !2231

; <label>:8:                                      ; preds = %1
  br label %16, !dbg !2232

; <label>:9:                                      ; preds = %1
  %10 = load %struct.HXdir*, %struct.HXdir** %3, align 8, !dbg !2233
  %11 = getelementptr inbounds %struct.HXdir, %struct.HXdir* %10, i32 0, i32 0, !dbg !2234
  %12 = load %struct.__dirstream*, %struct.__dirstream** %11, align 8, !dbg !2234
  %13 = call i32 @closedir(%struct.__dirstream* %12), !dbg !2235
  %14 = load %struct.HXdir*, %struct.HXdir** %3, align 8, !dbg !2236
  %15 = bitcast %struct.HXdir* %14 to i8*, !dbg !2236
  call void @free(i8* %15) #7, !dbg !2237
  br label %16, !dbg !2238

; <label>:16:                                     ; preds = %9, %8
  ret void, !dbg !2238
}

declare i32 @closedir(%struct.__dirstream*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_copy_file(i8*, i8*, i32, ...) #0 !dbg !2239 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.stat, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2242, metadata !DIExpression()), !dbg !2243
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2244, metadata !DIExpression()), !dbg !2245
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2246, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.declare(metadata [1024 x i8]* %8, metadata !2248, metadata !DIExpression()), !dbg !2252
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2253, metadata !DIExpression()), !dbg !2254
  store i32 0, i32* %9, align 4, !dbg !2254
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2255, metadata !DIExpression()), !dbg !2256
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2257, metadata !DIExpression()), !dbg !2258
  store i32 0, i32* %11, align 4, !dbg !2258
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2259, metadata !DIExpression()), !dbg !2260
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2261, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.declare(metadata i32* %14, metadata !2263, metadata !DIExpression()), !dbg !2264
  %19 = load i8*, i8** %5, align 8, !dbg !2265
  %20 = call i32 (i8*, i32, ...) @open64(i8* %19, i32 0), !dbg !2267
  store i32 %20, i32* %12, align 4, !dbg !2268
  %21 = icmp slt i32 %20, 0, !dbg !2269
  br i1 %21, label %22, label %26, !dbg !2270

; <label>:22:                                     ; preds = %3
  %23 = call i32* @__errno_location() #11, !dbg !2271
  %24 = load i32, i32* %23, align 4, !dbg !2271
  %25 = sub nsw i32 0, %24, !dbg !2272
  store i32 %25, i32* %4, align 4, !dbg !2273
  br label %146, !dbg !2273

; <label>:26:                                     ; preds = %3
  %27 = load i32, i32* %7, align 4, !dbg !2274
  %28 = and i32 %27, 4, !dbg !2276
  %29 = icmp ne i32 %28, 0, !dbg !2276
  br i1 %29, label %30, label %31, !dbg !2277

; <label>:30:                                     ; preds = %26
  store i32 128, i32* %9, align 4, !dbg !2278
  br label %31, !dbg !2279

; <label>:31:                                     ; preds = %30, %26
  %32 = load i8*, i8** %6, align 8, !dbg !2280
  %33 = load i32, i32* %9, align 4, !dbg !2281
  %34 = or i32 577, %33, !dbg !2282
  %35 = call i32 (i8*, i32, ...) @open64(i8* %32, i32 %34, i32 438), !dbg !2283
  store i32 %35, i32* %10, align 4, !dbg !2284
  %36 = load i32, i32* %10, align 4, !dbg !2285
  %37 = icmp slt i32 %36, 0, !dbg !2287
  br i1 %37, label %38, label %55, !dbg !2288

; <label>:38:                                     ; preds = %31
  %39 = call i32* @__errno_location() #11, !dbg !2289
  %40 = load i32, i32* %39, align 4, !dbg !2289
  store i32 %40, i32* %11, align 4, !dbg !2291
  %41 = load i32, i32* %12, align 4, !dbg !2292
  %42 = call i32 @close(i32 %41), !dbg !2293
  %43 = load i32, i32* %11, align 4, !dbg !2294
  %44 = call i32* @__errno_location() #11, !dbg !2295
  store i32 %43, i32* %44, align 4, !dbg !2296
  %45 = load i32, i32* %9, align 4, !dbg !2297
  %46 = icmp ne i32 %45, 0, !dbg !2299
  br i1 %46, label %47, label %51, !dbg !2300

; <label>:47:                                     ; preds = %38
  %48 = load i32, i32* %11, align 4, !dbg !2301
  %49 = icmp eq i32 %48, 17, !dbg !2302
  br i1 %49, label %50, label %51, !dbg !2303

; <label>:50:                                     ; preds = %47
  store i32 1, i32* %4, align 4, !dbg !2304
  br label %146, !dbg !2304

; <label>:51:                                     ; preds = %47, %38
  %52 = call i32* @__errno_location() #11, !dbg !2305
  %53 = load i32, i32* %52, align 4, !dbg !2305
  %54 = sub nsw i32 0, %53, !dbg !2306
  store i32 %54, i32* %4, align 4, !dbg !2307
  br label %146, !dbg !2307

; <label>:55:                                     ; preds = %31
  br label %56, !dbg !2308

; <label>:56:                                     ; preds = %71, %55
  %57 = load i32, i32* %12, align 4, !dbg !2309
  %58 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !2310
  %59 = call i64 @read(i32 %57, i8* %58, i64 1024), !dbg !2311
  %60 = trunc i64 %59 to i32, !dbg !2311
  store i32 %60, i32* %13, align 4, !dbg !2312
  %61 = icmp sgt i32 %60, 0, !dbg !2313
  br i1 %61, label %62, label %69, !dbg !2314

; <label>:62:                                     ; preds = %56
  %63 = load i32, i32* %10, align 4, !dbg !2315
  %64 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !2316
  %65 = load i32, i32* %13, align 4, !dbg !2317
  %66 = sext i32 %65 to i64, !dbg !2317
  %67 = call i64 @write(i32 %63, i8* %64, i64 %66), !dbg !2318
  %68 = icmp sgt i64 %67, 0, !dbg !2319
  br label %69

; <label>:69:                                     ; preds = %62, %56
  %70 = phi i1 [ false, %56 ], [ %68, %62 ], !dbg !2320
  br i1 %70, label %71, label %72, !dbg !2308

; <label>:71:                                     ; preds = %69
  br label %56, !dbg !2308, !llvm.loop !2321

; <label>:72:                                     ; preds = %69
  %73 = load i32, i32* %12, align 4, !dbg !2323
  %74 = call i32 @close(i32 %73), !dbg !2324
  %75 = load i32, i32* %7, align 4, !dbg !2325
  %76 = and i32 %75, 3, !dbg !2327
  %77 = icmp ne i32 %76, 0, !dbg !2327
  br i1 %77, label %78, label %143, !dbg !2328

; <label>:78:                                     ; preds = %72
  call void @llvm.dbg.declare(metadata %struct.stat* %15, metadata !2329, metadata !DIExpression()), !dbg !2367
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2368, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.declare(metadata i64* %17, metadata !2370, metadata !DIExpression()), !dbg !2371
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %18, metadata !2372, metadata !DIExpression()), !dbg !2384
  %79 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %18, i32 0, i32 0, !dbg !2385
  %80 = bitcast %struct.__va_list_tag* %79 to i8*, !dbg !2385
  call void @llvm.va_start(i8* %80), !dbg !2385
  %81 = load i32, i32* %10, align 4, !dbg !2386
  %82 = call i32 @fstat64(i32 %81, %struct.stat* %15) #7, !dbg !2387
  %83 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 4, !dbg !2388
  %84 = load i32, i32* %83, align 4, !dbg !2388
  %85 = zext i32 %84 to i64, !dbg !2389
  store i64 %85, i64* %16, align 8, !dbg !2390
  %86 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 5, !dbg !2391
  %87 = load i32, i32* %86, align 8, !dbg !2391
  %88 = zext i32 %87 to i64, !dbg !2392
  store i64 %88, i64* %17, align 8, !dbg !2393
  %89 = load i32, i32* %7, align 4, !dbg !2394
  %90 = and i32 %89, 1, !dbg !2396
  %91 = icmp ne i32 %90, 0, !dbg !2396
  br i1 %91, label %92, label %111, !dbg !2397

; <label>:92:                                     ; preds = %78
  %93 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %18, i32 0, i32 0, !dbg !2398
  %94 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %93, i32 0, i32 0, !dbg !2398
  %95 = load i32, i32* %94, align 16, !dbg !2398
  %96 = icmp ule i32 %95, 40, !dbg !2398
  br i1 %96, label %97, label %103, !dbg !2398

; <label>:97:                                     ; preds = %92
  %98 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %93, i32 0, i32 3, !dbg !2398
  %99 = load i8*, i8** %98, align 16, !dbg !2398
  %100 = getelementptr i8, i8* %99, i32 %95, !dbg !2398
  %101 = bitcast i8* %100 to i64*, !dbg !2398
  %102 = add i32 %95, 8, !dbg !2398
  store i32 %102, i32* %94, align 16, !dbg !2398
  br label %108, !dbg !2398

; <label>:103:                                    ; preds = %92
  %104 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %93, i32 0, i32 2, !dbg !2398
  %105 = load i8*, i8** %104, align 8, !dbg !2398
  %106 = bitcast i8* %105 to i64*, !dbg !2398
  %107 = getelementptr i8, i8* %105, i32 8, !dbg !2398
  store i8* %107, i8** %104, align 8, !dbg !2398
  br label %108, !dbg !2398

; <label>:108:                                    ; preds = %103, %97
  %109 = phi i64* [ %101, %97 ], [ %106, %103 ], !dbg !2398
  %110 = load i64, i64* %109, align 8, !dbg !2398
  store i64 %110, i64* %16, align 8, !dbg !2399
  br label %111, !dbg !2400

; <label>:111:                                    ; preds = %108, %78
  %112 = load i32, i32* %7, align 4, !dbg !2401
  %113 = and i32 %112, 2, !dbg !2403
  %114 = icmp ne i32 %113, 0, !dbg !2403
  br i1 %114, label %115, label %134, !dbg !2404

; <label>:115:                                    ; preds = %111
  %116 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %18, i32 0, i32 0, !dbg !2405
  %117 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %116, i32 0, i32 0, !dbg !2405
  %118 = load i32, i32* %117, align 16, !dbg !2405
  %119 = icmp ule i32 %118, 40, !dbg !2405
  br i1 %119, label %120, label %126, !dbg !2405

; <label>:120:                                    ; preds = %115
  %121 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %116, i32 0, i32 3, !dbg !2405
  %122 = load i8*, i8** %121, align 16, !dbg !2405
  %123 = getelementptr i8, i8* %122, i32 %118, !dbg !2405
  %124 = bitcast i8* %123 to i64*, !dbg !2405
  %125 = add i32 %118, 8, !dbg !2405
  store i32 %125, i32* %117, align 16, !dbg !2405
  br label %131, !dbg !2405

; <label>:126:                                    ; preds = %115
  %127 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %116, i32 0, i32 2, !dbg !2405
  %128 = load i8*, i8** %127, align 8, !dbg !2405
  %129 = bitcast i8* %128 to i64*, !dbg !2405
  %130 = getelementptr i8, i8* %128, i32 8, !dbg !2405
  store i8* %130, i8** %127, align 8, !dbg !2405
  br label %131, !dbg !2405

; <label>:131:                                    ; preds = %126, %120
  %132 = phi i64* [ %124, %120 ], [ %129, %126 ], !dbg !2405
  %133 = load i64, i64* %132, align 8, !dbg !2405
  store i64 %133, i64* %17, align 8, !dbg !2406
  br label %134, !dbg !2407

; <label>:134:                                    ; preds = %131, %111
  %135 = load i32, i32* %10, align 4, !dbg !2408
  %136 = load i64, i64* %16, align 8, !dbg !2409
  %137 = trunc i64 %136 to i32, !dbg !2409
  %138 = load i64, i64* %17, align 8, !dbg !2410
  %139 = trunc i64 %138 to i32, !dbg !2410
  %140 = call i32 @fchown(i32 %135, i32 %137, i32 %139) #7, !dbg !2411
  store i32 %140, i32* %14, align 4, !dbg !2412
  %141 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %18, i32 0, i32 0, !dbg !2413
  %142 = bitcast %struct.__va_list_tag* %141 to i8*, !dbg !2413
  call void @llvm.va_end(i8* %142), !dbg !2413
  br label %143, !dbg !2414

; <label>:143:                                    ; preds = %134, %72
  %144 = load i32, i32* %10, align 4, !dbg !2415
  %145 = call i32 @close(i32 %144), !dbg !2416
  store i32 1, i32* %4, align 4, !dbg !2417
  br label %146, !dbg !2417

; <label>:146:                                    ; preds = %143, %51, %50, %22
  %147 = load i32, i32* %4, align 4, !dbg !2418
  ret i32 %147, !dbg !2418
}

declare i32 @open64(i8*, i32, ...) #4

declare i64 @write(i32, i8*, i64) #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nounwind
declare i32 @fstat64(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_copy_dir(i8*, i8*, i32, ...) #0 !dbg !2419 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca [1 x %struct.__va_list_tag], align 16
  %14 = alloca [256 x i8], align 16
  %15 = alloca [256 x i8], align 16
  %16 = alloca %struct.stat, align 8
  %17 = alloca [256 x i8], align 16
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2420, metadata !DIExpression()), !dbg !2421
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2422, metadata !DIExpression()), !dbg !2423
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2426, metadata !DIExpression()), !dbg !2427
  %18 = load i8*, i8** %5, align 8, !dbg !2428
  %19 = call i8* @HXdir_open(i8* %18), !dbg !2429
  store i8* %19, i8** %8, align 8, !dbg !2427
  call void @llvm.dbg.declare(metadata i64* %9, metadata !2430, metadata !DIExpression()), !dbg !2431
  store i64 -1, i64* %9, align 8, !dbg !2431
  call void @llvm.dbg.declare(metadata i64* %10, metadata !2432, metadata !DIExpression()), !dbg !2433
  store i64 -1, i64* %10, align 8, !dbg !2433
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2434, metadata !DIExpression()), !dbg !2435
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2436, metadata !DIExpression()), !dbg !2437
  %20 = load i8*, i8** %8, align 8, !dbg !2438
  %21 = icmp eq i8* %20, null, !dbg !2440
  br i1 %21, label %22, label %23, !dbg !2441

; <label>:22:                                     ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !2442
  br label %192, !dbg !2442

; <label>:23:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %13, metadata !2443, metadata !DIExpression()), !dbg !2445
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0, !dbg !2446
  %25 = bitcast %struct.__va_list_tag* %24 to i8*, !dbg !2446
  call void @llvm.va_start(i8* %25), !dbg !2446
  %26 = load i32, i32* %7, align 4, !dbg !2447
  %27 = and i32 %26, 1, !dbg !2449
  %28 = icmp ne i32 %27, 0, !dbg !2449
  br i1 %28, label %29, label %48, !dbg !2450

; <label>:29:                                     ; preds = %23
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0, !dbg !2451
  %31 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %30, i32 0, i32 0, !dbg !2451
  %32 = load i32, i32* %31, align 16, !dbg !2451
  %33 = icmp ule i32 %32, 40, !dbg !2451
  br i1 %33, label %34, label %40, !dbg !2451

; <label>:34:                                     ; preds = %29
  %35 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %30, i32 0, i32 3, !dbg !2451
  %36 = load i8*, i8** %35, align 16, !dbg !2451
  %37 = getelementptr i8, i8* %36, i32 %32, !dbg !2451
  %38 = bitcast i8* %37 to i64*, !dbg !2451
  %39 = add i32 %32, 8, !dbg !2451
  store i32 %39, i32* %31, align 16, !dbg !2451
  br label %45, !dbg !2451

; <label>:40:                                     ; preds = %29
  %41 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %30, i32 0, i32 2, !dbg !2451
  %42 = load i8*, i8** %41, align 8, !dbg !2451
  %43 = bitcast i8* %42 to i64*, !dbg !2451
  %44 = getelementptr i8, i8* %42, i32 8, !dbg !2451
  store i8* %44, i8** %41, align 8, !dbg !2451
  br label %45, !dbg !2451

; <label>:45:                                     ; preds = %40, %34
  %46 = phi i64* [ %38, %34 ], [ %43, %40 ], !dbg !2451
  %47 = load i64, i64* %46, align 8, !dbg !2451
  store i64 %47, i64* %9, align 8, !dbg !2452
  br label %48, !dbg !2453

; <label>:48:                                     ; preds = %45, %23
  %49 = load i32, i32* %7, align 4, !dbg !2454
  %50 = and i32 %49, 2, !dbg !2456
  %51 = icmp ne i32 %50, 0, !dbg !2456
  br i1 %51, label %52, label %71, !dbg !2457

; <label>:52:                                     ; preds = %48
  %53 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0, !dbg !2458
  %54 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %53, i32 0, i32 0, !dbg !2458
  %55 = load i32, i32* %54, align 16, !dbg !2458
  %56 = icmp ule i32 %55, 40, !dbg !2458
  br i1 %56, label %57, label %63, !dbg !2458

; <label>:57:                                     ; preds = %52
  %58 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %53, i32 0, i32 3, !dbg !2458
  %59 = load i8*, i8** %58, align 16, !dbg !2458
  %60 = getelementptr i8, i8* %59, i32 %55, !dbg !2458
  %61 = bitcast i8* %60 to i64*, !dbg !2458
  %62 = add i32 %55, 8, !dbg !2458
  store i32 %62, i32* %54, align 16, !dbg !2458
  br label %68, !dbg !2458

; <label>:63:                                     ; preds = %52
  %64 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %53, i32 0, i32 2, !dbg !2458
  %65 = load i8*, i8** %64, align 8, !dbg !2458
  %66 = bitcast i8* %65 to i64*, !dbg !2458
  %67 = getelementptr i8, i8* %65, i32 8, !dbg !2458
  store i8* %67, i8** %64, align 8, !dbg !2458
  br label %68, !dbg !2458

; <label>:68:                                     ; preds = %63, %57
  %69 = phi i64* [ %61, %57 ], [ %66, %63 ], !dbg !2458
  %70 = load i64, i64* %69, align 8, !dbg !2458
  store i64 %70, i64* %10, align 8, !dbg !2459
  br label %71, !dbg !2460

; <label>:71:                                     ; preds = %68, %48
  %72 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %13, i32 0, i32 0, !dbg !2461
  %73 = bitcast %struct.__va_list_tag* %72 to i8*, !dbg !2461
  call void @llvm.va_end(i8* %73), !dbg !2461
  br label %74, !dbg !2462

; <label>:74:                                     ; preds = %189, %86, %71
  %75 = load i8*, i8** %8, align 8, !dbg !2463
  %76 = call i8* @HXdir_read(i8* %75), !dbg !2464
  store i8* %76, i8** %11, align 8, !dbg !2465
  %77 = icmp ne i8* %76, null, !dbg !2466
  br i1 %77, label %78, label %190, !dbg !2462

; <label>:78:                                     ; preds = %74
  call void @llvm.dbg.declare(metadata [256 x i8]* %14, metadata !2467, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata [256 x i8]* %15, metadata !2470, metadata !DIExpression()), !dbg !2471
  call void @llvm.dbg.declare(metadata %struct.stat* %16, metadata !2472, metadata !DIExpression()), !dbg !2473
  %79 = load i8*, i8** %11, align 8, !dbg !2474
  %80 = call i32 @strcmp(i8* %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0)) #10, !dbg !2476
  %81 = icmp eq i32 %80, 0, !dbg !2477
  br i1 %81, label %86, label %82, !dbg !2478

; <label>:82:                                     ; preds = %78
  %83 = load i8*, i8** %11, align 8, !dbg !2479
  %84 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.39, i32 0, i32 0)) #10, !dbg !2480
  %85 = icmp eq i32 %84, 0, !dbg !2481
  br i1 %85, label %86, label %87, !dbg !2482

; <label>:86:                                     ; preds = %82, %78
  br label %74, !dbg !2483, !llvm.loop !2484

; <label>:87:                                     ; preds = %82
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i32 0, i32 0, !dbg !2486
  %89 = load i8*, i8** %5, align 8, !dbg !2487
  %90 = load i8*, i8** %11, align 8, !dbg !2488
  %91 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %88, i64 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.40, i32 0, i32 0), i8* %89, i8* %90) #7, !dbg !2489
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2490
  %93 = load i8*, i8** %6, align 8, !dbg !2491
  %94 = load i8*, i8** %11, align 8, !dbg !2492
  %95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %92, i64 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.40, i32 0, i32 0), i8* %93, i8* %94) #7, !dbg !2493
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i32 0, i32 0, !dbg !2494
  %97 = call i32 @lstat64(i8* %96, %struct.stat* %16) #7, !dbg !2495
  %98 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2496
  %99 = load i32, i32* %98, align 8, !dbg !2497
  %100 = and i32 %99, 511, !dbg !2497
  store i32 %100, i32* %98, align 8, !dbg !2497
  %101 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2498
  %102 = load i32, i32* %101, align 8, !dbg !2498
  %103 = and i32 %102, 61440, !dbg !2498
  %104 = icmp eq i32 %103, 32768, !dbg !2498
  br i1 %104, label %105, label %112, !dbg !2500

; <label>:105:                                    ; preds = %87
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i32 0, i32 0, !dbg !2501
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2503
  %108 = load i32, i32* %7, align 4, !dbg !2504
  %109 = load i64, i64* %9, align 8, !dbg !2505
  %110 = load i64, i64* %10, align 8, !dbg !2506
  %111 = call i32 (i8*, i8*, i32, ...) @HX_copy_file(i8* %106, i8* %107, i32 %108, i64 %109, i64 %110), !dbg !2507
  br label %173, !dbg !2508

; <label>:112:                                    ; preds = %87
  %113 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2509
  %114 = load i32, i32* %113, align 8, !dbg !2509
  %115 = and i32 %114, 61440, !dbg !2509
  %116 = icmp eq i32 %115, 16384, !dbg !2509
  br i1 %116, label %117, label %126, !dbg !2511

; <label>:117:                                    ; preds = %112
  %118 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2512
  %119 = call i32 @HX_mkdir(i8* %118), !dbg !2514
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i32 0, i32 0, !dbg !2515
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2516
  %122 = load i32, i32* %7, align 4, !dbg !2517
  %123 = load i64, i64* %9, align 8, !dbg !2518
  %124 = load i64, i64* %10, align 8, !dbg !2519
  %125 = call i32 (i8*, i8*, i32, ...) @HX_copy_dir(i8* %120, i8* %121, i32 %122, i64 %123, i64 %124), !dbg !2520
  br label %172, !dbg !2521

; <label>:126:                                    ; preds = %112
  %127 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2522
  %128 = load i32, i32* %127, align 8, !dbg !2522
  %129 = and i32 %128, 61440, !dbg !2522
  %130 = icmp eq i32 %129, 40960, !dbg !2522
  br i1 %130, label %131, label %142, !dbg !2524

; <label>:131:                                    ; preds = %126
  call void @llvm.dbg.declare(metadata [256 x i8]* %17, metadata !2525, metadata !DIExpression()), !dbg !2527
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* %17, i32 0, i32 0, !dbg !2528
  call void @llvm.memset.p0i8.i64(i8* align 16 %132, i8 0, i64 256, i1 false), !dbg !2528
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i32 0, i32 0, !dbg !2529
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* %17, i32 0, i32 0, !dbg !2531
  %135 = call i64 @readlink(i8* %133, i8* %134, i64 255) #7, !dbg !2532
  %136 = icmp slt i64 %135, 255, !dbg !2533
  br i1 %136, label %137, label %141, !dbg !2534

; <label>:137:                                    ; preds = %131
  %138 = getelementptr inbounds [256 x i8], [256 x i8]* %17, i32 0, i32 0, !dbg !2535
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2536
  %140 = call i32 @symlink(i8* %138, i8* %139) #7, !dbg !2537
  store i32 %140, i32* %12, align 4, !dbg !2538
  br label %141, !dbg !2539

; <label>:141:                                    ; preds = %137, %131
  br label %171, !dbg !2540

; <label>:142:                                    ; preds = %126
  %143 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2541
  %144 = load i32, i32* %143, align 8, !dbg !2541
  %145 = and i32 %144, 61440, !dbg !2541
  %146 = icmp eq i32 %145, 24576, !dbg !2541
  br i1 %146, label %152, label %147, !dbg !2543

; <label>:147:                                    ; preds = %142
  %148 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2544
  %149 = load i32, i32* %148, align 8, !dbg !2544
  %150 = and i32 %149, 61440, !dbg !2544
  %151 = icmp eq i32 %150, 8192, !dbg !2544
  br i1 %151, label %152, label %159, !dbg !2545

; <label>:152:                                    ; preds = %147, %142
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2546
  %154 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2548
  %155 = load i32, i32* %154, align 8, !dbg !2548
  %156 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0, !dbg !2549
  %157 = load i64, i64* %156, align 8, !dbg !2549
  %158 = call i32 @mknod(i8* %153, i32 %155, i64 %157) #7, !dbg !2550
  br label %170, !dbg !2551

; <label>:159:                                    ; preds = %147
  %160 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2552
  %161 = load i32, i32* %160, align 8, !dbg !2552
  %162 = and i32 %161, 61440, !dbg !2552
  %163 = icmp eq i32 %162, 4096, !dbg !2552
  br i1 %163, label %164, label %169, !dbg !2554

; <label>:164:                                    ; preds = %159
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2555
  %166 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2557
  %167 = load i32, i32* %166, align 8, !dbg !2557
  %168 = call i32 @mkfifo(i8* %165, i32 %167) #7, !dbg !2558
  br label %169, !dbg !2559

; <label>:169:                                    ; preds = %164, %159
  br label %170

; <label>:170:                                    ; preds = %169, %152
  br label %171

; <label>:171:                                    ; preds = %170, %141
  br label %172

; <label>:172:                                    ; preds = %171, %117
  br label %173

; <label>:173:                                    ; preds = %172, %105
  %174 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2560
  %175 = load i64, i64* %9, align 8, !dbg !2561
  %176 = trunc i64 %175 to i32, !dbg !2561
  %177 = load i64, i64* %10, align 8, !dbg !2562
  %178 = trunc i64 %177 to i32, !dbg !2562
  %179 = call i32 @lchown(i8* %174, i32 %176, i32 %178) #7, !dbg !2563
  store i32 %179, i32* %12, align 4, !dbg !2564
  %180 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2565
  %181 = load i32, i32* %180, align 8, !dbg !2565
  %182 = and i32 %181, 61440, !dbg !2565
  %183 = icmp eq i32 %182, 40960, !dbg !2565
  br i1 %183, label %189, label %184, !dbg !2567

; <label>:184:                                    ; preds = %173
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i32 0, i32 0, !dbg !2568
  %186 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !2569
  %187 = load i32, i32* %186, align 8, !dbg !2569
  %188 = call i32 @chmod(i8* %185, i32 %187) #7, !dbg !2570
  br label %189, !dbg !2570

; <label>:189:                                    ; preds = %184, %173
  br label %74, !dbg !2462, !llvm.loop !2484

; <label>:190:                                    ; preds = %74
  %191 = load i8*, i8** %8, align 8, !dbg !2571
  call void @HXdir_close(i8* %191), !dbg !2572
  store i32 1, i32* %4, align 4, !dbg !2573
  br label %192, !dbg !2573

; <label>:192:                                    ; preds = %190, %22
  %193 = load i32, i32* %4, align 4, !dbg !2574
  ret i32 %193, !dbg !2574
}

; Function Attrs: nounwind
declare i32 @lstat64(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_mkdir(i8*) #0 !dbg !2575 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [256 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2578, metadata !DIExpression()), !dbg !2579
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2580, metadata !DIExpression()), !dbg !2581
  store i32 0, i32* %4, align 4, !dbg !2581
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2582, metadata !DIExpression()), !dbg !2583
  %9 = load i8*, i8** %3, align 8, !dbg !2584
  %10 = call i64 @strlen(i8* %9) #10, !dbg !2585
  %11 = trunc i64 %10 to i32, !dbg !2585
  store i32 %11, i32* %5, align 4, !dbg !2583
  call void @llvm.dbg.declare(metadata [256 x i8]* %6, metadata !2586, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.declare(metadata [256 x i8]* %7, metadata !2588, metadata !DIExpression()), !dbg !2589
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0, !dbg !2590
  %13 = load i8*, i8** %3, align 8, !dbg !2591
  %14 = call i8* @HX_strlcpy(i8* %12, i8* %13, i64 256), !dbg !2592
  %15 = load i32, i32* %4, align 4, !dbg !2593
  %16 = sext i32 %15 to i64, !dbg !2595
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %16, !dbg !2595
  %18 = load i8, i8* %17, align 1, !dbg !2595
  %19 = sext i8 %18 to i32, !dbg !2595
  %20 = icmp eq i32 %19, 47, !dbg !2596
  br i1 %20, label %21, label %24, !dbg !2597

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* %4, align 4, !dbg !2598
  %23 = add nsw i32 %22, 1, !dbg !2598
  store i32 %23, i32* %4, align 4, !dbg !2598
  br label %24, !dbg !2598

; <label>:24:                                     ; preds = %21, %1
  br label %25, !dbg !2599

; <label>:25:                                     ; preds = %73, %24
  %26 = load i32, i32* %4, align 4, !dbg !2600
  %27 = load i32, i32* %5, align 4, !dbg !2603
  %28 = icmp slt i32 %26, %27, !dbg !2604
  br i1 %28, label %29, label %76, !dbg !2605

; <label>:29:                                     ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2606, metadata !DIExpression()), !dbg !2608
  %30 = load i32, i32* %4, align 4, !dbg !2609
  %31 = sext i32 %30 to i64, !dbg !2611
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %31, !dbg !2611
  %33 = load i8, i8* %32, align 1, !dbg !2611
  %34 = sext i8 %33 to i32, !dbg !2611
  %35 = icmp eq i32 %34, 47, !dbg !2612
  br i1 %35, label %36, label %51, !dbg !2613

; <label>:36:                                     ; preds = %29
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0, !dbg !2614
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0, !dbg !2616
  %39 = load i32, i32* %4, align 4, !dbg !2617
  %40 = sext i32 %39 to i64, !dbg !2617
  %41 = call i8* @strncpy(i8* %37, i8* %38, i64 %40) #7, !dbg !2618
  %42 = load i32, i32* %4, align 4, !dbg !2619
  %43 = sext i32 %42 to i64, !dbg !2620
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %43, !dbg !2620
  store i8 0, i8* %44, align 1, !dbg !2621
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0, !dbg !2622
  %46 = call i32 @mkdir_gen(i8* %45), !dbg !2624
  store i32 %46, i32* %8, align 4, !dbg !2625
  %47 = icmp sle i32 %46, 0, !dbg !2626
  br i1 %47, label %48, label %50, !dbg !2627

; <label>:48:                                     ; preds = %36
  %49 = load i32, i32* %8, align 4, !dbg !2628
  store i32 %49, i32* %2, align 4, !dbg !2629
  br label %77, !dbg !2629

; <label>:50:                                     ; preds = %36
  br label %72, !dbg !2630

; <label>:51:                                     ; preds = %29
  %52 = load i32, i32* %4, align 4, !dbg !2631
  %53 = load i32, i32* %5, align 4, !dbg !2633
  %54 = sub nsw i32 %53, 1, !dbg !2634
  %55 = icmp eq i32 %52, %54, !dbg !2635
  br i1 %55, label %56, label %71, !dbg !2636

; <label>:56:                                     ; preds = %51
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0, !dbg !2637
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i32 0, i32 0, !dbg !2639
  %59 = load i32, i32* %5, align 4, !dbg !2640
  %60 = sext i32 %59 to i64, !dbg !2640
  %61 = call i8* @strncpy(i8* %57, i8* %58, i64 %60) #7, !dbg !2641
  %62 = load i32, i32* %5, align 4, !dbg !2642
  %63 = sext i32 %62 to i64, !dbg !2643
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %63, !dbg !2643
  store i8 0, i8* %64, align 1, !dbg !2644
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0, !dbg !2645
  %66 = call i32 @mkdir_gen(i8* %65), !dbg !2647
  store i32 %66, i32* %8, align 4, !dbg !2648
  %67 = icmp sle i32 %66, 0, !dbg !2649
  br i1 %67, label %68, label %70, !dbg !2650

; <label>:68:                                     ; preds = %56
  %69 = load i32, i32* %8, align 4, !dbg !2651
  store i32 %69, i32* %2, align 4, !dbg !2652
  br label %77, !dbg !2652

; <label>:70:                                     ; preds = %56
  br label %71, !dbg !2653

; <label>:71:                                     ; preds = %70, %51
  br label %72

; <label>:72:                                     ; preds = %71, %50
  br label %73, !dbg !2654

; <label>:73:                                     ; preds = %72
  %74 = load i32, i32* %4, align 4, !dbg !2655
  %75 = add nsw i32 %74, 1, !dbg !2655
  store i32 %75, i32* %4, align 4, !dbg !2655
  br label %25, !dbg !2656, !llvm.loop !2657

; <label>:76:                                     ; preds = %25
  store i32 1, i32* %2, align 4, !dbg !2659
  br label %77, !dbg !2659

; <label>:77:                                     ; preds = %76, %68, %48
  %78 = load i32, i32* %2, align 4, !dbg !2660
  ret i32 %78, !dbg !2660
}

; Function Attrs: nounwind
declare i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare i32 @symlink(i8*, i8*) #2

; Function Attrs: nounwind
declare i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare i32 @mkfifo(i8*, i32) #2

; Function Attrs: nounwind
declare i32 @lchown(i8*, i32, i32) #2

; Function Attrs: nounwind
declare i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strlcpy(i8*, i8*, i64) #0 !dbg !2661 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2664, metadata !DIExpression()), !dbg !2665
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2666, metadata !DIExpression()), !dbg !2667
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2668, metadata !DIExpression()), !dbg !2669
  %7 = load i8*, i8** %4, align 8, !dbg !2670
  %8 = load i8*, i8** %5, align 8, !dbg !2671
  %9 = load i64, i64* %6, align 8, !dbg !2672
  %10 = call i8* @strncpy(i8* %7, i8* %8, i64 %9) #7, !dbg !2673
  %11 = load i8*, i8** %4, align 8, !dbg !2674
  %12 = load i64, i64* %6, align 8, !dbg !2675
  %13 = sub i64 %12, 1, !dbg !2676
  %14 = getelementptr inbounds i8, i8* %11, i64 %13, !dbg !2674
  store i8 0, i8* %14, align 1, !dbg !2677
  %15 = load i8*, i8** %4, align 8, !dbg !2678
  ret i8* %15, !dbg !2679
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mkdir_gen(i8*) #0 !dbg !2680 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2681, metadata !DIExpression()), !dbg !2682
  call void @llvm.dbg.declare(metadata %struct.stat* %4, metadata !2683, metadata !DIExpression()), !dbg !2684
  %5 = load i8*, i8** %3, align 8, !dbg !2685
  %6 = call i32 @lstat64(i8* %5, %struct.stat* %4) #7, !dbg !2687
  %7 = icmp slt i32 %6, 0, !dbg !2688
  br i1 %7, label %8, label %17, !dbg !2689

; <label>:8:                                      ; preds = %1
  %9 = load i8*, i8** %3, align 8, !dbg !2690
  %10 = call i32 @mkdir(i8* %9, i32 511) #7, !dbg !2693
  %11 = icmp slt i32 %10, 0, !dbg !2694
  br i1 %11, label %12, label %16, !dbg !2695

; <label>:12:                                     ; preds = %8
  %13 = call i32* @__errno_location() #11, !dbg !2696
  %14 = load i32, i32* %13, align 4, !dbg !2696
  %15 = sub nsw i32 0, %14, !dbg !2697
  store i32 %15, i32* %2, align 4, !dbg !2698
  br label %28, !dbg !2698

; <label>:16:                                     ; preds = %8
  br label %27, !dbg !2699

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !2700
  %19 = load i32, i32* %18, align 8, !dbg !2700
  %20 = and i32 %19, 61440, !dbg !2700
  %21 = icmp eq i32 %20, 16384, !dbg !2700
  br i1 %21, label %26, label %22, !dbg !2703

; <label>:22:                                     ; preds = %17
  %23 = call i32* @__errno_location() #11, !dbg !2704
  %24 = load i32, i32* %23, align 4, !dbg !2704
  %25 = sub nsw i32 0, %24, !dbg !2705
  store i32 %25, i32* %2, align 4, !dbg !2706
  br label %28, !dbg !2706

; <label>:26:                                     ; preds = %17
  br label %27

; <label>:27:                                     ; preds = %26, %16
  store i32 1, i32* %2, align 4, !dbg !2707
  br label %28, !dbg !2707

; <label>:28:                                     ; preds = %27, %22, %12
  %29 = load i32, i32* %2, align 4, !dbg !2708
  ret i32 %29, !dbg !2708
}

; Function Attrs: nounwind
declare i32 @mkdir(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_rrmdir(i8*) #0 !dbg !2709 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXdir*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.stat, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2710, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.declare(metadata %struct.HXdir** %4, metadata !2712, metadata !DIExpression()), !dbg !2713
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2714, metadata !DIExpression()), !dbg !2715
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2716, metadata !DIExpression()), !dbg !2719
  store i8* null, i8** %6, align 8, !dbg !2719
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2720, metadata !DIExpression()), !dbg !2721
  store i32 0, i32* %7, align 4, !dbg !2721
  %9 = load i8*, i8** %3, align 8, !dbg !2722
  %10 = call i8* @HXdir_open(i8* %9), !dbg !2724
  %11 = bitcast i8* %10 to %struct.HXdir*, !dbg !2724
  store %struct.HXdir* %11, %struct.HXdir** %4, align 8, !dbg !2725
  %12 = icmp eq %struct.HXdir* %11, null, !dbg !2726
  br i1 %12, label %13, label %17, !dbg !2727

; <label>:13:                                     ; preds = %1
  %14 = call i32* @__errno_location() #11, !dbg !2728
  %15 = load i32, i32* %14, align 4, !dbg !2728
  %16 = sub nsw i32 0, %15, !dbg !2729
  store i32 %16, i32* %2, align 4, !dbg !2730
  br label %98, !dbg !2730

; <label>:17:                                     ; preds = %1
  br label %18, !dbg !2731

; <label>:18:                                     ; preds = %80, %78, %65, %48, %31, %17
  %19 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2732
  %20 = bitcast %struct.HXdir* %19 to i8*, !dbg !2732
  %21 = call i8* @HXdir_read(i8* %20), !dbg !2733
  store i8* %21, i8** %5, align 8, !dbg !2734
  %22 = icmp ne i8* %21, null, !dbg !2735
  br i1 %22, label %23, label %81, !dbg !2731

; <label>:23:                                     ; preds = %18
  call void @llvm.dbg.declare(metadata %struct.stat* %8, metadata !2736, metadata !DIExpression()), !dbg !2738
  %24 = load i8*, i8** %5, align 8, !dbg !2739
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0)) #10, !dbg !2741
  %26 = icmp eq i32 %25, 0, !dbg !2742
  br i1 %26, label %31, label %27, !dbg !2743

; <label>:27:                                     ; preds = %23
  %28 = load i8*, i8** %5, align 8, !dbg !2744
  %29 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.39, i32 0, i32 0)) #10, !dbg !2745
  %30 = icmp eq i32 %29, 0, !dbg !2746
  br i1 %30, label %31, label %32, !dbg !2747

; <label>:31:                                     ; preds = %27, %23
  br label %18, !dbg !2748, !llvm.loop !2749

; <label>:32:                                     ; preds = %27
  %33 = load i8*, i8** %3, align 8, !dbg !2751
  %34 = call i8* @HXmc_strcpy(i8** %6, i8* %33), !dbg !2752
  %35 = call i8* @HXmc_strcat(i8** %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.41, i32 0, i32 0)), !dbg !2753
  %36 = load i8*, i8** %5, align 8, !dbg !2754
  %37 = call i8* @HXmc_strcat(i8** %6, i8* %36), !dbg !2755
  %38 = load i8*, i8** %6, align 8, !dbg !2756
  %39 = call i32 @lstat64(i8* %38, %struct.stat* %8) #7, !dbg !2758
  %40 = icmp slt i32 %39, 0, !dbg !2759
  br i1 %40, label %41, label %49, !dbg !2760

; <label>:41:                                     ; preds = %32
  %42 = load i32, i32* %7, align 4, !dbg !2761
  %43 = icmp eq i32 %42, 0, !dbg !2764
  br i1 %43, label %44, label %48, !dbg !2765

; <label>:44:                                     ; preds = %41
  %45 = call i32* @__errno_location() #11, !dbg !2766
  %46 = load i32, i32* %45, align 4, !dbg !2766
  %47 = sub nsw i32 0, %46, !dbg !2767
  store i32 %47, i32* %7, align 4, !dbg !2768
  br label %48, !dbg !2769

; <label>:48:                                     ; preds = %44, %41
  br label %18, !dbg !2770, !llvm.loop !2749

; <label>:49:                                     ; preds = %32
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !2771
  %51 = load i32, i32* %50, align 8, !dbg !2771
  %52 = and i32 %51, 61440, !dbg !2771
  %53 = icmp eq i32 %52, 16384, !dbg !2771
  br i1 %53, label %54, label %67, !dbg !2773

; <label>:54:                                     ; preds = %49
  %55 = load i8*, i8** %6, align 8, !dbg !2774
  %56 = call i32 @HX_rrmdir(i8* %55), !dbg !2777
  %57 = icmp sle i32 %56, 0, !dbg !2778
  br i1 %57, label %58, label %66, !dbg !2779

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* %7, align 4, !dbg !2780
  %60 = icmp eq i32 %59, 0, !dbg !2783
  br i1 %60, label %61, label %65, !dbg !2784

; <label>:61:                                     ; preds = %58
  %62 = call i32* @__errno_location() #11, !dbg !2785
  %63 = load i32, i32* %62, align 4, !dbg !2785
  %64 = sub nsw i32 0, %63, !dbg !2786
  store i32 %64, i32* %7, align 4, !dbg !2787
  br label %65, !dbg !2788

; <label>:65:                                     ; preds = %61, %58
  br label %18, !dbg !2789, !llvm.loop !2749

; <label>:66:                                     ; preds = %54
  br label %80, !dbg !2790

; <label>:67:                                     ; preds = %49
  %68 = load i8*, i8** %6, align 8, !dbg !2791
  %69 = call i32 @unlink(i8* %68) #7, !dbg !2793
  %70 = icmp slt i32 %69, 0, !dbg !2794
  br i1 %70, label %71, label %79, !dbg !2795

; <label>:71:                                     ; preds = %67
  %72 = load i32, i32* %7, align 4, !dbg !2796
  %73 = icmp eq i32 %72, 0, !dbg !2799
  br i1 %73, label %74, label %78, !dbg !2800

; <label>:74:                                     ; preds = %71
  %75 = call i32* @__errno_location() #11, !dbg !2801
  %76 = load i32, i32* %75, align 4, !dbg !2801
  %77 = sub nsw i32 0, %76, !dbg !2802
  store i32 %77, i32* %7, align 4, !dbg !2803
  br label %78, !dbg !2804

; <label>:78:                                     ; preds = %74, %71
  br label %18, !dbg !2805, !llvm.loop !2749

; <label>:79:                                     ; preds = %67
  br label %80

; <label>:80:                                     ; preds = %79, %66
  br label %18, !dbg !2731, !llvm.loop !2749

; <label>:81:                                     ; preds = %18
  %82 = load i8*, i8** %3, align 8, !dbg !2806
  %83 = call i32 @rmdir(i8* %82) #7, !dbg !2808
  %84 = icmp slt i32 %83, 0, !dbg !2809
  br i1 %84, label %85, label %93, !dbg !2810

; <label>:85:                                     ; preds = %81
  %86 = load i32, i32* %7, align 4, !dbg !2811
  %87 = icmp eq i32 %86, 0, !dbg !2814
  br i1 %87, label %88, label %92, !dbg !2815

; <label>:88:                                     ; preds = %85
  %89 = call i32* @__errno_location() #11, !dbg !2816
  %90 = load i32, i32* %89, align 4, !dbg !2816
  %91 = sub nsw i32 0, %90, !dbg !2817
  store i32 %91, i32* %7, align 4, !dbg !2818
  br label %92, !dbg !2819

; <label>:92:                                     ; preds = %88, %85
  br label %93, !dbg !2820

; <label>:93:                                     ; preds = %92, %81
  %94 = load %struct.HXdir*, %struct.HXdir** %4, align 8, !dbg !2821
  %95 = bitcast %struct.HXdir* %94 to i8*, !dbg !2821
  call void @HXdir_close(i8* %95), !dbg !2822
  %96 = load i8*, i8** %6, align 8, !dbg !2823
  call void @HXmc_free(i8* %96), !dbg !2824
  %97 = load i32, i32* %7, align 4, !dbg !2825
  store i32 %97, i32* %2, align 4, !dbg !2826
  br label %98, !dbg !2826

; <label>:98:                                     ; preds = %93, %13
  %99 = load i32, i32* %2, align 4, !dbg !2827
  ret i32 %99, !dbg !2827
}

; Function Attrs: nounwind
declare i32 @unlink(i8*) #2

; Function Attrs: nounwind
declare i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define void @HXmap_free(%struct.HXmap*) #0 !dbg !2828 {
  %2 = alloca %struct.HXmap*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXmap_private*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %2, metadata !2836, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2838, metadata !DIExpression()), !dbg !2839
  %5 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !2840
  %6 = bitcast %struct.HXmap* %5 to i8*, !dbg !2840
  store i8* %6, i8** %3, align 8, !dbg !2839
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %4, metadata !2841, metadata !DIExpression()), !dbg !2844
  %7 = load i8*, i8** %3, align 8, !dbg !2845
  %8 = bitcast i8* %7 to %struct.HXmap_private*, !dbg !2845
  store %struct.HXmap_private* %8, %struct.HXmap_private** %4, align 8, !dbg !2844
  %9 = load %struct.HXmap_private*, %struct.HXmap_private** %4, align 8, !dbg !2846
  %10 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %9, i32 0, i32 2, !dbg !2847
  %11 = load i32, i32* %10, align 8, !dbg !2847
  switch i32 %11, label %18 [
    i32 1, label %12
    i32 2, label %15
  ], !dbg !2848

; <label>:12:                                     ; preds = %1
  %13 = load i8*, i8** %3, align 8, !dbg !2849
  %14 = bitcast i8* %13 to %struct.HXhmap*, !dbg !2849
  call void @HXhmap_free(%struct.HXhmap* %14), !dbg !2851
  br label %19, !dbg !2852

; <label>:15:                                     ; preds = %1
  %16 = load i8*, i8** %3, align 8, !dbg !2853
  %17 = bitcast i8* %16 to %struct.HXrbtree*, !dbg !2853
  call void @HXrbtree_free(%struct.HXrbtree* %17), !dbg !2854
  br label %19, !dbg !2855

; <label>:18:                                     ; preds = %1
  br label %19, !dbg !2856

; <label>:19:                                     ; preds = %18, %15, %12
  ret void, !dbg !2857
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXhmap_free(%struct.HXhmap*) #0 !dbg !2858 {
  %2 = alloca %struct.HXhmap*, align 8
  %3 = alloca %struct.HXhmap_node*, align 8
  %4 = alloca %struct.HXhmap_node*, align 8
  %5 = alloca i32, align 4
  store %struct.HXhmap* %0, %struct.HXhmap** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %2, metadata !2870, metadata !DIExpression()), !dbg !2871
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %3, metadata !2872, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %4, metadata !2874, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2876, metadata !DIExpression()), !dbg !2877
  store i32 0, i32* %5, align 4, !dbg !2878
  br label %6, !dbg !2880

; <label>:6:                                      ; preds = %93, %1
  %7 = load i32, i32* %5, align 4, !dbg !2881
  %8 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2883
  %9 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %8, i32 0, i32 2, !dbg !2884
  %10 = load i32, i32* %9, align 8, !dbg !2884
  %11 = zext i32 %10 to i64, !dbg !2885
  %12 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %11, !dbg !2885
  %13 = load i32, i32* %12, align 4, !dbg !2885
  %14 = icmp ult i32 %7, %13, !dbg !2886
  br i1 %14, label %15, label %96, !dbg !2887

; <label>:15:                                     ; preds = %6
  %16 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2888
  %17 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %16, i32 0, i32 1, !dbg !2888
  %18 = load %struct.HXlist_head*, %struct.HXlist_head** %17, align 8, !dbg !2888
  %19 = load i32, i32* %5, align 4, !dbg !2888
  %20 = zext i32 %19 to i64, !dbg !2888
  %21 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %18, i64 %20, !dbg !2888
  %22 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %21, i32 0, i32 0, !dbg !2888
  %23 = load %struct.HXlist_head*, %struct.HXlist_head** %22, align 8, !dbg !2888
  %24 = bitcast %struct.HXlist_head* %23 to i8*, !dbg !2888
  %25 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !2888
  %26 = bitcast i8* %25 to %struct.HXhmap_node*, !dbg !2888
  store %struct.HXhmap_node* %26, %struct.HXhmap_node** %3, align 8, !dbg !2888
  %27 = load %struct.HXhmap_node*, %struct.HXhmap_node** %3, align 8, !dbg !2888
  %28 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %27, i32 0, i32 0, !dbg !2888
  %29 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %28, i32 0, i32 0, !dbg !2888
  %30 = load %struct.HXlist_head*, %struct.HXlist_head** %29, align 8, !dbg !2888
  %31 = bitcast %struct.HXlist_head* %30 to i8*, !dbg !2888
  %32 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !2888
  %33 = bitcast i8* %32 to %struct.HXhmap_node*, !dbg !2888
  store %struct.HXhmap_node* %33, %struct.HXhmap_node** %4, align 8, !dbg !2888
  br label %34, !dbg !2888

; <label>:34:                                     ; preds = %83, %15
  %35 = load %struct.HXhmap_node*, %struct.HXhmap_node** %3, align 8, !dbg !2891
  %36 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %35, i32 0, i32 0, !dbg !2891
  %37 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2891
  %38 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %37, i32 0, i32 1, !dbg !2891
  %39 = load %struct.HXlist_head*, %struct.HXlist_head** %38, align 8, !dbg !2891
  %40 = load i32, i32* %5, align 4, !dbg !2891
  %41 = zext i32 %40 to i64, !dbg !2891
  %42 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %39, i64 %41, !dbg !2891
  %43 = bitcast %struct.HXlist_head* %42 to i8*, !dbg !2891
  %44 = bitcast i8* %43 to %struct.HXlist_head*, !dbg !2891
  %45 = icmp ne %struct.HXlist_head* %36, %44, !dbg !2891
  br i1 %45, label %46, label %92, !dbg !2888

; <label>:46:                                     ; preds = %34
  %47 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2893
  %48 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %47, i32 0, i32 0, !dbg !2896
  %49 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %48, i32 0, i32 5, !dbg !2897
  %50 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %49, i32 0, i32 2, !dbg !2898
  %51 = load void (i8*)*, void (i8*)** %50, align 8, !dbg !2898
  %52 = icmp ne void (i8*)* %51, null, !dbg !2899
  br i1 %52, label %53, label %63, !dbg !2900

; <label>:53:                                     ; preds = %46
  %54 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2901
  %55 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %54, i32 0, i32 0, !dbg !2902
  %56 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %55, i32 0, i32 5, !dbg !2903
  %57 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %56, i32 0, i32 2, !dbg !2904
  %58 = load void (i8*)*, void (i8*)** %57, align 8, !dbg !2904
  %59 = load %struct.HXhmap_node*, %struct.HXhmap_node** %3, align 8, !dbg !2905
  %60 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %59, i32 0, i32 1, !dbg !2906
  %61 = bitcast %union.anon* %60 to i8**, !dbg !2906
  %62 = load i8*, i8** %61, align 8, !dbg !2906
  call void %58(i8* %62), !dbg !2901
  br label %63, !dbg !2901

; <label>:63:                                     ; preds = %53, %46
  %64 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2907
  %65 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %64, i32 0, i32 0, !dbg !2909
  %66 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %65, i32 0, i32 5, !dbg !2910
  %67 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %66, i32 0, i32 4, !dbg !2911
  %68 = load void (i8*)*, void (i8*)** %67, align 8, !dbg !2911
  %69 = icmp ne void (i8*)* %68, null, !dbg !2912
  br i1 %69, label %70, label %80, !dbg !2913

; <label>:70:                                     ; preds = %63
  %71 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2914
  %72 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %71, i32 0, i32 0, !dbg !2915
  %73 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %72, i32 0, i32 5, !dbg !2916
  %74 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %73, i32 0, i32 4, !dbg !2917
  %75 = load void (i8*)*, void (i8*)** %74, align 8, !dbg !2917
  %76 = load %struct.HXhmap_node*, %struct.HXhmap_node** %3, align 8, !dbg !2918
  %77 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %76, i32 0, i32 2, !dbg !2919
  %78 = bitcast %union.anon* %77 to i8**, !dbg !2919
  %79 = load i8*, i8** %78, align 8, !dbg !2919
  call void %75(i8* %79), !dbg !2914
  br label %80, !dbg !2914

; <label>:80:                                     ; preds = %70, %63
  %81 = load %struct.HXhmap_node*, %struct.HXhmap_node** %3, align 8, !dbg !2920
  %82 = bitcast %struct.HXhmap_node* %81 to i8*, !dbg !2920
  call void @free(i8* %82) #7, !dbg !2921
  br label %83, !dbg !2922

; <label>:83:                                     ; preds = %80
  %84 = load %struct.HXhmap_node*, %struct.HXhmap_node** %4, align 8, !dbg !2891
  store %struct.HXhmap_node* %84, %struct.HXhmap_node** %3, align 8, !dbg !2891
  %85 = load %struct.HXhmap_node*, %struct.HXhmap_node** %4, align 8, !dbg !2891
  %86 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %85, i32 0, i32 0, !dbg !2891
  %87 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %86, i32 0, i32 0, !dbg !2891
  %88 = load %struct.HXlist_head*, %struct.HXlist_head** %87, align 8, !dbg !2891
  %89 = bitcast %struct.HXlist_head* %88 to i8*, !dbg !2891
  %90 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !2891
  %91 = bitcast i8* %90 to %struct.HXhmap_node*, !dbg !2891
  store %struct.HXhmap_node* %91, %struct.HXhmap_node** %4, align 8, !dbg !2891
  br label %34, !dbg !2891, !llvm.loop !2923

; <label>:92:                                     ; preds = %34
  br label %93, !dbg !2925

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* %5, align 4, !dbg !2926
  %95 = add i32 %94, 1, !dbg !2926
  store i32 %95, i32* %5, align 4, !dbg !2926
  br label %6, !dbg !2927, !llvm.loop !2928

; <label>:96:                                     ; preds = %6
  %97 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2930
  %98 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %97, i32 0, i32 1, !dbg !2931
  %99 = load %struct.HXlist_head*, %struct.HXlist_head** %98, align 8, !dbg !2931
  %100 = bitcast %struct.HXlist_head* %99 to i8*, !dbg !2930
  call void @free(i8* %100) #7, !dbg !2932
  %101 = load %struct.HXhmap*, %struct.HXhmap** %2, align 8, !dbg !2933
  %102 = bitcast %struct.HXhmap* %101 to i8*, !dbg !2933
  call void @free(i8* %102) #7, !dbg !2934
  ret void, !dbg !2935
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtree_free(%struct.HXrbtree*) #0 !dbg !2936 {
  %2 = alloca %struct.HXrbtree*, align 8
  store %struct.HXrbtree* %0, %struct.HXrbtree** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %2, metadata !2939, metadata !DIExpression()), !dbg !2940
  %3 = load %struct.HXrbtree*, %struct.HXrbtree** %2, align 8, !dbg !2941
  %4 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %3, i32 0, i32 1, !dbg !2943
  %5 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !2943
  %6 = icmp ne %struct.HXrbtree_node* %5, null, !dbg !2944
  br i1 %6, label %7, label %12, !dbg !2945

; <label>:7:                                      ; preds = %1
  %8 = load %struct.HXrbtree*, %struct.HXrbtree** %2, align 8, !dbg !2946
  %9 = load %struct.HXrbtree*, %struct.HXrbtree** %2, align 8, !dbg !2947
  %10 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %9, i32 0, i32 1, !dbg !2948
  %11 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !2948
  call void @HXrbtree_free_dive(%struct.HXrbtree* %8, %struct.HXrbtree_node* %11), !dbg !2949
  br label %12, !dbg !2949

; <label>:12:                                     ; preds = %7, %1
  %13 = load %struct.HXrbtree*, %struct.HXrbtree** %2, align 8, !dbg !2950
  %14 = bitcast %struct.HXrbtree* %13 to i8*, !dbg !2950
  call void @free(i8* %14) #7, !dbg !2951
  ret void, !dbg !2952
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtree_free_dive(%struct.HXrbtree*, %struct.HXrbtree_node*) #0 !dbg !2953 {
  %3 = alloca %struct.HXrbtree*, align 8
  %4 = alloca %struct.HXrbtree_node*, align 8
  store %struct.HXrbtree* %0, %struct.HXrbtree** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %3, metadata !2958, metadata !DIExpression()), !dbg !2959
  store %struct.HXrbtree_node* %1, %struct.HXrbtree_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %4, metadata !2960, metadata !DIExpression()), !dbg !2961
  %5 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !2962
  %6 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %5, i32 0, i32 0, !dbg !2964
  %7 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %6, i64 0, i64 0, !dbg !2962
  %8 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !2962
  %9 = icmp ne %struct.HXrbtree_node* %8, null, !dbg !2965
  br i1 %9, label %10, label %16, !dbg !2966

; <label>:10:                                     ; preds = %2
  %11 = load %struct.HXrbtree*, %struct.HXrbtree** %3, align 8, !dbg !2967
  %12 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !2968
  %13 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %12, i32 0, i32 0, !dbg !2969
  %14 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %13, i64 0, i64 0, !dbg !2968
  %15 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %14, align 8, !dbg !2968
  call void @HXrbtree_free_dive(%struct.HXrbtree* %11, %struct.HXrbtree_node* %15), !dbg !2970
  br label %16, !dbg !2970

; <label>:16:                                     ; preds = %10, %2
  %17 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !2971
  %18 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %17, i32 0, i32 0, !dbg !2973
  %19 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %18, i64 0, i64 1, !dbg !2971
  %20 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %19, align 8, !dbg !2971
  %21 = icmp ne %struct.HXrbtree_node* %20, null, !dbg !2974
  br i1 %21, label %22, label %28, !dbg !2975

; <label>:22:                                     ; preds = %16
  %23 = load %struct.HXrbtree*, %struct.HXrbtree** %3, align 8, !dbg !2976
  %24 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !2977
  %25 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %24, i32 0, i32 0, !dbg !2978
  %26 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %25, i64 0, i64 1, !dbg !2977
  %27 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %26, align 8, !dbg !2977
  call void @HXrbtree_free_dive(%struct.HXrbtree* %23, %struct.HXrbtree_node* %27), !dbg !2979
  br label %28, !dbg !2979

; <label>:28:                                     ; preds = %22, %16
  %29 = load %struct.HXrbtree*, %struct.HXrbtree** %3, align 8, !dbg !2980
  %30 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %29, i32 0, i32 0, !dbg !2982
  %31 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %30, i32 0, i32 5, !dbg !2983
  %32 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %31, i32 0, i32 2, !dbg !2984
  %33 = load void (i8*)*, void (i8*)** %32, align 8, !dbg !2984
  %34 = icmp ne void (i8*)* %33, null, !dbg !2985
  br i1 %34, label %35, label %45, !dbg !2986

; <label>:35:                                     ; preds = %28
  %36 = load %struct.HXrbtree*, %struct.HXrbtree** %3, align 8, !dbg !2987
  %37 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %36, i32 0, i32 0, !dbg !2988
  %38 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %37, i32 0, i32 5, !dbg !2989
  %39 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %38, i32 0, i32 2, !dbg !2990
  %40 = load void (i8*)*, void (i8*)** %39, align 8, !dbg !2990
  %41 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !2991
  %42 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %41, i32 0, i32 1, !dbg !2992
  %43 = bitcast %union.anon* %42 to i8**, !dbg !2992
  %44 = load i8*, i8** %43, align 8, !dbg !2992
  call void %40(i8* %44), !dbg !2987
  br label %45, !dbg !2987

; <label>:45:                                     ; preds = %35, %28
  %46 = load %struct.HXrbtree*, %struct.HXrbtree** %3, align 8, !dbg !2993
  %47 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %46, i32 0, i32 0, !dbg !2995
  %48 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %47, i32 0, i32 5, !dbg !2996
  %49 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %48, i32 0, i32 4, !dbg !2997
  %50 = load void (i8*)*, void (i8*)** %49, align 8, !dbg !2997
  %51 = icmp ne void (i8*)* %50, null, !dbg !2998
  br i1 %51, label %52, label %62, !dbg !2999

; <label>:52:                                     ; preds = %45
  %53 = load %struct.HXrbtree*, %struct.HXrbtree** %3, align 8, !dbg !3000
  %54 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %53, i32 0, i32 0, !dbg !3001
  %55 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %54, i32 0, i32 5, !dbg !3002
  %56 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %55, i32 0, i32 4, !dbg !3003
  %57 = load void (i8*)*, void (i8*)** %56, align 8, !dbg !3003
  %58 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !3004
  %59 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %58, i32 0, i32 2, !dbg !3005
  %60 = bitcast %union.anon* %59 to i8**, !dbg !3005
  %61 = load i8*, i8** %60, align 8, !dbg !3005
  call void %57(i8* %61), !dbg !3000
  br label %62, !dbg !3000

; <label>:62:                                     ; preds = %52, %45
  %63 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !3006
  %64 = bitcast %struct.HXrbtree_node* %63 to i8*, !dbg !3006
  call void @free(i8* %64) #7, !dbg !3007
  ret void, !dbg !3008
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HXhash_jlookup3(i8*, i64) #0 !dbg !258 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3009, metadata !DIExpression()), !dbg !3010
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !3011, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3013, metadata !DIExpression()), !dbg !3017
  %10 = load i8*, i8** %4, align 8, !dbg !3018
  store i8* %10, i8** %6, align 8, !dbg !3017
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3019, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3021, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3023, metadata !DIExpression()), !dbg !3024
  %11 = load i64, i64* %5, align 8, !dbg !3025
  %12 = add i64 2654435769, %11, !dbg !3026
  %13 = trunc i64 %12 to i32, !dbg !3027
  store i32 %13, i32* %9, align 4, !dbg !3028
  store i32 %13, i32* %8, align 4, !dbg !3029
  store i32 %13, i32* %7, align 4, !dbg !3030
  br label %14, !dbg !3031

; <label>:14:                                     ; preds = %168, %2
  %15 = load i64, i64* %5, align 8, !dbg !3032
  %16 = icmp ugt i64 %15, 12, !dbg !3035
  br i1 %16, label %17, label %173, !dbg !3036

; <label>:17:                                     ; preds = %14
  %18 = load i8*, i8** %6, align 8, !dbg !3037
  %19 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !3037
  %20 = load i8, i8* %19, align 1, !dbg !3037
  %21 = zext i8 %20 to i32, !dbg !3037
  %22 = load i8*, i8** %6, align 8, !dbg !3039
  %23 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !3039
  %24 = load i8, i8* %23, align 1, !dbg !3039
  %25 = zext i8 %24 to i32, !dbg !3040
  %26 = shl i32 %25, 8, !dbg !3041
  %27 = add i32 %21, %26, !dbg !3042
  %28 = load i8*, i8** %6, align 8, !dbg !3043
  %29 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !3043
  %30 = load i8, i8* %29, align 1, !dbg !3043
  %31 = zext i8 %30 to i32, !dbg !3044
  %32 = shl i32 %31, 16, !dbg !3045
  %33 = add i32 %27, %32, !dbg !3046
  %34 = load i8*, i8** %6, align 8, !dbg !3047
  %35 = getelementptr inbounds i8, i8* %34, i64 3, !dbg !3047
  %36 = load i8, i8* %35, align 1, !dbg !3047
  %37 = zext i8 %36 to i32, !dbg !3048
  %38 = shl i32 %37, 24, !dbg !3049
  %39 = add i32 %33, %38, !dbg !3050
  %40 = load i32, i32* %7, align 4, !dbg !3051
  %41 = add i32 %40, %39, !dbg !3051
  store i32 %41, i32* %7, align 4, !dbg !3051
  %42 = load i8*, i8** %6, align 8, !dbg !3052
  %43 = getelementptr inbounds i8, i8* %42, i64 4, !dbg !3052
  %44 = load i8, i8* %43, align 1, !dbg !3052
  %45 = zext i8 %44 to i32, !dbg !3052
  %46 = load i8*, i8** %6, align 8, !dbg !3053
  %47 = getelementptr inbounds i8, i8* %46, i64 5, !dbg !3053
  %48 = load i8, i8* %47, align 1, !dbg !3053
  %49 = zext i8 %48 to i32, !dbg !3054
  %50 = shl i32 %49, 8, !dbg !3055
  %51 = add i32 %45, %50, !dbg !3056
  %52 = load i8*, i8** %6, align 8, !dbg !3057
  %53 = getelementptr inbounds i8, i8* %52, i64 6, !dbg !3057
  %54 = load i8, i8* %53, align 1, !dbg !3057
  %55 = zext i8 %54 to i32, !dbg !3058
  %56 = shl i32 %55, 16, !dbg !3059
  %57 = add i32 %51, %56, !dbg !3060
  %58 = load i8*, i8** %6, align 8, !dbg !3061
  %59 = getelementptr inbounds i8, i8* %58, i64 7, !dbg !3061
  %60 = load i8, i8* %59, align 1, !dbg !3061
  %61 = zext i8 %60 to i32, !dbg !3062
  %62 = shl i32 %61, 24, !dbg !3063
  %63 = add i32 %57, %62, !dbg !3064
  %64 = load i32, i32* %8, align 4, !dbg !3065
  %65 = add i32 %64, %63, !dbg !3065
  store i32 %65, i32* %8, align 4, !dbg !3065
  %66 = load i8*, i8** %6, align 8, !dbg !3066
  %67 = getelementptr inbounds i8, i8* %66, i64 8, !dbg !3066
  %68 = load i8, i8* %67, align 1, !dbg !3066
  %69 = zext i8 %68 to i32, !dbg !3066
  %70 = load i8*, i8** %6, align 8, !dbg !3067
  %71 = getelementptr inbounds i8, i8* %70, i64 9, !dbg !3067
  %72 = load i8, i8* %71, align 1, !dbg !3067
  %73 = zext i8 %72 to i32, !dbg !3068
  %74 = shl i32 %73, 8, !dbg !3069
  %75 = add i32 %69, %74, !dbg !3070
  %76 = load i8*, i8** %6, align 8, !dbg !3071
  %77 = getelementptr inbounds i8, i8* %76, i64 10, !dbg !3071
  %78 = load i8, i8* %77, align 1, !dbg !3071
  %79 = zext i8 %78 to i32, !dbg !3072
  %80 = shl i32 %79, 16, !dbg !3073
  %81 = add i32 %75, %80, !dbg !3074
  %82 = load i8*, i8** %6, align 8, !dbg !3075
  %83 = getelementptr inbounds i8, i8* %82, i64 11, !dbg !3075
  %84 = load i8, i8* %83, align 1, !dbg !3075
  %85 = zext i8 %84 to i32, !dbg !3076
  %86 = shl i32 %85, 24, !dbg !3077
  %87 = add i32 %81, %86, !dbg !3078
  %88 = load i32, i32* %9, align 4, !dbg !3079
  %89 = add i32 %88, %87, !dbg !3079
  store i32 %89, i32* %9, align 4, !dbg !3079
  %90 = load i32, i32* %9, align 4, !dbg !3080
  %91 = load i32, i32* %7, align 4, !dbg !3080
  %92 = sub i32 %91, %90, !dbg !3080
  store i32 %92, i32* %7, align 4, !dbg !3080
  %93 = load i32, i32* %9, align 4, !dbg !3080
  %94 = shl i32 %93, 4, !dbg !3080
  %95 = load i32, i32* %9, align 4, !dbg !3080
  %96 = lshr i32 %95, 28, !dbg !3080
  %97 = or i32 %94, %96, !dbg !3080
  %98 = load i32, i32* %7, align 4, !dbg !3080
  %99 = xor i32 %98, %97, !dbg !3080
  store i32 %99, i32* %7, align 4, !dbg !3080
  %100 = load i32, i32* %8, align 4, !dbg !3080
  %101 = load i32, i32* %9, align 4, !dbg !3080
  %102 = add i32 %101, %100, !dbg !3080
  store i32 %102, i32* %9, align 4, !dbg !3080
  %103 = load i32, i32* %7, align 4, !dbg !3080
  %104 = load i32, i32* %8, align 4, !dbg !3080
  %105 = sub i32 %104, %103, !dbg !3080
  store i32 %105, i32* %8, align 4, !dbg !3080
  %106 = load i32, i32* %7, align 4, !dbg !3080
  %107 = shl i32 %106, 6, !dbg !3080
  %108 = load i32, i32* %7, align 4, !dbg !3080
  %109 = lshr i32 %108, 26, !dbg !3080
  %110 = or i32 %107, %109, !dbg !3080
  %111 = load i32, i32* %8, align 4, !dbg !3080
  %112 = xor i32 %111, %110, !dbg !3080
  store i32 %112, i32* %8, align 4, !dbg !3080
  %113 = load i32, i32* %9, align 4, !dbg !3080
  %114 = load i32, i32* %7, align 4, !dbg !3080
  %115 = add i32 %114, %113, !dbg !3080
  store i32 %115, i32* %7, align 4, !dbg !3080
  %116 = load i32, i32* %8, align 4, !dbg !3080
  %117 = load i32, i32* %9, align 4, !dbg !3080
  %118 = sub i32 %117, %116, !dbg !3080
  store i32 %118, i32* %9, align 4, !dbg !3080
  %119 = load i32, i32* %8, align 4, !dbg !3080
  %120 = shl i32 %119, 8, !dbg !3080
  %121 = load i32, i32* %8, align 4, !dbg !3080
  %122 = lshr i32 %121, 24, !dbg !3080
  %123 = or i32 %120, %122, !dbg !3080
  %124 = load i32, i32* %9, align 4, !dbg !3080
  %125 = xor i32 %124, %123, !dbg !3080
  store i32 %125, i32* %9, align 4, !dbg !3080
  %126 = load i32, i32* %7, align 4, !dbg !3080
  %127 = load i32, i32* %8, align 4, !dbg !3080
  %128 = add i32 %127, %126, !dbg !3080
  store i32 %128, i32* %8, align 4, !dbg !3080
  %129 = load i32, i32* %9, align 4, !dbg !3080
  %130 = load i32, i32* %7, align 4, !dbg !3080
  %131 = sub i32 %130, %129, !dbg !3080
  store i32 %131, i32* %7, align 4, !dbg !3080
  %132 = load i32, i32* %9, align 4, !dbg !3080
  %133 = shl i32 %132, 16, !dbg !3080
  %134 = load i32, i32* %9, align 4, !dbg !3080
  %135 = lshr i32 %134, 16, !dbg !3080
  %136 = or i32 %133, %135, !dbg !3080
  %137 = load i32, i32* %7, align 4, !dbg !3080
  %138 = xor i32 %137, %136, !dbg !3080
  store i32 %138, i32* %7, align 4, !dbg !3080
  %139 = load i32, i32* %8, align 4, !dbg !3080
  %140 = load i32, i32* %9, align 4, !dbg !3080
  %141 = add i32 %140, %139, !dbg !3080
  store i32 %141, i32* %9, align 4, !dbg !3080
  %142 = load i32, i32* %7, align 4, !dbg !3080
  %143 = load i32, i32* %8, align 4, !dbg !3080
  %144 = sub i32 %143, %142, !dbg !3080
  store i32 %144, i32* %8, align 4, !dbg !3080
  %145 = load i32, i32* %7, align 4, !dbg !3080
  %146 = shl i32 %145, 19, !dbg !3080
  %147 = load i32, i32* %7, align 4, !dbg !3080
  %148 = lshr i32 %147, 13, !dbg !3080
  %149 = or i32 %146, %148, !dbg !3080
  %150 = load i32, i32* %8, align 4, !dbg !3080
  %151 = xor i32 %150, %149, !dbg !3080
  store i32 %151, i32* %8, align 4, !dbg !3080
  %152 = load i32, i32* %9, align 4, !dbg !3080
  %153 = load i32, i32* %7, align 4, !dbg !3080
  %154 = add i32 %153, %152, !dbg !3080
  store i32 %154, i32* %7, align 4, !dbg !3080
  %155 = load i32, i32* %8, align 4, !dbg !3080
  %156 = load i32, i32* %9, align 4, !dbg !3080
  %157 = sub i32 %156, %155, !dbg !3080
  store i32 %157, i32* %9, align 4, !dbg !3080
  %158 = load i32, i32* %8, align 4, !dbg !3080
  %159 = shl i32 %158, 4, !dbg !3080
  %160 = load i32, i32* %8, align 4, !dbg !3080
  %161 = lshr i32 %160, 28, !dbg !3080
  %162 = or i32 %159, %161, !dbg !3080
  %163 = load i32, i32* %9, align 4, !dbg !3080
  %164 = xor i32 %163, %162, !dbg !3080
  store i32 %164, i32* %9, align 4, !dbg !3080
  %165 = load i32, i32* %7, align 4, !dbg !3080
  %166 = load i32, i32* %8, align 4, !dbg !3080
  %167 = add i32 %166, %165, !dbg !3080
  store i32 %167, i32* %8, align 4, !dbg !3080
  br label %168, !dbg !3082

; <label>:168:                                    ; preds = %17
  %169 = load i64, i64* %5, align 8, !dbg !3083
  %170 = sub i64 %169, 12, !dbg !3083
  store i64 %170, i64* %5, align 8, !dbg !3083
  %171 = load i8*, i8** %6, align 8, !dbg !3084
  %172 = getelementptr inbounds i8, i8* %171, i64 12, !dbg !3084
  store i8* %172, i8** %6, align 8, !dbg !3084
  br label %14, !dbg !3085, !llvm.loop !3086

; <label>:173:                                    ; preds = %14
  %174 = load i64, i64* %5, align 8, !dbg !3088
  switch i64 %174, label %271 [
    i64 12, label %175
    i64 11, label %183
    i64 10, label %191
    i64 9, label %199
    i64 8, label %206
    i64 7, label %214
    i64 6, label %222
    i64 5, label %230
    i64 4, label %237
    i64 3, label %245
    i64 2, label %253
    i64 1, label %261
    i64 0, label %268
  ], !dbg !3089

; <label>:175:                                    ; preds = %173
  %176 = load i8*, i8** %6, align 8, !dbg !3090
  %177 = getelementptr inbounds i8, i8* %176, i64 11, !dbg !3090
  %178 = load i8, i8* %177, align 1, !dbg !3090
  %179 = zext i8 %178 to i32, !dbg !3092
  %180 = shl i32 %179, 24, !dbg !3093
  %181 = load i32, i32* %9, align 4, !dbg !3094
  %182 = add i32 %181, %180, !dbg !3094
  store i32 %182, i32* %9, align 4, !dbg !3094
  br label %183, !dbg !3095

; <label>:183:                                    ; preds = %175, %173
  %184 = load i8*, i8** %6, align 8, !dbg !3096
  %185 = getelementptr inbounds i8, i8* %184, i64 10, !dbg !3096
  %186 = load i8, i8* %185, align 1, !dbg !3096
  %187 = zext i8 %186 to i32, !dbg !3097
  %188 = shl i32 %187, 16, !dbg !3098
  %189 = load i32, i32* %9, align 4, !dbg !3099
  %190 = add i32 %189, %188, !dbg !3099
  store i32 %190, i32* %9, align 4, !dbg !3099
  br label %191, !dbg !3100

; <label>:191:                                    ; preds = %183, %173
  %192 = load i8*, i8** %6, align 8, !dbg !3101
  %193 = getelementptr inbounds i8, i8* %192, i64 9, !dbg !3101
  %194 = load i8, i8* %193, align 1, !dbg !3101
  %195 = zext i8 %194 to i32, !dbg !3102
  %196 = shl i32 %195, 8, !dbg !3103
  %197 = load i32, i32* %9, align 4, !dbg !3104
  %198 = add i32 %197, %196, !dbg !3104
  store i32 %198, i32* %9, align 4, !dbg !3104
  br label %199, !dbg !3105

; <label>:199:                                    ; preds = %191, %173
  %200 = load i8*, i8** %6, align 8, !dbg !3106
  %201 = getelementptr inbounds i8, i8* %200, i64 8, !dbg !3106
  %202 = load i8, i8* %201, align 1, !dbg !3106
  %203 = zext i8 %202 to i32, !dbg !3106
  %204 = load i32, i32* %9, align 4, !dbg !3107
  %205 = add i32 %204, %203, !dbg !3107
  store i32 %205, i32* %9, align 4, !dbg !3107
  br label %206, !dbg !3108

; <label>:206:                                    ; preds = %199, %173
  %207 = load i8*, i8** %6, align 8, !dbg !3109
  %208 = getelementptr inbounds i8, i8* %207, i64 7, !dbg !3109
  %209 = load i8, i8* %208, align 1, !dbg !3109
  %210 = zext i8 %209 to i32, !dbg !3110
  %211 = shl i32 %210, 24, !dbg !3111
  %212 = load i32, i32* %8, align 4, !dbg !3112
  %213 = add i32 %212, %211, !dbg !3112
  store i32 %213, i32* %8, align 4, !dbg !3112
  br label %214, !dbg !3113

; <label>:214:                                    ; preds = %206, %173
  %215 = load i8*, i8** %6, align 8, !dbg !3114
  %216 = getelementptr inbounds i8, i8* %215, i64 6, !dbg !3114
  %217 = load i8, i8* %216, align 1, !dbg !3114
  %218 = zext i8 %217 to i32, !dbg !3115
  %219 = shl i32 %218, 16, !dbg !3116
  %220 = load i32, i32* %8, align 4, !dbg !3117
  %221 = add i32 %220, %219, !dbg !3117
  store i32 %221, i32* %8, align 4, !dbg !3117
  br label %222, !dbg !3118

; <label>:222:                                    ; preds = %214, %173
  %223 = load i8*, i8** %6, align 8, !dbg !3119
  %224 = getelementptr inbounds i8, i8* %223, i64 5, !dbg !3119
  %225 = load i8, i8* %224, align 1, !dbg !3119
  %226 = zext i8 %225 to i32, !dbg !3120
  %227 = shl i32 %226, 8, !dbg !3121
  %228 = load i32, i32* %8, align 4, !dbg !3122
  %229 = add i32 %228, %227, !dbg !3122
  store i32 %229, i32* %8, align 4, !dbg !3122
  br label %230, !dbg !3123

; <label>:230:                                    ; preds = %222, %173
  %231 = load i8*, i8** %6, align 8, !dbg !3124
  %232 = getelementptr inbounds i8, i8* %231, i64 4, !dbg !3124
  %233 = load i8, i8* %232, align 1, !dbg !3124
  %234 = zext i8 %233 to i32, !dbg !3124
  %235 = load i32, i32* %8, align 4, !dbg !3125
  %236 = add i32 %235, %234, !dbg !3125
  store i32 %236, i32* %8, align 4, !dbg !3125
  br label %237, !dbg !3126

; <label>:237:                                    ; preds = %230, %173
  %238 = load i8*, i8** %6, align 8, !dbg !3127
  %239 = getelementptr inbounds i8, i8* %238, i64 3, !dbg !3127
  %240 = load i8, i8* %239, align 1, !dbg !3127
  %241 = zext i8 %240 to i32, !dbg !3128
  %242 = shl i32 %241, 24, !dbg !3129
  %243 = load i32, i32* %7, align 4, !dbg !3130
  %244 = add i32 %243, %242, !dbg !3130
  store i32 %244, i32* %7, align 4, !dbg !3130
  br label %245, !dbg !3131

; <label>:245:                                    ; preds = %237, %173
  %246 = load i8*, i8** %6, align 8, !dbg !3132
  %247 = getelementptr inbounds i8, i8* %246, i64 2, !dbg !3132
  %248 = load i8, i8* %247, align 1, !dbg !3132
  %249 = zext i8 %248 to i32, !dbg !3133
  %250 = shl i32 %249, 16, !dbg !3134
  %251 = load i32, i32* %7, align 4, !dbg !3135
  %252 = add i32 %251, %250, !dbg !3135
  store i32 %252, i32* %7, align 4, !dbg !3135
  br label %253, !dbg !3136

; <label>:253:                                    ; preds = %245, %173
  %254 = load i8*, i8** %6, align 8, !dbg !3137
  %255 = getelementptr inbounds i8, i8* %254, i64 1, !dbg !3137
  %256 = load i8, i8* %255, align 1, !dbg !3137
  %257 = zext i8 %256 to i32, !dbg !3138
  %258 = shl i32 %257, 8, !dbg !3139
  %259 = load i32, i32* %7, align 4, !dbg !3140
  %260 = add i32 %259, %258, !dbg !3140
  store i32 %260, i32* %7, align 4, !dbg !3140
  br label %261, !dbg !3141

; <label>:261:                                    ; preds = %253, %173
  %262 = load i8*, i8** %6, align 8, !dbg !3142
  %263 = getelementptr inbounds i8, i8* %262, i64 0, !dbg !3142
  %264 = load i8, i8* %263, align 1, !dbg !3142
  %265 = zext i8 %264 to i32, !dbg !3142
  %266 = load i32, i32* %7, align 4, !dbg !3143
  %267 = add i32 %266, %265, !dbg !3143
  store i32 %267, i32* %7, align 4, !dbg !3143
  br label %271, !dbg !3144

; <label>:268:                                    ; preds = %173
  %269 = load i32, i32* %9, align 4, !dbg !3145
  %270 = zext i32 %269 to i64, !dbg !3145
  store i64 %270, i64* %3, align 8, !dbg !3146
  br label %344, !dbg !3146

; <label>:271:                                    ; preds = %261, %173
  %272 = load i32, i32* %8, align 4, !dbg !3147
  %273 = load i32, i32* %9, align 4, !dbg !3147
  %274 = xor i32 %273, %272, !dbg !3147
  store i32 %274, i32* %9, align 4, !dbg !3147
  %275 = load i32, i32* %8, align 4, !dbg !3147
  %276 = shl i32 %275, 14, !dbg !3147
  %277 = load i32, i32* %8, align 4, !dbg !3147
  %278 = lshr i32 %277, 18, !dbg !3147
  %279 = or i32 %276, %278, !dbg !3147
  %280 = load i32, i32* %9, align 4, !dbg !3147
  %281 = sub i32 %280, %279, !dbg !3147
  store i32 %281, i32* %9, align 4, !dbg !3147
  %282 = load i32, i32* %9, align 4, !dbg !3147
  %283 = load i32, i32* %7, align 4, !dbg !3147
  %284 = xor i32 %283, %282, !dbg !3147
  store i32 %284, i32* %7, align 4, !dbg !3147
  %285 = load i32, i32* %9, align 4, !dbg !3147
  %286 = shl i32 %285, 11, !dbg !3147
  %287 = load i32, i32* %9, align 4, !dbg !3147
  %288 = lshr i32 %287, 21, !dbg !3147
  %289 = or i32 %286, %288, !dbg !3147
  %290 = load i32, i32* %7, align 4, !dbg !3147
  %291 = sub i32 %290, %289, !dbg !3147
  store i32 %291, i32* %7, align 4, !dbg !3147
  %292 = load i32, i32* %7, align 4, !dbg !3147
  %293 = load i32, i32* %8, align 4, !dbg !3147
  %294 = xor i32 %293, %292, !dbg !3147
  store i32 %294, i32* %8, align 4, !dbg !3147
  %295 = load i32, i32* %7, align 4, !dbg !3147
  %296 = shl i32 %295, 25, !dbg !3147
  %297 = load i32, i32* %7, align 4, !dbg !3147
  %298 = lshr i32 %297, 7, !dbg !3147
  %299 = or i32 %296, %298, !dbg !3147
  %300 = load i32, i32* %8, align 4, !dbg !3147
  %301 = sub i32 %300, %299, !dbg !3147
  store i32 %301, i32* %8, align 4, !dbg !3147
  %302 = load i32, i32* %8, align 4, !dbg !3147
  %303 = load i32, i32* %9, align 4, !dbg !3147
  %304 = xor i32 %303, %302, !dbg !3147
  store i32 %304, i32* %9, align 4, !dbg !3147
  %305 = load i32, i32* %8, align 4, !dbg !3147
  %306 = shl i32 %305, 16, !dbg !3147
  %307 = load i32, i32* %8, align 4, !dbg !3147
  %308 = lshr i32 %307, 16, !dbg !3147
  %309 = or i32 %306, %308, !dbg !3147
  %310 = load i32, i32* %9, align 4, !dbg !3147
  %311 = sub i32 %310, %309, !dbg !3147
  store i32 %311, i32* %9, align 4, !dbg !3147
  %312 = load i32, i32* %9, align 4, !dbg !3147
  %313 = load i32, i32* %7, align 4, !dbg !3147
  %314 = xor i32 %313, %312, !dbg !3147
  store i32 %314, i32* %7, align 4, !dbg !3147
  %315 = load i32, i32* %9, align 4, !dbg !3147
  %316 = shl i32 %315, 4, !dbg !3147
  %317 = load i32, i32* %9, align 4, !dbg !3147
  %318 = lshr i32 %317, 28, !dbg !3147
  %319 = or i32 %316, %318, !dbg !3147
  %320 = load i32, i32* %7, align 4, !dbg !3147
  %321 = sub i32 %320, %319, !dbg !3147
  store i32 %321, i32* %7, align 4, !dbg !3147
  %322 = load i32, i32* %7, align 4, !dbg !3147
  %323 = load i32, i32* %8, align 4, !dbg !3147
  %324 = xor i32 %323, %322, !dbg !3147
  store i32 %324, i32* %8, align 4, !dbg !3147
  %325 = load i32, i32* %7, align 4, !dbg !3147
  %326 = shl i32 %325, 14, !dbg !3147
  %327 = load i32, i32* %7, align 4, !dbg !3147
  %328 = lshr i32 %327, 18, !dbg !3147
  %329 = or i32 %326, %328, !dbg !3147
  %330 = load i32, i32* %8, align 4, !dbg !3147
  %331 = sub i32 %330, %329, !dbg !3147
  store i32 %331, i32* %8, align 4, !dbg !3147
  %332 = load i32, i32* %8, align 4, !dbg !3147
  %333 = load i32, i32* %9, align 4, !dbg !3147
  %334 = xor i32 %333, %332, !dbg !3147
  store i32 %334, i32* %9, align 4, !dbg !3147
  %335 = load i32, i32* %8, align 4, !dbg !3147
  %336 = shl i32 %335, 24, !dbg !3147
  %337 = load i32, i32* %8, align 4, !dbg !3147
  %338 = lshr i32 %337, 8, !dbg !3147
  %339 = or i32 %336, %338, !dbg !3147
  %340 = load i32, i32* %9, align 4, !dbg !3147
  %341 = sub i32 %340, %339, !dbg !3147
  store i32 %341, i32* %9, align 4, !dbg !3147
  %342 = load i32, i32* %9, align 4, !dbg !3149
  %343 = zext i32 %342 to i64, !dbg !3149
  store i64 %343, i64* %3, align 8, !dbg !3150
  br label %344, !dbg !3150

; <label>:344:                                    ; preds = %271, %268
  %345 = load i64, i64* %3, align 8, !dbg !3151
  ret i64 %345, !dbg !3151
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HXhash_jlookup3s(i8*, i64) #0 !dbg !3152 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3153, metadata !DIExpression()), !dbg !3154
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3155, metadata !DIExpression()), !dbg !3156
  %5 = load i8*, i8** %3, align 8, !dbg !3157
  %6 = load i8*, i8** %3, align 8, !dbg !3158
  %7 = call i64 @strlen(i8* %6) #10, !dbg !3159
  %8 = call i64 @HXhash_jlookup3(i8* %5, i64 %7), !dbg !3160
  ret i64 %8, !dbg !3161
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HXhash_djb2(i8*, i64) #0 !dbg !3162 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3163, metadata !DIExpression()), !dbg !3164
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3165, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3167, metadata !DIExpression()), !dbg !3168
  %7 = load i8*, i8** %3, align 8, !dbg !3169
  store i8* %7, i8** %5, align 8, !dbg !3168
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3170, metadata !DIExpression()), !dbg !3171
  store i64 5381, i64* %6, align 8, !dbg !3171
  br label %8, !dbg !3172

; <label>:8:                                      ; preds = %13, %2
  %9 = load i8*, i8** %5, align 8, !dbg !3173
  %10 = load i8, i8* %9, align 1, !dbg !3174
  %11 = sext i8 %10 to i32, !dbg !3174
  %12 = icmp ne i32 %11, 0, !dbg !3175
  br i1 %12, label %13, label %23, !dbg !3172

; <label>:13:                                     ; preds = %8
  %14 = load i64, i64* %6, align 8, !dbg !3176
  %15 = shl i64 %14, 5, !dbg !3177
  %16 = load i64, i64* %6, align 8, !dbg !3178
  %17 = add i64 %15, %16, !dbg !3179
  %18 = load i8*, i8** %5, align 8, !dbg !3180
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !3180
  store i8* %19, i8** %5, align 8, !dbg !3180
  %20 = load i8, i8* %18, align 1, !dbg !3181
  %21 = sext i8 %20 to i64, !dbg !3181
  %22 = xor i64 %17, %21, !dbg !3182
  store i64 %22, i64* %6, align 8, !dbg !3183
  br label %8, !dbg !3172, !llvm.loop !3184

; <label>:23:                                     ; preds = %8
  %24 = load i64, i64* %6, align 8, !dbg !3185
  ret i64 %24, !dbg !3186
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap* @HXmap_init5(i32, i32, %struct.HXmap_ops*, i64, i64) #0 !dbg !3187 {
  %6 = alloca %struct.HXmap*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.HXmap_ops*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3192, metadata !DIExpression()), !dbg !3193
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3194, metadata !DIExpression()), !dbg !3195
  store %struct.HXmap_ops* %2, %struct.HXmap_ops** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_ops** %9, metadata !3196, metadata !DIExpression()), !dbg !3197
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !3198, metadata !DIExpression()), !dbg !3199
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3200, metadata !DIExpression()), !dbg !3201
  %12 = load i32, i32* %7, align 4, !dbg !3202
  switch i32 %12, label %25 [
    i32 1, label %13
    i32 2, label %19
  ], !dbg !3203

; <label>:13:                                     ; preds = %5
  %14 = load i32, i32* %8, align 4, !dbg !3204
  %15 = load %struct.HXmap_ops*, %struct.HXmap_ops** %9, align 8, !dbg !3206
  %16 = load i64, i64* %10, align 8, !dbg !3207
  %17 = load i64, i64* %11, align 8, !dbg !3208
  %18 = call %struct.HXmap* @HXhashmap_init4(i32 %14, %struct.HXmap_ops* %15, i64 %16, i64 %17), !dbg !3209
  store %struct.HXmap* %18, %struct.HXmap** %6, align 8, !dbg !3210
  br label %27, !dbg !3210

; <label>:19:                                     ; preds = %5
  %20 = load i32, i32* %8, align 4, !dbg !3211
  %21 = load %struct.HXmap_ops*, %struct.HXmap_ops** %9, align 8, !dbg !3212
  %22 = load i64, i64* %10, align 8, !dbg !3213
  %23 = load i64, i64* %11, align 8, !dbg !3214
  %24 = call %struct.HXmap* @HXrbtree_init4(i32 %20, %struct.HXmap_ops* %21, i64 %22, i64 %23), !dbg !3215
  store %struct.HXmap* %24, %struct.HXmap** %6, align 8, !dbg !3216
  br label %27, !dbg !3216

; <label>:25:                                     ; preds = %5
  %26 = call i32* @__errno_location() #11, !dbg !3217
  store i32 -2, i32* %26, align 4, !dbg !3218
  store %struct.HXmap* null, %struct.HXmap** %6, align 8, !dbg !3219
  br label %27, !dbg !3219

; <label>:27:                                     ; preds = %25, %19, %13
  %28 = load %struct.HXmap*, %struct.HXmap** %6, align 8, !dbg !3220
  ret %struct.HXmap* %28, !dbg !3220
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap* @HXhashmap_init4(i32, %struct.HXmap_ops*, i64, i64) #0 !dbg !3221 {
  %5 = alloca %struct.HXmap*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.HXmap_ops*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.HXmap_private*, align 8
  %11 = alloca %struct.HXhmap*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %union.anon, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3224, metadata !DIExpression()), !dbg !3225
  store %struct.HXmap_ops* %1, %struct.HXmap_ops** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_ops** %7, metadata !3226, metadata !DIExpression()), !dbg !3227
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !3228, metadata !DIExpression()), !dbg !3229
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %10, metadata !3232, metadata !DIExpression()), !dbg !3234
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %11, metadata !3235, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3237, metadata !DIExpression()), !dbg !3238
  %14 = call noalias i8* @calloc(i64 1, i64 104) #7, !dbg !3239
  %15 = bitcast i8* %14 to %struct.HXhmap*, !dbg !3239
  store %struct.HXhmap* %15, %struct.HXhmap** %11, align 8, !dbg !3241
  %16 = icmp eq %struct.HXhmap* %15, null, !dbg !3242
  br i1 %16, label %17, label %18, !dbg !3243

; <label>:17:                                     ; preds = %4
  store %struct.HXmap* null, %struct.HXmap** %5, align 8, !dbg !3244
  br label %60, !dbg !3244

; <label>:18:                                     ; preds = %4
  %19 = load %struct.HXhmap*, %struct.HXhmap** %11, align 8, !dbg !3245
  %20 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %19, i32 0, i32 0, !dbg !3246
  store %struct.HXmap_private* %20, %struct.HXmap_private** %10, align 8, !dbg !3247
  %21 = load i32, i32* %6, align 4, !dbg !3248
  %22 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3249
  %23 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %22, i32 0, i32 1, !dbg !3250
  store i32 %21, i32* %23, align 4, !dbg !3251
  %24 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3252
  %25 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %24, i32 0, i32 0, !dbg !3253
  store i32 0, i32* %25, align 8, !dbg !3254
  %26 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3255
  %27 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %26, i32 0, i32 2, !dbg !3256
  store i32 1, i32* %27, align 8, !dbg !3257
  %28 = load i64, i64* %8, align 8, !dbg !3258
  %29 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3259
  %30 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %29, i32 0, i32 3, !dbg !3260
  store i64 %28, i64* %30, align 8, !dbg !3261
  %31 = load i64, i64* %9, align 8, !dbg !3262
  %32 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3263
  %33 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %32, i32 0, i32 4, !dbg !3264
  store i64 %31, i64* %33, align 8, !dbg !3265
  %34 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3266
  %35 = load %struct.HXmap_ops*, %struct.HXmap_ops** %7, align 8, !dbg !3267
  call void @HXmap_ops_setup(%struct.HXmap_private* %34, %struct.HXmap_ops* %35), !dbg !3268
  %36 = load %struct.HXhmap*, %struct.HXhmap** %11, align 8, !dbg !3269
  %37 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %36, i32 0, i32 5, !dbg !3270
  store i32 1, i32* %37, align 4, !dbg !3271
  %38 = load %struct.HXhmap*, %struct.HXhmap** %11, align 8, !dbg !3272
  %39 = call i32 @HXhmap_layout(%struct.HXhmap* %38, i32 0), !dbg !3273
  %40 = call i32* @__errno_location() #11, !dbg !3274
  store i32 %39, i32* %40, align 4, !dbg !3275
  %41 = load %struct.HXhmap*, %struct.HXhmap** %11, align 8, !dbg !3276
  %42 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %41, i32 0, i32 1, !dbg !3278
  %43 = load %struct.HXlist_head*, %struct.HXlist_head** %42, align 8, !dbg !3278
  %44 = icmp eq %struct.HXlist_head* %43, null, !dbg !3279
  br i1 %44, label %45, label %46, !dbg !3280

; <label>:45:                                     ; preds = %18
  br label %54, !dbg !3281

; <label>:46:                                     ; preds = %18
  %47 = call i32* @__errno_location() #11, !dbg !3282
  store i32 0, i32* %47, align 4, !dbg !3283
  %48 = getelementptr inbounds %union.anon, %union.anon* %13, i32 0, i32 0, !dbg !3284
  %49 = load %struct.HXhmap*, %struct.HXhmap** %11, align 8, !dbg !3284
  %50 = bitcast %struct.HXhmap* %49 to i8*, !dbg !3284
  store i8* %50, i8** %48, align 8, !dbg !3284
  %51 = getelementptr inbounds %union.anon, %union.anon* %13, i32 0, i32 0, !dbg !3284
  %52 = load i8*, i8** %51, align 8, !dbg !3284
  %53 = bitcast i8* %52 to %struct.HXmap*, !dbg !3284
  store %struct.HXmap* %53, %struct.HXmap** %5, align 8, !dbg !3285
  br label %60, !dbg !3285

; <label>:54:                                     ; preds = %45
  %55 = call i32* @__errno_location() #11, !dbg !3286
  %56 = load i32, i32* %55, align 4, !dbg !3286
  store i32 %56, i32* %12, align 4, !dbg !3287
  %57 = load %struct.HXhmap*, %struct.HXhmap** %11, align 8, !dbg !3288
  call void @HXhmap_free(%struct.HXhmap* %57), !dbg !3289
  %58 = load i32, i32* %12, align 4, !dbg !3290
  %59 = call i32* @__errno_location() #11, !dbg !3291
  store i32 %58, i32* %59, align 4, !dbg !3292
  store %struct.HXmap* null, %struct.HXmap** %5, align 8, !dbg !3293
  br label %60, !dbg !3293

; <label>:60:                                     ; preds = %54, %46, %17
  %61 = load %struct.HXmap*, %struct.HXmap** %5, align 8, !dbg !3294
  ret %struct.HXmap* %61, !dbg !3294
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap* @HXrbtree_init4(i32, %struct.HXmap_ops*, i64, i64) #0 !dbg !3295 {
  %5 = alloca %struct.HXmap*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.HXmap_ops*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.HXmap_private*, align 8
  %11 = alloca %struct.HXrbtree*, align 8
  %12 = alloca %union.anon, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3296, metadata !DIExpression()), !dbg !3297
  store %struct.HXmap_ops* %1, %struct.HXmap_ops** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_ops** %7, metadata !3298, metadata !DIExpression()), !dbg !3299
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !3300, metadata !DIExpression()), !dbg !3301
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3302, metadata !DIExpression()), !dbg !3303
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %10, metadata !3304, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %11, metadata !3306, metadata !DIExpression()), !dbg !3307
  %13 = call noalias i8* @calloc(i64 1, i64 96) #7, !dbg !3308
  %14 = bitcast i8* %13 to %struct.HXrbtree*, !dbg !3308
  store %struct.HXrbtree* %14, %struct.HXrbtree** %11, align 8, !dbg !3310
  %15 = icmp eq %struct.HXrbtree* %14, null, !dbg !3311
  br i1 %15, label %16, label %17, !dbg !3312

; <label>:16:                                     ; preds = %4
  store %struct.HXmap* null, %struct.HXmap** %5, align 8, !dbg !3313
  br label %45, !dbg !3313

; <label>:17:                                     ; preds = %4
  %18 = load %struct.HXrbtree*, %struct.HXrbtree** %11, align 8, !dbg !3314
  %19 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %18, i32 0, i32 0, !dbg !3315
  store %struct.HXmap_private* %19, %struct.HXmap_private** %10, align 8, !dbg !3316
  %20 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3317
  %21 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %20, i32 0, i32 2, !dbg !3318
  store i32 2, i32* %21, align 8, !dbg !3319
  %22 = load i32, i32* %6, align 4, !dbg !3320
  %23 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3321
  %24 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %23, i32 0, i32 1, !dbg !3322
  store i32 %22, i32* %24, align 4, !dbg !3323
  %25 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3324
  %26 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %25, i32 0, i32 0, !dbg !3325
  store i32 0, i32* %26, align 8, !dbg !3326
  %27 = load i64, i64* %8, align 8, !dbg !3327
  %28 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3328
  %29 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %28, i32 0, i32 3, !dbg !3329
  store i64 %27, i64* %29, align 8, !dbg !3330
  %30 = load i64, i64* %9, align 8, !dbg !3331
  %31 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3332
  %32 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %31, i32 0, i32 4, !dbg !3333
  store i64 %30, i64* %32, align 8, !dbg !3334
  %33 = load %struct.HXmap_private*, %struct.HXmap_private** %10, align 8, !dbg !3335
  %34 = load %struct.HXmap_ops*, %struct.HXmap_ops** %7, align 8, !dbg !3336
  call void @HXmap_ops_setup(%struct.HXmap_private* %33, %struct.HXmap_ops* %34), !dbg !3337
  %35 = load %struct.HXrbtree*, %struct.HXrbtree** %11, align 8, !dbg !3338
  %36 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %35, i32 0, i32 2, !dbg !3339
  store i32 1, i32* %36, align 8, !dbg !3340
  %37 = load %struct.HXrbtree*, %struct.HXrbtree** %11, align 8, !dbg !3341
  %38 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %37, i32 0, i32 1, !dbg !3342
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %38, align 8, !dbg !3343
  %39 = getelementptr inbounds %union.anon, %union.anon* %12, i32 0, i32 0, !dbg !3344
  %40 = load %struct.HXrbtree*, %struct.HXrbtree** %11, align 8, !dbg !3344
  %41 = bitcast %struct.HXrbtree* %40 to i8*, !dbg !3344
  store i8* %41, i8** %39, align 8, !dbg !3344
  %42 = getelementptr inbounds %union.anon, %union.anon* %12, i32 0, i32 0, !dbg !3344
  %43 = load i8*, i8** %42, align 8, !dbg !3344
  %44 = bitcast i8* %43 to %struct.HXmap*, !dbg !3344
  store %struct.HXmap* %44, %struct.HXmap** %5, align 8, !dbg !3345
  br label %45, !dbg !3345

; <label>:45:                                     ; preds = %17, %16
  %46 = load %struct.HXmap*, %struct.HXmap** %5, align 8, !dbg !3346
  ret %struct.HXmap* %46, !dbg !3346
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXmap_ops_setup(%struct.HXmap_private*, %struct.HXmap_ops*) #0 !dbg !3347 {
  %3 = alloca %struct.HXmap_private*, align 8
  %4 = alloca %struct.HXmap_ops*, align 8
  %5 = alloca %struct.HXmap_ops*, align 8
  %6 = alloca %union.anon, align 8
  %7 = alloca %union.anon, align 8
  %8 = alloca %union.anon, align 8
  store %struct.HXmap_private* %0, %struct.HXmap_private** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %3, metadata !3350, metadata !DIExpression()), !dbg !3351
  store %struct.HXmap_ops* %1, %struct.HXmap_ops** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_ops** %4, metadata !3352, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.declare(metadata %struct.HXmap_ops** %5, metadata !3354, metadata !DIExpression()), !dbg !3356
  %9 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3357
  %10 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %9, i32 0, i32 5, !dbg !3358
  store %struct.HXmap_ops* %10, %struct.HXmap_ops** %5, align 8, !dbg !3356
  %11 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3359
  %12 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %11, i32 0, i32 1, !dbg !3360
  store i8* (i8*, i64)* @HXmap_valuecpy, i8* (i8*, i64)** %12, align 8, !dbg !3361
  %13 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3362
  %14 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %13, i32 0, i32 3, !dbg !3363
  store i8* (i8*, i64)* @HXmap_valuecpy, i8* (i8*, i64)** %14, align 8, !dbg !3364
  %15 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3365
  %16 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %15, i32 0, i32 1, !dbg !3367
  %17 = load i32, i32* %16, align 4, !dbg !3367
  %18 = and i32 %17, 268435456, !dbg !3368
  %19 = icmp ne i32 %18, 0, !dbg !3368
  br i1 %19, label %20, label %27, !dbg !3369

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds %union.anon, %union.anon* %6, i32 0, i32 0, !dbg !3370
  store i8* bitcast (i32 (i8*, i8*)* @strcmp to i8*), i8** %21, align 8, !dbg !3370
  %22 = getelementptr inbounds %union.anon, %union.anon* %6, i32 0, i32 0, !dbg !3370
  %23 = load i8*, i8** %22, align 8, !dbg !3370
  %24 = bitcast i8* %23 to i32 (i8*, i8*, i64)*, !dbg !3370
  %25 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3371
  %26 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %25, i32 0, i32 0, !dbg !3372
  store i32 (i8*, i8*, i64)* %24, i32 (i8*, i8*, i64)** %26, align 8, !dbg !3373
  br label %39, !dbg !3371

; <label>:27:                                     ; preds = %2
  %28 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3374
  %29 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %28, i32 0, i32 3, !dbg !3376
  %30 = load i64, i64* %29, align 8, !dbg !3376
  %31 = icmp eq i64 %30, 0, !dbg !3377
  br i1 %31, label %32, label %35, !dbg !3378

; <label>:32:                                     ; preds = %27
  %33 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3379
  %34 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %33, i32 0, i32 0, !dbg !3380
  store i32 (i8*, i8*, i64)* @HXmap_valuecmp, i32 (i8*, i8*, i64)** %34, align 8, !dbg !3381
  br label %38, !dbg !3379

; <label>:35:                                     ; preds = %27
  %36 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3382
  %37 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %36, i32 0, i32 0, !dbg !3383
  store i32 (i8*, i8*, i64)* @memcmp, i32 (i8*, i8*, i64)** %37, align 8, !dbg !3384
  br label %38

; <label>:38:                                     ; preds = %35, %32
  br label %39

; <label>:39:                                     ; preds = %38, %20
  %40 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3385
  %41 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %40, i32 0, i32 1, !dbg !3387
  %42 = load i32, i32* %41, align 4, !dbg !3387
  %43 = and i32 %42, 536870912, !dbg !3388
  %44 = icmp ne i32 %43, 0, !dbg !3388
  br i1 %44, label %45, label %61, !dbg !3389

; <label>:45:                                     ; preds = %39
  %46 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3390
  %47 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %46, i32 0, i32 1, !dbg !3392
  %48 = load i32, i32* %47, align 4, !dbg !3392
  %49 = and i32 %48, 268435456, !dbg !3393
  %50 = icmp ne i32 %49, 0, !dbg !3394
  %51 = zext i1 %50 to i64, !dbg !3394
  %52 = getelementptr inbounds %union.anon, %union.anon* %7, i32 0, i32 0, !dbg !3395
  store i8* bitcast (i8* (i8*)* @HX_strdup.46 to i8*), i8** %52, align 8, !dbg !3395
  %53 = getelementptr inbounds %union.anon, %union.anon* %7, i32 0, i32 0, !dbg !3395
  %54 = load i8*, i8** %53, align 8, !dbg !3395
  %55 = select i1 %50, i8* %54, i8* bitcast (i8* (i8*, i64)* @HX_memdup.47 to i8*), !dbg !3394
  %56 = bitcast i8* %55 to i8* (i8*, i64)*, !dbg !3394
  %57 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3396
  %58 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %57, i32 0, i32 1, !dbg !3397
  store i8* (i8*, i64)* %56, i8* (i8*, i64)** %58, align 8, !dbg !3398
  %59 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3399
  %60 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %59, i32 0, i32 2, !dbg !3400
  store void (i8*)* @free, void (i8*)** %60, align 8, !dbg !3401
  br label %61, !dbg !3402

; <label>:61:                                     ; preds = %45, %39
  %62 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3403
  %63 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %62, i32 0, i32 1, !dbg !3405
  %64 = load i32, i32* %63, align 4, !dbg !3405
  %65 = and i32 %64, -2147483648, !dbg !3406
  %66 = icmp ne i32 %65, 0, !dbg !3406
  br i1 %66, label %67, label %83, !dbg !3407

; <label>:67:                                     ; preds = %61
  %68 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3408
  %69 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %68, i32 0, i32 1, !dbg !3410
  %70 = load i32, i32* %69, align 4, !dbg !3410
  %71 = and i32 %70, 1073741824, !dbg !3411
  %72 = icmp ne i32 %71, 0, !dbg !3412
  %73 = zext i1 %72 to i64, !dbg !3412
  %74 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !3413
  store i8* bitcast (i8* (i8*)* @HX_strdup.46 to i8*), i8** %74, align 8, !dbg !3413
  %75 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !3413
  %76 = load i8*, i8** %75, align 8, !dbg !3413
  %77 = select i1 %72, i8* %76, i8* bitcast (i8* (i8*, i64)* @HX_memdup.47 to i8*), !dbg !3412
  %78 = bitcast i8* %77 to i8* (i8*, i64)*, !dbg !3412
  %79 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3414
  %80 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %79, i32 0, i32 3, !dbg !3415
  store i8* (i8*, i64)* %78, i8* (i8*, i64)** %80, align 8, !dbg !3416
  %81 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3417
  %82 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %81, i32 0, i32 4, !dbg !3418
  store void (i8*)* @free, void (i8*)** %82, align 8, !dbg !3419
  br label %83, !dbg !3420

; <label>:83:                                     ; preds = %67, %61
  %84 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3421
  %85 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %84, i32 0, i32 2, !dbg !3423
  %86 = load i32, i32* %85, align 8, !dbg !3423
  %87 = icmp eq i32 %86, 1, !dbg !3424
  br i1 %87, label %88, label %110, !dbg !3425

; <label>:88:                                     ; preds = %83
  %89 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3426
  %90 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %89, i32 0, i32 1, !dbg !3429
  %91 = load i32, i32* %90, align 4, !dbg !3429
  %92 = and i32 %91, 268435456, !dbg !3430
  %93 = icmp ne i32 %92, 0, !dbg !3430
  br i1 %93, label %94, label %97, !dbg !3431

; <label>:94:                                     ; preds = %88
  %95 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3432
  %96 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %95, i32 0, i32 5, !dbg !3433
  store i64 (i8*, i64)* @HXhash_djb2, i64 (i8*, i64)** %96, align 8, !dbg !3434
  br label %109, !dbg !3432

; <label>:97:                                     ; preds = %88
  %98 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3435
  %99 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %98, i32 0, i32 3, !dbg !3437
  %100 = load i64, i64* %99, align 8, !dbg !3437
  %101 = icmp ne i64 %100, 0, !dbg !3438
  br i1 %101, label %102, label %105, !dbg !3439

; <label>:102:                                    ; preds = %97
  %103 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3440
  %104 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %103, i32 0, i32 5, !dbg !3441
  store i64 (i8*, i64)* @HXhash_jlookup3, i64 (i8*, i64)** %104, align 8, !dbg !3442
  br label %108, !dbg !3440

; <label>:105:                                    ; preds = %97
  %106 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3443
  %107 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %106, i32 0, i32 5, !dbg !3444
  store i64 (i8*, i64)* @HXhash_jlookup3v, i64 (i8*, i64)** %107, align 8, !dbg !3445
  br label %108

; <label>:108:                                    ; preds = %105, %102
  br label %109

; <label>:109:                                    ; preds = %108, %94
  br label %110, !dbg !3446

; <label>:110:                                    ; preds = %109, %83
  %111 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3447
  %112 = icmp eq %struct.HXmap_ops* %111, null, !dbg !3449
  br i1 %112, label %113, label %114, !dbg !3450

; <label>:113:                                    ; preds = %110
  br label %185, !dbg !3451

; <label>:114:                                    ; preds = %110
  %115 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3452
  %116 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %115, i32 0, i32 0, !dbg !3454
  %117 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %116, align 8, !dbg !3454
  %118 = icmp ne i32 (i8*, i8*, i64)* %117, null, !dbg !3455
  br i1 %118, label %119, label %125, !dbg !3456

; <label>:119:                                    ; preds = %114
  %120 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3457
  %121 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %120, i32 0, i32 0, !dbg !3458
  %122 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %121, align 8, !dbg !3458
  %123 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3459
  %124 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %123, i32 0, i32 0, !dbg !3460
  store i32 (i8*, i8*, i64)* %122, i32 (i8*, i8*, i64)** %124, align 8, !dbg !3461
  br label %125, !dbg !3459

; <label>:125:                                    ; preds = %119, %114
  %126 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3462
  %127 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %126, i32 0, i32 1, !dbg !3464
  %128 = load i8* (i8*, i64)*, i8* (i8*, i64)** %127, align 8, !dbg !3464
  %129 = icmp ne i8* (i8*, i64)* %128, null, !dbg !3465
  br i1 %129, label %130, label %136, !dbg !3466

; <label>:130:                                    ; preds = %125
  %131 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3467
  %132 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %131, i32 0, i32 1, !dbg !3468
  %133 = load i8* (i8*, i64)*, i8* (i8*, i64)** %132, align 8, !dbg !3468
  %134 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3469
  %135 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %134, i32 0, i32 1, !dbg !3470
  store i8* (i8*, i64)* %133, i8* (i8*, i64)** %135, align 8, !dbg !3471
  br label %136, !dbg !3469

; <label>:136:                                    ; preds = %130, %125
  %137 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3472
  %138 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %137, i32 0, i32 2, !dbg !3474
  %139 = load void (i8*)*, void (i8*)** %138, align 8, !dbg !3474
  %140 = icmp ne void (i8*)* %139, null, !dbg !3475
  br i1 %140, label %141, label %147, !dbg !3476

; <label>:141:                                    ; preds = %136
  %142 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3477
  %143 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %142, i32 0, i32 2, !dbg !3478
  %144 = load void (i8*)*, void (i8*)** %143, align 8, !dbg !3478
  %145 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3479
  %146 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %145, i32 0, i32 2, !dbg !3480
  store void (i8*)* %144, void (i8*)** %146, align 8, !dbg !3481
  br label %147, !dbg !3479

; <label>:147:                                    ; preds = %141, %136
  %148 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3482
  %149 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %148, i32 0, i32 3, !dbg !3484
  %150 = load i8* (i8*, i64)*, i8* (i8*, i64)** %149, align 8, !dbg !3484
  %151 = icmp ne i8* (i8*, i64)* %150, null, !dbg !3485
  br i1 %151, label %152, label %158, !dbg !3486

; <label>:152:                                    ; preds = %147
  %153 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3487
  %154 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %153, i32 0, i32 3, !dbg !3488
  %155 = load i8* (i8*, i64)*, i8* (i8*, i64)** %154, align 8, !dbg !3488
  %156 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3489
  %157 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %156, i32 0, i32 3, !dbg !3490
  store i8* (i8*, i64)* %155, i8* (i8*, i64)** %157, align 8, !dbg !3491
  br label %158, !dbg !3489

; <label>:158:                                    ; preds = %152, %147
  %159 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3492
  %160 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %159, i32 0, i32 4, !dbg !3494
  %161 = load void (i8*)*, void (i8*)** %160, align 8, !dbg !3494
  %162 = icmp ne void (i8*)* %161, null, !dbg !3495
  br i1 %162, label %163, label %169, !dbg !3496

; <label>:163:                                    ; preds = %158
  %164 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3497
  %165 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %164, i32 0, i32 4, !dbg !3498
  %166 = load void (i8*)*, void (i8*)** %165, align 8, !dbg !3498
  %167 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3499
  %168 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %167, i32 0, i32 4, !dbg !3500
  store void (i8*)* %166, void (i8*)** %168, align 8, !dbg !3501
  br label %169, !dbg !3499

; <label>:169:                                    ; preds = %163, %158
  %170 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !3502
  %171 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %170, i32 0, i32 2, !dbg !3504
  %172 = load i32, i32* %171, align 8, !dbg !3504
  %173 = icmp eq i32 %172, 1, !dbg !3505
  br i1 %173, label %174, label %185, !dbg !3506

; <label>:174:                                    ; preds = %169
  %175 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3507
  %176 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %175, i32 0, i32 5, !dbg !3508
  %177 = load i64 (i8*, i64)*, i64 (i8*, i64)** %176, align 8, !dbg !3508
  %178 = icmp ne i64 (i8*, i64)* %177, null, !dbg !3509
  br i1 %178, label %179, label %185, !dbg !3510

; <label>:179:                                    ; preds = %174
  %180 = load %struct.HXmap_ops*, %struct.HXmap_ops** %4, align 8, !dbg !3511
  %181 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %180, i32 0, i32 5, !dbg !3512
  %182 = load i64 (i8*, i64)*, i64 (i8*, i64)** %181, align 8, !dbg !3512
  %183 = load %struct.HXmap_ops*, %struct.HXmap_ops** %5, align 8, !dbg !3513
  %184 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %183, i32 0, i32 5, !dbg !3514
  store i64 (i8*, i64)* %182, i64 (i8*, i64)** %184, align 8, !dbg !3515
  br label %185, !dbg !3513

; <label>:185:                                    ; preds = %179, %174, %169, %113
  ret void, !dbg !3516
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXmap_valuecpy(i8*, i64) #0 !dbg !3517 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3518, metadata !DIExpression()), !dbg !3519
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3520, metadata !DIExpression()), !dbg !3521
  %6 = load i8*, i8** %3, align 8, !dbg !3522
  store i8* %6, i8** %5, align 8, !dbg !3522
  %7 = load i8*, i8** %5, align 8, !dbg !3522
  ret i8* %7, !dbg !3524
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXmap_valuecmp(i8*, i8*, i64) #0 !dbg !3525 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3526, metadata !DIExpression()), !dbg !3527
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3528, metadata !DIExpression()), !dbg !3529
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3530, metadata !DIExpression()), !dbg !3531
  %7 = load i8*, i8** %4, align 8, !dbg !3532
  %8 = load i8*, i8** %5, align 8, !dbg !3533
  %9 = icmp ugt i8* %7, %8, !dbg !3534
  br i1 %9, label %10, label %11, !dbg !3535

; <label>:10:                                     ; preds = %3
  br label %17, !dbg !3535

; <label>:11:                                     ; preds = %3
  %12 = load i8*, i8** %4, align 8, !dbg !3536
  %13 = load i8*, i8** %5, align 8, !dbg !3537
  %14 = icmp ult i8* %12, %13, !dbg !3538
  %15 = zext i1 %14 to i64, !dbg !3539
  %16 = select i1 %14, i32 -1, i32 0, !dbg !3539
  br label %17, !dbg !3535

; <label>:17:                                     ; preds = %11, %10
  %18 = phi i32 [ 1, %10 ], [ %16, %11 ], !dbg !3535
  ret i32 %18, !dbg !3540
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strdup.46(i8*) #0 !dbg !3541 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3542, metadata !DIExpression()), !dbg !3543
  %4 = load i8*, i8** %3, align 8, !dbg !3544
  %5 = icmp eq i8* %4, null, !dbg !3546
  br i1 %5, label %6, label %7, !dbg !3547

; <label>:6:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !3548
  br label %13, !dbg !3548

; <label>:7:                                      ; preds = %1
  %8 = load i8*, i8** %3, align 8, !dbg !3549
  %9 = load i8*, i8** %3, align 8, !dbg !3550
  %10 = call i64 @strlen(i8* %9) #10, !dbg !3551
  %11 = add i64 %10, 1, !dbg !3552
  %12 = call i8* @HX_memdup.47(i8* %8, i64 %11), !dbg !3553
  store i8* %12, i8** %2, align 8, !dbg !3554
  br label %13, !dbg !3554

; <label>:13:                                     ; preds = %7, %6
  %14 = load i8*, i8** %2, align 8, !dbg !3555
  ret i8* %14, !dbg !3555
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_memdup.47(i8*, i64) #0 !dbg !3556 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3557, metadata !DIExpression()), !dbg !3558
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !3559, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3561, metadata !DIExpression()), !dbg !3562
  %7 = load i64, i64* %5, align 8, !dbg !3563
  %8 = call noalias i8* @malloc(i64 %7) #7, !dbg !3565
  store i8* %8, i8** %6, align 8, !dbg !3566
  %9 = icmp eq i8* %8, null, !dbg !3567
  br i1 %9, label %10, label %11, !dbg !3568

; <label>:10:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !3569
  br label %15, !dbg !3569

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %6, align 8, !dbg !3570
  %13 = load i8*, i8** %4, align 8, !dbg !3571
  %14 = load i64, i64* %5, align 8, !dbg !3572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 %14, i1 false), !dbg !3573
  store i8* %12, i8** %3, align 8, !dbg !3574
  br label %15, !dbg !3574

; <label>:15:                                     ; preds = %11, %10
  %16 = load i8*, i8** %3, align 8, !dbg !3575
  ret i8* %16, !dbg !3575
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @HXhash_jlookup3v(i8*, i64) #0 !dbg !3576 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3577, metadata !DIExpression()), !dbg !3578
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3579, metadata !DIExpression()), !dbg !3580
  %5 = bitcast i8** %3 to i8*, !dbg !3581
  %6 = call i64 @HXhash_jlookup3(i8* %5, i64 8), !dbg !3582
  ret i64 %6, !dbg !3583
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXhmap_layout(%struct.HXhmap*, i32) #0 !dbg !3584 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.HXhmap*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.HXlist_head*, align 8
  %8 = alloca %struct.HXlist_head*, align 8
  %9 = alloca i32, align 4
  store %struct.HXhmap* %0, %struct.HXhmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %4, metadata !3587, metadata !DIExpression()), !dbg !3588
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3589, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3591, metadata !DIExpression()), !dbg !3592
  %10 = load i32, i32* %5, align 4, !dbg !3593
  %11 = zext i32 %10 to i64, !dbg !3594
  %12 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %11, !dbg !3594
  %13 = load i32, i32* %12, align 4, !dbg !3594
  store i32 %13, i32* %6, align 4, !dbg !3592
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %7, metadata !3595, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %8, metadata !3597, metadata !DIExpression()), !dbg !3598
  store %struct.HXlist_head* null, %struct.HXlist_head** %8, align 8, !dbg !3598
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3599, metadata !DIExpression()), !dbg !3600
  %14 = load i32, i32* %6, align 4, !dbg !3601
  %15 = zext i32 %14 to i64, !dbg !3601
  %16 = mul i64 %15, 16, !dbg !3602
  %17 = call noalias i8* @malloc(i64 %16) #7, !dbg !3603
  %18 = bitcast i8* %17 to %struct.HXlist_head*, !dbg !3603
  store %struct.HXlist_head* %18, %struct.HXlist_head** %7, align 8, !dbg !3604
  %19 = load %struct.HXlist_head*, %struct.HXlist_head** %7, align 8, !dbg !3605
  %20 = icmp eq %struct.HXlist_head* %19, null, !dbg !3607
  br i1 %20, label %21, label %25, !dbg !3608

; <label>:21:                                     ; preds = %2
  %22 = call i32* @__errno_location() #11, !dbg !3609
  %23 = load i32, i32* %22, align 4, !dbg !3609
  %24 = sub nsw i32 0, %23, !dbg !3610
  store i32 %24, i32* %3, align 4, !dbg !3611
  br label %83, !dbg !3611

; <label>:25:                                     ; preds = %2
  store i32 0, i32* %9, align 4, !dbg !3612
  br label %26, !dbg !3614

; <label>:26:                                     ; preds = %35, %25
  %27 = load i32, i32* %9, align 4, !dbg !3615
  %28 = load i32, i32* %6, align 4, !dbg !3617
  %29 = icmp ult i32 %27, %28, !dbg !3618
  br i1 %29, label %30, label %38, !dbg !3619

; <label>:30:                                     ; preds = %26
  %31 = load %struct.HXlist_head*, %struct.HXlist_head** %7, align 8, !dbg !3620
  %32 = load i32, i32* %9, align 4, !dbg !3621
  %33 = zext i32 %32 to i64, !dbg !3620
  %34 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %31, i64 %33, !dbg !3620
  call void @HXlist_init(%struct.HXlist_head* %34), !dbg !3622
  br label %35, !dbg !3622

; <label>:35:                                     ; preds = %30
  %36 = load i32, i32* %9, align 4, !dbg !3623
  %37 = add i32 %36, 1, !dbg !3623
  store i32 %37, i32* %9, align 4, !dbg !3623
  br label %26, !dbg !3624, !llvm.loop !3625

; <label>:38:                                     ; preds = %26
  %39 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3627
  %40 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %39, i32 0, i32 1, !dbg !3629
  %41 = load %struct.HXlist_head*, %struct.HXlist_head** %40, align 8, !dbg !3629
  %42 = icmp ne %struct.HXlist_head* %41, null, !dbg !3630
  br i1 %42, label %43, label %54, !dbg !3631

; <label>:43:                                     ; preds = %38
  %44 = load %struct.HXlist_head*, %struct.HXlist_head** %7, align 8, !dbg !3632
  %45 = load i32, i32* %6, align 4, !dbg !3634
  %46 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3635
  call void @HXhmap_move(%struct.HXlist_head* %44, i32 %45, %struct.HXhmap* %46), !dbg !3636
  %47 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3637
  %48 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %47, i32 0, i32 1, !dbg !3638
  %49 = load %struct.HXlist_head*, %struct.HXlist_head** %48, align 8, !dbg !3638
  store %struct.HXlist_head* %49, %struct.HXlist_head** %8, align 8, !dbg !3639
  %50 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3640
  %51 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %50, i32 0, i32 5, !dbg !3641
  %52 = load i32, i32* %51, align 4, !dbg !3642
  %53 = add i32 %52, 1, !dbg !3642
  store i32 %53, i32* %51, align 4, !dbg !3642
  br label %54, !dbg !3643

; <label>:54:                                     ; preds = %43, %38
  %55 = load i32, i32* %5, align 4, !dbg !3644
  %56 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3645
  %57 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %56, i32 0, i32 2, !dbg !3646
  store i32 %55, i32* %57, align 8, !dbg !3647
  %58 = load i32, i32* %5, align 4, !dbg !3648
  %59 = icmp ne i32 %58, 0, !dbg !3649
  br i1 %59, label %60, label %66, !dbg !3650

; <label>:60:                                     ; preds = %54
  %61 = load i32, i32* %5, align 4, !dbg !3651
  %62 = zext i32 %61 to i64, !dbg !3652
  %63 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %62, !dbg !3652
  %64 = load i32, i32* %63, align 4, !dbg !3652
  %65 = udiv i32 %64, 4, !dbg !3653
  br label %67, !dbg !3650

; <label>:66:                                     ; preds = %54
  br label %67, !dbg !3650

; <label>:67:                                     ; preds = %66, %60
  %68 = phi i32 [ %65, %60 ], [ 0, %66 ], !dbg !3650
  %69 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3654
  %70 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %69, i32 0, i32 4, !dbg !3655
  store i32 %68, i32* %70, align 8, !dbg !3656
  %71 = load i32, i32* %5, align 4, !dbg !3657
  %72 = zext i32 %71 to i64, !dbg !3658
  %73 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %72, !dbg !3658
  %74 = load i32, i32* %73, align 4, !dbg !3658
  %75 = call i32 @x_frac(i32 7, i32 10, i32 %74), !dbg !3659
  %76 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3660
  %77 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %76, i32 0, i32 3, !dbg !3661
  store i32 %75, i32* %77, align 4, !dbg !3662
  %78 = load %struct.HXlist_head*, %struct.HXlist_head** %7, align 8, !dbg !3663
  %79 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3664
  %80 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %79, i32 0, i32 1, !dbg !3665
  store %struct.HXlist_head* %78, %struct.HXlist_head** %80, align 8, !dbg !3666
  %81 = load %struct.HXlist_head*, %struct.HXlist_head** %8, align 8, !dbg !3667
  %82 = bitcast %struct.HXlist_head* %81 to i8*, !dbg !3667
  call void @free(i8* %82) #7, !dbg !3668
  store i32 1, i32* %3, align 4, !dbg !3669
  br label %83, !dbg !3669

; <label>:83:                                     ; preds = %67, %21
  %84 = load i32, i32* %3, align 4, !dbg !3670
  ret i32 %84, !dbg !3670
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXlist_init(%struct.HXlist_head*) #0 !dbg !3671 {
  %2 = alloca %struct.HXlist_head*, align 8
  store %struct.HXlist_head* %0, %struct.HXlist_head** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %2, metadata !3674, metadata !DIExpression()), !dbg !3675
  %3 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3676
  %4 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3677
  %5 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %4, i32 0, i32 1, !dbg !3678
  store %struct.HXlist_head* %3, %struct.HXlist_head** %5, align 8, !dbg !3679
  %6 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3680
  %7 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %6, i32 0, i32 0, !dbg !3681
  store %struct.HXlist_head* %3, %struct.HXlist_head** %7, align 8, !dbg !3682
  ret void, !dbg !3683
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXhmap_move(%struct.HXlist_head*, i32, %struct.HXhmap*) #0 !dbg !3684 {
  %4 = alloca %struct.HXlist_head*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXhmap*, align 8
  %7 = alloca %struct.HXhmap_node*, align 8
  %8 = alloca %struct.HXhmap_node*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.HXlist_head* %0, %struct.HXlist_head** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %4, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3689, metadata !DIExpression()), !dbg !3690
  store %struct.HXhmap* %2, %struct.HXhmap** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %6, metadata !3691, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %7, metadata !3693, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %8, metadata !3695, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3697, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3699, metadata !DIExpression()), !dbg !3700
  store i32 0, i32* %10, align 4, !dbg !3701
  br label %11, !dbg !3703

; <label>:11:                                     ; preds = %88, %3
  %12 = load i32, i32* %10, align 4, !dbg !3704
  %13 = load %struct.HXhmap*, %struct.HXhmap** %6, align 8, !dbg !3706
  %14 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %13, i32 0, i32 2, !dbg !3707
  %15 = load i32, i32* %14, align 8, !dbg !3707
  %16 = zext i32 %15 to i64, !dbg !3708
  %17 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %16, !dbg !3708
  %18 = load i32, i32* %17, align 4, !dbg !3708
  %19 = icmp ult i32 %12, %18, !dbg !3709
  br i1 %19, label %20, label %91, !dbg !3710

; <label>:20:                                     ; preds = %11
  %21 = load %struct.HXhmap*, %struct.HXhmap** %6, align 8, !dbg !3711
  %22 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %21, i32 0, i32 1, !dbg !3711
  %23 = load %struct.HXlist_head*, %struct.HXlist_head** %22, align 8, !dbg !3711
  %24 = load i32, i32* %10, align 4, !dbg !3711
  %25 = zext i32 %24 to i64, !dbg !3711
  %26 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %23, i64 %25, !dbg !3711
  %27 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %26, i32 0, i32 0, !dbg !3711
  %28 = load %struct.HXlist_head*, %struct.HXlist_head** %27, align 8, !dbg !3711
  %29 = bitcast %struct.HXlist_head* %28 to i8*, !dbg !3711
  %30 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !3711
  %31 = bitcast i8* %30 to %struct.HXhmap_node*, !dbg !3711
  store %struct.HXhmap_node* %31, %struct.HXhmap_node** %7, align 8, !dbg !3711
  %32 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !3711
  %33 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %32, i32 0, i32 0, !dbg !3711
  %34 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %33, i32 0, i32 0, !dbg !3711
  %35 = load %struct.HXlist_head*, %struct.HXlist_head** %34, align 8, !dbg !3711
  %36 = bitcast %struct.HXlist_head* %35 to i8*, !dbg !3711
  %37 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !3711
  %38 = bitcast i8* %37 to %struct.HXhmap_node*, !dbg !3711
  store %struct.HXhmap_node* %38, %struct.HXhmap_node** %8, align 8, !dbg !3711
  br label %39, !dbg !3711

; <label>:39:                                     ; preds = %78, %20
  %40 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !3713
  %41 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %40, i32 0, i32 0, !dbg !3713
  %42 = load %struct.HXhmap*, %struct.HXhmap** %6, align 8, !dbg !3713
  %43 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %42, i32 0, i32 1, !dbg !3713
  %44 = load %struct.HXlist_head*, %struct.HXlist_head** %43, align 8, !dbg !3713
  %45 = load i32, i32* %10, align 4, !dbg !3713
  %46 = zext i32 %45 to i64, !dbg !3713
  %47 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %44, i64 %46, !dbg !3713
  %48 = bitcast %struct.HXlist_head* %47 to i8*, !dbg !3713
  %49 = bitcast i8* %48 to %struct.HXlist_head*, !dbg !3713
  %50 = icmp ne %struct.HXlist_head* %41, %49, !dbg !3713
  br i1 %50, label %51, label %87, !dbg !3711

; <label>:51:                                     ; preds = %39
  %52 = load %struct.HXhmap*, %struct.HXhmap** %6, align 8, !dbg !3715
  %53 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %52, i32 0, i32 0, !dbg !3717
  %54 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %53, i32 0, i32 5, !dbg !3718
  %55 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %54, i32 0, i32 5, !dbg !3719
  %56 = load i64 (i8*, i64)*, i64 (i8*, i64)** %55, align 8, !dbg !3719
  %57 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !3720
  %58 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %57, i32 0, i32 1, !dbg !3721
  %59 = bitcast %union.anon* %58 to i8**, !dbg !3721
  %60 = load i8*, i8** %59, align 8, !dbg !3721
  %61 = load %struct.HXhmap*, %struct.HXhmap** %6, align 8, !dbg !3722
  %62 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %61, i32 0, i32 0, !dbg !3723
  %63 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %62, i32 0, i32 3, !dbg !3724
  %64 = load i64, i64* %63, align 8, !dbg !3724
  %65 = call i64 %56(i8* %60, i64 %64), !dbg !3715
  %66 = load i32, i32* %5, align 4, !dbg !3725
  %67 = zext i32 %66 to i64, !dbg !3725
  %68 = urem i64 %65, %67, !dbg !3726
  %69 = trunc i64 %68 to i32, !dbg !3715
  store i32 %69, i32* %9, align 4, !dbg !3727
  %70 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !3728
  %71 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %70, i32 0, i32 0, !dbg !3729
  call void @HXlist_del(%struct.HXlist_head* %71), !dbg !3730
  %72 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3731
  %73 = load i32, i32* %9, align 4, !dbg !3732
  %74 = zext i32 %73 to i64, !dbg !3731
  %75 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %72, i64 %74, !dbg !3731
  %76 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !3733
  %77 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %76, i32 0, i32 0, !dbg !3734
  call void @HXlist_add_tail(%struct.HXlist_head* %75, %struct.HXlist_head* %77), !dbg !3735
  br label %78, !dbg !3736

; <label>:78:                                     ; preds = %51
  %79 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !3713
  store %struct.HXhmap_node* %79, %struct.HXhmap_node** %7, align 8, !dbg !3713
  %80 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !3713
  %81 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %80, i32 0, i32 0, !dbg !3713
  %82 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %81, i32 0, i32 0, !dbg !3713
  %83 = load %struct.HXlist_head*, %struct.HXlist_head** %82, align 8, !dbg !3713
  %84 = bitcast %struct.HXlist_head* %83 to i8*, !dbg !3713
  %85 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !3713
  %86 = bitcast i8* %85 to %struct.HXhmap_node*, !dbg !3713
  store %struct.HXhmap_node* %86, %struct.HXhmap_node** %8, align 8, !dbg !3713
  br label %39, !dbg !3713, !llvm.loop !3737

; <label>:87:                                     ; preds = %39
  br label %88, !dbg !3738

; <label>:88:                                     ; preds = %87
  %89 = load i32, i32* %10, align 4, !dbg !3739
  %90 = add i32 %89, 1, !dbg !3739
  store i32 %90, i32* %10, align 4, !dbg !3739
  br label %11, !dbg !3740, !llvm.loop !3741

; <label>:91:                                     ; preds = %11
  ret void, !dbg !3743
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @x_frac(i32, i32, i32) #0 !dbg !3744 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3747, metadata !DIExpression()), !dbg !3748
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3749, metadata !DIExpression()), !dbg !3750
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3751, metadata !DIExpression()), !dbg !3752
  %7 = load i32, i32* %6, align 4, !dbg !3753
  %8 = load i32, i32* %5, align 4, !dbg !3754
  %9 = udiv i32 %7, %8, !dbg !3755
  %10 = load i32, i32* %4, align 4, !dbg !3756
  %11 = mul i32 %9, %10, !dbg !3757
  %12 = load i32, i32* %6, align 4, !dbg !3758
  %13 = load i32, i32* %5, align 4, !dbg !3759
  %14 = urem i32 %12, %13, !dbg !3760
  %15 = load i32, i32* %4, align 4, !dbg !3761
  %16 = mul i32 %14, %15, !dbg !3762
  %17 = load i32, i32* %5, align 4, !dbg !3763
  %18 = udiv i32 %16, %17, !dbg !3764
  %19 = add i32 %11, %18, !dbg !3765
  ret i32 %19, !dbg !3766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXlist_del(%struct.HXlist_head*) #0 !dbg !3767 {
  %2 = alloca %struct.HXlist_head*, align 8
  store %struct.HXlist_head* %0, %struct.HXlist_head** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %2, metadata !3768, metadata !DIExpression()), !dbg !3769
  %3 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3770
  %4 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %3, i32 0, i32 0, !dbg !3771
  %5 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3771
  %6 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3772
  %7 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %6, i32 0, i32 1, !dbg !3773
  %8 = load %struct.HXlist_head*, %struct.HXlist_head** %7, align 8, !dbg !3773
  %9 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %8, i32 0, i32 0, !dbg !3774
  store %struct.HXlist_head* %5, %struct.HXlist_head** %9, align 8, !dbg !3775
  %10 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3776
  %11 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %10, i32 0, i32 1, !dbg !3777
  %12 = load %struct.HXlist_head*, %struct.HXlist_head** %11, align 8, !dbg !3777
  %13 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3778
  %14 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %13, i32 0, i32 0, !dbg !3779
  %15 = load %struct.HXlist_head*, %struct.HXlist_head** %14, align 8, !dbg !3779
  %16 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %15, i32 0, i32 1, !dbg !3780
  store %struct.HXlist_head* %12, %struct.HXlist_head** %16, align 8, !dbg !3781
  %17 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3782
  %18 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %17, i32 0, i32 0, !dbg !3783
  store %struct.HXlist_head* null, %struct.HXlist_head** %18, align 8, !dbg !3784
  %19 = load %struct.HXlist_head*, %struct.HXlist_head** %2, align 8, !dbg !3785
  %20 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %19, i32 0, i32 1, !dbg !3786
  store %struct.HXlist_head* null, %struct.HXlist_head** %20, align 8, !dbg !3787
  ret void, !dbg !3788
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXlist_add_tail(%struct.HXlist_head*, %struct.HXlist_head*) #0 !dbg !3789 {
  %3 = alloca %struct.HXlist_head*, align 8
  %4 = alloca %struct.HXlist_head*, align 8
  store %struct.HXlist_head* %0, %struct.HXlist_head** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %3, metadata !3792, metadata !DIExpression()), !dbg !3793
  store %struct.HXlist_head* %1, %struct.HXlist_head** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %4, metadata !3794, metadata !DIExpression()), !dbg !3795
  %5 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3796
  %6 = load %struct.HXlist_head*, %struct.HXlist_head** %3, align 8, !dbg !3797
  %7 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %6, i32 0, i32 1, !dbg !3798
  %8 = load %struct.HXlist_head*, %struct.HXlist_head** %7, align 8, !dbg !3798
  %9 = load %struct.HXlist_head*, %struct.HXlist_head** %3, align 8, !dbg !3799
  call void @__HXlist_add(%struct.HXlist_head* %5, %struct.HXlist_head* %8, %struct.HXlist_head* %9), !dbg !3800
  ret void, !dbg !3801
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__HXlist_add(%struct.HXlist_head*, %struct.HXlist_head*, %struct.HXlist_head*) #0 !dbg !3802 {
  %4 = alloca %struct.HXlist_head*, align 8
  %5 = alloca %struct.HXlist_head*, align 8
  %6 = alloca %struct.HXlist_head*, align 8
  store %struct.HXlist_head* %0, %struct.HXlist_head** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %4, metadata !3805, metadata !DIExpression()), !dbg !3806
  store %struct.HXlist_head* %1, %struct.HXlist_head** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %5, metadata !3807, metadata !DIExpression()), !dbg !3808
  store %struct.HXlist_head* %2, %struct.HXlist_head** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXlist_head** %6, metadata !3809, metadata !DIExpression()), !dbg !3810
  %7 = load %struct.HXlist_head*, %struct.HXlist_head** %6, align 8, !dbg !3811
  %8 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3812
  %9 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %8, i32 0, i32 0, !dbg !3813
  store %struct.HXlist_head* %7, %struct.HXlist_head** %9, align 8, !dbg !3814
  %10 = load %struct.HXlist_head*, %struct.HXlist_head** %5, align 8, !dbg !3815
  %11 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3816
  %12 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %11, i32 0, i32 1, !dbg !3817
  store %struct.HXlist_head* %10, %struct.HXlist_head** %12, align 8, !dbg !3818
  %13 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3819
  %14 = load %struct.HXlist_head*, %struct.HXlist_head** %6, align 8, !dbg !3820
  %15 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %14, i32 0, i32 1, !dbg !3821
  store %struct.HXlist_head* %13, %struct.HXlist_head** %15, align 8, !dbg !3822
  %16 = load %struct.HXlist_head*, %struct.HXlist_head** %4, align 8, !dbg !3823
  %17 = load %struct.HXlist_head*, %struct.HXlist_head** %5, align 8, !dbg !3824
  %18 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %17, i32 0, i32 0, !dbg !3825
  store %struct.HXlist_head* %16, %struct.HXlist_head** %18, align 8, !dbg !3826
  ret void, !dbg !3827
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap* @HXmap_init(i32, i32) #0 !dbg !3828 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3831, metadata !DIExpression()), !dbg !3832
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()), !dbg !3834
  %5 = load i32, i32* %3, align 4, !dbg !3835
  %6 = load i32, i32* %4, align 4, !dbg !3836
  %7 = call %struct.HXmap* @HXmap_init5(i32 %5, i32 %6, %struct.HXmap_ops* null, i64 0, i64 0), !dbg !3837
  ret %struct.HXmap* %7, !dbg !3838
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap_node* @HXmap_find(%struct.HXmap*, i8*) #0 !dbg !3839 {
  %3 = alloca %struct.HXmap_node*, align 8
  %4 = alloca %struct.HXmap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.HXmap_private*, align 8
  %8 = alloca %struct.HXhmap_node*, align 8
  %9 = alloca %union.anon, align 8
  store %struct.HXmap* %0, %struct.HXmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %4, metadata !3858, metadata !DIExpression()), !dbg !3859
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3860, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3862, metadata !DIExpression()), !dbg !3863
  %10 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !3864
  %11 = bitcast %struct.HXmap* %10 to i8*, !dbg !3864
  store i8* %11, i8** %6, align 8, !dbg !3863
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %7, metadata !3865, metadata !DIExpression()), !dbg !3866
  %12 = load i8*, i8** %6, align 8, !dbg !3867
  %13 = bitcast i8* %12 to %struct.HXmap_private*, !dbg !3867
  store %struct.HXmap_private* %13, %struct.HXmap_private** %7, align 8, !dbg !3866
  %14 = load %struct.HXmap_private*, %struct.HXmap_private** %7, align 8, !dbg !3868
  %15 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %14, i32 0, i32 2, !dbg !3869
  %16 = load i32, i32* %15, align 8, !dbg !3869
  switch i32 %16, label %39 [
    i32 1, label %17
    i32 2, label %34
  ], !dbg !3870

; <label>:17:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %8, metadata !3871, metadata !DIExpression()), !dbg !3874
  %18 = load i8*, i8** %6, align 8, !dbg !3875
  %19 = bitcast i8* %18 to %struct.HXhmap*, !dbg !3875
  %20 = load i8*, i8** %5, align 8, !dbg !3876
  %21 = call %struct.HXhmap_node* @HXhmap_find(%struct.HXhmap* %19, i8* %20), !dbg !3877
  store %struct.HXhmap_node* %21, %struct.HXhmap_node** %8, align 8, !dbg !3874
  %22 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !3878
  %23 = icmp eq %struct.HXhmap_node* %22, null, !dbg !3880
  br i1 %23, label %24, label %25, !dbg !3881

; <label>:24:                                     ; preds = %17
  store %struct.HXmap_node* null, %struct.HXmap_node** %3, align 8, !dbg !3882
  br label %41, !dbg !3882

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %union.anon, %union.anon* %9, i32 0, i32 0, !dbg !3883
  %27 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !3883
  %28 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %27, i32 0, i32 1, !dbg !3883
  %29 = bitcast %union.anon* %28 to i8**, !dbg !3883
  %30 = bitcast i8** %29 to i8*, !dbg !3883
  store i8* %30, i8** %26, align 8, !dbg !3883
  %31 = getelementptr inbounds %union.anon, %union.anon* %9, i32 0, i32 0, !dbg !3883
  %32 = load i8*, i8** %31, align 8, !dbg !3883
  %33 = bitcast i8* %32 to %struct.HXmap_node*, !dbg !3883
  store %struct.HXmap_node* %33, %struct.HXmap_node** %3, align 8, !dbg !3884
  br label %41, !dbg !3884

; <label>:34:                                     ; preds = %2
  %35 = load i8*, i8** %6, align 8, !dbg !3885
  %36 = bitcast i8* %35 to %struct.HXrbtree*, !dbg !3885
  %37 = load i8*, i8** %5, align 8, !dbg !3886
  %38 = call %struct.HXmap_node* @HXrbtree_find(%struct.HXrbtree* %36, i8* %37), !dbg !3887
  store %struct.HXmap_node* %38, %struct.HXmap_node** %3, align 8, !dbg !3888
  br label %41, !dbg !3888

; <label>:39:                                     ; preds = %2
  %40 = call i32* @__errno_location() #11, !dbg !3889
  store i32 22, i32* %40, align 4, !dbg !3890
  store %struct.HXmap_node* null, %struct.HXmap_node** %3, align 8, !dbg !3891
  br label %41, !dbg !3891

; <label>:41:                                     ; preds = %39, %34, %25, %24
  %42 = load %struct.HXmap_node*, %struct.HXmap_node** %3, align 8, !dbg !3892
  ret %struct.HXmap_node* %42, !dbg !3892
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXhmap_node* @HXhmap_find(%struct.HXhmap*, i8*) #0 !dbg !3893 {
  %3 = alloca %struct.HXhmap_node*, align 8
  %4 = alloca %struct.HXhmap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXhmap_node*, align 8
  %7 = alloca i32, align 4
  store %struct.HXhmap* %0, %struct.HXhmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %4, metadata !3898, metadata !DIExpression()), !dbg !3899
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3900, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %6, metadata !3902, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3904, metadata !DIExpression()), !dbg !3905
  %8 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3906
  %9 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %8, i32 0, i32 0, !dbg !3907
  %10 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %9, i32 0, i32 5, !dbg !3908
  %11 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %10, i32 0, i32 5, !dbg !3909
  %12 = load i64 (i8*, i64)*, i64 (i8*, i64)** %11, align 8, !dbg !3909
  %13 = load i8*, i8** %5, align 8, !dbg !3910
  %14 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3911
  %15 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %14, i32 0, i32 0, !dbg !3912
  %16 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %15, i32 0, i32 3, !dbg !3913
  %17 = load i64, i64* %16, align 8, !dbg !3913
  %18 = call i64 %12(i8* %13, i64 %17), !dbg !3906
  %19 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3914
  %20 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %19, i32 0, i32 2, !dbg !3915
  %21 = load i32, i32* %20, align 8, !dbg !3915
  %22 = zext i32 %21 to i64, !dbg !3916
  %23 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %22, !dbg !3916
  %24 = load i32, i32* %23, align 4, !dbg !3916
  %25 = zext i32 %24 to i64, !dbg !3916
  %26 = urem i64 %18, %25, !dbg !3917
  %27 = trunc i64 %26 to i32, !dbg !3906
  store i32 %27, i32* %7, align 4, !dbg !3918
  %28 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3919
  %29 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %28, i32 0, i32 1, !dbg !3919
  %30 = load %struct.HXlist_head*, %struct.HXlist_head** %29, align 8, !dbg !3919
  %31 = load i32, i32* %7, align 4, !dbg !3919
  %32 = zext i32 %31 to i64, !dbg !3919
  %33 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %30, i64 %32, !dbg !3919
  %34 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %33, i32 0, i32 0, !dbg !3919
  %35 = load %struct.HXlist_head*, %struct.HXlist_head** %34, align 8, !dbg !3919
  %36 = bitcast %struct.HXlist_head* %35 to i8*, !dbg !3919
  %37 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !3919
  %38 = bitcast i8* %37 to %struct.HXhmap_node*, !dbg !3919
  store %struct.HXhmap_node* %38, %struct.HXhmap_node** %6, align 8, !dbg !3919
  br label %39, !dbg !3919

; <label>:39:                                     ; preds = %71, %2
  %40 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !3921
  %41 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %40, i32 0, i32 0, !dbg !3921
  %42 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3921
  %43 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %42, i32 0, i32 1, !dbg !3921
  %44 = load %struct.HXlist_head*, %struct.HXlist_head** %43, align 8, !dbg !3921
  %45 = load i32, i32* %7, align 4, !dbg !3921
  %46 = zext i32 %45 to i64, !dbg !3921
  %47 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %44, i64 %46, !dbg !3921
  %48 = bitcast %struct.HXlist_head* %47 to i8*, !dbg !3921
  %49 = bitcast i8* %48 to %struct.HXlist_head*, !dbg !3921
  %50 = icmp ne %struct.HXlist_head* %41, %49, !dbg !3921
  br i1 %50, label %51, label %79, !dbg !3919

; <label>:51:                                     ; preds = %39
  %52 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3923
  %53 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %52, i32 0, i32 0, !dbg !3925
  %54 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %53, i32 0, i32 5, !dbg !3926
  %55 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %54, i32 0, i32 0, !dbg !3927
  %56 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %55, align 8, !dbg !3927
  %57 = load i8*, i8** %5, align 8, !dbg !3928
  %58 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !3929
  %59 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %58, i32 0, i32 1, !dbg !3930
  %60 = bitcast %union.anon* %59 to i8**, !dbg !3930
  %61 = load i8*, i8** %60, align 8, !dbg !3930
  %62 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !3931
  %63 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %62, i32 0, i32 0, !dbg !3932
  %64 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %63, i32 0, i32 3, !dbg !3933
  %65 = load i64, i64* %64, align 8, !dbg !3933
  %66 = call i32 %56(i8* %57, i8* %61, i64 %65), !dbg !3923
  %67 = icmp eq i32 %66, 0, !dbg !3934
  br i1 %67, label %68, label %70, !dbg !3935

; <label>:68:                                     ; preds = %51
  %69 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !3936
  store %struct.HXhmap_node* %69, %struct.HXhmap_node** %3, align 8, !dbg !3937
  br label %80, !dbg !3937

; <label>:70:                                     ; preds = %51
  br label %71, !dbg !3938

; <label>:71:                                     ; preds = %70
  %72 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !3921
  %73 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %72, i32 0, i32 0, !dbg !3921
  %74 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %73, i32 0, i32 0, !dbg !3921
  %75 = load %struct.HXlist_head*, %struct.HXlist_head** %74, align 8, !dbg !3921
  %76 = bitcast %struct.HXlist_head* %75 to i8*, !dbg !3921
  %77 = getelementptr inbounds i8, i8* %76, i64 0, !dbg !3921
  %78 = bitcast i8* %77 to %struct.HXhmap_node*, !dbg !3921
  store %struct.HXhmap_node* %78, %struct.HXhmap_node** %6, align 8, !dbg !3921
  br label %39, !dbg !3921, !llvm.loop !3939

; <label>:79:                                     ; preds = %39
  store %struct.HXhmap_node* null, %struct.HXhmap_node** %3, align 8, !dbg !3941
  br label %80, !dbg !3941

; <label>:80:                                     ; preds = %79, %68
  %81 = load %struct.HXhmap_node*, %struct.HXhmap_node** %3, align 8, !dbg !3942
  ret %struct.HXhmap_node* %81, !dbg !3942
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap_node* @HXrbtree_find(%struct.HXrbtree*, i8*) #0 !dbg !3943 {
  %3 = alloca %struct.HXmap_node*, align 8
  %4 = alloca %struct.HXrbtree*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXrbtree_node*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.anon, align 8
  store %struct.HXrbtree* %0, %struct.HXrbtree** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %4, metadata !3946, metadata !DIExpression()), !dbg !3947
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3948, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %6, metadata !3950, metadata !DIExpression()), !dbg !3951
  %9 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !3952
  %10 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %9, i32 0, i32 1, !dbg !3953
  %11 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !3953
  store %struct.HXrbtree_node* %11, %struct.HXrbtree_node** %6, align 8, !dbg !3951
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3954, metadata !DIExpression()), !dbg !3955
  br label %12, !dbg !3956

; <label>:12:                                     ; preds = %41, %2
  %13 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !3957
  %14 = icmp ne %struct.HXrbtree_node* %13, null, !dbg !3958
  br i1 %14, label %15, label %50, !dbg !3956

; <label>:15:                                     ; preds = %12
  %16 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !3959
  %17 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %16, i32 0, i32 0, !dbg !3962
  %18 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %17, i32 0, i32 5, !dbg !3963
  %19 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %18, i32 0, i32 0, !dbg !3964
  %20 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %19, align 8, !dbg !3964
  %21 = load i8*, i8** %5, align 8, !dbg !3965
  %22 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !3966
  %23 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %22, i32 0, i32 1, !dbg !3967
  %24 = bitcast %union.anon* %23 to i8**, !dbg !3967
  %25 = load i8*, i8** %24, align 8, !dbg !3967
  %26 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !3968
  %27 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %26, i32 0, i32 0, !dbg !3969
  %28 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %27, i32 0, i32 3, !dbg !3970
  %29 = load i64, i64* %28, align 8, !dbg !3970
  %30 = call i32 %20(i8* %21, i8* %25, i64 %29), !dbg !3959
  store i32 %30, i32* %7, align 4, !dbg !3971
  %31 = icmp eq i32 %30, 0, !dbg !3972
  br i1 %31, label %32, label %41, !dbg !3973

; <label>:32:                                     ; preds = %15
  %33 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !3974
  %34 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !3974
  %35 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %34, i32 0, i32 1, !dbg !3974
  %36 = bitcast %union.anon* %35 to i8**, !dbg !3974
  %37 = bitcast i8** %36 to i8*, !dbg !3974
  store i8* %37, i8** %33, align 8, !dbg !3974
  %38 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !3974
  %39 = load i8*, i8** %38, align 8, !dbg !3974
  %40 = bitcast i8* %39 to %struct.HXmap_node*, !dbg !3974
  store %struct.HXmap_node* %40, %struct.HXmap_node** %3, align 8, !dbg !3975
  br label %51, !dbg !3975

; <label>:41:                                     ; preds = %15
  %42 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !3976
  %43 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %42, i32 0, i32 0, !dbg !3977
  %44 = load i32, i32* %7, align 4, !dbg !3978
  %45 = icmp sgt i32 %44, 0, !dbg !3979
  %46 = zext i1 %45 to i32, !dbg !3979
  %47 = sext i32 %46 to i64, !dbg !3976
  %48 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %43, i64 0, i64 %47, !dbg !3976
  %49 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %48, align 8, !dbg !3976
  store %struct.HXrbtree_node* %49, %struct.HXrbtree_node** %6, align 8, !dbg !3980
  br label %12, !dbg !3956, !llvm.loop !3981

; <label>:50:                                     ; preds = %12
  store %struct.HXmap_node* null, %struct.HXmap_node** %3, align 8, !dbg !3983
  br label %51, !dbg !3983

; <label>:51:                                     ; preds = %50, %32
  %52 = load %struct.HXmap_node*, %struct.HXmap_node** %3, align 8, !dbg !3984
  ret %struct.HXmap_node* %52, !dbg !3984
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmap_get(%struct.HXmap*, i8*) #0 !dbg !3985 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXmap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXmap_node*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %4, metadata !3988, metadata !DIExpression()), !dbg !3989
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3990, metadata !DIExpression()), !dbg !3991
  call void @llvm.dbg.declare(metadata %struct.HXmap_node** %6, metadata !3992, metadata !DIExpression()), !dbg !3993
  %7 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !3994
  %8 = load i8*, i8** %5, align 8, !dbg !3996
  %9 = call %struct.HXmap_node* @HXmap_find(%struct.HXmap* %7, i8* %8), !dbg !3997
  store %struct.HXmap_node* %9, %struct.HXmap_node** %6, align 8, !dbg !3998
  %10 = icmp eq %struct.HXmap_node* %9, null, !dbg !3999
  br i1 %10, label %11, label %13, !dbg !4000

; <label>:11:                                     ; preds = %2
  %12 = call i32* @__errno_location() #11, !dbg !4001
  store i32 2, i32* %12, align 4, !dbg !4003
  store i8* null, i8** %3, align 8, !dbg !4004
  br label %19, !dbg !4004

; <label>:13:                                     ; preds = %2
  %14 = call i32* @__errno_location() #11, !dbg !4005
  store i32 0, i32* %14, align 4, !dbg !4006
  %15 = load %struct.HXmap_node*, %struct.HXmap_node** %6, align 8, !dbg !4007
  %16 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %15, i32 0, i32 1, !dbg !4008
  %17 = bitcast %union.anon* %16 to i8**, !dbg !4008
  %18 = load i8*, i8** %17, align 8, !dbg !4008
  store i8* %18, i8** %3, align 8, !dbg !4009
  br label %19, !dbg !4009

; <label>:19:                                     ; preds = %13, %11
  %20 = load i8*, i8** %3, align 8, !dbg !4010
  ret i8* %20, !dbg !4010
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXmap_add(%struct.HXmap*, i8*, i8*) #0 !dbg !4011 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXmap*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.HXmap_private*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %5, metadata !4014, metadata !DIExpression()), !dbg !4015
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4016, metadata !DIExpression()), !dbg !4017
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4018, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4020, metadata !DIExpression()), !dbg !4021
  %10 = load %struct.HXmap*, %struct.HXmap** %5, align 8, !dbg !4022
  %11 = bitcast %struct.HXmap* %10 to i8*, !dbg !4022
  store i8* %11, i8** %8, align 8, !dbg !4021
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %9, metadata !4023, metadata !DIExpression()), !dbg !4024
  %12 = load i8*, i8** %8, align 8, !dbg !4025
  %13 = bitcast i8* %12 to %struct.HXmap_private*, !dbg !4025
  store %struct.HXmap_private* %13, %struct.HXmap_private** %9, align 8, !dbg !4024
  %14 = load %struct.HXmap_private*, %struct.HXmap_private** %9, align 8, !dbg !4026
  %15 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %14, i32 0, i32 1, !dbg !4028
  %16 = load i32, i32* %15, align 4, !dbg !4028
  %17 = and i32 %16, 134217728, !dbg !4029
  %18 = icmp ne i32 %17, 0, !dbg !4029
  br i1 %18, label %19, label %25, !dbg !4030

; <label>:19:                                     ; preds = %3
  %20 = load i8*, i8** %7, align 8, !dbg !4031
  %21 = icmp ne i8* %20, null, !dbg !4032
  br i1 %21, label %22, label %25, !dbg !4033

; <label>:22:                                     ; preds = %19
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4034
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.54, i32 0, i32 0)), !dbg !4036
  store i32 -22, i32* %4, align 4, !dbg !4037
  br label %42, !dbg !4037

; <label>:25:                                     ; preds = %19, %3
  %26 = load %struct.HXmap_private*, %struct.HXmap_private** %9, align 8, !dbg !4038
  %27 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %26, i32 0, i32 2, !dbg !4039
  %28 = load i32, i32* %27, align 8, !dbg !4039
  switch i32 %28, label %41 [
    i32 1, label %29
    i32 2, label %35
  ], !dbg !4040

; <label>:29:                                     ; preds = %25
  %30 = load i8*, i8** %8, align 8, !dbg !4041
  %31 = bitcast i8* %30 to %struct.HXhmap*, !dbg !4041
  %32 = load i8*, i8** %6, align 8, !dbg !4043
  %33 = load i8*, i8** %7, align 8, !dbg !4044
  %34 = call i32 @HXhmap_add(%struct.HXhmap* %31, i8* %32, i8* %33), !dbg !4045
  store i32 %34, i32* %4, align 4, !dbg !4046
  br label %42, !dbg !4046

; <label>:35:                                     ; preds = %25
  %36 = load i8*, i8** %8, align 8, !dbg !4047
  %37 = bitcast i8* %36 to %struct.HXrbtree*, !dbg !4047
  %38 = load i8*, i8** %6, align 8, !dbg !4048
  %39 = load i8*, i8** %7, align 8, !dbg !4049
  %40 = call i32 @HXrbtree_add(%struct.HXrbtree* %37, i8* %38, i8* %39), !dbg !4050
  store i32 %40, i32* %4, align 4, !dbg !4051
  br label %42, !dbg !4051

; <label>:41:                                     ; preds = %25
  store i32 -22, i32* %4, align 4, !dbg !4052
  br label %42, !dbg !4052

; <label>:42:                                     ; preds = %41, %35, %29, %22
  %43 = load i32, i32* %4, align 4, !dbg !4053
  ret i32 %43, !dbg !4053
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXhmap_add(%struct.HXhmap*, i8*, i8*) #0 !dbg !4054 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXhmap*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.HXhmap_node*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.HXhmap* %0, %struct.HXhmap** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %5, metadata !4057, metadata !DIExpression()), !dbg !4058
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4059, metadata !DIExpression()), !dbg !4060
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4061, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %8, metadata !4063, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4065, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4067, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4069, metadata !DIExpression()), !dbg !4070
  %12 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4071
  %13 = load i8*, i8** %6, align 8, !dbg !4073
  %14 = call %struct.HXhmap_node* @HXhmap_find(%struct.HXhmap* %12, i8* %13), !dbg !4074
  store %struct.HXhmap_node* %14, %struct.HXhmap_node** %8, align 8, !dbg !4075
  %15 = icmp ne %struct.HXhmap_node* %14, null, !dbg !4076
  br i1 %15, label %16, label %21, !dbg !4077

; <label>:16:                                     ; preds = %3
  %17 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4078
  %18 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4079
  %19 = load i8*, i8** %7, align 8, !dbg !4080
  %20 = call i32 @HXhmap_replace(%struct.HXhmap* %17, %struct.HXhmap_node* %18, i8* %19), !dbg !4081
  store i32 %20, i32* %4, align 4, !dbg !4082
  br label %190, !dbg !4082

; <label>:21:                                     ; preds = %3
  %22 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4083
  %23 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %22, i32 0, i32 0, !dbg !4085
  %24 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %23, i32 0, i32 0, !dbg !4086
  %25 = load i32, i32* %24, align 8, !dbg !4086
  %26 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4087
  %27 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %26, i32 0, i32 3, !dbg !4088
  %28 = load i32, i32* %27, align 4, !dbg !4088
  %29 = icmp uge i32 %25, %28, !dbg !4089
  br i1 %29, label %30, label %47, !dbg !4090

; <label>:30:                                     ; preds = %21
  %31 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4091
  %32 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %31, i32 0, i32 2, !dbg !4092
  %33 = load i32, i32* %32, align 8, !dbg !4092
  %34 = zext i32 %33 to i64, !dbg !4091
  %35 = icmp ult i64 %34, 27, !dbg !4093
  br i1 %35, label %36, label %47, !dbg !4094

; <label>:36:                                     ; preds = %30
  %37 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4095
  %38 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4098
  %39 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %38, i32 0, i32 2, !dbg !4099
  %40 = load i32, i32* %39, align 8, !dbg !4099
  %41 = add i32 %40, 1, !dbg !4100
  %42 = call i32 @HXhmap_layout(%struct.HXhmap* %37, i32 %41), !dbg !4101
  store i32 %42, i32* %10, align 4, !dbg !4102
  %43 = icmp sle i32 %42, 0, !dbg !4103
  br i1 %43, label %44, label %46, !dbg !4104

; <label>:44:                                     ; preds = %36
  %45 = load i32, i32* %10, align 4, !dbg !4105
  store i32 %45, i32* %4, align 4, !dbg !4106
  br label %190, !dbg !4106

; <label>:46:                                     ; preds = %36
  br label %73, !dbg !4107

; <label>:47:                                     ; preds = %30, %21
  %48 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4108
  %49 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %48, i32 0, i32 0, !dbg !4110
  %50 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %49, i32 0, i32 0, !dbg !4111
  %51 = load i32, i32* %50, align 8, !dbg !4111
  %52 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4112
  %53 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %52, i32 0, i32 4, !dbg !4113
  %54 = load i32, i32* %53, align 8, !dbg !4113
  %55 = icmp ult i32 %51, %54, !dbg !4114
  br i1 %55, label %56, label %72, !dbg !4115

; <label>:56:                                     ; preds = %47
  %57 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4116
  %58 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %57, i32 0, i32 2, !dbg !4117
  %59 = load i32, i32* %58, align 8, !dbg !4117
  %60 = icmp ugt i32 %59, 0, !dbg !4118
  br i1 %60, label %61, label %72, !dbg !4119

; <label>:61:                                     ; preds = %56
  %62 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4120
  %63 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4123
  %64 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %63, i32 0, i32 2, !dbg !4124
  %65 = load i32, i32* %64, align 8, !dbg !4124
  %66 = sub i32 %65, 1, !dbg !4125
  %67 = call i32 @HXhmap_layout(%struct.HXhmap* %62, i32 %66), !dbg !4126
  store i32 %67, i32* %10, align 4, !dbg !4127
  %68 = icmp sle i32 %67, 0, !dbg !4128
  br i1 %68, label %69, label %71, !dbg !4129

; <label>:69:                                     ; preds = %61
  %70 = load i32, i32* %10, align 4, !dbg !4130
  store i32 %70, i32* %4, align 4, !dbg !4131
  br label %190, !dbg !4131

; <label>:71:                                     ; preds = %61
  br label %72, !dbg !4132

; <label>:72:                                     ; preds = %71, %56, %47
  br label %73

; <label>:73:                                     ; preds = %72, %46
  %74 = call noalias i8* @malloc(i64 32) #7, !dbg !4133
  %75 = bitcast i8* %74 to %struct.HXhmap_node*, !dbg !4133
  store %struct.HXhmap_node* %75, %struct.HXhmap_node** %8, align 8, !dbg !4135
  %76 = icmp eq %struct.HXhmap_node* %75, null, !dbg !4136
  br i1 %76, label %77, label %81, !dbg !4137

; <label>:77:                                     ; preds = %73
  %78 = call i32* @__errno_location() #11, !dbg !4138
  %79 = load i32, i32* %78, align 4, !dbg !4138
  %80 = sub nsw i32 0, %79, !dbg !4139
  store i32 %80, i32* %4, align 4, !dbg !4140
  br label %190, !dbg !4140

; <label>:81:                                     ; preds = %73
  %82 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4141
  %83 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %82, i32 0, i32 0, !dbg !4142
  call void @HXlist_init(%struct.HXlist_head* %83), !dbg !4143
  %84 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4144
  %85 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %84, i32 0, i32 0, !dbg !4145
  %86 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %85, i32 0, i32 5, !dbg !4146
  %87 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %86, i32 0, i32 1, !dbg !4147
  %88 = load i8* (i8*, i64)*, i8* (i8*, i64)** %87, align 8, !dbg !4147
  %89 = load i8*, i8** %6, align 8, !dbg !4148
  %90 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4149
  %91 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %90, i32 0, i32 0, !dbg !4150
  %92 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %91, i32 0, i32 3, !dbg !4151
  %93 = load i64, i64* %92, align 8, !dbg !4151
  %94 = call i8* %88(i8* %89, i64 %93), !dbg !4144
  %95 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4152
  %96 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %95, i32 0, i32 1, !dbg !4153
  %97 = bitcast %union.anon* %96 to i8**, !dbg !4153
  store i8* %94, i8** %97, align 8, !dbg !4154
  %98 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4155
  %99 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %98, i32 0, i32 1, !dbg !4157
  %100 = bitcast %union.anon* %99 to i8**, !dbg !4157
  %101 = load i8*, i8** %100, align 8, !dbg !4157
  %102 = icmp eq i8* %101, null, !dbg !4158
  br i1 %102, label %103, label %107, !dbg !4159

; <label>:103:                                    ; preds = %81
  %104 = load i8*, i8** %6, align 8, !dbg !4160
  %105 = icmp ne i8* %104, null, !dbg !4161
  br i1 %105, label %106, label %107, !dbg !4162

; <label>:106:                                    ; preds = %103
  br label %165, !dbg !4163

; <label>:107:                                    ; preds = %103, %81
  %108 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4164
  %109 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %108, i32 0, i32 0, !dbg !4165
  %110 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %109, i32 0, i32 5, !dbg !4166
  %111 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %110, i32 0, i32 3, !dbg !4167
  %112 = load i8* (i8*, i64)*, i8* (i8*, i64)** %111, align 8, !dbg !4167
  %113 = load i8*, i8** %7, align 8, !dbg !4168
  %114 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4169
  %115 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %114, i32 0, i32 0, !dbg !4170
  %116 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %115, i32 0, i32 4, !dbg !4171
  %117 = load i64, i64* %116, align 8, !dbg !4171
  %118 = call i8* %112(i8* %113, i64 %117), !dbg !4164
  %119 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4172
  %120 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %119, i32 0, i32 2, !dbg !4173
  %121 = bitcast %union.anon* %120 to i8**, !dbg !4173
  store i8* %118, i8** %121, align 8, !dbg !4174
  %122 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4175
  %123 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %122, i32 0, i32 2, !dbg !4177
  %124 = bitcast %union.anon* %123 to i8**, !dbg !4177
  %125 = load i8*, i8** %124, align 8, !dbg !4177
  %126 = icmp eq i8* %125, null, !dbg !4178
  br i1 %126, label %127, label %131, !dbg !4179

; <label>:127:                                    ; preds = %107
  %128 = load i8*, i8** %7, align 8, !dbg !4180
  %129 = icmp ne i8* %128, null, !dbg !4181
  br i1 %129, label %130, label %131, !dbg !4182

; <label>:130:                                    ; preds = %127
  br label %165, !dbg !4183

; <label>:131:                                    ; preds = %127, %107
  %132 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4184
  %133 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %132, i32 0, i32 0, !dbg !4185
  %134 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %133, i32 0, i32 5, !dbg !4186
  %135 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %134, i32 0, i32 5, !dbg !4187
  %136 = load i64 (i8*, i64)*, i64 (i8*, i64)** %135, align 8, !dbg !4187
  %137 = load i8*, i8** %6, align 8, !dbg !4188
  %138 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4189
  %139 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %138, i32 0, i32 0, !dbg !4190
  %140 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %139, i32 0, i32 3, !dbg !4191
  %141 = load i64, i64* %140, align 8, !dbg !4191
  %142 = call i64 %136(i8* %137, i64 %141), !dbg !4184
  %143 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4192
  %144 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %143, i32 0, i32 2, !dbg !4193
  %145 = load i32, i32* %144, align 8, !dbg !4193
  %146 = zext i32 %145 to i64, !dbg !4194
  %147 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %146, !dbg !4194
  %148 = load i32, i32* %147, align 4, !dbg !4194
  %149 = zext i32 %148 to i64, !dbg !4194
  %150 = urem i64 %142, %149, !dbg !4195
  %151 = trunc i64 %150 to i32, !dbg !4184
  store i32 %151, i32* %9, align 4, !dbg !4196
  %152 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4197
  %153 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %152, i32 0, i32 1, !dbg !4198
  %154 = load %struct.HXlist_head*, %struct.HXlist_head** %153, align 8, !dbg !4198
  %155 = load i32, i32* %9, align 4, !dbg !4199
  %156 = zext i32 %155 to i64, !dbg !4197
  %157 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %154, i64 %156, !dbg !4197
  %158 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4200
  %159 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %158, i32 0, i32 0, !dbg !4201
  call void @HXlist_add_tail(%struct.HXlist_head* %157, %struct.HXlist_head* %159), !dbg !4202
  %160 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4203
  %161 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %160, i32 0, i32 0, !dbg !4204
  %162 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %161, i32 0, i32 0, !dbg !4205
  %163 = load i32, i32* %162, align 8, !dbg !4206
  %164 = add i32 %163, 1, !dbg !4206
  store i32 %164, i32* %162, align 8, !dbg !4206
  store i32 1, i32* %4, align 4, !dbg !4207
  br label %190, !dbg !4207

; <label>:165:                                    ; preds = %130, %106
  %166 = call i32* @__errno_location() #11, !dbg !4208
  %167 = load i32, i32* %166, align 4, !dbg !4208
  store i32 %167, i32* %11, align 4, !dbg !4209
  %168 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4210
  %169 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %168, i32 0, i32 0, !dbg !4212
  %170 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %169, i32 0, i32 5, !dbg !4213
  %171 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %170, i32 0, i32 2, !dbg !4214
  %172 = load void (i8*)*, void (i8*)** %171, align 8, !dbg !4214
  %173 = icmp ne void (i8*)* %172, null, !dbg !4215
  br i1 %173, label %174, label %184, !dbg !4216

; <label>:174:                                    ; preds = %165
  %175 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4217
  %176 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %175, i32 0, i32 0, !dbg !4218
  %177 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %176, i32 0, i32 5, !dbg !4219
  %178 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %177, i32 0, i32 2, !dbg !4220
  %179 = load void (i8*)*, void (i8*)** %178, align 8, !dbg !4220
  %180 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4221
  %181 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %180, i32 0, i32 1, !dbg !4222
  %182 = bitcast %union.anon* %181 to i8**, !dbg !4222
  %183 = load i8*, i8** %182, align 8, !dbg !4222
  call void %179(i8* %183), !dbg !4217
  br label %184, !dbg !4217

; <label>:184:                                    ; preds = %174, %165
  %185 = load %struct.HXhmap_node*, %struct.HXhmap_node** %8, align 8, !dbg !4223
  %186 = bitcast %struct.HXhmap_node* %185 to i8*, !dbg !4223
  call void @free(i8* %186) #7, !dbg !4224
  %187 = load i32, i32* %11, align 4, !dbg !4225
  %188 = call i32* @__errno_location() #11, !dbg !4226
  store i32 %187, i32* %188, align 4, !dbg !4227
  %189 = sub nsw i32 0, %187, !dbg !4228
  store i32 %189, i32* %4, align 4, !dbg !4229
  br label %190, !dbg !4229

; <label>:190:                                    ; preds = %184, %131, %77, %69, %44, %16
  %191 = load i32, i32* %4, align 4, !dbg !4230
  ret i32 %191, !dbg !4230
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXrbtree_add(%struct.HXrbtree*, i8*, i8*) #0 !dbg !4231 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXrbtree*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.HXrbtree_node*, align 8
  %9 = alloca [48 x %struct.HXrbtree_node*], align 16
  %10 = alloca [48 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.HXrbtree* %0, %struct.HXrbtree** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %5, metadata !4234, metadata !DIExpression()), !dbg !4235
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4236, metadata !DIExpression()), !dbg !4237
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4238, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %8, metadata !4240, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.declare(metadata [48 x %struct.HXrbtree_node*]* %9, metadata !4242, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata [48 x i8]* %10, metadata !4247, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4250, metadata !DIExpression()), !dbg !4251
  store i32 0, i32* %11, align 4, !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4252, metadata !DIExpression()), !dbg !4253
  %14 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4254
  %15 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %14, i32 0, i32 1, !dbg !4254
  %16 = bitcast %struct.HXrbtree_node** %15 to %struct.HXrbtree_node*, !dbg !4254
  %17 = load i32, i32* %11, align 4, !dbg !4255
  %18 = zext i32 %17 to i64, !dbg !4256
  %19 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %9, i64 0, i64 %18, !dbg !4256
  store %struct.HXrbtree_node* %16, %struct.HXrbtree_node** %19, align 8, !dbg !4257
  %20 = load i32, i32* %11, align 4, !dbg !4258
  %21 = add i32 %20, 1, !dbg !4258
  store i32 %21, i32* %11, align 4, !dbg !4258
  %22 = zext i32 %20 to i64, !dbg !4259
  %23 = getelementptr inbounds [48 x i8], [48 x i8]* %10, i64 0, i64 %22, !dbg !4259
  store i8 0, i8* %23, align 1, !dbg !4260
  %24 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4261
  %25 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %24, i32 0, i32 1, !dbg !4262
  %26 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %25, align 8, !dbg !4262
  store %struct.HXrbtree_node* %26, %struct.HXrbtree_node** %8, align 8, !dbg !4263
  br label %27, !dbg !4264

; <label>:27:                                     ; preds = %53, %3
  %28 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4265
  %29 = icmp ne %struct.HXrbtree_node* %28, null, !dbg !4266
  br i1 %29, label %30, label %73, !dbg !4264

; <label>:30:                                     ; preds = %27
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4267, metadata !DIExpression()), !dbg !4269
  %31 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4270
  %32 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %31, i32 0, i32 0, !dbg !4271
  %33 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %32, i32 0, i32 5, !dbg !4272
  %34 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %33, i32 0, i32 0, !dbg !4273
  %35 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %34, align 8, !dbg !4273
  %36 = load i8*, i8** %6, align 8, !dbg !4274
  %37 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4275
  %38 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %37, i32 0, i32 1, !dbg !4276
  %39 = bitcast %union.anon* %38 to i8**, !dbg !4276
  %40 = load i8*, i8** %39, align 8, !dbg !4276
  %41 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4277
  %42 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %41, i32 0, i32 0, !dbg !4278
  %43 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %42, i32 0, i32 3, !dbg !4279
  %44 = load i64, i64* %43, align 8, !dbg !4279
  %45 = call i32 %35(i8* %36, i8* %40, i64 %44), !dbg !4270
  store i32 %45, i32* %13, align 4, !dbg !4269
  %46 = load i32, i32* %13, align 4, !dbg !4280
  %47 = icmp eq i32 %46, 0, !dbg !4282
  br i1 %47, label %48, label %53, !dbg !4283

; <label>:48:                                     ; preds = %30
  %49 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4284
  %50 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4285
  %51 = load i8*, i8** %7, align 8, !dbg !4286
  %52 = call i32 @HXrbtree_replace(%struct.HXrbtree* %49, %struct.HXrbtree_node* %50, i8* %51), !dbg !4287
  store i32 %52, i32* %4, align 4, !dbg !4288
  br label %222, !dbg !4288

; <label>:53:                                     ; preds = %30
  %54 = load i32, i32* %13, align 4, !dbg !4289
  %55 = icmp sgt i32 %54, 0, !dbg !4290
  %56 = zext i1 %55 to i32, !dbg !4290
  store i32 %56, i32* %13, align 4, !dbg !4291
  %57 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4292
  %58 = load i32, i32* %11, align 4, !dbg !4293
  %59 = zext i32 %58 to i64, !dbg !4294
  %60 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %9, i64 0, i64 %59, !dbg !4294
  store %struct.HXrbtree_node* %57, %struct.HXrbtree_node** %60, align 8, !dbg !4295
  %61 = load i32, i32* %13, align 4, !dbg !4296
  %62 = trunc i32 %61 to i8, !dbg !4296
  %63 = load i32, i32* %11, align 4, !dbg !4297
  %64 = add i32 %63, 1, !dbg !4297
  store i32 %64, i32* %11, align 4, !dbg !4297
  %65 = zext i32 %63 to i64, !dbg !4298
  %66 = getelementptr inbounds [48 x i8], [48 x i8]* %10, i64 0, i64 %65, !dbg !4298
  store i8 %62, i8* %66, align 1, !dbg !4299
  %67 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4300
  %68 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %67, i32 0, i32 0, !dbg !4301
  %69 = load i32, i32* %13, align 4, !dbg !4302
  %70 = sext i32 %69 to i64, !dbg !4300
  %71 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %68, i64 0, i64 %70, !dbg !4300
  %72 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %71, align 8, !dbg !4300
  store %struct.HXrbtree_node* %72, %struct.HXrbtree_node** %8, align 8, !dbg !4303
  br label %27, !dbg !4264, !llvm.loop !4304

; <label>:73:                                     ; preds = %27
  %74 = call noalias i8* @malloc(i64 40) #7, !dbg !4306
  %75 = bitcast i8* %74 to %struct.HXrbtree_node*, !dbg !4306
  store %struct.HXrbtree_node* %75, %struct.HXrbtree_node** %8, align 8, !dbg !4308
  %76 = icmp eq %struct.HXrbtree_node* %75, null, !dbg !4309
  br i1 %76, label %77, label %81, !dbg !4310

; <label>:77:                                     ; preds = %73
  %78 = call i32* @__errno_location() #11, !dbg !4311
  %79 = load i32, i32* %78, align 4, !dbg !4311
  %80 = sub nsw i32 0, %79, !dbg !4312
  store i32 %80, i32* %4, align 4, !dbg !4313
  br label %222, !dbg !4313

; <label>:81:                                     ; preds = %73
  %82 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4314
  %83 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %82, i32 0, i32 0, !dbg !4315
  %84 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %83, i32 0, i32 5, !dbg !4316
  %85 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %84, i32 0, i32 1, !dbg !4317
  %86 = load i8* (i8*, i64)*, i8* (i8*, i64)** %85, align 8, !dbg !4317
  %87 = load i8*, i8** %6, align 8, !dbg !4318
  %88 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4319
  %89 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %88, i32 0, i32 0, !dbg !4320
  %90 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %89, i32 0, i32 3, !dbg !4321
  %91 = load i64, i64* %90, align 8, !dbg !4321
  %92 = call i8* %86(i8* %87, i64 %91), !dbg !4314
  %93 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4322
  %94 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %93, i32 0, i32 1, !dbg !4323
  %95 = bitcast %union.anon* %94 to i8**, !dbg !4323
  store i8* %92, i8** %95, align 8, !dbg !4324
  %96 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4325
  %97 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %96, i32 0, i32 1, !dbg !4327
  %98 = bitcast %union.anon* %97 to i8**, !dbg !4327
  %99 = load i8*, i8** %98, align 8, !dbg !4327
  %100 = icmp eq i8* %99, null, !dbg !4328
  br i1 %100, label %101, label %105, !dbg !4329

; <label>:101:                                    ; preds = %81
  %102 = load i8*, i8** %6, align 8, !dbg !4330
  %103 = icmp ne i8* %102, null, !dbg !4331
  br i1 %103, label %104, label %105, !dbg !4332

; <label>:104:                                    ; preds = %101
  br label %180, !dbg !4333

; <label>:105:                                    ; preds = %101, %81
  %106 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4334
  %107 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %106, i32 0, i32 0, !dbg !4335
  %108 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %107, i32 0, i32 5, !dbg !4336
  %109 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %108, i32 0, i32 3, !dbg !4337
  %110 = load i8* (i8*, i64)*, i8* (i8*, i64)** %109, align 8, !dbg !4337
  %111 = load i8*, i8** %7, align 8, !dbg !4338
  %112 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4339
  %113 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %112, i32 0, i32 0, !dbg !4340
  %114 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %113, i32 0, i32 4, !dbg !4341
  %115 = load i64, i64* %114, align 8, !dbg !4341
  %116 = call i8* %110(i8* %111, i64 %115), !dbg !4334
  %117 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4342
  %118 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %117, i32 0, i32 2, !dbg !4343
  %119 = bitcast %union.anon* %118 to i8**, !dbg !4343
  store i8* %116, i8** %119, align 8, !dbg !4344
  %120 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4345
  %121 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %120, i32 0, i32 2, !dbg !4347
  %122 = bitcast %union.anon* %121 to i8**, !dbg !4347
  %123 = load i8*, i8** %122, align 8, !dbg !4347
  %124 = icmp eq i8* %123, null, !dbg !4348
  br i1 %124, label %125, label %129, !dbg !4349

; <label>:125:                                    ; preds = %105
  %126 = load i8*, i8** %7, align 8, !dbg !4350
  %127 = icmp ne i8* %126, null, !dbg !4351
  br i1 %127, label %128, label %129, !dbg !4352

; <label>:128:                                    ; preds = %125
  br label %180, !dbg !4353

; <label>:129:                                    ; preds = %125, %105
  %130 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4354
  %131 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %130, i32 0, i32 0, !dbg !4355
  %132 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %131, i64 0, i64 1, !dbg !4354
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %132, align 8, !dbg !4356
  %133 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4357
  %134 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %133, i32 0, i32 0, !dbg !4358
  %135 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %134, i64 0, i64 0, !dbg !4357
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %135, align 8, !dbg !4359
  %136 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4360
  %137 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %136, i32 0, i32 3, !dbg !4361
  store i8 0, i8* %137, align 8, !dbg !4362
  %138 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4363
  %139 = load i32, i32* %11, align 4, !dbg !4364
  %140 = sub i32 %139, 1, !dbg !4365
  %141 = zext i32 %140 to i64, !dbg !4366
  %142 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %9, i64 0, i64 %141, !dbg !4366
  %143 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %142, align 8, !dbg !4366
  %144 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %143, i32 0, i32 0, !dbg !4367
  %145 = load i32, i32* %11, align 4, !dbg !4368
  %146 = sub i32 %145, 1, !dbg !4369
  %147 = zext i32 %146 to i64, !dbg !4370
  %148 = getelementptr inbounds [48 x i8], [48 x i8]* %10, i64 0, i64 %147, !dbg !4370
  %149 = load i8, i8* %148, align 1, !dbg !4370
  %150 = zext i8 %149 to i64, !dbg !4366
  %151 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %144, i64 0, i64 %150, !dbg !4366
  store %struct.HXrbtree_node* %138, %struct.HXrbtree_node** %151, align 8, !dbg !4371
  %152 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4372
  %153 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %152, i32 0, i32 0, !dbg !4373
  %154 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %153, i32 0, i32 0, !dbg !4374
  %155 = load i32, i32* %154, align 8, !dbg !4375
  %156 = add i32 %155, 1, !dbg !4375
  store i32 %156, i32* %154, align 8, !dbg !4375
  %157 = load i32, i32* %11, align 4, !dbg !4376
  %158 = icmp uge i32 %157, 3, !dbg !4378
  br i1 %158, label %159, label %175, !dbg !4379

; <label>:159:                                    ; preds = %129
  %160 = load i32, i32* %11, align 4, !dbg !4380
  %161 = sub i32 %160, 1, !dbg !4381
  %162 = zext i32 %161 to i64, !dbg !4382
  %163 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %9, i64 0, i64 %162, !dbg !4382
  %164 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %163, align 8, !dbg !4382
  %165 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %164, i32 0, i32 3, !dbg !4383
  %166 = load i8, i8* %165, align 8, !dbg !4383
  %167 = zext i8 %166 to i32, !dbg !4382
  %168 = icmp eq i32 %167, 0, !dbg !4384
  br i1 %168, label %169, label %175, !dbg !4385

; <label>:169:                                    ; preds = %159
  %170 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %9, i32 0, i32 0, !dbg !4386
  %171 = getelementptr inbounds [48 x i8], [48 x i8]* %10, i32 0, i32 0, !dbg !4387
  %172 = load i32, i32* %11, align 4, !dbg !4388
  %173 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4389
  %174 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %173, i32 0, i32 2, !dbg !4390
  call void @HXrbtree_amov(%struct.HXrbtree_node** %170, i8* %171, i32 %172, i32* %174), !dbg !4391
  br label %175, !dbg !4391

; <label>:175:                                    ; preds = %169, %159, %129
  %176 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4392
  %177 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %176, i32 0, i32 1, !dbg !4393
  %178 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %177, align 8, !dbg !4393
  %179 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %178, i32 0, i32 3, !dbg !4394
  store i8 1, i8* %179, align 8, !dbg !4395
  store i32 1, i32* %4, align 4, !dbg !4396
  br label %222, !dbg !4396

; <label>:180:                                    ; preds = %128, %104
  %181 = call i32* @__errno_location() #11, !dbg !4397
  %182 = load i32, i32* %181, align 4, !dbg !4397
  store i32 %182, i32* %12, align 4, !dbg !4398
  %183 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4399
  %184 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %183, i32 0, i32 0, !dbg !4401
  %185 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %184, i32 0, i32 5, !dbg !4402
  %186 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %185, i32 0, i32 2, !dbg !4403
  %187 = load void (i8*)*, void (i8*)** %186, align 8, !dbg !4403
  %188 = icmp ne void (i8*)* %187, null, !dbg !4404
  br i1 %188, label %189, label %199, !dbg !4405

; <label>:189:                                    ; preds = %180
  %190 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4406
  %191 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %190, i32 0, i32 0, !dbg !4407
  %192 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %191, i32 0, i32 5, !dbg !4408
  %193 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %192, i32 0, i32 2, !dbg !4409
  %194 = load void (i8*)*, void (i8*)** %193, align 8, !dbg !4409
  %195 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4410
  %196 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %195, i32 0, i32 1, !dbg !4411
  %197 = bitcast %union.anon* %196 to i8**, !dbg !4411
  %198 = load i8*, i8** %197, align 8, !dbg !4411
  call void %194(i8* %198), !dbg !4406
  br label %199, !dbg !4406

; <label>:199:                                    ; preds = %189, %180
  %200 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4412
  %201 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %200, i32 0, i32 0, !dbg !4414
  %202 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %201, i32 0, i32 5, !dbg !4415
  %203 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %202, i32 0, i32 4, !dbg !4416
  %204 = load void (i8*)*, void (i8*)** %203, align 8, !dbg !4416
  %205 = icmp ne void (i8*)* %204, null, !dbg !4417
  br i1 %205, label %206, label %216, !dbg !4418

; <label>:206:                                    ; preds = %199
  %207 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4419
  %208 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %207, i32 0, i32 0, !dbg !4420
  %209 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %208, i32 0, i32 5, !dbg !4421
  %210 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %209, i32 0, i32 4, !dbg !4422
  %211 = load void (i8*)*, void (i8*)** %210, align 8, !dbg !4422
  %212 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4423
  %213 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %212, i32 0, i32 1, !dbg !4424
  %214 = bitcast %union.anon* %213 to i8**, !dbg !4424
  %215 = load i8*, i8** %214, align 8, !dbg !4424
  call void %211(i8* %215), !dbg !4419
  br label %216, !dbg !4419

; <label>:216:                                    ; preds = %206, %199
  %217 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !4425
  %218 = bitcast %struct.HXrbtree_node* %217 to i8*, !dbg !4425
  call void @free(i8* %218) #7, !dbg !4426
  %219 = load i32, i32* %12, align 4, !dbg !4427
  %220 = call i32* @__errno_location() #11, !dbg !4428
  store i32 %219, i32* %220, align 4, !dbg !4429
  %221 = sub nsw i32 0, %219, !dbg !4430
  store i32 %221, i32* %4, align 4, !dbg !4431
  br label %222, !dbg !4431

; <label>:222:                                    ; preds = %216, %175, %77, %48
  %223 = load i32, i32* %4, align 4, !dbg !4432
  ret i32 %223, !dbg !4432
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXrbtree_replace(%struct.HXrbtree*, %struct.HXrbtree_node*, i8*) #0 !dbg !4433 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXrbtree*, align 8
  %6 = alloca %struct.HXrbtree_node*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.HXrbtree* %0, %struct.HXrbtree** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %5, metadata !4436, metadata !DIExpression()), !dbg !4437
  store %struct.HXrbtree_node* %1, %struct.HXrbtree_node** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %6, metadata !4438, metadata !DIExpression()), !dbg !4439
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4440, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4442, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4444, metadata !DIExpression()), !dbg !4445
  %10 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4446
  %11 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %10, i32 0, i32 0, !dbg !4448
  %12 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %11, i32 0, i32 1, !dbg !4449
  %13 = load i32, i32* %12, align 4, !dbg !4449
  %14 = and i32 %13, 1, !dbg !4450
  %15 = icmp ne i32 %14, 0, !dbg !4450
  br i1 %15, label %18, label %16, !dbg !4451

; <label>:16:                                     ; preds = %3
  %17 = call i32* @__errno_location() #11, !dbg !4452
  store i32 17, i32* %17, align 4, !dbg !4453
  store i32 -17, i32* %4, align 4, !dbg !4454
  br label %62, !dbg !4454

; <label>:18:                                     ; preds = %3
  %19 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4455
  %20 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %19, i32 0, i32 0, !dbg !4456
  %21 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %20, i32 0, i32 5, !dbg !4457
  %22 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %21, i32 0, i32 3, !dbg !4458
  %23 = load i8* (i8*, i64)*, i8* (i8*, i64)** %22, align 8, !dbg !4458
  %24 = load i8*, i8** %7, align 8, !dbg !4459
  %25 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4460
  %26 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %25, i32 0, i32 0, !dbg !4461
  %27 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %26, i32 0, i32 4, !dbg !4462
  %28 = load i64, i64* %27, align 8, !dbg !4462
  %29 = call i8* %23(i8* %24, i64 %28), !dbg !4455
  store i8* %29, i8** %9, align 8, !dbg !4463
  %30 = load i8*, i8** %9, align 8, !dbg !4464
  %31 = icmp eq i8* %30, null, !dbg !4466
  br i1 %31, label %32, label %39, !dbg !4467

; <label>:32:                                     ; preds = %18
  %33 = load i8*, i8** %7, align 8, !dbg !4468
  %34 = icmp ne i8* %33, null, !dbg !4469
  br i1 %34, label %35, label %39, !dbg !4470

; <label>:35:                                     ; preds = %32
  %36 = call i32* @__errno_location() #11, !dbg !4471
  %37 = load i32, i32* %36, align 4, !dbg !4471
  %38 = sub nsw i32 0, %37, !dbg !4472
  store i32 %38, i32* %4, align 4, !dbg !4473
  br label %62, !dbg !4473

; <label>:39:                                     ; preds = %32, %18
  %40 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !4474
  %41 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %40, i32 0, i32 2, !dbg !4475
  %42 = bitcast %union.anon* %41 to i8**, !dbg !4475
  %43 = load i8*, i8** %42, align 8, !dbg !4475
  store i8* %43, i8** %8, align 8, !dbg !4476
  %44 = load i8*, i8** %9, align 8, !dbg !4477
  %45 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !4478
  %46 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %45, i32 0, i32 2, !dbg !4479
  %47 = bitcast %union.anon* %46 to i8**, !dbg !4479
  store i8* %44, i8** %47, align 8, !dbg !4480
  %48 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4481
  %49 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %48, i32 0, i32 0, !dbg !4483
  %50 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %49, i32 0, i32 5, !dbg !4484
  %51 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %50, i32 0, i32 4, !dbg !4485
  %52 = load void (i8*)*, void (i8*)** %51, align 8, !dbg !4485
  %53 = icmp ne void (i8*)* %52, null, !dbg !4486
  br i1 %53, label %54, label %61, !dbg !4487

; <label>:54:                                     ; preds = %39
  %55 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !4488
  %56 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %55, i32 0, i32 0, !dbg !4489
  %57 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %56, i32 0, i32 5, !dbg !4490
  %58 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %57, i32 0, i32 4, !dbg !4491
  %59 = load void (i8*)*, void (i8*)** %58, align 8, !dbg !4491
  %60 = load i8*, i8** %8, align 8, !dbg !4492
  call void %59(i8* %60), !dbg !4488
  br label %61, !dbg !4488

; <label>:61:                                     ; preds = %54, %39
  store i32 1, i32* %4, align 4, !dbg !4493
  br label %62, !dbg !4493

; <label>:62:                                     ; preds = %61, %35, %16
  %63 = load i32, i32* %4, align 4, !dbg !4494
  ret i32 %63, !dbg !4494
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtree_amov(%struct.HXrbtree_node**, i8*, i32, i32*) #0 !dbg !4495 {
  %5 = alloca %struct.HXrbtree_node**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca %struct.HXrbtree_node*, align 8
  %10 = alloca %struct.HXrbtree_node*, align 8
  %11 = alloca %struct.HXrbtree_node*, align 8
  %12 = alloca %struct.HXrbtree_node*, align 8
  %13 = alloca i32, align 4
  store %struct.HXrbtree_node** %0, %struct.HXrbtree_node*** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node*** %5, metadata !4501, metadata !DIExpression()), !dbg !4502
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4503, metadata !DIExpression()), !dbg !4504
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4505, metadata !DIExpression()), !dbg !4506
  store i32* %3, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !4507, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %9, metadata !4509, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %10, metadata !4511, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %11, metadata !4513, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %12, metadata !4515, metadata !DIExpression()), !dbg !4516
  br label %14, !dbg !4517

; <label>:14:                                     ; preds = %185, %4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4518, metadata !DIExpression()), !dbg !4520
  %15 = load i8*, i8** %6, align 8, !dbg !4521
  %16 = load i32, i32* %7, align 4, !dbg !4522
  %17 = sub i32 %16, 2, !dbg !4523
  %18 = zext i32 %17 to i64, !dbg !4521
  %19 = getelementptr inbounds i8, i8* %15, i64 %18, !dbg !4521
  %20 = load i8, i8* %19, align 1, !dbg !4521
  %21 = zext i8 %20 to i32, !dbg !4521
  store i32 %21, i32* %13, align 4, !dbg !4520
  %22 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !4524
  %23 = load i32, i32* %7, align 4, !dbg !4525
  %24 = sub i32 %23, 2, !dbg !4526
  %25 = zext i32 %24 to i64, !dbg !4524
  %26 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %22, i64 %25, !dbg !4524
  %27 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %26, align 8, !dbg !4524
  store %struct.HXrbtree_node* %27, %struct.HXrbtree_node** %11, align 8, !dbg !4527
  %28 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !4528
  %29 = load i32, i32* %7, align 4, !dbg !4529
  %30 = sub i32 %29, 1, !dbg !4530
  %31 = zext i32 %30 to i64, !dbg !4528
  %32 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %28, i64 %31, !dbg !4528
  %33 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %32, align 8, !dbg !4528
  store %struct.HXrbtree_node* %33, %struct.HXrbtree_node** %10, align 8, !dbg !4531
  %34 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4532
  %35 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %34, i32 0, i32 0, !dbg !4533
  %36 = load i32, i32* %13, align 4, !dbg !4534
  %37 = icmp ne i32 %36, 0, !dbg !4535
  %38 = xor i1 %37, true, !dbg !4535
  %39 = zext i1 %38 to i32, !dbg !4535
  %40 = sext i32 %39 to i64, !dbg !4532
  %41 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %35, i64 0, i64 %40, !dbg !4532
  %42 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %41, align 8, !dbg !4532
  store %struct.HXrbtree_node* %42, %struct.HXrbtree_node** %9, align 8, !dbg !4536
  %43 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !4537
  %44 = icmp ne %struct.HXrbtree_node* %43, null, !dbg !4539
  br i1 %44, label %45, label %60, !dbg !4540

; <label>:45:                                     ; preds = %14
  %46 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !4541
  %47 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %46, i32 0, i32 3, !dbg !4542
  %48 = load i8, i8* %47, align 8, !dbg !4542
  %49 = zext i8 %48 to i32, !dbg !4541
  %50 = icmp eq i32 %49, 0, !dbg !4543
  br i1 %50, label %51, label %60, !dbg !4544

; <label>:51:                                     ; preds = %45
  %52 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4545
  %53 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %52, i32 0, i32 3, !dbg !4547
  store i8 1, i8* %53, align 8, !dbg !4548
  %54 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !4549
  %55 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %54, i32 0, i32 3, !dbg !4550
  store i8 1, i8* %55, align 8, !dbg !4551
  %56 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4552
  %57 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %56, i32 0, i32 3, !dbg !4553
  store i8 0, i8* %57, align 8, !dbg !4554
  %58 = load i32, i32* %7, align 4, !dbg !4555
  %59 = sub i32 %58, 2, !dbg !4555
  store i32 %59, i32* %7, align 4, !dbg !4555
  br label %171, !dbg !4556

; <label>:60:                                     ; preds = %45, %14
  %61 = load i8*, i8** %6, align 8, !dbg !4557
  %62 = load i32, i32* %7, align 4, !dbg !4559
  %63 = sub i32 %62, 1, !dbg !4560
  %64 = zext i32 %63 to i64, !dbg !4557
  %65 = getelementptr inbounds i8, i8* %61, i64 %64, !dbg !4557
  %66 = load i8, i8* %65, align 1, !dbg !4557
  %67 = zext i8 %66 to i32, !dbg !4557
  %68 = load i32, i32* %13, align 4, !dbg !4561
  %69 = icmp ne i32 %67, %68, !dbg !4562
  br i1 %69, label %70, label %118, !dbg !4563

; <label>:70:                                     ; preds = %60
  %71 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4564
  %72 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %71, i32 0, i32 0, !dbg !4566
  %73 = load i32, i32* %13, align 4, !dbg !4567
  %74 = icmp ne i32 %73, 0, !dbg !4568
  %75 = xor i1 %74, true, !dbg !4568
  %76 = zext i1 %75 to i32, !dbg !4568
  %77 = sext i32 %76 to i64, !dbg !4564
  %78 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %72, i64 0, i64 %77, !dbg !4564
  %79 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %78, align 8, !dbg !4564
  store %struct.HXrbtree_node* %79, %struct.HXrbtree_node** %12, align 8, !dbg !4569
  %80 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %12, align 8, !dbg !4570
  %81 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %80, i32 0, i32 0, !dbg !4571
  %82 = load i32, i32* %13, align 4, !dbg !4572
  %83 = zext i32 %82 to i64, !dbg !4570
  %84 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %81, i64 0, i64 %83, !dbg !4570
  %85 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %84, align 8, !dbg !4570
  %86 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4573
  %87 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %86, i32 0, i32 0, !dbg !4574
  %88 = load i32, i32* %13, align 4, !dbg !4575
  %89 = icmp ne i32 %88, 0, !dbg !4576
  %90 = xor i1 %89, true, !dbg !4576
  %91 = zext i1 %90 to i32, !dbg !4576
  %92 = sext i32 %91 to i64, !dbg !4573
  %93 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %87, i64 0, i64 %92, !dbg !4573
  store %struct.HXrbtree_node* %85, %struct.HXrbtree_node** %93, align 8, !dbg !4577
  %94 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4578
  %95 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %12, align 8, !dbg !4579
  %96 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %95, i32 0, i32 0, !dbg !4580
  %97 = load i32, i32* %13, align 4, !dbg !4581
  %98 = zext i32 %97 to i64, !dbg !4579
  %99 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %96, i64 0, i64 %98, !dbg !4579
  store %struct.HXrbtree_node* %94, %struct.HXrbtree_node** %99, align 8, !dbg !4582
  %100 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %12, align 8, !dbg !4583
  %101 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4584
  %102 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %101, i32 0, i32 0, !dbg !4585
  %103 = load i32, i32* %13, align 4, !dbg !4586
  %104 = zext i32 %103 to i64, !dbg !4584
  %105 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %102, i64 0, i64 %104, !dbg !4584
  store %struct.HXrbtree_node* %100, %struct.HXrbtree_node** %105, align 8, !dbg !4587
  %106 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4588
  %107 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %106, i32 0, i32 0, !dbg !4589
  %108 = load i32, i32* %13, align 4, !dbg !4590
  %109 = zext i32 %108 to i64, !dbg !4588
  %110 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %107, i64 0, i64 %109, !dbg !4588
  %111 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %110, align 8, !dbg !4588
  store %struct.HXrbtree_node* %111, %struct.HXrbtree_node** %10, align 8, !dbg !4591
  %112 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4592
  %113 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %112, i32 0, i32 0, !dbg !4593
  %114 = load i32, i32* %13, align 4, !dbg !4594
  %115 = zext i32 %114 to i64, !dbg !4592
  %116 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %113, i64 0, i64 %115, !dbg !4592
  %117 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %116, align 8, !dbg !4592
  store %struct.HXrbtree_node* %117, %struct.HXrbtree_node** %12, align 8, !dbg !4595
  br label %124, !dbg !4596

; <label>:118:                                    ; preds = %60
  %119 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !4597
  %120 = load i32, i32* %7, align 4, !dbg !4599
  %121 = zext i32 %120 to i64, !dbg !4597
  %122 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %119, i64 %121, !dbg !4597
  %123 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %122, align 8, !dbg !4597
  store %struct.HXrbtree_node* %123, %struct.HXrbtree_node** %12, align 8, !dbg !4600
  br label %124

; <label>:124:                                    ; preds = %118, %70
  %125 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4601
  %126 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %125, i32 0, i32 0, !dbg !4602
  %127 = load i32, i32* %13, align 4, !dbg !4603
  %128 = icmp ne i32 %127, 0, !dbg !4604
  %129 = xor i1 %128, true, !dbg !4604
  %130 = zext i1 %129 to i32, !dbg !4604
  %131 = sext i32 %130 to i64, !dbg !4601
  %132 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %126, i64 0, i64 %131, !dbg !4601
  %133 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %132, align 8, !dbg !4601
  %134 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4605
  %135 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %134, i32 0, i32 0, !dbg !4606
  %136 = load i32, i32* %13, align 4, !dbg !4607
  %137 = zext i32 %136 to i64, !dbg !4605
  %138 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %135, i64 0, i64 %137, !dbg !4605
  store %struct.HXrbtree_node* %133, %struct.HXrbtree_node** %138, align 8, !dbg !4608
  %139 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4609
  %140 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4610
  %141 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %140, i32 0, i32 0, !dbg !4611
  %142 = load i32, i32* %13, align 4, !dbg !4612
  %143 = icmp ne i32 %142, 0, !dbg !4613
  %144 = xor i1 %143, true, !dbg !4613
  %145 = zext i1 %144 to i32, !dbg !4613
  %146 = sext i32 %145 to i64, !dbg !4610
  %147 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %141, i64 0, i64 %146, !dbg !4610
  store %struct.HXrbtree_node* %139, %struct.HXrbtree_node** %147, align 8, !dbg !4614
  %148 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4615
  %149 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !4616
  %150 = load i32, i32* %7, align 4, !dbg !4617
  %151 = sub i32 %150, 3, !dbg !4618
  %152 = zext i32 %151 to i64, !dbg !4616
  %153 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %149, i64 %152, !dbg !4616
  %154 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %153, align 8, !dbg !4616
  %155 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %154, i32 0, i32 0, !dbg !4619
  %156 = load i8*, i8** %6, align 8, !dbg !4620
  %157 = load i32, i32* %7, align 4, !dbg !4621
  %158 = sub i32 %157, 3, !dbg !4622
  %159 = zext i32 %158 to i64, !dbg !4620
  %160 = getelementptr inbounds i8, i8* %156, i64 %159, !dbg !4620
  %161 = load i8, i8* %160, align 1, !dbg !4620
  %162 = zext i8 %161 to i64, !dbg !4616
  %163 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %155, i64 0, i64 %162, !dbg !4616
  store %struct.HXrbtree_node* %148, %struct.HXrbtree_node** %163, align 8, !dbg !4623
  %164 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %11, align 8, !dbg !4624
  %165 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %164, i32 0, i32 3, !dbg !4625
  store i8 0, i8* %165, align 8, !dbg !4626
  %166 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !4627
  %167 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %166, i32 0, i32 3, !dbg !4628
  store i8 1, i8* %167, align 8, !dbg !4629
  %168 = load i32*, i32** %8, align 8, !dbg !4630
  %169 = load i32, i32* %168, align 4, !dbg !4631
  %170 = add i32 %169, 1, !dbg !4631
  store i32 %170, i32* %168, align 4, !dbg !4631
  br label %187, !dbg !4632

; <label>:171:                                    ; preds = %51
  %172 = load i32, i32* %7, align 4, !dbg !4633
  %173 = icmp uge i32 %172, 3, !dbg !4634
  br i1 %173, label %174, label %185, !dbg !4635

; <label>:174:                                    ; preds = %171
  %175 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !4636
  %176 = load i32, i32* %7, align 4, !dbg !4637
  %177 = sub i32 %176, 1, !dbg !4638
  %178 = zext i32 %177 to i64, !dbg !4636
  %179 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %175, i64 %178, !dbg !4636
  %180 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %179, align 8, !dbg !4636
  %181 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %180, i32 0, i32 3, !dbg !4639
  %182 = load i8, i8* %181, align 8, !dbg !4639
  %183 = zext i8 %182 to i32, !dbg !4636
  %184 = icmp eq i32 %183, 0, !dbg !4640
  br label %185

; <label>:185:                                    ; preds = %174, %171
  %186 = phi i1 [ false, %171 ], [ %184, %174 ], !dbg !4641
  br i1 %186, label %14, label %187, !dbg !4642, !llvm.loop !4643

; <label>:187:                                    ; preds = %185, %124
  ret void, !dbg !4645
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXhmap_replace(%struct.HXhmap*, %struct.HXhmap_node*, i8*) #0 !dbg !4646 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXhmap*, align 8
  %6 = alloca %struct.HXhmap_node*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.HXhmap* %0, %struct.HXhmap** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %5, metadata !4649, metadata !DIExpression()), !dbg !4650
  store %struct.HXhmap_node* %1, %struct.HXhmap_node** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %6, metadata !4651, metadata !DIExpression()), !dbg !4652
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4653, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4655, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4657, metadata !DIExpression()), !dbg !4658
  %10 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4659
  %11 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %10, i32 0, i32 0, !dbg !4661
  %12 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %11, i32 0, i32 1, !dbg !4662
  %13 = load i32, i32* %12, align 4, !dbg !4662
  %14 = and i32 %13, 1, !dbg !4663
  %15 = icmp ne i32 %14, 0, !dbg !4663
  br i1 %15, label %16, label %17, !dbg !4664

; <label>:16:                                     ; preds = %3
  store i32 -17, i32* %4, align 4, !dbg !4665
  br label %61, !dbg !4665

; <label>:17:                                     ; preds = %3
  %18 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4666
  %19 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %18, i32 0, i32 0, !dbg !4667
  %20 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %19, i32 0, i32 5, !dbg !4668
  %21 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %20, i32 0, i32 3, !dbg !4669
  %22 = load i8* (i8*, i64)*, i8* (i8*, i64)** %21, align 8, !dbg !4669
  %23 = load i8*, i8** %7, align 8, !dbg !4670
  %24 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4671
  %25 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %24, i32 0, i32 0, !dbg !4672
  %26 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %25, i32 0, i32 4, !dbg !4673
  %27 = load i64, i64* %26, align 8, !dbg !4673
  %28 = call i8* %22(i8* %23, i64 %27), !dbg !4666
  store i8* %28, i8** %9, align 8, !dbg !4674
  %29 = load i8*, i8** %9, align 8, !dbg !4675
  %30 = icmp eq i8* %29, null, !dbg !4677
  br i1 %30, label %31, label %38, !dbg !4678

; <label>:31:                                     ; preds = %17
  %32 = load i8*, i8** %7, align 8, !dbg !4679
  %33 = icmp ne i8* %32, null, !dbg !4680
  br i1 %33, label %34, label %38, !dbg !4681

; <label>:34:                                     ; preds = %31
  %35 = call i32* @__errno_location() #11, !dbg !4682
  %36 = load i32, i32* %35, align 4, !dbg !4682
  %37 = sub nsw i32 0, %36, !dbg !4683
  store i32 %37, i32* %4, align 4, !dbg !4684
  br label %61, !dbg !4684

; <label>:38:                                     ; preds = %31, %17
  %39 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4685
  %40 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %39, i32 0, i32 2, !dbg !4686
  %41 = bitcast %union.anon* %40 to i8**, !dbg !4686
  %42 = load i8*, i8** %41, align 8, !dbg !4686
  store i8* %42, i8** %8, align 8, !dbg !4687
  %43 = load i8*, i8** %9, align 8, !dbg !4688
  %44 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4689
  %45 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %44, i32 0, i32 2, !dbg !4690
  %46 = bitcast %union.anon* %45 to i8**, !dbg !4690
  store i8* %43, i8** %46, align 8, !dbg !4691
  %47 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4692
  %48 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %47, i32 0, i32 0, !dbg !4694
  %49 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %48, i32 0, i32 5, !dbg !4695
  %50 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %49, i32 0, i32 4, !dbg !4696
  %51 = load void (i8*)*, void (i8*)** %50, align 8, !dbg !4696
  %52 = icmp ne void (i8*)* %51, null, !dbg !4697
  br i1 %52, label %53, label %60, !dbg !4698

; <label>:53:                                     ; preds = %38
  %54 = load %struct.HXhmap*, %struct.HXhmap** %5, align 8, !dbg !4699
  %55 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %54, i32 0, i32 0, !dbg !4700
  %56 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %55, i32 0, i32 5, !dbg !4701
  %57 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %56, i32 0, i32 4, !dbg !4702
  %58 = load void (i8*)*, void (i8*)** %57, align 8, !dbg !4702
  %59 = load i8*, i8** %8, align 8, !dbg !4703
  call void %58(i8* %59), !dbg !4699
  br label %60, !dbg !4699

; <label>:60:                                     ; preds = %53, %38
  store i32 1, i32* %4, align 4, !dbg !4704
  br label %61, !dbg !4704

; <label>:61:                                     ; preds = %60, %34, %16
  %62 = load i32, i32* %4, align 4, !dbg !4705
  ret i32 %62, !dbg !4705
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmap_del(%struct.HXmap*, i8*) #0 !dbg !4706 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXmap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.HXmap_private*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %4, metadata !4709, metadata !DIExpression()), !dbg !4710
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4713, metadata !DIExpression()), !dbg !4714
  %8 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !4715
  %9 = bitcast %struct.HXmap* %8 to i8*, !dbg !4715
  store i8* %9, i8** %6, align 8, !dbg !4714
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %7, metadata !4716, metadata !DIExpression()), !dbg !4717
  %10 = load i8*, i8** %6, align 8, !dbg !4718
  %11 = bitcast i8* %10 to %struct.HXmap_private*, !dbg !4718
  store %struct.HXmap_private* %11, %struct.HXmap_private** %7, align 8, !dbg !4717
  %12 = load %struct.HXmap_private*, %struct.HXmap_private** %7, align 8, !dbg !4719
  %13 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %12, i32 0, i32 2, !dbg !4720
  %14 = load i32, i32* %13, align 8, !dbg !4720
  switch i32 %14, label %25 [
    i32 1, label %15
    i32 2, label %20
  ], !dbg !4721

; <label>:15:                                     ; preds = %2
  %16 = load i8*, i8** %6, align 8, !dbg !4722
  %17 = bitcast i8* %16 to %struct.HXhmap*, !dbg !4722
  %18 = load i8*, i8** %5, align 8, !dbg !4724
  %19 = call i8* @HXhmap_del(%struct.HXhmap* %17, i8* %18), !dbg !4725
  store i8* %19, i8** %3, align 8, !dbg !4726
  br label %27, !dbg !4726

; <label>:20:                                     ; preds = %2
  %21 = load i8*, i8** %6, align 8, !dbg !4727
  %22 = bitcast i8* %21 to %struct.HXrbtree*, !dbg !4727
  %23 = load i8*, i8** %5, align 8, !dbg !4728
  %24 = call i8* @HXrbtree_del(%struct.HXrbtree* %22, i8* %23), !dbg !4729
  store i8* %24, i8** %3, align 8, !dbg !4730
  br label %27, !dbg !4730

; <label>:25:                                     ; preds = %2
  %26 = call i32* @__errno_location() #11, !dbg !4731
  store i32 22, i32* %26, align 4, !dbg !4732
  store i8* null, i8** %3, align 8, !dbg !4733
  br label %27, !dbg !4733

; <label>:27:                                     ; preds = %25, %20, %15
  %28 = load i8*, i8** %3, align 8, !dbg !4734
  ret i8* %28, !dbg !4734
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXhmap_del(%struct.HXhmap*, i8*) #0 !dbg !4735 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXhmap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.HXhmap_node*, align 8
  %7 = alloca i8*, align 8
  store %struct.HXhmap* %0, %struct.HXhmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %4, metadata !4738, metadata !DIExpression()), !dbg !4739
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4740, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %6, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4744, metadata !DIExpression()), !dbg !4745
  %8 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4746
  %9 = load i8*, i8** %5, align 8, !dbg !4748
  %10 = call %struct.HXhmap_node* @HXhmap_find(%struct.HXhmap* %8, i8* %9), !dbg !4749
  store %struct.HXhmap_node* %10, %struct.HXhmap_node** %6, align 8, !dbg !4750
  %11 = icmp eq %struct.HXhmap_node* %10, null, !dbg !4751
  br i1 %11, label %12, label %14, !dbg !4752

; <label>:12:                                     ; preds = %2
  %13 = call i32* @__errno_location() #11, !dbg !4753
  store i32 2, i32* %13, align 4, !dbg !4755
  store i8* null, i8** %3, align 8, !dbg !4756
  br label %89, !dbg !4756

; <label>:14:                                     ; preds = %2
  %15 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4757
  %16 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %15, i32 0, i32 0, !dbg !4758
  call void @HXlist_del(%struct.HXlist_head* %16), !dbg !4759
  %17 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4760
  %18 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %17, i32 0, i32 5, !dbg !4761
  %19 = load i32, i32* %18, align 4, !dbg !4762
  %20 = add i32 %19, 1, !dbg !4762
  store i32 %20, i32* %18, align 4, !dbg !4762
  %21 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4763
  %22 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %21, i32 0, i32 0, !dbg !4764
  %23 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %22, i32 0, i32 0, !dbg !4765
  %24 = load i32, i32* %23, align 8, !dbg !4766
  %25 = add i32 %24, -1, !dbg !4766
  store i32 %25, i32* %23, align 8, !dbg !4766
  %26 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4767
  %27 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %26, i32 0, i32 0, !dbg !4769
  %28 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %27, i32 0, i32 0, !dbg !4770
  %29 = load i32, i32* %28, align 8, !dbg !4770
  %30 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4771
  %31 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %30, i32 0, i32 4, !dbg !4772
  %32 = load i32, i32* %31, align 8, !dbg !4772
  %33 = icmp ult i32 %29, %32, !dbg !4773
  br i1 %33, label %34, label %46, !dbg !4774

; <label>:34:                                     ; preds = %14
  %35 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4775
  %36 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %35, i32 0, i32 2, !dbg !4776
  %37 = load i32, i32* %36, align 8, !dbg !4776
  %38 = icmp ugt i32 %37, 0, !dbg !4777
  br i1 %38, label %39, label %46, !dbg !4778

; <label>:39:                                     ; preds = %34
  %40 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4779
  %41 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4780
  %42 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %41, i32 0, i32 2, !dbg !4781
  %43 = load i32, i32* %42, align 8, !dbg !4781
  %44 = sub i32 %43, 1, !dbg !4782
  %45 = call i32 @HXhmap_layout(%struct.HXhmap* %40, i32 %44), !dbg !4783
  br label %46, !dbg !4783

; <label>:46:                                     ; preds = %39, %34, %14
  %47 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4784
  %48 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %47, i32 0, i32 2, !dbg !4785
  %49 = bitcast %union.anon* %48 to i8**, !dbg !4785
  %50 = load i8*, i8** %49, align 8, !dbg !4785
  store i8* %50, i8** %7, align 8, !dbg !4786
  %51 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4787
  %52 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %51, i32 0, i32 0, !dbg !4789
  %53 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %52, i32 0, i32 5, !dbg !4790
  %54 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %53, i32 0, i32 2, !dbg !4791
  %55 = load void (i8*)*, void (i8*)** %54, align 8, !dbg !4791
  %56 = icmp ne void (i8*)* %55, null, !dbg !4792
  br i1 %56, label %57, label %67, !dbg !4793

; <label>:57:                                     ; preds = %46
  %58 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4794
  %59 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %58, i32 0, i32 0, !dbg !4795
  %60 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %59, i32 0, i32 5, !dbg !4796
  %61 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %60, i32 0, i32 2, !dbg !4797
  %62 = load void (i8*)*, void (i8*)** %61, align 8, !dbg !4797
  %63 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4798
  %64 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %63, i32 0, i32 1, !dbg !4799
  %65 = bitcast %union.anon* %64 to i8**, !dbg !4799
  %66 = load i8*, i8** %65, align 8, !dbg !4799
  call void %62(i8* %66), !dbg !4794
  br label %67, !dbg !4794

; <label>:67:                                     ; preds = %57, %46
  %68 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4800
  %69 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %68, i32 0, i32 0, !dbg !4802
  %70 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %69, i32 0, i32 5, !dbg !4803
  %71 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %70, i32 0, i32 4, !dbg !4804
  %72 = load void (i8*)*, void (i8*)** %71, align 8, !dbg !4804
  %73 = icmp ne void (i8*)* %72, null, !dbg !4805
  br i1 %73, label %74, label %84, !dbg !4806

; <label>:74:                                     ; preds = %67
  %75 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !4807
  %76 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %75, i32 0, i32 0, !dbg !4808
  %77 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %76, i32 0, i32 5, !dbg !4809
  %78 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %77, i32 0, i32 4, !dbg !4810
  %79 = load void (i8*)*, void (i8*)** %78, align 8, !dbg !4810
  %80 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4811
  %81 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %80, i32 0, i32 2, !dbg !4812
  %82 = bitcast %union.anon* %81 to i8**, !dbg !4812
  %83 = load i8*, i8** %82, align 8, !dbg !4812
  call void %79(i8* %83), !dbg !4807
  br label %84, !dbg !4807

; <label>:84:                                     ; preds = %74, %67
  %85 = load %struct.HXhmap_node*, %struct.HXhmap_node** %6, align 8, !dbg !4813
  %86 = bitcast %struct.HXhmap_node* %85 to i8*, !dbg !4813
  call void @free(i8* %86) #7, !dbg !4814
  %87 = call i32* @__errno_location() #11, !dbg !4815
  store i32 0, i32* %87, align 4, !dbg !4816
  %88 = load i8*, i8** %7, align 8, !dbg !4817
  store i8* %88, i8** %3, align 8, !dbg !4818
  br label %89, !dbg !4818

; <label>:89:                                     ; preds = %84, %12
  %90 = load i8*, i8** %3, align 8, !dbg !4819
  ret i8* %90, !dbg !4819
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXrbtree_del(%struct.HXrbtree*, i8*) #0 !dbg !4820 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXrbtree*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [48 x %struct.HXrbtree_node*], align 16
  %7 = alloca %struct.HXrbtree_node*, align 8
  %8 = alloca [48 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.HXrbtree* %0, %struct.HXrbtree** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %4, metadata !4823, metadata !DIExpression()), !dbg !4824
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4825, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.declare(metadata [48 x %struct.HXrbtree_node*]* %6, metadata !4827, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %7, metadata !4829, metadata !DIExpression()), !dbg !4830
  call void @llvm.dbg.declare(metadata [48 x i8]* %8, metadata !4831, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4833, metadata !DIExpression()), !dbg !4834
  store i32 0, i32* %9, align 4, !dbg !4834
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4835, metadata !DIExpression()), !dbg !4836
  %12 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4837
  %13 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %12, i32 0, i32 1, !dbg !4839
  %14 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %13, align 8, !dbg !4839
  %15 = icmp eq %struct.HXrbtree_node* %14, null, !dbg !4840
  br i1 %15, label %16, label %17, !dbg !4841

; <label>:16:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !4842
  br label %198, !dbg !4842

; <label>:17:                                     ; preds = %2
  %18 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4843
  %19 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %18, i32 0, i32 1, !dbg !4843
  %20 = bitcast %struct.HXrbtree_node** %19 to %struct.HXrbtree_node*, !dbg !4843
  %21 = load i32, i32* %9, align 4, !dbg !4844
  %22 = zext i32 %21 to i64, !dbg !4845
  %23 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i64 0, i64 %22, !dbg !4845
  store %struct.HXrbtree_node* %20, %struct.HXrbtree_node** %23, align 8, !dbg !4846
  %24 = load i32, i32* %9, align 4, !dbg !4847
  %25 = add i32 %24, 1, !dbg !4847
  store i32 %25, i32* %9, align 4, !dbg !4847
  %26 = zext i32 %24 to i64, !dbg !4848
  %27 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 %26, !dbg !4848
  store i8 0, i8* %27, align 1, !dbg !4849
  %28 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4850
  %29 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %28, i32 0, i32 1, !dbg !4851
  %30 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %29, align 8, !dbg !4851
  store %struct.HXrbtree_node* %30, %struct.HXrbtree_node** %7, align 8, !dbg !4852
  br label %31, !dbg !4853

; <label>:31:                                     ; preds = %53, %17
  %32 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4854
  %33 = icmp ne %struct.HXrbtree_node* %32, null, !dbg !4855
  br i1 %33, label %34, label %73, !dbg !4853

; <label>:34:                                     ; preds = %31
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4856, metadata !DIExpression()), !dbg !4858
  %35 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4859
  %36 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %35, i32 0, i32 0, !dbg !4860
  %37 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %36, i32 0, i32 5, !dbg !4861
  %38 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %37, i32 0, i32 0, !dbg !4862
  %39 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %38, align 8, !dbg !4862
  %40 = load i8*, i8** %5, align 8, !dbg !4863
  %41 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4864
  %42 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %41, i32 0, i32 1, !dbg !4865
  %43 = bitcast %union.anon* %42 to i8**, !dbg !4865
  %44 = load i8*, i8** %43, align 8, !dbg !4865
  %45 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4866
  %46 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %45, i32 0, i32 0, !dbg !4867
  %47 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %46, i32 0, i32 3, !dbg !4868
  %48 = load i64, i64* %47, align 8, !dbg !4868
  %49 = call i32 %39(i8* %40, i8* %44, i64 %48), !dbg !4859
  store i32 %49, i32* %11, align 4, !dbg !4858
  %50 = load i32, i32* %11, align 4, !dbg !4869
  %51 = icmp eq i32 %50, 0, !dbg !4871
  br i1 %51, label %52, label %53, !dbg !4872

; <label>:52:                                     ; preds = %34
  br label %73, !dbg !4873

; <label>:53:                                     ; preds = %34
  %54 = load i32, i32* %11, align 4, !dbg !4874
  %55 = icmp sgt i32 %54, 0, !dbg !4875
  %56 = zext i1 %55 to i32, !dbg !4875
  store i32 %56, i32* %11, align 4, !dbg !4876
  %57 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4877
  %58 = load i32, i32* %9, align 4, !dbg !4878
  %59 = zext i32 %58 to i64, !dbg !4879
  %60 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i64 0, i64 %59, !dbg !4879
  store %struct.HXrbtree_node* %57, %struct.HXrbtree_node** %60, align 8, !dbg !4880
  %61 = load i32, i32* %11, align 4, !dbg !4881
  %62 = trunc i32 %61 to i8, !dbg !4881
  %63 = load i32, i32* %9, align 4, !dbg !4882
  %64 = add i32 %63, 1, !dbg !4882
  store i32 %64, i32* %9, align 4, !dbg !4882
  %65 = zext i32 %63 to i64, !dbg !4883
  %66 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 %65, !dbg !4883
  store i8 %62, i8* %66, align 1, !dbg !4884
  %67 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4885
  %68 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %67, i32 0, i32 0, !dbg !4886
  %69 = load i32, i32* %11, align 4, !dbg !4887
  %70 = sext i32 %69 to i64, !dbg !4885
  %71 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %68, i64 0, i64 %70, !dbg !4885
  %72 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %71, align 8, !dbg !4885
  store %struct.HXrbtree_node* %72, %struct.HXrbtree_node** %7, align 8, !dbg !4888
  br label %31, !dbg !4853, !llvm.loop !4889

; <label>:73:                                     ; preds = %52, %31
  %74 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4891
  %75 = icmp eq %struct.HXrbtree_node* %74, null, !dbg !4893
  br i1 %75, label %76, label %78, !dbg !4894

; <label>:76:                                     ; preds = %73
  %77 = call i32* @__errno_location() #11, !dbg !4895
  store i32 2, i32* %77, align 4, !dbg !4897
  store i8* null, i8** %3, align 8, !dbg !4898
  br label %198, !dbg !4898

; <label>:78:                                     ; preds = %73
  %79 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4899
  %80 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %79, i32 0, i32 2, !dbg !4900
  %81 = bitcast %union.anon* %80 to i8**, !dbg !4900
  %82 = load i8*, i8** %81, align 8, !dbg !4900
  store i8* %82, i8** %10, align 8, !dbg !4901
  %83 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4902
  %84 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %83, i32 0, i32 0, !dbg !4903
  %85 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %84, i32 0, i32 0, !dbg !4904
  %86 = load i32, i32* %85, align 8, !dbg !4905
  %87 = add i32 %86, -1, !dbg !4905
  store i32 %87, i32* %85, align 8, !dbg !4905
  %88 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4906
  %89 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %88, i32 0, i32 2, !dbg !4907
  %90 = load i32, i32* %89, align 8, !dbg !4908
  %91 = add i32 %90, 1, !dbg !4908
  store i32 %91, i32* %89, align 8, !dbg !4908
  %92 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4909
  %93 = load i32, i32* %9, align 4, !dbg !4910
  %94 = zext i32 %93 to i64, !dbg !4911
  %95 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i64 0, i64 %94, !dbg !4911
  store %struct.HXrbtree_node* %92, %struct.HXrbtree_node** %95, align 8, !dbg !4912
  %96 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4913
  %97 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %96, i32 0, i32 0, !dbg !4915
  %98 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %97, i64 0, i64 1, !dbg !4913
  %99 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %98, align 8, !dbg !4913
  %100 = icmp eq %struct.HXrbtree_node* %99, null, !dbg !4916
  br i1 %100, label %101, label %119, !dbg !4917

; <label>:101:                                    ; preds = %78
  %102 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4918
  %103 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %102, i32 0, i32 0, !dbg !4919
  %104 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %103, i64 0, i64 0, !dbg !4918
  %105 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %104, align 8, !dbg !4918
  %106 = load i32, i32* %9, align 4, !dbg !4920
  %107 = sub i32 %106, 1, !dbg !4921
  %108 = zext i32 %107 to i64, !dbg !4922
  %109 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i64 0, i64 %108, !dbg !4922
  %110 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %109, align 8, !dbg !4922
  %111 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %110, i32 0, i32 0, !dbg !4923
  %112 = load i32, i32* %9, align 4, !dbg !4924
  %113 = sub i32 %112, 1, !dbg !4925
  %114 = zext i32 %113 to i64, !dbg !4926
  %115 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 %114, !dbg !4926
  %116 = load i8, i8* %115, align 1, !dbg !4926
  %117 = zext i8 %116 to i64, !dbg !4922
  %118 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %111, i64 0, i64 %117, !dbg !4922
  store %struct.HXrbtree_node* %105, %struct.HXrbtree_node** %118, align 8, !dbg !4927
  br label %149, !dbg !4922

; <label>:119:                                    ; preds = %78
  %120 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4928
  %121 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %120, i32 0, i32 0, !dbg !4930
  %122 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %121, i64 0, i64 0, !dbg !4928
  %123 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %122, align 8, !dbg !4928
  %124 = icmp eq %struct.HXrbtree_node* %123, null, !dbg !4931
  br i1 %124, label %125, label %143, !dbg !4932

; <label>:125:                                    ; preds = %119
  %126 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4933
  %127 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %126, i32 0, i32 0, !dbg !4934
  %128 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %127, i64 0, i64 1, !dbg !4933
  %129 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %128, align 8, !dbg !4933
  %130 = load i32, i32* %9, align 4, !dbg !4935
  %131 = sub i32 %130, 1, !dbg !4936
  %132 = zext i32 %131 to i64, !dbg !4937
  %133 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i64 0, i64 %132, !dbg !4937
  %134 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %133, align 8, !dbg !4937
  %135 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %134, i32 0, i32 0, !dbg !4938
  %136 = load i32, i32* %9, align 4, !dbg !4939
  %137 = sub i32 %136, 1, !dbg !4940
  %138 = zext i32 %137 to i64, !dbg !4941
  %139 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 %138, !dbg !4941
  %140 = load i8, i8* %139, align 1, !dbg !4941
  %141 = zext i8 %140 to i64, !dbg !4937
  %142 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %135, i64 0, i64 %141, !dbg !4937
  store %struct.HXrbtree_node* %129, %struct.HXrbtree_node** %142, align 8, !dbg !4942
  br label %148, !dbg !4937

; <label>:143:                                    ; preds = %119
  %144 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i32 0, i32 0, !dbg !4943
  %145 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i32 0, i32 0, !dbg !4944
  %146 = load i32, i32* %9, align 4, !dbg !4945
  %147 = call i32 @HXrbtree_del_mm(%struct.HXrbtree_node** %144, i8* %145, i32 %146), !dbg !4946
  store i32 %147, i32* %9, align 4, !dbg !4947
  br label %148

; <label>:148:                                    ; preds = %143, %125
  br label %149

; <label>:149:                                    ; preds = %148, %101
  %150 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4948
  %151 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %150, i32 0, i32 3, !dbg !4950
  %152 = load i8, i8* %151, align 8, !dbg !4950
  %153 = zext i8 %152 to i32, !dbg !4948
  %154 = icmp eq i32 %153, 1, !dbg !4951
  br i1 %154, label %155, label %159, !dbg !4952

; <label>:155:                                    ; preds = %149
  %156 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %6, i32 0, i32 0, !dbg !4953
  %157 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i32 0, i32 0, !dbg !4954
  %158 = load i32, i32* %9, align 4, !dbg !4955
  call void @HXrbtree_dmov(%struct.HXrbtree_node** %156, i8* %157, i32 %158), !dbg !4956
  br label %159, !dbg !4956

; <label>:159:                                    ; preds = %155, %149
  %160 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4957
  %161 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %160, i32 0, i32 0, !dbg !4959
  %162 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %161, i32 0, i32 5, !dbg !4960
  %163 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %162, i32 0, i32 2, !dbg !4961
  %164 = load void (i8*)*, void (i8*)** %163, align 8, !dbg !4961
  %165 = icmp ne void (i8*)* %164, null, !dbg !4962
  br i1 %165, label %166, label %176, !dbg !4963

; <label>:166:                                    ; preds = %159
  %167 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4964
  %168 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %167, i32 0, i32 0, !dbg !4965
  %169 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %168, i32 0, i32 5, !dbg !4966
  %170 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %169, i32 0, i32 2, !dbg !4967
  %171 = load void (i8*)*, void (i8*)** %170, align 8, !dbg !4967
  %172 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4968
  %173 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %172, i32 0, i32 1, !dbg !4969
  %174 = bitcast %union.anon* %173 to i8**, !dbg !4969
  %175 = load i8*, i8** %174, align 8, !dbg !4969
  call void %171(i8* %175), !dbg !4964
  br label %176, !dbg !4964

; <label>:176:                                    ; preds = %166, %159
  %177 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4970
  %178 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %177, i32 0, i32 0, !dbg !4972
  %179 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %178, i32 0, i32 5, !dbg !4973
  %180 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %179, i32 0, i32 4, !dbg !4974
  %181 = load void (i8*)*, void (i8*)** %180, align 8, !dbg !4974
  %182 = icmp ne void (i8*)* %181, null, !dbg !4975
  br i1 %182, label %183, label %193, !dbg !4976

; <label>:183:                                    ; preds = %176
  %184 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !4977
  %185 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %184, i32 0, i32 0, !dbg !4978
  %186 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %185, i32 0, i32 5, !dbg !4979
  %187 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %186, i32 0, i32 4, !dbg !4980
  %188 = load void (i8*)*, void (i8*)** %187, align 8, !dbg !4980
  %189 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4981
  %190 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %189, i32 0, i32 2, !dbg !4982
  %191 = bitcast %union.anon* %190 to i8**, !dbg !4982
  %192 = load i8*, i8** %191, align 8, !dbg !4982
  call void %188(i8* %192), !dbg !4977
  br label %193, !dbg !4977

; <label>:193:                                    ; preds = %183, %176
  %194 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !4983
  %195 = bitcast %struct.HXrbtree_node* %194 to i8*, !dbg !4983
  call void @free(i8* %195) #7, !dbg !4984
  %196 = call i32* @__errno_location() #11, !dbg !4985
  store i32 0, i32* %196, align 4, !dbg !4986
  %197 = load i8*, i8** %10, align 8, !dbg !4987
  store i8* %197, i8** %3, align 8, !dbg !4988
  br label %198, !dbg !4988

; <label>:198:                                    ; preds = %193, %76, %16
  %199 = load i8*, i8** %3, align 8, !dbg !4989
  ret i8* %199, !dbg !4989
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXrbtree_del_mm(%struct.HXrbtree_node**, i8*, i32) #0 !dbg !4990 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.HXrbtree_node**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.HXrbtree_node*, align 8
  %9 = alloca %struct.HXrbtree_node*, align 8
  %10 = alloca %struct.HXrbtree_node*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  store %struct.HXrbtree_node** %0, %struct.HXrbtree_node*** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node*** %5, metadata !4994, metadata !DIExpression()), !dbg !4995
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4996, metadata !DIExpression()), !dbg !4997
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %8, metadata !5000, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %9, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %10, metadata !5004, metadata !DIExpression()), !dbg !5005
  %13 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !5006
  %14 = load i32, i32* %7, align 4, !dbg !5007
  %15 = zext i32 %14 to i64, !dbg !5006
  %16 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %13, i64 %15, !dbg !5006
  %17 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %16, align 8, !dbg !5006
  store %struct.HXrbtree_node* %17, %struct.HXrbtree_node** %10, align 8, !dbg !5005
  call void @llvm.dbg.declare(metadata i8* %11, metadata !5008, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5010, metadata !DIExpression()), !dbg !5011
  %18 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5012
  %19 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %18, i32 0, i32 0, !dbg !5013
  %20 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %19, i64 0, i64 1, !dbg !5012
  %21 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %20, align 8, !dbg !5012
  store %struct.HXrbtree_node* %21, %struct.HXrbtree_node** %8, align 8, !dbg !5014
  %22 = load i8*, i8** %6, align 8, !dbg !5015
  %23 = load i32, i32* %7, align 4, !dbg !5016
  %24 = zext i32 %23 to i64, !dbg !5015
  %25 = getelementptr inbounds i8, i8* %22, i64 %24, !dbg !5015
  store i8 1, i8* %25, align 1, !dbg !5017
  %26 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5018
  %27 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %26, i32 0, i32 0, !dbg !5020
  %28 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %27, i64 0, i64 0, !dbg !5018
  %29 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %28, align 8, !dbg !5018
  %30 = icmp eq %struct.HXrbtree_node* %29, null, !dbg !5021
  br i1 %30, label %31, label %73, !dbg !5022

; <label>:31:                                     ; preds = %3
  %32 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5023
  %33 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %32, i32 0, i32 0, !dbg !5025
  %34 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %33, i64 0, i64 0, !dbg !5023
  %35 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %34, align 8, !dbg !5023
  %36 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5026
  %37 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %36, i32 0, i32 0, !dbg !5027
  %38 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %37, i64 0, i64 0, !dbg !5026
  store %struct.HXrbtree_node* %35, %struct.HXrbtree_node** %38, align 8, !dbg !5028
  %39 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5029
  %40 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %39, i32 0, i32 3, !dbg !5030
  %41 = load i8, i8* %40, align 8, !dbg !5030
  store i8 %41, i8* %11, align 1, !dbg !5031
  %42 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5032
  %43 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %42, i32 0, i32 3, !dbg !5033
  %44 = load i8, i8* %43, align 8, !dbg !5033
  %45 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5034
  %46 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %45, i32 0, i32 3, !dbg !5035
  store i8 %44, i8* %46, align 8, !dbg !5036
  %47 = load i8, i8* %11, align 1, !dbg !5037
  %48 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5038
  %49 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %48, i32 0, i32 3, !dbg !5039
  store i8 %47, i8* %49, align 8, !dbg !5040
  %50 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5041
  %51 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !5042
  %52 = load i32, i32* %7, align 4, !dbg !5043
  %53 = sub i32 %52, 1, !dbg !5044
  %54 = zext i32 %53 to i64, !dbg !5042
  %55 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %51, i64 %54, !dbg !5042
  %56 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %55, align 8, !dbg !5042
  %57 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %56, i32 0, i32 0, !dbg !5045
  %58 = load i8*, i8** %6, align 8, !dbg !5046
  %59 = load i32, i32* %7, align 4, !dbg !5047
  %60 = sub i32 %59, 1, !dbg !5048
  %61 = zext i32 %60 to i64, !dbg !5046
  %62 = getelementptr inbounds i8, i8* %58, i64 %61, !dbg !5046
  %63 = load i8, i8* %62, align 1, !dbg !5046
  %64 = zext i8 %63 to i64, !dbg !5042
  %65 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %57, i64 0, i64 %64, !dbg !5042
  store %struct.HXrbtree_node* %50, %struct.HXrbtree_node** %65, align 8, !dbg !5049
  %66 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5050
  %67 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !5051
  %68 = load i32, i32* %7, align 4, !dbg !5052
  %69 = add i32 %68, 1, !dbg !5052
  store i32 %69, i32* %7, align 4, !dbg !5052
  %70 = zext i32 %68 to i64, !dbg !5051
  %71 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %67, i64 %70, !dbg !5051
  store %struct.HXrbtree_node* %66, %struct.HXrbtree_node** %71, align 8, !dbg !5053
  %72 = load i32, i32* %7, align 4, !dbg !5054
  store i32 %72, i32* %4, align 4, !dbg !5055
  br label %152, !dbg !5055

; <label>:73:                                     ; preds = %3
  %74 = load i32, i32* %7, align 4, !dbg !5056
  %75 = add i32 %74, 1, !dbg !5056
  store i32 %75, i32* %7, align 4, !dbg !5056
  store i32 %74, i32* %12, align 4, !dbg !5057
  br label %76, !dbg !5058

; <label>:76:                                     ; preds = %92, %73
  %77 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5059
  store %struct.HXrbtree_node* %77, %struct.HXrbtree_node** %9, align 8, !dbg !5061
  %78 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !5062
  %79 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !5063
  %80 = load i32, i32* %7, align 4, !dbg !5064
  %81 = zext i32 %80 to i64, !dbg !5063
  %82 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %79, i64 %81, !dbg !5063
  store %struct.HXrbtree_node* %78, %struct.HXrbtree_node** %82, align 8, !dbg !5065
  %83 = load i8*, i8** %6, align 8, !dbg !5066
  %84 = load i32, i32* %7, align 4, !dbg !5067
  %85 = add i32 %84, 1, !dbg !5067
  store i32 %85, i32* %7, align 4, !dbg !5067
  %86 = zext i32 %84 to i64, !dbg !5066
  %87 = getelementptr inbounds i8, i8* %83, i64 %86, !dbg !5066
  store i8 0, i8* %87, align 1, !dbg !5068
  %88 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !5069
  %89 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %88, i32 0, i32 0, !dbg !5070
  %90 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %89, i64 0, i64 0, !dbg !5069
  %91 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %90, align 8, !dbg !5069
  store %struct.HXrbtree_node* %91, %struct.HXrbtree_node** %8, align 8, !dbg !5071
  br label %92, !dbg !5072

; <label>:92:                                     ; preds = %76
  %93 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5073
  %94 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %93, i32 0, i32 0, !dbg !5074
  %95 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %94, i64 0, i64 0, !dbg !5073
  %96 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %95, align 8, !dbg !5073
  %97 = icmp ne %struct.HXrbtree_node* %96, null, !dbg !5075
  br i1 %97, label %76, label %98, !dbg !5072, !llvm.loop !5076

; <label>:98:                                     ; preds = %92
  %99 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5078
  %100 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !5079
  %101 = load i32, i32* %12, align 4, !dbg !5080
  %102 = zext i32 %101 to i64, !dbg !5079
  %103 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %100, i64 %102, !dbg !5079
  store %struct.HXrbtree_node* %99, %struct.HXrbtree_node** %103, align 8, !dbg !5081
  %104 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %5, align 8, !dbg !5082
  %105 = load i32, i32* %12, align 4, !dbg !5083
  %106 = sub i32 %105, 1, !dbg !5084
  %107 = zext i32 %106 to i64, !dbg !5082
  %108 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %104, i64 %107, !dbg !5082
  %109 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %108, align 8, !dbg !5082
  %110 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %109, i32 0, i32 0, !dbg !5085
  %111 = load i8*, i8** %6, align 8, !dbg !5086
  %112 = load i32, i32* %12, align 4, !dbg !5087
  %113 = sub i32 %112, 1, !dbg !5088
  %114 = zext i32 %113 to i64, !dbg !5086
  %115 = getelementptr inbounds i8, i8* %111, i64 %114, !dbg !5086
  %116 = load i8, i8* %115, align 1, !dbg !5086
  %117 = zext i8 %116 to i64, !dbg !5082
  %118 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %110, i64 0, i64 %117, !dbg !5082
  store %struct.HXrbtree_node* %99, %struct.HXrbtree_node** %118, align 8, !dbg !5089
  %119 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5090
  %120 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %119, i32 0, i32 0, !dbg !5091
  %121 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %120, i64 0, i64 1, !dbg !5090
  %122 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %121, align 8, !dbg !5090
  %123 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !5092
  %124 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %123, i32 0, i32 0, !dbg !5093
  %125 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %124, i64 0, i64 0, !dbg !5092
  store %struct.HXrbtree_node* %122, %struct.HXrbtree_node** %125, align 8, !dbg !5094
  %126 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5095
  %127 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %126, i32 0, i32 0, !dbg !5096
  %128 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %127, i64 0, i64 0, !dbg !5095
  %129 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %128, align 8, !dbg !5095
  %130 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5097
  %131 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %130, i32 0, i32 0, !dbg !5098
  %132 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %131, i64 0, i64 0, !dbg !5097
  store %struct.HXrbtree_node* %129, %struct.HXrbtree_node** %132, align 8, !dbg !5099
  %133 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5100
  %134 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %133, i32 0, i32 0, !dbg !5101
  %135 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %134, i64 0, i64 1, !dbg !5100
  %136 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %135, align 8, !dbg !5100
  %137 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5102
  %138 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %137, i32 0, i32 0, !dbg !5103
  %139 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %138, i64 0, i64 1, !dbg !5102
  store %struct.HXrbtree_node* %136, %struct.HXrbtree_node** %139, align 8, !dbg !5104
  %140 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5105
  %141 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %140, i32 0, i32 3, !dbg !5106
  %142 = load i8, i8* %141, align 8, !dbg !5106
  store i8 %142, i8* %11, align 1, !dbg !5107
  %143 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5108
  %144 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %143, i32 0, i32 3, !dbg !5109
  %145 = load i8, i8* %144, align 8, !dbg !5109
  %146 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5110
  %147 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %146, i32 0, i32 3, !dbg !5111
  store i8 %145, i8* %147, align 8, !dbg !5112
  %148 = load i8, i8* %11, align 1, !dbg !5113
  %149 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5114
  %150 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %149, i32 0, i32 3, !dbg !5115
  store i8 %148, i8* %150, align 8, !dbg !5116
  %151 = load i32, i32* %7, align 4, !dbg !5117
  store i32 %151, i32* %4, align 4, !dbg !5118
  br label %152, !dbg !5118

; <label>:152:                                    ; preds = %98, %31
  %153 = load i32, i32* %4, align 4, !dbg !5119
  ret i32 %153, !dbg !5119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtree_dmov(%struct.HXrbtree_node**, i8*, i32) #0 !dbg !5120 {
  %4 = alloca %struct.HXrbtree_node**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.HXrbtree_node*, align 8
  %8 = alloca %struct.HXrbtree_node*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.HXrbtree_node*, align 8
  store %struct.HXrbtree_node** %0, %struct.HXrbtree_node*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node*** %4, metadata !5123, metadata !DIExpression()), !dbg !5124
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5125, metadata !DIExpression()), !dbg !5126
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5127, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %7, metadata !5129, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %8, metadata !5131, metadata !DIExpression()), !dbg !5132
  br label %11, !dbg !5133

; <label>:11:                                     ; preds = %200, %3
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5134, metadata !DIExpression()), !dbg !5136
  %12 = load i8*, i8** %5, align 8, !dbg !5137
  %13 = load i32, i32* %6, align 4, !dbg !5138
  %14 = sub i32 %13, 1, !dbg !5139
  %15 = zext i32 %14 to i64, !dbg !5137
  %16 = getelementptr inbounds i8, i8* %12, i64 %15, !dbg !5137
  %17 = load i8, i8* %16, align 1, !dbg !5137
  store i8 %17, i8* %9, align 1, !dbg !5136
  %18 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5140
  %19 = load i32, i32* %6, align 4, !dbg !5141
  %20 = sub i32 %19, 1, !dbg !5142
  %21 = zext i32 %20 to i64, !dbg !5140
  %22 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %18, i64 %21, !dbg !5140
  %23 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %22, align 8, !dbg !5140
  %24 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %23, i32 0, i32 0, !dbg !5143
  %25 = load i8, i8* %9, align 1, !dbg !5144
  %26 = zext i8 %25 to i64, !dbg !5140
  %27 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %24, i64 0, i64 %26, !dbg !5140
  %28 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %27, align 8, !dbg !5140
  store %struct.HXrbtree_node* %28, %struct.HXrbtree_node** %8, align 8, !dbg !5145
  %29 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5146
  %30 = icmp ne %struct.HXrbtree_node* %29, null, !dbg !5148
  br i1 %30, label %31, label %40, !dbg !5149

; <label>:31:                                     ; preds = %11
  %32 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5150
  %33 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %32, i32 0, i32 3, !dbg !5151
  %34 = load i8, i8* %33, align 8, !dbg !5151
  %35 = zext i8 %34 to i32, !dbg !5150
  %36 = icmp eq i32 %35, 0, !dbg !5152
  br i1 %36, label %37, label %40, !dbg !5153

; <label>:37:                                     ; preds = %31
  %38 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %8, align 8, !dbg !5154
  %39 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %38, i32 0, i32 3, !dbg !5156
  store i8 1, i8* %39, align 8, !dbg !5157
  br label %352, !dbg !5158

; <label>:40:                                     ; preds = %31, %11
  %41 = load i32, i32* %6, align 4, !dbg !5159
  %42 = icmp ult i32 %41, 2, !dbg !5161
  br i1 %42, label %43, label %44, !dbg !5162

; <label>:43:                                     ; preds = %40
  br label %352, !dbg !5163

; <label>:44:                                     ; preds = %40
  %45 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5164
  %46 = load i32, i32* %6, align 4, !dbg !5165
  %47 = sub i32 %46, 1, !dbg !5166
  %48 = zext i32 %47 to i64, !dbg !5164
  %49 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %45, i64 %48, !dbg !5164
  %50 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %49, align 8, !dbg !5164
  %51 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %50, i32 0, i32 0, !dbg !5167
  %52 = load i8, i8* %9, align 1, !dbg !5168
  %53 = icmp ne i8 %52, 0, !dbg !5169
  %54 = xor i1 %53, true, !dbg !5169
  %55 = zext i1 %54 to i32, !dbg !5169
  %56 = sext i32 %55 to i64, !dbg !5164
  %57 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %51, i64 0, i64 %56, !dbg !5164
  %58 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %57, align 8, !dbg !5164
  store %struct.HXrbtree_node* %58, %struct.HXrbtree_node** %7, align 8, !dbg !5170
  %59 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5171
  %60 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %59, i32 0, i32 3, !dbg !5173
  %61 = load i8, i8* %60, align 8, !dbg !5173
  %62 = zext i8 %61 to i32, !dbg !5171
  %63 = icmp eq i32 %62, 0, !dbg !5174
  br i1 %63, label %64, label %156, !dbg !5175

; <label>:64:                                     ; preds = %44
  %65 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5176
  %66 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %65, i32 0, i32 3, !dbg !5178
  store i8 1, i8* %66, align 8, !dbg !5179
  %67 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5180
  %68 = load i32, i32* %6, align 4, !dbg !5181
  %69 = sub i32 %68, 1, !dbg !5182
  %70 = zext i32 %69 to i64, !dbg !5180
  %71 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %67, i64 %70, !dbg !5180
  %72 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %71, align 8, !dbg !5180
  %73 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %72, i32 0, i32 3, !dbg !5183
  store i8 0, i8* %73, align 8, !dbg !5184
  %74 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5185
  %75 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %74, i32 0, i32 0, !dbg !5186
  %76 = load i8, i8* %9, align 1, !dbg !5187
  %77 = zext i8 %76 to i64, !dbg !5185
  %78 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %75, i64 0, i64 %77, !dbg !5185
  %79 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %78, align 8, !dbg !5185
  %80 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5188
  %81 = load i32, i32* %6, align 4, !dbg !5189
  %82 = sub i32 %81, 1, !dbg !5190
  %83 = zext i32 %82 to i64, !dbg !5188
  %84 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %80, i64 %83, !dbg !5188
  %85 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %84, align 8, !dbg !5188
  %86 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %85, i32 0, i32 0, !dbg !5191
  %87 = load i8, i8* %9, align 1, !dbg !5192
  %88 = icmp ne i8 %87, 0, !dbg !5193
  %89 = xor i1 %88, true, !dbg !5193
  %90 = zext i1 %89 to i32, !dbg !5193
  %91 = sext i32 %90 to i64, !dbg !5188
  %92 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %86, i64 0, i64 %91, !dbg !5188
  store %struct.HXrbtree_node* %79, %struct.HXrbtree_node** %92, align 8, !dbg !5194
  %93 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5195
  %94 = load i32, i32* %6, align 4, !dbg !5196
  %95 = sub i32 %94, 1, !dbg !5197
  %96 = zext i32 %95 to i64, !dbg !5195
  %97 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %93, i64 %96, !dbg !5195
  %98 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %97, align 8, !dbg !5195
  %99 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5198
  %100 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %99, i32 0, i32 0, !dbg !5199
  %101 = load i8, i8* %9, align 1, !dbg !5200
  %102 = zext i8 %101 to i64, !dbg !5198
  %103 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %100, i64 0, i64 %102, !dbg !5198
  store %struct.HXrbtree_node* %98, %struct.HXrbtree_node** %103, align 8, !dbg !5201
  %104 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5202
  %105 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5203
  %106 = load i32, i32* %6, align 4, !dbg !5204
  %107 = sub i32 %106, 2, !dbg !5205
  %108 = zext i32 %107 to i64, !dbg !5203
  %109 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %105, i64 %108, !dbg !5203
  %110 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %109, align 8, !dbg !5203
  %111 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %110, i32 0, i32 0, !dbg !5206
  %112 = load i8*, i8** %5, align 8, !dbg !5207
  %113 = load i32, i32* %6, align 4, !dbg !5208
  %114 = sub i32 %113, 2, !dbg !5209
  %115 = zext i32 %114 to i64, !dbg !5207
  %116 = getelementptr inbounds i8, i8* %112, i64 %115, !dbg !5207
  %117 = load i8, i8* %116, align 1, !dbg !5207
  %118 = zext i8 %117 to i64, !dbg !5203
  %119 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %111, i64 0, i64 %118, !dbg !5203
  store %struct.HXrbtree_node* %104, %struct.HXrbtree_node** %119, align 8, !dbg !5210
  %120 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5211
  %121 = load i32, i32* %6, align 4, !dbg !5212
  %122 = sub i32 %121, 1, !dbg !5213
  %123 = zext i32 %122 to i64, !dbg !5211
  %124 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %120, i64 %123, !dbg !5211
  %125 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %124, align 8, !dbg !5211
  %126 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5214
  %127 = load i32, i32* %6, align 4, !dbg !5215
  %128 = zext i32 %127 to i64, !dbg !5214
  %129 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %126, i64 %128, !dbg !5214
  store %struct.HXrbtree_node* %125, %struct.HXrbtree_node** %129, align 8, !dbg !5216
  %130 = load i8, i8* %9, align 1, !dbg !5217
  %131 = load i8*, i8** %5, align 8, !dbg !5218
  %132 = load i32, i32* %6, align 4, !dbg !5219
  %133 = zext i32 %132 to i64, !dbg !5218
  %134 = getelementptr inbounds i8, i8* %131, i64 %133, !dbg !5218
  store i8 %130, i8* %134, align 1, !dbg !5220
  %135 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5221
  %136 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5222
  %137 = load i32, i32* %6, align 4, !dbg !5223
  %138 = sub i32 %137, 1, !dbg !5224
  %139 = zext i32 %138 to i64, !dbg !5222
  %140 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %136, i64 %139, !dbg !5222
  store %struct.HXrbtree_node* %135, %struct.HXrbtree_node** %140, align 8, !dbg !5225
  %141 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5226
  %142 = load i32, i32* %6, align 4, !dbg !5227
  %143 = add i32 %142, 1, !dbg !5227
  store i32 %143, i32* %6, align 4, !dbg !5227
  %144 = sub i32 %143, 1, !dbg !5228
  %145 = zext i32 %144 to i64, !dbg !5226
  %146 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %141, i64 %145, !dbg !5226
  %147 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %146, align 8, !dbg !5226
  %148 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %147, i32 0, i32 0, !dbg !5229
  %149 = load i8, i8* %9, align 1, !dbg !5230
  %150 = icmp ne i8 %149, 0, !dbg !5231
  %151 = xor i1 %150, true, !dbg !5231
  %152 = zext i1 %151 to i32, !dbg !5231
  %153 = sext i32 %152 to i64, !dbg !5226
  %154 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %148, i64 0, i64 %153, !dbg !5226
  %155 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %154, align 8, !dbg !5226
  store %struct.HXrbtree_node* %155, %struct.HXrbtree_node** %7, align 8, !dbg !5232
  br label %156, !dbg !5233

; <label>:156:                                    ; preds = %64, %44
  %157 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5234
  %158 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %157, i32 0, i32 0, !dbg !5236
  %159 = load i8, i8* %9, align 1, !dbg !5237
  %160 = zext i8 %159 to i64, !dbg !5234
  %161 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %158, i64 0, i64 %160, !dbg !5234
  %162 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %161, align 8, !dbg !5234
  %163 = icmp eq %struct.HXrbtree_node* %162, null, !dbg !5238
  br i1 %163, label %175, label %164, !dbg !5239

; <label>:164:                                    ; preds = %156
  %165 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5240
  %166 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %165, i32 0, i32 0, !dbg !5241
  %167 = load i8, i8* %9, align 1, !dbg !5242
  %168 = zext i8 %167 to i64, !dbg !5240
  %169 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %166, i64 0, i64 %168, !dbg !5240
  %170 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %169, align 8, !dbg !5240
  %171 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %170, i32 0, i32 3, !dbg !5243
  %172 = load i8, i8* %171, align 8, !dbg !5243
  %173 = zext i8 %172 to i32, !dbg !5240
  %174 = icmp eq i32 %173, 1, !dbg !5244
  br i1 %174, label %175, label %205, !dbg !5245

; <label>:175:                                    ; preds = %164, %156
  %176 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5246
  %177 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %176, i32 0, i32 0, !dbg !5247
  %178 = load i8, i8* %9, align 1, !dbg !5248
  %179 = icmp ne i8 %178, 0, !dbg !5249
  %180 = xor i1 %179, true, !dbg !5249
  %181 = zext i1 %180 to i32, !dbg !5249
  %182 = sext i32 %181 to i64, !dbg !5246
  %183 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %177, i64 0, i64 %182, !dbg !5246
  %184 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %183, align 8, !dbg !5246
  %185 = icmp eq %struct.HXrbtree_node* %184, null, !dbg !5250
  br i1 %185, label %200, label %186, !dbg !5251

; <label>:186:                                    ; preds = %175
  %187 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5252
  %188 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %187, i32 0, i32 0, !dbg !5253
  %189 = load i8, i8* %9, align 1, !dbg !5254
  %190 = icmp ne i8 %189, 0, !dbg !5255
  %191 = xor i1 %190, true, !dbg !5255
  %192 = zext i1 %191 to i32, !dbg !5255
  %193 = sext i32 %192 to i64, !dbg !5252
  %194 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %188, i64 0, i64 %193, !dbg !5252
  %195 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %194, align 8, !dbg !5252
  %196 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %195, i32 0, i32 3, !dbg !5256
  %197 = load i8, i8* %196, align 8, !dbg !5256
  %198 = zext i8 %197 to i32, !dbg !5252
  %199 = icmp eq i32 %198, 1, !dbg !5257
  br i1 %199, label %200, label %205, !dbg !5258

; <label>:200:                                    ; preds = %186, %175
  %201 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5259
  %202 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %201, i32 0, i32 3, !dbg !5261
  store i8 0, i8* %202, align 8, !dbg !5262
  %203 = load i32, i32* %6, align 4, !dbg !5263
  %204 = add i32 %203, -1, !dbg !5263
  store i32 %204, i32* %6, align 4, !dbg !5263
  br label %11, !dbg !5264, !llvm.loop !5265

; <label>:205:                                    ; preds = %186, %164
  %206 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5267
  %207 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %206, i32 0, i32 0, !dbg !5269
  %208 = load i8, i8* %9, align 1, !dbg !5270
  %209 = icmp ne i8 %208, 0, !dbg !5271
  %210 = xor i1 %209, true, !dbg !5271
  %211 = zext i1 %210 to i32, !dbg !5271
  %212 = sext i32 %211 to i64, !dbg !5267
  %213 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %207, i64 0, i64 %212, !dbg !5267
  %214 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %213, align 8, !dbg !5267
  %215 = icmp eq %struct.HXrbtree_node* %214, null, !dbg !5272
  br i1 %215, label %230, label %216, !dbg !5273

; <label>:216:                                    ; preds = %205
  %217 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5274
  %218 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %217, i32 0, i32 0, !dbg !5275
  %219 = load i8, i8* %9, align 1, !dbg !5276
  %220 = icmp ne i8 %219, 0, !dbg !5277
  %221 = xor i1 %220, true, !dbg !5277
  %222 = zext i1 %221 to i32, !dbg !5277
  %223 = sext i32 %222 to i64, !dbg !5274
  %224 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %218, i64 0, i64 %223, !dbg !5274
  %225 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %224, align 8, !dbg !5274
  %226 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %225, i32 0, i32 3, !dbg !5278
  %227 = load i8, i8* %226, align 8, !dbg !5278
  %228 = zext i8 %227 to i32, !dbg !5274
  %229 = icmp eq i32 %228, 1, !dbg !5279
  br i1 %229, label %230, label %278, !dbg !5280

; <label>:230:                                    ; preds = %216, %205
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %10, metadata !5281, metadata !DIExpression()), !dbg !5283
  %231 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5284
  %232 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %231, i32 0, i32 0, !dbg !5285
  %233 = load i8, i8* %9, align 1, !dbg !5286
  %234 = zext i8 %233 to i64, !dbg !5284
  %235 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %232, i64 0, i64 %234, !dbg !5284
  %236 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %235, align 8, !dbg !5284
  store %struct.HXrbtree_node* %236, %struct.HXrbtree_node** %10, align 8, !dbg !5283
  %237 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5287
  %238 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %237, i32 0, i32 3, !dbg !5288
  store i8 1, i8* %238, align 8, !dbg !5289
  %239 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5290
  %240 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %239, i32 0, i32 3, !dbg !5291
  store i8 0, i8* %240, align 8, !dbg !5292
  %241 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5293
  %242 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %241, i32 0, i32 0, !dbg !5294
  %243 = load i8, i8* %9, align 1, !dbg !5295
  %244 = icmp ne i8 %243, 0, !dbg !5296
  %245 = xor i1 %244, true, !dbg !5296
  %246 = zext i1 %245 to i32, !dbg !5296
  %247 = sext i32 %246 to i64, !dbg !5293
  %248 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %242, i64 0, i64 %247, !dbg !5293
  %249 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %248, align 8, !dbg !5293
  %250 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5297
  %251 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %250, i32 0, i32 0, !dbg !5298
  %252 = load i8, i8* %9, align 1, !dbg !5299
  %253 = zext i8 %252 to i64, !dbg !5297
  %254 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %251, i64 0, i64 %253, !dbg !5297
  store %struct.HXrbtree_node* %249, %struct.HXrbtree_node** %254, align 8, !dbg !5300
  %255 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5301
  %256 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5302
  %257 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %256, i32 0, i32 0, !dbg !5303
  %258 = load i8, i8* %9, align 1, !dbg !5304
  %259 = icmp ne i8 %258, 0, !dbg !5305
  %260 = xor i1 %259, true, !dbg !5305
  %261 = zext i1 %260 to i32, !dbg !5305
  %262 = sext i32 %261 to i64, !dbg !5302
  %263 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %257, i64 0, i64 %262, !dbg !5302
  store %struct.HXrbtree_node* %255, %struct.HXrbtree_node** %263, align 8, !dbg !5306
  %264 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !5307
  %265 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5308
  %266 = load i32, i32* %6, align 4, !dbg !5309
  %267 = sub i32 %266, 1, !dbg !5310
  %268 = zext i32 %267 to i64, !dbg !5308
  %269 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %265, i64 %268, !dbg !5308
  %270 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %269, align 8, !dbg !5308
  %271 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %270, i32 0, i32 0, !dbg !5311
  %272 = load i8, i8* %9, align 1, !dbg !5312
  %273 = icmp ne i8 %272, 0, !dbg !5313
  %274 = xor i1 %273, true, !dbg !5313
  %275 = zext i1 %274 to i32, !dbg !5313
  %276 = sext i32 %275 to i64, !dbg !5308
  %277 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %271, i64 0, i64 %276, !dbg !5308
  store %struct.HXrbtree_node* %264, %struct.HXrbtree_node** %277, align 8, !dbg !5314
  store %struct.HXrbtree_node* %264, %struct.HXrbtree_node** %7, align 8, !dbg !5315
  br label %278, !dbg !5316

; <label>:278:                                    ; preds = %230, %216
  %279 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5317
  %280 = load i32, i32* %6, align 4, !dbg !5318
  %281 = sub i32 %280, 1, !dbg !5319
  %282 = zext i32 %281 to i64, !dbg !5317
  %283 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %279, i64 %282, !dbg !5317
  %284 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %283, align 8, !dbg !5317
  %285 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %284, i32 0, i32 3, !dbg !5320
  %286 = load i8, i8* %285, align 8, !dbg !5320
  %287 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5321
  %288 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %287, i32 0, i32 3, !dbg !5322
  store i8 %286, i8* %288, align 8, !dbg !5323
  %289 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5324
  %290 = load i32, i32* %6, align 4, !dbg !5325
  %291 = sub i32 %290, 1, !dbg !5326
  %292 = zext i32 %291 to i64, !dbg !5324
  %293 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %289, i64 %292, !dbg !5324
  %294 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %293, align 8, !dbg !5324
  %295 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %294, i32 0, i32 3, !dbg !5327
  store i8 1, i8* %295, align 8, !dbg !5328
  %296 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5329
  %297 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %296, i32 0, i32 0, !dbg !5330
  %298 = load i8, i8* %9, align 1, !dbg !5331
  %299 = icmp ne i8 %298, 0, !dbg !5332
  %300 = xor i1 %299, true, !dbg !5332
  %301 = zext i1 %300 to i32, !dbg !5332
  %302 = sext i32 %301 to i64, !dbg !5329
  %303 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %297, i64 0, i64 %302, !dbg !5329
  %304 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %303, align 8, !dbg !5329
  %305 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %304, i32 0, i32 3, !dbg !5333
  store i8 1, i8* %305, align 8, !dbg !5334
  %306 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5335
  %307 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %306, i32 0, i32 0, !dbg !5336
  %308 = load i8, i8* %9, align 1, !dbg !5337
  %309 = zext i8 %308 to i64, !dbg !5335
  %310 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %307, i64 0, i64 %309, !dbg !5335
  %311 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %310, align 8, !dbg !5335
  %312 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5338
  %313 = load i32, i32* %6, align 4, !dbg !5339
  %314 = sub i32 %313, 1, !dbg !5340
  %315 = zext i32 %314 to i64, !dbg !5338
  %316 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %312, i64 %315, !dbg !5338
  %317 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %316, align 8, !dbg !5338
  %318 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %317, i32 0, i32 0, !dbg !5341
  %319 = load i8, i8* %9, align 1, !dbg !5342
  %320 = icmp ne i8 %319, 0, !dbg !5343
  %321 = xor i1 %320, true, !dbg !5343
  %322 = zext i1 %321 to i32, !dbg !5343
  %323 = sext i32 %322 to i64, !dbg !5338
  %324 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %318, i64 0, i64 %323, !dbg !5338
  store %struct.HXrbtree_node* %311, %struct.HXrbtree_node** %324, align 8, !dbg !5344
  %325 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5345
  %326 = load i32, i32* %6, align 4, !dbg !5346
  %327 = sub i32 %326, 1, !dbg !5347
  %328 = zext i32 %327 to i64, !dbg !5345
  %329 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %325, i64 %328, !dbg !5345
  %330 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %329, align 8, !dbg !5345
  %331 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5348
  %332 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %331, i32 0, i32 0, !dbg !5349
  %333 = load i8, i8* %9, align 1, !dbg !5350
  %334 = zext i8 %333 to i64, !dbg !5348
  %335 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %332, i64 0, i64 %334, !dbg !5348
  store %struct.HXrbtree_node* %330, %struct.HXrbtree_node** %335, align 8, !dbg !5351
  %336 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5352
  %337 = load %struct.HXrbtree_node**, %struct.HXrbtree_node*** %4, align 8, !dbg !5353
  %338 = load i32, i32* %6, align 4, !dbg !5354
  %339 = sub i32 %338, 2, !dbg !5355
  %340 = zext i32 %339 to i64, !dbg !5353
  %341 = getelementptr inbounds %struct.HXrbtree_node*, %struct.HXrbtree_node** %337, i64 %340, !dbg !5353
  %342 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %341, align 8, !dbg !5353
  %343 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %342, i32 0, i32 0, !dbg !5356
  %344 = load i8*, i8** %5, align 8, !dbg !5357
  %345 = load i32, i32* %6, align 4, !dbg !5358
  %346 = sub i32 %345, 2, !dbg !5359
  %347 = zext i32 %346 to i64, !dbg !5357
  %348 = getelementptr inbounds i8, i8* %344, i64 %347, !dbg !5357
  %349 = load i8, i8* %348, align 1, !dbg !5357
  %350 = zext i8 %349 to i64, !dbg !5353
  %351 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %343, i64 0, i64 %350, !dbg !5353
  store %struct.HXrbtree_node* %336, %struct.HXrbtree_node** %351, align 8, !dbg !5360
  br label %352, !dbg !5361

; <label>:352:                                    ; preds = %278, %43, %37
  ret void, !dbg !5362
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap_node* @HXmap_keysvalues(%struct.HXmap*) #0 !dbg !5363 {
  %2 = alloca %struct.HXmap_node*, align 8
  %3 = alloca %struct.HXmap*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.HXmap_private*, align 8
  %6 = alloca %struct.HXmap_node*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %3, metadata !5367, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5369, metadata !DIExpression()), !dbg !5370
  %7 = load %struct.HXmap*, %struct.HXmap** %3, align 8, !dbg !5371
  %8 = bitcast %struct.HXmap* %7 to i8*, !dbg !5371
  store i8* %8, i8** %4, align 8, !dbg !5370
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %5, metadata !5372, metadata !DIExpression()), !dbg !5373
  %9 = load i8*, i8** %4, align 8, !dbg !5374
  %10 = bitcast i8* %9 to %struct.HXmap_private*, !dbg !5374
  store %struct.HXmap_private* %10, %struct.HXmap_private** %5, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata %struct.HXmap_node** %6, metadata !5375, metadata !DIExpression()), !dbg !5376
  %11 = load %struct.HXmap_private*, %struct.HXmap_private** %5, align 8, !dbg !5377
  %12 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %11, i32 0, i32 2, !dbg !5378
  %13 = load i32, i32* %12, align 8, !dbg !5378
  switch i32 %13, label %15 [
    i32 1, label %14
    i32 2, label %14
  ], !dbg !5379

; <label>:14:                                     ; preds = %1, %1
  br label %17, !dbg !5380

; <label>:15:                                     ; preds = %1
  %16 = call i32* @__errno_location() #11, !dbg !5382
  store i32 22, i32* %16, align 4, !dbg !5383
  store %struct.HXmap_node* null, %struct.HXmap_node** %2, align 8, !dbg !5384
  br label %44, !dbg !5384

; <label>:17:                                     ; preds = %14
  %18 = load %struct.HXmap_private*, %struct.HXmap_private** %5, align 8, !dbg !5385
  %19 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %18, i32 0, i32 0, !dbg !5387
  %20 = load i32, i32* %19, align 8, !dbg !5387
  %21 = zext i32 %20 to i64, !dbg !5385
  %22 = mul i64 16, %21, !dbg !5388
  %23 = call noalias i8* @malloc(i64 %22) #7, !dbg !5389
  %24 = bitcast i8* %23 to %struct.HXmap_node*, !dbg !5389
  store %struct.HXmap_node* %24, %struct.HXmap_node** %6, align 8, !dbg !5390
  %25 = icmp eq %struct.HXmap_node* %24, null, !dbg !5391
  br i1 %25, label %26, label %27, !dbg !5392

; <label>:26:                                     ; preds = %17
  store %struct.HXmap_node* null, %struct.HXmap_node** %2, align 8, !dbg !5393
  br label %44, !dbg !5393

; <label>:27:                                     ; preds = %17
  %28 = load %struct.HXmap_private*, %struct.HXmap_private** %5, align 8, !dbg !5394
  %29 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %28, i32 0, i32 2, !dbg !5395
  %30 = load i32, i32* %29, align 8, !dbg !5395
  switch i32 %30, label %42 [
    i32 1, label %31
    i32 2, label %35
  ], !dbg !5396

; <label>:31:                                     ; preds = %27
  %32 = load i8*, i8** %4, align 8, !dbg !5397
  %33 = bitcast i8* %32 to %struct.HXhmap*, !dbg !5397
  %34 = load %struct.HXmap_node*, %struct.HXmap_node** %6, align 8, !dbg !5399
  call void @HXhmap_keysvalues(%struct.HXhmap* %33, %struct.HXmap_node* %34), !dbg !5400
  br label %42, !dbg !5401

; <label>:35:                                     ; preds = %27
  %36 = load i8*, i8** %4, align 8, !dbg !5402
  %37 = bitcast i8* %36 to %struct.HXrbtree*, !dbg !5403
  %38 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %37, i32 0, i32 1, !dbg !5404
  %39 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %38, align 8, !dbg !5404
  %40 = load %struct.HXmap_node*, %struct.HXmap_node** %6, align 8, !dbg !5405
  %41 = call %struct.HXmap_node* @HXrbtree_keysvalues(%struct.HXrbtree_node* %39, %struct.HXmap_node* %40), !dbg !5406
  br label %42, !dbg !5407

; <label>:42:                                     ; preds = %35, %31, %27
  %43 = load %struct.HXmap_node*, %struct.HXmap_node** %6, align 8, !dbg !5408
  store %struct.HXmap_node* %43, %struct.HXmap_node** %2, align 8, !dbg !5409
  br label %44, !dbg !5409

; <label>:44:                                     ; preds = %42, %26, %15
  %45 = load %struct.HXmap_node*, %struct.HXmap_node** %2, align 8, !dbg !5410
  ret %struct.HXmap_node* %45, !dbg !5410
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXhmap_keysvalues(%struct.HXhmap*, %struct.HXmap_node*) #0 !dbg !5411 {
  %3 = alloca %struct.HXhmap*, align 8
  %4 = alloca %struct.HXmap_node*, align 8
  %5 = alloca %struct.HXhmap_node*, align 8
  %6 = alloca i32, align 4
  store %struct.HXhmap* %0, %struct.HXhmap** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %3, metadata !5414, metadata !DIExpression()), !dbg !5415
  store %struct.HXmap_node* %1, %struct.HXmap_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_node** %4, metadata !5416, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %5, metadata !5418, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5420, metadata !DIExpression()), !dbg !5421
  store i32 0, i32* %6, align 4, !dbg !5422
  br label %7, !dbg !5424

; <label>:7:                                      ; preds = %66, %2
  %8 = load i32, i32* %6, align 4, !dbg !5425
  %9 = load %struct.HXhmap*, %struct.HXhmap** %3, align 8, !dbg !5427
  %10 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %9, i32 0, i32 2, !dbg !5428
  %11 = load i32, i32* %10, align 8, !dbg !5428
  %12 = zext i32 %11 to i64, !dbg !5429
  %13 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %12, !dbg !5429
  %14 = load i32, i32* %13, align 4, !dbg !5429
  %15 = icmp ult i32 %8, %14, !dbg !5430
  br i1 %15, label %16, label %69, !dbg !5431

; <label>:16:                                     ; preds = %7
  %17 = load %struct.HXhmap*, %struct.HXhmap** %3, align 8, !dbg !5432
  %18 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %17, i32 0, i32 1, !dbg !5432
  %19 = load %struct.HXlist_head*, %struct.HXlist_head** %18, align 8, !dbg !5432
  %20 = load i32, i32* %6, align 4, !dbg !5432
  %21 = zext i32 %20 to i64, !dbg !5432
  %22 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %19, i64 %21, !dbg !5432
  %23 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %22, i32 0, i32 0, !dbg !5432
  %24 = load %struct.HXlist_head*, %struct.HXlist_head** %23, align 8, !dbg !5432
  %25 = bitcast %struct.HXlist_head* %24 to i8*, !dbg !5432
  %26 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !5432
  %27 = bitcast i8* %26 to %struct.HXhmap_node*, !dbg !5432
  store %struct.HXhmap_node* %27, %struct.HXhmap_node** %5, align 8, !dbg !5432
  br label %28, !dbg !5432

; <label>:28:                                     ; preds = %57, %16
  %29 = load %struct.HXhmap_node*, %struct.HXhmap_node** %5, align 8, !dbg !5434
  %30 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %29, i32 0, i32 0, !dbg !5434
  %31 = load %struct.HXhmap*, %struct.HXhmap** %3, align 8, !dbg !5434
  %32 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %31, i32 0, i32 1, !dbg !5434
  %33 = load %struct.HXlist_head*, %struct.HXlist_head** %32, align 8, !dbg !5434
  %34 = load i32, i32* %6, align 4, !dbg !5434
  %35 = zext i32 %34 to i64, !dbg !5434
  %36 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %33, i64 %35, !dbg !5434
  %37 = bitcast %struct.HXlist_head* %36 to i8*, !dbg !5434
  %38 = bitcast i8* %37 to %struct.HXlist_head*, !dbg !5434
  %39 = icmp ne %struct.HXlist_head* %30, %38, !dbg !5434
  br i1 %39, label %40, label %65, !dbg !5432

; <label>:40:                                     ; preds = %28
  %41 = load %struct.HXhmap_node*, %struct.HXhmap_node** %5, align 8, !dbg !5436
  %42 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %41, i32 0, i32 1, !dbg !5438
  %43 = bitcast %union.anon* %42 to i8**, !dbg !5438
  %44 = load i8*, i8** %43, align 8, !dbg !5438
  %45 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5439
  %46 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %45, i32 0, i32 0, !dbg !5440
  %47 = bitcast %union.anon* %46 to i8**, !dbg !5440
  store i8* %44, i8** %47, align 8, !dbg !5441
  %48 = load %struct.HXhmap_node*, %struct.HXhmap_node** %5, align 8, !dbg !5442
  %49 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %48, i32 0, i32 2, !dbg !5443
  %50 = bitcast %union.anon* %49 to i8**, !dbg !5443
  %51 = load i8*, i8** %50, align 8, !dbg !5443
  %52 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5444
  %53 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %52, i32 0, i32 1, !dbg !5445
  %54 = bitcast %union.anon* %53 to i8**, !dbg !5445
  store i8* %51, i8** %54, align 8, !dbg !5446
  %55 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5447
  %56 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %55, i32 1, !dbg !5447
  store %struct.HXmap_node* %56, %struct.HXmap_node** %4, align 8, !dbg !5447
  br label %57, !dbg !5448

; <label>:57:                                     ; preds = %40
  %58 = load %struct.HXhmap_node*, %struct.HXhmap_node** %5, align 8, !dbg !5434
  %59 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %58, i32 0, i32 0, !dbg !5434
  %60 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %59, i32 0, i32 0, !dbg !5434
  %61 = load %struct.HXlist_head*, %struct.HXlist_head** %60, align 8, !dbg !5434
  %62 = bitcast %struct.HXlist_head* %61 to i8*, !dbg !5434
  %63 = getelementptr inbounds i8, i8* %62, i64 0, !dbg !5434
  %64 = bitcast i8* %63 to %struct.HXhmap_node*, !dbg !5434
  store %struct.HXhmap_node* %64, %struct.HXhmap_node** %5, align 8, !dbg !5434
  br label %28, !dbg !5434, !llvm.loop !5449

; <label>:65:                                     ; preds = %28
  br label %66, !dbg !5450

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* %6, align 4, !dbg !5451
  %68 = add i32 %67, 1, !dbg !5451
  store i32 %68, i32* %6, align 4, !dbg !5451
  br label %7, !dbg !5452, !llvm.loop !5453

; <label>:69:                                     ; preds = %7
  ret void, !dbg !5455
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap_node* @HXrbtree_keysvalues(%struct.HXrbtree_node*, %struct.HXmap_node*) #0 !dbg !5456 {
  %3 = alloca %struct.HXrbtree_node*, align 8
  %4 = alloca %struct.HXmap_node*, align 8
  store %struct.HXrbtree_node* %0, %struct.HXrbtree_node** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %3, metadata !5461, metadata !DIExpression()), !dbg !5462
  store %struct.HXmap_node* %1, %struct.HXmap_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap_node** %4, metadata !5463, metadata !DIExpression()), !dbg !5464
  %5 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5465
  %6 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %5, i32 0, i32 0, !dbg !5467
  %7 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %6, i64 0, i64 0, !dbg !5465
  %8 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %7, align 8, !dbg !5465
  %9 = icmp ne %struct.HXrbtree_node* %8, null, !dbg !5468
  br i1 %9, label %10, label %17, !dbg !5469

; <label>:10:                                     ; preds = %2
  %11 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5470
  %12 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %11, i32 0, i32 0, !dbg !5471
  %13 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %12, i64 0, i64 0, !dbg !5470
  %14 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %13, align 8, !dbg !5470
  %15 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5472
  %16 = call %struct.HXmap_node* @HXrbtree_keysvalues(%struct.HXrbtree_node* %14, %struct.HXmap_node* %15), !dbg !5473
  store %struct.HXmap_node* %16, %struct.HXmap_node** %4, align 8, !dbg !5474
  br label %17, !dbg !5475

; <label>:17:                                     ; preds = %10, %2
  %18 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5476
  %19 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %18, i32 0, i32 1, !dbg !5477
  %20 = bitcast %union.anon* %19 to i8**, !dbg !5477
  %21 = load i8*, i8** %20, align 8, !dbg !5477
  %22 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5478
  %23 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %22, i32 0, i32 0, !dbg !5479
  %24 = bitcast %union.anon* %23 to i8**, !dbg !5479
  store i8* %21, i8** %24, align 8, !dbg !5480
  %25 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5481
  %26 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %25, i32 0, i32 2, !dbg !5482
  %27 = bitcast %union.anon* %26 to i8**, !dbg !5482
  %28 = load i8*, i8** %27, align 8, !dbg !5482
  %29 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5483
  %30 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %29, i32 0, i32 1, !dbg !5484
  %31 = bitcast %union.anon* %30 to i8**, !dbg !5484
  store i8* %28, i8** %31, align 8, !dbg !5485
  %32 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5486
  %33 = getelementptr inbounds %struct.HXmap_node, %struct.HXmap_node* %32, i32 1, !dbg !5486
  store %struct.HXmap_node* %33, %struct.HXmap_node** %4, align 8, !dbg !5486
  %34 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5487
  %35 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %34, i32 0, i32 0, !dbg !5489
  %36 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %35, i64 0, i64 1, !dbg !5487
  %37 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %36, align 8, !dbg !5487
  %38 = icmp ne %struct.HXrbtree_node* %37, null, !dbg !5490
  br i1 %38, label %39, label %46, !dbg !5491

; <label>:39:                                     ; preds = %17
  %40 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5492
  %41 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %40, i32 0, i32 0, !dbg !5493
  %42 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %41, i64 0, i64 1, !dbg !5492
  %43 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %42, align 8, !dbg !5492
  %44 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5494
  %45 = call %struct.HXmap_node* @HXrbtree_keysvalues(%struct.HXrbtree_node* %43, %struct.HXmap_node* %44), !dbg !5495
  store %struct.HXmap_node* %45, %struct.HXmap_node** %4, align 8, !dbg !5496
  br label %46, !dbg !5497

; <label>:46:                                     ; preds = %39, %17
  %47 = load %struct.HXmap_node*, %struct.HXmap_node** %4, align 8, !dbg !5498
  ret %struct.HXmap_node* %47, !dbg !5499
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap* @HXmap_travinit(%struct.HXmap*, i32) #0 !dbg !5500 {
  %3 = alloca %struct.HXmap*, align 8
  %4 = alloca %struct.HXmap*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.HXmap_private*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %4, metadata !5508, metadata !DIExpression()), !dbg !5509
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5510, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5512, metadata !DIExpression()), !dbg !5513
  %8 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !5514
  %9 = bitcast %struct.HXmap* %8 to i8*, !dbg !5514
  store i8* %9, i8** %6, align 8, !dbg !5513
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %7, metadata !5515, metadata !DIExpression()), !dbg !5516
  %10 = load i8*, i8** %6, align 8, !dbg !5517
  %11 = bitcast i8* %10 to %struct.HXmap_private*, !dbg !5517
  store %struct.HXmap_private* %11, %struct.HXmap_private** %7, align 8, !dbg !5516
  %12 = load %struct.HXmap_private*, %struct.HXmap_private** %7, align 8, !dbg !5518
  %13 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %12, i32 0, i32 2, !dbg !5519
  %14 = load i32, i32* %13, align 8, !dbg !5519
  switch i32 %14, label %27 [
    i32 1, label %15
    i32 2, label %21
  ], !dbg !5520

; <label>:15:                                     ; preds = %2
  %16 = load i8*, i8** %6, align 8, !dbg !5521
  %17 = bitcast i8* %16 to %struct.HXhmap*, !dbg !5521
  %18 = load i32, i32* %5, align 4, !dbg !5523
  %19 = call i8* @HXhmap_travinit(%struct.HXhmap* %17, i32 %18), !dbg !5524
  %20 = bitcast i8* %19 to %struct.HXmap*, !dbg !5524
  store %struct.HXmap* %20, %struct.HXmap** %3, align 8, !dbg !5525
  br label %29, !dbg !5525

; <label>:21:                                     ; preds = %2
  %22 = load i8*, i8** %6, align 8, !dbg !5526
  %23 = bitcast i8* %22 to %struct.HXrbtree*, !dbg !5526
  %24 = load i32, i32* %5, align 4, !dbg !5527
  %25 = call i8* @HXrbtrav_init(%struct.HXrbtree* %23, i32 %24), !dbg !5528
  %26 = bitcast i8* %25 to %struct.HXmap*, !dbg !5528
  store %struct.HXmap* %26, %struct.HXmap** %3, align 8, !dbg !5529
  br label %29, !dbg !5529

; <label>:27:                                     ; preds = %2
  %28 = call i32* @__errno_location() #11, !dbg !5530
  store i32 22, i32* %28, align 4, !dbg !5531
  store %struct.HXmap* null, %struct.HXmap** %3, align 8, !dbg !5532
  br label %29, !dbg !5532

; <label>:29:                                     ; preds = %27, %21, %15
  %30 = load %struct.HXmap*, %struct.HXmap** %3, align 8, !dbg !5533
  ret %struct.HXmap* %30, !dbg !5533
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXhmap_travinit(%struct.HXhmap*, i32) #0 !dbg !5534 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXhmap*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXhmap_trav*, align 8
  store %struct.HXhmap* %0, %struct.HXhmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %4, metadata !5537, metadata !DIExpression()), !dbg !5538
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata %struct.HXhmap_trav** %6, metadata !5541, metadata !DIExpression()), !dbg !5552
  %7 = call noalias i8* @malloc(i64 32) #7, !dbg !5553
  %8 = bitcast i8* %7 to %struct.HXhmap_trav*, !dbg !5553
  store %struct.HXhmap_trav* %8, %struct.HXhmap_trav** %6, align 8, !dbg !5555
  %9 = icmp eq %struct.HXhmap_trav* %8, null, !dbg !5556
  br i1 %9, label %10, label %11, !dbg !5557

; <label>:10:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !5558
  br label %34, !dbg !5558

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %5, align 4, !dbg !5559
  %13 = and i32 %12, -2, !dbg !5560
  %14 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5561
  %15 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %14, i32 0, i32 0, !dbg !5562
  %16 = getelementptr inbounds %struct.HXmap, %struct.HXmap* %15, i32 0, i32 1, !dbg !5563
  store i32 %13, i32* %16, align 4, !dbg !5564
  %17 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5565
  %18 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %17, i32 0, i32 0, !dbg !5566
  %19 = getelementptr inbounds %struct.HXmap, %struct.HXmap* %18, i32 0, i32 0, !dbg !5567
  store i32 1, i32* %19, align 8, !dbg !5568
  %20 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5569
  %21 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5570
  %22 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %21, i32 0, i32 1, !dbg !5571
  store %struct.HXhmap* %20, %struct.HXhmap** %22, align 8, !dbg !5572
  %23 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5573
  %24 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %23, i32 0, i32 2, !dbg !5574
  store %struct.HXlist_head* null, %struct.HXlist_head** %24, align 8, !dbg !5575
  %25 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5576
  %26 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %25, i32 0, i32 3, !dbg !5577
  store i32 0, i32* %26, align 8, !dbg !5578
  %27 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5579
  %28 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %27, i32 0, i32 5, !dbg !5580
  %29 = load i32, i32* %28, align 4, !dbg !5580
  %30 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5581
  %31 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %30, i32 0, i32 4, !dbg !5582
  store i32 %29, i32* %31, align 4, !dbg !5583
  %32 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %6, align 8, !dbg !5584
  %33 = bitcast %struct.HXhmap_trav* %32 to i8*, !dbg !5584
  store i8* %33, i8** %3, align 8, !dbg !5585
  br label %34, !dbg !5585

; <label>:34:                                     ; preds = %11, %10
  %35 = load i8*, i8** %3, align 8, !dbg !5586
  ret i8* %35, !dbg !5586
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXrbtrav_init(%struct.HXrbtree*, i32) #0 !dbg !5587 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXrbtree*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXrbtrav*, align 8
  store %struct.HXrbtree* %0, %struct.HXrbtree** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %4, metadata !5590, metadata !DIExpression()), !dbg !5591
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5592, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.declare(metadata %struct.HXrbtrav** %6, metadata !5594, metadata !DIExpression()), !dbg !5606
  %7 = call noalias i8* @calloc(i64 1, i64 480) #7, !dbg !5607
  %8 = bitcast i8* %7 to %struct.HXrbtrav*, !dbg !5607
  store %struct.HXrbtrav* %8, %struct.HXrbtrav** %6, align 8, !dbg !5609
  %9 = icmp eq %struct.HXrbtrav* %8, null, !dbg !5610
  br i1 %9, label %10, label %11, !dbg !5611

; <label>:10:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !5612
  br label %24, !dbg !5612

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %5, align 4, !dbg !5613
  %13 = load %struct.HXrbtrav*, %struct.HXrbtrav** %6, align 8, !dbg !5614
  %14 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %13, i32 0, i32 0, !dbg !5615
  %15 = getelementptr inbounds %struct.HXmap, %struct.HXmap* %14, i32 0, i32 1, !dbg !5616
  store i32 %12, i32* %15, align 4, !dbg !5617
  %16 = load %struct.HXrbtrav*, %struct.HXrbtrav** %6, align 8, !dbg !5618
  %17 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %16, i32 0, i32 0, !dbg !5619
  %18 = getelementptr inbounds %struct.HXmap, %struct.HXmap* %17, i32 0, i32 0, !dbg !5620
  store i32 2, i32* %18, align 8, !dbg !5621
  %19 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !5622
  %20 = load %struct.HXrbtrav*, %struct.HXrbtrav** %6, align 8, !dbg !5623
  %21 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %20, i32 0, i32 2, !dbg !5624
  store %struct.HXrbtree* %19, %struct.HXrbtree** %21, align 8, !dbg !5625
  %22 = load %struct.HXrbtrav*, %struct.HXrbtrav** %6, align 8, !dbg !5626
  %23 = bitcast %struct.HXrbtrav* %22 to i8*, !dbg !5626
  store i8* %23, i8** %3, align 8, !dbg !5627
  br label %24, !dbg !5627

; <label>:24:                                     ; preds = %11, %10
  %25 = load i8*, i8** %3, align 8, !dbg !5628
  ret i8* %25, !dbg !5628
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap_node* @HXmap_traverse(%struct.HXmap*) #0 !dbg !5629 {
  %2 = alloca %struct.HXmap_node*, align 8
  %3 = alloca %struct.HXmap*, align 8
  %4 = alloca i8*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %3, metadata !5632, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5634, metadata !DIExpression()), !dbg !5635
  %5 = load %struct.HXmap*, %struct.HXmap** %3, align 8, !dbg !5636
  %6 = bitcast %struct.HXmap* %5 to i8*, !dbg !5636
  store i8* %6, i8** %4, align 8, !dbg !5635
  %7 = load i8*, i8** %4, align 8, !dbg !5637
  %8 = icmp eq i8* %7, null, !dbg !5639
  br i1 %8, label %9, label %10, !dbg !5640

; <label>:9:                                      ; preds = %1
  store %struct.HXmap_node* null, %struct.HXmap_node** %2, align 8, !dbg !5641
  br label %24, !dbg !5641

; <label>:10:                                     ; preds = %1
  %11 = load %struct.HXmap*, %struct.HXmap** %3, align 8, !dbg !5642
  %12 = getelementptr inbounds %struct.HXmap, %struct.HXmap* %11, i32 0, i32 0, !dbg !5643
  %13 = load i32, i32* %12, align 4, !dbg !5643
  switch i32 %13, label %22 [
    i32 1, label %14
    i32 2, label %18
  ], !dbg !5644

; <label>:14:                                     ; preds = %10
  %15 = load i8*, i8** %4, align 8, !dbg !5645
  %16 = bitcast i8* %15 to %struct.HXhmap_trav*, !dbg !5645
  %17 = call %struct.HXmap_node* @HXhmap_traverse(%struct.HXhmap_trav* %16), !dbg !5647
  store %struct.HXmap_node* %17, %struct.HXmap_node** %2, align 8, !dbg !5648
  br label %24, !dbg !5648

; <label>:18:                                     ; preds = %10
  %19 = load i8*, i8** %4, align 8, !dbg !5649
  %20 = bitcast i8* %19 to %struct.HXrbtrav*, !dbg !5649
  %21 = call %struct.HXmap_node* @HXrbtree_traverse(%struct.HXrbtrav* %20), !dbg !5650
  store %struct.HXmap_node* %21, %struct.HXmap_node** %2, align 8, !dbg !5651
  br label %24, !dbg !5651

; <label>:22:                                     ; preds = %10
  %23 = call i32* @__errno_location() #11, !dbg !5652
  store i32 22, i32* %23, align 4, !dbg !5653
  store %struct.HXmap_node* null, %struct.HXmap_node** %2, align 8, !dbg !5654
  br label %24, !dbg !5654

; <label>:24:                                     ; preds = %22, %18, %14, %9
  %25 = load %struct.HXmap_node*, %struct.HXmap_node** %2, align 8, !dbg !5655
  ret %struct.HXmap_node* %25, !dbg !5655
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap_node* @HXhmap_traverse(%struct.HXhmap_trav*) #0 !dbg !5656 {
  %2 = alloca %struct.HXmap_node*, align 8
  %3 = alloca %struct.HXhmap_trav*, align 8
  %4 = alloca %struct.HXhmap*, align 8
  %5 = alloca %struct.HXhmap_node*, align 8
  %6 = alloca %union.anon, align 8
  store %struct.HXhmap_trav* %0, %struct.HXhmap_trav** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap_trav** %3, metadata !5659, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %4, metadata !5661, metadata !DIExpression()), !dbg !5662
  %7 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5663
  %8 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %7, i32 0, i32 1, !dbg !5664
  %9 = load %struct.HXhmap*, %struct.HXhmap** %8, align 8, !dbg !5664
  store %struct.HXhmap* %9, %struct.HXhmap** %4, align 8, !dbg !5662
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %5, metadata !5665, metadata !DIExpression()), !dbg !5666
  %10 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5667
  %11 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %10, i32 0, i32 2, !dbg !5669
  %12 = load %struct.HXlist_head*, %struct.HXlist_head** %11, align 8, !dbg !5669
  %13 = icmp eq %struct.HXlist_head* %12, null, !dbg !5670
  br i1 %13, label %14, label %27, !dbg !5671

; <label>:14:                                     ; preds = %1
  %15 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5672
  %16 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %15, i32 0, i32 1, !dbg !5674
  %17 = load %struct.HXlist_head*, %struct.HXlist_head** %16, align 8, !dbg !5674
  %18 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5675
  %19 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %18, i32 0, i32 3, !dbg !5676
  %20 = load i32, i32* %19, align 8, !dbg !5676
  %21 = zext i32 %20 to i64, !dbg !5672
  %22 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %17, i64 %21, !dbg !5672
  %23 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %22, i32 0, i32 0, !dbg !5677
  %24 = load %struct.HXlist_head*, %struct.HXlist_head** %23, align 8, !dbg !5677
  %25 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5678
  %26 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %25, i32 0, i32 2, !dbg !5679
  store %struct.HXlist_head* %24, %struct.HXlist_head** %26, align 8, !dbg !5680
  br label %72, !dbg !5681

; <label>:27:                                     ; preds = %1
  %28 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5682
  %29 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %28, i32 0, i32 4, !dbg !5684
  %30 = load i32, i32* %29, align 4, !dbg !5684
  %31 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5685
  %32 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %31, i32 0, i32 5, !dbg !5686
  %33 = load i32, i32* %32, align 4, !dbg !5686
  %34 = icmp ne i32 %30, %33, !dbg !5687
  br i1 %34, label %35, label %63, !dbg !5688

; <label>:35:                                     ; preds = %27
  %36 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5689
  %37 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %36, i32 0, i32 3, !dbg !5692
  %38 = load i32, i32* %37, align 8, !dbg !5692
  %39 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5693
  %40 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %39, i32 0, i32 2, !dbg !5694
  %41 = load i32, i32* %40, align 8, !dbg !5694
  %42 = zext i32 %41 to i64, !dbg !5695
  %43 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %42, !dbg !5695
  %44 = load i32, i32* %43, align 4, !dbg !5695
  %45 = icmp uge i32 %38, %44, !dbg !5696
  br i1 %45, label %46, label %47, !dbg !5697

; <label>:46:                                     ; preds = %35
  store %struct.HXmap_node* null, %struct.HXmap_node** %2, align 8, !dbg !5698
  br label %127, !dbg !5698

; <label>:47:                                     ; preds = %35
  %48 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5699
  %49 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %48, i32 0, i32 1, !dbg !5700
  %50 = load %struct.HXlist_head*, %struct.HXlist_head** %49, align 8, !dbg !5700
  %51 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5701
  %52 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %51, i32 0, i32 3, !dbg !5702
  %53 = load i32, i32* %52, align 8, !dbg !5702
  %54 = zext i32 %53 to i64, !dbg !5699
  %55 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %50, i64 %54, !dbg !5699
  %56 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5703
  %57 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %56, i32 0, i32 2, !dbg !5704
  store %struct.HXlist_head* %55, %struct.HXlist_head** %57, align 8, !dbg !5705
  %58 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5706
  %59 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %58, i32 0, i32 5, !dbg !5707
  %60 = load i32, i32* %59, align 4, !dbg !5707
  %61 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5708
  %62 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %61, i32 0, i32 4, !dbg !5709
  store i32 %60, i32* %62, align 4, !dbg !5710
  br label %71, !dbg !5711

; <label>:63:                                     ; preds = %27
  %64 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5712
  %65 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %64, i32 0, i32 2, !dbg !5714
  %66 = load %struct.HXlist_head*, %struct.HXlist_head** %65, align 8, !dbg !5714
  %67 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %66, i32 0, i32 0, !dbg !5715
  %68 = load %struct.HXlist_head*, %struct.HXlist_head** %67, align 8, !dbg !5715
  %69 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5716
  %70 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %69, i32 0, i32 2, !dbg !5717
  store %struct.HXlist_head* %68, %struct.HXlist_head** %70, align 8, !dbg !5718
  br label %71

; <label>:71:                                     ; preds = %63, %47
  br label %72

; <label>:72:                                     ; preds = %71, %14
  br label %73, !dbg !5719

; <label>:73:                                     ; preds = %99, %72
  %74 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5720
  %75 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %74, i32 0, i32 2, !dbg !5721
  %76 = load %struct.HXlist_head*, %struct.HXlist_head** %75, align 8, !dbg !5721
  %77 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5722
  %78 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %77, i32 0, i32 1, !dbg !5723
  %79 = load %struct.HXlist_head*, %struct.HXlist_head** %78, align 8, !dbg !5723
  %80 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5724
  %81 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %80, i32 0, i32 3, !dbg !5725
  %82 = load i32, i32* %81, align 8, !dbg !5725
  %83 = zext i32 %82 to i64, !dbg !5722
  %84 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %79, i64 %83, !dbg !5722
  %85 = icmp eq %struct.HXlist_head* %76, %84, !dbg !5726
  br i1 %85, label %86, label %112, !dbg !5719

; <label>:86:                                     ; preds = %73
  %87 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5727
  %88 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %87, i32 0, i32 3, !dbg !5730
  %89 = load i32, i32* %88, align 8, !dbg !5731
  %90 = add i32 %89, 1, !dbg !5731
  store i32 %90, i32* %88, align 8, !dbg !5731
  %91 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5732
  %92 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %91, i32 0, i32 2, !dbg !5733
  %93 = load i32, i32* %92, align 8, !dbg !5733
  %94 = zext i32 %93 to i64, !dbg !5734
  %95 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %94, !dbg !5734
  %96 = load i32, i32* %95, align 4, !dbg !5734
  %97 = icmp uge i32 %90, %96, !dbg !5735
  br i1 %97, label %98, label %99, !dbg !5736

; <label>:98:                                     ; preds = %86
  store %struct.HXmap_node* null, %struct.HXmap_node** %2, align 8, !dbg !5737
  br label %127, !dbg !5737

; <label>:99:                                     ; preds = %86
  %100 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !5738
  %101 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %100, i32 0, i32 1, !dbg !5739
  %102 = load %struct.HXlist_head*, %struct.HXlist_head** %101, align 8, !dbg !5739
  %103 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5740
  %104 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %103, i32 0, i32 3, !dbg !5741
  %105 = load i32, i32* %104, align 8, !dbg !5741
  %106 = zext i32 %105 to i64, !dbg !5738
  %107 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %102, i64 %106, !dbg !5738
  %108 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %107, i32 0, i32 0, !dbg !5742
  %109 = load %struct.HXlist_head*, %struct.HXlist_head** %108, align 8, !dbg !5742
  %110 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5743
  %111 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %110, i32 0, i32 2, !dbg !5744
  store %struct.HXlist_head* %109, %struct.HXlist_head** %111, align 8, !dbg !5745
  br label %73, !dbg !5719, !llvm.loop !5746

; <label>:112:                                    ; preds = %73
  %113 = load %struct.HXhmap_trav*, %struct.HXhmap_trav** %3, align 8, !dbg !5748
  %114 = getelementptr inbounds %struct.HXhmap_trav, %struct.HXhmap_trav* %113, i32 0, i32 2, !dbg !5748
  %115 = load %struct.HXlist_head*, %struct.HXlist_head** %114, align 8, !dbg !5748
  %116 = bitcast %struct.HXlist_head* %115 to i8*, !dbg !5748
  %117 = getelementptr inbounds i8, i8* %116, i64 0, !dbg !5748
  %118 = bitcast i8* %117 to %struct.HXhmap_node*, !dbg !5748
  store %struct.HXhmap_node* %118, %struct.HXhmap_node** %5, align 8, !dbg !5749
  %119 = getelementptr inbounds %union.anon, %union.anon* %6, i32 0, i32 0, !dbg !5750
  %120 = load %struct.HXhmap_node*, %struct.HXhmap_node** %5, align 8, !dbg !5750
  %121 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %120, i32 0, i32 1, !dbg !5750
  %122 = bitcast %union.anon* %121 to i8**, !dbg !5750
  %123 = bitcast i8** %122 to i8*, !dbg !5750
  store i8* %123, i8** %119, align 8, !dbg !5750
  %124 = getelementptr inbounds %union.anon, %union.anon* %6, i32 0, i32 0, !dbg !5750
  %125 = load i8*, i8** %124, align 8, !dbg !5750
  %126 = bitcast i8* %125 to %struct.HXmap_node*, !dbg !5750
  store %struct.HXmap_node* %126, %struct.HXmap_node** %2, align 8, !dbg !5751
  br label %127, !dbg !5751

; <label>:127:                                    ; preds = %112, %98, %46
  %128 = load %struct.HXmap_node*, %struct.HXmap_node** %2, align 8, !dbg !5752
  ret %struct.HXmap_node* %128, !dbg !5752
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXmap_node* @HXrbtree_traverse(%struct.HXrbtrav*) #0 !dbg !5753 {
  %2 = alloca %struct.HXrbtrav*, align 8
  %3 = alloca %struct.HXrbtree_node*, align 8
  %4 = alloca %union.anon, align 8
  store %struct.HXrbtrav* %0, %struct.HXrbtrav** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtrav** %2, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %3, metadata !5758, metadata !DIExpression()), !dbg !5759
  %5 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !5760
  %6 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %5, i32 0, i32 1, !dbg !5762
  %7 = load i32, i32* %6, align 8, !dbg !5762
  %8 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !5763
  %9 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %8, i32 0, i32 2, !dbg !5764
  %10 = load %struct.HXrbtree*, %struct.HXrbtree** %9, align 8, !dbg !5764
  %11 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %10, i32 0, i32 2, !dbg !5765
  %12 = load i32, i32* %11, align 8, !dbg !5765
  %13 = icmp ne i32 %7, %12, !dbg !5766
  br i1 %13, label %19, label %14, !dbg !5767

; <label>:14:                                     ; preds = %1
  %15 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !5768
  %16 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %15, i32 0, i32 3, !dbg !5769
  %17 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %16, align 8, !dbg !5769
  %18 = icmp eq %struct.HXrbtree_node* %17, null, !dbg !5770
  br i1 %18, label %19, label %22, !dbg !5771

; <label>:19:                                     ; preds = %14, %1
  %20 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !5772
  %21 = call %struct.HXrbtree_node* @HXrbtrav_rewalk(%struct.HXrbtrav* %20), !dbg !5773
  store %struct.HXrbtree_node* %21, %struct.HXrbtree_node** %3, align 8, !dbg !5774
  br label %25, !dbg !5775

; <label>:22:                                     ; preds = %14
  %23 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !5776
  %24 = call %struct.HXrbtree_node* @HXrbtrav_next(%struct.HXrbtrav* %23), !dbg !5777
  store %struct.HXrbtree_node* %24, %struct.HXrbtree_node** %3, align 8, !dbg !5778
  br label %25

; <label>:25:                                     ; preds = %22, %19
  %26 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5779
  %27 = icmp ne %struct.HXrbtree_node* %26, null, !dbg !5780
  br i1 %27, label %28, label %36, !dbg !5781

; <label>:28:                                     ; preds = %25
  %29 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0, !dbg !5782
  %30 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %3, align 8, !dbg !5782
  %31 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %30, i32 0, i32 1, !dbg !5782
  %32 = bitcast %union.anon* %31 to i8**, !dbg !5782
  %33 = bitcast i8** %32 to i8*, !dbg !5782
  store i8* %33, i8** %29, align 8, !dbg !5782
  %34 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0, !dbg !5782
  %35 = load i8*, i8** %34, align 8, !dbg !5782
  br label %37, !dbg !5781

; <label>:36:                                     ; preds = %25
  br label %37, !dbg !5781

; <label>:37:                                     ; preds = %36, %28
  %38 = phi i8* [ %35, %28 ], [ null, %36 ], !dbg !5781
  %39 = bitcast i8* %38 to %struct.HXmap_node*, !dbg !5781
  ret %struct.HXmap_node* %39, !dbg !5783
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXrbtree_node* @HXrbtrav_rewalk(%struct.HXrbtrav*) #0 !dbg !5784 {
  %2 = alloca %struct.HXrbtree_node*, align 8
  %3 = alloca %struct.HXrbtrav*, align 8
  %4 = alloca %struct.HXrbtree*, align 8
  %5 = alloca %struct.HXrbtree_node*, align 8
  %6 = alloca i8, align 1
  %7 = alloca [48 x %struct.HXrbtree_node*], align 16
  %8 = alloca [48 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  store %struct.HXrbtrav* %0, %struct.HXrbtrav** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtrav** %3, metadata !5787, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %4, metadata !5789, metadata !DIExpression()), !dbg !5790
  %12 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5791
  %13 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %12, i32 0, i32 2, !dbg !5792
  %14 = load %struct.HXrbtree*, %struct.HXrbtree** %13, align 8, !dbg !5792
  store %struct.HXrbtree* %14, %struct.HXrbtree** %4, align 8, !dbg !5790
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %5, metadata !5793, metadata !DIExpression()), !dbg !5794
  %15 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !5795
  %16 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %15, i32 0, i32 1, !dbg !5796
  %17 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %16, align 8, !dbg !5796
  store %struct.HXrbtree_node* %17, %struct.HXrbtree_node** %5, align 8, !dbg !5794
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5797, metadata !DIExpression()), !dbg !5798
  store i8 0, i8* %6, align 1, !dbg !5798
  %18 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5799
  %19 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %18, i32 0, i32 7, !dbg !5800
  store i8 0, i8* %19, align 8, !dbg !5801
  %20 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5802
  %21 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %20, i32 0, i32 3, !dbg !5804
  %22 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %21, align 8, !dbg !5804
  %23 = icmp eq %struct.HXrbtree_node* %22, null, !dbg !5805
  br i1 %23, label %24, label %50, !dbg !5806

; <label>:24:                                     ; preds = %1
  br label %25, !dbg !5807

; <label>:25:                                     ; preds = %28, %24
  %26 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5809
  %27 = icmp ne %struct.HXrbtree_node* %26, null, !dbg !5810
  br i1 %27, label %28, label %49, !dbg !5807

; <label>:28:                                     ; preds = %25
  %29 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5811
  %30 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5813
  %31 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %30, i32 0, i32 5, !dbg !5814
  %32 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5815
  %33 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %32, i32 0, i32 7, !dbg !5816
  %34 = load i8, i8* %33, align 8, !dbg !5816
  %35 = zext i8 %34 to i64, !dbg !5813
  %36 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %31, i64 0, i64 %35, !dbg !5813
  store %struct.HXrbtree_node* %29, %struct.HXrbtree_node** %36, align 8, !dbg !5817
  %37 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5818
  %38 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %37, i32 0, i32 0, !dbg !5819
  %39 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %38, i64 0, i64 0, !dbg !5818
  %40 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %39, align 8, !dbg !5818
  store %struct.HXrbtree_node* %40, %struct.HXrbtree_node** %5, align 8, !dbg !5820
  %41 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5821
  %42 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %41, i32 0, i32 6, !dbg !5822
  %43 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5823
  %44 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %43, i32 0, i32 7, !dbg !5824
  %45 = load i8, i8* %44, align 8, !dbg !5825
  %46 = add i8 %45, 1, !dbg !5825
  store i8 %46, i8* %44, align 8, !dbg !5825
  %47 = zext i8 %45 to i64, !dbg !5821
  %48 = getelementptr inbounds [48 x i8], [48 x i8]* %42, i64 0, i64 %47, !dbg !5821
  store i8 0, i8* %48, align 1, !dbg !5826
  br label %25, !dbg !5807, !llvm.loop !5827

; <label>:49:                                     ; preds = %25
  br label %138, !dbg !5829

; <label>:50:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata [48 x %struct.HXrbtree_node*]* %7, metadata !5830, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata [48 x i8]* %8, metadata !5834, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i32 0, i32* %9, align 4, !dbg !5837
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5838, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.declare(metadata i8* %11, metadata !5840, metadata !DIExpression()), !dbg !5841
  store i8 0, i8* %11, align 1, !dbg !5841
  br label %51, !dbg !5842

; <label>:51:                                     ; preds = %111, %50
  %52 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5843
  %53 = icmp ne %struct.HXrbtree_node* %52, null, !dbg !5844
  br i1 %53, label %54, label %118, !dbg !5842

; <label>:54:                                     ; preds = %51
  %55 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5845
  %56 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5847
  %57 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %56, i32 0, i32 5, !dbg !5848
  %58 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5849
  %59 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %58, i32 0, i32 7, !dbg !5850
  %60 = load i8, i8* %59, align 8, !dbg !5850
  %61 = zext i8 %60 to i64, !dbg !5847
  %62 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %57, i64 0, i64 %61, !dbg !5847
  store %struct.HXrbtree_node* %55, %struct.HXrbtree_node** %62, align 8, !dbg !5851
  %63 = load i32, i32* %9, align 4, !dbg !5852
  %64 = sext i32 %63 to i64, !dbg !5853
  %65 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %7, i64 0, i64 %64, !dbg !5853
  store %struct.HXrbtree_node* %55, %struct.HXrbtree_node** %65, align 8, !dbg !5854
  %66 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !5855
  %67 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %66, i32 0, i32 0, !dbg !5856
  %68 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %67, i32 0, i32 5, !dbg !5857
  %69 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %68, i32 0, i32 0, !dbg !5858
  %70 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %69, align 8, !dbg !5858
  %71 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5859
  %72 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %71, i32 0, i32 4, !dbg !5860
  %73 = load i8*, i8** %72, align 8, !dbg !5860
  %74 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5861
  %75 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %74, i32 0, i32 1, !dbg !5862
  %76 = bitcast %union.anon* %75 to i8**, !dbg !5862
  %77 = load i8*, i8** %76, align 8, !dbg !5862
  %78 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !5863
  %79 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %78, i32 0, i32 0, !dbg !5864
  %80 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %79, i32 0, i32 3, !dbg !5865
  %81 = load i64, i64* %80, align 8, !dbg !5865
  %82 = call i32 %70(i8* %73, i8* %77, i64 %81), !dbg !5855
  store i32 %82, i32* %10, align 4, !dbg !5866
  %83 = load i32, i32* %10, align 4, !dbg !5867
  %84 = icmp eq i32 %83, 0, !dbg !5869
  br i1 %84, label %85, label %90, !dbg !5870

; <label>:85:                                     ; preds = %54
  %86 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5871
  %87 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %86, i32 0, i32 7, !dbg !5873
  %88 = load i8, i8* %87, align 8, !dbg !5874
  %89 = add i8 %88, 1, !dbg !5874
  store i8 %89, i8* %87, align 8, !dbg !5874
  store i8 1, i8* %11, align 1, !dbg !5875
  br label %118, !dbg !5876

; <label>:90:                                     ; preds = %54
  %91 = load i32, i32* %10, align 4, !dbg !5877
  %92 = icmp sgt i32 %91, 0, !dbg !5878
  %93 = zext i1 %92 to i32, !dbg !5878
  store i32 %93, i32* %10, align 4, !dbg !5879
  %94 = load i32, i32* %10, align 4, !dbg !5880
  %95 = trunc i32 %94 to i8, !dbg !5880
  %96 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5881
  %97 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %96, i32 0, i32 6, !dbg !5882
  %98 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5883
  %99 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %98, i32 0, i32 7, !dbg !5884
  %100 = load i8, i8* %99, align 8, !dbg !5885
  %101 = add i8 %100, 1, !dbg !5885
  store i8 %101, i8* %99, align 8, !dbg !5885
  %102 = zext i8 %100 to i64, !dbg !5881
  %103 = getelementptr inbounds [48 x i8], [48 x i8]* %97, i64 0, i64 %102, !dbg !5881
  store i8 %95, i8* %103, align 1, !dbg !5886
  %104 = load i32, i32* %10, align 4, !dbg !5887
  %105 = icmp eq i32 %104, 0, !dbg !5889
  br i1 %105, label %106, label %111, !dbg !5890

; <label>:106:                                    ; preds = %90
  %107 = load i32, i32* %9, align 4, !dbg !5891
  %108 = add nsw i32 %107, 1, !dbg !5891
  store i32 %108, i32* %9, align 4, !dbg !5891
  %109 = sext i32 %107 to i64, !dbg !5892
  %110 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 %109, !dbg !5892
  store i8 0, i8* %110, align 1, !dbg !5893
  br label %111, !dbg !5892

; <label>:111:                                    ; preds = %106, %90
  %112 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %5, align 8, !dbg !5894
  %113 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %112, i32 0, i32 0, !dbg !5895
  %114 = load i32, i32* %10, align 4, !dbg !5896
  %115 = sext i32 %114 to i64, !dbg !5894
  %116 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %113, i64 0, i64 %115, !dbg !5894
  %117 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %116, align 8, !dbg !5894
  store %struct.HXrbtree_node* %117, %struct.HXrbtree_node** %5, align 8, !dbg !5897
  br label %51, !dbg !5842, !llvm.loop !5898

; <label>:118:                                    ; preds = %85, %51
  %119 = load i8, i8* %11, align 1, !dbg !5900
  %120 = trunc i8 %119 to i1, !dbg !5900
  br i1 %120, label %121, label %122, !dbg !5902

; <label>:121:                                    ; preds = %118
  store i8 1, i8* %6, align 1, !dbg !5903
  br label %137, !dbg !5905

; <label>:122:                                    ; preds = %118
  %123 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5906
  %124 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %123, i32 0, i32 5, !dbg !5908
  %125 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %124, i32 0, i32 0, !dbg !5909
  %126 = bitcast %struct.HXrbtree_node** %125 to i8*, !dbg !5909
  %127 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %7, i32 0, i32 0, !dbg !5909
  %128 = bitcast %struct.HXrbtree_node** %127 to i8*, !dbg !5909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 16 %128, i64 384, i1 false), !dbg !5909
  %129 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5910
  %130 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %129, i32 0, i32 6, !dbg !5911
  %131 = getelementptr inbounds [48 x i8], [48 x i8]* %130, i32 0, i32 0, !dbg !5912
  %132 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i32 0, i32 0, !dbg !5912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 16 %132, i64 48, i1 false), !dbg !5912
  %133 = load i32, i32* %9, align 4, !dbg !5913
  %134 = trunc i32 %133 to i8, !dbg !5913
  %135 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5914
  %136 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %135, i32 0, i32 7, !dbg !5915
  store i8 %134, i8* %136, align 8, !dbg !5916
  br label %137

; <label>:137:                                    ; preds = %122, %121
  br label %138

; <label>:138:                                    ; preds = %137, %49
  %139 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5917
  %140 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %139, i32 0, i32 7, !dbg !5919
  %141 = load i8, i8* %140, align 8, !dbg !5919
  %142 = zext i8 %141 to i32, !dbg !5917
  %143 = icmp eq i32 %142, 0, !dbg !5920
  br i1 %143, label %144, label %147, !dbg !5921

; <label>:144:                                    ; preds = %138
  %145 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5922
  %146 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %145, i32 0, i32 3, !dbg !5924
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %146, align 8, !dbg !5925
  br label %171, !dbg !5926

; <label>:147:                                    ; preds = %138
  %148 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5927
  %149 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %148, i32 0, i32 5, !dbg !5929
  %150 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5930
  %151 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %150, i32 0, i32 7, !dbg !5931
  %152 = load i8, i8* %151, align 8, !dbg !5932
  %153 = add i8 %152, -1, !dbg !5932
  store i8 %153, i8* %151, align 8, !dbg !5932
  %154 = zext i8 %153 to i64, !dbg !5927
  %155 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %149, i64 0, i64 %154, !dbg !5927
  %156 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %155, align 8, !dbg !5927
  %157 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5933
  %158 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %157, i32 0, i32 3, !dbg !5934
  store %struct.HXrbtree_node* %156, %struct.HXrbtree_node** %158, align 8, !dbg !5935
  %159 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5936
  %160 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %159, i32 0, i32 3, !dbg !5938
  %161 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %160, align 8, !dbg !5938
  %162 = icmp eq %struct.HXrbtree_node* %161, null, !dbg !5939
  br i1 %162, label %163, label %166, !dbg !5940

; <label>:163:                                    ; preds = %147
  %164 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5941
  %165 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %164, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.55, i32 0, i32 0)), !dbg !5942
  br label %166, !dbg !5942

; <label>:166:                                    ; preds = %163, %147
  %167 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5943
  %168 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5944
  %169 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %168, i32 0, i32 3, !dbg !5945
  %170 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %169, align 8, !dbg !5945
  call void @HXrbtrav_checkpoint(%struct.HXrbtrav* %167, %struct.HXrbtree_node* %170), !dbg !5946
  br label %171

; <label>:171:                                    ; preds = %166, %144
  %172 = load %struct.HXrbtree*, %struct.HXrbtree** %4, align 8, !dbg !5947
  %173 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %172, i32 0, i32 2, !dbg !5948
  %174 = load i32, i32* %173, align 8, !dbg !5948
  %175 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5949
  %176 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %175, i32 0, i32 1, !dbg !5950
  store i32 %174, i32* %176, align 8, !dbg !5951
  %177 = load i8, i8* %6, align 1, !dbg !5952
  %178 = trunc i8 %177 to i1, !dbg !5952
  br i1 %178, label %179, label %182, !dbg !5954

; <label>:179:                                    ; preds = %171
  %180 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5955
  %181 = call %struct.HXrbtree_node* @HXrbtrav_next(%struct.HXrbtrav* %180), !dbg !5956
  store %struct.HXrbtree_node* %181, %struct.HXrbtree_node** %2, align 8, !dbg !5957
  br label %186, !dbg !5957

; <label>:182:                                    ; preds = %171
  %183 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5958
  %184 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %183, i32 0, i32 3, !dbg !5959
  %185 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %184, align 8, !dbg !5959
  store %struct.HXrbtree_node* %185, %struct.HXrbtree_node** %2, align 8, !dbg !5960
  br label %186, !dbg !5960

; <label>:186:                                    ; preds = %182, %179
  %187 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %2, align 8, !dbg !5961
  ret %struct.HXrbtree_node* %187, !dbg !5961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXrbtree_node* @HXrbtrav_next(%struct.HXrbtrav*) #0 !dbg !5962 {
  %2 = alloca %struct.HXrbtree_node*, align 8
  %3 = alloca %struct.HXrbtrav*, align 8
  %4 = alloca %struct.HXrbtree_node*, align 8
  store %struct.HXrbtrav* %0, %struct.HXrbtrav** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtrav** %3, metadata !5963, metadata !DIExpression()), !dbg !5964
  %5 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5965
  %6 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %5, i32 0, i32 3, !dbg !5967
  %7 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %6, align 8, !dbg !5967
  %8 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %7, i32 0, i32 0, !dbg !5968
  %9 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %8, i64 0, i64 1, !dbg !5965
  %10 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %9, align 8, !dbg !5965
  %11 = icmp ne %struct.HXrbtree_node* %10, null, !dbg !5969
  br i1 %11, label %12, label %63, !dbg !5970

; <label>:12:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %4, metadata !5971, metadata !DIExpression()), !dbg !5973
  %13 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5974
  %14 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %13, i32 0, i32 6, !dbg !5975
  %15 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5976
  %16 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %15, i32 0, i32 7, !dbg !5977
  %17 = load i8, i8* %16, align 8, !dbg !5978
  %18 = add i8 %17, 1, !dbg !5978
  store i8 %18, i8* %16, align 8, !dbg !5978
  %19 = zext i8 %17 to i64, !dbg !5974
  %20 = getelementptr inbounds [48 x i8], [48 x i8]* %14, i64 0, i64 %19, !dbg !5974
  store i8 1, i8* %20, align 1, !dbg !5979
  %21 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5980
  %22 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %21, i32 0, i32 3, !dbg !5981
  %23 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %22, align 8, !dbg !5981
  %24 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %23, i32 0, i32 0, !dbg !5982
  %25 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %24, i64 0, i64 1, !dbg !5980
  %26 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %25, align 8, !dbg !5980
  store %struct.HXrbtree_node* %26, %struct.HXrbtree_node** %4, align 8, !dbg !5983
  br label %27, !dbg !5984

; <label>:27:                                     ; preds = %30, %12
  %28 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !5985
  %29 = icmp ne %struct.HXrbtree_node* %28, null, !dbg !5986
  br i1 %29, label %30, label %51, !dbg !5984

; <label>:30:                                     ; preds = %27
  %31 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !5987
  %32 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5989
  %33 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %32, i32 0, i32 5, !dbg !5990
  %34 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5991
  %35 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %34, i32 0, i32 7, !dbg !5992
  %36 = load i8, i8* %35, align 8, !dbg !5992
  %37 = zext i8 %36 to i64, !dbg !5989
  %38 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %33, i64 0, i64 %37, !dbg !5989
  store %struct.HXrbtree_node* %31, %struct.HXrbtree_node** %38, align 8, !dbg !5993
  %39 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !5994
  %40 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %39, i32 0, i32 0, !dbg !5995
  %41 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %40, i64 0, i64 0, !dbg !5994
  %42 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %41, align 8, !dbg !5994
  store %struct.HXrbtree_node* %42, %struct.HXrbtree_node** %4, align 8, !dbg !5996
  %43 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5997
  %44 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %43, i32 0, i32 6, !dbg !5998
  %45 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !5999
  %46 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %45, i32 0, i32 7, !dbg !6000
  %47 = load i8, i8* %46, align 8, !dbg !6001
  %48 = add i8 %47, 1, !dbg !6001
  store i8 %48, i8* %46, align 8, !dbg !6001
  %49 = zext i8 %47 to i64, !dbg !5997
  %50 = getelementptr inbounds [48 x i8], [48 x i8]* %44, i64 0, i64 %49, !dbg !5997
  store i8 0, i8* %50, align 1, !dbg !6002
  br label %27, !dbg !5984, !llvm.loop !6003

; <label>:51:                                     ; preds = %27
  %52 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6005
  %53 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %52, i32 0, i32 5, !dbg !6006
  %54 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6007
  %55 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %54, i32 0, i32 7, !dbg !6008
  %56 = load i8, i8* %55, align 8, !dbg !6009
  %57 = add i8 %56, -1, !dbg !6009
  store i8 %57, i8* %55, align 8, !dbg !6009
  %58 = zext i8 %57 to i64, !dbg !6005
  %59 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %53, i64 0, i64 %58, !dbg !6005
  %60 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %59, align 8, !dbg !6005
  %61 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6010
  %62 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %61, i32 0, i32 3, !dbg !6011
  store %struct.HXrbtree_node* %60, %struct.HXrbtree_node** %62, align 8, !dbg !6012
  br label %154, !dbg !6013

; <label>:63:                                     ; preds = %1
  %64 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6014
  %65 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %64, i32 0, i32 7, !dbg !6016
  %66 = load i8, i8* %65, align 8, !dbg !6016
  %67 = zext i8 %66 to i32, !dbg !6014
  %68 = icmp eq i32 %67, 0, !dbg !6017
  br i1 %68, label %69, label %72, !dbg !6018

; <label>:69:                                     ; preds = %63
  %70 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6019
  %71 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %70, i32 0, i32 3, !dbg !6021
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %71, align 8, !dbg !6022
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %2, align 8, !dbg !6023
  br label %162, !dbg !6023

; <label>:72:                                     ; preds = %63
  %73 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6024
  %74 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %73, i32 0, i32 6, !dbg !6026
  %75 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6027
  %76 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %75, i32 0, i32 7, !dbg !6028
  %77 = load i8, i8* %76, align 8, !dbg !6028
  %78 = zext i8 %77 to i32, !dbg !6027
  %79 = sub nsw i32 %78, 1, !dbg !6029
  %80 = sext i32 %79 to i64, !dbg !6024
  %81 = getelementptr inbounds [48 x i8], [48 x i8]* %74, i64 0, i64 %80, !dbg !6024
  %82 = load i8, i8* %81, align 1, !dbg !6024
  %83 = zext i8 %82 to i32, !dbg !6024
  %84 = icmp eq i32 %83, 0, !dbg !6030
  br i1 %84, label %85, label %97, !dbg !6031

; <label>:85:                                     ; preds = %72
  %86 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6032
  %87 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %86, i32 0, i32 5, !dbg !6034
  %88 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6035
  %89 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %88, i32 0, i32 7, !dbg !6036
  %90 = load i8, i8* %89, align 8, !dbg !6037
  %91 = add i8 %90, -1, !dbg !6037
  store i8 %91, i8* %89, align 8, !dbg !6037
  %92 = zext i8 %91 to i64, !dbg !6032
  %93 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %87, i64 0, i64 %92, !dbg !6032
  %94 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %93, align 8, !dbg !6032
  %95 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6038
  %96 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %95, i32 0, i32 3, !dbg !6039
  store %struct.HXrbtree_node* %94, %struct.HXrbtree_node** %96, align 8, !dbg !6040
  br label %152, !dbg !6041

; <label>:97:                                     ; preds = %72
  %98 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6042
  %99 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %98, i32 0, i32 6, !dbg !6044
  %100 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6045
  %101 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %100, i32 0, i32 7, !dbg !6046
  %102 = load i8, i8* %101, align 8, !dbg !6046
  %103 = zext i8 %102 to i32, !dbg !6045
  %104 = sub nsw i32 %103, 1, !dbg !6047
  %105 = sext i32 %104 to i64, !dbg !6042
  %106 = getelementptr inbounds [48 x i8], [48 x i8]* %99, i64 0, i64 %105, !dbg !6042
  %107 = load i8, i8* %106, align 1, !dbg !6042
  %108 = zext i8 %107 to i32, !dbg !6042
  %109 = icmp eq i32 %108, 1, !dbg !6048
  br i1 %109, label %110, label %151, !dbg !6049

; <label>:110:                                    ; preds = %97
  br label %111, !dbg !6050

; <label>:111:                                    ; preds = %134, %110
  %112 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6052
  %113 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %112, i32 0, i32 7, !dbg !6055
  %114 = load i8, i8* %113, align 8, !dbg !6055
  %115 = zext i8 %114 to i32, !dbg !6052
  %116 = icmp eq i32 %115, 0, !dbg !6056
  br i1 %116, label %117, label %120, !dbg !6057

; <label>:117:                                    ; preds = %111
  %118 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6058
  %119 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %118, i32 0, i32 3, !dbg !6059
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %119, align 8, !dbg !6060
  store %struct.HXrbtree_node* null, %struct.HXrbtree_node** %2, align 8, !dbg !6061
  br label %162, !dbg !6061

; <label>:120:                                    ; preds = %111
  %121 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6062
  %122 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %121, i32 0, i32 6, !dbg !6064
  %123 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6065
  %124 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %123, i32 0, i32 7, !dbg !6066
  %125 = load i8, i8* %124, align 8, !dbg !6066
  %126 = zext i8 %125 to i32, !dbg !6065
  %127 = sub nsw i32 %126, 1, !dbg !6067
  %128 = sext i32 %127 to i64, !dbg !6062
  %129 = getelementptr inbounds [48 x i8], [48 x i8]* %122, i64 0, i64 %128, !dbg !6062
  %130 = load i8, i8* %129, align 1, !dbg !6062
  %131 = zext i8 %130 to i32, !dbg !6062
  %132 = icmp ne i32 %131, 1, !dbg !6068
  br i1 %132, label %133, label %134, !dbg !6069

; <label>:133:                                    ; preds = %120
  br label %139, !dbg !6070

; <label>:134:                                    ; preds = %120
  %135 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6071
  %136 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %135, i32 0, i32 7, !dbg !6072
  %137 = load i8, i8* %136, align 8, !dbg !6073
  %138 = add i8 %137, -1, !dbg !6073
  store i8 %138, i8* %136, align 8, !dbg !6073
  br label %111, !dbg !6050, !llvm.loop !6074

; <label>:139:                                    ; preds = %133
  %140 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6076
  %141 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %140, i32 0, i32 5, !dbg !6077
  %142 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6078
  %143 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %142, i32 0, i32 7, !dbg !6079
  %144 = load i8, i8* %143, align 8, !dbg !6080
  %145 = add i8 %144, -1, !dbg !6080
  store i8 %145, i8* %143, align 8, !dbg !6080
  %146 = zext i8 %145 to i64, !dbg !6076
  %147 = getelementptr inbounds [48 x %struct.HXrbtree_node*], [48 x %struct.HXrbtree_node*]* %141, i64 0, i64 %146, !dbg !6076
  %148 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %147, align 8, !dbg !6076
  %149 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6081
  %150 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %149, i32 0, i32 3, !dbg !6082
  store %struct.HXrbtree_node* %148, %struct.HXrbtree_node** %150, align 8, !dbg !6083
  br label %151, !dbg !6084

; <label>:151:                                    ; preds = %139, %97
  br label %152

; <label>:152:                                    ; preds = %151, %85
  br label %153

; <label>:153:                                    ; preds = %152
  br label %154

; <label>:154:                                    ; preds = %153, %51
  %155 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6085
  %156 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6086
  %157 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %156, i32 0, i32 3, !dbg !6087
  %158 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %157, align 8, !dbg !6087
  call void @HXrbtrav_checkpoint(%struct.HXrbtrav* %155, %struct.HXrbtree_node* %158), !dbg !6088
  %159 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6089
  %160 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %159, i32 0, i32 3, !dbg !6090
  %161 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %160, align 8, !dbg !6090
  store %struct.HXrbtree_node* %161, %struct.HXrbtree_node** %2, align 8, !dbg !6091
  br label %162, !dbg !6091

; <label>:162:                                    ; preds = %154, %117, %69
  %163 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %2, align 8, !dbg !6092
  ret %struct.HXrbtree_node* %163, !dbg !6092
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtrav_checkpoint(%struct.HXrbtrav*, %struct.HXrbtree_node*) #0 !dbg !6093 {
  %3 = alloca %struct.HXrbtrav*, align 8
  %4 = alloca %struct.HXrbtree_node*, align 8
  %5 = alloca %struct.HXrbtree*, align 8
  %6 = alloca i8*, align 8
  store %struct.HXrbtrav* %0, %struct.HXrbtrav** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtrav** %3, metadata !6096, metadata !DIExpression()), !dbg !6097
  store %struct.HXrbtree_node* %1, %struct.HXrbtree_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %4, metadata !6098, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %5, metadata !6100, metadata !DIExpression()), !dbg !6101
  %7 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6102
  %8 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %7, i32 0, i32 2, !dbg !6103
  %9 = load %struct.HXrbtree*, %struct.HXrbtree** %8, align 8, !dbg !6103
  store %struct.HXrbtree* %9, %struct.HXrbtree** %5, align 8, !dbg !6101
  %10 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !6104
  %11 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %10, i32 0, i32 0, !dbg !6106
  %12 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %11, i32 0, i32 1, !dbg !6107
  %13 = load i32, i32* %12, align 4, !dbg !6107
  %14 = and i32 %13, 1, !dbg !6108
  %15 = icmp ne i32 %14, 0, !dbg !6108
  br i1 %15, label %16, label %50, !dbg !6109

; <label>:16:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6110, metadata !DIExpression()), !dbg !6112
  %17 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6113
  %18 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %17, i32 0, i32 4, !dbg !6114
  %19 = load i8*, i8** %18, align 8, !dbg !6114
  store i8* %19, i8** %6, align 8, !dbg !6112
  %20 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !6115
  %21 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %20, i32 0, i32 0, !dbg !6116
  %22 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %21, i32 0, i32 5, !dbg !6117
  %23 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %22, i32 0, i32 1, !dbg !6118
  %24 = load i8* (i8*, i64)*, i8* (i8*, i64)** %23, align 8, !dbg !6118
  %25 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6119
  %26 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %25, i32 0, i32 1, !dbg !6120
  %27 = bitcast %union.anon* %26 to i8**, !dbg !6120
  %28 = load i8*, i8** %27, align 8, !dbg !6120
  %29 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !6121
  %30 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %29, i32 0, i32 0, !dbg !6122
  %31 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %30, i32 0, i32 3, !dbg !6123
  %32 = load i64, i64* %31, align 8, !dbg !6123
  %33 = call i8* %24(i8* %28, i64 %32), !dbg !6115
  %34 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6124
  %35 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %34, i32 0, i32 4, !dbg !6125
  store i8* %33, i8** %35, align 8, !dbg !6126
  %36 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !6127
  %37 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %36, i32 0, i32 0, !dbg !6129
  %38 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %37, i32 0, i32 5, !dbg !6130
  %39 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %38, i32 0, i32 2, !dbg !6131
  %40 = load void (i8*)*, void (i8*)** %39, align 8, !dbg !6131
  %41 = icmp ne void (i8*)* %40, null, !dbg !6132
  br i1 %41, label %42, label %49, !dbg !6133

; <label>:42:                                     ; preds = %16
  %43 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !6134
  %44 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %43, i32 0, i32 0, !dbg !6135
  %45 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %44, i32 0, i32 5, !dbg !6136
  %46 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %45, i32 0, i32 2, !dbg !6137
  %47 = load void (i8*)*, void (i8*)** %46, align 8, !dbg !6137
  %48 = load i8*, i8** %6, align 8, !dbg !6138
  call void %47(i8* %48), !dbg !6134
  br label %49, !dbg !6134

; <label>:49:                                     ; preds = %42, %16
  br label %57, !dbg !6139

; <label>:50:                                     ; preds = %2
  %51 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6140
  %52 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %51, i32 0, i32 1, !dbg !6142
  %53 = bitcast %union.anon* %52 to i8**, !dbg !6142
  %54 = load i8*, i8** %53, align 8, !dbg !6142
  %55 = load %struct.HXrbtrav*, %struct.HXrbtrav** %3, align 8, !dbg !6143
  %56 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %55, i32 0, i32 4, !dbg !6144
  store i8* %54, i8** %56, align 8, !dbg !6145
  br label %57

; <label>:57:                                     ; preds = %50, %49
  ret void, !dbg !6146
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXmap_travfree(%struct.HXmap*) #0 !dbg !6147 {
  %2 = alloca %struct.HXmap*, align 8
  %3 = alloca i8*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %2, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6152, metadata !DIExpression()), !dbg !6153
  %4 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !6154
  %5 = bitcast %struct.HXmap* %4 to i8*, !dbg !6154
  store i8* %5, i8** %3, align 8, !dbg !6153
  %6 = load i8*, i8** %3, align 8, !dbg !6155
  %7 = icmp eq i8* %6, null, !dbg !6157
  br i1 %7, label %8, label %9, !dbg !6158

; <label>:8:                                      ; preds = %1
  br label %18, !dbg !6159

; <label>:9:                                      ; preds = %1
  %10 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !6160
  %11 = getelementptr inbounds %struct.HXmap, %struct.HXmap* %10, i32 0, i32 0, !dbg !6161
  %12 = load i32, i32* %11, align 4, !dbg !6161
  switch i32 %12, label %16 [
    i32 2, label %13
  ], !dbg !6162

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %3, align 8, !dbg !6163
  %15 = bitcast i8* %14 to %struct.HXrbtrav*, !dbg !6163
  call void @HXrbtrav_free(%struct.HXrbtrav* %15), !dbg !6165
  br label %18, !dbg !6166

; <label>:16:                                     ; preds = %9
  %17 = load i8*, i8** %3, align 8, !dbg !6167
  call void @free(i8* %17) #7, !dbg !6168
  br label %18, !dbg !6169

; <label>:18:                                     ; preds = %16, %13, %8
  ret void, !dbg !6170
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtrav_free(%struct.HXrbtrav*) #0 !dbg !6171 {
  %2 = alloca %struct.HXrbtrav*, align 8
  %3 = alloca %struct.HXmap_private*, align 8
  store %struct.HXrbtrav* %0, %struct.HXrbtrav** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtrav** %2, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %3, metadata !6176, metadata !DIExpression()), !dbg !6177
  %4 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !6178
  %5 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %4, i32 0, i32 2, !dbg !6179
  %6 = load %struct.HXrbtree*, %struct.HXrbtree** %5, align 8, !dbg !6179
  %7 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %6, i32 0, i32 0, !dbg !6180
  store %struct.HXmap_private* %7, %struct.HXmap_private** %3, align 8, !dbg !6177
  %8 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !6181
  %9 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %8, i32 0, i32 1, !dbg !6183
  %10 = load i32, i32* %9, align 4, !dbg !6183
  %11 = and i32 %10, 1, !dbg !6184
  %12 = icmp ne i32 %11, 0, !dbg !6184
  br i1 %12, label %13, label %27, !dbg !6185

; <label>:13:                                     ; preds = %1
  %14 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !6186
  %15 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %14, i32 0, i32 5, !dbg !6187
  %16 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %15, i32 0, i32 2, !dbg !6188
  %17 = load void (i8*)*, void (i8*)** %16, align 8, !dbg !6188
  %18 = icmp ne void (i8*)* %17, null, !dbg !6189
  br i1 %18, label %19, label %27, !dbg !6190

; <label>:19:                                     ; preds = %13
  %20 = load %struct.HXmap_private*, %struct.HXmap_private** %3, align 8, !dbg !6191
  %21 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %20, i32 0, i32 5, !dbg !6192
  %22 = getelementptr inbounds %struct.HXmap_ops, %struct.HXmap_ops* %21, i32 0, i32 2, !dbg !6193
  %23 = load void (i8*)*, void (i8*)** %22, align 8, !dbg !6193
  %24 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !6194
  %25 = getelementptr inbounds %struct.HXrbtrav, %struct.HXrbtrav* %24, i32 0, i32 4, !dbg !6195
  %26 = load i8*, i8** %25, align 8, !dbg !6195
  call void %23(i8* %26), !dbg !6191
  br label %27, !dbg !6191

; <label>:27:                                     ; preds = %19, %13, %1
  %28 = load %struct.HXrbtrav*, %struct.HXrbtrav** %2, align 8, !dbg !6196
  %29 = bitcast %struct.HXrbtrav* %28 to i8*, !dbg !6196
  call void @free(i8* %29) #7, !dbg !6197
  ret void, !dbg !6198
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXmap_qfe(%struct.HXmap*, i1 (%struct.HXmap_node*, i8*)*, i8*) #0 !dbg !6199 {
  %4 = alloca %struct.HXmap*, align 8
  %5 = alloca i1 (%struct.HXmap_node*, i8*)*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.HXmap_private*, align 8
  %9 = alloca %struct.HXrbtree*, align 8
  store %struct.HXmap* %0, %struct.HXmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXmap** %4, metadata !6206, metadata !DIExpression()), !dbg !6207
  store i1 (%struct.HXmap_node*, i8*)* %1, i1 (%struct.HXmap_node*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i1 (%struct.HXmap_node*, i8*)** %5, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6212, metadata !DIExpression()), !dbg !6213
  %10 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !6214
  %11 = bitcast %struct.HXmap* %10 to i8*, !dbg !6214
  store i8* %11, i8** %7, align 8, !dbg !6213
  call void @llvm.dbg.declare(metadata %struct.HXmap_private** %8, metadata !6215, metadata !DIExpression()), !dbg !6216
  %12 = load i8*, i8** %7, align 8, !dbg !6217
  %13 = bitcast i8* %12 to %struct.HXmap_private*, !dbg !6217
  store %struct.HXmap_private* %13, %struct.HXmap_private** %8, align 8, !dbg !6216
  %14 = load %struct.HXmap_private*, %struct.HXmap_private** %8, align 8, !dbg !6218
  %15 = getelementptr inbounds %struct.HXmap_private, %struct.HXmap_private* %14, i32 0, i32 2, !dbg !6219
  %16 = load i32, i32* %15, align 8, !dbg !6219
  switch i32 %16, label %38 [
    i32 1, label %17
    i32 2, label %23
  ], !dbg !6220

; <label>:17:                                     ; preds = %3
  %18 = load i8*, i8** %7, align 8, !dbg !6221
  %19 = bitcast i8* %18 to %struct.HXhmap*, !dbg !6221
  %20 = load i1 (%struct.HXmap_node*, i8*)*, i1 (%struct.HXmap_node*, i8*)** %5, align 8, !dbg !6223
  %21 = load i8*, i8** %6, align 8, !dbg !6224
  call void @HXhmap_qfe(%struct.HXhmap* %19, i1 (%struct.HXmap_node*, i8*)* %20, i8* %21), !dbg !6225
  %22 = call i32* @__errno_location() #11, !dbg !6226
  store i32 0, i32* %22, align 4, !dbg !6227
  br label %40, !dbg !6228

; <label>:23:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata %struct.HXrbtree** %9, metadata !6229, metadata !DIExpression()), !dbg !6231
  %24 = load i8*, i8** %7, align 8, !dbg !6232
  %25 = bitcast i8* %24 to %struct.HXrbtree*, !dbg !6232
  store %struct.HXrbtree* %25, %struct.HXrbtree** %9, align 8, !dbg !6231
  %26 = load %struct.HXrbtree*, %struct.HXrbtree** %9, align 8, !dbg !6233
  %27 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %26, i32 0, i32 1, !dbg !6235
  %28 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %27, align 8, !dbg !6235
  %29 = icmp ne %struct.HXrbtree_node* %28, null, !dbg !6236
  br i1 %29, label %30, label %36, !dbg !6237

; <label>:30:                                     ; preds = %23
  %31 = load %struct.HXrbtree*, %struct.HXrbtree** %9, align 8, !dbg !6238
  %32 = getelementptr inbounds %struct.HXrbtree, %struct.HXrbtree* %31, i32 0, i32 1, !dbg !6239
  %33 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %32, align 8, !dbg !6239
  %34 = load i1 (%struct.HXmap_node*, i8*)*, i1 (%struct.HXmap_node*, i8*)** %5, align 8, !dbg !6240
  %35 = load i8*, i8** %6, align 8, !dbg !6241
  call void @HXrbtree_qfe(%struct.HXrbtree_node* %33, i1 (%struct.HXmap_node*, i8*)* %34, i8* %35), !dbg !6242
  br label %36, !dbg !6242

; <label>:36:                                     ; preds = %30, %23
  %37 = call i32* @__errno_location() #11, !dbg !6243
  store i32 0, i32* %37, align 4, !dbg !6244
  br label %40, !dbg !6245

; <label>:38:                                     ; preds = %3
  %39 = call i32* @__errno_location() #11, !dbg !6246
  store i32 22, i32* %39, align 4, !dbg !6247
  br label %40, !dbg !6248

; <label>:40:                                     ; preds = %38, %36, %17
  ret void, !dbg !6249
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXhmap_qfe(%struct.HXhmap*, i1 (%struct.HXmap_node*, i8*)*, i8*) #0 !dbg !6250 {
  %4 = alloca %struct.HXhmap*, align 8
  %5 = alloca i1 (%struct.HXmap_node*, i8*)*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.HXhmap_node*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %union.anon, align 8
  store %struct.HXhmap* %0, %struct.HXhmap** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXhmap** %4, metadata !6253, metadata !DIExpression()), !dbg !6254
  store i1 (%struct.HXmap_node*, i8*)* %1, i1 (%struct.HXmap_node*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i1 (%struct.HXmap_node*, i8*)** %5, metadata !6255, metadata !DIExpression()), !dbg !6256
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6257, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.declare(metadata %struct.HXhmap_node** %7, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6261, metadata !DIExpression()), !dbg !6262
  store i32 0, i32* %8, align 4, !dbg !6263
  br label %10, !dbg !6265

; <label>:10:                                     ; preds = %66, %3
  %11 = load i32, i32* %8, align 4, !dbg !6266
  %12 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !6268
  %13 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %12, i32 0, i32 2, !dbg !6269
  %14 = load i32, i32* %13, align 8, !dbg !6269
  %15 = zext i32 %14 to i64, !dbg !6270
  %16 = getelementptr inbounds [28 x i32], [28 x i32]* @HXhash_primes, i64 0, i64 %15, !dbg !6270
  %17 = load i32, i32* %16, align 4, !dbg !6270
  %18 = icmp ult i32 %11, %17, !dbg !6271
  br i1 %18, label %19, label %69, !dbg !6272

; <label>:19:                                     ; preds = %10
  %20 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !6273
  %21 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %20, i32 0, i32 1, !dbg !6273
  %22 = load %struct.HXlist_head*, %struct.HXlist_head** %21, align 8, !dbg !6273
  %23 = load i32, i32* %8, align 4, !dbg !6273
  %24 = zext i32 %23 to i64, !dbg !6273
  %25 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %22, i64 %24, !dbg !6273
  %26 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %25, i32 0, i32 0, !dbg !6273
  %27 = load %struct.HXlist_head*, %struct.HXlist_head** %26, align 8, !dbg !6273
  %28 = bitcast %struct.HXlist_head* %27 to i8*, !dbg !6273
  %29 = getelementptr inbounds i8, i8* %28, i64 0, !dbg !6273
  %30 = bitcast i8* %29 to %struct.HXhmap_node*, !dbg !6273
  store %struct.HXhmap_node* %30, %struct.HXhmap_node** %7, align 8, !dbg !6273
  br label %31, !dbg !6273

; <label>:31:                                     ; preds = %57, %19
  %32 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !6275
  %33 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %32, i32 0, i32 0, !dbg !6275
  %34 = load %struct.HXhmap*, %struct.HXhmap** %4, align 8, !dbg !6275
  %35 = getelementptr inbounds %struct.HXhmap, %struct.HXhmap* %34, i32 0, i32 1, !dbg !6275
  %36 = load %struct.HXlist_head*, %struct.HXlist_head** %35, align 8, !dbg !6275
  %37 = load i32, i32* %8, align 4, !dbg !6275
  %38 = zext i32 %37 to i64, !dbg !6275
  %39 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %36, i64 %38, !dbg !6275
  %40 = bitcast %struct.HXlist_head* %39 to i8*, !dbg !6275
  %41 = bitcast i8* %40 to %struct.HXlist_head*, !dbg !6275
  %42 = icmp ne %struct.HXlist_head* %33, %41, !dbg !6275
  br i1 %42, label %43, label %65, !dbg !6273

; <label>:43:                                     ; preds = %31
  %44 = load i1 (%struct.HXmap_node*, i8*)*, i1 (%struct.HXmap_node*, i8*)** %5, align 8, !dbg !6277
  %45 = getelementptr inbounds %union.anon, %union.anon* %9, i32 0, i32 0, !dbg !6279
  %46 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !6279
  %47 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %46, i32 0, i32 1, !dbg !6279
  %48 = bitcast %union.anon* %47 to i8**, !dbg !6279
  %49 = bitcast i8** %48 to i8*, !dbg !6279
  store i8* %49, i8** %45, align 8, !dbg !6279
  %50 = getelementptr inbounds %union.anon, %union.anon* %9, i32 0, i32 0, !dbg !6279
  %51 = load i8*, i8** %50, align 8, !dbg !6279
  %52 = bitcast i8* %51 to %struct.HXmap_node*, !dbg !6279
  %53 = load i8*, i8** %6, align 8, !dbg !6280
  %54 = call zeroext i1 %44(%struct.HXmap_node* %52, i8* %53), !dbg !6281
  br i1 %54, label %56, label %55, !dbg !6282

; <label>:55:                                     ; preds = %43
  br label %69, !dbg !6283

; <label>:56:                                     ; preds = %43
  br label %57, !dbg !6284

; <label>:57:                                     ; preds = %56
  %58 = load %struct.HXhmap_node*, %struct.HXhmap_node** %7, align 8, !dbg !6275
  %59 = getelementptr inbounds %struct.HXhmap_node, %struct.HXhmap_node* %58, i32 0, i32 0, !dbg !6275
  %60 = getelementptr inbounds %struct.HXlist_head, %struct.HXlist_head* %59, i32 0, i32 0, !dbg !6275
  %61 = load %struct.HXlist_head*, %struct.HXlist_head** %60, align 8, !dbg !6275
  %62 = bitcast %struct.HXlist_head* %61 to i8*, !dbg !6275
  %63 = getelementptr inbounds i8, i8* %62, i64 0, !dbg !6275
  %64 = bitcast i8* %63 to %struct.HXhmap_node*, !dbg !6275
  store %struct.HXhmap_node* %64, %struct.HXhmap_node** %7, align 8, !dbg !6275
  br label %31, !dbg !6275, !llvm.loop !6285

; <label>:65:                                     ; preds = %31
  br label %66, !dbg !6286

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* %8, align 4, !dbg !6287
  %68 = add i32 %67, 1, !dbg !6287
  store i32 %68, i32* %8, align 4, !dbg !6287
  br label %10, !dbg !6288, !llvm.loop !6289

; <label>:69:                                     ; preds = %55, %10
  ret void, !dbg !6291
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrbtree_qfe(%struct.HXrbtree_node*, i1 (%struct.HXmap_node*, i8*)*, i8*) #0 !dbg !6292 {
  %4 = alloca %struct.HXrbtree_node*, align 8
  %5 = alloca i1 (%struct.HXmap_node*, i8*)*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %union.anon, align 8
  store %struct.HXrbtree_node* %0, %struct.HXrbtree_node** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXrbtree_node** %4, metadata !6295, metadata !DIExpression()), !dbg !6296
  store i1 (%struct.HXmap_node*, i8*)* %1, i1 (%struct.HXmap_node*, i8*)** %5, align 8
  call void @llvm.dbg.declare(metadata i1 (%struct.HXmap_node*, i8*)** %5, metadata !6297, metadata !DIExpression()), !dbg !6298
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6299, metadata !DIExpression()), !dbg !6300
  %8 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6301
  %9 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %8, i32 0, i32 0, !dbg !6303
  %10 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %9, i64 0, i64 0, !dbg !6301
  %11 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %10, align 8, !dbg !6301
  %12 = icmp ne %struct.HXrbtree_node* %11, null, !dbg !6304
  br i1 %12, label %13, label %20, !dbg !6305

; <label>:13:                                     ; preds = %3
  %14 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6306
  %15 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %14, i32 0, i32 0, !dbg !6307
  %16 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %15, i64 0, i64 0, !dbg !6306
  %17 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %16, align 8, !dbg !6306
  %18 = load i1 (%struct.HXmap_node*, i8*)*, i1 (%struct.HXmap_node*, i8*)** %5, align 8, !dbg !6308
  %19 = load i8*, i8** %6, align 8, !dbg !6309
  call void @HXrbtree_qfe(%struct.HXrbtree_node* %17, i1 (%struct.HXmap_node*, i8*)* %18, i8* %19), !dbg !6310
  br label %20, !dbg !6310

; <label>:20:                                     ; preds = %13, %3
  %21 = load i1 (%struct.HXmap_node*, i8*)*, i1 (%struct.HXmap_node*, i8*)** %5, align 8, !dbg !6311
  %22 = getelementptr inbounds %union.anon, %union.anon* %7, i32 0, i32 0, !dbg !6313
  %23 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6313
  %24 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %23, i32 0, i32 1, !dbg !6313
  %25 = bitcast %union.anon* %24 to i8**, !dbg !6313
  %26 = bitcast i8** %25 to i8*, !dbg !6313
  store i8* %26, i8** %22, align 8, !dbg !6313
  %27 = getelementptr inbounds %union.anon, %union.anon* %7, i32 0, i32 0, !dbg !6313
  %28 = load i8*, i8** %27, align 8, !dbg !6313
  %29 = bitcast i8* %28 to %struct.HXmap_node*, !dbg !6313
  %30 = load i8*, i8** %6, align 8, !dbg !6314
  %31 = call zeroext i1 %21(%struct.HXmap_node* %29, i8* %30), !dbg !6315
  br i1 %31, label %33, label %32, !dbg !6316

; <label>:32:                                     ; preds = %20
  br label %46, !dbg !6317

; <label>:33:                                     ; preds = %20
  %34 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6318
  %35 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %34, i32 0, i32 0, !dbg !6320
  %36 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %35, i64 0, i64 1, !dbg !6318
  %37 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %36, align 8, !dbg !6318
  %38 = icmp ne %struct.HXrbtree_node* %37, null, !dbg !6321
  br i1 %38, label %39, label %46, !dbg !6322

; <label>:39:                                     ; preds = %33
  %40 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %4, align 8, !dbg !6323
  %41 = getelementptr inbounds %struct.HXrbtree_node, %struct.HXrbtree_node* %40, i32 0, i32 0, !dbg !6324
  %42 = getelementptr inbounds [2 x %struct.HXrbtree_node*], [2 x %struct.HXrbtree_node*]* %41, i64 0, i64 1, !dbg !6323
  %43 = load %struct.HXrbtree_node*, %struct.HXrbtree_node** %42, align 8, !dbg !6323
  %44 = load i1 (%struct.HXmap_node*, i8*)*, i1 (%struct.HXmap_node*, i8*)** %5, align 8, !dbg !6325
  %45 = load i8*, i8** %6, align 8, !dbg !6326
  call void @HXrbtree_qfe(%struct.HXrbtree_node* %43, i1 (%struct.HXmap_node*, i8*)* %44, i8* %45), !dbg !6327
  br label %46, !dbg !6327

; <label>:46:                                     ; preds = %39, %33, %32
  ret void, !dbg !6328
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_strinit(i8*) #0 !dbg !6329 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6334, metadata !DIExpression()), !dbg !6335
  store i8* null, i8** %3, align 8, !dbg !6335
  %4 = load i8*, i8** %2, align 8, !dbg !6336
  %5 = load i8*, i8** %2, align 8, !dbg !6337
  %6 = call i64 @strlen(i8* %5) #10, !dbg !6338
  %7 = call i8* @HXmc_memcpy(i8** %3, i8* %4, i64 %6), !dbg !6339
  ret i8* %7, !dbg !6340
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_memcpy(i8**, i8*, i64) #0 !dbg !6341 {
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.memcont*, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !6345, metadata !DIExpression()), !dbg !6346
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6347, metadata !DIExpression()), !dbg !6348
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6349, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata %struct.memcont** %8, metadata !6351, metadata !DIExpression()), !dbg !6352
  %9 = load i8**, i8*** %5, align 8, !dbg !6353
  %10 = load i8*, i8** %9, align 8, !dbg !6355
  %11 = icmp ne i8* %10, null, !dbg !6356
  br i1 %11, label %12, label %37, !dbg !6357

; <label>:12:                                     ; preds = %3
  %13 = load i8**, i8*** %5, align 8, !dbg !6358
  %14 = load i8*, i8** %13, align 8, !dbg !6360
  %15 = call %struct.memcont* @HXmc_base(i8* %14), !dbg !6361
  store %struct.memcont* %15, %struct.memcont** %8, align 8, !dbg !6362
  %16 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6363
  call void @HXmc_check(%struct.memcont* %16), !dbg !6364
  %17 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6365
  %18 = getelementptr inbounds %struct.memcont, %struct.memcont* %17, i32 0, i32 0, !dbg !6367
  %19 = load i64, i64* %18, align 8, !dbg !6367
  %20 = load i64, i64* %7, align 8, !dbg !6368
  %21 = icmp ult i64 %19, %20, !dbg !6369
  br i1 %21, label %22, label %36, !dbg !6370

; <label>:22:                                     ; preds = %12
  %23 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6371
  %24 = bitcast %struct.memcont* %23 to i8*, !dbg !6371
  %25 = load i64, i64* %7, align 8, !dbg !6373
  %26 = call i64 @__HXmc_request(i64 %25), !dbg !6374
  %27 = call i8* @realloc(i8* %24, i64 %26) #7, !dbg !6375
  %28 = bitcast i8* %27 to %struct.memcont*, !dbg !6375
  store %struct.memcont* %28, %struct.memcont** %8, align 8, !dbg !6376
  %29 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6377
  %30 = icmp eq %struct.memcont* %29, null, !dbg !6379
  br i1 %30, label %31, label %32, !dbg !6380

; <label>:31:                                     ; preds = %22
  store i8* null, i8** %4, align 8, !dbg !6381
  br label %80, !dbg !6381

; <label>:32:                                     ; preds = %22
  %33 = load i64, i64* %7, align 8, !dbg !6382
  %34 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6383
  %35 = getelementptr inbounds %struct.memcont, %struct.memcont* %34, i32 0, i32 0, !dbg !6384
  store i64 %33, i64* %35, align 8, !dbg !6385
  br label %36, !dbg !6386

; <label>:36:                                     ; preds = %32, %12
  br label %51, !dbg !6387

; <label>:37:                                     ; preds = %3
  %38 = load i64, i64* %7, align 8, !dbg !6388
  %39 = call i64 @__HXmc_request(i64 %38), !dbg !6390
  %40 = call noalias i8* @malloc(i64 %39) #7, !dbg !6391
  %41 = bitcast i8* %40 to %struct.memcont*, !dbg !6391
  store %struct.memcont* %41, %struct.memcont** %8, align 8, !dbg !6392
  %42 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6393
  %43 = icmp eq %struct.memcont* %42, null, !dbg !6395
  br i1 %43, label %44, label %45, !dbg !6396

; <label>:44:                                     ; preds = %37
  store i8* null, i8** %4, align 8, !dbg !6397
  br label %80, !dbg !6397

; <label>:45:                                     ; preds = %37
  %46 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6398
  %47 = getelementptr inbounds %struct.memcont, %struct.memcont* %46, i32 0, i32 2, !dbg !6399
  store i32 537227695, i32* %47, align 8, !dbg !6400
  %48 = load i64, i64* %7, align 8, !dbg !6401
  %49 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6402
  %50 = getelementptr inbounds %struct.memcont, %struct.memcont* %49, i32 0, i32 0, !dbg !6403
  store i64 %48, i64* %50, align 8, !dbg !6404
  br label %51

; <label>:51:                                     ; preds = %45, %36
  %52 = load i8*, i8** %6, align 8, !dbg !6405
  %53 = icmp eq i8* %52, null, !dbg !6407
  br i1 %53, label %54, label %64, !dbg !6408

; <label>:54:                                     ; preds = %51
  %55 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6409
  %56 = getelementptr inbounds %struct.memcont, %struct.memcont* %55, i32 0, i32 1, !dbg !6411
  store i64 0, i64* %56, align 8, !dbg !6412
  %57 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6413
  %58 = getelementptr inbounds %struct.memcont, %struct.memcont* %57, i32 0, i32 3, !dbg !6414
  %59 = getelementptr inbounds [0 x i8], [0 x i8]* %58, i64 0, i64 0, !dbg !6413
  store i8 0, i8* %59, align 4, !dbg !6415
  %60 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6416
  %61 = getelementptr inbounds %struct.memcont, %struct.memcont* %60, i32 0, i32 3, !dbg !6417
  %62 = getelementptr inbounds [0 x i8], [0 x i8]* %61, i32 0, i32 0, !dbg !6416
  %63 = load i8**, i8*** %5, align 8, !dbg !6418
  store i8* %62, i8** %63, align 8, !dbg !6419
  store i8* %62, i8** %4, align 8, !dbg !6420
  br label %80, !dbg !6420

; <label>:64:                                     ; preds = %51
  %65 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6421
  %66 = getelementptr inbounds %struct.memcont, %struct.memcont* %65, i32 0, i32 3, !dbg !6422
  %67 = getelementptr inbounds [0 x i8], [0 x i8]* %66, i32 0, i32 0, !dbg !6423
  %68 = load i8*, i8** %6, align 8, !dbg !6424
  %69 = load i64, i64* %7, align 8, !dbg !6425
  %70 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6426
  %71 = getelementptr inbounds %struct.memcont, %struct.memcont* %70, i32 0, i32 1, !dbg !6427
  store i64 %69, i64* %71, align 8, !dbg !6428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 1 %68, i64 %69, i1 false), !dbg !6423
  %72 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6429
  %73 = getelementptr inbounds %struct.memcont, %struct.memcont* %72, i32 0, i32 3, !dbg !6430
  %74 = load i64, i64* %7, align 8, !dbg !6431
  %75 = getelementptr inbounds [0 x i8], [0 x i8]* %73, i64 0, i64 %74, !dbg !6429
  store i8 0, i8* %75, align 1, !dbg !6432
  %76 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6433
  %77 = getelementptr inbounds %struct.memcont, %struct.memcont* %76, i32 0, i32 3, !dbg !6434
  %78 = getelementptr inbounds [0 x i8], [0 x i8]* %77, i32 0, i32 0, !dbg !6433
  %79 = load i8**, i8*** %5, align 8, !dbg !6435
  store i8* %78, i8** %79, align 8, !dbg !6436
  store i8* %78, i8** %4, align 8, !dbg !6437
  br label %80, !dbg !6437

; <label>:80:                                     ; preds = %64, %54, %44, %31
  %81 = load i8*, i8** %4, align 8, !dbg !6438
  ret i8* %81, !dbg !6438
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.memcont* @HXmc_base(i8*) #0 !dbg !6439 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6444, metadata !DIExpression()), !dbg !6445
  %3 = load i8*, i8** %2, align 8, !dbg !6446
  %4 = getelementptr inbounds i8, i8* %3, i64 -20, !dbg !6446
  %5 = bitcast i8* %4 to %struct.memcont*, !dbg !6446
  ret %struct.memcont* %5, !dbg !6447
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXmc_check(%struct.memcont*) #0 !dbg !6448 {
  %2 = alloca %struct.memcont*, align 8
  store %struct.memcont* %0, %struct.memcont** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.memcont** %2, metadata !6453, metadata !DIExpression()), !dbg !6454
  %3 = load %struct.memcont*, %struct.memcont** %2, align 8, !dbg !6455
  %4 = getelementptr inbounds %struct.memcont, %struct.memcont* %3, i32 0, i32 2, !dbg !6457
  %5 = load i32, i32* %4, align 8, !dbg !6457
  %6 = icmp ne i32 %5, 537227695, !dbg !6458
  br i1 %6, label %7, label %10, !dbg !6459

; <label>:7:                                      ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6460
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i32 0, i32 0)), !dbg !6461
  br label %10, !dbg !6461

; <label>:10:                                     ; preds = %7, %1
  ret void, !dbg !6462
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__HXmc_request(i64) #0 !dbg !6463 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !6466, metadata !DIExpression()), !dbg !6467
  %3 = load i64, i64* %2, align 8, !dbg !6468
  %4 = add i64 24, %3, !dbg !6469
  %5 = add i64 %4, 1, !dbg !6470
  ret i64 %5, !dbg !6471
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_meminit(i8*, i64) #0 !dbg !6472 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6475, metadata !DIExpression()), !dbg !6476
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6479, metadata !DIExpression()), !dbg !6480
  store i8* null, i8** %5, align 8, !dbg !6480
  %6 = load i8*, i8** %3, align 8, !dbg !6481
  %7 = load i64, i64* %4, align 8, !dbg !6482
  %8 = call i8* @HXmc_memcpy(i8** %5, i8* %6, i64 %7), !dbg !6483
  ret i8* %8, !dbg !6484
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_strcpy(i8**, i8*) #0 !dbg !6485 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !6488, metadata !DIExpression()), !dbg !6489
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6490, metadata !DIExpression()), !dbg !6491
  %6 = load i8*, i8** %5, align 8, !dbg !6492
  %7 = icmp eq i8* %6, null, !dbg !6494
  br i1 %7, label %8, label %12, !dbg !6495

; <label>:8:                                      ; preds = %2
  %9 = load i8**, i8*** %4, align 8, !dbg !6496
  %10 = load i8*, i8** %9, align 8, !dbg !6498
  call void @HXmc_free(i8* %10), !dbg !6499
  %11 = load i8**, i8*** %4, align 8, !dbg !6500
  store i8* null, i8** %11, align 8, !dbg !6501
  store i8* null, i8** %3, align 8, !dbg !6502
  br label %18, !dbg !6502

; <label>:12:                                     ; preds = %2
  %13 = load i8**, i8*** %4, align 8, !dbg !6503
  %14 = load i8*, i8** %5, align 8, !dbg !6504
  %15 = load i8*, i8** %5, align 8, !dbg !6505
  %16 = call i64 @strlen(i8* %15) #10, !dbg !6506
  %17 = call i8* @HXmc_memcpy(i8** %13, i8* %14, i64 %16), !dbg !6507
  store i8* %17, i8** %3, align 8, !dbg !6508
  br label %18, !dbg !6508

; <label>:18:                                     ; preds = %12, %8
  %19 = load i8*, i8** %3, align 8, !dbg !6509
  ret i8* %19, !dbg !6509
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXmc_free(i8*) #0 !dbg !6510 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.memcont*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata %struct.memcont** %3, metadata !6515, metadata !DIExpression()), !dbg !6516
  %4 = load i8*, i8** %2, align 8, !dbg !6517
  %5 = icmp eq i8* %4, null, !dbg !6519
  br i1 %5, label %6, label %7, !dbg !6520

; <label>:6:                                      ; preds = %1
  br label %13, !dbg !6521

; <label>:7:                                      ; preds = %1
  %8 = load i8*, i8** %2, align 8, !dbg !6522
  %9 = call %struct.memcont* @HXmc_base(i8* %8), !dbg !6523
  store %struct.memcont* %9, %struct.memcont** %3, align 8, !dbg !6524
  %10 = load %struct.memcont*, %struct.memcont** %3, align 8, !dbg !6525
  call void @HXmc_check(%struct.memcont* %10), !dbg !6526
  %11 = load %struct.memcont*, %struct.memcont** %3, align 8, !dbg !6527
  %12 = bitcast %struct.memcont* %11 to i8*, !dbg !6527
  call void @free(i8* %12) #7, !dbg !6528
  br label %13, !dbg !6529

; <label>:13:                                     ; preds = %7, %6
  ret void, !dbg !6529
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HXmc_length(i8*) #0 !dbg !6530 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.memcont*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6533, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.declare(metadata %struct.memcont** %4, metadata !6535, metadata !DIExpression()), !dbg !6536
  %5 = load i8*, i8** %3, align 8, !dbg !6537
  %6 = icmp eq i8* %5, null, !dbg !6539
  br i1 %6, label %7, label %8, !dbg !6540

; <label>:7:                                      ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !6541
  br label %15, !dbg !6541

; <label>:8:                                      ; preds = %1
  %9 = load i8*, i8** %3, align 8, !dbg !6542
  %10 = call %struct.memcont* @HXmc_base(i8* %9), !dbg !6543
  store %struct.memcont* %10, %struct.memcont** %4, align 8, !dbg !6544
  %11 = load %struct.memcont*, %struct.memcont** %4, align 8, !dbg !6545
  call void @HXmc_check(%struct.memcont* %11), !dbg !6546
  %12 = load %struct.memcont*, %struct.memcont** %4, align 8, !dbg !6547
  %13 = getelementptr inbounds %struct.memcont, %struct.memcont* %12, i32 0, i32 1, !dbg !6548
  %14 = load i64, i64* %13, align 8, !dbg !6548
  store i64 %14, i64* %2, align 8, !dbg !6549
  br label %15, !dbg !6549

; <label>:15:                                     ; preds = %8, %7
  %16 = load i64, i64* %2, align 8, !dbg !6550
  ret i64 %16, !dbg !6550
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_setlen(i8**, i64) #0 !dbg !6551 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.memcont*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !6554, metadata !DIExpression()), !dbg !6555
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6556, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.declare(metadata %struct.memcont** %6, metadata !6558, metadata !DIExpression()), !dbg !6559
  %7 = load i8**, i8*** %4, align 8, !dbg !6560
  %8 = load i64, i64* %5, align 8, !dbg !6562
  %9 = call i8* @HXmc_trunc(i8** %7, i64 %8), !dbg !6563
  %10 = icmp eq i8* %9, null, !dbg !6564
  br i1 %10, label %11, label %12, !dbg !6565

; <label>:11:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !6566
  br label %21, !dbg !6566

; <label>:12:                                     ; preds = %2
  %13 = load i8**, i8*** %4, align 8, !dbg !6567
  %14 = load i8*, i8** %13, align 8, !dbg !6568
  %15 = call %struct.memcont* @HXmc_base(i8* %14), !dbg !6569
  store %struct.memcont* %15, %struct.memcont** %6, align 8, !dbg !6570
  %16 = load i64, i64* %5, align 8, !dbg !6571
  %17 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6572
  %18 = getelementptr inbounds %struct.memcont, %struct.memcont* %17, i32 0, i32 1, !dbg !6573
  store i64 %16, i64* %18, align 8, !dbg !6574
  %19 = load i8**, i8*** %4, align 8, !dbg !6575
  %20 = load i8*, i8** %19, align 8, !dbg !6576
  store i8* %20, i8** %3, align 8, !dbg !6577
  br label %21, !dbg !6577

; <label>:21:                                     ; preds = %12, %11
  %22 = load i8*, i8** %3, align 8, !dbg !6578
  ret i8* %22, !dbg !6578
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_trunc(i8**, i64) #0 !dbg !6579 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.memcont*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !6580, metadata !DIExpression()), !dbg !6581
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6582, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata %struct.memcont** %6, metadata !6584, metadata !DIExpression()), !dbg !6585
  %7 = load i8**, i8*** %4, align 8, !dbg !6586
  %8 = load i8*, i8** %7, align 8, !dbg !6587
  %9 = call %struct.memcont* @HXmc_base(i8* %8), !dbg !6588
  store %struct.memcont* %9, %struct.memcont** %6, align 8, !dbg !6585
  %10 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6589
  call void @HXmc_check(%struct.memcont* %10), !dbg !6590
  %11 = load i64, i64* %5, align 8, !dbg !6591
  %12 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6593
  %13 = getelementptr inbounds %struct.memcont, %struct.memcont* %12, i32 0, i32 0, !dbg !6594
  %14 = load i64, i64* %13, align 8, !dbg !6594
  %15 = icmp ugt i64 %11, %14, !dbg !6595
  br i1 %15, label %16, label %30, !dbg !6596

; <label>:16:                                     ; preds = %2
  %17 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6597
  %18 = bitcast %struct.memcont* %17 to i8*, !dbg !6597
  %19 = load i64, i64* %5, align 8, !dbg !6599
  %20 = call i64 @__HXmc_request(i64 %19), !dbg !6600
  %21 = call i8* @realloc(i8* %18, i64 %20) #7, !dbg !6601
  %22 = bitcast i8* %21 to %struct.memcont*, !dbg !6601
  store %struct.memcont* %22, %struct.memcont** %6, align 8, !dbg !6602
  %23 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6603
  %24 = icmp eq %struct.memcont* %23, null, !dbg !6605
  br i1 %24, label %25, label %26, !dbg !6606

; <label>:25:                                     ; preds = %16
  store i8* null, i8** %3, align 8, !dbg !6607
  br label %43, !dbg !6607

; <label>:26:                                     ; preds = %16
  %27 = load i64, i64* %5, align 8, !dbg !6608
  %28 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6609
  %29 = getelementptr inbounds %struct.memcont, %struct.memcont* %28, i32 0, i32 0, !dbg !6610
  store i64 %27, i64* %29, align 8, !dbg !6611
  br label %38, !dbg !6612

; <label>:30:                                     ; preds = %2
  %31 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6613
  %32 = getelementptr inbounds %struct.memcont, %struct.memcont* %31, i32 0, i32 3, !dbg !6615
  %33 = load i64, i64* %5, align 8, !dbg !6616
  %34 = getelementptr inbounds [0 x i8], [0 x i8]* %32, i64 0, i64 %33, !dbg !6613
  store i8 0, i8* %34, align 1, !dbg !6617
  %35 = load i64, i64* %5, align 8, !dbg !6618
  %36 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6619
  %37 = getelementptr inbounds %struct.memcont, %struct.memcont* %36, i32 0, i32 1, !dbg !6620
  store i64 %35, i64* %37, align 8, !dbg !6621
  br label %38

; <label>:38:                                     ; preds = %30, %26
  %39 = load %struct.memcont*, %struct.memcont** %6, align 8, !dbg !6622
  %40 = getelementptr inbounds %struct.memcont, %struct.memcont* %39, i32 0, i32 3, !dbg !6623
  %41 = getelementptr inbounds [0 x i8], [0 x i8]* %40, i32 0, i32 0, !dbg !6622
  %42 = load i8**, i8*** %4, align 8, !dbg !6624
  store i8* %41, i8** %42, align 8, !dbg !6625
  store i8* %41, i8** %3, align 8, !dbg !6626
  br label %43, !dbg !6626

; <label>:43:                                     ; preds = %38, %25
  %44 = load i8*, i8** %3, align 8, !dbg !6627
  ret i8* %44, !dbg !6627
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_strcat(i8**, i8*) #0 !dbg !6628 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !6629, metadata !DIExpression()), !dbg !6630
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6631, metadata !DIExpression()), !dbg !6632
  %6 = load i8*, i8** %5, align 8, !dbg !6633
  %7 = icmp eq i8* %6, null, !dbg !6635
  br i1 %7, label %8, label %11, !dbg !6636

; <label>:8:                                      ; preds = %2
  %9 = load i8**, i8*** %4, align 8, !dbg !6637
  %10 = load i8*, i8** %9, align 8, !dbg !6638
  store i8* %10, i8** %3, align 8, !dbg !6639
  br label %17, !dbg !6639

; <label>:11:                                     ; preds = %2
  %12 = load i8**, i8*** %4, align 8, !dbg !6640
  %13 = load i8*, i8** %5, align 8, !dbg !6641
  %14 = load i8*, i8** %5, align 8, !dbg !6642
  %15 = call i64 @strlen(i8* %14) #10, !dbg !6643
  %16 = call i8* @HXmc_memcat(i8** %12, i8* %13, i64 %15), !dbg !6644
  store i8* %16, i8** %3, align 8, !dbg !6645
  br label %17, !dbg !6645

; <label>:17:                                     ; preds = %11, %8
  %18 = load i8*, i8** %3, align 8, !dbg !6646
  ret i8* %18, !dbg !6646
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_memcat(i8**, i8*, i64) #0 !dbg !6647 {
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.memcont*, align 8
  %9 = alloca i64, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !6648, metadata !DIExpression()), !dbg !6649
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6650, metadata !DIExpression()), !dbg !6651
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6652, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.declare(metadata %struct.memcont** %8, metadata !6654, metadata !DIExpression()), !dbg !6655
  %10 = load i8**, i8*** %5, align 8, !dbg !6656
  %11 = load i8*, i8** %10, align 8, !dbg !6657
  %12 = call %struct.memcont* @HXmc_base(i8* %11), !dbg !6658
  store %struct.memcont* %12, %struct.memcont** %8, align 8, !dbg !6655
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6659, metadata !DIExpression()), !dbg !6660
  %13 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6661
  %14 = getelementptr inbounds %struct.memcont, %struct.memcont* %13, i32 0, i32 1, !dbg !6662
  %15 = load i64, i64* %14, align 8, !dbg !6662
  %16 = load i64, i64* %7, align 8, !dbg !6663
  %17 = add i64 %15, %16, !dbg !6664
  store i64 %17, i64* %9, align 8, !dbg !6660
  %18 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6665
  call void @HXmc_check(%struct.memcont* %18), !dbg !6666
  %19 = load i64, i64* %9, align 8, !dbg !6667
  %20 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6669
  %21 = getelementptr inbounds %struct.memcont, %struct.memcont* %20, i32 0, i32 0, !dbg !6670
  %22 = load i64, i64* %21, align 8, !dbg !6670
  %23 = icmp ugt i64 %19, %22, !dbg !6671
  br i1 %23, label %24, label %38, !dbg !6672

; <label>:24:                                     ; preds = %3
  %25 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6673
  %26 = bitcast %struct.memcont* %25 to i8*, !dbg !6673
  %27 = load i64, i64* %9, align 8, !dbg !6675
  %28 = call i64 @__HXmc_request(i64 %27), !dbg !6676
  %29 = call i8* @realloc(i8* %26, i64 %28) #7, !dbg !6677
  %30 = bitcast i8* %29 to %struct.memcont*, !dbg !6677
  store %struct.memcont* %30, %struct.memcont** %8, align 8, !dbg !6678
  %31 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6679
  %32 = icmp eq %struct.memcont* %31, null, !dbg !6681
  br i1 %32, label %33, label %34, !dbg !6682

; <label>:33:                                     ; preds = %24
  store i8* null, i8** %4, align 8, !dbg !6683
  br label %66, !dbg !6683

; <label>:34:                                     ; preds = %24
  %35 = load i64, i64* %9, align 8, !dbg !6684
  %36 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6685
  %37 = getelementptr inbounds %struct.memcont, %struct.memcont* %36, i32 0, i32 0, !dbg !6686
  store i64 %35, i64* %37, align 8, !dbg !6687
  br label %38, !dbg !6688

; <label>:38:                                     ; preds = %34, %3
  %39 = load i8*, i8** %6, align 8, !dbg !6689
  %40 = icmp eq i8* %39, null, !dbg !6691
  br i1 %40, label %41, label %46, !dbg !6692

; <label>:41:                                     ; preds = %38
  %42 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6693
  %43 = getelementptr inbounds %struct.memcont, %struct.memcont* %42, i32 0, i32 3, !dbg !6694
  %44 = getelementptr inbounds [0 x i8], [0 x i8]* %43, i32 0, i32 0, !dbg !6693
  %45 = load i8**, i8*** %5, align 8, !dbg !6695
  store i8* %44, i8** %45, align 8, !dbg !6696
  store i8* %44, i8** %4, align 8, !dbg !6697
  br label %66, !dbg !6697

; <label>:46:                                     ; preds = %38
  %47 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6698
  %48 = getelementptr inbounds %struct.memcont, %struct.memcont* %47, i32 0, i32 3, !dbg !6699
  %49 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6700
  %50 = getelementptr inbounds %struct.memcont, %struct.memcont* %49, i32 0, i32 1, !dbg !6701
  %51 = load i64, i64* %50, align 8, !dbg !6701
  %52 = getelementptr inbounds [0 x i8], [0 x i8]* %48, i64 0, i64 %51, !dbg !6698
  %53 = load i8*, i8** %6, align 8, !dbg !6702
  %54 = load i64, i64* %7, align 8, !dbg !6703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64 %54, i1 false), !dbg !6704
  %55 = load i64, i64* %9, align 8, !dbg !6705
  %56 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6706
  %57 = getelementptr inbounds %struct.memcont, %struct.memcont* %56, i32 0, i32 1, !dbg !6707
  store i64 %55, i64* %57, align 8, !dbg !6708
  %58 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6709
  %59 = getelementptr inbounds %struct.memcont, %struct.memcont* %58, i32 0, i32 3, !dbg !6710
  %60 = load i64, i64* %9, align 8, !dbg !6711
  %61 = getelementptr inbounds [0 x i8], [0 x i8]* %59, i64 0, i64 %60, !dbg !6709
  store i8 0, i8* %61, align 1, !dbg !6712
  %62 = load %struct.memcont*, %struct.memcont** %8, align 8, !dbg !6713
  %63 = getelementptr inbounds %struct.memcont, %struct.memcont* %62, i32 0, i32 3, !dbg !6714
  %64 = getelementptr inbounds [0 x i8], [0 x i8]* %63, i32 0, i32 0, !dbg !6713
  %65 = load i8**, i8*** %5, align 8, !dbg !6715
  store i8* %64, i8** %65, align 8, !dbg !6716
  store i8* %64, i8** %4, align 8, !dbg !6717
  br label %66, !dbg !6717

; <label>:66:                                     ; preds = %46, %41, %33
  %67 = load i8*, i8** %4, align 8, !dbg !6718
  ret i8* %67, !dbg !6718
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_strpcat(i8**, i8*) #0 !dbg !6719 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !6720, metadata !DIExpression()), !dbg !6721
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6722, metadata !DIExpression()), !dbg !6723
  %6 = load i8*, i8** %5, align 8, !dbg !6724
  %7 = icmp eq i8* %6, null, !dbg !6726
  br i1 %7, label %8, label %11, !dbg !6727

; <label>:8:                                      ; preds = %2
  %9 = load i8**, i8*** %4, align 8, !dbg !6728
  %10 = load i8*, i8** %9, align 8, !dbg !6729
  store i8* %10, i8** %3, align 8, !dbg !6730
  br label %17, !dbg !6730

; <label>:11:                                     ; preds = %2
  %12 = load i8**, i8*** %4, align 8, !dbg !6731
  %13 = load i8*, i8** %5, align 8, !dbg !6732
  %14 = load i8*, i8** %5, align 8, !dbg !6733
  %15 = call i64 @strlen(i8* %14) #10, !dbg !6734
  %16 = call i8* @HXmc_memins(i8** %12, i64 0, i8* %13, i64 %15), !dbg !6735
  store i8* %16, i8** %3, align 8, !dbg !6736
  br label %17, !dbg !6736

; <label>:17:                                     ; preds = %11, %8
  %18 = load i8*, i8** %3, align 8, !dbg !6737
  ret i8* %18, !dbg !6737
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_memins(i8**, i64, i8*, i64) #0 !dbg !6738 {
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.memcont*, align 8
  %11 = alloca i64, align 8
  store i8** %0, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !6741, metadata !DIExpression()), !dbg !6742
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6743, metadata !DIExpression()), !dbg !6744
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6745, metadata !DIExpression()), !dbg !6746
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6747, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.declare(metadata %struct.memcont** %10, metadata !6749, metadata !DIExpression()), !dbg !6750
  %12 = load i8**, i8*** %6, align 8, !dbg !6751
  %13 = load i8*, i8** %12, align 8, !dbg !6752
  %14 = call %struct.memcont* @HXmc_base(i8* %13), !dbg !6753
  store %struct.memcont* %14, %struct.memcont** %10, align 8, !dbg !6750
  call void @llvm.dbg.declare(metadata i64* %11, metadata !6754, metadata !DIExpression()), !dbg !6755
  %15 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6756
  %16 = getelementptr inbounds %struct.memcont, %struct.memcont* %15, i32 0, i32 1, !dbg !6757
  %17 = load i64, i64* %16, align 8, !dbg !6757
  %18 = load i64, i64* %9, align 8, !dbg !6758
  %19 = add i64 %17, %18, !dbg !6759
  store i64 %19, i64* %11, align 8, !dbg !6755
  %20 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6760
  call void @HXmc_check(%struct.memcont* %20), !dbg !6761
  %21 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6762
  %22 = getelementptr inbounds %struct.memcont, %struct.memcont* %21, i32 0, i32 0, !dbg !6764
  %23 = load i64, i64* %22, align 8, !dbg !6764
  %24 = load i64, i64* %11, align 8, !dbg !6765
  %25 = icmp ult i64 %23, %24, !dbg !6766
  br i1 %25, label %26, label %40, !dbg !6767

; <label>:26:                                     ; preds = %4
  %27 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6768
  %28 = bitcast %struct.memcont* %27 to i8*, !dbg !6768
  %29 = load i64, i64* %11, align 8, !dbg !6770
  %30 = call i64 @__HXmc_request(i64 %29), !dbg !6771
  %31 = call i8* @realloc(i8* %28, i64 %30) #7, !dbg !6772
  %32 = bitcast i8* %31 to %struct.memcont*, !dbg !6772
  store %struct.memcont* %32, %struct.memcont** %10, align 8, !dbg !6773
  %33 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6774
  %34 = icmp eq %struct.memcont* %33, null, !dbg !6776
  br i1 %34, label %35, label %36, !dbg !6777

; <label>:35:                                     ; preds = %26
  store i8* null, i8** %5, align 8, !dbg !6778
  br label %85, !dbg !6778

; <label>:36:                                     ; preds = %26
  %37 = load i64, i64* %11, align 8, !dbg !6779
  %38 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6780
  %39 = getelementptr inbounds %struct.memcont, %struct.memcont* %38, i32 0, i32 0, !dbg !6781
  store i64 %37, i64* %39, align 8, !dbg !6782
  br label %40, !dbg !6783

; <label>:40:                                     ; preds = %36, %4
  %41 = load i8*, i8** %8, align 8, !dbg !6784
  %42 = icmp eq i8* %41, null, !dbg !6786
  br i1 %42, label %43, label %48, !dbg !6787

; <label>:43:                                     ; preds = %40
  %44 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6788
  %45 = getelementptr inbounds %struct.memcont, %struct.memcont* %44, i32 0, i32 3, !dbg !6789
  %46 = getelementptr inbounds [0 x i8], [0 x i8]* %45, i32 0, i32 0, !dbg !6788
  %47 = load i8**, i8*** %6, align 8, !dbg !6790
  store i8* %46, i8** %47, align 8, !dbg !6791
  store i8* %46, i8** %5, align 8, !dbg !6792
  br label %85, !dbg !6792

; <label>:48:                                     ; preds = %40
  %49 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6793
  %50 = getelementptr inbounds %struct.memcont, %struct.memcont* %49, i32 0, i32 3, !dbg !6794
  %51 = load i64, i64* %7, align 8, !dbg !6795
  %52 = load i64, i64* %9, align 8, !dbg !6796
  %53 = add i64 %51, %52, !dbg !6797
  %54 = getelementptr inbounds [0 x i8], [0 x i8]* %50, i64 0, i64 %53, !dbg !6793
  %55 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6798
  %56 = getelementptr inbounds %struct.memcont, %struct.memcont* %55, i32 0, i32 3, !dbg !6799
  %57 = load i64, i64* %7, align 8, !dbg !6800
  %58 = getelementptr inbounds [0 x i8], [0 x i8]* %56, i64 0, i64 %57, !dbg !6798
  %59 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6801
  %60 = getelementptr inbounds %struct.memcont, %struct.memcont* %59, i32 0, i32 1, !dbg !6802
  %61 = load i64, i64* %60, align 8, !dbg !6802
  %62 = load i64, i64* %7, align 8, !dbg !6803
  %63 = sub i64 %61, %62, !dbg !6804
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %58, i64 %63, i1 false), !dbg !6805
  %64 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6806
  %65 = getelementptr inbounds %struct.memcont, %struct.memcont* %64, i32 0, i32 3, !dbg !6807
  %66 = load i64, i64* %7, align 8, !dbg !6808
  %67 = getelementptr inbounds [0 x i8], [0 x i8]* %65, i64 0, i64 %66, !dbg !6806
  %68 = load i8*, i8** %8, align 8, !dbg !6809
  %69 = load i64, i64* %9, align 8, !dbg !6810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %68, i64 %69, i1 false), !dbg !6811
  %70 = load i64, i64* %9, align 8, !dbg !6812
  %71 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6813
  %72 = getelementptr inbounds %struct.memcont, %struct.memcont* %71, i32 0, i32 1, !dbg !6814
  %73 = load i64, i64* %72, align 8, !dbg !6815
  %74 = add i64 %73, %70, !dbg !6815
  store i64 %74, i64* %72, align 8, !dbg !6815
  %75 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6816
  %76 = getelementptr inbounds %struct.memcont, %struct.memcont* %75, i32 0, i32 3, !dbg !6817
  %77 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6818
  %78 = getelementptr inbounds %struct.memcont, %struct.memcont* %77, i32 0, i32 1, !dbg !6819
  %79 = load i64, i64* %78, align 8, !dbg !6819
  %80 = getelementptr inbounds [0 x i8], [0 x i8]* %76, i64 0, i64 %79, !dbg !6816
  store i8 0, i8* %80, align 1, !dbg !6820
  %81 = load %struct.memcont*, %struct.memcont** %10, align 8, !dbg !6821
  %82 = getelementptr inbounds %struct.memcont, %struct.memcont* %81, i32 0, i32 3, !dbg !6822
  %83 = getelementptr inbounds [0 x i8], [0 x i8]* %82, i32 0, i32 0, !dbg !6821
  %84 = load i8**, i8*** %6, align 8, !dbg !6823
  store i8* %83, i8** %84, align 8, !dbg !6824
  store i8* %83, i8** %5, align 8, !dbg !6825
  br label %85, !dbg !6825

; <label>:85:                                     ; preds = %48, %43, %35
  %86 = load i8*, i8** %5, align 8, !dbg !6826
  ret i8* %86, !dbg !6826
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #6

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_mempcat(i8**, i8*, i64) #0 !dbg !6827 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !6828, metadata !DIExpression()), !dbg !6829
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6830, metadata !DIExpression()), !dbg !6831
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6832, metadata !DIExpression()), !dbg !6833
  %7 = load i8**, i8*** %4, align 8, !dbg !6834
  %8 = load i8*, i8** %5, align 8, !dbg !6835
  %9 = load i64, i64* %6, align 8, !dbg !6836
  %10 = call i8* @HXmc_memins(i8** %7, i64 0, i8* %8, i64 %9), !dbg !6837
  ret i8* %10, !dbg !6838
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_strins(i8**, i64, i8*) #0 !dbg !6839 {
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6846, metadata !DIExpression()), !dbg !6847
  %8 = load i8*, i8** %7, align 8, !dbg !6848
  %9 = icmp eq i8* %8, null, !dbg !6850
  br i1 %9, label %10, label %13, !dbg !6851

; <label>:10:                                     ; preds = %3
  %11 = load i8**, i8*** %5, align 8, !dbg !6852
  %12 = load i8*, i8** %11, align 8, !dbg !6853
  store i8* %12, i8** %4, align 8, !dbg !6854
  br label %20, !dbg !6854

; <label>:13:                                     ; preds = %3
  %14 = load i8**, i8*** %5, align 8, !dbg !6855
  %15 = load i64, i64* %6, align 8, !dbg !6856
  %16 = load i8*, i8** %7, align 8, !dbg !6857
  %17 = load i8*, i8** %7, align 8, !dbg !6858
  %18 = call i64 @strlen(i8* %17) #10, !dbg !6859
  %19 = call i8* @HXmc_memins(i8** %14, i64 %15, i8* %16, i64 %18), !dbg !6860
  store i8* %19, i8** %4, align 8, !dbg !6861
  br label %20, !dbg !6861

; <label>:20:                                     ; preds = %13, %10
  %21 = load i8*, i8** %4, align 8, !dbg !6862
  ret i8* %21, !dbg !6862
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HXmc_memdel(i8*, i64, i64) #0 !dbg !6863 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.memcont*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6866, metadata !DIExpression()), !dbg !6867
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6868, metadata !DIExpression()), !dbg !6869
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6870, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.declare(metadata %struct.memcont** %7, metadata !6872, metadata !DIExpression()), !dbg !6873
  %8 = load i8*, i8** %4, align 8, !dbg !6874
  %9 = call %struct.memcont* @HXmc_base(i8* %8), !dbg !6875
  store %struct.memcont* %9, %struct.memcont** %7, align 8, !dbg !6873
  %10 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6876
  call void @HXmc_check(%struct.memcont* %10), !dbg !6877
  %11 = load i64, i64* %5, align 8, !dbg !6878
  %12 = load i64, i64* %6, align 8, !dbg !6880
  %13 = add i64 %11, %12, !dbg !6881
  %14 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6882
  %15 = getelementptr inbounds %struct.memcont, %struct.memcont* %14, i32 0, i32 1, !dbg !6883
  %16 = load i64, i64* %15, align 8, !dbg !6883
  %17 = icmp ugt i64 %13, %16, !dbg !6884
  br i1 %17, label %18, label %24, !dbg !6885

; <label>:18:                                     ; preds = %3
  %19 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6886
  %20 = getelementptr inbounds %struct.memcont, %struct.memcont* %19, i32 0, i32 1, !dbg !6887
  %21 = load i64, i64* %20, align 8, !dbg !6887
  %22 = load i64, i64* %5, align 8, !dbg !6888
  %23 = sub i64 %21, %22, !dbg !6889
  store i64 %23, i64* %6, align 8, !dbg !6890
  br label %24, !dbg !6891

; <label>:24:                                     ; preds = %18, %3
  %25 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6892
  %26 = getelementptr inbounds %struct.memcont, %struct.memcont* %25, i32 0, i32 3, !dbg !6893
  %27 = load i64, i64* %5, align 8, !dbg !6894
  %28 = getelementptr inbounds [0 x i8], [0 x i8]* %26, i64 0, i64 %27, !dbg !6892
  %29 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6895
  %30 = getelementptr inbounds %struct.memcont, %struct.memcont* %29, i32 0, i32 3, !dbg !6896
  %31 = load i64, i64* %5, align 8, !dbg !6897
  %32 = load i64, i64* %6, align 8, !dbg !6898
  %33 = add i64 %31, %32, !dbg !6899
  %34 = getelementptr inbounds [0 x i8], [0 x i8]* %30, i64 0, i64 %33, !dbg !6895
  %35 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6900
  %36 = getelementptr inbounds %struct.memcont, %struct.memcont* %35, i32 0, i32 1, !dbg !6901
  %37 = load i64, i64* %36, align 8, !dbg !6901
  %38 = load i64, i64* %5, align 8, !dbg !6902
  %39 = sub i64 %37, %38, !dbg !6903
  %40 = load i64, i64* %6, align 8, !dbg !6904
  %41 = sub i64 %39, %40, !dbg !6905
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %34, i64 %41, i1 false), !dbg !6906
  %42 = load i64, i64* %6, align 8, !dbg !6907
  %43 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6908
  %44 = getelementptr inbounds %struct.memcont, %struct.memcont* %43, i32 0, i32 1, !dbg !6909
  %45 = load i64, i64* %44, align 8, !dbg !6910
  %46 = sub i64 %45, %42, !dbg !6910
  store i64 %46, i64* %44, align 8, !dbg !6910
  %47 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6911
  %48 = getelementptr inbounds %struct.memcont, %struct.memcont* %47, i32 0, i32 3, !dbg !6912
  %49 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6913
  %50 = getelementptr inbounds %struct.memcont, %struct.memcont* %49, i32 0, i32 1, !dbg !6914
  %51 = load i64, i64* %50, align 8, !dbg !6914
  %52 = getelementptr inbounds [0 x i8], [0 x i8]* %48, i64 0, i64 %51, !dbg !6911
  store i8 0, i8* %52, align 1, !dbg !6915
  %53 = load %struct.memcont*, %struct.memcont** %7, align 8, !dbg !6916
  %54 = getelementptr inbounds %struct.memcont, %struct.memcont* %53, i32 0, i32 3, !dbg !6917
  %55 = getelementptr inbounds [0 x i8], [0 x i8]* %54, i32 0, i32 0, !dbg !6916
  ret i8* %55, !dbg !6918
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HXmc_zvecfree(i8**) #0 !dbg !6919 {
  %2 = alloca i8**, align 8
  %3 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !6924, metadata !DIExpression()), !dbg !6925
  %4 = load i8**, i8*** %2, align 8, !dbg !6926
  store i8** %4, i8*** %3, align 8, !dbg !6928
  br label %5, !dbg !6929

; <label>:5:                                      ; preds = %12, %1
  %6 = load i8**, i8*** %3, align 8, !dbg !6930
  %7 = load i8*, i8** %6, align 8, !dbg !6932
  %8 = icmp ne i8* %7, null, !dbg !6933
  br i1 %8, label %9, label %15, !dbg !6934

; <label>:9:                                      ; preds = %5
  %10 = load i8**, i8*** %3, align 8, !dbg !6935
  %11 = load i8*, i8** %10, align 8, !dbg !6936
  call void @HXmc_free(i8* %11), !dbg !6937
  br label %12, !dbg !6937

; <label>:12:                                     ; preds = %9
  %13 = load i8**, i8*** %3, align 8, !dbg !6938
  %14 = getelementptr inbounds i8*, i8** %13, i32 1, !dbg !6938
  store i8** %14, i8*** %3, align 8, !dbg !6938
  br label %5, !dbg !6939, !llvm.loop !6940

; <label>:15:                                     ; preds = %5
  %16 = load i8**, i8*** %2, align 8, !dbg !6942
  %17 = bitcast i8** %16 to i8*, !dbg !6942
  call void @free(i8* %17) #7, !dbg !6943
  ret void, !dbg !6944
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_ffs(i64) #0 !dbg !6945 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6950, metadata !DIExpression()), !dbg !6951
  store i32 0, i32* %4, align 4, !dbg !6951
  %5 = load i64, i64* %3, align 8, !dbg !6952
  %6 = icmp eq i64 %5, 0, !dbg !6954
  br i1 %6, label %7, label %8, !dbg !6955

; <label>:7:                                      ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !6956
  br label %18, !dbg !6956

; <label>:8:                                      ; preds = %1
  br label %9, !dbg !6957

; <label>:9:                                      ; preds = %13, %8
  %10 = load i64, i64* %3, align 8, !dbg !6958
  %11 = lshr i64 %10, 1, !dbg !6958
  store i64 %11, i64* %3, align 8, !dbg !6958
  %12 = icmp uge i64 %11, 1, !dbg !6959
  br i1 %12, label %13, label %16, !dbg !6957

; <label>:13:                                     ; preds = %9
  %14 = load i32, i32* %4, align 4, !dbg !6960
  %15 = add nsw i32 %14, 1, !dbg !6960
  store i32 %15, i32* %4, align 4, !dbg !6960
  br label %9, !dbg !6957, !llvm.loop !6961

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %4, align 4, !dbg !6963
  store i32 %17, i32* %2, align 4, !dbg !6964
  br label %18, !dbg !6964

; <label>:18:                                     ; preds = %16, %7
  %19 = load i32, i32* %2, align 4, !dbg !6965
  ret i32 %19, !dbg !6965
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_fls(i64) #0 !dbg !6966 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6967, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6969, metadata !DIExpression()), !dbg !6970
  store i32 31, i32* %4, align 4, !dbg !6971
  br label %5, !dbg !6973

; <label>:5:                                      ; preds = %18, %1
  %6 = load i32, i32* %4, align 4, !dbg !6974
  %7 = icmp sge i32 %6, 0, !dbg !6976
  br i1 %7, label %8, label %21, !dbg !6977

; <label>:8:                                      ; preds = %5
  %9 = load i64, i64* %3, align 8, !dbg !6978
  %10 = load i32, i32* %4, align 4, !dbg !6980
  %11 = shl i32 1, %10, !dbg !6981
  %12 = sext i32 %11 to i64, !dbg !6982
  %13 = and i64 %9, %12, !dbg !6983
  %14 = icmp ne i64 %13, 0, !dbg !6983
  br i1 %14, label %15, label %17, !dbg !6984

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* %4, align 4, !dbg !6985
  store i32 %16, i32* %2, align 4, !dbg !6986
  br label %22, !dbg !6986

; <label>:17:                                     ; preds = %8
  br label %18, !dbg !6987

; <label>:18:                                     ; preds = %17
  %19 = load i32, i32* %4, align 4, !dbg !6988
  %20 = add nsw i32 %19, -1, !dbg !6988
  store i32 %20, i32* %4, align 4, !dbg !6988
  br label %5, !dbg !6989, !llvm.loop !6990

; <label>:21:                                     ; preds = %5
  store i32 -1, i32* %2, align 4, !dbg !6992
  br label %22, !dbg !6992

; <label>:22:                                     ; preds = %21, %15
  %23 = load i32, i32* %2, align 4, !dbg !6993
  ret i32 %23, !dbg !6993
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_hexdump(%struct._IO_FILE*, i8*, i32) #0 !dbg !6994 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !7037, metadata !DIExpression()), !dbg !7038
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7039, metadata !DIExpression()), !dbg !7040
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7041, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7043, metadata !DIExpression()), !dbg !7044
  %11 = load i8*, i8** %5, align 8, !dbg !7045
  store i8* %11, i8** %7, align 8, !dbg !7044
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7046, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7048, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7050, metadata !DIExpression()), !dbg !7051
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7052
  %13 = call i32 @fileno(%struct._IO_FILE* %12) #7, !dbg !7053
  %14 = call i32 @isatty(i32 %13) #7, !dbg !7054
  %15 = icmp ne i32 %14, 0, !dbg !7054
  %16 = zext i1 %15 to i8, !dbg !7051
  store i8 %16, i8* %10, align 1, !dbg !7051
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7055
  %18 = load i32, i32* %6, align 4, !dbg !7056
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i32 0, i32 0), i32 %18), !dbg !7057
  store i32 0, i32* %8, align 4, !dbg !7058
  br label %20, !dbg !7060

; <label>:20:                                     ; preds = %84, %3
  %21 = load i32, i32* %8, align 4, !dbg !7061
  %22 = load i32, i32* %6, align 4, !dbg !7063
  %23 = udiv i32 %22, 16, !dbg !7064
  %24 = icmp ult i32 %21, %23, !dbg !7065
  br i1 %24, label %25, label %87, !dbg !7066

; <label>:25:                                     ; preds = %20
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7067
  %27 = load i32, i32* %8, align 4, !dbg !7069
  %28 = mul i32 %27, 16, !dbg !7070
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.70, i32 0, i32 0), i32 %28), !dbg !7071
  store i32 0, i32* %9, align 4, !dbg !7072
  br label %30, !dbg !7074

; <label>:30:                                     ; preds = %44, %25
  %31 = load i32, i32* %9, align 4, !dbg !7075
  %32 = icmp ult i32 %31, 16, !dbg !7077
  br i1 %32, label %33, label %47, !dbg !7078

; <label>:33:                                     ; preds = %30
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7079
  %35 = load i8*, i8** %7, align 8, !dbg !7080
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7080
  store i8* %36, i8** %7, align 8, !dbg !7080
  %37 = load i8, i8* %35, align 1, !dbg !7081
  %38 = zext i8 %37 to i32, !dbg !7081
  %39 = load i32, i32* %9, align 4, !dbg !7082
  %40 = icmp eq i32 %39, 7, !dbg !7083
  %41 = zext i1 %40 to i64, !dbg !7084
  %42 = select i1 %40, i32 45, i32 32, !dbg !7084
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.71, i32 0, i32 0), i32 %38, i32 %42), !dbg !7085
  br label %44, !dbg !7085

; <label>:44:                                     ; preds = %33
  %45 = load i32, i32* %9, align 4, !dbg !7086
  %46 = add i32 %45, 1, !dbg !7086
  store i32 %46, i32* %9, align 4, !dbg !7086
  br label %30, !dbg !7087, !llvm.loop !7088

; <label>:47:                                     ; preds = %30
  %48 = load i8*, i8** %7, align 8, !dbg !7090
  %49 = getelementptr inbounds i8, i8* %48, i64 -16, !dbg !7090
  store i8* %49, i8** %7, align 8, !dbg !7090
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7091
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.72, i32 0, i32 0)), !dbg !7092
  store i32 0, i32* %9, align 4, !dbg !7093
  br label %52, !dbg !7095

; <label>:52:                                     ; preds = %76, %47
  %53 = load i32, i32* %9, align 4, !dbg !7096
  %54 = icmp ult i32 %53, 16, !dbg !7098
  br i1 %54, label %55, label %81, !dbg !7099

; <label>:55:                                     ; preds = %52
  %56 = load i8*, i8** %7, align 8, !dbg !7100
  %57 = load i8, i8* %56, align 1, !dbg !7102
  %58 = call zeroext i1 @HX_isprint(i8 zeroext %57), !dbg !7103
  br i1 %58, label %59, label %65, !dbg !7104

; <label>:59:                                     ; preds = %55
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7105
  %61 = load i8*, i8** %7, align 8, !dbg !7106
  %62 = load i8, i8* %61, align 1, !dbg !7107
  %63 = zext i8 %62 to i32, !dbg !7107
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.73, i32 0, i32 0), i32 %63), !dbg !7108
  br label %75, !dbg !7108

; <label>:65:                                     ; preds = %55
  %66 = load i8, i8* %10, align 1, !dbg !7109
  %67 = trunc i8 %66 to i1, !dbg !7109
  br i1 %67, label %68, label %71, !dbg !7111

; <label>:68:                                     ; preds = %65
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7112
  %70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.74, i32 0, i32 0)), !dbg !7113
  br label %74, !dbg !7113

; <label>:71:                                     ; preds = %65
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7114
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.75, i32 0, i32 0)), !dbg !7115
  br label %74

; <label>:74:                                     ; preds = %71, %68
  br label %75

; <label>:75:                                     ; preds = %74, %59
  br label %76, !dbg !7116

; <label>:76:                                     ; preds = %75
  %77 = load i32, i32* %9, align 4, !dbg !7117
  %78 = add i32 %77, 1, !dbg !7117
  store i32 %78, i32* %9, align 4, !dbg !7117
  %79 = load i8*, i8** %7, align 8, !dbg !7118
  %80 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !7118
  store i8* %80, i8** %7, align 8, !dbg !7118
  br label %52, !dbg !7119, !llvm.loop !7120

; <label>:81:                                     ; preds = %52
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7122
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.76, i32 0, i32 0)), !dbg !7123
  br label %84, !dbg !7124

; <label>:84:                                     ; preds = %81
  %85 = load i32, i32* %8, align 4, !dbg !7125
  %86 = add i32 %85, 1, !dbg !7125
  store i32 %86, i32* %8, align 4, !dbg !7125
  br label %20, !dbg !7126, !llvm.loop !7127

; <label>:87:                                     ; preds = %20
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7129
  %89 = load i32, i32* %8, align 4, !dbg !7130
  %90 = mul i32 %89, 16, !dbg !7131
  %91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.70, i32 0, i32 0), i32 %90), !dbg !7132
  %92 = load i32, i32* %8, align 4, !dbg !7133
  %93 = mul i32 %92, 16, !dbg !7134
  %94 = load i32, i32* %6, align 4, !dbg !7135
  %95 = sub i32 %94, %93, !dbg !7135
  store i32 %95, i32* %6, align 4, !dbg !7135
  store i32 0, i32* %8, align 4, !dbg !7136
  br label %96, !dbg !7138

; <label>:96:                                     ; preds = %113, %87
  %97 = load i32, i32* %8, align 4, !dbg !7139
  %98 = load i32, i32* %6, align 4, !dbg !7141
  %99 = icmp ult i32 %97, %98, !dbg !7142
  br i1 %99, label %100, label %116, !dbg !7143

; <label>:100:                                    ; preds = %96
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7144
  %102 = load i8*, i8** %7, align 8, !dbg !7145
  %103 = load i32, i32* %8, align 4, !dbg !7146
  %104 = zext i32 %103 to i64, !dbg !7145
  %105 = getelementptr inbounds i8, i8* %102, i64 %104, !dbg !7145
  %106 = load i8, i8* %105, align 1, !dbg !7145
  %107 = zext i8 %106 to i32, !dbg !7145
  %108 = load i32, i32* %8, align 4, !dbg !7147
  %109 = icmp eq i32 %108, 7, !dbg !7148
  %110 = zext i1 %109 to i64, !dbg !7149
  %111 = select i1 %109, i32 45, i32 32, !dbg !7149
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.71, i32 0, i32 0), i32 %107, i32 %111), !dbg !7150
  br label %113, !dbg !7150

; <label>:113:                                    ; preds = %100
  %114 = load i32, i32* %8, align 4, !dbg !7151
  %115 = add i32 %114, 1, !dbg !7151
  store i32 %115, i32* %8, align 4, !dbg !7151
  br label %96, !dbg !7152, !llvm.loop !7153

; <label>:116:                                    ; preds = %96
  br label %117, !dbg !7155

; <label>:117:                                    ; preds = %123, %116
  %118 = load i32, i32* %8, align 4, !dbg !7156
  %119 = icmp ult i32 %118, 16, !dbg !7159
  br i1 %119, label %120, label %126, !dbg !7160

; <label>:120:                                    ; preds = %117
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7161
  %122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.77, i32 0, i32 0)), !dbg !7162
  br label %123, !dbg !7162

; <label>:123:                                    ; preds = %120
  %124 = load i32, i32* %8, align 4, !dbg !7163
  %125 = add i32 %124, 1, !dbg !7163
  store i32 %125, i32* %8, align 4, !dbg !7163
  br label %117, !dbg !7164, !llvm.loop !7165

; <label>:126:                                    ; preds = %117
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7167
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.72, i32 0, i32 0)), !dbg !7168
  store i32 0, i32* %8, align 4, !dbg !7169
  br label %129, !dbg !7171

; <label>:129:                                    ; preds = %160, %126
  %130 = load i32, i32* %8, align 4, !dbg !7172
  %131 = load i32, i32* %6, align 4, !dbg !7174
  %132 = icmp ult i32 %130, %131, !dbg !7175
  br i1 %132, label %133, label %163, !dbg !7176

; <label>:133:                                    ; preds = %129
  %134 = load i8*, i8** %7, align 8, !dbg !7177
  %135 = load i32, i32* %8, align 4, !dbg !7179
  %136 = zext i32 %135 to i64, !dbg !7177
  %137 = getelementptr inbounds i8, i8* %134, i64 %136, !dbg !7177
  %138 = load i8, i8* %137, align 1, !dbg !7177
  %139 = call zeroext i1 @HX_isprint(i8 zeroext %138), !dbg !7180
  br i1 %139, label %140, label %149, !dbg !7181

; <label>:140:                                    ; preds = %133
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7182
  %142 = load i8*, i8** %7, align 8, !dbg !7183
  %143 = load i32, i32* %8, align 4, !dbg !7184
  %144 = zext i32 %143 to i64, !dbg !7183
  %145 = getelementptr inbounds i8, i8* %142, i64 %144, !dbg !7183
  %146 = load i8, i8* %145, align 1, !dbg !7183
  %147 = zext i8 %146 to i32, !dbg !7183
  %148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.73, i32 0, i32 0), i32 %147), !dbg !7185
  br label %159, !dbg !7185

; <label>:149:                                    ; preds = %133
  %150 = load i8, i8* %10, align 1, !dbg !7186
  %151 = trunc i8 %150 to i1, !dbg !7186
  br i1 %151, label %152, label %155, !dbg !7188

; <label>:152:                                    ; preds = %149
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7189
  %154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.74, i32 0, i32 0)), !dbg !7190
  br label %158, !dbg !7190

; <label>:155:                                    ; preds = %149
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7191
  %157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %156, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.75, i32 0, i32 0)), !dbg !7192
  br label %158

; <label>:158:                                    ; preds = %155, %152
  br label %159

; <label>:159:                                    ; preds = %158, %140
  br label %160, !dbg !7193

; <label>:160:                                    ; preds = %159
  %161 = load i32, i32* %8, align 4, !dbg !7194
  %162 = add i32 %161, 1, !dbg !7194
  store i32 %162, i32* %8, align 4, !dbg !7194
  br label %129, !dbg !7195, !llvm.loop !7196

; <label>:163:                                    ; preds = %129
  %164 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !7198
  %165 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.76, i32 0, i32 0)), !dbg !7199
  ret void, !dbg !7200
}

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isprint(i8 zeroext) #0 !dbg !7201 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !7202, metadata !DIExpression()), !dbg !7203
  %3 = call i16** @__ctype_b_loc() #11, !dbg !7204
  %4 = load i16*, i16** %3, align 8, !dbg !7204
  %5 = load i8, i8* %2, align 1, !dbg !7204
  %6 = zext i8 %5 to i32, !dbg !7204
  %7 = sext i32 %6 to i64, !dbg !7204
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !7204
  %9 = load i16, i16* %8, align 2, !dbg !7204
  %10 = zext i16 %9 to i32, !dbg !7204
  %11 = and i32 %10, 16384, !dbg !7204
  %12 = icmp ne i32 %11, 0, !dbg !7204
  ret i1 %12, !dbg !7205
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_zvecfree(i8**) #0 !dbg !7206 {
  %2 = alloca i8**, align 8
  %3 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !7209, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !7211, metadata !DIExpression()), !dbg !7212
  %4 = load i8**, i8*** %2, align 8, !dbg !7213
  store i8** %4, i8*** %3, align 8, !dbg !7215
  br label %5, !dbg !7216

; <label>:5:                                      ; preds = %12, %1
  %6 = load i8**, i8*** %3, align 8, !dbg !7217
  %7 = load i8*, i8** %6, align 8, !dbg !7219
  %8 = icmp ne i8* %7, null, !dbg !7220
  br i1 %8, label %9, label %15, !dbg !7221

; <label>:9:                                      ; preds = %5
  %10 = load i8**, i8*** %3, align 8, !dbg !7222
  %11 = load i8*, i8** %10, align 8, !dbg !7223
  call void @free(i8* %11) #7, !dbg !7224
  br label %12, !dbg !7224

; <label>:12:                                     ; preds = %9
  %13 = load i8**, i8*** %3, align 8, !dbg !7225
  %14 = getelementptr inbounds i8*, i8** %13, i32 1, !dbg !7225
  store i8** %14, i8*** %3, align 8, !dbg !7225
  br label %5, !dbg !7226, !llvm.loop !7227

; <label>:15:                                     ; preds = %5
  %16 = load i8**, i8*** %2, align 8, !dbg !7229
  %17 = bitcast i8** %16 to i8*, !dbg !7229
  call void @free(i8* %17) #7, !dbg !7230
  ret void, !dbg !7231
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXparse_dequote_fmt(i8*, i8*, i8**) #0 !dbg !7232 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7235, metadata !DIExpression()), !dbg !7236
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7237, metadata !DIExpression()), !dbg !7238
  store i8** %2, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i32 0, i32* %8, align 4, !dbg !7242
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7243, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7245, metadata !DIExpression()), !dbg !7246
  store i8 0, i8* %10, align 1, !dbg !7246
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7247, metadata !DIExpression()), !dbg !7248
  %12 = load i8*, i8** %5, align 8, !dbg !7249
  store i8* %12, i8** %9, align 8, !dbg !7251
  br label %13, !dbg !7252

; <label>:13:                                     ; preds = %100, %98, %81, %71, %40, %39, %26, %3
  %14 = load i8*, i8** %9, align 8, !dbg !7253
  %15 = load i8, i8* %14, align 1, !dbg !7255
  %16 = sext i8 %15 to i32, !dbg !7255
  %17 = icmp ne i32 %16, 0, !dbg !7256
  br i1 %17, label %18, label %103, !dbg !7257

; <label>:18:                                     ; preds = %13
  %19 = load i8, i8* %10, align 1, !dbg !7258
  %20 = sext i8 %19 to i32, !dbg !7258
  %21 = icmp eq i32 %20, 0, !dbg !7261
  br i1 %21, label %22, label %74, !dbg !7262

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %9, align 8, !dbg !7263
  %24 = load i8, i8* %23, align 1, !dbg !7265
  %25 = sext i8 %24 to i32, !dbg !7265
  switch i32 %25, label %45 [
    i32 34, label %26
    i32 39, label %26
    i32 92, label %30
    i32 40, label %40
  ], !dbg !7266

; <label>:26:                                     ; preds = %22, %22
  %27 = load i8*, i8** %9, align 8, !dbg !7267
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7267
  store i8* %28, i8** %9, align 8, !dbg !7267
  %29 = load i8, i8* %27, align 1, !dbg !7269
  store i8 %29, i8* %10, align 1, !dbg !7270
  br label %13, !dbg !7271, !llvm.loop !7272

; <label>:30:                                     ; preds = %22
  %31 = load i8*, i8** %9, align 8, !dbg !7274
  %32 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !7274
  %33 = load i8, i8* %32, align 1, !dbg !7274
  %34 = sext i8 %33 to i32, !dbg !7274
  %35 = icmp ne i32 %34, 0, !dbg !7276
  br i1 %35, label %36, label %39, !dbg !7277

; <label>:36:                                     ; preds = %30
  %37 = load i8*, i8** %9, align 8, !dbg !7278
  %38 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !7278
  store i8* %38, i8** %9, align 8, !dbg !7278
  br label %39, !dbg !7279

; <label>:39:                                     ; preds = %36, %30
  br label %13, !dbg !7280, !llvm.loop !7272

; <label>:40:                                     ; preds = %22
  %41 = load i32, i32* %8, align 4, !dbg !7281
  %42 = add i32 %41, 1, !dbg !7281
  store i32 %42, i32* %8, align 4, !dbg !7281
  %43 = load i8*, i8** %9, align 8, !dbg !7282
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !7282
  store i8* %44, i8** %9, align 8, !dbg !7282
  br label %13, !dbg !7283, !llvm.loop !7272

; <label>:45:                                     ; preds = %22
  %46 = load i32, i32* %8, align 4, !dbg !7284
  %47 = icmp eq i32 %46, 0, !dbg !7286
  br i1 %47, label %48, label %59, !dbg !7287

; <label>:48:                                     ; preds = %45
  %49 = load i8*, i8** %6, align 8, !dbg !7288
  %50 = icmp ne i8* %49, null, !dbg !7289
  br i1 %50, label %51, label %59, !dbg !7290

; <label>:51:                                     ; preds = %48
  %52 = load i8*, i8** %6, align 8, !dbg !7291
  %53 = load i8*, i8** %9, align 8, !dbg !7292
  %54 = load i8, i8* %53, align 1, !dbg !7293
  %55 = sext i8 %54 to i32, !dbg !7293
  %56 = call i8* @strchr(i8* %52, i32 %55) #10, !dbg !7294
  %57 = icmp ne i8* %56, null, !dbg !7295
  br i1 %57, label %58, label %59, !dbg !7296

; <label>:58:                                     ; preds = %51
  br label %103, !dbg !7297

; <label>:59:                                     ; preds = %51, %48, %45
  %60 = load i8*, i8** %9, align 8, !dbg !7298
  %61 = getelementptr inbounds i8, i8* %60, i64 0, !dbg !7298
  %62 = load i8, i8* %61, align 1, !dbg !7298
  %63 = sext i8 %62 to i32, !dbg !7298
  %64 = icmp eq i32 %63, 41, !dbg !7300
  br i1 %64, label %65, label %71, !dbg !7301

; <label>:65:                                     ; preds = %59
  %66 = load i32, i32* %8, align 4, !dbg !7302
  %67 = icmp ugt i32 %66, 0, !dbg !7303
  br i1 %67, label %68, label %71, !dbg !7304

; <label>:68:                                     ; preds = %65
  %69 = load i32, i32* %8, align 4, !dbg !7305
  %70 = add i32 %69, -1, !dbg !7305
  store i32 %70, i32* %8, align 4, !dbg !7305
  br label %71, !dbg !7305

; <label>:71:                                     ; preds = %68, %65, %59
  %72 = load i8*, i8** %9, align 8, !dbg !7306
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !7306
  store i8* %73, i8** %9, align 8, !dbg !7306
  br label %13, !dbg !7307, !llvm.loop !7272

; <label>:74:                                     ; preds = %18
  %75 = load i8*, i8** %9, align 8, !dbg !7308
  %76 = load i8, i8* %75, align 1, !dbg !7310
  %77 = sext i8 %76 to i32, !dbg !7310
  %78 = load i8, i8* %10, align 1, !dbg !7311
  %79 = sext i8 %78 to i32, !dbg !7311
  %80 = icmp eq i32 %77, %79, !dbg !7312
  br i1 %80, label %81, label %84, !dbg !7313

; <label>:81:                                     ; preds = %74
  store i8 0, i8* %10, align 1, !dbg !7314
  %82 = load i8*, i8** %9, align 8, !dbg !7316
  %83 = getelementptr inbounds i8, i8* %82, i32 1, !dbg !7316
  store i8* %83, i8** %9, align 8, !dbg !7316
  br label %13, !dbg !7317, !llvm.loop !7272

; <label>:84:                                     ; preds = %74
  %85 = load i8*, i8** %9, align 8, !dbg !7318
  %86 = load i8, i8* %85, align 1, !dbg !7320
  %87 = sext i8 %86 to i32, !dbg !7320
  %88 = icmp eq i32 %87, 92, !dbg !7321
  br i1 %88, label %89, label %99, !dbg !7322

; <label>:89:                                     ; preds = %84
  %90 = load i8*, i8** %9, align 8, !dbg !7323
  %91 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !7323
  store i8* %91, i8** %9, align 8, !dbg !7323
  %92 = load i8, i8* %91, align 1, !dbg !7326
  %93 = sext i8 %92 to i32, !dbg !7326
  %94 = icmp ne i32 %93, 0, !dbg !7327
  br i1 %94, label %95, label %98, !dbg !7328

; <label>:95:                                     ; preds = %89
  %96 = load i8*, i8** %9, align 8, !dbg !7329
  %97 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !7329
  store i8* %97, i8** %9, align 8, !dbg !7329
  br label %98, !dbg !7329

; <label>:98:                                     ; preds = %95, %89
  br label %13, !dbg !7330, !llvm.loop !7272

; <label>:99:                                     ; preds = %84
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i8*, i8** %9, align 8, !dbg !7331
  %102 = getelementptr inbounds i8, i8* %101, i32 1, !dbg !7331
  store i8* %102, i8** %9, align 8, !dbg !7331
  br label %13, !dbg !7332, !llvm.loop !7272

; <label>:103:                                    ; preds = %58, %13
  %104 = load i8**, i8*** %7, align 8, !dbg !7333
  %105 = icmp ne i8** %104, null, !dbg !7335
  br i1 %105, label %106, label %109, !dbg !7336

; <label>:106:                                    ; preds = %103
  %107 = load i8*, i8** %9, align 8, !dbg !7337
  %108 = load i8**, i8*** %7, align 8, !dbg !7338
  store i8* %107, i8** %108, align 8, !dbg !7339
  br label %109, !dbg !7340

; <label>:109:                                    ; preds = %106, %103
  %110 = load i8*, i8** %5, align 8, !dbg !7341
  %111 = load i8*, i8** %9, align 8, !dbg !7342
  %112 = load i8*, i8** %5, align 8, !dbg !7343
  %113 = ptrtoint i8* %111 to i64, !dbg !7344
  %114 = ptrtoint i8* %112 to i64, !dbg !7344
  %115 = sub i64 %113, %114, !dbg !7344
  %116 = call i8* @HXmc_meminit(i8* %110, i64 %115), !dbg !7345
  store i8* %116, i8** %11, align 8, !dbg !7346
  %117 = load i8*, i8** %11, align 8, !dbg !7347
  %118 = icmp eq i8* %117, null, !dbg !7349
  br i1 %118, label %119, label %120, !dbg !7350

; <label>:119:                                    ; preds = %109
  store i8* null, i8** %4, align 8, !dbg !7351
  br label %124, !dbg !7351

; <label>:120:                                    ; preds = %109
  %121 = load i8*, i8** %11, align 8, !dbg !7352
  %122 = call i8* @HXparse_dequote_int(i8* %121, i8* null), !dbg !7353
  %123 = load i8*, i8** %11, align 8, !dbg !7354
  store i8* %123, i8** %4, align 8, !dbg !7355
  br label %124, !dbg !7355

; <label>:124:                                    ; preds = %120, %119
  %125 = load i8*, i8** %4, align 8, !dbg !7356
  ret i8* %125, !dbg !7356
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HXparse_dequote_int(i8*, i8*) #0 !dbg !7357 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7360, metadata !DIExpression()), !dbg !7361
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7362, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata i8* %7, metadata !7366, metadata !DIExpression()), !dbg !7367
  store i8 0, i8* %7, align 1, !dbg !7367
  %8 = load i8*, i8** %4, align 8, !dbg !7368
  store i8* %8, i8** %6, align 8, !dbg !7370
  br label %9, !dbg !7371

; <label>:9:                                      ; preds = %88, %86, %66, %53, %38, %22, %2
  %10 = load i8*, i8** %6, align 8, !dbg !7372
  %11 = load i8, i8* %10, align 1, !dbg !7374
  %12 = sext i8 %11 to i32, !dbg !7374
  %13 = icmp ne i32 %12, 0, !dbg !7375
  br i1 %13, label %14, label %94, !dbg !7376

; <label>:14:                                     ; preds = %9
  %15 = load i8, i8* %7, align 1, !dbg !7377
  %16 = sext i8 %15 to i32, !dbg !7377
  %17 = icmp eq i32 %16, 0, !dbg !7380
  br i1 %17, label %18, label %59, !dbg !7381

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %6, align 8, !dbg !7382
  %20 = load i8, i8* %19, align 1, !dbg !7384
  %21 = sext i8 %20 to i32, !dbg !7384
  switch i32 %21, label %39 [
    i32 34, label %22
    i32 39, label %22
    i32 92, label %26
  ], !dbg !7385

; <label>:22:                                     ; preds = %18, %18
  %23 = load i8*, i8** %6, align 8, !dbg !7386
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7386
  store i8* %24, i8** %6, align 8, !dbg !7386
  %25 = load i8, i8* %23, align 1, !dbg !7388
  store i8 %25, i8* %7, align 1, !dbg !7389
  br label %9, !dbg !7390, !llvm.loop !7391

; <label>:26:                                     ; preds = %18
  %27 = load i8*, i8** %6, align 8, !dbg !7393
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7393
  store i8* %28, i8** %6, align 8, !dbg !7393
  %29 = load i8, i8* %28, align 1, !dbg !7395
  %30 = sext i8 %29 to i32, !dbg !7395
  %31 = icmp ne i32 %30, 0, !dbg !7396
  br i1 %31, label %32, label %38, !dbg !7397

; <label>:32:                                     ; preds = %26
  %33 = load i8*, i8** %6, align 8, !dbg !7398
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !7398
  store i8* %34, i8** %6, align 8, !dbg !7398
  %35 = load i8, i8* %33, align 1, !dbg !7399
  %36 = load i8*, i8** %4, align 8, !dbg !7400
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !7400
  store i8* %37, i8** %4, align 8, !dbg !7400
  store i8 %35, i8* %36, align 1, !dbg !7401
  br label %38, !dbg !7402

; <label>:38:                                     ; preds = %32, %26
  br label %9, !dbg !7403, !llvm.loop !7391

; <label>:39:                                     ; preds = %18
  %40 = load i8*, i8** %5, align 8, !dbg !7404
  %41 = icmp ne i8* %40, null, !dbg !7406
  br i1 %41, label %42, label %53, !dbg !7407

; <label>:42:                                     ; preds = %39
  %43 = load i8*, i8** %5, align 8, !dbg !7408
  %44 = load i8*, i8** %6, align 8, !dbg !7409
  %45 = load i8, i8* %44, align 1, !dbg !7410
  %46 = sext i8 %45 to i32, !dbg !7410
  %47 = call i8* @strchr(i8* %43, i32 %46) #10, !dbg !7411
  %48 = icmp ne i8* %47, null, !dbg !7412
  br i1 %48, label %49, label %53, !dbg !7413

; <label>:49:                                     ; preds = %42
  %50 = load i8*, i8** %4, align 8, !dbg !7414
  store i8 0, i8* %50, align 1, !dbg !7416
  %51 = load i8*, i8** %6, align 8, !dbg !7417
  %52 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !7418
  store i8* %52, i8** %3, align 8, !dbg !7419
  br label %96, !dbg !7419

; <label>:53:                                     ; preds = %42, %39
  %54 = load i8*, i8** %6, align 8, !dbg !7420
  %55 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !7420
  store i8* %55, i8** %6, align 8, !dbg !7420
  %56 = load i8, i8* %54, align 1, !dbg !7421
  %57 = load i8*, i8** %4, align 8, !dbg !7422
  %58 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !7422
  store i8* %58, i8** %4, align 8, !dbg !7422
  store i8 %56, i8* %57, align 1, !dbg !7423
  br label %9, !dbg !7424, !llvm.loop !7391

; <label>:59:                                     ; preds = %14
  %60 = load i8*, i8** %6, align 8, !dbg !7425
  %61 = load i8, i8* %60, align 1, !dbg !7427
  %62 = sext i8 %61 to i32, !dbg !7427
  %63 = load i8, i8* %7, align 1, !dbg !7428
  %64 = sext i8 %63 to i32, !dbg !7428
  %65 = icmp eq i32 %62, %64, !dbg !7429
  br i1 %65, label %66, label %69, !dbg !7430

; <label>:66:                                     ; preds = %59
  store i8 0, i8* %7, align 1, !dbg !7431
  %67 = load i8*, i8** %6, align 8, !dbg !7433
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !7433
  store i8* %68, i8** %6, align 8, !dbg !7433
  br label %9, !dbg !7434, !llvm.loop !7391

; <label>:69:                                     ; preds = %59
  %70 = load i8*, i8** %6, align 8, !dbg !7435
  %71 = load i8, i8* %70, align 1, !dbg !7437
  %72 = sext i8 %71 to i32, !dbg !7437
  %73 = icmp eq i32 %72, 92, !dbg !7438
  br i1 %73, label %74, label %87, !dbg !7439

; <label>:74:                                     ; preds = %69
  %75 = load i8*, i8** %6, align 8, !dbg !7440
  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !7440
  store i8* %76, i8** %6, align 8, !dbg !7440
  %77 = load i8, i8* %76, align 1, !dbg !7443
  %78 = sext i8 %77 to i32, !dbg !7443
  %79 = icmp ne i32 %78, 0, !dbg !7444
  br i1 %79, label %80, label %86, !dbg !7445

; <label>:80:                                     ; preds = %74
  %81 = load i8*, i8** %6, align 8, !dbg !7446
  %82 = getelementptr inbounds i8, i8* %81, i32 1, !dbg !7446
  store i8* %82, i8** %6, align 8, !dbg !7446
  %83 = load i8, i8* %81, align 1, !dbg !7447
  %84 = load i8*, i8** %4, align 8, !dbg !7448
  %85 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !7448
  store i8* %85, i8** %4, align 8, !dbg !7448
  store i8 %83, i8* %84, align 1, !dbg !7449
  br label %86, !dbg !7450

; <label>:86:                                     ; preds = %80, %74
  br label %9, !dbg !7451, !llvm.loop !7391

; <label>:87:                                     ; preds = %69
  br label %88

; <label>:88:                                     ; preds = %87
  %89 = load i8*, i8** %6, align 8, !dbg !7452
  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !7452
  store i8* %90, i8** %6, align 8, !dbg !7452
  %91 = load i8, i8* %89, align 1, !dbg !7453
  %92 = load i8*, i8** %4, align 8, !dbg !7454
  %93 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !7454
  store i8* %93, i8** %4, align 8, !dbg !7454
  store i8 %91, i8* %92, align 1, !dbg !7455
  br label %9, !dbg !7456, !llvm.loop !7391

; <label>:94:                                     ; preds = %9
  %95 = load i8*, i8** %4, align 8, !dbg !7457
  store i8 0, i8* %95, align 1, !dbg !7458
  store i8* null, i8** %3, align 8, !dbg !7459
  br label %96, !dbg !7459

; <label>:96:                                     ; preds = %94, %49
  %97 = load i8*, i8** %3, align 8, !dbg !7460
  ret i8* %97, !dbg !7460
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_getopt(%struct.HXoption*, i32*, i8***, i32) #0 !dbg !7461 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXoption*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8***, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.HXdeque*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.HXoptcb, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca [16 x i8], align 16
  %22 = alloca i8*, align 8
  %23 = alloca i8**, align 8
  store %struct.HXoption* %0, %struct.HXoption** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %6, metadata !7499, metadata !DIExpression()), !dbg !7500
  store i32* %1, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !7501, metadata !DIExpression()), !dbg !7502
  store i8*** %2, i8**** %8, align 8
  call void @llvm.dbg.declare(metadata i8**** %8, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !7507, metadata !DIExpression()), !dbg !7508
  %24 = load i8***, i8**** %8, align 8, !dbg !7509
  %25 = load i8**, i8*** %24, align 8, !dbg !7510
  store i8** %25, i8*** %10, align 8, !dbg !7508
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7511, metadata !DIExpression()), !dbg !7512
  store i8* null, i8** %11, align 8, !dbg !7512
  call void @llvm.dbg.declare(metadata i8** %12, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i8* null, i8** %12, align 8, !dbg !7514
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %13, metadata !7515, metadata !DIExpression()), !dbg !7534
  %26 = call %struct.HXdeque* @HXdeque_init(), !dbg !7535
  store %struct.HXdeque* %26, %struct.HXdeque** %13, align 8, !dbg !7534
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7536, metadata !DIExpression()), !dbg !7537
  store i32 0, i32* %14, align 4, !dbg !7537
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7538, metadata !DIExpression()), !dbg !7539
  store i32 0, i32* %15, align 4, !dbg !7539
  call void @llvm.dbg.declare(metadata %struct.HXoptcb* %16, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata i8** %17, metadata !7542, metadata !DIExpression()), !dbg !7543
  store i8* null, i8** %17, align 8, !dbg !7543
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7544, metadata !DIExpression()), !dbg !7545
  %27 = bitcast %struct.HXoptcb* %16 to i8*, !dbg !7546
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 56, i1 false), !dbg !7546
  %28 = load i8***, i8**** %8, align 8, !dbg !7547
  %29 = load i8**, i8*** %28, align 8, !dbg !7548
  %30 = load i8*, i8** %29, align 8, !dbg !7549
  %31 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 0, !dbg !7550
  store i8* %30, i8** %31, align 8, !dbg !7551
  %32 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !7552
  %33 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 1, !dbg !7553
  store %struct.HXoption* %32, %struct.HXoption** %33, align 8, !dbg !7554
  %34 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7555
  %35 = load i8**, i8*** %10, align 8, !dbg !7556
  %36 = getelementptr inbounds i8*, i8** %35, i32 1, !dbg !7556
  store i8** %36, i8*** %10, align 8, !dbg !7556
  %37 = load i8*, i8** %35, align 8, !dbg !7557
  %38 = call i8* @HX_strdup.80(i8* %37), !dbg !7558
  %39 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %34, i8* %38), !dbg !7559
  br label %40, !dbg !7560

; <label>:40:                                     ; preds = %392, %385, %382, %372, %369, %349, %317, %295, %237, %224, %203, %187, %140, %55, %4
  call void @llvm.dbg.declare(metadata i8** %19, metadata !7561, metadata !DIExpression()), !dbg !7563
  %41 = load i8**, i8*** %10, align 8, !dbg !7564
  %42 = load i8*, i8** %41, align 8, !dbg !7565
  store i8* %42, i8** %19, align 8, !dbg !7563
  %43 = load i32, i32* %14, align 4, !dbg !7566
  %44 = icmp eq i32 %43, 2, !dbg !7568
  br i1 %44, label %45, label %123, !dbg !7569

; <label>:45:                                     ; preds = %40
  %46 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !7570
  %47 = load i8*, i8** %17, align 8, !dbg !7573
  %48 = call %struct.HXoption* @lookup_long(%struct.HXoption* %46, i8* %47), !dbg !7574
  %49 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7575
  store %struct.HXoption* %48, %struct.HXoption** %49, align 8, !dbg !7576
  %50 = icmp eq %struct.HXoption* %48, null, !dbg !7577
  br i1 %50, label %51, label %63, !dbg !7578

; <label>:51:                                     ; preds = %45
  %52 = load i32, i32* %9, align 4, !dbg !7579
  %53 = and i32 %52, 1, !dbg !7582
  %54 = icmp ne i32 %53, 0, !dbg !7582
  br i1 %54, label %55, label %62, !dbg !7583

; <label>:55:                                     ; preds = %51
  %56 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7584
  %57 = load i8*, i8** %17, align 8, !dbg !7586
  %58 = call i8* @HX_strdup.80(i8* %57), !dbg !7587
  %59 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %56, i8* %58), !dbg !7588
  %60 = load i8**, i8*** %10, align 8, !dbg !7589
  %61 = getelementptr inbounds i8*, i8** %60, i32 1, !dbg !7589
  store i8** %61, i8*** %10, align 8, !dbg !7589
  store i32 0, i32* %14, align 4, !dbg !7590
  br label %40, !dbg !7591, !llvm.loop !7592

; <label>:62:                                     ; preds = %51
  store i32 1, i32* %15, align 4, !dbg !7594
  br label %396, !dbg !7595

; <label>:63:                                     ; preds = %45
  %64 = load i8*, i8** %17, align 8, !dbg !7596
  %65 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 5, !dbg !7597
  store i8* %64, i8** %65, align 8, !dbg !7598
  %66 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 6, !dbg !7599
  store i8 0, i8* %66, align 8, !dbg !7600
  %67 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7601
  %68 = load %struct.HXoption*, %struct.HXoption** %67, align 8, !dbg !7601
  %69 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %68, i32 0, i32 2, !dbg !7603
  %70 = load i32, i32* %69, align 4, !dbg !7603
  %71 = call zeroext i1 @takes_void(i32 %70), !dbg !7604
  br i1 %71, label %72, label %74, !dbg !7605

; <label>:72:                                     ; preds = %63
  %73 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7606
  store i8* null, i8** %73, align 8, !dbg !7608
  br label %121, !dbg !7609

; <label>:74:                                     ; preds = %63
  %75 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7610
  %76 = load %struct.HXoption*, %struct.HXoption** %75, align 8, !dbg !7610
  %77 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %76, i32 0, i32 2, !dbg !7612
  %78 = load i32, i32* %77, align 4, !dbg !7612
  %79 = and i32 %78, 64, !dbg !7613
  %80 = icmp ne i32 %79, 0, !dbg !7613
  br i1 %80, label %81, label %110, !dbg !7614

; <label>:81:                                     ; preds = %74
  %82 = load i8*, i8** %19, align 8, !dbg !7615
  %83 = icmp eq i8* %82, null, !dbg !7618
  br i1 %83, label %101, label %84, !dbg !7619

; <label>:84:                                     ; preds = %81
  %85 = load i8*, i8** %19, align 8, !dbg !7620
  %86 = load i8, i8* %85, align 1, !dbg !7621
  %87 = sext i8 %86 to i32, !dbg !7621
  %88 = icmp ne i32 %87, 45, !dbg !7622
  br i1 %88, label %101, label %89, !dbg !7623

; <label>:89:                                     ; preds = %84
  %90 = load i8*, i8** %19, align 8, !dbg !7624
  %91 = getelementptr inbounds i8, i8* %90, i64 0, !dbg !7624
  %92 = load i8, i8* %91, align 1, !dbg !7624
  %93 = sext i8 %92 to i32, !dbg !7624
  %94 = icmp eq i32 %93, 45, !dbg !7625
  br i1 %94, label %95, label %107, !dbg !7626

; <label>:95:                                     ; preds = %89
  %96 = load i8*, i8** %19, align 8, !dbg !7627
  %97 = getelementptr inbounds i8, i8* %96, i64 1, !dbg !7627
  %98 = load i8, i8* %97, align 1, !dbg !7627
  %99 = sext i8 %98 to i32, !dbg !7627
  %100 = icmp eq i32 %99, 0, !dbg !7628
  br i1 %100, label %101, label %107, !dbg !7629

; <label>:101:                                    ; preds = %95, %84, %81
  %102 = load i8*, i8** %19, align 8, !dbg !7630
  %103 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7632
  store i8* %102, i8** %103, align 8, !dbg !7633
  %104 = load i8**, i8*** %10, align 8, !dbg !7634
  %105 = getelementptr inbounds i8*, i8** %104, i32 1, !dbg !7634
  store i8** %105, i8*** %10, align 8, !dbg !7634
  %106 = load i8*, i8** %104, align 8, !dbg !7635
  store i8* %106, i8** %19, align 8, !dbg !7636
  br label %109, !dbg !7637

; <label>:107:                                    ; preds = %95, %89
  %108 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7638
  store i8* null, i8** %108, align 8, !dbg !7640
  br label %109

; <label>:109:                                    ; preds = %107, %101
  br label %120, !dbg !7641

; <label>:110:                                    ; preds = %74
  %111 = load i8*, i8** %19, align 8, !dbg !7642
  %112 = icmp eq i8* %111, null, !dbg !7645
  br i1 %112, label %113, label %114, !dbg !7646

; <label>:113:                                    ; preds = %110
  store i32 3, i32* %15, align 4, !dbg !7647
  br label %396, !dbg !7649

; <label>:114:                                    ; preds = %110
  %115 = load i8*, i8** %19, align 8, !dbg !7650
  %116 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7651
  store i8* %115, i8** %116, align 8, !dbg !7652
  %117 = load i8**, i8*** %10, align 8, !dbg !7653
  %118 = getelementptr inbounds i8*, i8** %117, i32 1, !dbg !7653
  store i8** %118, i8*** %10, align 8, !dbg !7653
  %119 = load i8*, i8** %118, align 8, !dbg !7654
  store i8* %119, i8** %19, align 8, !dbg !7655
  br label %120

; <label>:120:                                    ; preds = %114, %109
  br label %121

; <label>:121:                                    ; preds = %120, %72
  call void @do_assign(%struct.HXoptcb* %16), !dbg !7656
  %122 = load i8*, i8** %17, align 8, !dbg !7657
  call void @free(i8* %122) #7, !dbg !7658
  store i8* null, i8** %17, align 8, !dbg !7659
  store i32 0, i32* %14, align 4, !dbg !7660
  br label %123, !dbg !7661

; <label>:123:                                    ; preds = %121, %40
  %124 = load i32, i32* %14, align 4, !dbg !7662
  %125 = icmp eq i32 %124, 3, !dbg !7664
  br i1 %125, label %126, label %179, !dbg !7665

; <label>:126:                                    ; preds = %123
  call void @llvm.dbg.declare(metadata i8* %20, metadata !7666, metadata !DIExpression()), !dbg !7668
  %127 = load i8*, i8** %19, align 8, !dbg !7669
  %128 = call i8* @strchr(i8* %127, i32 61) #10, !dbg !7670
  %129 = icmp ne i8* %128, null, !dbg !7671
  %130 = zext i1 %129 to i8, !dbg !7668
  store i8 %130, i8* %20, align 1, !dbg !7668
  %131 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !7672
  %132 = load i8*, i8** %17, align 8, !dbg !7674
  %133 = call %struct.HXoption* @lookup_long(%struct.HXoption* %131, i8* %132), !dbg !7675
  %134 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7676
  store %struct.HXoption* %133, %struct.HXoption** %134, align 8, !dbg !7677
  %135 = icmp eq %struct.HXoption* %133, null, !dbg !7678
  br i1 %135, label %136, label %148, !dbg !7679

; <label>:136:                                    ; preds = %126
  %137 = load i32, i32* %9, align 4, !dbg !7680
  %138 = and i32 %137, 1, !dbg !7683
  %139 = icmp ne i32 %138, 0, !dbg !7683
  br i1 %139, label %140, label %147, !dbg !7684

; <label>:140:                                    ; preds = %136
  %141 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7685
  %142 = load i8**, i8*** %10, align 8, !dbg !7687
  %143 = getelementptr inbounds i8*, i8** %142, i32 1, !dbg !7687
  store i8** %143, i8*** %10, align 8, !dbg !7687
  %144 = load i8*, i8** %142, align 8, !dbg !7688
  %145 = call i8* @HX_strdup.80(i8* %144), !dbg !7689
  %146 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %141, i8* %145), !dbg !7690
  store i32 0, i32* %14, align 4, !dbg !7691
  br label %40, !dbg !7692, !llvm.loop !7592

; <label>:147:                                    ; preds = %136
  store i32 1, i32* %15, align 4, !dbg !7693
  br label %396, !dbg !7694

; <label>:148:                                    ; preds = %126
  %149 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7695
  %150 = load %struct.HXoption*, %struct.HXoption** %149, align 8, !dbg !7695
  %151 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %150, i32 0, i32 2, !dbg !7697
  %152 = load i32, i32* %151, align 4, !dbg !7697
  %153 = call zeroext i1 @takes_void(i32 %152), !dbg !7698
  br i1 %153, label %154, label %158, !dbg !7699

; <label>:154:                                    ; preds = %148
  %155 = load i8, i8* %20, align 1, !dbg !7700
  %156 = trunc i8 %155 to i1, !dbg !7700
  br i1 %156, label %157, label %158, !dbg !7701

; <label>:157:                                    ; preds = %154
  store i32 2, i32* %15, align 4, !dbg !7702
  br label %396, !dbg !7704

; <label>:158:                                    ; preds = %154, %148
  %159 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7705
  %160 = load %struct.HXoption*, %struct.HXoption** %159, align 8, !dbg !7705
  %161 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %160, i32 0, i32 2, !dbg !7707
  %162 = load i32, i32* %161, align 4, !dbg !7707
  %163 = call zeroext i1 @takes_void(i32 %162), !dbg !7708
  br i1 %163, label %168, label %164, !dbg !7709

; <label>:164:                                    ; preds = %158
  %165 = load i8, i8* %20, align 1, !dbg !7710
  %166 = trunc i8 %165 to i1, !dbg !7710
  br i1 %166, label %168, label %167, !dbg !7711

; <label>:167:                                    ; preds = %164
  store i32 3, i32* %15, align 4, !dbg !7712
  br label %396, !dbg !7714

; <label>:168:                                    ; preds = %164, %158
  br label %169

; <label>:169:                                    ; preds = %168
  %170 = load i8*, i8** %17, align 8, !dbg !7715
  %171 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 5, !dbg !7716
  store i8* %170, i8** %171, align 8, !dbg !7717
  %172 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 6, !dbg !7718
  store i8 0, i8* %172, align 8, !dbg !7719
  %173 = load i8*, i8** %11, align 8, !dbg !7720
  %174 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7721
  store i8* %173, i8** %174, align 8, !dbg !7722
  call void @do_assign(%struct.HXoptcb* %16), !dbg !7723
  %175 = load i8*, i8** %17, align 8, !dbg !7724
  call void @free(i8* %175) #7, !dbg !7725
  store i8* null, i8** %17, align 8, !dbg !7726
  store i32 0, i32* %14, align 4, !dbg !7727
  %176 = load i8**, i8*** %10, align 8, !dbg !7728
  %177 = getelementptr inbounds i8*, i8** %176, i32 1, !dbg !7728
  store i8** %177, i8*** %10, align 8, !dbg !7728
  %178 = load i8*, i8** %177, align 8, !dbg !7729
  store i8* %178, i8** %19, align 8, !dbg !7730
  br label %179, !dbg !7731

; <label>:179:                                    ; preds = %169, %123
  %180 = load i32, i32* %14, align 4, !dbg !7732
  %181 = icmp eq i32 %180, 1, !dbg !7734
  br i1 %181, label %182, label %288, !dbg !7735

; <label>:182:                                    ; preds = %179
  %183 = load i8*, i8** %12, align 8, !dbg !7736
  %184 = load i8, i8* %183, align 1, !dbg !7739
  %185 = sext i8 %184 to i32, !dbg !7739
  %186 = icmp eq i32 %185, 0, !dbg !7740
  br i1 %186, label %187, label %190, !dbg !7741

; <label>:187:                                    ; preds = %182
  %188 = load i8**, i8*** %10, align 8, !dbg !7742
  %189 = getelementptr inbounds i8*, i8** %188, i32 1, !dbg !7742
  store i8** %189, i8*** %10, align 8, !dbg !7742
  store i32 0, i32* %14, align 4, !dbg !7744
  br label %40, !dbg !7745, !llvm.loop !7592

; <label>:190:                                    ; preds = %182
  %191 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !7746
  %192 = load i8*, i8** %12, align 8, !dbg !7747
  %193 = load i8, i8* %192, align 1, !dbg !7748
  %194 = call %struct.HXoption* @lookup_short(%struct.HXoption* %191, i8 signext %193), !dbg !7749
  %195 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7750
  store %struct.HXoption* %194, %struct.HXoption** %195, align 8, !dbg !7751
  %196 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7752
  %197 = load %struct.HXoption*, %struct.HXoption** %196, align 8, !dbg !7752
  %198 = icmp eq %struct.HXoption* %197, null, !dbg !7754
  br i1 %198, label %199, label %214, !dbg !7755

; <label>:199:                                    ; preds = %190
  %200 = load i32, i32* %9, align 4, !dbg !7756
  %201 = and i32 %200, 1, !dbg !7759
  %202 = icmp ne i32 %201, 0, !dbg !7759
  br i1 %202, label %203, label %213, !dbg !7760

; <label>:203:                                    ; preds = %199
  call void @llvm.dbg.declare(metadata [16 x i8]* %21, metadata !7761, metadata !DIExpression()), !dbg !7766
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i32 0, i32 0, !dbg !7767
  %205 = load i8*, i8** %12, align 8, !dbg !7768
  %206 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %204, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.81, i32 0, i32 0), i8* %205) #7, !dbg !7769
  %207 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7770
  %208 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i32 0, i32 0, !dbg !7771
  %209 = call i8* @HX_strdup.80(i8* %208), !dbg !7772
  %210 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %207, i8* %209), !dbg !7773
  %211 = load i8**, i8*** %10, align 8, !dbg !7774
  %212 = getelementptr inbounds i8*, i8** %211, i32 1, !dbg !7774
  store i8** %212, i8*** %10, align 8, !dbg !7774
  store i32 0, i32* %14, align 4, !dbg !7775
  br label %40, !dbg !7776, !llvm.loop !7592

; <label>:213:                                    ; preds = %199
  store i32 4, i32* %15, align 4, !dbg !7777
  br label %396, !dbg !7778

; <label>:214:                                    ; preds = %190
  %215 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 5, !dbg !7779
  store i8* null, i8** %215, align 8, !dbg !7780
  %216 = load i8*, i8** %12, align 8, !dbg !7781
  %217 = load i8, i8* %216, align 1, !dbg !7782
  %218 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 6, !dbg !7783
  store i8 %217, i8* %218, align 8, !dbg !7784
  %219 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7785
  %220 = load %struct.HXoption*, %struct.HXoption** %219, align 8, !dbg !7785
  %221 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %220, i32 0, i32 2, !dbg !7787
  %222 = load i32, i32* %221, align 4, !dbg !7787
  %223 = call zeroext i1 @takes_void(i32 %222), !dbg !7788
  br i1 %223, label %224, label %228, !dbg !7789

; <label>:224:                                    ; preds = %214
  %225 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7790
  store i8* null, i8** %225, align 8, !dbg !7792
  call void @do_assign(%struct.HXoptcb* %16), !dbg !7793
  %226 = load i8*, i8** %12, align 8, !dbg !7794
  %227 = getelementptr inbounds i8, i8* %226, i32 1, !dbg !7794
  store i8* %227, i8** %12, align 8, !dbg !7794
  br label %40, !dbg !7795, !llvm.loop !7592

; <label>:228:                                    ; preds = %214
  %229 = load i8**, i8*** %10, align 8, !dbg !7796
  %230 = getelementptr inbounds i8*, i8** %229, i32 1, !dbg !7796
  store i8** %230, i8*** %10, align 8, !dbg !7796
  %231 = load i8*, i8** %230, align 8, !dbg !7797
  store i8* %231, i8** %19, align 8, !dbg !7798
  %232 = load i8*, i8** %12, align 8, !dbg !7799
  %233 = getelementptr inbounds i8, i8* %232, i64 1, !dbg !7801
  %234 = load i8, i8* %233, align 1, !dbg !7802
  %235 = sext i8 %234 to i32, !dbg !7802
  %236 = icmp ne i32 %235, 0, !dbg !7803
  br i1 %236, label %237, label %241, !dbg !7804

; <label>:237:                                    ; preds = %228
  %238 = load i8*, i8** %12, align 8, !dbg !7805
  %239 = getelementptr inbounds i8, i8* %238, i64 1, !dbg !7807
  %240 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7808
  store i8* %239, i8** %240, align 8, !dbg !7809
  call void @do_assign(%struct.HXoptcb* %16), !dbg !7810
  store i32 0, i32* %14, align 4, !dbg !7811
  br label %40, !dbg !7812, !llvm.loop !7592

; <label>:241:                                    ; preds = %228
  %242 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 2, !dbg !7813
  %243 = load %struct.HXoption*, %struct.HXoption** %242, align 8, !dbg !7813
  %244 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %243, i32 0, i32 2, !dbg !7815
  %245 = load i32, i32* %244, align 4, !dbg !7815
  %246 = and i32 %245, 64, !dbg !7816
  %247 = icmp ne i32 %246, 0, !dbg !7816
  br i1 %247, label %248, label %277, !dbg !7817

; <label>:248:                                    ; preds = %241
  %249 = load i8*, i8** %19, align 8, !dbg !7818
  %250 = icmp eq i8* %249, null, !dbg !7821
  br i1 %250, label %268, label %251, !dbg !7822

; <label>:251:                                    ; preds = %248
  %252 = load i8*, i8** %19, align 8, !dbg !7823
  %253 = load i8, i8* %252, align 1, !dbg !7824
  %254 = sext i8 %253 to i32, !dbg !7824
  %255 = icmp ne i32 %254, 45, !dbg !7825
  br i1 %255, label %268, label %256, !dbg !7826

; <label>:256:                                    ; preds = %251
  %257 = load i8*, i8** %19, align 8, !dbg !7827
  %258 = getelementptr inbounds i8, i8* %257, i64 0, !dbg !7827
  %259 = load i8, i8* %258, align 1, !dbg !7827
  %260 = sext i8 %259 to i32, !dbg !7827
  %261 = icmp eq i32 %260, 45, !dbg !7828
  br i1 %261, label %262, label %274, !dbg !7829

; <label>:262:                                    ; preds = %256
  %263 = load i8*, i8** %19, align 8, !dbg !7830
  %264 = getelementptr inbounds i8, i8* %263, i64 1, !dbg !7830
  %265 = load i8, i8* %264, align 1, !dbg !7830
  %266 = sext i8 %265 to i32, !dbg !7830
  %267 = icmp eq i32 %266, 0, !dbg !7831
  br i1 %267, label %268, label %274, !dbg !7832

; <label>:268:                                    ; preds = %262, %251, %248
  %269 = load i8*, i8** %19, align 8, !dbg !7833
  %270 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7835
  store i8* %269, i8** %270, align 8, !dbg !7836
  %271 = load i8**, i8*** %10, align 8, !dbg !7837
  %272 = getelementptr inbounds i8*, i8** %271, i32 1, !dbg !7837
  store i8** %272, i8*** %10, align 8, !dbg !7837
  %273 = load i8*, i8** %272, align 8, !dbg !7838
  store i8* %273, i8** %19, align 8, !dbg !7839
  br label %276, !dbg !7840

; <label>:274:                                    ; preds = %262, %256
  %275 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7841
  store i8* null, i8** %275, align 8, !dbg !7843
  br label %276

; <label>:276:                                    ; preds = %274, %268
  br label %287, !dbg !7844

; <label>:277:                                    ; preds = %241
  %278 = load i8*, i8** %19, align 8, !dbg !7845
  %279 = icmp eq i8* %278, null, !dbg !7848
  br i1 %279, label %280, label %281, !dbg !7849

; <label>:280:                                    ; preds = %277
  store i32 5, i32* %15, align 4, !dbg !7850
  br label %396, !dbg !7852

; <label>:281:                                    ; preds = %277
  %282 = load i8*, i8** %19, align 8, !dbg !7853
  %283 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %16, i32 0, i32 3, !dbg !7854
  store i8* %282, i8** %283, align 8, !dbg !7855
  %284 = load i8**, i8*** %10, align 8, !dbg !7856
  %285 = getelementptr inbounds i8*, i8** %284, i32 1, !dbg !7856
  store i8** %285, i8*** %10, align 8, !dbg !7856
  %286 = load i8*, i8** %285, align 8, !dbg !7857
  store i8* %286, i8** %19, align 8, !dbg !7858
  br label %287

; <label>:287:                                    ; preds = %281, %276
  call void @do_assign(%struct.HXoptcb* %16), !dbg !7859
  store i32 0, i32* %14, align 4, !dbg !7860
  br label %288, !dbg !7861

; <label>:288:                                    ; preds = %287, %179
  %289 = load i8*, i8** %19, align 8, !dbg !7862
  %290 = icmp eq i8* %289, null, !dbg !7864
  br i1 %290, label %291, label %292, !dbg !7865

; <label>:291:                                    ; preds = %288
  br label %396, !dbg !7866

; <label>:292:                                    ; preds = %288
  %293 = load i32, i32* %14, align 4, !dbg !7867
  %294 = icmp eq i32 %293, 4, !dbg !7869
  br i1 %294, label %295, label %302, !dbg !7870

; <label>:295:                                    ; preds = %292
  %296 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7871
  %297 = load i8**, i8*** %10, align 8, !dbg !7873
  %298 = getelementptr inbounds i8*, i8** %297, i32 1, !dbg !7873
  store i8** %298, i8*** %10, align 8, !dbg !7873
  %299 = load i8*, i8** %297, align 8, !dbg !7874
  %300 = call i8* @HX_strdup.80(i8* %299), !dbg !7875
  %301 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %296, i8* %300), !dbg !7876
  br label %40, !dbg !7877, !llvm.loop !7592

; <label>:302:                                    ; preds = %292
  %303 = load i32, i32* %14, align 4, !dbg !7878
  %304 = icmp eq i32 %303, 0, !dbg !7880
  br i1 %304, label %305, label %392, !dbg !7881

; <label>:305:                                    ; preds = %302
  %306 = load i8*, i8** %19, align 8, !dbg !7882
  %307 = getelementptr inbounds i8, i8* %306, i64 0, !dbg !7882
  %308 = load i8, i8* %307, align 1, !dbg !7882
  %309 = sext i8 %308 to i32, !dbg !7882
  %310 = icmp eq i32 %309, 45, !dbg !7885
  br i1 %310, label %311, label %324, !dbg !7886

; <label>:311:                                    ; preds = %305
  %312 = load i8*, i8** %19, align 8, !dbg !7887
  %313 = getelementptr inbounds i8, i8* %312, i64 1, !dbg !7887
  %314 = load i8, i8* %313, align 1, !dbg !7887
  %315 = sext i8 %314 to i32, !dbg !7887
  %316 = icmp eq i32 %315, 0, !dbg !7888
  br i1 %316, label %317, label %324, !dbg !7889

; <label>:317:                                    ; preds = %311
  %318 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7890
  %319 = load i8**, i8*** %10, align 8, !dbg !7892
  %320 = getelementptr inbounds i8*, i8** %319, i32 1, !dbg !7892
  store i8** %320, i8*** %10, align 8, !dbg !7892
  %321 = load i8*, i8** %319, align 8, !dbg !7893
  %322 = call i8* @HX_strdup.80(i8* %321), !dbg !7894
  %323 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %318, i8* %322), !dbg !7895
  br label %40, !dbg !7896, !llvm.loop !7592

; <label>:324:                                    ; preds = %311, %305
  %325 = load i8*, i8** %19, align 8, !dbg !7897
  %326 = getelementptr inbounds i8, i8* %325, i64 0, !dbg !7897
  %327 = load i8, i8* %326, align 1, !dbg !7897
  %328 = sext i8 %327 to i32, !dbg !7897
  %329 = icmp eq i32 %328, 45, !dbg !7899
  br i1 %329, label %330, label %350, !dbg !7900

; <label>:330:                                    ; preds = %324
  %331 = load i8*, i8** %19, align 8, !dbg !7901
  %332 = getelementptr inbounds i8, i8* %331, i64 1, !dbg !7901
  %333 = load i8, i8* %332, align 1, !dbg !7901
  %334 = sext i8 %333 to i32, !dbg !7901
  %335 = icmp eq i32 %334, 45, !dbg !7902
  br i1 %335, label %336, label %350, !dbg !7903

; <label>:336:                                    ; preds = %330
  %337 = load i8*, i8** %19, align 8, !dbg !7904
  %338 = getelementptr inbounds i8, i8* %337, i64 2, !dbg !7904
  %339 = load i8, i8* %338, align 1, !dbg !7904
  %340 = sext i8 %339 to i32, !dbg !7904
  %341 = icmp eq i32 %340, 0, !dbg !7905
  br i1 %341, label %342, label %350, !dbg !7906

; <label>:342:                                    ; preds = %336
  store i32 4, i32* %14, align 4, !dbg !7907
  %343 = load i32, i32* %9, align 4, !dbg !7909
  %344 = and i32 %343, 1, !dbg !7911
  %345 = icmp ne i32 %344, 0, !dbg !7911
  br i1 %345, label %349, label %346, !dbg !7912

; <label>:346:                                    ; preds = %342
  %347 = load i8**, i8*** %10, align 8, !dbg !7913
  %348 = getelementptr inbounds i8*, i8** %347, i32 1, !dbg !7913
  store i8** %348, i8*** %10, align 8, !dbg !7913
  br label %349, !dbg !7913

; <label>:349:                                    ; preds = %346, %342
  br label %40, !dbg !7914, !llvm.loop !7592

; <label>:350:                                    ; preds = %336, %330, %324
  %351 = load i8*, i8** %19, align 8, !dbg !7915
  %352 = getelementptr inbounds i8, i8* %351, i64 0, !dbg !7915
  %353 = load i8, i8* %352, align 1, !dbg !7915
  %354 = sext i8 %353 to i32, !dbg !7915
  %355 = icmp eq i32 %354, 45, !dbg !7917
  br i1 %355, label %356, label %376, !dbg !7918

; <label>:356:                                    ; preds = %350
  %357 = load i8*, i8** %19, align 8, !dbg !7919
  %358 = getelementptr inbounds i8, i8* %357, i64 1, !dbg !7919
  %359 = load i8, i8* %358, align 1, !dbg !7919
  %360 = sext i8 %359 to i32, !dbg !7919
  %361 = icmp eq i32 %360, 45, !dbg !7920
  br i1 %361, label %362, label %376, !dbg !7921

; <label>:362:                                    ; preds = %356
  call void @llvm.dbg.declare(metadata i8** %22, metadata !7922, metadata !DIExpression()), !dbg !7924
  %363 = load i8*, i8** %19, align 8, !dbg !7925
  %364 = getelementptr inbounds i8, i8* %363, i64 2, !dbg !7926
  %365 = call i8* @HX_strdup.80(i8* %364), !dbg !7927
  store i8* %365, i8** %17, align 8, !dbg !7928
  %366 = load i8*, i8** %17, align 8, !dbg !7929
  %367 = call i8* @strchr(i8* %366, i32 61) #10, !dbg !7931
  store i8* %367, i8** %22, align 8, !dbg !7932
  %368 = icmp eq i8* %367, null, !dbg !7933
  br i1 %368, label %369, label %372, !dbg !7934

; <label>:369:                                    ; preds = %362
  store i32 2, i32* %14, align 4, !dbg !7935
  %370 = load i8**, i8*** %10, align 8, !dbg !7937
  %371 = getelementptr inbounds i8*, i8** %370, i32 1, !dbg !7937
  store i8** %371, i8*** %10, align 8, !dbg !7937
  br label %40, !dbg !7938, !llvm.loop !7592

; <label>:372:                                    ; preds = %362
  %373 = load i8*, i8** %22, align 8, !dbg !7939
  %374 = getelementptr inbounds i8, i8* %373, i32 1, !dbg !7939
  store i8* %374, i8** %22, align 8, !dbg !7939
  store i8 0, i8* %373, align 1, !dbg !7940
  %375 = load i8*, i8** %22, align 8, !dbg !7941
  store i8* %375, i8** %11, align 8, !dbg !7942
  store i32 3, i32* %14, align 4, !dbg !7943
  br label %40, !dbg !7944, !llvm.loop !7592

; <label>:376:                                    ; preds = %356, %350
  %377 = load i8*, i8** %19, align 8, !dbg !7945
  %378 = getelementptr inbounds i8, i8* %377, i64 0, !dbg !7945
  %379 = load i8, i8* %378, align 1, !dbg !7945
  %380 = sext i8 %379 to i32, !dbg !7945
  %381 = icmp eq i32 %380, 45, !dbg !7947
  br i1 %381, label %382, label %385, !dbg !7948

; <label>:382:                                    ; preds = %376
  store i32 1, i32* %14, align 4, !dbg !7949
  %383 = load i8*, i8** %19, align 8, !dbg !7951
  %384 = getelementptr inbounds i8, i8* %383, i64 1, !dbg !7952
  store i8* %384, i8** %12, align 8, !dbg !7953
  br label %40, !dbg !7954, !llvm.loop !7592

; <label>:385:                                    ; preds = %376
  %386 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !7955
  %387 = load i8**, i8*** %10, align 8, !dbg !7956
  %388 = getelementptr inbounds i8*, i8** %387, i32 1, !dbg !7956
  store i8** %388, i8*** %10, align 8, !dbg !7956
  %389 = load i8*, i8** %387, align 8, !dbg !7957
  %390 = call i8* @HX_strdup.80(i8* %389), !dbg !7958
  %391 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %386, i8* %390), !dbg !7959
  br label %40, !dbg !7960, !llvm.loop !7592

; <label>:392:                                    ; preds = %302
  %393 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7961
  %394 = load i32, i32* %14, align 4, !dbg !7962
  %395 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %393, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.82, i32 0, i32 0), i32 %394), !dbg !7963
  store i32 0, i32* %14, align 4, !dbg !7964
  br label %40, !dbg !7560, !llvm.loop !7592

; <label>:396:                                    ; preds = %291, %280, %213, %167, %157, %147, %113, %62
  %397 = load i32, i32* %15, align 4, !dbg !7965
  %398 = icmp ne i32 %397, 0, !dbg !7967
  br i1 %398, label %399, label %467, !dbg !7968

; <label>:399:                                    ; preds = %396
  %400 = load i32, i32* %15, align 4, !dbg !7969
  switch i32 %400, label %450 [
    i32 1, label %401
    i32 2, label %410
    i32 3, label %419
    i32 4, label %428
    i32 5, label %439
  ], !dbg !7971

; <label>:401:                                    ; preds = %399
  %402 = load i32, i32* %9, align 4, !dbg !7972
  %403 = and i32 %402, 4, !dbg !7975
  %404 = icmp ne i32 %403, 0, !dbg !7975
  br i1 %404, label %409, label %405, !dbg !7976

; <label>:405:                                    ; preds = %401
  %406 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7977
  %407 = load i8*, i8** %17, align 8, !dbg !7978
  %408 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %406, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.83, i32 0, i32 0), i8* %407), !dbg !7979
  br label %409, !dbg !7979

; <label>:409:                                    ; preds = %405, %401
  store i32 -1, i32* %15, align 4, !dbg !7980
  br label %450, !dbg !7981

; <label>:410:                                    ; preds = %399
  %411 = load i32, i32* %9, align 4, !dbg !7982
  %412 = and i32 %411, 4, !dbg !7984
  %413 = icmp ne i32 %412, 0, !dbg !7984
  br i1 %413, label %418, label %414, !dbg !7985

; <label>:414:                                    ; preds = %410
  %415 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7986
  %416 = load i8*, i8** %17, align 8, !dbg !7987
  %417 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %415, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.84, i32 0, i32 0), i8* %416), !dbg !7988
  br label %418, !dbg !7988

; <label>:418:                                    ; preds = %414, %410
  store i32 -2, i32* %15, align 4, !dbg !7989
  br label %450, !dbg !7990

; <label>:419:                                    ; preds = %399
  %420 = load i32, i32* %9, align 4, !dbg !7991
  %421 = and i32 %420, 4, !dbg !7993
  %422 = icmp ne i32 %421, 0, !dbg !7993
  br i1 %422, label %427, label %423, !dbg !7994

; <label>:423:                                    ; preds = %419
  %424 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7995
  %425 = load i8*, i8** %17, align 8, !dbg !7996
  %426 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %424, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.85, i32 0, i32 0), i8* %425), !dbg !7997
  br label %427, !dbg !7997

; <label>:427:                                    ; preds = %423, %419
  store i32 -3, i32* %15, align 4, !dbg !7998
  br label %450, !dbg !7999

; <label>:428:                                    ; preds = %399
  %429 = load i32, i32* %9, align 4, !dbg !8000
  %430 = and i32 %429, 4, !dbg !8002
  %431 = icmp ne i32 %430, 0, !dbg !8002
  br i1 %431, label %438, label %432, !dbg !8003

; <label>:432:                                    ; preds = %428
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8004
  %434 = load i8*, i8** %12, align 8, !dbg !8005
  %435 = load i8, i8* %434, align 1, !dbg !8006
  %436 = sext i8 %435 to i32, !dbg !8006
  %437 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %433, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.86, i32 0, i32 0), i32 %436), !dbg !8007
  br label %438, !dbg !8007

; <label>:438:                                    ; preds = %432, %428
  store i32 -1, i32* %15, align 4, !dbg !8008
  br label %450, !dbg !8009

; <label>:439:                                    ; preds = %399
  %440 = load i32, i32* %9, align 4, !dbg !8010
  %441 = and i32 %440, 4, !dbg !8012
  %442 = icmp ne i32 %441, 0, !dbg !8012
  br i1 %442, label %449, label %443, !dbg !8013

; <label>:443:                                    ; preds = %439
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8014
  %445 = load i8*, i8** %12, align 8, !dbg !8015
  %446 = load i8, i8* %445, align 1, !dbg !8016
  %447 = sext i8 %446 to i32, !dbg !8016
  %448 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %444, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6.87, i32 0, i32 0), i32 %447), !dbg !8017
  br label %449, !dbg !8017

; <label>:449:                                    ; preds = %443, %439
  store i32 -3, i32* %15, align 4, !dbg !8018
  br label %450, !dbg !8019

; <label>:450:                                    ; preds = %449, %438, %427, %418, %409, %399
  %451 = load i8*, i8** %17, align 8, !dbg !8020
  call void @free(i8* %451) #7, !dbg !8021
  %452 = load i32, i32* %9, align 4, !dbg !8022
  %453 = and i32 %452, 8, !dbg !8024
  %454 = icmp ne i32 %453, 0, !dbg !8024
  br i1 %454, label %455, label %457, !dbg !8025

; <label>:455:                                    ; preds = %450
  %456 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8026
  call void @HX_getopt_help(%struct.HXoptcb* %16, %struct._IO_FILE* %456), !dbg !8027
  br label %464, !dbg !8027

; <label>:457:                                    ; preds = %450
  %458 = load i32, i32* %9, align 4, !dbg !8028
  %459 = and i32 %458, 16, !dbg !8030
  %460 = icmp ne i32 %459, 0, !dbg !8030
  br i1 %460, label %461, label %463, !dbg !8031

; <label>:461:                                    ; preds = %457
  %462 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8032
  call void @HX_getopt_usage(%struct.HXoptcb* %16, %struct._IO_FILE* %462), !dbg !8033
  br label %463, !dbg !8033

; <label>:463:                                    ; preds = %461, %457
  br label %464

; <label>:464:                                    ; preds = %463, %455
  %465 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !8034
  call void @HXdeque_genocide(%struct.HXdeque* %465), !dbg !8035
  %466 = load i32, i32* %15, align 4, !dbg !8036
  store i32 %466, i32* %5, align 4, !dbg !8037
  br label %482, !dbg !8037

; <label>:467:                                    ; preds = %396
  %468 = load i32, i32* %9, align 4, !dbg !8038
  %469 = and i32 %468, 2, !dbg !8040
  %470 = icmp ne i32 %469, 0, !dbg !8040
  br i1 %470, label %471, label %475, !dbg !8041

; <label>:471:                                    ; preds = %467
  %472 = load i8***, i8**** %8, align 8, !dbg !8042
  %473 = load i8**, i8*** %472, align 8, !dbg !8042
  store i8** %473, i8*** %23, align 8, !dbg !8042
  %474 = load i8**, i8*** %23, align 8, !dbg !8042
  call void @HX_zvecfree(i8** %474), !dbg !8044
  br label %475, !dbg !8044

; <label>:475:                                    ; preds = %471, %467
  %476 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !8045
  %477 = call i8** @HXdeque_to_vec(%struct.HXdeque* %476, i32* %18), !dbg !8045
  %478 = load i8***, i8**** %8, align 8, !dbg !8046
  store i8** %477, i8*** %478, align 8, !dbg !8047
  %479 = load i32, i32* %18, align 4, !dbg !8048
  %480 = load i32*, i32** %7, align 8, !dbg !8049
  store i32 %479, i32* %480, align 4, !dbg !8050
  %481 = load %struct.HXdeque*, %struct.HXdeque** %13, align 8, !dbg !8051
  call void @HXdeque_free(%struct.HXdeque* %481), !dbg !8052
  store i32 1, i32* %5, align 4, !dbg !8053
  br label %482, !dbg !8053

; <label>:482:                                    ; preds = %475, %464
  %483 = load i32, i32* %5, align 4, !dbg !8054
  ret i32 %483, !dbg !8054
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strdup.80(i8*) #0 !dbg !8055 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8056, metadata !DIExpression()), !dbg !8057
  %4 = load i8*, i8** %3, align 8, !dbg !8058
  %5 = icmp eq i8* %4, null, !dbg !8060
  br i1 %5, label %6, label %7, !dbg !8061

; <label>:6:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !8062
  br label %13, !dbg !8062

; <label>:7:                                      ; preds = %1
  %8 = load i8*, i8** %3, align 8, !dbg !8063
  %9 = load i8*, i8** %3, align 8, !dbg !8064
  %10 = call i64 @strlen(i8* %9) #10, !dbg !8065
  %11 = add i64 %10, 1, !dbg !8066
  %12 = call i8* @HX_memdup.111(i8* %8, i64 %11), !dbg !8067
  store i8* %12, i8** %2, align 8, !dbg !8068
  br label %13, !dbg !8068

; <label>:13:                                     ; preds = %7, %6
  %14 = load i8*, i8** %2, align 8, !dbg !8069
  ret i8* %14, !dbg !8069
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXoption* @lookup_long(%struct.HXoption*, i8*) #0 !dbg !8070 {
  %3 = alloca %struct.HXoption*, align 8
  %4 = alloca %struct.HXoption*, align 8
  %5 = alloca i8*, align 8
  store %struct.HXoption* %0, %struct.HXoption** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %4, metadata !8073, metadata !DIExpression()), !dbg !8074
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8075, metadata !DIExpression()), !dbg !8076
  br label %6, !dbg !8077

; <label>:6:                                      ; preds = %34, %2
  %7 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8078
  %8 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %7, i32 0, i32 0, !dbg !8081
  %9 = load i8*, i8** %8, align 8, !dbg !8081
  %10 = icmp ne i8* %9, null, !dbg !8082
  br i1 %10, label %17, label %11, !dbg !8083

; <label>:11:                                     ; preds = %6
  %12 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8084
  %13 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %12, i32 0, i32 1, !dbg !8085
  %14 = load i8, i8* %13, align 8, !dbg !8085
  %15 = sext i8 %14 to i32, !dbg !8084
  %16 = icmp ne i32 %15, 0, !dbg !8086
  br label %17, !dbg !8083

; <label>:17:                                     ; preds = %11, %6
  %18 = phi i1 [ true, %6 ], [ %16, %11 ]
  br i1 %18, label %19, label %37, !dbg !8087

; <label>:19:                                     ; preds = %17
  %20 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8088
  %21 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %20, i32 0, i32 0, !dbg !8090
  %22 = load i8*, i8** %21, align 8, !dbg !8090
  %23 = icmp ne i8* %22, null, !dbg !8091
  br i1 %23, label %24, label %33, !dbg !8092

; <label>:24:                                     ; preds = %19
  %25 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8093
  %26 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %25, i32 0, i32 0, !dbg !8094
  %27 = load i8*, i8** %26, align 8, !dbg !8094
  %28 = load i8*, i8** %5, align 8, !dbg !8095
  %29 = call i32 @strcmp(i8* %27, i8* %28) #10, !dbg !8096
  %30 = icmp eq i32 %29, 0, !dbg !8097
  br i1 %30, label %31, label %33, !dbg !8098

; <label>:31:                                     ; preds = %24
  %32 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8099
  store %struct.HXoption* %32, %struct.HXoption** %3, align 8, !dbg !8100
  br label %38, !dbg !8100

; <label>:33:                                     ; preds = %24, %19
  br label %34, !dbg !8101

; <label>:34:                                     ; preds = %33
  %35 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8102
  %36 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %35, i32 1, !dbg !8102
  store %struct.HXoption* %36, %struct.HXoption** %4, align 8, !dbg !8102
  br label %6, !dbg !8103, !llvm.loop !8104

; <label>:37:                                     ; preds = %17
  store %struct.HXoption* null, %struct.HXoption** %3, align 8, !dbg !8106
  br label %38, !dbg !8106

; <label>:38:                                     ; preds = %37, %31
  %39 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8107
  ret %struct.HXoption* %39, !dbg !8107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @takes_void(i32) #0 !dbg !8108 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8111, metadata !DIExpression()), !dbg !8112
  %3 = load i32, i32* %2, align 4, !dbg !8113
  %4 = and i32 %3, 31, !dbg !8113
  store i32 %4, i32* %2, align 4, !dbg !8113
  %5 = load i32, i32* %2, align 4, !dbg !8114
  %6 = icmp eq i32 %5, 0, !dbg !8115
  br i1 %6, label %13, label %7, !dbg !8116

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !8117
  %9 = icmp eq i32 %8, 1, !dbg !8118
  br i1 %9, label %13, label %10, !dbg !8119

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* %2, align 4, !dbg !8120
  %12 = icmp eq i32 %11, 2, !dbg !8121
  br label %13, !dbg !8119

; <label>:13:                                     ; preds = %10, %7, %1
  %14 = phi i1 [ true, %7 ], [ true, %1 ], [ %12, %10 ]
  ret i1 %14, !dbg !8122
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_assign(%struct.HXoptcb*) #0 !dbg !8123 {
  %2 = alloca %struct.HXoptcb*, align 8
  %3 = alloca %struct.HXoption*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %struct.anon.0, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %union.anon, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i16*, align 8
  %13 = alloca i16, align 2
  %14 = alloca i16*, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i64*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8*, align 8
  %27 = alloca i8, align 1
  %28 = alloca i16*, align 8
  %29 = alloca i16, align 2
  %30 = alloca i16*, align 8
  %31 = alloca i16, align 2
  %32 = alloca i32*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i64*, align 8
  %37 = alloca i64, align 8
  %38 = alloca i64*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %struct.anon.12, align 8
  %45 = alloca %struct.anon.13, align 8
  %46 = alloca %struct.anon, align 8
  store %struct.HXoptcb* %0, %struct.HXoptcb** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoptcb** %2, metadata !8127, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata %struct.HXoption** %3, metadata !8129, metadata !DIExpression()), !dbg !8130
  %47 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8131
  %48 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %47, i32 0, i32 2, !dbg !8132
  %49 = load %struct.HXoption*, %struct.HXoption** %48, align 8, !dbg !8132
  store %struct.HXoption* %49, %struct.HXoption** %3, align 8, !dbg !8130
  %50 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8133
  %51 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %50, i32 0, i32 2, !dbg !8134
  %52 = load i32, i32* %51, align 4, !dbg !8134
  %53 = and i32 %52, 31, !dbg !8135
  switch i32 %53, label %1562 [
    i32 0, label %54
    i32 1, label %102
    i32 2, label %128
    i32 3, label %148
    i32 4, label %191
    i32 5, label %212
    i32 6, label %285
    i32 7, label %358
    i32 8, label %432
    i32 9, label %506
    i32 10, label %569
    i32 11, label %632
    i32 12, label %693
    i32 20, label %754
    i32 24, label %827
    i32 21, label %900
    i32 25, label %974
    i32 22, label %1048
    i32 26, label %1111
    i32 13, label %1174
    i32 14, label %1235
    i32 23, label %1296
    i32 27, label %1357
    i32 15, label %1418
    i32 16, label %1454
    i32 17, label %1489
    i32 19, label %1517
    i32 28, label %1537
  ], !dbg !8136

; <label>:54:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8137, metadata !DIExpression()), !dbg !8140
  %55 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8141
  %56 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %55, i32 0, i32 3, !dbg !8143
  %57 = load i8*, i8** %56, align 8, !dbg !8143
  %58 = bitcast i8* %57 to i32*, !dbg !8141
  store i32* %58, i32** %4, align 8, !dbg !8144
  %59 = icmp ne i32* %58, null, !dbg !8145
  br i1 %59, label %60, label %88, !dbg !8146

; <label>:60:                                     ; preds = %54
  %61 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8147
  %62 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %61, i32 0, i32 3, !dbg !8149
  %63 = load i8*, i8** %62, align 8, !dbg !8149
  %64 = bitcast i8* %63 to i32*, !dbg !8147
  store i32* %64, i32** %4, align 8, !dbg !8150
  %65 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8151
  %66 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %65, i32 0, i32 2, !dbg !8153
  %67 = load i32, i32* %66, align 4, !dbg !8153
  %68 = and i32 %67, 128, !dbg !8154
  %69 = icmp ne i32 %68, 0, !dbg !8154
  br i1 %69, label %70, label %74, !dbg !8155

; <label>:70:                                     ; preds = %60
  %71 = load i32*, i32** %4, align 8, !dbg !8156
  %72 = load i32, i32* %71, align 4, !dbg !8157
  %73 = add nsw i32 %72, 1, !dbg !8157
  store i32 %73, i32* %71, align 4, !dbg !8157
  br label %87, !dbg !8157

; <label>:74:                                     ; preds = %60
  %75 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8158
  %76 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %75, i32 0, i32 2, !dbg !8160
  %77 = load i32, i32* %76, align 4, !dbg !8160
  %78 = and i32 %77, 256, !dbg !8161
  %79 = icmp ne i32 %78, 0, !dbg !8161
  br i1 %79, label %80, label %84, !dbg !8162

; <label>:80:                                     ; preds = %74
  %81 = load i32*, i32** %4, align 8, !dbg !8163
  %82 = load i32, i32* %81, align 4, !dbg !8164
  %83 = add nsw i32 %82, -1, !dbg !8164
  store i32 %83, i32* %81, align 4, !dbg !8164
  br label %86, !dbg !8164

; <label>:84:                                     ; preds = %74
  %85 = load i32*, i32** %4, align 8, !dbg !8165
  store i32 1, i32* %85, align 4, !dbg !8166
  br label %86

; <label>:86:                                     ; preds = %84, %80
  br label %87

; <label>:87:                                     ; preds = %86, %70
  br label %88, !dbg !8167

; <label>:88:                                     ; preds = %87, %54
  %89 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8168
  %90 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %89, i32 0, i32 4, !dbg !8169
  %91 = bitcast %union.anon.38* %90 to i64*, !dbg !8169
  store i64 1, i64* %91, align 8, !dbg !8170
  %92 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8171
  %93 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %92, i32 0, i32 5, !dbg !8171
  %94 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %93, align 8, !dbg !8171
  %95 = icmp ne void (%struct.HXoptcb*)* %94, null, !dbg !8171
  br i1 %95, label %96, label %101, !dbg !8173

; <label>:96:                                     ; preds = %88
  %97 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8171
  %98 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %97, i32 0, i32 5, !dbg !8171
  %99 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %98, align 8, !dbg !8171
  %100 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8171
  call void %99(%struct.HXoptcb* %100), !dbg !8171
  br label %101, !dbg !8171

; <label>:101:                                    ; preds = %96, %88
  br label %1569, !dbg !8174

; <label>:102:                                    ; preds = %1
  %103 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8175
  %104 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %103, i32 0, i32 6, !dbg !8176
  %105 = load i32, i32* %104, align 8, !dbg !8176
  %106 = sext i32 %105 to i64, !dbg !8175
  %107 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8177
  %108 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %107, i32 0, i32 4, !dbg !8178
  %109 = bitcast %union.anon.38* %108 to i64*, !dbg !8178
  store i64 %106, i64* %109, align 8, !dbg !8179
  %110 = trunc i64 %106 to i32, !dbg !8177
  %111 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %5, i32 0, i32 0, !dbg !8180
  %112 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8180
  %113 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %112, i32 0, i32 3, !dbg !8180
  %114 = load i8*, i8** %113, align 8, !dbg !8180
  %115 = bitcast i8* %114 to i32*, !dbg !8180
  store i32* %115, i32** %111, align 8, !dbg !8180
  %116 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %5, i32 0, i32 0, !dbg !8180
  %117 = load i32*, i32** %116, align 8, !dbg !8180
  store i32 %110, i32* %117, align 4, !dbg !8181
  %118 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8182
  %119 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %118, i32 0, i32 5, !dbg !8182
  %120 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %119, align 8, !dbg !8182
  %121 = icmp ne void (%struct.HXoptcb*)* %120, null, !dbg !8182
  br i1 %121, label %122, label %127, !dbg !8184

; <label>:122:                                    ; preds = %102
  %123 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8182
  %124 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %123, i32 0, i32 5, !dbg !8182
  %125 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %124, align 8, !dbg !8182
  %126 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8182
  call void %125(%struct.HXoptcb* %126), !dbg !8182
  br label %127, !dbg !8182

; <label>:127:                                    ; preds = %122, %102
  br label %1569, !dbg !8185

; <label>:128:                                    ; preds = %1
  %129 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8186
  %130 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %129, i32 0, i32 7, !dbg !8187
  %131 = load i8*, i8** %130, align 8, !dbg !8187
  %132 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8188
  %133 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %132, i32 0, i32 3, !dbg !8189
  store i8* %131, i8** %133, align 8, !dbg !8190
  %134 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8191
  %135 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %134, i32 0, i32 3, !dbg !8191
  %136 = load i8*, i8** %135, align 8, !dbg !8191
  %137 = bitcast i8* %136 to i8**, !dbg !8191
  store i8* %131, i8** %137, align 8, !dbg !8192
  %138 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8193
  %139 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %138, i32 0, i32 5, !dbg !8193
  %140 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %139, align 8, !dbg !8193
  %141 = icmp ne void (%struct.HXoptcb*)* %140, null, !dbg !8193
  br i1 %141, label %142, label %147, !dbg !8195

; <label>:142:                                    ; preds = %128
  %143 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8193
  %144 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %143, i32 0, i32 5, !dbg !8193
  %145 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %144, align 8, !dbg !8193
  %146 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8193
  call void %145(%struct.HXoptcb* %146), !dbg !8193
  br label %147, !dbg !8193

; <label>:147:                                    ; preds = %142, %128
  br label %1569, !dbg !8196

; <label>:148:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %6, metadata !8197, metadata !DIExpression()), !dbg !8199
  %149 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8200
  %150 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %149, i32 0, i32 3, !dbg !8202
  %151 = load i8*, i8** %150, align 8, !dbg !8202
  %152 = bitcast i8* %151 to i32*, !dbg !8200
  store i32* %152, i32** %6, align 8, !dbg !8203
  %153 = icmp ne i32* %152, null, !dbg !8204
  br i1 %153, label %154, label %190, !dbg !8205

; <label>:154:                                    ; preds = %148
  %155 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8206
  %156 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %155, i32 0, i32 3, !dbg !8207
  %157 = load i8*, i8** %156, align 8, !dbg !8207
  %158 = call i32 @strcasecmp(i8* %157, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.106, i32 0, i32 0)) #10, !dbg !8208
  %159 = icmp eq i32 %158, 0, !dbg !8209
  br i1 %159, label %186, label %160, !dbg !8210

; <label>:160:                                    ; preds = %154
  %161 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8211
  %162 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %161, i32 0, i32 3, !dbg !8212
  %163 = load i8*, i8** %162, align 8, !dbg !8212
  %164 = call i32 @strcasecmp(i8* %163, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.107, i32 0, i32 0)) #10, !dbg !8213
  %165 = icmp eq i32 %164, 0, !dbg !8214
  br i1 %165, label %186, label %166, !dbg !8215

; <label>:166:                                    ; preds = %160
  %167 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8216
  %168 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %167, i32 0, i32 3, !dbg !8217
  %169 = load i8*, i8** %168, align 8, !dbg !8217
  %170 = call i32 @strcasecmp(i8* %169, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.108, i32 0, i32 0)) #10, !dbg !8218
  %171 = icmp eq i32 %170, 0, !dbg !8219
  br i1 %171, label %186, label %172, !dbg !8220

; <label>:172:                                    ; preds = %166
  %173 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8221
  %174 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %173, i32 0, i32 3, !dbg !8222
  %175 = load i8*, i8** %174, align 8, !dbg !8222
  %176 = load i8, i8* %175, align 1, !dbg !8223
  %177 = call zeroext i1 @HX_isdigit(i8 zeroext %176), !dbg !8224
  br i1 %177, label %178, label %184, !dbg !8225

; <label>:178:                                    ; preds = %172
  %179 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8226
  %180 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %179, i32 0, i32 3, !dbg !8227
  %181 = load i8*, i8** %180, align 8, !dbg !8227
  %182 = call i64 @strtoul(i8* %181, i8** null, i32 0) #7, !dbg !8228
  %183 = icmp ne i64 %182, 0, !dbg !8229
  br label %184

; <label>:184:                                    ; preds = %178, %172
  %185 = phi i1 [ false, %172 ], [ %183, %178 ], !dbg !8230
  br label %186, !dbg !8220

; <label>:186:                                    ; preds = %184, %166, %160, %154
  %187 = phi i1 [ true, %166 ], [ true, %160 ], [ true, %154 ], [ %185, %184 ]
  %188 = zext i1 %187 to i32, !dbg !8220
  %189 = load i32*, i32** %6, align 8, !dbg !8231
  store i32 %188, i32* %189, align 4, !dbg !8232
  br label %190, !dbg !8233

; <label>:190:                                    ; preds = %186, %148
  br label %1569, !dbg !8234

; <label>:191:                                    ; preds = %1
  %192 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8235
  %193 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %192, i32 0, i32 3, !dbg !8236
  %194 = load i8*, i8** %193, align 8, !dbg !8236
  %195 = load i8, i8* %194, align 1, !dbg !8237
  %196 = getelementptr inbounds %union.anon, %union.anon* %7, i32 0, i32 0, !dbg !8238
  %197 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8238
  %198 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %197, i32 0, i32 3, !dbg !8238
  %199 = load i8*, i8** %198, align 8, !dbg !8238
  store i8* %199, i8** %196, align 8, !dbg !8238
  %200 = getelementptr inbounds %union.anon, %union.anon* %7, i32 0, i32 0, !dbg !8238
  %201 = load i8*, i8** %200, align 8, !dbg !8238
  store i8 %195, i8* %201, align 1, !dbg !8239
  %202 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8240
  %203 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %202, i32 0, i32 5, !dbg !8240
  %204 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %203, align 8, !dbg !8240
  %205 = icmp ne void (%struct.HXoptcb*)* %204, null, !dbg !8240
  br i1 %205, label %206, label %211, !dbg !8242

; <label>:206:                                    ; preds = %191
  %207 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8240
  %208 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %207, i32 0, i32 5, !dbg !8240
  %209 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %208, align 8, !dbg !8240
  %210 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8240
  call void %209(%struct.HXoptcb* %210), !dbg !8240
  br label %211, !dbg !8240

; <label>:211:                                    ; preds = %206, %191
  br label %1569, !dbg !8243

; <label>:212:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8244, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata i8* %9, metadata !8247, metadata !DIExpression()), !dbg !8246
  %213 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8246
  %214 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %213, i32 0, i32 3, !dbg !8246
  %215 = load i8*, i8** %214, align 8, !dbg !8246
  %216 = call i64 @strtoul(i8* %215, i8** null, i32 0) #7, !dbg !8246
  %217 = trunc i64 %216 to i8, !dbg !8246
  store i8 %217, i8* %9, align 1, !dbg !8246
  %218 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8248
  %219 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %218, i32 0, i32 3, !dbg !8248
  %220 = load i8*, i8** %219, align 8, !dbg !8248
  store i8* %220, i8** %8, align 8, !dbg !8248
  %221 = icmp ne i8* %220, null, !dbg !8248
  br i1 %221, label %222, label %269, !dbg !8246

; <label>:222:                                    ; preds = %212
  %223 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8250
  %224 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %223, i32 0, i32 2, !dbg !8250
  %225 = load i32, i32* %224, align 4, !dbg !8250
  %226 = and i32 %225, 512, !dbg !8250
  %227 = icmp ne i32 %226, 0, !dbg !8250
  br i1 %227, label %228, label %233, !dbg !8253

; <label>:228:                                    ; preds = %222
  %229 = load i8, i8* %9, align 1, !dbg !8250
  %230 = zext i8 %229 to i32, !dbg !8250
  %231 = xor i32 %230, -1, !dbg !8250
  %232 = trunc i32 %231 to i8, !dbg !8250
  store i8 %232, i8* %9, align 1, !dbg !8250
  br label %233, !dbg !8250

; <label>:233:                                    ; preds = %228, %222
  %234 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8253
  %235 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %234, i32 0, i32 2, !dbg !8253
  %236 = load i32, i32* %235, align 4, !dbg !8253
  %237 = and i32 %236, 7168, !dbg !8253
  switch i32 %237, label %265 [
    i32 0, label %238
    i32 1024, label %241
    i32 2048, label %249
    i32 4096, label %257
  ], !dbg !8253

; <label>:238:                                    ; preds = %233
  %239 = load i8, i8* %9, align 1, !dbg !8254
  %240 = load i8*, i8** %8, align 8, !dbg !8254
  store i8 %239, i8* %240, align 1, !dbg !8254
  br label %268, !dbg !8254

; <label>:241:                                    ; preds = %233
  %242 = load i8, i8* %9, align 1, !dbg !8254
  %243 = zext i8 %242 to i32, !dbg !8254
  %244 = load i8*, i8** %8, align 8, !dbg !8254
  %245 = load i8, i8* %244, align 1, !dbg !8254
  %246 = zext i8 %245 to i32, !dbg !8254
  %247 = or i32 %246, %243, !dbg !8254
  %248 = trunc i32 %247 to i8, !dbg !8254
  store i8 %248, i8* %244, align 1, !dbg !8254
  br label %268, !dbg !8254

; <label>:249:                                    ; preds = %233
  %250 = load i8, i8* %9, align 1, !dbg !8254
  %251 = zext i8 %250 to i32, !dbg !8254
  %252 = load i8*, i8** %8, align 8, !dbg !8254
  %253 = load i8, i8* %252, align 1, !dbg !8254
  %254 = zext i8 %253 to i32, !dbg !8254
  %255 = and i32 %254, %251, !dbg !8254
  %256 = trunc i32 %255 to i8, !dbg !8254
  store i8 %256, i8* %252, align 1, !dbg !8254
  br label %268, !dbg !8254

; <label>:257:                                    ; preds = %233
  %258 = load i8, i8* %9, align 1, !dbg !8254
  %259 = zext i8 %258 to i32, !dbg !8254
  %260 = load i8*, i8** %8, align 8, !dbg !8254
  %261 = load i8, i8* %260, align 1, !dbg !8254
  %262 = zext i8 %261 to i32, !dbg !8254
  %263 = xor i32 %262, %259, !dbg !8254
  %264 = trunc i32 %263 to i8, !dbg !8254
  store i8 %264, i8* %260, align 1, !dbg !8254
  br label %268, !dbg !8254

; <label>:265:                                    ; preds = %233
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8254
  %267 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %266, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8254
  br label %268, !dbg !8254

; <label>:268:                                    ; preds = %265, %257, %249, %241, %238
  br label %269, !dbg !8253

; <label>:269:                                    ; preds = %268, %212
  %270 = load i8, i8* %9, align 1, !dbg !8246
  %271 = zext i8 %270 to i64, !dbg !8246
  %272 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8246
  %273 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %272, i32 0, i32 4, !dbg !8246
  %274 = bitcast %union.anon.38* %273 to i64*, !dbg !8246
  store i64 %271, i64* %274, align 8, !dbg !8246
  %275 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8256
  %276 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %275, i32 0, i32 5, !dbg !8256
  %277 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %276, align 8, !dbg !8256
  %278 = icmp ne void (%struct.HXoptcb*)* %277, null, !dbg !8256
  br i1 %278, label %279, label %284, !dbg !8246

; <label>:279:                                    ; preds = %269
  %280 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8256
  %281 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %280, i32 0, i32 5, !dbg !8256
  %282 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %281, align 8, !dbg !8256
  %283 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8256
  call void %282(%struct.HXoptcb* %283), !dbg !8256
  br label %284, !dbg !8256

; <label>:284:                                    ; preds = %279, %269
  br label %1569, !dbg !8246

; <label>:285:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i8** %10, metadata !8258, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.declare(metadata i8* %11, metadata !8261, metadata !DIExpression()), !dbg !8260
  %286 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8260
  %287 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %286, i32 0, i32 3, !dbg !8260
  %288 = load i8*, i8** %287, align 8, !dbg !8260
  %289 = call i64 @strtol(i8* %288, i8** null, i32 0) #7, !dbg !8260
  %290 = trunc i64 %289 to i8, !dbg !8260
  store i8 %290, i8* %11, align 1, !dbg !8260
  %291 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8262
  %292 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %291, i32 0, i32 3, !dbg !8262
  %293 = load i8*, i8** %292, align 8, !dbg !8262
  store i8* %293, i8** %10, align 8, !dbg !8262
  %294 = icmp ne i8* %293, null, !dbg !8262
  br i1 %294, label %295, label %342, !dbg !8260

; <label>:295:                                    ; preds = %285
  %296 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8264
  %297 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %296, i32 0, i32 2, !dbg !8264
  %298 = load i32, i32* %297, align 4, !dbg !8264
  %299 = and i32 %298, 512, !dbg !8264
  %300 = icmp ne i32 %299, 0, !dbg !8264
  br i1 %300, label %301, label %306, !dbg !8267

; <label>:301:                                    ; preds = %295
  %302 = load i8, i8* %11, align 1, !dbg !8264
  %303 = sext i8 %302 to i32, !dbg !8264
  %304 = xor i32 %303, -1, !dbg !8264
  %305 = trunc i32 %304 to i8, !dbg !8264
  store i8 %305, i8* %11, align 1, !dbg !8264
  br label %306, !dbg !8264

; <label>:306:                                    ; preds = %301, %295
  %307 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8267
  %308 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %307, i32 0, i32 2, !dbg !8267
  %309 = load i32, i32* %308, align 4, !dbg !8267
  %310 = and i32 %309, 7168, !dbg !8267
  switch i32 %310, label %338 [
    i32 0, label %311
    i32 1024, label %314
    i32 2048, label %322
    i32 4096, label %330
  ], !dbg !8267

; <label>:311:                                    ; preds = %306
  %312 = load i8, i8* %11, align 1, !dbg !8268
  %313 = load i8*, i8** %10, align 8, !dbg !8268
  store i8 %312, i8* %313, align 1, !dbg !8268
  br label %341, !dbg !8268

; <label>:314:                                    ; preds = %306
  %315 = load i8, i8* %11, align 1, !dbg !8268
  %316 = sext i8 %315 to i32, !dbg !8268
  %317 = load i8*, i8** %10, align 8, !dbg !8268
  %318 = load i8, i8* %317, align 1, !dbg !8268
  %319 = sext i8 %318 to i32, !dbg !8268
  %320 = or i32 %319, %316, !dbg !8268
  %321 = trunc i32 %320 to i8, !dbg !8268
  store i8 %321, i8* %317, align 1, !dbg !8268
  br label %341, !dbg !8268

; <label>:322:                                    ; preds = %306
  %323 = load i8, i8* %11, align 1, !dbg !8268
  %324 = sext i8 %323 to i32, !dbg !8268
  %325 = load i8*, i8** %10, align 8, !dbg !8268
  %326 = load i8, i8* %325, align 1, !dbg !8268
  %327 = sext i8 %326 to i32, !dbg !8268
  %328 = and i32 %327, %324, !dbg !8268
  %329 = trunc i32 %328 to i8, !dbg !8268
  store i8 %329, i8* %325, align 1, !dbg !8268
  br label %341, !dbg !8268

; <label>:330:                                    ; preds = %306
  %331 = load i8, i8* %11, align 1, !dbg !8268
  %332 = sext i8 %331 to i32, !dbg !8268
  %333 = load i8*, i8** %10, align 8, !dbg !8268
  %334 = load i8, i8* %333, align 1, !dbg !8268
  %335 = sext i8 %334 to i32, !dbg !8268
  %336 = xor i32 %335, %332, !dbg !8268
  %337 = trunc i32 %336 to i8, !dbg !8268
  store i8 %337, i8* %333, align 1, !dbg !8268
  br label %341, !dbg !8268

; <label>:338:                                    ; preds = %306
  %339 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8268
  %340 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %339, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8268
  br label %341, !dbg !8268

; <label>:341:                                    ; preds = %338, %330, %322, %314, %311
  br label %342, !dbg !8267

; <label>:342:                                    ; preds = %341, %285
  %343 = load i8, i8* %11, align 1, !dbg !8260
  %344 = sext i8 %343 to i64, !dbg !8260
  %345 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8260
  %346 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %345, i32 0, i32 4, !dbg !8260
  %347 = bitcast %union.anon.38* %346 to i64*, !dbg !8260
  store i64 %344, i64* %347, align 8, !dbg !8260
  %348 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8270
  %349 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %348, i32 0, i32 5, !dbg !8270
  %350 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %349, align 8, !dbg !8270
  %351 = icmp ne void (%struct.HXoptcb*)* %350, null, !dbg !8270
  br i1 %351, label %352, label %357, !dbg !8260

; <label>:352:                                    ; preds = %342
  %353 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8270
  %354 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %353, i32 0, i32 5, !dbg !8270
  %355 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %354, align 8, !dbg !8270
  %356 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8270
  call void %355(%struct.HXoptcb* %356), !dbg !8270
  br label %357, !dbg !8270

; <label>:357:                                    ; preds = %352, %342
  br label %1569, !dbg !8260

; <label>:358:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i16** %12, metadata !8272, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata i16* %13, metadata !8276, metadata !DIExpression()), !dbg !8275
  %359 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8275
  %360 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %359, i32 0, i32 3, !dbg !8275
  %361 = load i8*, i8** %360, align 8, !dbg !8275
  %362 = call i64 @strtoul(i8* %361, i8** null, i32 0) #7, !dbg !8275
  %363 = trunc i64 %362 to i16, !dbg !8275
  store i16 %363, i16* %13, align 2, !dbg !8275
  %364 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8277
  %365 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %364, i32 0, i32 3, !dbg !8277
  %366 = load i8*, i8** %365, align 8, !dbg !8277
  %367 = bitcast i8* %366 to i16*, !dbg !8277
  store i16* %367, i16** %12, align 8, !dbg !8277
  %368 = icmp ne i16* %367, null, !dbg !8277
  br i1 %368, label %369, label %416, !dbg !8275

; <label>:369:                                    ; preds = %358
  %370 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8279
  %371 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %370, i32 0, i32 2, !dbg !8279
  %372 = load i32, i32* %371, align 4, !dbg !8279
  %373 = and i32 %372, 512, !dbg !8279
  %374 = icmp ne i32 %373, 0, !dbg !8279
  br i1 %374, label %375, label %380, !dbg !8282

; <label>:375:                                    ; preds = %369
  %376 = load i16, i16* %13, align 2, !dbg !8279
  %377 = zext i16 %376 to i32, !dbg !8279
  %378 = xor i32 %377, -1, !dbg !8279
  %379 = trunc i32 %378 to i16, !dbg !8279
  store i16 %379, i16* %13, align 2, !dbg !8279
  br label %380, !dbg !8279

; <label>:380:                                    ; preds = %375, %369
  %381 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8282
  %382 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %381, i32 0, i32 2, !dbg !8282
  %383 = load i32, i32* %382, align 4, !dbg !8282
  %384 = and i32 %383, 7168, !dbg !8282
  switch i32 %384, label %412 [
    i32 0, label %385
    i32 1024, label %388
    i32 2048, label %396
    i32 4096, label %404
  ], !dbg !8282

; <label>:385:                                    ; preds = %380
  %386 = load i16, i16* %13, align 2, !dbg !8283
  %387 = load i16*, i16** %12, align 8, !dbg !8283
  store i16 %386, i16* %387, align 2, !dbg !8283
  br label %415, !dbg !8283

; <label>:388:                                    ; preds = %380
  %389 = load i16, i16* %13, align 2, !dbg !8283
  %390 = zext i16 %389 to i32, !dbg !8283
  %391 = load i16*, i16** %12, align 8, !dbg !8283
  %392 = load i16, i16* %391, align 2, !dbg !8283
  %393 = zext i16 %392 to i32, !dbg !8283
  %394 = or i32 %393, %390, !dbg !8283
  %395 = trunc i32 %394 to i16, !dbg !8283
  store i16 %395, i16* %391, align 2, !dbg !8283
  br label %415, !dbg !8283

; <label>:396:                                    ; preds = %380
  %397 = load i16, i16* %13, align 2, !dbg !8283
  %398 = zext i16 %397 to i32, !dbg !8283
  %399 = load i16*, i16** %12, align 8, !dbg !8283
  %400 = load i16, i16* %399, align 2, !dbg !8283
  %401 = zext i16 %400 to i32, !dbg !8283
  %402 = and i32 %401, %398, !dbg !8283
  %403 = trunc i32 %402 to i16, !dbg !8283
  store i16 %403, i16* %399, align 2, !dbg !8283
  br label %415, !dbg !8283

; <label>:404:                                    ; preds = %380
  %405 = load i16, i16* %13, align 2, !dbg !8283
  %406 = zext i16 %405 to i32, !dbg !8283
  %407 = load i16*, i16** %12, align 8, !dbg !8283
  %408 = load i16, i16* %407, align 2, !dbg !8283
  %409 = zext i16 %408 to i32, !dbg !8283
  %410 = xor i32 %409, %406, !dbg !8283
  %411 = trunc i32 %410 to i16, !dbg !8283
  store i16 %411, i16* %407, align 2, !dbg !8283
  br label %415, !dbg !8283

; <label>:412:                                    ; preds = %380
  %413 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8283
  %414 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %413, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8283
  br label %415, !dbg !8283

; <label>:415:                                    ; preds = %412, %404, %396, %388, %385
  br label %416, !dbg !8282

; <label>:416:                                    ; preds = %415, %358
  %417 = load i16, i16* %13, align 2, !dbg !8275
  %418 = zext i16 %417 to i64, !dbg !8275
  %419 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8275
  %420 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %419, i32 0, i32 4, !dbg !8275
  %421 = bitcast %union.anon.38* %420 to i64*, !dbg !8275
  store i64 %418, i64* %421, align 8, !dbg !8275
  %422 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8285
  %423 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %422, i32 0, i32 5, !dbg !8285
  %424 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %423, align 8, !dbg !8285
  %425 = icmp ne void (%struct.HXoptcb*)* %424, null, !dbg !8285
  br i1 %425, label %426, label %431, !dbg !8275

; <label>:426:                                    ; preds = %416
  %427 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8285
  %428 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %427, i32 0, i32 5, !dbg !8285
  %429 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %428, align 8, !dbg !8285
  %430 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8285
  call void %429(%struct.HXoptcb* %430), !dbg !8285
  br label %431, !dbg !8285

; <label>:431:                                    ; preds = %426, %416
  br label %1569, !dbg !8275

; <label>:432:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i16** %14, metadata !8287, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata i16* %15, metadata !8291, metadata !DIExpression()), !dbg !8290
  %433 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8290
  %434 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %433, i32 0, i32 3, !dbg !8290
  %435 = load i8*, i8** %434, align 8, !dbg !8290
  %436 = call i64 @strtol(i8* %435, i8** null, i32 0) #7, !dbg !8290
  %437 = trunc i64 %436 to i16, !dbg !8290
  store i16 %437, i16* %15, align 2, !dbg !8290
  %438 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8292
  %439 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %438, i32 0, i32 3, !dbg !8292
  %440 = load i8*, i8** %439, align 8, !dbg !8292
  %441 = bitcast i8* %440 to i16*, !dbg !8292
  store i16* %441, i16** %14, align 8, !dbg !8292
  %442 = icmp ne i16* %441, null, !dbg !8292
  br i1 %442, label %443, label %490, !dbg !8290

; <label>:443:                                    ; preds = %432
  %444 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8294
  %445 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %444, i32 0, i32 2, !dbg !8294
  %446 = load i32, i32* %445, align 4, !dbg !8294
  %447 = and i32 %446, 512, !dbg !8294
  %448 = icmp ne i32 %447, 0, !dbg !8294
  br i1 %448, label %449, label %454, !dbg !8297

; <label>:449:                                    ; preds = %443
  %450 = load i16, i16* %15, align 2, !dbg !8294
  %451 = sext i16 %450 to i32, !dbg !8294
  %452 = xor i32 %451, -1, !dbg !8294
  %453 = trunc i32 %452 to i16, !dbg !8294
  store i16 %453, i16* %15, align 2, !dbg !8294
  br label %454, !dbg !8294

; <label>:454:                                    ; preds = %449, %443
  %455 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8297
  %456 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %455, i32 0, i32 2, !dbg !8297
  %457 = load i32, i32* %456, align 4, !dbg !8297
  %458 = and i32 %457, 7168, !dbg !8297
  switch i32 %458, label %486 [
    i32 0, label %459
    i32 1024, label %462
    i32 2048, label %470
    i32 4096, label %478
  ], !dbg !8297

; <label>:459:                                    ; preds = %454
  %460 = load i16, i16* %15, align 2, !dbg !8298
  %461 = load i16*, i16** %14, align 8, !dbg !8298
  store i16 %460, i16* %461, align 2, !dbg !8298
  br label %489, !dbg !8298

; <label>:462:                                    ; preds = %454
  %463 = load i16, i16* %15, align 2, !dbg !8298
  %464 = sext i16 %463 to i32, !dbg !8298
  %465 = load i16*, i16** %14, align 8, !dbg !8298
  %466 = load i16, i16* %465, align 2, !dbg !8298
  %467 = sext i16 %466 to i32, !dbg !8298
  %468 = or i32 %467, %464, !dbg !8298
  %469 = trunc i32 %468 to i16, !dbg !8298
  store i16 %469, i16* %465, align 2, !dbg !8298
  br label %489, !dbg !8298

; <label>:470:                                    ; preds = %454
  %471 = load i16, i16* %15, align 2, !dbg !8298
  %472 = sext i16 %471 to i32, !dbg !8298
  %473 = load i16*, i16** %14, align 8, !dbg !8298
  %474 = load i16, i16* %473, align 2, !dbg !8298
  %475 = sext i16 %474 to i32, !dbg !8298
  %476 = and i32 %475, %472, !dbg !8298
  %477 = trunc i32 %476 to i16, !dbg !8298
  store i16 %477, i16* %473, align 2, !dbg !8298
  br label %489, !dbg !8298

; <label>:478:                                    ; preds = %454
  %479 = load i16, i16* %15, align 2, !dbg !8298
  %480 = sext i16 %479 to i32, !dbg !8298
  %481 = load i16*, i16** %14, align 8, !dbg !8298
  %482 = load i16, i16* %481, align 2, !dbg !8298
  %483 = sext i16 %482 to i32, !dbg !8298
  %484 = xor i32 %483, %480, !dbg !8298
  %485 = trunc i32 %484 to i16, !dbg !8298
  store i16 %485, i16* %481, align 2, !dbg !8298
  br label %489, !dbg !8298

; <label>:486:                                    ; preds = %454
  %487 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8298
  %488 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %487, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8298
  br label %489, !dbg !8298

; <label>:489:                                    ; preds = %486, %478, %470, %462, %459
  br label %490, !dbg !8297

; <label>:490:                                    ; preds = %489, %432
  %491 = load i16, i16* %15, align 2, !dbg !8290
  %492 = sext i16 %491 to i64, !dbg !8290
  %493 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8290
  %494 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %493, i32 0, i32 4, !dbg !8290
  %495 = bitcast %union.anon.38* %494 to i64*, !dbg !8290
  store i64 %492, i64* %495, align 8, !dbg !8290
  %496 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8300
  %497 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %496, i32 0, i32 5, !dbg !8300
  %498 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %497, align 8, !dbg !8300
  %499 = icmp ne void (%struct.HXoptcb*)* %498, null, !dbg !8300
  br i1 %499, label %500, label %505, !dbg !8290

; <label>:500:                                    ; preds = %490
  %501 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8300
  %502 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %501, i32 0, i32 5, !dbg !8300
  %503 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %502, align 8, !dbg !8300
  %504 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8300
  call void %503(%struct.HXoptcb* %504), !dbg !8300
  br label %505, !dbg !8300

; <label>:505:                                    ; preds = %500, %490
  br label %1569, !dbg !8290

; <label>:506:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %16, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8305, metadata !DIExpression()), !dbg !8304
  %507 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8304
  %508 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %507, i32 0, i32 3, !dbg !8304
  %509 = load i8*, i8** %508, align 8, !dbg !8304
  %510 = call i64 @strtoul(i8* %509, i8** null, i32 0) #7, !dbg !8304
  %511 = trunc i64 %510 to i32, !dbg !8304
  store i32 %511, i32* %17, align 4, !dbg !8304
  %512 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8306
  %513 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %512, i32 0, i32 3, !dbg !8306
  %514 = load i8*, i8** %513, align 8, !dbg !8306
  %515 = bitcast i8* %514 to i32*, !dbg !8306
  store i32* %515, i32** %16, align 8, !dbg !8306
  %516 = icmp ne i32* %515, null, !dbg !8306
  br i1 %516, label %517, label %553, !dbg !8304

; <label>:517:                                    ; preds = %506
  %518 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8308
  %519 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %518, i32 0, i32 2, !dbg !8308
  %520 = load i32, i32* %519, align 4, !dbg !8308
  %521 = and i32 %520, 512, !dbg !8308
  %522 = icmp ne i32 %521, 0, !dbg !8308
  br i1 %522, label %523, label %526, !dbg !8311

; <label>:523:                                    ; preds = %517
  %524 = load i32, i32* %17, align 4, !dbg !8308
  %525 = xor i32 %524, -1, !dbg !8308
  store i32 %525, i32* %17, align 4, !dbg !8308
  br label %526, !dbg !8308

; <label>:526:                                    ; preds = %523, %517
  %527 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8311
  %528 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %527, i32 0, i32 2, !dbg !8311
  %529 = load i32, i32* %528, align 4, !dbg !8311
  %530 = and i32 %529, 7168, !dbg !8311
  switch i32 %530, label %549 [
    i32 0, label %531
    i32 1024, label %534
    i32 2048, label %539
    i32 4096, label %544
  ], !dbg !8311

; <label>:531:                                    ; preds = %526
  %532 = load i32, i32* %17, align 4, !dbg !8312
  %533 = load i32*, i32** %16, align 8, !dbg !8312
  store i32 %532, i32* %533, align 4, !dbg !8312
  br label %552, !dbg !8312

; <label>:534:                                    ; preds = %526
  %535 = load i32, i32* %17, align 4, !dbg !8312
  %536 = load i32*, i32** %16, align 8, !dbg !8312
  %537 = load i32, i32* %536, align 4, !dbg !8312
  %538 = or i32 %537, %535, !dbg !8312
  store i32 %538, i32* %536, align 4, !dbg !8312
  br label %552, !dbg !8312

; <label>:539:                                    ; preds = %526
  %540 = load i32, i32* %17, align 4, !dbg !8312
  %541 = load i32*, i32** %16, align 8, !dbg !8312
  %542 = load i32, i32* %541, align 4, !dbg !8312
  %543 = and i32 %542, %540, !dbg !8312
  store i32 %543, i32* %541, align 4, !dbg !8312
  br label %552, !dbg !8312

; <label>:544:                                    ; preds = %526
  %545 = load i32, i32* %17, align 4, !dbg !8312
  %546 = load i32*, i32** %16, align 8, !dbg !8312
  %547 = load i32, i32* %546, align 4, !dbg !8312
  %548 = xor i32 %547, %545, !dbg !8312
  store i32 %548, i32* %546, align 4, !dbg !8312
  br label %552, !dbg !8312

; <label>:549:                                    ; preds = %526
  %550 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8312
  %551 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %550, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8312
  br label %552, !dbg !8312

; <label>:552:                                    ; preds = %549, %544, %539, %534, %531
  br label %553, !dbg !8311

; <label>:553:                                    ; preds = %552, %506
  %554 = load i32, i32* %17, align 4, !dbg !8304
  %555 = zext i32 %554 to i64, !dbg !8304
  %556 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8304
  %557 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %556, i32 0, i32 4, !dbg !8304
  %558 = bitcast %union.anon.38* %557 to i64*, !dbg !8304
  store i64 %555, i64* %558, align 8, !dbg !8304
  %559 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8314
  %560 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %559, i32 0, i32 5, !dbg !8314
  %561 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %560, align 8, !dbg !8314
  %562 = icmp ne void (%struct.HXoptcb*)* %561, null, !dbg !8314
  br i1 %562, label %563, label %568, !dbg !8304

; <label>:563:                                    ; preds = %553
  %564 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8314
  %565 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %564, i32 0, i32 5, !dbg !8314
  %566 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %565, align 8, !dbg !8314
  %567 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8314
  call void %566(%struct.HXoptcb* %567), !dbg !8314
  br label %568, !dbg !8314

; <label>:568:                                    ; preds = %563, %553
  br label %1569, !dbg !8304

; <label>:569:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %18, metadata !8316, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8319, metadata !DIExpression()), !dbg !8318
  %570 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8318
  %571 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %570, i32 0, i32 3, !dbg !8318
  %572 = load i8*, i8** %571, align 8, !dbg !8318
  %573 = call i64 @strtol(i8* %572, i8** null, i32 0) #7, !dbg !8318
  %574 = trunc i64 %573 to i32, !dbg !8318
  store i32 %574, i32* %19, align 4, !dbg !8318
  %575 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8320
  %576 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %575, i32 0, i32 3, !dbg !8320
  %577 = load i8*, i8** %576, align 8, !dbg !8320
  %578 = bitcast i8* %577 to i32*, !dbg !8320
  store i32* %578, i32** %18, align 8, !dbg !8320
  %579 = icmp ne i32* %578, null, !dbg !8320
  br i1 %579, label %580, label %616, !dbg !8318

; <label>:580:                                    ; preds = %569
  %581 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8322
  %582 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %581, i32 0, i32 2, !dbg !8322
  %583 = load i32, i32* %582, align 4, !dbg !8322
  %584 = and i32 %583, 512, !dbg !8322
  %585 = icmp ne i32 %584, 0, !dbg !8322
  br i1 %585, label %586, label %589, !dbg !8325

; <label>:586:                                    ; preds = %580
  %587 = load i32, i32* %19, align 4, !dbg !8322
  %588 = xor i32 %587, -1, !dbg !8322
  store i32 %588, i32* %19, align 4, !dbg !8322
  br label %589, !dbg !8322

; <label>:589:                                    ; preds = %586, %580
  %590 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8325
  %591 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %590, i32 0, i32 2, !dbg !8325
  %592 = load i32, i32* %591, align 4, !dbg !8325
  %593 = and i32 %592, 7168, !dbg !8325
  switch i32 %593, label %612 [
    i32 0, label %594
    i32 1024, label %597
    i32 2048, label %602
    i32 4096, label %607
  ], !dbg !8325

; <label>:594:                                    ; preds = %589
  %595 = load i32, i32* %19, align 4, !dbg !8326
  %596 = load i32*, i32** %18, align 8, !dbg !8326
  store i32 %595, i32* %596, align 4, !dbg !8326
  br label %615, !dbg !8326

; <label>:597:                                    ; preds = %589
  %598 = load i32, i32* %19, align 4, !dbg !8326
  %599 = load i32*, i32** %18, align 8, !dbg !8326
  %600 = load i32, i32* %599, align 4, !dbg !8326
  %601 = or i32 %600, %598, !dbg !8326
  store i32 %601, i32* %599, align 4, !dbg !8326
  br label %615, !dbg !8326

; <label>:602:                                    ; preds = %589
  %603 = load i32, i32* %19, align 4, !dbg !8326
  %604 = load i32*, i32** %18, align 8, !dbg !8326
  %605 = load i32, i32* %604, align 4, !dbg !8326
  %606 = and i32 %605, %603, !dbg !8326
  store i32 %606, i32* %604, align 4, !dbg !8326
  br label %615, !dbg !8326

; <label>:607:                                    ; preds = %589
  %608 = load i32, i32* %19, align 4, !dbg !8326
  %609 = load i32*, i32** %18, align 8, !dbg !8326
  %610 = load i32, i32* %609, align 4, !dbg !8326
  %611 = xor i32 %610, %608, !dbg !8326
  store i32 %611, i32* %609, align 4, !dbg !8326
  br label %615, !dbg !8326

; <label>:612:                                    ; preds = %589
  %613 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8326
  %614 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %613, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8326
  br label %615, !dbg !8326

; <label>:615:                                    ; preds = %612, %607, %602, %597, %594
  br label %616, !dbg !8325

; <label>:616:                                    ; preds = %615, %569
  %617 = load i32, i32* %19, align 4, !dbg !8318
  %618 = sext i32 %617 to i64, !dbg !8318
  %619 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8318
  %620 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %619, i32 0, i32 4, !dbg !8318
  %621 = bitcast %union.anon.38* %620 to i64*, !dbg !8318
  store i64 %618, i64* %621, align 8, !dbg !8318
  %622 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8328
  %623 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %622, i32 0, i32 5, !dbg !8328
  %624 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %623, align 8, !dbg !8328
  %625 = icmp ne void (%struct.HXoptcb*)* %624, null, !dbg !8328
  br i1 %625, label %626, label %631, !dbg !8318

; <label>:626:                                    ; preds = %616
  %627 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8328
  %628 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %627, i32 0, i32 5, !dbg !8328
  %629 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %628, align 8, !dbg !8328
  %630 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8328
  call void %629(%struct.HXoptcb* %630), !dbg !8328
  br label %631, !dbg !8328

; <label>:631:                                    ; preds = %626, %616
  br label %1569, !dbg !8318

; <label>:632:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i64** %20, metadata !8330, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.declare(metadata i64* %21, metadata !8334, metadata !DIExpression()), !dbg !8333
  %633 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8333
  %634 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %633, i32 0, i32 3, !dbg !8333
  %635 = load i8*, i8** %634, align 8, !dbg !8333
  %636 = call i64 @strtoul(i8* %635, i8** null, i32 0) #7, !dbg !8333
  store i64 %636, i64* %21, align 8, !dbg !8333
  %637 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8335
  %638 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %637, i32 0, i32 3, !dbg !8335
  %639 = load i8*, i8** %638, align 8, !dbg !8335
  %640 = bitcast i8* %639 to i64*, !dbg !8335
  store i64* %640, i64** %20, align 8, !dbg !8335
  %641 = icmp ne i64* %640, null, !dbg !8335
  br i1 %641, label %642, label %678, !dbg !8333

; <label>:642:                                    ; preds = %632
  %643 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8337
  %644 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %643, i32 0, i32 2, !dbg !8337
  %645 = load i32, i32* %644, align 4, !dbg !8337
  %646 = and i32 %645, 512, !dbg !8337
  %647 = icmp ne i32 %646, 0, !dbg !8337
  br i1 %647, label %648, label %651, !dbg !8340

; <label>:648:                                    ; preds = %642
  %649 = load i64, i64* %21, align 8, !dbg !8337
  %650 = xor i64 %649, -1, !dbg !8337
  store i64 %650, i64* %21, align 8, !dbg !8337
  br label %651, !dbg !8337

; <label>:651:                                    ; preds = %648, %642
  %652 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8340
  %653 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %652, i32 0, i32 2, !dbg !8340
  %654 = load i32, i32* %653, align 4, !dbg !8340
  %655 = and i32 %654, 7168, !dbg !8340
  switch i32 %655, label %674 [
    i32 0, label %656
    i32 1024, label %659
    i32 2048, label %664
    i32 4096, label %669
  ], !dbg !8340

; <label>:656:                                    ; preds = %651
  %657 = load i64, i64* %21, align 8, !dbg !8341
  %658 = load i64*, i64** %20, align 8, !dbg !8341
  store i64 %657, i64* %658, align 8, !dbg !8341
  br label %677, !dbg !8341

; <label>:659:                                    ; preds = %651
  %660 = load i64, i64* %21, align 8, !dbg !8341
  %661 = load i64*, i64** %20, align 8, !dbg !8341
  %662 = load i64, i64* %661, align 8, !dbg !8341
  %663 = or i64 %662, %660, !dbg !8341
  store i64 %663, i64* %661, align 8, !dbg !8341
  br label %677, !dbg !8341

; <label>:664:                                    ; preds = %651
  %665 = load i64, i64* %21, align 8, !dbg !8341
  %666 = load i64*, i64** %20, align 8, !dbg !8341
  %667 = load i64, i64* %666, align 8, !dbg !8341
  %668 = and i64 %667, %665, !dbg !8341
  store i64 %668, i64* %666, align 8, !dbg !8341
  br label %677, !dbg !8341

; <label>:669:                                    ; preds = %651
  %670 = load i64, i64* %21, align 8, !dbg !8341
  %671 = load i64*, i64** %20, align 8, !dbg !8341
  %672 = load i64, i64* %671, align 8, !dbg !8341
  %673 = xor i64 %672, %670, !dbg !8341
  store i64 %673, i64* %671, align 8, !dbg !8341
  br label %677, !dbg !8341

; <label>:674:                                    ; preds = %651
  %675 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8341
  %676 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %675, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8341
  br label %677, !dbg !8341

; <label>:677:                                    ; preds = %674, %669, %664, %659, %656
  br label %678, !dbg !8340

; <label>:678:                                    ; preds = %677, %632
  %679 = load i64, i64* %21, align 8, !dbg !8333
  %680 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8333
  %681 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %680, i32 0, i32 4, !dbg !8333
  %682 = bitcast %union.anon.38* %681 to i64*, !dbg !8333
  store i64 %679, i64* %682, align 8, !dbg !8333
  %683 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8343
  %684 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %683, i32 0, i32 5, !dbg !8343
  %685 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %684, align 8, !dbg !8343
  %686 = icmp ne void (%struct.HXoptcb*)* %685, null, !dbg !8343
  br i1 %686, label %687, label %692, !dbg !8333

; <label>:687:                                    ; preds = %678
  %688 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8343
  %689 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %688, i32 0, i32 5, !dbg !8343
  %690 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %689, align 8, !dbg !8343
  %691 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8343
  call void %690(%struct.HXoptcb* %691), !dbg !8343
  br label %692, !dbg !8343

; <label>:692:                                    ; preds = %687, %678
  br label %1569, !dbg !8333

; <label>:693:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i64** %22, metadata !8345, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.declare(metadata i64* %23, metadata !8349, metadata !DIExpression()), !dbg !8348
  %694 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8348
  %695 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %694, i32 0, i32 3, !dbg !8348
  %696 = load i8*, i8** %695, align 8, !dbg !8348
  %697 = call i64 @strtol(i8* %696, i8** null, i32 0) #7, !dbg !8348
  store i64 %697, i64* %23, align 8, !dbg !8348
  %698 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8350
  %699 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %698, i32 0, i32 3, !dbg !8350
  %700 = load i8*, i8** %699, align 8, !dbg !8350
  %701 = bitcast i8* %700 to i64*, !dbg !8350
  store i64* %701, i64** %22, align 8, !dbg !8350
  %702 = icmp ne i64* %701, null, !dbg !8350
  br i1 %702, label %703, label %739, !dbg !8348

; <label>:703:                                    ; preds = %693
  %704 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8352
  %705 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %704, i32 0, i32 2, !dbg !8352
  %706 = load i32, i32* %705, align 4, !dbg !8352
  %707 = and i32 %706, 512, !dbg !8352
  %708 = icmp ne i32 %707, 0, !dbg !8352
  br i1 %708, label %709, label %712, !dbg !8355

; <label>:709:                                    ; preds = %703
  %710 = load i64, i64* %23, align 8, !dbg !8352
  %711 = xor i64 %710, -1, !dbg !8352
  store i64 %711, i64* %23, align 8, !dbg !8352
  br label %712, !dbg !8352

; <label>:712:                                    ; preds = %709, %703
  %713 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8355
  %714 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %713, i32 0, i32 2, !dbg !8355
  %715 = load i32, i32* %714, align 4, !dbg !8355
  %716 = and i32 %715, 7168, !dbg !8355
  switch i32 %716, label %735 [
    i32 0, label %717
    i32 1024, label %720
    i32 2048, label %725
    i32 4096, label %730
  ], !dbg !8355

; <label>:717:                                    ; preds = %712
  %718 = load i64, i64* %23, align 8, !dbg !8356
  %719 = load i64*, i64** %22, align 8, !dbg !8356
  store i64 %718, i64* %719, align 8, !dbg !8356
  br label %738, !dbg !8356

; <label>:720:                                    ; preds = %712
  %721 = load i64, i64* %23, align 8, !dbg !8356
  %722 = load i64*, i64** %22, align 8, !dbg !8356
  %723 = load i64, i64* %722, align 8, !dbg !8356
  %724 = or i64 %723, %721, !dbg !8356
  store i64 %724, i64* %722, align 8, !dbg !8356
  br label %738, !dbg !8356

; <label>:725:                                    ; preds = %712
  %726 = load i64, i64* %23, align 8, !dbg !8356
  %727 = load i64*, i64** %22, align 8, !dbg !8356
  %728 = load i64, i64* %727, align 8, !dbg !8356
  %729 = and i64 %728, %726, !dbg !8356
  store i64 %729, i64* %727, align 8, !dbg !8356
  br label %738, !dbg !8356

; <label>:730:                                    ; preds = %712
  %731 = load i64, i64* %23, align 8, !dbg !8356
  %732 = load i64*, i64** %22, align 8, !dbg !8356
  %733 = load i64, i64* %732, align 8, !dbg !8356
  %734 = xor i64 %733, %731, !dbg !8356
  store i64 %734, i64* %732, align 8, !dbg !8356
  br label %738, !dbg !8356

; <label>:735:                                    ; preds = %712
  %736 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8356
  %737 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %736, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8356
  br label %738, !dbg !8356

; <label>:738:                                    ; preds = %735, %730, %725, %720, %717
  br label %739, !dbg !8355

; <label>:739:                                    ; preds = %738, %693
  %740 = load i64, i64* %23, align 8, !dbg !8348
  %741 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8348
  %742 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %741, i32 0, i32 4, !dbg !8348
  %743 = bitcast %union.anon.38* %742 to i64*, !dbg !8348
  store i64 %740, i64* %743, align 8, !dbg !8348
  %744 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8358
  %745 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %744, i32 0, i32 5, !dbg !8358
  %746 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %745, align 8, !dbg !8358
  %747 = icmp ne void (%struct.HXoptcb*)* %746, null, !dbg !8358
  br i1 %747, label %748, label %753, !dbg !8348

; <label>:748:                                    ; preds = %739
  %749 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8358
  %750 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %749, i32 0, i32 5, !dbg !8358
  %751 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %750, align 8, !dbg !8358
  %752 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8358
  call void %751(%struct.HXoptcb* %752), !dbg !8358
  br label %753, !dbg !8358

; <label>:753:                                    ; preds = %748, %739
  br label %1569, !dbg !8348

; <label>:754:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i8** %24, metadata !8360, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata i8* %25, metadata !8364, metadata !DIExpression()), !dbg !8363
  %755 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8363
  %756 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %755, i32 0, i32 3, !dbg !8363
  %757 = load i8*, i8** %756, align 8, !dbg !8363
  %758 = call i64 @strtoul(i8* %757, i8** null, i32 0) #7, !dbg !8363
  %759 = trunc i64 %758 to i8, !dbg !8363
  store i8 %759, i8* %25, align 1, !dbg !8363
  %760 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8365
  %761 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %760, i32 0, i32 3, !dbg !8365
  %762 = load i8*, i8** %761, align 8, !dbg !8365
  store i8* %762, i8** %24, align 8, !dbg !8365
  %763 = icmp ne i8* %762, null, !dbg !8365
  br i1 %763, label %764, label %811, !dbg !8363

; <label>:764:                                    ; preds = %754
  %765 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8367
  %766 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %765, i32 0, i32 2, !dbg !8367
  %767 = load i32, i32* %766, align 4, !dbg !8367
  %768 = and i32 %767, 512, !dbg !8367
  %769 = icmp ne i32 %768, 0, !dbg !8367
  br i1 %769, label %770, label %775, !dbg !8370

; <label>:770:                                    ; preds = %764
  %771 = load i8, i8* %25, align 1, !dbg !8367
  %772 = zext i8 %771 to i32, !dbg !8367
  %773 = xor i32 %772, -1, !dbg !8367
  %774 = trunc i32 %773 to i8, !dbg !8367
  store i8 %774, i8* %25, align 1, !dbg !8367
  br label %775, !dbg !8367

; <label>:775:                                    ; preds = %770, %764
  %776 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8370
  %777 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %776, i32 0, i32 2, !dbg !8370
  %778 = load i32, i32* %777, align 4, !dbg !8370
  %779 = and i32 %778, 7168, !dbg !8370
  switch i32 %779, label %807 [
    i32 0, label %780
    i32 1024, label %783
    i32 2048, label %791
    i32 4096, label %799
  ], !dbg !8370

; <label>:780:                                    ; preds = %775
  %781 = load i8, i8* %25, align 1, !dbg !8371
  %782 = load i8*, i8** %24, align 8, !dbg !8371
  store i8 %781, i8* %782, align 1, !dbg !8371
  br label %810, !dbg !8371

; <label>:783:                                    ; preds = %775
  %784 = load i8, i8* %25, align 1, !dbg !8371
  %785 = zext i8 %784 to i32, !dbg !8371
  %786 = load i8*, i8** %24, align 8, !dbg !8371
  %787 = load i8, i8* %786, align 1, !dbg !8371
  %788 = zext i8 %787 to i32, !dbg !8371
  %789 = or i32 %788, %785, !dbg !8371
  %790 = trunc i32 %789 to i8, !dbg !8371
  store i8 %790, i8* %786, align 1, !dbg !8371
  br label %810, !dbg !8371

; <label>:791:                                    ; preds = %775
  %792 = load i8, i8* %25, align 1, !dbg !8371
  %793 = zext i8 %792 to i32, !dbg !8371
  %794 = load i8*, i8** %24, align 8, !dbg !8371
  %795 = load i8, i8* %794, align 1, !dbg !8371
  %796 = zext i8 %795 to i32, !dbg !8371
  %797 = and i32 %796, %793, !dbg !8371
  %798 = trunc i32 %797 to i8, !dbg !8371
  store i8 %798, i8* %794, align 1, !dbg !8371
  br label %810, !dbg !8371

; <label>:799:                                    ; preds = %775
  %800 = load i8, i8* %25, align 1, !dbg !8371
  %801 = zext i8 %800 to i32, !dbg !8371
  %802 = load i8*, i8** %24, align 8, !dbg !8371
  %803 = load i8, i8* %802, align 1, !dbg !8371
  %804 = zext i8 %803 to i32, !dbg !8371
  %805 = xor i32 %804, %801, !dbg !8371
  %806 = trunc i32 %805 to i8, !dbg !8371
  store i8 %806, i8* %802, align 1, !dbg !8371
  br label %810, !dbg !8371

; <label>:807:                                    ; preds = %775
  %808 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8371
  %809 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %808, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8371
  br label %810, !dbg !8371

; <label>:810:                                    ; preds = %807, %799, %791, %783, %780
  br label %811, !dbg !8370

; <label>:811:                                    ; preds = %810, %754
  %812 = load i8, i8* %25, align 1, !dbg !8363
  %813 = zext i8 %812 to i64, !dbg !8363
  %814 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8363
  %815 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %814, i32 0, i32 4, !dbg !8363
  %816 = bitcast %union.anon.38* %815 to i64*, !dbg !8363
  store i64 %813, i64* %816, align 8, !dbg !8363
  %817 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8373
  %818 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %817, i32 0, i32 5, !dbg !8373
  %819 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %818, align 8, !dbg !8373
  %820 = icmp ne void (%struct.HXoptcb*)* %819, null, !dbg !8373
  br i1 %820, label %821, label %826, !dbg !8363

; <label>:821:                                    ; preds = %811
  %822 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8373
  %823 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %822, i32 0, i32 5, !dbg !8373
  %824 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %823, align 8, !dbg !8373
  %825 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8373
  call void %824(%struct.HXoptcb* %825), !dbg !8373
  br label %826, !dbg !8373

; <label>:826:                                    ; preds = %821, %811
  br label %1569, !dbg !8363

; <label>:827:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i8** %26, metadata !8375, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata i8* %27, metadata !8380, metadata !DIExpression()), !dbg !8379
  %828 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8379
  %829 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %828, i32 0, i32 3, !dbg !8379
  %830 = load i8*, i8** %829, align 8, !dbg !8379
  %831 = call i64 @strtol(i8* %830, i8** null, i32 0) #7, !dbg !8379
  %832 = trunc i64 %831 to i8, !dbg !8379
  store i8 %832, i8* %27, align 1, !dbg !8379
  %833 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8381
  %834 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %833, i32 0, i32 3, !dbg !8381
  %835 = load i8*, i8** %834, align 8, !dbg !8381
  store i8* %835, i8** %26, align 8, !dbg !8381
  %836 = icmp ne i8* %835, null, !dbg !8381
  br i1 %836, label %837, label %884, !dbg !8379

; <label>:837:                                    ; preds = %827
  %838 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8383
  %839 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %838, i32 0, i32 2, !dbg !8383
  %840 = load i32, i32* %839, align 4, !dbg !8383
  %841 = and i32 %840, 512, !dbg !8383
  %842 = icmp ne i32 %841, 0, !dbg !8383
  br i1 %842, label %843, label %848, !dbg !8386

; <label>:843:                                    ; preds = %837
  %844 = load i8, i8* %27, align 1, !dbg !8383
  %845 = sext i8 %844 to i32, !dbg !8383
  %846 = xor i32 %845, -1, !dbg !8383
  %847 = trunc i32 %846 to i8, !dbg !8383
  store i8 %847, i8* %27, align 1, !dbg !8383
  br label %848, !dbg !8383

; <label>:848:                                    ; preds = %843, %837
  %849 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8386
  %850 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %849, i32 0, i32 2, !dbg !8386
  %851 = load i32, i32* %850, align 4, !dbg !8386
  %852 = and i32 %851, 7168, !dbg !8386
  switch i32 %852, label %880 [
    i32 0, label %853
    i32 1024, label %856
    i32 2048, label %864
    i32 4096, label %872
  ], !dbg !8386

; <label>:853:                                    ; preds = %848
  %854 = load i8, i8* %27, align 1, !dbg !8387
  %855 = load i8*, i8** %26, align 8, !dbg !8387
  store i8 %854, i8* %855, align 1, !dbg !8387
  br label %883, !dbg !8387

; <label>:856:                                    ; preds = %848
  %857 = load i8, i8* %27, align 1, !dbg !8387
  %858 = sext i8 %857 to i32, !dbg !8387
  %859 = load i8*, i8** %26, align 8, !dbg !8387
  %860 = load i8, i8* %859, align 1, !dbg !8387
  %861 = sext i8 %860 to i32, !dbg !8387
  %862 = or i32 %861, %858, !dbg !8387
  %863 = trunc i32 %862 to i8, !dbg !8387
  store i8 %863, i8* %859, align 1, !dbg !8387
  br label %883, !dbg !8387

; <label>:864:                                    ; preds = %848
  %865 = load i8, i8* %27, align 1, !dbg !8387
  %866 = sext i8 %865 to i32, !dbg !8387
  %867 = load i8*, i8** %26, align 8, !dbg !8387
  %868 = load i8, i8* %867, align 1, !dbg !8387
  %869 = sext i8 %868 to i32, !dbg !8387
  %870 = and i32 %869, %866, !dbg !8387
  %871 = trunc i32 %870 to i8, !dbg !8387
  store i8 %871, i8* %867, align 1, !dbg !8387
  br label %883, !dbg !8387

; <label>:872:                                    ; preds = %848
  %873 = load i8, i8* %27, align 1, !dbg !8387
  %874 = sext i8 %873 to i32, !dbg !8387
  %875 = load i8*, i8** %26, align 8, !dbg !8387
  %876 = load i8, i8* %875, align 1, !dbg !8387
  %877 = sext i8 %876 to i32, !dbg !8387
  %878 = xor i32 %877, %874, !dbg !8387
  %879 = trunc i32 %878 to i8, !dbg !8387
  store i8 %879, i8* %875, align 1, !dbg !8387
  br label %883, !dbg !8387

; <label>:880:                                    ; preds = %848
  %881 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8387
  %882 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %881, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8387
  br label %883, !dbg !8387

; <label>:883:                                    ; preds = %880, %872, %864, %856, %853
  br label %884, !dbg !8386

; <label>:884:                                    ; preds = %883, %827
  %885 = load i8, i8* %27, align 1, !dbg !8379
  %886 = sext i8 %885 to i64, !dbg !8379
  %887 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8379
  %888 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %887, i32 0, i32 4, !dbg !8379
  %889 = bitcast %union.anon.38* %888 to i64*, !dbg !8379
  store i64 %886, i64* %889, align 8, !dbg !8379
  %890 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8389
  %891 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %890, i32 0, i32 5, !dbg !8389
  %892 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %891, align 8, !dbg !8389
  %893 = icmp ne void (%struct.HXoptcb*)* %892, null, !dbg !8389
  br i1 %893, label %894, label %899, !dbg !8379

; <label>:894:                                    ; preds = %884
  %895 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8389
  %896 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %895, i32 0, i32 5, !dbg !8389
  %897 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %896, align 8, !dbg !8389
  %898 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8389
  call void %897(%struct.HXoptcb* %898), !dbg !8389
  br label %899, !dbg !8389

; <label>:899:                                    ; preds = %894, %884
  br label %1569, !dbg !8379

; <label>:900:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i16** %28, metadata !8391, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata i16* %29, metadata !8396, metadata !DIExpression()), !dbg !8395
  %901 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8395
  %902 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %901, i32 0, i32 3, !dbg !8395
  %903 = load i8*, i8** %902, align 8, !dbg !8395
  %904 = call i64 @strtoul(i8* %903, i8** null, i32 0) #7, !dbg !8395
  %905 = trunc i64 %904 to i16, !dbg !8395
  store i16 %905, i16* %29, align 2, !dbg !8395
  %906 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8397
  %907 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %906, i32 0, i32 3, !dbg !8397
  %908 = load i8*, i8** %907, align 8, !dbg !8397
  %909 = bitcast i8* %908 to i16*, !dbg !8397
  store i16* %909, i16** %28, align 8, !dbg !8397
  %910 = icmp ne i16* %909, null, !dbg !8397
  br i1 %910, label %911, label %958, !dbg !8395

; <label>:911:                                    ; preds = %900
  %912 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8399
  %913 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %912, i32 0, i32 2, !dbg !8399
  %914 = load i32, i32* %913, align 4, !dbg !8399
  %915 = and i32 %914, 512, !dbg !8399
  %916 = icmp ne i32 %915, 0, !dbg !8399
  br i1 %916, label %917, label %922, !dbg !8402

; <label>:917:                                    ; preds = %911
  %918 = load i16, i16* %29, align 2, !dbg !8399
  %919 = zext i16 %918 to i32, !dbg !8399
  %920 = xor i32 %919, -1, !dbg !8399
  %921 = trunc i32 %920 to i16, !dbg !8399
  store i16 %921, i16* %29, align 2, !dbg !8399
  br label %922, !dbg !8399

; <label>:922:                                    ; preds = %917, %911
  %923 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8402
  %924 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %923, i32 0, i32 2, !dbg !8402
  %925 = load i32, i32* %924, align 4, !dbg !8402
  %926 = and i32 %925, 7168, !dbg !8402
  switch i32 %926, label %954 [
    i32 0, label %927
    i32 1024, label %930
    i32 2048, label %938
    i32 4096, label %946
  ], !dbg !8402

; <label>:927:                                    ; preds = %922
  %928 = load i16, i16* %29, align 2, !dbg !8403
  %929 = load i16*, i16** %28, align 8, !dbg !8403
  store i16 %928, i16* %929, align 2, !dbg !8403
  br label %957, !dbg !8403

; <label>:930:                                    ; preds = %922
  %931 = load i16, i16* %29, align 2, !dbg !8403
  %932 = zext i16 %931 to i32, !dbg !8403
  %933 = load i16*, i16** %28, align 8, !dbg !8403
  %934 = load i16, i16* %933, align 2, !dbg !8403
  %935 = zext i16 %934 to i32, !dbg !8403
  %936 = or i32 %935, %932, !dbg !8403
  %937 = trunc i32 %936 to i16, !dbg !8403
  store i16 %937, i16* %933, align 2, !dbg !8403
  br label %957, !dbg !8403

; <label>:938:                                    ; preds = %922
  %939 = load i16, i16* %29, align 2, !dbg !8403
  %940 = zext i16 %939 to i32, !dbg !8403
  %941 = load i16*, i16** %28, align 8, !dbg !8403
  %942 = load i16, i16* %941, align 2, !dbg !8403
  %943 = zext i16 %942 to i32, !dbg !8403
  %944 = and i32 %943, %940, !dbg !8403
  %945 = trunc i32 %944 to i16, !dbg !8403
  store i16 %945, i16* %941, align 2, !dbg !8403
  br label %957, !dbg !8403

; <label>:946:                                    ; preds = %922
  %947 = load i16, i16* %29, align 2, !dbg !8403
  %948 = zext i16 %947 to i32, !dbg !8403
  %949 = load i16*, i16** %28, align 8, !dbg !8403
  %950 = load i16, i16* %949, align 2, !dbg !8403
  %951 = zext i16 %950 to i32, !dbg !8403
  %952 = xor i32 %951, %948, !dbg !8403
  %953 = trunc i32 %952 to i16, !dbg !8403
  store i16 %953, i16* %949, align 2, !dbg !8403
  br label %957, !dbg !8403

; <label>:954:                                    ; preds = %922
  %955 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8403
  %956 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %955, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8403
  br label %957, !dbg !8403

; <label>:957:                                    ; preds = %954, %946, %938, %930, %927
  br label %958, !dbg !8402

; <label>:958:                                    ; preds = %957, %900
  %959 = load i16, i16* %29, align 2, !dbg !8395
  %960 = zext i16 %959 to i64, !dbg !8395
  %961 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8395
  %962 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %961, i32 0, i32 4, !dbg !8395
  %963 = bitcast %union.anon.38* %962 to i64*, !dbg !8395
  store i64 %960, i64* %963, align 8, !dbg !8395
  %964 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8405
  %965 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %964, i32 0, i32 5, !dbg !8405
  %966 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %965, align 8, !dbg !8405
  %967 = icmp ne void (%struct.HXoptcb*)* %966, null, !dbg !8405
  br i1 %967, label %968, label %973, !dbg !8395

; <label>:968:                                    ; preds = %958
  %969 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8405
  %970 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %969, i32 0, i32 5, !dbg !8405
  %971 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %970, align 8, !dbg !8405
  %972 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8405
  call void %971(%struct.HXoptcb* %972), !dbg !8405
  br label %973, !dbg !8405

; <label>:973:                                    ; preds = %968, %958
  br label %1569, !dbg !8395

; <label>:974:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata i16** %30, metadata !8407, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.declare(metadata i16* %31, metadata !8412, metadata !DIExpression()), !dbg !8411
  %975 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8411
  %976 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %975, i32 0, i32 3, !dbg !8411
  %977 = load i8*, i8** %976, align 8, !dbg !8411
  %978 = call i64 @strtol(i8* %977, i8** null, i32 0) #7, !dbg !8411
  %979 = trunc i64 %978 to i16, !dbg !8411
  store i16 %979, i16* %31, align 2, !dbg !8411
  %980 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8413
  %981 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %980, i32 0, i32 3, !dbg !8413
  %982 = load i8*, i8** %981, align 8, !dbg !8413
  %983 = bitcast i8* %982 to i16*, !dbg !8413
  store i16* %983, i16** %30, align 8, !dbg !8413
  %984 = icmp ne i16* %983, null, !dbg !8413
  br i1 %984, label %985, label %1032, !dbg !8411

; <label>:985:                                    ; preds = %974
  %986 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8415
  %987 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %986, i32 0, i32 2, !dbg !8415
  %988 = load i32, i32* %987, align 4, !dbg !8415
  %989 = and i32 %988, 512, !dbg !8415
  %990 = icmp ne i32 %989, 0, !dbg !8415
  br i1 %990, label %991, label %996, !dbg !8418

; <label>:991:                                    ; preds = %985
  %992 = load i16, i16* %31, align 2, !dbg !8415
  %993 = sext i16 %992 to i32, !dbg !8415
  %994 = xor i32 %993, -1, !dbg !8415
  %995 = trunc i32 %994 to i16, !dbg !8415
  store i16 %995, i16* %31, align 2, !dbg !8415
  br label %996, !dbg !8415

; <label>:996:                                    ; preds = %991, %985
  %997 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8418
  %998 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %997, i32 0, i32 2, !dbg !8418
  %999 = load i32, i32* %998, align 4, !dbg !8418
  %1000 = and i32 %999, 7168, !dbg !8418
  switch i32 %1000, label %1028 [
    i32 0, label %1001
    i32 1024, label %1004
    i32 2048, label %1012
    i32 4096, label %1020
  ], !dbg !8418

; <label>:1001:                                   ; preds = %996
  %1002 = load i16, i16* %31, align 2, !dbg !8419
  %1003 = load i16*, i16** %30, align 8, !dbg !8419
  store i16 %1002, i16* %1003, align 2, !dbg !8419
  br label %1031, !dbg !8419

; <label>:1004:                                   ; preds = %996
  %1005 = load i16, i16* %31, align 2, !dbg !8419
  %1006 = sext i16 %1005 to i32, !dbg !8419
  %1007 = load i16*, i16** %30, align 8, !dbg !8419
  %1008 = load i16, i16* %1007, align 2, !dbg !8419
  %1009 = sext i16 %1008 to i32, !dbg !8419
  %1010 = or i32 %1009, %1006, !dbg !8419
  %1011 = trunc i32 %1010 to i16, !dbg !8419
  store i16 %1011, i16* %1007, align 2, !dbg !8419
  br label %1031, !dbg !8419

; <label>:1012:                                   ; preds = %996
  %1013 = load i16, i16* %31, align 2, !dbg !8419
  %1014 = sext i16 %1013 to i32, !dbg !8419
  %1015 = load i16*, i16** %30, align 8, !dbg !8419
  %1016 = load i16, i16* %1015, align 2, !dbg !8419
  %1017 = sext i16 %1016 to i32, !dbg !8419
  %1018 = and i32 %1017, %1014, !dbg !8419
  %1019 = trunc i32 %1018 to i16, !dbg !8419
  store i16 %1019, i16* %1015, align 2, !dbg !8419
  br label %1031, !dbg !8419

; <label>:1020:                                   ; preds = %996
  %1021 = load i16, i16* %31, align 2, !dbg !8419
  %1022 = sext i16 %1021 to i32, !dbg !8419
  %1023 = load i16*, i16** %30, align 8, !dbg !8419
  %1024 = load i16, i16* %1023, align 2, !dbg !8419
  %1025 = sext i16 %1024 to i32, !dbg !8419
  %1026 = xor i32 %1025, %1022, !dbg !8419
  %1027 = trunc i32 %1026 to i16, !dbg !8419
  store i16 %1027, i16* %1023, align 2, !dbg !8419
  br label %1031, !dbg !8419

; <label>:1028:                                   ; preds = %996
  %1029 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8419
  %1030 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1029, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8419
  br label %1031, !dbg !8419

; <label>:1031:                                   ; preds = %1028, %1020, %1012, %1004, %1001
  br label %1032, !dbg !8418

; <label>:1032:                                   ; preds = %1031, %974
  %1033 = load i16, i16* %31, align 2, !dbg !8411
  %1034 = sext i16 %1033 to i64, !dbg !8411
  %1035 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8411
  %1036 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1035, i32 0, i32 4, !dbg !8411
  %1037 = bitcast %union.anon.38* %1036 to i64*, !dbg !8411
  store i64 %1034, i64* %1037, align 8, !dbg !8411
  %1038 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8421
  %1039 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1038, i32 0, i32 5, !dbg !8421
  %1040 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1039, align 8, !dbg !8421
  %1041 = icmp ne void (%struct.HXoptcb*)* %1040, null, !dbg !8421
  br i1 %1041, label %1042, label %1047, !dbg !8411

; <label>:1042:                                   ; preds = %1032
  %1043 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8421
  %1044 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1043, i32 0, i32 5, !dbg !8421
  %1045 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1044, align 8, !dbg !8421
  %1046 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8421
  call void %1045(%struct.HXoptcb* %1046), !dbg !8421
  br label %1047, !dbg !8421

; <label>:1047:                                   ; preds = %1042, %1032
  br label %1569, !dbg !8411

; <label>:1048:                                   ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %32, metadata !8423, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.declare(metadata i32* %33, metadata !8427, metadata !DIExpression()), !dbg !8426
  %1049 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8426
  %1050 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1049, i32 0, i32 3, !dbg !8426
  %1051 = load i8*, i8** %1050, align 8, !dbg !8426
  %1052 = call i64 @strtoul(i8* %1051, i8** null, i32 0) #7, !dbg !8426
  %1053 = trunc i64 %1052 to i32, !dbg !8426
  store i32 %1053, i32* %33, align 4, !dbg !8426
  %1054 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8428
  %1055 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1054, i32 0, i32 3, !dbg !8428
  %1056 = load i8*, i8** %1055, align 8, !dbg !8428
  %1057 = bitcast i8* %1056 to i32*, !dbg !8428
  store i32* %1057, i32** %32, align 8, !dbg !8428
  %1058 = icmp ne i32* %1057, null, !dbg !8428
  br i1 %1058, label %1059, label %1095, !dbg !8426

; <label>:1059:                                   ; preds = %1048
  %1060 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8430
  %1061 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1060, i32 0, i32 2, !dbg !8430
  %1062 = load i32, i32* %1061, align 4, !dbg !8430
  %1063 = and i32 %1062, 512, !dbg !8430
  %1064 = icmp ne i32 %1063, 0, !dbg !8430
  br i1 %1064, label %1065, label %1068, !dbg !8433

; <label>:1065:                                   ; preds = %1059
  %1066 = load i32, i32* %33, align 4, !dbg !8430
  %1067 = xor i32 %1066, -1, !dbg !8430
  store i32 %1067, i32* %33, align 4, !dbg !8430
  br label %1068, !dbg !8430

; <label>:1068:                                   ; preds = %1065, %1059
  %1069 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8433
  %1070 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1069, i32 0, i32 2, !dbg !8433
  %1071 = load i32, i32* %1070, align 4, !dbg !8433
  %1072 = and i32 %1071, 7168, !dbg !8433
  switch i32 %1072, label %1091 [
    i32 0, label %1073
    i32 1024, label %1076
    i32 2048, label %1081
    i32 4096, label %1086
  ], !dbg !8433

; <label>:1073:                                   ; preds = %1068
  %1074 = load i32, i32* %33, align 4, !dbg !8434
  %1075 = load i32*, i32** %32, align 8, !dbg !8434
  store i32 %1074, i32* %1075, align 4, !dbg !8434
  br label %1094, !dbg !8434

; <label>:1076:                                   ; preds = %1068
  %1077 = load i32, i32* %33, align 4, !dbg !8434
  %1078 = load i32*, i32** %32, align 8, !dbg !8434
  %1079 = load i32, i32* %1078, align 4, !dbg !8434
  %1080 = or i32 %1079, %1077, !dbg !8434
  store i32 %1080, i32* %1078, align 4, !dbg !8434
  br label %1094, !dbg !8434

; <label>:1081:                                   ; preds = %1068
  %1082 = load i32, i32* %33, align 4, !dbg !8434
  %1083 = load i32*, i32** %32, align 8, !dbg !8434
  %1084 = load i32, i32* %1083, align 4, !dbg !8434
  %1085 = and i32 %1084, %1082, !dbg !8434
  store i32 %1085, i32* %1083, align 4, !dbg !8434
  br label %1094, !dbg !8434

; <label>:1086:                                   ; preds = %1068
  %1087 = load i32, i32* %33, align 4, !dbg !8434
  %1088 = load i32*, i32** %32, align 8, !dbg !8434
  %1089 = load i32, i32* %1088, align 4, !dbg !8434
  %1090 = xor i32 %1089, %1087, !dbg !8434
  store i32 %1090, i32* %1088, align 4, !dbg !8434
  br label %1094, !dbg !8434

; <label>:1091:                                   ; preds = %1068
  %1092 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8434
  %1093 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1092, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8434
  br label %1094, !dbg !8434

; <label>:1094:                                   ; preds = %1091, %1086, %1081, %1076, %1073
  br label %1095, !dbg !8433

; <label>:1095:                                   ; preds = %1094, %1048
  %1096 = load i32, i32* %33, align 4, !dbg !8426
  %1097 = zext i32 %1096 to i64, !dbg !8426
  %1098 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8426
  %1099 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1098, i32 0, i32 4, !dbg !8426
  %1100 = bitcast %union.anon.38* %1099 to i64*, !dbg !8426
  store i64 %1097, i64* %1100, align 8, !dbg !8426
  %1101 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8436
  %1102 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1101, i32 0, i32 5, !dbg !8436
  %1103 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1102, align 8, !dbg !8436
  %1104 = icmp ne void (%struct.HXoptcb*)* %1103, null, !dbg !8436
  br i1 %1104, label %1105, label %1110, !dbg !8426

; <label>:1105:                                   ; preds = %1095
  %1106 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8436
  %1107 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1106, i32 0, i32 5, !dbg !8436
  %1108 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1107, align 8, !dbg !8436
  %1109 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8436
  call void %1108(%struct.HXoptcb* %1109), !dbg !8436
  br label %1110, !dbg !8436

; <label>:1110:                                   ; preds = %1105, %1095
  br label %1569, !dbg !8426

; <label>:1111:                                   ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %34, metadata !8438, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.declare(metadata i32* %35, metadata !8443, metadata !DIExpression()), !dbg !8442
  %1112 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8442
  %1113 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1112, i32 0, i32 3, !dbg !8442
  %1114 = load i8*, i8** %1113, align 8, !dbg !8442
  %1115 = call i64 @strtol(i8* %1114, i8** null, i32 0) #7, !dbg !8442
  %1116 = trunc i64 %1115 to i32, !dbg !8442
  store i32 %1116, i32* %35, align 4, !dbg !8442
  %1117 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8444
  %1118 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1117, i32 0, i32 3, !dbg !8444
  %1119 = load i8*, i8** %1118, align 8, !dbg !8444
  %1120 = bitcast i8* %1119 to i32*, !dbg !8444
  store i32* %1120, i32** %34, align 8, !dbg !8444
  %1121 = icmp ne i32* %1120, null, !dbg !8444
  br i1 %1121, label %1122, label %1158, !dbg !8442

; <label>:1122:                                   ; preds = %1111
  %1123 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8446
  %1124 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1123, i32 0, i32 2, !dbg !8446
  %1125 = load i32, i32* %1124, align 4, !dbg !8446
  %1126 = and i32 %1125, 512, !dbg !8446
  %1127 = icmp ne i32 %1126, 0, !dbg !8446
  br i1 %1127, label %1128, label %1131, !dbg !8449

; <label>:1128:                                   ; preds = %1122
  %1129 = load i32, i32* %35, align 4, !dbg !8446
  %1130 = xor i32 %1129, -1, !dbg !8446
  store i32 %1130, i32* %35, align 4, !dbg !8446
  br label %1131, !dbg !8446

; <label>:1131:                                   ; preds = %1128, %1122
  %1132 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8449
  %1133 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1132, i32 0, i32 2, !dbg !8449
  %1134 = load i32, i32* %1133, align 4, !dbg !8449
  %1135 = and i32 %1134, 7168, !dbg !8449
  switch i32 %1135, label %1154 [
    i32 0, label %1136
    i32 1024, label %1139
    i32 2048, label %1144
    i32 4096, label %1149
  ], !dbg !8449

; <label>:1136:                                   ; preds = %1131
  %1137 = load i32, i32* %35, align 4, !dbg !8450
  %1138 = load i32*, i32** %34, align 8, !dbg !8450
  store i32 %1137, i32* %1138, align 4, !dbg !8450
  br label %1157, !dbg !8450

; <label>:1139:                                   ; preds = %1131
  %1140 = load i32, i32* %35, align 4, !dbg !8450
  %1141 = load i32*, i32** %34, align 8, !dbg !8450
  %1142 = load i32, i32* %1141, align 4, !dbg !8450
  %1143 = or i32 %1142, %1140, !dbg !8450
  store i32 %1143, i32* %1141, align 4, !dbg !8450
  br label %1157, !dbg !8450

; <label>:1144:                                   ; preds = %1131
  %1145 = load i32, i32* %35, align 4, !dbg !8450
  %1146 = load i32*, i32** %34, align 8, !dbg !8450
  %1147 = load i32, i32* %1146, align 4, !dbg !8450
  %1148 = and i32 %1147, %1145, !dbg !8450
  store i32 %1148, i32* %1146, align 4, !dbg !8450
  br label %1157, !dbg !8450

; <label>:1149:                                   ; preds = %1131
  %1150 = load i32, i32* %35, align 4, !dbg !8450
  %1151 = load i32*, i32** %34, align 8, !dbg !8450
  %1152 = load i32, i32* %1151, align 4, !dbg !8450
  %1153 = xor i32 %1152, %1150, !dbg !8450
  store i32 %1153, i32* %1151, align 4, !dbg !8450
  br label %1157, !dbg !8450

; <label>:1154:                                   ; preds = %1131
  %1155 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8450
  %1156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1155, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8450
  br label %1157, !dbg !8450

; <label>:1157:                                   ; preds = %1154, %1149, %1144, %1139, %1136
  br label %1158, !dbg !8449

; <label>:1158:                                   ; preds = %1157, %1111
  %1159 = load i32, i32* %35, align 4, !dbg !8442
  %1160 = sext i32 %1159 to i64, !dbg !8442
  %1161 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8442
  %1162 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1161, i32 0, i32 4, !dbg !8442
  %1163 = bitcast %union.anon.38* %1162 to i64*, !dbg !8442
  store i64 %1160, i64* %1163, align 8, !dbg !8442
  %1164 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8452
  %1165 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1164, i32 0, i32 5, !dbg !8452
  %1166 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1165, align 8, !dbg !8452
  %1167 = icmp ne void (%struct.HXoptcb*)* %1166, null, !dbg !8452
  br i1 %1167, label %1168, label %1173, !dbg !8442

; <label>:1168:                                   ; preds = %1158
  %1169 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8452
  %1170 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1169, i32 0, i32 5, !dbg !8452
  %1171 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1170, align 8, !dbg !8452
  %1172 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8452
  call void %1171(%struct.HXoptcb* %1172), !dbg !8452
  br label %1173, !dbg !8452

; <label>:1173:                                   ; preds = %1168, %1158
  br label %1569, !dbg !8442

; <label>:1174:                                   ; preds = %1
  call void @llvm.dbg.declare(metadata i64** %36, metadata !8454, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.declare(metadata i64* %37, metadata !8459, metadata !DIExpression()), !dbg !8458
  %1175 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8458
  %1176 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1175, i32 0, i32 3, !dbg !8458
  %1177 = load i8*, i8** %1176, align 8, !dbg !8458
  %1178 = call i64 @strtoull(i8* %1177, i8** null, i32 0) #7, !dbg !8458
  store i64 %1178, i64* %37, align 8, !dbg !8458
  %1179 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8460
  %1180 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1179, i32 0, i32 3, !dbg !8460
  %1181 = load i8*, i8** %1180, align 8, !dbg !8460
  %1182 = bitcast i8* %1181 to i64*, !dbg !8460
  store i64* %1182, i64** %36, align 8, !dbg !8460
  %1183 = icmp ne i64* %1182, null, !dbg !8460
  br i1 %1183, label %1184, label %1220, !dbg !8458

; <label>:1184:                                   ; preds = %1174
  %1185 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8462
  %1186 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1185, i32 0, i32 2, !dbg !8462
  %1187 = load i32, i32* %1186, align 4, !dbg !8462
  %1188 = and i32 %1187, 512, !dbg !8462
  %1189 = icmp ne i32 %1188, 0, !dbg !8462
  br i1 %1189, label %1190, label %1193, !dbg !8465

; <label>:1190:                                   ; preds = %1184
  %1191 = load i64, i64* %37, align 8, !dbg !8462
  %1192 = xor i64 %1191, -1, !dbg !8462
  store i64 %1192, i64* %37, align 8, !dbg !8462
  br label %1193, !dbg !8462

; <label>:1193:                                   ; preds = %1190, %1184
  %1194 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8465
  %1195 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1194, i32 0, i32 2, !dbg !8465
  %1196 = load i32, i32* %1195, align 4, !dbg !8465
  %1197 = and i32 %1196, 7168, !dbg !8465
  switch i32 %1197, label %1216 [
    i32 0, label %1198
    i32 1024, label %1201
    i32 2048, label %1206
    i32 4096, label %1211
  ], !dbg !8465

; <label>:1198:                                   ; preds = %1193
  %1199 = load i64, i64* %37, align 8, !dbg !8466
  %1200 = load i64*, i64** %36, align 8, !dbg !8466
  store i64 %1199, i64* %1200, align 8, !dbg !8466
  br label %1219, !dbg !8466

; <label>:1201:                                   ; preds = %1193
  %1202 = load i64, i64* %37, align 8, !dbg !8466
  %1203 = load i64*, i64** %36, align 8, !dbg !8466
  %1204 = load i64, i64* %1203, align 8, !dbg !8466
  %1205 = or i64 %1204, %1202, !dbg !8466
  store i64 %1205, i64* %1203, align 8, !dbg !8466
  br label %1219, !dbg !8466

; <label>:1206:                                   ; preds = %1193
  %1207 = load i64, i64* %37, align 8, !dbg !8466
  %1208 = load i64*, i64** %36, align 8, !dbg !8466
  %1209 = load i64, i64* %1208, align 8, !dbg !8466
  %1210 = and i64 %1209, %1207, !dbg !8466
  store i64 %1210, i64* %1208, align 8, !dbg !8466
  br label %1219, !dbg !8466

; <label>:1211:                                   ; preds = %1193
  %1212 = load i64, i64* %37, align 8, !dbg !8466
  %1213 = load i64*, i64** %36, align 8, !dbg !8466
  %1214 = load i64, i64* %1213, align 8, !dbg !8466
  %1215 = xor i64 %1214, %1212, !dbg !8466
  store i64 %1215, i64* %1213, align 8, !dbg !8466
  br label %1219, !dbg !8466

; <label>:1216:                                   ; preds = %1193
  %1217 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8466
  %1218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1217, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8466
  br label %1219, !dbg !8466

; <label>:1219:                                   ; preds = %1216, %1211, %1206, %1201, %1198
  br label %1220, !dbg !8465

; <label>:1220:                                   ; preds = %1219, %1174
  %1221 = load i64, i64* %37, align 8, !dbg !8458
  %1222 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8458
  %1223 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1222, i32 0, i32 4, !dbg !8458
  %1224 = bitcast %union.anon.38* %1223 to i64*, !dbg !8458
  store i64 %1221, i64* %1224, align 8, !dbg !8458
  %1225 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8468
  %1226 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1225, i32 0, i32 5, !dbg !8468
  %1227 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1226, align 8, !dbg !8468
  %1228 = icmp ne void (%struct.HXoptcb*)* %1227, null, !dbg !8468
  br i1 %1228, label %1229, label %1234, !dbg !8458

; <label>:1229:                                   ; preds = %1220
  %1230 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8468
  %1231 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1230, i32 0, i32 5, !dbg !8468
  %1232 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1231, align 8, !dbg !8468
  %1233 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8468
  call void %1232(%struct.HXoptcb* %1233), !dbg !8468
  br label %1234, !dbg !8468

; <label>:1234:                                   ; preds = %1229, %1220
  br label %1569, !dbg !8458

; <label>:1235:                                   ; preds = %1
  call void @llvm.dbg.declare(metadata i64** %38, metadata !8470, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.declare(metadata i64* %39, metadata !8475, metadata !DIExpression()), !dbg !8474
  %1236 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8474
  %1237 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1236, i32 0, i32 3, !dbg !8474
  %1238 = load i8*, i8** %1237, align 8, !dbg !8474
  %1239 = call i64 @strtoll(i8* %1238, i8** null, i32 0) #7, !dbg !8474
  store i64 %1239, i64* %39, align 8, !dbg !8474
  %1240 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8476
  %1241 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1240, i32 0, i32 3, !dbg !8476
  %1242 = load i8*, i8** %1241, align 8, !dbg !8476
  %1243 = bitcast i8* %1242 to i64*, !dbg !8476
  store i64* %1243, i64** %38, align 8, !dbg !8476
  %1244 = icmp ne i64* %1243, null, !dbg !8476
  br i1 %1244, label %1245, label %1281, !dbg !8474

; <label>:1245:                                   ; preds = %1235
  %1246 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8478
  %1247 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1246, i32 0, i32 2, !dbg !8478
  %1248 = load i32, i32* %1247, align 4, !dbg !8478
  %1249 = and i32 %1248, 512, !dbg !8478
  %1250 = icmp ne i32 %1249, 0, !dbg !8478
  br i1 %1250, label %1251, label %1254, !dbg !8481

; <label>:1251:                                   ; preds = %1245
  %1252 = load i64, i64* %39, align 8, !dbg !8478
  %1253 = xor i64 %1252, -1, !dbg !8478
  store i64 %1253, i64* %39, align 8, !dbg !8478
  br label %1254, !dbg !8478

; <label>:1254:                                   ; preds = %1251, %1245
  %1255 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8481
  %1256 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1255, i32 0, i32 2, !dbg !8481
  %1257 = load i32, i32* %1256, align 4, !dbg !8481
  %1258 = and i32 %1257, 7168, !dbg !8481
  switch i32 %1258, label %1277 [
    i32 0, label %1259
    i32 1024, label %1262
    i32 2048, label %1267
    i32 4096, label %1272
  ], !dbg !8481

; <label>:1259:                                   ; preds = %1254
  %1260 = load i64, i64* %39, align 8, !dbg !8482
  %1261 = load i64*, i64** %38, align 8, !dbg !8482
  store i64 %1260, i64* %1261, align 8, !dbg !8482
  br label %1280, !dbg !8482

; <label>:1262:                                   ; preds = %1254
  %1263 = load i64, i64* %39, align 8, !dbg !8482
  %1264 = load i64*, i64** %38, align 8, !dbg !8482
  %1265 = load i64, i64* %1264, align 8, !dbg !8482
  %1266 = or i64 %1265, %1263, !dbg !8482
  store i64 %1266, i64* %1264, align 8, !dbg !8482
  br label %1280, !dbg !8482

; <label>:1267:                                   ; preds = %1254
  %1268 = load i64, i64* %39, align 8, !dbg !8482
  %1269 = load i64*, i64** %38, align 8, !dbg !8482
  %1270 = load i64, i64* %1269, align 8, !dbg !8482
  %1271 = and i64 %1270, %1268, !dbg !8482
  store i64 %1271, i64* %1269, align 8, !dbg !8482
  br label %1280, !dbg !8482

; <label>:1272:                                   ; preds = %1254
  %1273 = load i64, i64* %39, align 8, !dbg !8482
  %1274 = load i64*, i64** %38, align 8, !dbg !8482
  %1275 = load i64, i64* %1274, align 8, !dbg !8482
  %1276 = xor i64 %1275, %1273, !dbg !8482
  store i64 %1276, i64* %1274, align 8, !dbg !8482
  br label %1280, !dbg !8482

; <label>:1277:                                   ; preds = %1254
  %1278 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8482
  %1279 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1278, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8482
  br label %1280, !dbg !8482

; <label>:1280:                                   ; preds = %1277, %1272, %1267, %1262, %1259
  br label %1281, !dbg !8481

; <label>:1281:                                   ; preds = %1280, %1235
  %1282 = load i64, i64* %39, align 8, !dbg !8474
  %1283 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8474
  %1284 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1283, i32 0, i32 4, !dbg !8474
  %1285 = bitcast %union.anon.38* %1284 to i64*, !dbg !8474
  store i64 %1282, i64* %1285, align 8, !dbg !8474
  %1286 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8484
  %1287 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1286, i32 0, i32 5, !dbg !8484
  %1288 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1287, align 8, !dbg !8484
  %1289 = icmp ne void (%struct.HXoptcb*)* %1288, null, !dbg !8484
  br i1 %1289, label %1290, label %1295, !dbg !8474

; <label>:1290:                                   ; preds = %1281
  %1291 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8484
  %1292 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1291, i32 0, i32 5, !dbg !8484
  %1293 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1292, align 8, !dbg !8484
  %1294 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8484
  call void %1293(%struct.HXoptcb* %1294), !dbg !8484
  br label %1295, !dbg !8484

; <label>:1295:                                   ; preds = %1290, %1281
  br label %1569, !dbg !8474

; <label>:1296:                                   ; preds = %1
  call void @llvm.dbg.declare(metadata i64** %40, metadata !8486, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.declare(metadata i64* %41, metadata !8491, metadata !DIExpression()), !dbg !8490
  %1297 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8490
  %1298 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1297, i32 0, i32 3, !dbg !8490
  %1299 = load i8*, i8** %1298, align 8, !dbg !8490
  %1300 = call i64 @strtoull(i8* %1299, i8** null, i32 0) #7, !dbg !8490
  store i64 %1300, i64* %41, align 8, !dbg !8490
  %1301 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8492
  %1302 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1301, i32 0, i32 3, !dbg !8492
  %1303 = load i8*, i8** %1302, align 8, !dbg !8492
  %1304 = bitcast i8* %1303 to i64*, !dbg !8492
  store i64* %1304, i64** %40, align 8, !dbg !8492
  %1305 = icmp ne i64* %1304, null, !dbg !8492
  br i1 %1305, label %1306, label %1342, !dbg !8490

; <label>:1306:                                   ; preds = %1296
  %1307 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8494
  %1308 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1307, i32 0, i32 2, !dbg !8494
  %1309 = load i32, i32* %1308, align 4, !dbg !8494
  %1310 = and i32 %1309, 512, !dbg !8494
  %1311 = icmp ne i32 %1310, 0, !dbg !8494
  br i1 %1311, label %1312, label %1315, !dbg !8497

; <label>:1312:                                   ; preds = %1306
  %1313 = load i64, i64* %41, align 8, !dbg !8494
  %1314 = xor i64 %1313, -1, !dbg !8494
  store i64 %1314, i64* %41, align 8, !dbg !8494
  br label %1315, !dbg !8494

; <label>:1315:                                   ; preds = %1312, %1306
  %1316 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8497
  %1317 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1316, i32 0, i32 2, !dbg !8497
  %1318 = load i32, i32* %1317, align 4, !dbg !8497
  %1319 = and i32 %1318, 7168, !dbg !8497
  switch i32 %1319, label %1338 [
    i32 0, label %1320
    i32 1024, label %1323
    i32 2048, label %1328
    i32 4096, label %1333
  ], !dbg !8497

; <label>:1320:                                   ; preds = %1315
  %1321 = load i64, i64* %41, align 8, !dbg !8498
  %1322 = load i64*, i64** %40, align 8, !dbg !8498
  store i64 %1321, i64* %1322, align 8, !dbg !8498
  br label %1341, !dbg !8498

; <label>:1323:                                   ; preds = %1315
  %1324 = load i64, i64* %41, align 8, !dbg !8498
  %1325 = load i64*, i64** %40, align 8, !dbg !8498
  %1326 = load i64, i64* %1325, align 8, !dbg !8498
  %1327 = or i64 %1326, %1324, !dbg !8498
  store i64 %1327, i64* %1325, align 8, !dbg !8498
  br label %1341, !dbg !8498

; <label>:1328:                                   ; preds = %1315
  %1329 = load i64, i64* %41, align 8, !dbg !8498
  %1330 = load i64*, i64** %40, align 8, !dbg !8498
  %1331 = load i64, i64* %1330, align 8, !dbg !8498
  %1332 = and i64 %1331, %1329, !dbg !8498
  store i64 %1332, i64* %1330, align 8, !dbg !8498
  br label %1341, !dbg !8498

; <label>:1333:                                   ; preds = %1315
  %1334 = load i64, i64* %41, align 8, !dbg !8498
  %1335 = load i64*, i64** %40, align 8, !dbg !8498
  %1336 = load i64, i64* %1335, align 8, !dbg !8498
  %1337 = xor i64 %1336, %1334, !dbg !8498
  store i64 %1337, i64* %1335, align 8, !dbg !8498
  br label %1341, !dbg !8498

; <label>:1338:                                   ; preds = %1315
  %1339 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8498
  %1340 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1339, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8498
  br label %1341, !dbg !8498

; <label>:1341:                                   ; preds = %1338, %1333, %1328, %1323, %1320
  br label %1342, !dbg !8497

; <label>:1342:                                   ; preds = %1341, %1296
  %1343 = load i64, i64* %41, align 8, !dbg !8490
  %1344 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8490
  %1345 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1344, i32 0, i32 4, !dbg !8490
  %1346 = bitcast %union.anon.38* %1345 to i64*, !dbg !8490
  store i64 %1343, i64* %1346, align 8, !dbg !8490
  %1347 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8500
  %1348 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1347, i32 0, i32 5, !dbg !8500
  %1349 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1348, align 8, !dbg !8500
  %1350 = icmp ne void (%struct.HXoptcb*)* %1349, null, !dbg !8500
  br i1 %1350, label %1351, label %1356, !dbg !8490

; <label>:1351:                                   ; preds = %1342
  %1352 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8500
  %1353 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1352, i32 0, i32 5, !dbg !8500
  %1354 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1353, align 8, !dbg !8500
  %1355 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8500
  call void %1354(%struct.HXoptcb* %1355), !dbg !8500
  br label %1356, !dbg !8500

; <label>:1356:                                   ; preds = %1351, %1342
  br label %1569, !dbg !8490

; <label>:1357:                                   ; preds = %1
  call void @llvm.dbg.declare(metadata i64** %42, metadata !8502, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.declare(metadata i64* %43, metadata !8507, metadata !DIExpression()), !dbg !8506
  %1358 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8506
  %1359 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1358, i32 0, i32 3, !dbg !8506
  %1360 = load i8*, i8** %1359, align 8, !dbg !8506
  %1361 = call i64 @strtoll(i8* %1360, i8** null, i32 0) #7, !dbg !8506
  store i64 %1361, i64* %43, align 8, !dbg !8506
  %1362 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8508
  %1363 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1362, i32 0, i32 3, !dbg !8508
  %1364 = load i8*, i8** %1363, align 8, !dbg !8508
  %1365 = bitcast i8* %1364 to i64*, !dbg !8508
  store i64* %1365, i64** %42, align 8, !dbg !8508
  %1366 = icmp ne i64* %1365, null, !dbg !8508
  br i1 %1366, label %1367, label %1403, !dbg !8506

; <label>:1367:                                   ; preds = %1357
  %1368 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8510
  %1369 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1368, i32 0, i32 2, !dbg !8510
  %1370 = load i32, i32* %1369, align 4, !dbg !8510
  %1371 = and i32 %1370, 512, !dbg !8510
  %1372 = icmp ne i32 %1371, 0, !dbg !8510
  br i1 %1372, label %1373, label %1376, !dbg !8513

; <label>:1373:                                   ; preds = %1367
  %1374 = load i64, i64* %43, align 8, !dbg !8510
  %1375 = xor i64 %1374, -1, !dbg !8510
  store i64 %1375, i64* %43, align 8, !dbg !8510
  br label %1376, !dbg !8510

; <label>:1376:                                   ; preds = %1373, %1367
  %1377 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8513
  %1378 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1377, i32 0, i32 2, !dbg !8513
  %1379 = load i32, i32* %1378, align 4, !dbg !8513
  %1380 = and i32 %1379, 7168, !dbg !8513
  switch i32 %1380, label %1399 [
    i32 0, label %1381
    i32 1024, label %1384
    i32 2048, label %1389
    i32 4096, label %1394
  ], !dbg !8513

; <label>:1381:                                   ; preds = %1376
  %1382 = load i64, i64* %43, align 8, !dbg !8514
  %1383 = load i64*, i64** %42, align 8, !dbg !8514
  store i64 %1382, i64* %1383, align 8, !dbg !8514
  br label %1402, !dbg !8514

; <label>:1384:                                   ; preds = %1376
  %1385 = load i64, i64* %43, align 8, !dbg !8514
  %1386 = load i64*, i64** %42, align 8, !dbg !8514
  %1387 = load i64, i64* %1386, align 8, !dbg !8514
  %1388 = or i64 %1387, %1385, !dbg !8514
  store i64 %1388, i64* %1386, align 8, !dbg !8514
  br label %1402, !dbg !8514

; <label>:1389:                                   ; preds = %1376
  %1390 = load i64, i64* %43, align 8, !dbg !8514
  %1391 = load i64*, i64** %42, align 8, !dbg !8514
  %1392 = load i64, i64* %1391, align 8, !dbg !8514
  %1393 = and i64 %1392, %1390, !dbg !8514
  store i64 %1393, i64* %1391, align 8, !dbg !8514
  br label %1402, !dbg !8514

; <label>:1394:                                   ; preds = %1376
  %1395 = load i64, i64* %43, align 8, !dbg !8514
  %1396 = load i64*, i64** %42, align 8, !dbg !8514
  %1397 = load i64, i64* %1396, align 8, !dbg !8514
  %1398 = xor i64 %1397, %1395, !dbg !8514
  store i64 %1398, i64* %1396, align 8, !dbg !8514
  br label %1402, !dbg !8514

; <label>:1399:                                   ; preds = %1376
  %1400 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8514
  %1401 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1400, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.109, i32 0, i32 0)), !dbg !8514
  br label %1402, !dbg !8514

; <label>:1402:                                   ; preds = %1399, %1394, %1389, %1384, %1381
  br label %1403, !dbg !8513

; <label>:1403:                                   ; preds = %1402, %1357
  %1404 = load i64, i64* %43, align 8, !dbg !8506
  %1405 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8506
  %1406 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1405, i32 0, i32 4, !dbg !8506
  %1407 = bitcast %union.anon.38* %1406 to i64*, !dbg !8506
  store i64 %1404, i64* %1407, align 8, !dbg !8506
  %1408 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8516
  %1409 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1408, i32 0, i32 5, !dbg !8516
  %1410 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1409, align 8, !dbg !8516
  %1411 = icmp ne void (%struct.HXoptcb*)* %1410, null, !dbg !8516
  br i1 %1411, label %1412, label %1417, !dbg !8506

; <label>:1412:                                   ; preds = %1403
  %1413 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8516
  %1414 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1413, i32 0, i32 5, !dbg !8516
  %1415 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1414, align 8, !dbg !8516
  %1416 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8516
  call void %1415(%struct.HXoptcb* %1416), !dbg !8516
  br label %1417, !dbg !8516

; <label>:1417:                                   ; preds = %1412, %1403
  br label %1569, !dbg !8506

; <label>:1418:                                   ; preds = %1
  %1419 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8518
  %1420 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1419, i32 0, i32 3, !dbg !8519
  %1421 = load i8*, i8** %1420, align 8, !dbg !8519
  %1422 = call double @strtod(i8* %1421, i8** null) #7, !dbg !8520
  %1423 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8521
  %1424 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1423, i32 0, i32 4, !dbg !8522
  %1425 = bitcast %union.anon.38* %1424 to double*, !dbg !8522
  store double %1422, double* %1425, align 8, !dbg !8523
  %1426 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8524
  %1427 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1426, i32 0, i32 3, !dbg !8526
  %1428 = load i8*, i8** %1427, align 8, !dbg !8526
  %1429 = icmp ne i8* %1428, null, !dbg !8527
  br i1 %1429, label %1430, label %1443, !dbg !8528

; <label>:1430:                                   ; preds = %1418
  %1431 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8529
  %1432 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1431, i32 0, i32 4, !dbg !8530
  %1433 = bitcast %union.anon.38* %1432 to double*, !dbg !8530
  %1434 = load double, double* %1433, align 8, !dbg !8530
  %1435 = fptrunc double %1434 to float, !dbg !8529
  %1436 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %44, i32 0, i32 0, !dbg !8531
  %1437 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8531
  %1438 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1437, i32 0, i32 3, !dbg !8531
  %1439 = load i8*, i8** %1438, align 8, !dbg !8531
  %1440 = bitcast i8* %1439 to float*, !dbg !8531
  store float* %1440, float** %1436, align 8, !dbg !8531
  %1441 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %44, i32 0, i32 0, !dbg !8531
  %1442 = load float*, float** %1441, align 8, !dbg !8531
  store float %1435, float* %1442, align 4, !dbg !8532
  br label %1443, !dbg !8533

; <label>:1443:                                   ; preds = %1430, %1418
  %1444 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8534
  %1445 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1444, i32 0, i32 5, !dbg !8534
  %1446 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1445, align 8, !dbg !8534
  %1447 = icmp ne void (%struct.HXoptcb*)* %1446, null, !dbg !8534
  br i1 %1447, label %1448, label %1453, !dbg !8536

; <label>:1448:                                   ; preds = %1443
  %1449 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8534
  %1450 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1449, i32 0, i32 5, !dbg !8534
  %1451 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1450, align 8, !dbg !8534
  %1452 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8534
  call void %1451(%struct.HXoptcb* %1452), !dbg !8534
  br label %1453, !dbg !8534

; <label>:1453:                                   ; preds = %1448, %1443
  br label %1569, !dbg !8537

; <label>:1454:                                   ; preds = %1
  %1455 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8538
  %1456 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1455, i32 0, i32 3, !dbg !8539
  %1457 = load i8*, i8** %1456, align 8, !dbg !8539
  %1458 = call double @strtod(i8* %1457, i8** null) #7, !dbg !8540
  %1459 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8541
  %1460 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1459, i32 0, i32 4, !dbg !8542
  %1461 = bitcast %union.anon.38* %1460 to double*, !dbg !8542
  store double %1458, double* %1461, align 8, !dbg !8543
  %1462 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8544
  %1463 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1462, i32 0, i32 3, !dbg !8546
  %1464 = load i8*, i8** %1463, align 8, !dbg !8546
  %1465 = icmp ne i8* %1464, null, !dbg !8547
  br i1 %1465, label %1466, label %1478, !dbg !8548

; <label>:1466:                                   ; preds = %1454
  %1467 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8549
  %1468 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1467, i32 0, i32 4, !dbg !8550
  %1469 = bitcast %union.anon.38* %1468 to double*, !dbg !8550
  %1470 = load double, double* %1469, align 8, !dbg !8550
  %1471 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %45, i32 0, i32 0, !dbg !8551
  %1472 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8551
  %1473 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1472, i32 0, i32 3, !dbg !8551
  %1474 = load i8*, i8** %1473, align 8, !dbg !8551
  %1475 = bitcast i8* %1474 to double*, !dbg !8551
  store double* %1475, double** %1471, align 8, !dbg !8551
  %1476 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %45, i32 0, i32 0, !dbg !8551
  %1477 = load double*, double** %1476, align 8, !dbg !8551
  store double %1470, double* %1477, align 8, !dbg !8552
  br label %1478, !dbg !8553

; <label>:1478:                                   ; preds = %1466, %1454
  %1479 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8554
  %1480 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1479, i32 0, i32 5, !dbg !8554
  %1481 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1480, align 8, !dbg !8554
  %1482 = icmp ne void (%struct.HXoptcb*)* %1481, null, !dbg !8554
  br i1 %1482, label %1483, label %1488, !dbg !8556

; <label>:1483:                                   ; preds = %1478
  %1484 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8554
  %1485 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1484, i32 0, i32 5, !dbg !8554
  %1486 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1485, align 8, !dbg !8554
  %1487 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8554
  call void %1486(%struct.HXoptcb* %1487), !dbg !8554
  br label %1488, !dbg !8554

; <label>:1488:                                   ; preds = %1483, %1478
  br label %1569, !dbg !8557

; <label>:1489:                                   ; preds = %1
  %1490 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8558
  %1491 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1490, i32 0, i32 3, !dbg !8560
  %1492 = load i8*, i8** %1491, align 8, !dbg !8560
  %1493 = icmp ne i8* %1492, null, !dbg !8561
  br i1 %1493, label %1494, label %1506, !dbg !8562

; <label>:1494:                                   ; preds = %1489
  %1495 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8563
  %1496 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1495, i32 0, i32 3, !dbg !8564
  %1497 = load i8*, i8** %1496, align 8, !dbg !8564
  %1498 = call i8* @HX_strdup.80(i8* %1497), !dbg !8565
  %1499 = getelementptr inbounds %struct.anon, %struct.anon* %46, i32 0, i32 0, !dbg !8566
  %1500 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8566
  %1501 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1500, i32 0, i32 3, !dbg !8566
  %1502 = load i8*, i8** %1501, align 8, !dbg !8566
  %1503 = bitcast i8* %1502 to i8**, !dbg !8566
  store i8** %1503, i8*** %1499, align 8, !dbg !8566
  %1504 = getelementptr inbounds %struct.anon, %struct.anon* %46, i32 0, i32 0, !dbg !8566
  %1505 = load i8**, i8*** %1504, align 8, !dbg !8566
  store i8* %1498, i8** %1505, align 8, !dbg !8567
  br label %1506, !dbg !8568

; <label>:1506:                                   ; preds = %1494, %1489
  %1507 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8569
  %1508 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1507, i32 0, i32 5, !dbg !8569
  %1509 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1508, align 8, !dbg !8569
  %1510 = icmp ne void (%struct.HXoptcb*)* %1509, null, !dbg !8569
  br i1 %1510, label %1511, label %1516, !dbg !8571

; <label>:1511:                                   ; preds = %1506
  %1512 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8569
  %1513 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1512, i32 0, i32 5, !dbg !8569
  %1514 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1513, align 8, !dbg !8569
  %1515 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8569
  call void %1514(%struct.HXoptcb* %1515), !dbg !8569
  br label %1516, !dbg !8569

; <label>:1516:                                   ; preds = %1511, %1506
  br label %1569, !dbg !8572

; <label>:1517:                                   ; preds = %1
  %1518 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8573
  %1519 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1518, i32 0, i32 3, !dbg !8574
  %1520 = load i8*, i8** %1519, align 8, !dbg !8574
  %1521 = bitcast i8* %1520 to %struct.HXdeque*, !dbg !8573
  %1522 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8575
  %1523 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1522, i32 0, i32 3, !dbg !8576
  %1524 = load i8*, i8** %1523, align 8, !dbg !8576
  %1525 = call i8* @HX_strdup.80(i8* %1524), !dbg !8577
  %1526 = call %struct.HXdeque_node* @HXdeque_push(%struct.HXdeque* %1521, i8* %1525), !dbg !8578
  %1527 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8579
  %1528 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1527, i32 0, i32 5, !dbg !8579
  %1529 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1528, align 8, !dbg !8579
  %1530 = icmp ne void (%struct.HXoptcb*)* %1529, null, !dbg !8579
  br i1 %1530, label %1531, label %1536, !dbg !8581

; <label>:1531:                                   ; preds = %1517
  %1532 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8579
  %1533 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1532, i32 0, i32 5, !dbg !8579
  %1534 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1533, align 8, !dbg !8579
  %1535 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8579
  call void %1534(%struct.HXoptcb* %1535), !dbg !8579
  br label %1536, !dbg !8579

; <label>:1536:                                   ; preds = %1531, %1517
  br label %1569, !dbg !8582

; <label>:1537:                                   ; preds = %1
  %1538 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8583
  %1539 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1538, i32 0, i32 3, !dbg !8585
  %1540 = load i8*, i8** %1539, align 8, !dbg !8585
  %1541 = icmp ne i8* %1540, null, !dbg !8586
  br i1 %1541, label %1542, label %1551, !dbg !8587

; <label>:1542:                                   ; preds = %1537
  %1543 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8588
  %1544 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1543, i32 0, i32 3, !dbg !8589
  %1545 = load i8*, i8** %1544, align 8, !dbg !8589
  %1546 = bitcast i8* %1545 to i8**, !dbg !8588
  %1547 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8590
  %1548 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %1547, i32 0, i32 3, !dbg !8591
  %1549 = load i8*, i8** %1548, align 8, !dbg !8591
  %1550 = call i8* @HXmc_strcpy(i8** %1546, i8* %1549), !dbg !8592
  br label %1551, !dbg !8592

; <label>:1551:                                   ; preds = %1542, %1537
  %1552 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8593
  %1553 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1552, i32 0, i32 5, !dbg !8593
  %1554 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1553, align 8, !dbg !8593
  %1555 = icmp ne void (%struct.HXoptcb*)* %1554, null, !dbg !8593
  br i1 %1555, label %1556, label %1561, !dbg !8595

; <label>:1556:                                   ; preds = %1551
  %1557 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8593
  %1558 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1557, i32 0, i32 5, !dbg !8593
  %1559 = load void (%struct.HXoptcb*)*, void (%struct.HXoptcb*)** %1558, align 8, !dbg !8593
  %1560 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !8593
  call void %1559(%struct.HXoptcb* %1560), !dbg !8593
  br label %1561, !dbg !8593

; <label>:1561:                                   ; preds = %1556, %1551
  br label %1569, !dbg !8596

; <label>:1562:                                   ; preds = %1
  %1563 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8597
  %1564 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8598
  %1565 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %1564, i32 0, i32 2, !dbg !8599
  %1566 = load i32, i32* %1565, align 4, !dbg !8599
  %1567 = and i32 %1566, 31, !dbg !8600
  %1568 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1563, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21.110, i32 0, i32 0), i32 %1567), !dbg !8601
  br label %1569, !dbg !8602

; <label>:1569:                                   ; preds = %1562, %1561, %1536, %1516, %1488, %1453, %1417, %1356, %1295, %1234, %1173, %1110, %1047, %973, %899, %826, %753, %692, %631, %568, %505, %431, %357, %284, %211, %190, %147, %127, %101
  ret void, !dbg !8603
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HXoption* @lookup_short(%struct.HXoption*, i8 signext) #0 !dbg !8604 {
  %3 = alloca %struct.HXoption*, align 8
  %4 = alloca %struct.HXoption*, align 8
  %5 = alloca i8, align 1
  store %struct.HXoption* %0, %struct.HXoption** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %4, metadata !8607, metadata !DIExpression()), !dbg !8608
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !8609, metadata !DIExpression()), !dbg !8610
  br label %6, !dbg !8611

; <label>:6:                                      ; preds = %30, %2
  %7 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8612
  %8 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %7, i32 0, i32 0, !dbg !8615
  %9 = load i8*, i8** %8, align 8, !dbg !8615
  %10 = icmp ne i8* %9, null, !dbg !8616
  br i1 %10, label %17, label %11, !dbg !8617

; <label>:11:                                     ; preds = %6
  %12 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8618
  %13 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %12, i32 0, i32 1, !dbg !8619
  %14 = load i8, i8* %13, align 8, !dbg !8619
  %15 = sext i8 %14 to i32, !dbg !8618
  %16 = icmp ne i32 %15, 0, !dbg !8620
  br label %17, !dbg !8617

; <label>:17:                                     ; preds = %11, %6
  %18 = phi i1 [ true, %6 ], [ %16, %11 ]
  br i1 %18, label %19, label %33, !dbg !8621

; <label>:19:                                     ; preds = %17
  %20 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8622
  %21 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %20, i32 0, i32 1, !dbg !8624
  %22 = load i8, i8* %21, align 8, !dbg !8624
  %23 = sext i8 %22 to i32, !dbg !8622
  %24 = load i8, i8* %5, align 1, !dbg !8625
  %25 = sext i8 %24 to i32, !dbg !8625
  %26 = icmp eq i32 %23, %25, !dbg !8626
  br i1 %26, label %27, label %29, !dbg !8627

; <label>:27:                                     ; preds = %19
  %28 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8628
  store %struct.HXoption* %28, %struct.HXoption** %3, align 8, !dbg !8629
  br label %34, !dbg !8629

; <label>:29:                                     ; preds = %19
  br label %30, !dbg !8625

; <label>:30:                                     ; preds = %29
  %31 = load %struct.HXoption*, %struct.HXoption** %4, align 8, !dbg !8630
  %32 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %31, i32 1, !dbg !8630
  store %struct.HXoption* %32, %struct.HXoption** %4, align 8, !dbg !8630
  br label %6, !dbg !8631, !llvm.loop !8632

; <label>:33:                                     ; preds = %17
  store %struct.HXoption* null, %struct.HXoption** %3, align 8, !dbg !8634
  br label %34, !dbg !8634

; <label>:34:                                     ; preds = %33, %27
  %35 = load %struct.HXoption*, %struct.HXoption** %3, align 8, !dbg !8635
  ret %struct.HXoption* %35, !dbg !8635
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_getopt_help(%struct.HXoptcb*, %struct._IO_FILE*) #0 !dbg !8636 {
  %3 = alloca %struct.HXoptcb*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca %struct.HXoption*, align 8
  %7 = alloca [84 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.anon.18, align 4
  store %struct.HXoptcb* %0, %struct.HXoptcb** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoptcb** %3, metadata !8679, metadata !DIExpression()), !dbg !8680
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !8683, metadata !DIExpression()), !dbg !8684
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !8685
  %12 = icmp eq %struct._IO_FILE* %11, null, !dbg !8686
  br i1 %12, label %13, label %15, !dbg !8687

; <label>:13:                                     ; preds = %2
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8688
  br label %17, !dbg !8687

; <label>:15:                                     ; preds = %2
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !8689
  br label %17, !dbg !8687

; <label>:17:                                     ; preds = %15, %13
  %18 = phi %struct._IO_FILE* [ %14, %13 ], [ %16, %15 ], !dbg !8687
  store %struct._IO_FILE* %18, %struct._IO_FILE** %5, align 8, !dbg !8684
  call void @llvm.dbg.declare(metadata %struct.HXoption** %6, metadata !8690, metadata !DIExpression()), !dbg !8691
  call void @llvm.dbg.declare(metadata [84 x i8]* %7, metadata !8692, metadata !DIExpression()), !dbg !8696
  %19 = bitcast [84 x i8]* %7 to i8*, !dbg !8696
  call void @llvm.memset.p0i8.i64(i8* align 16 %19, i8 0, i64 84, i1 false), !dbg !8696
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8697, metadata !DIExpression()), !dbg !8698
  store i32 0, i32* %8, align 4, !dbg !8698
  %20 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8699
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !8700
  call void @HX_getopt_usage(%struct.HXoptcb* %20, %struct._IO_FILE* %21), !dbg !8701
  %22 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8702
  %23 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %22, i32 0, i32 1, !dbg !8704
  %24 = load %struct.HXoption*, %struct.HXoption** %23, align 8, !dbg !8704
  store %struct.HXoption* %24, %struct.HXoption** %6, align 8, !dbg !8705
  br label %25, !dbg !8706

; <label>:25:                                     ; preds = %50, %17
  %26 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8707
  %27 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %26, i32 0, i32 0, !dbg !8709
  %28 = load i8*, i8** %27, align 8, !dbg !8709
  %29 = icmp ne i8* %28, null, !dbg !8710
  br i1 %29, label %36, label %30, !dbg !8711

; <label>:30:                                     ; preds = %25
  %31 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8712
  %32 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %31, i32 0, i32 1, !dbg !8713
  %33 = load i8, i8* %32, align 8, !dbg !8713
  %34 = sext i8 %33 to i32, !dbg !8712
  %35 = icmp ne i32 %34, 0, !dbg !8714
  br label %36, !dbg !8711

; <label>:36:                                     ; preds = %30, %25
  %37 = phi i1 [ true, %25 ], [ %35, %30 ]
  br i1 %37, label %38, label %53, !dbg !8715

; <label>:38:                                     ; preds = %36
  call void @llvm.dbg.declare(metadata i64* %9, metadata !8716, metadata !DIExpression()), !dbg !8718
  %39 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8719
  %40 = getelementptr inbounds [84 x i8], [84 x i8]* %7, i32 0, i32 0, !dbg !8720
  call void @opt_to_text(%struct.HXoption* %39, i8* %40, i64 84, i32 8), !dbg !8721
  %41 = getelementptr inbounds [84 x i8], [84 x i8]* %7, i32 0, i32 0, !dbg !8722
  %42 = call i64 @strlen(i8* %41) #10, !dbg !8724
  store i64 %42, i64* %9, align 8, !dbg !8725
  %43 = load i32, i32* %8, align 4, !dbg !8726
  %44 = zext i32 %43 to i64, !dbg !8726
  %45 = icmp ugt i64 %42, %44, !dbg !8727
  br i1 %45, label %46, label %49, !dbg !8728

; <label>:46:                                     ; preds = %38
  %47 = load i64, i64* %9, align 8, !dbg !8729
  %48 = trunc i64 %47 to i32, !dbg !8729
  store i32 %48, i32* %8, align 4, !dbg !8730
  br label %49, !dbg !8731

; <label>:49:                                     ; preds = %46, %38
  br label %50, !dbg !8732

; <label>:50:                                     ; preds = %49
  %51 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8733
  %52 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %51, i32 1, !dbg !8733
  store %struct.HXoption* %52, %struct.HXoption** %6, align 8, !dbg !8733
  br label %25, !dbg !8734, !llvm.loop !8735

; <label>:53:                                     ; preds = %36
  %54 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8737
  %55 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %54, i32 0, i32 1, !dbg !8739
  %56 = load %struct.HXoption*, %struct.HXoption** %55, align 8, !dbg !8739
  store %struct.HXoption* %56, %struct.HXoption** %6, align 8, !dbg !8740
  br label %57, !dbg !8741

; <label>:57:                                     ; preds = %95, %53
  %58 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8742
  %59 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %58, i32 0, i32 0, !dbg !8744
  %60 = load i8*, i8** %59, align 8, !dbg !8744
  %61 = icmp ne i8* %60, null, !dbg !8745
  br i1 %61, label %68, label %62, !dbg !8746

; <label>:62:                                     ; preds = %57
  %63 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8747
  %64 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %63, i32 0, i32 1, !dbg !8748
  %65 = load i8, i8* %64, align 8, !dbg !8748
  %66 = sext i8 %65 to i32, !dbg !8747
  %67 = icmp ne i32 %66, 0, !dbg !8749
  br label %68, !dbg !8746

; <label>:68:                                     ; preds = %62, %57
  %69 = phi i1 [ true, %57 ], [ %67, %62 ]
  br i1 %69, label %70, label %98, !dbg !8750

; <label>:70:                                     ; preds = %68
  %71 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8751
  %72 = getelementptr inbounds [84 x i8], [84 x i8]* %7, i32 0, i32 0, !dbg !8753
  call void @opt_to_text(%struct.HXoption* %71, i8* %72, i64 84, i32 0), !dbg !8754
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !8755
  %74 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %10, i32 0, i32 0, !dbg !8756
  %75 = load i32, i32* %8, align 4, !dbg !8756
  store i32 %75, i32* %74, align 4, !dbg !8756
  %76 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %10, i32 0, i32 0, !dbg !8756
  %77 = load i32, i32* %76, align 4, !dbg !8756
  %78 = getelementptr inbounds [84 x i8], [84 x i8]* %7, i32 0, i32 0, !dbg !8757
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.103, i32 0, i32 0), i32 %77, i8* %78), !dbg !8758
  %80 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8759
  %81 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %80, i32 0, i32 8, !dbg !8761
  %82 = load i8*, i8** %81, align 8, !dbg !8761
  %83 = icmp eq i8* %82, null, !dbg !8762
  br i1 %83, label %84, label %87, !dbg !8763

; <label>:84:                                     ; preds = %70
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !8764
  %86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.94, i32 0, i32 0)), !dbg !8765
  br label %94, !dbg !8765

; <label>:87:                                     ; preds = %70
  %88 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8766
  %89 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %88, i32 0, i32 8, !dbg !8767
  %90 = load i8*, i8** %89, align 8, !dbg !8767
  %91 = load i32, i32* %8, align 4, !dbg !8768
  %92 = add i32 %91, 6, !dbg !8769
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !8770
  call void @print_indent(i8* %90, i32 %92, %struct._IO_FILE* %93), !dbg !8771
  br label %94

; <label>:94:                                     ; preds = %87, %84
  br label %95, !dbg !8772

; <label>:95:                                     ; preds = %94
  %96 = load %struct.HXoption*, %struct.HXoption** %6, align 8, !dbg !8773
  %97 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %96, i32 1, !dbg !8773
  store %struct.HXoption* %97, %struct.HXoption** %6, align 8, !dbg !8773
  br label %57, !dbg !8774, !llvm.loop !8775

; <label>:98:                                     ; preds = %68
  ret void, !dbg !8777
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_getopt_usage(%struct.HXoptcb*, %struct._IO_FILE*) #0 !dbg !8778 {
  %3 = alloca %struct.HXoptcb*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca %struct.HXoption*, align 8
  %9 = alloca [84 x i8], align 16
  store %struct.HXoptcb* %0, %struct.HXoptcb** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoptcb** %3, metadata !8779, metadata !DIExpression()), !dbg !8780
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8783, metadata !DIExpression()), !dbg !8784
  %10 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8785
  %11 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %10, i32 0, i32 0, !dbg !8786
  %12 = load i8*, i8** %11, align 8, !dbg !8786
  %13 = call i8* @HX_basename(i8* %12), !dbg !8787
  %14 = call i64 @strlen(i8* %13) #10, !dbg !8788
  %15 = add i64 7, %14, !dbg !8789
  store i64 %15, i64* %5, align 8, !dbg !8784
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8790, metadata !DIExpression()), !dbg !8791
  store i64 0, i64* %6, align 8, !dbg !8791
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !8792, metadata !DIExpression()), !dbg !8793
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !8794
  %17 = icmp eq %struct._IO_FILE* %16, null, !dbg !8795
  br i1 %17, label %18, label %20, !dbg !8796

; <label>:18:                                     ; preds = %2
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8797
  br label %22, !dbg !8796

; <label>:20:                                     ; preds = %2
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !8798
  br label %22, !dbg !8796

; <label>:22:                                     ; preds = %20, %18
  %23 = phi %struct._IO_FILE* [ %19, %18 ], [ %21, %20 ], !dbg !8796
  store %struct._IO_FILE* %23, %struct._IO_FILE** %7, align 8, !dbg !8793
  call void @llvm.dbg.declare(metadata %struct.HXoption** %8, metadata !8799, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.declare(metadata [84 x i8]* %9, metadata !8801, metadata !DIExpression()), !dbg !8802
  %24 = bitcast [84 x i8]* %9 to i8*, !dbg !8802
  call void @llvm.memset.p0i8.i64(i8* align 16 %24, i8 0, i64 84, i1 false), !dbg !8802
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8803
  %26 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8804
  %27 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %26, i32 0, i32 0, !dbg !8805
  %28 = load i8*, i8** %27, align 8, !dbg !8805
  %29 = call i8* @HX_basename(i8* %28), !dbg !8806
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.88, i32 0, i32 0), i8* %29), !dbg !8807
  %31 = load i64, i64* %5, align 8, !dbg !8808
  %32 = add i64 %31, 5, !dbg !8810
  %33 = icmp ugt i64 %32, 80, !dbg !8811
  br i1 %33, label %34, label %37, !dbg !8812

; <label>:34:                                     ; preds = %22
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8813
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.89, i32 0, i32 0)), !dbg !8815
  store i64 6, i64* %5, align 8, !dbg !8816
  br label %37, !dbg !8817

; <label>:37:                                     ; preds = %34, %22
  %38 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8818
  %39 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %38, i32 0, i32 1, !dbg !8820
  %40 = load %struct.HXoption*, %struct.HXoption** %39, align 8, !dbg !8820
  store %struct.HXoption* %40, %struct.HXoption** %8, align 8, !dbg !8821
  br label %41, !dbg !8822

; <label>:41:                                     ; preds = %102, %37
  %42 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8823
  %43 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %42, i32 0, i32 0, !dbg !8825
  %44 = load i8*, i8** %43, align 8, !dbg !8825
  %45 = icmp ne i8* %44, null, !dbg !8826
  br i1 %45, label %52, label %46, !dbg !8827

; <label>:46:                                     ; preds = %41
  %47 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8828
  %48 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %47, i32 0, i32 1, !dbg !8829
  %49 = load i8, i8* %48, align 8, !dbg !8829
  %50 = sext i8 %49 to i32, !dbg !8828
  %51 = icmp ne i32 %50, 0, !dbg !8830
  br label %52, !dbg !8827

; <label>:52:                                     ; preds = %46, %41
  %53 = phi i1 [ true, %41 ], [ %51, %46 ]
  br i1 %53, label %54, label %105, !dbg !8831

; <label>:54:                                     ; preds = %52
  %55 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8832
  %56 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %55, i32 0, i32 0, !dbg !8835
  %57 = load i8*, i8** %56, align 8, !dbg !8835
  %58 = icmp eq i8* %57, null, !dbg !8836
  br i1 %58, label %59, label %70, !dbg !8837

; <label>:59:                                     ; preds = %54
  %60 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8838
  %61 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %60, i32 0, i32 1, !dbg !8839
  %62 = load i8, i8* %61, align 8, !dbg !8839
  %63 = sext i8 %62 to i32, !dbg !8838
  %64 = icmp ne i32 %63, 0, !dbg !8840
  br i1 %64, label %65, label %70, !dbg !8841

; <label>:65:                                     ; preds = %59
  %66 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8842
  %67 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %66, i32 0, i32 2, !dbg !8843
  %68 = load i32, i32* %67, align 4, !dbg !8843
  %69 = call zeroext i1 @takes_void(i32 %68), !dbg !8844
  br i1 %69, label %71, label %70, !dbg !8845

; <label>:70:                                     ; preds = %65, %59, %54
  br label %102, !dbg !8846

; <label>:71:                                     ; preds = %65
  %72 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8847
  %73 = load i8, i8* %72, align 16, !dbg !8847
  %74 = sext i8 %73 to i32, !dbg !8847
  %75 = icmp eq i32 %74, 0, !dbg !8849
  br i1 %75, label %76, label %79, !dbg !8850

; <label>:76:                                     ; preds = %71
  %77 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8851
  %78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %77, i64 84, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.90, i32 0, i32 0)) #7, !dbg !8853
  store i64 3, i64* %6, align 8, !dbg !8854
  br label %79, !dbg !8855

; <label>:79:                                     ; preds = %76, %71
  %80 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8856
  %81 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %80, i32 0, i32 1, !dbg !8857
  %82 = load i8, i8* %81, align 8, !dbg !8857
  %83 = load i64, i64* %6, align 8, !dbg !8858
  %84 = add i64 %83, 1, !dbg !8858
  store i64 %84, i64* %6, align 8, !dbg !8858
  %85 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i64 0, i64 %83, !dbg !8859
  store i8 %82, i8* %85, align 1, !dbg !8860
  %86 = load i64, i64* %5, align 8, !dbg !8861
  %87 = load i64, i64* %6, align 8, !dbg !8863
  %88 = add i64 %86, %87, !dbg !8864
  %89 = add i64 %88, 1, !dbg !8865
  %90 = icmp ugt i64 %89, 80, !dbg !8866
  br i1 %90, label %91, label %101, !dbg !8867

; <label>:91:                                     ; preds = %79
  %92 = load i64, i64* %6, align 8, !dbg !8868
  %93 = add i64 %92, 1, !dbg !8868
  store i64 %93, i64* %6, align 8, !dbg !8868
  %94 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i64 0, i64 %92, !dbg !8870
  store i8 93, i8* %94, align 1, !dbg !8871
  %95 = load i64, i64* %6, align 8, !dbg !8872
  %96 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i64 0, i64 %95, !dbg !8873
  store i8 0, i8* %96, align 1, !dbg !8874
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8875
  %98 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8876
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12.91, i32 0, i32 0), i8* %98), !dbg !8877
  store i64 6, i64* %5, align 8, !dbg !8878
  %100 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8879
  store i8 0, i8* %100, align 16, !dbg !8880
  br label %101, !dbg !8881

; <label>:101:                                    ; preds = %91, %79
  br label %102, !dbg !8882

; <label>:102:                                    ; preds = %101, %70
  %103 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8883
  %104 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %103, i32 1, !dbg !8883
  store %struct.HXoption* %104, %struct.HXoption** %8, align 8, !dbg !8883
  br label %41, !dbg !8884, !llvm.loop !8885

; <label>:105:                                    ; preds = %52
  %106 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8887
  %107 = load i8, i8* %106, align 16, !dbg !8887
  %108 = sext i8 %107 to i32, !dbg !8887
  %109 = icmp ne i32 %108, 0, !dbg !8889
  br i1 %109, label %110, label %122, !dbg !8890

; <label>:110:                                    ; preds = %105
  %111 = load i64, i64* %6, align 8, !dbg !8891
  %112 = add i64 %111, 1, !dbg !8891
  store i64 %112, i64* %6, align 8, !dbg !8891
  %113 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i64 0, i64 %111, !dbg !8893
  store i8 93, i8* %113, align 1, !dbg !8894
  %114 = load i64, i64* %6, align 8, !dbg !8895
  %115 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i64 0, i64 %114, !dbg !8896
  store i8 0, i8* %115, align 1, !dbg !8897
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8898
  %117 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8899
  %118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.92, i32 0, i32 0), i8* %117), !dbg !8900
  %119 = sext i32 %118 to i64, !dbg !8900
  %120 = load i64, i64* %5, align 8, !dbg !8901
  %121 = add i64 %120, %119, !dbg !8901
  store i64 %121, i64* %5, align 8, !dbg !8901
  br label %122, !dbg !8902

; <label>:122:                                    ; preds = %110, %105
  %123 = load %struct.HXoptcb*, %struct.HXoptcb** %3, align 8, !dbg !8903
  %124 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %123, i32 0, i32 1, !dbg !8905
  %125 = load %struct.HXoption*, %struct.HXoption** %124, align 8, !dbg !8905
  store %struct.HXoption* %125, %struct.HXoption** %8, align 8, !dbg !8906
  br label %126, !dbg !8907

; <label>:126:                                    ; preds = %174, %122
  %127 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8908
  %128 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %127, i32 0, i32 0, !dbg !8910
  %129 = load i8*, i8** %128, align 8, !dbg !8910
  %130 = icmp ne i8* %129, null, !dbg !8911
  br i1 %130, label %137, label %131, !dbg !8912

; <label>:131:                                    ; preds = %126
  %132 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8913
  %133 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %132, i32 0, i32 1, !dbg !8914
  %134 = load i8, i8* %133, align 8, !dbg !8914
  %135 = sext i8 %134 to i32, !dbg !8913
  %136 = icmp ne i32 %135, 0, !dbg !8915
  br label %137, !dbg !8912

; <label>:137:                                    ; preds = %131, %126
  %138 = phi i1 [ true, %126 ], [ %136, %131 ]
  br i1 %138, label %139, label %177, !dbg !8916

; <label>:139:                                    ; preds = %137
  %140 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8917
  %141 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %140, i32 0, i32 0, !dbg !8920
  %142 = load i8*, i8** %141, align 8, !dbg !8920
  %143 = icmp eq i8* %142, null, !dbg !8921
  br i1 %143, label %144, label %156, !dbg !8922

; <label>:144:                                    ; preds = %139
  %145 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8923
  %146 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %145, i32 0, i32 1, !dbg !8924
  %147 = load i8, i8* %146, align 8, !dbg !8924
  %148 = sext i8 %147 to i32, !dbg !8923
  %149 = icmp ne i32 %148, 0, !dbg !8925
  br i1 %149, label %150, label %156, !dbg !8926

; <label>:150:                                    ; preds = %144
  %151 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8927
  %152 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %151, i32 0, i32 2, !dbg !8928
  %153 = load i32, i32* %152, align 4, !dbg !8928
  %154 = call zeroext i1 @takes_void(i32 %153), !dbg !8929
  br i1 %154, label %155, label %156, !dbg !8930

; <label>:155:                                    ; preds = %150
  br label %174, !dbg !8931

; <label>:156:                                    ; preds = %150, %144, %139
  %157 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8932
  %158 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8933
  call void @opt_to_text(%struct.HXoption* %157, i8* %158, i64 84, i32 7), !dbg !8934
  %159 = load i64, i64* %5, align 8, !dbg !8935
  %160 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8937
  %161 = call i64 @strlen(i8* %160) #10, !dbg !8938
  %162 = add i64 %159, %161, !dbg !8939
  %163 = icmp ugt i64 %162, 80, !dbg !8940
  br i1 %163, label %164, label %167, !dbg !8941

; <label>:164:                                    ; preds = %156
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8942
  %166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.93, i32 0, i32 0)), !dbg !8944
  store i64 6, i64* %5, align 8, !dbg !8945
  br label %167, !dbg !8946

; <label>:167:                                    ; preds = %164, %156
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8947
  %169 = getelementptr inbounds [84 x i8], [84 x i8]* %9, i32 0, i32 0, !dbg !8948
  %170 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.92, i32 0, i32 0), i8* %169), !dbg !8949
  %171 = sext i32 %170 to i64, !dbg !8949
  %172 = load i64, i64* %5, align 8, !dbg !8950
  %173 = add i64 %172, %171, !dbg !8950
  store i64 %173, i64* %5, align 8, !dbg !8950
  br label %174, !dbg !8951

; <label>:174:                                    ; preds = %167, %155
  %175 = load %struct.HXoption*, %struct.HXoption** %8, align 8, !dbg !8952
  %176 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %175, i32 1, !dbg !8952
  store %struct.HXoption* %176, %struct.HXoption** %8, align 8, !dbg !8952
  br label %126, !dbg !8953, !llvm.loop !8954

; <label>:177:                                    ; preds = %137
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8956
  %179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.94, i32 0, i32 0)), !dbg !8957
  ret void, !dbg !8958
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXdeque_genocide(%struct.HXdeque*) #0 !dbg !8959 {
  %2 = alloca %struct.HXdeque*, align 8
  store %struct.HXdeque* %0, %struct.HXdeque** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXdeque** %2, metadata !8962, metadata !DIExpression()), !dbg !8963
  %3 = load %struct.HXdeque*, %struct.HXdeque** %2, align 8, !dbg !8964
  call void @HXdeque_genocide2(%struct.HXdeque* %3, void (i8*)* @free), !dbg !8965
  ret void, !dbg !8966
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @opt_to_text(%struct.HXoption*, i8*, i64, i32) #0 !dbg !8967 {
  %5 = alloca %struct.HXoption*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8, align 1
  store %struct.HXoption* %0, %struct.HXoption** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %5, metadata !8970, metadata !DIExpression()), !dbg !8971
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8972, metadata !DIExpression()), !dbg !8973
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !8974, metadata !DIExpression()), !dbg !8975
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8978, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.declare(metadata i8** %10, metadata !8980, metadata !DIExpression()), !dbg !8981
  %13 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !8982
  %14 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %13, i32 0, i32 9, !dbg !8983
  %15 = load i8*, i8** %14, align 8, !dbg !8983
  %16 = icmp ne i8* %15, null, !dbg !8984
  br i1 %16, label %17, label %21, !dbg !8985

; <label>:17:                                     ; preds = %4
  %18 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !8986
  %19 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %18, i32 0, i32 9, !dbg !8987
  %20 = load i8*, i8** %19, align 8, !dbg !8987
  br label %22, !dbg !8985

; <label>:21:                                     ; preds = %4
  br label %22, !dbg !8985

; <label>:22:                                     ; preds = %21, %17
  %23 = phi i8* [ %20, %17 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22.95, i32 0, i32 0), %21 ], !dbg !8985
  store i8* %23, i8** %10, align 8, !dbg !8981
  call void @llvm.dbg.declare(metadata i64* %11, metadata !8988, metadata !DIExpression()), !dbg !8989
  store i64 0, i64* %11, align 8, !dbg !8989
  call void @llvm.dbg.declare(metadata i8* %12, metadata !8990, metadata !DIExpression()), !dbg !8991
  %24 = load i32, i32* %8, align 4, !dbg !8992
  %25 = and i32 %24, 1, !dbg !8994
  %26 = icmp ne i32 %25, 0, !dbg !8994
  br i1 %26, label %27, label %32, !dbg !8995

; <label>:27:                                     ; preds = %22
  %28 = load i8*, i8** %6, align 8, !dbg !8996
  %29 = load i64, i64* %11, align 8, !dbg !8997
  %30 = add i64 %29, 1, !dbg !8997
  store i64 %30, i64* %11, align 8, !dbg !8997
  %31 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !8996
  store i8 32, i8* %31, align 1, !dbg !8998
  br label %32, !dbg !8996

; <label>:32:                                     ; preds = %27, %22
  %33 = load i32, i32* %8, align 4, !dbg !8999
  %34 = and i32 %33, 2, !dbg !9001
  %35 = icmp ne i32 %34, 0, !dbg !9001
  br i1 %35, label %36, label %41, !dbg !9002

; <label>:36:                                     ; preds = %32
  %37 = load i8*, i8** %6, align 8, !dbg !9003
  %38 = load i64, i64* %11, align 8, !dbg !9004
  %39 = add i64 %38, 1, !dbg !9004
  store i64 %39, i64* %11, align 8, !dbg !9004
  %40 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !9003
  store i8 91, i8* %40, align 1, !dbg !9005
  br label %41, !dbg !9003

; <label>:41:                                     ; preds = %36, %32
  %42 = load i32, i32* %8, align 4, !dbg !9006
  %43 = and i32 %42, 4, !dbg !9008
  %44 = icmp ne i32 %43, 0, !dbg !9008
  br i1 %44, label %45, label %52, !dbg !9009

; <label>:45:                                     ; preds = %41
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.96, i32 0, i32 0), i8** %9, align 8, !dbg !9010
  %46 = load i32, i32* %8, align 4, !dbg !9012
  %47 = and i32 %46, 8, !dbg !9013
  %48 = icmp ne i32 %47, 0, !dbg !9014
  %49 = zext i1 %48 to i64, !dbg !9014
  %50 = select i1 %48, i32 61, i32 32, !dbg !9014
  %51 = trunc i32 %50 to i8, !dbg !9014
  store i8 %51, i8* %12, align 1, !dbg !9015
  br label %53, !dbg !9016

; <label>:52:                                     ; preds = %41
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.97, i32 0, i32 0), i8** %9, align 8, !dbg !9017
  store i8 61, i8* %12, align 1, !dbg !9019
  br label %53

; <label>:53:                                     ; preds = %52, %45
  %54 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9020
  %55 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %54, i32 0, i32 0, !dbg !9022
  %56 = load i8*, i8** %55, align 8, !dbg !9022
  %57 = icmp eq i8* %56, null, !dbg !9023
  br i1 %57, label %58, label %87, !dbg !9024

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %6, align 8, !dbg !9025
  %60 = load i64, i64* %11, align 8, !dbg !9027
  %61 = add i64 %60, 1, !dbg !9027
  store i64 %61, i64* %11, align 8, !dbg !9027
  %62 = getelementptr inbounds i8, i8* %59, i64 %60, !dbg !9025
  store i8 45, i8* %62, align 1, !dbg !9028
  %63 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9029
  %64 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %63, i32 0, i32 1, !dbg !9030
  %65 = load i8, i8* %64, align 8, !dbg !9030
  %66 = load i8*, i8** %6, align 8, !dbg !9031
  %67 = load i64, i64* %11, align 8, !dbg !9032
  %68 = add i64 %67, 1, !dbg !9032
  store i64 %68, i64* %11, align 8, !dbg !9032
  %69 = getelementptr inbounds i8, i8* %66, i64 %67, !dbg !9031
  store i8 %65, i8* %69, align 1, !dbg !9033
  %70 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9034
  %71 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %70, i32 0, i32 2, !dbg !9036
  %72 = load i32, i32* %71, align 4, !dbg !9036
  %73 = call zeroext i1 @takes_void(i32 %72), !dbg !9037
  br i1 %73, label %86, label %74, !dbg !9038

; <label>:74:                                     ; preds = %58
  %75 = load i8*, i8** %6, align 8, !dbg !9039
  %76 = load i64, i64* %11, align 8, !dbg !9040
  %77 = getelementptr inbounds i8, i8* %75, i64 %76, !dbg !9041
  %78 = load i64, i64* %7, align 8, !dbg !9042
  %79 = load i64, i64* %11, align 8, !dbg !9043
  %80 = sub i64 %78, %79, !dbg !9044
  %81 = load i8*, i8** %10, align 8, !dbg !9045
  %82 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %77, i64 %80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.98, i32 0, i32 0), i8* %81) #7, !dbg !9046
  %83 = sext i32 %82 to i64, !dbg !9046
  %84 = load i64, i64* %11, align 8, !dbg !9047
  %85 = add i64 %84, %83, !dbg !9047
  store i64 %85, i64* %11, align 8, !dbg !9047
  br label %86, !dbg !9048

; <label>:86:                                     ; preds = %74, %58
  br label %176, !dbg !9049

; <label>:87:                                     ; preds = %53
  %88 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9050
  %89 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %88, i32 0, i32 1, !dbg !9053
  %90 = load i8, i8* %89, align 8, !dbg !9053
  %91 = sext i8 %90 to i32, !dbg !9050
  %92 = icmp eq i32 %91, 0, !dbg !9054
  br i1 %92, label %93, label %128, !dbg !9055

; <label>:93:                                     ; preds = %87
  %94 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9056
  %95 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %94, i32 0, i32 2, !dbg !9059
  %96 = load i32, i32* %95, align 4, !dbg !9059
  %97 = call zeroext i1 @takes_void(i32 %96), !dbg !9060
  br i1 %97, label %98, label %112, !dbg !9061

; <label>:98:                                     ; preds = %93
  %99 = load i8*, i8** %6, align 8, !dbg !9062
  %100 = load i64, i64* %11, align 8, !dbg !9063
  %101 = getelementptr inbounds i8, i8* %99, i64 %100, !dbg !9064
  %102 = load i64, i64* %7, align 8, !dbg !9065
  %103 = load i64, i64* %11, align 8, !dbg !9066
  %104 = sub i64 %102, %103, !dbg !9067
  %105 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9068
  %106 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %105, i32 0, i32 0, !dbg !9069
  %107 = load i8*, i8** %106, align 8, !dbg !9069
  %108 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %101, i64 %104, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.99, i32 0, i32 0), i8* %107) #7, !dbg !9070
  %109 = sext i32 %108 to i64, !dbg !9070
  %110 = load i64, i64* %11, align 8, !dbg !9071
  %111 = add i64 %110, %109, !dbg !9071
  store i64 %111, i64* %11, align 8, !dbg !9071
  br label %127, !dbg !9072

; <label>:112:                                    ; preds = %93
  %113 = load i8*, i8** %6, align 8, !dbg !9073
  %114 = load i64, i64* %11, align 8, !dbg !9074
  %115 = getelementptr inbounds i8, i8* %113, i64 %114, !dbg !9075
  %116 = load i64, i64* %7, align 8, !dbg !9076
  %117 = load i64, i64* %11, align 8, !dbg !9077
  %118 = sub i64 %116, %117, !dbg !9078
  %119 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9079
  %120 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %119, i32 0, i32 0, !dbg !9080
  %121 = load i8*, i8** %120, align 8, !dbg !9080
  %122 = load i8*, i8** %10, align 8, !dbg !9081
  %123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %115, i64 %118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27.100, i32 0, i32 0), i8* %121, i8* %122) #7, !dbg !9082
  %124 = sext i32 %123 to i64, !dbg !9082
  %125 = load i64, i64* %11, align 8, !dbg !9083
  %126 = add i64 %125, %124, !dbg !9083
  store i64 %126, i64* %11, align 8, !dbg !9083
  br label %127

; <label>:127:                                    ; preds = %112, %98
  br label %175, !dbg !9084

; <label>:128:                                    ; preds = %87
  %129 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9085
  %130 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %129, i32 0, i32 2, !dbg !9088
  %131 = load i32, i32* %130, align 4, !dbg !9088
  %132 = call zeroext i1 @takes_void(i32 %131), !dbg !9089
  br i1 %132, label %133, label %152, !dbg !9090

; <label>:133:                                    ; preds = %128
  %134 = load i8*, i8** %6, align 8, !dbg !9091
  %135 = load i64, i64* %11, align 8, !dbg !9092
  %136 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !9093
  %137 = load i64, i64* %7, align 8, !dbg !9094
  %138 = load i64, i64* %11, align 8, !dbg !9095
  %139 = sub i64 %137, %138, !dbg !9096
  %140 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9097
  %141 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %140, i32 0, i32 1, !dbg !9098
  %142 = load i8, i8* %141, align 8, !dbg !9098
  %143 = sext i8 %142 to i32, !dbg !9097
  %144 = load i8*, i8** %9, align 8, !dbg !9099
  %145 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9100
  %146 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %145, i32 0, i32 0, !dbg !9101
  %147 = load i8*, i8** %146, align 8, !dbg !9101
  %148 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %136, i64 %139, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28.101, i32 0, i32 0), i32 %143, i8* %144, i8* %147) #7, !dbg !9102
  %149 = sext i32 %148 to i64, !dbg !9102
  %150 = load i64, i64* %11, align 8, !dbg !9103
  %151 = add i64 %150, %149, !dbg !9103
  store i64 %151, i64* %11, align 8, !dbg !9103
  br label %174, !dbg !9104

; <label>:152:                                    ; preds = %128
  %153 = load i8*, i8** %6, align 8, !dbg !9105
  %154 = load i64, i64* %11, align 8, !dbg !9106
  %155 = getelementptr inbounds i8, i8* %153, i64 %154, !dbg !9107
  %156 = load i64, i64* %7, align 8, !dbg !9108
  %157 = load i64, i64* %11, align 8, !dbg !9109
  %158 = sub i64 %156, %157, !dbg !9110
  %159 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9111
  %160 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %159, i32 0, i32 1, !dbg !9112
  %161 = load i8, i8* %160, align 8, !dbg !9112
  %162 = sext i8 %161 to i32, !dbg !9111
  %163 = load i8*, i8** %9, align 8, !dbg !9113
  %164 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9114
  %165 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %164, i32 0, i32 0, !dbg !9115
  %166 = load i8*, i8** %165, align 8, !dbg !9115
  %167 = load i8, i8* %12, align 1, !dbg !9116
  %168 = sext i8 %167 to i32, !dbg !9116
  %169 = load i8*, i8** %10, align 8, !dbg !9117
  %170 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %155, i64 %158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29.102, i32 0, i32 0), i32 %162, i8* %163, i8* %166, i32 %168, i8* %169) #7, !dbg !9118
  %171 = sext i32 %170 to i64, !dbg !9118
  %172 = load i64, i64* %11, align 8, !dbg !9119
  %173 = add i64 %172, %171, !dbg !9119
  store i64 %173, i64* %11, align 8, !dbg !9119
  br label %174

; <label>:174:                                    ; preds = %152, %133
  br label %175

; <label>:175:                                    ; preds = %174, %127
  br label %176

; <label>:176:                                    ; preds = %175, %86
  %177 = load i32, i32* %8, align 4, !dbg !9120
  %178 = and i32 %177, 2, !dbg !9122
  %179 = icmp ne i32 %178, 0, !dbg !9122
  br i1 %179, label %180, label %185, !dbg !9123

; <label>:180:                                    ; preds = %176
  %181 = load i8*, i8** %6, align 8, !dbg !9124
  %182 = load i64, i64* %11, align 8, !dbg !9125
  %183 = add i64 %182, 1, !dbg !9125
  store i64 %183, i64* %11, align 8, !dbg !9125
  %184 = getelementptr inbounds i8, i8* %181, i64 %182, !dbg !9124
  store i8 93, i8* %184, align 1, !dbg !9126
  br label %185, !dbg !9124

; <label>:185:                                    ; preds = %180, %176
  %186 = load i8*, i8** %6, align 8, !dbg !9127
  %187 = load i64, i64* %11, align 8, !dbg !9128
  %188 = getelementptr inbounds i8, i8* %186, i64 %187, !dbg !9127
  store i8 0, i8* %188, align 1, !dbg !9129
  ret void, !dbg !9130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_indent(i8*, i32, %struct._IO_FILE*) #0 !dbg !9131 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.anon.18, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9136, metadata !DIExpression()), !dbg !9137
  store %struct._IO_FILE* %2, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !9138, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata i64* %7, metadata !9140, metadata !DIExpression()), !dbg !9141
  %10 = load i32, i32* %5, align 4, !dbg !9142
  %11 = sub i32 80, %10, !dbg !9143
  %12 = zext i32 %11 to i64, !dbg !9144
  store i64 %12, i64* %7, align 8, !dbg !9141
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9145, metadata !DIExpression()), !dbg !9146
  br label %13, !dbg !9147

; <label>:13:                                     ; preds = %33, %3
  %14 = load i8*, i8** %4, align 8, !dbg !9148
  %15 = call i64 @strlen(i8* %14) #10, !dbg !9151
  %16 = load i64, i64* %7, align 8, !dbg !9152
  %17 = icmp ult i64 %15, %16, !dbg !9153
  br i1 %17, label %18, label %22, !dbg !9154

; <label>:18:                                     ; preds = %13
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !9155
  %20 = load i8*, i8** %4, align 8, !dbg !9157
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.92, i32 0, i32 0), i8* %20), !dbg !9158
  br label %52, !dbg !9159

; <label>:22:                                     ; preds = %13
  %23 = load i8*, i8** %4, align 8, !dbg !9160
  %24 = load i8*, i8** %4, align 8, !dbg !9162
  %25 = load i64, i64* %7, align 8, !dbg !9163
  %26 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9164
  %27 = call i8* @HX_strbchr(i8* %23, i8* %26, i8 signext 32), !dbg !9165
  store i8* %27, i8** %8, align 8, !dbg !9166
  %28 = icmp eq i8* %27, null, !dbg !9167
  br i1 %28, label %29, label %33, !dbg !9168

; <label>:29:                                     ; preds = %22
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !9169
  %31 = load i8*, i8** %4, align 8, !dbg !9171
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.92, i32 0, i32 0), i8* %31), !dbg !9172
  br label %52, !dbg !9173

; <label>:33:                                     ; preds = %22
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !9174
  %35 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %9, i32 0, i32 0, !dbg !9175
  %36 = load i8*, i8** %8, align 8, !dbg !9175
  %37 = load i8*, i8** %4, align 8, !dbg !9175
  %38 = ptrtoint i8* %36 to i64, !dbg !9175
  %39 = ptrtoint i8* %37 to i64, !dbg !9175
  %40 = sub i64 %38, %39, !dbg !9175
  %41 = trunc i64 %40 to i32, !dbg !9175
  store i32 %41, i32* %35, align 4, !dbg !9175
  %42 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %9, i32 0, i32 0, !dbg !9175
  %43 = load i32, i32* %42, align 4, !dbg !9175
  %44 = load i8*, i8** %4, align 8, !dbg !9176
  %45 = load i32, i32* %5, align 4, !dbg !9177
  %46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.104, i32 0, i32 0), i32 %43, i8* %44, i32 %45, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31.105, i32 0, i32 0)), !dbg !9178
  %47 = load i8*, i8** %8, align 8, !dbg !9179
  %48 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !9180
  store i8* %48, i8** %4, align 8, !dbg !9181
  %49 = load i32, i32* %5, align 4, !dbg !9182
  %50 = sub i32 80, %49, !dbg !9183
  %51 = zext i32 %50 to i64, !dbg !9184
  store i64 %51, i64* %7, align 8, !dbg !9185
  br label %13, !dbg !9147, !llvm.loop !9186

; <label>:52:                                     ; preds = %29, %18
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !9188
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.94, i32 0, i32 0)), !dbg !9189
  ret void, !dbg !9190
}

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isdigit(i8 zeroext) #0 !dbg !9191 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !9192, metadata !DIExpression()), !dbg !9193
  %3 = call i16** @__ctype_b_loc() #11, !dbg !9194
  %4 = load i16*, i16** %3, align 8, !dbg !9194
  %5 = load i8, i8* %2, align 1, !dbg !9194
  %6 = zext i8 %5 to i32, !dbg !9194
  %7 = sext i32 %6 to i64, !dbg !9194
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !9194
  %9 = load i16, i16* %8, align 2, !dbg !9194
  %10 = zext i16 %9 to i32, !dbg !9194
  %11 = and i32 %10, 2048, !dbg !9194
  %12 = icmp ne i32 %11, 0, !dbg !9194
  ret i1 %12, !dbg !9195
}

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #2

; Function Attrs: nounwind
declare i64 @strtoull(i8*, i8**, i32) #2

; Function Attrs: nounwind
declare i64 @strtoll(i8*, i8**, i32) #2

; Function Attrs: nounwind
declare double @strtod(i8*, i8**) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_memdup.111(i8*, i64) #0 !dbg !9196 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9197, metadata !DIExpression()), !dbg !9198
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9201, metadata !DIExpression()), !dbg !9202
  %7 = load i64, i64* %5, align 8, !dbg !9203
  %8 = call noalias i8* @malloc(i64 %7) #7, !dbg !9205
  store i8* %8, i8** %6, align 8, !dbg !9206
  %9 = icmp eq i8* %8, null, !dbg !9207
  br i1 %9, label %10, label %11, !dbg !9208

; <label>:10:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !9209
  br label %15, !dbg !9209

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %6, align 8, !dbg !9210
  %13 = load i8*, i8** %4, align 8, !dbg !9211
  %14 = load i64, i64* %5, align 8, !dbg !9212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 %14, i1 false), !dbg !9213
  store i8* %12, i8** %3, align 8, !dbg !9214
  br label %15, !dbg !9214

; <label>:15:                                     ; preds = %11, %10
  %16 = load i8*, i8** %3, align 8, !dbg !9215
  ret i8* %16, !dbg !9215
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_getopt_help_cb(%struct.HXoptcb*) #0 !dbg !9216 {
  %2 = alloca %struct.HXoptcb*, align 8
  store %struct.HXoptcb* %0, %struct.HXoptcb** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoptcb** %2, metadata !9217, metadata !DIExpression()), !dbg !9218
  %3 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !9219
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9220
  call void @HX_getopt_help(%struct.HXoptcb* %3, %struct._IO_FILE* %4), !dbg !9221
  call void @exit(i32 0) #12, !dbg !9222
  unreachable, !dbg !9222
                                                  ; No predecessors!
  ret void, !dbg !9223
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #8

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_getopt_usage_cb(%struct.HXoptcb*) #0 !dbg !9224 {
  %2 = alloca %struct.HXoptcb*, align 8
  store %struct.HXoptcb* %0, %struct.HXoptcb** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoptcb** %2, metadata !9225, metadata !DIExpression()), !dbg !9226
  %3 = load %struct.HXoptcb*, %struct.HXoptcb** %2, align 8, !dbg !9227
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9228
  call void @HX_getopt_usage(%struct.HXoptcb* %3, %struct._IO_FILE* %4), !dbg !9229
  call void @exit(i32 0) #12, !dbg !9230
  unreachable, !dbg !9230
                                                  ; No predecessors!
  ret void, !dbg !9231
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_shconfig(i8*, %struct.HXoption*) #0 !dbg !9232 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.HXoption*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca %union.anon, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9235, metadata !DIExpression()), !dbg !9236
  store %struct.HXoption* %1, %struct.HXoption** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %5, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9239, metadata !DIExpression()), !dbg !9240
  store i8* null, i8** %6, align 8, !dbg !9240
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !9241, metadata !DIExpression()), !dbg !9242
  %9 = load i8*, i8** %4, align 8, !dbg !9243
  %10 = call %struct._IO_FILE* @fopen64(i8* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15.112, i32 0, i32 0)), !dbg !9245
  store %struct._IO_FILE* %10, %struct._IO_FILE** %7, align 8, !dbg !9246
  %11 = icmp eq %struct._IO_FILE* %10, null, !dbg !9247
  br i1 %11, label %12, label %16, !dbg !9248

; <label>:12:                                     ; preds = %2
  %13 = call i32* @__errno_location() #11, !dbg !9249
  %14 = load i32, i32* %13, align 4, !dbg !9249
  %15 = sub nsw i32 0, %14, !dbg !9250
  store i32 %15, i32* %3, align 4, !dbg !9251
  br label %32, !dbg !9251

; <label>:16:                                     ; preds = %2
  br label %17, !dbg !9252

; <label>:17:                                     ; preds = %21, %16
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !9253
  %19 = call i8* @HX_getl(i8** %6, %struct._IO_FILE* %18), !dbg !9254
  %20 = icmp ne i8* %19, null, !dbg !9255
  br i1 %20, label %21, label %28, !dbg !9252

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !9256
  %23 = load %struct.HXoption*, %struct.HXoption** %5, align 8, !dbg !9256
  %24 = bitcast %struct.HXoption* %23 to i8*, !dbg !9256
  store i8* %24, i8** %22, align 8, !dbg !9256
  %25 = getelementptr inbounds %union.anon, %union.anon* %8, i32 0, i32 0, !dbg !9256
  %26 = load i8*, i8** %25, align 8, !dbg !9256
  %27 = load i8*, i8** %6, align 8, !dbg !9257
  call void @HX_shconf_break(i8* %26, i8* %27, void (i8*, i8*, i8*)* @HX_shconf_assign), !dbg !9258
  br label %17, !dbg !9252, !llvm.loop !9259

; <label>:28:                                     ; preds = %17
  %29 = load i8*, i8** %6, align 8, !dbg !9261
  call void @HXmc_free(i8* %29), !dbg !9262
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !9263
  %31 = call i32 @fclose(%struct._IO_FILE* %30), !dbg !9264
  store i32 1, i32* %3, align 4, !dbg !9265
  br label %32, !dbg !9265

; <label>:32:                                     ; preds = %28, %12
  %33 = load i32, i32* %3, align 4, !dbg !9266
  ret i32 %33, !dbg !9266
}

declare %struct._IO_FILE* @fopen64(i8*, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HX_shconf_assign(i8*, i8*, i8*) #0 !dbg !9267 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.HXoptcb, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9270, metadata !DIExpression()), !dbg !9271
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9272, metadata !DIExpression()), !dbg !9273
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9274, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.declare(metadata %struct.HXoptcb* %7, metadata !9276, metadata !DIExpression()), !dbg !9277
  %8 = bitcast %struct.HXoptcb* %7 to i8*, !dbg !9277
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 56, i1 false), !dbg !9277
  %9 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %7, i32 0, i32 1, !dbg !9278
  %10 = load i8*, i8** %4, align 8, !dbg !9279
  %11 = bitcast i8* %10 to %struct.HXoption*, !dbg !9279
  store %struct.HXoption* %11, %struct.HXoption** %9, align 8, !dbg !9278
  %12 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %7, i32 0, i32 6, !dbg !9278
  store i8 0, i8* %12, align 8, !dbg !9278
  %13 = load i8*, i8** %4, align 8, !dbg !9280
  %14 = bitcast i8* %13 to %struct.HXoption*, !dbg !9280
  %15 = load i8*, i8** %5, align 8, !dbg !9282
  %16 = call %struct.HXoption* @lookup_long(%struct.HXoption* %14, i8* %15), !dbg !9283
  %17 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %7, i32 0, i32 2, !dbg !9284
  store %struct.HXoption* %16, %struct.HXoption** %17, align 8, !dbg !9285
  %18 = icmp eq %struct.HXoption* %16, null, !dbg !9286
  br i1 %18, label %19, label %20, !dbg !9287

; <label>:19:                                     ; preds = %3
  br label %25, !dbg !9288

; <label>:20:                                     ; preds = %3
  %21 = load i8*, i8** %5, align 8, !dbg !9289
  %22 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %7, i32 0, i32 5, !dbg !9290
  store i8* %21, i8** %22, align 8, !dbg !9291
  %23 = load i8*, i8** %6, align 8, !dbg !9292
  %24 = getelementptr inbounds %struct.HXoptcb, %struct.HXoptcb* %7, i32 0, i32 3, !dbg !9293
  store i8* %23, i8** %24, align 8, !dbg !9294
  call void @do_assign(%struct.HXoptcb* %7), !dbg !9295
  br label %25, !dbg !9296

; <label>:25:                                     ; preds = %20, %19
  ret void, !dbg !9296
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HX_shconf_break(i8*, i8*, void (i8*, i8*, i8*)*) #0 !dbg !9297 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca void (i8*, i8*, i8*)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9301, metadata !DIExpression()), !dbg !9302
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9303, metadata !DIExpression()), !dbg !9304
  store void (i8*, i8*, i8*)* %2, void (i8*, i8*, i8*)** %6, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %6, metadata !9305, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9307, metadata !DIExpression()), !dbg !9308
  %10 = load i8*, i8** %5, align 8, !dbg !9309
  store i8* %10, i8** %7, align 8, !dbg !9308
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9310, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata i8** %9, metadata !9312, metadata !DIExpression()), !dbg !9313
  %11 = load i8*, i8** %5, align 8, !dbg !9314
  %12 = call i8* @HX_chomp(i8* %11), !dbg !9315
  br label %13, !dbg !9316

; <label>:13:                                     ; preds = %74, %3
  %14 = load i8*, i8** %7, align 8, !dbg !9317
  %15 = icmp ne i8* %14, null, !dbg !9318
  br i1 %15, label %16, label %84, !dbg !9316

; <label>:16:                                     ; preds = %13
  br label %17, !dbg !9319

; <label>:17:                                     ; preds = %28, %16
  %18 = load i8*, i8** %7, align 8, !dbg !9321
  %19 = load i8, i8* %18, align 1, !dbg !9322
  %20 = call zeroext i1 @HX_isspace.113(i8 zeroext %19), !dbg !9323
  br i1 %20, label %26, label %21, !dbg !9324

; <label>:21:                                     ; preds = %17
  %22 = load i8*, i8** %7, align 8, !dbg !9325
  %23 = load i8, i8* %22, align 1, !dbg !9326
  %24 = sext i8 %23 to i32, !dbg !9326
  %25 = icmp eq i32 %24, 59, !dbg !9327
  br label %26, !dbg !9324

; <label>:26:                                     ; preds = %21, %17
  %27 = phi i1 [ true, %17 ], [ %25, %21 ]
  br i1 %27, label %28, label %31, !dbg !9319

; <label>:28:                                     ; preds = %26
  %29 = load i8*, i8** %7, align 8, !dbg !9328
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !9328
  store i8* %30, i8** %7, align 8, !dbg !9328
  br label %17, !dbg !9319, !llvm.loop !9329

; <label>:31:                                     ; preds = %26
  %32 = load i8*, i8** %7, align 8, !dbg !9331
  %33 = load i8, i8* %32, align 1, !dbg !9333
  %34 = sext i8 %33 to i32, !dbg !9333
  %35 = icmp eq i32 %34, 35, !dbg !9334
  br i1 %35, label %41, label %36, !dbg !9335

; <label>:36:                                     ; preds = %31
  %37 = load i8*, i8** %7, align 8, !dbg !9336
  %38 = load i8, i8* %37, align 1, !dbg !9337
  %39 = sext i8 %38 to i32, !dbg !9337
  %40 = icmp eq i32 %39, 0, !dbg !9338
  br i1 %40, label %41, label %42, !dbg !9339

; <label>:41:                                     ; preds = %36, %31
  br label %84, !dbg !9340

; <label>:42:                                     ; preds = %36
  %43 = load i8*, i8** %7, align 8, !dbg !9341
  %44 = load i8, i8* %43, align 1, !dbg !9343
  %45 = call zeroext i1 @HX_isalpha(i8 zeroext %44), !dbg !9344
  br i1 %45, label %52, label %46, !dbg !9345

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %7, align 8, !dbg !9346
  %48 = load i8, i8* %47, align 1, !dbg !9347
  %49 = sext i8 %48 to i32, !dbg !9347
  %50 = icmp ne i32 %49, 95, !dbg !9348
  br i1 %50, label %51, label %52, !dbg !9349

; <label>:51:                                     ; preds = %46
  br label %84, !dbg !9350

; <label>:52:                                     ; preds = %46, %42
  %53 = load i8*, i8** %7, align 8, !dbg !9351
  store i8* %53, i8** %8, align 8, !dbg !9352
  br label %54, !dbg !9353

; <label>:54:                                     ; preds = %65, %52
  %55 = load i8*, i8** %7, align 8, !dbg !9354
  %56 = load i8, i8* %55, align 1, !dbg !9355
  %57 = call zeroext i1 @HX_isalnum(i8 zeroext %56), !dbg !9356
  br i1 %57, label %63, label %58, !dbg !9357

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %7, align 8, !dbg !9358
  %60 = load i8, i8* %59, align 1, !dbg !9359
  %61 = sext i8 %60 to i32, !dbg !9359
  %62 = icmp eq i32 %61, 95, !dbg !9360
  br label %63, !dbg !9357

; <label>:63:                                     ; preds = %58, %54
  %64 = phi i1 [ true, %54 ], [ %62, %58 ]
  br i1 %64, label %65, label %68, !dbg !9353

; <label>:65:                                     ; preds = %63
  %66 = load i8*, i8** %7, align 8, !dbg !9361
  %67 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !9361
  store i8* %67, i8** %7, align 8, !dbg !9361
  br label %54, !dbg !9353, !llvm.loop !9362

; <label>:68:                                     ; preds = %63
  %69 = load i8*, i8** %7, align 8, !dbg !9364
  %70 = load i8, i8* %69, align 1, !dbg !9366
  %71 = sext i8 %70 to i32, !dbg !9366
  %72 = icmp ne i32 %71, 61, !dbg !9367
  br i1 %72, label %73, label %74, !dbg !9368

; <label>:73:                                     ; preds = %68
  br label %84, !dbg !9369

; <label>:74:                                     ; preds = %68
  %75 = load i8*, i8** %7, align 8, !dbg !9370
  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !9370
  store i8* %76, i8** %7, align 8, !dbg !9370
  store i8 0, i8* %75, align 1, !dbg !9371
  %77 = load i8*, i8** %7, align 8, !dbg !9372
  store i8* %77, i8** %9, align 8, !dbg !9373
  %78 = load i8*, i8** %9, align 8, !dbg !9374
  %79 = call i8* @HXparse_dequote_int(i8* %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32.114, i32 0, i32 0)), !dbg !9375
  store i8* %79, i8** %7, align 8, !dbg !9376
  %80 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %6, align 8, !dbg !9377
  %81 = load i8*, i8** %4, align 8, !dbg !9378
  %82 = load i8*, i8** %8, align 8, !dbg !9379
  %83 = load i8*, i8** %9, align 8, !dbg !9380
  call void %80(i8* %81, i8* %82, i8* %83), !dbg !9381
  br label %13, !dbg !9316, !llvm.loop !9382

; <label>:84:                                     ; preds = %73, %51, %41, %13
  ret void, !dbg !9384
}

declare i32 @fclose(%struct._IO_FILE*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isspace.113(i8 zeroext) #0 !dbg !9385 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !9386, metadata !DIExpression()), !dbg !9387
  %3 = call i16** @__ctype_b_loc() #11, !dbg !9388
  %4 = load i16*, i16** %3, align 8, !dbg !9388
  %5 = load i8, i8* %2, align 1, !dbg !9388
  %6 = zext i8 %5 to i32, !dbg !9388
  %7 = sext i32 %6 to i64, !dbg !9388
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !9388
  %9 = load i16, i16* %8, align 2, !dbg !9388
  %10 = zext i16 %9 to i32, !dbg !9388
  %11 = and i32 %10, 8192, !dbg !9388
  %12 = icmp ne i32 %11, 0, !dbg !9388
  ret i1 %12, !dbg !9389
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isalpha(i8 zeroext) #0 !dbg !9390 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !9391, metadata !DIExpression()), !dbg !9392
  %3 = call i16** @__ctype_b_loc() #11, !dbg !9393
  %4 = load i16*, i16** %3, align 8, !dbg !9393
  %5 = load i8, i8* %2, align 1, !dbg !9393
  %6 = zext i8 %5 to i32, !dbg !9393
  %7 = sext i32 %6 to i64, !dbg !9393
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !9393
  %9 = load i16, i16* %8, align 2, !dbg !9393
  %10 = zext i16 %9 to i32, !dbg !9393
  %11 = and i32 %10, 1024, !dbg !9393
  %12 = icmp ne i32 %11, 0, !dbg !9393
  ret i1 %12, !dbg !9394
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isalnum(i8 zeroext) #0 !dbg !9395 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !9396, metadata !DIExpression()), !dbg !9397
  %3 = call i16** @__ctype_b_loc() #11, !dbg !9398
  %4 = load i16*, i16** %3, align 8, !dbg !9398
  %5 = load i8, i8* %2, align 1, !dbg !9398
  %6 = zext i8 %5 to i32, !dbg !9398
  %7 = sext i32 %6 to i64, !dbg !9398
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !9398
  %9 = load i16, i16* %8, align 2, !dbg !9398
  %10 = zext i16 %9 to i32, !dbg !9398
  %11 = and i32 %10, 8, !dbg !9398
  %12 = icmp ne i32 %11, 0, !dbg !9398
  ret i1 %12, !dbg !9399
}

; Function Attrs: noinline nounwind optnone uwtable
define %struct.HXmap* @HX_shconfig_map(i8*) #0 !dbg !9400 {
  %2 = alloca %struct.HXmap*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.HXmap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9408, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.declare(metadata %struct.HXmap** %4, metadata !9410, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9412, metadata !DIExpression()), !dbg !9413
  store i8* null, i8** %5, align 8, !dbg !9413
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !9414, metadata !DIExpression()), !dbg !9415
  %7 = call %struct.HXmap* @HXmap_init(i32 1, i32 -268435456), !dbg !9416
  store %struct.HXmap* %7, %struct.HXmap** %4, align 8, !dbg !9417
  %8 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !9418
  %9 = icmp eq %struct.HXmap* %8, null, !dbg !9420
  br i1 %9, label %10, label %11, !dbg !9421

; <label>:10:                                     ; preds = %1
  store %struct.HXmap* null, %struct.HXmap** %2, align 8, !dbg !9422
  br label %32, !dbg !9422

; <label>:11:                                     ; preds = %1
  %12 = load i8*, i8** %3, align 8, !dbg !9423
  %13 = call %struct._IO_FILE* @fopen64(i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15.112, i32 0, i32 0)), !dbg !9425
  store %struct._IO_FILE* %13, %struct._IO_FILE** %6, align 8, !dbg !9426
  %14 = icmp eq %struct._IO_FILE* %13, null, !dbg !9427
  br i1 %14, label %15, label %18, !dbg !9428

; <label>:15:                                     ; preds = %11
  %16 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !9429
  %17 = bitcast %struct.HXmap* %16 to i8*, !dbg !9429
  call void @free(i8* %17) #7, !dbg !9431
  store %struct.HXmap* null, %struct.HXmap** %2, align 8, !dbg !9432
  br label %32, !dbg !9432

; <label>:18:                                     ; preds = %11
  br label %19, !dbg !9433

; <label>:19:                                     ; preds = %23, %18
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !9434
  %21 = call i8* @HX_getl(i8** %5, %struct._IO_FILE* %20), !dbg !9435
  %22 = icmp ne i8* %21, null, !dbg !9436
  br i1 %22, label %23, label %27, !dbg !9433

; <label>:23:                                     ; preds = %19
  %24 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !9437
  %25 = bitcast %struct.HXmap* %24 to i8*, !dbg !9437
  %26 = load i8*, i8** %5, align 8, !dbg !9438
  call void @HX_shconf_break(i8* %25, i8* %26, void (i8*, i8*, i8*)* @HX_shconf_assignmp), !dbg !9439
  br label %19, !dbg !9433, !llvm.loop !9440

; <label>:27:                                     ; preds = %19
  %28 = load i8*, i8** %5, align 8, !dbg !9442
  call void @HXmc_free(i8* %28), !dbg !9443
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !9444
  %30 = call i32 @fclose(%struct._IO_FILE* %29), !dbg !9445
  %31 = load %struct.HXmap*, %struct.HXmap** %4, align 8, !dbg !9446
  store %struct.HXmap* %31, %struct.HXmap** %2, align 8, !dbg !9447
  br label %32, !dbg !9447

; <label>:32:                                     ; preds = %27, %15, %10
  %33 = load %struct.HXmap*, %struct.HXmap** %2, align 8, !dbg !9448
  ret %struct.HXmap* %33, !dbg !9448
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HX_shconf_assignmp(i8*, i8*, i8*) #0 !dbg !9449 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9450, metadata !DIExpression()), !dbg !9451
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9452, metadata !DIExpression()), !dbg !9453
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9454, metadata !DIExpression()), !dbg !9455
  %7 = load i8*, i8** %4, align 8, !dbg !9456
  %8 = bitcast i8* %7 to %struct.HXmap*, !dbg !9456
  %9 = load i8*, i8** %5, align 8, !dbg !9457
  %10 = load i8*, i8** %6, align 8, !dbg !9458
  %11 = call i32 @HXmap_add(%struct.HXmap* %8, i8* %9, i8* %10), !dbg !9459
  ret void, !dbg !9460
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_shconfig_pv(i8**, i8*, %struct.HXoption*, i32) #0 !dbg !9461 {
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.HXoption*, align 8
  %8 = alloca i32, align 4
  %9 = alloca [256 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8** %0, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !9464, metadata !DIExpression()), !dbg !9465
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9466, metadata !DIExpression()), !dbg !9467
  store %struct.HXoption* %2, %struct.HXoption** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %7, metadata !9468, metadata !DIExpression()), !dbg !9469
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9470, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.declare(metadata [256 x i8]* %9, metadata !9472, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9474, metadata !DIExpression()), !dbg !9475
  store i32 0, i32* %10, align 4, !dbg !9475
  br label %12, !dbg !9476

; <label>:12:                                     ; preds = %36, %4
  %13 = load i8**, i8*** %5, align 8, !dbg !9477
  %14 = load i8*, i8** %13, align 8, !dbg !9480
  %15 = icmp ne i8* %14, null, !dbg !9481
  br i1 %15, label %16, label %39, !dbg !9482

; <label>:16:                                     ; preds = %12
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9483, metadata !DIExpression()), !dbg !9485
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !9486
  %18 = load i8**, i8*** %5, align 8, !dbg !9487
  %19 = load i8*, i8** %18, align 8, !dbg !9488
  %20 = load i8*, i8** %6, align 8, !dbg !9489
  %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.115, i32 0, i32 0), i8* %19, i8* %20) #7, !dbg !9490
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !9491
  %23 = load %struct.HXoption*, %struct.HXoption** %7, align 8, !dbg !9492
  %24 = call i32 @HX_shconfig(i8* %22, %struct.HXoption* %23), !dbg !9493
  store i32 %24, i32* %11, align 4, !dbg !9494
  %25 = load i32, i32* %11, align 4, !dbg !9495
  %26 = icmp sgt i32 %25, 0, !dbg !9497
  br i1 %26, label %27, label %35, !dbg !9498

; <label>:27:                                     ; preds = %16
  %28 = load i32, i32* %10, align 4, !dbg !9499
  %29 = add nsw i32 %28, 1, !dbg !9499
  store i32 %29, i32* %10, align 4, !dbg !9499
  %30 = load i32, i32* %8, align 4, !dbg !9501
  %31 = and i32 %30, 1, !dbg !9503
  %32 = icmp ne i32 %31, 0, !dbg !9503
  br i1 %32, label %33, label %34, !dbg !9504

; <label>:33:                                     ; preds = %27
  br label %39, !dbg !9505

; <label>:34:                                     ; preds = %27
  br label %35, !dbg !9506

; <label>:35:                                     ; preds = %34, %16
  br label %36, !dbg !9507

; <label>:36:                                     ; preds = %35
  %37 = load i8**, i8*** %5, align 8, !dbg !9508
  %38 = getelementptr inbounds i8*, i8** %37, i32 1, !dbg !9508
  store i8** %38, i8*** %5, align 8, !dbg !9508
  br label %12, !dbg !9509, !llvm.loop !9510

; <label>:39:                                     ; preds = %33, %12
  %40 = load i32, i32* %10, align 4, !dbg !9512
  ret i32 %40, !dbg !9513
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_shconfig_free(%struct.HXoption*) #0 !dbg !9514 {
  %2 = alloca %struct.HXoption*, align 8
  %3 = alloca i8**, align 8
  store %struct.HXoption* %0, %struct.HXoption** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.HXoption** %2, metadata !9517, metadata !DIExpression()), !dbg !9518
  br label %4, !dbg !9519

; <label>:4:                                      ; preds = %29, %1
  %5 = load %struct.HXoption*, %struct.HXoption** %2, align 8, !dbg !9520
  %6 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %5, i32 0, i32 0, !dbg !9523
  %7 = load i8*, i8** %6, align 8, !dbg !9523
  %8 = icmp ne i8* %7, null, !dbg !9524
  br i1 %8, label %9, label %32, !dbg !9525

; <label>:9:                                      ; preds = %4
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !9526, metadata !DIExpression()), !dbg !9528
  %10 = load %struct.HXoption*, %struct.HXoption** %2, align 8, !dbg !9529
  %11 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %10, i32 0, i32 3, !dbg !9530
  %12 = load i8*, i8** %11, align 8, !dbg !9530
  %13 = bitcast i8* %12 to i8**, !dbg !9529
  store i8** %13, i8*** %3, align 8, !dbg !9528
  %14 = load %struct.HXoption*, %struct.HXoption** %2, align 8, !dbg !9531
  %15 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %14, i32 0, i32 2, !dbg !9533
  %16 = load i32, i32* %15, align 4, !dbg !9533
  %17 = icmp eq i32 %16, 17, !dbg !9534
  br i1 %17, label %18, label %28, !dbg !9535

; <label>:18:                                     ; preds = %9
  %19 = load i8**, i8*** %3, align 8, !dbg !9536
  %20 = icmp ne i8** %19, null, !dbg !9537
  br i1 %20, label %21, label %28, !dbg !9538

; <label>:21:                                     ; preds = %18
  %22 = load i8**, i8*** %3, align 8, !dbg !9539
  %23 = load i8*, i8** %22, align 8, !dbg !9540
  %24 = icmp ne i8* %23, null, !dbg !9541
  br i1 %24, label %25, label %28, !dbg !9542

; <label>:25:                                     ; preds = %21
  %26 = load i8**, i8*** %3, align 8, !dbg !9543
  %27 = load i8*, i8** %26, align 8, !dbg !9544
  call void @free(i8* %27) #7, !dbg !9545
  br label %28, !dbg !9545

; <label>:28:                                     ; preds = %25, %21, %18, %9
  br label %29, !dbg !9546

; <label>:29:                                     ; preds = %28
  %30 = load %struct.HXoption*, %struct.HXoption** %2, align 8, !dbg !9547
  %31 = getelementptr inbounds %struct.HXoption, %struct.HXoption* %30, i32 1, !dbg !9547
  store %struct.HXoption* %31, %struct.HXoption** %2, align 8, !dbg !9547
  br label %4, !dbg !9548, !llvm.loop !9549

; <label>:32:                                     ; preds = %4
  ret void, !dbg !9551
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXrand_init() #0 !dbg !9552 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9559, metadata !DIExpression()), !dbg !9560
  store i32 0, i32* %3, align 4, !dbg !9560
  %4 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0), i32 0), !dbg !9561
  store i32 %4, i32* %2, align 4, !dbg !9563
  %5 = icmp sge i32 %4, 0, !dbg !9564
  br i1 %5, label %6, label %13, !dbg !9565

; <label>:6:                                      ; preds = %0
  %7 = load i32, i32* %2, align 4, !dbg !9566
  %8 = bitcast i32* %1 to i8*, !dbg !9568
  %9 = call i64 @read(i32 %7, i8* %8, i64 4), !dbg !9569
  %10 = trunc i64 %9 to i32, !dbg !9569
  store i32 %10, i32* %3, align 4, !dbg !9570
  %11 = load i32, i32* %2, align 4, !dbg !9571
  %12 = call i32 @close(i32 %11), !dbg !9572
  br label %13, !dbg !9573

; <label>:13:                                     ; preds = %6, %0
  %14 = load i32, i32* %3, align 4, !dbg !9574
  %15 = sext i32 %14 to i64, !dbg !9574
  %16 = icmp ne i64 %15, 4, !dbg !9576
  br i1 %16, label %17, label %19, !dbg !9577

; <label>:17:                                     ; preds = %13
  %18 = call i32 @HXrand_obtain_seed(), !dbg !9578
  store i32 %18, i32* %1, align 4, !dbg !9579
  br label %19, !dbg !9580

; <label>:19:                                     ; preds = %17, %13
  %20 = load i32, i32* %1, align 4, !dbg !9581
  call void @srand(i32 %20) #7, !dbg !9582
  ret void, !dbg !9583
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HX_ident() #0 !dbg !9584 {
  %1 = call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.116, i32 0, i32 0)) #7, !dbg !9585
  %2 = icmp ne i8* %1, null, !dbg !9587
  br i1 %2, label %3, label %6, !dbg !9588

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9589
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.117, i32 0, i32 0)), !dbg !9590
  br label %6, !dbg !9590

; <label>:6:                                      ; preds = %3, %0
  ret void, !dbg !9591
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXrand_obtain_seed() #0 !dbg !9592 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9595, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.declare(metadata %struct.timespec* %2, metadata !9597, metadata !DIExpression()), !dbg !9604
  %3 = call i32 @gettimeofday(%struct.timespec* %2, %struct.HXmap* null) #7, !dbg !9605
  %4 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !9606
  %5 = load i64, i64* %4, align 8, !dbg !9606
  %6 = trunc i64 %5 to i32, !dbg !9607
  store i32 %6, i32* %1, align 4, !dbg !9608
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1, !dbg !9609
  %8 = load i64, i64* %7, align 8, !dbg !9609
  %9 = shl i64 %8, 16, !dbg !9610
  %10 = load i32, i32* %1, align 4, !dbg !9611
  %11 = zext i32 %10 to i64, !dbg !9611
  %12 = xor i64 %11, %9, !dbg !9611
  %13 = trunc i64 %12 to i32, !dbg !9611
  store i32 %13, i32* %1, align 4, !dbg !9611
  %14 = call i32 @getpid() #7, !dbg !9612
  %15 = shl i32 %14, 9, !dbg !9613
  %16 = load i32, i32* %1, align 4, !dbg !9614
  %17 = xor i32 %16, %15, !dbg !9614
  store i32 %17, i32* %1, align 4, !dbg !9614
  %18 = call i32 @getppid() #7, !dbg !9615
  %19 = shl i32 %18, 1, !dbg !9616
  %20 = load i32, i32* %1, align 4, !dbg !9617
  %21 = xor i32 %20, %19, !dbg !9617
  store i32 %21, i32* %1, align 4, !dbg !9617
  %22 = call i32 @geteuid() #7, !dbg !9618
  %23 = shl i32 %22, 13, !dbg !9619
  %24 = load i32, i32* %1, align 4, !dbg !9620
  %25 = xor i32 %24, %23, !dbg !9620
  store i32 %25, i32* %1, align 4, !dbg !9620
  %26 = call i32 @getegid() #7, !dbg !9621
  %27 = shl i32 %26, 5, !dbg !9622
  %28 = load i32, i32* %1, align 4, !dbg !9623
  %29 = xor i32 %28, %27, !dbg !9623
  store i32 %29, i32* %1, align 4, !dbg !9623
  %30 = load i32, i32* %1, align 4, !dbg !9624
  ret i32 %30, !dbg !9625
}

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timespec*, %struct.HXmap*) #2

; Function Attrs: nounwind
declare i32 @getpid() #2

; Function Attrs: nounwind
declare i32 @getppid() #2

; Function Attrs: nounwind
declare i32 @geteuid() #2

; Function Attrs: nounwind
declare i32 @getegid() #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_init() #0 !dbg !9626 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @HX_init_lock) #7, !dbg !9629
  %2 = load i32, i32* @HX_use_count, align 4, !dbg !9630
  %3 = icmp eq i32 %2, 0, !dbg !9632
  br i1 %3, label %4, label %5, !dbg !9633

; <label>:4:                                      ; preds = %0
  call void @HXrand_init(), !dbg !9634
  br label %5, !dbg !9634

; <label>:5:                                      ; preds = %4, %0
  %6 = load i32, i32* @HX_use_count, align 4, !dbg !9635
  %7 = add i32 %6, 1, !dbg !9635
  store i32 %7, i32* @HX_use_count, align 4, !dbg !9635
  %8 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @HX_init_lock) #7, !dbg !9636
  ret i32 1, !dbg !9637
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_exit() #0 !dbg !9638 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @HX_init_lock) #7, !dbg !9639
  %2 = load i32, i32* @HX_use_count, align 4, !dbg !9640
  %3 = icmp eq i32 %2, 0, !dbg !9642
  br i1 %3, label %4, label %7, !dbg !9643

; <label>:4:                                      ; preds = %0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9644
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.HX_exit, i32 0, i32 0)), !dbg !9645
  br label %10, !dbg !9645

; <label>:7:                                      ; preds = %0
  %8 = load i32, i32* @HX_use_count, align 4, !dbg !9646
  %9 = add i32 %8, -1, !dbg !9646
  store i32 %9, i32* @HX_use_count, align 4, !dbg !9646
  br label %10

; <label>:10:                                     ; preds = %7, %4
  %11 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @HX_init_lock) #7, !dbg !9647
  ret void, !dbg !9648
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_rand() #0 !dbg !9649 {
  %1 = call i32 @rand() #7, !dbg !9650
  ret i32 %1, !dbg !9651
}

; Function Attrs: nounwind
declare i32 @rand() #2

; Function Attrs: noinline nounwind optnone uwtable
define double @HX_drand(double, double) #0 !dbg !9652 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca %union.anon.38, align 8
  store double %0, double* %3, align 8
  call void @llvm.dbg.declare(metadata double* %3, metadata !9655, metadata !DIExpression()), !dbg !9656
  store double %1, double* %4, align 8
  call void @llvm.dbg.declare(metadata double* %4, metadata !9657, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata double* %5, metadata !9659, metadata !DIExpression()), !dbg !9660
  %7 = load double, double* %4, align 8, !dbg !9661
  %8 = load double, double* %3, align 8, !dbg !9662
  %9 = fsub double %7, %8, !dbg !9663
  store double %9, double* %5, align 8, !dbg !9660
  %10 = getelementptr inbounds %union.anon.38, %union.anon.38* %6, i32 0, i32 0, !dbg !9664
  %11 = call i32 @rand() #7, !dbg !9664
  %12 = sitofp i32 %11 to double, !dbg !9664
  store double %12, double* %10, align 8, !dbg !9664
  %13 = getelementptr inbounds %union.anon.38, %union.anon.38* %6, i32 0, i32 0, !dbg !9664
  %14 = load double, double* %13, align 8, !dbg !9664
  %15 = load double, double* %5, align 8, !dbg !9665
  %16 = fmul double %14, %15, !dbg !9666
  %17 = fdiv double %16, 0x41DFFFFFFFC00000, !dbg !9667
  %18 = load double, double* %3, align 8, !dbg !9668
  %19 = fadd double %17, %18, !dbg !9669
  ret double %19, !dbg !9670
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_irand(i32, i32) #0 !dbg !9671 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.anon.18, align 4
  %8 = alloca %union.anon.38, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9674, metadata !DIExpression()), !dbg !9675
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9676, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9678, metadata !DIExpression()), !dbg !9679
  %9 = load i32, i32* %5, align 4, !dbg !9680
  %10 = load i32, i32* %4, align 4, !dbg !9681
  %11 = sub i32 %9, %10, !dbg !9682
  store i32 %11, i32* %6, align 4, !dbg !9679
  %12 = load i32, i32* %6, align 4, !dbg !9683
  %13 = icmp ule i32 %12, 2147483647, !dbg !9685
  br i1 %13, label %14, label %20, !dbg !9686

; <label>:14:                                     ; preds = %2
  %15 = call i32 @HX_rand(), !dbg !9687
  %16 = load i32, i32* %6, align 4, !dbg !9688
  %17 = urem i32 %15, %16, !dbg !9689
  %18 = load i32, i32* %4, align 4, !dbg !9690
  %19 = add i32 %17, %18, !dbg !9691
  store i32 %19, i32* %3, align 4, !dbg !9692
  br label %36, !dbg !9692

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %7, i32 0, i32 0, !dbg !9693
  %22 = getelementptr inbounds %union.anon.38, %union.anon.38* %8, i32 0, i32 0, !dbg !9693
  %23 = call i32 @rand() #7, !dbg !9693
  %24 = sitofp i32 %23 to double, !dbg !9693
  store double %24, double* %22, align 8, !dbg !9693
  %25 = getelementptr inbounds %union.anon.38, %union.anon.38* %8, i32 0, i32 0, !dbg !9693
  %26 = load double, double* %25, align 8, !dbg !9693
  %27 = load i32, i32* %6, align 4, !dbg !9693
  %28 = uitofp i32 %27 to double, !dbg !9693
  %29 = fmul double %26, %28, !dbg !9693
  %30 = fdiv double %29, 0x41DFFFFFFFC00000, !dbg !9693
  %31 = fptoui double %30 to i32, !dbg !9693
  store i32 %31, i32* %21, align 4, !dbg !9693
  %32 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %7, i32 0, i32 0, !dbg !9693
  %33 = load i32, i32* %32, align 4, !dbg !9693
  %34 = load i32, i32* %4, align 4, !dbg !9694
  %35 = add i32 %33, %34, !dbg !9695
  store i32 %35, i32* %3, align 4, !dbg !9696
  br label %36, !dbg !9696

; <label>:36:                                     ; preds = %20, %14
  %37 = load i32, i32* %3, align 4, !dbg !9697
  ret i32 %37, !dbg !9697
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_basename(i8*) #0 !dbg !9698 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9699, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9701, metadata !DIExpression()), !dbg !9702
  %8 = load i8*, i8** %3, align 8, !dbg !9703
  %9 = load i8*, i8** %3, align 8, !dbg !9705
  %10 = call i64 @strlen(i8* %9) #10, !dbg !9706
  %11 = getelementptr inbounds i8, i8* %8, i64 %10, !dbg !9707
  %12 = getelementptr inbounds i8, i8* %11, i64 -1, !dbg !9708
  store i8* %12, i8** %4, align 8, !dbg !9709
  br label %13, !dbg !9710

; <label>:13:                                     ; preds = %25, %1
  %14 = load i8*, i8** %4, align 8, !dbg !9711
  %15 = load i8*, i8** %3, align 8, !dbg !9713
  %16 = icmp uge i8* %14, %15, !dbg !9714
  br i1 %16, label %17, label %22, !dbg !9715

; <label>:17:                                     ; preds = %13
  %18 = load i8*, i8** %4, align 8, !dbg !9716
  %19 = load i8, i8* %18, align 1, !dbg !9717
  %20 = sext i8 %19 to i32, !dbg !9717
  %21 = icmp eq i32 %20, 47, !dbg !9718
  br label %22

; <label>:22:                                     ; preds = %17, %13
  %23 = phi i1 [ false, %13 ], [ %21, %17 ], !dbg !9719
  br i1 %23, label %24, label %28, !dbg !9720

; <label>:24:                                     ; preds = %22
  br label %25, !dbg !9720

; <label>:25:                                     ; preds = %24
  %26 = load i8*, i8** %4, align 8, !dbg !9721
  %27 = getelementptr inbounds i8, i8* %26, i32 -1, !dbg !9721
  store i8* %27, i8** %4, align 8, !dbg !9721
  br label %13, !dbg !9722, !llvm.loop !9723

; <label>:28:                                     ; preds = %22
  %29 = load i8*, i8** %4, align 8, !dbg !9725
  %30 = load i8*, i8** %3, align 8, !dbg !9727
  %31 = icmp ult i8* %29, %30, !dbg !9728
  br i1 %31, label %32, label %39, !dbg !9729

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %3, align 8, !dbg !9730
  %34 = load i8*, i8** %3, align 8, !dbg !9730
  %35 = call i64 @strlen(i8* %34) #10, !dbg !9730
  %36 = getelementptr inbounds i8, i8* %33, i64 %35, !dbg !9730
  %37 = getelementptr inbounds i8, i8* %36, i64 -1, !dbg !9730
  store i8* %37, i8** %5, align 8, !dbg !9730
  %38 = load i8*, i8** %5, align 8, !dbg !9730
  store i8* %38, i8** %2, align 8, !dbg !9732
  br label %51, !dbg !9732

; <label>:39:                                     ; preds = %28
  %40 = load i8*, i8** %3, align 8, !dbg !9733
  %41 = load i8*, i8** %4, align 8, !dbg !9735
  %42 = call i8* @HX_strbchr(i8* %40, i8* %41, i8 signext 47), !dbg !9736
  store i8* %42, i8** %4, align 8, !dbg !9737
  %43 = icmp ne i8* %42, null, !dbg !9738
  br i1 %43, label %44, label %48, !dbg !9739

; <label>:44:                                     ; preds = %39
  %45 = load i8*, i8** %4, align 8, !dbg !9740
  %46 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !9740
  store i8* %46, i8** %6, align 8, !dbg !9740
  %47 = load i8*, i8** %6, align 8, !dbg !9740
  store i8* %47, i8** %2, align 8, !dbg !9742
  br label %51, !dbg !9742

; <label>:48:                                     ; preds = %39
  %49 = load i8*, i8** %3, align 8, !dbg !9743
  store i8* %49, i8** %7, align 8, !dbg !9743
  %50 = load i8*, i8** %7, align 8, !dbg !9743
  store i8* %50, i8** %2, align 8, !dbg !9745
  br label %51, !dbg !9745

; <label>:51:                                     ; preds = %48, %44, %32
  %52 = load i8*, i8** %2, align 8, !dbg !9746
  ret i8* %52, !dbg !9746
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strbchr(i8*, i8*, i8 signext) #0 !dbg !9747 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9750, metadata !DIExpression()), !dbg !9751
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9752, metadata !DIExpression()), !dbg !9753
  store i8 %2, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !9754, metadata !DIExpression()), !dbg !9755
  br label %9, !dbg !9756

; <label>:9:                                      ; preds = %25, %3
  %10 = load i8*, i8** %6, align 8, !dbg !9757
  %11 = load i8*, i8** %5, align 8, !dbg !9758
  %12 = icmp uge i8* %10, %11, !dbg !9759
  br i1 %12, label %13, label %26, !dbg !9756

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %6, align 8, !dbg !9760
  %15 = getelementptr inbounds i8, i8* %14, i32 -1, !dbg !9760
  store i8* %15, i8** %6, align 8, !dbg !9760
  %16 = load i8, i8* %14, align 1, !dbg !9762
  %17 = sext i8 %16 to i32, !dbg !9762
  %18 = load i8, i8* %7, align 1, !dbg !9763
  %19 = sext i8 %18 to i32, !dbg !9763
  %20 = icmp eq i32 %17, %19, !dbg !9764
  br i1 %20, label %21, label %25, !dbg !9765

; <label>:21:                                     ; preds = %13
  %22 = load i8*, i8** %6, align 8, !dbg !9766
  %23 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !9766
  store i8* %23, i8** %6, align 8, !dbg !9766
  store i8* %23, i8** %8, align 8, !dbg !9766
  %24 = load i8*, i8** %8, align 8, !dbg !9766
  store i8* %24, i8** %4, align 8, !dbg !9768
  br label %27, !dbg !9768

; <label>:25:                                     ; preds = %13
  br label %9, !dbg !9756, !llvm.loop !9769

; <label>:26:                                     ; preds = %9
  store i8* null, i8** %4, align 8, !dbg !9771
  br label %27, !dbg !9771

; <label>:27:                                     ; preds = %26, %21
  %28 = load i8*, i8** %4, align 8, !dbg !9772
  ret i8* %28, !dbg !9772
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_basename_exact(i8*) #0 !dbg !9773 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9774, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9776, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9778, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9782, metadata !DIExpression()), !dbg !9783
  %8 = load i8*, i8** %3, align 8, !dbg !9784
  %9 = load i8, i8* %8, align 1, !dbg !9786
  %10 = sext i8 %9 to i32, !dbg !9786
  %11 = icmp eq i32 %10, 0, !dbg !9787
  br i1 %11, label %12, label %14, !dbg !9788

; <label>:12:                                     ; preds = %1
  %13 = call i8* @HX_strdup.125(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i32 0, i32 0)), !dbg !9789
  store i8* %13, i8** %2, align 8, !dbg !9790
  br label %85, !dbg !9790

; <label>:14:                                     ; preds = %1
  %15 = load i8*, i8** %3, align 8, !dbg !9791
  %16 = load i8*, i8** %3, align 8, !dbg !9793
  %17 = call i64 @strlen(i8* %16) #10, !dbg !9794
  %18 = getelementptr inbounds i8, i8* %15, i64 %17, !dbg !9795
  %19 = getelementptr inbounds i8, i8* %18, i64 -1, !dbg !9796
  store i8* %19, i8** %5, align 8, !dbg !9797
  br label %20, !dbg !9798

; <label>:20:                                     ; preds = %32, %14
  %21 = load i8*, i8** %5, align 8, !dbg !9799
  %22 = load i8*, i8** %3, align 8, !dbg !9801
  %23 = icmp uge i8* %21, %22, !dbg !9802
  br i1 %23, label %24, label %29, !dbg !9803

; <label>:24:                                     ; preds = %20
  %25 = load i8*, i8** %5, align 8, !dbg !9804
  %26 = load i8, i8* %25, align 1, !dbg !9805
  %27 = sext i8 %26 to i32, !dbg !9805
  %28 = icmp eq i32 %27, 47, !dbg !9806
  br label %29

; <label>:29:                                     ; preds = %24, %20
  %30 = phi i1 [ false, %20 ], [ %28, %24 ], !dbg !9807
  br i1 %30, label %31, label %35, !dbg !9808

; <label>:31:                                     ; preds = %29
  br label %32, !dbg !9808

; <label>:32:                                     ; preds = %31
  %33 = load i8*, i8** %5, align 8, !dbg !9809
  %34 = getelementptr inbounds i8, i8* %33, i32 -1, !dbg !9809
  store i8* %34, i8** %5, align 8, !dbg !9809
  br label %20, !dbg !9810, !llvm.loop !9811

; <label>:35:                                     ; preds = %29
  %36 = load i8*, i8** %5, align 8, !dbg !9813
  %37 = load i8*, i8** %3, align 8, !dbg !9815
  %38 = icmp ult i8* %36, %37, !dbg !9816
  br i1 %38, label %39, label %41, !dbg !9817

; <label>:39:                                     ; preds = %35
  %40 = call i8* @HX_strdup.125(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)), !dbg !9818
  store i8* %40, i8** %2, align 8, !dbg !9819
  br label %85, !dbg !9819

; <label>:41:                                     ; preds = %35
  %42 = load i8*, i8** %3, align 8, !dbg !9820
  %43 = load i8*, i8** %5, align 8, !dbg !9821
  %44 = call i8* @HX_strbchr(i8* %42, i8* %43, i8 signext 47), !dbg !9822
  store i8* %44, i8** %4, align 8, !dbg !9823
  %45 = load i8*, i8** %4, align 8, !dbg !9824
  %46 = icmp eq i8* %45, null, !dbg !9826
  br i1 %46, label %47, label %60, !dbg !9827

; <label>:47:                                     ; preds = %41
  %48 = load i8*, i8** %5, align 8, !dbg !9828
  %49 = load i8*, i8** %3, align 8, !dbg !9830
  %50 = ptrtoint i8* %48 to i64, !dbg !9831
  %51 = ptrtoint i8* %49 to i64, !dbg !9831
  %52 = sub i64 %50, %51, !dbg !9831
  %53 = add nsw i64 %52, 1, !dbg !9832
  %54 = trunc i64 %53 to i32, !dbg !9828
  store i32 %54, i32* %7, align 4, !dbg !9833
  %55 = load i8*, i8** %3, align 8, !dbg !9834
  %56 = load i32, i32* %7, align 4, !dbg !9835
  %57 = add nsw i32 %56, 1, !dbg !9836
  %58 = sext i32 %57 to i64, !dbg !9835
  %59 = call i8* @HX_memdup.127(i8* %55, i64 %58), !dbg !9837
  store i8* %59, i8** %6, align 8, !dbg !9838
  br label %75, !dbg !9839

; <label>:60:                                     ; preds = %41
  %61 = load i8*, i8** %4, align 8, !dbg !9840
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !9840
  store i8* %62, i8** %4, align 8, !dbg !9840
  %63 = load i8*, i8** %5, align 8, !dbg !9842
  %64 = load i8*, i8** %4, align 8, !dbg !9843
  %65 = ptrtoint i8* %63 to i64, !dbg !9844
  %66 = ptrtoint i8* %64 to i64, !dbg !9844
  %67 = sub i64 %65, %66, !dbg !9844
  %68 = add nsw i64 %67, 1, !dbg !9845
  %69 = trunc i64 %68 to i32, !dbg !9842
  store i32 %69, i32* %7, align 4, !dbg !9846
  %70 = load i8*, i8** %4, align 8, !dbg !9847
  %71 = load i32, i32* %7, align 4, !dbg !9848
  %72 = add nsw i32 %71, 1, !dbg !9849
  %73 = sext i32 %72 to i64, !dbg !9848
  %74 = call i8* @HX_memdup.127(i8* %70, i64 %73), !dbg !9850
  store i8* %74, i8** %6, align 8, !dbg !9851
  br label %75

; <label>:75:                                     ; preds = %60, %47
  %76 = load i8*, i8** %6, align 8, !dbg !9852
  %77 = icmp eq i8* %76, null, !dbg !9854
  br i1 %77, label %78, label %79, !dbg !9855

; <label>:78:                                     ; preds = %75
  store i8* null, i8** %2, align 8, !dbg !9856
  br label %85, !dbg !9856

; <label>:79:                                     ; preds = %75
  %80 = load i8*, i8** %6, align 8, !dbg !9857
  %81 = load i32, i32* %7, align 4, !dbg !9858
  %82 = sext i32 %81 to i64, !dbg !9857
  %83 = getelementptr inbounds i8, i8* %80, i64 %82, !dbg !9857
  store i8 0, i8* %83, align 1, !dbg !9859
  %84 = load i8*, i8** %6, align 8, !dbg !9860
  store i8* %84, i8** %2, align 8, !dbg !9861
  br label %85, !dbg !9861

; <label>:85:                                     ; preds = %79, %78, %39, %12
  %86 = load i8*, i8** %2, align 8, !dbg !9862
  ret i8* %86, !dbg !9862
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strdup.125(i8*) #0 !dbg !9863 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9864, metadata !DIExpression()), !dbg !9865
  %4 = load i8*, i8** %3, align 8, !dbg !9866
  %5 = icmp eq i8* %4, null, !dbg !9868
  br i1 %5, label %6, label %7, !dbg !9869

; <label>:6:                                      ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !9870
  br label %13, !dbg !9870

; <label>:7:                                      ; preds = %1
  %8 = load i8*, i8** %3, align 8, !dbg !9871
  %9 = load i8*, i8** %3, align 8, !dbg !9872
  %10 = call i64 @strlen(i8* %9) #10, !dbg !9873
  %11 = add i64 %10, 1, !dbg !9874
  %12 = call i8* @HX_memdup.127(i8* %8, i64 %11), !dbg !9875
  store i8* %12, i8** %2, align 8, !dbg !9876
  br label %13, !dbg !9876

; <label>:13:                                     ; preds = %7, %6
  %14 = load i8*, i8** %2, align 8, !dbg !9877
  ret i8* %14, !dbg !9877
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_memdup.127(i8*, i64) #0 !dbg !9878 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9879, metadata !DIExpression()), !dbg !9880
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9883, metadata !DIExpression()), !dbg !9884
  %7 = load i64, i64* %5, align 8, !dbg !9885
  %8 = call noalias i8* @malloc(i64 %7) #7, !dbg !9887
  store i8* %8, i8** %6, align 8, !dbg !9888
  %9 = icmp eq i8* %8, null, !dbg !9889
  br i1 %9, label %10, label %11, !dbg !9890

; <label>:10:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !9891
  br label %15, !dbg !9891

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %6, align 8, !dbg !9892
  %13 = load i8*, i8** %4, align 8, !dbg !9893
  %14 = load i64, i64* %5, align 8, !dbg !9894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 %14, i1 false), !dbg !9895
  store i8* %12, i8** %3, align 8, !dbg !9896
  br label %15, !dbg !9896

; <label>:15:                                     ; preds = %11, %10
  %16 = load i8*, i8** %3, align 8, !dbg !9897
  ret i8* %16, !dbg !9897
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_chomp(i8*) #0 !dbg !9898 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9903, metadata !DIExpression()), !dbg !9904
  %4 = load i8*, i8** %2, align 8, !dbg !9905
  %5 = load i8*, i8** %2, align 8, !dbg !9906
  %6 = call i64 @strlen(i8* %5) #10, !dbg !9907
  %7 = getelementptr inbounds i8, i8* %4, i64 %6, !dbg !9908
  %8 = getelementptr inbounds i8, i8* %7, i64 -1, !dbg !9909
  store i8* %8, i8** %3, align 8, !dbg !9904
  br label %9, !dbg !9910

; <label>:9:                                      ; preds = %24, %1
  %10 = load i8*, i8** %3, align 8, !dbg !9911
  %11 = load i8*, i8** %2, align 8, !dbg !9912
  %12 = icmp uge i8* %10, %11, !dbg !9913
  br i1 %12, label %13, label %27, !dbg !9910

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %3, align 8, !dbg !9914
  %15 = load i8, i8* %14, align 1, !dbg !9917
  %16 = sext i8 %15 to i32, !dbg !9917
  %17 = icmp ne i32 %16, 10, !dbg !9918
  br i1 %17, label %18, label %24, !dbg !9919

; <label>:18:                                     ; preds = %13
  %19 = load i8*, i8** %3, align 8, !dbg !9920
  %20 = load i8, i8* %19, align 1, !dbg !9921
  %21 = sext i8 %20 to i32, !dbg !9921
  %22 = icmp ne i32 %21, 13, !dbg !9922
  br i1 %22, label %23, label %24, !dbg !9923

; <label>:23:                                     ; preds = %18
  br label %27, !dbg !9924

; <label>:24:                                     ; preds = %18, %13
  %25 = load i8*, i8** %3, align 8, !dbg !9925
  %26 = getelementptr inbounds i8, i8* %25, i32 -1, !dbg !9925
  store i8* %26, i8** %3, align 8, !dbg !9925
  store i8 0, i8* %25, align 1, !dbg !9926
  br label %9, !dbg !9910, !llvm.loop !9927

; <label>:27:                                     ; preds = %23, %9
  %28 = load i8*, i8** %2, align 8, !dbg !9929
  ret i8* %28, !dbg !9930
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_dirname(i8*) #0 !dbg !9931 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9932, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9934, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9936, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9938, metadata !DIExpression()), !dbg !9939
  %7 = load i8*, i8** %3, align 8, !dbg !9940
  %8 = load i8, i8* %7, align 1, !dbg !9942
  %9 = sext i8 %8 to i32, !dbg !9942
  %10 = icmp eq i32 %9, 0, !dbg !9943
  br i1 %10, label %11, label %13, !dbg !9944

; <label>:11:                                     ; preds = %1
  %12 = call i8* @HX_strdup.125(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i32 0, i32 0)), !dbg !9945
  store i8* %12, i8** %2, align 8, !dbg !9946
  br label %75, !dbg !9946

; <label>:13:                                     ; preds = %1
  %14 = load i8*, i8** %3, align 8, !dbg !9947
  %15 = load i8*, i8** %3, align 8, !dbg !9949
  %16 = call i64 @strlen(i8* %15) #10, !dbg !9950
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !9951
  %18 = getelementptr inbounds i8, i8* %17, i64 -1, !dbg !9952
  store i8* %18, i8** %4, align 8, !dbg !9953
  br label %19, !dbg !9954

; <label>:19:                                     ; preds = %31, %13
  %20 = load i8*, i8** %4, align 8, !dbg !9955
  %21 = load i8*, i8** %3, align 8, !dbg !9957
  %22 = icmp ugt i8* %20, %21, !dbg !9958
  br i1 %22, label %23, label %28, !dbg !9959

; <label>:23:                                     ; preds = %19
  %24 = load i8*, i8** %4, align 8, !dbg !9960
  %25 = load i8, i8* %24, align 1, !dbg !9961
  %26 = sext i8 %25 to i32, !dbg !9961
  %27 = icmp eq i32 %26, 47, !dbg !9962
  br label %28

; <label>:28:                                     ; preds = %23, %19
  %29 = phi i1 [ false, %19 ], [ %27, %23 ], !dbg !9963
  br i1 %29, label %30, label %34, !dbg !9964

; <label>:30:                                     ; preds = %28
  br label %31, !dbg !9964

; <label>:31:                                     ; preds = %30
  %32 = load i8*, i8** %4, align 8, !dbg !9965
  %33 = getelementptr inbounds i8, i8* %32, i32 -1, !dbg !9965
  store i8* %33, i8** %4, align 8, !dbg !9965
  br label %19, !dbg !9966, !llvm.loop !9967

; <label>:34:                                     ; preds = %28
  %35 = load i8*, i8** %3, align 8, !dbg !9969
  %36 = load i8*, i8** %4, align 8, !dbg !9971
  %37 = call i8* @HX_strbchr(i8* %35, i8* %36, i8 signext 47), !dbg !9972
  store i8* %37, i8** %5, align 8, !dbg !9973
  %38 = icmp eq i8* %37, null, !dbg !9974
  br i1 %38, label %39, label %41, !dbg !9975

; <label>:39:                                     ; preds = %34
  %40 = call i8* @HX_strdup.125(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i32 0, i32 0)), !dbg !9976
  store i8* %40, i8** %2, align 8, !dbg !9977
  br label %75, !dbg !9977

; <label>:41:                                     ; preds = %34
  br label %42, !dbg !9978

; <label>:42:                                     ; preds = %54, %41
  %43 = load i8*, i8** %5, align 8, !dbg !9979
  %44 = load i8*, i8** %3, align 8, !dbg !9982
  %45 = icmp ugt i8* %43, %44, !dbg !9983
  br i1 %45, label %46, label %51, !dbg !9984

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %5, align 8, !dbg !9985
  %48 = load i8, i8* %47, align 1, !dbg !9986
  %49 = sext i8 %48 to i32, !dbg !9986
  %50 = icmp eq i32 %49, 47, !dbg !9987
  br label %51

; <label>:51:                                     ; preds = %46, %42
  %52 = phi i1 [ false, %42 ], [ %50, %46 ], !dbg !9988
  br i1 %52, label %53, label %57, !dbg !9989

; <label>:53:                                     ; preds = %51
  br label %54, !dbg !9989

; <label>:54:                                     ; preds = %53
  %55 = load i8*, i8** %5, align 8, !dbg !9990
  %56 = getelementptr inbounds i8, i8* %55, i32 -1, !dbg !9990
  store i8* %56, i8** %5, align 8, !dbg !9990
  br label %42, !dbg !9991, !llvm.loop !9992

; <label>:57:                                     ; preds = %51
  %58 = load i8*, i8** %3, align 8, !dbg !9994
  %59 = load i8*, i8** %5, align 8, !dbg !9995
  %60 = load i8*, i8** %3, align 8, !dbg !9996
  %61 = ptrtoint i8* %59 to i64, !dbg !9997
  %62 = ptrtoint i8* %60 to i64, !dbg !9997
  %63 = sub i64 %61, %62, !dbg !9997
  %64 = add nsw i64 %63, 2, !dbg !9998
  %65 = call i8* @HX_memdup.127(i8* %58, i64 %64), !dbg !9999
  store i8* %65, i8** %6, align 8, !dbg !10000
  %66 = load i8*, i8** %6, align 8, !dbg !10001
  %67 = load i8*, i8** %5, align 8, !dbg !10002
  %68 = load i8*, i8** %3, align 8, !dbg !10003
  %69 = ptrtoint i8* %67 to i64, !dbg !10004
  %70 = ptrtoint i8* %68 to i64, !dbg !10004
  %71 = sub i64 %69, %70, !dbg !10004
  %72 = add nsw i64 %71, 1, !dbg !10005
  %73 = getelementptr inbounds i8, i8* %66, i64 %72, !dbg !10001
  store i8 0, i8* %73, align 1, !dbg !10006
  %74 = load i8*, i8** %6, align 8, !dbg !10007
  store i8* %74, i8** %2, align 8, !dbg !10008
  br label %75, !dbg !10008

; <label>:75:                                     ; preds = %57, %39, %11
  %76 = load i8*, i8** %2, align 8, !dbg !10009
  ret i8* %76, !dbg !10009
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_getl(i8**, %struct._IO_FILE*) #0 !dbg !10010 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca [1024 x i8], align 16
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !10053, metadata !DIExpression()), !dbg !10054
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !10055, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.declare(metadata [1024 x i8]* %6, metadata !10057, metadata !DIExpression()), !dbg !10058
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !10059
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !10061
  %9 = call i8* @fgets(i8* %7, i32 1024, %struct._IO_FILE* %8), !dbg !10062
  %10 = icmp eq i8* %9, null, !dbg !10063
  br i1 %10, label %11, label %12, !dbg !10064

; <label>:11:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !10065
  br label %40, !dbg !10065

; <label>:12:                                     ; preds = %2
  %13 = load i8**, i8*** %4, align 8, !dbg !10066
  %14 = load i8*, i8** %13, align 8, !dbg !10068
  %15 = icmp eq i8* %14, null, !dbg !10069
  br i1 %15, label %16, label %19, !dbg !10070

; <label>:16:                                     ; preds = %12
  %17 = call i8* @HXmc_meminit(i8* null, i64 0), !dbg !10071
  %18 = load i8**, i8*** %4, align 8, !dbg !10072
  store i8* %17, i8** %18, align 8, !dbg !10073
  br label %22, !dbg !10074

; <label>:19:                                     ; preds = %12
  %20 = load i8**, i8*** %4, align 8, !dbg !10075
  %21 = call i8* @HXmc_trunc(i8** %20, i64 0), !dbg !10076
  br label %22

; <label>:22:                                     ; preds = %19, %16
  br label %23, !dbg !10077

; <label>:23:                                     ; preds = %32, %22
  %24 = load i8**, i8*** %4, align 8, !dbg !10078
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !10080
  %26 = call i8* @HXmc_strcat(i8** %24, i8* %25), !dbg !10081
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !10082
  %28 = call i8* @strchr(i8* %27, i32 10) #10, !dbg !10084
  %29 = icmp ne i8* %28, null, !dbg !10085
  br i1 %29, label %30, label %31, !dbg !10086

; <label>:30:                                     ; preds = %23
  br label %37, !dbg !10087

; <label>:31:                                     ; preds = %23
  br label %32, !dbg !10088

; <label>:32:                                     ; preds = %31
  %33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !10089
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !10090
  %35 = call i8* @fgets(i8* %33, i32 1024, %struct._IO_FILE* %34), !dbg !10091
  %36 = icmp ne i8* %35, null, !dbg !10092
  br i1 %36, label %23, label %37, !dbg !10088, !llvm.loop !10093

; <label>:37:                                     ; preds = %32, %30
  %38 = load i8**, i8*** %4, align 8, !dbg !10095
  %39 = load i8*, i8** %38, align 8, !dbg !10096
  store i8* %39, i8** %3, align 8, !dbg !10097
  br label %40, !dbg !10097

; <label>:40:                                     ; preds = %37, %11
  %41 = load i8*, i8** %3, align 8, !dbg !10098
  ret i8* %41, !dbg !10098
}

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_memmem(i8*, i64, i8*, i64) #0 !dbg !10099 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10102, metadata !DIExpression()), !dbg !10103
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !10104, metadata !DIExpression()), !dbg !10105
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10106, metadata !DIExpression()), !dbg !10107
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !10108, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.declare(metadata i64* %10, metadata !10110, metadata !DIExpression()), !dbg !10111
  %12 = load i64, i64* %9, align 8, !dbg !10112
  %13 = load i64, i64* %7, align 8, !dbg !10114
  %14 = icmp ugt i64 %12, %13, !dbg !10115
  br i1 %14, label %15, label %16, !dbg !10116

; <label>:15:                                     ; preds = %4
  store i8* null, i8** %5, align 8, !dbg !10117
  br label %41, !dbg !10117

; <label>:16:                                     ; preds = %4
  store i64 0, i64* %10, align 8, !dbg !10118
  br label %17, !dbg !10120

; <label>:17:                                     ; preds = %37, %16
  %18 = load i64, i64* %10, align 8, !dbg !10121
  %19 = load i64, i64* %7, align 8, !dbg !10123
  %20 = load i64, i64* %9, align 8, !dbg !10124
  %21 = sub i64 %19, %20, !dbg !10125
  %22 = icmp ule i64 %18, %21, !dbg !10126
  br i1 %22, label %23, label %40, !dbg !10127

; <label>:23:                                     ; preds = %17
  %24 = load i8*, i8** %6, align 8, !dbg !10128
  %25 = load i64, i64* %10, align 8, !dbg !10130
  %26 = getelementptr i8, i8* %24, i64 %25, !dbg !10131
  %27 = load i8*, i8** %8, align 8, !dbg !10132
  %28 = load i64, i64* %9, align 8, !dbg !10133
  %29 = call i32 @memcmp(i8* %26, i8* %27, i64 %28) #10, !dbg !10134
  %30 = icmp eq i32 %29, 0, !dbg !10135
  br i1 %30, label %31, label %36, !dbg !10136

; <label>:31:                                     ; preds = %23
  %32 = load i8*, i8** %6, align 8, !dbg !10137
  %33 = load i64, i64* %10, align 8, !dbg !10137
  %34 = getelementptr i8, i8* %32, i64 %33, !dbg !10137
  store i8* %34, i8** %11, align 8, !dbg !10137
  %35 = load i8*, i8** %11, align 8, !dbg !10137
  store i8* %35, i8** %5, align 8, !dbg !10139
  br label %41, !dbg !10139

; <label>:36:                                     ; preds = %23
  br label %37, !dbg !10140

; <label>:37:                                     ; preds = %36
  %38 = load i64, i64* %10, align 8, !dbg !10141
  %39 = add i64 %38, 1, !dbg !10141
  store i64 %39, i64* %10, align 8, !dbg !10141
  br label %17, !dbg !10142, !llvm.loop !10143

; <label>:40:                                     ; preds = %17
  store i8* null, i8** %5, align 8, !dbg !10145
  br label %41, !dbg !10145

; <label>:41:                                     ; preds = %40, %31, %15
  %42 = load i8*, i8** %5, align 8, !dbg !10146
  ret i8* %42, !dbg !10146
}

; Function Attrs: noinline nounwind optnone uwtable
define i8** @HX_split(i8*, i8*, i32*, i32) #0 !dbg !10147 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10150, metadata !DIExpression()), !dbg !10151
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10152, metadata !DIExpression()), !dbg !10153
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !10154, metadata !DIExpression()), !dbg !10155
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10156, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10158, metadata !DIExpression()), !dbg !10159
  store i32 0, i32* %9, align 4, !dbg !10159
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !10160, metadata !DIExpression()), !dbg !10161
  %16 = load i32*, i32** %7, align 8, !dbg !10162
  %17 = icmp eq i32* %16, null, !dbg !10164
  br i1 %17, label %18, label %19, !dbg !10165

; <label>:18:                                     ; preds = %4
  store i32* %9, i32** %7, align 8, !dbg !10166
  br label %19, !dbg !10167

; <label>:19:                                     ; preds = %18, %4
  %20 = load i32*, i32** %7, align 8, !dbg !10168
  store i32 1, i32* %20, align 4, !dbg !10169
  call void @llvm.dbg.declare(metadata i8** %11, metadata !10170, metadata !DIExpression()), !dbg !10172
  %21 = load i8*, i8** %5, align 8, !dbg !10173
  store i8* %21, i8** %11, align 8, !dbg !10172
  br label %22, !dbg !10174

; <label>:22:                                     ; preds = %27, %19
  %23 = load i8*, i8** %11, align 8, !dbg !10175
  %24 = load i8*, i8** %6, align 8, !dbg !10176
  %25 = call i8* @strpbrk(i8* %23, i8* %24) #10, !dbg !10177
  store i8* %25, i8** %11, align 8, !dbg !10178
  %26 = icmp ne i8* %25, null, !dbg !10179
  br i1 %26, label %27, label %33, !dbg !10174

; <label>:27:                                     ; preds = %22
  %28 = load i32*, i32** %7, align 8, !dbg !10180
  %29 = load i32, i32* %28, align 4, !dbg !10182
  %30 = add nsw i32 %29, 1, !dbg !10182
  store i32 %30, i32* %28, align 4, !dbg !10182
  %31 = load i8*, i8** %11, align 8, !dbg !10183
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !10183
  store i8* %32, i8** %11, align 8, !dbg !10183
  br label %22, !dbg !10174, !llvm.loop !10184

; <label>:33:                                     ; preds = %22
  %34 = load i32, i32* %8, align 4, !dbg !10186
  %35 = icmp eq i32 %34, 0, !dbg !10188
  br i1 %35, label %36, label %39, !dbg !10189

; <label>:36:                                     ; preds = %33
  %37 = load i32*, i32** %7, align 8, !dbg !10190
  %38 = load i32, i32* %37, align 4, !dbg !10191
  store i32 %38, i32* %8, align 4, !dbg !10192
  br label %48, !dbg !10193

; <label>:39:                                     ; preds = %33
  %40 = load i32*, i32** %7, align 8, !dbg !10194
  %41 = load i32, i32* %40, align 4, !dbg !10196
  %42 = load i32, i32* %8, align 4, !dbg !10197
  %43 = icmp sgt i32 %41, %42, !dbg !10198
  br i1 %43, label %44, label %47, !dbg !10199

; <label>:44:                                     ; preds = %39
  %45 = load i32, i32* %8, align 4, !dbg !10200
  %46 = load i32*, i32** %7, align 8, !dbg !10201
  store i32 %45, i32* %46, align 4, !dbg !10202
  br label %47, !dbg !10203

; <label>:47:                                     ; preds = %44, %39
  br label %48

; <label>:48:                                     ; preds = %47, %36
  %49 = load i32*, i32** %7, align 8, !dbg !10204
  %50 = load i32, i32* %49, align 4, !dbg !10205
  %51 = add nsw i32 %50, 1, !dbg !10206
  %52 = sext i32 %51 to i64, !dbg !10207
  %53 = mul i64 8, %52, !dbg !10208
  %54 = call noalias i8* @malloc(i64 %53) #7, !dbg !10209
  %55 = bitcast i8* %54 to i8**, !dbg !10209
  store i8** %55, i8*** %10, align 8, !dbg !10210
  %56 = load i8**, i8*** %10, align 8, !dbg !10211
  %57 = load i32*, i32** %7, align 8, !dbg !10212
  %58 = load i32, i32* %57, align 4, !dbg !10213
  %59 = sext i32 %58 to i64, !dbg !10211
  %60 = getelementptr inbounds i8*, i8** %56, i64 %59, !dbg !10211
  store i8* null, i8** %60, align 8, !dbg !10214
  call void @llvm.dbg.declare(metadata i8** %12, metadata !10215, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata i8** %13, metadata !10218, metadata !DIExpression()), !dbg !10219
  %61 = load i8*, i8** %5, align 8, !dbg !10220
  %62 = call i8* @HX_strdup.125(i8* %61), !dbg !10221
  store i8* %62, i8** %13, align 8, !dbg !10219
  call void @llvm.dbg.declare(metadata i8** %14, metadata !10222, metadata !DIExpression()), !dbg !10223
  %63 = load i8*, i8** %13, align 8, !dbg !10224
  store i8* %63, i8** %14, align 8, !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %15, metadata !10225, metadata !DIExpression()), !dbg !10226
  store i64 0, i64* %15, align 8, !dbg !10226
  br label %64, !dbg !10227

; <label>:64:                                     ; preds = %68, %48
  %65 = load i32, i32* %8, align 4, !dbg !10228
  %66 = add nsw i32 %65, -1, !dbg !10228
  store i32 %66, i32* %8, align 4, !dbg !10228
  %67 = icmp sgt i32 %66, 0, !dbg !10229
  br i1 %67, label %68, label %77, !dbg !10227

; <label>:68:                                     ; preds = %64
  %69 = load i8*, i8** %6, align 8, !dbg !10230
  %70 = call i8* @HX_strsep(i8** %13, i8* %69), !dbg !10232
  store i8* %70, i8** %12, align 8, !dbg !10233
  %71 = load i8*, i8** %12, align 8, !dbg !10234
  %72 = call i8* @HX_strdup.125(i8* %71), !dbg !10235
  %73 = load i8**, i8*** %10, align 8, !dbg !10236
  %74 = load i64, i64* %15, align 8, !dbg !10237
  %75 = add i64 %74, 1, !dbg !10237
  store i64 %75, i64* %15, align 8, !dbg !10237
  %76 = getelementptr inbounds i8*, i8** %73, i64 %74, !dbg !10236
  store i8* %72, i8** %76, align 8, !dbg !10238
  br label %64, !dbg !10227, !llvm.loop !10239

; <label>:77:                                     ; preds = %64
  %78 = load i8*, i8** %13, align 8, !dbg !10241
  %79 = call i8* @HX_strdup.125(i8* %78), !dbg !10242
  %80 = load i8**, i8*** %10, align 8, !dbg !10243
  %81 = load i64, i64* %15, align 8, !dbg !10244
  %82 = add i64 %81, 1, !dbg !10244
  store i64 %82, i64* %15, align 8, !dbg !10244
  %83 = getelementptr inbounds i8*, i8** %80, i64 %81, !dbg !10243
  store i8* %79, i8** %83, align 8, !dbg !10245
  %84 = load i8*, i8** %14, align 8, !dbg !10246
  call void @free(i8* %84) #7, !dbg !10247
  %85 = load i8**, i8*** %10, align 8, !dbg !10248
  ret i8** %85, !dbg !10249
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strsep(i8**, i8*) #0 !dbg !10250 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !10253, metadata !DIExpression()), !dbg !10254
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10255, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10259, metadata !DIExpression()), !dbg !10260
  %8 = load i8**, i8*** %4, align 8, !dbg !10261
  %9 = load i8*, i8** %8, align 8, !dbg !10263
  %10 = icmp eq i8* %9, null, !dbg !10264
  br i1 %10, label %17, label %11, !dbg !10265

; <label>:11:                                     ; preds = %2
  %12 = load i8**, i8*** %4, align 8, !dbg !10266
  %13 = load i8*, i8** %12, align 8, !dbg !10267
  %14 = load i8, i8* %13, align 1, !dbg !10268
  %15 = sext i8 %14 to i32, !dbg !10268
  %16 = icmp eq i32 %15, 0, !dbg !10269
  br i1 %16, label %17, label %18, !dbg !10270

; <label>:17:                                     ; preds = %11, %2
  store i8* null, i8** %3, align 8, !dbg !10271
  br label %73, !dbg !10271

; <label>:18:                                     ; preds = %11
  %19 = load i8**, i8*** %4, align 8, !dbg !10272
  %20 = load i8*, i8** %19, align 8, !dbg !10273
  store i8* %20, i8** %6, align 8, !dbg !10274
  %21 = load i8*, i8** %5, align 8, !dbg !10275
  %22 = getelementptr inbounds i8, i8* %21, i64 0, !dbg !10275
  %23 = load i8, i8* %22, align 1, !dbg !10275
  %24 = sext i8 %23 to i32, !dbg !10275
  %25 = icmp eq i32 %24, 0, !dbg !10277
  br i1 %25, label %32, label %26, !dbg !10278

; <label>:26:                                     ; preds = %18
  %27 = load i8*, i8** %5, align 8, !dbg !10279
  %28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !10279
  %29 = load i8, i8* %28, align 1, !dbg !10279
  %30 = sext i8 %29 to i32, !dbg !10279
  %31 = icmp eq i32 %30, 0, !dbg !10280
  br i1 %31, label %32, label %57, !dbg !10281

; <label>:32:                                     ; preds = %26, %18
  %33 = load i8*, i8** %6, align 8, !dbg !10282
  %34 = load i8, i8* %33, align 1, !dbg !10285
  %35 = sext i8 %34 to i32, !dbg !10285
  %36 = load i8*, i8** %5, align 8, !dbg !10286
  %37 = load i8, i8* %36, align 1, !dbg !10287
  %38 = sext i8 %37 to i32, !dbg !10287
  %39 = icmp eq i32 %35, %38, !dbg !10288
  br i1 %39, label %40, label %42, !dbg !10289

; <label>:40:                                     ; preds = %32
  %41 = load i8*, i8** %6, align 8, !dbg !10290
  store i8* %41, i8** %7, align 8, !dbg !10291
  br label %56, !dbg !10292

; <label>:42:                                     ; preds = %32
  %43 = load i8*, i8** %6, align 8, !dbg !10293
  %44 = load i8, i8* %43, align 1, !dbg !10295
  %45 = sext i8 %44 to i32, !dbg !10295
  %46 = icmp eq i32 %45, 0, !dbg !10296
  br i1 %46, label %47, label %48, !dbg !10297

; <label>:47:                                     ; preds = %42
  store i8* null, i8** %7, align 8, !dbg !10298
  br label %55, !dbg !10299

; <label>:48:                                     ; preds = %42
  %49 = load i8*, i8** %6, align 8, !dbg !10300
  %50 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !10301
  %51 = load i8*, i8** %5, align 8, !dbg !10302
  %52 = load i8, i8* %51, align 1, !dbg !10303
  %53 = sext i8 %52 to i32, !dbg !10303
  %54 = call i8* @strchr(i8* %50, i32 %53) #10, !dbg !10304
  store i8* %54, i8** %7, align 8, !dbg !10305
  br label %55

; <label>:55:                                     ; preds = %48, %47
  br label %56

; <label>:56:                                     ; preds = %55, %40
  br label %61, !dbg !10306

; <label>:57:                                     ; preds = %26
  %58 = load i8*, i8** %6, align 8, !dbg !10307
  %59 = load i8*, i8** %5, align 8, !dbg !10309
  %60 = call i8* @strpbrk(i8* %58, i8* %59) #10, !dbg !10310
  store i8* %60, i8** %7, align 8, !dbg !10311
  br label %61

; <label>:61:                                     ; preds = %57, %56
  %62 = load i8*, i8** %7, align 8, !dbg !10312
  %63 = icmp eq i8* %62, null, !dbg !10314
  br i1 %63, label %64, label %66, !dbg !10315

; <label>:64:                                     ; preds = %61
  %65 = load i8**, i8*** %4, align 8, !dbg !10316
  store i8* null, i8** %65, align 8, !dbg !10318
  br label %71, !dbg !10319

; <label>:66:                                     ; preds = %61
  %67 = load i8*, i8** %7, align 8, !dbg !10320
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !10320
  store i8* %68, i8** %7, align 8, !dbg !10320
  store i8 0, i8* %67, align 1, !dbg !10322
  %69 = load i8*, i8** %7, align 8, !dbg !10323
  %70 = load i8**, i8*** %4, align 8, !dbg !10324
  store i8* %69, i8** %70, align 8, !dbg !10325
  br label %71

; <label>:71:                                     ; preds = %66, %64
  %72 = load i8*, i8** %6, align 8, !dbg !10326
  store i8* %72, i8** %3, align 8, !dbg !10327
  br label %73, !dbg !10327

; <label>:73:                                     ; preds = %71, %17
  %74 = load i8*, i8** %3, align 8, !dbg !10328
  ret i8* %74, !dbg !10328
}

; Function Attrs: noinline nounwind optnone uwtable
define i8** @HX_split4(i8*, i8*, i32*, i32) #0 !dbg !10329 {
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10332, metadata !DIExpression()), !dbg !10333
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10334, metadata !DIExpression()), !dbg !10335
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !10336, metadata !DIExpression()), !dbg !10337
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10338, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !10340, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.declare(metadata i8** %11, metadata !10342, metadata !DIExpression()), !dbg !10343
  %13 = load i8*, i8** %6, align 8, !dbg !10344
  store i8* %13, i8** %11, align 8, !dbg !10343
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10345, metadata !DIExpression()), !dbg !10346
  store i32 1, i32* %12, align 4, !dbg !10346
  %14 = load i8*, i8** %11, align 8, !dbg !10347
  %15 = load i8*, i8** %7, align 8, !dbg !10349
  %16 = call i8* @strpbrk(i8* %14, i8* %15) #10, !dbg !10350
  store i8* %16, i8** %11, align 8, !dbg !10351
  br label %17, !dbg !10352

; <label>:17:                                     ; preds = %31, %4
  %18 = load i8*, i8** %11, align 8, !dbg !10353
  %19 = icmp ne i8* %18, null, !dbg !10355
  br i1 %19, label %20, label %36, !dbg !10356

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* %12, align 4, !dbg !10357
  %22 = add nsw i32 %21, 1, !dbg !10357
  store i32 %22, i32* %12, align 4, !dbg !10357
  %23 = load i32, i32* %9, align 4, !dbg !10359
  %24 = icmp sge i32 %22, %23, !dbg !10360
  br i1 %24, label %25, label %30, !dbg !10361

; <label>:25:                                     ; preds = %20
  %26 = load i32, i32* %9, align 4, !dbg !10362
  %27 = icmp sgt i32 %26, 0, !dbg !10363
  br i1 %27, label %28, label %30, !dbg !10364

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* %9, align 4, !dbg !10365
  store i32 %29, i32* %12, align 4, !dbg !10367
  br label %36, !dbg !10368

; <label>:30:                                     ; preds = %25, %20
  br label %31, !dbg !10369

; <label>:31:                                     ; preds = %30
  %32 = load i8*, i8** %11, align 8, !dbg !10370
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !10370
  store i8* %33, i8** %11, align 8, !dbg !10370
  %34 = load i8*, i8** %7, align 8, !dbg !10371
  %35 = call i8* @strpbrk(i8* %33, i8* %34) #10, !dbg !10372
  store i8* %35, i8** %11, align 8, !dbg !10373
  br label %17, !dbg !10374, !llvm.loop !10375

; <label>:36:                                     ; preds = %28, %17
  %37 = load i32, i32* %12, align 4, !dbg !10377
  %38 = add nsw i32 %37, 1, !dbg !10378
  %39 = sext i32 %38 to i64, !dbg !10379
  %40 = mul i64 8, %39, !dbg !10380
  %41 = call noalias i8* @malloc(i64 %40) #7, !dbg !10381
  %42 = bitcast i8* %41 to i8**, !dbg !10381
  store i8** %42, i8*** %10, align 8, !dbg !10382
  %43 = load i8**, i8*** %10, align 8, !dbg !10383
  %44 = icmp eq i8** %43, null, !dbg !10385
  br i1 %44, label %45, label %46, !dbg !10386

; <label>:45:                                     ; preds = %36
  store i8** null, i8*** %5, align 8, !dbg !10387
  br label %63, !dbg !10387

; <label>:46:                                     ; preds = %36
  %47 = load i8**, i8*** %10, align 8, !dbg !10388
  %48 = load i32, i32* %12, align 4, !dbg !10389
  %49 = sext i32 %48 to i64, !dbg !10388
  %50 = getelementptr inbounds i8*, i8** %47, i64 %49, !dbg !10388
  store i8* null, i8** %50, align 8, !dbg !10390
  %51 = load i8*, i8** %6, align 8, !dbg !10391
  %52 = load i8*, i8** %7, align 8, !dbg !10392
  %53 = load i32, i32* %12, align 4, !dbg !10393
  %54 = load i8**, i8*** %10, align 8, !dbg !10394
  %55 = call i32 @HX_split5(i8* %51, i8* %52, i32 %53, i8** %54), !dbg !10395
  store i32 %55, i32* %12, align 4, !dbg !10396
  %56 = load i32*, i32** %8, align 8, !dbg !10397
  %57 = icmp ne i32* %56, null, !dbg !10399
  br i1 %57, label %58, label %61, !dbg !10400

; <label>:58:                                     ; preds = %46
  %59 = load i32, i32* %12, align 4, !dbg !10401
  %60 = load i32*, i32** %8, align 8, !dbg !10402
  store i32 %59, i32* %60, align 4, !dbg !10403
  br label %61, !dbg !10404

; <label>:61:                                     ; preds = %58, %46
  %62 = load i8**, i8*** %10, align 8, !dbg !10405
  store i8** %62, i8*** %5, align 8, !dbg !10406
  br label %63, !dbg !10406

; <label>:63:                                     ; preds = %61, %45
  %64 = load i8**, i8*** %5, align 8, !dbg !10407
  ret i8** %64, !dbg !10407
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HX_split5(i8*, i8*, i32, i8**) #0 !dbg !10408 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10411, metadata !DIExpression()), !dbg !10412
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10413, metadata !DIExpression()), !dbg !10414
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10415, metadata !DIExpression()), !dbg !10416
  store i8** %3, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !10417, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10419, metadata !DIExpression()), !dbg !10420
  store i32 0, i32* %9, align 4, !dbg !10420
  call void @llvm.dbg.declare(metadata i8** %10, metadata !10421, metadata !DIExpression()), !dbg !10422
  br label %11, !dbg !10423

; <label>:11:                                     ; preds = %21, %4
  %12 = load i32, i32* %7, align 4, !dbg !10424
  %13 = add nsw i32 %12, -1, !dbg !10424
  store i32 %13, i32* %7, align 4, !dbg !10424
  %14 = icmp sgt i32 %13, 0, !dbg !10425
  br i1 %14, label %15, label %31, !dbg !10423

; <label>:15:                                     ; preds = %11
  %16 = load i8*, i8** %5, align 8, !dbg !10426
  %17 = load i8*, i8** %6, align 8, !dbg !10429
  %18 = call i8* @strpbrk(i8* %16, i8* %17) #10, !dbg !10430
  store i8* %18, i8** %10, align 8, !dbg !10431
  %19 = icmp eq i8* %18, null, !dbg !10432
  br i1 %19, label %20, label %21, !dbg !10433

; <label>:20:                                     ; preds = %15
  br label %31, !dbg !10434

; <label>:21:                                     ; preds = %15
  %22 = load i8*, i8** %5, align 8, !dbg !10435
  %23 = load i8**, i8*** %8, align 8, !dbg !10436
  %24 = load i32, i32* %9, align 4, !dbg !10437
  %25 = add nsw i32 %24, 1, !dbg !10437
  store i32 %25, i32* %9, align 4, !dbg !10437
  %26 = sext i32 %24 to i64, !dbg !10436
  %27 = getelementptr inbounds i8*, i8** %23, i64 %26, !dbg !10436
  store i8* %22, i8** %27, align 8, !dbg !10438
  %28 = load i8*, i8** %10, align 8, !dbg !10439
  store i8 0, i8* %28, align 1, !dbg !10440
  %29 = load i8*, i8** %10, align 8, !dbg !10441
  %30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !10442
  store i8* %30, i8** %5, align 8, !dbg !10443
  br label %11, !dbg !10423, !llvm.loop !10444

; <label>:31:                                     ; preds = %20, %11
  %32 = load i8*, i8** %5, align 8, !dbg !10446
  %33 = load i8**, i8*** %8, align 8, !dbg !10447
  %34 = load i32, i32* %9, align 4, !dbg !10448
  %35 = add nsw i32 %34, 1, !dbg !10448
  store i32 %35, i32* %9, align 4, !dbg !10448
  %36 = sext i32 %34 to i64, !dbg !10447
  %37 = getelementptr inbounds i8*, i8** %33, i64 %36, !dbg !10447
  store i8* %32, i8** %37, align 8, !dbg !10449
  %38 = load i32, i32* %9, align 4, !dbg !10450
  ret i32 %38, !dbg !10451
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strclone(i8**, i8*) #0 !dbg !10452 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !10453, metadata !DIExpression()), !dbg !10454
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10455, metadata !DIExpression()), !dbg !10456
  %6 = load i8**, i8*** %4, align 8, !dbg !10457
  %7 = load i8*, i8** %6, align 8, !dbg !10459
  %8 = load i8*, i8** %5, align 8, !dbg !10460
  %9 = icmp eq i8* %7, %8, !dbg !10461
  br i1 %9, label %10, label %13, !dbg !10462

; <label>:10:                                     ; preds = %2
  %11 = load i8**, i8*** %4, align 8, !dbg !10463
  %12 = load i8*, i8** %11, align 8, !dbg !10464
  store i8* %12, i8** %3, align 8, !dbg !10465
  br label %40, !dbg !10465

; <label>:13:                                     ; preds = %2
  %14 = load i8**, i8*** %4, align 8, !dbg !10466
  %15 = load i8*, i8** %14, align 8, !dbg !10468
  %16 = icmp ne i8* %15, null, !dbg !10469
  br i1 %16, label %17, label %21, !dbg !10470

; <label>:17:                                     ; preds = %13
  %18 = load i8**, i8*** %4, align 8, !dbg !10471
  %19 = load i8*, i8** %18, align 8, !dbg !10473
  call void @free(i8* %19) #7, !dbg !10474
  %20 = load i8**, i8*** %4, align 8, !dbg !10475
  store i8* null, i8** %20, align 8, !dbg !10476
  br label %21, !dbg !10477

; <label>:21:                                     ; preds = %17, %13
  %22 = load i8*, i8** %5, align 8, !dbg !10478
  %23 = icmp eq i8* %22, null, !dbg !10480
  br i1 %23, label %24, label %25, !dbg !10481

; <label>:24:                                     ; preds = %21
  store i8* null, i8** %3, align 8, !dbg !10482
  br label %40, !dbg !10482

; <label>:25:                                     ; preds = %21
  %26 = load i8*, i8** %5, align 8, !dbg !10483
  %27 = call i64 @strlen(i8* %26) #10, !dbg !10485
  %28 = add i64 %27, 1, !dbg !10486
  %29 = call noalias i8* @malloc(i64 %28) #7, !dbg !10487
  %30 = load i8**, i8*** %4, align 8, !dbg !10488
  store i8* %29, i8** %30, align 8, !dbg !10489
  %31 = icmp eq i8* %29, null, !dbg !10490
  br i1 %31, label %32, label %33, !dbg !10491

; <label>:32:                                     ; preds = %25
  store i8* null, i8** %3, align 8, !dbg !10492
  br label %40, !dbg !10492

; <label>:33:                                     ; preds = %25
  %34 = load i8**, i8*** %4, align 8, !dbg !10493
  %35 = load i8*, i8** %34, align 8, !dbg !10494
  %36 = load i8*, i8** %5, align 8, !dbg !10495
  %37 = call i8* @strcpy(i8* %35, i8* %36) #7, !dbg !10496
  %38 = load i8**, i8*** %4, align 8, !dbg !10497
  %39 = load i8*, i8** %38, align 8, !dbg !10498
  store i8* %39, i8** %3, align 8, !dbg !10499
  br label %40, !dbg !10499

; <label>:40:                                     ; preds = %33, %32, %24, %10
  %41 = load i8*, i8** %3, align 8, !dbg !10500
  ret i8* %41, !dbg !10500
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strlower(i8*) #0 !dbg !10501 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10504, metadata !DIExpression()), !dbg !10505
  %4 = load i8*, i8** %2, align 8, !dbg !10506
  store i8* %4, i8** %3, align 8, !dbg !10508
  br label %5, !dbg !10509

; <label>:5:                                      ; preds = %15, %1
  %6 = load i8*, i8** %3, align 8, !dbg !10510
  %7 = load i8, i8* %6, align 1, !dbg !10512
  %8 = sext i8 %7 to i32, !dbg !10512
  %9 = icmp ne i32 %8, 0, !dbg !10513
  br i1 %9, label %10, label %18, !dbg !10514

; <label>:10:                                     ; preds = %5
  %11 = load i8*, i8** %3, align 8, !dbg !10515
  %12 = load i8, i8* %11, align 1, !dbg !10516
  %13 = call zeroext i8 @HX_tolower(i8 zeroext %12), !dbg !10517
  %14 = load i8*, i8** %3, align 8, !dbg !10518
  store i8 %13, i8* %14, align 1, !dbg !10519
  br label %15, !dbg !10520

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !10521
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !10521
  store i8* %17, i8** %3, align 8, !dbg !10521
  br label %5, !dbg !10522, !llvm.loop !10523

; <label>:18:                                     ; preds = %5
  %19 = load i8*, i8** %2, align 8, !dbg !10525
  ret i8* %19, !dbg !10526
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @HX_tolower(i8 zeroext) #0 !dbg !10527 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !10530, metadata !DIExpression()), !dbg !10531
  %3 = load i8, i8* %2, align 1, !dbg !10532
  %4 = zext i8 %3 to i32, !dbg !10532
  %5 = call i32 @tolower(i32 %4) #10, !dbg !10533
  %6 = trunc i32 %5 to i8, !dbg !10533
  ret i8 %6, !dbg !10534
}

; Function Attrs: nounwind readonly
declare i32 @tolower(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HX_strltrim(i8*) #0 !dbg !10535 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10538, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10540, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10542, metadata !DIExpression()), !dbg !10543
  store i64 0, i64* %4, align 8, !dbg !10543
  %5 = load i8*, i8** %2, align 8, !dbg !10544
  store i8* %5, i8** %3, align 8, !dbg !10545
  br label %6, !dbg !10546

; <label>:6:                                      ; preds = %17, %1
  %7 = load i8*, i8** %3, align 8, !dbg !10547
  %8 = load i8, i8* %7, align 1, !dbg !10548
  %9 = sext i8 %8 to i32, !dbg !10548
  %10 = icmp ne i32 %9, 0, !dbg !10549
  br i1 %10, label %11, label %15, !dbg !10550

; <label>:11:                                     ; preds = %6
  %12 = load i8*, i8** %3, align 8, !dbg !10551
  %13 = load i8, i8* %12, align 1, !dbg !10552
  %14 = call zeroext i1 @HX_isspace.134(i8 zeroext %13), !dbg !10553
  br label %15

; <label>:15:                                     ; preds = %11, %6
  %16 = phi i1 [ false, %6 ], [ %14, %11 ], !dbg !10554
  br i1 %16, label %17, label %20, !dbg !10546

; <label>:17:                                     ; preds = %15
  %18 = load i8*, i8** %3, align 8, !dbg !10555
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !10555
  store i8* %19, i8** %3, align 8, !dbg !10555
  br label %6, !dbg !10546, !llvm.loop !10556

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %3, align 8, !dbg !10558
  %22 = load i8*, i8** %2, align 8, !dbg !10560
  %23 = ptrtoint i8* %21 to i64, !dbg !10561
  %24 = ptrtoint i8* %22 to i64, !dbg !10561
  %25 = sub i64 %23, %24, !dbg !10561
  store i64 %25, i64* %4, align 8, !dbg !10562
  %26 = icmp ugt i64 %25, 0, !dbg !10563
  br i1 %26, label %27, label %31, !dbg !10564

; <label>:27:                                     ; preds = %20
  %28 = load i8*, i8** %2, align 8, !dbg !10565
  %29 = load i8*, i8** %3, align 8, !dbg !10566
  %30 = load i64, i64* %4, align 8, !dbg !10567
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !10568
  br label %31, !dbg !10568

; <label>:31:                                     ; preds = %27, %20
  %32 = load i64, i64* %4, align 8, !dbg !10569
  ret i64 %32, !dbg !10570
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @HX_isspace.134(i8 zeroext) #0 !dbg !10571 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !10572, metadata !DIExpression()), !dbg !10573
  %3 = call i16** @__ctype_b_loc() #11, !dbg !10574
  %4 = load i16*, i16** %3, align 8, !dbg !10574
  %5 = load i8, i8* %2, align 1, !dbg !10574
  %6 = zext i8 %5 to i32, !dbg !10574
  %7 = sext i32 %6 to i64, !dbg !10574
  %8 = getelementptr inbounds i16, i16* %4, i64 %7, !dbg !10574
  %9 = load i16, i16* %8, align 2, !dbg !10574
  %10 = zext i16 %9 to i32, !dbg !10574
  %11 = and i32 %10, 8192, !dbg !10574
  %12 = icmp ne i32 %11, 0, !dbg !10574
  ret i1 %12, !dbg !10575
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strmid(i8*, i64, i64) #0 !dbg !10576 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10579, metadata !DIExpression()), !dbg !10580
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10581, metadata !DIExpression()), !dbg !10582
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !10583, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10585, metadata !DIExpression()), !dbg !10586
  %9 = load i64, i64* %6, align 8, !dbg !10587
  %10 = icmp slt i64 %9, 0, !dbg !10589
  br i1 %10, label %11, label %16, !dbg !10590

; <label>:11:                                     ; preds = %3
  %12 = load i8*, i8** %5, align 8, !dbg !10591
  %13 = call i64 @strlen(i8* %12) #10, !dbg !10592
  %14 = load i64, i64* %6, align 8, !dbg !10593
  %15 = add i64 %13, %14, !dbg !10594
  store i64 %15, i64* %6, align 8, !dbg !10595
  br label %16, !dbg !10596

; <label>:16:                                     ; preds = %11, %3
  %17 = load i64, i64* %7, align 8, !dbg !10597
  %18 = icmp slt i64 %17, 0, !dbg !10599
  br i1 %18, label %19, label %26, !dbg !10600

; <label>:19:                                     ; preds = %16
  %20 = load i8*, i8** %5, align 8, !dbg !10601
  %21 = call i64 @strlen(i8* %20) #10, !dbg !10602
  %22 = load i64, i64* %6, align 8, !dbg !10603
  %23 = sub i64 %21, %22, !dbg !10604
  %24 = load i64, i64* %7, align 8, !dbg !10605
  %25 = add i64 %23, %24, !dbg !10606
  store i64 %25, i64* %7, align 8, !dbg !10607
  br label %26, !dbg !10608

; <label>:26:                                     ; preds = %19, %16
  %27 = load i64, i64* %7, align 8, !dbg !10609
  %28 = add nsw i64 %27, 1, !dbg !10611
  %29 = call noalias i8* @malloc(i64 %28) #7, !dbg !10612
  store i8* %29, i8** %8, align 8, !dbg !10613
  %30 = icmp eq i8* %29, null, !dbg !10614
  br i1 %30, label %31, label %32, !dbg !10615

; <label>:31:                                     ; preds = %26
  store i8* null, i8** %4, align 8, !dbg !10616
  br label %41, !dbg !10616

; <label>:32:                                     ; preds = %26
  %33 = load i64, i64* %6, align 8, !dbg !10617
  %34 = load i8*, i8** %5, align 8, !dbg !10618
  %35 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !10618
  store i8* %35, i8** %5, align 8, !dbg !10618
  %36 = load i8*, i8** %8, align 8, !dbg !10619
  %37 = load i8*, i8** %5, align 8, !dbg !10620
  %38 = load i64, i64* %7, align 8, !dbg !10621
  %39 = add nsw i64 %38, 1, !dbg !10622
  %40 = call i8* @HX_strlcpy.135(i8* %36, i8* %37, i64 %39), !dbg !10623
  store i8* %40, i8** %4, align 8, !dbg !10624
  br label %41, !dbg !10624

; <label>:41:                                     ; preds = %32, %31
  %42 = load i8*, i8** %4, align 8, !dbg !10625
  ret i8* %42, !dbg !10625
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_strlcpy.135(i8*, i8*, i64) #0 !dbg !10626 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10627, metadata !DIExpression()), !dbg !10628
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10629, metadata !DIExpression()), !dbg !10630
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10631, metadata !DIExpression()), !dbg !10632
  %7 = load i8*, i8** %4, align 8, !dbg !10633
  %8 = load i8*, i8** %5, align 8, !dbg !10634
  %9 = load i64, i64* %6, align 8, !dbg !10635
  %10 = call i8* @strncpy(i8* %7, i8* %8, i64 %9) #7, !dbg !10636
  %11 = load i8*, i8** %4, align 8, !dbg !10637
  %12 = load i64, i64* %6, align 8, !dbg !10638
  %13 = sub i64 %12, 1, !dbg !10639
  %14 = getelementptr inbounds i8, i8* %11, i64 %13, !dbg !10637
  store i8 0, i8* %14, align 1, !dbg !10640
  %15 = load i8*, i8** %4, align 8, !dbg !10641
  ret i8* %15, !dbg !10642
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HX_strrcspn(i8*, i8*) #0 !dbg !10643 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10646, metadata !DIExpression()), !dbg !10647
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10650, metadata !DIExpression()), !dbg !10651
  %8 = load i8*, i8** %4, align 8, !dbg !10652
  %9 = call i64 @strlen(i8* %8) #10, !dbg !10653
  store i64 %9, i64* %6, align 8, !dbg !10651
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10654, metadata !DIExpression()), !dbg !10655
  %10 = load i8*, i8** %4, align 8, !dbg !10656
  %11 = load i64, i64* %6, align 8, !dbg !10657
  %12 = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10658
  store i8* %12, i8** %7, align 8, !dbg !10655
  br label %13, !dbg !10659

; <label>:13:                                     ; preds = %31, %2
  %14 = load i8*, i8** %7, align 8, !dbg !10660
  %15 = getelementptr inbounds i8, i8* %14, i32 -1, !dbg !10660
  store i8* %15, i8** %7, align 8, !dbg !10660
  %16 = load i8*, i8** %4, align 8, !dbg !10661
  %17 = icmp uge i8* %15, %16, !dbg !10662
  br i1 %17, label %18, label %32, !dbg !10659

; <label>:18:                                     ; preds = %13
  %19 = load i8*, i8** %5, align 8, !dbg !10663
  %20 = load i8*, i8** %7, align 8, !dbg !10665
  %21 = load i8, i8* %20, align 1, !dbg !10666
  %22 = sext i8 %21 to i32, !dbg !10666
  %23 = call i8* @strchr(i8* %19, i32 %22) #10, !dbg !10667
  %24 = icmp ne i8* %23, null, !dbg !10668
  br i1 %24, label %25, label %31, !dbg !10669

; <label>:25:                                     ; preds = %18
  %26 = load i8*, i8** %7, align 8, !dbg !10670
  %27 = load i8*, i8** %4, align 8, !dbg !10671
  %28 = ptrtoint i8* %26 to i64, !dbg !10672
  %29 = ptrtoint i8* %27 to i64, !dbg !10672
  %30 = sub i64 %28, %29, !dbg !10672
  store i64 %30, i64* %3, align 8, !dbg !10673
  br label %34, !dbg !10673

; <label>:31:                                     ; preds = %18
  br label %13, !dbg !10659, !llvm.loop !10674

; <label>:32:                                     ; preds = %13
  %33 = load i64, i64* %6, align 8, !dbg !10676
  store i64 %33, i64* %3, align 8, !dbg !10677
  br label %34, !dbg !10677

; <label>:34:                                     ; preds = %32, %25
  %35 = load i64, i64* %3, align 8, !dbg !10678
  ret i64 %35, !dbg !10678
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strrev(i8*) #0 !dbg !10679 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10680, metadata !DIExpression()), !dbg !10681
  call void @llvm.dbg.declare(metadata i64* %3, metadata !10682, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10684, metadata !DIExpression()), !dbg !10685
  %7 = load i8*, i8** %2, align 8, !dbg !10686
  %8 = call i64 @strlen(i8* %7) #10, !dbg !10687
  %9 = sub i64 %8, 1, !dbg !10688
  store i64 %9, i64* %4, align 8, !dbg !10685
  call void @llvm.dbg.declare(metadata i64* %5, metadata !10689, metadata !DIExpression()), !dbg !10690
  %10 = load i64, i64* %4, align 8, !dbg !10691
  %11 = udiv i64 %10, 2, !dbg !10692
  store i64 %11, i64* %5, align 8, !dbg !10690
  store i64 0, i64* %3, align 8, !dbg !10693
  br label %12, !dbg !10695

; <label>:12:                                     ; preds = %36, %1
  %13 = load i64, i64* %3, align 8, !dbg !10696
  %14 = load i64, i64* %5, align 8, !dbg !10698
  %15 = icmp ult i64 %13, %14, !dbg !10699
  br i1 %15, label %16, label %39, !dbg !10700

; <label>:16:                                     ; preds = %12
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10701, metadata !DIExpression()), !dbg !10703
  %17 = load i8*, i8** %2, align 8, !dbg !10704
  %18 = load i64, i64* %3, align 8, !dbg !10705
  %19 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !10704
  %20 = load i8, i8* %19, align 1, !dbg !10704
  store i8 %20, i8* %6, align 1, !dbg !10706
  %21 = load i8*, i8** %2, align 8, !dbg !10707
  %22 = load i64, i64* %4, align 8, !dbg !10708
  %23 = load i64, i64* %3, align 8, !dbg !10709
  %24 = sub i64 %22, %23, !dbg !10710
  %25 = getelementptr inbounds i8, i8* %21, i64 %24, !dbg !10707
  %26 = load i8, i8* %25, align 1, !dbg !10707
  %27 = load i8*, i8** %2, align 8, !dbg !10711
  %28 = load i64, i64* %3, align 8, !dbg !10712
  %29 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !10711
  store i8 %26, i8* %29, align 1, !dbg !10713
  %30 = load i8, i8* %6, align 1, !dbg !10714
  %31 = load i8*, i8** %2, align 8, !dbg !10715
  %32 = load i64, i64* %4, align 8, !dbg !10716
  %33 = load i64, i64* %3, align 8, !dbg !10717
  %34 = sub i64 %32, %33, !dbg !10718
  %35 = getelementptr inbounds i8, i8* %31, i64 %34, !dbg !10715
  store i8 %30, i8* %35, align 1, !dbg !10719
  br label %36, !dbg !10720

; <label>:36:                                     ; preds = %16
  %37 = load i64, i64* %3, align 8, !dbg !10721
  %38 = add i64 %37, 1, !dbg !10721
  store i64 %38, i64* %3, align 8, !dbg !10721
  br label %12, !dbg !10722, !llvm.loop !10723

; <label>:39:                                     ; preds = %12
  %40 = load i8*, i8** %2, align 8, !dbg !10725
  ret i8* %40, !dbg !10726
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HX_strrtrim(i8*) #0 !dbg !10727 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10730, metadata !DIExpression()), !dbg !10731
  %5 = load i8*, i8** %2, align 8, !dbg !10732
  %6 = call i64 @strlen(i8* %5) #10, !dbg !10733
  %7 = trunc i64 %6 to i32, !dbg !10733
  store i32 %7, i32* %3, align 4, !dbg !10731
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10734, metadata !DIExpression()), !dbg !10735
  store i32 0, i32* %4, align 4, !dbg !10735
  br label %8, !dbg !10736

; <label>:8:                                      ; preds = %21, %1
  %9 = load i32, i32* %3, align 4, !dbg !10737
  %10 = add nsw i32 %9, -1, !dbg !10737
  store i32 %10, i32* %3, align 4, !dbg !10737
  %11 = icmp ne i32 %9, 0, !dbg !10737
  br i1 %11, label %12, label %19, !dbg !10738

; <label>:12:                                     ; preds = %8
  %13 = load i8*, i8** %2, align 8, !dbg !10739
  %14 = load i32, i32* %3, align 4, !dbg !10740
  %15 = sext i32 %14 to i64, !dbg !10739
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !10739
  %17 = load i8, i8* %16, align 1, !dbg !10739
  %18 = call zeroext i1 @HX_isspace.134(i8 zeroext %17), !dbg !10741
  br label %19

; <label>:19:                                     ; preds = %12, %8
  %20 = phi i1 [ false, %8 ], [ %18, %12 ], !dbg !10742
  br i1 %20, label %21, label %24, !dbg !10736

; <label>:21:                                     ; preds = %19
  %22 = load i32, i32* %4, align 4, !dbg !10743
  %23 = add nsw i32 %22, 1, !dbg !10743
  store i32 %23, i32* %4, align 4, !dbg !10743
  br label %8, !dbg !10736, !llvm.loop !10744

; <label>:24:                                     ; preds = %19
  %25 = load i8*, i8** %2, align 8, !dbg !10746
  %26 = load i32, i32* %3, align 4, !dbg !10747
  %27 = add nsw i32 %26, 1, !dbg !10747
  store i32 %27, i32* %3, align 4, !dbg !10747
  %28 = sext i32 %27 to i64, !dbg !10746
  %29 = getelementptr inbounds i8, i8* %25, i64 %28, !dbg !10746
  store i8 0, i8* %29, align 1, !dbg !10748
  %30 = load i32, i32* %4, align 4, !dbg !10749
  %31 = sext i32 %30 to i64, !dbg !10749
  ret i64 %31, !dbg !10750
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strsep2(i8**, i8*) #0 !dbg !10751 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !10752, metadata !DIExpression()), !dbg !10753
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10754, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10756, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10758, metadata !DIExpression()), !dbg !10759
  %8 = load i8**, i8*** %4, align 8, !dbg !10760
  %9 = load i8*, i8** %8, align 8, !dbg !10762
  %10 = icmp eq i8* %9, null, !dbg !10763
  br i1 %10, label %11, label %12, !dbg !10764

; <label>:11:                                     ; preds = %2
  store i8* null, i8** %3, align 8, !dbg !10765
  br label %31, !dbg !10765

; <label>:12:                                     ; preds = %2
  %13 = load i8**, i8*** %4, align 8, !dbg !10766
  %14 = load i8*, i8** %13, align 8, !dbg !10767
  store i8* %14, i8** %7, align 8, !dbg !10768
  %15 = load i8**, i8*** %4, align 8, !dbg !10769
  %16 = load i8*, i8** %15, align 8, !dbg !10771
  %17 = load i8*, i8** %5, align 8, !dbg !10772
  %18 = call i8* @strstr(i8* %16, i8* %17) #10, !dbg !10773
  store i8* %18, i8** %6, align 8, !dbg !10774
  %19 = icmp eq i8* %18, null, !dbg !10775
  br i1 %19, label %20, label %23, !dbg !10776

; <label>:20:                                     ; preds = %12
  %21 = load i8**, i8*** %4, align 8, !dbg !10777
  store i8* null, i8** %21, align 8, !dbg !10779
  %22 = load i8*, i8** %7, align 8, !dbg !10780
  store i8* %22, i8** %3, align 8, !dbg !10781
  br label %31, !dbg !10781

; <label>:23:                                     ; preds = %12
  %24 = load i8*, i8** %6, align 8, !dbg !10782
  store i8 0, i8* %24, align 1, !dbg !10783
  %25 = load i8*, i8** %6, align 8, !dbg !10784
  %26 = load i8*, i8** %5, align 8, !dbg !10785
  %27 = call i64 @strlen(i8* %26) #10, !dbg !10786
  %28 = getelementptr inbounds i8, i8* %25, i64 %27, !dbg !10787
  %29 = load i8**, i8*** %4, align 8, !dbg !10788
  store i8* %28, i8** %29, align 8, !dbg !10789
  %30 = load i8*, i8** %7, align 8, !dbg !10790
  store i8* %30, i8** %3, align 8, !dbg !10791
  br label %31, !dbg !10791

; <label>:31:                                     ; preds = %23, %20, %11
  %32 = load i8*, i8** %3, align 8, !dbg !10792
  ret i8* %32, !dbg !10792
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strquote(i8*, i32, i8**) #0 !dbg !10793 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10796, metadata !DIExpression()), !dbg !10797
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10798, metadata !DIExpression()), !dbg !10799
  store i8** %2, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !10800, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.declare(metadata i8* %8, metadata !10802, metadata !DIExpression()), !dbg !10803
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10804, metadata !DIExpression()), !dbg !10805
  %11 = load i32, i32* %6, align 4, !dbg !10806
  %12 = icmp ult i32 %11, 6, !dbg !10807
  br i1 %12, label %13, label %21, !dbg !10808

; <label>:13:                                     ; preds = %3
  %14 = load i8*, i8** %5, align 8, !dbg !10809
  %15 = load i32, i32* %6, align 4, !dbg !10810
  %16 = zext i32 %15 to i64, !dbg !10811
  %17 = getelementptr inbounds [6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 %16, !dbg !10811
  %18 = load i8*, i8** %17, align 8, !dbg !10811
  %19 = call i8* @strpbrk(i8* %14, i8* %18) #10, !dbg !10812
  %20 = icmp ne i8* %19, null, !dbg !10813
  br label %21

; <label>:21:                                     ; preds = %13, %3
  %22 = phi i1 [ false, %3 ], [ %20, %13 ], !dbg !10814
  %23 = zext i1 %22 to i8, !dbg !10815
  store i8 %23, i8* %8, align 1, !dbg !10815
  %24 = load i8**, i8*** %7, align 8, !dbg !10816
  %25 = icmp ne i8** %24, null, !dbg !10818
  br i1 %25, label %26, label %36, !dbg !10819

; <label>:26:                                     ; preds = %21
  %27 = load i8**, i8*** %7, align 8, !dbg !10820
  %28 = load i8*, i8** %27, align 8, !dbg !10822
  call void @free(i8* %28) #7, !dbg !10823
  %29 = load i8**, i8*** %7, align 8, !dbg !10824
  store i8* null, i8** %29, align 8, !dbg !10825
  %30 = load i8, i8* %8, align 1, !dbg !10826
  %31 = trunc i8 %30 to i1, !dbg !10826
  br i1 %31, label %35, label %32, !dbg !10828

; <label>:32:                                     ; preds = %26
  %33 = load i8*, i8** %5, align 8, !dbg !10829
  store i8* %33, i8** %10, align 8, !dbg !10829
  %34 = load i8*, i8** %10, align 8, !dbg !10829
  store i8* %34, i8** %4, align 8, !dbg !10831
  br label %80, !dbg !10831

; <label>:35:                                     ; preds = %26
  br label %43, !dbg !10832

; <label>:36:                                     ; preds = %21
  %37 = load i8, i8* %8, align 1, !dbg !10833
  %38 = trunc i8 %37 to i1, !dbg !10833
  br i1 %38, label %42, label %39, !dbg !10836

; <label>:39:                                     ; preds = %36
  %40 = load i8*, i8** %5, align 8, !dbg !10837
  %41 = call i8* @HX_strdup.125(i8* %40), !dbg !10838
  store i8* %41, i8** %4, align 8, !dbg !10839
  br label %80, !dbg !10839

; <label>:42:                                     ; preds = %36
  store i8** %9, i8*** %7, align 8, !dbg !10840
  br label %43

; <label>:43:                                     ; preds = %42, %35
  %44 = load i8*, i8** %5, align 8, !dbg !10841
  %45 = load i32, i32* %6, align 4, !dbg !10842
  %46 = call i64 @HX_quoted_size(i8* %44, i32 %45), !dbg !10843
  %47 = add i64 %46, 1, !dbg !10844
  %48 = call noalias i8* @malloc(i64 %47) #7, !dbg !10845
  %49 = load i8**, i8*** %7, align 8, !dbg !10846
  store i8* %48, i8** %49, align 8, !dbg !10847
  %50 = load i8**, i8*** %7, align 8, !dbg !10848
  %51 = load i8*, i8** %50, align 8, !dbg !10850
  %52 = icmp eq i8* %51, null, !dbg !10851
  br i1 %52, label %53, label %54, !dbg !10852

; <label>:53:                                     ; preds = %43
  store i8* null, i8** %4, align 8, !dbg !10853
  br label %80, !dbg !10853

; <label>:54:                                     ; preds = %43
  %55 = load i32, i32* %6, align 4, !dbg !10854
  switch i32 %55, label %79 [
    i32 1, label %56
    i32 2, label %56
    i32 3, label %65
    i32 4, label %70
    i32 5, label %70
  ], !dbg !10855

; <label>:56:                                     ; preds = %54, %54
  %57 = load i8**, i8*** %7, align 8, !dbg !10856
  %58 = load i8*, i8** %57, align 8, !dbg !10858
  %59 = load i8*, i8** %5, align 8, !dbg !10859
  %60 = load i32, i32* %6, align 4, !dbg !10860
  %61 = zext i32 %60 to i64, !dbg !10861
  %62 = getelementptr inbounds [6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 %61, !dbg !10861
  %63 = load i8*, i8** %62, align 8, !dbg !10861
  %64 = call i8* @HX_quote_backslash(i8* %58, i8* %59, i8* %63), !dbg !10862
  store i8* %64, i8** %4, align 8, !dbg !10863
  br label %80, !dbg !10863

; <label>:65:                                     ; preds = %54
  %66 = load i8**, i8*** %7, align 8, !dbg !10864
  %67 = load i8*, i8** %66, align 8, !dbg !10865
  %68 = load i8*, i8** %5, align 8, !dbg !10866
  %69 = call i8* @HX_quote_html(i8* %67, i8* %68), !dbg !10867
  store i8* %69, i8** %4, align 8, !dbg !10868
  br label %80, !dbg !10868

; <label>:70:                                     ; preds = %54, %54
  %71 = load i8**, i8*** %7, align 8, !dbg !10869
  %72 = load i8*, i8** %71, align 8, !dbg !10870
  %73 = load i8*, i8** %5, align 8, !dbg !10871
  %74 = load i32, i32* %6, align 4, !dbg !10872
  %75 = zext i32 %74 to i64, !dbg !10873
  %76 = getelementptr inbounds [6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 %75, !dbg !10873
  %77 = load i8*, i8** %76, align 8, !dbg !10873
  %78 = call i8* @HX_quote_ldap(i8* %72, i8* %73, i8* %77), !dbg !10874
  store i8* %78, i8** %4, align 8, !dbg !10875
  br label %80, !dbg !10875

; <label>:79:                                     ; preds = %54
  store i8* null, i8** %4, align 8, !dbg !10876
  br label %80, !dbg !10876

; <label>:80:                                     ; preds = %79, %70, %65, %56, %53, %39, %32
  %81 = load i8*, i8** %4, align 8, !dbg !10877
  ret i8* %81, !dbg !10877
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @HX_quoted_size(i8*, i32) #0 !dbg !10878 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10881, metadata !DIExpression()), !dbg !10882
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10883, metadata !DIExpression()), !dbg !10884
  %6 = load i32, i32* %5, align 4, !dbg !10885
  switch i32 %6, label %24 [
    i32 1, label %7
    i32 2, label %7
    i32 3, label %14
    i32 4, label %17
    i32 5, label %17
  ], !dbg !10886

; <label>:7:                                      ; preds = %2, %2
  %8 = load i8*, i8** %4, align 8, !dbg !10887
  %9 = load i32, i32* %5, align 4, !dbg !10889
  %10 = zext i32 %9 to i64, !dbg !10890
  %11 = getelementptr inbounds [6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 %10, !dbg !10890
  %12 = load i8*, i8** %11, align 8, !dbg !10890
  %13 = call i64 @HX_qsize_backslash(i8* %8, i8* %12, i32 1), !dbg !10891
  store i64 %13, i64* %3, align 8, !dbg !10892
  br label %27, !dbg !10892

; <label>:14:                                     ; preds = %2
  %15 = load i8*, i8** %4, align 8, !dbg !10893
  %16 = call i64 @HX_qsize_html(i8* %15), !dbg !10894
  store i64 %16, i64* %3, align 8, !dbg !10895
  br label %27, !dbg !10895

; <label>:17:                                     ; preds = %2, %2
  %18 = load i8*, i8** %4, align 8, !dbg !10896
  %19 = load i32, i32* %5, align 4, !dbg !10897
  %20 = zext i32 %19 to i64, !dbg !10898
  %21 = getelementptr inbounds [6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 %20, !dbg !10898
  %22 = load i8*, i8** %21, align 8, !dbg !10898
  %23 = call i64 @HX_qsize_backslash(i8* %18, i8* %22, i32 2), !dbg !10899
  store i64 %23, i64* %3, align 8, !dbg !10900
  br label %27, !dbg !10900

; <label>:24:                                     ; preds = %2
  %25 = load i8*, i8** %4, align 8, !dbg !10901
  %26 = call i64 @strlen(i8* %25) #10, !dbg !10902
  store i64 %26, i64* %3, align 8, !dbg !10903
  br label %27, !dbg !10903

; <label>:27:                                     ; preds = %24, %17, %14, %7
  %28 = load i64, i64* %3, align 8, !dbg !10904
  ret i64 %28, !dbg !10904
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_quote_backslash(i8*, i8*, i8*) #0 !dbg !10905 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10906, metadata !DIExpression()), !dbg !10907
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10908, metadata !DIExpression()), !dbg !10909
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10910, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10912, metadata !DIExpression()), !dbg !10913
  %9 = load i8*, i8** %4, align 8, !dbg !10914
  store i8* %9, i8** %7, align 8, !dbg !10913
  call void @llvm.dbg.declare(metadata i64* %8, metadata !10915, metadata !DIExpression()), !dbg !10916
  br label %10, !dbg !10917

; <label>:10:                                     ; preds = %37, %3
  %11 = load i8*, i8** %5, align 8, !dbg !10918
  %12 = load i8, i8* %11, align 1, !dbg !10919
  %13 = sext i8 %12 to i32, !dbg !10919
  %14 = icmp ne i32 %13, 0, !dbg !10920
  br i1 %14, label %15, label %45, !dbg !10917

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %5, align 8, !dbg !10921
  %17 = load i8*, i8** %6, align 8, !dbg !10923
  %18 = call i64 @strcspn(i8* %16, i8* %17) #10, !dbg !10924
  store i64 %18, i64* %8, align 8, !dbg !10925
  %19 = load i64, i64* %8, align 8, !dbg !10926
  %20 = icmp ugt i64 %19, 0, !dbg !10928
  br i1 %20, label %21, label %37, !dbg !10929

; <label>:21:                                     ; preds = %15
  %22 = load i8*, i8** %4, align 8, !dbg !10930
  %23 = load i8*, i8** %5, align 8, !dbg !10932
  %24 = load i64, i64* %8, align 8, !dbg !10933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %24, i1 false), !dbg !10934
  %25 = load i64, i64* %8, align 8, !dbg !10935
  %26 = load i8*, i8** %4, align 8, !dbg !10936
  %27 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !10936
  store i8* %27, i8** %4, align 8, !dbg !10936
  %28 = load i64, i64* %8, align 8, !dbg !10937
  %29 = load i8*, i8** %5, align 8, !dbg !10938
  %30 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !10938
  store i8* %30, i8** %5, align 8, !dbg !10938
  %31 = load i8*, i8** %5, align 8, !dbg !10939
  %32 = load i8, i8* %31, align 1, !dbg !10941
  %33 = sext i8 %32 to i32, !dbg !10941
  %34 = icmp eq i32 %33, 0, !dbg !10942
  br i1 %34, label %35, label %36, !dbg !10943

; <label>:35:                                     ; preds = %21
  br label %45, !dbg !10944

; <label>:36:                                     ; preds = %21
  br label %37, !dbg !10945

; <label>:37:                                     ; preds = %36, %15
  %38 = load i8*, i8** %4, align 8, !dbg !10946
  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !10946
  store i8* %39, i8** %4, align 8, !dbg !10946
  store i8 92, i8* %38, align 1, !dbg !10947
  %40 = load i8*, i8** %5, align 8, !dbg !10948
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !10948
  store i8* %41, i8** %5, align 8, !dbg !10948
  %42 = load i8, i8* %40, align 1, !dbg !10949
  %43 = load i8*, i8** %4, align 8, !dbg !10950
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !10950
  store i8* %44, i8** %4, align 8, !dbg !10950
  store i8 %42, i8* %43, align 1, !dbg !10951
  br label %10, !dbg !10917, !llvm.loop !10952

; <label>:45:                                     ; preds = %35, %10
  %46 = load i8*, i8** %4, align 8, !dbg !10954
  store i8 0, i8* %46, align 1, !dbg !10955
  %47 = load i8*, i8** %7, align 8, !dbg !10956
  ret i8* %47, !dbg !10957
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_quote_html(i8*, i8*) #0 !dbg !10958 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10959, metadata !DIExpression()), !dbg !10960
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10961, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10963, metadata !DIExpression()), !dbg !10964
  %7 = load i8*, i8** %3, align 8, !dbg !10965
  store i8* %7, i8** %5, align 8, !dbg !10964
  br label %8, !dbg !10966

; <label>:8:                                      ; preds = %64, %2
  %9 = load i8*, i8** %4, align 8, !dbg !10967
  %10 = load i8, i8* %9, align 1, !dbg !10968
  %11 = sext i8 %10 to i32, !dbg !10968
  %12 = icmp ne i32 %11, 0, !dbg !10969
  br i1 %12, label %13, label %65, !dbg !10966

; <label>:13:                                     ; preds = %8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10970, metadata !DIExpression()), !dbg !10972
  %14 = load i8*, i8** %4, align 8, !dbg !10973
  %15 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 3), align 8, !dbg !10974
  %16 = call i64 @strcspn(i8* %14, i8* %15) #10, !dbg !10975
  store i64 %16, i64* %6, align 8, !dbg !10972
  %17 = load i64, i64* %6, align 8, !dbg !10976
  %18 = icmp ugt i64 %17, 0, !dbg !10978
  br i1 %18, label %19, label %35, !dbg !10979

; <label>:19:                                     ; preds = %13
  %20 = load i8*, i8** %3, align 8, !dbg !10980
  %21 = load i8*, i8** %4, align 8, !dbg !10982
  %22 = load i64, i64* %6, align 8, !dbg !10983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 %22, i1 false), !dbg !10984
  %23 = load i64, i64* %6, align 8, !dbg !10985
  %24 = load i8*, i8** %3, align 8, !dbg !10986
  %25 = getelementptr inbounds i8, i8* %24, i64 %23, !dbg !10986
  store i8* %25, i8** %3, align 8, !dbg !10986
  %26 = load i64, i64* %6, align 8, !dbg !10987
  %27 = load i8*, i8** %4, align 8, !dbg !10988
  %28 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !10988
  store i8* %28, i8** %4, align 8, !dbg !10988
  %29 = load i8*, i8** %4, align 8, !dbg !10989
  %30 = load i8, i8* %29, align 1, !dbg !10991
  %31 = sext i8 %30 to i32, !dbg !10991
  %32 = icmp eq i32 %31, 0, !dbg !10992
  br i1 %32, label %33, label %34, !dbg !10993

; <label>:33:                                     ; preds = %19
  br label %65, !dbg !10994

; <label>:34:                                     ; preds = %19
  br label %35, !dbg !10995

; <label>:35:                                     ; preds = %34, %13
  %36 = load i8*, i8** %4, align 8, !dbg !10996
  %37 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !10996
  store i8* %37, i8** %4, align 8, !dbg !10996
  %38 = load i8, i8* %36, align 1, !dbg !10997
  %39 = sext i8 %38 to i32, !dbg !10997
  switch i32 %39, label %64 [
    i32 34, label %40
    i32 38, label %46
    i32 60, label %52
    i32 62, label %58
  ], !dbg !10998

; <label>:40:                                     ; preds = %35
  br label %41, !dbg !10999

; <label>:41:                                     ; preds = %40
  %42 = load i8*, i8** %3, align 8, !dbg !11001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.136, i32 0, i32 0), i64 6, i1 false), !dbg !11001
  %43 = load i8*, i8** %3, align 8, !dbg !11001
  %44 = getelementptr inbounds i8, i8* %43, i64 6, !dbg !11001
  store i8* %44, i8** %3, align 8, !dbg !11001
  br label %45, !dbg !11001

; <label>:45:                                     ; preds = %41
  br label %64, !dbg !11003

; <label>:46:                                     ; preds = %35
  br label %47, !dbg !11004

; <label>:47:                                     ; preds = %46
  %48 = load i8*, i8** %3, align 8, !dbg !11005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.137, i32 0, i32 0), i64 5, i1 false), !dbg !11005
  %49 = load i8*, i8** %3, align 8, !dbg !11005
  %50 = getelementptr inbounds i8, i8* %49, i64 5, !dbg !11005
  store i8* %50, i8** %3, align 8, !dbg !11005
  br label %51, !dbg !11005

; <label>:51:                                     ; preds = %47
  br label %64, !dbg !11007

; <label>:52:                                     ; preds = %35
  br label %53, !dbg !11008

; <label>:53:                                     ; preds = %52
  %54 = load i8*, i8** %3, align 8, !dbg !11009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.138, i32 0, i32 0), i64 4, i1 false), !dbg !11009
  %55 = load i8*, i8** %3, align 8, !dbg !11009
  %56 = getelementptr inbounds i8, i8* %55, i64 4, !dbg !11009
  store i8* %56, i8** %3, align 8, !dbg !11009
  br label %57, !dbg !11009

; <label>:57:                                     ; preds = %53
  br label %64, !dbg !11011

; <label>:58:                                     ; preds = %35
  br label %59, !dbg !11012

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %3, align 8, !dbg !11013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.139, i32 0, i32 0), i64 4, i1 false), !dbg !11013
  %61 = load i8*, i8** %3, align 8, !dbg !11013
  %62 = getelementptr inbounds i8, i8* %61, i64 4, !dbg !11013
  store i8* %62, i8** %3, align 8, !dbg !11013
  br label %63, !dbg !11013

; <label>:63:                                     ; preds = %59
  br label %64, !dbg !11015

; <label>:64:                                     ; preds = %63, %57, %51, %45, %35
  br label %8, !dbg !10966, !llvm.loop !11016

; <label>:65:                                     ; preds = %33, %8
  %66 = load i8*, i8** %3, align 8, !dbg !11018
  store i8 0, i8* %66, align 1, !dbg !11019
  %67 = load i8*, i8** %5, align 8, !dbg !11020
  ret i8* %67, !dbg !11021
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @HX_quote_ldap(i8*, i8*, i8*) #0 !dbg !316 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11022, metadata !DIExpression()), !dbg !11023
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11024, metadata !DIExpression()), !dbg !11025
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11026, metadata !DIExpression()), !dbg !11027
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11028, metadata !DIExpression()), !dbg !11029
  %9 = load i8*, i8** %4, align 8, !dbg !11030
  store i8* %9, i8** %7, align 8, !dbg !11029
  call void @llvm.dbg.declare(metadata i64* %8, metadata !11031, metadata !DIExpression()), !dbg !11032
  br label %10, !dbg !11033

; <label>:10:                                     ; preds = %37, %3
  %11 = load i8*, i8** %5, align 8, !dbg !11034
  %12 = load i8, i8* %11, align 1, !dbg !11035
  %13 = sext i8 %12 to i32, !dbg !11035
  %14 = icmp ne i32 %13, 0, !dbg !11036
  br i1 %14, label %15, label %60, !dbg !11033

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %5, align 8, !dbg !11037
  %17 = load i8*, i8** %6, align 8, !dbg !11039
  %18 = call i64 @strcspn(i8* %16, i8* %17) #10, !dbg !11040
  store i64 %18, i64* %8, align 8, !dbg !11041
  %19 = load i64, i64* %8, align 8, !dbg !11042
  %20 = icmp ugt i64 %19, 0, !dbg !11044
  br i1 %20, label %21, label %37, !dbg !11045

; <label>:21:                                     ; preds = %15
  %22 = load i8*, i8** %4, align 8, !dbg !11046
  %23 = load i8*, i8** %5, align 8, !dbg !11048
  %24 = load i64, i64* %8, align 8, !dbg !11049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %24, i1 false), !dbg !11050
  %25 = load i64, i64* %8, align 8, !dbg !11051
  %26 = load i8*, i8** %4, align 8, !dbg !11052
  %27 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !11052
  store i8* %27, i8** %4, align 8, !dbg !11052
  %28 = load i64, i64* %8, align 8, !dbg !11053
  %29 = load i8*, i8** %5, align 8, !dbg !11054
  %30 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !11054
  store i8* %30, i8** %5, align 8, !dbg !11054
  %31 = load i8*, i8** %5, align 8, !dbg !11055
  %32 = load i8, i8* %31, align 1, !dbg !11057
  %33 = sext i8 %32 to i32, !dbg !11057
  %34 = icmp eq i32 %33, 0, !dbg !11058
  br i1 %34, label %35, label %36, !dbg !11059

; <label>:35:                                     ; preds = %21
  br label %60, !dbg !11060

; <label>:36:                                     ; preds = %21
  br label %37, !dbg !11061

; <label>:37:                                     ; preds = %36, %15
  %38 = load i8*, i8** %4, align 8, !dbg !11062
  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !11062
  store i8* %39, i8** %4, align 8, !dbg !11062
  store i8 92, i8* %38, align 1, !dbg !11063
  %40 = load i8*, i8** %5, align 8, !dbg !11064
  %41 = load i8, i8* %40, align 1, !dbg !11065
  %42 = sext i8 %41 to i32, !dbg !11065
  %43 = ashr i32 %42, 4, !dbg !11066
  %44 = and i32 %43, 15, !dbg !11067
  %45 = sext i32 %44 to i64, !dbg !11068
  %46 = getelementptr inbounds [17 x i8], [17 x i8]* @HX_quote_ldap.hex, i64 0, i64 %45, !dbg !11068
  %47 = load i8, i8* %46, align 1, !dbg !11068
  %48 = load i8*, i8** %4, align 8, !dbg !11069
  %49 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !11069
  store i8* %49, i8** %4, align 8, !dbg !11069
  store i8 %47, i8* %48, align 1, !dbg !11070
  %50 = load i8*, i8** %5, align 8, !dbg !11071
  %51 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !11071
  store i8* %51, i8** %5, align 8, !dbg !11071
  %52 = load i8, i8* %50, align 1, !dbg !11072
  %53 = sext i8 %52 to i32, !dbg !11072
  %54 = and i32 %53, 15, !dbg !11073
  %55 = sext i32 %54 to i64, !dbg !11074
  %56 = getelementptr inbounds [17 x i8], [17 x i8]* @HX_quote_ldap.hex, i64 0, i64 %55, !dbg !11074
  %57 = load i8, i8* %56, align 1, !dbg !11074
  %58 = load i8*, i8** %4, align 8, !dbg !11075
  %59 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !11075
  store i8* %59, i8** %4, align 8, !dbg !11075
  store i8 %57, i8* %58, align 1, !dbg !11076
  br label %10, !dbg !11033, !llvm.loop !11077

; <label>:60:                                     ; preds = %35, %10
  %61 = load i8*, i8** %4, align 8, !dbg !11079
  store i8 0, i8* %61, align 1, !dbg !11080
  %62 = load i8*, i8** %7, align 8, !dbg !11081
  ret i8* %62, !dbg !11082
}

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @HX_qsize_backslash(i8*, i8*, i32) #0 !dbg !11083 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11086, metadata !DIExpression()), !dbg !11087
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11088, metadata !DIExpression()), !dbg !11089
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11090, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11092, metadata !DIExpression()), !dbg !11093
  %9 = load i8*, i8** %4, align 8, !dbg !11094
  store i8* %9, i8** %7, align 8, !dbg !11093
  call void @llvm.dbg.declare(metadata i64* %8, metadata !11095, metadata !DIExpression()), !dbg !11096
  %10 = load i8*, i8** %4, align 8, !dbg !11097
  %11 = call i64 @strlen(i8* %10) #10, !dbg !11098
  store i64 %11, i64* %8, align 8, !dbg !11096
  br label %12, !dbg !11099

; <label>:12:                                     ; preds = %17, %3
  %13 = load i8*, i8** %7, align 8, !dbg !11100
  %14 = load i8*, i8** %5, align 8, !dbg !11101
  %15 = call i8* @strpbrk(i8* %13, i8* %14) #10, !dbg !11102
  store i8* %15, i8** %7, align 8, !dbg !11103
  %16 = icmp ne i8* %15, null, !dbg !11104
  br i1 %16, label %17, label %24, !dbg !11099

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* %6, align 4, !dbg !11105
  %19 = zext i32 %18 to i64, !dbg !11105
  %20 = load i64, i64* %8, align 8, !dbg !11107
  %21 = add i64 %20, %19, !dbg !11107
  store i64 %21, i64* %8, align 8, !dbg !11107
  %22 = load i8*, i8** %7, align 8, !dbg !11108
  %23 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !11108
  store i8* %23, i8** %7, align 8, !dbg !11108
  br label %12, !dbg !11099, !llvm.loop !11109

; <label>:24:                                     ; preds = %12
  %25 = load i64, i64* %8, align 8, !dbg !11111
  ret i64 %25, !dbg !11112
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @HX_qsize_html(i8*) #0 !dbg !11113 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11116, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11118, metadata !DIExpression()), !dbg !11119
  %5 = load i8*, i8** %2, align 8, !dbg !11120
  store i8* %5, i8** %3, align 8, !dbg !11119
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11121, metadata !DIExpression()), !dbg !11122
  %6 = load i8*, i8** %2, align 8, !dbg !11123
  %7 = call i64 @strlen(i8* %6) #10, !dbg !11124
  store i64 %7, i64* %4, align 8, !dbg !11122
  br label %8, !dbg !11125

; <label>:8:                                      ; preds = %26, %1
  %9 = load i8*, i8** %3, align 8, !dbg !11126
  %10 = load i8*, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @HX_quote_chars, i64 0, i64 3), align 8, !dbg !11127
  %11 = call i8* @strpbrk(i8* %9, i8* %10) #10, !dbg !11128
  store i8* %11, i8** %3, align 8, !dbg !11129
  %12 = icmp ne i8* %11, null, !dbg !11130
  br i1 %12, label %13, label %29, !dbg !11125

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8, !dbg !11131
  %15 = load i8, i8* %14, align 1, !dbg !11133
  %16 = sext i8 %15 to i32, !dbg !11133
  switch i32 %16, label %26 [
    i32 34, label %17
    i32 38, label %20
    i32 60, label %23
    i32 62, label %23
  ], !dbg !11134

; <label>:17:                                     ; preds = %13
  %18 = load i64, i64* %4, align 8, !dbg !11135
  %19 = add i64 %18, 5, !dbg !11135
  store i64 %19, i64* %4, align 8, !dbg !11135
  br label %26, !dbg !11137

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %4, align 8, !dbg !11138
  %22 = add i64 %21, 4, !dbg !11138
  store i64 %22, i64* %4, align 8, !dbg !11138
  br label %26, !dbg !11139

; <label>:23:                                     ; preds = %13, %13
  %24 = load i64, i64* %4, align 8, !dbg !11140
  %25 = add i64 %24, 3, !dbg !11140
  store i64 %25, i64* %4, align 8, !dbg !11140
  br label %26, !dbg !11141

; <label>:26:                                     ; preds = %23, %20, %17, %13
  %27 = load i8*, i8** %3, align 8, !dbg !11142
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !11142
  store i8* %28, i8** %3, align 8, !dbg !11142
  br label %8, !dbg !11125, !llvm.loop !11143

; <label>:29:                                     ; preds = %8
  %30 = load i64, i64* %4, align 8, !dbg !11145
  ret i64 %30, !dbg !11146
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @HX_strupper(i8*) #0 !dbg !11147 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11148, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11150, metadata !DIExpression()), !dbg !11151
  %4 = load i8*, i8** %2, align 8, !dbg !11152
  store i8* %4, i8** %3, align 8, !dbg !11154
  br label %5, !dbg !11155

; <label>:5:                                      ; preds = %15, %1
  %6 = load i8*, i8** %3, align 8, !dbg !11156
  %7 = load i8, i8* %6, align 1, !dbg !11158
  %8 = sext i8 %7 to i32, !dbg !11158
  %9 = icmp ne i32 %8, 0, !dbg !11159
  br i1 %9, label %10, label %18, !dbg !11160

; <label>:10:                                     ; preds = %5
  %11 = load i8*, i8** %3, align 8, !dbg !11161
  %12 = load i8, i8* %11, align 1, !dbg !11162
  %13 = call zeroext i8 @HX_toupper(i8 zeroext %12), !dbg !11163
  %14 = load i8*, i8** %3, align 8, !dbg !11164
  store i8 %13, i8* %14, align 1, !dbg !11165
  br label %15, !dbg !11166

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !11167
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !11167
  store i8* %17, i8** %3, align 8, !dbg !11167
  br label %5, !dbg !11168, !llvm.loop !11169

; <label>:18:                                     ; preds = %5
  %19 = load i8*, i8** %2, align 8, !dbg !11171
  ret i8* %19, !dbg !11172
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @HX_toupper(i8 zeroext) #0 !dbg !11173 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !11174, metadata !DIExpression()), !dbg !11175
  %3 = load i8, i8* %2, align 1, !dbg !11176
  %4 = zext i8 %3 to i32, !dbg !11176
  %5 = call i32 @toupper(i32 %4) #10, !dbg !11177
  %6 = trunc i32 %5 to i8, !dbg !11177
  ret i8 %6, !dbg !11178
}

; Function Attrs: nounwind readonly
declare i32 @toupper(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_diff_timespec(%struct.timespec*, %struct.timespec*, %struct.timespec*) #0 !dbg !11179 {
  %4 = alloca %struct.timespec*, align 8
  %5 = alloca %struct.timespec*, align 8
  %6 = alloca %struct.timespec*, align 8
  store %struct.timespec* %0, %struct.timespec** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %4, metadata !11189, metadata !DIExpression()), !dbg !11190
  store %struct.timespec* %1, %struct.timespec** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %5, metadata !11191, metadata !DIExpression()), !dbg !11192
  store %struct.timespec* %2, %struct.timespec** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %6, metadata !11193, metadata !DIExpression()), !dbg !11194
  %7 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11195
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 0, !dbg !11196
  %9 = load i64, i64* %8, align 8, !dbg !11196
  %10 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11197
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i32 0, i32 0, !dbg !11198
  %12 = load i64, i64* %11, align 8, !dbg !11198
  %13 = sub nsw i64 %9, %12, !dbg !11199
  %14 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11200
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i32 0, i32 0, !dbg !11201
  store i64 %13, i64* %15, align 8, !dbg !11202
  %16 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11203
  %17 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i32 0, i32 1, !dbg !11204
  %18 = load i64, i64* %17, align 8, !dbg !11204
  %19 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11205
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i32 0, i32 1, !dbg !11206
  %21 = load i64, i64* %20, align 8, !dbg !11206
  %22 = sub nsw i64 %18, %21, !dbg !11207
  %23 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11208
  %24 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i32 0, i32 1, !dbg !11209
  store i64 %22, i64* %24, align 8, !dbg !11210
  %25 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11211
  %26 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i32 0, i32 0, !dbg !11213
  %27 = load i64, i64* %26, align 8, !dbg !11213
  %28 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11214
  %29 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i32 0, i32 0, !dbg !11215
  %30 = load i64, i64* %29, align 8, !dbg !11215
  %31 = icmp slt i64 %27, %30, !dbg !11216
  br i1 %31, label %48, label %32, !dbg !11217

; <label>:32:                                     ; preds = %3
  %33 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11218
  %34 = getelementptr inbounds %struct.timespec, %struct.timespec* %33, i32 0, i32 0, !dbg !11219
  %35 = load i64, i64* %34, align 8, !dbg !11219
  %36 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11220
  %37 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i32 0, i32 0, !dbg !11221
  %38 = load i64, i64* %37, align 8, !dbg !11221
  %39 = icmp eq i64 %35, %38, !dbg !11222
  br i1 %39, label %40, label %78, !dbg !11223

; <label>:40:                                     ; preds = %32
  %41 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11224
  %42 = getelementptr inbounds %struct.timespec, %struct.timespec* %41, i32 0, i32 1, !dbg !11225
  %43 = load i64, i64* %42, align 8, !dbg !11225
  %44 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11226
  %45 = getelementptr inbounds %struct.timespec, %struct.timespec* %44, i32 0, i32 1, !dbg !11227
  %46 = load i64, i64* %45, align 8, !dbg !11227
  %47 = icmp slt i64 %43, %46, !dbg !11228
  br i1 %47, label %48, label %78, !dbg !11229

; <label>:48:                                     ; preds = %40, %3
  %49 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11230
  %50 = getelementptr inbounds %struct.timespec, %struct.timespec* %49, i32 0, i32 1, !dbg !11233
  %51 = load i64, i64* %50, align 8, !dbg !11233
  %52 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11234
  %53 = getelementptr inbounds %struct.timespec, %struct.timespec* %52, i32 0, i32 1, !dbg !11235
  %54 = load i64, i64* %53, align 8, !dbg !11235
  %55 = icmp sgt i64 %51, %54, !dbg !11236
  br i1 %55, label %56, label %67, !dbg !11237

; <label>:56:                                     ; preds = %48
  %57 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11238
  %58 = getelementptr inbounds %struct.timespec, %struct.timespec* %57, i32 0, i32 1, !dbg !11240
  %59 = load i64, i64* %58, align 8, !dbg !11240
  %60 = add nsw i64 -1000000000, %59, !dbg !11241
  %61 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11242
  %62 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i32 0, i32 1, !dbg !11243
  store i64 %60, i64* %62, align 8, !dbg !11244
  %63 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11245
  %64 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i32 0, i32 0, !dbg !11246
  %65 = load i64, i64* %64, align 8, !dbg !11247
  %66 = add nsw i64 %65, 1, !dbg !11247
  store i64 %66, i64* %64, align 8, !dbg !11247
  br label %67, !dbg !11248

; <label>:67:                                     ; preds = %56, %48
  %68 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11249
  %69 = getelementptr inbounds %struct.timespec, %struct.timespec* %68, i32 0, i32 0, !dbg !11251
  %70 = load i64, i64* %69, align 8, !dbg !11251
  %71 = icmp slt i64 %70, 0, !dbg !11252
  br i1 %71, label %72, label %77, !dbg !11253

; <label>:72:                                     ; preds = %67
  %73 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11254
  %74 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i32 0, i32 1, !dbg !11255
  %75 = load i64, i64* %74, align 8, !dbg !11256
  %76 = mul nsw i64 %75, -1, !dbg !11256
  store i64 %76, i64* %74, align 8, !dbg !11256
  br label %77, !dbg !11254

; <label>:77:                                     ; preds = %72, %67
  br label %93, !dbg !11257

; <label>:78:                                     ; preds = %40, %32
  %79 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11258
  %80 = getelementptr inbounds %struct.timespec, %struct.timespec* %79, i32 0, i32 1, !dbg !11260
  %81 = load i64, i64* %80, align 8, !dbg !11260
  %82 = icmp slt i64 %81, 0, !dbg !11261
  br i1 %82, label %83, label %92, !dbg !11262

; <label>:83:                                     ; preds = %78
  %84 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11263
  %85 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i32 0, i32 1, !dbg !11265
  %86 = load i64, i64* %85, align 8, !dbg !11266
  %87 = add nsw i64 %86, 1000000000, !dbg !11266
  store i64 %87, i64* %85, align 8, !dbg !11266
  %88 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11267
  %89 = getelementptr inbounds %struct.timespec, %struct.timespec* %88, i32 0, i32 0, !dbg !11268
  %90 = load i64, i64* %89, align 8, !dbg !11269
  %91 = add nsw i64 %90, -1, !dbg !11269
  store i64 %91, i64* %89, align 8, !dbg !11269
  br label %92, !dbg !11270

; <label>:92:                                     ; preds = %83, %78
  br label %93

; <label>:93:                                     ; preds = %92, %77
  ret void, !dbg !11271
}

; Function Attrs: noinline nounwind optnone uwtable
define void @HX_diff_timeval(%struct.timespec*, %struct.timespec*, %struct.timespec*) #0 !dbg !11272 {
  %4 = alloca %struct.timespec*, align 8
  %5 = alloca %struct.timespec*, align 8
  %6 = alloca %struct.timespec*, align 8
  store %struct.timespec* %0, %struct.timespec** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %4, metadata !11282, metadata !DIExpression()), !dbg !11283
  store %struct.timespec* %1, %struct.timespec** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %5, metadata !11284, metadata !DIExpression()), !dbg !11285
  store %struct.timespec* %2, %struct.timespec** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %6, metadata !11286, metadata !DIExpression()), !dbg !11287
  %7 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11288
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 0, !dbg !11289
  %9 = load i64, i64* %8, align 8, !dbg !11289
  %10 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11290
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i32 0, i32 0, !dbg !11291
  %12 = load i64, i64* %11, align 8, !dbg !11291
  %13 = sub nsw i64 %9, %12, !dbg !11292
  %14 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11293
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i32 0, i32 0, !dbg !11294
  store i64 %13, i64* %15, align 8, !dbg !11295
  %16 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11296
  %17 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i32 0, i32 1, !dbg !11297
  %18 = load i64, i64* %17, align 8, !dbg !11297
  %19 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11298
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i32 0, i32 1, !dbg !11299
  %21 = load i64, i64* %20, align 8, !dbg !11299
  %22 = sub nsw i64 %18, %21, !dbg !11300
  %23 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11301
  %24 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i32 0, i32 1, !dbg !11302
  store i64 %22, i64* %24, align 8, !dbg !11303
  %25 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11304
  %26 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i32 0, i32 0, !dbg !11306
  %27 = load i64, i64* %26, align 8, !dbg !11306
  %28 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11307
  %29 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i32 0, i32 0, !dbg !11308
  %30 = load i64, i64* %29, align 8, !dbg !11308
  %31 = icmp slt i64 %27, %30, !dbg !11309
  br i1 %31, label %48, label %32, !dbg !11310

; <label>:32:                                     ; preds = %3
  %33 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11311
  %34 = getelementptr inbounds %struct.timespec, %struct.timespec* %33, i32 0, i32 0, !dbg !11312
  %35 = load i64, i64* %34, align 8, !dbg !11312
  %36 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11313
  %37 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i32 0, i32 0, !dbg !11314
  %38 = load i64, i64* %37, align 8, !dbg !11314
  %39 = icmp eq i64 %35, %38, !dbg !11315
  br i1 %39, label %40, label %78, !dbg !11316

; <label>:40:                                     ; preds = %32
  %41 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11317
  %42 = getelementptr inbounds %struct.timespec, %struct.timespec* %41, i32 0, i32 1, !dbg !11318
  %43 = load i64, i64* %42, align 8, !dbg !11318
  %44 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11319
  %45 = getelementptr inbounds %struct.timespec, %struct.timespec* %44, i32 0, i32 1, !dbg !11320
  %46 = load i64, i64* %45, align 8, !dbg !11320
  %47 = icmp slt i64 %43, %46, !dbg !11321
  br i1 %47, label %48, label %78, !dbg !11322

; <label>:48:                                     ; preds = %40, %3
  %49 = load %struct.timespec*, %struct.timespec** %5, align 8, !dbg !11323
  %50 = getelementptr inbounds %struct.timespec, %struct.timespec* %49, i32 0, i32 1, !dbg !11326
  %51 = load i64, i64* %50, align 8, !dbg !11326
  %52 = load %struct.timespec*, %struct.timespec** %6, align 8, !dbg !11327
  %53 = getelementptr inbounds %struct.timespec, %struct.timespec* %52, i32 0, i32 1, !dbg !11328
  %54 = load i64, i64* %53, align 8, !dbg !11328
  %55 = icmp sgt i64 %51, %54, !dbg !11329
  br i1 %55, label %56, label %67, !dbg !11330

; <label>:56:                                     ; preds = %48
  %57 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11331
  %58 = getelementptr inbounds %struct.timespec, %struct.timespec* %57, i32 0, i32 1, !dbg !11333
  %59 = load i64, i64* %58, align 8, !dbg !11333
  %60 = add nsw i64 -1000000, %59, !dbg !11334
  %61 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11335
  %62 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i32 0, i32 1, !dbg !11336
  store i64 %60, i64* %62, align 8, !dbg !11337
  %63 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11338
  %64 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i32 0, i32 0, !dbg !11339
  %65 = load i64, i64* %64, align 8, !dbg !11340
  %66 = add nsw i64 %65, 1, !dbg !11340
  store i64 %66, i64* %64, align 8, !dbg !11340
  br label %67, !dbg !11341

; <label>:67:                                     ; preds = %56, %48
  %68 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11342
  %69 = getelementptr inbounds %struct.timespec, %struct.timespec* %68, i32 0, i32 0, !dbg !11344
  %70 = load i64, i64* %69, align 8, !dbg !11344
  %71 = icmp slt i64 %70, 0, !dbg !11345
  br i1 %71, label %72, label %77, !dbg !11346

; <label>:72:                                     ; preds = %67
  %73 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11347
  %74 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i32 0, i32 1, !dbg !11348
  %75 = load i64, i64* %74, align 8, !dbg !11349
  %76 = mul nsw i64 %75, -1, !dbg !11349
  store i64 %76, i64* %74, align 8, !dbg !11349
  br label %77, !dbg !11347

; <label>:77:                                     ; preds = %72, %67
  br label %93, !dbg !11350

; <label>:78:                                     ; preds = %40, %32
  %79 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11351
  %80 = getelementptr inbounds %struct.timespec, %struct.timespec* %79, i32 0, i32 1, !dbg !11353
  %81 = load i64, i64* %80, align 8, !dbg !11353
  %82 = icmp slt i64 %81, 0, !dbg !11354
  br i1 %82, label %83, label %92, !dbg !11355

; <label>:83:                                     ; preds = %78
  %84 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11356
  %85 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i32 0, i32 1, !dbg !11358
  %86 = load i64, i64* %85, align 8, !dbg !11359
  %87 = add nsw i64 %86, 1000000, !dbg !11359
  store i64 %87, i64* %85, align 8, !dbg !11359
  %88 = load %struct.timespec*, %struct.timespec** %4, align 8, !dbg !11360
  %89 = getelementptr inbounds %struct.timespec, %struct.timespec* %88, i32 0, i32 0, !dbg !11361
  %90 = load i64, i64* %89, align 8, !dbg !11362
  %91 = add nsw i64 %90, -1, !dbg !11362
  store i64 %91, i64* %89, align 8, !dbg !11362
  br label %92, !dbg !11363

; <label>:92:                                     ; preds = %83, %78
  br label %93

; <label>:93:                                     ; preds = %92, %77
  ret void, !dbg !11364
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @HX_time_compare(%struct.stat*, %struct.stat*, i8 signext) #0 !dbg !11365 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.stat*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  store %struct.stat* %0, %struct.stat** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %5, metadata !11387, metadata !DIExpression()), !dbg !11388
  store %struct.stat* %1, %struct.stat** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %6, metadata !11389, metadata !DIExpression()), !dbg !11390
  store i8 %2, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !11391, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.declare(metadata i64* %8, metadata !11393, metadata !DIExpression()), !dbg !11394
  %9 = load i8, i8* %7, align 1, !dbg !11395
  %10 = sext i8 %9 to i32, !dbg !11395
  %11 = icmp eq i32 %10, 109, !dbg !11397
  br i1 %11, label %12, label %37, !dbg !11398

; <label>:12:                                     ; preds = %3
  %13 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !11399
  %14 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 12, !dbg !11400
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i32 0, i32 0, !dbg !11401
  %16 = load i64, i64* %15, align 8, !dbg !11401
  %17 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !11402
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 12, !dbg !11403
  %19 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i32 0, i32 0, !dbg !11404
  %20 = load i64, i64* %19, align 8, !dbg !11404
  %21 = sub nsw i64 %16, %20, !dbg !11405
  store i64 %21, i64* %8, align 8, !dbg !11406
  %22 = icmp ne i64 %21, 0, !dbg !11407
  br i1 %22, label %23, label %25, !dbg !11408

; <label>:23:                                     ; preds = %12
  %24 = load i64, i64* %8, align 8, !dbg !11409
  br label %35, !dbg !11408

; <label>:25:                                     ; preds = %12
  %26 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !11410
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 12, !dbg !11411
  %28 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i32 0, i32 1, !dbg !11412
  %29 = load i64, i64* %28, align 8, !dbg !11412
  %30 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !11413
  %31 = getelementptr inbounds %struct.stat, %struct.stat* %30, i32 0, i32 12, !dbg !11414
  %32 = getelementptr inbounds %struct.timespec, %struct.timespec* %31, i32 0, i32 1, !dbg !11415
  %33 = load i64, i64* %32, align 8, !dbg !11415
  %34 = sub nsw i64 %29, %33, !dbg !11416
  br label %35, !dbg !11408

; <label>:35:                                     ; preds = %25, %23
  %36 = phi i64 [ %24, %23 ], [ %34, %25 ], !dbg !11408
  store i64 %36, i64* %4, align 8, !dbg !11417
  br label %98, !dbg !11417

; <label>:37:                                     ; preds = %3
  %38 = load i8, i8* %7, align 1, !dbg !11418
  %39 = sext i8 %38 to i32, !dbg !11418
  %40 = icmp eq i32 %39, 97, !dbg !11420
  br i1 %40, label %41, label %66, !dbg !11421

; <label>:41:                                     ; preds = %37
  %42 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !11422
  %43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 11, !dbg !11423
  %44 = getelementptr inbounds %struct.timespec, %struct.timespec* %43, i32 0, i32 0, !dbg !11424
  %45 = load i64, i64* %44, align 8, !dbg !11424
  %46 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !11425
  %47 = getelementptr inbounds %struct.stat, %struct.stat* %46, i32 0, i32 11, !dbg !11426
  %48 = getelementptr inbounds %struct.timespec, %struct.timespec* %47, i32 0, i32 0, !dbg !11427
  %49 = load i64, i64* %48, align 8, !dbg !11427
  %50 = sub nsw i64 %45, %49, !dbg !11428
  store i64 %50, i64* %8, align 8, !dbg !11429
  %51 = icmp ne i64 %50, 0, !dbg !11430
  br i1 %51, label %52, label %54, !dbg !11431

; <label>:52:                                     ; preds = %41
  %53 = load i64, i64* %8, align 8, !dbg !11432
  br label %64, !dbg !11431

; <label>:54:                                     ; preds = %41
  %55 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !11433
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %55, i32 0, i32 11, !dbg !11434
  %57 = getelementptr inbounds %struct.timespec, %struct.timespec* %56, i32 0, i32 1, !dbg !11435
  %58 = load i64, i64* %57, align 8, !dbg !11435
  %59 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !11436
  %60 = getelementptr inbounds %struct.stat, %struct.stat* %59, i32 0, i32 11, !dbg !11437
  %61 = getelementptr inbounds %struct.timespec, %struct.timespec* %60, i32 0, i32 1, !dbg !11438
  %62 = load i64, i64* %61, align 8, !dbg !11438
  %63 = sub nsw i64 %58, %62, !dbg !11439
  br label %64, !dbg !11431

; <label>:64:                                     ; preds = %54, %52
  %65 = phi i64 [ %53, %52 ], [ %63, %54 ], !dbg !11431
  store i64 %65, i64* %4, align 8, !dbg !11440
  br label %98, !dbg !11440

; <label>:66:                                     ; preds = %37
  %67 = load i8, i8* %7, align 1, !dbg !11441
  %68 = sext i8 %67 to i32, !dbg !11441
  %69 = icmp eq i32 %68, 99, !dbg !11443
  br i1 %69, label %70, label %95, !dbg !11444

; <label>:70:                                     ; preds = %66
  %71 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !11445
  %72 = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 13, !dbg !11446
  %73 = getelementptr inbounds %struct.timespec, %struct.timespec* %72, i32 0, i32 0, !dbg !11447
  %74 = load i64, i64* %73, align 8, !dbg !11447
  %75 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !11448
  %76 = getelementptr inbounds %struct.stat, %struct.stat* %75, i32 0, i32 13, !dbg !11449
  %77 = getelementptr inbounds %struct.timespec, %struct.timespec* %76, i32 0, i32 0, !dbg !11450
  %78 = load i64, i64* %77, align 8, !dbg !11450
  %79 = sub nsw i64 %74, %78, !dbg !11451
  store i64 %79, i64* %8, align 8, !dbg !11452
  %80 = icmp ne i64 %79, 0, !dbg !11453
  br i1 %80, label %81, label %83, !dbg !11454

; <label>:81:                                     ; preds = %70
  %82 = load i64, i64* %8, align 8, !dbg !11455
  br label %93, !dbg !11454

; <label>:83:                                     ; preds = %70
  %84 = load %struct.stat*, %struct.stat** %5, align 8, !dbg !11456
  %85 = getelementptr inbounds %struct.stat, %struct.stat* %84, i32 0, i32 13, !dbg !11457
  %86 = getelementptr inbounds %struct.timespec, %struct.timespec* %85, i32 0, i32 1, !dbg !11458
  %87 = load i64, i64* %86, align 8, !dbg !11458
  %88 = load %struct.stat*, %struct.stat** %6, align 8, !dbg !11459
  %89 = getelementptr inbounds %struct.stat, %struct.stat* %88, i32 0, i32 13, !dbg !11460
  %90 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i32 0, i32 1, !dbg !11461
  %91 = load i64, i64* %90, align 8, !dbg !11461
  %92 = sub nsw i64 %87, %91, !dbg !11462
  br label %93, !dbg !11454

; <label>:93:                                     ; preds = %83, %81
  %94 = phi i64 [ %82, %81 ], [ %92, %83 ], !dbg !11454
  store i64 %94, i64* %4, align 8, !dbg !11463
  br label %98, !dbg !11463

; <label>:95:                                     ; preds = %66
  br label %96

; <label>:96:                                     ; preds = %95
  br label %97

; <label>:97:                                     ; preds = %96
  store i64 0, i64* %4, align 8, !dbg !11464
  br label %98, !dbg !11464

; <label>:98:                                     ; preds = %97, %93, %64, %35
  %99 = load i64, i64* %4, align 8, !dbg !11465
  ret i64 %99, !dbg !11465
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXproc_run_async(i8**, %struct.HXproc*) #0 !dbg !11466 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca %struct.HXproc*, align 8
  %6 = alloca [3 x [2 x i32]], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8**, align 8
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !11489, metadata !DIExpression()), !dbg !11490
  store %struct.HXproc* %1, %struct.HXproc** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.HXproc** %5, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata [3 x [2 x i32]]* %6, metadata !11493, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11497, metadata !DIExpression()), !dbg !11498
  store i32 -1, i32* %7, align 4, !dbg !11498
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11499, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11501, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11503, metadata !DIExpression()), !dbg !11504
  %14 = load i8**, i8*** %4, align 8, !dbg !11505
  %15 = icmp eq i8** %14, null, !dbg !11507
  br i1 %15, label %20, label %16, !dbg !11508

; <label>:16:                                     ; preds = %2
  %17 = load i8**, i8*** %4, align 8, !dbg !11509
  %18 = load i8*, i8** %17, align 8, !dbg !11510
  %19 = icmp eq i8* %18, null, !dbg !11511
  br i1 %19, label %20, label %21, !dbg !11512

; <label>:20:                                     ; preds = %16, %2
  store i32 -14, i32* %3, align 4, !dbg !11513
  br label %403, !dbg !11513

; <label>:21:                                     ; preds = %16
  %22 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11514
  %23 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %22, i32 0, i32 5, !dbg !11515
  store i32 -1, i32* %23, align 4, !dbg !11516
  %24 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11517
  %25 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %24, i32 0, i32 4, !dbg !11518
  store i32 -1, i32* %25, align 8, !dbg !11519
  %26 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11520
  %27 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %26, i32 0, i32 3, !dbg !11521
  store i32 -1, i32* %27, align 4, !dbg !11522
  %28 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11523
  %29 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %28, i32 0, i32 2, !dbg !11524
  %30 = load i32, i32* %29, align 8, !dbg !11524
  %31 = and i32 %30, 72, !dbg !11525
  %32 = icmp eq i32 %31, 72, !dbg !11526
  %33 = zext i1 %32 to i32, !dbg !11526
  store i32 %33, i32* %10, align 4, !dbg !11527
  %34 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11528
  %35 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %34, i32 0, i32 2, !dbg !11529
  %36 = load i32, i32* %35, align 8, !dbg !11529
  %37 = and i32 %36, 144, !dbg !11530
  %38 = icmp eq i32 %37, 144, !dbg !11531
  %39 = zext i1 %38 to i32, !dbg !11531
  %40 = load i32, i32* %10, align 4, !dbg !11532
  %41 = or i32 %40, %39, !dbg !11532
  store i32 %41, i32* %10, align 4, !dbg !11532
  %42 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11533
  %43 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %42, i32 0, i32 2, !dbg !11534
  %44 = load i32, i32* %43, align 8, !dbg !11534
  %45 = and i32 %44, 288, !dbg !11535
  %46 = icmp eq i32 %45, 288, !dbg !11536
  %47 = zext i1 %46 to i32, !dbg !11536
  %48 = load i32, i32* %10, align 4, !dbg !11537
  %49 = or i32 %48, %47, !dbg !11537
  store i32 %49, i32* %10, align 4, !dbg !11537
  %50 = load i32, i32* %10, align 4, !dbg !11538
  %51 = icmp ugt i32 %50, 0, !dbg !11540
  br i1 %51, label %52, label %53, !dbg !11541

; <label>:52:                                     ; preds = %21
  store i32 -22, i32* %3, align 4, !dbg !11542
  br label %403, !dbg !11542

; <label>:53:                                     ; preds = %21
  %54 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11543
  %55 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %54, i32 0, i32 2, !dbg !11545
  %56 = load i32, i32* %55, align 8, !dbg !11545
  %57 = and i32 %56, 448, !dbg !11546
  %58 = icmp ne i32 %57, 0, !dbg !11546
  br i1 %58, label %59, label %67, !dbg !11547

; <label>:59:                                     ; preds = %53
  %60 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.149, i32 0, i32 0), i32 2), !dbg !11548
  store i32 %60, i32* %7, align 4, !dbg !11551
  %61 = icmp slt i32 %60, 0, !dbg !11552
  br i1 %61, label %62, label %66, !dbg !11553

; <label>:62:                                     ; preds = %59
  %63 = call i32* @__errno_location() #11, !dbg !11554
  %64 = load i32, i32* %63, align 4, !dbg !11554
  %65 = sub nsw i32 0, %64, !dbg !11555
  store i32 %65, i32* %3, align 4, !dbg !11556
  br label %403, !dbg !11556

; <label>:66:                                     ; preds = %59
  br label %67, !dbg !11557

; <label>:67:                                     ; preds = %66, %53
  %68 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11558
  %69 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i32 0, i32 0, !dbg !11560
  %70 = call i32 @HXproc_build_pipes(%struct.HXproc* %68, [2 x i32]* %69), !dbg !11561
  store i32 %70, i32* %8, align 4, !dbg !11562
  %71 = icmp sle i32 %70, 0, !dbg !11563
  br i1 %71, label %72, label %84, !dbg !11564

; <label>:72:                                     ; preds = %67
  %73 = call i32* @__errno_location() #11, !dbg !11565
  %74 = load i32, i32* %73, align 4, !dbg !11565
  store i32 %74, i32* %9, align 4, !dbg !11567
  %75 = load i32, i32* %7, align 4, !dbg !11568
  %76 = icmp sge i32 %75, 0, !dbg !11570
  br i1 %76, label %77, label %80, !dbg !11571

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* %7, align 4, !dbg !11572
  %79 = call i32 @close(i32 %78), !dbg !11573
  br label %80, !dbg !11573

; <label>:80:                                     ; preds = %77, %72
  %81 = load i32, i32* %9, align 4, !dbg !11574
  %82 = call i32* @__errno_location() #11, !dbg !11575
  store i32 %81, i32* %82, align 4, !dbg !11576
  %83 = load i32, i32* %8, align 4, !dbg !11577
  store i32 %83, i32* %3, align 4, !dbg !11578
  br label %403, !dbg !11578

; <label>:84:                                     ; preds = %67
  %85 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11579
  %86 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %85, i32 0, i32 0, !dbg !11581
  %87 = load %struct.HXproc_ops*, %struct.HXproc_ops** %86, align 8, !dbg !11581
  %88 = icmp ne %struct.HXproc_ops* %87, null, !dbg !11582
  br i1 %88, label %89, label %105, !dbg !11583

; <label>:89:                                     ; preds = %84
  %90 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11584
  %91 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %90, i32 0, i32 0, !dbg !11585
  %92 = load %struct.HXproc_ops*, %struct.HXproc_ops** %91, align 8, !dbg !11585
  %93 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %92, i32 0, i32 0, !dbg !11586
  %94 = load void (i8*)*, void (i8*)** %93, align 8, !dbg !11586
  %95 = icmp ne void (i8*)* %94, null, !dbg !11587
  br i1 %95, label %96, label %105, !dbg !11588

; <label>:96:                                     ; preds = %89
  %97 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11589
  %98 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %97, i32 0, i32 0, !dbg !11590
  %99 = load %struct.HXproc_ops*, %struct.HXproc_ops** %98, align 8, !dbg !11590
  %100 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %99, i32 0, i32 0, !dbg !11591
  %101 = load void (i8*)*, void (i8*)** %100, align 8, !dbg !11591
  %102 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11592
  %103 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %102, i32 0, i32 1, !dbg !11593
  %104 = load i8*, i8** %103, align 8, !dbg !11593
  call void %101(i8* %104), !dbg !11589
  br label %105, !dbg !11589

; <label>:105:                                    ; preds = %96, %89, %84
  %106 = call i32 @fork() #7, !dbg !11594
  %107 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11596
  %108 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %107, i32 0, i32 6, !dbg !11597
  store i32 %106, i32* %108, align 8, !dbg !11598
  %109 = icmp slt i32 %106, 0, !dbg !11599
  br i1 %109, label %110, label %144, !dbg !11600

; <label>:110:                                    ; preds = %105
  %111 = call i32* @__errno_location() #11, !dbg !11601
  %112 = load i32, i32* %111, align 4, !dbg !11601
  store i32 %112, i32* %9, align 4, !dbg !11603
  %113 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11604
  %114 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %113, i32 0, i32 0, !dbg !11606
  %115 = load %struct.HXproc_ops*, %struct.HXproc_ops** %114, align 8, !dbg !11606
  %116 = icmp ne %struct.HXproc_ops* %115, null, !dbg !11607
  br i1 %116, label %117, label %133, !dbg !11608

; <label>:117:                                    ; preds = %110
  %118 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11609
  %119 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %118, i32 0, i32 0, !dbg !11610
  %120 = load %struct.HXproc_ops*, %struct.HXproc_ops** %119, align 8, !dbg !11610
  %121 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %120, i32 0, i32 2, !dbg !11611
  %122 = load void (i8*)*, void (i8*)** %121, align 8, !dbg !11611
  %123 = icmp ne void (i8*)* %122, null, !dbg !11612
  br i1 %123, label %124, label %133, !dbg !11613

; <label>:124:                                    ; preds = %117
  %125 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11614
  %126 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %125, i32 0, i32 0, !dbg !11615
  %127 = load %struct.HXproc_ops*, %struct.HXproc_ops** %126, align 8, !dbg !11615
  %128 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %127, i32 0, i32 2, !dbg !11616
  %129 = load void (i8*)*, void (i8*)** %128, align 8, !dbg !11616
  %130 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11617
  %131 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %130, i32 0, i32 1, !dbg !11618
  %132 = load i8*, i8** %131, align 8, !dbg !11618
  call void %129(i8* %132), !dbg !11614
  br label %133, !dbg !11614

; <label>:133:                                    ; preds = %124, %117, %110
  %134 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i32 0, i32 0, !dbg !11619
  call void @HXproc_close_pipes([2 x i32]* %134), !dbg !11620
  %135 = load i32, i32* %7, align 4, !dbg !11621
  %136 = icmp sge i32 %135, 0, !dbg !11623
  br i1 %136, label %137, label %140, !dbg !11624

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* %7, align 4, !dbg !11625
  %139 = call i32 @close(i32 %138), !dbg !11626
  br label %140, !dbg !11626

; <label>:140:                                    ; preds = %137, %133
  %141 = load i32, i32* %9, align 4, !dbg !11627
  %142 = call i32* @__errno_location() #11, !dbg !11628
  store i32 %141, i32* %142, align 4, !dbg !11629
  %143 = sub nsw i32 0, %141, !dbg !11630
  store i32 %143, i32* %3, align 4, !dbg !11631
  br label %403, !dbg !11631

; <label>:144:                                    ; preds = %105
  %145 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11632
  %146 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %145, i32 0, i32 6, !dbg !11634
  %147 = load i32, i32* %146, align 8, !dbg !11634
  %148 = icmp eq i32 %147, 0, !dbg !11635
  br i1 %148, label %149, label %353, !dbg !11636

; <label>:149:                                    ; preds = %144
  call void @llvm.dbg.declare(metadata i8** %11, metadata !11637, metadata !DIExpression()), !dbg !11639
  %150 = load i8**, i8*** %4, align 8, !dbg !11640
  %151 = load i8*, i8** %150, align 8, !dbg !11641
  store i8* %151, i8** %11, align 8, !dbg !11639
  %152 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11642
  %153 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %152, i32 0, i32 2, !dbg !11644
  %154 = load i32, i32* %153, align 8, !dbg !11644
  %155 = and i32 %154, 8, !dbg !11645
  %156 = icmp ne i32 %155, 0, !dbg !11645
  br i1 %156, label %157, label %164, !dbg !11646

; <label>:157:                                    ; preds = %149
  %158 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 0, !dbg !11647
  %159 = getelementptr inbounds [2 x i32], [2 x i32]* %158, i64 0, i64 0, !dbg !11647
  %160 = load i32, i32* %159, align 16, !dbg !11647
  %161 = call i32 @dup(i32 %160) #7, !dbg !11648
  %162 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11649
  %163 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %162, i32 0, i32 3, !dbg !11650
  store i32 %161, i32* %163, align 4, !dbg !11651
  br label %176, !dbg !11649

; <label>:164:                                    ; preds = %149
  %165 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11652
  %166 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %165, i32 0, i32 2, !dbg !11654
  %167 = load i32, i32* %166, align 8, !dbg !11654
  %168 = and i32 %167, 64, !dbg !11655
  %169 = icmp ne i32 %168, 0, !dbg !11655
  br i1 %169, label %170, label %175, !dbg !11656

; <label>:170:                                    ; preds = %164
  %171 = load i32, i32* %7, align 4, !dbg !11657
  %172 = call i32 @dup(i32 %171) #7, !dbg !11658
  %173 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11659
  %174 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %173, i32 0, i32 3, !dbg !11660
  store i32 %172, i32* %174, align 4, !dbg !11661
  br label %175, !dbg !11659

; <label>:175:                                    ; preds = %170, %164
  br label %176

; <label>:176:                                    ; preds = %175, %157
  %177 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11662
  %178 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %177, i32 0, i32 2, !dbg !11664
  %179 = load i32, i32* %178, align 8, !dbg !11664
  %180 = and i32 %179, 16, !dbg !11665
  %181 = icmp ne i32 %180, 0, !dbg !11665
  br i1 %181, label %182, label %189, !dbg !11666

; <label>:182:                                    ; preds = %176
  %183 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 1, !dbg !11667
  %184 = getelementptr inbounds [2 x i32], [2 x i32]* %183, i64 0, i64 1, !dbg !11667
  %185 = load i32, i32* %184, align 4, !dbg !11667
  %186 = call i32 @dup(i32 %185) #7, !dbg !11668
  %187 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11669
  %188 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %187, i32 0, i32 4, !dbg !11670
  store i32 %186, i32* %188, align 8, !dbg !11671
  br label %201, !dbg !11669

; <label>:189:                                    ; preds = %176
  %190 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11672
  %191 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %190, i32 0, i32 2, !dbg !11674
  %192 = load i32, i32* %191, align 8, !dbg !11674
  %193 = and i32 %192, 128, !dbg !11675
  %194 = icmp ne i32 %193, 0, !dbg !11675
  br i1 %194, label %195, label %200, !dbg !11676

; <label>:195:                                    ; preds = %189
  %196 = load i32, i32* %7, align 4, !dbg !11677
  %197 = call i32 @dup(i32 %196) #7, !dbg !11678
  %198 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11679
  %199 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %198, i32 0, i32 4, !dbg !11680
  store i32 %197, i32* %199, align 8, !dbg !11681
  br label %200, !dbg !11679

; <label>:200:                                    ; preds = %195, %189
  br label %201

; <label>:201:                                    ; preds = %200, %182
  %202 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11682
  %203 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %202, i32 0, i32 2, !dbg !11684
  %204 = load i32, i32* %203, align 8, !dbg !11684
  %205 = and i32 %204, 32, !dbg !11685
  %206 = icmp ne i32 %205, 0, !dbg !11685
  br i1 %206, label %207, label %214, !dbg !11686

; <label>:207:                                    ; preds = %201
  %208 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 2, !dbg !11687
  %209 = getelementptr inbounds [2 x i32], [2 x i32]* %208, i64 0, i64 1, !dbg !11687
  %210 = load i32, i32* %209, align 4, !dbg !11687
  %211 = call i32 @dup(i32 %210) #7, !dbg !11688
  %212 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11689
  %213 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %212, i32 0, i32 5, !dbg !11690
  store i32 %211, i32* %213, align 4, !dbg !11691
  br label %226, !dbg !11689

; <label>:214:                                    ; preds = %201
  %215 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11692
  %216 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %215, i32 0, i32 2, !dbg !11694
  %217 = load i32, i32* %216, align 8, !dbg !11694
  %218 = and i32 %217, 256, !dbg !11695
  %219 = icmp ne i32 %218, 0, !dbg !11695
  br i1 %219, label %220, label %225, !dbg !11696

; <label>:220:                                    ; preds = %214
  %221 = load i32, i32* %7, align 4, !dbg !11697
  %222 = call i32 @dup(i32 %221) #7, !dbg !11698
  %223 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11699
  %224 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %223, i32 0, i32 5, !dbg !11700
  store i32 %222, i32* %224, align 4, !dbg !11701
  br label %225, !dbg !11699

; <label>:225:                                    ; preds = %220, %214
  br label %226

; <label>:226:                                    ; preds = %225, %207
  %227 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11702
  %228 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %227, i32 0, i32 0, !dbg !11704
  %229 = load %struct.HXproc_ops*, %struct.HXproc_ops** %228, align 8, !dbg !11704
  %230 = icmp ne %struct.HXproc_ops* %229, null, !dbg !11705
  br i1 %230, label %231, label %247, !dbg !11706

; <label>:231:                                    ; preds = %226
  %232 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11707
  %233 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %232, i32 0, i32 0, !dbg !11708
  %234 = load %struct.HXproc_ops*, %struct.HXproc_ops** %233, align 8, !dbg !11708
  %235 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %234, i32 0, i32 1, !dbg !11709
  %236 = load void (i8*)*, void (i8*)** %235, align 8, !dbg !11709
  %237 = icmp ne void (i8*)* %236, null, !dbg !11710
  br i1 %237, label %238, label %247, !dbg !11711

; <label>:238:                                    ; preds = %231
  %239 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11712
  %240 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %239, i32 0, i32 0, !dbg !11713
  %241 = load %struct.HXproc_ops*, %struct.HXproc_ops** %240, align 8, !dbg !11713
  %242 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %241, i32 0, i32 1, !dbg !11714
  %243 = load void (i8*)*, void (i8*)** %242, align 8, !dbg !11714
  %244 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11715
  %245 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %244, i32 0, i32 1, !dbg !11716
  %246 = load i8*, i8** %245, align 8, !dbg !11716
  call void %243(i8* %246), !dbg !11712
  br label %247, !dbg !11712

; <label>:247:                                    ; preds = %238, %231, %226
  %248 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i32 0, i32 0, !dbg !11717
  call void @HXproc_close_pipes([2 x i32]* %248), !dbg !11718
  %249 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11719
  %250 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %249, i32 0, i32 2, !dbg !11721
  %251 = load i32, i32* %250, align 8, !dbg !11721
  %252 = and i32 %251, 72, !dbg !11722
  %253 = icmp ne i32 %252, 0, !dbg !11722
  br i1 %253, label %254, label %268, !dbg !11723

; <label>:254:                                    ; preds = %247
  %255 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11724
  %256 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %255, i32 0, i32 3, !dbg !11725
  %257 = load i32, i32* %256, align 4, !dbg !11725
  %258 = icmp ne i32 %257, 0, !dbg !11726
  br i1 %258, label %259, label %268, !dbg !11727

; <label>:259:                                    ; preds = %254
  %260 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11728
  %261 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %260, i32 0, i32 3, !dbg !11730
  %262 = load i32, i32* %261, align 4, !dbg !11730
  %263 = call i32 @dup2(i32 %262, i32 0) #7, !dbg !11731
  %264 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11732
  %265 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %264, i32 0, i32 3, !dbg !11733
  %266 = load i32, i32* %265, align 4, !dbg !11733
  %267 = call i32 @close(i32 %266), !dbg !11734
  br label %268, !dbg !11735

; <label>:268:                                    ; preds = %259, %254, %247
  %269 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11736
  %270 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %269, i32 0, i32 2, !dbg !11738
  %271 = load i32, i32* %270, align 8, !dbg !11738
  %272 = and i32 %271, 144, !dbg !11739
  %273 = icmp ne i32 %272, 0, !dbg !11739
  br i1 %273, label %274, label %288, !dbg !11740

; <label>:274:                                    ; preds = %268
  %275 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11741
  %276 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %275, i32 0, i32 4, !dbg !11742
  %277 = load i32, i32* %276, align 8, !dbg !11742
  %278 = icmp ne i32 %277, 1, !dbg !11743
  br i1 %278, label %279, label %288, !dbg !11744

; <label>:279:                                    ; preds = %274
  %280 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11745
  %281 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %280, i32 0, i32 4, !dbg !11747
  %282 = load i32, i32* %281, align 8, !dbg !11747
  %283 = call i32 @dup2(i32 %282, i32 1) #7, !dbg !11748
  %284 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11749
  %285 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %284, i32 0, i32 4, !dbg !11750
  %286 = load i32, i32* %285, align 8, !dbg !11750
  %287 = call i32 @close(i32 %286), !dbg !11751
  br label %288, !dbg !11752

; <label>:288:                                    ; preds = %279, %274, %268
  %289 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11753
  %290 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %289, i32 0, i32 2, !dbg !11755
  %291 = load i32, i32* %290, align 8, !dbg !11755
  %292 = and i32 %291, 288, !dbg !11756
  %293 = icmp ne i32 %292, 0, !dbg !11756
  br i1 %293, label %294, label %308, !dbg !11757

; <label>:294:                                    ; preds = %288
  %295 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11758
  %296 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %295, i32 0, i32 5, !dbg !11759
  %297 = load i32, i32* %296, align 4, !dbg !11759
  %298 = icmp ne i32 %297, 2, !dbg !11760
  br i1 %298, label %299, label %308, !dbg !11761

; <label>:299:                                    ; preds = %294
  %300 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11762
  %301 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %300, i32 0, i32 5, !dbg !11764
  %302 = load i32, i32* %301, align 4, !dbg !11764
  %303 = call i32 @dup2(i32 %302, i32 2) #7, !dbg !11765
  %304 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11766
  %305 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %304, i32 0, i32 5, !dbg !11767
  %306 = load i32, i32* %305, align 4, !dbg !11767
  %307 = call i32 @close(i32 %306), !dbg !11768
  br label %308, !dbg !11769

; <label>:308:                                    ; preds = %299, %294, %288
  %309 = load i32, i32* %7, align 4, !dbg !11770
  %310 = icmp sge i32 %309, 0, !dbg !11772
  br i1 %310, label %311, label %314, !dbg !11773

; <label>:311:                                    ; preds = %308
  %312 = load i32, i32* %7, align 4, !dbg !11774
  %313 = call i32 @close(i32 %312), !dbg !11775
  br label %314, !dbg !11775

; <label>:314:                                    ; preds = %311, %308
  %315 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11776
  %316 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %315, i32 0, i32 2, !dbg !11778
  %317 = load i32, i32* %316, align 8, !dbg !11778
  %318 = and i32 %317, 4, !dbg !11779
  %319 = icmp ne i32 %318, 0, !dbg !11779
  br i1 %319, label %320, label %323, !dbg !11780

; <label>:320:                                    ; preds = %314
  %321 = load i8**, i8*** %4, align 8, !dbg !11781
  %322 = getelementptr inbounds i8*, i8** %321, i32 1, !dbg !11781
  store i8** %322, i8*** %4, align 8, !dbg !11781
  br label %323, !dbg !11781

; <label>:323:                                    ; preds = %320, %314
  %324 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11782
  %325 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %324, i32 0, i32 2, !dbg !11784
  %326 = load i32, i32* %325, align 8, !dbg !11784
  %327 = and i32 %326, 2, !dbg !11785
  %328 = icmp ne i32 %327, 0, !dbg !11785
  br i1 %328, label %329, label %334, !dbg !11786

; <label>:329:                                    ; preds = %323
  %330 = load i8*, i8** %11, align 8, !dbg !11787
  %331 = load i8**, i8*** %4, align 8, !dbg !11788
  store i8** %331, i8*** %12, align 8, !dbg !11788
  %332 = load i8**, i8*** %12, align 8, !dbg !11788
  %333 = call i32 @execv(i8* %330, i8** %332) #7, !dbg !11790
  br label %339, !dbg !11790

; <label>:334:                                    ; preds = %323
  %335 = load i8*, i8** %11, align 8, !dbg !11791
  %336 = load i8**, i8*** %4, align 8, !dbg !11792
  store i8** %336, i8*** %13, align 8, !dbg !11792
  %337 = load i8**, i8*** %13, align 8, !dbg !11792
  %338 = call i32 @execvp(i8* %335, i8** %337) #7, !dbg !11794
  br label %339

; <label>:339:                                    ; preds = %334, %329
  %340 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11795
  %341 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %340, i32 0, i32 2, !dbg !11797
  %342 = load i32, i32* %341, align 8, !dbg !11797
  %343 = and i32 %342, 1, !dbg !11798
  %344 = icmp ne i32 %343, 0, !dbg !11798
  br i1 %344, label %345, label %352, !dbg !11799

; <label>:345:                                    ; preds = %339
  %346 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !11800
  %347 = load i8*, i8** %11, align 8, !dbg !11801
  %348 = call i32* @__errno_location() #11, !dbg !11802
  %349 = load i32, i32* %348, align 4, !dbg !11802
  %350 = call i8* @strerror(i32 %349) #7, !dbg !11803
  %351 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %346, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.150, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.HXproc_run_async, i32 0, i32 0), i8* %347, i8* %350), !dbg !11804
  br label %352, !dbg !11804

; <label>:352:                                    ; preds = %345, %339
  call void @_exit(i32 -1) #13, !dbg !11805
  unreachable, !dbg !11805

; <label>:353:                                    ; preds = %144
  br label %354

; <label>:354:                                    ; preds = %353
  %355 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11806
  %356 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %355, i32 0, i32 2, !dbg !11808
  %357 = load i32, i32* %356, align 8, !dbg !11808
  %358 = and i32 %357, 8, !dbg !11809
  %359 = icmp ne i32 %358, 0, !dbg !11809
  br i1 %359, label %360, label %370, !dbg !11810

; <label>:360:                                    ; preds = %354
  %361 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 0, !dbg !11811
  %362 = getelementptr inbounds [2 x i32], [2 x i32]* %361, i64 0, i64 0, !dbg !11811
  %363 = load i32, i32* %362, align 16, !dbg !11811
  %364 = call i32 @close(i32 %363), !dbg !11813
  %365 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 0, !dbg !11814
  %366 = getelementptr inbounds [2 x i32], [2 x i32]* %365, i64 0, i64 1, !dbg !11814
  %367 = load i32, i32* %366, align 4, !dbg !11814
  %368 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11815
  %369 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %368, i32 0, i32 3, !dbg !11816
  store i32 %367, i32* %369, align 4, !dbg !11817
  br label %370, !dbg !11818

; <label>:370:                                    ; preds = %360, %354
  %371 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11819
  %372 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %371, i32 0, i32 2, !dbg !11821
  %373 = load i32, i32* %372, align 8, !dbg !11821
  %374 = and i32 %373, 16, !dbg !11822
  %375 = icmp ne i32 %374, 0, !dbg !11822
  br i1 %375, label %376, label %386, !dbg !11823

; <label>:376:                                    ; preds = %370
  %377 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 1, !dbg !11824
  %378 = getelementptr inbounds [2 x i32], [2 x i32]* %377, i64 0, i64 1, !dbg !11824
  %379 = load i32, i32* %378, align 4, !dbg !11824
  %380 = call i32 @close(i32 %379), !dbg !11826
  %381 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 1, !dbg !11827
  %382 = getelementptr inbounds [2 x i32], [2 x i32]* %381, i64 0, i64 0, !dbg !11827
  %383 = load i32, i32* %382, align 8, !dbg !11827
  %384 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11828
  %385 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %384, i32 0, i32 4, !dbg !11829
  store i32 %383, i32* %385, align 8, !dbg !11830
  br label %386, !dbg !11831

; <label>:386:                                    ; preds = %376, %370
  %387 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11832
  %388 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %387, i32 0, i32 2, !dbg !11834
  %389 = load i32, i32* %388, align 8, !dbg !11834
  %390 = and i32 %389, 32, !dbg !11835
  %391 = icmp ne i32 %390, 0, !dbg !11835
  br i1 %391, label %392, label %402, !dbg !11836

; <label>:392:                                    ; preds = %386
  %393 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 2, !dbg !11837
  %394 = getelementptr inbounds [2 x i32], [2 x i32]* %393, i64 0, i64 1, !dbg !11837
  %395 = load i32, i32* %394, align 4, !dbg !11837
  %396 = call i32 @close(i32 %395), !dbg !11839
  %397 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %6, i64 0, i64 2, !dbg !11840
  %398 = getelementptr inbounds [2 x i32], [2 x i32]* %397, i64 0, i64 0, !dbg !11840
  %399 = load i32, i32* %398, align 16, !dbg !11840
  %400 = load %struct.HXproc*, %struct.HXproc** %5, align 8, !dbg !11841
  %401 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %400, i32 0, i32 5, !dbg !11842
  store i32 %399, i32* %401, align 4, !dbg !11843
  br label %402, !dbg !11844

; <label>:402:                                    ; preds = %392, %386
  store i32 1, i32* %3, align 4, !dbg !11845
  br label %403, !dbg !11845

; <label>:403:                                    ; preds = %402, %140, %80, %62, %52, %20
  %404 = load i32, i32* %3, align 4, !dbg !11846
  ret i32 %404, !dbg !11846
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @HXproc_build_pipes(%struct.HXproc*, [2 x i32]*) #0 !dbg !11847 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.HXproc*, align 8
  %5 = alloca [2 x i32]*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.HXproc* %0, %struct.HXproc** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.HXproc** %4, metadata !11854, metadata !DIExpression()), !dbg !11855
  store [2 x i32]* %1, [2 x i32]** %5, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %5, metadata !11856, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11858, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11860, metadata !DIExpression()), !dbg !11861
  store i32 0, i32* %6, align 4, !dbg !11862
  br label %8, !dbg !11864

; <label>:8:                                      ; preds = %27, %2
  %9 = load i32, i32* %6, align 4, !dbg !11865
  %10 = icmp ult i32 %9, 3, !dbg !11867
  br i1 %10, label %11, label %30, !dbg !11868

; <label>:11:                                     ; preds = %8
  store i32 0, i32* %7, align 4, !dbg !11869
  br label %12, !dbg !11871

; <label>:12:                                     ; preds = %23, %11
  %13 = load i32, i32* %7, align 4, !dbg !11872
  %14 = icmp ult i32 %13, 2, !dbg !11874
  br i1 %14, label %15, label %26, !dbg !11875

; <label>:15:                                     ; preds = %12
  %16 = load [2 x i32]*, [2 x i32]** %5, align 8, !dbg !11876
  %17 = load i32, i32* %6, align 4, !dbg !11877
  %18 = zext i32 %17 to i64, !dbg !11876
  %19 = getelementptr inbounds [2 x i32], [2 x i32]* %16, i64 %18, !dbg !11876
  %20 = load i32, i32* %7, align 4, !dbg !11878
  %21 = zext i32 %20 to i64, !dbg !11876
  %22 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 %21, !dbg !11876
  store i32 -1, i32* %22, align 4, !dbg !11879
  br label %23, !dbg !11876

; <label>:23:                                     ; preds = %15
  %24 = load i32, i32* %7, align 4, !dbg !11880
  %25 = add i32 %24, 1, !dbg !11880
  store i32 %25, i32* %7, align 4, !dbg !11880
  br label %12, !dbg !11881, !llvm.loop !11882

; <label>:26:                                     ; preds = %12
  br label %27, !dbg !11883

; <label>:27:                                     ; preds = %26
  %28 = load i32, i32* %6, align 4, !dbg !11884
  %29 = add i32 %28, 1, !dbg !11884
  store i32 %29, i32* %6, align 4, !dbg !11884
  br label %8, !dbg !11885, !llvm.loop !11886

; <label>:30:                                     ; preds = %8
  %31 = load %struct.HXproc*, %struct.HXproc** %4, align 8, !dbg !11888
  %32 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %31, i32 0, i32 2, !dbg !11890
  %33 = load i32, i32* %32, align 8, !dbg !11890
  %34 = and i32 %33, 8, !dbg !11891
  %35 = icmp ne i32 %34, 0, !dbg !11891
  br i1 %35, label %36, label %46, !dbg !11892

; <label>:36:                                     ; preds = %30
  %37 = load [2 x i32]*, [2 x i32]** %5, align 8, !dbg !11893
  %38 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 0, !dbg !11893
  %39 = getelementptr inbounds [2 x i32], [2 x i32]* %38, i32 0, i32 0, !dbg !11893
  %40 = call i32 @pipe(i32* %39) #7, !dbg !11894
  %41 = icmp slt i32 %40, 0, !dbg !11895
  br i1 %41, label %42, label %46, !dbg !11896

; <label>:42:                                     ; preds = %36
  %43 = call i32* @__errno_location() #11, !dbg !11897
  %44 = load i32, i32* %43, align 4, !dbg !11897
  %45 = sub nsw i32 0, %44, !dbg !11898
  store i32 %45, i32* %3, align 4, !dbg !11899
  br label %79, !dbg !11899

; <label>:46:                                     ; preds = %36, %30
  %47 = load %struct.HXproc*, %struct.HXproc** %4, align 8, !dbg !11900
  %48 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %47, i32 0, i32 2, !dbg !11902
  %49 = load i32, i32* %48, align 8, !dbg !11902
  %50 = and i32 %49, 16, !dbg !11903
  %51 = icmp ne i32 %50, 0, !dbg !11903
  br i1 %51, label %52, label %62, !dbg !11904

; <label>:52:                                     ; preds = %46
  %53 = load [2 x i32]*, [2 x i32]** %5, align 8, !dbg !11905
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* %53, i64 1, !dbg !11905
  %55 = getelementptr inbounds [2 x i32], [2 x i32]* %54, i32 0, i32 0, !dbg !11905
  %56 = call i32 @pipe(i32* %55) #7, !dbg !11906
  %57 = icmp slt i32 %56, 0, !dbg !11907
  br i1 %57, label %58, label %62, !dbg !11908

; <label>:58:                                     ; preds = %52
  %59 = call i32* @__errno_location() #11, !dbg !11909
  %60 = load i32, i32* %59, align 4, !dbg !11909
  %61 = sub nsw i32 0, %60, !dbg !11910
  store i32 %61, i32* %3, align 4, !dbg !11911
  br label %79, !dbg !11911

; <label>:62:                                     ; preds = %52, %46
  %63 = load %struct.HXproc*, %struct.HXproc** %4, align 8, !dbg !11912
  %64 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %63, i32 0, i32 2, !dbg !11914
  %65 = load i32, i32* %64, align 8, !dbg !11914
  %66 = and i32 %65, 32, !dbg !11915
  %67 = icmp ne i32 %66, 0, !dbg !11915
  br i1 %67, label %68, label %78, !dbg !11916

; <label>:68:                                     ; preds = %62
  %69 = load [2 x i32]*, [2 x i32]** %5, align 8, !dbg !11917
  %70 = getelementptr inbounds [2 x i32], [2 x i32]* %69, i64 2, !dbg !11917
  %71 = getelementptr inbounds [2 x i32], [2 x i32]* %70, i32 0, i32 0, !dbg !11917
  %72 = call i32 @pipe(i32* %71) #7, !dbg !11918
  %73 = icmp slt i32 %72, 0, !dbg !11919
  br i1 %73, label %74, label %78, !dbg !11920

; <label>:74:                                     ; preds = %68
  %75 = call i32* @__errno_location() #11, !dbg !11921
  %76 = load i32, i32* %75, align 4, !dbg !11921
  %77 = sub nsw i32 0, %76, !dbg !11922
  store i32 %77, i32* %3, align 4, !dbg !11923
  br label %79, !dbg !11923

; <label>:78:                                     ; preds = %68, %62
  store i32 1, i32* %3, align 4, !dbg !11924
  br label %79, !dbg !11924

; <label>:79:                                     ; preds = %78, %74, %58, %42
  %80 = load i32, i32* %3, align 4, !dbg !11925
  ret i32 %80, !dbg !11925
}

; Function Attrs: nounwind
declare i32 @fork() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @HXproc_close_pipes([2 x i32]*) #0 !dbg !11926 {
  %2 = alloca [2 x i32]*, align 8
  store [2 x i32]* %0, [2 x i32]** %2, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %2, metadata !11929, metadata !DIExpression()), !dbg !11930
  %3 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11931
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, !dbg !11931
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0, !dbg !11931
  %6 = load i32, i32* %5, align 4, !dbg !11931
  %7 = icmp sge i32 %6, 0, !dbg !11933
  br i1 %7, label %8, label %14, !dbg !11934

; <label>:8:                                      ; preds = %1
  %9 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11935
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, !dbg !11935
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0, !dbg !11935
  %12 = load i32, i32* %11, align 4, !dbg !11935
  %13 = call i32 @close(i32 %12), !dbg !11936
  br label %14, !dbg !11936

; <label>:14:                                     ; preds = %8, %1
  %15 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11937
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, !dbg !11937
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %16, i64 0, i64 1, !dbg !11937
  %18 = load i32, i32* %17, align 4, !dbg !11937
  %19 = icmp sge i32 %18, 0, !dbg !11939
  br i1 %19, label %20, label %26, !dbg !11940

; <label>:20:                                     ; preds = %14
  %21 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11941
  %22 = getelementptr inbounds [2 x i32], [2 x i32]* %21, i64 0, !dbg !11941
  %23 = getelementptr inbounds [2 x i32], [2 x i32]* %22, i64 0, i64 1, !dbg !11941
  %24 = load i32, i32* %23, align 4, !dbg !11941
  %25 = call i32 @close(i32 %24), !dbg !11942
  br label %26, !dbg !11942

; <label>:26:                                     ; preds = %20, %14
  %27 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11943
  %28 = getelementptr inbounds [2 x i32], [2 x i32]* %27, i64 1, !dbg !11943
  %29 = getelementptr inbounds [2 x i32], [2 x i32]* %28, i64 0, i64 0, !dbg !11943
  %30 = load i32, i32* %29, align 4, !dbg !11943
  %31 = icmp sge i32 %30, 0, !dbg !11945
  br i1 %31, label %32, label %38, !dbg !11946

; <label>:32:                                     ; preds = %26
  %33 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11947
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* %33, i64 1, !dbg !11947
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %34, i64 0, i64 0, !dbg !11947
  %36 = load i32, i32* %35, align 4, !dbg !11947
  %37 = call i32 @close(i32 %36), !dbg !11948
  br label %38, !dbg !11948

; <label>:38:                                     ; preds = %32, %26
  %39 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11949
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %39, i64 1, !dbg !11949
  %41 = getelementptr inbounds [2 x i32], [2 x i32]* %40, i64 0, i64 1, !dbg !11949
  %42 = load i32, i32* %41, align 4, !dbg !11949
  %43 = icmp sge i32 %42, 0, !dbg !11951
  br i1 %43, label %44, label %50, !dbg !11952

; <label>:44:                                     ; preds = %38
  %45 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11953
  %46 = getelementptr inbounds [2 x i32], [2 x i32]* %45, i64 1, !dbg !11953
  %47 = getelementptr inbounds [2 x i32], [2 x i32]* %46, i64 0, i64 1, !dbg !11953
  %48 = load i32, i32* %47, align 4, !dbg !11953
  %49 = call i32 @close(i32 %48), !dbg !11954
  br label %50, !dbg !11954

; <label>:50:                                     ; preds = %44, %38
  %51 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11955
  %52 = getelementptr inbounds [2 x i32], [2 x i32]* %51, i64 2, !dbg !11955
  %53 = getelementptr inbounds [2 x i32], [2 x i32]* %52, i64 0, i64 0, !dbg !11955
  %54 = load i32, i32* %53, align 4, !dbg !11955
  %55 = icmp sge i32 %54, 0, !dbg !11957
  br i1 %55, label %56, label %62, !dbg !11958

; <label>:56:                                     ; preds = %50
  %57 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11959
  %58 = getelementptr inbounds [2 x i32], [2 x i32]* %57, i64 2, !dbg !11959
  %59 = getelementptr inbounds [2 x i32], [2 x i32]* %58, i64 0, i64 0, !dbg !11959
  %60 = load i32, i32* %59, align 4, !dbg !11959
  %61 = call i32 @close(i32 %60), !dbg !11960
  br label %62, !dbg !11960

; <label>:62:                                     ; preds = %56, %50
  %63 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11961
  %64 = getelementptr inbounds [2 x i32], [2 x i32]* %63, i64 2, !dbg !11961
  %65 = getelementptr inbounds [2 x i32], [2 x i32]* %64, i64 0, i64 1, !dbg !11961
  %66 = load i32, i32* %65, align 4, !dbg !11961
  %67 = icmp sge i32 %66, 0, !dbg !11963
  br i1 %67, label %68, label %74, !dbg !11964

; <label>:68:                                     ; preds = %62
  %69 = load [2 x i32]*, [2 x i32]** %2, align 8, !dbg !11965
  %70 = getelementptr inbounds [2 x i32], [2 x i32]* %69, i64 2, !dbg !11965
  %71 = getelementptr inbounds [2 x i32], [2 x i32]* %70, i64 0, i64 1, !dbg !11965
  %72 = load i32, i32* %71, align 4, !dbg !11965
  %73 = call i32 @close(i32 %72), !dbg !11966
  br label %74, !dbg !11966

; <label>:74:                                     ; preds = %68, %62
  ret void, !dbg !11967
}

; Function Attrs: nounwind
declare i32 @dup(i32) #2

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #2

; Function Attrs: nounwind
declare i32 @execv(i8*, i8**) #2

; Function Attrs: nounwind
declare i32 @execvp(i8*, i8**) #2

; Function Attrs: nounwind
declare i8* @strerror(i32) #2

; Function Attrs: noreturn
declare void @_exit(i32) #9

; Function Attrs: nounwind
declare i32 @pipe(i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXproc_run_sync(i8**, i32) #0 !dbg !11968 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.HXproc, align 8
  %7 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !11971, metadata !DIExpression()), !dbg !11972
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11973, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.declare(metadata %struct.HXproc* %6, metadata !11975, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11977, metadata !DIExpression()), !dbg !11978
  %8 = bitcast %struct.HXproc* %6 to i8*, !dbg !11979
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false), !dbg !11979
  %9 = load i32, i32* %5, align 4, !dbg !11980
  %10 = and i32 %9, 56, !dbg !11982
  %11 = icmp ne i32 %10, 0, !dbg !11982
  br i1 %11, label %12, label %13, !dbg !11983

; <label>:12:                                     ; preds = %2
  store i32 -22, i32* %3, align 4, !dbg !11984
  br label %23, !dbg !11984

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* %5, align 4, !dbg !11985
  %15 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %6, i32 0, i32 2, !dbg !11986
  store i32 %14, i32* %15, align 8, !dbg !11987
  %16 = load i8**, i8*** %4, align 8, !dbg !11988
  %17 = call i32 @HXproc_run_async(i8** %16, %struct.HXproc* %6), !dbg !11990
  store i32 %17, i32* %7, align 4, !dbg !11991
  %18 = icmp sle i32 %17, 0, !dbg !11992
  br i1 %18, label %19, label %21, !dbg !11993

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* %7, align 4, !dbg !11994
  store i32 %20, i32* %3, align 4, !dbg !11995
  br label %23, !dbg !11995

; <label>:21:                                     ; preds = %13
  %22 = call i32 @HXproc_wait(%struct.HXproc* %6), !dbg !11996
  store i32 %22, i32* %3, align 4, !dbg !11997
  br label %23, !dbg !11997

; <label>:23:                                     ; preds = %21, %19, %12
  %24 = load i32, i32* %3, align 4, !dbg !11998
  ret i32 %24, !dbg !11998
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @HXproc_wait(%struct.HXproc*) #0 !dbg !11999 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.HXproc*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.anon.18, align 4
  %6 = alloca %struct.anon.14, align 1
  %7 = alloca %struct.anon.14, align 1
  store %struct.HXproc* %0, %struct.HXproc** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.HXproc** %3, metadata !12002, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12004, metadata !DIExpression()), !dbg !12005
  %8 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12006
  %9 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %8, i32 0, i32 6, !dbg !12008
  %10 = load i32, i32* %9, align 8, !dbg !12008
  %11 = call i32 @waitpid(i32 %10, i32* %4, i32 0), !dbg !12009
  %12 = icmp slt i32 %11, 0, !dbg !12010
  br i1 %12, label %13, label %17, !dbg !12011

; <label>:13:                                     ; preds = %1
  %14 = call i32* @__errno_location() #11, !dbg !12012
  %15 = load i32, i32* %14, align 4, !dbg !12012
  %16 = sub nsw i32 0, %15, !dbg !12013
  store i32 %16, i32* %2, align 4, !dbg !12014
  br label %94, !dbg !12014

; <label>:17:                                     ; preds = %1
  %18 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12015
  %19 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %18, i32 0, i32 0, !dbg !12017
  %20 = load %struct.HXproc_ops*, %struct.HXproc_ops** %19, align 8, !dbg !12017
  %21 = icmp ne %struct.HXproc_ops* %20, null, !dbg !12018
  br i1 %21, label %22, label %38, !dbg !12019

; <label>:22:                                     ; preds = %17
  %23 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12020
  %24 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %23, i32 0, i32 0, !dbg !12021
  %25 = load %struct.HXproc_ops*, %struct.HXproc_ops** %24, align 8, !dbg !12021
  %26 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %25, i32 0, i32 2, !dbg !12022
  %27 = load void (i8*)*, void (i8*)** %26, align 8, !dbg !12022
  %28 = icmp ne void (i8*)* %27, null, !dbg !12023
  br i1 %28, label %29, label %38, !dbg !12024

; <label>:29:                                     ; preds = %22
  %30 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12025
  %31 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %30, i32 0, i32 0, !dbg !12026
  %32 = load %struct.HXproc_ops*, %struct.HXproc_ops** %31, align 8, !dbg !12026
  %33 = getelementptr inbounds %struct.HXproc_ops, %struct.HXproc_ops* %32, i32 0, i32 2, !dbg !12027
  %34 = load void (i8*)*, void (i8*)** %33, align 8, !dbg !12027
  %35 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12028
  %36 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %35, i32 0, i32 1, !dbg !12029
  %37 = load i8*, i8** %36, align 8, !dbg !12029
  call void %34(i8* %37), !dbg !12025
  br label %38, !dbg !12025

; <label>:38:                                     ; preds = %29, %22, %17
  %39 = load i32, i32* %4, align 4, !dbg !12030
  %40 = and i32 %39, 127, !dbg !12030
  %41 = icmp eq i32 %40, 0, !dbg !12030
  %42 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12032
  %43 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %42, i32 0, i32 8, !dbg !12033
  %44 = zext i1 %41 to i8, !dbg !12034
  store i8 %44, i8* %43, align 1, !dbg !12034
  br i1 %41, label %45, label %52, !dbg !12035

; <label>:45:                                     ; preds = %38
  %46 = load i32, i32* %4, align 4, !dbg !12036
  %47 = and i32 %46, 65280, !dbg !12036
  %48 = ashr i32 %47, 8, !dbg !12036
  %49 = trunc i32 %48 to i8, !dbg !12036
  %50 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12037
  %51 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %50, i32 0, i32 7, !dbg !12038
  store i8 %49, i8* %51, align 4, !dbg !12039
  br label %52, !dbg !12037

; <label>:52:                                     ; preds = %45, %38
  %53 = load i32, i32* %4, align 4, !dbg !12040
  %54 = and i32 %53, 127, !dbg !12040
  %55 = add nsw i32 %54, 1, !dbg !12040
  %56 = trunc i32 %55 to i8, !dbg !12040
  %57 = sext i8 %56 to i32, !dbg !12040
  %58 = ashr i32 %57, 1, !dbg !12040
  %59 = icmp sgt i32 %58, 0, !dbg !12040
  %60 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12042
  %61 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %60, i32 0, i32 9, !dbg !12043
  %62 = zext i1 %59 to i8, !dbg !12044
  store i8 %62, i8* %61, align 2, !dbg !12044
  br i1 %59, label %63, label %69, !dbg !12045

; <label>:63:                                     ; preds = %52
  %64 = load i32, i32* %4, align 4, !dbg !12046
  %65 = and i32 %64, 127, !dbg !12046
  %66 = trunc i32 %65 to i8, !dbg !12046
  %67 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12047
  %68 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %67, i32 0, i32 7, !dbg !12048
  store i8 %66, i8* %68, align 4, !dbg !12049
  br label %69, !dbg !12047

; <label>:69:                                     ; preds = %63, %52
  %70 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12050
  %71 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %70, i32 0, i32 9, !dbg !12052
  %72 = load i8, i8* %71, align 2, !dbg !12052
  %73 = trunc i8 %72 to i1, !dbg !12052
  br i1 %73, label %74, label %86, !dbg !12053

; <label>:74:                                     ; preds = %69
  %75 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %5, i32 0, i32 0, !dbg !12054
  %76 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %6, i32 0, i32 0, !dbg !12054
  %77 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12054
  %78 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %77, i32 0, i32 7, !dbg !12054
  %79 = load i8, i8* %78, align 4, !dbg !12054
  store i8 %79, i8* %76, align 1, !dbg !12054
  %80 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %6, i32 0, i32 0, !dbg !12054
  %81 = load i8, i8* %80, align 1, !dbg !12054
  %82 = zext i8 %81 to i32, !dbg !12054
  store i32 %82, i32* %75, align 4, !dbg !12054
  %83 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %5, i32 0, i32 0, !dbg !12054
  %84 = load i32, i32* %83, align 4, !dbg !12054
  %85 = shl i32 %84, 16, !dbg !12055
  store i32 %85, i32* %2, align 4, !dbg !12056
  br label %94, !dbg !12056

; <label>:86:                                     ; preds = %69
  %87 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %7, i32 0, i32 0, !dbg !12057
  %88 = load %struct.HXproc*, %struct.HXproc** %3, align 8, !dbg !12057
  %89 = getelementptr inbounds %struct.HXproc, %struct.HXproc* %88, i32 0, i32 7, !dbg !12057
  %90 = load i8, i8* %89, align 4, !dbg !12057
  store i8 %90, i8* %87, align 1, !dbg !12057
  %91 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %7, i32 0, i32 0, !dbg !12057
  %92 = load i8, i8* %91, align 1, !dbg !12057
  %93 = zext i8 %92 to i32, !dbg !12057
  store i32 %93, i32* %2, align 4, !dbg !12058
  br label %94, !dbg !12058

; <label>:94:                                     ; preds = %86, %74, %13
  %95 = load i32, i32* %2, align 4, !dbg !12059
  ret i32 %95, !dbg !12059
}

declare i32 @waitpid(i32, i32*, i32) #4

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }

!llvm.dbg.cu = !{!325, !327, !2, !329, !176, !338, !351, !355, !265, !300, !382, !389}
!llvm.ident = !{!408, !408, !408, !408, !408, !408, !408, !408, !408, !408, !408, !408}
!llvm.module.flags = !{!409, !410, !411, !412, !413, !414}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "fmt_entry_ops", scope: !2, file: !3, line: 51, type: !150, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !88, globals: !103, nameTableKind: None)
!3 = !DIFile(filename: "format.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!4 = !{!5, !13, !24, !73}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HXmap_type", file: !6, line: 24, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/libHX/map.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "HXMAPT_HASH", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "HXMAPT_RBTREE", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "HXMAPT_DEFAULT", value: 1, isUnsigned: true)
!12 = !DIEnumerator(name: "HXMAPT_ORDERED", value: 2, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !14, size: 32, elements: !15)
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23}
!16 = !DIEnumerator(name: "HXMAP_NOREPLACE", value: 1)
!17 = !DIEnumerator(name: "HXMAP_SINGULAR", value: 134217728)
!18 = !DIEnumerator(name: "HXMAP_SKEY", value: 268435456)
!19 = !DIEnumerator(name: "HXMAP_CKEY", value: 536870912)
!20 = !DIEnumerator(name: "HXMAP_SDATA", value: 1073741824)
!21 = !DIEnumerator(name: "HXMAP_CDATA", value: -2147483648)
!22 = !DIEnumerator(name: "HXMAP_SCKEY", value: 805306368)
!23 = !DIEnumerator(name: "HXMAP_SCDATA", value: -1073741824)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !25, line: 40, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/libHX/option.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!26 = !{!27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!27 = !DIEnumerator(name: "HXTYPE_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HXTYPE_VAL", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "HXTYPE_SVAL", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "HXTYPE_BOOL", value: 3, isUnsigned: true)
!31 = !DIEnumerator(name: "HXTYPE_BYTE", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "HXTYPE_UCHAR", value: 5, isUnsigned: true)
!33 = !DIEnumerator(name: "HXTYPE_CHAR", value: 6, isUnsigned: true)
!34 = !DIEnumerator(name: "HXTYPE_USHORT", value: 7, isUnsigned: true)
!35 = !DIEnumerator(name: "HXTYPE_SHORT", value: 8, isUnsigned: true)
!36 = !DIEnumerator(name: "HXTYPE_UINT", value: 9, isUnsigned: true)
!37 = !DIEnumerator(name: "HXTYPE_INT", value: 10, isUnsigned: true)
!38 = !DIEnumerator(name: "HXTYPE_ULONG", value: 11, isUnsigned: true)
!39 = !DIEnumerator(name: "HXTYPE_LONG", value: 12, isUnsigned: true)
!40 = !DIEnumerator(name: "HXTYPE_ULLONG", value: 13, isUnsigned: true)
!41 = !DIEnumerator(name: "HXTYPE_LLONG", value: 14, isUnsigned: true)
!42 = !DIEnumerator(name: "HXTYPE_FLOAT", value: 15, isUnsigned: true)
!43 = !DIEnumerator(name: "HXTYPE_DOUBLE", value: 16, isUnsigned: true)
!44 = !DIEnumerator(name: "HXTYPE_STRING", value: 17, isUnsigned: true)
!45 = !DIEnumerator(name: "HXTYPE_STRP", value: 18, isUnsigned: true)
!46 = !DIEnumerator(name: "HXTYPE_STRDQ", value: 19, isUnsigned: true)
!47 = !DIEnumerator(name: "HXTYPE_UINT8", value: 20, isUnsigned: true)
!48 = !DIEnumerator(name: "HXTYPE_UINT16", value: 21, isUnsigned: true)
!49 = !DIEnumerator(name: "HXTYPE_UINT32", value: 22, isUnsigned: true)
!50 = !DIEnumerator(name: "HXTYPE_UINT64", value: 23, isUnsigned: true)
!51 = !DIEnumerator(name: "HXTYPE_INT8", value: 24, isUnsigned: true)
!52 = !DIEnumerator(name: "HXTYPE_INT16", value: 25, isUnsigned: true)
!53 = !DIEnumerator(name: "HXTYPE_INT32", value: 26, isUnsigned: true)
!54 = !DIEnumerator(name: "HXTYPE_INT64", value: 27, isUnsigned: true)
!55 = !DIEnumerator(name: "HXTYPE_MCSTR", value: 28, isUnsigned: true)
!56 = !DIEnumerator(name: "HXOPT_OPTIONAL", value: 64, isUnsigned: true)
!57 = !DIEnumerator(name: "HXOPT_INC", value: 128, isUnsigned: true)
!58 = !DIEnumerator(name: "HXOPT_DEC", value: 256, isUnsigned: true)
!59 = !DIEnumerator(name: "HXOPT_NOT", value: 512, isUnsigned: true)
!60 = !DIEnumerator(name: "HXOPT_OR", value: 1024, isUnsigned: true)
!61 = !DIEnumerator(name: "HXOPT_AND", value: 2048, isUnsigned: true)
!62 = !DIEnumerator(name: "HXOPT_XOR", value: 4096, isUnsigned: true)
!63 = !DIEnumerator(name: "HXFORMAT_IMMED", value: 8192, isUnsigned: true)
!64 = !DIEnumerator(name: "HXOPT_PTHRU", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "HXOPT_DESTROY_OLD", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "HXOPT_QUIET", value: 4, isUnsigned: true)
!67 = !DIEnumerator(name: "HXOPT_HELPONERR", value: 8, isUnsigned: true)
!68 = !DIEnumerator(name: "HXOPT_USAGEONERR", value: 16, isUnsigned: true)
!69 = !DIEnumerator(name: "HXOPT_ERR_UNKN", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "HXOPT_ERR_VOID", value: 2, isUnsigned: true)
!71 = !DIEnumerator(name: "HXOPT_ERR_MIS", value: 3, isUnsigned: true)
!72 = !DIEnumerator(name: "SHCONF_ONE", value: 1, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !74, line: 46, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!75 = !{!76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87}
!76 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!77 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!78 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!79 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!80 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!81 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!82 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!83 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!84 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!87 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!88 = !{!89, !90, !92, !14, !94, !95, !96, !99}
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!94 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!95 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "hxmc_t", file: !25, line: 18, baseType: !93)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !98)
!103 = !{!104, !0, !106, !124}
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "HXformat2_nexp", scope: !2, file: !3, line: 133, type: !93, isLocal: true, isDefinition: true)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "tf", scope: !108, file: !3, line: 384, type: !118, isLocal: true, isDefinition: true)
!108 = distinct !DISubprogram(name: "HXformat2_xvar", scope: !3, file: !3, line: 373, type: !109, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!109 = !DISubroutineType(types: !110)
!110 = !{!97, !111}
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fmt_entry", file: !3, line: 27, size: 128, elements: !114)
!114 = !{!115, !116}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !113, file: !3, line: 28, baseType: !90, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !113, file: !3, line: 29, baseType: !7, size: 32, offset: 64)
!117 = !{}
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 128, elements: !122)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!122 = !{!123}
!123 = !DISubrange(count: 2)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "HXformat2_fmap", scope: !2, file: !3, line: 274, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 2048, elements: !148)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXformat2_fd", file: !3, line: 121, size: 256, elements: !129)
!129 = !{!130, !131, !136, !137}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !128, file: !3, line: 122, baseType: !120, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !128, file: !3, line: 123, baseType: !132, size: 64, offset: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DISubroutineType(types: !134)
!134 = !{!97, !14, !135}
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "delim", scope: !128, file: !3, line: 124, baseType: !120, size: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !128, file: !3, line: 125, baseType: !138, size: 64, offset: 192)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!141, !142}
!141 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap", file: !6, line: 73, size: 64, elements: !145)
!145 = !{!146, !147}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !144, file: !6, line: 74, baseType: !7, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !144, file: !6, line: 74, baseType: !7, size: 32, offset: 32)
!148 = !{!149}
!149 = !DISubrange(count: 8)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap_ops", file: !6, line: 77, size: 384, elements: !152)
!152 = !{!153, !160, !164, !168, !169, !170}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "k_compare", scope: !151, file: !6, line: 79, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!155 = !DISubroutineType(types: !156)
!156 = !{!14, !90, !90, !157}
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !158, line: 62, baseType: !159)
!158 = !DIFile(filename: "llvm80/build/lib/clang/8.0.1/include/stddef.h", directory: "/root/llvm")
!159 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "k_clone", scope: !151, file: !6, line: 80, baseType: !161, size: 64, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{!89, !90, !157}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "k_free", scope: !151, file: !6, line: 81, baseType: !165, size: 64, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = !DISubroutineType(types: !167)
!167 = !{null, !89}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "d_clone", scope: !151, file: !6, line: 82, baseType: !161, size: 64, offset: 192)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "d_free", scope: !151, file: !6, line: 83, baseType: !165, size: 64, offset: 256)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "k_hash", scope: !151, file: !6, line: 84, baseType: !171, size: 64, offset: 320)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DISubroutineType(types: !173)
!173 = !{!159, !90, !157}
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "HXhash_primes", scope: !176, file: !177, line: 29, type: !260, isLocal: false, isDefinition: true)
!176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !177, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !178, retainedTypes: !191, globals: !255, nameTableKind: None)
!177 = !DIFile(filename: "map.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!178 = !{!5, !13, !179, !187}
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !180, line: 69, baseType: !7, size: 32, elements: !181)
!180 = !DIFile(filename: "./map_int.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!181 = !{!182, !183, !184, !185, !186}
!182 = !DIEnumerator(name: "RBT_LEFT", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "RBT_RIGHT", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "RBT_RED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "RBT_BLACK", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "RBT_MAXDEP", value: 48, isUnsigned: true)
!187 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 62, baseType: !7, size: 32, elements: !188)
!188 = !{!189, !190}
!189 = !DIEnumerator(name: "HXMAP_NOFLAGS", value: 0, isUnsigned: true)
!190 = !DIEnumerator(name: "HXMAP_DTRAV", value: 1, isUnsigned: true)
!191 = !{!192, !89, !194, !233, !92, !215, !253}
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !193, line: 51, baseType: !7)
!193 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXrbtree", file: !180, line: 96, size: 768, elements: !196)
!196 = !{!197, !214, !232}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "super", scope: !195, file: !180, line: 97, baseType: !198, size: 640)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap_private", file: !180, line: 15, size: 640, elements: !199)
!199 = !{!200, !201, !202, !203, !204, !205}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !198, file: !180, line: 17, baseType: !7, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !198, file: !180, line: 17, baseType: !7, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !198, file: !180, line: 20, baseType: !5, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !198, file: !180, line: 21, baseType: !157, size: 64, offset: 128)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !198, file: !180, line: 21, baseType: !157, size: 64, offset: 192)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !198, file: !180, line: 22, baseType: !206, size: 384, offset: 256)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap_ops", file: !6, line: 77, size: 384, elements: !207)
!207 = !{!208, !209, !210, !211, !212, !213}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "k_compare", scope: !206, file: !6, line: 79, baseType: !154, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "k_clone", scope: !206, file: !6, line: 80, baseType: !161, size: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "k_free", scope: !206, file: !6, line: 81, baseType: !165, size: 64, offset: 128)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "d_clone", scope: !206, file: !6, line: 82, baseType: !161, size: 64, offset: 192)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "d_free", scope: !206, file: !6, line: 83, baseType: !165, size: 64, offset: 256)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "k_hash", scope: !206, file: !6, line: 84, baseType: !171, size: 64, offset: 320)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !195, file: !180, line: 98, baseType: !215, size: 64, offset: 640)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXrbtree_node", file: !180, line: 82, size: 320, elements: !217)
!217 = !{!218, !220, !225, !230}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !216, file: !180, line: 83, baseType: !219, size: 128)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !122)
!220 = !DIDerivedType(tag: DW_TAG_member, scope: !216, file: !180, line: 85, baseType: !221, size: 64, offset: 128)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !216, file: !180, line: 85, size: 64, elements: !222)
!222 = !{!223, !224}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !221, file: !180, line: 86, baseType: !89, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "skey", scope: !221, file: !180, line: 87, baseType: !119, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !216, file: !180, line: 89, baseType: !226, size: 64, offset: 192)
!226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !216, file: !180, line: 89, size: 64, elements: !227)
!227 = !{!228, !229}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !226, file: !180, line: 90, baseType: !89, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "sdata", scope: !226, file: !180, line: 91, baseType: !92, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !216, file: !180, line: 93, baseType: !231, size: 8, offset: 256)
!231 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !195, file: !180, line: 99, baseType: !7, size: 32, offset: 704)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXhmap_node", file: !180, line: 44, size: 256, elements: !235)
!235 = !{!236, !243, !248}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !234, file: !180, line: 45, baseType: !237, size: 128)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXlist_head", file: !238, line: 18, size: 128, elements: !239)
!238 = !DIFile(filename: "./include/libHX/list.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!239 = !{!240, !242}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !238, line: 19, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !237, file: !238, line: 19, baseType: !241, size: 64, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !180, line: 47, baseType: !244, size: 64, offset: 128)
!244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !180, line: 47, size: 64, elements: !245)
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !244, file: !180, line: 48, baseType: !89, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "skey", scope: !244, file: !180, line: 49, baseType: !119, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !180, line: 51, baseType: !249, size: 64, offset: 192)
!249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !180, line: 51, size: 64, elements: !250)
!250 = !{!251, !252}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !249, file: !180, line: 52, baseType: !89, size: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "sdata", scope: !249, file: !180, line: 53, baseType: !92, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!255 = !{!174, !256}
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(name: "JHASH_GOLDEN_RATIO", scope: !258, file: !177, line: 137, type: !259, isLocal: true, isDefinition: true)
!258 = distinct !DISubprogram(name: "HXhash_jlookup3", scope: !177, file: !177, line: 135, type: !172, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 896, elements: !261)
!261 = !{!262}
!262 = !DISubrange(count: 28)
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(name: "HX_init_lock", scope: !265, file: !266, line: 70, type: !271, isLocal: true, isDefinition: true)
!265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !266, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !267, globals: !268, nameTableKind: None)
!266 = !DIFile(filename: "rand.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!267 = !{!89}
!268 = !{!269, !263}
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "HX_use_count", scope: !265, file: !266, line: 71, type: !7, isLocal: true, isDefinition: true)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !272, line: 128, baseType: !273)
!272 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "")
!273 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !272, line: 90, size: 320, elements: !274)
!274 = !{!275, !293, !297}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !273, file: !272, line: 125, baseType: !276, size: 320)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !272, line: 92, size: 320, elements: !277)
!277 = !{!278, !279, !280, !281, !282, !283, !285, !286}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !276, file: !272, line: 94, baseType: !14, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !276, file: !272, line: 95, baseType: !7, size: 32, offset: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !276, file: !272, line: 96, baseType: !14, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !276, file: !272, line: 98, baseType: !7, size: 32, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !276, file: !272, line: 102, baseType: !14, size: 32, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !276, file: !272, line: 104, baseType: !284, size: 16, offset: 160)
!284 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !276, file: !272, line: 105, baseType: !284, size: 16, offset: 176)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !276, file: !272, line: 106, baseType: !287, size: 128, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !272, line: 79, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !272, line: 75, size: 128, elements: !289)
!289 = !{!290, !292}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !288, file: !272, line: 77, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !288, file: !272, line: 78, baseType: !291, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !273, file: !272, line: 126, baseType: !294, size: 320)
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 320, elements: !295)
!295 = !{!296}
!296 = !DISubrange(count: 40)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !273, file: !272, line: 127, baseType: !95, size: 64)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "HX_quote_chars", scope: !300, file: !301, line: 367, type: !322, isLocal: true, isDefinition: true)
!300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !301, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !302, retainedTypes: !312, globals: !313, nameTableKind: None)
!301 = !DIFile(filename: "string.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!302 = !{!303, !73}
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !304, line: 20, baseType: !7, size: 32, elements: !305)
!304 = !DIFile(filename: "./include/libHX/string.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!305 = !{!306, !307, !308, !309, !310, !311}
!306 = !DIEnumerator(name: "HXQUOTE_SQUOTE", value: 1, isUnsigned: true)
!307 = !DIEnumerator(name: "HXQUOTE_DQUOTE", value: 2, isUnsigned: true)
!308 = !DIEnumerator(name: "HXQUOTE_HTML", value: 3, isUnsigned: true)
!309 = !DIEnumerator(name: "HXQUOTE_LDAPFLT", value: 4, isUnsigned: true)
!310 = !DIEnumerator(name: "HXQUOTE_LDAPRDN", value: 5, isUnsigned: true)
!311 = !DIEnumerator(name: "_HXQUOTE_MAX", value: 6, isUnsigned: true)
!312 = !{!92, !89, !14, !94}
!313 = !{!298, !314}
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "hex", scope: !316, file: !301, line: 474, type: !319, isLocal: true, isDefinition: true)
!316 = distinct !DISubprogram(name: "HX_quote_ldap", scope: !301, file: !301, line: 472, type: !317, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!317 = !DISubroutineType(types: !318)
!318 = !{!92, !92, !120, !120}
!319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 136, elements: !320)
!320 = !{!321}
!321 = !DISubrange(count: 17)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 384, elements: !323)
!323 = !{!324}
!324 = !DISubrange(count: 6)
!325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !326, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !267, nameTableKind: None)
!326 = !DIFile(filename: "deque.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !328, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, nameTableKind: None)
!328 = !DIFile(filename: "dl.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!329 = distinct !DICompileUnit(language: DW_LANG_C99, file: !330, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !331, retainedTypes: !267, nameTableKind: None)
!330 = !DIFile(filename: "io.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!331 = !{!332}
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !333, line: 41, baseType: !7, size: 32, elements: !334)
!333 = !DIFile(filename: "./include/libHX/misc.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!334 = !{!335, !336, !337}
!335 = !DIEnumerator(name: "HXF_UID", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "HXF_GID", value: 2, isUnsigned: true)
!337 = !DIEnumerator(name: "HXF_KEEP", value: 4, isUnsigned: true)
!338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !339, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !340, nameTableKind: None)
!339 = !DIFile(filename: "mc.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!340 = !{!89, !341, !92}
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "memcont", file: !339, line: 19, size: 192, elements: !343)
!343 = !{!344, !345, !346, !347}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !342, file: !339, line: 20, baseType: !157, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !342, file: !339, line: 20, baseType: !157, size: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !342, file: !339, line: 21, baseType: !7, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !342, file: !339, line: 22, baseType: !348, offset: 160)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, elements: !349)
!349 = !{!350}
!350 = !DISubrange(count: 0)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !353, retainedTypes: !354, nameTableKind: None)
!352 = !DIFile(filename: "misc.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!353 = !{!73}
!354 = !{!89, !14, !94}
!355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !356, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !357, retainedTypes: !379, nameTableKind: None)
!356 = !DIFile(filename: "opt.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!357 = !{!358, !24, !5, !13, !73}
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !356, line: 57, baseType: !7, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378}
!360 = !DIEnumerator(name: "E_SUCCESS", value: 0, isUnsigned: true)
!361 = !DIEnumerator(name: "E_LONG_UNKNOWN", value: 1, isUnsigned: true)
!362 = !DIEnumerator(name: "E_LONG_TAKESVOID", value: 2, isUnsigned: true)
!363 = !DIEnumerator(name: "E_LONG_MISSING", value: 3, isUnsigned: true)
!364 = !DIEnumerator(name: "E_SHORT_UNKNOWN", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "E_SHORT_MISSING", value: 5, isUnsigned: true)
!366 = !DIEnumerator(name: "S_NORMAL", value: 0, isUnsigned: true)
!367 = !DIEnumerator(name: "S_SHORT", value: 1, isUnsigned: true)
!368 = !DIEnumerator(name: "S_TWOLONG", value: 2, isUnsigned: true)
!369 = !DIEnumerator(name: "S_LONG", value: 3, isUnsigned: true)
!370 = !DIEnumerator(name: "S_TERMINATED", value: 4, isUnsigned: true)
!371 = !DIEnumerator(name: "W_NONE", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "W_SPACE", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "W_BRACKET", value: 2, isUnsigned: true)
!374 = !DIEnumerator(name: "W_ALT", value: 4, isUnsigned: true)
!375 = !DIEnumerator(name: "W_EQUAL", value: 8, isUnsigned: true)
!376 = !DIEnumerator(name: "HXOPT_LOPMASK2", value: 7168, isUnsigned: true)
!377 = !DIEnumerator(name: "HXOPT_LOPMASK", value: 7680, isUnsigned: true)
!378 = !DIEnumerator(name: "HXOPT_TYPEMASK", value: 31, isUnsigned: true)
!379 = !{!89, !380, !381, !14, !94}
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!382 = distinct !DICompileUnit(language: DW_LANG_C99, file: !383, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !384, nameTableKind: None)
!383 = !DIFile(filename: "time.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!384 = !{!385}
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 16, baseType: !7, size: 32, elements: !386)
!386 = !{!387, !388}
!387 = !DIEnumerator(name: "MICROSECOND", value: 1000000, isUnsigned: true)
!388 = !DIEnumerator(name: "NANOSECOND", value: 1000000000, isUnsigned: true)
!389 = distinct !DICompileUnit(language: DW_LANG_C99, file: !390, producer: "clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !391, retainedTypes: !404, nameTableKind: None)
!390 = !DIFile(filename: "proc.c", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!391 = !{!392}
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !393, line: 12, baseType: !7, size: 32, elements: !394)
!393 = !DIFile(filename: "./include/libHX/proc.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!394 = !{!395, !396, !397, !398, !399, !400, !401, !402, !403}
!395 = !DIEnumerator(name: "HXPROC_VERBOSE", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "HXPROC_EXECV", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "HXPROC_A0", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "HXPROC_STDIN", value: 8, isUnsigned: true)
!399 = !DIEnumerator(name: "HXPROC_STDOUT", value: 16, isUnsigned: true)
!400 = !DIEnumerator(name: "HXPROC_STDERR", value: 32, isUnsigned: true)
!401 = !DIEnumerator(name: "HXPROC_NULL_STDIN", value: 64, isUnsigned: true)
!402 = !DIEnumerator(name: "HXPROC_NULL_STDOUT", value: 128, isUnsigned: true)
!403 = !DIEnumerator(name: "HXPROC_NULL_STDERR", value: 256, isUnsigned: true)
!404 = !{!89, !405, !407}
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !92)
!407 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!408 = !{!"clang version 8.0.1 (https://github.com/llvm-mirror/clang.git 2e4c9c5fc864c2c432e4c262a67c42d824b265c6) (https://github.com/rqtian/llvm80-bufferoverflow.git c257efa2d375141bf09ac0e6170370eae4521829)"}
!409 = !{i32 2, !"Dwarf Version", i32 4}
!410 = !{i32 2, !"Debug Info Version", i32 3}
!411 = !{i32 1, !"wchar_size", i32 4}
!412 = !{i32 7, !"PIC Level", i32 2}
!413 = !{i32 1, !"ThinLTO", i32 0}
!414 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!415 = distinct !DISubprogram(name: "HXdeque_init", scope: !326, file: !326, line: 42, type: !416, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!416 = !DISubroutineType(types: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdeque", file: !420, line: 24, size: 256, elements: !421)
!420 = !DIFile(filename: "./include/libHX/deque.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!421 = !{!422, !434, !435, !436}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !419, file: !420, line: 25, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdeque_node", file: !420, line: 14, size: 256, elements: !425)
!425 = !{!426, !427, !432, !433}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !420, line: 15, baseType: !423, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !420, line: 16, baseType: !428, size: 64, offset: 64)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !424, file: !420, line: 16, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !428, file: !420, line: 17, baseType: !89, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "sptr", scope: !428, file: !420, line: 18, baseType: !92, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !424, file: !420, line: 20, baseType: !418, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !424, file: !420, line: 21, baseType: !423, size: 64, offset: 192)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !419, file: !420, line: 26, baseType: !89, size: 64, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !419, file: !420, line: 27, baseType: !423, size: 64, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !419, file: !420, line: 28, baseType: !7, size: 32, offset: 192)
!437 = !DILocalVariable(name: "dq", scope: !415, file: !326, line: 44, type: !418)
!438 = !DILocation(line: 44, column: 18, scope: !415)
!439 = !DILocation(line: 45, column: 12, scope: !440)
!440 = distinct !DILexicalBlock(scope: !415, file: !326, line: 45, column: 6)
!441 = !DILocation(line: 45, column: 10, scope: !440)
!442 = !DILocation(line: 45, column: 47, scope: !440)
!443 = !DILocation(line: 45, column: 6, scope: !415)
!444 = !DILocation(line: 46, column: 3, scope: !440)
!445 = !DILocation(line: 47, column: 9, scope: !415)
!446 = !DILocation(line: 47, column: 2, scope: !415)
!447 = !DILocation(line: 48, column: 1, scope: !415)
!448 = distinct !DISubprogram(name: "HXdeque_push", scope: !326, file: !326, line: 50, type: !449, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!449 = !DISubroutineType(types: !450)
!450 = !{!423, !418, !90}
!451 = !DILocalVariable(name: "dq", arg: 1, scope: !448, file: !326, line: 50, type: !418)
!452 = !DILocation(line: 50, column: 65, scope: !448)
!453 = !DILocalVariable(name: "ptr", arg: 2, scope: !448, file: !326, line: 51, type: !90)
!454 = !DILocation(line: 51, column: 17, scope: !448)
!455 = !DILocalVariable(name: "nd", scope: !448, file: !326, line: 53, type: !423)
!456 = !DILocation(line: 53, column: 23, scope: !448)
!457 = !DILocation(line: 54, column: 12, scope: !458)
!458 = distinct !DILexicalBlock(scope: !448, file: !326, line: 54, column: 6)
!459 = !DILocation(line: 54, column: 10, scope: !458)
!460 = !DILocation(line: 54, column: 49, scope: !458)
!461 = !DILocation(line: 54, column: 6, scope: !448)
!462 = !DILocation(line: 55, column: 3, scope: !458)
!463 = !DILocation(line: 56, column: 15, scope: !448)
!464 = !DILocation(line: 56, column: 19, scope: !448)
!465 = !DILocation(line: 56, column: 2, scope: !448)
!466 = !DILocation(line: 56, column: 6, scope: !448)
!467 = !DILocation(line: 56, column: 13, scope: !448)
!468 = !DILocation(line: 57, column: 2, scope: !448)
!469 = !DILocation(line: 57, column: 6, scope: !448)
!470 = !DILocation(line: 57, column: 13, scope: !448)
!471 = !DILocation(line: 58, column: 15, scope: !448)
!472 = !DILocation(line: 58, column: 2, scope: !448)
!473 = !DILocation(line: 58, column: 6, scope: !448)
!474 = !DILocation(line: 58, column: 13, scope: !448)
!475 = !DILocation(line: 59, column: 15, scope: !476)
!476 = distinct !DILexicalBlock(scope: !448, file: !326, line: 59, column: 15)
!477 = !DILocation(line: 59, column: 2, scope: !448)
!478 = !DILocation(line: 59, column: 6, scope: !448)
!479 = !DILocation(line: 59, column: 13, scope: !448)
!480 = !DILocation(line: 61, column: 6, scope: !481)
!481 = distinct !DILexicalBlock(scope: !448, file: !326, line: 61, column: 6)
!482 = !DILocation(line: 61, column: 10, scope: !481)
!483 = !DILocation(line: 61, column: 16, scope: !481)
!484 = !DILocation(line: 61, column: 6, scope: !448)
!485 = !DILocation(line: 62, column: 26, scope: !486)
!486 = distinct !DILexicalBlock(scope: !481, file: !326, line: 61, column: 25)
!487 = !DILocation(line: 62, column: 15, scope: !486)
!488 = !DILocation(line: 62, column: 19, scope: !486)
!489 = !DILocation(line: 62, column: 24, scope: !486)
!490 = !DILocation(line: 62, column: 3, scope: !486)
!491 = !DILocation(line: 62, column: 7, scope: !486)
!492 = !DILocation(line: 62, column: 13, scope: !486)
!493 = !DILocation(line: 63, column: 2, scope: !486)
!494 = !DILocation(line: 64, column: 20, scope: !495)
!495 = distinct !DILexicalBlock(scope: !481, file: !326, line: 63, column: 9)
!496 = !DILocation(line: 64, column: 3, scope: !495)
!497 = !DILocation(line: 64, column: 7, scope: !495)
!498 = !DILocation(line: 64, column: 13, scope: !495)
!499 = !DILocation(line: 64, column: 18, scope: !495)
!500 = !DILocation(line: 65, column: 14, scope: !495)
!501 = !DILocation(line: 65, column: 3, scope: !495)
!502 = !DILocation(line: 65, column: 7, scope: !495)
!503 = !DILocation(line: 65, column: 12, scope: !495)
!504 = !DILocation(line: 68, column: 4, scope: !448)
!505 = !DILocation(line: 68, column: 8, scope: !448)
!506 = !DILocation(line: 68, column: 2, scope: !448)
!507 = !DILocation(line: 69, column: 9, scope: !448)
!508 = !DILocation(line: 69, column: 2, scope: !448)
!509 = !DILocation(line: 70, column: 1, scope: !448)
!510 = distinct !DISubprogram(name: "HXdeque_pop", scope: !326, file: !326, line: 72, type: !511, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!511 = !DISubroutineType(types: !512)
!512 = !{!89, !418}
!513 = !DILocalVariable(name: "dq", arg: 1, scope: !510, file: !326, line: 72, type: !418)
!514 = !DILocation(line: 72, column: 49, scope: !510)
!515 = !DILocation(line: 74, column: 6, scope: !516)
!516 = distinct !DILexicalBlock(scope: !510, file: !326, line: 74, column: 6)
!517 = !DILocation(line: 74, column: 10, scope: !516)
!518 = !DILocation(line: 74, column: 15, scope: !516)
!519 = !DILocation(line: 74, column: 6, scope: !510)
!520 = !DILocation(line: 75, column: 3, scope: !516)
!521 = !DILocation(line: 76, column: 21, scope: !510)
!522 = !DILocation(line: 76, column: 25, scope: !510)
!523 = !DILocation(line: 76, column: 9, scope: !510)
!524 = !DILocation(line: 76, column: 2, scope: !510)
!525 = !DILocation(line: 77, column: 1, scope: !510)
!526 = distinct !DISubprogram(name: "HXdeque_del", scope: !326, file: !326, line: 114, type: !527, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!527 = !DISubroutineType(types: !528)
!528 = !{!89, !423}
!529 = !DILocalVariable(name: "node", arg: 1, scope: !526, file: !326, line: 114, type: !423)
!530 = !DILocation(line: 114, column: 54, scope: !526)
!531 = !DILocalVariable(name: "ret", scope: !526, file: !326, line: 116, type: !89)
!532 = !DILocation(line: 116, column: 8, scope: !526)
!533 = !DILocation(line: 116, column: 14, scope: !526)
!534 = !DILocation(line: 116, column: 20, scope: !526)
!535 = !DILocation(line: 117, column: 15, scope: !526)
!536 = !DILocation(line: 117, column: 21, scope: !526)
!537 = !DILocation(line: 117, column: 29, scope: !526)
!538 = !DILocation(line: 117, column: 2, scope: !526)
!539 = !DILocation(line: 118, column: 4, scope: !526)
!540 = !DILocation(line: 118, column: 10, scope: !526)
!541 = !DILocation(line: 118, column: 18, scope: !526)
!542 = !DILocation(line: 118, column: 2, scope: !526)
!543 = !DILocation(line: 119, column: 7, scope: !526)
!544 = !DILocation(line: 119, column: 2, scope: !526)
!545 = !DILocation(line: 120, column: 9, scope: !526)
!546 = !DILocation(line: 120, column: 2, scope: !526)
!547 = distinct !DISubprogram(name: "HXdeque_drop", scope: !326, file: !326, line: 30, type: !548, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !325, retainedNodes: !117)
!548 = !DISubroutineType(types: !549)
!549 = !{null, !418, !423}
!550 = !DILocalVariable(name: "parent", arg: 1, scope: !547, file: !326, line: 30, type: !418)
!551 = !DILocation(line: 30, column: 49, scope: !547)
!552 = !DILocalVariable(name: "node", arg: 2, scope: !547, file: !326, line: 31, type: !423)
!553 = !DILocation(line: 31, column: 26, scope: !547)
!554 = !DILocalVariable(name: "left", scope: !547, file: !326, line: 33, type: !423)
!555 = !DILocation(line: 33, column: 23, scope: !547)
!556 = !DILocation(line: 33, column: 30, scope: !547)
!557 = !DILocation(line: 33, column: 36, scope: !547)
!558 = !DILocalVariable(name: "right", scope: !547, file: !326, line: 33, type: !423)
!559 = !DILocation(line: 33, column: 43, scope: !547)
!560 = !DILocation(line: 33, column: 51, scope: !547)
!561 = !DILocation(line: 33, column: 57, scope: !547)
!562 = !DILocation(line: 35, column: 6, scope: !563)
!563 = distinct !DILexicalBlock(scope: !547, file: !326, line: 35, column: 6)
!564 = !DILocation(line: 35, column: 11, scope: !563)
!565 = !DILocation(line: 35, column: 6, scope: !547)
!566 = !DILocation(line: 35, column: 36, scope: !563)
!567 = !DILocation(line: 35, column: 20, scope: !563)
!568 = !DILocation(line: 35, column: 28, scope: !563)
!569 = !DILocation(line: 35, column: 34, scope: !563)
!570 = !DILocation(line: 36, column: 33, scope: !563)
!571 = !DILocation(line: 36, column: 20, scope: !563)
!572 = !DILocation(line: 36, column: 26, scope: !563)
!573 = !DILocation(line: 36, column: 31, scope: !563)
!574 = !DILocation(line: 38, column: 6, scope: !575)
!575 = distinct !DILexicalBlock(scope: !547, file: !326, line: 38, column: 6)
!576 = !DILocation(line: 38, column: 12, scope: !575)
!577 = !DILocation(line: 38, column: 6, scope: !547)
!578 = !DILocation(line: 38, column: 36, scope: !575)
!579 = !DILocation(line: 38, column: 21, scope: !575)
!580 = !DILocation(line: 38, column: 29, scope: !575)
!581 = !DILocation(line: 38, column: 34, scope: !575)
!582 = !DILocation(line: 39, column: 35, scope: !575)
!583 = !DILocation(line: 39, column: 21, scope: !575)
!584 = !DILocation(line: 39, column: 28, scope: !575)
!585 = !DILocation(line: 39, column: 33, scope: !575)
!586 = !DILocation(line: 40, column: 1, scope: !547)
!587 = distinct !DISubprogram(name: "HXdeque_unshift", scope: !326, file: !326, line: 79, type: !449, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!588 = !DILocalVariable(name: "dq", arg: 1, scope: !587, file: !326, line: 79, type: !418)
!589 = !DILocation(line: 79, column: 68, scope: !587)
!590 = !DILocalVariable(name: "ptr", arg: 2, scope: !587, file: !326, line: 80, type: !90)
!591 = !DILocation(line: 80, column: 17, scope: !587)
!592 = !DILocalVariable(name: "nd", scope: !587, file: !326, line: 82, type: !423)
!593 = !DILocation(line: 82, column: 23, scope: !587)
!594 = !DILocation(line: 84, column: 6, scope: !595)
!595 = distinct !DILexicalBlock(scope: !587, file: !326, line: 84, column: 6)
!596 = !DILocation(line: 84, column: 10, scope: !595)
!597 = !DILocation(line: 84, column: 16, scope: !595)
!598 = !DILocation(line: 84, column: 6, scope: !587)
!599 = !DILocation(line: 85, column: 23, scope: !595)
!600 = !DILocation(line: 85, column: 27, scope: !595)
!601 = !DILocation(line: 85, column: 10, scope: !595)
!602 = !DILocation(line: 85, column: 3, scope: !595)
!603 = !DILocation(line: 86, column: 12, scope: !604)
!604 = distinct !DILexicalBlock(scope: !587, file: !326, line: 86, column: 6)
!605 = !DILocation(line: 86, column: 10, scope: !604)
!606 = !DILocation(line: 86, column: 49, scope: !604)
!607 = !DILocation(line: 86, column: 6, scope: !587)
!608 = !DILocation(line: 87, column: 3, scope: !604)
!609 = !DILocation(line: 89, column: 2, scope: !587)
!610 = !DILocation(line: 89, column: 6, scope: !587)
!611 = !DILocation(line: 89, column: 13, scope: !587)
!612 = !DILocation(line: 90, column: 15, scope: !587)
!613 = !DILocation(line: 90, column: 19, scope: !587)
!614 = !DILocation(line: 90, column: 2, scope: !587)
!615 = !DILocation(line: 90, column: 6, scope: !587)
!616 = !DILocation(line: 90, column: 13, scope: !587)
!617 = !DILocation(line: 91, column: 15, scope: !587)
!618 = !DILocation(line: 91, column: 2, scope: !587)
!619 = !DILocation(line: 91, column: 6, scope: !587)
!620 = !DILocation(line: 91, column: 13, scope: !587)
!621 = !DILocation(line: 92, column: 15, scope: !622)
!622 = distinct !DILexicalBlock(scope: !587, file: !326, line: 92, column: 15)
!623 = !DILocation(line: 92, column: 2, scope: !587)
!624 = !DILocation(line: 92, column: 6, scope: !587)
!625 = !DILocation(line: 92, column: 13, scope: !587)
!626 = !DILocation(line: 94, column: 20, scope: !587)
!627 = !DILocation(line: 94, column: 2, scope: !587)
!628 = !DILocation(line: 94, column: 6, scope: !587)
!629 = !DILocation(line: 94, column: 13, scope: !587)
!630 = !DILocation(line: 94, column: 18, scope: !587)
!631 = !DILocation(line: 95, column: 14, scope: !587)
!632 = !DILocation(line: 95, column: 2, scope: !587)
!633 = !DILocation(line: 95, column: 6, scope: !587)
!634 = !DILocation(line: 95, column: 12, scope: !587)
!635 = !DILocation(line: 96, column: 4, scope: !587)
!636 = !DILocation(line: 96, column: 8, scope: !587)
!637 = !DILocation(line: 96, column: 2, scope: !587)
!638 = !DILocation(line: 97, column: 9, scope: !587)
!639 = !DILocation(line: 97, column: 2, scope: !587)
!640 = !DILocation(line: 98, column: 1, scope: !587)
!641 = distinct !DISubprogram(name: "HXdeque_shift", scope: !326, file: !326, line: 100, type: !511, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!642 = !DILocalVariable(name: "dq", arg: 1, scope: !641, file: !326, line: 100, type: !418)
!643 = !DILocation(line: 100, column: 51, scope: !641)
!644 = !DILocation(line: 102, column: 6, scope: !645)
!645 = distinct !DILexicalBlock(scope: !641, file: !326, line: 102, column: 6)
!646 = !DILocation(line: 102, column: 10, scope: !645)
!647 = !DILocation(line: 102, column: 16, scope: !645)
!648 = !DILocation(line: 102, column: 6, scope: !641)
!649 = !DILocation(line: 103, column: 3, scope: !645)
!650 = !DILocation(line: 104, column: 21, scope: !641)
!651 = !DILocation(line: 104, column: 25, scope: !641)
!652 = !DILocation(line: 104, column: 9, scope: !641)
!653 = !DILocation(line: 104, column: 2, scope: !641)
!654 = !DILocation(line: 105, column: 1, scope: !641)
!655 = distinct !DISubprogram(name: "HXdeque_move", scope: !326, file: !326, line: 107, type: !656, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!656 = !DISubroutineType(types: !657)
!657 = !{null, !423, !423}
!658 = !DILocalVariable(name: "nd", arg: 1, scope: !655, file: !326, line: 107, type: !423)
!659 = !DILocation(line: 107, column: 54, scope: !655)
!660 = !DILocalVariable(name: "af", arg: 2, scope: !655, file: !326, line: 108, type: !423)
!661 = !DILocation(line: 108, column: 26, scope: !655)
!662 = !DILocation(line: 110, column: 15, scope: !655)
!663 = !DILocation(line: 110, column: 19, scope: !655)
!664 = !DILocation(line: 110, column: 27, scope: !655)
!665 = !DILocation(line: 110, column: 2, scope: !655)
!666 = !DILocation(line: 111, column: 14, scope: !655)
!667 = !DILocation(line: 111, column: 18, scope: !655)
!668 = !DILocation(line: 111, column: 2, scope: !655)
!669 = !DILocation(line: 112, column: 1, scope: !655)
!670 = distinct !DISubprogram(name: "HXdeque_add", scope: !326, file: !326, line: 18, type: !656, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !325, retainedNodes: !117)
!671 = !DILocalVariable(name: "af", arg: 1, scope: !670, file: !326, line: 18, type: !423)
!672 = !DILocation(line: 18, column: 53, scope: !670)
!673 = !DILocalVariable(name: "nd", arg: 2, scope: !670, file: !326, line: 19, type: !423)
!674 = !DILocation(line: 19, column: 26, scope: !670)
!675 = !DILocalVariable(name: "parent", scope: !670, file: !326, line: 21, type: !418)
!676 = !DILocation(line: 21, column: 18, scope: !670)
!677 = !DILocation(line: 21, column: 27, scope: !670)
!678 = !DILocation(line: 21, column: 31, scope: !670)
!679 = !DILocation(line: 22, column: 15, scope: !670)
!680 = !DILocation(line: 22, column: 19, scope: !670)
!681 = !DILocation(line: 22, column: 2, scope: !670)
!682 = !DILocation(line: 22, column: 6, scope: !670)
!683 = !DILocation(line: 22, column: 13, scope: !670)
!684 = !DILocation(line: 23, column: 15, scope: !670)
!685 = !DILocation(line: 23, column: 2, scope: !670)
!686 = !DILocation(line: 23, column: 6, scope: !670)
!687 = !DILocation(line: 23, column: 13, scope: !670)
!688 = !DILocation(line: 24, column: 15, scope: !670)
!689 = !DILocation(line: 24, column: 2, scope: !670)
!690 = !DILocation(line: 24, column: 6, scope: !670)
!691 = !DILocation(line: 24, column: 13, scope: !670)
!692 = !DILocation(line: 25, column: 15, scope: !670)
!693 = !DILocation(line: 25, column: 2, scope: !670)
!694 = !DILocation(line: 25, column: 6, scope: !670)
!695 = !DILocation(line: 25, column: 13, scope: !670)
!696 = !DILocation(line: 26, column: 6, scope: !697)
!697 = distinct !DILexicalBlock(scope: !670, file: !326, line: 26, column: 6)
!698 = !DILocation(line: 26, column: 14, scope: !697)
!699 = !DILocation(line: 26, column: 22, scope: !697)
!700 = !DILocation(line: 26, column: 19, scope: !697)
!701 = !DILocation(line: 26, column: 6, scope: !670)
!702 = !DILocation(line: 27, column: 18, scope: !697)
!703 = !DILocation(line: 27, column: 3, scope: !697)
!704 = !DILocation(line: 27, column: 11, scope: !697)
!705 = !DILocation(line: 27, column: 16, scope: !697)
!706 = !DILocation(line: 28, column: 1, scope: !670)
!707 = distinct !DISubprogram(name: "HXdeque_free", scope: !326, file: !326, line: 123, type: !708, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !418}
!710 = !DILocalVariable(name: "dq", arg: 1, scope: !707, file: !326, line: 123, type: !418)
!711 = !DILocation(line: 123, column: 49, scope: !707)
!712 = !DILocalVariable(name: "node", scope: !707, file: !326, line: 125, type: !423)
!713 = !DILocation(line: 125, column: 23, scope: !707)
!714 = !DILocalVariable(name: "next", scope: !707, file: !326, line: 125, type: !423)
!715 = !DILocation(line: 125, column: 30, scope: !707)
!716 = !DILocation(line: 126, column: 14, scope: !717)
!717 = distinct !DILexicalBlock(scope: !707, file: !326, line: 126, column: 2)
!718 = !DILocation(line: 126, column: 18, scope: !717)
!719 = !DILocation(line: 126, column: 12, scope: !717)
!720 = !DILocation(line: 126, column: 7, scope: !717)
!721 = !DILocation(line: 126, column: 25, scope: !722)
!722 = distinct !DILexicalBlock(scope: !717, file: !326, line: 126, column: 2)
!723 = !DILocation(line: 126, column: 30, scope: !722)
!724 = !DILocation(line: 126, column: 2, scope: !717)
!725 = !DILocation(line: 127, column: 10, scope: !726)
!726 = distinct !DILexicalBlock(scope: !722, file: !326, line: 126, column: 52)
!727 = !DILocation(line: 127, column: 16, scope: !726)
!728 = !DILocation(line: 127, column: 8, scope: !726)
!729 = !DILocation(line: 128, column: 8, scope: !726)
!730 = !DILocation(line: 128, column: 3, scope: !726)
!731 = !DILocation(line: 129, column: 2, scope: !726)
!732 = !DILocation(line: 126, column: 46, scope: !722)
!733 = !DILocation(line: 126, column: 44, scope: !722)
!734 = !DILocation(line: 126, column: 2, scope: !722)
!735 = distinct !{!735, !724, !736}
!736 = !DILocation(line: 129, column: 2, scope: !717)
!737 = !DILocation(line: 130, column: 7, scope: !707)
!738 = !DILocation(line: 130, column: 2, scope: !707)
!739 = !DILocation(line: 131, column: 1, scope: !707)
!740 = distinct !DISubprogram(name: "HXdeque_find", scope: !326, file: !326, line: 133, type: !449, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!741 = !DILocalVariable(name: "dq", arg: 1, scope: !740, file: !326, line: 133, type: !418)
!742 = !DILocation(line: 133, column: 65, scope: !740)
!743 = !DILocalVariable(name: "ptr", arg: 2, scope: !740, file: !326, line: 134, type: !90)
!744 = !DILocation(line: 134, column: 15, scope: !740)
!745 = !DILocalVariable(name: "travp", scope: !740, file: !326, line: 136, type: !423)
!746 = !DILocation(line: 136, column: 23, scope: !740)
!747 = !DILocation(line: 137, column: 15, scope: !748)
!748 = distinct !DILexicalBlock(scope: !740, file: !326, line: 137, column: 2)
!749 = !DILocation(line: 137, column: 19, scope: !748)
!750 = !DILocation(line: 137, column: 13, scope: !748)
!751 = !DILocation(line: 137, column: 7, scope: !748)
!752 = !DILocation(line: 137, column: 26, scope: !753)
!753 = distinct !DILexicalBlock(scope: !748, file: !326, line: 137, column: 2)
!754 = !DILocation(line: 137, column: 32, scope: !753)
!755 = !DILocation(line: 137, column: 2, scope: !748)
!756 = !DILocation(line: 138, column: 7, scope: !757)
!757 = distinct !DILexicalBlock(scope: !753, file: !326, line: 138, column: 7)
!758 = !DILocation(line: 138, column: 14, scope: !757)
!759 = !DILocation(line: 138, column: 21, scope: !757)
!760 = !DILocation(line: 138, column: 18, scope: !757)
!761 = !DILocation(line: 138, column: 7, scope: !753)
!762 = !DILocation(line: 139, column: 11, scope: !757)
!763 = !DILocation(line: 139, column: 4, scope: !757)
!764 = !DILocation(line: 137, column: 49, scope: !753)
!765 = !DILocation(line: 137, column: 56, scope: !753)
!766 = !DILocation(line: 137, column: 47, scope: !753)
!767 = !DILocation(line: 137, column: 2, scope: !753)
!768 = distinct !{!768, !755, !769}
!769 = !DILocation(line: 139, column: 11, scope: !748)
!770 = !DILocation(line: 140, column: 2, scope: !740)
!771 = !DILocation(line: 141, column: 1, scope: !740)
!772 = distinct !DISubprogram(name: "HXdeque_get", scope: !326, file: !326, line: 143, type: !773, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!773 = !DISubroutineType(types: !774)
!774 = !{!89, !418, !90}
!775 = !DILocalVariable(name: "dq", arg: 1, scope: !772, file: !326, line: 143, type: !418)
!776 = !DILocation(line: 143, column: 49, scope: !772)
!777 = !DILocalVariable(name: "ptr", arg: 2, scope: !772, file: !326, line: 143, type: !90)
!778 = !DILocation(line: 143, column: 65, scope: !772)
!779 = !DILocalVariable(name: "trav", scope: !772, file: !326, line: 145, type: !423)
!780 = !DILocation(line: 145, column: 23, scope: !772)
!781 = !DILocation(line: 145, column: 30, scope: !772)
!782 = !DILocation(line: 145, column: 34, scope: !772)
!783 = !DILocation(line: 146, column: 14, scope: !784)
!784 = distinct !DILexicalBlock(scope: !772, file: !326, line: 146, column: 2)
!785 = !DILocation(line: 146, column: 18, scope: !784)
!786 = !DILocation(line: 146, column: 12, scope: !784)
!787 = !DILocation(line: 146, column: 7, scope: !784)
!788 = !DILocation(line: 146, column: 25, scope: !789)
!789 = distinct !DILexicalBlock(scope: !784, file: !326, line: 146, column: 2)
!790 = !DILocation(line: 146, column: 30, scope: !789)
!791 = !DILocation(line: 146, column: 2, scope: !784)
!792 = !DILocation(line: 147, column: 7, scope: !793)
!793 = distinct !DILexicalBlock(scope: !789, file: !326, line: 147, column: 7)
!794 = !DILocation(line: 147, column: 13, scope: !793)
!795 = !DILocation(line: 147, column: 20, scope: !793)
!796 = !DILocation(line: 147, column: 17, scope: !793)
!797 = !DILocation(line: 147, column: 7, scope: !789)
!798 = !DILocation(line: 148, column: 11, scope: !793)
!799 = !DILocation(line: 148, column: 17, scope: !793)
!800 = !DILocation(line: 148, column: 4, scope: !793)
!801 = !DILocation(line: 146, column: 46, scope: !789)
!802 = !DILocation(line: 146, column: 52, scope: !789)
!803 = !DILocation(line: 146, column: 44, scope: !789)
!804 = !DILocation(line: 146, column: 2, scope: !789)
!805 = distinct !{!805, !791, !806}
!806 = !DILocation(line: 148, column: 17, scope: !784)
!807 = !DILocation(line: 149, column: 2, scope: !772)
!808 = !DILocation(line: 150, column: 1, scope: !772)
!809 = distinct !DISubprogram(name: "HXdeque_genocide2", scope: !326, file: !326, line: 152, type: !810, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!810 = !DISubroutineType(types: !811)
!811 = !{null, !418, !165}
!812 = !DILocalVariable(name: "dq", arg: 1, scope: !809, file: !326, line: 152, type: !418)
!813 = !DILocation(line: 152, column: 54, scope: !809)
!814 = !DILocalVariable(name: "xfree", arg: 2, scope: !809, file: !326, line: 152, type: !165)
!815 = !DILocation(line: 152, column: 65, scope: !809)
!816 = !DILocalVariable(name: "trav", scope: !809, file: !326, line: 154, type: !423)
!817 = !DILocation(line: 154, column: 23, scope: !809)
!818 = !DILocalVariable(name: "next", scope: !809, file: !326, line: 154, type: !423)
!819 = !DILocation(line: 154, column: 30, scope: !809)
!820 = !DILocation(line: 155, column: 14, scope: !821)
!821 = distinct !DILexicalBlock(scope: !809, file: !326, line: 155, column: 2)
!822 = !DILocation(line: 155, column: 18, scope: !821)
!823 = !DILocation(line: 155, column: 12, scope: !821)
!824 = !DILocation(line: 155, column: 7, scope: !821)
!825 = !DILocation(line: 155, column: 25, scope: !826)
!826 = distinct !DILexicalBlock(scope: !821, file: !326, line: 155, column: 2)
!827 = !DILocation(line: 155, column: 30, scope: !826)
!828 = !DILocation(line: 155, column: 2, scope: !821)
!829 = !DILocation(line: 156, column: 10, scope: !830)
!830 = distinct !DILexicalBlock(scope: !826, file: !326, line: 155, column: 52)
!831 = !DILocation(line: 156, column: 16, scope: !830)
!832 = !DILocation(line: 156, column: 8, scope: !830)
!833 = !DILocation(line: 157, column: 3, scope: !830)
!834 = !DILocation(line: 157, column: 9, scope: !830)
!835 = !DILocation(line: 157, column: 15, scope: !830)
!836 = !DILocation(line: 158, column: 8, scope: !830)
!837 = !DILocation(line: 158, column: 3, scope: !830)
!838 = !DILocation(line: 159, column: 2, scope: !830)
!839 = !DILocation(line: 155, column: 46, scope: !826)
!840 = !DILocation(line: 155, column: 44, scope: !826)
!841 = !DILocation(line: 155, column: 2, scope: !826)
!842 = distinct !{!842, !828, !843}
!843 = !DILocation(line: 159, column: 2, scope: !821)
!844 = !DILocation(line: 160, column: 7, scope: !809)
!845 = !DILocation(line: 160, column: 2, scope: !809)
!846 = !DILocation(line: 161, column: 1, scope: !809)
!847 = distinct !DISubprogram(name: "HXdeque_to_vec", scope: !326, file: !326, line: 163, type: !848, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !325, retainedNodes: !117)
!848 = !DISubroutineType(types: !849)
!849 = !{!850, !851, !853}
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!854 = !DILocalVariable(name: "dq", arg: 1, scope: !847, file: !326, line: 163, type: !851)
!855 = !DILocation(line: 163, column: 59, scope: !847)
!856 = !DILocalVariable(name: "num", arg: 2, scope: !847, file: !326, line: 163, type: !853)
!857 = !DILocation(line: 163, column: 77, scope: !847)
!858 = !DILocalVariable(name: "trav", scope: !847, file: !326, line: 165, type: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !424)
!861 = !DILocation(line: 165, column: 29, scope: !847)
!862 = !DILocalVariable(name: "ret", scope: !847, file: !326, line: 166, type: !850)
!863 = !DILocation(line: 166, column: 9, scope: !847)
!864 = !DILocalVariable(name: "p", scope: !847, file: !326, line: 166, type: !850)
!865 = !DILocation(line: 166, column: 16, scope: !847)
!866 = !DILocation(line: 168, column: 16, scope: !847)
!867 = !DILocation(line: 168, column: 20, scope: !847)
!868 = !DILocation(line: 168, column: 26, scope: !847)
!869 = !DILocation(line: 168, column: 15, scope: !847)
!870 = !DILocation(line: 168, column: 31, scope: !847)
!871 = !DILocation(line: 168, column: 8, scope: !847)
!872 = !DILocation(line: 168, column: 6, scope: !847)
!873 = !DILocation(line: 169, column: 6, scope: !874)
!874 = distinct !DILexicalBlock(scope: !847, file: !326, line: 169, column: 6)
!875 = !DILocation(line: 169, column: 10, scope: !874)
!876 = !DILocation(line: 169, column: 6, scope: !847)
!877 = !DILocation(line: 170, column: 3, scope: !874)
!878 = !DILocation(line: 172, column: 6, scope: !847)
!879 = !DILocation(line: 172, column: 4, scope: !847)
!880 = !DILocation(line: 173, column: 14, scope: !881)
!881 = distinct !DILexicalBlock(scope: !847, file: !326, line: 173, column: 2)
!882 = !DILocation(line: 173, column: 18, scope: !881)
!883 = !DILocation(line: 173, column: 12, scope: !881)
!884 = !DILocation(line: 173, column: 7, scope: !881)
!885 = !DILocation(line: 173, column: 25, scope: !886)
!886 = distinct !DILexicalBlock(scope: !881, file: !326, line: 173, column: 2)
!887 = !DILocation(line: 173, column: 30, scope: !886)
!888 = !DILocation(line: 173, column: 2, scope: !881)
!889 = !DILocation(line: 174, column: 10, scope: !886)
!890 = !DILocation(line: 174, column: 16, scope: !886)
!891 = !DILocation(line: 174, column: 5, scope: !886)
!892 = !DILocation(line: 174, column: 8, scope: !886)
!893 = !DILocation(line: 174, column: 3, scope: !886)
!894 = !DILocation(line: 173, column: 46, scope: !886)
!895 = !DILocation(line: 173, column: 52, scope: !886)
!896 = !DILocation(line: 173, column: 44, scope: !886)
!897 = !DILocation(line: 173, column: 2, scope: !886)
!898 = distinct !{!898, !888, !899}
!899 = !DILocation(line: 174, column: 16, scope: !881)
!900 = !DILocation(line: 175, column: 3, scope: !847)
!901 = !DILocation(line: 175, column: 5, scope: !847)
!902 = !DILocation(line: 177, column: 6, scope: !903)
!903 = distinct !DILexicalBlock(scope: !847, file: !326, line: 177, column: 6)
!904 = !DILocation(line: 177, column: 10, scope: !903)
!905 = !DILocation(line: 177, column: 6, scope: !847)
!906 = !DILocation(line: 178, column: 10, scope: !903)
!907 = !DILocation(line: 178, column: 14, scope: !903)
!908 = !DILocation(line: 178, column: 4, scope: !903)
!909 = !DILocation(line: 178, column: 8, scope: !903)
!910 = !DILocation(line: 178, column: 3, scope: !903)
!911 = !DILocation(line: 179, column: 9, scope: !847)
!912 = !DILocation(line: 179, column: 2, scope: !847)
!913 = !DILocation(line: 180, column: 1, scope: !847)
!914 = distinct !DISubprogram(name: "HX_dlopen", scope: !328, file: !328, line: 18, type: !915, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !327, retainedNodes: !117)
!915 = !DISubroutineType(types: !916)
!916 = !{!89, !120}
!917 = !DILocalVariable(name: "file", arg: 1, scope: !914, file: !328, line: 18, type: !120)
!918 = !DILocation(line: 18, column: 43, scope: !914)
!919 = !DILocation(line: 23, column: 16, scope: !914)
!920 = !DILocation(line: 23, column: 9, scope: !914)
!921 = !DILocation(line: 23, column: 2, scope: !914)
!922 = distinct !DISubprogram(name: "HX_dlsym", scope: !328, file: !328, line: 27, type: !923, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !327, retainedNodes: !117)
!923 = !DISubroutineType(types: !924)
!924 = !{!89, !89, !120}
!925 = !DILocalVariable(name: "handle", arg: 1, scope: !922, file: !328, line: 27, type: !89)
!926 = !DILocation(line: 27, column: 36, scope: !922)
!927 = !DILocalVariable(name: "symbol", arg: 2, scope: !922, file: !328, line: 27, type: !120)
!928 = !DILocation(line: 27, column: 56, scope: !922)
!929 = !DILocation(line: 32, column: 15, scope: !922)
!930 = !DILocation(line: 32, column: 23, scope: !922)
!931 = !DILocation(line: 32, column: 9, scope: !922)
!932 = !DILocation(line: 32, column: 2, scope: !922)
!933 = distinct !DISubprogram(name: "HX_dlclose", scope: !328, file: !328, line: 36, type: !166, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !327, retainedNodes: !117)
!934 = !DILocalVariable(name: "handle", arg: 1, scope: !933, file: !328, line: 36, type: !89)
!935 = !DILocation(line: 36, column: 37, scope: !933)
!936 = !DILocation(line: 41, column: 10, scope: !933)
!937 = !DILocation(line: 41, column: 2, scope: !933)
!938 = !DILocation(line: 43, column: 1, scope: !933)
!939 = distinct !DISubprogram(name: "HX_dlerror", scope: !328, file: !328, line: 45, type: !940, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !327, retainedNodes: !117)
!940 = !DISubroutineType(types: !941)
!941 = !{!120}
!942 = !DILocation(line: 50, column: 9, scope: !939)
!943 = !DILocation(line: 50, column: 2, scope: !939)
!944 = distinct !DISubprogram(name: "HXformat_init", scope: !3, file: !3, line: 55, type: !945, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !117)
!945 = !DISubroutineType(types: !946)
!946 = !{!947}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "HXformat_map", file: !25, line: 26, flags: DIFlagFwdDecl)
!949 = !DILocalVariable(name: "table", scope: !944, file: !3, line: 57, type: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!951 = !DILocation(line: 57, column: 16, scope: !944)
!952 = !DILocation(line: 59, column: 10, scope: !944)
!953 = !DILocation(line: 59, column: 8, scope: !944)
!954 = !DILocation(line: 61, column: 6, scope: !955)
!955 = distinct !DILexicalBlock(scope: !944, file: !3, line: 61, column: 6)
!956 = !DILocation(line: 61, column: 12, scope: !955)
!957 = !DILocation(line: 61, column: 6, scope: !944)
!958 = !DILocation(line: 62, column: 3, scope: !955)
!959 = !DILocation(line: 63, column: 20, scope: !944)
!960 = !DILocation(line: 63, column: 9, scope: !944)
!961 = !DILocation(line: 63, column: 2, scope: !944)
!962 = !DILocation(line: 64, column: 1, scope: !944)
!963 = distinct !DISubprogram(name: "fmt_export", scope: !3, file: !3, line: 32, type: !964, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!964 = !DISubroutineType(types: !965)
!965 = !{!947, !142}
!966 = !DILocalVariable(name: "t", arg: 1, scope: !963, file: !3, line: 32, type: !142)
!967 = !DILocation(line: 32, column: 67, scope: !963)
!968 = !DILocation(line: 34, column: 24, scope: !963)
!969 = !DILocation(line: 34, column: 9, scope: !963)
!970 = !DILocation(line: 34, column: 2, scope: !963)
!971 = distinct !DISubprogram(name: "fmt_entry_free", scope: !3, file: !3, line: 42, type: !166, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!972 = !DILocalVariable(name: "e", arg: 1, scope: !971, file: !3, line: 42, type: !89)
!973 = !DILocation(line: 42, column: 34, scope: !971)
!974 = !DILocalVariable(name: "entry", scope: !971, file: !3, line: 44, type: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!976 = !DILocation(line: 44, column: 20, scope: !971)
!977 = !DILocation(line: 44, column: 28, scope: !971)
!978 = !DILocation(line: 46, column: 6, scope: !979)
!979 = distinct !DILexicalBlock(scope: !971, file: !3, line: 46, column: 6)
!980 = !DILocation(line: 46, column: 13, scope: !979)
!981 = !DILocation(line: 46, column: 18, scope: !979)
!982 = !DILocation(line: 46, column: 6, scope: !971)
!983 = !DILocation(line: 47, column: 8, scope: !984)
!984 = distinct !DILexicalBlock(scope: !979, file: !3, line: 47, column: 8)
!985 = !DILocation(line: 47, column: 3, scope: !979)
!986 = !DILocation(line: 48, column: 7, scope: !971)
!987 = !DILocation(line: 48, column: 2, scope: !971)
!988 = !DILocation(line: 49, column: 1, scope: !971)
!989 = distinct !DISubprogram(name: "HXformat_free", scope: !3, file: !3, line: 66, type: !990, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !117)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !947}
!992 = !DILocalVariable(name: "ftable", arg: 1, scope: !989, file: !3, line: 66, type: !947)
!993 = !DILocation(line: 66, column: 55, scope: !989)
!994 = !DILocation(line: 68, column: 24, scope: !989)
!995 = !DILocation(line: 68, column: 13, scope: !989)
!996 = !DILocation(line: 68, column: 2, scope: !989)
!997 = !DILocation(line: 69, column: 1, scope: !989)
!998 = distinct !DISubprogram(name: "fmt_import", scope: !3, file: !3, line: 37, type: !999, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!950, !1001}
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !948)
!1003 = !DILocalVariable(name: "t", arg: 1, scope: !998, file: !3, line: 37, type: !1001)
!1004 = !DILocation(line: 37, column: 67, scope: !998)
!1005 = !DILocation(line: 39, column: 24, scope: !998)
!1006 = !DILocation(line: 39, column: 9, scope: !998)
!1007 = !DILocation(line: 39, column: 2, scope: !998)
!1008 = distinct !DISubprogram(name: "HXformat_add", scope: !3, file: !3, line: 71, type: !1009, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!14, !947, !120, !90, !7}
!1011 = !DILocalVariable(name: "ftable", arg: 1, scope: !1008, file: !3, line: 71, type: !947)
!1012 = !DILocation(line: 71, column: 53, scope: !1008)
!1013 = !DILocalVariable(name: "key", arg: 2, scope: !1008, file: !3, line: 71, type: !120)
!1014 = !DILocation(line: 71, column: 73, scope: !1008)
!1015 = !DILocalVariable(name: "ptr", arg: 3, scope: !1008, file: !3, line: 72, type: !90)
!1016 = !DILocation(line: 72, column: 17, scope: !1008)
!1017 = !DILocalVariable(name: "ptr_type", arg: 4, scope: !1008, file: !3, line: 72, type: !7)
!1018 = !DILocation(line: 72, column: 35, scope: !1008)
!1019 = !DILocalVariable(name: "table", scope: !1008, file: !3, line: 74, type: !950)
!1020 = !DILocation(line: 74, column: 16, scope: !1008)
!1021 = !DILocation(line: 74, column: 35, scope: !1008)
!1022 = !DILocation(line: 74, column: 24, scope: !1008)
!1023 = !DILocalVariable(name: "entry", scope: !1008, file: !3, line: 75, type: !975)
!1024 = !DILocation(line: 75, column: 20, scope: !1008)
!1025 = !DILocalVariable(name: "ret", scope: !1008, file: !3, line: 76, type: !14)
!1026 = !DILocation(line: 76, column: 6, scope: !1008)
!1027 = !DILocation(line: 78, column: 14, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1008, file: !3, line: 78, column: 6)
!1029 = !DILocation(line: 78, column: 6, scope: !1028)
!1030 = !DILocation(line: 78, column: 30, scope: !1028)
!1031 = !DILocation(line: 78, column: 38, scope: !1028)
!1032 = !DILocation(line: 78, column: 48, scope: !1028)
!1033 = !DILocation(line: 78, column: 41, scope: !1028)
!1034 = !DILocation(line: 78, column: 53, scope: !1028)
!1035 = !DILocation(line: 78, column: 68, scope: !1028)
!1036 = !DILocation(line: 79, column: 7, scope: !1028)
!1037 = !DILocation(line: 79, column: 6, scope: !1028)
!1038 = !DILocation(line: 79, column: 11, scope: !1028)
!1039 = !DILocation(line: 78, column: 6, scope: !1008)
!1040 = !DILocation(line: 80, column: 11, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1028, file: !3, line: 79, column: 20)
!1042 = !DILocation(line: 80, column: 55, scope: !1041)
!1043 = !DILocation(line: 80, column: 3, scope: !1041)
!1044 = !DILocation(line: 81, column: 3, scope: !1041)
!1045 = !DILocation(line: 84, column: 15, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1008, file: !3, line: 84, column: 6)
!1047 = !DILocation(line: 84, column: 13, scope: !1046)
!1048 = !DILocation(line: 84, column: 39, scope: !1046)
!1049 = !DILocation(line: 84, column: 6, scope: !1008)
!1050 = !DILocation(line: 85, column: 11, scope: !1046)
!1051 = !DILocation(line: 85, column: 10, scope: !1046)
!1052 = !DILocation(line: 85, column: 3, scope: !1046)
!1053 = !DILocation(line: 87, column: 16, scope: !1008)
!1054 = !DILocation(line: 87, column: 2, scope: !1008)
!1055 = !DILocation(line: 87, column: 9, scope: !1008)
!1056 = !DILocation(line: 87, column: 14, scope: !1008)
!1057 = !DILocation(line: 88, column: 6, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !1008, file: !3, line: 88, column: 6)
!1059 = !DILocation(line: 88, column: 15, scope: !1058)
!1060 = !DILocation(line: 88, column: 6, scope: !1008)
!1061 = !DILocation(line: 89, column: 31, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !3, line: 89, column: 7)
!1063 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 88, column: 52)
!1064 = !DILocation(line: 89, column: 21, scope: !1062)
!1065 = !DILocation(line: 89, column: 8, scope: !1062)
!1066 = !DILocation(line: 89, column: 15, scope: !1062)
!1067 = !DILocation(line: 89, column: 19, scope: !1062)
!1068 = !DILocation(line: 89, column: 37, scope: !1062)
!1069 = !DILocation(line: 89, column: 7, scope: !1063)
!1070 = !DILocation(line: 90, column: 9, scope: !1071)
!1071 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 89, column: 46)
!1072 = !DILocation(line: 90, column: 4, scope: !1071)
!1073 = !DILocation(line: 91, column: 12, scope: !1071)
!1074 = !DILocation(line: 91, column: 11, scope: !1071)
!1075 = !DILocation(line: 91, column: 4, scope: !1071)
!1076 = !DILocation(line: 93, column: 2, scope: !1063)
!1077 = !DILocation(line: 94, column: 16, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 93, column: 9)
!1079 = !DILocation(line: 94, column: 3, scope: !1078)
!1080 = !DILocation(line: 94, column: 10, scope: !1078)
!1081 = !DILocation(line: 94, column: 14, scope: !1078)
!1082 = !DILocation(line: 97, column: 18, scope: !1008)
!1083 = !DILocation(line: 97, column: 25, scope: !1008)
!1084 = !DILocation(line: 97, column: 30, scope: !1008)
!1085 = !DILocation(line: 97, column: 8, scope: !1008)
!1086 = !DILocation(line: 97, column: 6, scope: !1008)
!1087 = !DILocation(line: 98, column: 6, scope: !1088)
!1088 = distinct !DILexicalBlock(scope: !1008, file: !3, line: 98, column: 6)
!1089 = !DILocation(line: 98, column: 10, scope: !1088)
!1090 = !DILocation(line: 98, column: 6, scope: !1008)
!1091 = !DILocation(line: 99, column: 8, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1088, file: !3, line: 98, column: 16)
!1093 = !DILocation(line: 99, column: 3, scope: !1092)
!1094 = !DILocation(line: 100, column: 10, scope: !1092)
!1095 = !DILocation(line: 100, column: 3, scope: !1092)
!1096 = !DILocation(line: 103, column: 2, scope: !1008)
!1097 = !DILocation(line: 104, column: 1, scope: !1008)
!1098 = distinct !DISubprogram(name: "HX_strdup", scope: !304, file: !304, line: 132, type: !1099, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!92, !120}
!1101 = !DILocalVariable(name: "src", arg: 1, scope: !1098, file: !304, line: 132, type: !120)
!1102 = !DILocation(line: 132, column: 43, scope: !1098)
!1103 = !DILocation(line: 134, column: 6, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !1098, file: !304, line: 134, column: 6)
!1105 = !DILocation(line: 134, column: 10, scope: !1104)
!1106 = !DILocation(line: 134, column: 6, scope: !1098)
!1107 = !DILocation(line: 135, column: 3, scope: !1104)
!1108 = !DILocation(line: 139, column: 19, scope: !1098)
!1109 = !DILocation(line: 139, column: 31, scope: !1098)
!1110 = !DILocation(line: 139, column: 24, scope: !1098)
!1111 = !DILocation(line: 139, column: 36, scope: !1098)
!1112 = !DILocation(line: 139, column: 9, scope: !1098)
!1113 = !DILocation(line: 139, column: 2, scope: !1098)
!1114 = !DILocation(line: 141, column: 1, scope: !1098)
!1115 = distinct !DISubprogram(name: "HX_memdup", scope: !304, file: !304, line: 104, type: !162, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1116 = !DILocalVariable(name: "buf", arg: 1, scope: !1115, file: !304, line: 104, type: !90)
!1117 = !DILocation(line: 104, column: 43, scope: !1115)
!1118 = !DILocalVariable(name: "len", arg: 2, scope: !1115, file: !304, line: 104, type: !157)
!1119 = !DILocation(line: 104, column: 55, scope: !1115)
!1120 = !DILocalVariable(name: "ret", scope: !1115, file: !304, line: 106, type: !89)
!1121 = !DILocation(line: 106, column: 8, scope: !1115)
!1122 = !DILocation(line: 107, column: 20, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1115, file: !304, line: 107, column: 6)
!1124 = !DILocation(line: 107, column: 13, scope: !1123)
!1125 = !DILocation(line: 107, column: 11, scope: !1123)
!1126 = !DILocation(line: 107, column: 26, scope: !1123)
!1127 = !DILocation(line: 107, column: 6, scope: !1115)
!1128 = !DILocation(line: 108, column: 3, scope: !1123)
!1129 = !DILocation(line: 109, column: 16, scope: !1115)
!1130 = !DILocation(line: 109, column: 21, scope: !1115)
!1131 = !DILocation(line: 109, column: 26, scope: !1115)
!1132 = !DILocation(line: 109, column: 9, scope: !1115)
!1133 = !DILocation(line: 109, column: 2, scope: !1115)
!1134 = !DILocation(line: 110, column: 1, scope: !1115)
!1135 = distinct !DISubprogram(name: "HXformat2_aprintf", scope: !3, file: !3, line: 511, type: !1136, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!14, !1001, !96, !120}
!1138 = !DILocalVariable(name: "ftable", arg: 1, scope: !1135, file: !3, line: 511, type: !1001)
!1139 = !DILocation(line: 511, column: 64, scope: !1135)
!1140 = !DILocalVariable(name: "resultp", arg: 2, scope: !1135, file: !3, line: 512, type: !96)
!1141 = !DILocation(line: 512, column: 14, scope: !1135)
!1142 = !DILocalVariable(name: "fmt", arg: 3, scope: !1135, file: !3, line: 512, type: !120)
!1143 = !DILocation(line: 512, column: 35, scope: !1135)
!1144 = !DILocalVariable(name: "table", scope: !1135, file: !3, line: 514, type: !142)
!1145 = !DILocation(line: 514, column: 22, scope: !1135)
!1146 = !DILocation(line: 514, column: 41, scope: !1135)
!1147 = !DILocation(line: 514, column: 30, scope: !1135)
!1148 = !DILocalVariable(name: "ex", scope: !1135, file: !3, line: 515, type: !97)
!1149 = !DILocation(line: 515, column: 10, scope: !1135)
!1150 = !DILocalVariable(name: "ts", scope: !1135, file: !3, line: 515, type: !97)
!1151 = !DILocation(line: 515, column: 15, scope: !1135)
!1152 = !DILocalVariable(name: "out", scope: !1135, file: !3, line: 515, type: !97)
!1153 = !DILocation(line: 515, column: 20, scope: !1135)
!1154 = !DILocation(line: 515, column: 26, scope: !1135)
!1155 = !DILocalVariable(name: "current", scope: !1135, file: !3, line: 516, type: !120)
!1156 = !DILocation(line: 516, column: 14, scope: !1135)
!1157 = !DILocalVariable(name: "ret", scope: !1135, file: !3, line: 517, type: !14)
!1158 = !DILocation(line: 517, column: 6, scope: !1135)
!1159 = !DILocation(line: 519, column: 12, scope: !1135)
!1160 = !DILocation(line: 519, column: 10, scope: !1135)
!1161 = !DILocation(line: 520, column: 2, scope: !1135)
!1162 = !DILocation(line: 520, column: 31, scope: !1135)
!1163 = !DILocation(line: 520, column: 20, scope: !1135)
!1164 = !DILocation(line: 520, column: 18, scope: !1135)
!1165 = !DILocation(line: 520, column: 42, scope: !1135)
!1166 = !DILocation(line: 521, column: 7, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 521, column: 7)
!1168 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 520, column: 51)
!1169 = !DILocation(line: 521, column: 17, scope: !1167)
!1170 = !DILocation(line: 521, column: 15, scope: !1167)
!1171 = !DILocation(line: 521, column: 21, scope: !1167)
!1172 = !DILocation(line: 521, column: 7, scope: !1168)
!1173 = !DILocation(line: 522, column: 22, scope: !1167)
!1174 = !DILocation(line: 522, column: 27, scope: !1167)
!1175 = !DILocation(line: 522, column: 37, scope: !1167)
!1176 = !DILocation(line: 522, column: 35, scope: !1167)
!1177 = !DILocation(line: 522, column: 4, scope: !1167)
!1178 = !DILocation(line: 523, column: 8, scope: !1179)
!1179 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 523, column: 7)
!1180 = !DILocation(line: 523, column: 7, scope: !1179)
!1181 = !DILocation(line: 523, column: 16, scope: !1179)
!1182 = !DILocation(line: 523, column: 7, scope: !1168)
!1183 = !DILocation(line: 524, column: 4, scope: !1179)
!1184 = !DILocation(line: 525, column: 7, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 525, column: 7)
!1186 = !DILocation(line: 525, column: 18, scope: !1185)
!1187 = !DILocation(line: 525, column: 7, scope: !1168)
!1188 = !DILocation(line: 526, column: 22, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1185, file: !3, line: 525, column: 29)
!1190 = !DILocation(line: 526, column: 4, scope: !1189)
!1191 = !DILocation(line: 527, column: 10, scope: !1189)
!1192 = !DILocation(line: 527, column: 18, scope: !1189)
!1193 = !DILocation(line: 527, column: 8, scope: !1189)
!1194 = !DILocation(line: 528, column: 4, scope: !1189)
!1195 = distinct !{!1195, !1161, !1196}
!1196 = !DILocation(line: 542, column: 2, scope: !1135)
!1197 = !DILocation(line: 531, column: 11, scope: !1168)
!1198 = !DILocation(line: 532, column: 33, scope: !1168)
!1199 = !DILocation(line: 532, column: 8, scope: !1168)
!1200 = !DILocation(line: 532, column: 6, scope: !1168)
!1201 = !DILocation(line: 533, column: 7, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 533, column: 7)
!1203 = !DILocation(line: 533, column: 10, scope: !1202)
!1204 = !DILocation(line: 533, column: 7, scope: !1168)
!1205 = !DILocation(line: 534, column: 4, scope: !1202)
!1206 = !DILocation(line: 535, column: 7, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 535, column: 7)
!1208 = !DILocation(line: 535, column: 10, scope: !1207)
!1209 = !DILocation(line: 535, column: 7, scope: !1168)
!1210 = !DILocation(line: 536, column: 27, scope: !1211)
!1211 = distinct !DILexicalBlock(scope: !1207, file: !3, line: 535, column: 30)
!1212 = !DILocation(line: 536, column: 9, scope: !1211)
!1213 = !DILocation(line: 536, column: 7, scope: !1211)
!1214 = !DILocation(line: 537, column: 14, scope: !1211)
!1215 = !DILocation(line: 537, column: 4, scope: !1211)
!1216 = !DILocation(line: 538, column: 8, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1211, file: !3, line: 538, column: 8)
!1218 = !DILocation(line: 538, column: 11, scope: !1217)
!1219 = !DILocation(line: 538, column: 8, scope: !1211)
!1220 = !DILocation(line: 539, column: 5, scope: !1217)
!1221 = !DILocation(line: 540, column: 3, scope: !1211)
!1222 = !DILocation(line: 541, column: 9, scope: !1168)
!1223 = !DILocation(line: 541, column: 7, scope: !1168)
!1224 = !DILocation(line: 544, column: 13, scope: !1135)
!1225 = !DILocation(line: 544, column: 3, scope: !1135)
!1226 = !DILocation(line: 544, column: 11, scope: !1135)
!1227 = !DILocation(line: 545, column: 16, scope: !1135)
!1228 = !DILocation(line: 545, column: 9, scope: !1135)
!1229 = !DILocation(line: 545, column: 2, scope: !1135)
!1230 = !DILocation(line: 548, column: 9, scope: !1135)
!1231 = !DILocation(line: 548, column: 8, scope: !1135)
!1232 = !DILocation(line: 548, column: 6, scope: !1135)
!1233 = !DILocation(line: 549, column: 12, scope: !1135)
!1234 = !DILocation(line: 549, column: 2, scope: !1135)
!1235 = !DILocation(line: 550, column: 9, scope: !1135)
!1236 = !DILocation(line: 550, column: 2, scope: !1135)
!1237 = !DILocation(line: 551, column: 1, scope: !1135)
!1238 = distinct !DISubprogram(name: "HX_strchr0", scope: !3, file: !3, line: 106, type: !1239, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!92, !120, !93}
!1241 = !DILocalVariable(name: "s", arg: 1, scope: !1238, file: !3, line: 106, type: !120)
!1242 = !DILocation(line: 106, column: 44, scope: !1238)
!1243 = !DILocalVariable(name: "c", arg: 2, scope: !1238, file: !3, line: 106, type: !93)
!1244 = !DILocation(line: 106, column: 52, scope: !1238)
!1245 = !DILocalVariable(name: "ret", scope: !1238, file: !3, line: 108, type: !92)
!1246 = !DILocation(line: 108, column: 8, scope: !1238)
!1247 = !DILocation(line: 108, column: 21, scope: !1238)
!1248 = !DILocation(line: 108, column: 24, scope: !1238)
!1249 = !DILocation(line: 108, column: 14, scope: !1238)
!1250 = !DILocation(line: 109, column: 6, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1238, file: !3, line: 109, column: 6)
!1252 = !DILocation(line: 109, column: 10, scope: !1251)
!1253 = !DILocation(line: 109, column: 6, scope: !1238)
!1254 = !DILocation(line: 110, column: 10, scope: !1251)
!1255 = !DILocation(line: 110, column: 3, scope: !1251)
!1256 = !DILocation(line: 111, column: 9, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1238, file: !3, line: 111, column: 9)
!1258 = !DILocation(line: 111, column: 2, scope: !1238)
!1259 = !DILocation(line: 112, column: 1, scope: !1238)
!1260 = distinct !DISubprogram(name: "HXformat2_xany", scope: !3, file: !3, line: 447, type: !1261, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!97, !381, !142}
!1263 = !DILocalVariable(name: "pptr", arg: 1, scope: !1260, file: !3, line: 447, type: !381)
!1264 = !DILocation(line: 447, column: 44, scope: !1260)
!1265 = !DILocalVariable(name: "table", arg: 2, scope: !1260, file: !3, line: 447, type: !142)
!1266 = !DILocation(line: 447, column: 70, scope: !1260)
!1267 = !DILocalVariable(name: "s", scope: !1260, file: !3, line: 449, type: !120)
!1268 = !DILocation(line: 449, column: 14, scope: !1260)
!1269 = !DILocation(line: 449, column: 19, scope: !1260)
!1270 = !DILocation(line: 449, column: 18, scope: !1260)
!1271 = !DILocalVariable(name: "name", scope: !1260, file: !3, line: 450, type: !97)
!1272 = !DILocation(line: 450, column: 10, scope: !1260)
!1273 = !DILocalVariable(name: "ret", scope: !1260, file: !3, line: 450, type: !97)
!1274 = !DILocation(line: 450, column: 17, scope: !1260)
!1275 = !DILocation(line: 456, column: 7, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1260, file: !3, line: 456, column: 6)
!1277 = !DILocation(line: 456, column: 6, scope: !1276)
!1278 = !DILocation(line: 456, column: 9, scope: !1276)
!1279 = !DILocation(line: 456, column: 6, scope: !1260)
!1280 = !DILocation(line: 457, column: 6, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1276, file: !3, line: 456, column: 21)
!1282 = !DILocation(line: 457, column: 3, scope: !1281)
!1283 = !DILocation(line: 458, column: 3, scope: !1281)
!1284 = !DILocation(line: 459, column: 25, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1276, file: !3, line: 459, column: 13)
!1286 = !DILocation(line: 459, column: 24, scope: !1285)
!1287 = !DILocation(line: 459, column: 13, scope: !1285)
!1288 = !DILocation(line: 459, column: 13, scope: !1276)
!1289 = !DILocation(line: 460, column: 3, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1285, file: !3, line: 459, column: 29)
!1291 = !DILocation(line: 460, column: 22, scope: !1290)
!1292 = !DILocation(line: 460, column: 21, scope: !1290)
!1293 = !DILocation(line: 460, column: 10, scope: !1290)
!1294 = !DILocation(line: 461, column: 4, scope: !1290)
!1295 = distinct !{!1295, !1289, !1296}
!1296 = !DILocation(line: 461, column: 6, scope: !1290)
!1297 = !DILocation(line: 462, column: 33, scope: !1290)
!1298 = !DILocation(line: 462, column: 45, scope: !1290)
!1299 = !DILocation(line: 462, column: 13, scope: !1290)
!1300 = !DILocation(line: 462, column: 3, scope: !1290)
!1301 = !DILocation(line: 463, column: 6, scope: !1290)
!1302 = !DILocation(line: 463, column: 3, scope: !1290)
!1303 = !DILocation(line: 464, column: 3, scope: !1290)
!1304 = !DILocation(line: 468, column: 29, scope: !1260)
!1305 = !DILocation(line: 468, column: 55, scope: !1260)
!1306 = !DILocation(line: 468, column: 9, scope: !1260)
!1307 = !DILocation(line: 468, column: 7, scope: !1260)
!1308 = !DILocation(line: 469, column: 6, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1260, file: !3, line: 469, column: 6)
!1310 = !DILocation(line: 469, column: 11, scope: !1309)
!1311 = !DILocation(line: 469, column: 6, scope: !1260)
!1312 = !DILocation(line: 470, column: 3, scope: !1309)
!1313 = !DILocation(line: 471, column: 7, scope: !1260)
!1314 = !DILocation(line: 471, column: 6, scope: !1260)
!1315 = !DILocation(line: 471, column: 4, scope: !1260)
!1316 = !DILocation(line: 472, column: 7, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1260, file: !3, line: 472, column: 6)
!1318 = !DILocation(line: 472, column: 6, scope: !1317)
!1319 = !DILocation(line: 472, column: 9, scope: !1317)
!1320 = !DILocation(line: 472, column: 6, scope: !1260)
!1321 = !DILocation(line: 473, column: 11, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1317, file: !3, line: 472, column: 18)
!1323 = !DILocation(line: 473, column: 3, scope: !1322)
!1324 = !DILocation(line: 476, column: 3, scope: !1322)
!1325 = !DILocation(line: 477, column: 14, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1317, file: !3, line: 477, column: 13)
!1327 = !DILocation(line: 477, column: 13, scope: !1326)
!1328 = !DILocation(line: 477, column: 16, scope: !1326)
!1329 = !DILocation(line: 477, column: 13, scope: !1317)
!1330 = !DILocalVariable(name: "entry", scope: !1331, file: !3, line: 479, type: !111)
!1331 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 477, column: 28)
!1332 = !DILocation(line: 479, column: 27, scope: !1331)
!1333 = !DILocalVariable(name: "new_name", scope: !1331, file: !3, line: 480, type: !97)
!1334 = !DILocation(line: 480, column: 11, scope: !1331)
!1335 = !DILocalVariable(name: "eret", scope: !1331, file: !3, line: 481, type: !14)
!1336 = !DILocation(line: 481, column: 7, scope: !1331)
!1337 = !DILocation(line: 483, column: 11, scope: !1331)
!1338 = !DILocation(line: 483, column: 4, scope: !1331)
!1339 = !DILocation(line: 483, column: 9, scope: !1331)
!1340 = !DILocation(line: 484, column: 40, scope: !1331)
!1341 = !DILocation(line: 484, column: 29, scope: !1331)
!1342 = !DILocation(line: 484, column: 59, scope: !1331)
!1343 = !DILocation(line: 484, column: 11, scope: !1331)
!1344 = !DILocation(line: 484, column: 9, scope: !1331)
!1345 = !DILocation(line: 485, column: 7, scope: !1346)
!1346 = distinct !DILexicalBlock(scope: !1331, file: !3, line: 485, column: 7)
!1347 = !DILocation(line: 485, column: 12, scope: !1346)
!1348 = !DILocation(line: 485, column: 7, scope: !1331)
!1349 = !DILocation(line: 486, column: 8, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 485, column: 18)
!1351 = !DILocation(line: 487, column: 3, scope: !1350)
!1352 = !DILocation(line: 487, column: 15, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 487, column: 14)
!1354 = !DILocation(line: 487, column: 14, scope: !1353)
!1355 = !DILocation(line: 487, column: 24, scope: !1353)
!1356 = !DILocation(line: 487, column: 14, scope: !1346)
!1357 = !DILocation(line: 488, column: 8, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1353, file: !3, line: 487, column: 33)
!1359 = !DILocation(line: 489, column: 3, scope: !1358)
!1360 = !DILocation(line: 490, column: 22, scope: !1361)
!1361 = distinct !DILexicalBlock(scope: !1353, file: !3, line: 489, column: 10)
!1362 = !DILocation(line: 490, column: 29, scope: !1361)
!1363 = !DILocation(line: 490, column: 12, scope: !1361)
!1364 = !DILocation(line: 490, column: 10, scope: !1361)
!1365 = !DILocation(line: 491, column: 13, scope: !1361)
!1366 = !DILocation(line: 491, column: 19, scope: !1361)
!1367 = !DILocation(line: 491, column: 12, scope: !1361)
!1368 = !DILocation(line: 492, column: 27, scope: !1361)
!1369 = !DILocation(line: 492, column: 12, scope: !1361)
!1370 = !DILocation(line: 491, column: 10, scope: !1361)
!1371 = !DILocation(line: 494, column: 13, scope: !1331)
!1372 = !DILocation(line: 494, column: 3, scope: !1331)
!1373 = !DILocation(line: 495, column: 2, scope: !1331)
!1374 = !DILocation(line: 497, column: 3, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 495, column: 9)
!1376 = !DILocation(line: 497, column: 22, scope: !1375)
!1377 = !DILocation(line: 497, column: 21, scope: !1375)
!1378 = !DILocation(line: 497, column: 10, scope: !1375)
!1379 = !DILocation(line: 498, column: 4, scope: !1375)
!1380 = distinct !{!1380, !1374, !1381}
!1381 = !DILocation(line: 498, column: 6, scope: !1375)
!1382 = !DILocation(line: 499, column: 11, scope: !1375)
!1383 = !DILocation(line: 499, column: 4, scope: !1375)
!1384 = !DILocation(line: 499, column: 9, scope: !1375)
!1385 = !DILocation(line: 504, column: 25, scope: !1375)
!1386 = !DILocation(line: 504, column: 31, scope: !1375)
!1387 = !DILocation(line: 504, column: 37, scope: !1375)
!1388 = !DILocation(line: 504, column: 9, scope: !1375)
!1389 = !DILocation(line: 504, column: 7, scope: !1375)
!1390 = !DILocation(line: 507, column: 12, scope: !1260)
!1391 = !DILocation(line: 507, column: 2, scope: !1260)
!1392 = !DILocation(line: 508, column: 9, scope: !1260)
!1393 = !DILocation(line: 508, column: 2, scope: !1260)
!1394 = !DILocation(line: 509, column: 1, scope: !1260)
!1395 = distinct !DISubprogram(name: "HX_isspace", scope: !1396, file: !1396, line: 57, type: !1397, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1396 = !DIFile(filename: "./include/libHX/ctype_helper.h", directory: "/root/llvm/codesample/39apps/libhx-3.5/src")
!1397 = !DISubroutineType(types: !1398)
!1398 = !{!141, !231}
!1399 = !DILocalVariable(name: "c", arg: 1, scope: !1395, file: !1396, line: 57, type: !231)
!1400 = !DILocation(line: 57, column: 45, scope: !1395)
!1401 = !DILocation(line: 59, column: 9, scope: !1395)
!1402 = !DILocation(line: 59, column: 2, scope: !1395)
!1403 = !DILocalVariable(name: "entry", arg: 1, scope: !108, file: !3, line: 373, type: !111)
!1404 = !DILocation(line: 373, column: 55, scope: !108)
!1405 = !DILocalVariable(name: "buf", scope: !108, file: !3, line: 385, type: !1406)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 168, elements: !1407)
!1407 = !{!1408}
!1408 = !DISubrange(count: 21)
!1409 = !DILocation(line: 385, column: 7, scope: !108)
!1410 = !DILocalVariable(name: "wp", scope: !108, file: !3, line: 386, type: !97)
!1411 = !DILocation(line: 386, column: 10, scope: !108)
!1412 = !DILocation(line: 388, column: 2, scope: !108)
!1413 = !DILocation(line: 388, column: 7, scope: !108)
!1414 = !DILocation(line: 389, column: 10, scope: !108)
!1415 = !DILocation(line: 389, column: 17, scope: !108)
!1416 = !DILocation(line: 389, column: 2, scope: !108)
!1417 = !DILocation(line: 392, column: 21, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !108, file: !3, line: 389, column: 23)
!1419 = !DILocation(line: 392, column: 28, scope: !1418)
!1420 = !DILocation(line: 392, column: 4, scope: !1418)
!1421 = !DILocation(line: 393, column: 4, scope: !1418)
!1422 = !DILocation(line: 395, column: 22, scope: !1418)
!1423 = !DILocation(line: 395, column: 21, scope: !1418)
!1424 = !DILocation(line: 395, column: 4, scope: !1418)
!1425 = !DILocation(line: 396, column: 4, scope: !1418)
!1426 = !DILocation(line: 398, column: 27, scope: !1418)
!1427 = !DILocation(line: 398, column: 26, scope: !1418)
!1428 = !DILocation(line: 398, column: 25, scope: !1418)
!1429 = !DILocation(line: 398, column: 24, scope: !1418)
!1430 = !DILocation(line: 398, column: 21, scope: !1418)
!1431 = !DILocation(line: 398, column: 4, scope: !1418)
!1432 = !DILocation(line: 400, column: 4, scope: !1418)
!1433 = !DILocation(line: 402, column: 24, scope: !1418)
!1434 = !DILocation(line: 402, column: 31, scope: !1418)
!1435 = !DILocation(line: 402, column: 35, scope: !1418)
!1436 = !DILocation(line: 402, column: 21, scope: !1418)
!1437 = !DILocation(line: 402, column: 4, scope: !1418)
!1438 = !DILocation(line: 403, column: 4, scope: !1418)
!1439 = !DILocation(line: 405, column: 23, scope: !1418)
!1440 = !DILocation(line: 406, column: 23, scope: !1418)
!1441 = !DILocation(line: 407, column: 23, scope: !1418)
!1442 = !DILocation(line: 408, column: 23, scope: !1418)
!1443 = !DILocation(line: 409, column: 23, scope: !1418)
!1444 = !DILocation(line: 410, column: 23, scope: !1418)
!1445 = !DILocation(line: 411, column: 23, scope: !1418)
!1446 = !DILocation(line: 412, column: 23, scope: !1418)
!1447 = !DILocation(line: 413, column: 23, scope: !1418)
!1448 = !DILocation(line: 414, column: 23, scope: !1418)
!1449 = !DILocation(line: 415, column: 23, scope: !1418)
!1450 = !DILocation(line: 416, column: 23, scope: !1418)
!1451 = !DILocation(line: 417, column: 23, scope: !1418)
!1452 = !DILocation(line: 419, column: 40, scope: !1418)
!1453 = !DILocation(line: 420, column: 40, scope: !1418)
!1454 = !DILocation(line: 421, column: 40, scope: !1418)
!1455 = !DILocation(line: 422, column: 40, scope: !1418)
!1456 = !DILocation(line: 423, column: 40, scope: !1418)
!1457 = !DILocation(line: 424, column: 40, scope: !1418)
!1458 = !DILocation(line: 425, column: 40, scope: !1418)
!1459 = !DILocation(line: 426, column: 40, scope: !1418)
!1460 = !DILocation(line: 429, column: 12, scope: !1418)
!1461 = !DILocation(line: 429, column: 4, scope: !1418)
!1462 = !DILocation(line: 430, column: 4, scope: !1418)
!1463 = !DILocation(line: 433, column: 6, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !108, file: !3, line: 433, column: 6)
!1465 = !DILocation(line: 433, column: 11, scope: !1464)
!1466 = !DILocation(line: 433, column: 6, scope: !108)
!1467 = !DILocation(line: 434, column: 20, scope: !1464)
!1468 = !DILocation(line: 434, column: 3, scope: !1464)
!1469 = !DILocation(line: 435, column: 9, scope: !108)
!1470 = !DILocation(line: 435, column: 2, scope: !108)
!1471 = !DILocation(line: 438, column: 1, scope: !108)
!1472 = distinct !DISubprogram(name: "HXformat2_xcall", scope: !3, file: !3, line: 302, type: !1473, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!97, !120, !381, !142}
!1475 = !DILocalVariable(name: "name", arg: 1, scope: !1472, file: !3, line: 302, type: !120)
!1476 = !DILocation(line: 302, column: 44, scope: !1472)
!1477 = !DILocalVariable(name: "pptr", arg: 2, scope: !1472, file: !3, line: 302, type: !381)
!1478 = !DILocation(line: 302, column: 63, scope: !1472)
!1479 = !DILocalVariable(name: "table", arg: 3, scope: !1472, file: !3, line: 303, type: !142)
!1480 = !DILocation(line: 303, column: 25, scope: !1472)
!1481 = !DILocalVariable(name: "entry", scope: !1472, file: !3, line: 305, type: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!1483 = !DILocation(line: 305, column: 29, scope: !1472)
!1484 = !DILocalVariable(name: "ret", scope: !1472, file: !3, line: 306, type: !97)
!1485 = !DILocation(line: 306, column: 10, scope: !1472)
!1486 = !DILocalVariable(name: "ret2", scope: !1472, file: !3, line: 306, type: !97)
!1487 = !DILocation(line: 306, column: 16, scope: !1472)
!1488 = !DILocalVariable(name: "argv", scope: !1472, file: !3, line: 306, type: !96)
!1489 = !DILocation(line: 306, column: 24, scope: !1472)
!1490 = !DILocalVariable(name: "dq", scope: !1472, file: !3, line: 307, type: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdeque", file: !420, line: 24, size: 256, elements: !1493)
!1493 = !{!1494, !1506, !1507, !1508}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1492, file: !420, line: 25, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdeque_node", file: !420, line: 14, size: 256, elements: !1497)
!1497 = !{!1498, !1499, !1504, !1505}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1496, file: !420, line: 15, baseType: !1495, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, scope: !1496, file: !420, line: 16, baseType: !1500, size: 64, offset: 64)
!1500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1496, file: !420, line: 16, size: 64, elements: !1501)
!1501 = !{!1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1500, file: !420, line: 17, baseType: !89, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sptr", scope: !1500, file: !420, line: 18, baseType: !92, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1496, file: !420, line: 20, baseType: !1491, size: 64, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1496, file: !420, line: 21, baseType: !1495, size: 64, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1492, file: !420, line: 26, baseType: !89, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1492, file: !420, line: 27, baseType: !1495, size: 64, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1492, file: !420, line: 28, baseType: !7, size: 32, offset: 192)
!1509 = !DILocation(line: 307, column: 18, scope: !1472)
!1510 = !DILocalVariable(name: "s", scope: !1472, file: !3, line: 308, type: !120)
!1511 = !DILocation(line: 308, column: 14, scope: !1472)
!1512 = !DILocalVariable(name: "delim", scope: !1472, file: !3, line: 308, type: !120)
!1513 = !DILocation(line: 308, column: 18, scope: !1472)
!1514 = !DILocalVariable(name: "err", scope: !1472, file: !3, line: 309, type: !14)
!1515 = !DILocation(line: 309, column: 6, scope: !1472)
!1516 = !DILocation(line: 311, column: 7, scope: !1472)
!1517 = !DILocation(line: 311, column: 5, scope: !1472)
!1518 = !DILocation(line: 312, column: 6, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 312, column: 6)
!1520 = !DILocation(line: 312, column: 9, scope: !1519)
!1521 = !DILocation(line: 312, column: 6, scope: !1472)
!1522 = !DILocation(line: 313, column: 3, scope: !1519)
!1523 = !DILocation(line: 315, column: 18, scope: !1472)
!1524 = !DILocation(line: 315, column: 10, scope: !1472)
!1525 = !DILocation(line: 315, column: 8, scope: !1472)
!1526 = !DILocation(line: 317, column: 11, scope: !1472)
!1527 = !DILocation(line: 317, column: 17, scope: !1472)
!1528 = !DILocation(line: 317, column: 10, scope: !1472)
!1529 = !DILocation(line: 317, column: 28, scope: !1472)
!1530 = !DILocation(line: 317, column: 35, scope: !1472)
!1531 = !DILocation(line: 317, column: 8, scope: !1472)
!1532 = !DILocation(line: 318, column: 8, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 318, column: 6)
!1534 = !DILocation(line: 318, column: 7, scope: !1533)
!1535 = !DILocation(line: 318, column: 6, scope: !1533)
!1536 = !DILocation(line: 318, column: 13, scope: !1533)
!1537 = !DILocation(line: 318, column: 6, scope: !1472)
!1538 = !DILocation(line: 319, column: 6, scope: !1533)
!1539 = !DILocation(line: 319, column: 3, scope: !1533)
!1540 = !DILocation(line: 320, column: 17, scope: !1541)
!1541 = distinct !DILexicalBlock(scope: !1533, file: !3, line: 320, column: 7)
!1542 = !DILocation(line: 320, column: 16, scope: !1541)
!1543 = !DILocation(line: 320, column: 14, scope: !1541)
!1544 = !DILocation(line: 320, column: 12, scope: !1541)
!1545 = !DILocation(line: 320, column: 24, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1541, file: !3, line: 320, column: 7)
!1547 = !DILocation(line: 320, column: 23, scope: !1546)
!1548 = !DILocation(line: 320, column: 26, scope: !1546)
!1549 = !DILocation(line: 320, column: 7, scope: !1541)
!1550 = !DILocation(line: 321, column: 3, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 320, column: 48)
!1552 = !DILocation(line: 321, column: 22, scope: !1551)
!1553 = !DILocation(line: 321, column: 21, scope: !1551)
!1554 = !DILocation(line: 321, column: 10, scope: !1551)
!1555 = !DILocation(line: 322, column: 4, scope: !1551)
!1556 = distinct !{!1556, !1550, !1557}
!1557 = !DILocation(line: 322, column: 6, scope: !1551)
!1558 = !DILocation(line: 323, column: 11, scope: !1551)
!1559 = !DILocation(line: 323, column: 4, scope: !1551)
!1560 = !DILocation(line: 323, column: 9, scope: !1551)
!1561 = !DILocation(line: 324, column: 29, scope: !1551)
!1562 = !DILocation(line: 324, column: 32, scope: !1551)
!1563 = !DILocation(line: 324, column: 39, scope: !1551)
!1564 = !DILocation(line: 324, column: 9, scope: !1551)
!1565 = !DILocation(line: 324, column: 7, scope: !1551)
!1566 = !DILocation(line: 325, column: 7, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 325, column: 7)
!1568 = !DILocation(line: 325, column: 11, scope: !1567)
!1569 = !DILocation(line: 325, column: 7, scope: !1551)
!1570 = !DILocation(line: 326, column: 4, scope: !1567)
!1571 = !DILocation(line: 327, column: 14, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 327, column: 7)
!1573 = !DILocation(line: 327, column: 7, scope: !1572)
!1574 = !DILocation(line: 327, column: 31, scope: !1572)
!1575 = !DILocation(line: 327, column: 7, scope: !1551)
!1576 = !DILocation(line: 328, column: 9, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 327, column: 40)
!1578 = !DILocation(line: 329, column: 39, scope: !1577)
!1579 = !DILocation(line: 329, column: 28, scope: !1577)
!1580 = !DILocation(line: 329, column: 54, scope: !1577)
!1581 = !DILocation(line: 329, column: 10, scope: !1577)
!1582 = !DILocation(line: 329, column: 8, scope: !1577)
!1583 = !DILocation(line: 330, column: 8, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 330, column: 8)
!1585 = !DILocation(line: 330, column: 13, scope: !1584)
!1586 = !DILocation(line: 330, column: 8, scope: !1577)
!1587 = !DILocation(line: 331, column: 5, scope: !1584)
!1588 = !DILocation(line: 332, column: 14, scope: !1577)
!1589 = !DILocation(line: 332, column: 4, scope: !1577)
!1590 = !DILocation(line: 333, column: 10, scope: !1577)
!1591 = !DILocation(line: 333, column: 8, scope: !1577)
!1592 = !DILocation(line: 334, column: 3, scope: !1577)
!1593 = !DILocation(line: 335, column: 20, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 335, column: 7)
!1595 = !DILocation(line: 335, column: 24, scope: !1594)
!1596 = !DILocation(line: 335, column: 7, scope: !1594)
!1597 = !DILocation(line: 335, column: 29, scope: !1594)
!1598 = !DILocation(line: 335, column: 7, scope: !1551)
!1599 = !DILocation(line: 336, column: 4, scope: !1594)
!1600 = !DILocation(line: 337, column: 9, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 337, column: 7)
!1602 = !DILocation(line: 337, column: 8, scope: !1601)
!1603 = !DILocation(line: 337, column: 7, scope: !1601)
!1604 = !DILocation(line: 337, column: 14, scope: !1601)
!1605 = !DILocation(line: 337, column: 7, scope: !1551)
!1606 = !DILocation(line: 338, column: 4, scope: !1601)
!1607 = !DILocation(line: 339, column: 9, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 339, column: 7)
!1609 = !DILocation(line: 339, column: 8, scope: !1608)
!1610 = !DILocation(line: 339, column: 7, scope: !1608)
!1611 = !DILocation(line: 339, column: 14, scope: !1608)
!1612 = !DILocation(line: 339, column: 7, scope: !1551)
!1613 = !DILocation(line: 340, column: 7, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1608, file: !3, line: 339, column: 26)
!1615 = !DILocation(line: 340, column: 4, scope: !1614)
!1616 = !DILocation(line: 341, column: 4, scope: !1614)
!1617 = !DILocation(line: 343, column: 2, scope: !1551)
!1618 = !DILocation(line: 320, column: 42, scope: !1546)
!1619 = !DILocation(line: 320, column: 39, scope: !1546)
!1620 = !DILocation(line: 320, column: 37, scope: !1546)
!1621 = !DILocation(line: 320, column: 7, scope: !1546)
!1622 = distinct !{!1622, !1549, !1623}
!1623 = !DILocation(line: 343, column: 2, scope: !1541)
!1624 = !DILocation(line: 345, column: 6, scope: !1472)
!1625 = !DILocation(line: 346, column: 9, scope: !1472)
!1626 = !DILocation(line: 346, column: 7, scope: !1472)
!1627 = !DILocation(line: 347, column: 6, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 347, column: 6)
!1629 = !DILocation(line: 347, column: 11, scope: !1628)
!1630 = !DILocation(line: 347, column: 6, scope: !1472)
!1631 = !DILocation(line: 348, column: 3, scope: !1628)
!1632 = !DILocation(line: 350, column: 6, scope: !1472)
!1633 = !DILocation(line: 352, column: 6, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 352, column: 6)
!1635 = !DILocation(line: 352, column: 12, scope: !1634)
!1636 = !DILocation(line: 352, column: 20, scope: !1634)
!1637 = !DILocation(line: 352, column: 24, scope: !1634)
!1638 = !DILocation(line: 352, column: 31, scope: !1634)
!1639 = !DILocation(line: 352, column: 37, scope: !1634)
!1640 = !DILocation(line: 352, column: 45, scope: !1634)
!1641 = !DILocation(line: 352, column: 48, scope: !1634)
!1642 = !DILocation(line: 352, column: 55, scope: !1634)
!1643 = !DILocation(line: 352, column: 61, scope: !1634)
!1644 = !DILocation(line: 352, column: 6, scope: !1472)
!1645 = !DILocation(line: 353, column: 9, scope: !1634)
!1646 = !DILocation(line: 353, column: 16, scope: !1634)
!1647 = !DILocation(line: 353, column: 21, scope: !1634)
!1648 = !DILocation(line: 353, column: 25, scope: !1634)
!1649 = !DILocation(line: 354, column: 9, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 354, column: 9)
!1651 = !DILocation(line: 353, column: 7, scope: !1634)
!1652 = !DILocation(line: 353, column: 3, scope: !1634)
!1653 = !DILocation(line: 359, column: 7, scope: !1472)
!1654 = !DILocation(line: 359, column: 2, scope: !1472)
!1655 = !DILocation(line: 361, column: 20, scope: !1472)
!1656 = !DILocation(line: 361, column: 24, scope: !1472)
!1657 = !DILocation(line: 361, column: 2, scope: !1472)
!1658 = !DILocation(line: 362, column: 9, scope: !1472)
!1659 = !DILocation(line: 362, column: 2, scope: !1472)
!1660 = !DILocation(line: 364, column: 12, scope: !1472)
!1661 = !DILocation(line: 364, column: 2, scope: !1472)
!1662 = !DILocation(line: 365, column: 6, scope: !1472)
!1663 = !DILocation(line: 366, column: 2, scope: !1472)
!1664 = !DILocation(line: 367, column: 1, scope: !1472)
!1665 = distinct !DISubprogram(name: "HXformat2_fmap_compare", scope: !3, file: !3, line: 286, type: !1666, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!14, !90, !90}
!1668 = !DILocalVariable(name: "pa", arg: 1, scope: !1665, file: !3, line: 286, type: !90)
!1669 = !DILocation(line: 286, column: 47, scope: !1665)
!1670 = !DILocalVariable(name: "pb", arg: 2, scope: !1665, file: !3, line: 286, type: !90)
!1671 = !DILocation(line: 286, column: 63, scope: !1665)
!1672 = !DILocalVariable(name: "a_name", scope: !1665, file: !3, line: 288, type: !120)
!1673 = !DILocation(line: 288, column: 14, scope: !1665)
!1674 = !DILocation(line: 288, column: 23, scope: !1665)
!1675 = !DILocalVariable(name: "b", scope: !1665, file: !3, line: 289, type: !1482)
!1676 = !DILocation(line: 289, column: 29, scope: !1665)
!1677 = !DILocation(line: 289, column: 33, scope: !1665)
!1678 = !DILocation(line: 290, column: 16, scope: !1665)
!1679 = !DILocation(line: 290, column: 24, scope: !1665)
!1680 = !DILocation(line: 290, column: 27, scope: !1665)
!1681 = !DILocation(line: 290, column: 9, scope: !1665)
!1682 = !DILocation(line: 290, column: 2, scope: !1665)
!1683 = distinct !DISubprogram(name: "HXformat2_echo", scope: !3, file: !3, line: 144, type: !1684, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!97, !14, !99}
!1686 = !DILocalVariable(name: "argc", arg: 1, scope: !1683, file: !3, line: 144, type: !14)
!1687 = !DILocation(line: 144, column: 35, scope: !1683)
!1688 = !DILocalVariable(name: "argv", arg: 2, scope: !1683, file: !3, line: 144, type: !99)
!1689 = !DILocation(line: 144, column: 62, scope: !1683)
!1690 = !DILocalVariable(name: "ret", scope: !1683, file: !3, line: 146, type: !97)
!1691 = !DILocation(line: 146, column: 10, scope: !1683)
!1692 = !DILocation(line: 146, column: 16, scope: !1683)
!1693 = !DILocalVariable(name: "i", scope: !1683, file: !3, line: 147, type: !14)
!1694 = !DILocation(line: 147, column: 6, scope: !1683)
!1695 = !DILocation(line: 149, column: 2, scope: !1683)
!1696 = !DILocation(line: 150, column: 9, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1683, file: !3, line: 150, column: 2)
!1698 = !DILocation(line: 150, column: 7, scope: !1697)
!1699 = !DILocation(line: 150, column: 14, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1697, file: !3, line: 150, column: 2)
!1701 = !DILocation(line: 150, column: 18, scope: !1700)
!1702 = !DILocation(line: 150, column: 16, scope: !1700)
!1703 = !DILocation(line: 150, column: 2, scope: !1697)
!1704 = !DILocation(line: 151, column: 3, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1700, file: !3, line: 150, column: 29)
!1706 = !DILocation(line: 152, column: 21, scope: !1705)
!1707 = !DILocation(line: 152, column: 26, scope: !1705)
!1708 = !DILocation(line: 152, column: 3, scope: !1705)
!1709 = !DILocation(line: 153, column: 3, scope: !1705)
!1710 = !DILocation(line: 154, column: 2, scope: !1705)
!1711 = !DILocation(line: 150, column: 24, scope: !1700)
!1712 = !DILocation(line: 150, column: 2, scope: !1700)
!1713 = distinct !{!1713, !1703, !1714}
!1714 = !DILocation(line: 154, column: 2, scope: !1697)
!1715 = !DILocation(line: 155, column: 2, scope: !1683)
!1716 = !DILocation(line: 156, column: 9, scope: !1683)
!1717 = !DILocation(line: 156, column: 2, scope: !1683)
!1718 = distinct !DISubprogram(name: "HXformat2_env", scope: !3, file: !3, line: 159, type: !1684, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1719 = !DILocalVariable(name: "argc", arg: 1, scope: !1718, file: !3, line: 159, type: !14)
!1720 = !DILocation(line: 159, column: 34, scope: !1718)
!1721 = !DILocalVariable(name: "argv", arg: 2, scope: !1718, file: !3, line: 159, type: !99)
!1722 = !DILocation(line: 159, column: 61, scope: !1718)
!1723 = !DILocalVariable(name: "s", scope: !1718, file: !3, line: 161, type: !120)
!1724 = !DILocation(line: 161, column: 14, scope: !1718)
!1725 = !DILocation(line: 163, column: 6, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1718, file: !3, line: 163, column: 6)
!1727 = !DILocation(line: 163, column: 11, scope: !1726)
!1728 = !DILocation(line: 163, column: 6, scope: !1718)
!1729 = !DILocation(line: 164, column: 3, scope: !1726)
!1730 = !DILocation(line: 165, column: 13, scope: !1718)
!1731 = !DILocation(line: 165, column: 6, scope: !1718)
!1732 = !DILocation(line: 165, column: 4, scope: !1718)
!1733 = !DILocation(line: 166, column: 10, scope: !1718)
!1734 = !DILocation(line: 166, column: 12, scope: !1718)
!1735 = !DILocation(line: 166, column: 9, scope: !1718)
!1736 = !DILocation(line: 166, column: 54, scope: !1718)
!1737 = !DILocation(line: 166, column: 41, scope: !1718)
!1738 = !DILocation(line: 166, column: 2, scope: !1718)
!1739 = !DILocation(line: 167, column: 1, scope: !1718)
!1740 = distinct !DISubprogram(name: "HXformat2_exec", scope: !3, file: !3, line: 231, type: !1684, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1741 = !DILocalVariable(name: "argc", arg: 1, scope: !1740, file: !3, line: 231, type: !14)
!1742 = !DILocation(line: 231, column: 35, scope: !1740)
!1743 = !DILocalVariable(name: "argv", arg: 2, scope: !1740, file: !3, line: 231, type: !99)
!1744 = !DILocation(line: 231, column: 62, scope: !1740)
!1745 = !DILocation(line: 233, column: 6, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1740, file: !3, line: 233, column: 6)
!1747 = !DILocation(line: 233, column: 11, scope: !1746)
!1748 = !DILocation(line: 233, column: 6, scope: !1740)
!1749 = !DILocation(line: 234, column: 3, scope: !1746)
!1750 = !DILocation(line: 235, column: 25, scope: !1740)
!1751 = !DILocation(line: 235, column: 9, scope: !1740)
!1752 = !DILocation(line: 235, column: 2, scope: !1740)
!1753 = !DILocation(line: 236, column: 1, scope: !1740)
!1754 = distinct !DISubprogram(name: "HXformat2_execchk", scope: !3, file: !3, line: 195, type: !139, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1755 = !DILocalVariable(name: "table", arg: 1, scope: !1754, file: !3, line: 195, type: !142)
!1756 = !DILocation(line: 195, column: 51, scope: !1754)
!1757 = !DILocation(line: 197, column: 20, scope: !1754)
!1758 = !DILocation(line: 197, column: 9, scope: !1754)
!1759 = !DILocation(line: 197, column: 42, scope: !1754)
!1760 = !DILocation(line: 197, column: 2, scope: !1754)
!1761 = distinct !DISubprogram(name: "HXformat2_if", scope: !3, file: !3, line: 169, type: !1684, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1762 = !DILocalVariable(name: "argc", arg: 1, scope: !1761, file: !3, line: 169, type: !14)
!1763 = !DILocation(line: 169, column: 33, scope: !1761)
!1764 = !DILocalVariable(name: "argv", arg: 2, scope: !1761, file: !3, line: 169, type: !99)
!1765 = !DILocation(line: 169, column: 60, scope: !1761)
!1766 = !DILocation(line: 171, column: 6, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1761, file: !3, line: 171, column: 6)
!1768 = !DILocation(line: 171, column: 11, scope: !1767)
!1769 = !DILocation(line: 171, column: 6, scope: !1761)
!1770 = !DILocation(line: 172, column: 29, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 171, column: 16)
!1772 = !DILocation(line: 172, column: 3, scope: !1771)
!1773 = !DILocation(line: 173, column: 3, scope: !1771)
!1774 = !DILocation(line: 176, column: 7, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1761, file: !3, line: 176, column: 6)
!1776 = !DILocation(line: 176, column: 6, scope: !1775)
!1777 = !DILocation(line: 176, column: 15, scope: !1775)
!1778 = !DILocation(line: 176, column: 6, scope: !1761)
!1779 = !DILocation(line: 177, column: 12, scope: !1775)
!1780 = !DILocation(line: 177, column: 11, scope: !1775)
!1781 = !DILocation(line: 177, column: 20, scope: !1775)
!1782 = !DILocation(line: 177, column: 10, scope: !1775)
!1783 = !DILocation(line: 178, column: 23, scope: !1775)
!1784 = !DILocation(line: 178, column: 10, scope: !1775)
!1785 = !DILocation(line: 177, column: 3, scope: !1775)
!1786 = !DILocation(line: 180, column: 10, scope: !1761)
!1787 = !DILocation(line: 180, column: 15, scope: !1761)
!1788 = !DILocation(line: 180, column: 20, scope: !1761)
!1789 = !DILocation(line: 180, column: 24, scope: !1761)
!1790 = !DILocation(line: 180, column: 23, scope: !1761)
!1791 = !DILocation(line: 180, column: 32, scope: !1761)
!1792 = !DILocation(line: 180, column: 9, scope: !1761)
!1793 = !DILocation(line: 181, column: 22, scope: !1761)
!1794 = !DILocation(line: 181, column: 9, scope: !1761)
!1795 = !DILocation(line: 180, column: 2, scope: !1761)
!1796 = !DILocation(line: 182, column: 1, scope: !1761)
!1797 = distinct !DISubprogram(name: "HXformat2_lower", scope: !3, file: !3, line: 184, type: !1684, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1798 = !DILocalVariable(name: "argc", arg: 1, scope: !1797, file: !3, line: 184, type: !14)
!1799 = !DILocation(line: 184, column: 36, scope: !1797)
!1800 = !DILocalVariable(name: "argv", arg: 2, scope: !1797, file: !3, line: 184, type: !99)
!1801 = !DILocation(line: 184, column: 63, scope: !1797)
!1802 = !DILocalVariable(name: "ret", scope: !1797, file: !3, line: 186, type: !97)
!1803 = !DILocation(line: 186, column: 10, scope: !1797)
!1804 = !DILocation(line: 188, column: 6, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1797, file: !3, line: 188, column: 6)
!1806 = !DILocation(line: 188, column: 11, scope: !1805)
!1807 = !DILocation(line: 188, column: 6, scope: !1797)
!1808 = !DILocation(line: 189, column: 3, scope: !1805)
!1809 = !DILocation(line: 190, column: 21, scope: !1797)
!1810 = !DILocation(line: 190, column: 8, scope: !1797)
!1811 = !DILocation(line: 190, column: 6, scope: !1797)
!1812 = !DILocation(line: 191, column: 14, scope: !1797)
!1813 = !DILocation(line: 191, column: 2, scope: !1797)
!1814 = !DILocation(line: 192, column: 9, scope: !1797)
!1815 = !DILocation(line: 192, column: 2, scope: !1797)
!1816 = !DILocation(line: 193, column: 1, scope: !1797)
!1817 = distinct !DISubprogram(name: "HXformat2_shell", scope: !3, file: !3, line: 238, type: !1684, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1818 = !DILocalVariable(name: "argc", arg: 1, scope: !1817, file: !3, line: 238, type: !14)
!1819 = !DILocation(line: 238, column: 36, scope: !1817)
!1820 = !DILocalVariable(name: "argv", arg: 2, scope: !1817, file: !3, line: 238, type: !99)
!1821 = !DILocation(line: 238, column: 63, scope: !1817)
!1822 = !DILocalVariable(name: "cmd", scope: !1817, file: !3, line: 240, type: !1823)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1824)
!1824 = !{!1825}
!1825 = !DISubrange(count: 4)
!1826 = !DILocation(line: 240, column: 14, scope: !1817)
!1827 = !DILocation(line: 241, column: 6, scope: !1828)
!1828 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 241, column: 6)
!1829 = !DILocation(line: 241, column: 11, scope: !1828)
!1830 = !DILocation(line: 241, column: 6, scope: !1817)
!1831 = !DILocation(line: 242, column: 3, scope: !1828)
!1832 = !DILocation(line: 243, column: 11, scope: !1817)
!1833 = !DILocation(line: 243, column: 2, scope: !1817)
!1834 = !DILocation(line: 243, column: 9, scope: !1817)
!1835 = !DILocation(line: 244, column: 25, scope: !1817)
!1836 = !DILocation(line: 244, column: 9, scope: !1817)
!1837 = !DILocation(line: 244, column: 2, scope: !1817)
!1838 = !DILocation(line: 245, column: 1, scope: !1817)
!1839 = distinct !DISubprogram(name: "HXformat2_snl", scope: !3, file: !3, line: 247, type: !1684, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1840 = !DILocalVariable(name: "argc", arg: 1, scope: !1839, file: !3, line: 247, type: !14)
!1841 = !DILocation(line: 247, column: 34, scope: !1839)
!1842 = !DILocalVariable(name: "argv", arg: 2, scope: !1839, file: !3, line: 247, type: !99)
!1843 = !DILocation(line: 247, column: 61, scope: !1839)
!1844 = !DILocalVariable(name: "s", scope: !1839, file: !3, line: 249, type: !97)
!1845 = !DILocation(line: 249, column: 10, scope: !1839)
!1846 = !DILocalVariable(name: "p", scope: !1839, file: !3, line: 250, type: !92)
!1847 = !DILocation(line: 250, column: 8, scope: !1839)
!1848 = !DILocation(line: 252, column: 6, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1839, file: !3, line: 252, column: 6)
!1850 = !DILocation(line: 252, column: 11, scope: !1849)
!1851 = !DILocation(line: 252, column: 6, scope: !1839)
!1852 = !DILocation(line: 253, column: 3, scope: !1849)
!1853 = !DILocation(line: 254, column: 24, scope: !1839)
!1854 = !DILocation(line: 254, column: 23, scope: !1839)
!1855 = !DILocation(line: 254, column: 10, scope: !1839)
!1856 = !DILocation(line: 254, column: 8, scope: !1839)
!1857 = !DILocation(line: 254, column: 4, scope: !1839)
!1858 = !DILocation(line: 255, column: 6, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1839, file: !3, line: 255, column: 6)
!1860 = !DILocation(line: 255, column: 8, scope: !1859)
!1861 = !DILocation(line: 255, column: 6, scope: !1839)
!1862 = !DILocation(line: 256, column: 3, scope: !1859)
!1863 = !DILocation(line: 257, column: 11, scope: !1839)
!1864 = !DILocation(line: 257, column: 2, scope: !1839)
!1865 = !DILocation(line: 258, column: 2, scope: !1839)
!1866 = !DILocation(line: 258, column: 21, scope: !1839)
!1867 = !DILocation(line: 258, column: 14, scope: !1839)
!1868 = !DILocation(line: 258, column: 12, scope: !1839)
!1869 = !DILocation(line: 258, column: 31, scope: !1839)
!1870 = !DILocation(line: 259, column: 5, scope: !1839)
!1871 = !DILocation(line: 259, column: 8, scope: !1839)
!1872 = distinct !{!1872, !1865, !1873}
!1873 = !DILocation(line: 259, column: 10, scope: !1839)
!1874 = !DILocation(line: 260, column: 9, scope: !1839)
!1875 = !DILocation(line: 260, column: 2, scope: !1839)
!1876 = !DILocation(line: 261, column: 1, scope: !1839)
!1877 = distinct !DISubprogram(name: "HXformat2_upper", scope: !3, file: !3, line: 263, type: !1684, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1878 = !DILocalVariable(name: "argc", arg: 1, scope: !1877, file: !3, line: 263, type: !14)
!1879 = !DILocation(line: 263, column: 36, scope: !1877)
!1880 = !DILocalVariable(name: "argv", arg: 2, scope: !1877, file: !3, line: 263, type: !99)
!1881 = !DILocation(line: 263, column: 63, scope: !1877)
!1882 = !DILocalVariable(name: "ret", scope: !1877, file: !3, line: 265, type: !97)
!1883 = !DILocation(line: 265, column: 10, scope: !1877)
!1884 = !DILocation(line: 267, column: 6, scope: !1885)
!1885 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 267, column: 6)
!1886 = !DILocation(line: 267, column: 11, scope: !1885)
!1887 = !DILocation(line: 267, column: 6, scope: !1877)
!1888 = !DILocation(line: 268, column: 3, scope: !1885)
!1889 = !DILocation(line: 269, column: 21, scope: !1877)
!1890 = !DILocation(line: 269, column: 8, scope: !1877)
!1891 = !DILocation(line: 269, column: 6, scope: !1877)
!1892 = !DILocation(line: 270, column: 14, scope: !1877)
!1893 = !DILocation(line: 270, column: 2, scope: !1877)
!1894 = !DILocation(line: 271, column: 9, scope: !1877)
!1895 = !DILocation(line: 271, column: 2, scope: !1877)
!1896 = !DILocation(line: 272, column: 1, scope: !1877)
!1897 = distinct !DISubprogram(name: "HXformat2_exec1", scope: !3, file: !3, line: 200, type: !1898, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{!97, !99, !141}
!1900 = !DILocalVariable(name: "argv", arg: 1, scope: !1897, file: !3, line: 200, type: !99)
!1901 = !DILocation(line: 200, column: 53, scope: !1897)
!1902 = !DILocalVariable(name: "shell", arg: 2, scope: !1897, file: !3, line: 200, type: !141)
!1903 = !DILocation(line: 200, column: 64, scope: !1897)
!1904 = !DILocalVariable(name: "proc", scope: !1897, file: !3, line: 202, type: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXproc", file: !393, line: 30, size: 320, elements: !1906)
!1906 = !{!1907, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "p_ops", scope: !1905, file: !393, line: 31, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXproc_ops", file: !393, line: 24, size: 192, elements: !1911)
!1911 = !{!1912, !1913, !1914}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "p_prefork", scope: !1910, file: !393, line: 25, baseType: !165, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "p_postfork", scope: !1910, file: !393, line: 26, baseType: !165, size: 64, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "p_complete", scope: !1910, file: !393, line: 27, baseType: !165, size: 64, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "p_data", scope: !1905, file: !393, line: 32, baseType: !89, size: 64, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "p_flags", scope: !1905, file: !393, line: 33, baseType: !7, size: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "p_stdin", scope: !1905, file: !393, line: 35, baseType: !14, size: 32, offset: 160)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "p_stdout", scope: !1905, file: !393, line: 35, baseType: !14, size: 32, offset: 192)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "p_stderr", scope: !1905, file: !393, line: 35, baseType: !14, size: 32, offset: 224)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "p_pid", scope: !1905, file: !393, line: 36, baseType: !14, size: 32, offset: 256)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "p_status", scope: !1905, file: !393, line: 37, baseType: !93, size: 8, offset: 288)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "p_exited", scope: !1905, file: !393, line: 38, baseType: !141, size: 8, offset: 296)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "p_terminated", scope: !1905, file: !393, line: 38, baseType: !141, size: 8, offset: 304)
!1924 = !DILocation(line: 202, column: 16, scope: !1897)
!1925 = !DILocalVariable(name: "slurp", scope: !1897, file: !3, line: 205, type: !97)
!1926 = !DILocation(line: 205, column: 10, scope: !1897)
!1927 = !DILocalVariable(name: "complete", scope: !1897, file: !3, line: 205, type: !97)
!1928 = !DILocation(line: 205, column: 18, scope: !1897)
!1929 = !DILocalVariable(name: "ret", scope: !1897, file: !3, line: 206, type: !1930)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1931, line: 104, baseType: !1932)
!1931 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1933, line: 172, baseType: !95)
!1933 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1934 = !DILocation(line: 206, column: 10, scope: !1897)
!1935 = !DILocation(line: 208, column: 10, scope: !1897)
!1936 = !DILocation(line: 208, column: 8, scope: !1897)
!1937 = !DILocation(line: 209, column: 6, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 209, column: 6)
!1939 = !DILocation(line: 209, column: 12, scope: !1938)
!1940 = !DILocation(line: 209, column: 6, scope: !1897)
!1941 = !DILocation(line: 210, column: 3, scope: !1938)
!1942 = !DILocation(line: 211, column: 13, scope: !1897)
!1943 = !DILocation(line: 211, column: 11, scope: !1897)
!1944 = !DILocation(line: 212, column: 6, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 212, column: 6)
!1946 = !DILocation(line: 212, column: 15, scope: !1945)
!1947 = !DILocation(line: 212, column: 6, scope: !1897)
!1948 = !DILocation(line: 213, column: 3, scope: !1945)
!1949 = !DILocation(line: 215, column: 25, scope: !1897)
!1950 = !DILocation(line: 215, column: 8, scope: !1897)
!1951 = !DILocation(line: 215, column: 6, scope: !1897)
!1952 = !DILocation(line: 216, column: 6, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 216, column: 6)
!1954 = !DILocation(line: 216, column: 10, scope: !1953)
!1955 = !DILocation(line: 216, column: 6, scope: !1897)
!1956 = !DILocation(line: 217, column: 3, scope: !1953)
!1957 = !DILocation(line: 218, column: 2, scope: !1897)
!1958 = !DILocation(line: 218, column: 26, scope: !1897)
!1959 = !DILocation(line: 218, column: 36, scope: !1897)
!1960 = !DILocation(line: 218, column: 16, scope: !1897)
!1961 = !DILocation(line: 218, column: 14, scope: !1897)
!1962 = !DILocation(line: 218, column: 52, scope: !1897)
!1963 = !DILocation(line: 219, column: 30, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 219, column: 7)
!1965 = !DILocation(line: 219, column: 37, scope: !1964)
!1966 = !DILocation(line: 219, column: 7, scope: !1964)
!1967 = !DILocation(line: 219, column: 42, scope: !1964)
!1968 = !DILocation(line: 219, column: 7, scope: !1897)
!1969 = !DILocation(line: 220, column: 4, scope: !1964)
!1970 = distinct !{!1970, !1957, !1971}
!1971 = !DILocation(line: 220, column: 4, scope: !1897)
!1972 = !DILocation(line: 221, column: 13, scope: !1897)
!1973 = !DILocation(line: 221, column: 2, scope: !1897)
!1974 = !DILocation(line: 222, column: 2, scope: !1897)
!1975 = !DILocation(line: 223, column: 12, scope: !1897)
!1976 = !DILocation(line: 223, column: 2, scope: !1897)
!1977 = !DILocation(line: 224, column: 9, scope: !1897)
!1978 = !DILocation(line: 224, column: 2, scope: !1897)
!1979 = !DILocation(line: 226, column: 12, scope: !1897)
!1980 = !DILocation(line: 226, column: 2, scope: !1897)
!1981 = !DILocation(line: 227, column: 12, scope: !1897)
!1982 = !DILocation(line: 227, column: 2, scope: !1897)
!1983 = !DILocation(line: 228, column: 2, scope: !1897)
!1984 = !DILocation(line: 229, column: 1, scope: !1897)
!1985 = distinct !DISubprogram(name: "HXformat2_insuf", scope: !3, file: !3, line: 135, type: !1986, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{null, !120, !14}
!1988 = !DILocalVariable(name: "func", arg: 1, scope: !1985, file: !3, line: 135, type: !120)
!1989 = !DILocation(line: 135, column: 48, scope: !1985)
!1990 = !DILocalVariable(name: "argc", arg: 2, scope: !1985, file: !3, line: 135, type: !14)
!1991 = !DILocation(line: 135, column: 58, scope: !1985)
!1992 = !DILocation(line: 137, column: 10, scope: !1985)
!1993 = !DILocation(line: 138, column: 10, scope: !1985)
!1994 = !DILocation(line: 138, column: 16, scope: !1985)
!1995 = !DILocation(line: 137, column: 2, scope: !1985)
!1996 = !DILocation(line: 139, column: 1, scope: !1985)
!1997 = distinct !DISubprogram(name: "HXformat2_fprintf", scope: !3, file: !3, line: 553, type: !1998, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !117)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!14, !1001, !2000, !120}
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1931, line: 48, baseType: !2002)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2003, line: 241, size: 1728, elements: !2004)
!2003 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2025, !2026, !2027, !2028, !2030, !2031, !2032, !2036, !2039, !2041, !2042, !2043, !2044, !2045, !2046, !2047}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2002, file: !2003, line: 242, baseType: !14, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2002, file: !2003, line: 247, baseType: !92, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2002, file: !2003, line: 248, baseType: !92, size: 64, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2002, file: !2003, line: 249, baseType: !92, size: 64, offset: 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2002, file: !2003, line: 250, baseType: !92, size: 64, offset: 256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2002, file: !2003, line: 251, baseType: !92, size: 64, offset: 320)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2002, file: !2003, line: 252, baseType: !92, size: 64, offset: 384)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2002, file: !2003, line: 253, baseType: !92, size: 64, offset: 448)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2002, file: !2003, line: 254, baseType: !92, size: 64, offset: 512)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2002, file: !2003, line: 256, baseType: !92, size: 64, offset: 576)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2002, file: !2003, line: 257, baseType: !92, size: 64, offset: 640)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2002, file: !2003, line: 258, baseType: !92, size: 64, offset: 704)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2002, file: !2003, line: 260, baseType: !2018, size: 64, offset: 768)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2003, line: 156, size: 192, elements: !2020)
!2020 = !{!2021, !2022, !2024}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2019, file: !2003, line: 157, baseType: !2018, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2019, file: !2003, line: 158, baseType: !2023, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2019, file: !2003, line: 162, baseType: !14, size: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2002, file: !2003, line: 262, baseType: !2023, size: 64, offset: 832)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2002, file: !2003, line: 264, baseType: !14, size: 32, offset: 896)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2002, file: !2003, line: 268, baseType: !14, size: 32, offset: 928)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2002, file: !2003, line: 270, baseType: !2029, size: 64, offset: 960)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1933, line: 131, baseType: !95)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2002, file: !2003, line: 274, baseType: !94, size: 16, offset: 1024)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2002, file: !2003, line: 275, baseType: !407, size: 8, offset: 1040)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2002, file: !2003, line: 276, baseType: !2033, size: 8, offset: 1048)
!2033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 8, elements: !2034)
!2034 = !{!2035}
!2035 = !DISubrange(count: 1)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2002, file: !2003, line: 280, baseType: !2037, size: 64, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2003, line: 150, baseType: null)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2002, file: !2003, line: 289, baseType: !2040, size: 64, offset: 1152)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1933, line: 132, baseType: !95)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2002, file: !2003, line: 297, baseType: !89, size: 64, offset: 1216)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2002, file: !2003, line: 298, baseType: !89, size: 64, offset: 1280)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2002, file: !2003, line: 299, baseType: !89, size: 64, offset: 1344)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2002, file: !2003, line: 300, baseType: !89, size: 64, offset: 1408)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2002, file: !2003, line: 302, baseType: !157, size: 64, offset: 1472)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2002, file: !2003, line: 303, baseType: !14, size: 32, offset: 1536)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2002, file: !2003, line: 305, baseType: !2048, size: 160, offset: 1568)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 160, elements: !2049)
!2049 = !{!2050}
!2050 = !DISubrange(count: 20)
!2051 = !DILocalVariable(name: "ftable", arg: 1, scope: !1997, file: !3, line: 553, type: !1001)
!2052 = !DILocation(line: 553, column: 64, scope: !1997)
!2053 = !DILocalVariable(name: "filp", arg: 2, scope: !1997, file: !3, line: 554, type: !2000)
!2054 = !DILocation(line: 554, column: 11, scope: !1997)
!2055 = !DILocalVariable(name: "fmt", arg: 3, scope: !1997, file: !3, line: 554, type: !120)
!2056 = !DILocation(line: 554, column: 29, scope: !1997)
!2057 = !DILocalVariable(name: "str", scope: !1997, file: !3, line: 556, type: !97)
!2058 = !DILocation(line: 556, column: 10, scope: !1997)
!2059 = !DILocalVariable(name: "ret", scope: !1997, file: !3, line: 557, type: !14)
!2060 = !DILocation(line: 557, column: 6, scope: !1997)
!2061 = !DILocation(line: 559, column: 31, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 559, column: 6)
!2063 = !DILocation(line: 559, column: 45, scope: !2062)
!2064 = !DILocation(line: 559, column: 13, scope: !2062)
!2065 = !DILocation(line: 559, column: 11, scope: !2062)
!2066 = !DILocation(line: 559, column: 51, scope: !2062)
!2067 = !DILocation(line: 559, column: 6, scope: !1997)
!2068 = !DILocation(line: 560, column: 10, scope: !2062)
!2069 = !DILocation(line: 560, column: 3, scope: !2062)
!2070 = !DILocation(line: 561, column: 2, scope: !1997)
!2071 = !DILocation(line: 561, column: 8, scope: !1997)
!2072 = !DILocation(line: 562, column: 12, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 562, column: 6)
!2074 = !DILocation(line: 562, column: 17, scope: !2073)
!2075 = !DILocation(line: 562, column: 6, scope: !2073)
!2076 = !DILocation(line: 562, column: 23, scope: !2073)
!2077 = !DILocation(line: 562, column: 6, scope: !1997)
!2078 = !DILocation(line: 563, column: 10, scope: !2073)
!2079 = !DILocation(line: 563, column: 9, scope: !2073)
!2080 = !DILocation(line: 563, column: 7, scope: !2073)
!2081 = !DILocation(line: 563, column: 3, scope: !2073)
!2082 = !DILocation(line: 564, column: 12, scope: !1997)
!2083 = !DILocation(line: 564, column: 2, scope: !1997)
!2084 = !DILocation(line: 565, column: 9, scope: !1997)
!2085 = !DILocation(line: 565, column: 2, scope: !1997)
!2086 = !DILocation(line: 566, column: 1, scope: !1997)
!2087 = distinct !DISubprogram(name: "HXformat2_sprintf", scope: !3, file: !3, line: 568, type: !2088, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !117)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!14, !1001, !92, !157, !120}
!2090 = !DILocalVariable(name: "ftable", arg: 1, scope: !2087, file: !3, line: 568, type: !1001)
!2091 = !DILocation(line: 568, column: 64, scope: !2087)
!2092 = !DILocalVariable(name: "dest", arg: 2, scope: !2087, file: !3, line: 569, type: !92)
!2093 = !DILocation(line: 569, column: 11, scope: !2087)
!2094 = !DILocalVariable(name: "size", arg: 3, scope: !2087, file: !3, line: 569, type: !157)
!2095 = !DILocation(line: 569, column: 24, scope: !2087)
!2096 = !DILocalVariable(name: "fmt", arg: 4, scope: !2087, file: !3, line: 569, type: !120)
!2097 = !DILocation(line: 569, column: 42, scope: !2087)
!2098 = !DILocalVariable(name: "str", scope: !2087, file: !3, line: 571, type: !97)
!2099 = !DILocation(line: 571, column: 10, scope: !2087)
!2100 = !DILocalVariable(name: "ret", scope: !2087, file: !3, line: 572, type: !14)
!2101 = !DILocation(line: 572, column: 6, scope: !2087)
!2102 = !DILocation(line: 574, column: 31, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 574, column: 6)
!2104 = !DILocation(line: 574, column: 45, scope: !2103)
!2105 = !DILocation(line: 574, column: 13, scope: !2103)
!2106 = !DILocation(line: 574, column: 11, scope: !2103)
!2107 = !DILocation(line: 574, column: 51, scope: !2103)
!2108 = !DILocation(line: 574, column: 6, scope: !2087)
!2109 = !DILocation(line: 575, column: 10, scope: !2103)
!2110 = !DILocation(line: 575, column: 3, scope: !2103)
!2111 = !DILocation(line: 576, column: 6, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 576, column: 6)
!2113 = !DILocation(line: 576, column: 10, scope: !2112)
!2114 = !DILocation(line: 576, column: 6, scope: !2087)
!2115 = !DILocation(line: 577, column: 4, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2112, file: !3, line: 576, column: 16)
!2117 = !DILocation(line: 577, column: 9, scope: !2116)
!2118 = !DILocation(line: 578, column: 3, scope: !2116)
!2119 = !DILocation(line: 580, column: 10, scope: !2087)
!2120 = !DILocation(line: 580, column: 16, scope: !2087)
!2121 = !DILocation(line: 580, column: 21, scope: !2087)
!2122 = !DILocation(line: 580, column: 2, scope: !2087)
!2123 = !DILocation(line: 581, column: 12, scope: !2087)
!2124 = !DILocation(line: 581, column: 2, scope: !2087)
!2125 = !DILocation(line: 582, column: 16, scope: !2087)
!2126 = !DILocation(line: 582, column: 9, scope: !2087)
!2127 = !DILocation(line: 582, column: 2, scope: !2087)
!2128 = !DILocation(line: 583, column: 1, scope: !2087)
!2129 = distinct !DISubprogram(name: "HXdir_open", scope: !330, file: !330, line: 72, type: !915, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2130 = !DILocalVariable(name: "s", arg: 1, scope: !2129, file: !330, line: 72, type: !120)
!2131 = !DILocation(line: 72, column: 44, scope: !2129)
!2132 = !DILocalVariable(name: "d", scope: !2129, file: !330, line: 74, type: !2133)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdir", file: !330, line: 32, size: 2304, elements: !2135)
!2135 = !{!2136, !2141}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2134, file: !330, line: 39, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !2139, line: 127, baseType: !2140)
!2139 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!2140 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !2139, line: 127, flags: DIFlagFwdDecl)
!2141 = !DIDerivedType(tag: DW_TAG_member, scope: !2134, file: !330, line: 43, baseType: !2142, size: 2240, offset: 64)
!2142 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2134, file: !330, line: 43, size: 2240, elements: !2143)
!2143 = !{!2144, !2157}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !2142, file: !330, line: 44, baseType: !2145, size: 2240)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !2146, line: 22, size: 2240, elements: !2147)
!2146 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!2147 = !{!2148, !2150, !2151, !2152, !2153}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !2145, file: !2146, line: 28, baseType: !2149, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1933, line: 128, baseType: !159)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !2145, file: !2146, line: 29, baseType: !2040, size: 64, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !2145, file: !2146, line: 31, baseType: !94, size: 16, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !2145, file: !2146, line: 32, baseType: !231, size: 8, offset: 144)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !2145, file: !2146, line: 33, baseType: !2154, size: 2048, offset: 152)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 2048, elements: !2155)
!2155 = !{!2156}
!2156 = !DISubrange(count: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "extender", scope: !2142, file: !330, line: 45, baseType: !2158, size: 2240)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 2240, elements: !2159)
!2159 = !{!2160}
!2160 = !DISubrange(count: 280)
!2161 = !DILocation(line: 74, column: 16, scope: !2129)
!2162 = !DILocation(line: 75, column: 11, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2129, file: !330, line: 75, column: 6)
!2164 = !DILocation(line: 75, column: 9, scope: !2163)
!2165 = !DILocation(line: 75, column: 41, scope: !2163)
!2166 = !DILocation(line: 75, column: 6, scope: !2129)
!2167 = !DILocation(line: 76, column: 3, scope: !2163)
!2168 = !DILocation(line: 85, column: 24, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2129, file: !330, line: 85, column: 6)
!2170 = !DILocation(line: 85, column: 16, scope: !2169)
!2171 = !DILocation(line: 85, column: 7, scope: !2169)
!2172 = !DILocation(line: 85, column: 10, scope: !2169)
!2173 = !DILocation(line: 85, column: 14, scope: !2169)
!2174 = !DILocation(line: 85, column: 28, scope: !2169)
!2175 = !DILocation(line: 85, column: 6, scope: !2129)
!2176 = !DILocation(line: 86, column: 3, scope: !2169)
!2177 = !DILocation(line: 89, column: 9, scope: !2129)
!2178 = !DILocation(line: 89, column: 2, scope: !2129)
!2179 = !DILocation(line: 91, column: 7, scope: !2129)
!2180 = !DILocation(line: 91, column: 2, scope: !2129)
!2181 = !DILocation(line: 92, column: 2, scope: !2129)
!2182 = !DILocation(line: 93, column: 1, scope: !2129)
!2183 = distinct !DISubprogram(name: "HXdir_read", scope: !330, file: !330, line: 95, type: !2184, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!120, !89}
!2186 = !DILocalVariable(name: "dv", arg: 1, scope: !2183, file: !330, line: 95, type: !89)
!2187 = !DILocation(line: 95, column: 44, scope: !2183)
!2188 = !DILocalVariable(name: "d", scope: !2183, file: !330, line: 97, type: !2133)
!2189 = !DILocation(line: 97, column: 16, scope: !2183)
!2190 = !DILocation(line: 97, column: 20, scope: !2183)
!2191 = !DILocation(line: 98, column: 6, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2183, file: !330, line: 98, column: 6)
!2193 = !DILocation(line: 98, column: 8, scope: !2192)
!2194 = !DILocation(line: 98, column: 6, scope: !2183)
!2195 = !DILocation(line: 99, column: 3, scope: !2192)
!2196 = !DILocation(line: 101, column: 2, scope: !2183)
!2197 = !DILocation(line: 101, column: 8, scope: !2183)
!2198 = !DILocalVariable(name: "checkptr", scope: !2199, file: !330, line: 113, type: !2200)
!2199 = distinct !DILexicalBlock(scope: !2183, file: !330, line: 112, column: 2)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2201 = !DILocation(line: 113, column: 18, scope: !2199)
!2202 = !DILocalVariable(name: "i", scope: !2199, file: !330, line: 114, type: !14)
!2203 = !DILocation(line: 114, column: 7, scope: !2199)
!2204 = !DILocation(line: 114, column: 21, scope: !2199)
!2205 = !DILocation(line: 114, column: 24, scope: !2199)
!2206 = !DILocation(line: 114, column: 30, scope: !2199)
!2207 = !DILocation(line: 114, column: 33, scope: !2199)
!2208 = !DILocation(line: 114, column: 11, scope: !2199)
!2209 = !DILocation(line: 115, column: 7, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2199, file: !330, line: 115, column: 7)
!2211 = !DILocation(line: 115, column: 16, scope: !2210)
!2212 = !DILocation(line: 115, column: 24, scope: !2210)
!2213 = !DILocation(line: 115, column: 27, scope: !2210)
!2214 = !DILocation(line: 115, column: 29, scope: !2210)
!2215 = !DILocation(line: 115, column: 7, scope: !2199)
!2216 = !DILocation(line: 116, column: 4, scope: !2210)
!2217 = !DILocation(line: 118, column: 9, scope: !2183)
!2218 = !DILocation(line: 118, column: 12, scope: !2183)
!2219 = !DILocation(line: 118, column: 19, scope: !2183)
!2220 = !DILocation(line: 118, column: 2, scope: !2183)
!2221 = !DILocation(line: 120, column: 1, scope: !2183)
!2222 = distinct !DISubprogram(name: "HXdir_close", scope: !330, file: !330, line: 122, type: !166, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2223 = !DILocalVariable(name: "dv", arg: 1, scope: !2222, file: !330, line: 122, type: !89)
!2224 = !DILocation(line: 122, column: 38, scope: !2222)
!2225 = !DILocalVariable(name: "d", scope: !2222, file: !330, line: 124, type: !2133)
!2226 = !DILocation(line: 124, column: 16, scope: !2222)
!2227 = !DILocation(line: 124, column: 20, scope: !2222)
!2228 = !DILocation(line: 125, column: 6, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2222, file: !330, line: 125, column: 6)
!2230 = !DILocation(line: 125, column: 9, scope: !2229)
!2231 = !DILocation(line: 125, column: 6, scope: !2222)
!2232 = !DILocation(line: 126, column: 3, scope: !2229)
!2233 = !DILocation(line: 131, column: 11, scope: !2222)
!2234 = !DILocation(line: 131, column: 14, scope: !2222)
!2235 = !DILocation(line: 131, column: 2, scope: !2222)
!2236 = !DILocation(line: 133, column: 7, scope: !2222)
!2237 = !DILocation(line: 133, column: 2, scope: !2222)
!2238 = !DILocation(line: 134, column: 1, scope: !2222)
!2239 = distinct !DISubprogram(name: "HX_copy_file", scope: !330, file: !330, line: 136, type: !2240, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!14, !120, !120, !7, null}
!2242 = !DILocalVariable(name: "src", arg: 1, scope: !2239, file: !330, line: 136, type: !120)
!2243 = !DILocation(line: 136, column: 44, scope: !2239)
!2244 = !DILocalVariable(name: "dest", arg: 2, scope: !2239, file: !330, line: 136, type: !120)
!2245 = !DILocation(line: 136, column: 61, scope: !2239)
!2246 = !DILocalVariable(name: "opts", arg: 3, scope: !2239, file: !330, line: 137, type: !7)
!2247 = !DILocation(line: 137, column: 18, scope: !2239)
!2248 = !DILocalVariable(name: "buf", scope: !2239, file: !330, line: 139, type: !2249)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 8192, elements: !2250)
!2250 = !{!2251}
!2251 = !DISubrange(count: 1024)
!2252 = !DILocation(line: 139, column: 7, scope: !2239)
!2253 = !DILocalVariable(name: "extra_flags", scope: !2239, file: !330, line: 140, type: !7)
!2254 = !DILocation(line: 140, column: 15, scope: !2239)
!2255 = !DILocalVariable(name: "dd", scope: !2239, file: !330, line: 141, type: !14)
!2256 = !DILocation(line: 141, column: 6, scope: !2239)
!2257 = !DILocalVariable(name: "eax", scope: !2239, file: !330, line: 141, type: !14)
!2258 = !DILocation(line: 141, column: 10, scope: !2239)
!2259 = !DILocalVariable(name: "sd", scope: !2239, file: !330, line: 141, type: !14)
!2260 = !DILocation(line: 141, column: 19, scope: !2239)
!2261 = !DILocalVariable(name: "l", scope: !2239, file: !330, line: 141, type: !14)
!2262 = !DILocation(line: 141, column: 23, scope: !2239)
!2263 = !DILocalVariable(name: "throw_away", scope: !2239, file: !330, line: 142, type: !14)
!2264 = !DILocation(line: 142, column: 6, scope: !2239)
!2265 = !DILocation(line: 144, column: 17, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2239, file: !330, line: 144, column: 6)
!2267 = !DILocation(line: 144, column: 12, scope: !2266)
!2268 = !DILocation(line: 144, column: 10, scope: !2266)
!2269 = !DILocation(line: 144, column: 44, scope: !2266)
!2270 = !DILocation(line: 144, column: 6, scope: !2239)
!2271 = !DILocation(line: 145, column: 11, scope: !2266)
!2272 = !DILocation(line: 145, column: 10, scope: !2266)
!2273 = !DILocation(line: 145, column: 3, scope: !2266)
!2274 = !DILocation(line: 146, column: 6, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2239, file: !330, line: 146, column: 6)
!2276 = !DILocation(line: 146, column: 11, scope: !2275)
!2277 = !DILocation(line: 146, column: 6, scope: !2239)
!2278 = !DILocation(line: 147, column: 15, scope: !2275)
!2279 = !DILocation(line: 147, column: 3, scope: !2275)
!2280 = !DILocation(line: 148, column: 12, scope: !2239)
!2281 = !DILocation(line: 149, column: 7, scope: !2239)
!2282 = !DILocation(line: 148, column: 58, scope: !2239)
!2283 = !DILocation(line: 148, column: 7, scope: !2239)
!2284 = !DILocation(line: 148, column: 5, scope: !2239)
!2285 = !DILocation(line: 150, column: 6, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2239, file: !330, line: 150, column: 6)
!2287 = !DILocation(line: 150, column: 9, scope: !2286)
!2288 = !DILocation(line: 150, column: 6, scope: !2239)
!2289 = !DILocation(line: 151, column: 9, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2286, file: !330, line: 150, column: 14)
!2291 = !DILocation(line: 151, column: 7, scope: !2290)
!2292 = !DILocation(line: 152, column: 9, scope: !2290)
!2293 = !DILocation(line: 152, column: 3, scope: !2290)
!2294 = !DILocation(line: 153, column: 11, scope: !2290)
!2295 = !DILocation(line: 153, column: 3, scope: !2290)
!2296 = !DILocation(line: 153, column: 9, scope: !2290)
!2297 = !DILocation(line: 154, column: 7, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2290, file: !330, line: 154, column: 7)
!2299 = !DILocation(line: 154, column: 19, scope: !2298)
!2300 = !DILocation(line: 154, column: 24, scope: !2298)
!2301 = !DILocation(line: 154, column: 27, scope: !2298)
!2302 = !DILocation(line: 154, column: 31, scope: !2298)
!2303 = !DILocation(line: 154, column: 7, scope: !2290)
!2304 = !DILocation(line: 155, column: 4, scope: !2298)
!2305 = !DILocation(line: 156, column: 11, scope: !2290)
!2306 = !DILocation(line: 156, column: 10, scope: !2290)
!2307 = !DILocation(line: 156, column: 3, scope: !2290)
!2308 = !DILocation(line: 159, column: 2, scope: !2239)
!2309 = !DILocation(line: 159, column: 19, scope: !2239)
!2310 = !DILocation(line: 159, column: 23, scope: !2239)
!2311 = !DILocation(line: 159, column: 14, scope: !2239)
!2312 = !DILocation(line: 159, column: 12, scope: !2239)
!2313 = !DILocation(line: 159, column: 39, scope: !2239)
!2314 = !DILocation(line: 159, column: 43, scope: !2239)
!2315 = !DILocation(line: 159, column: 52, scope: !2239)
!2316 = !DILocation(line: 159, column: 56, scope: !2239)
!2317 = !DILocation(line: 159, column: 61, scope: !2239)
!2318 = !DILocation(line: 159, column: 46, scope: !2239)
!2319 = !DILocation(line: 159, column: 64, scope: !2239)
!2320 = !DILocation(line: 0, scope: !2239)
!2321 = distinct !{!2321, !2308, !2322}
!2322 = !DILocation(line: 160, column: 3, scope: !2239)
!2323 = !DILocation(line: 161, column: 8, scope: !2239)
!2324 = !DILocation(line: 161, column: 2, scope: !2239)
!2325 = !DILocation(line: 163, column: 6, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2239, file: !330, line: 163, column: 6)
!2327 = !DILocation(line: 163, column: 11, scope: !2326)
!2328 = !DILocation(line: 163, column: 6, scope: !2239)
!2329 = !DILocalVariable(name: "sb", scope: !2330, file: !330, line: 164, type: !2331)
!2330 = distinct !DILexicalBlock(scope: !2326, file: !330, line: 163, column: 34)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2332, line: 46, size: 1152, elements: !2333)
!2332 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2333 = !{!2334, !2336, !2338, !2340, !2342, !2344, !2346, !2347, !2348, !2349, !2351, !2353, !2361, !2362, !2363}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2331, file: !2332, line: 48, baseType: !2335, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1933, line: 124, baseType: !159)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2331, file: !2332, line: 53, baseType: !2337, size: 64, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1933, line: 127, baseType: !159)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2331, file: !2332, line: 61, baseType: !2339, size: 64, offset: 128)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1933, line: 130, baseType: !159)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2331, file: !2332, line: 62, baseType: !2341, size: 32, offset: 192)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1933, line: 129, baseType: !7)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2331, file: !2332, line: 64, baseType: !2343, size: 32, offset: 224)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1933, line: 125, baseType: !7)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2331, file: !2332, line: 65, baseType: !2345, size: 32, offset: 256)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1933, line: 126, baseType: !7)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2331, file: !2332, line: 67, baseType: !14, size: 32, offset: 288)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2331, file: !2332, line: 69, baseType: !2335, size: 64, offset: 320)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2331, file: !2332, line: 74, baseType: !2029, size: 64, offset: 384)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2331, file: !2332, line: 78, baseType: !2350, size: 64, offset: 448)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1933, line: 153, baseType: !95)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2331, file: !2332, line: 80, baseType: !2352, size: 64, offset: 512)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1933, line: 158, baseType: !95)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2331, file: !2332, line: 91, baseType: !2354, size: 128, offset: 576)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2355, line: 120, size: 128, elements: !2356)
!2355 = !DIFile(filename: "/usr/include/time.h", directory: "")
!2356 = !{!2357, !2359}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2354, file: !2355, line: 122, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1933, line: 139, baseType: !95)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2354, file: !2355, line: 123, baseType: !2360, size: 64, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1933, line: 175, baseType: !95)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2331, file: !2332, line: 92, baseType: !2354, size: 128, offset: 704)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2331, file: !2332, line: 93, baseType: !2354, size: 128, offset: 832)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2331, file: !2332, line: 106, baseType: !2364, size: 192, offset: 960)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2360, size: 192, elements: !2365)
!2365 = !{!2366}
!2366 = !DISubrange(count: 3)
!2367 = !DILocation(line: 164, column: 15, scope: !2330)
!2368 = !DILocalVariable(name: "uid", scope: !2330, file: !330, line: 165, type: !95)
!2369 = !DILocation(line: 165, column: 8, scope: !2330)
!2370 = !DILocalVariable(name: "gid", scope: !2330, file: !330, line: 165, type: !95)
!2371 = !DILocation(line: 165, column: 13, scope: !2330)
!2372 = !DILocalVariable(name: "argp", scope: !2330, file: !330, line: 166, type: !2373)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1931, line: 79, baseType: !2374)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2375, line: 48, baseType: !2376)
!2375 = !DIFile(filename: "llvm80/build/lib/clang/8.0.1/include/stdarg.h", directory: "/root/llvm")
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !330, line: 166, baseType: !2377)
!2377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 192, elements: !2034)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !330, line: 166, size: 192, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2378, file: !330, line: 166, baseType: !7, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2378, file: !330, line: 166, baseType: !7, size: 32, offset: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2378, file: !330, line: 166, baseType: !89, size: 64, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2378, file: !330, line: 166, baseType: !89, size: 64, offset: 128)
!2384 = !DILocation(line: 166, column: 11, scope: !2330)
!2385 = !DILocation(line: 167, column: 3, scope: !2330)
!2386 = !DILocation(line: 169, column: 9, scope: !2330)
!2387 = !DILocation(line: 169, column: 3, scope: !2330)
!2388 = !DILocation(line: 170, column: 12, scope: !2330)
!2389 = !DILocation(line: 170, column: 9, scope: !2330)
!2390 = !DILocation(line: 170, column: 7, scope: !2330)
!2391 = !DILocation(line: 171, column: 12, scope: !2330)
!2392 = !DILocation(line: 171, column: 9, scope: !2330)
!2393 = !DILocation(line: 171, column: 7, scope: !2330)
!2394 = !DILocation(line: 173, column: 7, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2330, file: !330, line: 173, column: 7)
!2396 = !DILocation(line: 173, column: 12, scope: !2395)
!2397 = !DILocation(line: 173, column: 7, scope: !2330)
!2398 = !DILocation(line: 173, column: 29, scope: !2395)
!2399 = !DILocation(line: 173, column: 27, scope: !2395)
!2400 = !DILocation(line: 173, column: 23, scope: !2395)
!2401 = !DILocation(line: 174, column: 7, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2330, file: !330, line: 174, column: 7)
!2403 = !DILocation(line: 174, column: 12, scope: !2402)
!2404 = !DILocation(line: 174, column: 7, scope: !2330)
!2405 = !DILocation(line: 174, column: 29, scope: !2402)
!2406 = !DILocation(line: 174, column: 27, scope: !2402)
!2407 = !DILocation(line: 174, column: 23, scope: !2402)
!2408 = !DILocation(line: 175, column: 23, scope: !2330)
!2409 = !DILocation(line: 175, column: 27, scope: !2330)
!2410 = !DILocation(line: 175, column: 32, scope: !2330)
!2411 = !DILocation(line: 175, column: 16, scope: !2330)
!2412 = !DILocation(line: 175, column: 14, scope: !2330)
!2413 = !DILocation(line: 176, column: 3, scope: !2330)
!2414 = !DILocation(line: 177, column: 2, scope: !2330)
!2415 = !DILocation(line: 178, column: 8, scope: !2239)
!2416 = !DILocation(line: 178, column: 2, scope: !2239)
!2417 = !DILocation(line: 179, column: 2, scope: !2239)
!2418 = !DILocation(line: 180, column: 1, scope: !2239)
!2419 = distinct !DISubprogram(name: "HX_copy_dir", scope: !330, file: !330, line: 182, type: !2240, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2420 = !DILocalVariable(name: "src", arg: 1, scope: !2419, file: !330, line: 182, type: !120)
!2421 = !DILocation(line: 182, column: 43, scope: !2419)
!2422 = !DILocalVariable(name: "dest", arg: 2, scope: !2419, file: !330, line: 182, type: !120)
!2423 = !DILocation(line: 182, column: 60, scope: !2419)
!2424 = !DILocalVariable(name: "opts", arg: 3, scope: !2419, file: !330, line: 183, type: !7)
!2425 = !DILocation(line: 183, column: 18, scope: !2419)
!2426 = !DILocalVariable(name: "dt", scope: !2419, file: !330, line: 185, type: !89)
!2427 = !DILocation(line: 185, column: 8, scope: !2419)
!2428 = !DILocation(line: 185, column: 24, scope: !2419)
!2429 = !DILocation(line: 185, column: 13, scope: !2419)
!2430 = !DILocalVariable(name: "uid", scope: !2419, file: !330, line: 186, type: !95)
!2431 = !DILocation(line: 186, column: 7, scope: !2419)
!2432 = !DILocalVariable(name: "gid", scope: !2419, file: !330, line: 186, type: !95)
!2433 = !DILocation(line: 186, column: 17, scope: !2419)
!2434 = !DILocalVariable(name: "fn", scope: !2419, file: !330, line: 187, type: !120)
!2435 = !DILocation(line: 187, column: 14, scope: !2419)
!2436 = !DILocalVariable(name: "throw_away", scope: !2419, file: !330, line: 188, type: !14)
!2437 = !DILocation(line: 188, column: 6, scope: !2419)
!2438 = !DILocation(line: 190, column: 6, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2419, file: !330, line: 190, column: 6)
!2440 = !DILocation(line: 190, column: 9, scope: !2439)
!2441 = !DILocation(line: 190, column: 6, scope: !2419)
!2442 = !DILocation(line: 191, column: 3, scope: !2439)
!2443 = !DILocalVariable(name: "argp", scope: !2444, file: !330, line: 194, type: !2373)
!2444 = distinct !DILexicalBlock(scope: !2419, file: !330, line: 193, column: 2)
!2445 = !DILocation(line: 194, column: 11, scope: !2444)
!2446 = !DILocation(line: 195, column: 3, scope: !2444)
!2447 = !DILocation(line: 196, column: 7, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !330, line: 196, column: 7)
!2449 = !DILocation(line: 196, column: 12, scope: !2448)
!2450 = !DILocation(line: 196, column: 7, scope: !2444)
!2451 = !DILocation(line: 196, column: 29, scope: !2448)
!2452 = !DILocation(line: 196, column: 27, scope: !2448)
!2453 = !DILocation(line: 196, column: 23, scope: !2448)
!2454 = !DILocation(line: 197, column: 7, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2444, file: !330, line: 197, column: 7)
!2456 = !DILocation(line: 197, column: 12, scope: !2455)
!2457 = !DILocation(line: 197, column: 7, scope: !2444)
!2458 = !DILocation(line: 197, column: 29, scope: !2455)
!2459 = !DILocation(line: 197, column: 27, scope: !2455)
!2460 = !DILocation(line: 197, column: 23, scope: !2455)
!2461 = !DILocation(line: 198, column: 3, scope: !2444)
!2462 = !DILocation(line: 201, column: 2, scope: !2419)
!2463 = !DILocation(line: 201, column: 26, scope: !2419)
!2464 = !DILocation(line: 201, column: 15, scope: !2419)
!2465 = !DILocation(line: 201, column: 13, scope: !2419)
!2466 = !DILocation(line: 201, column: 31, scope: !2419)
!2467 = !DILocalVariable(name: "fsrc", scope: !2468, file: !330, line: 202, type: !2154)
!2468 = distinct !DILexicalBlock(scope: !2419, file: !330, line: 201, column: 40)
!2469 = !DILocation(line: 202, column: 8, scope: !2468)
!2470 = !DILocalVariable(name: "fdest", scope: !2468, file: !330, line: 202, type: !2154)
!2471 = !DILocation(line: 202, column: 24, scope: !2468)
!2472 = !DILocalVariable(name: "sb", scope: !2468, file: !330, line: 203, type: !2331)
!2473 = !DILocation(line: 203, column: 15, scope: !2468)
!2474 = !DILocation(line: 205, column: 14, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2468, file: !330, line: 205, column: 7)
!2476 = !DILocation(line: 205, column: 7, scope: !2475)
!2477 = !DILocation(line: 205, column: 23, scope: !2475)
!2478 = !DILocation(line: 205, column: 28, scope: !2475)
!2479 = !DILocation(line: 205, column: 38, scope: !2475)
!2480 = !DILocation(line: 205, column: 31, scope: !2475)
!2481 = !DILocation(line: 205, column: 48, scope: !2475)
!2482 = !DILocation(line: 205, column: 7, scope: !2468)
!2483 = !DILocation(line: 206, column: 4, scope: !2475)
!2484 = distinct !{!2484, !2462, !2485}
!2485 = !DILocation(line: 232, column: 2, scope: !2419)
!2486 = !DILocation(line: 207, column: 12, scope: !2468)
!2487 = !DILocation(line: 207, column: 38, scope: !2468)
!2488 = !DILocation(line: 207, column: 44, scope: !2468)
!2489 = !DILocation(line: 207, column: 3, scope: !2468)
!2490 = !DILocation(line: 208, column: 12, scope: !2468)
!2491 = !DILocation(line: 208, column: 38, scope: !2468)
!2492 = !DILocation(line: 208, column: 44, scope: !2468)
!2493 = !DILocation(line: 208, column: 3, scope: !2468)
!2494 = !DILocation(line: 210, column: 9, scope: !2468)
!2495 = !DILocation(line: 210, column: 3, scope: !2468)
!2496 = !DILocation(line: 211, column: 6, scope: !2468)
!2497 = !DILocation(line: 211, column: 14, scope: !2468)
!2498 = !DILocation(line: 213, column: 7, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2468, file: !330, line: 213, column: 7)
!2500 = !DILocation(line: 213, column: 7, scope: !2468)
!2501 = !DILocation(line: 214, column: 17, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2499, file: !330, line: 213, column: 28)
!2503 = !DILocation(line: 214, column: 23, scope: !2502)
!2504 = !DILocation(line: 214, column: 30, scope: !2502)
!2505 = !DILocation(line: 214, column: 36, scope: !2502)
!2506 = !DILocation(line: 214, column: 41, scope: !2502)
!2507 = !DILocation(line: 214, column: 4, scope: !2502)
!2508 = !DILocation(line: 215, column: 3, scope: !2502)
!2509 = !DILocation(line: 215, column: 14, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2499, file: !330, line: 215, column: 14)
!2511 = !DILocation(line: 215, column: 14, scope: !2499)
!2512 = !DILocation(line: 216, column: 13, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2510, file: !330, line: 215, column: 35)
!2514 = !DILocation(line: 216, column: 4, scope: !2513)
!2515 = !DILocation(line: 217, column: 16, scope: !2513)
!2516 = !DILocation(line: 217, column: 22, scope: !2513)
!2517 = !DILocation(line: 217, column: 29, scope: !2513)
!2518 = !DILocation(line: 217, column: 35, scope: !2513)
!2519 = !DILocation(line: 217, column: 40, scope: !2513)
!2520 = !DILocation(line: 217, column: 4, scope: !2513)
!2521 = !DILocation(line: 218, column: 3, scope: !2513)
!2522 = !DILocation(line: 218, column: 14, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2510, file: !330, line: 218, column: 14)
!2524 = !DILocation(line: 218, column: 14, scope: !2510)
!2525 = !DILocalVariable(name: "pt", scope: !2526, file: !330, line: 219, type: !2154)
!2526 = distinct !DILexicalBlock(scope: !2523, file: !330, line: 218, column: 35)
!2527 = !DILocation(line: 219, column: 9, scope: !2526)
!2528 = !DILocation(line: 220, column: 4, scope: !2526)
!2529 = !DILocation(line: 221, column: 17, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2526, file: !330, line: 221, column: 8)
!2531 = !DILocation(line: 221, column: 23, scope: !2530)
!2532 = !DILocation(line: 221, column: 8, scope: !2530)
!2533 = !DILocation(line: 221, column: 41, scope: !2530)
!2534 = !DILocation(line: 221, column: 8, scope: !2526)
!2535 = !DILocation(line: 222, column: 26, scope: !2530)
!2536 = !DILocation(line: 222, column: 30, scope: !2530)
!2537 = !DILocation(line: 222, column: 18, scope: !2530)
!2538 = !DILocation(line: 222, column: 16, scope: !2530)
!2539 = !DILocation(line: 222, column: 5, scope: !2530)
!2540 = !DILocation(line: 223, column: 3, scope: !2526)
!2541 = !DILocation(line: 223, column: 14, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2523, file: !330, line: 223, column: 14)
!2543 = !DILocation(line: 223, column: 34, scope: !2542)
!2544 = !DILocation(line: 223, column: 37, scope: !2542)
!2545 = !DILocation(line: 223, column: 14, scope: !2523)
!2546 = !DILocation(line: 224, column: 10, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2542, file: !330, line: 223, column: 58)
!2548 = !DILocation(line: 224, column: 20, scope: !2547)
!2549 = !DILocation(line: 224, column: 32, scope: !2547)
!2550 = !DILocation(line: 224, column: 4, scope: !2547)
!2551 = !DILocation(line: 225, column: 3, scope: !2547)
!2552 = !DILocation(line: 225, column: 14, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2542, file: !330, line: 225, column: 14)
!2554 = !DILocation(line: 225, column: 14, scope: !2542)
!2555 = !DILocation(line: 226, column: 11, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2553, file: !330, line: 225, column: 36)
!2557 = !DILocation(line: 226, column: 21, scope: !2556)
!2558 = !DILocation(line: 226, column: 4, scope: !2556)
!2559 = !DILocation(line: 227, column: 3, scope: !2556)
!2560 = !DILocation(line: 229, column: 23, scope: !2468)
!2561 = !DILocation(line: 229, column: 30, scope: !2468)
!2562 = !DILocation(line: 229, column: 35, scope: !2468)
!2563 = !DILocation(line: 229, column: 16, scope: !2468)
!2564 = !DILocation(line: 229, column: 14, scope: !2468)
!2565 = !DILocation(line: 230, column: 8, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2468, file: !330, line: 230, column: 7)
!2567 = !DILocation(line: 230, column: 7, scope: !2468)
!2568 = !DILocation(line: 231, column: 10, scope: !2566)
!2569 = !DILocation(line: 231, column: 20, scope: !2566)
!2570 = !DILocation(line: 231, column: 4, scope: !2566)
!2571 = !DILocation(line: 234, column: 14, scope: !2419)
!2572 = !DILocation(line: 234, column: 2, scope: !2419)
!2573 = !DILocation(line: 235, column: 2, scope: !2419)
!2574 = !DILocation(line: 236, column: 1, scope: !2419)
!2575 = distinct !DISubprogram(name: "HX_mkdir", scope: !330, file: !330, line: 238, type: !2576, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!14, !120}
!2578 = !DILocalVariable(name: "idir", arg: 1, scope: !2575, file: !330, line: 238, type: !120)
!2579 = !DILocation(line: 238, column: 40, scope: !2575)
!2580 = !DILocalVariable(name: "i", scope: !2575, file: !330, line: 240, type: !14)
!2581 = !DILocation(line: 240, column: 6, scope: !2575)
!2582 = !DILocalVariable(name: "len", scope: !2575, file: !330, line: 240, type: !14)
!2583 = !DILocation(line: 240, column: 13, scope: !2575)
!2584 = !DILocation(line: 240, column: 26, scope: !2575)
!2585 = !DILocation(line: 240, column: 19, scope: !2575)
!2586 = !DILocalVariable(name: "buf", scope: !2575, file: !330, line: 241, type: !2154)
!2587 = !DILocation(line: 241, column: 7, scope: !2575)
!2588 = !DILocalVariable(name: "dir", scope: !2575, file: !330, line: 241, type: !2154)
!2589 = !DILocation(line: 241, column: 22, scope: !2575)
!2590 = !DILocation(line: 254, column: 13, scope: !2575)
!2591 = !DILocation(line: 254, column: 18, scope: !2575)
!2592 = !DILocation(line: 254, column: 2, scope: !2575)
!2593 = !DILocation(line: 257, column: 10, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2575, file: !330, line: 257, column: 6)
!2595 = !DILocation(line: 257, column: 6, scope: !2594)
!2596 = !DILocation(line: 257, column: 13, scope: !2594)
!2597 = !DILocation(line: 257, column: 6, scope: !2575)
!2598 = !DILocation(line: 258, column: 3, scope: !2594)
!2599 = !DILocation(line: 259, column: 2, scope: !2575)
!2600 = !DILocation(line: 259, column: 9, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2602, file: !330, line: 259, column: 2)
!2602 = distinct !DILexicalBlock(scope: !2575, file: !330, line: 259, column: 2)
!2603 = !DILocation(line: 259, column: 13, scope: !2601)
!2604 = !DILocation(line: 259, column: 11, scope: !2601)
!2605 = !DILocation(line: 259, column: 2, scope: !2602)
!2606 = !DILocalVariable(name: "v", scope: !2607, file: !330, line: 260, type: !14)
!2607 = distinct !DILexicalBlock(scope: !2601, file: !330, line: 259, column: 23)
!2608 = !DILocation(line: 260, column: 7, scope: !2607)
!2609 = !DILocation(line: 261, column: 11, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2607, file: !330, line: 261, column: 7)
!2611 = !DILocation(line: 261, column: 7, scope: !2610)
!2612 = !DILocation(line: 261, column: 14, scope: !2610)
!2613 = !DILocation(line: 261, column: 7, scope: !2607)
!2614 = !DILocation(line: 262, column: 12, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2610, file: !330, line: 261, column: 22)
!2616 = !DILocation(line: 262, column: 17, scope: !2615)
!2617 = !DILocation(line: 262, column: 22, scope: !2615)
!2618 = !DILocation(line: 262, column: 4, scope: !2615)
!2619 = !DILocation(line: 263, column: 8, scope: !2615)
!2620 = !DILocation(line: 263, column: 4, scope: !2615)
!2621 = !DILocation(line: 263, column: 11, scope: !2615)
!2622 = !DILocation(line: 264, column: 23, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2615, file: !330, line: 264, column: 8)
!2624 = !DILocation(line: 264, column: 13, scope: !2623)
!2625 = !DILocation(line: 264, column: 11, scope: !2623)
!2626 = !DILocation(line: 264, column: 29, scope: !2623)
!2627 = !DILocation(line: 264, column: 8, scope: !2615)
!2628 = !DILocation(line: 265, column: 12, scope: !2623)
!2629 = !DILocation(line: 265, column: 5, scope: !2623)
!2630 = !DILocation(line: 266, column: 3, scope: !2615)
!2631 = !DILocation(line: 266, column: 14, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2610, file: !330, line: 266, column: 14)
!2633 = !DILocation(line: 266, column: 19, scope: !2632)
!2634 = !DILocation(line: 266, column: 23, scope: !2632)
!2635 = !DILocation(line: 266, column: 16, scope: !2632)
!2636 = !DILocation(line: 266, column: 14, scope: !2610)
!2637 = !DILocation(line: 267, column: 12, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2632, file: !330, line: 266, column: 28)
!2639 = !DILocation(line: 267, column: 17, scope: !2638)
!2640 = !DILocation(line: 267, column: 22, scope: !2638)
!2641 = !DILocation(line: 267, column: 4, scope: !2638)
!2642 = !DILocation(line: 268, column: 8, scope: !2638)
!2643 = !DILocation(line: 268, column: 4, scope: !2638)
!2644 = !DILocation(line: 268, column: 13, scope: !2638)
!2645 = !DILocation(line: 269, column: 23, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2638, file: !330, line: 269, column: 8)
!2647 = !DILocation(line: 269, column: 13, scope: !2646)
!2648 = !DILocation(line: 269, column: 11, scope: !2646)
!2649 = !DILocation(line: 269, column: 29, scope: !2646)
!2650 = !DILocation(line: 269, column: 8, scope: !2638)
!2651 = !DILocation(line: 270, column: 12, scope: !2646)
!2652 = !DILocation(line: 270, column: 5, scope: !2646)
!2653 = !DILocation(line: 271, column: 3, scope: !2638)
!2654 = !DILocation(line: 272, column: 2, scope: !2607)
!2655 = !DILocation(line: 259, column: 18, scope: !2601)
!2656 = !DILocation(line: 259, column: 2, scope: !2601)
!2657 = distinct !{!2657, !2605, !2658}
!2658 = !DILocation(line: 272, column: 2, scope: !2602)
!2659 = !DILocation(line: 273, column: 2, scope: !2575)
!2660 = !DILocation(line: 274, column: 1, scope: !2575)
!2661 = distinct !DISubprogram(name: "HX_strlcpy", scope: !304, file: !304, line: 87, type: !2662, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!92, !92, !120, !157}
!2664 = !DILocalVariable(name: "dest", arg: 1, scope: !2661, file: !304, line: 87, type: !92)
!2665 = !DILocation(line: 87, column: 38, scope: !2661)
!2666 = !DILocalVariable(name: "src", arg: 2, scope: !2661, file: !304, line: 87, type: !120)
!2667 = !DILocation(line: 87, column: 56, scope: !2661)
!2668 = !DILocalVariable(name: "n", arg: 3, scope: !2661, file: !304, line: 87, type: !157)
!2669 = !DILocation(line: 87, column: 68, scope: !2661)
!2670 = !DILocation(line: 89, column: 10, scope: !2661)
!2671 = !DILocation(line: 89, column: 16, scope: !2661)
!2672 = !DILocation(line: 89, column: 21, scope: !2661)
!2673 = !DILocation(line: 89, column: 2, scope: !2661)
!2674 = !DILocation(line: 90, column: 2, scope: !2661)
!2675 = !DILocation(line: 90, column: 7, scope: !2661)
!2676 = !DILocation(line: 90, column: 8, scope: !2661)
!2677 = !DILocation(line: 90, column: 12, scope: !2661)
!2678 = !DILocation(line: 91, column: 9, scope: !2661)
!2679 = !DILocation(line: 91, column: 2, scope: !2661)
!2680 = distinct !DISubprogram(name: "mkdir_gen", scope: !330, file: !330, line: 51, type: !2576, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2681 = !DILocalVariable(name: "d", arg: 1, scope: !2680, file: !330, line: 51, type: !120)
!2682 = !DILocation(line: 51, column: 34, scope: !2680)
!2683 = !DILocalVariable(name: "sb", scope: !2680, file: !330, line: 53, type: !2331)
!2684 = !DILocation(line: 53, column: 14, scope: !2680)
!2685 = !DILocation(line: 54, column: 12, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !330, line: 54, column: 6)
!2687 = !DILocation(line: 54, column: 6, scope: !2686)
!2688 = !DILocation(line: 54, column: 20, scope: !2686)
!2689 = !DILocation(line: 54, column: 6, scope: !2680)
!2690 = !DILocation(line: 58, column: 13, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2692, file: !330, line: 58, column: 7)
!2692 = distinct !DILexicalBlock(scope: !2686, file: !330, line: 54, column: 25)
!2693 = !DILocation(line: 58, column: 7, scope: !2691)
!2694 = !DILocation(line: 58, column: 22, scope: !2691)
!2695 = !DILocation(line: 58, column: 7, scope: !2692)
!2696 = !DILocation(line: 60, column: 12, scope: !2691)
!2697 = !DILocation(line: 60, column: 11, scope: !2691)
!2698 = !DILocation(line: 60, column: 4, scope: !2691)
!2699 = !DILocation(line: 61, column: 2, scope: !2692)
!2700 = !DILocation(line: 65, column: 8, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !330, line: 65, column: 7)
!2702 = distinct !DILexicalBlock(scope: !2686, file: !330, line: 61, column: 9)
!2703 = !DILocation(line: 65, column: 7, scope: !2702)
!2704 = !DILocation(line: 67, column: 12, scope: !2701)
!2705 = !DILocation(line: 67, column: 11, scope: !2701)
!2706 = !DILocation(line: 67, column: 4, scope: !2701)
!2707 = !DILocation(line: 69, column: 2, scope: !2680)
!2708 = !DILocation(line: 70, column: 1, scope: !2680)
!2709 = distinct !DISubprogram(name: "HX_rrmdir", scope: !330, file: !330, line: 276, type: !2576, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !329, retainedNodes: !117)
!2710 = !DILocalVariable(name: "dir", arg: 1, scope: !2709, file: !330, line: 276, type: !120)
!2711 = !DILocation(line: 276, column: 41, scope: !2709)
!2712 = !DILocalVariable(name: "ptr", scope: !2709, file: !330, line: 278, type: !2133)
!2713 = !DILocation(line: 278, column: 16, scope: !2709)
!2714 = !DILocalVariable(name: "trav", scope: !2709, file: !330, line: 279, type: !120)
!2715 = !DILocation(line: 279, column: 14, scope: !2709)
!2716 = !DILocalVariable(name: "fn", scope: !2709, file: !330, line: 280, type: !2717)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "hxmc_t", file: !304, line: 31, baseType: !93)
!2719 = !DILocation(line: 280, column: 10, scope: !2709)
!2720 = !DILocalVariable(name: "ret", scope: !2709, file: !330, line: 281, type: !14)
!2721 = !DILocation(line: 281, column: 6, scope: !2709)
!2722 = !DILocation(line: 283, column: 24, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2709, file: !330, line: 283, column: 6)
!2724 = !DILocation(line: 283, column: 13, scope: !2723)
!2725 = !DILocation(line: 283, column: 11, scope: !2723)
!2726 = !DILocation(line: 283, column: 30, scope: !2723)
!2727 = !DILocation(line: 283, column: 6, scope: !2709)
!2728 = !DILocation(line: 284, column: 11, scope: !2723)
!2729 = !DILocation(line: 284, column: 10, scope: !2723)
!2730 = !DILocation(line: 284, column: 3, scope: !2723)
!2731 = !DILocation(line: 286, column: 2, scope: !2709)
!2732 = !DILocation(line: 286, column: 28, scope: !2709)
!2733 = !DILocation(line: 286, column: 17, scope: !2709)
!2734 = !DILocation(line: 286, column: 15, scope: !2709)
!2735 = !DILocation(line: 286, column: 34, scope: !2709)
!2736 = !DILocalVariable(name: "sb", scope: !2737, file: !330, line: 287, type: !2331)
!2737 = distinct !DILexicalBlock(scope: !2709, file: !330, line: 286, column: 43)
!2738 = !DILocation(line: 287, column: 15, scope: !2737)
!2739 = !DILocation(line: 289, column: 14, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2737, file: !330, line: 289, column: 7)
!2741 = !DILocation(line: 289, column: 7, scope: !2740)
!2742 = !DILocation(line: 289, column: 25, scope: !2740)
!2743 = !DILocation(line: 289, column: 30, scope: !2740)
!2744 = !DILocation(line: 289, column: 40, scope: !2740)
!2745 = !DILocation(line: 289, column: 33, scope: !2740)
!2746 = !DILocation(line: 289, column: 52, scope: !2740)
!2747 = !DILocation(line: 289, column: 7, scope: !2737)
!2748 = !DILocation(line: 290, column: 4, scope: !2740)
!2749 = distinct !{!2749, !2731, !2750}
!2750 = !DILocation(line: 311, column: 2, scope: !2709)
!2751 = !DILocation(line: 291, column: 20, scope: !2737)
!2752 = !DILocation(line: 291, column: 3, scope: !2737)
!2753 = !DILocation(line: 292, column: 3, scope: !2737)
!2754 = !DILocation(line: 293, column: 20, scope: !2737)
!2755 = !DILocation(line: 293, column: 3, scope: !2737)
!2756 = !DILocation(line: 294, column: 13, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2737, file: !330, line: 294, column: 7)
!2758 = !DILocation(line: 294, column: 7, scope: !2757)
!2759 = !DILocation(line: 294, column: 22, scope: !2757)
!2760 = !DILocation(line: 294, column: 7, scope: !2737)
!2761 = !DILocation(line: 295, column: 8, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2763, file: !330, line: 295, column: 8)
!2763 = distinct !DILexicalBlock(scope: !2757, file: !330, line: 294, column: 27)
!2764 = !DILocation(line: 295, column: 12, scope: !2762)
!2765 = !DILocation(line: 295, column: 8, scope: !2763)
!2766 = !DILocation(line: 296, column: 12, scope: !2762)
!2767 = !DILocation(line: 296, column: 11, scope: !2762)
!2768 = !DILocation(line: 296, column: 9, scope: !2762)
!2769 = !DILocation(line: 296, column: 5, scope: !2762)
!2770 = !DILocation(line: 297, column: 4, scope: !2763)
!2771 = !DILocation(line: 300, column: 7, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2737, file: !330, line: 300, column: 7)
!2773 = !DILocation(line: 300, column: 7, scope: !2737)
!2774 = !DILocation(line: 301, column: 18, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !330, line: 301, column: 8)
!2776 = distinct !DILexicalBlock(scope: !2772, file: !330, line: 300, column: 28)
!2777 = !DILocation(line: 301, column: 8, scope: !2775)
!2778 = !DILocation(line: 301, column: 22, scope: !2775)
!2779 = !DILocation(line: 301, column: 8, scope: !2776)
!2780 = !DILocation(line: 302, column: 9, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2782, file: !330, line: 302, column: 9)
!2782 = distinct !DILexicalBlock(scope: !2775, file: !330, line: 301, column: 28)
!2783 = !DILocation(line: 302, column: 13, scope: !2781)
!2784 = !DILocation(line: 302, column: 9, scope: !2782)
!2785 = !DILocation(line: 303, column: 13, scope: !2781)
!2786 = !DILocation(line: 303, column: 12, scope: !2781)
!2787 = !DILocation(line: 303, column: 10, scope: !2781)
!2788 = !DILocation(line: 303, column: 6, scope: !2781)
!2789 = !DILocation(line: 304, column: 5, scope: !2782)
!2790 = !DILocation(line: 306, column: 3, scope: !2776)
!2791 = !DILocation(line: 306, column: 21, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2772, file: !330, line: 306, column: 14)
!2793 = !DILocation(line: 306, column: 14, scope: !2792)
!2794 = !DILocation(line: 306, column: 25, scope: !2792)
!2795 = !DILocation(line: 306, column: 14, scope: !2772)
!2796 = !DILocation(line: 307, column: 8, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2798, file: !330, line: 307, column: 8)
!2798 = distinct !DILexicalBlock(scope: !2792, file: !330, line: 306, column: 30)
!2799 = !DILocation(line: 307, column: 12, scope: !2797)
!2800 = !DILocation(line: 307, column: 8, scope: !2798)
!2801 = !DILocation(line: 308, column: 12, scope: !2797)
!2802 = !DILocation(line: 308, column: 11, scope: !2797)
!2803 = !DILocation(line: 308, column: 9, scope: !2797)
!2804 = !DILocation(line: 308, column: 5, scope: !2797)
!2805 = !DILocation(line: 309, column: 4, scope: !2798)
!2806 = !DILocation(line: 313, column: 12, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2709, file: !330, line: 313, column: 6)
!2808 = !DILocation(line: 313, column: 6, scope: !2807)
!2809 = !DILocation(line: 313, column: 17, scope: !2807)
!2810 = !DILocation(line: 313, column: 6, scope: !2709)
!2811 = !DILocation(line: 314, column: 7, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2813, file: !330, line: 314, column: 7)
!2813 = distinct !DILexicalBlock(scope: !2807, file: !330, line: 313, column: 22)
!2814 = !DILocation(line: 314, column: 11, scope: !2812)
!2815 = !DILocation(line: 314, column: 7, scope: !2813)
!2816 = !DILocation(line: 315, column: 11, scope: !2812)
!2817 = !DILocation(line: 315, column: 10, scope: !2812)
!2818 = !DILocation(line: 315, column: 8, scope: !2812)
!2819 = !DILocation(line: 315, column: 4, scope: !2812)
!2820 = !DILocation(line: 316, column: 2, scope: !2813)
!2821 = !DILocation(line: 317, column: 14, scope: !2709)
!2822 = !DILocation(line: 317, column: 2, scope: !2709)
!2823 = !DILocation(line: 318, column: 12, scope: !2709)
!2824 = !DILocation(line: 318, column: 2, scope: !2709)
!2825 = !DILocation(line: 319, column: 9, scope: !2709)
!2826 = !DILocation(line: 319, column: 2, scope: !2709)
!2827 = !DILocation(line: 320, column: 1, scope: !2709)
!2828 = distinct !DISubprogram(name: "HXmap_free", scope: !177, file: !177, line: 83, type: !2829, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{null, !2831}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap", file: !6, line: 73, size: 64, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2832, file: !6, line: 74, baseType: !7, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2832, file: !6, line: 74, baseType: !7, size: 32, offset: 32)
!2836 = !DILocalVariable(name: "xmap", arg: 1, scope: !2828, file: !177, line: 83, type: !2831)
!2837 = !DILocation(line: 83, column: 45, scope: !2828)
!2838 = !DILocalVariable(name: "vmap", scope: !2828, file: !177, line: 85, type: !89)
!2839 = !DILocation(line: 85, column: 8, scope: !2828)
!2840 = !DILocation(line: 85, column: 15, scope: !2828)
!2841 = !DILocalVariable(name: "map", scope: !2828, file: !177, line: 86, type: !2842)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!2844 = !DILocation(line: 86, column: 30, scope: !2828)
!2845 = !DILocation(line: 86, column: 36, scope: !2828)
!2846 = !DILocation(line: 88, column: 10, scope: !2828)
!2847 = !DILocation(line: 88, column: 15, scope: !2828)
!2848 = !DILocation(line: 88, column: 2, scope: !2828)
!2849 = !DILocation(line: 90, column: 22, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2828, file: !177, line: 88, column: 21)
!2851 = !DILocation(line: 90, column: 10, scope: !2850)
!2852 = !DILocation(line: 90, column: 3, scope: !2850)
!2853 = !DILocation(line: 92, column: 24, scope: !2850)
!2854 = !DILocation(line: 92, column: 10, scope: !2850)
!2855 = !DILocation(line: 92, column: 3, scope: !2850)
!2856 = !DILocation(line: 94, column: 3, scope: !2850)
!2857 = !DILocation(line: 96, column: 1, scope: !2828)
!2858 = distinct !DISubprogram(name: "HXhmap_free", scope: !177, file: !177, line: 36, type: !2859, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !2861}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXhmap", file: !180, line: 32, size: 832, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "super", scope: !2862, file: !180, line: 33, baseType: !198, size: 640)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "bk_array", scope: !2862, file: !180, line: 35, baseType: !241, size: 64, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !2862, file: !180, line: 36, baseType: !7, size: 32, offset: 704)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "max_load", scope: !2862, file: !180, line: 36, baseType: !7, size: 32, offset: 736)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "min_load", scope: !2862, file: !180, line: 36, baseType: !7, size: 32, offset: 768)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !2862, file: !180, line: 36, baseType: !7, size: 32, offset: 800)
!2870 = !DILocalVariable(name: "hmap", arg: 1, scope: !2858, file: !177, line: 36, type: !2861)
!2871 = !DILocation(line: 36, column: 40, scope: !2858)
!2872 = !DILocalVariable(name: "drop", scope: !2858, file: !177, line: 38, type: !233)
!2873 = !DILocation(line: 38, column: 22, scope: !2858)
!2874 = !DILocalVariable(name: "dnext", scope: !2858, file: !177, line: 38, type: !233)
!2875 = !DILocation(line: 38, column: 29, scope: !2858)
!2876 = !DILocalVariable(name: "i", scope: !2858, file: !177, line: 39, type: !7)
!2877 = !DILocation(line: 39, column: 15, scope: !2858)
!2878 = !DILocation(line: 41, column: 9, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2858, file: !177, line: 41, column: 2)
!2880 = !DILocation(line: 41, column: 7, scope: !2879)
!2881 = !DILocation(line: 41, column: 14, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2879, file: !177, line: 41, column: 2)
!2883 = !DILocation(line: 41, column: 32, scope: !2882)
!2884 = !DILocation(line: 41, column: 38, scope: !2882)
!2885 = !DILocation(line: 41, column: 18, scope: !2882)
!2886 = !DILocation(line: 41, column: 16, scope: !2882)
!2887 = !DILocation(line: 41, column: 2, scope: !2879)
!2888 = !DILocation(line: 42, column: 3, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !177, line: 42, column: 3)
!2890 = distinct !DILexicalBlock(scope: !2882, file: !177, line: 41, column: 51)
!2891 = !DILocation(line: 42, column: 3, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2889, file: !177, line: 42, column: 3)
!2893 = !DILocation(line: 44, column: 8, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !177, line: 44, column: 8)
!2895 = distinct !DILexicalBlock(scope: !2892, file: !177, line: 43, column: 35)
!2896 = !DILocation(line: 44, column: 14, scope: !2894)
!2897 = !DILocation(line: 44, column: 20, scope: !2894)
!2898 = !DILocation(line: 44, column: 24, scope: !2894)
!2899 = !DILocation(line: 44, column: 31, scope: !2894)
!2900 = !DILocation(line: 44, column: 8, scope: !2895)
!2901 = !DILocation(line: 45, column: 5, scope: !2894)
!2902 = !DILocation(line: 45, column: 11, scope: !2894)
!2903 = !DILocation(line: 45, column: 17, scope: !2894)
!2904 = !DILocation(line: 45, column: 21, scope: !2894)
!2905 = !DILocation(line: 45, column: 28, scope: !2894)
!2906 = !DILocation(line: 45, column: 34, scope: !2894)
!2907 = !DILocation(line: 46, column: 8, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2895, file: !177, line: 46, column: 8)
!2909 = !DILocation(line: 46, column: 14, scope: !2908)
!2910 = !DILocation(line: 46, column: 20, scope: !2908)
!2911 = !DILocation(line: 46, column: 24, scope: !2908)
!2912 = !DILocation(line: 46, column: 31, scope: !2908)
!2913 = !DILocation(line: 46, column: 8, scope: !2895)
!2914 = !DILocation(line: 47, column: 5, scope: !2908)
!2915 = !DILocation(line: 47, column: 11, scope: !2908)
!2916 = !DILocation(line: 47, column: 17, scope: !2908)
!2917 = !DILocation(line: 47, column: 21, scope: !2908)
!2918 = !DILocation(line: 47, column: 28, scope: !2908)
!2919 = !DILocation(line: 47, column: 34, scope: !2908)
!2920 = !DILocation(line: 48, column: 9, scope: !2895)
!2921 = !DILocation(line: 48, column: 4, scope: !2895)
!2922 = !DILocation(line: 49, column: 3, scope: !2895)
!2923 = distinct !{!2923, !2888, !2924}
!2924 = !DILocation(line: 49, column: 3, scope: !2889)
!2925 = !DILocation(line: 50, column: 2, scope: !2890)
!2926 = !DILocation(line: 41, column: 46, scope: !2882)
!2927 = !DILocation(line: 41, column: 2, scope: !2882)
!2928 = distinct !{!2928, !2887, !2929}
!2929 = !DILocation(line: 50, column: 2, scope: !2879)
!2930 = !DILocation(line: 52, column: 7, scope: !2858)
!2931 = !DILocation(line: 52, column: 13, scope: !2858)
!2932 = !DILocation(line: 52, column: 2, scope: !2858)
!2933 = !DILocation(line: 53, column: 7, scope: !2858)
!2934 = !DILocation(line: 53, column: 2, scope: !2858)
!2935 = !DILocation(line: 54, column: 1, scope: !2858)
!2936 = distinct !DISubprogram(name: "HXrbtree_free", scope: !177, file: !177, line: 76, type: !2937, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !194}
!2939 = !DILocalVariable(name: "btree", arg: 1, scope: !2936, file: !177, line: 76, type: !194)
!2940 = !DILocation(line: 76, column: 44, scope: !2936)
!2941 = !DILocation(line: 78, column: 6, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2936, file: !177, line: 78, column: 6)
!2943 = !DILocation(line: 78, column: 13, scope: !2942)
!2944 = !DILocation(line: 78, column: 18, scope: !2942)
!2945 = !DILocation(line: 78, column: 6, scope: !2936)
!2946 = !DILocation(line: 79, column: 22, scope: !2942)
!2947 = !DILocation(line: 79, column: 29, scope: !2942)
!2948 = !DILocation(line: 79, column: 36, scope: !2942)
!2949 = !DILocation(line: 79, column: 3, scope: !2942)
!2950 = !DILocation(line: 80, column: 7, scope: !2936)
!2951 = !DILocation(line: 80, column: 2, scope: !2936)
!2952 = !DILocation(line: 81, column: 1, scope: !2936)
!2953 = distinct !DISubprogram(name: "HXrbtree_free_dive", scope: !177, file: !177, line: 56, type: !2954, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{null, !2956, !215}
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2958 = !DILocalVariable(name: "btree", arg: 1, scope: !2953, file: !177, line: 56, type: !2956)
!2959 = !DILocation(line: 56, column: 55, scope: !2953)
!2960 = !DILocalVariable(name: "node", arg: 2, scope: !2953, file: !177, line: 57, type: !215)
!2961 = !DILocation(line: 57, column: 27, scope: !2953)
!2962 = !DILocation(line: 65, column: 6, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2953, file: !177, line: 65, column: 6)
!2964 = !DILocation(line: 65, column: 12, scope: !2963)
!2965 = !DILocation(line: 65, column: 26, scope: !2963)
!2966 = !DILocation(line: 65, column: 6, scope: !2953)
!2967 = !DILocation(line: 66, column: 22, scope: !2963)
!2968 = !DILocation(line: 66, column: 29, scope: !2963)
!2969 = !DILocation(line: 66, column: 35, scope: !2963)
!2970 = !DILocation(line: 66, column: 3, scope: !2963)
!2971 = !DILocation(line: 67, column: 6, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2953, file: !177, line: 67, column: 6)
!2973 = !DILocation(line: 67, column: 12, scope: !2972)
!2974 = !DILocation(line: 67, column: 27, scope: !2972)
!2975 = !DILocation(line: 67, column: 6, scope: !2953)
!2976 = !DILocation(line: 68, column: 22, scope: !2972)
!2977 = !DILocation(line: 68, column: 29, scope: !2972)
!2978 = !DILocation(line: 68, column: 35, scope: !2972)
!2979 = !DILocation(line: 68, column: 3, scope: !2972)
!2980 = !DILocation(line: 69, column: 6, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2953, file: !177, line: 69, column: 6)
!2982 = !DILocation(line: 69, column: 13, scope: !2981)
!2983 = !DILocation(line: 69, column: 19, scope: !2981)
!2984 = !DILocation(line: 69, column: 23, scope: !2981)
!2985 = !DILocation(line: 69, column: 30, scope: !2981)
!2986 = !DILocation(line: 69, column: 6, scope: !2953)
!2987 = !DILocation(line: 70, column: 3, scope: !2981)
!2988 = !DILocation(line: 70, column: 10, scope: !2981)
!2989 = !DILocation(line: 70, column: 16, scope: !2981)
!2990 = !DILocation(line: 70, column: 20, scope: !2981)
!2991 = !DILocation(line: 70, column: 27, scope: !2981)
!2992 = !DILocation(line: 70, column: 33, scope: !2981)
!2993 = !DILocation(line: 71, column: 6, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2953, file: !177, line: 71, column: 6)
!2995 = !DILocation(line: 71, column: 13, scope: !2994)
!2996 = !DILocation(line: 71, column: 19, scope: !2994)
!2997 = !DILocation(line: 71, column: 23, scope: !2994)
!2998 = !DILocation(line: 71, column: 30, scope: !2994)
!2999 = !DILocation(line: 71, column: 6, scope: !2953)
!3000 = !DILocation(line: 72, column: 3, scope: !2994)
!3001 = !DILocation(line: 72, column: 10, scope: !2994)
!3002 = !DILocation(line: 72, column: 16, scope: !2994)
!3003 = !DILocation(line: 72, column: 20, scope: !2994)
!3004 = !DILocation(line: 72, column: 27, scope: !2994)
!3005 = !DILocation(line: 72, column: 33, scope: !2994)
!3006 = !DILocation(line: 73, column: 7, scope: !2953)
!3007 = !DILocation(line: 73, column: 2, scope: !2953)
!3008 = !DILocation(line: 74, column: 1, scope: !2953)
!3009 = !DILocalVariable(name: "vkey", arg: 1, scope: !258, file: !177, line: 135, type: !90)
!3010 = !DILocation(line: 135, column: 57, scope: !258)
!3011 = !DILocalVariable(name: "length", arg: 2, scope: !258, file: !177, line: 135, type: !157)
!3012 = !DILocation(line: 135, column: 70, scope: !258)
!3013 = !DILocalVariable(name: "key", scope: !258, file: !177, line: 138, type: !3014)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3016)
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !193, line: 48, baseType: !231)
!3017 = !DILocation(line: 138, column: 17, scope: !258)
!3018 = !DILocation(line: 138, column: 23, scope: !258)
!3019 = !DILocalVariable(name: "a", scope: !258, file: !177, line: 139, type: !192)
!3020 = !DILocation(line: 139, column: 11, scope: !258)
!3021 = !DILocalVariable(name: "b", scope: !258, file: !177, line: 139, type: !192)
!3022 = !DILocation(line: 139, column: 14, scope: !258)
!3023 = !DILocalVariable(name: "c", scope: !258, file: !177, line: 139, type: !192)
!3024 = !DILocation(line: 139, column: 17, scope: !258)
!3025 = !DILocation(line: 141, column: 35, scope: !258)
!3026 = !DILocation(line: 141, column: 33, scope: !258)
!3027 = !DILocation(line: 141, column: 14, scope: !258)
!3028 = !DILocation(line: 141, column: 12, scope: !258)
!3029 = !DILocation(line: 141, column: 8, scope: !258)
!3030 = !DILocation(line: 141, column: 4, scope: !258)
!3031 = !DILocation(line: 143, column: 2, scope: !258)
!3032 = !DILocation(line: 143, column: 9, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !177, line: 143, column: 2)
!3034 = distinct !DILexicalBlock(scope: !258, file: !177, line: 143, column: 2)
!3035 = !DILocation(line: 143, column: 16, scope: !3033)
!3036 = !DILocation(line: 143, column: 2, scope: !3034)
!3037 = !DILocation(line: 144, column: 8, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3033, file: !177, line: 143, column: 47)
!3039 = !DILocation(line: 144, column: 28, scope: !3038)
!3040 = !DILocation(line: 144, column: 18, scope: !3038)
!3041 = !DILocation(line: 144, column: 35, scope: !3038)
!3042 = !DILocation(line: 144, column: 15, scope: !3038)
!3043 = !DILocation(line: 145, column: 19, scope: !3038)
!3044 = !DILocation(line: 145, column: 9, scope: !3038)
!3045 = !DILocation(line: 145, column: 26, scope: !3038)
!3046 = !DILocation(line: 144, column: 41, scope: !3038)
!3047 = !DILocation(line: 145, column: 46, scope: !3038)
!3048 = !DILocation(line: 145, column: 36, scope: !3038)
!3049 = !DILocation(line: 145, column: 53, scope: !3038)
!3050 = !DILocation(line: 145, column: 33, scope: !3038)
!3051 = !DILocation(line: 144, column: 5, scope: !3038)
!3052 = !DILocation(line: 146, column: 8, scope: !3038)
!3053 = !DILocation(line: 146, column: 28, scope: !3038)
!3054 = !DILocation(line: 146, column: 18, scope: !3038)
!3055 = !DILocation(line: 146, column: 35, scope: !3038)
!3056 = !DILocation(line: 146, column: 15, scope: !3038)
!3057 = !DILocation(line: 147, column: 19, scope: !3038)
!3058 = !DILocation(line: 147, column: 9, scope: !3038)
!3059 = !DILocation(line: 147, column: 26, scope: !3038)
!3060 = !DILocation(line: 146, column: 41, scope: !3038)
!3061 = !DILocation(line: 147, column: 46, scope: !3038)
!3062 = !DILocation(line: 147, column: 36, scope: !3038)
!3063 = !DILocation(line: 147, column: 53, scope: !3038)
!3064 = !DILocation(line: 147, column: 33, scope: !3038)
!3065 = !DILocation(line: 146, column: 5, scope: !3038)
!3066 = !DILocation(line: 148, column: 8, scope: !3038)
!3067 = !DILocation(line: 148, column: 28, scope: !3038)
!3068 = !DILocation(line: 148, column: 18, scope: !3038)
!3069 = !DILocation(line: 148, column: 35, scope: !3038)
!3070 = !DILocation(line: 148, column: 15, scope: !3038)
!3071 = !DILocation(line: 149, column: 19, scope: !3038)
!3072 = !DILocation(line: 149, column: 9, scope: !3038)
!3073 = !DILocation(line: 149, column: 27, scope: !3038)
!3074 = !DILocation(line: 148, column: 41, scope: !3038)
!3075 = !DILocation(line: 149, column: 46, scope: !3038)
!3076 = !DILocation(line: 149, column: 36, scope: !3038)
!3077 = !DILocation(line: 149, column: 54, scope: !3038)
!3078 = !DILocation(line: 149, column: 33, scope: !3038)
!3079 = !DILocation(line: 148, column: 5, scope: !3038)
!3080 = !DILocation(line: 150, column: 3, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3038, file: !177, line: 150, column: 3)
!3082 = !DILocation(line: 151, column: 2, scope: !3038)
!3083 = !DILocation(line: 143, column: 29, scope: !3033)
!3084 = !DILocation(line: 143, column: 40, scope: !3033)
!3085 = !DILocation(line: 143, column: 2, scope: !3033)
!3086 = distinct !{!3086, !3036, !3087}
!3087 = !DILocation(line: 151, column: 2, scope: !3034)
!3088 = !DILocation(line: 153, column: 10, scope: !258)
!3089 = !DILocation(line: 153, column: 2, scope: !258)
!3090 = !DILocation(line: 154, column: 27, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !258, file: !177, line: 153, column: 18)
!3092 = !DILocation(line: 154, column: 17, scope: !3091)
!3093 = !DILocation(line: 154, column: 36, scope: !3091)
!3094 = !DILocation(line: 154, column: 13, scope: !3091)
!3095 = !DILocation(line: 154, column: 11, scope: !3091)
!3096 = !DILocation(line: 155, column: 27, scope: !3091)
!3097 = !DILocation(line: 155, column: 17, scope: !3091)
!3098 = !DILocation(line: 155, column: 36, scope: !3091)
!3099 = !DILocation(line: 155, column: 13, scope: !3091)
!3100 = !DILocation(line: 155, column: 11, scope: !3091)
!3101 = !DILocation(line: 156, column: 27, scope: !3091)
!3102 = !DILocation(line: 156, column: 17, scope: !3091)
!3103 = !DILocation(line: 156, column: 36, scope: !3091)
!3104 = !DILocation(line: 156, column: 13, scope: !3091)
!3105 = !DILocation(line: 156, column: 11, scope: !3091)
!3106 = !DILocation(line: 157, column: 16, scope: !3091)
!3107 = !DILocation(line: 157, column: 13, scope: !3091)
!3108 = !DILocation(line: 157, column: 11, scope: !3091)
!3109 = !DILocation(line: 158, column: 27, scope: !3091)
!3110 = !DILocation(line: 158, column: 17, scope: !3091)
!3111 = !DILocation(line: 158, column: 35, scope: !3091)
!3112 = !DILocation(line: 158, column: 13, scope: !3091)
!3113 = !DILocation(line: 158, column: 11, scope: !3091)
!3114 = !DILocation(line: 159, column: 27, scope: !3091)
!3115 = !DILocation(line: 159, column: 17, scope: !3091)
!3116 = !DILocation(line: 159, column: 35, scope: !3091)
!3117 = !DILocation(line: 159, column: 13, scope: !3091)
!3118 = !DILocation(line: 159, column: 11, scope: !3091)
!3119 = !DILocation(line: 160, column: 27, scope: !3091)
!3120 = !DILocation(line: 160, column: 17, scope: !3091)
!3121 = !DILocation(line: 160, column: 35, scope: !3091)
!3122 = !DILocation(line: 160, column: 13, scope: !3091)
!3123 = !DILocation(line: 160, column: 11, scope: !3091)
!3124 = !DILocation(line: 161, column: 16, scope: !3091)
!3125 = !DILocation(line: 161, column: 13, scope: !3091)
!3126 = !DILocation(line: 161, column: 11, scope: !3091)
!3127 = !DILocation(line: 162, column: 27, scope: !3091)
!3128 = !DILocation(line: 162, column: 17, scope: !3091)
!3129 = !DILocation(line: 162, column: 35, scope: !3091)
!3130 = !DILocation(line: 162, column: 13, scope: !3091)
!3131 = !DILocation(line: 162, column: 11, scope: !3091)
!3132 = !DILocation(line: 163, column: 27, scope: !3091)
!3133 = !DILocation(line: 163, column: 17, scope: !3091)
!3134 = !DILocation(line: 163, column: 35, scope: !3091)
!3135 = !DILocation(line: 163, column: 13, scope: !3091)
!3136 = !DILocation(line: 163, column: 11, scope: !3091)
!3137 = !DILocation(line: 164, column: 27, scope: !3091)
!3138 = !DILocation(line: 164, column: 17, scope: !3091)
!3139 = !DILocation(line: 164, column: 35, scope: !3091)
!3140 = !DILocation(line: 164, column: 13, scope: !3091)
!3141 = !DILocation(line: 164, column: 11, scope: !3091)
!3142 = !DILocation(line: 165, column: 16, scope: !3091)
!3143 = !DILocation(line: 165, column: 13, scope: !3091)
!3144 = !DILocation(line: 166, column: 3, scope: !3091)
!3145 = !DILocation(line: 167, column: 18, scope: !3091)
!3146 = !DILocation(line: 167, column: 11, scope: !3091)
!3147 = !DILocation(line: 170, column: 2, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !258, file: !177, line: 170, column: 2)
!3149 = !DILocation(line: 171, column: 9, scope: !258)
!3150 = !DILocation(line: 171, column: 2, scope: !258)
!3151 = !DILocation(line: 172, column: 1, scope: !258)
!3152 = distinct !DISubprogram(name: "HXhash_jlookup3s", scope: !177, file: !177, line: 179, type: !172, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3153 = !DILocalVariable(name: "p", arg: 1, scope: !3152, file: !177, line: 179, type: !90)
!3154 = !DILocation(line: 179, column: 58, scope: !3152)
!3155 = !DILocalVariable(name: "z", arg: 2, scope: !3152, file: !177, line: 179, type: !157)
!3156 = !DILocation(line: 179, column: 68, scope: !3152)
!3157 = !DILocation(line: 181, column: 25, scope: !3152)
!3158 = !DILocation(line: 181, column: 35, scope: !3152)
!3159 = !DILocation(line: 181, column: 28, scope: !3152)
!3160 = !DILocation(line: 181, column: 9, scope: !3152)
!3161 = !DILocation(line: 181, column: 2, scope: !3152)
!3162 = distinct !DISubprogram(name: "HXhash_djb2", scope: !177, file: !177, line: 184, type: !172, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3163 = !DILocalVariable(name: "p", arg: 1, scope: !3162, file: !177, line: 184, type: !90)
!3164 = !DILocation(line: 184, column: 53, scope: !3162)
!3165 = !DILocalVariable(name: "z", arg: 2, scope: !3162, file: !177, line: 184, type: !157)
!3166 = !DILocation(line: 184, column: 63, scope: !3162)
!3167 = !DILocalVariable(name: "c", scope: !3162, file: !177, line: 186, type: !120)
!3168 = !DILocation(line: 186, column: 14, scope: !3162)
!3169 = !DILocation(line: 186, column: 18, scope: !3162)
!3170 = !DILocalVariable(name: "v", scope: !3162, file: !177, line: 187, type: !159)
!3171 = !DILocation(line: 187, column: 16, scope: !3162)
!3172 = !DILocation(line: 189, column: 2, scope: !3162)
!3173 = !DILocation(line: 189, column: 10, scope: !3162)
!3174 = !DILocation(line: 189, column: 9, scope: !3162)
!3175 = !DILocation(line: 189, column: 12, scope: !3162)
!3176 = !DILocation(line: 190, column: 9, scope: !3162)
!3177 = !DILocation(line: 190, column: 11, scope: !3162)
!3178 = !DILocation(line: 190, column: 19, scope: !3162)
!3179 = !DILocation(line: 190, column: 17, scope: !3162)
!3180 = !DILocation(line: 190, column: 26, scope: !3162)
!3181 = !DILocation(line: 190, column: 24, scope: !3162)
!3182 = !DILocation(line: 190, column: 22, scope: !3162)
!3183 = !DILocation(line: 190, column: 5, scope: !3162)
!3184 = distinct !{!3184, !3172, !3180}
!3185 = !DILocation(line: 193, column: 9, scope: !3162)
!3186 = !DILocation(line: 193, column: 2, scope: !3162)
!3187 = distinct !DISubprogram(name: "HXmap_init5", scope: !177, file: !177, line: 387, type: !3188, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!2831, !5, !7, !3190, !157, !157}
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!3192 = !DILocalVariable(name: "type", arg: 1, scope: !3187, file: !177, line: 387, type: !5)
!3193 = !DILocation(line: 387, column: 57, scope: !3187)
!3194 = !DILocalVariable(name: "flags", arg: 2, scope: !3187, file: !177, line: 388, type: !7)
!3195 = !DILocation(line: 388, column: 18, scope: !3187)
!3196 = !DILocalVariable(name: "ops", arg: 3, scope: !3187, file: !177, line: 388, type: !3190)
!3197 = !DILocation(line: 388, column: 49, scope: !3187)
!3198 = !DILocalVariable(name: "key_size", arg: 4, scope: !3187, file: !177, line: 388, type: !157)
!3199 = !DILocation(line: 388, column: 61, scope: !3187)
!3200 = !DILocalVariable(name: "data_size", arg: 5, scope: !3187, file: !177, line: 389, type: !157)
!3201 = !DILocation(line: 389, column: 12, scope: !3187)
!3202 = !DILocation(line: 391, column: 10, scope: !3187)
!3203 = !DILocation(line: 391, column: 2, scope: !3187)
!3204 = !DILocation(line: 393, column: 26, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3187, file: !177, line: 391, column: 16)
!3206 = !DILocation(line: 393, column: 33, scope: !3205)
!3207 = !DILocation(line: 393, column: 38, scope: !3205)
!3208 = !DILocation(line: 393, column: 48, scope: !3205)
!3209 = !DILocation(line: 393, column: 10, scope: !3205)
!3210 = !DILocation(line: 393, column: 3, scope: !3205)
!3211 = !DILocation(line: 395, column: 25, scope: !3205)
!3212 = !DILocation(line: 395, column: 32, scope: !3205)
!3213 = !DILocation(line: 395, column: 37, scope: !3205)
!3214 = !DILocation(line: 395, column: 47, scope: !3205)
!3215 = !DILocation(line: 395, column: 10, scope: !3205)
!3216 = !DILocation(line: 395, column: 3, scope: !3205)
!3217 = !DILocation(line: 397, column: 3, scope: !3205)
!3218 = !DILocation(line: 397, column: 9, scope: !3205)
!3219 = !DILocation(line: 398, column: 3, scope: !3205)
!3220 = !DILocation(line: 400, column: 1, scope: !3187)
!3221 = distinct !DISubprogram(name: "HXhashmap_init4", scope: !177, file: !177, line: 323, type: !3222, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3222 = !DISubroutineType(types: !3223)
!3223 = !{!2831, !7, !3190, !157, !157}
!3224 = !DILocalVariable(name: "flags", arg: 1, scope: !3221, file: !177, line: 323, type: !7)
!3225 = !DILocation(line: 323, column: 51, scope: !3221)
!3226 = !DILocalVariable(name: "ops", arg: 2, scope: !3221, file: !177, line: 324, type: !3190)
!3227 = !DILocation(line: 324, column: 29, scope: !3221)
!3228 = !DILocalVariable(name: "key_size", arg: 3, scope: !3221, file: !177, line: 324, type: !157)
!3229 = !DILocation(line: 324, column: 41, scope: !3221)
!3230 = !DILocalVariable(name: "data_size", arg: 4, scope: !3221, file: !177, line: 324, type: !157)
!3231 = !DILocation(line: 324, column: 58, scope: !3221)
!3232 = !DILocalVariable(name: "super", scope: !3221, file: !177, line: 326, type: !3233)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!3234 = !DILocation(line: 326, column: 24, scope: !3221)
!3235 = !DILocalVariable(name: "hmap", scope: !3221, file: !177, line: 327, type: !2861)
!3236 = !DILocation(line: 327, column: 17, scope: !3221)
!3237 = !DILocalVariable(name: "saved_errno", scope: !3221, file: !177, line: 328, type: !14)
!3238 = !DILocation(line: 328, column: 6, scope: !3221)
!3239 = !DILocation(line: 330, column: 14, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3221, file: !177, line: 330, column: 6)
!3241 = !DILocation(line: 330, column: 12, scope: !3240)
!3242 = !DILocation(line: 330, column: 40, scope: !3240)
!3243 = !DILocation(line: 330, column: 6, scope: !3221)
!3244 = !DILocation(line: 331, column: 3, scope: !3240)
!3245 = !DILocation(line: 333, column: 22, scope: !3221)
!3246 = !DILocation(line: 333, column: 28, scope: !3221)
!3247 = !DILocation(line: 333, column: 19, scope: !3221)
!3248 = !DILocation(line: 334, column: 21, scope: !3221)
!3249 = !DILocation(line: 334, column: 2, scope: !3221)
!3250 = !DILocation(line: 334, column: 9, scope: !3221)
!3251 = !DILocation(line: 334, column: 19, scope: !3221)
!3252 = !DILocation(line: 335, column: 2, scope: !3221)
!3253 = !DILocation(line: 335, column: 9, scope: !3221)
!3254 = !DILocation(line: 335, column: 19, scope: !3221)
!3255 = !DILocation(line: 336, column: 2, scope: !3221)
!3256 = !DILocation(line: 336, column: 9, scope: !3221)
!3257 = !DILocation(line: 336, column: 19, scope: !3221)
!3258 = !DILocation(line: 337, column: 21, scope: !3221)
!3259 = !DILocation(line: 337, column: 2, scope: !3221)
!3260 = !DILocation(line: 337, column: 9, scope: !3221)
!3261 = !DILocation(line: 337, column: 19, scope: !3221)
!3262 = !DILocation(line: 338, column: 21, scope: !3221)
!3263 = !DILocation(line: 338, column: 2, scope: !3221)
!3264 = !DILocation(line: 338, column: 9, scope: !3221)
!3265 = !DILocation(line: 338, column: 19, scope: !3221)
!3266 = !DILocation(line: 339, column: 18, scope: !3221)
!3267 = !DILocation(line: 339, column: 25, scope: !3221)
!3268 = !DILocation(line: 339, column: 2, scope: !3221)
!3269 = !DILocation(line: 340, column: 2, scope: !3221)
!3270 = !DILocation(line: 340, column: 8, scope: !3221)
!3271 = !DILocation(line: 340, column: 12, scope: !3221)
!3272 = !DILocation(line: 341, column: 24, scope: !3221)
!3273 = !DILocation(line: 341, column: 10, scope: !3221)
!3274 = !DILocation(line: 341, column: 2, scope: !3221)
!3275 = !DILocation(line: 341, column: 8, scope: !3221)
!3276 = !DILocation(line: 342, column: 6, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3221, file: !177, line: 342, column: 6)
!3278 = !DILocation(line: 342, column: 12, scope: !3277)
!3279 = !DILocation(line: 342, column: 21, scope: !3277)
!3280 = !DILocation(line: 342, column: 6, scope: !3221)
!3281 = !DILocation(line: 343, column: 3, scope: !3277)
!3282 = !DILocation(line: 345, column: 2, scope: !3221)
!3283 = !DILocation(line: 345, column: 8, scope: !3221)
!3284 = !DILocation(line: 346, column: 9, scope: !3221)
!3285 = !DILocation(line: 346, column: 2, scope: !3221)
!3286 = !DILocation(line: 349, column: 16, scope: !3221)
!3287 = !DILocation(line: 349, column: 14, scope: !3221)
!3288 = !DILocation(line: 350, column: 14, scope: !3221)
!3289 = !DILocation(line: 350, column: 2, scope: !3221)
!3290 = !DILocation(line: 351, column: 10, scope: !3221)
!3291 = !DILocation(line: 351, column: 2, scope: !3221)
!3292 = !DILocation(line: 351, column: 8, scope: !3221)
!3293 = !DILocation(line: 352, column: 2, scope: !3221)
!3294 = !DILocation(line: 353, column: 1, scope: !3221)
!3295 = distinct !DISubprogram(name: "HXrbtree_init4", scope: !177, file: !177, line: 355, type: !3222, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3296 = !DILocalVariable(name: "flags", arg: 1, scope: !3295, file: !177, line: 355, type: !7)
!3297 = !DILocation(line: 355, column: 50, scope: !3295)
!3298 = !DILocalVariable(name: "ops", arg: 2, scope: !3295, file: !177, line: 356, type: !3190)
!3299 = !DILocation(line: 356, column: 29, scope: !3295)
!3300 = !DILocalVariable(name: "key_size", arg: 3, scope: !3295, file: !177, line: 356, type: !157)
!3301 = !DILocation(line: 356, column: 41, scope: !3295)
!3302 = !DILocalVariable(name: "data_size", arg: 4, scope: !3295, file: !177, line: 356, type: !157)
!3303 = !DILocation(line: 356, column: 58, scope: !3295)
!3304 = !DILocalVariable(name: "super", scope: !3295, file: !177, line: 358, type: !3233)
!3305 = !DILocation(line: 358, column: 24, scope: !3295)
!3306 = !DILocalVariable(name: "btree", scope: !3295, file: !177, line: 359, type: !194)
!3307 = !DILocation(line: 359, column: 19, scope: !3295)
!3308 = !DILocation(line: 365, column: 15, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3295, file: !177, line: 365, column: 6)
!3310 = !DILocation(line: 365, column: 13, scope: !3309)
!3311 = !DILocation(line: 365, column: 42, scope: !3309)
!3312 = !DILocation(line: 365, column: 6, scope: !3295)
!3313 = !DILocation(line: 366, column: 3, scope: !3309)
!3314 = !DILocation(line: 368, column: 22, scope: !3295)
!3315 = !DILocation(line: 368, column: 29, scope: !3295)
!3316 = !DILocation(line: 368, column: 19, scope: !3295)
!3317 = !DILocation(line: 369, column: 2, scope: !3295)
!3318 = !DILocation(line: 369, column: 9, scope: !3295)
!3319 = !DILocation(line: 369, column: 19, scope: !3295)
!3320 = !DILocation(line: 370, column: 21, scope: !3295)
!3321 = !DILocation(line: 370, column: 2, scope: !3295)
!3322 = !DILocation(line: 370, column: 9, scope: !3295)
!3323 = !DILocation(line: 370, column: 19, scope: !3295)
!3324 = !DILocation(line: 371, column: 2, scope: !3295)
!3325 = !DILocation(line: 371, column: 9, scope: !3295)
!3326 = !DILocation(line: 371, column: 19, scope: !3295)
!3327 = !DILocation(line: 372, column: 21, scope: !3295)
!3328 = !DILocation(line: 372, column: 2, scope: !3295)
!3329 = !DILocation(line: 372, column: 9, scope: !3295)
!3330 = !DILocation(line: 372, column: 19, scope: !3295)
!3331 = !DILocation(line: 373, column: 21, scope: !3295)
!3332 = !DILocation(line: 373, column: 2, scope: !3295)
!3333 = !DILocation(line: 373, column: 9, scope: !3295)
!3334 = !DILocation(line: 373, column: 19, scope: !3295)
!3335 = !DILocation(line: 374, column: 18, scope: !3295)
!3336 = !DILocation(line: 374, column: 25, scope: !3295)
!3337 = !DILocation(line: 374, column: 2, scope: !3295)
!3338 = !DILocation(line: 382, column: 2, scope: !3295)
!3339 = !DILocation(line: 382, column: 9, scope: !3295)
!3340 = !DILocation(line: 382, column: 14, scope: !3295)
!3341 = !DILocation(line: 383, column: 2, scope: !3295)
!3342 = !DILocation(line: 383, column: 9, scope: !3295)
!3343 = !DILocation(line: 383, column: 14, scope: !3295)
!3344 = !DILocation(line: 384, column: 9, scope: !3295)
!3345 = !DILocation(line: 384, column: 2, scope: !3295)
!3346 = !DILocation(line: 385, column: 1, scope: !3295)
!3347 = distinct !DISubprogram(name: "HXmap_ops_setup", scope: !177, file: !177, line: 200, type: !3348, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !3233, !3190}
!3350 = !DILocalVariable(name: "super", arg: 1, scope: !3347, file: !177, line: 200, type: !3233)
!3351 = !DILocation(line: 200, column: 51, scope: !3347)
!3352 = !DILocalVariable(name: "new_ops", arg: 2, scope: !3347, file: !177, line: 201, type: !3190)
!3353 = !DILocation(line: 201, column: 29, scope: !3347)
!3354 = !DILocalVariable(name: "ops", scope: !3347, file: !177, line: 203, type: !3355)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!3356 = !DILocation(line: 203, column: 20, scope: !3347)
!3357 = !DILocation(line: 203, column: 27, scope: !3347)
!3358 = !DILocation(line: 203, column: 34, scope: !3347)
!3359 = !DILocation(line: 205, column: 2, scope: !3347)
!3360 = !DILocation(line: 205, column: 7, scope: !3347)
!3361 = !DILocation(line: 205, column: 15, scope: !3347)
!3362 = !DILocation(line: 206, column: 2, scope: !3347)
!3363 = !DILocation(line: 206, column: 7, scope: !3347)
!3364 = !DILocation(line: 206, column: 15, scope: !3347)
!3365 = !DILocation(line: 208, column: 6, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 208, column: 6)
!3367 = !DILocation(line: 208, column: 13, scope: !3366)
!3368 = !DILocation(line: 208, column: 19, scope: !3366)
!3369 = !DILocation(line: 208, column: 6, scope: !3347)
!3370 = !DILocation(line: 209, column: 20, scope: !3366)
!3371 = !DILocation(line: 209, column: 3, scope: !3366)
!3372 = !DILocation(line: 209, column: 8, scope: !3366)
!3373 = !DILocation(line: 209, column: 18, scope: !3366)
!3374 = !DILocation(line: 210, column: 11, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3366, file: !177, line: 210, column: 11)
!3376 = !DILocation(line: 210, column: 18, scope: !3375)
!3377 = !DILocation(line: 210, column: 27, scope: !3375)
!3378 = !DILocation(line: 210, column: 11, scope: !3366)
!3379 = !DILocation(line: 211, column: 3, scope: !3375)
!3380 = !DILocation(line: 211, column: 8, scope: !3375)
!3381 = !DILocation(line: 211, column: 18, scope: !3375)
!3382 = !DILocation(line: 213, column: 3, scope: !3375)
!3383 = !DILocation(line: 213, column: 8, scope: !3375)
!3384 = !DILocation(line: 213, column: 18, scope: !3375)
!3385 = !DILocation(line: 215, column: 6, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 215, column: 6)
!3387 = !DILocation(line: 215, column: 13, scope: !3386)
!3388 = !DILocation(line: 215, column: 19, scope: !3386)
!3389 = !DILocation(line: 215, column: 6, scope: !3347)
!3390 = !DILocation(line: 216, column: 19, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3386, file: !177, line: 215, column: 33)
!3392 = !DILocation(line: 216, column: 26, scope: !3391)
!3393 = !DILocation(line: 216, column: 32, scope: !3391)
!3394 = !DILocation(line: 216, column: 18, scope: !3391)
!3395 = !DILocation(line: 217, column: 18, scope: !3391)
!3396 = !DILocation(line: 216, column: 3, scope: !3391)
!3397 = !DILocation(line: 216, column: 8, scope: !3391)
!3398 = !DILocation(line: 216, column: 16, scope: !3391)
!3399 = !DILocation(line: 218, column: 3, scope: !3391)
!3400 = !DILocation(line: 218, column: 8, scope: !3391)
!3401 = !DILocation(line: 218, column: 16, scope: !3391)
!3402 = !DILocation(line: 219, column: 2, scope: !3391)
!3403 = !DILocation(line: 220, column: 6, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 220, column: 6)
!3405 = !DILocation(line: 220, column: 13, scope: !3404)
!3406 = !DILocation(line: 220, column: 19, scope: !3404)
!3407 = !DILocation(line: 220, column: 6, scope: !3347)
!3408 = !DILocation(line: 221, column: 19, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3404, file: !177, line: 220, column: 34)
!3410 = !DILocation(line: 221, column: 26, scope: !3409)
!3411 = !DILocation(line: 221, column: 32, scope: !3409)
!3412 = !DILocation(line: 221, column: 18, scope: !3409)
!3413 = !DILocation(line: 222, column: 18, scope: !3409)
!3414 = !DILocation(line: 221, column: 3, scope: !3409)
!3415 = !DILocation(line: 221, column: 8, scope: !3409)
!3416 = !DILocation(line: 221, column: 16, scope: !3409)
!3417 = !DILocation(line: 223, column: 3, scope: !3409)
!3418 = !DILocation(line: 223, column: 8, scope: !3409)
!3419 = !DILocation(line: 223, column: 16, scope: !3409)
!3420 = !DILocation(line: 224, column: 2, scope: !3409)
!3421 = !DILocation(line: 226, column: 6, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 226, column: 6)
!3423 = !DILocation(line: 226, column: 13, scope: !3422)
!3424 = !DILocation(line: 226, column: 18, scope: !3422)
!3425 = !DILocation(line: 226, column: 6, scope: !3347)
!3426 = !DILocation(line: 227, column: 7, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !177, line: 227, column: 7)
!3428 = distinct !DILexicalBlock(scope: !3422, file: !177, line: 226, column: 34)
!3429 = !DILocation(line: 227, column: 14, scope: !3427)
!3430 = !DILocation(line: 227, column: 20, scope: !3427)
!3431 = !DILocation(line: 227, column: 7, scope: !3428)
!3432 = !DILocation(line: 228, column: 4, scope: !3427)
!3433 = !DILocation(line: 228, column: 9, scope: !3427)
!3434 = !DILocation(line: 228, column: 16, scope: !3427)
!3435 = !DILocation(line: 229, column: 12, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3427, file: !177, line: 229, column: 12)
!3437 = !DILocation(line: 229, column: 19, scope: !3436)
!3438 = !DILocation(line: 229, column: 28, scope: !3436)
!3439 = !DILocation(line: 229, column: 12, scope: !3427)
!3440 = !DILocation(line: 230, column: 4, scope: !3436)
!3441 = !DILocation(line: 230, column: 9, scope: !3436)
!3442 = !DILocation(line: 230, column: 16, scope: !3436)
!3443 = !DILocation(line: 232, column: 4, scope: !3436)
!3444 = !DILocation(line: 232, column: 9, scope: !3436)
!3445 = !DILocation(line: 232, column: 16, scope: !3436)
!3446 = !DILocation(line: 233, column: 2, scope: !3428)
!3447 = !DILocation(line: 235, column: 6, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 235, column: 6)
!3449 = !DILocation(line: 235, column: 14, scope: !3448)
!3450 = !DILocation(line: 235, column: 6, scope: !3347)
!3451 = !DILocation(line: 236, column: 3, scope: !3448)
!3452 = !DILocation(line: 239, column: 6, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 239, column: 6)
!3454 = !DILocation(line: 239, column: 15, scope: !3453)
!3455 = !DILocation(line: 239, column: 25, scope: !3453)
!3456 = !DILocation(line: 239, column: 6, scope: !3347)
!3457 = !DILocation(line: 240, column: 20, scope: !3453)
!3458 = !DILocation(line: 240, column: 29, scope: !3453)
!3459 = !DILocation(line: 240, column: 3, scope: !3453)
!3460 = !DILocation(line: 240, column: 8, scope: !3453)
!3461 = !DILocation(line: 240, column: 18, scope: !3453)
!3462 = !DILocation(line: 241, column: 6, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 241, column: 6)
!3464 = !DILocation(line: 241, column: 15, scope: !3463)
!3465 = !DILocation(line: 241, column: 23, scope: !3463)
!3466 = !DILocation(line: 241, column: 6, scope: !3347)
!3467 = !DILocation(line: 242, column: 20, scope: !3463)
!3468 = !DILocation(line: 242, column: 29, scope: !3463)
!3469 = !DILocation(line: 242, column: 3, scope: !3463)
!3470 = !DILocation(line: 242, column: 8, scope: !3463)
!3471 = !DILocation(line: 242, column: 18, scope: !3463)
!3472 = !DILocation(line: 243, column: 6, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 243, column: 6)
!3474 = !DILocation(line: 243, column: 15, scope: !3473)
!3475 = !DILocation(line: 243, column: 22, scope: !3473)
!3476 = !DILocation(line: 243, column: 6, scope: !3347)
!3477 = !DILocation(line: 244, column: 20, scope: !3473)
!3478 = !DILocation(line: 244, column: 29, scope: !3473)
!3479 = !DILocation(line: 244, column: 3, scope: !3473)
!3480 = !DILocation(line: 244, column: 8, scope: !3473)
!3481 = !DILocation(line: 244, column: 18, scope: !3473)
!3482 = !DILocation(line: 245, column: 6, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 245, column: 6)
!3484 = !DILocation(line: 245, column: 15, scope: !3483)
!3485 = !DILocation(line: 245, column: 23, scope: !3483)
!3486 = !DILocation(line: 245, column: 6, scope: !3347)
!3487 = !DILocation(line: 246, column: 20, scope: !3483)
!3488 = !DILocation(line: 246, column: 29, scope: !3483)
!3489 = !DILocation(line: 246, column: 3, scope: !3483)
!3490 = !DILocation(line: 246, column: 8, scope: !3483)
!3491 = !DILocation(line: 246, column: 18, scope: !3483)
!3492 = !DILocation(line: 247, column: 6, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 247, column: 6)
!3494 = !DILocation(line: 247, column: 15, scope: !3493)
!3495 = !DILocation(line: 247, column: 22, scope: !3493)
!3496 = !DILocation(line: 247, column: 6, scope: !3347)
!3497 = !DILocation(line: 248, column: 20, scope: !3493)
!3498 = !DILocation(line: 248, column: 29, scope: !3493)
!3499 = !DILocation(line: 248, column: 3, scope: !3493)
!3500 = !DILocation(line: 248, column: 8, scope: !3493)
!3501 = !DILocation(line: 248, column: 18, scope: !3493)
!3502 = !DILocation(line: 249, column: 6, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3347, file: !177, line: 249, column: 6)
!3504 = !DILocation(line: 249, column: 13, scope: !3503)
!3505 = !DILocation(line: 249, column: 18, scope: !3503)
!3506 = !DILocation(line: 249, column: 33, scope: !3503)
!3507 = !DILocation(line: 249, column: 36, scope: !3503)
!3508 = !DILocation(line: 249, column: 45, scope: !3503)
!3509 = !DILocation(line: 249, column: 52, scope: !3503)
!3510 = !DILocation(line: 249, column: 6, scope: !3347)
!3511 = !DILocation(line: 250, column: 20, scope: !3503)
!3512 = !DILocation(line: 250, column: 29, scope: !3503)
!3513 = !DILocation(line: 250, column: 3, scope: !3503)
!3514 = !DILocation(line: 250, column: 8, scope: !3503)
!3515 = !DILocation(line: 250, column: 18, scope: !3503)
!3516 = !DILocation(line: 251, column: 1, scope: !3347)
!3517 = distinct !DISubprogram(name: "HXmap_valuecpy", scope: !177, file: !177, line: 108, type: !162, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3518 = !DILocalVariable(name: "p", arg: 1, scope: !3517, file: !177, line: 108, type: !90)
!3519 = !DILocation(line: 108, column: 41, scope: !3517)
!3520 = !DILocalVariable(name: "len", arg: 2, scope: !3517, file: !177, line: 108, type: !157)
!3521 = !DILocation(line: 108, column: 51, scope: !3517)
!3522 = !DILocation(line: 110, column: 9, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !177, line: 110, column: 9)
!3524 = !DILocation(line: 110, column: 2, scope: !3517)
!3525 = distinct !DISubprogram(name: "HXmap_valuecmp", scope: !177, file: !177, line: 98, type: !155, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3526 = !DILocalVariable(name: "pa", arg: 1, scope: !3525, file: !177, line: 98, type: !90)
!3527 = !DILocation(line: 98, column: 39, scope: !3525)
!3528 = !DILocalVariable(name: "pb", arg: 2, scope: !3525, file: !177, line: 98, type: !90)
!3529 = !DILocation(line: 98, column: 55, scope: !3525)
!3530 = !DILocalVariable(name: "len", arg: 3, scope: !3525, file: !177, line: 98, type: !157)
!3531 = !DILocation(line: 98, column: 66, scope: !3525)
!3532 = !DILocation(line: 105, column: 10, scope: !3525)
!3533 = !DILocation(line: 105, column: 15, scope: !3525)
!3534 = !DILocation(line: 105, column: 13, scope: !3525)
!3535 = !DILocation(line: 105, column: 9, scope: !3525)
!3536 = !DILocation(line: 105, column: 26, scope: !3525)
!3537 = !DILocation(line: 105, column: 31, scope: !3525)
!3538 = !DILocation(line: 105, column: 29, scope: !3525)
!3539 = !DILocation(line: 105, column: 25, scope: !3525)
!3540 = !DILocation(line: 105, column: 2, scope: !3525)
!3541 = distinct !DISubprogram(name: "HX_strdup", scope: !304, file: !304, line: 132, type: !1099, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3542 = !DILocalVariable(name: "src", arg: 1, scope: !3541, file: !304, line: 132, type: !120)
!3543 = !DILocation(line: 132, column: 43, scope: !3541)
!3544 = !DILocation(line: 134, column: 6, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !304, line: 134, column: 6)
!3546 = !DILocation(line: 134, column: 10, scope: !3545)
!3547 = !DILocation(line: 134, column: 6, scope: !3541)
!3548 = !DILocation(line: 135, column: 3, scope: !3545)
!3549 = !DILocation(line: 139, column: 19, scope: !3541)
!3550 = !DILocation(line: 139, column: 31, scope: !3541)
!3551 = !DILocation(line: 139, column: 24, scope: !3541)
!3552 = !DILocation(line: 139, column: 36, scope: !3541)
!3553 = !DILocation(line: 139, column: 9, scope: !3541)
!3554 = !DILocation(line: 139, column: 2, scope: !3541)
!3555 = !DILocation(line: 141, column: 1, scope: !3541)
!3556 = distinct !DISubprogram(name: "HX_memdup", scope: !304, file: !304, line: 104, type: !162, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3557 = !DILocalVariable(name: "buf", arg: 1, scope: !3556, file: !304, line: 104, type: !90)
!3558 = !DILocation(line: 104, column: 43, scope: !3556)
!3559 = !DILocalVariable(name: "len", arg: 2, scope: !3556, file: !304, line: 104, type: !157)
!3560 = !DILocation(line: 104, column: 55, scope: !3556)
!3561 = !DILocalVariable(name: "ret", scope: !3556, file: !304, line: 106, type: !89)
!3562 = !DILocation(line: 106, column: 8, scope: !3556)
!3563 = !DILocation(line: 107, column: 20, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3556, file: !304, line: 107, column: 6)
!3565 = !DILocation(line: 107, column: 13, scope: !3564)
!3566 = !DILocation(line: 107, column: 11, scope: !3564)
!3567 = !DILocation(line: 107, column: 26, scope: !3564)
!3568 = !DILocation(line: 107, column: 6, scope: !3556)
!3569 = !DILocation(line: 108, column: 3, scope: !3564)
!3570 = !DILocation(line: 109, column: 16, scope: !3556)
!3571 = !DILocation(line: 109, column: 21, scope: !3556)
!3572 = !DILocation(line: 109, column: 26, scope: !3556)
!3573 = !DILocation(line: 109, column: 9, scope: !3556)
!3574 = !DILocation(line: 109, column: 2, scope: !3556)
!3575 = !DILocation(line: 110, column: 1, scope: !3556)
!3576 = distinct !DISubprogram(name: "HXhash_jlookup3v", scope: !177, file: !177, line: 174, type: !172, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3577 = !DILocalVariable(name: "p", arg: 1, scope: !3576, file: !177, line: 174, type: !90)
!3578 = !DILocation(line: 174, column: 51, scope: !3576)
!3579 = !DILocalVariable(name: "z", arg: 2, scope: !3576, file: !177, line: 174, type: !157)
!3580 = !DILocation(line: 174, column: 61, scope: !3576)
!3581 = !DILocation(line: 176, column: 25, scope: !3576)
!3582 = !DILocation(line: 176, column: 9, scope: !3576)
!3583 = !DILocation(line: 176, column: 2, scope: !3576)
!3584 = distinct !DISubprogram(name: "HXhmap_layout", scope: !177, file: !177, line: 294, type: !3585, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!14, !2861, !7}
!3587 = !DILocalVariable(name: "hmap", arg: 1, scope: !3584, file: !177, line: 294, type: !2861)
!3588 = !DILocation(line: 294, column: 41, scope: !3584)
!3589 = !DILocalVariable(name: "power", arg: 2, scope: !3584, file: !177, line: 294, type: !7)
!3590 = !DILocation(line: 294, column: 60, scope: !3584)
!3591 = !DILocalVariable(name: "bk_number", scope: !3584, file: !177, line: 296, type: !259)
!3592 = !DILocation(line: 296, column: 21, scope: !3584)
!3593 = !DILocation(line: 296, column: 47, scope: !3584)
!3594 = !DILocation(line: 296, column: 33, scope: !3584)
!3595 = !DILocalVariable(name: "bk_array", scope: !3584, file: !177, line: 297, type: !241)
!3596 = !DILocation(line: 297, column: 22, scope: !3584)
!3597 = !DILocalVariable(name: "old_array", scope: !3584, file: !177, line: 297, type: !241)
!3598 = !DILocation(line: 297, column: 33, scope: !3584)
!3599 = !DILocalVariable(name: "i", scope: !3584, file: !177, line: 298, type: !7)
!3600 = !DILocation(line: 298, column: 15, scope: !3584)
!3601 = !DILocation(line: 300, column: 20, scope: !3584)
!3602 = !DILocation(line: 300, column: 30, scope: !3584)
!3603 = !DILocation(line: 300, column: 13, scope: !3584)
!3604 = !DILocation(line: 300, column: 11, scope: !3584)
!3605 = !DILocation(line: 301, column: 6, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3584, file: !177, line: 301, column: 6)
!3607 = !DILocation(line: 301, column: 15, scope: !3606)
!3608 = !DILocation(line: 301, column: 6, scope: !3584)
!3609 = !DILocation(line: 302, column: 11, scope: !3606)
!3610 = !DILocation(line: 302, column: 10, scope: !3606)
!3611 = !DILocation(line: 302, column: 3, scope: !3606)
!3612 = !DILocation(line: 303, column: 9, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3584, file: !177, line: 303, column: 2)
!3614 = !DILocation(line: 303, column: 7, scope: !3613)
!3615 = !DILocation(line: 303, column: 14, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3613, file: !177, line: 303, column: 2)
!3617 = !DILocation(line: 303, column: 18, scope: !3616)
!3618 = !DILocation(line: 303, column: 16, scope: !3616)
!3619 = !DILocation(line: 303, column: 2, scope: !3613)
!3620 = !DILocation(line: 304, column: 16, scope: !3616)
!3621 = !DILocation(line: 304, column: 25, scope: !3616)
!3622 = !DILocation(line: 304, column: 3, scope: !3616)
!3623 = !DILocation(line: 303, column: 29, scope: !3616)
!3624 = !DILocation(line: 303, column: 2, scope: !3616)
!3625 = distinct !{!3625, !3619, !3626}
!3626 = !DILocation(line: 304, column: 27, scope: !3613)
!3627 = !DILocation(line: 305, column: 6, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3584, file: !177, line: 305, column: 6)
!3629 = !DILocation(line: 305, column: 12, scope: !3628)
!3630 = !DILocation(line: 305, column: 21, scope: !3628)
!3631 = !DILocation(line: 305, column: 6, scope: !3584)
!3632 = !DILocation(line: 306, column: 15, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3628, file: !177, line: 305, column: 30)
!3634 = !DILocation(line: 306, column: 25, scope: !3633)
!3635 = !DILocation(line: 306, column: 36, scope: !3633)
!3636 = !DILocation(line: 306, column: 3, scope: !3633)
!3637 = !DILocation(line: 307, column: 15, scope: !3633)
!3638 = !DILocation(line: 307, column: 21, scope: !3633)
!3639 = !DILocation(line: 307, column: 13, scope: !3633)
!3640 = !DILocation(line: 313, column: 5, scope: !3633)
!3641 = !DILocation(line: 313, column: 11, scope: !3633)
!3642 = !DILocation(line: 313, column: 3, scope: !3633)
!3643 = !DILocation(line: 314, column: 2, scope: !3633)
!3644 = !DILocation(line: 315, column: 19, scope: !3584)
!3645 = !DILocation(line: 315, column: 2, scope: !3584)
!3646 = !DILocation(line: 315, column: 8, scope: !3584)
!3647 = !DILocation(line: 315, column: 17, scope: !3584)
!3648 = !DILocation(line: 316, column: 20, scope: !3584)
!3649 = !DILocation(line: 316, column: 26, scope: !3584)
!3650 = !DILocation(line: 316, column: 19, scope: !3584)
!3651 = !DILocation(line: 316, column: 48, scope: !3584)
!3652 = !DILocation(line: 316, column: 34, scope: !3584)
!3653 = !DILocation(line: 316, column: 55, scope: !3584)
!3654 = !DILocation(line: 316, column: 2, scope: !3584)
!3655 = !DILocation(line: 316, column: 8, scope: !3584)
!3656 = !DILocation(line: 316, column: 17, scope: !3584)
!3657 = !DILocation(line: 317, column: 47, scope: !3584)
!3658 = !DILocation(line: 317, column: 33, scope: !3584)
!3659 = !DILocation(line: 317, column: 19, scope: !3584)
!3660 = !DILocation(line: 317, column: 2, scope: !3584)
!3661 = !DILocation(line: 317, column: 8, scope: !3584)
!3662 = !DILocation(line: 317, column: 17, scope: !3584)
!3663 = !DILocation(line: 318, column: 19, scope: !3584)
!3664 = !DILocation(line: 318, column: 2, scope: !3584)
!3665 = !DILocation(line: 318, column: 8, scope: !3584)
!3666 = !DILocation(line: 318, column: 17, scope: !3584)
!3667 = !DILocation(line: 319, column: 7, scope: !3584)
!3668 = !DILocation(line: 319, column: 2, scope: !3584)
!3669 = !DILocation(line: 320, column: 2, scope: !3584)
!3670 = !DILocation(line: 321, column: 1, scope: !3584)
!3671 = distinct !DISubprogram(name: "HXlist_init", scope: !238, file: !238, line: 26, type: !3672, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{null, !241}
!3674 = !DILocalVariable(name: "list", arg: 1, scope: !3671, file: !238, line: 26, type: !241)
!3675 = !DILocation(line: 26, column: 52, scope: !3671)
!3676 = !DILocation(line: 28, column: 28, scope: !3671)
!3677 = !DILocation(line: 28, column: 15, scope: !3671)
!3678 = !DILocation(line: 28, column: 21, scope: !3671)
!3679 = !DILocation(line: 28, column: 26, scope: !3671)
!3680 = !DILocation(line: 28, column: 2, scope: !3671)
!3681 = !DILocation(line: 28, column: 8, scope: !3671)
!3682 = !DILocation(line: 28, column: 13, scope: !3671)
!3683 = !DILocation(line: 29, column: 1, scope: !3671)
!3684 = distinct !DISubprogram(name: "HXhmap_move", scope: !177, file: !177, line: 273, type: !3685, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{null, !241, !7, !2861}
!3687 = !DILocalVariable(name: "bk_array", arg: 1, scope: !3684, file: !177, line: 273, type: !241)
!3688 = !DILocation(line: 273, column: 45, scope: !3684)
!3689 = !DILocalVariable(name: "bk_number", arg: 2, scope: !3684, file: !177, line: 273, type: !7)
!3690 = !DILocation(line: 273, column: 68, scope: !3684)
!3691 = !DILocalVariable(name: "hmap", arg: 3, scope: !3684, file: !177, line: 274, type: !2861)
!3692 = !DILocation(line: 274, column: 20, scope: !3684)
!3693 = !DILocalVariable(name: "drop", scope: !3684, file: !177, line: 276, type: !233)
!3694 = !DILocation(line: 276, column: 22, scope: !3684)
!3695 = !DILocalVariable(name: "dnext", scope: !3684, file: !177, line: 276, type: !233)
!3696 = !DILocation(line: 276, column: 29, scope: !3684)
!3697 = !DILocalVariable(name: "bk_idx", scope: !3684, file: !177, line: 277, type: !7)
!3698 = !DILocation(line: 277, column: 15, scope: !3684)
!3699 = !DILocalVariable(name: "i", scope: !3684, file: !177, line: 277, type: !7)
!3700 = !DILocation(line: 277, column: 23, scope: !3684)
!3701 = !DILocation(line: 279, column: 9, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3684, file: !177, line: 279, column: 2)
!3703 = !DILocation(line: 279, column: 7, scope: !3702)
!3704 = !DILocation(line: 279, column: 14, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3702, file: !177, line: 279, column: 2)
!3706 = !DILocation(line: 279, column: 32, scope: !3705)
!3707 = !DILocation(line: 279, column: 38, scope: !3705)
!3708 = !DILocation(line: 279, column: 18, scope: !3705)
!3709 = !DILocation(line: 279, column: 16, scope: !3705)
!3710 = !DILocation(line: 279, column: 2, scope: !3702)
!3711 = !DILocation(line: 280, column: 3, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3705, file: !177, line: 280, column: 3)
!3713 = !DILocation(line: 280, column: 3, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3712, file: !177, line: 280, column: 3)
!3715 = !DILocation(line: 282, column: 13, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3714, file: !177, line: 281, column: 35)
!3717 = !DILocation(line: 282, column: 19, scope: !3716)
!3718 = !DILocation(line: 282, column: 25, scope: !3716)
!3719 = !DILocation(line: 282, column: 29, scope: !3716)
!3720 = !DILocation(line: 282, column: 36, scope: !3716)
!3721 = !DILocation(line: 282, column: 42, scope: !3716)
!3722 = !DILocation(line: 283, column: 13, scope: !3716)
!3723 = !DILocation(line: 283, column: 19, scope: !3716)
!3724 = !DILocation(line: 283, column: 25, scope: !3716)
!3725 = !DILocation(line: 283, column: 37, scope: !3716)
!3726 = !DILocation(line: 283, column: 35, scope: !3716)
!3727 = !DILocation(line: 282, column: 11, scope: !3716)
!3728 = !DILocation(line: 284, column: 16, scope: !3716)
!3729 = !DILocation(line: 284, column: 22, scope: !3716)
!3730 = !DILocation(line: 284, column: 4, scope: !3716)
!3731 = !DILocation(line: 285, column: 21, scope: !3716)
!3732 = !DILocation(line: 285, column: 30, scope: !3716)
!3733 = !DILocation(line: 285, column: 40, scope: !3716)
!3734 = !DILocation(line: 285, column: 46, scope: !3716)
!3735 = !DILocation(line: 285, column: 4, scope: !3716)
!3736 = !DILocation(line: 286, column: 3, scope: !3716)
!3737 = distinct !{!3737, !3711, !3738}
!3738 = !DILocation(line: 286, column: 3, scope: !3712)
!3739 = !DILocation(line: 279, column: 46, scope: !3705)
!3740 = !DILocation(line: 279, column: 2, scope: !3705)
!3741 = distinct !{!3741, !3710, !3742}
!3742 = !DILocation(line: 286, column: 3, scope: !3702)
!3743 = !DILocation(line: 287, column: 1, scope: !3684)
!3744 = distinct !DISubprogram(name: "x_frac", scope: !177, file: !177, line: 261, type: !3745, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!7, !7, !7, !7}
!3747 = !DILocalVariable(name: "n", arg: 1, scope: !3744, file: !177, line: 261, type: !7)
!3748 = !DILocation(line: 261, column: 48, scope: !3744)
!3749 = !DILocalVariable(name: "d", arg: 2, scope: !3744, file: !177, line: 261, type: !7)
!3750 = !DILocation(line: 261, column: 64, scope: !3744)
!3751 = !DILocalVariable(name: "v", arg: 3, scope: !3744, file: !177, line: 262, type: !7)
!3752 = !DILocation(line: 262, column: 18, scope: !3744)
!3753 = !DILocation(line: 264, column: 10, scope: !3744)
!3754 = !DILocation(line: 264, column: 14, scope: !3744)
!3755 = !DILocation(line: 264, column: 12, scope: !3744)
!3756 = !DILocation(line: 264, column: 19, scope: !3744)
!3757 = !DILocation(line: 264, column: 17, scope: !3744)
!3758 = !DILocation(line: 264, column: 24, scope: !3744)
!3759 = !DILocation(line: 264, column: 28, scope: !3744)
!3760 = !DILocation(line: 264, column: 26, scope: !3744)
!3761 = !DILocation(line: 264, column: 33, scope: !3744)
!3762 = !DILocation(line: 264, column: 31, scope: !3744)
!3763 = !DILocation(line: 264, column: 37, scope: !3744)
!3764 = !DILocation(line: 264, column: 35, scope: !3744)
!3765 = !DILocation(line: 264, column: 21, scope: !3744)
!3766 = !DILocation(line: 264, column: 2, scope: !3744)
!3767 = distinct !DISubprogram(name: "HXlist_del", scope: !238, file: !238, line: 52, type: !3672, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3768 = !DILocalVariable(name: "entry", arg: 1, scope: !3767, file: !238, line: 52, type: !241)
!3769 = !DILocation(line: 52, column: 51, scope: !3767)
!3770 = !DILocation(line: 54, column: 22, scope: !3767)
!3771 = !DILocation(line: 54, column: 29, scope: !3767)
!3772 = !DILocation(line: 54, column: 2, scope: !3767)
!3773 = !DILocation(line: 54, column: 9, scope: !3767)
!3774 = !DILocation(line: 54, column: 15, scope: !3767)
!3775 = !DILocation(line: 54, column: 20, scope: !3767)
!3776 = !DILocation(line: 55, column: 22, scope: !3767)
!3777 = !DILocation(line: 55, column: 29, scope: !3767)
!3778 = !DILocation(line: 55, column: 2, scope: !3767)
!3779 = !DILocation(line: 55, column: 9, scope: !3767)
!3780 = !DILocation(line: 55, column: 15, scope: !3767)
!3781 = !DILocation(line: 55, column: 20, scope: !3767)
!3782 = !DILocation(line: 56, column: 2, scope: !3767)
!3783 = !DILocation(line: 56, column: 9, scope: !3767)
!3784 = !DILocation(line: 56, column: 14, scope: !3767)
!3785 = !DILocation(line: 57, column: 2, scope: !3767)
!3786 = !DILocation(line: 57, column: 9, scope: !3767)
!3787 = !DILocation(line: 57, column: 14, scope: !3767)
!3788 = !DILocation(line: 58, column: 1, scope: !3767)
!3789 = distinct !DISubprogram(name: "HXlist_add_tail", scope: !238, file: !238, line: 46, type: !3790, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{null, !241, !241}
!3792 = !DILocalVariable(name: "head", arg: 1, scope: !3789, file: !238, line: 46, type: !241)
!3793 = !DILocation(line: 46, column: 56, scope: !3789)
!3794 = !DILocalVariable(name: "entry", arg: 2, scope: !3789, file: !238, line: 47, type: !241)
!3795 = !DILocation(line: 47, column: 25, scope: !3789)
!3796 = !DILocation(line: 49, column: 15, scope: !3789)
!3797 = !DILocation(line: 49, column: 22, scope: !3789)
!3798 = !DILocation(line: 49, column: 28, scope: !3789)
!3799 = !DILocation(line: 49, column: 34, scope: !3789)
!3800 = !DILocation(line: 49, column: 2, scope: !3789)
!3801 = !DILocation(line: 50, column: 1, scope: !3789)
!3802 = distinct !DISubprogram(name: "__HXlist_add", scope: !238, file: !238, line: 31, type: !3803, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{null, !241, !241, !241}
!3805 = !DILocalVariable(name: "nu", arg: 1, scope: !3802, file: !238, line: 31, type: !241)
!3806 = !DILocation(line: 31, column: 53, scope: !3802)
!3807 = !DILocalVariable(name: "prev", arg: 2, scope: !3802, file: !238, line: 32, type: !241)
!3808 = !DILocation(line: 32, column: 25, scope: !3802)
!3809 = !DILocalVariable(name: "next", arg: 3, scope: !3802, file: !238, line: 32, type: !241)
!3810 = !DILocation(line: 32, column: 51, scope: !3802)
!3811 = !DILocation(line: 34, column: 13, scope: !3802)
!3812 = !DILocation(line: 34, column: 2, scope: !3802)
!3813 = !DILocation(line: 34, column: 6, scope: !3802)
!3814 = !DILocation(line: 34, column: 11, scope: !3802)
!3815 = !DILocation(line: 35, column: 13, scope: !3802)
!3816 = !DILocation(line: 35, column: 2, scope: !3802)
!3817 = !DILocation(line: 35, column: 6, scope: !3802)
!3818 = !DILocation(line: 35, column: 11, scope: !3802)
!3819 = !DILocation(line: 36, column: 15, scope: !3802)
!3820 = !DILocation(line: 36, column: 2, scope: !3802)
!3821 = !DILocation(line: 36, column: 8, scope: !3802)
!3822 = !DILocation(line: 36, column: 13, scope: !3802)
!3823 = !DILocation(line: 37, column: 15, scope: !3802)
!3824 = !DILocation(line: 37, column: 2, scope: !3802)
!3825 = !DILocation(line: 37, column: 8, scope: !3802)
!3826 = !DILocation(line: 37, column: 13, scope: !3802)
!3827 = !DILocation(line: 38, column: 1, scope: !3802)
!3828 = distinct !DISubprogram(name: "HXmap_init", scope: !177, file: !177, line: 402, type: !3829, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!2831, !5, !7}
!3831 = !DILocalVariable(name: "type", arg: 1, scope: !3828, file: !177, line: 402, type: !5)
!3832 = !DILocation(line: 402, column: 56, scope: !3828)
!3833 = !DILocalVariable(name: "flags", arg: 2, scope: !3828, file: !177, line: 403, type: !7)
!3834 = !DILocation(line: 403, column: 18, scope: !3828)
!3835 = !DILocation(line: 405, column: 21, scope: !3828)
!3836 = !DILocation(line: 405, column: 27, scope: !3828)
!3837 = !DILocation(line: 405, column: 9, scope: !3828)
!3838 = !DILocation(line: 405, column: 2, scope: !3828)
!3839 = distinct !DISubprogram(name: "HXmap_find", scope: !177, file: !177, line: 440, type: !3840, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!3842, !3856, !90}
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3844)
!3844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap_node", file: !6, line: 87, size: 128, elements: !3845)
!3845 = !{!3846, !3851}
!3846 = !DIDerivedType(tag: DW_TAG_member, scope: !3844, file: !6, line: 88, baseType: !3847, size: 64)
!3847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3844, file: !6, line: 88, size: 64, elements: !3848)
!3848 = !{!3849, !3850}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3847, file: !6, line: 89, baseType: !89, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "skey", scope: !3847, file: !6, line: 90, baseType: !119, size: 64)
!3851 = !DIDerivedType(tag: DW_TAG_member, scope: !3844, file: !6, line: 92, baseType: !3852, size: 64, offset: 64)
!3852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3844, file: !6, line: 92, size: 64, elements: !3853)
!3853 = !{!3854, !3855}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3852, file: !6, line: 93, baseType: !89, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "sdata", scope: !3852, file: !6, line: 94, baseType: !92, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2832)
!3858 = !DILocalVariable(name: "xmap", arg: 1, scope: !3839, file: !177, line: 440, type: !3856)
!3859 = !DILocation(line: 440, column: 32, scope: !3839)
!3860 = !DILocalVariable(name: "key", arg: 2, scope: !3839, file: !177, line: 440, type: !90)
!3861 = !DILocation(line: 440, column: 50, scope: !3839)
!3862 = !DILocalVariable(name: "vmap", scope: !3839, file: !177, line: 442, type: !90)
!3863 = !DILocation(line: 442, column: 14, scope: !3839)
!3864 = !DILocation(line: 442, column: 21, scope: !3839)
!3865 = !DILocalVariable(name: "map", scope: !3839, file: !177, line: 443, type: !2842)
!3866 = !DILocation(line: 443, column: 30, scope: !3839)
!3867 = !DILocation(line: 443, column: 36, scope: !3839)
!3868 = !DILocation(line: 445, column: 10, scope: !3839)
!3869 = !DILocation(line: 445, column: 15, scope: !3839)
!3870 = !DILocation(line: 445, column: 2, scope: !3839)
!3871 = !DILocalVariable(name: "node", scope: !3872, file: !177, line: 447, type: !253)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !177, line: 446, column: 20)
!3873 = distinct !DILexicalBlock(scope: !3839, file: !177, line: 445, column: 21)
!3874 = !DILocation(line: 447, column: 29, scope: !3872)
!3875 = !DILocation(line: 447, column: 48, scope: !3872)
!3876 = !DILocation(line: 447, column: 54, scope: !3872)
!3877 = !DILocation(line: 447, column: 36, scope: !3872)
!3878 = !DILocation(line: 448, column: 7, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3872, file: !177, line: 448, column: 7)
!3880 = !DILocation(line: 448, column: 12, scope: !3879)
!3881 = !DILocation(line: 448, column: 7, scope: !3872)
!3882 = !DILocation(line: 449, column: 4, scope: !3879)
!3883 = !DILocation(line: 450, column: 10, scope: !3872)
!3884 = !DILocation(line: 450, column: 3, scope: !3872)
!3885 = !DILocation(line: 453, column: 24, scope: !3873)
!3886 = !DILocation(line: 453, column: 30, scope: !3873)
!3887 = !DILocation(line: 453, column: 10, scope: !3873)
!3888 = !DILocation(line: 453, column: 3, scope: !3873)
!3889 = !DILocation(line: 455, column: 3, scope: !3873)
!3890 = !DILocation(line: 455, column: 9, scope: !3873)
!3891 = !DILocation(line: 456, column: 3, scope: !3873)
!3892 = !DILocation(line: 458, column: 1, scope: !3839)
!3893 = distinct !DISubprogram(name: "HXhmap_find", scope: !177, file: !177, line: 408, type: !3894, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!233, !3896, !90}
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2862)
!3898 = !DILocalVariable(name: "hmap", arg: 1, scope: !3893, file: !177, line: 408, type: !3896)
!3899 = !DILocation(line: 408, column: 61, scope: !3893)
!3900 = !DILocalVariable(name: "key", arg: 2, scope: !3893, file: !177, line: 409, type: !90)
!3901 = !DILocation(line: 409, column: 17, scope: !3893)
!3902 = !DILocalVariable(name: "drop", scope: !3893, file: !177, line: 411, type: !233)
!3903 = !DILocation(line: 411, column: 22, scope: !3893)
!3904 = !DILocalVariable(name: "bk_idx", scope: !3893, file: !177, line: 412, type: !7)
!3905 = !DILocation(line: 412, column: 15, scope: !3893)
!3906 = !DILocation(line: 414, column: 11, scope: !3893)
!3907 = !DILocation(line: 414, column: 17, scope: !3893)
!3908 = !DILocation(line: 414, column: 23, scope: !3893)
!3909 = !DILocation(line: 414, column: 27, scope: !3893)
!3910 = !DILocation(line: 414, column: 34, scope: !3893)
!3911 = !DILocation(line: 414, column: 39, scope: !3893)
!3912 = !DILocation(line: 414, column: 45, scope: !3893)
!3913 = !DILocation(line: 414, column: 51, scope: !3893)
!3914 = !DILocation(line: 415, column: 25, scope: !3893)
!3915 = !DILocation(line: 415, column: 31, scope: !3893)
!3916 = !DILocation(line: 415, column: 11, scope: !3893)
!3917 = !DILocation(line: 414, column: 61, scope: !3893)
!3918 = !DILocation(line: 414, column: 9, scope: !3893)
!3919 = !DILocation(line: 416, column: 2, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3893, file: !177, line: 416, column: 2)
!3921 = !DILocation(line: 416, column: 2, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3920, file: !177, line: 416, column: 2)
!3923 = !DILocation(line: 417, column: 7, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3922, file: !177, line: 417, column: 7)
!3925 = !DILocation(line: 417, column: 13, scope: !3924)
!3926 = !DILocation(line: 417, column: 19, scope: !3924)
!3927 = !DILocation(line: 417, column: 23, scope: !3924)
!3928 = !DILocation(line: 417, column: 33, scope: !3924)
!3929 = !DILocation(line: 417, column: 38, scope: !3924)
!3930 = !DILocation(line: 417, column: 44, scope: !3924)
!3931 = !DILocation(line: 418, column: 7, scope: !3924)
!3932 = !DILocation(line: 418, column: 13, scope: !3924)
!3933 = !DILocation(line: 418, column: 19, scope: !3924)
!3934 = !DILocation(line: 418, column: 29, scope: !3924)
!3935 = !DILocation(line: 417, column: 7, scope: !3922)
!3936 = !DILocation(line: 419, column: 11, scope: !3924)
!3937 = !DILocation(line: 419, column: 4, scope: !3924)
!3938 = !DILocation(line: 418, column: 32, scope: !3924)
!3939 = distinct !{!3939, !3919, !3940}
!3940 = !DILocation(line: 419, column: 11, scope: !3920)
!3941 = !DILocation(line: 420, column: 2, scope: !3893)
!3942 = !DILocation(line: 421, column: 1, scope: !3893)
!3943 = distinct !DISubprogram(name: "HXrbtree_find", scope: !177, file: !177, line: 423, type: !3944, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!3842, !2956, !90}
!3946 = !DILocalVariable(name: "btree", arg: 1, scope: !3943, file: !177, line: 423, type: !2956)
!3947 = !DILocation(line: 423, column: 70, scope: !3943)
!3948 = !DILocalVariable(name: "key", arg: 2, scope: !3943, file: !177, line: 424, type: !90)
!3949 = !DILocation(line: 424, column: 17, scope: !3943)
!3950 = !DILocalVariable(name: "node", scope: !3943, file: !177, line: 426, type: !215)
!3951 = !DILocation(line: 426, column: 24, scope: !3943)
!3952 = !DILocation(line: 426, column: 31, scope: !3943)
!3953 = !DILocation(line: 426, column: 38, scope: !3943)
!3954 = !DILocalVariable(name: "res", scope: !3943, file: !177, line: 427, type: !14)
!3955 = !DILocation(line: 427, column: 6, scope: !3943)
!3956 = !DILocation(line: 429, column: 2, scope: !3943)
!3957 = !DILocation(line: 429, column: 9, scope: !3943)
!3958 = !DILocation(line: 429, column: 14, scope: !3943)
!3959 = !DILocation(line: 430, column: 14, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !177, line: 430, column: 7)
!3961 = distinct !DILexicalBlock(scope: !3943, file: !177, line: 429, column: 23)
!3962 = !DILocation(line: 430, column: 21, scope: !3960)
!3963 = !DILocation(line: 430, column: 27, scope: !3960)
!3964 = !DILocation(line: 430, column: 31, scope: !3960)
!3965 = !DILocation(line: 430, column: 41, scope: !3960)
!3966 = !DILocation(line: 431, column: 7, scope: !3960)
!3967 = !DILocation(line: 431, column: 13, scope: !3960)
!3968 = !DILocation(line: 431, column: 18, scope: !3960)
!3969 = !DILocation(line: 431, column: 25, scope: !3960)
!3970 = !DILocation(line: 431, column: 31, scope: !3960)
!3971 = !DILocation(line: 430, column: 12, scope: !3960)
!3972 = !DILocation(line: 431, column: 42, scope: !3960)
!3973 = !DILocation(line: 430, column: 7, scope: !3961)
!3974 = !DILocation(line: 432, column: 11, scope: !3960)
!3975 = !DILocation(line: 432, column: 4, scope: !3960)
!3976 = !DILocation(line: 433, column: 10, scope: !3961)
!3977 = !DILocation(line: 433, column: 16, scope: !3961)
!3978 = !DILocation(line: 433, column: 20, scope: !3961)
!3979 = !DILocation(line: 433, column: 24, scope: !3961)
!3980 = !DILocation(line: 433, column: 8, scope: !3961)
!3981 = distinct !{!3981, !3956, !3982}
!3982 = !DILocation(line: 434, column: 2, scope: !3943)
!3983 = !DILocation(line: 436, column: 2, scope: !3943)
!3984 = !DILocation(line: 437, column: 1, scope: !3943)
!3985 = distinct !DISubprogram(name: "HXmap_get", scope: !177, file: !177, line: 460, type: !3986, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!89, !3856, !90}
!3988 = !DILocalVariable(name: "map", arg: 1, scope: !3985, file: !177, line: 460, type: !3856)
!3989 = !DILocation(line: 460, column: 51, scope: !3985)
!3990 = !DILocalVariable(name: "key", arg: 2, scope: !3985, file: !177, line: 460, type: !90)
!3991 = !DILocation(line: 460, column: 68, scope: !3985)
!3992 = !DILocalVariable(name: "node", scope: !3985, file: !177, line: 462, type: !3842)
!3993 = !DILocation(line: 462, column: 27, scope: !3985)
!3994 = !DILocation(line: 464, column: 25, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3985, file: !177, line: 464, column: 6)
!3996 = !DILocation(line: 464, column: 30, scope: !3995)
!3997 = !DILocation(line: 464, column: 14, scope: !3995)
!3998 = !DILocation(line: 464, column: 12, scope: !3995)
!3999 = !DILocation(line: 464, column: 36, scope: !3995)
!4000 = !DILocation(line: 464, column: 6, scope: !3985)
!4001 = !DILocation(line: 465, column: 3, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3995, file: !177, line: 464, column: 45)
!4003 = !DILocation(line: 465, column: 9, scope: !4002)
!4004 = !DILocation(line: 466, column: 3, scope: !4002)
!4005 = !DILocation(line: 468, column: 2, scope: !3985)
!4006 = !DILocation(line: 468, column: 8, scope: !3985)
!4007 = !DILocation(line: 469, column: 9, scope: !3985)
!4008 = !DILocation(line: 469, column: 15, scope: !3985)
!4009 = !DILocation(line: 469, column: 2, scope: !3985)
!4010 = !DILocation(line: 470, column: 1, scope: !3985)
!4011 = distinct !DISubprogram(name: "HXmap_add", scope: !177, file: !177, line: 702, type: !4012, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!14, !2831, !90, !90}
!4014 = !DILocalVariable(name: "xmap", arg: 1, scope: !4011, file: !177, line: 702, type: !2831)
!4015 = !DILocation(line: 702, column: 43, scope: !4011)
!4016 = !DILocalVariable(name: "key", arg: 2, scope: !4011, file: !177, line: 703, type: !90)
!4017 = !DILocation(line: 703, column: 17, scope: !4011)
!4018 = !DILocalVariable(name: "value", arg: 3, scope: !4011, file: !177, line: 703, type: !90)
!4019 = !DILocation(line: 703, column: 34, scope: !4011)
!4020 = !DILocalVariable(name: "vmap", scope: !4011, file: !177, line: 705, type: !89)
!4021 = !DILocation(line: 705, column: 8, scope: !4011)
!4022 = !DILocation(line: 705, column: 15, scope: !4011)
!4023 = !DILocalVariable(name: "map", scope: !4011, file: !177, line: 706, type: !3233)
!4024 = !DILocation(line: 706, column: 24, scope: !4011)
!4025 = !DILocation(line: 706, column: 30, scope: !4011)
!4026 = !DILocation(line: 708, column: 7, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4011, file: !177, line: 708, column: 6)
!4028 = !DILocation(line: 708, column: 12, scope: !4027)
!4029 = !DILocation(line: 708, column: 18, scope: !4027)
!4030 = !DILocation(line: 708, column: 36, scope: !4027)
!4031 = !DILocation(line: 708, column: 39, scope: !4027)
!4032 = !DILocation(line: 708, column: 45, scope: !4027)
!4033 = !DILocation(line: 708, column: 6, scope: !4011)
!4034 = !DILocation(line: 709, column: 11, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4027, file: !177, line: 708, column: 54)
!4036 = !DILocation(line: 709, column: 3, scope: !4035)
!4037 = !DILocation(line: 711, column: 3, scope: !4035)
!4038 = !DILocation(line: 714, column: 10, scope: !4011)
!4039 = !DILocation(line: 714, column: 15, scope: !4011)
!4040 = !DILocation(line: 714, column: 2, scope: !4011)
!4041 = !DILocation(line: 716, column: 21, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4011, file: !177, line: 714, column: 21)
!4043 = !DILocation(line: 716, column: 27, scope: !4042)
!4044 = !DILocation(line: 716, column: 32, scope: !4042)
!4045 = !DILocation(line: 716, column: 10, scope: !4042)
!4046 = !DILocation(line: 716, column: 3, scope: !4042)
!4047 = !DILocation(line: 718, column: 23, scope: !4042)
!4048 = !DILocation(line: 718, column: 29, scope: !4042)
!4049 = !DILocation(line: 718, column: 34, scope: !4042)
!4050 = !DILocation(line: 718, column: 10, scope: !4042)
!4051 = !DILocation(line: 718, column: 3, scope: !4042)
!4052 = !DILocation(line: 720, column: 3, scope: !4042)
!4053 = !DILocation(line: 722, column: 1, scope: !4011)
!4054 = distinct !DISubprogram(name: "HXhmap_add", scope: !177, file: !177, line: 493, type: !4055, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!14, !2861, !90, !90}
!4057 = !DILocalVariable(name: "hmap", arg: 1, scope: !4054, file: !177, line: 493, type: !2861)
!4058 = !DILocation(line: 493, column: 38, scope: !4054)
!4059 = !DILocalVariable(name: "key", arg: 2, scope: !4054, file: !177, line: 493, type: !90)
!4060 = !DILocation(line: 493, column: 56, scope: !4054)
!4061 = !DILocalVariable(name: "value", arg: 3, scope: !4054, file: !177, line: 493, type: !90)
!4062 = !DILocation(line: 493, column: 73, scope: !4054)
!4063 = !DILocalVariable(name: "drop", scope: !4054, file: !177, line: 495, type: !233)
!4064 = !DILocation(line: 495, column: 22, scope: !4054)
!4065 = !DILocalVariable(name: "bk_idx", scope: !4054, file: !177, line: 496, type: !7)
!4066 = !DILocation(line: 496, column: 15, scope: !4054)
!4067 = !DILocalVariable(name: "ret", scope: !4054, file: !177, line: 497, type: !14)
!4068 = !DILocation(line: 497, column: 6, scope: !4054)
!4069 = !DILocalVariable(name: "saved_errno", scope: !4054, file: !177, line: 497, type: !14)
!4070 = !DILocation(line: 497, column: 11, scope: !4054)
!4071 = !DILocation(line: 499, column: 26, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4054, file: !177, line: 499, column: 6)
!4073 = !DILocation(line: 499, column: 32, scope: !4072)
!4074 = !DILocation(line: 499, column: 14, scope: !4072)
!4075 = !DILocation(line: 499, column: 12, scope: !4072)
!4076 = !DILocation(line: 499, column: 38, scope: !4072)
!4077 = !DILocation(line: 499, column: 6, scope: !4054)
!4078 = !DILocation(line: 500, column: 25, scope: !4072)
!4079 = !DILocation(line: 500, column: 31, scope: !4072)
!4080 = !DILocation(line: 500, column: 37, scope: !4072)
!4081 = !DILocation(line: 500, column: 10, scope: !4072)
!4082 = !DILocation(line: 500, column: 3, scope: !4072)
!4083 = !DILocation(line: 502, column: 6, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4054, file: !177, line: 502, column: 6)
!4085 = !DILocation(line: 502, column: 12, scope: !4084)
!4086 = !DILocation(line: 502, column: 18, scope: !4084)
!4087 = !DILocation(line: 502, column: 27, scope: !4084)
!4088 = !DILocation(line: 502, column: 33, scope: !4084)
!4089 = !DILocation(line: 502, column: 24, scope: !4084)
!4090 = !DILocation(line: 502, column: 42, scope: !4084)
!4091 = !DILocation(line: 503, column: 6, scope: !4084)
!4092 = !DILocation(line: 503, column: 12, scope: !4084)
!4093 = !DILocation(line: 503, column: 18, scope: !4084)
!4094 = !DILocation(line: 502, column: 6, scope: !4054)
!4095 = !DILocation(line: 504, column: 28, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !177, line: 504, column: 7)
!4097 = distinct !DILexicalBlock(scope: !4084, file: !177, line: 503, column: 51)
!4098 = !DILocation(line: 504, column: 34, scope: !4096)
!4099 = !DILocation(line: 504, column: 40, scope: !4096)
!4100 = !DILocation(line: 504, column: 46, scope: !4096)
!4101 = !DILocation(line: 504, column: 14, scope: !4096)
!4102 = !DILocation(line: 504, column: 12, scope: !4096)
!4103 = !DILocation(line: 504, column: 52, scope: !4096)
!4104 = !DILocation(line: 504, column: 7, scope: !4097)
!4105 = !DILocation(line: 505, column: 11, scope: !4096)
!4106 = !DILocation(line: 505, column: 4, scope: !4096)
!4107 = !DILocation(line: 506, column: 2, scope: !4097)
!4108 = !DILocation(line: 506, column: 13, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4084, file: !177, line: 506, column: 13)
!4110 = !DILocation(line: 506, column: 19, scope: !4109)
!4111 = !DILocation(line: 506, column: 25, scope: !4109)
!4112 = !DILocation(line: 506, column: 33, scope: !4109)
!4113 = !DILocation(line: 506, column: 39, scope: !4109)
!4114 = !DILocation(line: 506, column: 31, scope: !4109)
!4115 = !DILocation(line: 506, column: 48, scope: !4109)
!4116 = !DILocation(line: 506, column: 51, scope: !4109)
!4117 = !DILocation(line: 506, column: 57, scope: !4109)
!4118 = !DILocation(line: 506, column: 63, scope: !4109)
!4119 = !DILocation(line: 506, column: 13, scope: !4084)
!4120 = !DILocation(line: 507, column: 28, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !177, line: 507, column: 7)
!4122 = distinct !DILexicalBlock(scope: !4109, file: !177, line: 506, column: 68)
!4123 = !DILocation(line: 507, column: 34, scope: !4121)
!4124 = !DILocation(line: 507, column: 40, scope: !4121)
!4125 = !DILocation(line: 507, column: 46, scope: !4121)
!4126 = !DILocation(line: 507, column: 14, scope: !4121)
!4127 = !DILocation(line: 507, column: 12, scope: !4121)
!4128 = !DILocation(line: 507, column: 52, scope: !4121)
!4129 = !DILocation(line: 507, column: 7, scope: !4122)
!4130 = !DILocation(line: 508, column: 11, scope: !4121)
!4131 = !DILocation(line: 508, column: 4, scope: !4121)
!4132 = !DILocation(line: 509, column: 2, scope: !4122)
!4133 = !DILocation(line: 512, column: 14, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4054, file: !177, line: 512, column: 6)
!4135 = !DILocation(line: 512, column: 12, scope: !4134)
!4136 = !DILocation(line: 512, column: 37, scope: !4134)
!4137 = !DILocation(line: 512, column: 6, scope: !4054)
!4138 = !DILocation(line: 513, column: 11, scope: !4134)
!4139 = !DILocation(line: 513, column: 10, scope: !4134)
!4140 = !DILocation(line: 513, column: 3, scope: !4134)
!4141 = !DILocation(line: 514, column: 15, scope: !4054)
!4142 = !DILocation(line: 514, column: 21, scope: !4054)
!4143 = !DILocation(line: 514, column: 2, scope: !4054)
!4144 = !DILocation(line: 515, column: 14, scope: !4054)
!4145 = !DILocation(line: 515, column: 20, scope: !4054)
!4146 = !DILocation(line: 515, column: 26, scope: !4054)
!4147 = !DILocation(line: 515, column: 30, scope: !4054)
!4148 = !DILocation(line: 515, column: 38, scope: !4054)
!4149 = !DILocation(line: 515, column: 43, scope: !4054)
!4150 = !DILocation(line: 515, column: 49, scope: !4054)
!4151 = !DILocation(line: 515, column: 55, scope: !4054)
!4152 = !DILocation(line: 515, column: 2, scope: !4054)
!4153 = !DILocation(line: 515, column: 8, scope: !4054)
!4154 = !DILocation(line: 515, column: 12, scope: !4054)
!4155 = !DILocation(line: 516, column: 6, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4054, file: !177, line: 516, column: 6)
!4157 = !DILocation(line: 516, column: 12, scope: !4156)
!4158 = !DILocation(line: 516, column: 16, scope: !4156)
!4159 = !DILocation(line: 516, column: 24, scope: !4156)
!4160 = !DILocation(line: 516, column: 27, scope: !4156)
!4161 = !DILocation(line: 516, column: 31, scope: !4156)
!4162 = !DILocation(line: 516, column: 6, scope: !4054)
!4163 = !DILocation(line: 517, column: 3, scope: !4156)
!4164 = !DILocation(line: 518, column: 15, scope: !4054)
!4165 = !DILocation(line: 518, column: 21, scope: !4054)
!4166 = !DILocation(line: 518, column: 27, scope: !4054)
!4167 = !DILocation(line: 518, column: 31, scope: !4054)
!4168 = !DILocation(line: 518, column: 39, scope: !4054)
!4169 = !DILocation(line: 518, column: 46, scope: !4054)
!4170 = !DILocation(line: 518, column: 52, scope: !4054)
!4171 = !DILocation(line: 518, column: 58, scope: !4054)
!4172 = !DILocation(line: 518, column: 2, scope: !4054)
!4173 = !DILocation(line: 518, column: 8, scope: !4054)
!4174 = !DILocation(line: 518, column: 13, scope: !4054)
!4175 = !DILocation(line: 519, column: 6, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4054, file: !177, line: 519, column: 6)
!4177 = !DILocation(line: 519, column: 12, scope: !4176)
!4178 = !DILocation(line: 519, column: 17, scope: !4176)
!4179 = !DILocation(line: 519, column: 25, scope: !4176)
!4180 = !DILocation(line: 519, column: 28, scope: !4176)
!4181 = !DILocation(line: 519, column: 34, scope: !4176)
!4182 = !DILocation(line: 519, column: 6, scope: !4054)
!4183 = !DILocation(line: 520, column: 3, scope: !4176)
!4184 = !DILocation(line: 522, column: 11, scope: !4054)
!4185 = !DILocation(line: 522, column: 17, scope: !4054)
!4186 = !DILocation(line: 522, column: 23, scope: !4054)
!4187 = !DILocation(line: 522, column: 27, scope: !4054)
!4188 = !DILocation(line: 522, column: 34, scope: !4054)
!4189 = !DILocation(line: 522, column: 39, scope: !4054)
!4190 = !DILocation(line: 522, column: 45, scope: !4054)
!4191 = !DILocation(line: 522, column: 51, scope: !4054)
!4192 = !DILocation(line: 523, column: 25, scope: !4054)
!4193 = !DILocation(line: 523, column: 31, scope: !4054)
!4194 = !DILocation(line: 523, column: 11, scope: !4054)
!4195 = !DILocation(line: 522, column: 61, scope: !4054)
!4196 = !DILocation(line: 522, column: 9, scope: !4054)
!4197 = !DILocation(line: 524, column: 19, scope: !4054)
!4198 = !DILocation(line: 524, column: 25, scope: !4054)
!4199 = !DILocation(line: 524, column: 34, scope: !4054)
!4200 = !DILocation(line: 524, column: 44, scope: !4054)
!4201 = !DILocation(line: 524, column: 50, scope: !4054)
!4202 = !DILocation(line: 524, column: 2, scope: !4054)
!4203 = !DILocation(line: 525, column: 4, scope: !4054)
!4204 = !DILocation(line: 525, column: 10, scope: !4054)
!4205 = !DILocation(line: 525, column: 16, scope: !4054)
!4206 = !DILocation(line: 525, column: 2, scope: !4054)
!4207 = !DILocation(line: 526, column: 2, scope: !4054)
!4208 = !DILocation(line: 529, column: 16, scope: !4054)
!4209 = !DILocation(line: 529, column: 14, scope: !4054)
!4210 = !DILocation(line: 530, column: 6, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4054, file: !177, line: 530, column: 6)
!4212 = !DILocation(line: 530, column: 12, scope: !4211)
!4213 = !DILocation(line: 530, column: 18, scope: !4211)
!4214 = !DILocation(line: 530, column: 22, scope: !4211)
!4215 = !DILocation(line: 530, column: 29, scope: !4211)
!4216 = !DILocation(line: 530, column: 6, scope: !4054)
!4217 = !DILocation(line: 531, column: 3, scope: !4211)
!4218 = !DILocation(line: 531, column: 9, scope: !4211)
!4219 = !DILocation(line: 531, column: 15, scope: !4211)
!4220 = !DILocation(line: 531, column: 19, scope: !4211)
!4221 = !DILocation(line: 531, column: 26, scope: !4211)
!4222 = !DILocation(line: 531, column: 32, scope: !4211)
!4223 = !DILocation(line: 532, column: 7, scope: !4054)
!4224 = !DILocation(line: 532, column: 2, scope: !4054)
!4225 = !DILocation(line: 533, column: 19, scope: !4054)
!4226 = !DILocation(line: 533, column: 11, scope: !4054)
!4227 = !DILocation(line: 533, column: 17, scope: !4054)
!4228 = !DILocation(line: 533, column: 9, scope: !4054)
!4229 = !DILocation(line: 533, column: 2, scope: !4054)
!4230 = !DILocation(line: 534, column: 1, scope: !4054)
!4231 = distinct !DISubprogram(name: "HXrbtree_add", scope: !177, file: !177, line: 625, type: !4232, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!14, !194, !90, !90}
!4234 = !DILocalVariable(name: "btree", arg: 1, scope: !4231, file: !177, line: 625, type: !194)
!4235 = !DILocation(line: 625, column: 42, scope: !4231)
!4236 = !DILocalVariable(name: "key", arg: 2, scope: !4231, file: !177, line: 626, type: !90)
!4237 = !DILocation(line: 626, column: 17, scope: !4231)
!4238 = !DILocalVariable(name: "value", arg: 3, scope: !4231, file: !177, line: 626, type: !90)
!4239 = !DILocation(line: 626, column: 34, scope: !4231)
!4240 = !DILocalVariable(name: "node", scope: !4231, file: !177, line: 628, type: !215)
!4241 = !DILocation(line: 628, column: 24, scope: !4231)
!4242 = !DILocalVariable(name: "path", scope: !4231, file: !177, line: 628, type: !4243)
!4243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 3072, elements: !4244)
!4244 = !{!4245}
!4245 = !DISubrange(count: 48)
!4246 = !DILocation(line: 628, column: 31, scope: !4231)
!4247 = !DILocalVariable(name: "dir", scope: !4231, file: !177, line: 629, type: !4248)
!4248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 384, elements: !4244)
!4249 = !DILocation(line: 629, column: 16, scope: !4231)
!4250 = !DILocalVariable(name: "depth", scope: !4231, file: !177, line: 630, type: !7)
!4251 = !DILocation(line: 630, column: 15, scope: !4231)
!4252 = !DILocalVariable(name: "saved_errno", scope: !4231, file: !177, line: 631, type: !14)
!4253 = !DILocation(line: 631, column: 6, scope: !4231)
!4254 = !DILocation(line: 639, column: 17, scope: !4231)
!4255 = !DILocation(line: 639, column: 7, scope: !4231)
!4256 = !DILocation(line: 639, column: 2, scope: !4231)
!4257 = !DILocation(line: 639, column: 15, scope: !4231)
!4258 = !DILocation(line: 640, column: 11, scope: !4231)
!4259 = !DILocation(line: 640, column: 2, scope: !4231)
!4260 = !DILocation(line: 640, column: 15, scope: !4231)
!4261 = !DILocation(line: 641, column: 9, scope: !4231)
!4262 = !DILocation(line: 641, column: 16, scope: !4231)
!4263 = !DILocation(line: 641, column: 7, scope: !4231)
!4264 = !DILocation(line: 643, column: 2, scope: !4231)
!4265 = !DILocation(line: 643, column: 9, scope: !4231)
!4266 = !DILocation(line: 643, column: 14, scope: !4231)
!4267 = !DILocalVariable(name: "res", scope: !4268, file: !177, line: 644, type: !14)
!4268 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 643, column: 23)
!4269 = !DILocation(line: 644, column: 7, scope: !4268)
!4270 = !DILocation(line: 644, column: 13, scope: !4268)
!4271 = !DILocation(line: 644, column: 20, scope: !4268)
!4272 = !DILocation(line: 644, column: 26, scope: !4268)
!4273 = !DILocation(line: 644, column: 30, scope: !4268)
!4274 = !DILocation(line: 644, column: 40, scope: !4268)
!4275 = !DILocation(line: 645, column: 13, scope: !4268)
!4276 = !DILocation(line: 645, column: 19, scope: !4268)
!4277 = !DILocation(line: 645, column: 24, scope: !4268)
!4278 = !DILocation(line: 645, column: 31, scope: !4268)
!4279 = !DILocation(line: 645, column: 37, scope: !4268)
!4280 = !DILocation(line: 646, column: 7, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4268, file: !177, line: 646, column: 7)
!4282 = !DILocation(line: 646, column: 11, scope: !4281)
!4283 = !DILocation(line: 646, column: 7, scope: !4268)
!4284 = !DILocation(line: 651, column: 28, scope: !4281)
!4285 = !DILocation(line: 651, column: 35, scope: !4281)
!4286 = !DILocation(line: 651, column: 41, scope: !4281)
!4287 = !DILocation(line: 651, column: 11, scope: !4281)
!4288 = !DILocation(line: 651, column: 4, scope: !4281)
!4289 = !DILocation(line: 653, column: 18, scope: !4268)
!4290 = !DILocation(line: 653, column: 22, scope: !4268)
!4291 = !DILocation(line: 653, column: 16, scope: !4268)
!4292 = !DILocation(line: 654, column: 18, scope: !4268)
!4293 = !DILocation(line: 654, column: 8, scope: !4268)
!4294 = !DILocation(line: 654, column: 3, scope: !4268)
!4295 = !DILocation(line: 654, column: 16, scope: !4268)
!4296 = !DILocation(line: 655, column: 18, scope: !4268)
!4297 = !DILocation(line: 655, column: 12, scope: !4268)
!4298 = !DILocation(line: 655, column: 3, scope: !4268)
!4299 = !DILocation(line: 655, column: 16, scope: !4268)
!4300 = !DILocation(line: 656, column: 18, scope: !4268)
!4301 = !DILocation(line: 656, column: 24, scope: !4268)
!4302 = !DILocation(line: 656, column: 28, scope: !4268)
!4303 = !DILocation(line: 656, column: 16, scope: !4268)
!4304 = distinct !{!4304, !4264, !4305}
!4305 = !DILocation(line: 657, column: 2, scope: !4231)
!4306 = !DILocation(line: 659, column: 14, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 659, column: 6)
!4308 = !DILocation(line: 659, column: 12, scope: !4307)
!4309 = !DILocation(line: 659, column: 52, scope: !4307)
!4310 = !DILocation(line: 659, column: 6, scope: !4231)
!4311 = !DILocation(line: 660, column: 11, scope: !4307)
!4312 = !DILocation(line: 660, column: 10, scope: !4307)
!4313 = !DILocation(line: 660, column: 3, scope: !4307)
!4314 = !DILocation(line: 663, column: 14, scope: !4231)
!4315 = !DILocation(line: 663, column: 21, scope: !4231)
!4316 = !DILocation(line: 663, column: 27, scope: !4231)
!4317 = !DILocation(line: 663, column: 31, scope: !4231)
!4318 = !DILocation(line: 663, column: 39, scope: !4231)
!4319 = !DILocation(line: 663, column: 44, scope: !4231)
!4320 = !DILocation(line: 663, column: 51, scope: !4231)
!4321 = !DILocation(line: 663, column: 57, scope: !4231)
!4322 = !DILocation(line: 663, column: 2, scope: !4231)
!4323 = !DILocation(line: 663, column: 8, scope: !4231)
!4324 = !DILocation(line: 663, column: 12, scope: !4231)
!4325 = !DILocation(line: 664, column: 6, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 664, column: 6)
!4327 = !DILocation(line: 664, column: 12, scope: !4326)
!4328 = !DILocation(line: 664, column: 16, scope: !4326)
!4329 = !DILocation(line: 664, column: 24, scope: !4326)
!4330 = !DILocation(line: 664, column: 27, scope: !4326)
!4331 = !DILocation(line: 664, column: 31, scope: !4326)
!4332 = !DILocation(line: 664, column: 6, scope: !4231)
!4333 = !DILocation(line: 665, column: 3, scope: !4326)
!4334 = !DILocation(line: 666, column: 15, scope: !4231)
!4335 = !DILocation(line: 666, column: 22, scope: !4231)
!4336 = !DILocation(line: 666, column: 28, scope: !4231)
!4337 = !DILocation(line: 666, column: 32, scope: !4231)
!4338 = !DILocation(line: 666, column: 40, scope: !4231)
!4339 = !DILocation(line: 666, column: 47, scope: !4231)
!4340 = !DILocation(line: 666, column: 54, scope: !4231)
!4341 = !DILocation(line: 666, column: 60, scope: !4231)
!4342 = !DILocation(line: 666, column: 2, scope: !4231)
!4343 = !DILocation(line: 666, column: 8, scope: !4231)
!4344 = !DILocation(line: 666, column: 13, scope: !4231)
!4345 = !DILocation(line: 667, column: 6, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 667, column: 6)
!4347 = !DILocation(line: 667, column: 12, scope: !4346)
!4348 = !DILocation(line: 667, column: 17, scope: !4346)
!4349 = !DILocation(line: 667, column: 25, scope: !4346)
!4350 = !DILocation(line: 667, column: 28, scope: !4346)
!4351 = !DILocation(line: 667, column: 34, scope: !4346)
!4352 = !DILocation(line: 667, column: 6, scope: !4231)
!4353 = !DILocation(line: 668, column: 3, scope: !4346)
!4354 = !DILocation(line: 675, column: 24, scope: !4231)
!4355 = !DILocation(line: 675, column: 30, scope: !4231)
!4356 = !DILocation(line: 675, column: 45, scope: !4231)
!4357 = !DILocation(line: 675, column: 2, scope: !4231)
!4358 = !DILocation(line: 675, column: 8, scope: !4231)
!4359 = !DILocation(line: 675, column: 22, scope: !4231)
!4360 = !DILocation(line: 676, column: 2, scope: !4231)
!4361 = !DILocation(line: 676, column: 8, scope: !4231)
!4362 = !DILocation(line: 676, column: 14, scope: !4231)
!4363 = !DILocation(line: 677, column: 37, scope: !4231)
!4364 = !DILocation(line: 677, column: 7, scope: !4231)
!4365 = !DILocation(line: 677, column: 12, scope: !4231)
!4366 = !DILocation(line: 677, column: 2, scope: !4231)
!4367 = !DILocation(line: 677, column: 17, scope: !4231)
!4368 = !DILocation(line: 677, column: 25, scope: !4231)
!4369 = !DILocation(line: 677, column: 30, scope: !4231)
!4370 = !DILocation(line: 677, column: 21, scope: !4231)
!4371 = !DILocation(line: 677, column: 35, scope: !4231)
!4372 = !DILocation(line: 678, column: 4, scope: !4231)
!4373 = !DILocation(line: 678, column: 11, scope: !4231)
!4374 = !DILocation(line: 678, column: 17, scope: !4231)
!4375 = !DILocation(line: 678, column: 2, scope: !4231)
!4376 = !DILocation(line: 686, column: 6, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 686, column: 6)
!4378 = !DILocation(line: 686, column: 12, scope: !4377)
!4379 = !DILocation(line: 686, column: 17, scope: !4377)
!4380 = !DILocation(line: 686, column: 25, scope: !4377)
!4381 = !DILocation(line: 686, column: 30, scope: !4377)
!4382 = !DILocation(line: 686, column: 20, scope: !4377)
!4383 = !DILocation(line: 686, column: 35, scope: !4377)
!4384 = !DILocation(line: 686, column: 41, scope: !4377)
!4385 = !DILocation(line: 686, column: 6, scope: !4231)
!4386 = !DILocation(line: 687, column: 17, scope: !4377)
!4387 = !DILocation(line: 687, column: 23, scope: !4377)
!4388 = !DILocation(line: 687, column: 28, scope: !4377)
!4389 = !DILocation(line: 687, column: 36, scope: !4377)
!4390 = !DILocation(line: 687, column: 43, scope: !4377)
!4391 = !DILocation(line: 687, column: 3, scope: !4377)
!4392 = !DILocation(line: 689, column: 2, scope: !4231)
!4393 = !DILocation(line: 689, column: 9, scope: !4231)
!4394 = !DILocation(line: 689, column: 15, scope: !4231)
!4395 = !DILocation(line: 689, column: 21, scope: !4231)
!4396 = !DILocation(line: 690, column: 2, scope: !4231)
!4397 = !DILocation(line: 693, column: 16, scope: !4231)
!4398 = !DILocation(line: 693, column: 14, scope: !4231)
!4399 = !DILocation(line: 694, column: 6, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 694, column: 6)
!4401 = !DILocation(line: 694, column: 13, scope: !4400)
!4402 = !DILocation(line: 694, column: 19, scope: !4400)
!4403 = !DILocation(line: 694, column: 23, scope: !4400)
!4404 = !DILocation(line: 694, column: 30, scope: !4400)
!4405 = !DILocation(line: 694, column: 6, scope: !4231)
!4406 = !DILocation(line: 695, column: 3, scope: !4400)
!4407 = !DILocation(line: 695, column: 10, scope: !4400)
!4408 = !DILocation(line: 695, column: 16, scope: !4400)
!4409 = !DILocation(line: 695, column: 20, scope: !4400)
!4410 = !DILocation(line: 695, column: 27, scope: !4400)
!4411 = !DILocation(line: 695, column: 33, scope: !4400)
!4412 = !DILocation(line: 696, column: 6, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4231, file: !177, line: 696, column: 6)
!4414 = !DILocation(line: 696, column: 13, scope: !4413)
!4415 = !DILocation(line: 696, column: 19, scope: !4413)
!4416 = !DILocation(line: 696, column: 23, scope: !4413)
!4417 = !DILocation(line: 696, column: 30, scope: !4413)
!4418 = !DILocation(line: 696, column: 6, scope: !4231)
!4419 = !DILocation(line: 697, column: 3, scope: !4413)
!4420 = !DILocation(line: 697, column: 10, scope: !4413)
!4421 = !DILocation(line: 697, column: 16, scope: !4413)
!4422 = !DILocation(line: 697, column: 20, scope: !4413)
!4423 = !DILocation(line: 697, column: 27, scope: !4413)
!4424 = !DILocation(line: 697, column: 33, scope: !4413)
!4425 = !DILocation(line: 698, column: 7, scope: !4231)
!4426 = !DILocation(line: 698, column: 2, scope: !4231)
!4427 = !DILocation(line: 699, column: 19, scope: !4231)
!4428 = !DILocation(line: 699, column: 11, scope: !4231)
!4429 = !DILocation(line: 699, column: 17, scope: !4231)
!4430 = !DILocation(line: 699, column: 9, scope: !4231)
!4431 = !DILocation(line: 699, column: 2, scope: !4231)
!4432 = !DILocation(line: 700, column: 1, scope: !4231)
!4433 = distinct !DISubprogram(name: "HXrbtree_replace", scope: !177, file: !177, line: 607, type: !4434, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!14, !2956, !215, !90}
!4436 = !DILocalVariable(name: "btree", arg: 1, scope: !4433, file: !177, line: 607, type: !2956)
!4437 = !DILocation(line: 607, column: 52, scope: !4433)
!4438 = !DILocalVariable(name: "node", arg: 2, scope: !4433, file: !177, line: 608, type: !215)
!4439 = !DILocation(line: 608, column: 27, scope: !4433)
!4440 = !DILocalVariable(name: "value", arg: 3, scope: !4433, file: !177, line: 608, type: !90)
!4441 = !DILocation(line: 608, column: 45, scope: !4433)
!4442 = !DILocalVariable(name: "old_value", scope: !4433, file: !177, line: 610, type: !89)
!4443 = !DILocation(line: 610, column: 8, scope: !4433)
!4444 = !DILocalVariable(name: "new_value", scope: !4433, file: !177, line: 610, type: !89)
!4445 = !DILocation(line: 610, column: 20, scope: !4433)
!4446 = !DILocation(line: 612, column: 8, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4433, file: !177, line: 612, column: 6)
!4448 = !DILocation(line: 612, column: 15, scope: !4447)
!4449 = !DILocation(line: 612, column: 21, scope: !4447)
!4450 = !DILocation(line: 612, column: 27, scope: !4447)
!4451 = !DILocation(line: 612, column: 6, scope: !4433)
!4452 = !DILocation(line: 613, column: 12, scope: !4447)
!4453 = !DILocation(line: 613, column: 18, scope: !4447)
!4454 = !DILocation(line: 613, column: 3, scope: !4447)
!4455 = !DILocation(line: 615, column: 14, scope: !4433)
!4456 = !DILocation(line: 615, column: 21, scope: !4433)
!4457 = !DILocation(line: 615, column: 27, scope: !4433)
!4458 = !DILocation(line: 615, column: 31, scope: !4433)
!4459 = !DILocation(line: 615, column: 39, scope: !4433)
!4460 = !DILocation(line: 615, column: 46, scope: !4433)
!4461 = !DILocation(line: 615, column: 53, scope: !4433)
!4462 = !DILocation(line: 615, column: 59, scope: !4433)
!4463 = !DILocation(line: 615, column: 12, scope: !4433)
!4464 = !DILocation(line: 616, column: 6, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4433, file: !177, line: 616, column: 6)
!4466 = !DILocation(line: 616, column: 16, scope: !4465)
!4467 = !DILocation(line: 616, column: 24, scope: !4465)
!4468 = !DILocation(line: 616, column: 27, scope: !4465)
!4469 = !DILocation(line: 616, column: 33, scope: !4465)
!4470 = !DILocation(line: 616, column: 6, scope: !4433)
!4471 = !DILocation(line: 617, column: 11, scope: !4465)
!4472 = !DILocation(line: 617, column: 10, scope: !4465)
!4473 = !DILocation(line: 617, column: 3, scope: !4465)
!4474 = !DILocation(line: 618, column: 15, scope: !4433)
!4475 = !DILocation(line: 618, column: 21, scope: !4433)
!4476 = !DILocation(line: 618, column: 13, scope: !4433)
!4477 = !DILocation(line: 619, column: 15, scope: !4433)
!4478 = !DILocation(line: 619, column: 2, scope: !4433)
!4479 = !DILocation(line: 619, column: 8, scope: !4433)
!4480 = !DILocation(line: 619, column: 13, scope: !4433)
!4481 = !DILocation(line: 620, column: 6, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4433, file: !177, line: 620, column: 6)
!4483 = !DILocation(line: 620, column: 13, scope: !4482)
!4484 = !DILocation(line: 620, column: 19, scope: !4482)
!4485 = !DILocation(line: 620, column: 23, scope: !4482)
!4486 = !DILocation(line: 620, column: 30, scope: !4482)
!4487 = !DILocation(line: 620, column: 6, scope: !4433)
!4488 = !DILocation(line: 621, column: 3, scope: !4482)
!4489 = !DILocation(line: 621, column: 10, scope: !4482)
!4490 = !DILocation(line: 621, column: 16, scope: !4482)
!4491 = !DILocation(line: 621, column: 20, scope: !4482)
!4492 = !DILocation(line: 621, column: 27, scope: !4482)
!4493 = !DILocation(line: 622, column: 2, scope: !4433)
!4494 = !DILocation(line: 623, column: 1, scope: !4433)
!4495 = distinct !DISubprogram(name: "HXrbtree_amov", scope: !177, file: !177, line: 543, type: !4496, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !4498, !4499, !7, !853}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!4500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!4501 = !DILocalVariable(name: "path", arg: 1, scope: !4495, file: !177, line: 543, type: !4498)
!4502 = !DILocation(line: 543, column: 50, scope: !4495)
!4503 = !DILocalVariable(name: "dir", arg: 2, scope: !4495, file: !177, line: 544, type: !4499)
!4504 = !DILocation(line: 544, column: 26, scope: !4495)
!4505 = !DILocalVariable(name: "depth", arg: 3, scope: !4495, file: !177, line: 544, type: !7)
!4506 = !DILocation(line: 544, column: 44, scope: !4495)
!4507 = !DILocalVariable(name: "tid", arg: 4, scope: !4495, file: !177, line: 544, type: !853)
!4508 = !DILocation(line: 544, column: 65, scope: !4495)
!4509 = !DILocalVariable(name: "uncle", scope: !4495, file: !177, line: 546, type: !215)
!4510 = !DILocation(line: 546, column: 24, scope: !4495)
!4511 = !DILocalVariable(name: "parent", scope: !4495, file: !177, line: 546, type: !215)
!4512 = !DILocation(line: 546, column: 32, scope: !4495)
!4513 = !DILocalVariable(name: "grandp", scope: !4495, file: !177, line: 546, type: !215)
!4514 = !DILocation(line: 546, column: 41, scope: !4495)
!4515 = !DILocalVariable(name: "newnode", scope: !4495, file: !177, line: 546, type: !215)
!4516 = !DILocation(line: 546, column: 50, scope: !4495)
!4517 = !DILocation(line: 556, column: 2, scope: !4495)
!4518 = !DILocalVariable(name: "LR", scope: !4519, file: !177, line: 557, type: !7)
!4519 = distinct !DILexicalBlock(scope: !4495, file: !177, line: 556, column: 5)
!4520 = !DILocation(line: 557, column: 16, scope: !4519)
!4521 = !DILocation(line: 557, column: 21, scope: !4519)
!4522 = !DILocation(line: 557, column: 25, scope: !4519)
!4523 = !DILocation(line: 557, column: 30, scope: !4519)
!4524 = !DILocation(line: 559, column: 12, scope: !4519)
!4525 = !DILocation(line: 559, column: 17, scope: !4519)
!4526 = !DILocation(line: 559, column: 22, scope: !4519)
!4527 = !DILocation(line: 559, column: 10, scope: !4519)
!4528 = !DILocation(line: 560, column: 12, scope: !4519)
!4529 = !DILocation(line: 560, column: 17, scope: !4519)
!4530 = !DILocation(line: 560, column: 22, scope: !4519)
!4531 = !DILocation(line: 560, column: 10, scope: !4519)
!4532 = !DILocation(line: 561, column: 12, scope: !4519)
!4533 = !DILocation(line: 561, column: 20, scope: !4519)
!4534 = !DILocation(line: 561, column: 25, scope: !4519)
!4535 = !DILocation(line: 561, column: 24, scope: !4519)
!4536 = !DILocation(line: 561, column: 10, scope: !4519)
!4537 = !DILocation(line: 563, column: 7, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4519, file: !177, line: 563, column: 7)
!4539 = !DILocation(line: 563, column: 13, scope: !4538)
!4540 = !DILocation(line: 563, column: 21, scope: !4538)
!4541 = !DILocation(line: 563, column: 24, scope: !4538)
!4542 = !DILocation(line: 563, column: 31, scope: !4538)
!4543 = !DILocation(line: 563, column: 37, scope: !4538)
!4544 = !DILocation(line: 563, column: 7, scope: !4519)
!4545 = !DILocation(line: 568, column: 4, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4538, file: !177, line: 563, column: 49)
!4547 = !DILocation(line: 568, column: 12, scope: !4546)
!4548 = !DILocation(line: 568, column: 18, scope: !4546)
!4549 = !DILocation(line: 569, column: 4, scope: !4546)
!4550 = !DILocation(line: 569, column: 11, scope: !4546)
!4551 = !DILocation(line: 569, column: 18, scope: !4546)
!4552 = !DILocation(line: 570, column: 4, scope: !4546)
!4553 = !DILocation(line: 570, column: 12, scope: !4546)
!4554 = !DILocation(line: 570, column: 18, scope: !4546)
!4555 = !DILocation(line: 571, column: 17, scope: !4546)
!4556 = !DILocation(line: 572, column: 4, scope: !4546)
!4557 = !DILocation(line: 580, column: 7, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4519, file: !177, line: 580, column: 7)
!4559 = !DILocation(line: 580, column: 11, scope: !4558)
!4560 = !DILocation(line: 580, column: 16, scope: !4558)
!4561 = !DILocation(line: 580, column: 23, scope: !4558)
!4562 = !DILocation(line: 580, column: 20, scope: !4558)
!4563 = !DILocation(line: 580, column: 7, scope: !4519)
!4564 = !DILocation(line: 581, column: 23, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4558, file: !177, line: 580, column: 27)
!4566 = !DILocation(line: 581, column: 31, scope: !4565)
!4567 = !DILocation(line: 581, column: 36, scope: !4565)
!4568 = !DILocation(line: 581, column: 35, scope: !4565)
!4569 = !DILocation(line: 581, column: 21, scope: !4565)
!4570 = !DILocation(line: 582, column: 23, scope: !4565)
!4571 = !DILocation(line: 582, column: 32, scope: !4565)
!4572 = !DILocation(line: 582, column: 36, scope: !4565)
!4573 = !DILocation(line: 582, column: 4, scope: !4565)
!4574 = !DILocation(line: 582, column: 12, scope: !4565)
!4575 = !DILocation(line: 582, column: 17, scope: !4565)
!4576 = !DILocation(line: 582, column: 16, scope: !4565)
!4577 = !DILocation(line: 582, column: 21, scope: !4565)
!4578 = !DILocation(line: 583, column: 23, scope: !4565)
!4579 = !DILocation(line: 583, column: 4, scope: !4565)
!4580 = !DILocation(line: 583, column: 13, scope: !4565)
!4581 = !DILocation(line: 583, column: 17, scope: !4565)
!4582 = !DILocation(line: 583, column: 21, scope: !4565)
!4583 = !DILocation(line: 584, column: 23, scope: !4565)
!4584 = !DILocation(line: 584, column: 4, scope: !4565)
!4585 = !DILocation(line: 584, column: 12, scope: !4565)
!4586 = !DILocation(line: 584, column: 16, scope: !4565)
!4587 = !DILocation(line: 584, column: 21, scope: !4565)
!4588 = !DILocation(line: 586, column: 14, scope: !4565)
!4589 = !DILocation(line: 586, column: 22, scope: !4565)
!4590 = !DILocation(line: 586, column: 26, scope: !4565)
!4591 = !DILocation(line: 586, column: 12, scope: !4565)
!4592 = !DILocation(line: 587, column: 14, scope: !4565)
!4593 = !DILocation(line: 587, column: 22, scope: !4565)
!4594 = !DILocation(line: 587, column: 26, scope: !4565)
!4595 = !DILocation(line: 587, column: 12, scope: !4565)
!4596 = !DILocation(line: 588, column: 3, scope: !4565)
!4597 = !DILocation(line: 589, column: 14, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4558, file: !177, line: 588, column: 10)
!4599 = !DILocation(line: 589, column: 19, scope: !4598)
!4600 = !DILocation(line: 589, column: 12, scope: !4598)
!4601 = !DILocation(line: 597, column: 22, scope: !4519)
!4602 = !DILocation(line: 597, column: 30, scope: !4519)
!4603 = !DILocation(line: 597, column: 35, scope: !4519)
!4604 = !DILocation(line: 597, column: 34, scope: !4519)
!4605 = !DILocation(line: 597, column: 3, scope: !4519)
!4606 = !DILocation(line: 597, column: 11, scope: !4519)
!4607 = !DILocation(line: 597, column: 15, scope: !4519)
!4608 = !DILocation(line: 597, column: 20, scope: !4519)
!4609 = !DILocation(line: 598, column: 22, scope: !4519)
!4610 = !DILocation(line: 598, column: 3, scope: !4519)
!4611 = !DILocation(line: 598, column: 11, scope: !4519)
!4612 = !DILocation(line: 598, column: 16, scope: !4519)
!4613 = !DILocation(line: 598, column: 15, scope: !4519)
!4614 = !DILocation(line: 598, column: 20, scope: !4519)
!4615 = !DILocation(line: 599, column: 38, scope: !4519)
!4616 = !DILocation(line: 599, column: 3, scope: !4519)
!4617 = !DILocation(line: 599, column: 8, scope: !4519)
!4618 = !DILocation(line: 599, column: 13, scope: !4519)
!4619 = !DILocation(line: 599, column: 18, scope: !4519)
!4620 = !DILocation(line: 599, column: 22, scope: !4519)
!4621 = !DILocation(line: 599, column: 26, scope: !4519)
!4622 = !DILocation(line: 599, column: 31, scope: !4519)
!4623 = !DILocation(line: 599, column: 36, scope: !4519)
!4624 = !DILocation(line: 600, column: 3, scope: !4519)
!4625 = !DILocation(line: 600, column: 11, scope: !4519)
!4626 = !DILocation(line: 600, column: 20, scope: !4519)
!4627 = !DILocation(line: 601, column: 3, scope: !4519)
!4628 = !DILocation(line: 601, column: 11, scope: !4519)
!4629 = !DILocation(line: 601, column: 20, scope: !4519)
!4630 = !DILocation(line: 602, column: 6, scope: !4519)
!4631 = !DILocation(line: 602, column: 3, scope: !4519)
!4632 = !DILocation(line: 603, column: 3, scope: !4519)
!4633 = !DILocation(line: 604, column: 11, scope: !4495)
!4634 = !DILocation(line: 604, column: 17, scope: !4495)
!4635 = !DILocation(line: 604, column: 22, scope: !4495)
!4636 = !DILocation(line: 604, column: 25, scope: !4495)
!4637 = !DILocation(line: 604, column: 30, scope: !4495)
!4638 = !DILocation(line: 604, column: 35, scope: !4495)
!4639 = !DILocation(line: 604, column: 40, scope: !4495)
!4640 = !DILocation(line: 604, column: 46, scope: !4495)
!4641 = !DILocation(line: 0, scope: !4495)
!4642 = !DILocation(line: 604, column: 2, scope: !4519)
!4643 = distinct !{!4643, !4517, !4644}
!4644 = !DILocation(line: 604, column: 56, scope: !4495)
!4645 = !DILocation(line: 605, column: 1, scope: !4495)
!4646 = distinct !DISubprogram(name: "HXhmap_replace", scope: !177, file: !177, line: 475, type: !4647, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!14, !3896, !233, !90}
!4649 = !DILocalVariable(name: "hmap", arg: 1, scope: !4646, file: !177, line: 475, type: !3896)
!4650 = !DILocation(line: 475, column: 48, scope: !4646)
!4651 = !DILocalVariable(name: "drop", arg: 2, scope: !4646, file: !177, line: 475, type: !233)
!4652 = !DILocation(line: 475, column: 74, scope: !4646)
!4653 = !DILocalVariable(name: "value", arg: 3, scope: !4646, file: !177, line: 476, type: !90)
!4654 = !DILocation(line: 476, column: 17, scope: !4646)
!4655 = !DILocalVariable(name: "old_value", scope: !4646, file: !177, line: 478, type: !89)
!4656 = !DILocation(line: 478, column: 8, scope: !4646)
!4657 = !DILocalVariable(name: "new_value", scope: !4646, file: !177, line: 478, type: !89)
!4658 = !DILocation(line: 478, column: 20, scope: !4646)
!4659 = !DILocation(line: 480, column: 6, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4646, file: !177, line: 480, column: 6)
!4661 = !DILocation(line: 480, column: 12, scope: !4660)
!4662 = !DILocation(line: 480, column: 18, scope: !4660)
!4663 = !DILocation(line: 480, column: 24, scope: !4660)
!4664 = !DILocation(line: 480, column: 6, scope: !4646)
!4665 = !DILocation(line: 481, column: 3, scope: !4660)
!4666 = !DILocation(line: 483, column: 14, scope: !4646)
!4667 = !DILocation(line: 483, column: 20, scope: !4646)
!4668 = !DILocation(line: 483, column: 26, scope: !4646)
!4669 = !DILocation(line: 483, column: 30, scope: !4646)
!4670 = !DILocation(line: 483, column: 38, scope: !4646)
!4671 = !DILocation(line: 483, column: 45, scope: !4646)
!4672 = !DILocation(line: 483, column: 51, scope: !4646)
!4673 = !DILocation(line: 483, column: 57, scope: !4646)
!4674 = !DILocation(line: 483, column: 12, scope: !4646)
!4675 = !DILocation(line: 484, column: 6, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4646, file: !177, line: 484, column: 6)
!4677 = !DILocation(line: 484, column: 16, scope: !4676)
!4678 = !DILocation(line: 484, column: 24, scope: !4676)
!4679 = !DILocation(line: 484, column: 27, scope: !4676)
!4680 = !DILocation(line: 484, column: 33, scope: !4676)
!4681 = !DILocation(line: 484, column: 6, scope: !4646)
!4682 = !DILocation(line: 485, column: 11, scope: !4676)
!4683 = !DILocation(line: 485, column: 10, scope: !4676)
!4684 = !DILocation(line: 485, column: 3, scope: !4676)
!4685 = !DILocation(line: 486, column: 15, scope: !4646)
!4686 = !DILocation(line: 486, column: 21, scope: !4646)
!4687 = !DILocation(line: 486, column: 13, scope: !4646)
!4688 = !DILocation(line: 487, column: 15, scope: !4646)
!4689 = !DILocation(line: 487, column: 2, scope: !4646)
!4690 = !DILocation(line: 487, column: 8, scope: !4646)
!4691 = !DILocation(line: 487, column: 13, scope: !4646)
!4692 = !DILocation(line: 488, column: 6, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4646, file: !177, line: 488, column: 6)
!4694 = !DILocation(line: 488, column: 12, scope: !4693)
!4695 = !DILocation(line: 488, column: 18, scope: !4693)
!4696 = !DILocation(line: 488, column: 22, scope: !4693)
!4697 = !DILocation(line: 488, column: 29, scope: !4693)
!4698 = !DILocation(line: 488, column: 6, scope: !4646)
!4699 = !DILocation(line: 489, column: 3, scope: !4693)
!4700 = !DILocation(line: 489, column: 9, scope: !4693)
!4701 = !DILocation(line: 489, column: 15, scope: !4693)
!4702 = !DILocation(line: 489, column: 19, scope: !4693)
!4703 = !DILocation(line: 489, column: 26, scope: !4693)
!4704 = !DILocation(line: 490, column: 2, scope: !4646)
!4705 = !DILocation(line: 491, column: 1, scope: !4646)
!4706 = distinct !DISubprogram(name: "HXmap_del", scope: !177, file: !177, line: 950, type: !4707, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!89, !2831, !90}
!4709 = !DILocalVariable(name: "xmap", arg: 1, scope: !4706, file: !177, line: 950, type: !2831)
!4710 = !DILocation(line: 950, column: 45, scope: !4706)
!4711 = !DILocalVariable(name: "key", arg: 2, scope: !4706, file: !177, line: 950, type: !90)
!4712 = !DILocation(line: 950, column: 63, scope: !4706)
!4713 = !DILocalVariable(name: "vmap", scope: !4706, file: !177, line: 952, type: !89)
!4714 = !DILocation(line: 952, column: 8, scope: !4706)
!4715 = !DILocation(line: 952, column: 15, scope: !4706)
!4716 = !DILocalVariable(name: "map", scope: !4706, file: !177, line: 953, type: !3233)
!4717 = !DILocation(line: 953, column: 24, scope: !4706)
!4718 = !DILocation(line: 953, column: 30, scope: !4706)
!4719 = !DILocation(line: 955, column: 10, scope: !4706)
!4720 = !DILocation(line: 955, column: 15, scope: !4706)
!4721 = !DILocation(line: 955, column: 2, scope: !4706)
!4722 = !DILocation(line: 957, column: 21, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4706, file: !177, line: 955, column: 21)
!4724 = !DILocation(line: 957, column: 27, scope: !4723)
!4725 = !DILocation(line: 957, column: 10, scope: !4723)
!4726 = !DILocation(line: 957, column: 3, scope: !4723)
!4727 = !DILocation(line: 959, column: 23, scope: !4723)
!4728 = !DILocation(line: 959, column: 29, scope: !4723)
!4729 = !DILocation(line: 959, column: 10, scope: !4723)
!4730 = !DILocation(line: 959, column: 3, scope: !4723)
!4731 = !DILocation(line: 961, column: 3, scope: !4723)
!4732 = !DILocation(line: 961, column: 9, scope: !4723)
!4733 = !DILocation(line: 962, column: 3, scope: !4723)
!4734 = !DILocation(line: 964, column: 1, scope: !4706)
!4735 = distinct !DISubprogram(name: "HXhmap_del", scope: !177, file: !177, line: 724, type: !4736, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!89, !2861, !90}
!4738 = !DILocalVariable(name: "hmap", arg: 1, scope: !4735, file: !177, line: 724, type: !2861)
!4739 = !DILocation(line: 724, column: 40, scope: !4735)
!4740 = !DILocalVariable(name: "key", arg: 2, scope: !4735, file: !177, line: 724, type: !90)
!4741 = !DILocation(line: 724, column: 58, scope: !4735)
!4742 = !DILocalVariable(name: "drop", scope: !4735, file: !177, line: 726, type: !233)
!4743 = !DILocation(line: 726, column: 22, scope: !4735)
!4744 = !DILocalVariable(name: "value", scope: !4735, file: !177, line: 727, type: !89)
!4745 = !DILocation(line: 727, column: 8, scope: !4735)
!4746 = !DILocation(line: 729, column: 26, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4735, file: !177, line: 729, column: 6)
!4748 = !DILocation(line: 729, column: 32, scope: !4747)
!4749 = !DILocation(line: 729, column: 14, scope: !4747)
!4750 = !DILocation(line: 729, column: 12, scope: !4747)
!4751 = !DILocation(line: 729, column: 38, scope: !4747)
!4752 = !DILocation(line: 729, column: 6, scope: !4735)
!4753 = !DILocation(line: 730, column: 3, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4747, file: !177, line: 729, column: 47)
!4755 = !DILocation(line: 730, column: 9, scope: !4754)
!4756 = !DILocation(line: 731, column: 3, scope: !4754)
!4757 = !DILocation(line: 734, column: 14, scope: !4735)
!4758 = !DILocation(line: 734, column: 20, scope: !4735)
!4759 = !DILocation(line: 734, column: 2, scope: !4735)
!4760 = !DILocation(line: 735, column: 4, scope: !4735)
!4761 = !DILocation(line: 735, column: 10, scope: !4735)
!4762 = !DILocation(line: 735, column: 2, scope: !4735)
!4763 = !DILocation(line: 736, column: 4, scope: !4735)
!4764 = !DILocation(line: 736, column: 10, scope: !4735)
!4765 = !DILocation(line: 736, column: 16, scope: !4735)
!4766 = !DILocation(line: 736, column: 2, scope: !4735)
!4767 = !DILocation(line: 737, column: 6, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4735, file: !177, line: 737, column: 6)
!4769 = !DILocation(line: 737, column: 12, scope: !4768)
!4770 = !DILocation(line: 737, column: 18, scope: !4768)
!4771 = !DILocation(line: 737, column: 26, scope: !4768)
!4772 = !DILocation(line: 737, column: 32, scope: !4768)
!4773 = !DILocation(line: 737, column: 24, scope: !4768)
!4774 = !DILocation(line: 737, column: 41, scope: !4768)
!4775 = !DILocation(line: 737, column: 44, scope: !4768)
!4776 = !DILocation(line: 737, column: 50, scope: !4768)
!4777 = !DILocation(line: 737, column: 56, scope: !4768)
!4778 = !DILocation(line: 737, column: 6, scope: !4735)
!4779 = !DILocation(line: 742, column: 17, scope: !4768)
!4780 = !DILocation(line: 742, column: 23, scope: !4768)
!4781 = !DILocation(line: 742, column: 29, scope: !4768)
!4782 = !DILocation(line: 742, column: 35, scope: !4768)
!4783 = !DILocation(line: 742, column: 3, scope: !4768)
!4784 = !DILocation(line: 744, column: 10, scope: !4735)
!4785 = !DILocation(line: 744, column: 16, scope: !4735)
!4786 = !DILocation(line: 744, column: 8, scope: !4735)
!4787 = !DILocation(line: 745, column: 6, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4735, file: !177, line: 745, column: 6)
!4789 = !DILocation(line: 745, column: 12, scope: !4788)
!4790 = !DILocation(line: 745, column: 18, scope: !4788)
!4791 = !DILocation(line: 745, column: 22, scope: !4788)
!4792 = !DILocation(line: 745, column: 29, scope: !4788)
!4793 = !DILocation(line: 745, column: 6, scope: !4735)
!4794 = !DILocation(line: 746, column: 3, scope: !4788)
!4795 = !DILocation(line: 746, column: 9, scope: !4788)
!4796 = !DILocation(line: 746, column: 15, scope: !4788)
!4797 = !DILocation(line: 746, column: 19, scope: !4788)
!4798 = !DILocation(line: 746, column: 26, scope: !4788)
!4799 = !DILocation(line: 746, column: 32, scope: !4788)
!4800 = !DILocation(line: 747, column: 6, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4735, file: !177, line: 747, column: 6)
!4802 = !DILocation(line: 747, column: 12, scope: !4801)
!4803 = !DILocation(line: 747, column: 18, scope: !4801)
!4804 = !DILocation(line: 747, column: 22, scope: !4801)
!4805 = !DILocation(line: 747, column: 29, scope: !4801)
!4806 = !DILocation(line: 747, column: 6, scope: !4735)
!4807 = !DILocation(line: 748, column: 3, scope: !4801)
!4808 = !DILocation(line: 748, column: 9, scope: !4801)
!4809 = !DILocation(line: 748, column: 15, scope: !4801)
!4810 = !DILocation(line: 748, column: 19, scope: !4801)
!4811 = !DILocation(line: 748, column: 26, scope: !4801)
!4812 = !DILocation(line: 748, column: 32, scope: !4801)
!4813 = !DILocation(line: 749, column: 7, scope: !4735)
!4814 = !DILocation(line: 749, column: 2, scope: !4735)
!4815 = !DILocation(line: 750, column: 2, scope: !4735)
!4816 = !DILocation(line: 750, column: 8, scope: !4735)
!4817 = !DILocation(line: 751, column: 9, scope: !4735)
!4818 = !DILocation(line: 751, column: 2, scope: !4735)
!4819 = !DILocation(line: 752, column: 1, scope: !4735)
!4820 = distinct !DISubprogram(name: "HXrbtree_del", scope: !177, file: !177, line: 876, type: !4821, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!89, !194, !90}
!4823 = !DILocalVariable(name: "btree", arg: 1, scope: !4820, file: !177, line: 876, type: !194)
!4824 = !DILocation(line: 876, column: 44, scope: !4820)
!4825 = !DILocalVariable(name: "key", arg: 2, scope: !4820, file: !177, line: 876, type: !90)
!4826 = !DILocation(line: 876, column: 63, scope: !4820)
!4827 = !DILocalVariable(name: "path", scope: !4820, file: !177, line: 878, type: !4243)
!4828 = !DILocation(line: 878, column: 24, scope: !4820)
!4829 = !DILocalVariable(name: "node", scope: !4820, file: !177, line: 878, type: !215)
!4830 = !DILocation(line: 878, column: 43, scope: !4820)
!4831 = !DILocalVariable(name: "dir", scope: !4820, file: !177, line: 879, type: !4248)
!4832 = !DILocation(line: 879, column: 16, scope: !4820)
!4833 = !DILocalVariable(name: "depth", scope: !4820, file: !177, line: 880, type: !7)
!4834 = !DILocation(line: 880, column: 15, scope: !4820)
!4835 = !DILocalVariable(name: "itemptr", scope: !4820, file: !177, line: 881, type: !89)
!4836 = !DILocation(line: 881, column: 8, scope: !4820)
!4837 = !DILocation(line: 883, column: 6, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 883, column: 6)
!4839 = !DILocation(line: 883, column: 13, scope: !4838)
!4840 = !DILocation(line: 883, column: 18, scope: !4838)
!4841 = !DILocation(line: 883, column: 6, scope: !4820)
!4842 = !DILocation(line: 884, column: 3, scope: !4838)
!4843 = !DILocation(line: 886, column: 17, scope: !4820)
!4844 = !DILocation(line: 886, column: 7, scope: !4820)
!4845 = !DILocation(line: 886, column: 2, scope: !4820)
!4846 = !DILocation(line: 886, column: 15, scope: !4820)
!4847 = !DILocation(line: 887, column: 11, scope: !4820)
!4848 = !DILocation(line: 887, column: 2, scope: !4820)
!4849 = !DILocation(line: 887, column: 15, scope: !4820)
!4850 = !DILocation(line: 888, column: 17, scope: !4820)
!4851 = !DILocation(line: 888, column: 24, scope: !4820)
!4852 = !DILocation(line: 888, column: 15, scope: !4820)
!4853 = !DILocation(line: 890, column: 2, scope: !4820)
!4854 = !DILocation(line: 890, column: 9, scope: !4820)
!4855 = !DILocation(line: 890, column: 14, scope: !4820)
!4856 = !DILocalVariable(name: "res", scope: !4857, file: !177, line: 891, type: !14)
!4857 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 890, column: 23)
!4858 = !DILocation(line: 891, column: 7, scope: !4857)
!4859 = !DILocation(line: 891, column: 13, scope: !4857)
!4860 = !DILocation(line: 891, column: 20, scope: !4857)
!4861 = !DILocation(line: 891, column: 26, scope: !4857)
!4862 = !DILocation(line: 891, column: 30, scope: !4857)
!4863 = !DILocation(line: 891, column: 40, scope: !4857)
!4864 = !DILocation(line: 892, column: 13, scope: !4857)
!4865 = !DILocation(line: 892, column: 19, scope: !4857)
!4866 = !DILocation(line: 892, column: 24, scope: !4857)
!4867 = !DILocation(line: 892, column: 31, scope: !4857)
!4868 = !DILocation(line: 892, column: 37, scope: !4857)
!4869 = !DILocation(line: 893, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4857, file: !177, line: 893, column: 7)
!4871 = !DILocation(line: 893, column: 11, scope: !4870)
!4872 = !DILocation(line: 893, column: 7, scope: !4857)
!4873 = !DILocation(line: 894, column: 4, scope: !4870)
!4874 = !DILocation(line: 895, column: 18, scope: !4857)
!4875 = !DILocation(line: 895, column: 22, scope: !4857)
!4876 = !DILocation(line: 895, column: 16, scope: !4857)
!4877 = !DILocation(line: 896, column: 18, scope: !4857)
!4878 = !DILocation(line: 896, column: 8, scope: !4857)
!4879 = !DILocation(line: 896, column: 3, scope: !4857)
!4880 = !DILocation(line: 896, column: 16, scope: !4857)
!4881 = !DILocation(line: 897, column: 18, scope: !4857)
!4882 = !DILocation(line: 897, column: 12, scope: !4857)
!4883 = !DILocation(line: 897, column: 3, scope: !4857)
!4884 = !DILocation(line: 897, column: 16, scope: !4857)
!4885 = !DILocation(line: 898, column: 18, scope: !4857)
!4886 = !DILocation(line: 898, column: 24, scope: !4857)
!4887 = !DILocation(line: 898, column: 28, scope: !4857)
!4888 = !DILocation(line: 898, column: 16, scope: !4857)
!4889 = distinct !{!4889, !4853, !4890}
!4890 = !DILocation(line: 899, column: 2, scope: !4820)
!4891 = !DILocation(line: 901, column: 6, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 901, column: 6)
!4893 = !DILocation(line: 901, column: 11, scope: !4892)
!4894 = !DILocation(line: 901, column: 6, scope: !4820)
!4895 = !DILocation(line: 902, column: 3, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4892, file: !177, line: 901, column: 20)
!4897 = !DILocation(line: 902, column: 9, scope: !4896)
!4898 = !DILocation(line: 903, column: 3, scope: !4896)
!4899 = !DILocation(line: 911, column: 12, scope: !4820)
!4900 = !DILocation(line: 911, column: 18, scope: !4820)
!4901 = !DILocation(line: 911, column: 10, scope: !4820)
!4902 = !DILocation(line: 913, column: 4, scope: !4820)
!4903 = !DILocation(line: 913, column: 11, scope: !4820)
!4904 = !DILocation(line: 913, column: 17, scope: !4820)
!4905 = !DILocation(line: 913, column: 2, scope: !4820)
!4906 = !DILocation(line: 914, column: 4, scope: !4820)
!4907 = !DILocation(line: 914, column: 11, scope: !4820)
!4908 = !DILocation(line: 914, column: 2, scope: !4820)
!4909 = !DILocation(line: 916, column: 16, scope: !4820)
!4910 = !DILocation(line: 916, column: 7, scope: !4820)
!4911 = !DILocation(line: 916, column: 2, scope: !4820)
!4912 = !DILocation(line: 916, column: 14, scope: !4820)
!4913 = !DILocation(line: 917, column: 6, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 917, column: 6)
!4915 = !DILocation(line: 917, column: 12, scope: !4914)
!4916 = !DILocation(line: 917, column: 27, scope: !4914)
!4917 = !DILocation(line: 917, column: 6, scope: !4820)
!4918 = !DILocation(line: 919, column: 38, scope: !4914)
!4919 = !DILocation(line: 919, column: 44, scope: !4914)
!4920 = !DILocation(line: 919, column: 8, scope: !4914)
!4921 = !DILocation(line: 919, column: 13, scope: !4914)
!4922 = !DILocation(line: 919, column: 3, scope: !4914)
!4923 = !DILocation(line: 919, column: 18, scope: !4914)
!4924 = !DILocation(line: 919, column: 26, scope: !4914)
!4925 = !DILocation(line: 919, column: 31, scope: !4914)
!4926 = !DILocation(line: 919, column: 22, scope: !4914)
!4927 = !DILocation(line: 919, column: 36, scope: !4914)
!4928 = !DILocation(line: 920, column: 11, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4914, file: !177, line: 920, column: 11)
!4930 = !DILocation(line: 920, column: 17, scope: !4929)
!4931 = !DILocation(line: 920, column: 31, scope: !4929)
!4932 = !DILocation(line: 920, column: 11, scope: !4914)
!4933 = !DILocation(line: 922, column: 38, scope: !4929)
!4934 = !DILocation(line: 922, column: 44, scope: !4929)
!4935 = !DILocation(line: 922, column: 8, scope: !4929)
!4936 = !DILocation(line: 922, column: 13, scope: !4929)
!4937 = !DILocation(line: 922, column: 3, scope: !4929)
!4938 = !DILocation(line: 922, column: 18, scope: !4929)
!4939 = !DILocation(line: 922, column: 26, scope: !4929)
!4940 = !DILocation(line: 922, column: 31, scope: !4929)
!4941 = !DILocation(line: 922, column: 22, scope: !4929)
!4942 = !DILocation(line: 922, column: 36, scope: !4929)
!4943 = !DILocation(line: 928, column: 27, scope: !4929)
!4944 = !DILocation(line: 928, column: 33, scope: !4929)
!4945 = !DILocation(line: 928, column: 38, scope: !4929)
!4946 = !DILocation(line: 928, column: 11, scope: !4929)
!4947 = !DILocation(line: 928, column: 9, scope: !4929)
!4948 = !DILocation(line: 934, column: 6, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 934, column: 6)
!4950 = !DILocation(line: 934, column: 12, scope: !4949)
!4951 = !DILocation(line: 934, column: 18, scope: !4949)
!4952 = !DILocation(line: 934, column: 6, scope: !4820)
!4953 = !DILocation(line: 935, column: 17, scope: !4949)
!4954 = !DILocation(line: 935, column: 23, scope: !4949)
!4955 = !DILocation(line: 935, column: 28, scope: !4949)
!4956 = !DILocation(line: 935, column: 3, scope: !4949)
!4957 = !DILocation(line: 937, column: 6, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 937, column: 6)
!4959 = !DILocation(line: 937, column: 13, scope: !4958)
!4960 = !DILocation(line: 937, column: 19, scope: !4958)
!4961 = !DILocation(line: 937, column: 23, scope: !4958)
!4962 = !DILocation(line: 937, column: 30, scope: !4958)
!4963 = !DILocation(line: 937, column: 6, scope: !4820)
!4964 = !DILocation(line: 938, column: 3, scope: !4958)
!4965 = !DILocation(line: 938, column: 10, scope: !4958)
!4966 = !DILocation(line: 938, column: 16, scope: !4958)
!4967 = !DILocation(line: 938, column: 20, scope: !4958)
!4968 = !DILocation(line: 938, column: 27, scope: !4958)
!4969 = !DILocation(line: 938, column: 33, scope: !4958)
!4970 = !DILocation(line: 939, column: 6, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4820, file: !177, line: 939, column: 6)
!4972 = !DILocation(line: 939, column: 13, scope: !4971)
!4973 = !DILocation(line: 939, column: 19, scope: !4971)
!4974 = !DILocation(line: 939, column: 23, scope: !4971)
!4975 = !DILocation(line: 939, column: 30, scope: !4971)
!4976 = !DILocation(line: 939, column: 6, scope: !4820)
!4977 = !DILocation(line: 940, column: 3, scope: !4971)
!4978 = !DILocation(line: 940, column: 10, scope: !4971)
!4979 = !DILocation(line: 940, column: 16, scope: !4971)
!4980 = !DILocation(line: 940, column: 20, scope: !4971)
!4981 = !DILocation(line: 940, column: 27, scope: !4971)
!4982 = !DILocation(line: 940, column: 33, scope: !4971)
!4983 = !DILocation(line: 941, column: 7, scope: !4820)
!4984 = !DILocation(line: 941, column: 2, scope: !4820)
!4985 = !DILocation(line: 942, column: 2, scope: !4820)
!4986 = !DILocation(line: 942, column: 8, scope: !4820)
!4987 = !DILocation(line: 947, column: 9, scope: !4820)
!4988 = !DILocation(line: 947, column: 2, scope: !4820)
!4989 = !DILocation(line: 948, column: 1, scope: !4820)
!4990 = distinct !DISubprogram(name: "HXrbtree_del_mm", scope: !177, file: !177, line: 754, type: !4991, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!7, !4498, !4993, !7}
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!4994 = !DILocalVariable(name: "path", arg: 1, scope: !4990, file: !177, line: 754, type: !4498)
!4995 = !DILocation(line: 754, column: 60, scope: !4990)
!4996 = !DILocalVariable(name: "dir", arg: 2, scope: !4990, file: !177, line: 755, type: !4993)
!4997 = !DILocation(line: 755, column: 20, scope: !4990)
!4998 = !DILocalVariable(name: "depth", arg: 3, scope: !4990, file: !177, line: 755, type: !7)
!4999 = !DILocation(line: 755, column: 38, scope: !4990)
!5000 = !DILocalVariable(name: "io_node", scope: !4990, file: !177, line: 758, type: !215)
!5001 = !DILocation(line: 758, column: 24, scope: !4990)
!5002 = !DILocalVariable(name: "io_parent", scope: !4990, file: !177, line: 758, type: !215)
!5003 = !DILocation(line: 758, column: 34, scope: !4990)
!5004 = !DILocalVariable(name: "orig_node", scope: !4990, file: !177, line: 758, type: !215)
!5005 = !DILocation(line: 758, column: 46, scope: !4990)
!5006 = !DILocation(line: 758, column: 58, scope: !4990)
!5007 = !DILocation(line: 758, column: 63, scope: !4990)
!5008 = !DILocalVariable(name: "color", scope: !4990, file: !177, line: 759, type: !231)
!5009 = !DILocation(line: 759, column: 16, scope: !4990)
!5010 = !DILocalVariable(name: "spos", scope: !4990, file: !177, line: 760, type: !7)
!5011 = !DILocation(line: 760, column: 15, scope: !4990)
!5012 = !DILocation(line: 762, column: 15, scope: !4990)
!5013 = !DILocation(line: 762, column: 26, scope: !4990)
!5014 = !DILocation(line: 762, column: 13, scope: !4990)
!5015 = !DILocation(line: 763, column: 2, scope: !4990)
!5016 = !DILocation(line: 763, column: 6, scope: !4990)
!5017 = !DILocation(line: 763, column: 13, scope: !4990)
!5018 = !DILocation(line: 765, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4990, file: !177, line: 765, column: 6)
!5020 = !DILocation(line: 765, column: 15, scope: !5019)
!5021 = !DILocation(line: 765, column: 29, scope: !5019)
!5022 = !DILocation(line: 765, column: 6, scope: !4990)
!5023 = !DILocation(line: 767, column: 28, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5019, file: !177, line: 765, column: 38)
!5025 = !DILocation(line: 767, column: 39, scope: !5024)
!5026 = !DILocation(line: 767, column: 3, scope: !5024)
!5027 = !DILocation(line: 767, column: 12, scope: !5024)
!5028 = !DILocation(line: 767, column: 26, scope: !5024)
!5029 = !DILocation(line: 768, column: 26, scope: !5024)
!5030 = !DILocation(line: 768, column: 35, scope: !5024)
!5031 = !DILocation(line: 768, column: 24, scope: !5024)
!5032 = !DILocation(line: 769, column: 26, scope: !5024)
!5033 = !DILocation(line: 769, column: 37, scope: !5024)
!5034 = !DILocation(line: 769, column: 3, scope: !5024)
!5035 = !DILocation(line: 769, column: 12, scope: !5024)
!5036 = !DILocation(line: 769, column: 24, scope: !5024)
!5037 = !DILocation(line: 770, column: 26, scope: !5024)
!5038 = !DILocation(line: 770, column: 3, scope: !5024)
!5039 = !DILocation(line: 770, column: 14, scope: !5024)
!5040 = !DILocation(line: 770, column: 24, scope: !5024)
!5041 = !DILocation(line: 772, column: 38, scope: !5024)
!5042 = !DILocation(line: 772, column: 3, scope: !5024)
!5043 = !DILocation(line: 772, column: 8, scope: !5024)
!5044 = !DILocation(line: 772, column: 13, scope: !5024)
!5045 = !DILocation(line: 772, column: 18, scope: !5024)
!5046 = !DILocation(line: 772, column: 22, scope: !5024)
!5047 = !DILocation(line: 772, column: 26, scope: !5024)
!5048 = !DILocation(line: 772, column: 31, scope: !5024)
!5049 = !DILocation(line: 772, column: 36, scope: !5024)
!5050 = !DILocation(line: 773, column: 26, scope: !5024)
!5051 = !DILocation(line: 773, column: 3, scope: !5024)
!5052 = !DILocation(line: 773, column: 13, scope: !5024)
!5053 = !DILocation(line: 773, column: 24, scope: !5024)
!5054 = !DILocation(line: 774, column: 10, scope: !5024)
!5055 = !DILocation(line: 774, column: 3, scope: !5024)
!5056 = !DILocation(line: 781, column: 14, scope: !4990)
!5057 = !DILocation(line: 781, column: 7, scope: !4990)
!5058 = !DILocation(line: 783, column: 2, scope: !4990)
!5059 = !DILocation(line: 784, column: 18, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4990, file: !177, line: 783, column: 5)
!5061 = !DILocation(line: 784, column: 16, scope: !5060)
!5062 = !DILocation(line: 785, column: 18, scope: !5060)
!5063 = !DILocation(line: 785, column: 3, scope: !5060)
!5064 = !DILocation(line: 785, column: 8, scope: !5060)
!5065 = !DILocation(line: 785, column: 16, scope: !5060)
!5066 = !DILocation(line: 786, column: 3, scope: !5060)
!5067 = !DILocation(line: 786, column: 12, scope: !5060)
!5068 = !DILocation(line: 786, column: 16, scope: !5060)
!5069 = !DILocation(line: 787, column: 18, scope: !5060)
!5070 = !DILocation(line: 787, column: 29, scope: !5060)
!5071 = !DILocation(line: 787, column: 16, scope: !5060)
!5072 = !DILocation(line: 788, column: 2, scope: !5060)
!5073 = !DILocation(line: 788, column: 11, scope: !4990)
!5074 = !DILocation(line: 788, column: 20, scope: !4990)
!5075 = !DILocation(line: 788, column: 34, scope: !4990)
!5076 = distinct !{!5076, !5058, !5077}
!5077 = !DILocation(line: 788, column: 41, scope: !4990)
!5078 = !DILocation(line: 791, column: 48, scope: !4990)
!5079 = !DILocation(line: 791, column: 35, scope: !4990)
!5080 = !DILocation(line: 791, column: 40, scope: !4990)
!5081 = !DILocation(line: 791, column: 46, scope: !4990)
!5082 = !DILocation(line: 791, column: 2, scope: !4990)
!5083 = !DILocation(line: 791, column: 7, scope: !4990)
!5084 = !DILocation(line: 791, column: 11, scope: !4990)
!5085 = !DILocation(line: 791, column: 16, scope: !4990)
!5086 = !DILocation(line: 791, column: 20, scope: !4990)
!5087 = !DILocation(line: 791, column: 24, scope: !4990)
!5088 = !DILocation(line: 791, column: 28, scope: !4990)
!5089 = !DILocation(line: 791, column: 33, scope: !4990)
!5090 = !DILocation(line: 792, column: 37, scope: !4990)
!5091 = !DILocation(line: 792, column: 46, scope: !4990)
!5092 = !DILocation(line: 792, column: 2, scope: !4990)
!5093 = !DILocation(line: 792, column: 13, scope: !4990)
!5094 = !DILocation(line: 792, column: 35, scope: !4990)
!5095 = !DILocation(line: 793, column: 37, scope: !4990)
!5096 = !DILocation(line: 793, column: 48, scope: !4990)
!5097 = !DILocation(line: 793, column: 2, scope: !4990)
!5098 = !DILocation(line: 793, column: 11, scope: !4990)
!5099 = !DILocation(line: 793, column: 35, scope: !4990)
!5100 = !DILocation(line: 794, column: 37, scope: !4990)
!5101 = !DILocation(line: 794, column: 48, scope: !4990)
!5102 = !DILocation(line: 794, column: 2, scope: !4990)
!5103 = !DILocation(line: 794, column: 11, scope: !4990)
!5104 = !DILocation(line: 794, column: 35, scope: !4990)
!5105 = !DILocation(line: 796, column: 19, scope: !4990)
!5106 = !DILocation(line: 796, column: 28, scope: !4990)
!5107 = !DILocation(line: 796, column: 17, scope: !4990)
!5108 = !DILocation(line: 797, column: 19, scope: !4990)
!5109 = !DILocation(line: 797, column: 30, scope: !4990)
!5110 = !DILocation(line: 797, column: 2, scope: !4990)
!5111 = !DILocation(line: 797, column: 11, scope: !4990)
!5112 = !DILocation(line: 797, column: 17, scope: !4990)
!5113 = !DILocation(line: 805, column: 21, scope: !4990)
!5114 = !DILocation(line: 805, column: 2, scope: !4990)
!5115 = !DILocation(line: 805, column: 13, scope: !4990)
!5116 = !DILocation(line: 805, column: 19, scope: !4990)
!5117 = !DILocation(line: 806, column: 9, scope: !4990)
!5118 = !DILocation(line: 806, column: 2, scope: !4990)
!5119 = !DILocation(line: 807, column: 1, scope: !4990)
!5120 = distinct !DISubprogram(name: "HXrbtree_dmov", scope: !177, file: !177, line: 809, type: !5121, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{null, !4498, !4993, !7}
!5123 = !DILocalVariable(name: "path", arg: 1, scope: !5120, file: !177, line: 809, type: !4498)
!5124 = !DILocation(line: 809, column: 50, scope: !5120)
!5125 = !DILocalVariable(name: "dir", arg: 2, scope: !5120, file: !177, line: 809, type: !4993)
!5126 = !DILocation(line: 809, column: 71, scope: !5120)
!5127 = !DILocalVariable(name: "depth", arg: 3, scope: !5120, file: !177, line: 810, type: !7)
!5128 = !DILocation(line: 810, column: 18, scope: !5120)
!5129 = !DILocalVariable(name: "w", scope: !5120, file: !177, line: 812, type: !215)
!5130 = !DILocation(line: 812, column: 24, scope: !5120)
!5131 = !DILocalVariable(name: "x", scope: !5120, file: !177, line: 812, type: !215)
!5132 = !DILocation(line: 812, column: 28, scope: !5120)
!5133 = !DILocation(line: 814, column: 2, scope: !5120)
!5134 = !DILocalVariable(name: "LR", scope: !5135, file: !177, line: 815, type: !231)
!5135 = distinct !DILexicalBlock(scope: !5120, file: !177, line: 814, column: 15)
!5136 = !DILocation(line: 815, column: 17, scope: !5135)
!5137 = !DILocation(line: 815, column: 22, scope: !5135)
!5138 = !DILocation(line: 815, column: 26, scope: !5135)
!5139 = !DILocation(line: 815, column: 32, scope: !5135)
!5140 = !DILocation(line: 816, column: 7, scope: !5135)
!5141 = !DILocation(line: 816, column: 12, scope: !5135)
!5142 = !DILocation(line: 816, column: 18, scope: !5135)
!5143 = !DILocation(line: 816, column: 24, scope: !5135)
!5144 = !DILocation(line: 816, column: 28, scope: !5135)
!5145 = !DILocation(line: 816, column: 5, scope: !5135)
!5146 = !DILocation(line: 818, column: 7, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5135, file: !177, line: 818, column: 7)
!5148 = !DILocation(line: 818, column: 9, scope: !5147)
!5149 = !DILocation(line: 818, column: 17, scope: !5147)
!5150 = !DILocation(line: 818, column: 20, scope: !5147)
!5151 = !DILocation(line: 818, column: 23, scope: !5147)
!5152 = !DILocation(line: 818, column: 29, scope: !5147)
!5153 = !DILocation(line: 818, column: 7, scope: !5135)
!5154 = !DILocation(line: 820, column: 4, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5147, file: !177, line: 818, column: 41)
!5156 = !DILocation(line: 820, column: 7, scope: !5155)
!5157 = !DILocation(line: 820, column: 13, scope: !5155)
!5158 = !DILocation(line: 821, column: 4, scope: !5155)
!5159 = !DILocation(line: 824, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5135, file: !177, line: 824, column: 7)
!5161 = !DILocation(line: 824, column: 13, scope: !5160)
!5162 = !DILocation(line: 824, column: 7, scope: !5135)
!5163 = !DILocation(line: 826, column: 4, scope: !5160)
!5164 = !DILocation(line: 829, column: 7, scope: !5135)
!5165 = !DILocation(line: 829, column: 12, scope: !5135)
!5166 = !DILocation(line: 829, column: 18, scope: !5135)
!5167 = !DILocation(line: 829, column: 24, scope: !5135)
!5168 = !DILocation(line: 829, column: 29, scope: !5135)
!5169 = !DILocation(line: 829, column: 28, scope: !5135)
!5170 = !DILocation(line: 829, column: 5, scope: !5135)
!5171 = !DILocation(line: 830, column: 7, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5135, file: !177, line: 830, column: 7)
!5173 = !DILocation(line: 830, column: 10, scope: !5172)
!5174 = !DILocation(line: 830, column: 16, scope: !5172)
!5175 = !DILocation(line: 830, column: 7, scope: !5135)
!5176 = !DILocation(line: 836, column: 4, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5172, file: !177, line: 830, column: 28)
!5178 = !DILocation(line: 836, column: 7, scope: !5177)
!5179 = !DILocation(line: 836, column: 13, scope: !5177)
!5180 = !DILocation(line: 837, column: 4, scope: !5177)
!5181 = !DILocation(line: 837, column: 9, scope: !5177)
!5182 = !DILocation(line: 837, column: 15, scope: !5177)
!5183 = !DILocation(line: 837, column: 21, scope: !5177)
!5184 = !DILocation(line: 837, column: 27, scope: !5177)
!5185 = !DILocation(line: 838, column: 32, scope: !5177)
!5186 = !DILocation(line: 838, column: 35, scope: !5177)
!5187 = !DILocation(line: 838, column: 39, scope: !5177)
!5188 = !DILocation(line: 838, column: 4, scope: !5177)
!5189 = !DILocation(line: 838, column: 9, scope: !5177)
!5190 = !DILocation(line: 838, column: 15, scope: !5177)
!5191 = !DILocation(line: 838, column: 21, scope: !5177)
!5192 = !DILocation(line: 838, column: 26, scope: !5177)
!5193 = !DILocation(line: 838, column: 25, scope: !5177)
!5194 = !DILocation(line: 838, column: 30, scope: !5177)
!5195 = !DILocation(line: 839, column: 17, scope: !5177)
!5196 = !DILocation(line: 839, column: 22, scope: !5177)
!5197 = !DILocation(line: 839, column: 28, scope: !5177)
!5198 = !DILocation(line: 839, column: 4, scope: !5177)
!5199 = !DILocation(line: 839, column: 7, scope: !5177)
!5200 = !DILocation(line: 839, column: 11, scope: !5177)
!5201 = !DILocation(line: 839, column: 15, scope: !5177)
!5202 = !DILocation(line: 840, column: 43, scope: !5177)
!5203 = !DILocation(line: 840, column: 4, scope: !5177)
!5204 = !DILocation(line: 840, column: 9, scope: !5177)
!5205 = !DILocation(line: 840, column: 15, scope: !5177)
!5206 = !DILocation(line: 840, column: 21, scope: !5177)
!5207 = !DILocation(line: 840, column: 25, scope: !5177)
!5208 = !DILocation(line: 840, column: 29, scope: !5177)
!5209 = !DILocation(line: 840, column: 35, scope: !5177)
!5210 = !DILocation(line: 840, column: 41, scope: !5177)
!5211 = !DILocation(line: 841, column: 18, scope: !5177)
!5212 = !DILocation(line: 841, column: 23, scope: !5177)
!5213 = !DILocation(line: 841, column: 29, scope: !5177)
!5214 = !DILocation(line: 841, column: 4, scope: !5177)
!5215 = !DILocation(line: 841, column: 9, scope: !5177)
!5216 = !DILocation(line: 841, column: 16, scope: !5177)
!5217 = !DILocation(line: 842, column: 18, scope: !5177)
!5218 = !DILocation(line: 842, column: 4, scope: !5177)
!5219 = !DILocation(line: 842, column: 8, scope: !5177)
!5220 = !DILocation(line: 842, column: 16, scope: !5177)
!5221 = !DILocation(line: 843, column: 22, scope: !5177)
!5222 = !DILocation(line: 843, column: 4, scope: !5177)
!5223 = !DILocation(line: 843, column: 9, scope: !5177)
!5224 = !DILocation(line: 843, column: 15, scope: !5177)
!5225 = !DILocation(line: 843, column: 20, scope: !5177)
!5226 = !DILocation(line: 844, column: 8, scope: !5177)
!5227 = !DILocation(line: 844, column: 13, scope: !5177)
!5228 = !DILocation(line: 844, column: 21, scope: !5177)
!5229 = !DILocation(line: 844, column: 27, scope: !5177)
!5230 = !DILocation(line: 844, column: 32, scope: !5177)
!5231 = !DILocation(line: 844, column: 31, scope: !5177)
!5232 = !DILocation(line: 844, column: 6, scope: !5177)
!5233 = !DILocation(line: 845, column: 3, scope: !5177)
!5234 = !DILocation(line: 847, column: 8, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5135, file: !177, line: 847, column: 7)
!5236 = !DILocation(line: 847, column: 11, scope: !5235)
!5237 = !DILocation(line: 847, column: 15, scope: !5235)
!5238 = !DILocation(line: 847, column: 19, scope: !5235)
!5239 = !DILocation(line: 847, column: 27, scope: !5235)
!5240 = !DILocation(line: 847, column: 30, scope: !5235)
!5241 = !DILocation(line: 847, column: 33, scope: !5235)
!5242 = !DILocation(line: 847, column: 37, scope: !5235)
!5243 = !DILocation(line: 847, column: 42, scope: !5235)
!5244 = !DILocation(line: 847, column: 48, scope: !5235)
!5245 = !DILocation(line: 847, column: 62, scope: !5235)
!5246 = !DILocation(line: 848, column: 7, scope: !5235)
!5247 = !DILocation(line: 848, column: 10, scope: !5235)
!5248 = !DILocation(line: 848, column: 15, scope: !5235)
!5249 = !DILocation(line: 848, column: 14, scope: !5235)
!5250 = !DILocation(line: 848, column: 19, scope: !5235)
!5251 = !DILocation(line: 848, column: 27, scope: !5235)
!5252 = !DILocation(line: 848, column: 30, scope: !5235)
!5253 = !DILocation(line: 848, column: 33, scope: !5235)
!5254 = !DILocation(line: 848, column: 38, scope: !5235)
!5255 = !DILocation(line: 848, column: 37, scope: !5235)
!5256 = !DILocation(line: 848, column: 43, scope: !5235)
!5257 = !DILocation(line: 848, column: 49, scope: !5235)
!5258 = !DILocation(line: 847, column: 7, scope: !5135)
!5259 = !DILocation(line: 850, column: 4, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5235, file: !177, line: 848, column: 64)
!5261 = !DILocation(line: 850, column: 7, scope: !5260)
!5262 = !DILocation(line: 850, column: 13, scope: !5260)
!5263 = !DILocation(line: 851, column: 4, scope: !5260)
!5264 = !DILocation(line: 852, column: 4, scope: !5260)
!5265 = distinct !{!5265, !5133, !5266}
!5266 = !DILocation(line: 873, column: 2, scope: !5120)
!5267 = !DILocation(line: 855, column: 7, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5135, file: !177, line: 855, column: 7)
!5269 = !DILocation(line: 855, column: 10, scope: !5268)
!5270 = !DILocation(line: 855, column: 15, scope: !5268)
!5271 = !DILocation(line: 855, column: 14, scope: !5268)
!5272 = !DILocation(line: 855, column: 19, scope: !5268)
!5273 = !DILocation(line: 855, column: 27, scope: !5268)
!5274 = !DILocation(line: 855, column: 30, scope: !5268)
!5275 = !DILocation(line: 855, column: 33, scope: !5268)
!5276 = !DILocation(line: 855, column: 38, scope: !5268)
!5277 = !DILocation(line: 855, column: 37, scope: !5268)
!5278 = !DILocation(line: 855, column: 43, scope: !5268)
!5279 = !DILocation(line: 855, column: 49, scope: !5268)
!5280 = !DILocation(line: 855, column: 7, scope: !5135)
!5281 = !DILocalVariable(name: "y", scope: !5282, file: !177, line: 857, type: !215)
!5282 = distinct !DILexicalBlock(scope: !5268, file: !177, line: 855, column: 63)
!5283 = !DILocation(line: 857, column: 26, scope: !5282)
!5284 = !DILocation(line: 857, column: 30, scope: !5282)
!5285 = !DILocation(line: 857, column: 33, scope: !5282)
!5286 = !DILocation(line: 857, column: 37, scope: !5282)
!5287 = !DILocation(line: 858, column: 4, scope: !5282)
!5288 = !DILocation(line: 858, column: 7, scope: !5282)
!5289 = !DILocation(line: 858, column: 13, scope: !5282)
!5290 = !DILocation(line: 859, column: 4, scope: !5282)
!5291 = !DILocation(line: 859, column: 7, scope: !5282)
!5292 = !DILocation(line: 859, column: 13, scope: !5282)
!5293 = !DILocation(line: 860, column: 17, scope: !5282)
!5294 = !DILocation(line: 860, column: 20, scope: !5282)
!5295 = !DILocation(line: 860, column: 25, scope: !5282)
!5296 = !DILocation(line: 860, column: 24, scope: !5282)
!5297 = !DILocation(line: 860, column: 4, scope: !5282)
!5298 = !DILocation(line: 860, column: 7, scope: !5282)
!5299 = !DILocation(line: 860, column: 11, scope: !5282)
!5300 = !DILocation(line: 860, column: 15, scope: !5282)
!5301 = !DILocation(line: 861, column: 18, scope: !5282)
!5302 = !DILocation(line: 861, column: 4, scope: !5282)
!5303 = !DILocation(line: 861, column: 7, scope: !5282)
!5304 = !DILocation(line: 861, column: 12, scope: !5282)
!5305 = !DILocation(line: 861, column: 11, scope: !5282)
!5306 = !DILocation(line: 861, column: 16, scope: !5282)
!5307 = !DILocation(line: 862, column: 36, scope: !5282)
!5308 = !DILocation(line: 862, column: 8, scope: !5282)
!5309 = !DILocation(line: 862, column: 13, scope: !5282)
!5310 = !DILocation(line: 862, column: 19, scope: !5282)
!5311 = !DILocation(line: 862, column: 25, scope: !5282)
!5312 = !DILocation(line: 862, column: 30, scope: !5282)
!5313 = !DILocation(line: 862, column: 29, scope: !5282)
!5314 = !DILocation(line: 862, column: 34, scope: !5282)
!5315 = !DILocation(line: 862, column: 6, scope: !5282)
!5316 = !DILocation(line: 863, column: 3, scope: !5282)
!5317 = !DILocation(line: 866, column: 14, scope: !5135)
!5318 = !DILocation(line: 866, column: 19, scope: !5135)
!5319 = !DILocation(line: 866, column: 25, scope: !5135)
!5320 = !DILocation(line: 866, column: 31, scope: !5135)
!5321 = !DILocation(line: 866, column: 3, scope: !5135)
!5322 = !DILocation(line: 866, column: 6, scope: !5135)
!5323 = !DILocation(line: 866, column: 12, scope: !5135)
!5324 = !DILocation(line: 867, column: 3, scope: !5135)
!5325 = !DILocation(line: 867, column: 8, scope: !5135)
!5326 = !DILocation(line: 867, column: 14, scope: !5135)
!5327 = !DILocation(line: 867, column: 20, scope: !5135)
!5328 = !DILocation(line: 867, column: 26, scope: !5135)
!5329 = !DILocation(line: 868, column: 3, scope: !5135)
!5330 = !DILocation(line: 868, column: 6, scope: !5135)
!5331 = !DILocation(line: 868, column: 11, scope: !5135)
!5332 = !DILocation(line: 868, column: 10, scope: !5135)
!5333 = !DILocation(line: 868, column: 16, scope: !5135)
!5334 = !DILocation(line: 868, column: 22, scope: !5135)
!5335 = !DILocation(line: 869, column: 31, scope: !5135)
!5336 = !DILocation(line: 869, column: 34, scope: !5135)
!5337 = !DILocation(line: 869, column: 38, scope: !5135)
!5338 = !DILocation(line: 869, column: 3, scope: !5135)
!5339 = !DILocation(line: 869, column: 8, scope: !5135)
!5340 = !DILocation(line: 869, column: 14, scope: !5135)
!5341 = !DILocation(line: 869, column: 20, scope: !5135)
!5342 = !DILocation(line: 869, column: 25, scope: !5135)
!5343 = !DILocation(line: 869, column: 24, scope: !5135)
!5344 = !DILocation(line: 869, column: 29, scope: !5135)
!5345 = !DILocation(line: 870, column: 16, scope: !5135)
!5346 = !DILocation(line: 870, column: 21, scope: !5135)
!5347 = !DILocation(line: 870, column: 27, scope: !5135)
!5348 = !DILocation(line: 870, column: 3, scope: !5135)
!5349 = !DILocation(line: 870, column: 6, scope: !5135)
!5350 = !DILocation(line: 870, column: 10, scope: !5135)
!5351 = !DILocation(line: 870, column: 14, scope: !5135)
!5352 = !DILocation(line: 871, column: 42, scope: !5135)
!5353 = !DILocation(line: 871, column: 3, scope: !5135)
!5354 = !DILocation(line: 871, column: 8, scope: !5135)
!5355 = !DILocation(line: 871, column: 14, scope: !5135)
!5356 = !DILocation(line: 871, column: 20, scope: !5135)
!5357 = !DILocation(line: 871, column: 24, scope: !5135)
!5358 = !DILocation(line: 871, column: 28, scope: !5135)
!5359 = !DILocation(line: 871, column: 34, scope: !5135)
!5360 = !DILocation(line: 871, column: 40, scope: !5135)
!5361 = !DILocation(line: 872, column: 3, scope: !5135)
!5362 = !DILocation(line: 874, column: 1, scope: !5120)
!5363 = distinct !DISubprogram(name: "HXmap_keysvalues", scope: !177, file: !177, line: 993, type: !5364, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!5366, !3856}
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!5367 = !DILocalVariable(name: "xmap", arg: 1, scope: !5363, file: !177, line: 993, type: !3856)
!5368 = !DILocation(line: 993, column: 71, scope: !5363)
!5369 = !DILocalVariable(name: "vmap", scope: !5363, file: !177, line: 995, type: !90)
!5370 = !DILocation(line: 995, column: 14, scope: !5363)
!5371 = !DILocation(line: 995, column: 21, scope: !5363)
!5372 = !DILocalVariable(name: "map", scope: !5363, file: !177, line: 996, type: !2842)
!5373 = !DILocation(line: 996, column: 30, scope: !5363)
!5374 = !DILocation(line: 996, column: 36, scope: !5363)
!5375 = !DILocalVariable(name: "array", scope: !5363, file: !177, line: 997, type: !5366)
!5376 = !DILocation(line: 997, column: 21, scope: !5363)
!5377 = !DILocation(line: 999, column: 10, scope: !5363)
!5378 = !DILocation(line: 999, column: 15, scope: !5363)
!5379 = !DILocation(line: 999, column: 2, scope: !5363)
!5380 = !DILocation(line: 1002, column: 3, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5363, file: !177, line: 999, column: 21)
!5382 = !DILocation(line: 1004, column: 3, scope: !5381)
!5383 = !DILocation(line: 1004, column: 9, scope: !5381)
!5384 = !DILocation(line: 1005, column: 3, scope: !5381)
!5385 = !DILocation(line: 1008, column: 39, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5363, file: !177, line: 1008, column: 6)
!5387 = !DILocation(line: 1008, column: 44, scope: !5386)
!5388 = !DILocation(line: 1008, column: 37, scope: !5386)
!5389 = !DILocation(line: 1008, column: 15, scope: !5386)
!5390 = !DILocation(line: 1008, column: 13, scope: !5386)
!5391 = !DILocation(line: 1008, column: 52, scope: !5386)
!5392 = !DILocation(line: 1008, column: 6, scope: !5363)
!5393 = !DILocation(line: 1009, column: 3, scope: !5386)
!5394 = !DILocation(line: 1011, column: 10, scope: !5363)
!5395 = !DILocation(line: 1011, column: 15, scope: !5363)
!5396 = !DILocation(line: 1011, column: 2, scope: !5363)
!5397 = !DILocation(line: 1013, column: 21, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5363, file: !177, line: 1011, column: 21)
!5399 = !DILocation(line: 1013, column: 27, scope: !5398)
!5400 = !DILocation(line: 1013, column: 3, scope: !5398)
!5401 = !DILocation(line: 1014, column: 3, scope: !5398)
!5402 = !DILocation(line: 1016, column: 43, scope: !5398)
!5403 = !DILocation(line: 1016, column: 24, scope: !5398)
!5404 = !DILocation(line: 1016, column: 50, scope: !5398)
!5405 = !DILocation(line: 1016, column: 56, scope: !5398)
!5406 = !DILocation(line: 1016, column: 3, scope: !5398)
!5407 = !DILocation(line: 1017, column: 3, scope: !5398)
!5408 = !DILocation(line: 1019, column: 9, scope: !5363)
!5409 = !DILocation(line: 1019, column: 2, scope: !5363)
!5410 = !DILocation(line: 1020, column: 1, scope: !5363)
!5411 = distinct !DISubprogram(name: "HXhmap_keysvalues", scope: !177, file: !177, line: 966, type: !5412, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{null, !3896, !5366}
!5414 = !DILocalVariable(name: "hmap", arg: 1, scope: !5411, file: !177, line: 966, type: !3896)
!5415 = !DILocation(line: 966, column: 52, scope: !5411)
!5416 = !DILocalVariable(name: "array", arg: 2, scope: !5411, file: !177, line: 967, type: !5366)
!5417 = !DILocation(line: 967, column: 24, scope: !5411)
!5418 = !DILocalVariable(name: "node", scope: !5411, file: !177, line: 969, type: !253)
!5419 = !DILocation(line: 969, column: 28, scope: !5411)
!5420 = !DILocalVariable(name: "i", scope: !5411, file: !177, line: 970, type: !7)
!5421 = !DILocation(line: 970, column: 15, scope: !5411)
!5422 = !DILocation(line: 972, column: 9, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5411, file: !177, line: 972, column: 2)
!5424 = !DILocation(line: 972, column: 7, scope: !5423)
!5425 = !DILocation(line: 972, column: 14, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !177, line: 972, column: 2)
!5427 = !DILocation(line: 972, column: 32, scope: !5426)
!5428 = !DILocation(line: 972, column: 38, scope: !5426)
!5429 = !DILocation(line: 972, column: 18, scope: !5426)
!5430 = !DILocation(line: 972, column: 16, scope: !5426)
!5431 = !DILocation(line: 972, column: 2, scope: !5423)
!5432 = !DILocation(line: 973, column: 3, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5426, file: !177, line: 973, column: 3)
!5434 = !DILocation(line: 973, column: 3, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5433, file: !177, line: 973, column: 3)
!5436 = !DILocation(line: 974, column: 18, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5435, file: !177, line: 973, column: 59)
!5438 = !DILocation(line: 974, column: 24, scope: !5437)
!5439 = !DILocation(line: 974, column: 4, scope: !5437)
!5440 = !DILocation(line: 974, column: 11, scope: !5437)
!5441 = !DILocation(line: 974, column: 16, scope: !5437)
!5442 = !DILocation(line: 975, column: 18, scope: !5437)
!5443 = !DILocation(line: 975, column: 24, scope: !5437)
!5444 = !DILocation(line: 975, column: 4, scope: !5437)
!5445 = !DILocation(line: 975, column: 11, scope: !5437)
!5446 = !DILocation(line: 975, column: 16, scope: !5437)
!5447 = !DILocation(line: 976, column: 4, scope: !5437)
!5448 = !DILocation(line: 977, column: 3, scope: !5437)
!5449 = distinct !{!5449, !5432, !5450}
!5450 = !DILocation(line: 977, column: 3, scope: !5433)
!5451 = !DILocation(line: 972, column: 46, scope: !5426)
!5452 = !DILocation(line: 972, column: 2, scope: !5426)
!5453 = distinct !{!5453, !5431, !5454}
!5454 = !DILocation(line: 977, column: 3, scope: !5423)
!5455 = !DILocation(line: 978, column: 1, scope: !5411)
!5456 = distinct !DISubprogram(name: "HXrbtree_keysvalues", scope: !177, file: !177, line: 980, type: !5457, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!5366, !5459, !5366}
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!5461 = !DILocalVariable(name: "node", arg: 1, scope: !5456, file: !177, line: 980, type: !5459)
!5462 = !DILocation(line: 980, column: 75, scope: !5456)
!5463 = !DILocalVariable(name: "array", arg: 2, scope: !5456, file: !177, line: 981, type: !5366)
!5464 = !DILocation(line: 981, column: 24, scope: !5456)
!5465 = !DILocation(line: 983, column: 6, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5456, file: !177, line: 983, column: 6)
!5467 = !DILocation(line: 983, column: 12, scope: !5466)
!5468 = !DILocation(line: 983, column: 19, scope: !5466)
!5469 = !DILocation(line: 983, column: 6, scope: !5456)
!5470 = !DILocation(line: 984, column: 31, scope: !5466)
!5471 = !DILocation(line: 984, column: 37, scope: !5466)
!5472 = !DILocation(line: 984, column: 45, scope: !5466)
!5473 = !DILocation(line: 984, column: 11, scope: !5466)
!5474 = !DILocation(line: 984, column: 9, scope: !5466)
!5475 = !DILocation(line: 984, column: 3, scope: !5466)
!5476 = !DILocation(line: 985, column: 16, scope: !5456)
!5477 = !DILocation(line: 985, column: 22, scope: !5456)
!5478 = !DILocation(line: 985, column: 2, scope: !5456)
!5479 = !DILocation(line: 985, column: 9, scope: !5456)
!5480 = !DILocation(line: 985, column: 14, scope: !5456)
!5481 = !DILocation(line: 986, column: 16, scope: !5456)
!5482 = !DILocation(line: 986, column: 22, scope: !5456)
!5483 = !DILocation(line: 986, column: 2, scope: !5456)
!5484 = !DILocation(line: 986, column: 9, scope: !5456)
!5485 = !DILocation(line: 986, column: 14, scope: !5456)
!5486 = !DILocation(line: 987, column: 2, scope: !5456)
!5487 = !DILocation(line: 988, column: 6, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5456, file: !177, line: 988, column: 6)
!5489 = !DILocation(line: 988, column: 12, scope: !5488)
!5490 = !DILocation(line: 988, column: 19, scope: !5488)
!5491 = !DILocation(line: 988, column: 6, scope: !5456)
!5492 = !DILocation(line: 989, column: 31, scope: !5488)
!5493 = !DILocation(line: 989, column: 37, scope: !5488)
!5494 = !DILocation(line: 989, column: 45, scope: !5488)
!5495 = !DILocation(line: 989, column: 11, scope: !5488)
!5496 = !DILocation(line: 989, column: 9, scope: !5488)
!5497 = !DILocation(line: 989, column: 3, scope: !5488)
!5498 = !DILocation(line: 990, column: 9, scope: !5456)
!5499 = !DILocation(line: 990, column: 2, scope: !5456)
!5500 = distinct !DISubprogram(name: "HXmap_travinit", scope: !177, file: !177, line: 1050, type: !5501, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!5503, !3856, !7}
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap_trav", file: !180, line: 57, size: 64, elements: !5505)
!5505 = !{!5506, !5507}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5504, file: !180, line: 58, baseType: !5, size: 32)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5504, file: !180, line: 59, baseType: !7, size: 32, offset: 32)
!5508 = !DILocalVariable(name: "xmap", arg: 1, scope: !5500, file: !177, line: 1050, type: !3856)
!5509 = !DILocation(line: 1050, column: 69, scope: !5500)
!5510 = !DILocalVariable(name: "flags", arg: 2, scope: !5500, file: !177, line: 1051, type: !7)
!5511 = !DILocation(line: 1051, column: 18, scope: !5500)
!5512 = !DILocalVariable(name: "vmap", scope: !5500, file: !177, line: 1053, type: !90)
!5513 = !DILocation(line: 1053, column: 14, scope: !5500)
!5514 = !DILocation(line: 1053, column: 21, scope: !5500)
!5515 = !DILocalVariable(name: "map", scope: !5500, file: !177, line: 1054, type: !2842)
!5516 = !DILocation(line: 1054, column: 30, scope: !5500)
!5517 = !DILocation(line: 1054, column: 36, scope: !5500)
!5518 = !DILocation(line: 1056, column: 10, scope: !5500)
!5519 = !DILocation(line: 1056, column: 15, scope: !5500)
!5520 = !DILocation(line: 1056, column: 2, scope: !5500)
!5521 = !DILocation(line: 1058, column: 26, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5500, file: !177, line: 1056, column: 21)
!5523 = !DILocation(line: 1058, column: 32, scope: !5522)
!5524 = !DILocation(line: 1058, column: 10, scope: !5522)
!5525 = !DILocation(line: 1058, column: 3, scope: !5522)
!5526 = !DILocation(line: 1060, column: 24, scope: !5522)
!5527 = !DILocation(line: 1060, column: 30, scope: !5522)
!5528 = !DILocation(line: 1060, column: 10, scope: !5522)
!5529 = !DILocation(line: 1060, column: 3, scope: !5522)
!5530 = !DILocation(line: 1062, column: 3, scope: !5522)
!5531 = !DILocation(line: 1062, column: 9, scope: !5522)
!5532 = !DILocation(line: 1063, column: 3, scope: !5522)
!5533 = !DILocation(line: 1065, column: 1, scope: !5500)
!5534 = distinct !DISubprogram(name: "HXhmap_travinit", scope: !177, file: !177, line: 1022, type: !5535, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{!89, !3896, !7}
!5537 = !DILocalVariable(name: "hmap", arg: 1, scope: !5534, file: !177, line: 1022, type: !3896)
!5538 = !DILocation(line: 1022, column: 51, scope: !5534)
!5539 = !DILocalVariable(name: "flags", arg: 2, scope: !5534, file: !177, line: 1022, type: !7)
!5540 = !DILocation(line: 1022, column: 70, scope: !5534)
!5541 = !DILocalVariable(name: "trav", scope: !5534, file: !177, line: 1024, type: !5542)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXhmap_trav", file: !180, line: 62, size: 256, elements: !5544)
!5544 = !{!5545, !5546, !5547, !5550, !5551}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "super", scope: !5543, file: !180, line: 63, baseType: !5504, size: 64)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "hmap", scope: !5543, file: !180, line: 64, baseType: !3896, size: 64, offset: 64)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5543, file: !180, line: 65, baseType: !5548, size: 64, offset: 128)
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 64)
!5549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "bk_current", scope: !5543, file: !180, line: 66, baseType: !7, size: 32, offset: 192)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !5543, file: !180, line: 66, baseType: !7, size: 32, offset: 224)
!5552 = !DILocation(line: 1024, column: 22, scope: !5534)
!5553 = !DILocation(line: 1026, column: 14, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5534, file: !177, line: 1026, column: 6)
!5555 = !DILocation(line: 1026, column: 12, scope: !5554)
!5556 = !DILocation(line: 1026, column: 37, scope: !5554)
!5557 = !DILocation(line: 1026, column: 6, scope: !5534)
!5558 = !DILocation(line: 1027, column: 3, scope: !5554)
!5559 = !DILocation(line: 1029, column: 22, scope: !5534)
!5560 = !DILocation(line: 1029, column: 28, scope: !5534)
!5561 = !DILocation(line: 1029, column: 2, scope: !5534)
!5562 = !DILocation(line: 1029, column: 8, scope: !5534)
!5563 = !DILocation(line: 1029, column: 14, scope: !5534)
!5564 = !DILocation(line: 1029, column: 20, scope: !5534)
!5565 = !DILocation(line: 1030, column: 2, scope: !5534)
!5566 = !DILocation(line: 1030, column: 8, scope: !5534)
!5567 = !DILocation(line: 1030, column: 14, scope: !5534)
!5568 = !DILocation(line: 1030, column: 19, scope: !5534)
!5569 = !DILocation(line: 1031, column: 15, scope: !5534)
!5570 = !DILocation(line: 1031, column: 2, scope: !5534)
!5571 = !DILocation(line: 1031, column: 8, scope: !5534)
!5572 = !DILocation(line: 1031, column: 13, scope: !5534)
!5573 = !DILocation(line: 1032, column: 2, scope: !5534)
!5574 = !DILocation(line: 1032, column: 8, scope: !5534)
!5575 = !DILocation(line: 1032, column: 13, scope: !5534)
!5576 = !DILocation(line: 1033, column: 2, scope: !5534)
!5577 = !DILocation(line: 1033, column: 8, scope: !5534)
!5578 = !DILocation(line: 1033, column: 19, scope: !5534)
!5579 = !DILocation(line: 1034, column: 14, scope: !5534)
!5580 = !DILocation(line: 1034, column: 20, scope: !5534)
!5581 = !DILocation(line: 1034, column: 2, scope: !5534)
!5582 = !DILocation(line: 1034, column: 8, scope: !5534)
!5583 = !DILocation(line: 1034, column: 12, scope: !5534)
!5584 = !DILocation(line: 1035, column: 9, scope: !5534)
!5585 = !DILocation(line: 1035, column: 2, scope: !5534)
!5586 = !DILocation(line: 1036, column: 1, scope: !5534)
!5587 = distinct !DISubprogram(name: "HXrbtrav_init", scope: !177, file: !177, line: 1038, type: !5588, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!89, !2956, !7}
!5590 = !DILocalVariable(name: "btree", arg: 1, scope: !5587, file: !177, line: 1038, type: !2956)
!5591 = !DILocation(line: 1038, column: 51, scope: !5587)
!5592 = !DILocalVariable(name: "flags", arg: 2, scope: !5587, file: !177, line: 1038, type: !7)
!5593 = !DILocation(line: 1038, column: 71, scope: !5587)
!5594 = !DILocalVariable(name: "trav", scope: !5587, file: !177, line: 1040, type: !5595)
!5595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5596, size: 64)
!5596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXrbtrav", file: !180, line: 102, size: 3840, elements: !5597)
!5597 = !{!5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "super", scope: !5596, file: !180, line: 103, baseType: !5504, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !5596, file: !180, line: 104, baseType: !7, size: 32, offset: 64)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !5596, file: !180, line: 105, baseType: !2956, size: 64, offset: 128)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !5596, file: !180, line: 106, baseType: !215, size: 64, offset: 192)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "checkpoint", scope: !5596, file: !180, line: 107, baseType: !92, size: 64, offset: 256)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !5596, file: !180, line: 108, baseType: !4243, size: 3072, offset: 320)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5596, file: !180, line: 109, baseType: !4248, size: 384, offset: 3392)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !5596, file: !180, line: 110, baseType: !231, size: 8, offset: 3776)
!5606 = !DILocation(line: 1040, column: 19, scope: !5587)
!5607 = !DILocation(line: 1042, column: 14, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5587, file: !177, line: 1042, column: 6)
!5609 = !DILocation(line: 1042, column: 12, scope: !5608)
!5610 = !DILocation(line: 1042, column: 40, scope: !5608)
!5611 = !DILocation(line: 1042, column: 6, scope: !5587)
!5612 = !DILocation(line: 1043, column: 3, scope: !5608)
!5613 = !DILocation(line: 1044, column: 22, scope: !5587)
!5614 = !DILocation(line: 1044, column: 2, scope: !5587)
!5615 = !DILocation(line: 1044, column: 8, scope: !5587)
!5616 = !DILocation(line: 1044, column: 14, scope: !5587)
!5617 = !DILocation(line: 1044, column: 20, scope: !5587)
!5618 = !DILocation(line: 1045, column: 2, scope: !5587)
!5619 = !DILocation(line: 1045, column: 8, scope: !5587)
!5620 = !DILocation(line: 1045, column: 14, scope: !5587)
!5621 = !DILocation(line: 1045, column: 19, scope: !5587)
!5622 = !DILocation(line: 1046, column: 15, scope: !5587)
!5623 = !DILocation(line: 1046, column: 2, scope: !5587)
!5624 = !DILocation(line: 1046, column: 8, scope: !5587)
!5625 = !DILocation(line: 1046, column: 13, scope: !5587)
!5626 = !DILocation(line: 1047, column: 9, scope: !5587)
!5627 = !DILocation(line: 1047, column: 2, scope: !5587)
!5628 = !DILocation(line: 1048, column: 1, scope: !5587)
!5629 = distinct !DISubprogram(name: "HXmap_traverse", scope: !177, file: !177, line: 1275, type: !5630, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5630 = !DISubroutineType(types: !5631)
!5631 = !{!3842, !5503}
!5632 = !DILocalVariable(name: "trav", arg: 1, scope: !5629, file: !177, line: 1275, type: !5503)
!5633 = !DILocation(line: 1275, column: 74, scope: !5629)
!5634 = !DILocalVariable(name: "xtrav", scope: !5629, file: !177, line: 1277, type: !89)
!5635 = !DILocation(line: 1277, column: 8, scope: !5629)
!5636 = !DILocation(line: 1277, column: 16, scope: !5629)
!5637 = !DILocation(line: 1279, column: 6, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5629, file: !177, line: 1279, column: 6)
!5639 = !DILocation(line: 1279, column: 12, scope: !5638)
!5640 = !DILocation(line: 1279, column: 6, scope: !5629)
!5641 = !DILocation(line: 1280, column: 3, scope: !5638)
!5642 = !DILocation(line: 1282, column: 10, scope: !5629)
!5643 = !DILocation(line: 1282, column: 16, scope: !5629)
!5644 = !DILocation(line: 1282, column: 2, scope: !5629)
!5645 = !DILocation(line: 1284, column: 26, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5629, file: !177, line: 1282, column: 22)
!5647 = !DILocation(line: 1284, column: 10, scope: !5646)
!5648 = !DILocation(line: 1284, column: 3, scope: !5646)
!5649 = !DILocation(line: 1286, column: 28, scope: !5646)
!5650 = !DILocation(line: 1286, column: 10, scope: !5646)
!5651 = !DILocation(line: 1286, column: 3, scope: !5646)
!5652 = !DILocation(line: 1288, column: 3, scope: !5646)
!5653 = !DILocation(line: 1288, column: 9, scope: !5646)
!5654 = !DILocation(line: 1289, column: 3, scope: !5646)
!5655 = !DILocation(line: 1291, column: 1, scope: !5629)
!5656 = distinct !DISubprogram(name: "HXhmap_traverse", scope: !177, file: !177, line: 1067, type: !5657, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!3842, !5542}
!5659 = !DILocalVariable(name: "trav", arg: 1, scope: !5656, file: !177, line: 1067, type: !5542)
!5660 = !DILocation(line: 1067, column: 69, scope: !5656)
!5661 = !DILocalVariable(name: "hmap", scope: !5656, file: !177, line: 1069, type: !3896)
!5662 = !DILocation(line: 1069, column: 23, scope: !5656)
!5663 = !DILocation(line: 1069, column: 30, scope: !5656)
!5664 = !DILocation(line: 1069, column: 36, scope: !5656)
!5665 = !DILocalVariable(name: "drop", scope: !5656, file: !177, line: 1070, type: !253)
!5666 = !DILocation(line: 1070, column: 28, scope: !5656)
!5667 = !DILocation(line: 1072, column: 6, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5656, file: !177, line: 1072, column: 6)
!5669 = !DILocation(line: 1072, column: 12, scope: !5668)
!5670 = !DILocation(line: 1072, column: 17, scope: !5668)
!5671 = !DILocation(line: 1072, column: 6, scope: !5656)
!5672 = !DILocation(line: 1073, column: 16, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5668, file: !177, line: 1072, column: 26)
!5674 = !DILocation(line: 1073, column: 22, scope: !5673)
!5675 = !DILocation(line: 1073, column: 31, scope: !5673)
!5676 = !DILocation(line: 1073, column: 37, scope: !5673)
!5677 = !DILocation(line: 1073, column: 49, scope: !5673)
!5678 = !DILocation(line: 1073, column: 3, scope: !5673)
!5679 = !DILocation(line: 1073, column: 9, scope: !5673)
!5680 = !DILocation(line: 1073, column: 14, scope: !5673)
!5681 = !DILocation(line: 1074, column: 2, scope: !5673)
!5682 = !DILocation(line: 1074, column: 13, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5668, file: !177, line: 1074, column: 13)
!5684 = !DILocation(line: 1074, column: 19, scope: !5683)
!5685 = !DILocation(line: 1074, column: 26, scope: !5683)
!5686 = !DILocation(line: 1074, column: 32, scope: !5683)
!5687 = !DILocation(line: 1074, column: 23, scope: !5683)
!5688 = !DILocation(line: 1074, column: 13, scope: !5668)
!5689 = !DILocation(line: 1075, column: 7, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !177, line: 1075, column: 7)
!5691 = distinct !DILexicalBlock(scope: !5683, file: !177, line: 1074, column: 37)
!5692 = !DILocation(line: 1075, column: 13, scope: !5690)
!5693 = !DILocation(line: 1075, column: 41, scope: !5690)
!5694 = !DILocation(line: 1075, column: 47, scope: !5690)
!5695 = !DILocation(line: 1075, column: 27, scope: !5690)
!5696 = !DILocation(line: 1075, column: 24, scope: !5690)
!5697 = !DILocation(line: 1075, column: 7, scope: !5691)
!5698 = !DILocation(line: 1077, column: 4, scope: !5690)
!5699 = !DILocation(line: 1082, column: 17, scope: !5691)
!5700 = !DILocation(line: 1082, column: 23, scope: !5691)
!5701 = !DILocation(line: 1082, column: 32, scope: !5691)
!5702 = !DILocation(line: 1082, column: 38, scope: !5691)
!5703 = !DILocation(line: 1082, column: 3, scope: !5691)
!5704 = !DILocation(line: 1082, column: 9, scope: !5691)
!5705 = !DILocation(line: 1082, column: 14, scope: !5691)
!5706 = !DILocation(line: 1083, column: 16, scope: !5691)
!5707 = !DILocation(line: 1083, column: 22, scope: !5691)
!5708 = !DILocation(line: 1083, column: 3, scope: !5691)
!5709 = !DILocation(line: 1083, column: 9, scope: !5691)
!5710 = !DILocation(line: 1083, column: 14, scope: !5691)
!5711 = !DILocation(line: 1084, column: 2, scope: !5691)
!5712 = !DILocation(line: 1085, column: 16, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5683, file: !177, line: 1084, column: 9)
!5714 = !DILocation(line: 1085, column: 22, scope: !5713)
!5715 = !DILocation(line: 1085, column: 28, scope: !5713)
!5716 = !DILocation(line: 1085, column: 3, scope: !5713)
!5717 = !DILocation(line: 1085, column: 9, scope: !5713)
!5718 = !DILocation(line: 1085, column: 14, scope: !5713)
!5719 = !DILocation(line: 1088, column: 2, scope: !5656)
!5720 = !DILocation(line: 1088, column: 9, scope: !5656)
!5721 = !DILocation(line: 1088, column: 15, scope: !5656)
!5722 = !DILocation(line: 1088, column: 24, scope: !5656)
!5723 = !DILocation(line: 1088, column: 30, scope: !5656)
!5724 = !DILocation(line: 1088, column: 39, scope: !5656)
!5725 = !DILocation(line: 1088, column: 45, scope: !5656)
!5726 = !DILocation(line: 1088, column: 20, scope: !5656)
!5727 = !DILocation(line: 1089, column: 9, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5729, file: !177, line: 1089, column: 7)
!5729 = distinct !DILexicalBlock(scope: !5656, file: !177, line: 1088, column: 58)
!5730 = !DILocation(line: 1089, column: 15, scope: !5728)
!5731 = !DILocation(line: 1089, column: 7, scope: !5728)
!5732 = !DILocation(line: 1089, column: 43, scope: !5728)
!5733 = !DILocation(line: 1089, column: 49, scope: !5728)
!5734 = !DILocation(line: 1089, column: 29, scope: !5728)
!5735 = !DILocation(line: 1089, column: 26, scope: !5728)
!5736 = !DILocation(line: 1089, column: 7, scope: !5729)
!5737 = !DILocation(line: 1090, column: 4, scope: !5728)
!5738 = !DILocation(line: 1091, column: 16, scope: !5729)
!5739 = !DILocation(line: 1091, column: 22, scope: !5729)
!5740 = !DILocation(line: 1091, column: 31, scope: !5729)
!5741 = !DILocation(line: 1091, column: 37, scope: !5729)
!5742 = !DILocation(line: 1091, column: 49, scope: !5729)
!5743 = !DILocation(line: 1091, column: 3, scope: !5729)
!5744 = !DILocation(line: 1091, column: 9, scope: !5729)
!5745 = !DILocation(line: 1091, column: 14, scope: !5729)
!5746 = distinct !{!5746, !5719, !5747}
!5747 = !DILocation(line: 1092, column: 2, scope: !5656)
!5748 = !DILocation(line: 1094, column: 9, scope: !5656)
!5749 = !DILocation(line: 1094, column: 7, scope: !5656)
!5750 = !DILocation(line: 1095, column: 9, scope: !5656)
!5751 = !DILocation(line: 1095, column: 2, scope: !5656)
!5752 = !DILocation(line: 1096, column: 1, scope: !5656)
!5753 = distinct !DISubprogram(name: "HXrbtree_traverse", scope: !177, file: !177, line: 1259, type: !5754, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5754 = !DISubroutineType(types: !5755)
!5755 = !{!3842, !5595}
!5756 = !DILocalVariable(name: "trav", arg: 1, scope: !5753, file: !177, line: 1259, type: !5595)
!5757 = !DILocation(line: 1259, column: 68, scope: !5753)
!5758 = !DILocalVariable(name: "node", scope: !5753, file: !177, line: 1261, type: !5459)
!5759 = !DILocation(line: 1261, column: 30, scope: !5753)
!5760 = !DILocation(line: 1263, column: 6, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5753, file: !177, line: 1263, column: 6)
!5762 = !DILocation(line: 1263, column: 12, scope: !5761)
!5763 = !DILocation(line: 1263, column: 19, scope: !5761)
!5764 = !DILocation(line: 1263, column: 25, scope: !5761)
!5765 = !DILocation(line: 1263, column: 31, scope: !5761)
!5766 = !DILocation(line: 1263, column: 16, scope: !5761)
!5767 = !DILocation(line: 1263, column: 35, scope: !5761)
!5768 = !DILocation(line: 1263, column: 38, scope: !5761)
!5769 = !DILocation(line: 1263, column: 44, scope: !5761)
!5770 = !DILocation(line: 1263, column: 52, scope: !5761)
!5771 = !DILocation(line: 1263, column: 6, scope: !5753)
!5772 = !DILocation(line: 1268, column: 26, scope: !5761)
!5773 = !DILocation(line: 1268, column: 10, scope: !5761)
!5774 = !DILocation(line: 1268, column: 8, scope: !5761)
!5775 = !DILocation(line: 1268, column: 3, scope: !5761)
!5776 = !DILocation(line: 1270, column: 24, scope: !5761)
!5777 = !DILocation(line: 1270, column: 10, scope: !5761)
!5778 = !DILocation(line: 1270, column: 8, scope: !5761)
!5779 = !DILocation(line: 1272, column: 10, scope: !5753)
!5780 = !DILocation(line: 1272, column: 15, scope: !5753)
!5781 = !DILocation(line: 1272, column: 9, scope: !5753)
!5782 = !DILocation(line: 1272, column: 26, scope: !5753)
!5783 = !DILocation(line: 1272, column: 2, scope: !5753)
!5784 = distinct !DISubprogram(name: "HXrbtrav_rewalk", scope: !177, file: !177, line: 1159, type: !5785, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!215, !5595}
!5787 = !DILocalVariable(name: "trav", arg: 1, scope: !5784, file: !177, line: 1159, type: !5595)
!5788 = !DILocation(line: 1159, column: 63, scope: !5784)
!5789 = !DILocalVariable(name: "btree", scope: !5784, file: !177, line: 1167, type: !2956)
!5790 = !DILocation(line: 1167, column: 25, scope: !5784)
!5791 = !DILocation(line: 1167, column: 33, scope: !5784)
!5792 = !DILocation(line: 1167, column: 39, scope: !5784)
!5793 = !DILocalVariable(name: "node", scope: !5784, file: !177, line: 1168, type: !215)
!5794 = !DILocation(line: 1168, column: 24, scope: !5784)
!5795 = !DILocation(line: 1168, column: 33, scope: !5784)
!5796 = !DILocation(line: 1168, column: 40, scope: !5784)
!5797 = !DILocalVariable(name: "go_next", scope: !5784, file: !177, line: 1169, type: !141)
!5798 = !DILocation(line: 1169, column: 7, scope: !5784)
!5799 = !DILocation(line: 1171, column: 2, scope: !5784)
!5800 = !DILocation(line: 1171, column: 8, scope: !5784)
!5801 = !DILocation(line: 1171, column: 14, scope: !5784)
!5802 = !DILocation(line: 1173, column: 6, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5784, file: !177, line: 1173, column: 6)
!5804 = !DILocation(line: 1173, column: 12, scope: !5803)
!5805 = !DILocation(line: 1173, column: 20, scope: !5803)
!5806 = !DILocation(line: 1173, column: 6, scope: !5784)
!5807 = !DILocation(line: 1175, column: 3, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5803, file: !177, line: 1173, column: 29)
!5809 = !DILocation(line: 1175, column: 10, scope: !5808)
!5810 = !DILocation(line: 1175, column: 15, scope: !5808)
!5811 = !DILocation(line: 1176, column: 30, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5808, file: !177, line: 1175, column: 24)
!5813 = !DILocation(line: 1176, column: 4, scope: !5812)
!5814 = !DILocation(line: 1176, column: 10, scope: !5812)
!5815 = !DILocation(line: 1176, column: 15, scope: !5812)
!5816 = !DILocation(line: 1176, column: 21, scope: !5812)
!5817 = !DILocation(line: 1176, column: 28, scope: !5812)
!5818 = !DILocation(line: 1177, column: 11, scope: !5812)
!5819 = !DILocation(line: 1177, column: 17, scope: !5812)
!5820 = !DILocation(line: 1177, column: 9, scope: !5812)
!5821 = !DILocation(line: 1178, column: 4, scope: !5812)
!5822 = !DILocation(line: 1178, column: 10, scope: !5812)
!5823 = !DILocation(line: 1178, column: 14, scope: !5812)
!5824 = !DILocation(line: 1178, column: 20, scope: !5812)
!5825 = !DILocation(line: 1178, column: 25, scope: !5812)
!5826 = !DILocation(line: 1178, column: 29, scope: !5812)
!5827 = distinct !{!5827, !5807, !5828}
!5828 = !DILocation(line: 1179, column: 3, scope: !5808)
!5829 = !DILocation(line: 1180, column: 2, scope: !5808)
!5830 = !DILocalVariable(name: "newpath", scope: !5831, file: !177, line: 1182, type: !5832)
!5831 = distinct !DILexicalBlock(scope: !5803, file: !177, line: 1180, column: 9)
!5832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5459, size: 3072, elements: !4244)
!5833 = !DILocation(line: 1182, column: 31, scope: !5831)
!5834 = !DILocalVariable(name: "newdir", scope: !5831, file: !177, line: 1183, type: !4248)
!5835 = !DILocation(line: 1183, column: 17, scope: !5831)
!5836 = !DILocalVariable(name: "newdepth", scope: !5831, file: !177, line: 1184, type: !14)
!5837 = !DILocation(line: 1184, column: 7, scope: !5831)
!5838 = !DILocalVariable(name: "res", scope: !5831, file: !177, line: 1184, type: !14)
!5839 = !DILocation(line: 1184, column: 21, scope: !5831)
!5840 = !DILocalVariable(name: "found", scope: !5831, file: !177, line: 1185, type: !141)
!5841 = !DILocation(line: 1185, column: 8, scope: !5831)
!5842 = !DILocation(line: 1187, column: 3, scope: !5831)
!5843 = !DILocation(line: 1187, column: 10, scope: !5831)
!5844 = !DILocation(line: 1187, column: 15, scope: !5831)
!5845 = !DILocation(line: 1188, column: 50, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5831, file: !177, line: 1187, column: 24)
!5847 = !DILocation(line: 1188, column: 24, scope: !5846)
!5848 = !DILocation(line: 1188, column: 30, scope: !5846)
!5849 = !DILocation(line: 1188, column: 35, scope: !5846)
!5850 = !DILocation(line: 1188, column: 41, scope: !5846)
!5851 = !DILocation(line: 1188, column: 48, scope: !5846)
!5852 = !DILocation(line: 1188, column: 12, scope: !5846)
!5853 = !DILocation(line: 1188, column: 4, scope: !5846)
!5854 = !DILocation(line: 1188, column: 22, scope: !5846)
!5855 = !DILocation(line: 1189, column: 10, scope: !5846)
!5856 = !DILocation(line: 1189, column: 17, scope: !5846)
!5857 = !DILocation(line: 1189, column: 23, scope: !5846)
!5858 = !DILocation(line: 1189, column: 27, scope: !5846)
!5859 = !DILocation(line: 1189, column: 37, scope: !5846)
!5860 = !DILocation(line: 1189, column: 43, scope: !5846)
!5861 = !DILocation(line: 1190, column: 10, scope: !5846)
!5862 = !DILocation(line: 1190, column: 16, scope: !5846)
!5863 = !DILocation(line: 1190, column: 21, scope: !5846)
!5864 = !DILocation(line: 1190, column: 28, scope: !5846)
!5865 = !DILocation(line: 1190, column: 34, scope: !5846)
!5866 = !DILocation(line: 1189, column: 8, scope: !5846)
!5867 = !DILocation(line: 1191, column: 8, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5846, file: !177, line: 1191, column: 8)
!5869 = !DILocation(line: 1191, column: 12, scope: !5868)
!5870 = !DILocation(line: 1191, column: 8, scope: !5846)
!5871 = !DILocation(line: 1192, column: 7, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5868, file: !177, line: 1191, column: 18)
!5873 = !DILocation(line: 1192, column: 13, scope: !5872)
!5874 = !DILocation(line: 1192, column: 5, scope: !5872)
!5875 = !DILocation(line: 1193, column: 11, scope: !5872)
!5876 = !DILocation(line: 1194, column: 5, scope: !5872)
!5877 = !DILocation(line: 1196, column: 10, scope: !5846)
!5878 = !DILocation(line: 1196, column: 14, scope: !5846)
!5879 = !DILocation(line: 1196, column: 8, scope: !5846)
!5880 = !DILocation(line: 1197, column: 31, scope: !5846)
!5881 = !DILocation(line: 1197, column: 4, scope: !5846)
!5882 = !DILocation(line: 1197, column: 10, scope: !5846)
!5883 = !DILocation(line: 1197, column: 14, scope: !5846)
!5884 = !DILocation(line: 1197, column: 20, scope: !5846)
!5885 = !DILocation(line: 1197, column: 25, scope: !5846)
!5886 = !DILocation(line: 1197, column: 29, scope: !5846)
!5887 = !DILocation(line: 1216, column: 8, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5846, file: !177, line: 1216, column: 8)
!5889 = !DILocation(line: 1216, column: 12, scope: !5888)
!5890 = !DILocation(line: 1216, column: 8, scope: !5846)
!5891 = !DILocation(line: 1217, column: 20, scope: !5888)
!5892 = !DILocation(line: 1217, column: 5, scope: !5888)
!5893 = !DILocation(line: 1217, column: 24, scope: !5888)
!5894 = !DILocation(line: 1219, column: 11, scope: !5846)
!5895 = !DILocation(line: 1219, column: 17, scope: !5846)
!5896 = !DILocation(line: 1219, column: 21, scope: !5846)
!5897 = !DILocation(line: 1219, column: 9, scope: !5846)
!5898 = distinct !{!5898, !5842, !5899}
!5899 = !DILocation(line: 1220, column: 3, scope: !5831)
!5900 = !DILocation(line: 1222, column: 7, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5831, file: !177, line: 1222, column: 7)
!5902 = !DILocation(line: 1222, column: 7, scope: !5831)
!5903 = !DILocation(line: 1228, column: 12, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5901, file: !177, line: 1222, column: 14)
!5905 = !DILocation(line: 1229, column: 3, scope: !5904)
!5906 = !DILocation(line: 1236, column: 11, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5901, file: !177, line: 1229, column: 10)
!5908 = !DILocation(line: 1236, column: 17, scope: !5907)
!5909 = !DILocation(line: 1236, column: 4, scope: !5907)
!5910 = !DILocation(line: 1237, column: 11, scope: !5907)
!5911 = !DILocation(line: 1237, column: 17, scope: !5907)
!5912 = !DILocation(line: 1237, column: 4, scope: !5907)
!5913 = !DILocation(line: 1238, column: 18, scope: !5907)
!5914 = !DILocation(line: 1238, column: 4, scope: !5907)
!5915 = !DILocation(line: 1238, column: 10, scope: !5907)
!5916 = !DILocation(line: 1238, column: 16, scope: !5907)
!5917 = !DILocation(line: 1242, column: 6, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5784, file: !177, line: 1242, column: 6)
!5919 = !DILocation(line: 1242, column: 12, scope: !5918)
!5920 = !DILocation(line: 1242, column: 18, scope: !5918)
!5921 = !DILocation(line: 1242, column: 6, scope: !5784)
!5922 = !DILocation(line: 1244, column: 3, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5918, file: !177, line: 1242, column: 24)
!5924 = !DILocation(line: 1244, column: 9, scope: !5923)
!5925 = !DILocation(line: 1244, column: 17, scope: !5923)
!5926 = !DILocation(line: 1245, column: 2, scope: !5923)
!5927 = !DILocation(line: 1246, column: 19, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5918, file: !177, line: 1245, column: 9)
!5929 = !DILocation(line: 1246, column: 25, scope: !5928)
!5930 = !DILocation(line: 1246, column: 32, scope: !5928)
!5931 = !DILocation(line: 1246, column: 38, scope: !5928)
!5932 = !DILocation(line: 1246, column: 30, scope: !5928)
!5933 = !DILocation(line: 1246, column: 3, scope: !5928)
!5934 = !DILocation(line: 1246, column: 9, scope: !5928)
!5935 = !DILocation(line: 1246, column: 17, scope: !5928)
!5936 = !DILocation(line: 1247, column: 7, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5928, file: !177, line: 1247, column: 7)
!5938 = !DILocation(line: 1247, column: 13, scope: !5937)
!5939 = !DILocation(line: 1247, column: 21, scope: !5937)
!5940 = !DILocation(line: 1247, column: 7, scope: !5928)
!5941 = !DILocation(line: 1248, column: 12, scope: !5937)
!5942 = !DILocation(line: 1248, column: 4, scope: !5937)
!5943 = !DILocation(line: 1249, column: 23, scope: !5928)
!5944 = !DILocation(line: 1249, column: 29, scope: !5928)
!5945 = !DILocation(line: 1249, column: 35, scope: !5928)
!5946 = !DILocation(line: 1249, column: 3, scope: !5928)
!5947 = !DILocation(line: 1252, column: 14, scope: !5784)
!5948 = !DILocation(line: 1252, column: 21, scope: !5784)
!5949 = !DILocation(line: 1252, column: 2, scope: !5784)
!5950 = !DILocation(line: 1252, column: 8, scope: !5784)
!5951 = !DILocation(line: 1252, column: 12, scope: !5784)
!5952 = !DILocation(line: 1253, column: 6, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5784, file: !177, line: 1253, column: 6)
!5954 = !DILocation(line: 1253, column: 6, scope: !5784)
!5955 = !DILocation(line: 1254, column: 24, scope: !5953)
!5956 = !DILocation(line: 1254, column: 10, scope: !5953)
!5957 = !DILocation(line: 1254, column: 3, scope: !5953)
!5958 = !DILocation(line: 1256, column: 10, scope: !5953)
!5959 = !DILocation(line: 1256, column: 16, scope: !5953)
!5960 = !DILocation(line: 1256, column: 3, scope: !5953)
!5961 = !DILocation(line: 1257, column: 1, scope: !5784)
!5962 = distinct !DISubprogram(name: "HXrbtrav_next", scope: !177, file: !177, line: 1115, type: !5785, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!5963 = !DILocalVariable(name: "trav", arg: 1, scope: !5962, file: !177, line: 1115, type: !5595)
!5964 = !DILocation(line: 1115, column: 61, scope: !5962)
!5965 = !DILocation(line: 1117, column: 6, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !177, line: 1117, column: 6)
!5967 = !DILocation(line: 1117, column: 12, scope: !5966)
!5968 = !DILocation(line: 1117, column: 21, scope: !5966)
!5969 = !DILocation(line: 1117, column: 36, scope: !5966)
!5970 = !DILocation(line: 1117, column: 6, scope: !5962)
!5971 = !DILocalVariable(name: "node", scope: !5972, file: !177, line: 1119, type: !215)
!5972 = distinct !DILexicalBlock(scope: !5966, file: !177, line: 1117, column: 45)
!5973 = !DILocation(line: 1119, column: 25, scope: !5972)
!5974 = !DILocation(line: 1121, column: 3, scope: !5972)
!5975 = !DILocation(line: 1121, column: 9, scope: !5972)
!5976 = !DILocation(line: 1121, column: 13, scope: !5972)
!5977 = !DILocation(line: 1121, column: 19, scope: !5972)
!5978 = !DILocation(line: 1121, column: 24, scope: !5972)
!5979 = !DILocation(line: 1121, column: 28, scope: !5972)
!5980 = !DILocation(line: 1122, column: 10, scope: !5972)
!5981 = !DILocation(line: 1122, column: 16, scope: !5972)
!5982 = !DILocation(line: 1122, column: 25, scope: !5972)
!5983 = !DILocation(line: 1122, column: 8, scope: !5972)
!5984 = !DILocation(line: 1125, column: 3, scope: !5972)
!5985 = !DILocation(line: 1125, column: 10, scope: !5972)
!5986 = !DILocation(line: 1125, column: 15, scope: !5972)
!5987 = !DILocation(line: 1126, column: 30, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5972, file: !177, line: 1125, column: 24)
!5989 = !DILocation(line: 1126, column: 4, scope: !5988)
!5990 = !DILocation(line: 1126, column: 10, scope: !5988)
!5991 = !DILocation(line: 1126, column: 15, scope: !5988)
!5992 = !DILocation(line: 1126, column: 21, scope: !5988)
!5993 = !DILocation(line: 1126, column: 28, scope: !5988)
!5994 = !DILocation(line: 1127, column: 11, scope: !5988)
!5995 = !DILocation(line: 1127, column: 17, scope: !5988)
!5996 = !DILocation(line: 1127, column: 9, scope: !5988)
!5997 = !DILocation(line: 1128, column: 4, scope: !5988)
!5998 = !DILocation(line: 1128, column: 10, scope: !5988)
!5999 = !DILocation(line: 1128, column: 14, scope: !5988)
!6000 = !DILocation(line: 1128, column: 20, scope: !5988)
!6001 = !DILocation(line: 1128, column: 25, scope: !5988)
!6002 = !DILocation(line: 1128, column: 29, scope: !5988)
!6003 = distinct !{!6003, !5984, !6004}
!6004 = !DILocation(line: 1129, column: 3, scope: !5972)
!6005 = !DILocation(line: 1130, column: 19, scope: !5972)
!6006 = !DILocation(line: 1130, column: 25, scope: !5972)
!6007 = !DILocation(line: 1130, column: 32, scope: !5972)
!6008 = !DILocation(line: 1130, column: 38, scope: !5972)
!6009 = !DILocation(line: 1130, column: 30, scope: !5972)
!6010 = !DILocation(line: 1130, column: 3, scope: !5972)
!6011 = !DILocation(line: 1130, column: 9, scope: !5972)
!6012 = !DILocation(line: 1130, column: 17, scope: !5972)
!6013 = !DILocation(line: 1131, column: 2, scope: !5972)
!6014 = !DILocation(line: 1131, column: 13, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5966, file: !177, line: 1131, column: 13)
!6016 = !DILocation(line: 1131, column: 19, scope: !6015)
!6017 = !DILocation(line: 1131, column: 25, scope: !6015)
!6018 = !DILocation(line: 1131, column: 13, scope: !5966)
!6019 = !DILocation(line: 1133, column: 10, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6015, file: !177, line: 1131, column: 31)
!6021 = !DILocation(line: 1133, column: 16, scope: !6020)
!6022 = !DILocation(line: 1133, column: 24, scope: !6020)
!6023 = !DILocation(line: 1133, column: 3, scope: !6020)
!6024 = !DILocation(line: 1134, column: 13, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6015, file: !177, line: 1134, column: 13)
!6026 = !DILocation(line: 1134, column: 19, scope: !6025)
!6027 = !DILocation(line: 1134, column: 23, scope: !6025)
!6028 = !DILocation(line: 1134, column: 29, scope: !6025)
!6029 = !DILocation(line: 1134, column: 34, scope: !6025)
!6030 = !DILocation(line: 1134, column: 38, scope: !6025)
!6031 = !DILocation(line: 1134, column: 13, scope: !6015)
!6032 = !DILocation(line: 1136, column: 19, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6025, file: !177, line: 1134, column: 51)
!6034 = !DILocation(line: 1136, column: 25, scope: !6033)
!6035 = !DILocation(line: 1136, column: 32, scope: !6033)
!6036 = !DILocation(line: 1136, column: 38, scope: !6033)
!6037 = !DILocation(line: 1136, column: 30, scope: !6033)
!6038 = !DILocation(line: 1136, column: 3, scope: !6033)
!6039 = !DILocation(line: 1136, column: 9, scope: !6033)
!6040 = !DILocation(line: 1136, column: 17, scope: !6033)
!6041 = !DILocation(line: 1137, column: 2, scope: !6033)
!6042 = !DILocation(line: 1137, column: 13, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6025, file: !177, line: 1137, column: 13)
!6044 = !DILocation(line: 1137, column: 19, scope: !6043)
!6045 = !DILocation(line: 1137, column: 23, scope: !6043)
!6046 = !DILocation(line: 1137, column: 29, scope: !6043)
!6047 = !DILocation(line: 1137, column: 34, scope: !6043)
!6048 = !DILocation(line: 1137, column: 38, scope: !6043)
!6049 = !DILocation(line: 1137, column: 13, scope: !6025)
!6050 = !DILocation(line: 1144, column: 3, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6043, file: !177, line: 1137, column: 52)
!6052 = !DILocation(line: 1145, column: 8, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !177, line: 1145, column: 8)
!6054 = distinct !DILexicalBlock(scope: !6051, file: !177, line: 1144, column: 16)
!6055 = !DILocation(line: 1145, column: 14, scope: !6053)
!6056 = !DILocation(line: 1145, column: 20, scope: !6053)
!6057 = !DILocation(line: 1145, column: 8, scope: !6054)
!6058 = !DILocation(line: 1147, column: 12, scope: !6053)
!6059 = !DILocation(line: 1147, column: 18, scope: !6053)
!6060 = !DILocation(line: 1147, column: 26, scope: !6053)
!6061 = !DILocation(line: 1147, column: 5, scope: !6053)
!6062 = !DILocation(line: 1148, column: 8, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6054, file: !177, line: 1148, column: 8)
!6064 = !DILocation(line: 1148, column: 14, scope: !6063)
!6065 = !DILocation(line: 1148, column: 18, scope: !6063)
!6066 = !DILocation(line: 1148, column: 24, scope: !6063)
!6067 = !DILocation(line: 1148, column: 29, scope: !6063)
!6068 = !DILocation(line: 1148, column: 33, scope: !6063)
!6069 = !DILocation(line: 1148, column: 8, scope: !6054)
!6070 = !DILocation(line: 1149, column: 5, scope: !6063)
!6071 = !DILocation(line: 1150, column: 6, scope: !6054)
!6072 = !DILocation(line: 1150, column: 12, scope: !6054)
!6073 = !DILocation(line: 1150, column: 4, scope: !6054)
!6074 = distinct !{!6074, !6050, !6075}
!6075 = !DILocation(line: 1151, column: 3, scope: !6051)
!6076 = !DILocation(line: 1152, column: 19, scope: !6051)
!6077 = !DILocation(line: 1152, column: 25, scope: !6051)
!6078 = !DILocation(line: 1152, column: 32, scope: !6051)
!6079 = !DILocation(line: 1152, column: 38, scope: !6051)
!6080 = !DILocation(line: 1152, column: 30, scope: !6051)
!6081 = !DILocation(line: 1152, column: 3, scope: !6051)
!6082 = !DILocation(line: 1152, column: 9, scope: !6051)
!6083 = !DILocation(line: 1152, column: 17, scope: !6051)
!6084 = !DILocation(line: 1153, column: 2, scope: !6051)
!6085 = !DILocation(line: 1155, column: 22, scope: !5962)
!6086 = !DILocation(line: 1155, column: 28, scope: !5962)
!6087 = !DILocation(line: 1155, column: 34, scope: !5962)
!6088 = !DILocation(line: 1155, column: 2, scope: !5962)
!6089 = !DILocation(line: 1156, column: 9, scope: !5962)
!6090 = !DILocation(line: 1156, column: 15, scope: !5962)
!6091 = !DILocation(line: 1156, column: 2, scope: !5962)
!6092 = !DILocation(line: 1157, column: 1, scope: !5962)
!6093 = distinct !DISubprogram(name: "HXrbtrav_checkpoint", scope: !177, file: !177, line: 1098, type: !6094, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{null, !5595, !5459}
!6096 = !DILocalVariable(name: "trav", arg: 1, scope: !6093, file: !177, line: 1098, type: !5595)
!6097 = !DILocation(line: 1098, column: 50, scope: !6093)
!6098 = !DILocalVariable(name: "node", arg: 2, scope: !6093, file: !177, line: 1099, type: !5459)
!6099 = !DILocation(line: 1099, column: 33, scope: !6093)
!6100 = !DILocalVariable(name: "tree", scope: !6093, file: !177, line: 1101, type: !2956)
!6101 = !DILocation(line: 1101, column: 25, scope: !6093)
!6102 = !DILocation(line: 1101, column: 32, scope: !6093)
!6103 = !DILocation(line: 1101, column: 38, scope: !6093)
!6104 = !DILocation(line: 1103, column: 6, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6093, file: !177, line: 1103, column: 6)
!6106 = !DILocation(line: 1103, column: 12, scope: !6105)
!6107 = !DILocation(line: 1103, column: 18, scope: !6105)
!6108 = !DILocation(line: 1103, column: 24, scope: !6105)
!6109 = !DILocation(line: 1103, column: 6, scope: !6093)
!6110 = !DILocalVariable(name: "old_key", scope: !6111, file: !177, line: 1104, type: !89)
!6111 = distinct !DILexicalBlock(scope: !6105, file: !177, line: 1103, column: 39)
!6112 = !DILocation(line: 1104, column: 9, scope: !6111)
!6113 = !DILocation(line: 1104, column: 19, scope: !6111)
!6114 = !DILocation(line: 1104, column: 25, scope: !6111)
!6115 = !DILocation(line: 1106, column: 22, scope: !6111)
!6116 = !DILocation(line: 1106, column: 28, scope: !6111)
!6117 = !DILocation(line: 1106, column: 34, scope: !6111)
!6118 = !DILocation(line: 1106, column: 38, scope: !6111)
!6119 = !DILocation(line: 1106, column: 46, scope: !6111)
!6120 = !DILocation(line: 1106, column: 52, scope: !6111)
!6121 = !DILocation(line: 1107, column: 22, scope: !6111)
!6122 = !DILocation(line: 1107, column: 28, scope: !6111)
!6123 = !DILocation(line: 1107, column: 34, scope: !6111)
!6124 = !DILocation(line: 1106, column: 3, scope: !6111)
!6125 = !DILocation(line: 1106, column: 9, scope: !6111)
!6126 = !DILocation(line: 1106, column: 20, scope: !6111)
!6127 = !DILocation(line: 1108, column: 7, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6111, file: !177, line: 1108, column: 7)
!6129 = !DILocation(line: 1108, column: 13, scope: !6128)
!6130 = !DILocation(line: 1108, column: 19, scope: !6128)
!6131 = !DILocation(line: 1108, column: 23, scope: !6128)
!6132 = !DILocation(line: 1108, column: 30, scope: !6128)
!6133 = !DILocation(line: 1108, column: 7, scope: !6111)
!6134 = !DILocation(line: 1109, column: 4, scope: !6128)
!6135 = !DILocation(line: 1109, column: 10, scope: !6128)
!6136 = !DILocation(line: 1109, column: 16, scope: !6128)
!6137 = !DILocation(line: 1109, column: 20, scope: !6128)
!6138 = !DILocation(line: 1109, column: 27, scope: !6128)
!6139 = !DILocation(line: 1110, column: 2, scope: !6111)
!6140 = !DILocation(line: 1111, column: 22, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6105, file: !177, line: 1110, column: 9)
!6142 = !DILocation(line: 1111, column: 28, scope: !6141)
!6143 = !DILocation(line: 1111, column: 3, scope: !6141)
!6144 = !DILocation(line: 1111, column: 9, scope: !6141)
!6145 = !DILocation(line: 1111, column: 20, scope: !6141)
!6146 = !DILocation(line: 1113, column: 1, scope: !6093)
!6147 = distinct !DISubprogram(name: "HXmap_travfree", scope: !177, file: !177, line: 1302, type: !6148, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{null, !5503}
!6150 = !DILocalVariable(name: "trav", arg: 1, scope: !6147, file: !177, line: 1302, type: !5503)
!6151 = !DILocation(line: 1302, column: 54, scope: !6147)
!6152 = !DILocalVariable(name: "xtrav", scope: !6147, file: !177, line: 1304, type: !89)
!6153 = !DILocation(line: 1304, column: 8, scope: !6147)
!6154 = !DILocation(line: 1304, column: 16, scope: !6147)
!6155 = !DILocation(line: 1306, column: 6, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6147, file: !177, line: 1306, column: 6)
!6157 = !DILocation(line: 1306, column: 12, scope: !6156)
!6158 = !DILocation(line: 1306, column: 6, scope: !6147)
!6159 = !DILocation(line: 1307, column: 3, scope: !6156)
!6160 = !DILocation(line: 1308, column: 10, scope: !6147)
!6161 = !DILocation(line: 1308, column: 16, scope: !6147)
!6162 = !DILocation(line: 1308, column: 2, scope: !6147)
!6163 = !DILocation(line: 1310, column: 17, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6147, file: !177, line: 1308, column: 22)
!6165 = !DILocation(line: 1310, column: 3, scope: !6164)
!6166 = !DILocation(line: 1311, column: 3, scope: !6164)
!6167 = !DILocation(line: 1313, column: 8, scope: !6164)
!6168 = !DILocation(line: 1313, column: 3, scope: !6164)
!6169 = !DILocation(line: 1314, column: 3, scope: !6164)
!6170 = !DILocation(line: 1316, column: 1, scope: !6147)
!6171 = distinct !DISubprogram(name: "HXrbtrav_free", scope: !177, file: !177, line: 1293, type: !6172, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{null, !5595}
!6174 = !DILocalVariable(name: "trav", arg: 1, scope: !6171, file: !177, line: 1293, type: !5595)
!6175 = !DILocation(line: 1293, column: 44, scope: !6171)
!6176 = !DILocalVariable(name: "super", scope: !6171, file: !177, line: 1295, type: !2842)
!6177 = !DILocation(line: 1295, column: 30, scope: !6171)
!6178 = !DILocation(line: 1295, column: 39, scope: !6171)
!6179 = !DILocation(line: 1295, column: 45, scope: !6171)
!6180 = !DILocation(line: 1295, column: 51, scope: !6171)
!6181 = !DILocation(line: 1297, column: 7, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6171, file: !177, line: 1297, column: 6)
!6183 = !DILocation(line: 1297, column: 14, scope: !6182)
!6184 = !DILocation(line: 1297, column: 20, scope: !6182)
!6185 = !DILocation(line: 1297, column: 35, scope: !6182)
!6186 = !DILocation(line: 1297, column: 38, scope: !6182)
!6187 = !DILocation(line: 1297, column: 45, scope: !6182)
!6188 = !DILocation(line: 1297, column: 49, scope: !6182)
!6189 = !DILocation(line: 1297, column: 56, scope: !6182)
!6190 = !DILocation(line: 1297, column: 6, scope: !6171)
!6191 = !DILocation(line: 1298, column: 3, scope: !6182)
!6192 = !DILocation(line: 1298, column: 10, scope: !6182)
!6193 = !DILocation(line: 1298, column: 14, scope: !6182)
!6194 = !DILocation(line: 1298, column: 21, scope: !6182)
!6195 = !DILocation(line: 1298, column: 27, scope: !6182)
!6196 = !DILocation(line: 1299, column: 7, scope: !6171)
!6197 = !DILocation(line: 1299, column: 2, scope: !6171)
!6198 = !DILocation(line: 1300, column: 1, scope: !6171)
!6199 = distinct !DISubprogram(name: "HXmap_qfe", scope: !177, file: !177, line: 1340, type: !6200, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !176, retainedNodes: !117)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{null, !3856, !6202, !89}
!6202 = !DIDerivedType(tag: DW_TAG_typedef, name: "qfe_fn_t", file: !180, line: 113, baseType: !6203)
!6203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6204, size: 64)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!141, !3842, !89}
!6206 = !DILocalVariable(name: "xmap", arg: 1, scope: !6199, file: !177, line: 1340, type: !3856)
!6207 = !DILocation(line: 1340, column: 50, scope: !6199)
!6208 = !DILocalVariable(name: "fn", arg: 2, scope: !6199, file: !177, line: 1340, type: !6202)
!6209 = !DILocation(line: 1340, column: 65, scope: !6199)
!6210 = !DILocalVariable(name: "arg", arg: 3, scope: !6199, file: !177, line: 1340, type: !89)
!6211 = !DILocation(line: 1340, column: 75, scope: !6199)
!6212 = !DILocalVariable(name: "vmap", scope: !6199, file: !177, line: 1342, type: !90)
!6213 = !DILocation(line: 1342, column: 14, scope: !6199)
!6214 = !DILocation(line: 1342, column: 21, scope: !6199)
!6215 = !DILocalVariable(name: "map", scope: !6199, file: !177, line: 1343, type: !2842)
!6216 = !DILocation(line: 1343, column: 30, scope: !6199)
!6217 = !DILocation(line: 1343, column: 36, scope: !6199)
!6218 = !DILocation(line: 1345, column: 10, scope: !6199)
!6219 = !DILocation(line: 1345, column: 15, scope: !6199)
!6220 = !DILocation(line: 1345, column: 2, scope: !6199)
!6221 = !DILocation(line: 1347, column: 14, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6199, file: !177, line: 1345, column: 21)
!6223 = !DILocation(line: 1347, column: 20, scope: !6222)
!6224 = !DILocation(line: 1347, column: 24, scope: !6222)
!6225 = !DILocation(line: 1347, column: 3, scope: !6222)
!6226 = !DILocation(line: 1348, column: 3, scope: !6222)
!6227 = !DILocation(line: 1348, column: 9, scope: !6222)
!6228 = !DILocation(line: 1349, column: 3, scope: !6222)
!6229 = !DILocalVariable(name: "tree", scope: !6230, file: !177, line: 1351, type: !2956)
!6230 = distinct !DILexicalBlock(scope: !6222, file: !177, line: 1350, column: 22)
!6231 = !DILocation(line: 1351, column: 26, scope: !6230)
!6232 = !DILocation(line: 1351, column: 33, scope: !6230)
!6233 = !DILocation(line: 1352, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !177, line: 1352, column: 7)
!6235 = !DILocation(line: 1352, column: 13, scope: !6234)
!6236 = !DILocation(line: 1352, column: 18, scope: !6234)
!6237 = !DILocation(line: 1352, column: 7, scope: !6230)
!6238 = !DILocation(line: 1353, column: 17, scope: !6234)
!6239 = !DILocation(line: 1353, column: 23, scope: !6234)
!6240 = !DILocation(line: 1353, column: 29, scope: !6234)
!6241 = !DILocation(line: 1353, column: 33, scope: !6234)
!6242 = !DILocation(line: 1353, column: 4, scope: !6234)
!6243 = !DILocation(line: 1354, column: 3, scope: !6230)
!6244 = !DILocation(line: 1354, column: 9, scope: !6230)
!6245 = !DILocation(line: 1355, column: 3, scope: !6230)
!6246 = !DILocation(line: 1358, column: 3, scope: !6222)
!6247 = !DILocation(line: 1358, column: 9, scope: !6222)
!6248 = !DILocation(line: 1359, column: 2, scope: !6222)
!6249 = !DILocation(line: 1360, column: 1, scope: !6199)
!6250 = distinct !DISubprogram(name: "HXhmap_qfe", scope: !177, file: !177, line: 1318, type: !6251, scopeLine: 1319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{null, !3896, !6202, !89}
!6253 = !DILocalVariable(name: "hmap", arg: 1, scope: !6250, file: !177, line: 1318, type: !3896)
!6254 = !DILocation(line: 1318, column: 45, scope: !6250)
!6255 = !DILocalVariable(name: "fn", arg: 2, scope: !6250, file: !177, line: 1318, type: !6202)
!6256 = !DILocation(line: 1318, column: 60, scope: !6250)
!6257 = !DILocalVariable(name: "arg", arg: 3, scope: !6250, file: !177, line: 1318, type: !89)
!6258 = !DILocation(line: 1318, column: 70, scope: !6250)
!6259 = !DILocalVariable(name: "hnode", scope: !6250, file: !177, line: 1320, type: !253)
!6260 = !DILocation(line: 1320, column: 28, scope: !6250)
!6261 = !DILocalVariable(name: "i", scope: !6250, file: !177, line: 1321, type: !7)
!6262 = !DILocation(line: 1321, column: 15, scope: !6250)
!6263 = !DILocation(line: 1323, column: 9, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6250, file: !177, line: 1323, column: 2)
!6265 = !DILocation(line: 1323, column: 7, scope: !6264)
!6266 = !DILocation(line: 1323, column: 14, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !177, line: 1323, column: 2)
!6268 = !DILocation(line: 1323, column: 32, scope: !6267)
!6269 = !DILocation(line: 1323, column: 38, scope: !6267)
!6270 = !DILocation(line: 1323, column: 18, scope: !6267)
!6271 = !DILocation(line: 1323, column: 16, scope: !6267)
!6272 = !DILocation(line: 1323, column: 2, scope: !6264)
!6273 = !DILocation(line: 1324, column: 3, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6267, file: !177, line: 1324, column: 3)
!6275 = !DILocation(line: 1324, column: 3, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6274, file: !177, line: 1324, column: 3)
!6277 = !DILocation(line: 1325, column: 11, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6276, file: !177, line: 1325, column: 8)
!6279 = !DILocation(line: 1325, column: 15, scope: !6278)
!6280 = !DILocation(line: 1325, column: 55, scope: !6278)
!6281 = !DILocation(line: 1325, column: 9, scope: !6278)
!6282 = !DILocation(line: 1325, column: 8, scope: !6276)
!6283 = !DILocation(line: 1326, column: 5, scope: !6278)
!6284 = !DILocation(line: 1325, column: 58, scope: !6278)
!6285 = distinct !{!6285, !6273, !6286}
!6286 = !DILocation(line: 1326, column: 5, scope: !6274)
!6287 = !DILocation(line: 1323, column: 46, scope: !6267)
!6288 = !DILocation(line: 1323, column: 2, scope: !6267)
!6289 = distinct !{!6289, !6272, !6290}
!6290 = !DILocation(line: 1326, column: 5, scope: !6264)
!6291 = !DILocation(line: 1327, column: 1, scope: !6250)
!6292 = distinct !DISubprogram(name: "HXrbtree_qfe", scope: !177, file: !177, line: 1329, type: !6293, scopeLine: 1331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !176, retainedNodes: !117)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{null, !5459, !6202, !89}
!6295 = !DILocalVariable(name: "node", arg: 1, scope: !6292, file: !177, line: 1329, type: !5459)
!6296 = !DILocation(line: 1329, column: 54, scope: !6292)
!6297 = !DILocalVariable(name: "fn", arg: 2, scope: !6292, file: !177, line: 1330, type: !6202)
!6298 = !DILocation(line: 1330, column: 14, scope: !6292)
!6299 = !DILocalVariable(name: "arg", arg: 3, scope: !6292, file: !177, line: 1330, type: !89)
!6300 = !DILocation(line: 1330, column: 24, scope: !6292)
!6301 = !DILocation(line: 1332, column: 6, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6292, file: !177, line: 1332, column: 6)
!6303 = !DILocation(line: 1332, column: 12, scope: !6302)
!6304 = !DILocation(line: 1332, column: 26, scope: !6302)
!6305 = !DILocation(line: 1332, column: 6, scope: !6292)
!6306 = !DILocation(line: 1333, column: 16, scope: !6302)
!6307 = !DILocation(line: 1333, column: 22, scope: !6302)
!6308 = !DILocation(line: 1333, column: 37, scope: !6302)
!6309 = !DILocation(line: 1333, column: 41, scope: !6302)
!6310 = !DILocation(line: 1333, column: 3, scope: !6302)
!6311 = !DILocation(line: 1334, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6292, file: !177, line: 1334, column: 6)
!6313 = !DILocation(line: 1334, column: 13, scope: !6312)
!6314 = !DILocation(line: 1334, column: 52, scope: !6312)
!6315 = !DILocation(line: 1334, column: 7, scope: !6312)
!6316 = !DILocation(line: 1334, column: 6, scope: !6292)
!6317 = !DILocation(line: 1335, column: 3, scope: !6312)
!6318 = !DILocation(line: 1336, column: 6, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6292, file: !177, line: 1336, column: 6)
!6320 = !DILocation(line: 1336, column: 12, scope: !6319)
!6321 = !DILocation(line: 1336, column: 27, scope: !6319)
!6322 = !DILocation(line: 1336, column: 6, scope: !6292)
!6323 = !DILocation(line: 1337, column: 16, scope: !6319)
!6324 = !DILocation(line: 1337, column: 22, scope: !6319)
!6325 = !DILocation(line: 1337, column: 38, scope: !6319)
!6326 = !DILocation(line: 1337, column: 42, scope: !6319)
!6327 = !DILocation(line: 1337, column: 3, scope: !6319)
!6328 = !DILocation(line: 1338, column: 1, scope: !6292)
!6329 = distinct !DISubprogram(name: "HXmc_strinit", scope: !339, file: !339, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!2717, !120}
!6332 = !DILocalVariable(name: "s", arg: 1, scope: !6329, file: !339, line: 42, type: !120)
!6333 = !DILocation(line: 42, column: 48, scope: !6329)
!6334 = !DILocalVariable(name: "t", scope: !6329, file: !339, line: 44, type: !2717)
!6335 = !DILocation(line: 44, column: 10, scope: !6329)
!6336 = !DILocation(line: 45, column: 25, scope: !6329)
!6337 = !DILocation(line: 45, column: 35, scope: !6329)
!6338 = !DILocation(line: 45, column: 28, scope: !6329)
!6339 = !DILocation(line: 45, column: 9, scope: !6329)
!6340 = !DILocation(line: 45, column: 2, scope: !6329)
!6341 = distinct !DISubprogram(name: "HXmc_memcpy", scope: !339, file: !339, line: 64, type: !6342, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{!2717, !6344, !90, !157}
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!6345 = !DILocalVariable(name: "vp", arg: 1, scope: !6341, file: !339, line: 64, type: !6344)
!6346 = !DILocation(line: 64, column: 44, scope: !6341)
!6347 = !DILocalVariable(name: "ptr", arg: 2, scope: !6341, file: !339, line: 64, type: !90)
!6348 = !DILocation(line: 64, column: 60, scope: !6341)
!6349 = !DILocalVariable(name: "len", arg: 3, scope: !6341, file: !339, line: 64, type: !157)
!6350 = !DILocation(line: 64, column: 72, scope: !6341)
!6351 = !DILocalVariable(name: "ctx", scope: !6341, file: !339, line: 66, type: !341)
!6352 = !DILocation(line: 66, column: 18, scope: !6341)
!6353 = !DILocation(line: 67, column: 7, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6341, file: !339, line: 67, column: 6)
!6355 = !DILocation(line: 67, column: 6, scope: !6354)
!6356 = !DILocation(line: 67, column: 10, scope: !6354)
!6357 = !DILocation(line: 67, column: 6, scope: !6341)
!6358 = !DILocation(line: 68, column: 20, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6354, file: !339, line: 67, column: 19)
!6360 = !DILocation(line: 68, column: 19, scope: !6359)
!6361 = !DILocation(line: 68, column: 9, scope: !6359)
!6362 = !DILocation(line: 68, column: 7, scope: !6359)
!6363 = !DILocation(line: 69, column: 14, scope: !6359)
!6364 = !DILocation(line: 69, column: 3, scope: !6359)
!6365 = !DILocation(line: 70, column: 7, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6359, file: !339, line: 70, column: 7)
!6367 = !DILocation(line: 70, column: 12, scope: !6366)
!6368 = !DILocation(line: 70, column: 20, scope: !6366)
!6369 = !DILocation(line: 70, column: 18, scope: !6366)
!6370 = !DILocation(line: 70, column: 7, scope: !6359)
!6371 = !DILocation(line: 71, column: 18, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6366, file: !339, line: 70, column: 25)
!6373 = !DILocation(line: 71, column: 38, scope: !6372)
!6374 = !DILocation(line: 71, column: 23, scope: !6372)
!6375 = !DILocation(line: 71, column: 10, scope: !6372)
!6376 = !DILocation(line: 71, column: 8, scope: !6372)
!6377 = !DILocation(line: 72, column: 8, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6372, file: !339, line: 72, column: 8)
!6379 = !DILocation(line: 72, column: 12, scope: !6378)
!6380 = !DILocation(line: 72, column: 8, scope: !6372)
!6381 = !DILocation(line: 73, column: 5, scope: !6378)
!6382 = !DILocation(line: 74, column: 17, scope: !6372)
!6383 = !DILocation(line: 74, column: 4, scope: !6372)
!6384 = !DILocation(line: 74, column: 9, scope: !6372)
!6385 = !DILocation(line: 74, column: 15, scope: !6372)
!6386 = !DILocation(line: 75, column: 3, scope: !6372)
!6387 = !DILocation(line: 76, column: 2, scope: !6359)
!6388 = !DILocation(line: 77, column: 31, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6354, file: !339, line: 76, column: 9)
!6390 = !DILocation(line: 77, column: 16, scope: !6389)
!6391 = !DILocation(line: 77, column: 9, scope: !6389)
!6392 = !DILocation(line: 77, column: 7, scope: !6389)
!6393 = !DILocation(line: 78, column: 7, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6389, file: !339, line: 78, column: 7)
!6395 = !DILocation(line: 78, column: 11, scope: !6394)
!6396 = !DILocation(line: 78, column: 7, scope: !6389)
!6397 = !DILocation(line: 79, column: 4, scope: !6394)
!6398 = !DILocation(line: 80, column: 3, scope: !6389)
!6399 = !DILocation(line: 80, column: 8, scope: !6389)
!6400 = !DILocation(line: 80, column: 14, scope: !6389)
!6401 = !DILocation(line: 81, column: 16, scope: !6389)
!6402 = !DILocation(line: 81, column: 3, scope: !6389)
!6403 = !DILocation(line: 81, column: 8, scope: !6389)
!6404 = !DILocation(line: 81, column: 14, scope: !6389)
!6405 = !DILocation(line: 84, column: 6, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6341, file: !339, line: 84, column: 6)
!6407 = !DILocation(line: 84, column: 10, scope: !6406)
!6408 = !DILocation(line: 84, column: 6, scope: !6341)
!6409 = !DILocation(line: 85, column: 3, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !339, line: 84, column: 19)
!6411 = !DILocation(line: 85, column: 8, scope: !6410)
!6412 = !DILocation(line: 85, column: 16, scope: !6410)
!6413 = !DILocation(line: 86, column: 3, scope: !6410)
!6414 = !DILocation(line: 86, column: 8, scope: !6410)
!6415 = !DILocation(line: 86, column: 16, scope: !6410)
!6416 = !DILocation(line: 87, column: 16, scope: !6410)
!6417 = !DILocation(line: 87, column: 21, scope: !6410)
!6418 = !DILocation(line: 87, column: 11, scope: !6410)
!6419 = !DILocation(line: 87, column: 14, scope: !6410)
!6420 = !DILocation(line: 87, column: 3, scope: !6410)
!6421 = !DILocation(line: 90, column: 9, scope: !6341)
!6422 = !DILocation(line: 90, column: 14, scope: !6341)
!6423 = !DILocation(line: 90, column: 2, scope: !6341)
!6424 = !DILocation(line: 90, column: 20, scope: !6341)
!6425 = !DILocation(line: 90, column: 39, scope: !6341)
!6426 = !DILocation(line: 90, column: 25, scope: !6341)
!6427 = !DILocation(line: 90, column: 30, scope: !6341)
!6428 = !DILocation(line: 90, column: 37, scope: !6341)
!6429 = !DILocation(line: 91, column: 2, scope: !6341)
!6430 = !DILocation(line: 91, column: 7, scope: !6341)
!6431 = !DILocation(line: 91, column: 12, scope: !6341)
!6432 = !DILocation(line: 91, column: 17, scope: !6341)
!6433 = !DILocation(line: 92, column: 15, scope: !6341)
!6434 = !DILocation(line: 92, column: 20, scope: !6341)
!6435 = !DILocation(line: 92, column: 10, scope: !6341)
!6436 = !DILocation(line: 92, column: 13, scope: !6341)
!6437 = !DILocation(line: 92, column: 2, scope: !6341)
!6438 = !DILocation(line: 93, column: 1, scope: !6341)
!6439 = distinct !DISubprogram(name: "HXmc_base", scope: !339, file: !339, line: 37, type: !6440, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6440 = !DISubroutineType(types: !6441)
!6441 = !{!341, !6442}
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!6443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2718)
!6444 = !DILocalVariable(name: "p", arg: 1, scope: !6439, file: !339, line: 37, type: !6442)
!6445 = !DILocation(line: 37, column: 55, scope: !6439)
!6446 = !DILocation(line: 39, column: 9, scope: !6439)
!6447 = !DILocation(line: 39, column: 2, scope: !6439)
!6448 = distinct !DISubprogram(name: "HXmc_check", scope: !339, file: !339, line: 31, type: !6449, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6449 = !DISubroutineType(types: !6450)
!6450 = !{null, !6451}
!6451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6452, size: 64)
!6452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!6453 = !DILocalVariable(name: "c", arg: 1, scope: !6448, file: !339, line: 31, type: !6451)
!6454 = !DILocation(line: 31, column: 53, scope: !6448)
!6455 = !DILocation(line: 33, column: 6, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6448, file: !339, line: 33, column: 6)
!6457 = !DILocation(line: 33, column: 9, scope: !6456)
!6458 = !DILocation(line: 33, column: 12, scope: !6456)
!6459 = !DILocation(line: 33, column: 6, scope: !6448)
!6460 = !DILocation(line: 34, column: 11, scope: !6456)
!6461 = !DILocation(line: 34, column: 3, scope: !6456)
!6462 = !DILocation(line: 35, column: 1, scope: !6448)
!6463 = distinct !DISubprogram(name: "__HXmc_request", scope: !339, file: !339, line: 25, type: !6464, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!157, !157}
!6466 = !DILocalVariable(name: "len", arg: 1, scope: !6463, file: !339, line: 25, type: !157)
!6467 = !DILocation(line: 25, column: 44, scope: !6463)
!6468 = !DILocation(line: 28, column: 34, scope: !6463)
!6469 = !DILocation(line: 28, column: 32, scope: !6463)
!6470 = !DILocation(line: 28, column: 38, scope: !6463)
!6471 = !DILocation(line: 28, column: 2, scope: !6463)
!6472 = distinct !DISubprogram(name: "HXmc_meminit", scope: !339, file: !339, line: 48, type: !6473, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!2717, !90, !157}
!6475 = !DILocalVariable(name: "ptr", arg: 1, scope: !6472, file: !339, line: 48, type: !90)
!6476 = !DILocation(line: 48, column: 48, scope: !6472)
!6477 = !DILocalVariable(name: "len", arg: 2, scope: !6472, file: !339, line: 48, type: !157)
!6478 = !DILocation(line: 48, column: 60, scope: !6472)
!6479 = !DILocalVariable(name: "t", scope: !6472, file: !339, line: 50, type: !2717)
!6480 = !DILocation(line: 50, column: 10, scope: !6472)
!6481 = !DILocation(line: 51, column: 25, scope: !6472)
!6482 = !DILocation(line: 51, column: 30, scope: !6472)
!6483 = !DILocation(line: 51, column: 9, scope: !6472)
!6484 = !DILocation(line: 51, column: 2, scope: !6472)
!6485 = distinct !DISubprogram(name: "HXmc_strcpy", scope: !339, file: !339, line: 54, type: !6486, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!2717, !6344, !120}
!6488 = !DILocalVariable(name: "vp", arg: 1, scope: !6485, file: !339, line: 54, type: !6344)
!6489 = !DILocation(line: 54, column: 44, scope: !6485)
!6490 = !DILocalVariable(name: "s", arg: 2, scope: !6485, file: !339, line: 54, type: !120)
!6491 = !DILocation(line: 54, column: 60, scope: !6485)
!6492 = !DILocation(line: 56, column: 6, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6485, file: !339, line: 56, column: 6)
!6494 = !DILocation(line: 56, column: 8, scope: !6493)
!6495 = !DILocation(line: 56, column: 6, scope: !6485)
!6496 = !DILocation(line: 57, column: 14, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6493, file: !339, line: 56, column: 17)
!6498 = !DILocation(line: 57, column: 13, scope: !6497)
!6499 = !DILocation(line: 57, column: 3, scope: !6497)
!6500 = !DILocation(line: 58, column: 4, scope: !6497)
!6501 = !DILocation(line: 58, column: 7, scope: !6497)
!6502 = !DILocation(line: 59, column: 3, scope: !6497)
!6503 = !DILocation(line: 61, column: 21, scope: !6485)
!6504 = !DILocation(line: 61, column: 25, scope: !6485)
!6505 = !DILocation(line: 61, column: 35, scope: !6485)
!6506 = !DILocation(line: 61, column: 28, scope: !6485)
!6507 = !DILocation(line: 61, column: 9, scope: !6485)
!6508 = !DILocation(line: 61, column: 2, scope: !6485)
!6509 = !DILocation(line: 62, column: 1, scope: !6485)
!6510 = distinct !DISubprogram(name: "HXmc_free", scope: !339, file: !339, line: 226, type: !6511, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{null, !2717}
!6513 = !DILocalVariable(name: "vp", arg: 1, scope: !6510, file: !339, line: 226, type: !2717)
!6514 = !DILocation(line: 226, column: 38, scope: !6510)
!6515 = !DILocalVariable(name: "ctx", scope: !6510, file: !339, line: 228, type: !341)
!6516 = !DILocation(line: 228, column: 18, scope: !6510)
!6517 = !DILocation(line: 229, column: 6, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6510, file: !339, line: 229, column: 6)
!6519 = !DILocation(line: 229, column: 9, scope: !6518)
!6520 = !DILocation(line: 229, column: 6, scope: !6510)
!6521 = !DILocation(line: 230, column: 3, scope: !6518)
!6522 = !DILocation(line: 231, column: 18, scope: !6510)
!6523 = !DILocation(line: 231, column: 8, scope: !6510)
!6524 = !DILocation(line: 231, column: 6, scope: !6510)
!6525 = !DILocation(line: 232, column: 13, scope: !6510)
!6526 = !DILocation(line: 232, column: 2, scope: !6510)
!6527 = !DILocation(line: 233, column: 7, scope: !6510)
!6528 = !DILocation(line: 233, column: 2, scope: !6510)
!6529 = !DILocation(line: 234, column: 1, scope: !6510)
!6530 = distinct !DISubprogram(name: "HXmc_length", scope: !339, file: !339, line: 95, type: !6531, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!157, !6442}
!6533 = !DILocalVariable(name: "vp", arg: 1, scope: !6530, file: !339, line: 95, type: !6442)
!6534 = !DILocation(line: 95, column: 48, scope: !6530)
!6535 = !DILocalVariable(name: "ctx", scope: !6530, file: !339, line: 97, type: !6451)
!6536 = !DILocation(line: 97, column: 24, scope: !6530)
!6537 = !DILocation(line: 99, column: 6, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6530, file: !339, line: 99, column: 6)
!6539 = !DILocation(line: 99, column: 9, scope: !6538)
!6540 = !DILocation(line: 99, column: 6, scope: !6530)
!6541 = !DILocation(line: 100, column: 3, scope: !6538)
!6542 = !DILocation(line: 101, column: 18, scope: !6530)
!6543 = !DILocation(line: 101, column: 8, scope: !6530)
!6544 = !DILocation(line: 101, column: 6, scope: !6530)
!6545 = !DILocation(line: 102, column: 13, scope: !6530)
!6546 = !DILocation(line: 102, column: 2, scope: !6530)
!6547 = !DILocation(line: 103, column: 9, scope: !6530)
!6548 = !DILocation(line: 103, column: 14, scope: !6530)
!6549 = !DILocation(line: 103, column: 2, scope: !6530)
!6550 = !DILocation(line: 104, column: 1, scope: !6530)
!6551 = distinct !DISubprogram(name: "HXmc_setlen", scope: !339, file: !339, line: 106, type: !6552, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!2717, !6344, !157}
!6554 = !DILocalVariable(name: "vp", arg: 1, scope: !6551, file: !339, line: 106, type: !6344)
!6555 = !DILocation(line: 106, column: 44, scope: !6551)
!6556 = !DILocalVariable(name: "len", arg: 2, scope: !6551, file: !339, line: 106, type: !157)
!6557 = !DILocation(line: 106, column: 55, scope: !6551)
!6558 = !DILocalVariable(name: "ctx", scope: !6551, file: !339, line: 108, type: !341)
!6559 = !DILocation(line: 108, column: 18, scope: !6551)
!6560 = !DILocation(line: 109, column: 17, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6551, file: !339, line: 109, column: 6)
!6562 = !DILocation(line: 109, column: 21, scope: !6561)
!6563 = !DILocation(line: 109, column: 6, scope: !6561)
!6564 = !DILocation(line: 109, column: 26, scope: !6561)
!6565 = !DILocation(line: 109, column: 6, scope: !6551)
!6566 = !DILocation(line: 110, column: 3, scope: !6561)
!6567 = !DILocation(line: 112, column: 19, scope: !6551)
!6568 = !DILocation(line: 112, column: 18, scope: !6551)
!6569 = !DILocation(line: 112, column: 8, scope: !6551)
!6570 = !DILocation(line: 112, column: 6, scope: !6551)
!6571 = !DILocation(line: 113, column: 16, scope: !6551)
!6572 = !DILocation(line: 113, column: 2, scope: !6551)
!6573 = !DILocation(line: 113, column: 7, scope: !6551)
!6574 = !DILocation(line: 113, column: 14, scope: !6551)
!6575 = !DILocation(line: 114, column: 10, scope: !6551)
!6576 = !DILocation(line: 114, column: 9, scope: !6551)
!6577 = !DILocation(line: 114, column: 2, scope: !6551)
!6578 = !DILocation(line: 115, column: 1, scope: !6551)
!6579 = distinct !DISubprogram(name: "HXmc_trunc", scope: !339, file: !339, line: 117, type: !6552, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6580 = !DILocalVariable(name: "vp", arg: 1, scope: !6579, file: !339, line: 117, type: !6344)
!6581 = !DILocation(line: 117, column: 43, scope: !6579)
!6582 = !DILocalVariable(name: "len", arg: 2, scope: !6579, file: !339, line: 117, type: !157)
!6583 = !DILocation(line: 117, column: 54, scope: !6579)
!6584 = !DILocalVariable(name: "ctx", scope: !6579, file: !339, line: 119, type: !341)
!6585 = !DILocation(line: 119, column: 18, scope: !6579)
!6586 = !DILocation(line: 119, column: 35, scope: !6579)
!6587 = !DILocation(line: 119, column: 34, scope: !6579)
!6588 = !DILocation(line: 119, column: 24, scope: !6579)
!6589 = !DILocation(line: 121, column: 13, scope: !6579)
!6590 = !DILocation(line: 121, column: 2, scope: !6579)
!6591 = !DILocation(line: 122, column: 6, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6579, file: !339, line: 122, column: 6)
!6593 = !DILocation(line: 122, column: 12, scope: !6592)
!6594 = !DILocation(line: 122, column: 17, scope: !6592)
!6595 = !DILocation(line: 122, column: 10, scope: !6592)
!6596 = !DILocation(line: 122, column: 6, scope: !6579)
!6597 = !DILocation(line: 123, column: 17, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6592, file: !339, line: 122, column: 24)
!6599 = !DILocation(line: 123, column: 37, scope: !6598)
!6600 = !DILocation(line: 123, column: 22, scope: !6598)
!6601 = !DILocation(line: 123, column: 9, scope: !6598)
!6602 = !DILocation(line: 123, column: 7, scope: !6598)
!6603 = !DILocation(line: 124, column: 7, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6598, file: !339, line: 124, column: 7)
!6605 = !DILocation(line: 124, column: 11, scope: !6604)
!6606 = !DILocation(line: 124, column: 7, scope: !6598)
!6607 = !DILocation(line: 125, column: 4, scope: !6604)
!6608 = !DILocation(line: 126, column: 16, scope: !6598)
!6609 = !DILocation(line: 126, column: 3, scope: !6598)
!6610 = !DILocation(line: 126, column: 8, scope: !6598)
!6611 = !DILocation(line: 126, column: 14, scope: !6598)
!6612 = !DILocation(line: 127, column: 2, scope: !6598)
!6613 = !DILocation(line: 128, column: 3, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6592, file: !339, line: 127, column: 9)
!6615 = !DILocation(line: 128, column: 8, scope: !6614)
!6616 = !DILocation(line: 128, column: 13, scope: !6614)
!6617 = !DILocation(line: 128, column: 18, scope: !6614)
!6618 = !DILocation(line: 129, column: 17, scope: !6614)
!6619 = !DILocation(line: 129, column: 3, scope: !6614)
!6620 = !DILocation(line: 129, column: 8, scope: !6614)
!6621 = !DILocation(line: 129, column: 15, scope: !6614)
!6622 = !DILocation(line: 131, column: 15, scope: !6579)
!6623 = !DILocation(line: 131, column: 20, scope: !6579)
!6624 = !DILocation(line: 131, column: 10, scope: !6579)
!6625 = !DILocation(line: 131, column: 13, scope: !6579)
!6626 = !DILocation(line: 131, column: 2, scope: !6579)
!6627 = !DILocation(line: 132, column: 1, scope: !6579)
!6628 = distinct !DISubprogram(name: "HXmc_strcat", scope: !339, file: !339, line: 134, type: !6486, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6629 = !DILocalVariable(name: "vp", arg: 1, scope: !6628, file: !339, line: 134, type: !6344)
!6630 = !DILocation(line: 134, column: 44, scope: !6628)
!6631 = !DILocalVariable(name: "s", arg: 2, scope: !6628, file: !339, line: 134, type: !120)
!6632 = !DILocation(line: 134, column: 60, scope: !6628)
!6633 = !DILocation(line: 136, column: 6, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6628, file: !339, line: 136, column: 6)
!6635 = !DILocation(line: 136, column: 8, scope: !6634)
!6636 = !DILocation(line: 136, column: 6, scope: !6628)
!6637 = !DILocation(line: 137, column: 11, scope: !6634)
!6638 = !DILocation(line: 137, column: 10, scope: !6634)
!6639 = !DILocation(line: 137, column: 3, scope: !6634)
!6640 = !DILocation(line: 138, column: 21, scope: !6628)
!6641 = !DILocation(line: 138, column: 25, scope: !6628)
!6642 = !DILocation(line: 138, column: 35, scope: !6628)
!6643 = !DILocation(line: 138, column: 28, scope: !6628)
!6644 = !DILocation(line: 138, column: 9, scope: !6628)
!6645 = !DILocation(line: 138, column: 2, scope: !6628)
!6646 = !DILocation(line: 139, column: 1, scope: !6628)
!6647 = distinct !DISubprogram(name: "HXmc_memcat", scope: !339, file: !339, line: 141, type: !6342, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6648 = !DILocalVariable(name: "vp", arg: 1, scope: !6647, file: !339, line: 141, type: !6344)
!6649 = !DILocation(line: 141, column: 44, scope: !6647)
!6650 = !DILocalVariable(name: "ptr", arg: 2, scope: !6647, file: !339, line: 141, type: !90)
!6651 = !DILocation(line: 141, column: 60, scope: !6647)
!6652 = !DILocalVariable(name: "len", arg: 3, scope: !6647, file: !339, line: 141, type: !157)
!6653 = !DILocation(line: 141, column: 72, scope: !6647)
!6654 = !DILocalVariable(name: "ctx", scope: !6647, file: !339, line: 143, type: !341)
!6655 = !DILocation(line: 143, column: 18, scope: !6647)
!6656 = !DILocation(line: 143, column: 35, scope: !6647)
!6657 = !DILocation(line: 143, column: 34, scope: !6647)
!6658 = !DILocation(line: 143, column: 24, scope: !6647)
!6659 = !DILocalVariable(name: "nl", scope: !6647, file: !339, line: 144, type: !157)
!6660 = !DILocation(line: 144, column: 9, scope: !6647)
!6661 = !DILocation(line: 144, column: 14, scope: !6647)
!6662 = !DILocation(line: 144, column: 19, scope: !6647)
!6663 = !DILocation(line: 144, column: 28, scope: !6647)
!6664 = !DILocation(line: 144, column: 26, scope: !6647)
!6665 = !DILocation(line: 146, column: 13, scope: !6647)
!6666 = !DILocation(line: 146, column: 2, scope: !6647)
!6667 = !DILocation(line: 147, column: 6, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6647, file: !339, line: 147, column: 6)
!6669 = !DILocation(line: 147, column: 11, scope: !6668)
!6670 = !DILocation(line: 147, column: 16, scope: !6668)
!6671 = !DILocation(line: 147, column: 9, scope: !6668)
!6672 = !DILocation(line: 147, column: 6, scope: !6647)
!6673 = !DILocation(line: 148, column: 17, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6668, file: !339, line: 147, column: 23)
!6675 = !DILocation(line: 148, column: 37, scope: !6674)
!6676 = !DILocation(line: 148, column: 22, scope: !6674)
!6677 = !DILocation(line: 148, column: 9, scope: !6674)
!6678 = !DILocation(line: 148, column: 7, scope: !6674)
!6679 = !DILocation(line: 149, column: 7, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6674, file: !339, line: 149, column: 7)
!6681 = !DILocation(line: 149, column: 11, scope: !6680)
!6682 = !DILocation(line: 149, column: 7, scope: !6674)
!6683 = !DILocation(line: 150, column: 4, scope: !6680)
!6684 = !DILocation(line: 151, column: 16, scope: !6674)
!6685 = !DILocation(line: 151, column: 3, scope: !6674)
!6686 = !DILocation(line: 151, column: 8, scope: !6674)
!6687 = !DILocation(line: 151, column: 14, scope: !6674)
!6688 = !DILocation(line: 152, column: 2, scope: !6674)
!6689 = !DILocation(line: 153, column: 6, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6647, file: !339, line: 153, column: 6)
!6691 = !DILocation(line: 153, column: 10, scope: !6690)
!6692 = !DILocation(line: 153, column: 6, scope: !6647)
!6693 = !DILocation(line: 154, column: 16, scope: !6690)
!6694 = !DILocation(line: 154, column: 21, scope: !6690)
!6695 = !DILocation(line: 154, column: 11, scope: !6690)
!6696 = !DILocation(line: 154, column: 14, scope: !6690)
!6697 = !DILocation(line: 154, column: 3, scope: !6690)
!6698 = !DILocation(line: 156, column: 10, scope: !6647)
!6699 = !DILocation(line: 156, column: 15, scope: !6647)
!6700 = !DILocation(line: 156, column: 20, scope: !6647)
!6701 = !DILocation(line: 156, column: 25, scope: !6647)
!6702 = !DILocation(line: 156, column: 34, scope: !6647)
!6703 = !DILocation(line: 156, column: 39, scope: !6647)
!6704 = !DILocation(line: 156, column: 2, scope: !6647)
!6705 = !DILocation(line: 157, column: 16, scope: !6647)
!6706 = !DILocation(line: 157, column: 2, scope: !6647)
!6707 = !DILocation(line: 157, column: 7, scope: !6647)
!6708 = !DILocation(line: 157, column: 14, scope: !6647)
!6709 = !DILocation(line: 158, column: 2, scope: !6647)
!6710 = !DILocation(line: 158, column: 7, scope: !6647)
!6711 = !DILocation(line: 158, column: 12, scope: !6647)
!6712 = !DILocation(line: 158, column: 16, scope: !6647)
!6713 = !DILocation(line: 159, column: 15, scope: !6647)
!6714 = !DILocation(line: 159, column: 20, scope: !6647)
!6715 = !DILocation(line: 159, column: 10, scope: !6647)
!6716 = !DILocation(line: 159, column: 13, scope: !6647)
!6717 = !DILocation(line: 159, column: 2, scope: !6647)
!6718 = !DILocation(line: 160, column: 1, scope: !6647)
!6719 = distinct !DISubprogram(name: "HXmc_strpcat", scope: !339, file: !339, line: 162, type: !6486, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6720 = !DILocalVariable(name: "vp", arg: 1, scope: !6719, file: !339, line: 162, type: !6344)
!6721 = !DILocation(line: 162, column: 45, scope: !6719)
!6722 = !DILocalVariable(name: "s", arg: 2, scope: !6719, file: !339, line: 162, type: !120)
!6723 = !DILocation(line: 162, column: 61, scope: !6719)
!6724 = !DILocation(line: 165, column: 6, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6719, file: !339, line: 165, column: 6)
!6726 = !DILocation(line: 165, column: 8, scope: !6725)
!6727 = !DILocation(line: 165, column: 6, scope: !6719)
!6728 = !DILocation(line: 166, column: 11, scope: !6725)
!6729 = !DILocation(line: 166, column: 10, scope: !6725)
!6730 = !DILocation(line: 166, column: 3, scope: !6725)
!6731 = !DILocation(line: 167, column: 21, scope: !6719)
!6732 = !DILocation(line: 167, column: 28, scope: !6719)
!6733 = !DILocation(line: 167, column: 38, scope: !6719)
!6734 = !DILocation(line: 167, column: 31, scope: !6719)
!6735 = !DILocation(line: 167, column: 9, scope: !6719)
!6736 = !DILocation(line: 167, column: 2, scope: !6719)
!6737 = !DILocation(line: 168, column: 1, scope: !6719)
!6738 = distinct !DISubprogram(name: "HXmc_memins", scope: !339, file: !339, line: 188, type: !6739, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6739 = !DISubroutineType(types: !6740)
!6740 = !{!2717, !6344, !157, !90, !157}
!6741 = !DILocalVariable(name: "vp", arg: 1, scope: !6738, file: !339, line: 188, type: !6344)
!6742 = !DILocation(line: 188, column: 44, scope: !6738)
!6743 = !DILocalVariable(name: "pos", arg: 2, scope: !6738, file: !339, line: 188, type: !157)
!6744 = !DILocation(line: 188, column: 55, scope: !6738)
!6745 = !DILocalVariable(name: "ptr", arg: 3, scope: !6738, file: !339, line: 188, type: !90)
!6746 = !DILocation(line: 188, column: 72, scope: !6738)
!6747 = !DILocalVariable(name: "len", arg: 4, scope: !6738, file: !339, line: 189, type: !157)
!6748 = !DILocation(line: 189, column: 12, scope: !6738)
!6749 = !DILocalVariable(name: "ctx", scope: !6738, file: !339, line: 191, type: !341)
!6750 = !DILocation(line: 191, column: 18, scope: !6738)
!6751 = !DILocation(line: 191, column: 35, scope: !6738)
!6752 = !DILocation(line: 191, column: 34, scope: !6738)
!6753 = !DILocation(line: 191, column: 24, scope: !6738)
!6754 = !DILocalVariable(name: "nl", scope: !6738, file: !339, line: 192, type: !157)
!6755 = !DILocation(line: 192, column: 9, scope: !6738)
!6756 = !DILocation(line: 192, column: 14, scope: !6738)
!6757 = !DILocation(line: 192, column: 19, scope: !6738)
!6758 = !DILocation(line: 192, column: 28, scope: !6738)
!6759 = !DILocation(line: 192, column: 26, scope: !6738)
!6760 = !DILocation(line: 194, column: 13, scope: !6738)
!6761 = !DILocation(line: 194, column: 2, scope: !6738)
!6762 = !DILocation(line: 195, column: 6, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6738, file: !339, line: 195, column: 6)
!6764 = !DILocation(line: 195, column: 11, scope: !6763)
!6765 = !DILocation(line: 195, column: 19, scope: !6763)
!6766 = !DILocation(line: 195, column: 17, scope: !6763)
!6767 = !DILocation(line: 195, column: 6, scope: !6738)
!6768 = !DILocation(line: 196, column: 17, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6763, file: !339, line: 195, column: 23)
!6770 = !DILocation(line: 196, column: 37, scope: !6769)
!6771 = !DILocation(line: 196, column: 22, scope: !6769)
!6772 = !DILocation(line: 196, column: 9, scope: !6769)
!6773 = !DILocation(line: 196, column: 7, scope: !6769)
!6774 = !DILocation(line: 197, column: 7, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6769, file: !339, line: 197, column: 7)
!6776 = !DILocation(line: 197, column: 11, scope: !6775)
!6777 = !DILocation(line: 197, column: 7, scope: !6769)
!6778 = !DILocation(line: 198, column: 4, scope: !6775)
!6779 = !DILocation(line: 199, column: 16, scope: !6769)
!6780 = !DILocation(line: 199, column: 3, scope: !6769)
!6781 = !DILocation(line: 199, column: 8, scope: !6769)
!6782 = !DILocation(line: 199, column: 14, scope: !6769)
!6783 = !DILocation(line: 200, column: 2, scope: !6769)
!6784 = !DILocation(line: 201, column: 6, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6738, file: !339, line: 201, column: 6)
!6786 = !DILocation(line: 201, column: 10, scope: !6785)
!6787 = !DILocation(line: 201, column: 6, scope: !6738)
!6788 = !DILocation(line: 202, column: 16, scope: !6785)
!6789 = !DILocation(line: 202, column: 21, scope: !6785)
!6790 = !DILocation(line: 202, column: 11, scope: !6785)
!6791 = !DILocation(line: 202, column: 14, scope: !6785)
!6792 = !DILocation(line: 202, column: 3, scope: !6785)
!6793 = !DILocation(line: 204, column: 11, scope: !6738)
!6794 = !DILocation(line: 204, column: 16, scope: !6738)
!6795 = !DILocation(line: 204, column: 21, scope: !6738)
!6796 = !DILocation(line: 204, column: 27, scope: !6738)
!6797 = !DILocation(line: 204, column: 25, scope: !6738)
!6798 = !DILocation(line: 204, column: 34, scope: !6738)
!6799 = !DILocation(line: 204, column: 39, scope: !6738)
!6800 = !DILocation(line: 204, column: 44, scope: !6738)
!6801 = !DILocation(line: 204, column: 50, scope: !6738)
!6802 = !DILocation(line: 204, column: 55, scope: !6738)
!6803 = !DILocation(line: 204, column: 64, scope: !6738)
!6804 = !DILocation(line: 204, column: 62, scope: !6738)
!6805 = !DILocation(line: 204, column: 2, scope: !6738)
!6806 = !DILocation(line: 205, column: 10, scope: !6738)
!6807 = !DILocation(line: 205, column: 15, scope: !6738)
!6808 = !DILocation(line: 205, column: 20, scope: !6738)
!6809 = !DILocation(line: 205, column: 26, scope: !6738)
!6810 = !DILocation(line: 205, column: 31, scope: !6738)
!6811 = !DILocation(line: 205, column: 2, scope: !6738)
!6812 = !DILocation(line: 206, column: 17, scope: !6738)
!6813 = !DILocation(line: 206, column: 2, scope: !6738)
!6814 = !DILocation(line: 206, column: 7, scope: !6738)
!6815 = !DILocation(line: 206, column: 14, scope: !6738)
!6816 = !DILocation(line: 207, column: 2, scope: !6738)
!6817 = !DILocation(line: 207, column: 7, scope: !6738)
!6818 = !DILocation(line: 207, column: 12, scope: !6738)
!6819 = !DILocation(line: 207, column: 17, scope: !6738)
!6820 = !DILocation(line: 207, column: 25, scope: !6738)
!6821 = !DILocation(line: 208, column: 15, scope: !6738)
!6822 = !DILocation(line: 208, column: 20, scope: !6738)
!6823 = !DILocation(line: 208, column: 10, scope: !6738)
!6824 = !DILocation(line: 208, column: 13, scope: !6738)
!6825 = !DILocation(line: 208, column: 2, scope: !6738)
!6826 = !DILocation(line: 209, column: 1, scope: !6738)
!6827 = distinct !DISubprogram(name: "HXmc_mempcat", scope: !339, file: !339, line: 170, type: !6342, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6828 = !DILocalVariable(name: "vp", arg: 1, scope: !6827, file: !339, line: 170, type: !6344)
!6829 = !DILocation(line: 170, column: 45, scope: !6827)
!6830 = !DILocalVariable(name: "ptr", arg: 2, scope: !6827, file: !339, line: 170, type: !90)
!6831 = !DILocation(line: 170, column: 61, scope: !6827)
!6832 = !DILocalVariable(name: "len", arg: 3, scope: !6827, file: !339, line: 170, type: !157)
!6833 = !DILocation(line: 170, column: 73, scope: !6827)
!6834 = !DILocation(line: 173, column: 21, scope: !6827)
!6835 = !DILocation(line: 173, column: 28, scope: !6827)
!6836 = !DILocation(line: 173, column: 33, scope: !6827)
!6837 = !DILocation(line: 173, column: 9, scope: !6827)
!6838 = !DILocation(line: 173, column: 2, scope: !6827)
!6839 = distinct !DISubprogram(name: "HXmc_strins", scope: !339, file: !339, line: 176, type: !6840, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{!2717, !6344, !157, !120}
!6842 = !DILocalVariable(name: "vp", arg: 1, scope: !6839, file: !339, line: 176, type: !6344)
!6843 = !DILocation(line: 176, column: 44, scope: !6839)
!6844 = !DILocalVariable(name: "pos", arg: 2, scope: !6839, file: !339, line: 176, type: !157)
!6845 = !DILocation(line: 176, column: 55, scope: !6839)
!6846 = !DILocalVariable(name: "s", arg: 3, scope: !6839, file: !339, line: 176, type: !120)
!6847 = !DILocation(line: 176, column: 72, scope: !6839)
!6848 = !DILocation(line: 178, column: 6, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6839, file: !339, line: 178, column: 6)
!6850 = !DILocation(line: 178, column: 8, scope: !6849)
!6851 = !DILocation(line: 178, column: 6, scope: !6839)
!6852 = !DILocation(line: 179, column: 11, scope: !6849)
!6853 = !DILocation(line: 179, column: 10, scope: !6849)
!6854 = !DILocation(line: 179, column: 3, scope: !6849)
!6855 = !DILocation(line: 180, column: 21, scope: !6839)
!6856 = !DILocation(line: 180, column: 25, scope: !6839)
!6857 = !DILocation(line: 180, column: 30, scope: !6839)
!6858 = !DILocation(line: 180, column: 40, scope: !6839)
!6859 = !DILocation(line: 180, column: 33, scope: !6839)
!6860 = !DILocation(line: 180, column: 9, scope: !6839)
!6861 = !DILocation(line: 180, column: 2, scope: !6839)
!6862 = !DILocation(line: 181, column: 1, scope: !6839)
!6863 = distinct !DISubprogram(name: "HXmc_memdel", scope: !339, file: !339, line: 211, type: !6864, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!2717, !2717, !157, !157}
!6866 = !DILocalVariable(name: "vp", arg: 1, scope: !6863, file: !339, line: 211, type: !2717)
!6867 = !DILocation(line: 211, column: 43, scope: !6863)
!6868 = !DILocalVariable(name: "pos", arg: 2, scope: !6863, file: !339, line: 211, type: !157)
!6869 = !DILocation(line: 211, column: 54, scope: !6863)
!6870 = !DILocalVariable(name: "len", arg: 3, scope: !6863, file: !339, line: 211, type: !157)
!6871 = !DILocation(line: 211, column: 66, scope: !6863)
!6872 = !DILocalVariable(name: "ctx", scope: !6863, file: !339, line: 213, type: !341)
!6873 = !DILocation(line: 213, column: 18, scope: !6863)
!6874 = !DILocation(line: 213, column: 34, scope: !6863)
!6875 = !DILocation(line: 213, column: 24, scope: !6863)
!6876 = !DILocation(line: 214, column: 13, scope: !6863)
!6877 = !DILocation(line: 214, column: 2, scope: !6863)
!6878 = !DILocation(line: 216, column: 6, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6863, file: !339, line: 216, column: 6)
!6880 = !DILocation(line: 216, column: 12, scope: !6879)
!6881 = !DILocation(line: 216, column: 10, scope: !6879)
!6882 = !DILocation(line: 216, column: 18, scope: !6879)
!6883 = !DILocation(line: 216, column: 23, scope: !6879)
!6884 = !DILocation(line: 216, column: 16, scope: !6879)
!6885 = !DILocation(line: 216, column: 6, scope: !6863)
!6886 = !DILocation(line: 217, column: 9, scope: !6879)
!6887 = !DILocation(line: 217, column: 14, scope: !6879)
!6888 = !DILocation(line: 217, column: 23, scope: !6879)
!6889 = !DILocation(line: 217, column: 21, scope: !6879)
!6890 = !DILocation(line: 217, column: 7, scope: !6879)
!6891 = !DILocation(line: 217, column: 3, scope: !6879)
!6892 = !DILocation(line: 219, column: 11, scope: !6863)
!6893 = !DILocation(line: 219, column: 16, scope: !6863)
!6894 = !DILocation(line: 219, column: 21, scope: !6863)
!6895 = !DILocation(line: 219, column: 28, scope: !6863)
!6896 = !DILocation(line: 219, column: 33, scope: !6863)
!6897 = !DILocation(line: 219, column: 38, scope: !6863)
!6898 = !DILocation(line: 219, column: 44, scope: !6863)
!6899 = !DILocation(line: 219, column: 42, scope: !6863)
!6900 = !DILocation(line: 220, column: 10, scope: !6863)
!6901 = !DILocation(line: 220, column: 15, scope: !6863)
!6902 = !DILocation(line: 220, column: 24, scope: !6863)
!6903 = !DILocation(line: 220, column: 22, scope: !6863)
!6904 = !DILocation(line: 220, column: 30, scope: !6863)
!6905 = !DILocation(line: 220, column: 28, scope: !6863)
!6906 = !DILocation(line: 219, column: 2, scope: !6863)
!6907 = !DILocation(line: 221, column: 17, scope: !6863)
!6908 = !DILocation(line: 221, column: 2, scope: !6863)
!6909 = !DILocation(line: 221, column: 7, scope: !6863)
!6910 = !DILocation(line: 221, column: 14, scope: !6863)
!6911 = !DILocation(line: 222, column: 2, scope: !6863)
!6912 = !DILocation(line: 222, column: 7, scope: !6863)
!6913 = !DILocation(line: 222, column: 12, scope: !6863)
!6914 = !DILocation(line: 222, column: 17, scope: !6863)
!6915 = !DILocation(line: 222, column: 25, scope: !6863)
!6916 = !DILocation(line: 223, column: 9, scope: !6863)
!6917 = !DILocation(line: 223, column: 14, scope: !6863)
!6918 = !DILocation(line: 223, column: 2, scope: !6863)
!6919 = distinct !DISubprogram(name: "HXmc_zvecfree", scope: !339, file: !339, line: 236, type: !6920, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !338, retainedNodes: !117)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{null, !6344}
!6922 = !DILocalVariable(name: "args", arg: 1, scope: !6919, file: !339, line: 236, type: !6344)
!6923 = !DILocation(line: 236, column: 43, scope: !6919)
!6924 = !DILocalVariable(name: "travp", scope: !6919, file: !339, line: 238, type: !6344)
!6925 = !DILocation(line: 238, column: 11, scope: !6919)
!6926 = !DILocation(line: 239, column: 15, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6919, file: !339, line: 239, column: 2)
!6928 = !DILocation(line: 239, column: 13, scope: !6927)
!6929 = !DILocation(line: 239, column: 7, scope: !6927)
!6930 = !DILocation(line: 239, column: 22, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6927, file: !339, line: 239, column: 2)
!6932 = !DILocation(line: 239, column: 21, scope: !6931)
!6933 = !DILocation(line: 239, column: 28, scope: !6931)
!6934 = !DILocation(line: 239, column: 2, scope: !6927)
!6935 = !DILocation(line: 240, column: 14, scope: !6931)
!6936 = !DILocation(line: 240, column: 13, scope: !6931)
!6937 = !DILocation(line: 240, column: 3, scope: !6931)
!6938 = !DILocation(line: 239, column: 37, scope: !6931)
!6939 = !DILocation(line: 239, column: 2, scope: !6931)
!6940 = distinct !{!6940, !6934, !6941}
!6941 = !DILocation(line: 240, column: 19, scope: !6927)
!6942 = !DILocation(line: 241, column: 7, scope: !6919)
!6943 = !DILocation(line: 241, column: 2, scope: !6919)
!6944 = !DILocation(line: 242, column: 1, scope: !6919)
!6945 = distinct !DISubprogram(name: "HX_ffs", scope: !352, file: !352, line: 18, type: !6946, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !351, retainedNodes: !117)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{!14, !159}
!6948 = !DILocalVariable(name: "n", arg: 1, scope: !6945, file: !352, line: 18, type: !159)
!6949 = !DILocation(line: 18, column: 40, scope: !6945)
!6950 = !DILocalVariable(name: "s", scope: !6945, file: !352, line: 20, type: !14)
!6951 = !DILocation(line: 20, column: 6, scope: !6945)
!6952 = !DILocation(line: 21, column: 6, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6945, file: !352, line: 21, column: 6)
!6954 = !DILocation(line: 21, column: 8, scope: !6953)
!6955 = !DILocation(line: 21, column: 6, scope: !6945)
!6956 = !DILocation(line: 22, column: 3, scope: !6953)
!6957 = !DILocation(line: 23, column: 2, scope: !6945)
!6958 = !DILocation(line: 23, column: 12, scope: !6945)
!6959 = !DILocation(line: 23, column: 19, scope: !6945)
!6960 = !DILocation(line: 24, column: 3, scope: !6945)
!6961 = distinct !{!6961, !6957, !6962}
!6962 = !DILocation(line: 24, column: 5, scope: !6945)
!6963 = !DILocation(line: 25, column: 9, scope: !6945)
!6964 = !DILocation(line: 25, column: 2, scope: !6945)
!6965 = !DILocation(line: 26, column: 1, scope: !6945)
!6966 = distinct !DISubprogram(name: "HX_fls", scope: !352, file: !352, line: 28, type: !6946, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !351, retainedNodes: !117)
!6967 = !DILocalVariable(name: "n", arg: 1, scope: !6966, file: !352, line: 28, type: !159)
!6968 = !DILocation(line: 28, column: 40, scope: !6966)
!6969 = !DILocalVariable(name: "i", scope: !6966, file: !352, line: 30, type: !14)
!6970 = !DILocation(line: 30, column: 6, scope: !6966)
!6971 = !DILocation(line: 31, column: 9, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !352, line: 31, column: 2)
!6973 = !DILocation(line: 31, column: 7, scope: !6972)
!6974 = !DILocation(line: 31, column: 15, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6972, file: !352, line: 31, column: 2)
!6976 = !DILocation(line: 31, column: 17, scope: !6975)
!6977 = !DILocation(line: 31, column: 2, scope: !6972)
!6978 = !DILocation(line: 32, column: 7, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6975, file: !352, line: 32, column: 7)
!6980 = !DILocation(line: 32, column: 17, scope: !6979)
!6981 = !DILocation(line: 32, column: 14, scope: !6979)
!6982 = !DILocation(line: 32, column: 11, scope: !6979)
!6983 = !DILocation(line: 32, column: 9, scope: !6979)
!6984 = !DILocation(line: 32, column: 7, scope: !6975)
!6985 = !DILocation(line: 33, column: 11, scope: !6979)
!6986 = !DILocation(line: 33, column: 4, scope: !6979)
!6987 = !DILocation(line: 32, column: 18, scope: !6979)
!6988 = !DILocation(line: 31, column: 23, scope: !6975)
!6989 = !DILocation(line: 31, column: 2, scope: !6975)
!6990 = distinct !{!6990, !6977, !6991}
!6991 = !DILocation(line: 33, column: 11, scope: !6972)
!6992 = !DILocation(line: 34, column: 2, scope: !6966)
!6993 = !DILocation(line: 35, column: 1, scope: !6966)
!6994 = distinct !DISubprogram(name: "HX_hexdump", scope: !352, file: !352, line: 37, type: !6995, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !351, retainedNodes: !117)
!6995 = !DISubroutineType(types: !6996)
!6996 = !{null, !6997, !90, !7}
!6997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6998, size: 64)
!6998 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1931, line: 48, baseType: !6999)
!6999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2003, line: 241, size: 1728, elements: !7000)
!7000 = !{!7001, !7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013, !7021, !7022, !7023, !7024, !7025, !7026, !7027, !7028, !7029, !7030, !7031, !7032, !7033, !7034, !7035, !7036}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6999, file: !2003, line: 242, baseType: !14, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6999, file: !2003, line: 247, baseType: !92, size: 64, offset: 64)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6999, file: !2003, line: 248, baseType: !92, size: 64, offset: 128)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6999, file: !2003, line: 249, baseType: !92, size: 64, offset: 192)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6999, file: !2003, line: 250, baseType: !92, size: 64, offset: 256)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6999, file: !2003, line: 251, baseType: !92, size: 64, offset: 320)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6999, file: !2003, line: 252, baseType: !92, size: 64, offset: 384)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6999, file: !2003, line: 253, baseType: !92, size: 64, offset: 448)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6999, file: !2003, line: 254, baseType: !92, size: 64, offset: 512)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6999, file: !2003, line: 256, baseType: !92, size: 64, offset: 576)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6999, file: !2003, line: 257, baseType: !92, size: 64, offset: 640)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6999, file: !2003, line: 258, baseType: !92, size: 64, offset: 704)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6999, file: !2003, line: 260, baseType: !7014, size: 64, offset: 768)
!7014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7015, size: 64)
!7015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2003, line: 156, size: 192, elements: !7016)
!7016 = !{!7017, !7018, !7020}
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !7015, file: !2003, line: 157, baseType: !7014, size: 64)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !7015, file: !2003, line: 158, baseType: !7019, size: 64, offset: 64)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6999, size: 64)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !7015, file: !2003, line: 162, baseType: !14, size: 32, offset: 128)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6999, file: !2003, line: 262, baseType: !7019, size: 64, offset: 832)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6999, file: !2003, line: 264, baseType: !14, size: 32, offset: 896)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6999, file: !2003, line: 268, baseType: !14, size: 32, offset: 928)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6999, file: !2003, line: 270, baseType: !2029, size: 64, offset: 960)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6999, file: !2003, line: 274, baseType: !94, size: 16, offset: 1024)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6999, file: !2003, line: 275, baseType: !407, size: 8, offset: 1040)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6999, file: !2003, line: 276, baseType: !2033, size: 8, offset: 1048)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6999, file: !2003, line: 280, baseType: !2037, size: 64, offset: 1088)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6999, file: !2003, line: 289, baseType: !2040, size: 64, offset: 1152)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !6999, file: !2003, line: 297, baseType: !89, size: 64, offset: 1216)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !6999, file: !2003, line: 298, baseType: !89, size: 64, offset: 1280)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !6999, file: !2003, line: 299, baseType: !89, size: 64, offset: 1344)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !6999, file: !2003, line: 300, baseType: !89, size: 64, offset: 1408)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6999, file: !2003, line: 302, baseType: !157, size: 64, offset: 1472)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6999, file: !2003, line: 303, baseType: !14, size: 32, offset: 1536)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6999, file: !2003, line: 305, baseType: !2048, size: 160, offset: 1568)
!7037 = !DILocalVariable(name: "fp", arg: 1, scope: !6994, file: !352, line: 37, type: !6997)
!7038 = !DILocation(line: 37, column: 37, scope: !6994)
!7039 = !DILocalVariable(name: "vptr", arg: 2, scope: !6994, file: !352, line: 37, type: !90)
!7040 = !DILocation(line: 37, column: 53, scope: !6994)
!7041 = !DILocalVariable(name: "len", arg: 3, scope: !6994, file: !352, line: 37, type: !7)
!7042 = !DILocation(line: 37, column: 72, scope: !6994)
!7043 = !DILocalVariable(name: "ptr", scope: !6994, file: !352, line: 39, type: !4499)
!7044 = !DILocation(line: 39, column: 23, scope: !6994)
!7045 = !DILocation(line: 39, column: 29, scope: !6994)
!7046 = !DILocalVariable(name: "i", scope: !6994, file: !352, line: 40, type: !7)
!7047 = !DILocation(line: 40, column: 15, scope: !6994)
!7048 = !DILocalVariable(name: "j", scope: !6994, file: !352, line: 40, type: !7)
!7049 = !DILocation(line: 40, column: 18, scope: !6994)
!7050 = !DILocalVariable(name: "tty", scope: !6994, file: !352, line: 41, type: !141)
!7051 = !DILocation(line: 41, column: 7, scope: !6994)
!7052 = !DILocation(line: 41, column: 27, scope: !6994)
!7053 = !DILocation(line: 41, column: 20, scope: !6994)
!7054 = !DILocation(line: 41, column: 13, scope: !6994)
!7055 = !DILocation(line: 43, column: 10, scope: !6994)
!7056 = !DILocation(line: 43, column: 36, scope: !6994)
!7057 = !DILocation(line: 43, column: 2, scope: !6994)
!7058 = !DILocation(line: 44, column: 9, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6994, file: !352, line: 44, column: 2)
!7060 = !DILocation(line: 44, column: 7, scope: !7059)
!7061 = !DILocation(line: 44, column: 14, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7059, file: !352, line: 44, column: 2)
!7063 = !DILocation(line: 44, column: 18, scope: !7062)
!7064 = !DILocation(line: 44, column: 22, scope: !7062)
!7065 = !DILocation(line: 44, column: 16, scope: !7062)
!7066 = !DILocation(line: 44, column: 2, scope: !7059)
!7067 = !DILocation(line: 45, column: 11, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7062, file: !352, line: 44, column: 33)
!7069 = !DILocation(line: 45, column: 26, scope: !7068)
!7070 = !DILocation(line: 45, column: 28, scope: !7068)
!7071 = !DILocation(line: 45, column: 3, scope: !7068)
!7072 = !DILocation(line: 46, column: 10, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7068, file: !352, line: 46, column: 3)
!7074 = !DILocation(line: 46, column: 8, scope: !7073)
!7075 = !DILocation(line: 46, column: 15, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !352, line: 46, column: 3)
!7077 = !DILocation(line: 46, column: 17, scope: !7076)
!7078 = !DILocation(line: 46, column: 3, scope: !7073)
!7079 = !DILocation(line: 47, column: 12, scope: !7076)
!7080 = !DILocation(line: 47, column: 30, scope: !7076)
!7081 = !DILocation(line: 47, column: 26, scope: !7076)
!7082 = !DILocation(line: 47, column: 35, scope: !7076)
!7083 = !DILocation(line: 47, column: 37, scope: !7076)
!7084 = !DILocation(line: 47, column: 34, scope: !7076)
!7085 = !DILocation(line: 47, column: 4, scope: !7076)
!7086 = !DILocation(line: 46, column: 23, scope: !7076)
!7087 = !DILocation(line: 46, column: 3, scope: !7076)
!7088 = distinct !{!7088, !7078, !7089}
!7089 = !DILocation(line: 47, column: 54, scope: !7073)
!7090 = !DILocation(line: 48, column: 7, scope: !7068)
!7091 = !DILocation(line: 49, column: 11, scope: !7068)
!7092 = !DILocation(line: 49, column: 3, scope: !7068)
!7093 = !DILocation(line: 50, column: 10, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7068, file: !352, line: 50, column: 3)
!7095 = !DILocation(line: 50, column: 8, scope: !7094)
!7096 = !DILocation(line: 50, column: 15, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7094, file: !352, line: 50, column: 3)
!7098 = !DILocation(line: 50, column: 17, scope: !7097)
!7099 = !DILocation(line: 50, column: 3, scope: !7094)
!7100 = !DILocation(line: 51, column: 20, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7097, file: !352, line: 51, column: 8)
!7102 = !DILocation(line: 51, column: 19, scope: !7101)
!7103 = !DILocation(line: 51, column: 8, scope: !7101)
!7104 = !DILocation(line: 51, column: 8, scope: !7097)
!7105 = !DILocation(line: 52, column: 13, scope: !7101)
!7106 = !DILocation(line: 52, column: 24, scope: !7101)
!7107 = !DILocation(line: 52, column: 23, scope: !7101)
!7108 = !DILocation(line: 52, column: 5, scope: !7101)
!7109 = !DILocation(line: 53, column: 13, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7101, file: !352, line: 53, column: 13)
!7111 = !DILocation(line: 53, column: 13, scope: !7101)
!7112 = !DILocation(line: 54, column: 13, scope: !7110)
!7113 = !DILocation(line: 54, column: 5, scope: !7110)
!7114 = !DILocation(line: 56, column: 13, scope: !7110)
!7115 = !DILocation(line: 56, column: 5, scope: !7110)
!7116 = !DILocation(line: 51, column: 23, scope: !7101)
!7117 = !DILocation(line: 50, column: 23, scope: !7097)
!7118 = !DILocation(line: 50, column: 28, scope: !7097)
!7119 = !DILocation(line: 50, column: 3, scope: !7097)
!7120 = distinct !{!7120, !7099, !7121}
!7121 = !DILocation(line: 56, column: 20, scope: !7094)
!7122 = !DILocation(line: 57, column: 11, scope: !7068)
!7123 = !DILocation(line: 57, column: 3, scope: !7068)
!7124 = !DILocation(line: 58, column: 2, scope: !7068)
!7125 = !DILocation(line: 44, column: 28, scope: !7062)
!7126 = !DILocation(line: 44, column: 2, scope: !7062)
!7127 = distinct !{!7127, !7066, !7128}
!7128 = !DILocation(line: 58, column: 2, scope: !7059)
!7129 = !DILocation(line: 59, column: 10, scope: !6994)
!7130 = !DILocation(line: 59, column: 25, scope: !6994)
!7131 = !DILocation(line: 59, column: 27, scope: !6994)
!7132 = !DILocation(line: 59, column: 2, scope: !6994)
!7133 = !DILocation(line: 60, column: 9, scope: !6994)
!7134 = !DILocation(line: 60, column: 11, scope: !6994)
!7135 = !DILocation(line: 60, column: 6, scope: !6994)
!7136 = !DILocation(line: 61, column: 9, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !6994, file: !352, line: 61, column: 2)
!7138 = !DILocation(line: 61, column: 7, scope: !7137)
!7139 = !DILocation(line: 61, column: 14, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7137, file: !352, line: 61, column: 2)
!7141 = !DILocation(line: 61, column: 18, scope: !7140)
!7142 = !DILocation(line: 61, column: 16, scope: !7140)
!7143 = !DILocation(line: 61, column: 2, scope: !7137)
!7144 = !DILocation(line: 62, column: 11, scope: !7140)
!7145 = !DILocation(line: 62, column: 25, scope: !7140)
!7146 = !DILocation(line: 62, column: 29, scope: !7140)
!7147 = !DILocation(line: 62, column: 34, scope: !7140)
!7148 = !DILocation(line: 62, column: 36, scope: !7140)
!7149 = !DILocation(line: 62, column: 33, scope: !7140)
!7150 = !DILocation(line: 62, column: 3, scope: !7140)
!7151 = !DILocation(line: 61, column: 23, scope: !7140)
!7152 = !DILocation(line: 61, column: 2, scope: !7140)
!7153 = distinct !{!7153, !7143, !7154}
!7154 = !DILocation(line: 62, column: 53, scope: !7137)
!7155 = !DILocation(line: 63, column: 2, scope: !6994)
!7156 = !DILocation(line: 63, column: 9, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !352, line: 63, column: 2)
!7158 = distinct !DILexicalBlock(scope: !6994, file: !352, line: 63, column: 2)
!7159 = !DILocation(line: 63, column: 11, scope: !7157)
!7160 = !DILocation(line: 63, column: 2, scope: !7158)
!7161 = !DILocation(line: 64, column: 11, scope: !7157)
!7162 = !DILocation(line: 64, column: 3, scope: !7157)
!7163 = !DILocation(line: 63, column: 17, scope: !7157)
!7164 = !DILocation(line: 63, column: 2, scope: !7157)
!7165 = distinct !{!7165, !7160, !7166}
!7166 = !DILocation(line: 64, column: 20, scope: !7158)
!7167 = !DILocation(line: 65, column: 10, scope: !6994)
!7168 = !DILocation(line: 65, column: 2, scope: !6994)
!7169 = !DILocation(line: 66, column: 9, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !6994, file: !352, line: 66, column: 2)
!7171 = !DILocation(line: 66, column: 7, scope: !7170)
!7172 = !DILocation(line: 66, column: 14, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7170, file: !352, line: 66, column: 2)
!7174 = !DILocation(line: 66, column: 18, scope: !7173)
!7175 = !DILocation(line: 66, column: 16, scope: !7173)
!7176 = !DILocation(line: 66, column: 2, scope: !7170)
!7177 = !DILocation(line: 67, column: 18, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7173, file: !352, line: 67, column: 7)
!7179 = !DILocation(line: 67, column: 22, scope: !7178)
!7180 = !DILocation(line: 67, column: 7, scope: !7178)
!7181 = !DILocation(line: 67, column: 7, scope: !7173)
!7182 = !DILocation(line: 68, column: 12, scope: !7178)
!7183 = !DILocation(line: 68, column: 22, scope: !7178)
!7184 = !DILocation(line: 68, column: 26, scope: !7178)
!7185 = !DILocation(line: 68, column: 4, scope: !7178)
!7186 = !DILocation(line: 69, column: 12, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7178, file: !352, line: 69, column: 12)
!7188 = !DILocation(line: 69, column: 12, scope: !7178)
!7189 = !DILocation(line: 70, column: 12, scope: !7187)
!7190 = !DILocation(line: 70, column: 4, scope: !7187)
!7191 = !DILocation(line: 72, column: 12, scope: !7187)
!7192 = !DILocation(line: 72, column: 4, scope: !7187)
!7193 = !DILocation(line: 67, column: 24, scope: !7178)
!7194 = !DILocation(line: 66, column: 23, scope: !7173)
!7195 = !DILocation(line: 66, column: 2, scope: !7173)
!7196 = distinct !{!7196, !7176, !7197}
!7197 = !DILocation(line: 72, column: 19, scope: !7170)
!7198 = !DILocation(line: 73, column: 10, scope: !6994)
!7199 = !DILocation(line: 73, column: 2, scope: !6994)
!7200 = !DILocation(line: 74, column: 1, scope: !6994)
!7201 = distinct !DISubprogram(name: "HX_isprint", scope: !1396, file: !1396, line: 52, type: !1397, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !351, retainedNodes: !117)
!7202 = !DILocalVariable(name: "c", arg: 1, scope: !7201, file: !1396, line: 52, type: !231)
!7203 = !DILocation(line: 52, column: 45, scope: !7201)
!7204 = !DILocation(line: 54, column: 9, scope: !7201)
!7205 = !DILocation(line: 54, column: 2, scope: !7201)
!7206 = distinct !DISubprogram(name: "HX_zvecfree", scope: !352, file: !352, line: 76, type: !7207, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !351, retainedNodes: !117)
!7207 = !DISubroutineType(types: !7208)
!7208 = !{null, !380}
!7209 = !DILocalVariable(name: "args", arg: 1, scope: !7206, file: !352, line: 76, type: !380)
!7210 = !DILocation(line: 76, column: 39, scope: !7206)
!7211 = !DILocalVariable(name: "travp", scope: !7206, file: !352, line: 78, type: !380)
!7212 = !DILocation(line: 78, column: 9, scope: !7206)
!7213 = !DILocation(line: 79, column: 15, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7206, file: !352, line: 79, column: 2)
!7215 = !DILocation(line: 79, column: 13, scope: !7214)
!7216 = !DILocation(line: 79, column: 7, scope: !7214)
!7217 = !DILocation(line: 79, column: 22, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7214, file: !352, line: 79, column: 2)
!7219 = !DILocation(line: 79, column: 21, scope: !7218)
!7220 = !DILocation(line: 79, column: 28, scope: !7218)
!7221 = !DILocation(line: 79, column: 2, scope: !7214)
!7222 = !DILocation(line: 80, column: 9, scope: !7218)
!7223 = !DILocation(line: 80, column: 8, scope: !7218)
!7224 = !DILocation(line: 80, column: 3, scope: !7218)
!7225 = !DILocation(line: 79, column: 37, scope: !7218)
!7226 = !DILocation(line: 79, column: 2, scope: !7218)
!7227 = distinct !{!7227, !7221, !7228}
!7228 = !DILocation(line: 80, column: 14, scope: !7214)
!7229 = !DILocation(line: 81, column: 7, scope: !7206)
!7230 = !DILocation(line: 81, column: 2, scope: !7206)
!7231 = !DILocation(line: 82, column: 1, scope: !7206)
!7232 = distinct !DISubprogram(name: "HXparse_dequote_fmt", scope: !356, file: !356, line: 326, type: !7233, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!97, !120, !120, !381}
!7235 = !DILocalVariable(name: "s", arg: 1, scope: !7232, file: !356, line: 326, type: !120)
!7236 = !DILocation(line: 326, column: 41, scope: !7232)
!7237 = !DILocalVariable(name: "end", arg: 2, scope: !7232, file: !356, line: 326, type: !120)
!7238 = !DILocation(line: 326, column: 56, scope: !7232)
!7239 = !DILocalVariable(name: "pptr", arg: 3, scope: !7232, file: !356, line: 326, type: !381)
!7240 = !DILocation(line: 326, column: 74, scope: !7232)
!7241 = !DILocalVariable(name: "level", scope: !7232, file: !356, line: 328, type: !7)
!7242 = !DILocation(line: 328, column: 15, scope: !7232)
!7243 = !DILocalVariable(name: "i", scope: !7232, file: !356, line: 329, type: !120)
!7244 = !DILocation(line: 329, column: 14, scope: !7232)
!7245 = !DILocalVariable(name: "quot", scope: !7232, file: !356, line: 330, type: !93)
!7246 = !DILocation(line: 330, column: 7, scope: !7232)
!7247 = !DILocalVariable(name: "tmp", scope: !7232, file: !356, line: 331, type: !97)
!7248 = !DILocation(line: 331, column: 10, scope: !7232)
!7249 = !DILocation(line: 334, column: 11, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7232, file: !356, line: 334, column: 2)
!7251 = !DILocation(line: 334, column: 9, scope: !7250)
!7252 = !DILocation(line: 334, column: 7, scope: !7250)
!7253 = !DILocation(line: 334, column: 15, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !356, line: 334, column: 2)
!7255 = !DILocation(line: 334, column: 14, scope: !7254)
!7256 = !DILocation(line: 334, column: 17, scope: !7254)
!7257 = !DILocation(line: 334, column: 2, scope: !7250)
!7258 = !DILocation(line: 335, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !356, line: 335, column: 7)
!7260 = distinct !DILexicalBlock(scope: !7254, file: !356, line: 334, column: 28)
!7261 = !DILocation(line: 335, column: 12, scope: !7259)
!7262 = !DILocation(line: 335, column: 7, scope: !7260)
!7263 = !DILocation(line: 336, column: 13, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7259, file: !356, line: 335, column: 21)
!7265 = !DILocation(line: 336, column: 12, scope: !7264)
!7266 = !DILocation(line: 336, column: 4, scope: !7264)
!7267 = !DILocation(line: 339, column: 15, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7264, file: !356, line: 336, column: 16)
!7269 = !DILocation(line: 339, column: 13, scope: !7268)
!7270 = !DILocation(line: 339, column: 11, scope: !7268)
!7271 = !DILocation(line: 340, column: 6, scope: !7268)
!7272 = distinct !{!7272, !7257, !7273}
!7273 = !DILocation(line: 368, column: 2, scope: !7250)
!7274 = !DILocation(line: 342, column: 10, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7268, file: !356, line: 342, column: 10)
!7276 = !DILocation(line: 342, column: 15, scope: !7275)
!7277 = !DILocation(line: 342, column: 10, scope: !7268)
!7278 = !DILocation(line: 343, column: 9, scope: !7275)
!7279 = !DILocation(line: 343, column: 7, scope: !7275)
!7280 = !DILocation(line: 344, column: 6, scope: !7268)
!7281 = !DILocation(line: 346, column: 6, scope: !7268)
!7282 = !DILocation(line: 347, column: 6, scope: !7268)
!7283 = !DILocation(line: 348, column: 6, scope: !7268)
!7284 = !DILocation(line: 350, column: 8, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7264, file: !356, line: 350, column: 8)
!7286 = !DILocation(line: 350, column: 14, scope: !7285)
!7287 = !DILocation(line: 350, column: 19, scope: !7285)
!7288 = !DILocation(line: 350, column: 22, scope: !7285)
!7289 = !DILocation(line: 350, column: 26, scope: !7285)
!7290 = !DILocation(line: 350, column: 34, scope: !7285)
!7291 = !DILocation(line: 351, column: 15, scope: !7285)
!7292 = !DILocation(line: 351, column: 21, scope: !7285)
!7293 = !DILocation(line: 351, column: 20, scope: !7285)
!7294 = !DILocation(line: 351, column: 8, scope: !7285)
!7295 = !DILocation(line: 351, column: 24, scope: !7285)
!7296 = !DILocation(line: 350, column: 8, scope: !7264)
!7297 = !DILocation(line: 352, column: 5, scope: !7285)
!7298 = !DILocation(line: 353, column: 8, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7264, file: !356, line: 353, column: 8)
!7300 = !DILocation(line: 353, column: 13, scope: !7299)
!7301 = !DILocation(line: 353, column: 24, scope: !7299)
!7302 = !DILocation(line: 353, column: 27, scope: !7299)
!7303 = !DILocation(line: 353, column: 33, scope: !7299)
!7304 = !DILocation(line: 353, column: 8, scope: !7264)
!7305 = !DILocation(line: 354, column: 5, scope: !7299)
!7306 = !DILocation(line: 355, column: 4, scope: !7264)
!7307 = !DILocation(line: 356, column: 4, scope: !7264)
!7308 = !DILocation(line: 358, column: 8, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7260, file: !356, line: 358, column: 7)
!7310 = !DILocation(line: 358, column: 7, scope: !7309)
!7311 = !DILocation(line: 358, column: 13, scope: !7309)
!7312 = !DILocation(line: 358, column: 10, scope: !7309)
!7313 = !DILocation(line: 358, column: 7, scope: !7260)
!7314 = !DILocation(line: 359, column: 9, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !356, line: 358, column: 19)
!7316 = !DILocation(line: 360, column: 4, scope: !7315)
!7317 = !DILocation(line: 361, column: 4, scope: !7315)
!7318 = !DILocation(line: 362, column: 15, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7309, file: !356, line: 362, column: 14)
!7320 = !DILocation(line: 362, column: 14, scope: !7319)
!7321 = !DILocation(line: 362, column: 17, scope: !7319)
!7322 = !DILocation(line: 362, column: 14, scope: !7309)
!7323 = !DILocation(line: 363, column: 9, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !356, line: 363, column: 8)
!7325 = distinct !DILexicalBlock(scope: !7319, file: !356, line: 362, column: 26)
!7326 = !DILocation(line: 363, column: 8, scope: !7324)
!7327 = !DILocation(line: 363, column: 13, scope: !7324)
!7328 = !DILocation(line: 363, column: 8, scope: !7325)
!7329 = !DILocation(line: 364, column: 5, scope: !7324)
!7330 = !DILocation(line: 365, column: 4, scope: !7325)
!7331 = !DILocation(line: 367, column: 3, scope: !7260)
!7332 = !DILocation(line: 334, column: 2, scope: !7254)
!7333 = !DILocation(line: 370, column: 6, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7232, file: !356, line: 370, column: 6)
!7335 = !DILocation(line: 370, column: 11, scope: !7334)
!7336 = !DILocation(line: 370, column: 6, scope: !7232)
!7337 = !DILocation(line: 371, column: 11, scope: !7334)
!7338 = !DILocation(line: 371, column: 4, scope: !7334)
!7339 = !DILocation(line: 371, column: 9, scope: !7334)
!7340 = !DILocation(line: 371, column: 3, scope: !7334)
!7341 = !DILocation(line: 372, column: 21, scope: !7232)
!7342 = !DILocation(line: 372, column: 24, scope: !7232)
!7343 = !DILocation(line: 372, column: 28, scope: !7232)
!7344 = !DILocation(line: 372, column: 26, scope: !7232)
!7345 = !DILocation(line: 372, column: 8, scope: !7232)
!7346 = !DILocation(line: 372, column: 6, scope: !7232)
!7347 = !DILocation(line: 373, column: 6, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7232, file: !356, line: 373, column: 6)
!7349 = !DILocation(line: 373, column: 10, scope: !7348)
!7350 = !DILocation(line: 373, column: 6, scope: !7232)
!7351 = !DILocation(line: 374, column: 3, scope: !7348)
!7352 = !DILocation(line: 375, column: 22, scope: !7232)
!7353 = !DILocation(line: 375, column: 2, scope: !7232)
!7354 = !DILocation(line: 376, column: 9, scope: !7232)
!7355 = !DILocation(line: 376, column: 2, scope: !7232)
!7356 = !DILocation(line: 377, column: 1, scope: !7232)
!7357 = distinct !DISubprogram(name: "HXparse_dequote_int", scope: !356, file: !356, line: 275, type: !7358, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!7358 = !DISubroutineType(types: !7359)
!7359 = !{!92, !92, !120}
!7360 = !DILocalVariable(name: "o", arg: 1, scope: !7357, file: !356, line: 275, type: !92)
!7361 = !DILocation(line: 275, column: 40, scope: !7357)
!7362 = !DILocalVariable(name: "end", arg: 2, scope: !7357, file: !356, line: 275, type: !120)
!7363 = !DILocation(line: 275, column: 55, scope: !7357)
!7364 = !DILocalVariable(name: "i", scope: !7357, file: !356, line: 277, type: !92)
!7365 = !DILocation(line: 277, column: 8, scope: !7357)
!7366 = !DILocalVariable(name: "quot", scope: !7357, file: !356, line: 277, type: !93)
!7367 = !DILocation(line: 277, column: 11, scope: !7357)
!7368 = !DILocation(line: 278, column: 11, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7357, file: !356, line: 278, column: 2)
!7370 = !DILocation(line: 278, column: 9, scope: !7369)
!7371 = !DILocation(line: 278, column: 7, scope: !7369)
!7372 = !DILocation(line: 278, column: 15, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7369, file: !356, line: 278, column: 2)
!7374 = !DILocation(line: 278, column: 14, scope: !7373)
!7375 = !DILocation(line: 278, column: 17, scope: !7373)
!7376 = !DILocation(line: 278, column: 2, scope: !7369)
!7377 = !DILocation(line: 279, column: 7, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !356, line: 279, column: 7)
!7379 = distinct !DILexicalBlock(scope: !7373, file: !356, line: 278, column: 28)
!7380 = !DILocation(line: 279, column: 12, scope: !7378)
!7381 = !DILocation(line: 279, column: 7, scope: !7379)
!7382 = !DILocation(line: 280, column: 13, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7378, file: !356, line: 279, column: 21)
!7384 = !DILocation(line: 280, column: 12, scope: !7383)
!7385 = !DILocation(line: 280, column: 4, scope: !7383)
!7386 = !DILocation(line: 283, column: 15, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7383, file: !356, line: 280, column: 16)
!7388 = !DILocation(line: 283, column: 13, scope: !7387)
!7389 = !DILocation(line: 283, column: 11, scope: !7387)
!7390 = !DILocation(line: 284, column: 6, scope: !7387)
!7391 = distinct !{!7391, !7376, !7392}
!7392 = !DILocation(line: 307, column: 2, scope: !7369)
!7393 = !DILocation(line: 286, column: 11, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7387, file: !356, line: 286, column: 10)
!7395 = !DILocation(line: 286, column: 10, scope: !7394)
!7396 = !DILocation(line: 286, column: 15, scope: !7394)
!7397 = !DILocation(line: 286, column: 10, scope: !7387)
!7398 = !DILocation(line: 287, column: 16, scope: !7394)
!7399 = !DILocation(line: 287, column: 14, scope: !7394)
!7400 = !DILocation(line: 287, column: 9, scope: !7394)
!7401 = !DILocation(line: 287, column: 12, scope: !7394)
!7402 = !DILocation(line: 287, column: 7, scope: !7394)
!7403 = !DILocation(line: 288, column: 6, scope: !7387)
!7404 = !DILocation(line: 290, column: 8, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7383, file: !356, line: 290, column: 8)
!7406 = !DILocation(line: 290, column: 12, scope: !7405)
!7407 = !DILocation(line: 290, column: 20, scope: !7405)
!7408 = !DILocation(line: 290, column: 30, scope: !7405)
!7409 = !DILocation(line: 290, column: 36, scope: !7405)
!7410 = !DILocation(line: 290, column: 35, scope: !7405)
!7411 = !DILocation(line: 290, column: 23, scope: !7405)
!7412 = !DILocation(line: 290, column: 39, scope: !7405)
!7413 = !DILocation(line: 290, column: 8, scope: !7383)
!7414 = !DILocation(line: 291, column: 6, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7405, file: !356, line: 290, column: 48)
!7416 = !DILocation(line: 291, column: 8, scope: !7415)
!7417 = !DILocation(line: 292, column: 12, scope: !7415)
!7418 = !DILocation(line: 292, column: 14, scope: !7415)
!7419 = !DILocation(line: 292, column: 5, scope: !7415)
!7420 = !DILocation(line: 294, column: 13, scope: !7383)
!7421 = !DILocation(line: 294, column: 11, scope: !7383)
!7422 = !DILocation(line: 294, column: 6, scope: !7383)
!7423 = !DILocation(line: 294, column: 9, scope: !7383)
!7424 = !DILocation(line: 295, column: 4, scope: !7383)
!7425 = !DILocation(line: 297, column: 8, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7379, file: !356, line: 297, column: 7)
!7427 = !DILocation(line: 297, column: 7, scope: !7426)
!7428 = !DILocation(line: 297, column: 13, scope: !7426)
!7429 = !DILocation(line: 297, column: 10, scope: !7426)
!7430 = !DILocation(line: 297, column: 7, scope: !7379)
!7431 = !DILocation(line: 298, column: 9, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7426, file: !356, line: 297, column: 19)
!7433 = !DILocation(line: 299, column: 4, scope: !7432)
!7434 = !DILocation(line: 300, column: 4, scope: !7432)
!7435 = !DILocation(line: 301, column: 15, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7426, file: !356, line: 301, column: 14)
!7437 = !DILocation(line: 301, column: 14, scope: !7436)
!7438 = !DILocation(line: 301, column: 17, scope: !7436)
!7439 = !DILocation(line: 301, column: 14, scope: !7426)
!7440 = !DILocation(line: 302, column: 9, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !356, line: 302, column: 8)
!7442 = distinct !DILexicalBlock(scope: !7436, file: !356, line: 301, column: 26)
!7443 = !DILocation(line: 302, column: 8, scope: !7441)
!7444 = !DILocation(line: 302, column: 13, scope: !7441)
!7445 = !DILocation(line: 302, column: 8, scope: !7442)
!7446 = !DILocation(line: 303, column: 14, scope: !7441)
!7447 = !DILocation(line: 303, column: 12, scope: !7441)
!7448 = !DILocation(line: 303, column: 7, scope: !7441)
!7449 = !DILocation(line: 303, column: 10, scope: !7441)
!7450 = !DILocation(line: 303, column: 5, scope: !7441)
!7451 = !DILocation(line: 304, column: 4, scope: !7442)
!7452 = !DILocation(line: 306, column: 12, scope: !7379)
!7453 = !DILocation(line: 306, column: 10, scope: !7379)
!7454 = !DILocation(line: 306, column: 5, scope: !7379)
!7455 = !DILocation(line: 306, column: 8, scope: !7379)
!7456 = !DILocation(line: 278, column: 2, scope: !7373)
!7457 = !DILocation(line: 308, column: 3, scope: !7357)
!7458 = !DILocation(line: 308, column: 5, scope: !7357)
!7459 = !DILocation(line: 309, column: 2, scope: !7357)
!7460 = !DILocation(line: 310, column: 1, scope: !7357)
!7461 = distinct !DISubprogram(name: "HX_getopt", scope: !356, file: !356, line: 379, type: !7462, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!14, !7464, !7497, !7498, !7}
!7464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7465, size: 64)
!7465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7466)
!7466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXoption", file: !25, line: 125, size: 576, elements: !7467)
!7467 = !{!7468, !7469, !7470, !7471, !7472, !7473, !7493, !7494, !7495, !7496}
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "ln", scope: !7466, file: !25, line: 126, baseType: !120, size: 64)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "sh", scope: !7466, file: !25, line: 127, baseType: !93, size: 8, offset: 64)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7466, file: !25, line: 128, baseType: !7, size: 32, offset: 96)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7466, file: !25, line: 129, baseType: !89, size: 64, offset: 128)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "uptr", scope: !7466, file: !25, line: 129, baseType: !89, size: 64, offset: 192)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !7466, file: !25, line: 130, baseType: !7474, size: 64, offset: 256)
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 64)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{null, !7477}
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7478, size: 64)
!7478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7479)
!7479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXoptcb", file: !25, line: 113, size: 448, elements: !7480)
!7480 = !{!7481, !7482, !7483, !7484, !7485, !7491, !7492}
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "arg0", scope: !7479, file: !25, line: 114, baseType: !120, size: 64)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !7479, file: !25, line: 115, baseType: !7464, size: 64, offset: 64)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !7479, file: !25, line: 115, baseType: !7464, size: 64, offset: 128)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7479, file: !25, line: 116, baseType: !120, size: 64, offset: 192)
!7485 = !DIDerivedType(tag: DW_TAG_member, scope: !7479, file: !25, line: 117, baseType: !7486, size: 64, offset: 256)
!7486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7479, file: !25, line: 117, size: 64, elements: !7487)
!7487 = !{!7488, !7490}
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "data_dbl", scope: !7486, file: !25, line: 118, baseType: !7489, size: 64)
!7489 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "data_long", scope: !7486, file: !25, line: 119, baseType: !95, size: 64)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "match_ln", scope: !7479, file: !25, line: 121, baseType: !120, size: 64, offset: 320)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "match_sh", scope: !7479, file: !25, line: 122, baseType: !93, size: 8, offset: 384)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !7466, file: !25, line: 131, baseType: !14, size: 32, offset: 320)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "sval", scope: !7466, file: !25, line: 132, baseType: !120, size: 64, offset: 384)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !7466, file: !25, line: 132, baseType: !120, size: 64, offset: 448)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "htyp", scope: !7466, file: !25, line: 132, baseType: !120, size: 64, offset: 512)
!7497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!7498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!7499 = !DILocalVariable(name: "table", arg: 1, scope: !7461, file: !356, line: 379, type: !7464)
!7500 = !DILocation(line: 379, column: 52, scope: !7461)
!7501 = !DILocalVariable(name: "argc", arg: 2, scope: !7461, file: !356, line: 379, type: !7497)
!7502 = !DILocation(line: 379, column: 64, scope: !7461)
!7503 = !DILocalVariable(name: "argv", arg: 3, scope: !7461, file: !356, line: 380, type: !7498)
!7504 = !DILocation(line: 380, column: 19, scope: !7461)
!7505 = !DILocalVariable(name: "flags", arg: 4, scope: !7461, file: !356, line: 380, type: !7)
!7506 = !DILocation(line: 380, column: 38, scope: !7461)
!7507 = !DILocalVariable(name: "opt", scope: !7461, file: !356, line: 382, type: !381)
!7508 = !DILocation(line: 382, column: 15, scope: !7461)
!7509 = !DILocation(line: 382, column: 22, scope: !7461)
!7510 = !DILocation(line: 382, column: 21, scope: !7461)
!7511 = !DILocalVariable(name: "value", scope: !7461, file: !356, line: 382, type: !120)
!7512 = !DILocation(line: 382, column: 29, scope: !7461)
!7513 = !DILocalVariable(name: "shstr", scope: !7461, file: !356, line: 382, type: !120)
!7514 = !DILocation(line: 382, column: 44, scope: !7461)
!7515 = !DILocalVariable(name: "remaining", scope: !7461, file: !356, line: 383, type: !7516)
!7516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7517, size: 64)
!7517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdeque", file: !420, line: 24, size: 256, elements: !7518)
!7518 = !{!7519, !7531, !7532, !7533}
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !7517, file: !420, line: 25, baseType: !7520, size: 64)
!7520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7521, size: 64)
!7521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXdeque_node", file: !420, line: 14, size: 256, elements: !7522)
!7522 = !{!7523, !7524, !7529, !7530}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7521, file: !420, line: 15, baseType: !7520, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_member, scope: !7521, file: !420, line: 16, baseType: !7525, size: 64, offset: 64)
!7525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7521, file: !420, line: 16, size: 64, elements: !7526)
!7526 = !{!7527, !7528}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7525, file: !420, line: 17, baseType: !89, size: 64)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "sptr", scope: !7525, file: !420, line: 18, baseType: !92, size: 64)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7521, file: !420, line: 20, baseType: !7516, size: 64, offset: 128)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7521, file: !420, line: 21, baseType: !7520, size: 64, offset: 192)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7517, file: !420, line: 26, baseType: !89, size: 64, offset: 64)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7517, file: !420, line: 27, baseType: !7520, size: 64, offset: 128)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7517, file: !420, line: 28, baseType: !7, size: 32, offset: 192)
!7534 = !DILocation(line: 383, column: 18, scope: !7461)
!7535 = !DILocation(line: 383, column: 30, scope: !7461)
!7536 = !DILocalVariable(name: "state", scope: !7461, file: !356, line: 384, type: !7)
!7537 = !DILocation(line: 384, column: 15, scope: !7461)
!7538 = !DILocalVariable(name: "ret", scope: !7461, file: !356, line: 385, type: !14)
!7539 = !DILocation(line: 385, column: 6, scope: !7461)
!7540 = !DILocalVariable(name: "cbi", scope: !7461, file: !356, line: 386, type: !7479)
!7541 = !DILocation(line: 386, column: 17, scope: !7461)
!7542 = !DILocalVariable(name: "key", scope: !7461, file: !356, line: 387, type: !92)
!7543 = !DILocation(line: 387, column: 8, scope: !7461)
!7544 = !DILocalVariable(name: "argk", scope: !7461, file: !356, line: 388, type: !7)
!7545 = !DILocation(line: 388, column: 15, scope: !7461)
!7546 = !DILocation(line: 390, column: 2, scope: !7461)
!7547 = !DILocation(line: 391, column: 16, scope: !7461)
!7548 = !DILocation(line: 391, column: 15, scope: !7461)
!7549 = !DILocation(line: 391, column: 14, scope: !7461)
!7550 = !DILocation(line: 391, column: 6, scope: !7461)
!7551 = !DILocation(line: 391, column: 12, scope: !7461)
!7552 = !DILocation(line: 392, column: 14, scope: !7461)
!7553 = !DILocation(line: 392, column: 6, scope: !7461)
!7554 = !DILocation(line: 392, column: 12, scope: !7461)
!7555 = !DILocation(line: 394, column: 15, scope: !7461)
!7556 = !DILocation(line: 394, column: 40, scope: !7461)
!7557 = !DILocation(line: 394, column: 36, scope: !7461)
!7558 = !DILocation(line: 394, column: 26, scope: !7461)
!7559 = !DILocation(line: 394, column: 2, scope: !7461)
!7560 = !DILocation(line: 396, column: 2, scope: !7461)
!7561 = !DILocalVariable(name: "cur", scope: !7562, file: !356, line: 397, type: !120)
!7562 = distinct !DILexicalBlock(scope: !7461, file: !356, line: 396, column: 15)
!7563 = !DILocation(line: 397, column: 15, scope: !7562)
!7564 = !DILocation(line: 397, column: 22, scope: !7562)
!7565 = !DILocation(line: 397, column: 21, scope: !7562)
!7566 = !DILocation(line: 399, column: 7, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7562, file: !356, line: 399, column: 7)
!7568 = !DILocation(line: 399, column: 13, scope: !7567)
!7569 = !DILocation(line: 399, column: 7, scope: !7562)
!7570 = !DILocation(line: 400, column: 35, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !356, line: 400, column: 8)
!7572 = distinct !DILexicalBlock(scope: !7567, file: !356, line: 399, column: 27)
!7573 = !DILocation(line: 400, column: 42, scope: !7571)
!7574 = !DILocation(line: 400, column: 23, scope: !7571)
!7575 = !DILocation(line: 400, column: 13, scope: !7571)
!7576 = !DILocation(line: 400, column: 21, scope: !7571)
!7577 = !DILocation(line: 400, column: 48, scope: !7571)
!7578 = !DILocation(line: 400, column: 8, scope: !7572)
!7579 = !DILocation(line: 401, column: 9, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !356, line: 401, column: 9)
!7581 = distinct !DILexicalBlock(scope: !7571, file: !356, line: 400, column: 57)
!7582 = !DILocation(line: 401, column: 15, scope: !7580)
!7583 = !DILocation(line: 401, column: 9, scope: !7581)
!7584 = !DILocation(line: 402, column: 19, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !356, line: 401, column: 30)
!7586 = !DILocation(line: 402, column: 40, scope: !7585)
!7587 = !DILocation(line: 402, column: 30, scope: !7585)
!7588 = !DILocation(line: 402, column: 6, scope: !7585)
!7589 = !DILocation(line: 403, column: 6, scope: !7585)
!7590 = !DILocation(line: 404, column: 12, scope: !7585)
!7591 = !DILocation(line: 405, column: 6, scope: !7585)
!7592 = distinct !{!7592, !7560, !7593}
!7593 = !DILocation(line: 611, column: 2, scope: !7461)
!7594 = !DILocation(line: 407, column: 9, scope: !7581)
!7595 = !DILocation(line: 408, column: 5, scope: !7581)
!7596 = !DILocation(line: 411, column: 19, scope: !7572)
!7597 = !DILocation(line: 411, column: 8, scope: !7572)
!7598 = !DILocation(line: 411, column: 17, scope: !7572)
!7599 = !DILocation(line: 412, column: 8, scope: !7572)
!7600 = !DILocation(line: 412, column: 17, scope: !7572)
!7601 = !DILocation(line: 414, column: 23, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7572, file: !356, line: 414, column: 8)
!7603 = !DILocation(line: 414, column: 32, scope: !7602)
!7604 = !DILocation(line: 414, column: 8, scope: !7602)
!7605 = !DILocation(line: 414, column: 8, scope: !7572)
!7606 = !DILocation(line: 415, column: 9, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7602, file: !356, line: 414, column: 39)
!7608 = !DILocation(line: 415, column: 14, scope: !7607)
!7609 = !DILocation(line: 416, column: 4, scope: !7607)
!7610 = !DILocation(line: 416, column: 19, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7602, file: !356, line: 416, column: 15)
!7612 = !DILocation(line: 416, column: 28, scope: !7611)
!7613 = !DILocation(line: 416, column: 33, scope: !7611)
!7614 = !DILocation(line: 416, column: 15, scope: !7602)
!7615 = !DILocation(line: 421, column: 9, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !356, line: 421, column: 9)
!7617 = distinct !DILexicalBlock(scope: !7611, file: !356, line: 416, column: 51)
!7618 = !DILocation(line: 421, column: 13, scope: !7616)
!7619 = !DILocation(line: 421, column: 21, scope: !7616)
!7620 = !DILocation(line: 421, column: 25, scope: !7616)
!7621 = !DILocation(line: 421, column: 24, scope: !7616)
!7622 = !DILocation(line: 421, column: 29, scope: !7616)
!7623 = !DILocation(line: 421, column: 36, scope: !7616)
!7624 = !DILocation(line: 422, column: 10, scope: !7616)
!7625 = !DILocation(line: 422, column: 17, scope: !7616)
!7626 = !DILocation(line: 422, column: 24, scope: !7616)
!7627 = !DILocation(line: 422, column: 27, scope: !7616)
!7628 = !DILocation(line: 422, column: 34, scope: !7616)
!7629 = !DILocation(line: 421, column: 9, scope: !7617)
!7630 = !DILocation(line: 424, column: 17, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7616, file: !356, line: 422, column: 44)
!7632 = !DILocation(line: 424, column: 10, scope: !7631)
!7633 = !DILocation(line: 424, column: 15, scope: !7631)
!7634 = !DILocation(line: 425, column: 21, scope: !7631)
!7635 = !DILocation(line: 425, column: 17, scope: !7631)
!7636 = !DILocation(line: 425, column: 15, scope: !7631)
!7637 = !DILocation(line: 426, column: 5, scope: !7631)
!7638 = !DILocation(line: 431, column: 10, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7616, file: !356, line: 426, column: 12)
!7640 = !DILocation(line: 431, column: 15, scope: !7639)
!7641 = !DILocation(line: 433, column: 4, scope: !7617)
!7642 = !DILocation(line: 434, column: 9, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !356, line: 434, column: 9)
!7644 = distinct !DILexicalBlock(scope: !7611, file: !356, line: 433, column: 11)
!7645 = !DILocation(line: 434, column: 13, scope: !7643)
!7646 = !DILocation(line: 434, column: 9, scope: !7644)
!7647 = !DILocation(line: 435, column: 10, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7643, file: !356, line: 434, column: 22)
!7649 = !DILocation(line: 436, column: 6, scope: !7648)
!7650 = !DILocation(line: 438, column: 16, scope: !7644)
!7651 = !DILocation(line: 438, column: 9, scope: !7644)
!7652 = !DILocation(line: 438, column: 14, scope: !7644)
!7653 = !DILocation(line: 439, column: 17, scope: !7644)
!7654 = !DILocation(line: 439, column: 16, scope: !7644)
!7655 = !DILocation(line: 439, column: 14, scope: !7644)
!7656 = !DILocation(line: 442, column: 4, scope: !7572)
!7657 = !DILocation(line: 443, column: 9, scope: !7572)
!7658 = !DILocation(line: 443, column: 4, scope: !7572)
!7659 = !DILocation(line: 444, column: 10, scope: !7572)
!7660 = !DILocation(line: 445, column: 10, scope: !7572)
!7661 = !DILocation(line: 447, column: 3, scope: !7572)
!7662 = !DILocation(line: 449, column: 7, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7562, file: !356, line: 449, column: 7)
!7664 = !DILocation(line: 449, column: 13, scope: !7663)
!7665 = !DILocation(line: 449, column: 7, scope: !7562)
!7666 = !DILocalVariable(name: "got_value", scope: !7667, file: !356, line: 450, type: !141)
!7667 = distinct !DILexicalBlock(scope: !7663, file: !356, line: 449, column: 24)
!7668 = !DILocation(line: 450, column: 9, scope: !7667)
!7669 = !DILocation(line: 450, column: 29, scope: !7667)
!7670 = !DILocation(line: 450, column: 22, scope: !7667)
!7671 = !DILocation(line: 450, column: 39, scope: !7667)
!7672 = !DILocation(line: 452, column: 35, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7667, file: !356, line: 452, column: 8)
!7674 = !DILocation(line: 452, column: 42, scope: !7673)
!7675 = !DILocation(line: 452, column: 23, scope: !7673)
!7676 = !DILocation(line: 452, column: 13, scope: !7673)
!7677 = !DILocation(line: 452, column: 21, scope: !7673)
!7678 = !DILocation(line: 452, column: 48, scope: !7673)
!7679 = !DILocation(line: 452, column: 8, scope: !7667)
!7680 = !DILocation(line: 453, column: 9, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !356, line: 453, column: 9)
!7682 = distinct !DILexicalBlock(scope: !7673, file: !356, line: 452, column: 57)
!7683 = !DILocation(line: 453, column: 15, scope: !7681)
!7684 = !DILocation(line: 453, column: 9, scope: !7682)
!7685 = !DILocation(line: 454, column: 19, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7681, file: !356, line: 453, column: 30)
!7687 = !DILocation(line: 455, column: 33, scope: !7686)
!7688 = !DILocation(line: 455, column: 29, scope: !7686)
!7689 = !DILocation(line: 455, column: 19, scope: !7686)
!7690 = !DILocation(line: 454, column: 6, scope: !7686)
!7691 = !DILocation(line: 456, column: 12, scope: !7686)
!7692 = !DILocation(line: 457, column: 6, scope: !7686)
!7693 = !DILocation(line: 459, column: 9, scope: !7682)
!7694 = !DILocation(line: 460, column: 5, scope: !7682)
!7695 = !DILocation(line: 463, column: 23, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7667, file: !356, line: 463, column: 8)
!7697 = !DILocation(line: 463, column: 32, scope: !7696)
!7698 = !DILocation(line: 463, column: 8, scope: !7696)
!7699 = !DILocation(line: 463, column: 38, scope: !7696)
!7700 = !DILocation(line: 463, column: 41, scope: !7696)
!7701 = !DILocation(line: 463, column: 8, scope: !7667)
!7702 = !DILocation(line: 464, column: 9, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7696, file: !356, line: 463, column: 52)
!7704 = !DILocation(line: 465, column: 5, scope: !7703)
!7705 = !DILocation(line: 466, column: 31, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7696, file: !356, line: 466, column: 15)
!7707 = !DILocation(line: 466, column: 40, scope: !7706)
!7708 = !DILocation(line: 466, column: 16, scope: !7706)
!7709 = !DILocation(line: 466, column: 46, scope: !7706)
!7710 = !DILocation(line: 467, column: 9, scope: !7706)
!7711 = !DILocation(line: 466, column: 15, scope: !7696)
!7712 = !DILocation(line: 468, column: 9, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7706, file: !356, line: 467, column: 20)
!7714 = !DILocation(line: 469, column: 5, scope: !7713)
!7715 = !DILocation(line: 472, column: 19, scope: !7667)
!7716 = !DILocation(line: 472, column: 8, scope: !7667)
!7717 = !DILocation(line: 472, column: 17, scope: !7667)
!7718 = !DILocation(line: 473, column: 8, scope: !7667)
!7719 = !DILocation(line: 473, column: 17, scope: !7667)
!7720 = !DILocation(line: 474, column: 19, scope: !7667)
!7721 = !DILocation(line: 474, column: 8, scope: !7667)
!7722 = !DILocation(line: 474, column: 17, scope: !7667)
!7723 = !DILocation(line: 475, column: 4, scope: !7667)
!7724 = !DILocation(line: 477, column: 9, scope: !7667)
!7725 = !DILocation(line: 477, column: 4, scope: !7667)
!7726 = !DILocation(line: 478, column: 10, scope: !7667)
!7727 = !DILocation(line: 479, column: 10, scope: !7667)
!7728 = !DILocation(line: 480, column: 13, scope: !7667)
!7729 = !DILocation(line: 480, column: 12, scope: !7667)
!7730 = !DILocation(line: 480, column: 10, scope: !7667)
!7731 = !DILocation(line: 482, column: 3, scope: !7667)
!7732 = !DILocation(line: 484, column: 7, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7562, file: !356, line: 484, column: 7)
!7734 = !DILocation(line: 484, column: 13, scope: !7733)
!7735 = !DILocation(line: 484, column: 7, scope: !7562)
!7736 = !DILocation(line: 485, column: 9, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !356, line: 485, column: 8)
!7738 = distinct !DILexicalBlock(scope: !7733, file: !356, line: 484, column: 25)
!7739 = !DILocation(line: 485, column: 8, scope: !7737)
!7740 = !DILocation(line: 485, column: 15, scope: !7737)
!7741 = !DILocation(line: 485, column: 8, scope: !7738)
!7742 = !DILocation(line: 486, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7737, file: !356, line: 485, column: 24)
!7744 = !DILocation(line: 487, column: 11, scope: !7743)
!7745 = !DILocation(line: 488, column: 5, scope: !7743)
!7746 = !DILocation(line: 491, column: 31, scope: !7738)
!7747 = !DILocation(line: 491, column: 39, scope: !7738)
!7748 = !DILocation(line: 491, column: 38, scope: !7738)
!7749 = !DILocation(line: 491, column: 18, scope: !7738)
!7750 = !DILocation(line: 491, column: 8, scope: !7738)
!7751 = !DILocation(line: 491, column: 16, scope: !7738)
!7752 = !DILocation(line: 492, column: 12, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7738, file: !356, line: 492, column: 8)
!7754 = !DILocation(line: 492, column: 20, scope: !7753)
!7755 = !DILocation(line: 492, column: 8, scope: !7738)
!7756 = !DILocation(line: 493, column: 9, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !356, line: 493, column: 9)
!7758 = distinct !DILexicalBlock(scope: !7753, file: !356, line: 492, column: 29)
!7759 = !DILocation(line: 493, column: 15, scope: !7757)
!7760 = !DILocation(line: 493, column: 9, scope: !7758)
!7761 = !DILocalVariable(name: "buf", scope: !7762, file: !356, line: 494, type: !7763)
!7762 = distinct !DILexicalBlock(scope: !7757, file: !356, line: 493, column: 30)
!7763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 128, elements: !7764)
!7764 = !{!7765}
!7765 = !DISubrange(count: 16)
!7766 = !DILocation(line: 494, column: 11, scope: !7762)
!7767 = !DILocation(line: 495, column: 15, scope: !7762)
!7768 = !DILocation(line: 495, column: 40, scope: !7762)
!7769 = !DILocation(line: 495, column: 6, scope: !7762)
!7770 = !DILocation(line: 496, column: 19, scope: !7762)
!7771 = !DILocation(line: 496, column: 40, scope: !7762)
!7772 = !DILocation(line: 496, column: 30, scope: !7762)
!7773 = !DILocation(line: 496, column: 6, scope: !7762)
!7774 = !DILocation(line: 497, column: 6, scope: !7762)
!7775 = !DILocation(line: 498, column: 12, scope: !7762)
!7776 = !DILocation(line: 499, column: 6, scope: !7762)
!7777 = !DILocation(line: 501, column: 9, scope: !7758)
!7778 = !DILocation(line: 502, column: 5, scope: !7758)
!7779 = !DILocation(line: 505, column: 8, scope: !7738)
!7780 = !DILocation(line: 505, column: 17, scope: !7738)
!7781 = !DILocation(line: 506, column: 20, scope: !7738)
!7782 = !DILocation(line: 506, column: 19, scope: !7738)
!7783 = !DILocation(line: 506, column: 8, scope: !7738)
!7784 = !DILocation(line: 506, column: 17, scope: !7738)
!7785 = !DILocation(line: 508, column: 23, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7738, file: !356, line: 508, column: 8)
!7787 = !DILocation(line: 508, column: 32, scope: !7786)
!7788 = !DILocation(line: 508, column: 8, scope: !7786)
!7789 = !DILocation(line: 508, column: 8, scope: !7738)
!7790 = !DILocation(line: 510, column: 9, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7786, file: !356, line: 508, column: 39)
!7792 = !DILocation(line: 510, column: 14, scope: !7791)
!7793 = !DILocation(line: 511, column: 5, scope: !7791)
!7794 = !DILocation(line: 512, column: 5, scope: !7791)
!7795 = !DILocation(line: 513, column: 5, scope: !7791)
!7796 = !DILocation(line: 516, column: 11, scope: !7738)
!7797 = !DILocation(line: 516, column: 10, scope: !7738)
!7798 = !DILocation(line: 516, column: 8, scope: !7738)
!7799 = !DILocation(line: 517, column: 10, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7738, file: !356, line: 517, column: 8)
!7801 = !DILocation(line: 517, column: 16, scope: !7800)
!7802 = !DILocation(line: 517, column: 8, scope: !7800)
!7803 = !DILocation(line: 517, column: 21, scope: !7800)
!7804 = !DILocation(line: 517, column: 8, scope: !7738)
!7805 = !DILocation(line: 519, column: 16, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7800, file: !356, line: 517, column: 30)
!7807 = !DILocation(line: 519, column: 22, scope: !7806)
!7808 = !DILocation(line: 519, column: 9, scope: !7806)
!7809 = !DILocation(line: 519, column: 14, scope: !7806)
!7810 = !DILocation(line: 520, column: 5, scope: !7806)
!7811 = !DILocation(line: 521, column: 11, scope: !7806)
!7812 = !DILocation(line: 522, column: 5, scope: !7806)
!7813 = !DILocation(line: 525, column: 12, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7738, file: !356, line: 525, column: 8)
!7815 = !DILocation(line: 525, column: 21, scope: !7814)
!7816 = !DILocation(line: 525, column: 26, scope: !7814)
!7817 = !DILocation(line: 525, column: 8, scope: !7738)
!7818 = !DILocation(line: 526, column: 9, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !356, line: 526, column: 9)
!7820 = distinct !DILexicalBlock(scope: !7814, file: !356, line: 525, column: 44)
!7821 = !DILocation(line: 526, column: 13, scope: !7819)
!7822 = !DILocation(line: 526, column: 21, scope: !7819)
!7823 = !DILocation(line: 526, column: 25, scope: !7819)
!7824 = !DILocation(line: 526, column: 24, scope: !7819)
!7825 = !DILocation(line: 526, column: 29, scope: !7819)
!7826 = !DILocation(line: 526, column: 36, scope: !7819)
!7827 = !DILocation(line: 527, column: 10, scope: !7819)
!7828 = !DILocation(line: 527, column: 17, scope: !7819)
!7829 = !DILocation(line: 527, column: 24, scope: !7819)
!7830 = !DILocation(line: 527, column: 27, scope: !7819)
!7831 = !DILocation(line: 527, column: 34, scope: !7819)
!7832 = !DILocation(line: 526, column: 9, scope: !7820)
!7833 = !DILocation(line: 529, column: 17, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7819, file: !356, line: 527, column: 44)
!7835 = !DILocation(line: 529, column: 10, scope: !7834)
!7836 = !DILocation(line: 529, column: 15, scope: !7834)
!7837 = !DILocation(line: 530, column: 18, scope: !7834)
!7838 = !DILocation(line: 530, column: 17, scope: !7834)
!7839 = !DILocation(line: 530, column: 15, scope: !7834)
!7840 = !DILocation(line: 531, column: 5, scope: !7834)
!7841 = !DILocation(line: 536, column: 10, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7819, file: !356, line: 531, column: 12)
!7843 = !DILocation(line: 536, column: 15, scope: !7842)
!7844 = !DILocation(line: 538, column: 4, scope: !7820)
!7845 = !DILocation(line: 540, column: 9, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !356, line: 540, column: 9)
!7847 = distinct !DILexicalBlock(scope: !7814, file: !356, line: 538, column: 11)
!7848 = !DILocation(line: 540, column: 13, scope: !7846)
!7849 = !DILocation(line: 540, column: 9, scope: !7847)
!7850 = !DILocation(line: 541, column: 10, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7846, file: !356, line: 540, column: 22)
!7852 = !DILocation(line: 542, column: 6, scope: !7851)
!7853 = !DILocation(line: 544, column: 16, scope: !7847)
!7854 = !DILocation(line: 544, column: 9, scope: !7847)
!7855 = !DILocation(line: 544, column: 14, scope: !7847)
!7856 = !DILocation(line: 545, column: 17, scope: !7847)
!7857 = !DILocation(line: 545, column: 16, scope: !7847)
!7858 = !DILocation(line: 545, column: 14, scope: !7847)
!7859 = !DILocation(line: 548, column: 4, scope: !7738)
!7860 = !DILocation(line: 549, column: 10, scope: !7738)
!7861 = !DILocation(line: 551, column: 3, scope: !7738)
!7862 = !DILocation(line: 553, column: 7, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7562, file: !356, line: 553, column: 7)
!7864 = !DILocation(line: 553, column: 11, scope: !7863)
!7865 = !DILocation(line: 553, column: 7, scope: !7562)
!7866 = !DILocation(line: 554, column: 4, scope: !7863)
!7867 = !DILocation(line: 556, column: 7, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7562, file: !356, line: 556, column: 7)
!7869 = !DILocation(line: 556, column: 13, scope: !7868)
!7870 = !DILocation(line: 556, column: 7, scope: !7562)
!7871 = !DILocation(line: 557, column: 17, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7868, file: !356, line: 556, column: 30)
!7873 = !DILocation(line: 557, column: 42, scope: !7872)
!7874 = !DILocation(line: 557, column: 38, scope: !7872)
!7875 = !DILocation(line: 557, column: 28, scope: !7872)
!7876 = !DILocation(line: 557, column: 4, scope: !7872)
!7877 = !DILocation(line: 558, column: 4, scope: !7872)
!7878 = !DILocation(line: 561, column: 7, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7562, file: !356, line: 561, column: 7)
!7880 = !DILocation(line: 561, column: 13, scope: !7879)
!7881 = !DILocation(line: 561, column: 7, scope: !7562)
!7882 = !DILocation(line: 562, column: 8, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !356, line: 562, column: 8)
!7884 = distinct !DILexicalBlock(scope: !7879, file: !356, line: 561, column: 26)
!7885 = !DILocation(line: 562, column: 15, scope: !7883)
!7886 = !DILocation(line: 562, column: 22, scope: !7883)
!7887 = !DILocation(line: 562, column: 25, scope: !7883)
!7888 = !DILocation(line: 562, column: 32, scope: !7883)
!7889 = !DILocation(line: 562, column: 8, scope: !7884)
!7890 = !DILocation(line: 567, column: 18, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7883, file: !356, line: 562, column: 41)
!7892 = !DILocation(line: 567, column: 43, scope: !7891)
!7893 = !DILocation(line: 567, column: 39, scope: !7891)
!7894 = !DILocation(line: 567, column: 29, scope: !7891)
!7895 = !DILocation(line: 567, column: 5, scope: !7891)
!7896 = !DILocation(line: 568, column: 5, scope: !7891)
!7897 = !DILocation(line: 570, column: 8, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7884, file: !356, line: 570, column: 8)
!7899 = !DILocation(line: 570, column: 15, scope: !7898)
!7900 = !DILocation(line: 570, column: 22, scope: !7898)
!7901 = !DILocation(line: 570, column: 25, scope: !7898)
!7902 = !DILocation(line: 570, column: 32, scope: !7898)
!7903 = !DILocation(line: 570, column: 39, scope: !7898)
!7904 = !DILocation(line: 570, column: 42, scope: !7898)
!7905 = !DILocation(line: 570, column: 49, scope: !7898)
!7906 = !DILocation(line: 570, column: 8, scope: !7884)
!7907 = !DILocation(line: 572, column: 11, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7898, file: !356, line: 570, column: 58)
!7909 = !DILocation(line: 578, column: 11, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7908, file: !356, line: 578, column: 9)
!7911 = !DILocation(line: 578, column: 17, scope: !7910)
!7912 = !DILocation(line: 578, column: 9, scope: !7908)
!7913 = !DILocation(line: 579, column: 6, scope: !7910)
!7914 = !DILocation(line: 580, column: 5, scope: !7908)
!7915 = !DILocation(line: 582, column: 8, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7884, file: !356, line: 582, column: 8)
!7917 = !DILocation(line: 582, column: 15, scope: !7916)
!7918 = !DILocation(line: 582, column: 22, scope: !7916)
!7919 = !DILocation(line: 582, column: 25, scope: !7916)
!7920 = !DILocation(line: 582, column: 32, scope: !7916)
!7921 = !DILocation(line: 582, column: 8, scope: !7884)
!7922 = !DILocalVariable(name: "p", scope: !7923, file: !356, line: 583, type: !92)
!7923 = distinct !DILexicalBlock(scope: !7916, file: !356, line: 582, column: 40)
!7924 = !DILocation(line: 583, column: 11, scope: !7923)
!7925 = !DILocation(line: 584, column: 21, scope: !7923)
!7926 = !DILocation(line: 584, column: 25, scope: !7923)
!7927 = !DILocation(line: 584, column: 11, scope: !7923)
!7928 = !DILocation(line: 584, column: 9, scope: !7923)
!7929 = !DILocation(line: 585, column: 21, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7923, file: !356, line: 585, column: 9)
!7931 = !DILocation(line: 585, column: 14, scope: !7930)
!7932 = !DILocation(line: 585, column: 12, scope: !7930)
!7933 = !DILocation(line: 585, column: 32, scope: !7930)
!7934 = !DILocation(line: 585, column: 9, scope: !7923)
!7935 = !DILocation(line: 589, column: 12, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7930, file: !356, line: 585, column: 41)
!7937 = !DILocation(line: 590, column: 6, scope: !7936)
!7938 = !DILocation(line: 591, column: 6, scope: !7936)
!7939 = !DILocation(line: 594, column: 7, scope: !7923)
!7940 = !DILocation(line: 594, column: 11, scope: !7923)
!7941 = !DILocation(line: 595, column: 13, scope: !7923)
!7942 = !DILocation(line: 595, column: 11, scope: !7923)
!7943 = !DILocation(line: 596, column: 11, scope: !7923)
!7944 = !DILocation(line: 597, column: 5, scope: !7923)
!7945 = !DILocation(line: 599, column: 8, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7884, file: !356, line: 599, column: 8)
!7947 = !DILocation(line: 599, column: 15, scope: !7946)
!7948 = !DILocation(line: 599, column: 8, scope: !7884)
!7949 = !DILocation(line: 601, column: 11, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7946, file: !356, line: 599, column: 23)
!7951 = !DILocation(line: 602, column: 13, scope: !7950)
!7952 = !DILocation(line: 602, column: 17, scope: !7950)
!7953 = !DILocation(line: 602, column: 11, scope: !7950)
!7954 = !DILocation(line: 603, column: 5, scope: !7950)
!7955 = !DILocation(line: 605, column: 17, scope: !7884)
!7956 = !DILocation(line: 605, column: 42, scope: !7884)
!7957 = !DILocation(line: 605, column: 38, scope: !7884)
!7958 = !DILocation(line: 605, column: 28, scope: !7884)
!7959 = !DILocation(line: 605, column: 4, scope: !7884)
!7960 = !DILocation(line: 606, column: 4, scope: !7884)
!7961 = !DILocation(line: 609, column: 11, scope: !7562)
!7962 = !DILocation(line: 609, column: 53, scope: !7562)
!7963 = !DILocation(line: 609, column: 3, scope: !7562)
!7964 = !DILocation(line: 610, column: 9, scope: !7562)
!7965 = !DILocation(line: 613, column: 6, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7461, file: !356, line: 613, column: 6)
!7967 = !DILocation(line: 613, column: 10, scope: !7966)
!7968 = !DILocation(line: 613, column: 6, scope: !7461)
!7969 = !DILocation(line: 614, column: 11, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7966, file: !356, line: 613, column: 16)
!7971 = !DILocation(line: 614, column: 3, scope: !7970)
!7972 = !DILocation(line: 616, column: 10, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !356, line: 616, column: 8)
!7974 = distinct !DILexicalBlock(scope: !7970, file: !356, line: 614, column: 16)
!7975 = !DILocation(line: 616, column: 16, scope: !7973)
!7976 = !DILocation(line: 616, column: 8, scope: !7974)
!7977 = !DILocation(line: 617, column: 13, scope: !7973)
!7978 = !DILocation(line: 617, column: 47, scope: !7973)
!7979 = !DILocation(line: 617, column: 5, scope: !7973)
!7980 = !DILocation(line: 618, column: 8, scope: !7974)
!7981 = !DILocation(line: 619, column: 4, scope: !7974)
!7982 = !DILocation(line: 621, column: 10, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7974, file: !356, line: 621, column: 8)
!7984 = !DILocation(line: 621, column: 16, scope: !7983)
!7985 = !DILocation(line: 621, column: 8, scope: !7974)
!7986 = !DILocation(line: 622, column: 13, scope: !7983)
!7987 = !DILocation(line: 623, column: 31, scope: !7983)
!7988 = !DILocation(line: 622, column: 5, scope: !7983)
!7989 = !DILocation(line: 624, column: 8, scope: !7974)
!7990 = !DILocation(line: 625, column: 4, scope: !7974)
!7991 = !DILocation(line: 627, column: 10, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7974, file: !356, line: 627, column: 8)
!7993 = !DILocation(line: 627, column: 16, scope: !7992)
!7994 = !DILocation(line: 627, column: 8, scope: !7974)
!7995 = !DILocation(line: 628, column: 13, scope: !7992)
!7996 = !DILocation(line: 629, column: 27, scope: !7992)
!7997 = !DILocation(line: 628, column: 5, scope: !7992)
!7998 = !DILocation(line: 630, column: 8, scope: !7974)
!7999 = !DILocation(line: 631, column: 4, scope: !7974)
!8000 = !DILocation(line: 633, column: 10, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7974, file: !356, line: 633, column: 8)
!8002 = !DILocation(line: 633, column: 16, scope: !8001)
!8003 = !DILocation(line: 633, column: 8, scope: !7974)
!8004 = !DILocation(line: 634, column: 13, scope: !8001)
!8005 = !DILocation(line: 635, column: 14, scope: !8001)
!8006 = !DILocation(line: 635, column: 13, scope: !8001)
!8007 = !DILocation(line: 634, column: 5, scope: !8001)
!8008 = !DILocation(line: 636, column: 8, scope: !7974)
!8009 = !DILocation(line: 637, column: 4, scope: !7974)
!8010 = !DILocation(line: 639, column: 10, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7974, file: !356, line: 639, column: 8)
!8012 = !DILocation(line: 639, column: 16, scope: !8011)
!8013 = !DILocation(line: 639, column: 8, scope: !7974)
!8014 = !DILocation(line: 640, column: 13, scope: !8011)
!8015 = !DILocation(line: 641, column: 28, scope: !8011)
!8016 = !DILocation(line: 641, column: 27, scope: !8011)
!8017 = !DILocation(line: 640, column: 5, scope: !8011)
!8018 = !DILocation(line: 642, column: 8, scope: !7974)
!8019 = !DILocation(line: 643, column: 4, scope: !7974)
!8020 = !DILocation(line: 645, column: 8, scope: !7970)
!8021 = !DILocation(line: 645, column: 3, scope: !7970)
!8022 = !DILocation(line: 647, column: 7, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !7970, file: !356, line: 647, column: 7)
!8024 = !DILocation(line: 647, column: 13, scope: !8023)
!8025 = !DILocation(line: 647, column: 7, scope: !7970)
!8026 = !DILocation(line: 648, column: 25, scope: !8023)
!8027 = !DILocation(line: 648, column: 4, scope: !8023)
!8028 = !DILocation(line: 649, column: 12, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8023, file: !356, line: 649, column: 12)
!8030 = !DILocation(line: 649, column: 18, scope: !8029)
!8031 = !DILocation(line: 649, column: 12, scope: !8023)
!8032 = !DILocation(line: 650, column: 26, scope: !8029)
!8033 = !DILocation(line: 650, column: 4, scope: !8029)
!8034 = !DILocation(line: 652, column: 20, scope: !7970)
!8035 = !DILocation(line: 652, column: 3, scope: !7970)
!8036 = !DILocation(line: 653, column: 10, scope: !7970)
!8037 = !DILocation(line: 653, column: 3, scope: !7970)
!8038 = !DILocation(line: 656, column: 6, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !7461, file: !356, line: 656, column: 6)
!8040 = !DILocation(line: 656, column: 12, scope: !8039)
!8041 = !DILocation(line: 656, column: 6, scope: !7461)
!8042 = !DILocation(line: 664, column: 15, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8039, file: !356, line: 664, column: 15)
!8044 = !DILocation(line: 664, column: 3, scope: !8039)
!8045 = !DILocation(line: 666, column: 10, scope: !7461)
!8046 = !DILocation(line: 666, column: 3, scope: !7461)
!8047 = !DILocation(line: 666, column: 8, scope: !7461)
!8048 = !DILocation(line: 668, column: 10, scope: !7461)
!8049 = !DILocation(line: 668, column: 3, scope: !7461)
!8050 = !DILocation(line: 668, column: 8, scope: !7461)
!8051 = !DILocation(line: 669, column: 15, scope: !7461)
!8052 = !DILocation(line: 669, column: 2, scope: !7461)
!8053 = !DILocation(line: 670, column: 2, scope: !7461)
!8054 = !DILocation(line: 671, column: 1, scope: !7461)
!8055 = distinct !DISubprogram(name: "HX_strdup", scope: !304, file: !304, line: 132, type: !1099, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8056 = !DILocalVariable(name: "src", arg: 1, scope: !8055, file: !304, line: 132, type: !120)
!8057 = !DILocation(line: 132, column: 43, scope: !8055)
!8058 = !DILocation(line: 134, column: 6, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8055, file: !304, line: 134, column: 6)
!8060 = !DILocation(line: 134, column: 10, scope: !8059)
!8061 = !DILocation(line: 134, column: 6, scope: !8055)
!8062 = !DILocation(line: 135, column: 3, scope: !8059)
!8063 = !DILocation(line: 139, column: 19, scope: !8055)
!8064 = !DILocation(line: 139, column: 31, scope: !8055)
!8065 = !DILocation(line: 139, column: 24, scope: !8055)
!8066 = !DILocation(line: 139, column: 36, scope: !8055)
!8067 = !DILocation(line: 139, column: 9, scope: !8055)
!8068 = !DILocation(line: 139, column: 2, scope: !8055)
!8069 = !DILocation(line: 141, column: 1, scope: !8055)
!8070 = distinct !DISubprogram(name: "lookup_long", scope: !356, file: !356, line: 185, type: !8071, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8071 = !DISubroutineType(types: !8072)
!8072 = !{!7464, !7464, !120}
!8073 = !DILocalVariable(name: "table", arg: 1, scope: !8070, file: !356, line: 185, type: !7464)
!8074 = !DILocation(line: 185, column: 73, scope: !8070)
!8075 = !DILocalVariable(name: "key", arg: 2, scope: !8070, file: !356, line: 186, type: !120)
!8076 = !DILocation(line: 186, column: 17, scope: !8070)
!8077 = !DILocation(line: 188, column: 2, scope: !8070)
!8078 = !DILocation(line: 188, column: 9, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !356, line: 188, column: 2)
!8080 = distinct !DILexicalBlock(scope: !8070, file: !356, line: 188, column: 2)
!8081 = !DILocation(line: 188, column: 16, scope: !8079)
!8082 = !DILocation(line: 188, column: 19, scope: !8079)
!8083 = !DILocation(line: 188, column: 27, scope: !8079)
!8084 = !DILocation(line: 188, column: 30, scope: !8079)
!8085 = !DILocation(line: 188, column: 37, scope: !8079)
!8086 = !DILocation(line: 188, column: 40, scope: !8079)
!8087 = !DILocation(line: 188, column: 2, scope: !8080)
!8088 = !DILocation(line: 189, column: 7, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8079, file: !356, line: 189, column: 7)
!8090 = !DILocation(line: 189, column: 14, scope: !8089)
!8091 = !DILocation(line: 189, column: 17, scope: !8089)
!8092 = !DILocation(line: 189, column: 25, scope: !8089)
!8093 = !DILocation(line: 189, column: 35, scope: !8089)
!8094 = !DILocation(line: 189, column: 42, scope: !8089)
!8095 = !DILocation(line: 189, column: 46, scope: !8089)
!8096 = !DILocation(line: 189, column: 28, scope: !8089)
!8097 = !DILocation(line: 189, column: 51, scope: !8089)
!8098 = !DILocation(line: 189, column: 7, scope: !8079)
!8099 = !DILocation(line: 190, column: 11, scope: !8089)
!8100 = !DILocation(line: 190, column: 4, scope: !8089)
!8101 = !DILocation(line: 189, column: 54, scope: !8089)
!8102 = !DILocation(line: 188, column: 49, scope: !8079)
!8103 = !DILocation(line: 188, column: 2, scope: !8079)
!8104 = distinct !{!8104, !8087, !8105}
!8105 = !DILocation(line: 190, column: 11, scope: !8080)
!8106 = !DILocation(line: 191, column: 2, scope: !8070)
!8107 = !DILocation(line: 192, column: 1, scope: !8070)
!8108 = distinct !DISubprogram(name: "takes_void", scope: !356, file: !356, line: 194, type: !8109, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!141, !7}
!8111 = !DILocalVariable(name: "t", arg: 1, scope: !8108, file: !356, line: 194, type: !7)
!8112 = !DILocation(line: 194, column: 44, scope: !8108)
!8113 = !DILocation(line: 196, column: 4, scope: !8108)
!8114 = !DILocation(line: 197, column: 9, scope: !8108)
!8115 = !DILocation(line: 197, column: 11, scope: !8108)
!8116 = !DILocation(line: 197, column: 26, scope: !8108)
!8117 = !DILocation(line: 197, column: 29, scope: !8108)
!8118 = !DILocation(line: 197, column: 31, scope: !8108)
!8119 = !DILocation(line: 197, column: 45, scope: !8108)
!8120 = !DILocation(line: 197, column: 48, scope: !8108)
!8121 = !DILocation(line: 197, column: 50, scope: !8108)
!8122 = !DILocation(line: 197, column: 2, scope: !8108)
!8123 = distinct !DISubprogram(name: "do_assign", scope: !356, file: !356, line: 82, type: !8124, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{null, !8126}
!8126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7479, size: 64)
!8127 = !DILocalVariable(name: "cbi", arg: 1, scope: !8123, file: !356, line: 82, type: !8126)
!8128 = !DILocation(line: 82, column: 39, scope: !8123)
!8129 = !DILocalVariable(name: "opt", scope: !8123, file: !356, line: 84, type: !7464)
!8130 = !DILocation(line: 84, column: 25, scope: !8123)
!8131 = !DILocation(line: 84, column: 31, scope: !8123)
!8132 = !DILocation(line: 84, column: 36, scope: !8123)
!8133 = !DILocation(line: 86, column: 10, scope: !8123)
!8134 = !DILocation(line: 86, column: 15, scope: !8123)
!8135 = !DILocation(line: 86, column: 20, scope: !8123)
!8136 = !DILocation(line: 86, column: 2, scope: !8123)
!8137 = !DILocalVariable(name: "p", scope: !8138, file: !356, line: 88, type: !7497)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 87, column: 20)
!8139 = distinct !DILexicalBlock(scope: !8123, file: !356, line: 86, column: 38)
!8140 = !DILocation(line: 88, column: 8, scope: !8138)
!8141 = !DILocation(line: 89, column: 12, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !356, line: 89, column: 7)
!8143 = !DILocation(line: 89, column: 17, scope: !8142)
!8144 = !DILocation(line: 89, column: 10, scope: !8142)
!8145 = !DILocation(line: 89, column: 22, scope: !8142)
!8146 = !DILocation(line: 89, column: 7, scope: !8138)
!8147 = !DILocation(line: 90, column: 8, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8142, file: !356, line: 89, column: 31)
!8149 = !DILocation(line: 90, column: 13, scope: !8148)
!8150 = !DILocation(line: 90, column: 6, scope: !8148)
!8151 = !DILocation(line: 91, column: 8, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !356, line: 91, column: 8)
!8153 = !DILocation(line: 91, column: 13, scope: !8152)
!8154 = !DILocation(line: 91, column: 18, scope: !8152)
!8155 = !DILocation(line: 91, column: 8, scope: !8148)
!8156 = !DILocation(line: 91, column: 39, scope: !8152)
!8157 = !DILocation(line: 91, column: 36, scope: !8152)
!8158 = !DILocation(line: 92, column: 13, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8152, file: !356, line: 92, column: 13)
!8160 = !DILocation(line: 92, column: 18, scope: !8159)
!8161 = !DILocation(line: 92, column: 23, scope: !8159)
!8162 = !DILocation(line: 92, column: 13, scope: !8152)
!8163 = !DILocation(line: 92, column: 39, scope: !8159)
!8164 = !DILocation(line: 92, column: 36, scope: !8159)
!8165 = !DILocation(line: 93, column: 37, scope: !8159)
!8166 = !DILocation(line: 93, column: 39, scope: !8159)
!8167 = !DILocation(line: 94, column: 3, scope: !8148)
!8168 = !DILocation(line: 95, column: 3, scope: !8138)
!8169 = !DILocation(line: 95, column: 8, scope: !8138)
!8170 = !DILocation(line: 95, column: 18, scope: !8138)
!8171 = !DILocation(line: 96, column: 3, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8138, file: !356, line: 96, column: 3)
!8173 = !DILocation(line: 96, column: 3, scope: !8138)
!8174 = !DILocation(line: 97, column: 3, scope: !8138)
!8175 = !DILocation(line: 100, column: 52, scope: !8139)
!8176 = !DILocation(line: 100, column: 57, scope: !8139)
!8177 = !DILocation(line: 100, column: 35, scope: !8139)
!8178 = !DILocation(line: 100, column: 40, scope: !8139)
!8179 = !DILocation(line: 100, column: 50, scope: !8139)
!8180 = !DILocation(line: 100, column: 4, scope: !8139)
!8181 = !DILocation(line: 100, column: 33, scope: !8139)
!8182 = !DILocation(line: 101, column: 3, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 101, column: 3)
!8184 = !DILocation(line: 101, column: 3, scope: !8139)
!8185 = !DILocation(line: 102, column: 3, scope: !8139)
!8186 = !DILocation(line: 105, column: 16, scope: !8139)
!8187 = !DILocation(line: 105, column: 21, scope: !8139)
!8188 = !DILocation(line: 105, column: 4, scope: !8139)
!8189 = !DILocation(line: 105, column: 9, scope: !8139)
!8190 = !DILocation(line: 105, column: 14, scope: !8139)
!8191 = !DILocation(line: 104, column: 4, scope: !8139)
!8192 = !DILocation(line: 104, column: 46, scope: !8139)
!8193 = !DILocation(line: 106, column: 3, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 106, column: 3)
!8195 = !DILocation(line: 106, column: 3, scope: !8139)
!8196 = !DILocation(line: 107, column: 3, scope: !8139)
!8197 = !DILocalVariable(name: "p", scope: !8198, file: !356, line: 109, type: !7497)
!8198 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 108, column: 20)
!8199 = !DILocation(line: 109, column: 8, scope: !8198)
!8200 = !DILocation(line: 110, column: 12, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8198, file: !356, line: 110, column: 7)
!8202 = !DILocation(line: 110, column: 17, scope: !8201)
!8203 = !DILocation(line: 110, column: 10, scope: !8201)
!8204 = !DILocation(line: 110, column: 22, scope: !8201)
!8205 = !DILocation(line: 110, column: 7, scope: !8198)
!8206 = !DILocation(line: 111, column: 20, scope: !8201)
!8207 = !DILocation(line: 111, column: 25, scope: !8201)
!8208 = !DILocation(line: 111, column: 9, scope: !8201)
!8209 = !DILocation(line: 111, column: 38, scope: !8201)
!8210 = !DILocation(line: 111, column: 43, scope: !8201)
!8211 = !DILocation(line: 112, column: 20, scope: !8201)
!8212 = !DILocation(line: 112, column: 25, scope: !8201)
!8213 = !DILocation(line: 112, column: 9, scope: !8201)
!8214 = !DILocation(line: 112, column: 37, scope: !8201)
!8215 = !DILocation(line: 112, column: 42, scope: !8201)
!8216 = !DILocation(line: 113, column: 20, scope: !8201)
!8217 = !DILocation(line: 113, column: 25, scope: !8201)
!8218 = !DILocation(line: 113, column: 9, scope: !8201)
!8219 = !DILocation(line: 113, column: 39, scope: !8201)
!8220 = !DILocation(line: 113, column: 44, scope: !8201)
!8221 = !DILocation(line: 114, column: 22, scope: !8201)
!8222 = !DILocation(line: 114, column: 27, scope: !8201)
!8223 = !DILocation(line: 114, column: 21, scope: !8201)
!8224 = !DILocation(line: 114, column: 10, scope: !8201)
!8225 = !DILocation(line: 114, column: 33, scope: !8201)
!8226 = !DILocation(line: 115, column: 17, scope: !8201)
!8227 = !DILocation(line: 115, column: 22, scope: !8201)
!8228 = !DILocation(line: 115, column: 9, scope: !8201)
!8229 = !DILocation(line: 115, column: 37, scope: !8201)
!8230 = !DILocation(line: 0, scope: !8201)
!8231 = !DILocation(line: 111, column: 5, scope: !8201)
!8232 = !DILocation(line: 111, column: 7, scope: !8201)
!8233 = !DILocation(line: 111, column: 4, scope: !8201)
!8234 = !DILocation(line: 116, column: 3, scope: !8198)
!8235 = !DILocation(line: 119, column: 46, scope: !8139)
!8236 = !DILocation(line: 119, column: 51, scope: !8139)
!8237 = !DILocation(line: 119, column: 45, scope: !8139)
!8238 = !DILocation(line: 119, column: 4, scope: !8139)
!8239 = !DILocation(line: 119, column: 43, scope: !8139)
!8240 = !DILocation(line: 120, column: 3, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 120, column: 3)
!8242 = !DILocation(line: 120, column: 3, scope: !8139)
!8243 = !DILocation(line: 121, column: 3, scope: !8139)
!8244 = !DILocalVariable(name: "p", scope: !8245, file: !356, line: 123, type: !4993)
!8245 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 123, column: 2)
!8246 = !DILocation(line: 123, column: 2, scope: !8245)
!8247 = !DILocalVariable(name: "v", scope: !8245, file: !356, line: 123, type: !231)
!8248 = !DILocation(line: 123, column: 2, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8245, file: !356, line: 123, column: 2)
!8250 = !DILocation(line: 123, column: 2, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !356, line: 123, column: 2)
!8252 = distinct !DILexicalBlock(scope: !8249, file: !356, line: 123, column: 2)
!8253 = !DILocation(line: 123, column: 2, scope: !8252)
!8254 = !DILocation(line: 123, column: 2, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8252, file: !356, line: 123, column: 2)
!8256 = !DILocation(line: 123, column: 2, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8245, file: !356, line: 123, column: 2)
!8258 = !DILocalVariable(name: "p", scope: !8259, file: !356, line: 124, type: !92)
!8259 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 124, column: 2)
!8260 = !DILocation(line: 124, column: 2, scope: !8259)
!8261 = !DILocalVariable(name: "v", scope: !8259, file: !356, line: 124, type: !93)
!8262 = !DILocation(line: 124, column: 2, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8259, file: !356, line: 124, column: 2)
!8264 = !DILocation(line: 124, column: 2, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !356, line: 124, column: 2)
!8266 = distinct !DILexicalBlock(scope: !8263, file: !356, line: 124, column: 2)
!8267 = !DILocation(line: 124, column: 2, scope: !8266)
!8268 = !DILocation(line: 124, column: 2, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8266, file: !356, line: 124, column: 2)
!8270 = !DILocation(line: 124, column: 2, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8259, file: !356, line: 124, column: 2)
!8272 = !DILocalVariable(name: "p", scope: !8273, file: !356, line: 125, type: !8274)
!8273 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 125, column: 2)
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!8275 = !DILocation(line: 125, column: 2, scope: !8273)
!8276 = !DILocalVariable(name: "v", scope: !8273, file: !356, line: 125, type: !94)
!8277 = !DILocation(line: 125, column: 2, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8273, file: !356, line: 125, column: 2)
!8279 = !DILocation(line: 125, column: 2, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !356, line: 125, column: 2)
!8281 = distinct !DILexicalBlock(scope: !8278, file: !356, line: 125, column: 2)
!8282 = !DILocation(line: 125, column: 2, scope: !8281)
!8283 = !DILocation(line: 125, column: 2, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8281, file: !356, line: 125, column: 2)
!8285 = !DILocation(line: 125, column: 2, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8273, file: !356, line: 125, column: 2)
!8287 = !DILocalVariable(name: "p", scope: !8288, file: !356, line: 126, type: !8289)
!8288 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 126, column: 2)
!8289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!8290 = !DILocation(line: 126, column: 2, scope: !8288)
!8291 = !DILocalVariable(name: "v", scope: !8288, file: !356, line: 126, type: !284)
!8292 = !DILocation(line: 126, column: 2, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8288, file: !356, line: 126, column: 2)
!8294 = !DILocation(line: 126, column: 2, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !356, line: 126, column: 2)
!8296 = distinct !DILexicalBlock(scope: !8293, file: !356, line: 126, column: 2)
!8297 = !DILocation(line: 126, column: 2, scope: !8296)
!8298 = !DILocation(line: 126, column: 2, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8296, file: !356, line: 126, column: 2)
!8300 = !DILocation(line: 126, column: 2, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8288, file: !356, line: 126, column: 2)
!8302 = !DILocalVariable(name: "p", scope: !8303, file: !356, line: 127, type: !853)
!8303 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 127, column: 2)
!8304 = !DILocation(line: 127, column: 2, scope: !8303)
!8305 = !DILocalVariable(name: "v", scope: !8303, file: !356, line: 127, type: !7)
!8306 = !DILocation(line: 127, column: 2, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8303, file: !356, line: 127, column: 2)
!8308 = !DILocation(line: 127, column: 2, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !356, line: 127, column: 2)
!8310 = distinct !DILexicalBlock(scope: !8307, file: !356, line: 127, column: 2)
!8311 = !DILocation(line: 127, column: 2, scope: !8310)
!8312 = !DILocation(line: 127, column: 2, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8310, file: !356, line: 127, column: 2)
!8314 = !DILocation(line: 127, column: 2, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8303, file: !356, line: 127, column: 2)
!8316 = !DILocalVariable(name: "p", scope: !8317, file: !356, line: 128, type: !7497)
!8317 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 128, column: 2)
!8318 = !DILocation(line: 128, column: 2, scope: !8317)
!8319 = !DILocalVariable(name: "v", scope: !8317, file: !356, line: 128, type: !14)
!8320 = !DILocation(line: 128, column: 2, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8317, file: !356, line: 128, column: 2)
!8322 = !DILocation(line: 128, column: 2, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !356, line: 128, column: 2)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !356, line: 128, column: 2)
!8325 = !DILocation(line: 128, column: 2, scope: !8324)
!8326 = !DILocation(line: 128, column: 2, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8324, file: !356, line: 128, column: 2)
!8328 = !DILocation(line: 128, column: 2, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8317, file: !356, line: 128, column: 2)
!8330 = !DILocalVariable(name: "p", scope: !8331, file: !356, line: 129, type: !8332)
!8331 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 129, column: 2)
!8332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!8333 = !DILocation(line: 129, column: 2, scope: !8331)
!8334 = !DILocalVariable(name: "v", scope: !8331, file: !356, line: 129, type: !159)
!8335 = !DILocation(line: 129, column: 2, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8331, file: !356, line: 129, column: 2)
!8337 = !DILocation(line: 129, column: 2, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !356, line: 129, column: 2)
!8339 = distinct !DILexicalBlock(scope: !8336, file: !356, line: 129, column: 2)
!8340 = !DILocation(line: 129, column: 2, scope: !8339)
!8341 = !DILocation(line: 129, column: 2, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8339, file: !356, line: 129, column: 2)
!8343 = !DILocation(line: 129, column: 2, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8331, file: !356, line: 129, column: 2)
!8345 = !DILocalVariable(name: "p", scope: !8346, file: !356, line: 130, type: !8347)
!8346 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 130, column: 2)
!8347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!8348 = !DILocation(line: 130, column: 2, scope: !8346)
!8349 = !DILocalVariable(name: "v", scope: !8346, file: !356, line: 130, type: !95)
!8350 = !DILocation(line: 130, column: 2, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8346, file: !356, line: 130, column: 2)
!8352 = !DILocation(line: 130, column: 2, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !356, line: 130, column: 2)
!8354 = distinct !DILexicalBlock(scope: !8351, file: !356, line: 130, column: 2)
!8355 = !DILocation(line: 130, column: 2, scope: !8354)
!8356 = !DILocation(line: 130, column: 2, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8354, file: !356, line: 130, column: 2)
!8358 = !DILocation(line: 130, column: 2, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8346, file: !356, line: 130, column: 2)
!8360 = !DILocalVariable(name: "p", scope: !8361, file: !356, line: 131, type: !8362)
!8361 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 131, column: 2)
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!8363 = !DILocation(line: 131, column: 2, scope: !8361)
!8364 = !DILocalVariable(name: "v", scope: !8361, file: !356, line: 131, type: !3016)
!8365 = !DILocation(line: 131, column: 2, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8361, file: !356, line: 131, column: 2)
!8367 = !DILocation(line: 131, column: 2, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !356, line: 131, column: 2)
!8369 = distinct !DILexicalBlock(scope: !8366, file: !356, line: 131, column: 2)
!8370 = !DILocation(line: 131, column: 2, scope: !8369)
!8371 = !DILocation(line: 131, column: 2, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8369, file: !356, line: 131, column: 2)
!8373 = !DILocation(line: 131, column: 2, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8361, file: !356, line: 131, column: 2)
!8375 = !DILocalVariable(name: "p", scope: !8376, file: !356, line: 132, type: !8377)
!8376 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 132, column: 2)
!8377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8378, size: 64)
!8378 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !193, line: 36, baseType: !407)
!8379 = !DILocation(line: 132, column: 2, scope: !8376)
!8380 = !DILocalVariable(name: "v", scope: !8376, file: !356, line: 132, type: !8378)
!8381 = !DILocation(line: 132, column: 2, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8376, file: !356, line: 132, column: 2)
!8383 = !DILocation(line: 132, column: 2, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !356, line: 132, column: 2)
!8385 = distinct !DILexicalBlock(scope: !8382, file: !356, line: 132, column: 2)
!8386 = !DILocation(line: 132, column: 2, scope: !8385)
!8387 = !DILocation(line: 132, column: 2, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8385, file: !356, line: 132, column: 2)
!8389 = !DILocation(line: 132, column: 2, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8376, file: !356, line: 132, column: 2)
!8391 = !DILocalVariable(name: "p", scope: !8392, file: !356, line: 133, type: !8393)
!8392 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 133, column: 2)
!8393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8394, size: 64)
!8394 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !193, line: 49, baseType: !94)
!8395 = !DILocation(line: 133, column: 2, scope: !8392)
!8396 = !DILocalVariable(name: "v", scope: !8392, file: !356, line: 133, type: !8394)
!8397 = !DILocation(line: 133, column: 2, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8392, file: !356, line: 133, column: 2)
!8399 = !DILocation(line: 133, column: 2, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !356, line: 133, column: 2)
!8401 = distinct !DILexicalBlock(scope: !8398, file: !356, line: 133, column: 2)
!8402 = !DILocation(line: 133, column: 2, scope: !8401)
!8403 = !DILocation(line: 133, column: 2, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8401, file: !356, line: 133, column: 2)
!8405 = !DILocation(line: 133, column: 2, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8392, file: !356, line: 133, column: 2)
!8407 = !DILocalVariable(name: "p", scope: !8408, file: !356, line: 134, type: !8409)
!8408 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 134, column: 2)
!8409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8410, size: 64)
!8410 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !193, line: 37, baseType: !284)
!8411 = !DILocation(line: 134, column: 2, scope: !8408)
!8412 = !DILocalVariable(name: "v", scope: !8408, file: !356, line: 134, type: !8410)
!8413 = !DILocation(line: 134, column: 2, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8408, file: !356, line: 134, column: 2)
!8415 = !DILocation(line: 134, column: 2, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !356, line: 134, column: 2)
!8417 = distinct !DILexicalBlock(scope: !8414, file: !356, line: 134, column: 2)
!8418 = !DILocation(line: 134, column: 2, scope: !8417)
!8419 = !DILocation(line: 134, column: 2, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8417, file: !356, line: 134, column: 2)
!8421 = !DILocation(line: 134, column: 2, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8408, file: !356, line: 134, column: 2)
!8423 = !DILocalVariable(name: "p", scope: !8424, file: !356, line: 135, type: !8425)
!8424 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 135, column: 2)
!8425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!8426 = !DILocation(line: 135, column: 2, scope: !8424)
!8427 = !DILocalVariable(name: "v", scope: !8424, file: !356, line: 135, type: !192)
!8428 = !DILocation(line: 135, column: 2, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8424, file: !356, line: 135, column: 2)
!8430 = !DILocation(line: 135, column: 2, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !356, line: 135, column: 2)
!8432 = distinct !DILexicalBlock(scope: !8429, file: !356, line: 135, column: 2)
!8433 = !DILocation(line: 135, column: 2, scope: !8432)
!8434 = !DILocation(line: 135, column: 2, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !356, line: 135, column: 2)
!8436 = !DILocation(line: 135, column: 2, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8424, file: !356, line: 135, column: 2)
!8438 = !DILocalVariable(name: "p", scope: !8439, file: !356, line: 136, type: !8440)
!8439 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 136, column: 2)
!8440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8441, size: 64)
!8441 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !193, line: 38, baseType: !14)
!8442 = !DILocation(line: 136, column: 2, scope: !8439)
!8443 = !DILocalVariable(name: "v", scope: !8439, file: !356, line: 136, type: !8441)
!8444 = !DILocation(line: 136, column: 2, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8439, file: !356, line: 136, column: 2)
!8446 = !DILocation(line: 136, column: 2, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !356, line: 136, column: 2)
!8448 = distinct !DILexicalBlock(scope: !8445, file: !356, line: 136, column: 2)
!8449 = !DILocation(line: 136, column: 2, scope: !8448)
!8450 = !DILocation(line: 136, column: 2, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8448, file: !356, line: 136, column: 2)
!8452 = !DILocation(line: 136, column: 2, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8439, file: !356, line: 136, column: 2)
!8454 = !DILocalVariable(name: "p", scope: !8455, file: !356, line: 138, type: !8456)
!8455 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 138, column: 2)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 64)
!8457 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!8458 = !DILocation(line: 138, column: 2, scope: !8455)
!8459 = !DILocalVariable(name: "v", scope: !8455, file: !356, line: 138, type: !8457)
!8460 = !DILocation(line: 138, column: 2, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8455, file: !356, line: 138, column: 2)
!8462 = !DILocation(line: 138, column: 2, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !356, line: 138, column: 2)
!8464 = distinct !DILexicalBlock(scope: !8461, file: !356, line: 138, column: 2)
!8465 = !DILocation(line: 138, column: 2, scope: !8464)
!8466 = !DILocation(line: 138, column: 2, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8464, file: !356, line: 138, column: 2)
!8468 = !DILocation(line: 138, column: 2, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8455, file: !356, line: 138, column: 2)
!8470 = !DILocalVariable(name: "p", scope: !8471, file: !356, line: 139, type: !8472)
!8471 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 139, column: 2)
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8473, size: 64)
!8473 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!8474 = !DILocation(line: 139, column: 2, scope: !8471)
!8475 = !DILocalVariable(name: "v", scope: !8471, file: !356, line: 139, type: !8473)
!8476 = !DILocation(line: 139, column: 2, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8471, file: !356, line: 139, column: 2)
!8478 = !DILocation(line: 139, column: 2, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !356, line: 139, column: 2)
!8480 = distinct !DILexicalBlock(scope: !8477, file: !356, line: 139, column: 2)
!8481 = !DILocation(line: 139, column: 2, scope: !8480)
!8482 = !DILocation(line: 139, column: 2, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8480, file: !356, line: 139, column: 2)
!8484 = !DILocation(line: 139, column: 2, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8471, file: !356, line: 139, column: 2)
!8486 = !DILocalVariable(name: "p", scope: !8487, file: !356, line: 140, type: !8488)
!8487 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 140, column: 2)
!8488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8489, size: 64)
!8489 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !193, line: 55, baseType: !159)
!8490 = !DILocation(line: 140, column: 2, scope: !8487)
!8491 = !DILocalVariable(name: "v", scope: !8487, file: !356, line: 140, type: !8489)
!8492 = !DILocation(line: 140, column: 2, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8487, file: !356, line: 140, column: 2)
!8494 = !DILocation(line: 140, column: 2, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !356, line: 140, column: 2)
!8496 = distinct !DILexicalBlock(scope: !8493, file: !356, line: 140, column: 2)
!8497 = !DILocation(line: 140, column: 2, scope: !8496)
!8498 = !DILocation(line: 140, column: 2, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8496, file: !356, line: 140, column: 2)
!8500 = !DILocation(line: 140, column: 2, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8487, file: !356, line: 140, column: 2)
!8502 = !DILocalVariable(name: "p", scope: !8503, file: !356, line: 141, type: !8504)
!8503 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 141, column: 2)
!8504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8505, size: 64)
!8505 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !193, line: 40, baseType: !95)
!8506 = !DILocation(line: 141, column: 2, scope: !8503)
!8507 = !DILocalVariable(name: "v", scope: !8503, file: !356, line: 141, type: !8505)
!8508 = !DILocation(line: 141, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8503, file: !356, line: 141, column: 2)
!8510 = !DILocation(line: 141, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !356, line: 141, column: 2)
!8512 = distinct !DILexicalBlock(scope: !8509, file: !356, line: 141, column: 2)
!8513 = !DILocation(line: 141, column: 2, scope: !8512)
!8514 = !DILocation(line: 141, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8512, file: !356, line: 141, column: 2)
!8516 = !DILocation(line: 141, column: 2, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8503, file: !356, line: 141, column: 2)
!8518 = !DILocation(line: 144, column: 26, scope: !8139)
!8519 = !DILocation(line: 144, column: 31, scope: !8139)
!8520 = !DILocation(line: 144, column: 19, scope: !8139)
!8521 = !DILocation(line: 144, column: 3, scope: !8139)
!8522 = !DILocation(line: 144, column: 8, scope: !8139)
!8523 = !DILocation(line: 144, column: 17, scope: !8139)
!8524 = !DILocation(line: 145, column: 7, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 145, column: 7)
!8526 = !DILocation(line: 145, column: 12, scope: !8525)
!8527 = !DILocation(line: 145, column: 16, scope: !8525)
!8528 = !DILocation(line: 145, column: 7, scope: !8139)
!8529 = !DILocation(line: 146, column: 38, scope: !8525)
!8530 = !DILocation(line: 146, column: 43, scope: !8525)
!8531 = !DILocation(line: 146, column: 5, scope: !8525)
!8532 = !DILocation(line: 146, column: 36, scope: !8525)
!8533 = !DILocation(line: 146, column: 4, scope: !8525)
!8534 = !DILocation(line: 147, column: 3, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 147, column: 3)
!8536 = !DILocation(line: 147, column: 3, scope: !8139)
!8537 = !DILocation(line: 148, column: 3, scope: !8139)
!8538 = !DILocation(line: 150, column: 26, scope: !8139)
!8539 = !DILocation(line: 150, column: 31, scope: !8139)
!8540 = !DILocation(line: 150, column: 19, scope: !8139)
!8541 = !DILocation(line: 150, column: 3, scope: !8139)
!8542 = !DILocation(line: 150, column: 8, scope: !8139)
!8543 = !DILocation(line: 150, column: 17, scope: !8139)
!8544 = !DILocation(line: 151, column: 7, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 151, column: 7)
!8546 = !DILocation(line: 151, column: 12, scope: !8545)
!8547 = !DILocation(line: 151, column: 16, scope: !8545)
!8548 = !DILocation(line: 151, column: 7, scope: !8139)
!8549 = !DILocation(line: 152, column: 39, scope: !8545)
!8550 = !DILocation(line: 152, column: 44, scope: !8545)
!8551 = !DILocation(line: 152, column: 5, scope: !8545)
!8552 = !DILocation(line: 152, column: 37, scope: !8545)
!8553 = !DILocation(line: 152, column: 4, scope: !8545)
!8554 = !DILocation(line: 153, column: 3, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 153, column: 3)
!8556 = !DILocation(line: 153, column: 3, scope: !8139)
!8557 = !DILocation(line: 154, column: 3, scope: !8139)
!8558 = !DILocation(line: 156, column: 7, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 156, column: 7)
!8560 = !DILocation(line: 156, column: 12, scope: !8559)
!8561 = !DILocation(line: 156, column: 16, scope: !8559)
!8562 = !DILocation(line: 156, column: 7, scope: !8139)
!8563 = !DILocation(line: 157, column: 48, scope: !8559)
!8564 = !DILocation(line: 157, column: 53, scope: !8559)
!8565 = !DILocation(line: 157, column: 38, scope: !8559)
!8566 = !DILocation(line: 157, column: 5, scope: !8559)
!8567 = !DILocation(line: 157, column: 36, scope: !8559)
!8568 = !DILocation(line: 157, column: 4, scope: !8559)
!8569 = !DILocation(line: 158, column: 3, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 158, column: 3)
!8571 = !DILocation(line: 158, column: 3, scope: !8139)
!8572 = !DILocation(line: 159, column: 3, scope: !8139)
!8573 = !DILocation(line: 161, column: 16, scope: !8139)
!8574 = !DILocation(line: 161, column: 21, scope: !8139)
!8575 = !DILocation(line: 161, column: 36, scope: !8139)
!8576 = !DILocation(line: 161, column: 41, scope: !8139)
!8577 = !DILocation(line: 161, column: 26, scope: !8139)
!8578 = !DILocation(line: 161, column: 3, scope: !8139)
!8579 = !DILocation(line: 162, column: 3, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 162, column: 3)
!8581 = !DILocation(line: 162, column: 3, scope: !8139)
!8582 = !DILocation(line: 163, column: 3, scope: !8139)
!8583 = !DILocation(line: 165, column: 7, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 165, column: 7)
!8585 = !DILocation(line: 165, column: 12, scope: !8584)
!8586 = !DILocation(line: 165, column: 16, scope: !8584)
!8587 = !DILocation(line: 165, column: 7, scope: !8139)
!8588 = !DILocation(line: 166, column: 16, scope: !8584)
!8589 = !DILocation(line: 166, column: 21, scope: !8584)
!8590 = !DILocation(line: 166, column: 26, scope: !8584)
!8591 = !DILocation(line: 166, column: 31, scope: !8584)
!8592 = !DILocation(line: 166, column: 4, scope: !8584)
!8593 = !DILocation(line: 167, column: 3, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8139, file: !356, line: 167, column: 3)
!8595 = !DILocation(line: 167, column: 3, scope: !8139)
!8596 = !DILocation(line: 168, column: 3, scope: !8139)
!8597 = !DILocation(line: 170, column: 11, scope: !8139)
!8598 = !DILocation(line: 171, column: 11, scope: !8139)
!8599 = !DILocation(line: 171, column: 16, scope: !8139)
!8600 = !DILocation(line: 171, column: 21, scope: !8139)
!8601 = !DILocation(line: 170, column: 3, scope: !8139)
!8602 = !DILocation(line: 172, column: 3, scope: !8139)
!8603 = !DILocation(line: 174, column: 1, scope: !8123)
!8604 = distinct !DISubprogram(name: "lookup_short", scope: !356, file: !356, line: 176, type: !8605, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!7464, !7464, !93}
!8607 = !DILocalVariable(name: "table", arg: 1, scope: !8604, file: !356, line: 176, type: !7464)
!8608 = !DILocation(line: 176, column: 74, scope: !8604)
!8609 = !DILocalVariable(name: "opt", arg: 2, scope: !8604, file: !356, line: 177, type: !93)
!8610 = !DILocation(line: 177, column: 10, scope: !8604)
!8611 = !DILocation(line: 179, column: 2, scope: !8604)
!8612 = !DILocation(line: 179, column: 9, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !356, line: 179, column: 2)
!8614 = distinct !DILexicalBlock(scope: !8604, file: !356, line: 179, column: 2)
!8615 = !DILocation(line: 179, column: 16, scope: !8613)
!8616 = !DILocation(line: 179, column: 19, scope: !8613)
!8617 = !DILocation(line: 179, column: 27, scope: !8613)
!8618 = !DILocation(line: 179, column: 30, scope: !8613)
!8619 = !DILocation(line: 179, column: 37, scope: !8613)
!8620 = !DILocation(line: 179, column: 40, scope: !8613)
!8621 = !DILocation(line: 179, column: 2, scope: !8614)
!8622 = !DILocation(line: 180, column: 7, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8613, file: !356, line: 180, column: 7)
!8624 = !DILocation(line: 180, column: 14, scope: !8623)
!8625 = !DILocation(line: 180, column: 20, scope: !8623)
!8626 = !DILocation(line: 180, column: 17, scope: !8623)
!8627 = !DILocation(line: 180, column: 7, scope: !8613)
!8628 = !DILocation(line: 181, column: 11, scope: !8623)
!8629 = !DILocation(line: 181, column: 4, scope: !8623)
!8630 = !DILocation(line: 179, column: 49, scope: !8613)
!8631 = !DILocation(line: 179, column: 2, scope: !8613)
!8632 = distinct !{!8632, !8621, !8633}
!8633 = !DILocation(line: 181, column: 11, scope: !8614)
!8634 = !DILocation(line: 182, column: 2, scope: !8604)
!8635 = !DILocation(line: 183, column: 1, scope: !8604)
!8636 = distinct !DISubprogram(name: "HX_getopt_help", scope: !356, file: !356, line: 673, type: !8637, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{null, !7477, !8639}
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8640, size: 64)
!8640 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1931, line: 48, baseType: !8641)
!8641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2003, line: 241, size: 1728, elements: !8642)
!8642 = !{!8643, !8644, !8645, !8646, !8647, !8648, !8649, !8650, !8651, !8652, !8653, !8654, !8655, !8663, !8664, !8665, !8666, !8667, !8668, !8669, !8670, !8671, !8672, !8673, !8674, !8675, !8676, !8677, !8678}
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !8641, file: !2003, line: 242, baseType: !14, size: 32)
!8644 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !8641, file: !2003, line: 247, baseType: !92, size: 64, offset: 64)
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !8641, file: !2003, line: 248, baseType: !92, size: 64, offset: 128)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !8641, file: !2003, line: 249, baseType: !92, size: 64, offset: 192)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !8641, file: !2003, line: 250, baseType: !92, size: 64, offset: 256)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !8641, file: !2003, line: 251, baseType: !92, size: 64, offset: 320)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !8641, file: !2003, line: 252, baseType: !92, size: 64, offset: 384)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !8641, file: !2003, line: 253, baseType: !92, size: 64, offset: 448)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !8641, file: !2003, line: 254, baseType: !92, size: 64, offset: 512)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !8641, file: !2003, line: 256, baseType: !92, size: 64, offset: 576)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !8641, file: !2003, line: 257, baseType: !92, size: 64, offset: 640)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !8641, file: !2003, line: 258, baseType: !92, size: 64, offset: 704)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !8641, file: !2003, line: 260, baseType: !8656, size: 64, offset: 768)
!8656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8657, size: 64)
!8657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2003, line: 156, size: 192, elements: !8658)
!8658 = !{!8659, !8660, !8662}
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !8657, file: !2003, line: 157, baseType: !8656, size: 64)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !8657, file: !2003, line: 158, baseType: !8661, size: 64, offset: 64)
!8661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8641, size: 64)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !8657, file: !2003, line: 162, baseType: !14, size: 32, offset: 128)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !8641, file: !2003, line: 262, baseType: !8661, size: 64, offset: 832)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !8641, file: !2003, line: 264, baseType: !14, size: 32, offset: 896)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !8641, file: !2003, line: 268, baseType: !14, size: 32, offset: 928)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !8641, file: !2003, line: 270, baseType: !2029, size: 64, offset: 960)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !8641, file: !2003, line: 274, baseType: !94, size: 16, offset: 1024)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !8641, file: !2003, line: 275, baseType: !407, size: 8, offset: 1040)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !8641, file: !2003, line: 276, baseType: !2033, size: 8, offset: 1048)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !8641, file: !2003, line: 280, baseType: !2037, size: 64, offset: 1088)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !8641, file: !2003, line: 289, baseType: !2040, size: 64, offset: 1152)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !8641, file: !2003, line: 297, baseType: !89, size: 64, offset: 1216)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !8641, file: !2003, line: 298, baseType: !89, size: 64, offset: 1280)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !8641, file: !2003, line: 299, baseType: !89, size: 64, offset: 1344)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !8641, file: !2003, line: 300, baseType: !89, size: 64, offset: 1408)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !8641, file: !2003, line: 302, baseType: !157, size: 64, offset: 1472)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !8641, file: !2003, line: 303, baseType: !14, size: 32, offset: 1536)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !8641, file: !2003, line: 305, baseType: !2048, size: 160, offset: 1568)
!8679 = !DILocalVariable(name: "cbi", arg: 1, scope: !8636, file: !356, line: 673, type: !7477)
!8680 = !DILocation(line: 673, column: 57, scope: !8636)
!8681 = !DILocalVariable(name: "nfp", arg: 2, scope: !8636, file: !356, line: 673, type: !8639)
!8682 = !DILocation(line: 673, column: 68, scope: !8636)
!8683 = !DILocalVariable(name: "fp", scope: !8636, file: !356, line: 675, type: !8639)
!8684 = !DILocation(line: 675, column: 8, scope: !8636)
!8685 = !DILocation(line: 675, column: 14, scope: !8636)
!8686 = !DILocation(line: 675, column: 18, scope: !8636)
!8687 = !DILocation(line: 675, column: 13, scope: !8636)
!8688 = !DILocation(line: 675, column: 29, scope: !8636)
!8689 = !DILocation(line: 675, column: 38, scope: !8636)
!8690 = !DILocalVariable(name: "travp", scope: !8636, file: !356, line: 676, type: !7464)
!8691 = !DILocation(line: 676, column: 25, scope: !8636)
!8692 = !DILocalVariable(name: "tmp", scope: !8636, file: !356, line: 677, type: !8693)
!8693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 672, elements: !8694)
!8694 = !{!8695}
!8695 = !DISubrange(count: 84)
!8696 = !DILocation(line: 677, column: 7, scope: !8636)
!8697 = !DILocalVariable(name: "tw", scope: !8636, file: !356, line: 678, type: !7)
!8698 = !DILocation(line: 678, column: 15, scope: !8636)
!8699 = !DILocation(line: 680, column: 18, scope: !8636)
!8700 = !DILocation(line: 680, column: 23, scope: !8636)
!8701 = !DILocation(line: 680, column: 2, scope: !8636)
!8702 = !DILocation(line: 683, column: 15, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8636, file: !356, line: 683, column: 2)
!8704 = !DILocation(line: 683, column: 20, scope: !8703)
!8705 = !DILocation(line: 683, column: 13, scope: !8703)
!8706 = !DILocation(line: 683, column: 7, scope: !8703)
!8707 = !DILocation(line: 683, column: 27, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8703, file: !356, line: 683, column: 2)
!8709 = !DILocation(line: 683, column: 34, scope: !8708)
!8710 = !DILocation(line: 683, column: 37, scope: !8708)
!8711 = !DILocation(line: 683, column: 45, scope: !8708)
!8712 = !DILocation(line: 683, column: 48, scope: !8708)
!8713 = !DILocation(line: 683, column: 55, scope: !8708)
!8714 = !DILocation(line: 683, column: 58, scope: !8708)
!8715 = !DILocation(line: 683, column: 2, scope: !8703)
!8716 = !DILocalVariable(name: "tl", scope: !8717, file: !356, line: 684, type: !157)
!8717 = distinct !DILexicalBlock(scope: !8708, file: !356, line: 683, column: 76)
!8718 = !DILocation(line: 684, column: 10, scope: !8717)
!8719 = !DILocation(line: 686, column: 15, scope: !8717)
!8720 = !DILocation(line: 686, column: 22, scope: !8717)
!8721 = !DILocation(line: 686, column: 3, scope: !8717)
!8722 = !DILocation(line: 687, column: 20, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8717, file: !356, line: 687, column: 7)
!8724 = !DILocation(line: 687, column: 13, scope: !8723)
!8725 = !DILocation(line: 687, column: 11, scope: !8723)
!8726 = !DILocation(line: 687, column: 28, scope: !8723)
!8727 = !DILocation(line: 687, column: 26, scope: !8723)
!8728 = !DILocation(line: 687, column: 7, scope: !8717)
!8729 = !DILocation(line: 688, column: 9, scope: !8723)
!8730 = !DILocation(line: 688, column: 7, scope: !8723)
!8731 = !DILocation(line: 688, column: 4, scope: !8723)
!8732 = !DILocation(line: 689, column: 2, scope: !8717)
!8733 = !DILocation(line: 683, column: 67, scope: !8708)
!8734 = !DILocation(line: 683, column: 2, scope: !8708)
!8735 = distinct !{!8735, !8715, !8736}
!8736 = !DILocation(line: 689, column: 2, scope: !8703)
!8737 = !DILocation(line: 692, column: 15, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8636, file: !356, line: 692, column: 2)
!8739 = !DILocation(line: 692, column: 20, scope: !8738)
!8740 = !DILocation(line: 692, column: 13, scope: !8738)
!8741 = !DILocation(line: 692, column: 7, scope: !8738)
!8742 = !DILocation(line: 692, column: 27, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8738, file: !356, line: 692, column: 2)
!8744 = !DILocation(line: 692, column: 34, scope: !8743)
!8745 = !DILocation(line: 692, column: 37, scope: !8743)
!8746 = !DILocation(line: 692, column: 45, scope: !8743)
!8747 = !DILocation(line: 692, column: 48, scope: !8743)
!8748 = !DILocation(line: 692, column: 55, scope: !8743)
!8749 = !DILocation(line: 692, column: 58, scope: !8743)
!8750 = !DILocation(line: 692, column: 2, scope: !8738)
!8751 = !DILocation(line: 693, column: 15, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8743, file: !356, line: 692, column: 76)
!8753 = !DILocation(line: 693, column: 22, scope: !8752)
!8754 = !DILocation(line: 693, column: 3, scope: !8752)
!8755 = !DILocation(line: 694, column: 11, scope: !8752)
!8756 = !DILocation(line: 694, column: 29, scope: !8752)
!8757 = !DILocation(line: 694, column: 51, scope: !8752)
!8758 = !DILocation(line: 694, column: 3, scope: !8752)
!8759 = !DILocation(line: 695, column: 7, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8752, file: !356, line: 695, column: 7)
!8761 = !DILocation(line: 695, column: 14, scope: !8760)
!8762 = !DILocation(line: 695, column: 19, scope: !8760)
!8763 = !DILocation(line: 695, column: 7, scope: !8752)
!8764 = !DILocation(line: 696, column: 12, scope: !8760)
!8765 = !DILocation(line: 696, column: 4, scope: !8760)
!8766 = !DILocation(line: 698, column: 17, scope: !8760)
!8767 = !DILocation(line: 698, column: 24, scope: !8760)
!8768 = !DILocation(line: 698, column: 30, scope: !8760)
!8769 = !DILocation(line: 698, column: 33, scope: !8760)
!8770 = !DILocation(line: 698, column: 38, scope: !8760)
!8771 = !DILocation(line: 698, column: 4, scope: !8760)
!8772 = !DILocation(line: 699, column: 2, scope: !8752)
!8773 = !DILocation(line: 692, column: 67, scope: !8743)
!8774 = !DILocation(line: 692, column: 2, scope: !8743)
!8775 = distinct !{!8775, !8750, !8776}
!8776 = !DILocation(line: 699, column: 2, scope: !8738)
!8777 = !DILocation(line: 700, column: 1, scope: !8636)
!8778 = distinct !DISubprogram(name: "HX_getopt_usage", scope: !356, file: !356, line: 708, type: !8637, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8779 = !DILocalVariable(name: "cbi", arg: 1, scope: !8778, file: !356, line: 708, type: !7477)
!8780 = !DILocation(line: 708, column: 58, scope: !8778)
!8781 = !DILocalVariable(name: "nfp", arg: 2, scope: !8778, file: !356, line: 708, type: !8639)
!8782 = !DILocation(line: 708, column: 69, scope: !8778)
!8783 = !DILocalVariable(name: "wd", scope: !8778, file: !356, line: 710, type: !157)
!8784 = !DILocation(line: 710, column: 9, scope: !8778)
!8785 = !DILocation(line: 710, column: 52, scope: !8778)
!8786 = !DILocation(line: 710, column: 57, scope: !8778)
!8787 = !DILocation(line: 710, column: 40, scope: !8778)
!8788 = !DILocation(line: 710, column: 33, scope: !8778)
!8789 = !DILocation(line: 710, column: 31, scope: !8778)
!8790 = !DILocalVariable(name: "tw", scope: !8778, file: !356, line: 710, type: !157)
!8791 = !DILocation(line: 710, column: 65, scope: !8778)
!8792 = !DILocalVariable(name: "fp", scope: !8778, file: !356, line: 711, type: !8639)
!8793 = !DILocation(line: 711, column: 8, scope: !8778)
!8794 = !DILocation(line: 711, column: 14, scope: !8778)
!8795 = !DILocation(line: 711, column: 18, scope: !8778)
!8796 = !DILocation(line: 711, column: 13, scope: !8778)
!8797 = !DILocation(line: 711, column: 29, scope: !8778)
!8798 = !DILocation(line: 711, column: 38, scope: !8778)
!8799 = !DILocalVariable(name: "travp", scope: !8778, file: !356, line: 712, type: !7464)
!8800 = !DILocation(line: 712, column: 25, scope: !8778)
!8801 = !DILocalVariable(name: "tmp", scope: !8778, file: !356, line: 713, type: !8693)
!8802 = !DILocation(line: 713, column: 7, scope: !8778)
!8803 = !DILocation(line: 715, column: 10, scope: !8778)
!8804 = !DILocation(line: 715, column: 39, scope: !8778)
!8805 = !DILocation(line: 715, column: 44, scope: !8778)
!8806 = !DILocation(line: 715, column: 27, scope: !8778)
!8807 = !DILocation(line: 715, column: 2, scope: !8778)
!8808 = !DILocation(line: 718, column: 6, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8778, file: !356, line: 718, column: 6)
!8810 = !DILocation(line: 718, column: 9, scope: !8809)
!8811 = !DILocation(line: 718, column: 13, scope: !8809)
!8812 = !DILocation(line: 718, column: 6, scope: !8778)
!8813 = !DILocation(line: 720, column: 11, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8809, file: !356, line: 718, column: 29)
!8815 = !DILocation(line: 720, column: 3, scope: !8814)
!8816 = !DILocation(line: 721, column: 6, scope: !8814)
!8817 = !DILocation(line: 722, column: 2, scope: !8814)
!8818 = !DILocation(line: 723, column: 15, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8778, file: !356, line: 723, column: 2)
!8820 = !DILocation(line: 723, column: 20, scope: !8819)
!8821 = !DILocation(line: 723, column: 13, scope: !8819)
!8822 = !DILocation(line: 723, column: 7, scope: !8819)
!8823 = !DILocation(line: 723, column: 27, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8819, file: !356, line: 723, column: 2)
!8825 = !DILocation(line: 723, column: 34, scope: !8824)
!8826 = !DILocation(line: 723, column: 37, scope: !8824)
!8827 = !DILocation(line: 723, column: 45, scope: !8824)
!8828 = !DILocation(line: 723, column: 48, scope: !8824)
!8829 = !DILocation(line: 723, column: 55, scope: !8824)
!8830 = !DILocation(line: 723, column: 58, scope: !8824)
!8831 = !DILocation(line: 723, column: 2, scope: !8819)
!8832 = !DILocation(line: 724, column: 9, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !356, line: 724, column: 7)
!8834 = distinct !DILexicalBlock(scope: !8824, file: !356, line: 723, column: 76)
!8835 = !DILocation(line: 724, column: 16, scope: !8833)
!8836 = !DILocation(line: 724, column: 19, scope: !8833)
!8837 = !DILocation(line: 724, column: 27, scope: !8833)
!8838 = !DILocation(line: 724, column: 30, scope: !8833)
!8839 = !DILocation(line: 724, column: 37, scope: !8833)
!8840 = !DILocation(line: 724, column: 40, scope: !8833)
!8841 = !DILocation(line: 724, column: 48, scope: !8833)
!8842 = !DILocation(line: 725, column: 18, scope: !8833)
!8843 = !DILocation(line: 725, column: 25, scope: !8833)
!8844 = !DILocation(line: 725, column: 7, scope: !8833)
!8845 = !DILocation(line: 724, column: 7, scope: !8834)
!8846 = !DILocation(line: 726, column: 4, scope: !8833)
!8847 = !DILocation(line: 727, column: 7, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8834, file: !356, line: 727, column: 7)
!8849 = !DILocation(line: 727, column: 12, scope: !8848)
!8850 = !DILocation(line: 727, column: 7, scope: !8834)
!8851 = !DILocation(line: 728, column: 13, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !356, line: 727, column: 21)
!8853 = !DILocation(line: 728, column: 4, scope: !8852)
!8854 = !DILocation(line: 729, column: 7, scope: !8852)
!8855 = !DILocation(line: 730, column: 3, scope: !8852)
!8856 = !DILocation(line: 731, column: 15, scope: !8834)
!8857 = !DILocation(line: 731, column: 22, scope: !8834)
!8858 = !DILocation(line: 731, column: 9, scope: !8834)
!8859 = !DILocation(line: 731, column: 3, scope: !8834)
!8860 = !DILocation(line: 731, column: 13, scope: !8834)
!8861 = !DILocation(line: 732, column: 7, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8834, file: !356, line: 732, column: 7)
!8863 = !DILocation(line: 732, column: 12, scope: !8862)
!8864 = !DILocation(line: 732, column: 10, scope: !8862)
!8865 = !DILocation(line: 732, column: 15, scope: !8862)
!8866 = !DILocation(line: 732, column: 19, scope: !8862)
!8867 = !DILocation(line: 732, column: 7, scope: !8834)
!8868 = !DILocation(line: 733, column: 10, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8862, file: !356, line: 732, column: 35)
!8870 = !DILocation(line: 733, column: 4, scope: !8869)
!8871 = !DILocation(line: 733, column: 14, scope: !8869)
!8872 = !DILocation(line: 734, column: 8, scope: !8869)
!8873 = !DILocation(line: 734, column: 4, scope: !8869)
!8874 = !DILocation(line: 734, column: 14, scope: !8869)
!8875 = !DILocation(line: 735, column: 12, scope: !8869)
!8876 = !DILocation(line: 735, column: 30, scope: !8869)
!8877 = !DILocation(line: 735, column: 4, scope: !8869)
!8878 = !DILocation(line: 736, column: 9, scope: !8869)
!8879 = !DILocation(line: 737, column: 4, scope: !8869)
!8880 = !DILocation(line: 737, column: 9, scope: !8869)
!8881 = !DILocation(line: 738, column: 3, scope: !8869)
!8882 = !DILocation(line: 739, column: 2, scope: !8834)
!8883 = !DILocation(line: 723, column: 67, scope: !8824)
!8884 = !DILocation(line: 723, column: 2, scope: !8824)
!8885 = distinct !{!8885, !8831, !8886}
!8886 = !DILocation(line: 739, column: 2, scope: !8819)
!8887 = !DILocation(line: 740, column: 6, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8778, file: !356, line: 740, column: 6)
!8889 = !DILocation(line: 740, column: 11, scope: !8888)
!8890 = !DILocation(line: 740, column: 6, scope: !8778)
!8891 = !DILocation(line: 741, column: 9, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8888, file: !356, line: 740, column: 20)
!8893 = !DILocation(line: 741, column: 3, scope: !8892)
!8894 = !DILocation(line: 741, column: 13, scope: !8892)
!8895 = !DILocation(line: 742, column: 7, scope: !8892)
!8896 = !DILocation(line: 742, column: 3, scope: !8892)
!8897 = !DILocation(line: 742, column: 13, scope: !8892)
!8898 = !DILocation(line: 743, column: 17, scope: !8892)
!8899 = !DILocation(line: 743, column: 27, scope: !8892)
!8900 = !DILocation(line: 743, column: 9, scope: !8892)
!8901 = !DILocation(line: 743, column: 6, scope: !8892)
!8902 = !DILocation(line: 744, column: 2, scope: !8892)
!8903 = !DILocation(line: 747, column: 15, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8778, file: !356, line: 747, column: 2)
!8905 = !DILocation(line: 747, column: 20, scope: !8904)
!8906 = !DILocation(line: 747, column: 13, scope: !8904)
!8907 = !DILocation(line: 747, column: 7, scope: !8904)
!8908 = !DILocation(line: 747, column: 27, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8904, file: !356, line: 747, column: 2)
!8910 = !DILocation(line: 747, column: 34, scope: !8909)
!8911 = !DILocation(line: 747, column: 37, scope: !8909)
!8912 = !DILocation(line: 747, column: 45, scope: !8909)
!8913 = !DILocation(line: 747, column: 48, scope: !8909)
!8914 = !DILocation(line: 747, column: 55, scope: !8909)
!8915 = !DILocation(line: 747, column: 58, scope: !8909)
!8916 = !DILocation(line: 747, column: 2, scope: !8904)
!8917 = !DILocation(line: 748, column: 7, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !356, line: 748, column: 7)
!8919 = distinct !DILexicalBlock(scope: !8909, file: !356, line: 747, column: 76)
!8920 = !DILocation(line: 748, column: 14, scope: !8918)
!8921 = !DILocation(line: 748, column: 17, scope: !8918)
!8922 = !DILocation(line: 748, column: 25, scope: !8918)
!8923 = !DILocation(line: 748, column: 28, scope: !8918)
!8924 = !DILocation(line: 748, column: 35, scope: !8918)
!8925 = !DILocation(line: 748, column: 38, scope: !8918)
!8926 = !DILocation(line: 748, column: 46, scope: !8918)
!8927 = !DILocation(line: 749, column: 18, scope: !8918)
!8928 = !DILocation(line: 749, column: 25, scope: !8918)
!8929 = !DILocation(line: 749, column: 7, scope: !8918)
!8930 = !DILocation(line: 748, column: 7, scope: !8919)
!8931 = !DILocation(line: 750, column: 4, scope: !8918)
!8932 = !DILocation(line: 752, column: 15, scope: !8919)
!8933 = !DILocation(line: 752, column: 22, scope: !8919)
!8934 = !DILocation(line: 752, column: 3, scope: !8919)
!8935 = !DILocation(line: 754, column: 7, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8919, file: !356, line: 754, column: 7)
!8937 = !DILocation(line: 754, column: 19, scope: !8936)
!8938 = !DILocation(line: 754, column: 12, scope: !8936)
!8939 = !DILocation(line: 754, column: 10, scope: !8936)
!8940 = !DILocation(line: 754, column: 24, scope: !8936)
!8941 = !DILocation(line: 754, column: 7, scope: !8919)
!8942 = !DILocation(line: 755, column: 12, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8936, file: !356, line: 754, column: 40)
!8944 = !DILocation(line: 755, column: 4, scope: !8943)
!8945 = !DILocation(line: 756, column: 7, scope: !8943)
!8946 = !DILocation(line: 757, column: 3, scope: !8943)
!8947 = !DILocation(line: 758, column: 17, scope: !8919)
!8948 = !DILocation(line: 758, column: 27, scope: !8919)
!8949 = !DILocation(line: 758, column: 9, scope: !8919)
!8950 = !DILocation(line: 758, column: 6, scope: !8919)
!8951 = !DILocation(line: 759, column: 2, scope: !8919)
!8952 = !DILocation(line: 747, column: 67, scope: !8909)
!8953 = !DILocation(line: 747, column: 2, scope: !8909)
!8954 = distinct !{!8954, !8916, !8955}
!8955 = !DILocation(line: 759, column: 2, scope: !8904)
!8956 = !DILocation(line: 761, column: 10, scope: !8778)
!8957 = !DILocation(line: 761, column: 2, scope: !8778)
!8958 = !DILocation(line: 762, column: 1, scope: !8778)
!8959 = distinct !DISubprogram(name: "HXdeque_genocide", scope: !420, file: !420, line: 44, type: !8960, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{null, !7516}
!8962 = !DILocalVariable(name: "dq", arg: 1, scope: !8959, file: !420, line: 44, type: !7516)
!8963 = !DILocation(line: 44, column: 53, scope: !8959)
!8964 = !DILocation(line: 46, column: 20, scope: !8959)
!8965 = !DILocation(line: 46, column: 2, scope: !8959)
!8966 = !DILocation(line: 47, column: 1, scope: !8959)
!8967 = distinct !DISubprogram(name: "opt_to_text", scope: !356, file: !356, line: 200, type: !8968, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{null, !7464, !92, !157, !7}
!8970 = !DILocalVariable(name: "opt", arg: 1, scope: !8967, file: !356, line: 200, type: !7464)
!8971 = !DILocation(line: 200, column: 48, scope: !8967)
!8972 = !DILocalVariable(name: "buf", arg: 2, scope: !8967, file: !356, line: 200, type: !92)
!8973 = !DILocation(line: 200, column: 59, scope: !8967)
!8974 = !DILocalVariable(name: "len", arg: 3, scope: !8967, file: !356, line: 200, type: !157)
!8975 = !DILocation(line: 200, column: 71, scope: !8967)
!8976 = !DILocalVariable(name: "flags", arg: 4, scope: !8967, file: !356, line: 201, type: !7)
!8977 = !DILocation(line: 201, column: 18, scope: !8967)
!8978 = !DILocalVariable(name: "alt", scope: !8967, file: !356, line: 203, type: !120)
!8979 = !DILocation(line: 203, column: 14, scope: !8967)
!8980 = !DILocalVariable(name: "htyp", scope: !8967, file: !356, line: 203, type: !120)
!8981 = !DILocation(line: 203, column: 20, scope: !8967)
!8982 = !DILocation(line: 203, column: 28, scope: !8967)
!8983 = !DILocation(line: 203, column: 33, scope: !8967)
!8984 = !DILocation(line: 203, column: 38, scope: !8967)
!8985 = !DILocation(line: 203, column: 27, scope: !8967)
!8986 = !DILocation(line: 203, column: 49, scope: !8967)
!8987 = !DILocation(line: 203, column: 54, scope: !8967)
!8988 = !DILocalVariable(name: "i", scope: !8967, file: !356, line: 204, type: !157)
!8989 = !DILocation(line: 204, column: 9, scope: !8967)
!8990 = !DILocalVariable(name: "equ", scope: !8967, file: !356, line: 205, type: !93)
!8991 = !DILocation(line: 205, column: 7, scope: !8967)
!8992 = !DILocation(line: 207, column: 6, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8967, file: !356, line: 207, column: 6)
!8994 = !DILocation(line: 207, column: 12, scope: !8993)
!8995 = !DILocation(line: 207, column: 6, scope: !8967)
!8996 = !DILocation(line: 207, column: 25, scope: !8993)
!8997 = !DILocation(line: 207, column: 30, scope: !8993)
!8998 = !DILocation(line: 207, column: 34, scope: !8993)
!8999 = !DILocation(line: 208, column: 6, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8967, file: !356, line: 208, column: 6)
!9001 = !DILocation(line: 208, column: 12, scope: !9000)
!9002 = !DILocation(line: 208, column: 6, scope: !8967)
!9003 = !DILocation(line: 208, column: 25, scope: !9000)
!9004 = !DILocation(line: 208, column: 30, scope: !9000)
!9005 = !DILocation(line: 208, column: 34, scope: !9000)
!9006 = !DILocation(line: 209, column: 6, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8967, file: !356, line: 209, column: 6)
!9008 = !DILocation(line: 209, column: 12, scope: !9007)
!9009 = !DILocation(line: 209, column: 6, scope: !8967)
!9010 = !DILocation(line: 210, column: 7, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9007, file: !356, line: 209, column: 21)
!9012 = !DILocation(line: 211, column: 10, scope: !9011)
!9013 = !DILocation(line: 211, column: 16, scope: !9011)
!9014 = !DILocation(line: 211, column: 9, scope: !9011)
!9015 = !DILocation(line: 211, column: 7, scope: !9011)
!9016 = !DILocation(line: 212, column: 2, scope: !9011)
!9017 = !DILocation(line: 213, column: 7, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9007, file: !356, line: 212, column: 9)
!9019 = !DILocation(line: 214, column: 7, scope: !9018)
!9020 = !DILocation(line: 217, column: 6, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8967, file: !356, line: 217, column: 6)
!9022 = !DILocation(line: 217, column: 11, scope: !9021)
!9023 = !DILocation(line: 217, column: 14, scope: !9021)
!9024 = !DILocation(line: 217, column: 6, scope: !8967)
!9025 = !DILocation(line: 218, column: 3, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9021, file: !356, line: 217, column: 23)
!9027 = !DILocation(line: 218, column: 8, scope: !9026)
!9028 = !DILocation(line: 218, column: 12, scope: !9026)
!9029 = !DILocation(line: 219, column: 14, scope: !9026)
!9030 = !DILocation(line: 219, column: 19, scope: !9026)
!9031 = !DILocation(line: 219, column: 3, scope: !9026)
!9032 = !DILocation(line: 219, column: 8, scope: !9026)
!9033 = !DILocation(line: 219, column: 12, scope: !9026)
!9034 = !DILocation(line: 220, column: 19, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9026, file: !356, line: 220, column: 7)
!9036 = !DILocation(line: 220, column: 24, scope: !9035)
!9037 = !DILocation(line: 220, column: 8, scope: !9035)
!9038 = !DILocation(line: 220, column: 7, scope: !9026)
!9039 = !DILocation(line: 221, column: 18, scope: !9035)
!9040 = !DILocation(line: 221, column: 24, scope: !9035)
!9041 = !DILocation(line: 221, column: 22, scope: !9035)
!9042 = !DILocation(line: 221, column: 27, scope: !9035)
!9043 = !DILocation(line: 221, column: 33, scope: !9035)
!9044 = !DILocation(line: 221, column: 31, scope: !9035)
!9045 = !DILocation(line: 221, column: 43, scope: !9035)
!9046 = !DILocation(line: 221, column: 9, scope: !9035)
!9047 = !DILocation(line: 221, column: 6, scope: !9035)
!9048 = !DILocation(line: 221, column: 4, scope: !9035)
!9049 = !DILocation(line: 222, column: 2, scope: !9026)
!9050 = !DILocation(line: 223, column: 7, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !356, line: 223, column: 7)
!9052 = distinct !DILexicalBlock(scope: !9021, file: !356, line: 222, column: 9)
!9053 = !DILocation(line: 223, column: 12, scope: !9051)
!9054 = !DILocation(line: 223, column: 15, scope: !9051)
!9055 = !DILocation(line: 223, column: 7, scope: !9052)
!9056 = !DILocation(line: 224, column: 19, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9058, file: !356, line: 224, column: 8)
!9058 = distinct !DILexicalBlock(scope: !9051, file: !356, line: 223, column: 24)
!9059 = !DILocation(line: 224, column: 24, scope: !9057)
!9060 = !DILocation(line: 224, column: 8, scope: !9057)
!9061 = !DILocation(line: 224, column: 8, scope: !9058)
!9062 = !DILocation(line: 225, column: 19, scope: !9057)
!9063 = !DILocation(line: 225, column: 25, scope: !9057)
!9064 = !DILocation(line: 225, column: 23, scope: !9057)
!9065 = !DILocation(line: 225, column: 28, scope: !9057)
!9066 = !DILocation(line: 225, column: 34, scope: !9057)
!9067 = !DILocation(line: 225, column: 32, scope: !9057)
!9068 = !DILocation(line: 226, column: 18, scope: !9057)
!9069 = !DILocation(line: 226, column: 23, scope: !9057)
!9070 = !DILocation(line: 225, column: 10, scope: !9057)
!9071 = !DILocation(line: 225, column: 7, scope: !9057)
!9072 = !DILocation(line: 225, column: 5, scope: !9057)
!9073 = !DILocation(line: 228, column: 19, scope: !9057)
!9074 = !DILocation(line: 228, column: 25, scope: !9057)
!9075 = !DILocation(line: 228, column: 23, scope: !9057)
!9076 = !DILocation(line: 228, column: 28, scope: !9057)
!9077 = !DILocation(line: 228, column: 34, scope: !9057)
!9078 = !DILocation(line: 228, column: 32, scope: !9057)
!9079 = !DILocation(line: 229, column: 21, scope: !9057)
!9080 = !DILocation(line: 229, column: 26, scope: !9057)
!9081 = !DILocation(line: 229, column: 30, scope: !9057)
!9082 = !DILocation(line: 228, column: 10, scope: !9057)
!9083 = !DILocation(line: 228, column: 7, scope: !9057)
!9084 = !DILocation(line: 230, column: 3, scope: !9058)
!9085 = !DILocation(line: 231, column: 19, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !356, line: 231, column: 8)
!9087 = distinct !DILexicalBlock(scope: !9051, file: !356, line: 230, column: 10)
!9088 = !DILocation(line: 231, column: 24, scope: !9086)
!9089 = !DILocation(line: 231, column: 8, scope: !9086)
!9090 = !DILocation(line: 231, column: 8, scope: !9087)
!9091 = !DILocation(line: 232, column: 19, scope: !9086)
!9092 = !DILocation(line: 232, column: 25, scope: !9086)
!9093 = !DILocation(line: 232, column: 23, scope: !9086)
!9094 = !DILocation(line: 232, column: 28, scope: !9086)
!9095 = !DILocation(line: 232, column: 34, scope: !9086)
!9096 = !DILocation(line: 232, column: 32, scope: !9086)
!9097 = !DILocation(line: 233, column: 10, scope: !9086)
!9098 = !DILocation(line: 233, column: 15, scope: !9086)
!9099 = !DILocation(line: 233, column: 19, scope: !9086)
!9100 = !DILocation(line: 233, column: 24, scope: !9086)
!9101 = !DILocation(line: 233, column: 29, scope: !9086)
!9102 = !DILocation(line: 232, column: 10, scope: !9086)
!9103 = !DILocation(line: 232, column: 7, scope: !9086)
!9104 = !DILocation(line: 232, column: 5, scope: !9086)
!9105 = !DILocation(line: 235, column: 19, scope: !9086)
!9106 = !DILocation(line: 235, column: 25, scope: !9086)
!9107 = !DILocation(line: 235, column: 23, scope: !9086)
!9108 = !DILocation(line: 235, column: 28, scope: !9086)
!9109 = !DILocation(line: 235, column: 34, scope: !9086)
!9110 = !DILocation(line: 235, column: 32, scope: !9086)
!9111 = !DILocation(line: 236, column: 10, scope: !9086)
!9112 = !DILocation(line: 236, column: 15, scope: !9086)
!9113 = !DILocation(line: 236, column: 19, scope: !9086)
!9114 = !DILocation(line: 236, column: 24, scope: !9086)
!9115 = !DILocation(line: 236, column: 29, scope: !9086)
!9116 = !DILocation(line: 236, column: 33, scope: !9086)
!9117 = !DILocation(line: 236, column: 38, scope: !9086)
!9118 = !DILocation(line: 235, column: 10, scope: !9086)
!9119 = !DILocation(line: 235, column: 7, scope: !9086)
!9120 = !DILocation(line: 240, column: 6, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !8967, file: !356, line: 240, column: 6)
!9122 = !DILocation(line: 240, column: 12, scope: !9121)
!9123 = !DILocation(line: 240, column: 6, scope: !8967)
!9124 = !DILocation(line: 241, column: 3, scope: !9121)
!9125 = !DILocation(line: 241, column: 8, scope: !9121)
!9126 = !DILocation(line: 241, column: 12, scope: !9121)
!9127 = !DILocation(line: 242, column: 2, scope: !8967)
!9128 = !DILocation(line: 242, column: 6, scope: !8967)
!9129 = !DILocation(line: 242, column: 9, scope: !8967)
!9130 = !DILocation(line: 243, column: 1, scope: !8967)
!9131 = distinct !DISubprogram(name: "print_indent", scope: !356, file: !356, line: 245, type: !9132, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{null, !120, !7, !8639}
!9134 = !DILocalVariable(name: "msg", arg: 1, scope: !9131, file: !356, line: 245, type: !120)
!9135 = !DILocation(line: 245, column: 38, scope: !9131)
!9136 = !DILocalVariable(name: "ind", arg: 2, scope: !9131, file: !356, line: 245, type: !7)
!9137 = !DILocation(line: 245, column: 56, scope: !9131)
!9138 = !DILocalVariable(name: "fp", arg: 3, scope: !9131, file: !356, line: 245, type: !8639)
!9139 = !DILocation(line: 245, column: 67, scope: !9131)
!9140 = !DILocalVariable(name: "rest", scope: !9131, file: !356, line: 247, type: !157)
!9141 = !DILocation(line: 247, column: 9, scope: !9131)
!9142 = !DILocation(line: 247, column: 31, scope: !9131)
!9143 = !DILocation(line: 247, column: 29, scope: !9131)
!9144 = !DILocation(line: 247, column: 16, scope: !9131)
!9145 = !DILocalVariable(name: "p", scope: !9131, file: !356, line: 248, type: !92)
!9146 = !DILocation(line: 248, column: 8, scope: !9131)
!9147 = !DILocation(line: 250, column: 2, scope: !9131)
!9148 = !DILocation(line: 251, column: 14, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !356, line: 251, column: 7)
!9150 = distinct !DILexicalBlock(scope: !9131, file: !356, line: 250, column: 15)
!9151 = !DILocation(line: 251, column: 7, scope: !9149)
!9152 = !DILocation(line: 251, column: 21, scope: !9149)
!9153 = !DILocation(line: 251, column: 19, scope: !9149)
!9154 = !DILocation(line: 251, column: 7, scope: !9150)
!9155 = !DILocation(line: 252, column: 12, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9149, file: !356, line: 251, column: 27)
!9157 = !DILocation(line: 252, column: 22, scope: !9156)
!9158 = !DILocation(line: 252, column: 4, scope: !9156)
!9159 = !DILocation(line: 253, column: 4, scope: !9156)
!9160 = !DILocation(line: 255, column: 23, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9150, file: !356, line: 255, column: 7)
!9162 = !DILocation(line: 255, column: 28, scope: !9161)
!9163 = !DILocation(line: 255, column: 34, scope: !9161)
!9164 = !DILocation(line: 255, column: 32, scope: !9161)
!9165 = !DILocation(line: 255, column: 12, scope: !9161)
!9166 = !DILocation(line: 255, column: 10, scope: !9161)
!9167 = !DILocation(line: 255, column: 46, scope: !9161)
!9168 = !DILocation(line: 255, column: 7, scope: !9150)
!9169 = !DILocation(line: 256, column: 12, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9161, file: !356, line: 255, column: 55)
!9171 = !DILocation(line: 256, column: 22, scope: !9170)
!9172 = !DILocation(line: 256, column: 4, scope: !9170)
!9173 = !DILocation(line: 257, column: 4, scope: !9170)
!9174 = !DILocation(line: 259, column: 11, scope: !9150)
!9175 = !DILocation(line: 259, column: 28, scope: !9150)
!9176 = !DILocation(line: 260, column: 11, scope: !9150)
!9177 = !DILocation(line: 260, column: 16, scope: !9150)
!9178 = !DILocation(line: 259, column: 3, scope: !9150)
!9179 = !DILocation(line: 261, column: 10, scope: !9150)
!9180 = !DILocation(line: 261, column: 12, scope: !9150)
!9181 = !DILocation(line: 261, column: 8, scope: !9150)
!9182 = !DILocation(line: 262, column: 25, scope: !9150)
!9183 = !DILocation(line: 262, column: 23, scope: !9150)
!9184 = !DILocation(line: 262, column: 10, scope: !9150)
!9185 = !DILocation(line: 262, column: 8, scope: !9150)
!9186 = distinct !{!9186, !9147, !9187}
!9187 = !DILocation(line: 263, column: 2, scope: !9131)
!9188 = !DILocation(line: 264, column: 10, scope: !9131)
!9189 = !DILocation(line: 264, column: 2, scope: !9131)
!9190 = !DILocation(line: 265, column: 1, scope: !9131)
!9191 = distinct !DISubprogram(name: "HX_isdigit", scope: !1396, file: !1396, line: 42, type: !1397, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9192 = !DILocalVariable(name: "c", arg: 1, scope: !9191, file: !1396, line: 42, type: !231)
!9193 = !DILocation(line: 42, column: 45, scope: !9191)
!9194 = !DILocation(line: 44, column: 9, scope: !9191)
!9195 = !DILocation(line: 44, column: 2, scope: !9191)
!9196 = distinct !DISubprogram(name: "HX_memdup", scope: !304, file: !304, line: 104, type: !162, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9197 = !DILocalVariable(name: "buf", arg: 1, scope: !9196, file: !304, line: 104, type: !90)
!9198 = !DILocation(line: 104, column: 43, scope: !9196)
!9199 = !DILocalVariable(name: "len", arg: 2, scope: !9196, file: !304, line: 104, type: !157)
!9200 = !DILocation(line: 104, column: 55, scope: !9196)
!9201 = !DILocalVariable(name: "ret", scope: !9196, file: !304, line: 106, type: !89)
!9202 = !DILocation(line: 106, column: 8, scope: !9196)
!9203 = !DILocation(line: 107, column: 20, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9196, file: !304, line: 107, column: 6)
!9205 = !DILocation(line: 107, column: 13, scope: !9204)
!9206 = !DILocation(line: 107, column: 11, scope: !9204)
!9207 = !DILocation(line: 107, column: 26, scope: !9204)
!9208 = !DILocation(line: 107, column: 6, scope: !9196)
!9209 = !DILocation(line: 108, column: 3, scope: !9204)
!9210 = !DILocation(line: 109, column: 16, scope: !9196)
!9211 = !DILocation(line: 109, column: 21, scope: !9196)
!9212 = !DILocation(line: 109, column: 26, scope: !9196)
!9213 = !DILocation(line: 109, column: 9, scope: !9196)
!9214 = !DILocation(line: 109, column: 2, scope: !9196)
!9215 = !DILocation(line: 110, column: 1, scope: !9196)
!9216 = distinct !DISubprogram(name: "HX_getopt_help_cb", scope: !356, file: !356, line: 702, type: !7475, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9217 = !DILocalVariable(name: "cbi", arg: 1, scope: !9216, file: !356, line: 702, type: !7477)
!9218 = !DILocation(line: 702, column: 60, scope: !9216)
!9219 = !DILocation(line: 704, column: 17, scope: !9216)
!9220 = !DILocation(line: 704, column: 22, scope: !9216)
!9221 = !DILocation(line: 704, column: 2, scope: !9216)
!9222 = !DILocation(line: 705, column: 2, scope: !9216)
!9223 = !DILocation(line: 706, column: 1, scope: !9216)
!9224 = distinct !DISubprogram(name: "HX_getopt_usage_cb", scope: !356, file: !356, line: 764, type: !7475, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9225 = !DILocalVariable(name: "cbi", arg: 1, scope: !9224, file: !356, line: 764, type: !7477)
!9226 = !DILocation(line: 764, column: 61, scope: !9224)
!9227 = !DILocation(line: 766, column: 18, scope: !9224)
!9228 = !DILocation(line: 766, column: 23, scope: !9224)
!9229 = !DILocation(line: 766, column: 2, scope: !9224)
!9230 = !DILocation(line: 767, column: 2, scope: !9224)
!9231 = !DILocation(line: 768, column: 1, scope: !9224)
!9232 = distinct !DISubprogram(name: "HX_shconfig", scope: !356, file: !356, line: 812, type: !9233, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9233 = !DISubroutineType(types: !9234)
!9234 = !{!14, !120, !7464}
!9235 = !DILocalVariable(name: "file", arg: 1, scope: !9232, file: !356, line: 812, type: !120)
!9236 = !DILocation(line: 812, column: 43, scope: !9232)
!9237 = !DILocalVariable(name: "table", arg: 2, scope: !9232, file: !356, line: 812, type: !7464)
!9238 = !DILocation(line: 812, column: 72, scope: !9232)
!9239 = !DILocalVariable(name: "ln", scope: !9232, file: !356, line: 814, type: !97)
!9240 = !DILocation(line: 814, column: 10, scope: !9232)
!9241 = !DILocalVariable(name: "fp", scope: !9232, file: !356, line: 815, type: !8639)
!9242 = !DILocation(line: 815, column: 8, scope: !9232)
!9243 = !DILocation(line: 817, column: 18, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9232, file: !356, line: 817, column: 6)
!9245 = !DILocation(line: 817, column: 12, scope: !9244)
!9246 = !DILocation(line: 817, column: 10, scope: !9244)
!9247 = !DILocation(line: 817, column: 30, scope: !9244)
!9248 = !DILocation(line: 817, column: 6, scope: !9232)
!9249 = !DILocation(line: 818, column: 11, scope: !9244)
!9250 = !DILocation(line: 818, column: 10, scope: !9244)
!9251 = !DILocation(line: 818, column: 3, scope: !9244)
!9252 = !DILocation(line: 820, column: 2, scope: !9232)
!9253 = !DILocation(line: 820, column: 22, scope: !9232)
!9254 = !DILocation(line: 820, column: 9, scope: !9232)
!9255 = !DILocation(line: 820, column: 26, scope: !9232)
!9256 = !DILocation(line: 821, column: 19, scope: !9232)
!9257 = !DILocation(line: 822, column: 39, scope: !9232)
!9258 = !DILocation(line: 821, column: 3, scope: !9232)
!9259 = distinct !{!9259, !9252, !9260}
!9260 = !DILocation(line: 823, column: 20, scope: !9232)
!9261 = !DILocation(line: 825, column: 12, scope: !9232)
!9262 = !DILocation(line: 825, column: 2, scope: !9232)
!9263 = !DILocation(line: 826, column: 9, scope: !9232)
!9264 = !DILocation(line: 826, column: 2, scope: !9232)
!9265 = !DILocation(line: 827, column: 2, scope: !9232)
!9266 = !DILocation(line: 828, column: 1, scope: !9232)
!9267 = distinct !DISubprogram(name: "HX_shconf_assign", scope: !356, file: !356, line: 800, type: !9268, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{null, !89, !120, !120}
!9270 = !DILocalVariable(name: "table", arg: 1, scope: !9267, file: !356, line: 800, type: !89)
!9271 = !DILocation(line: 800, column: 36, scope: !9267)
!9272 = !DILocalVariable(name: "key", arg: 2, scope: !9267, file: !356, line: 800, type: !120)
!9273 = !DILocation(line: 800, column: 55, scope: !9267)
!9274 = !DILocalVariable(name: "value", arg: 3, scope: !9267, file: !356, line: 800, type: !120)
!9275 = !DILocation(line: 800, column: 72, scope: !9267)
!9276 = !DILocalVariable(name: "cbi", scope: !9267, file: !356, line: 802, type: !7479)
!9277 = !DILocation(line: 802, column: 17, scope: !9267)
!9278 = !DILocation(line: 802, column: 23, scope: !9267)
!9279 = !DILocation(line: 802, column: 33, scope: !9267)
!9280 = !DILocation(line: 804, column: 33, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9267, file: !356, line: 804, column: 6)
!9282 = !DILocation(line: 804, column: 40, scope: !9281)
!9283 = !DILocation(line: 804, column: 21, scope: !9281)
!9284 = !DILocation(line: 804, column: 11, scope: !9281)
!9285 = !DILocation(line: 804, column: 19, scope: !9281)
!9286 = !DILocation(line: 804, column: 46, scope: !9281)
!9287 = !DILocation(line: 804, column: 6, scope: !9267)
!9288 = !DILocation(line: 805, column: 3, scope: !9281)
!9289 = !DILocation(line: 807, column: 17, scope: !9267)
!9290 = !DILocation(line: 807, column: 6, scope: !9267)
!9291 = !DILocation(line: 807, column: 15, scope: !9267)
!9292 = !DILocation(line: 808, column: 17, scope: !9267)
!9293 = !DILocation(line: 808, column: 6, scope: !9267)
!9294 = !DILocation(line: 808, column: 15, scope: !9267)
!9295 = !DILocation(line: 809, column: 2, scope: !9267)
!9296 = !DILocation(line: 810, column: 1, scope: !9267)
!9297 = distinct !DISubprogram(name: "HX_shconf_break", scope: !356, file: !356, line: 770, type: !9298, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{null, !89, !92, !9300}
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 64)
!9301 = !DILocalVariable(name: "ptr", arg: 1, scope: !9297, file: !356, line: 770, type: !89)
!9302 = !DILocation(line: 770, column: 35, scope: !9297)
!9303 = !DILocalVariable(name: "line", arg: 2, scope: !9297, file: !356, line: 770, type: !92)
!9304 = !DILocation(line: 770, column: 46, scope: !9297)
!9305 = !DILocalVariable(name: "cb", arg: 3, scope: !9297, file: !356, line: 771, type: !9300)
!9306 = !DILocation(line: 771, column: 12, scope: !9297)
!9307 = !DILocalVariable(name: "lp", scope: !9297, file: !356, line: 773, type: !92)
!9308 = !DILocation(line: 773, column: 8, scope: !9297)
!9309 = !DILocation(line: 773, column: 13, scope: !9297)
!9310 = !DILocalVariable(name: "key", scope: !9297, file: !356, line: 773, type: !92)
!9311 = !DILocation(line: 773, column: 20, scope: !9297)
!9312 = !DILocalVariable(name: "val", scope: !9297, file: !356, line: 773, type: !92)
!9313 = !DILocation(line: 773, column: 26, scope: !9297)
!9314 = !DILocation(line: 774, column: 11, scope: !9297)
!9315 = !DILocation(line: 774, column: 2, scope: !9297)
!9316 = !DILocation(line: 776, column: 2, scope: !9297)
!9317 = !DILocation(line: 776, column: 9, scope: !9297)
!9318 = !DILocation(line: 776, column: 12, scope: !9297)
!9319 = !DILocation(line: 777, column: 3, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9297, file: !356, line: 776, column: 21)
!9321 = !DILocation(line: 777, column: 22, scope: !9320)
!9322 = !DILocation(line: 777, column: 21, scope: !9320)
!9323 = !DILocation(line: 777, column: 10, scope: !9320)
!9324 = !DILocation(line: 777, column: 26, scope: !9320)
!9325 = !DILocation(line: 777, column: 30, scope: !9320)
!9326 = !DILocation(line: 777, column: 29, scope: !9320)
!9327 = !DILocation(line: 777, column: 33, scope: !9320)
!9328 = !DILocation(line: 778, column: 4, scope: !9320)
!9329 = distinct !{!9329, !9319, !9330}
!9330 = !DILocation(line: 778, column: 6, scope: !9320)
!9331 = !DILocation(line: 780, column: 8, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9320, file: !356, line: 780, column: 7)
!9333 = !DILocation(line: 780, column: 7, scope: !9332)
!9334 = !DILocation(line: 780, column: 11, scope: !9332)
!9335 = !DILocation(line: 780, column: 18, scope: !9332)
!9336 = !DILocation(line: 780, column: 22, scope: !9332)
!9337 = !DILocation(line: 780, column: 21, scope: !9332)
!9338 = !DILocation(line: 780, column: 25, scope: !9332)
!9339 = !DILocation(line: 780, column: 7, scope: !9320)
!9340 = !DILocation(line: 781, column: 4, scope: !9332)
!9341 = !DILocation(line: 782, column: 20, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9320, file: !356, line: 782, column: 7)
!9343 = !DILocation(line: 782, column: 19, scope: !9342)
!9344 = !DILocation(line: 782, column: 8, scope: !9342)
!9345 = !DILocation(line: 782, column: 24, scope: !9342)
!9346 = !DILocation(line: 782, column: 28, scope: !9342)
!9347 = !DILocation(line: 782, column: 27, scope: !9342)
!9348 = !DILocation(line: 782, column: 31, scope: !9342)
!9349 = !DILocation(line: 782, column: 7, scope: !9320)
!9350 = !DILocation(line: 784, column: 4, scope: !9342)
!9351 = !DILocation(line: 785, column: 9, scope: !9320)
!9352 = !DILocation(line: 785, column: 7, scope: !9320)
!9353 = !DILocation(line: 786, column: 3, scope: !9320)
!9354 = !DILocation(line: 786, column: 22, scope: !9320)
!9355 = !DILocation(line: 786, column: 21, scope: !9320)
!9356 = !DILocation(line: 786, column: 10, scope: !9320)
!9357 = !DILocation(line: 786, column: 26, scope: !9320)
!9358 = !DILocation(line: 786, column: 30, scope: !9320)
!9359 = !DILocation(line: 786, column: 29, scope: !9320)
!9360 = !DILocation(line: 786, column: 33, scope: !9320)
!9361 = !DILocation(line: 787, column: 4, scope: !9320)
!9362 = distinct !{!9362, !9353, !9363}
!9363 = !DILocation(line: 787, column: 6, scope: !9320)
!9364 = !DILocation(line: 788, column: 8, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9320, file: !356, line: 788, column: 7)
!9366 = !DILocation(line: 788, column: 7, scope: !9365)
!9367 = !DILocation(line: 788, column: 11, scope: !9365)
!9368 = !DILocation(line: 788, column: 7, scope: !9320)
!9369 = !DILocation(line: 790, column: 4, scope: !9365)
!9370 = !DILocation(line: 791, column: 6, scope: !9320)
!9371 = !DILocation(line: 791, column: 9, scope: !9320)
!9372 = !DILocation(line: 792, column: 9, scope: !9320)
!9373 = !DILocation(line: 792, column: 7, scope: !9320)
!9374 = !DILocation(line: 795, column: 28, scope: !9320)
!9375 = !DILocation(line: 795, column: 8, scope: !9320)
!9376 = !DILocation(line: 795, column: 6, scope: !9320)
!9377 = !DILocation(line: 796, column: 5, scope: !9320)
!9378 = !DILocation(line: 796, column: 9, scope: !9320)
!9379 = !DILocation(line: 796, column: 14, scope: !9320)
!9380 = !DILocation(line: 796, column: 19, scope: !9320)
!9381 = !DILocation(line: 796, column: 3, scope: !9320)
!9382 = distinct !{!9382, !9316, !9383}
!9383 = !DILocation(line: 797, column: 2, scope: !9297)
!9384 = !DILocation(line: 798, column: 1, scope: !9297)
!9385 = distinct !DISubprogram(name: "HX_isspace", scope: !1396, file: !1396, line: 57, type: !1397, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9386 = !DILocalVariable(name: "c", arg: 1, scope: !9385, file: !1396, line: 57, type: !231)
!9387 = !DILocation(line: 57, column: 45, scope: !9385)
!9388 = !DILocation(line: 59, column: 9, scope: !9385)
!9389 = !DILocation(line: 59, column: 2, scope: !9385)
!9390 = distinct !DISubprogram(name: "HX_isalpha", scope: !1396, file: !1396, line: 37, type: !1397, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9391 = !DILocalVariable(name: "c", arg: 1, scope: !9390, file: !1396, line: 37, type: !231)
!9392 = !DILocation(line: 37, column: 45, scope: !9390)
!9393 = !DILocation(line: 39, column: 9, scope: !9390)
!9394 = !DILocation(line: 39, column: 2, scope: !9390)
!9395 = distinct !DISubprogram(name: "HX_isalnum", scope: !1396, file: !1396, line: 32, type: !1397, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9396 = !DILocalVariable(name: "c", arg: 1, scope: !9395, file: !1396, line: 32, type: !231)
!9397 = !DILocation(line: 32, column: 45, scope: !9395)
!9398 = !DILocation(line: 34, column: 9, scope: !9395)
!9399 = !DILocation(line: 34, column: 2, scope: !9395)
!9400 = distinct !DISubprogram(name: "HX_shconfig_map", scope: !356, file: !356, line: 835, type: !9401, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9401 = !DISubroutineType(types: !9402)
!9402 = !{!9403, !120}
!9403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9404, size: 64)
!9404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXmap", file: !6, line: 73, size: 64, elements: !9405)
!9405 = !{!9406, !9407}
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !9404, file: !6, line: 74, baseType: !7, size: 32)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9404, file: !6, line: 74, baseType: !7, size: 32, offset: 32)
!9408 = !DILocalVariable(name: "file", arg: 1, scope: !9400, file: !356, line: 835, type: !120)
!9409 = !DILocation(line: 835, column: 57, scope: !9400)
!9410 = !DILocalVariable(name: "map", scope: !9400, file: !356, line: 837, type: !9403)
!9411 = !DILocation(line: 837, column: 16, scope: !9400)
!9412 = !DILocalVariable(name: "ln", scope: !9400, file: !356, line: 838, type: !97)
!9413 = !DILocation(line: 838, column: 10, scope: !9400)
!9414 = !DILocalVariable(name: "fp", scope: !9400, file: !356, line: 839, type: !8639)
!9415 = !DILocation(line: 839, column: 8, scope: !9400)
!9416 = !DILocation(line: 841, column: 8, scope: !9400)
!9417 = !DILocation(line: 841, column: 6, scope: !9400)
!9418 = !DILocation(line: 842, column: 6, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9400, file: !356, line: 842, column: 6)
!9420 = !DILocation(line: 842, column: 10, scope: !9419)
!9421 = !DILocation(line: 842, column: 6, scope: !9400)
!9422 = !DILocation(line: 843, column: 3, scope: !9419)
!9423 = !DILocation(line: 845, column: 18, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9400, file: !356, line: 845, column: 6)
!9425 = !DILocation(line: 845, column: 12, scope: !9424)
!9426 = !DILocation(line: 845, column: 10, scope: !9424)
!9427 = !DILocation(line: 845, column: 30, scope: !9424)
!9428 = !DILocation(line: 845, column: 6, scope: !9400)
!9429 = !DILocation(line: 846, column: 8, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9424, file: !356, line: 845, column: 39)
!9431 = !DILocation(line: 846, column: 3, scope: !9430)
!9432 = !DILocation(line: 847, column: 3, scope: !9430)
!9433 = !DILocation(line: 850, column: 2, scope: !9400)
!9434 = !DILocation(line: 850, column: 22, scope: !9400)
!9435 = !DILocation(line: 850, column: 9, scope: !9400)
!9436 = !DILocation(line: 850, column: 26, scope: !9400)
!9437 = !DILocation(line: 851, column: 19, scope: !9400)
!9438 = !DILocation(line: 851, column: 24, scope: !9400)
!9439 = !DILocation(line: 851, column: 3, scope: !9400)
!9440 = distinct !{!9440, !9433, !9441}
!9441 = !DILocation(line: 851, column: 46, scope: !9400)
!9442 = !DILocation(line: 853, column: 12, scope: !9400)
!9443 = !DILocation(line: 853, column: 2, scope: !9400)
!9444 = !DILocation(line: 854, column: 9, scope: !9400)
!9445 = !DILocation(line: 854, column: 2, scope: !9400)
!9446 = !DILocation(line: 855, column: 9, scope: !9400)
!9447 = !DILocation(line: 855, column: 2, scope: !9400)
!9448 = !DILocation(line: 856, column: 1, scope: !9400)
!9449 = distinct !DISubprogram(name: "HX_shconf_assignmp", scope: !356, file: !356, line: 830, type: !9268, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9450 = !DILocalVariable(name: "map", arg: 1, scope: !9449, file: !356, line: 830, type: !89)
!9451 = !DILocation(line: 830, column: 38, scope: !9449)
!9452 = !DILocalVariable(name: "key", arg: 2, scope: !9449, file: !356, line: 830, type: !120)
!9453 = !DILocation(line: 830, column: 55, scope: !9449)
!9454 = !DILocalVariable(name: "value", arg: 3, scope: !9449, file: !356, line: 830, type: !120)
!9455 = !DILocation(line: 830, column: 72, scope: !9449)
!9456 = !DILocation(line: 832, column: 12, scope: !9449)
!9457 = !DILocation(line: 832, column: 17, scope: !9449)
!9458 = !DILocation(line: 832, column: 22, scope: !9449)
!9459 = !DILocation(line: 832, column: 2, scope: !9449)
!9460 = !DILocation(line: 833, column: 1, scope: !9449)
!9461 = distinct !DISubprogram(name: "HX_shconfig_pv", scope: !356, file: !356, line: 858, type: !9462, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{!14, !381, !120, !7464, !7}
!9464 = !DILocalVariable(name: "path", arg: 1, scope: !9461, file: !356, line: 858, type: !381)
!9465 = !DILocation(line: 858, column: 47, scope: !9461)
!9466 = !DILocalVariable(name: "file", arg: 2, scope: !9461, file: !356, line: 858, type: !120)
!9467 = !DILocation(line: 858, column: 65, scope: !9461)
!9468 = !DILocalVariable(name: "table", arg: 3, scope: !9461, file: !356, line: 859, type: !7464)
!9469 = !DILocation(line: 859, column: 28, scope: !9461)
!9470 = !DILocalVariable(name: "flags", arg: 4, scope: !9461, file: !356, line: 859, type: !7)
!9471 = !DILocation(line: 859, column: 48, scope: !9461)
!9472 = !DILocalVariable(name: "buf", scope: !9461, file: !356, line: 861, type: !2154)
!9473 = !DILocation(line: 861, column: 7, scope: !9461)
!9474 = !DILocalVariable(name: "ret", scope: !9461, file: !356, line: 862, type: !14)
!9475 = !DILocation(line: 862, column: 6, scope: !9461)
!9476 = !DILocation(line: 864, column: 2, scope: !9461)
!9477 = !DILocation(line: 864, column: 10, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !356, line: 864, column: 2)
!9479 = distinct !DILexicalBlock(scope: !9461, file: !356, line: 864, column: 2)
!9480 = !DILocation(line: 864, column: 9, scope: !9478)
!9481 = !DILocation(line: 864, column: 15, scope: !9478)
!9482 = !DILocation(line: 864, column: 2, scope: !9479)
!9483 = !DILocalVariable(name: "v", scope: !9484, file: !356, line: 865, type: !14)
!9484 = distinct !DILexicalBlock(scope: !9478, file: !356, line: 864, column: 32)
!9485 = !DILocation(line: 865, column: 7, scope: !9484)
!9486 = !DILocation(line: 866, column: 12, scope: !9484)
!9487 = !DILocation(line: 866, column: 40, scope: !9484)
!9488 = !DILocation(line: 866, column: 39, scope: !9484)
!9489 = !DILocation(line: 866, column: 46, scope: !9484)
!9490 = !DILocation(line: 866, column: 3, scope: !9484)
!9491 = !DILocation(line: 867, column: 19, scope: !9484)
!9492 = !DILocation(line: 867, column: 24, scope: !9484)
!9493 = !DILocation(line: 867, column: 7, scope: !9484)
!9494 = !DILocation(line: 867, column: 5, scope: !9484)
!9495 = !DILocation(line: 868, column: 7, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9484, file: !356, line: 868, column: 7)
!9497 = !DILocation(line: 868, column: 9, scope: !9496)
!9498 = !DILocation(line: 868, column: 7, scope: !9484)
!9499 = !DILocation(line: 869, column: 4, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9496, file: !356, line: 868, column: 14)
!9501 = !DILocation(line: 870, column: 8, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9500, file: !356, line: 870, column: 8)
!9503 = !DILocation(line: 870, column: 14, scope: !9502)
!9504 = !DILocation(line: 870, column: 8, scope: !9500)
!9505 = !DILocation(line: 871, column: 5, scope: !9502)
!9506 = !DILocation(line: 872, column: 3, scope: !9500)
!9507 = !DILocation(line: 873, column: 2, scope: !9484)
!9508 = !DILocation(line: 864, column: 24, scope: !9478)
!9509 = !DILocation(line: 864, column: 2, scope: !9478)
!9510 = distinct !{!9510, !9482, !9511}
!9511 = !DILocation(line: 873, column: 2, scope: !9479)
!9512 = !DILocation(line: 875, column: 9, scope: !9461)
!9513 = !DILocation(line: 875, column: 2, scope: !9461)
!9514 = distinct !DISubprogram(name: "HX_shconfig_free", scope: !356, file: !356, line: 878, type: !9515, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !355, retainedNodes: !117)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{null, !7464}
!9517 = !DILocalVariable(name: "table", arg: 1, scope: !9514, file: !356, line: 878, type: !7464)
!9518 = !DILocation(line: 878, column: 60, scope: !9514)
!9519 = !DILocation(line: 880, column: 2, scope: !9514)
!9520 = !DILocation(line: 880, column: 9, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9522, file: !356, line: 880, column: 2)
!9522 = distinct !DILexicalBlock(scope: !9514, file: !356, line: 880, column: 2)
!9523 = !DILocation(line: 880, column: 16, scope: !9521)
!9524 = !DILocation(line: 880, column: 19, scope: !9521)
!9525 = !DILocation(line: 880, column: 2, scope: !9522)
!9526 = !DILocalVariable(name: "ptr", scope: !9527, file: !356, line: 881, type: !380)
!9527 = distinct !DILexicalBlock(scope: !9521, file: !356, line: 880, column: 37)
!9528 = !DILocation(line: 881, column: 10, scope: !9527)
!9529 = !DILocation(line: 881, column: 16, scope: !9527)
!9530 = !DILocation(line: 881, column: 23, scope: !9527)
!9531 = !DILocation(line: 882, column: 7, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9527, file: !356, line: 882, column: 7)
!9533 = !DILocation(line: 882, column: 14, scope: !9532)
!9534 = !DILocation(line: 882, column: 19, scope: !9532)
!9535 = !DILocation(line: 882, column: 36, scope: !9532)
!9536 = !DILocation(line: 883, column: 7, scope: !9532)
!9537 = !DILocation(line: 883, column: 11, scope: !9532)
!9538 = !DILocation(line: 883, column: 19, scope: !9532)
!9539 = !DILocation(line: 883, column: 23, scope: !9532)
!9540 = !DILocation(line: 883, column: 22, scope: !9532)
!9541 = !DILocation(line: 883, column: 27, scope: !9532)
!9542 = !DILocation(line: 882, column: 7, scope: !9527)
!9543 = !DILocation(line: 884, column: 10, scope: !9532)
!9544 = !DILocation(line: 884, column: 9, scope: !9532)
!9545 = !DILocation(line: 884, column: 4, scope: !9532)
!9546 = !DILocation(line: 885, column: 2, scope: !9527)
!9547 = !DILocation(line: 880, column: 28, scope: !9521)
!9548 = !DILocation(line: 880, column: 2, scope: !9521)
!9549 = distinct !{!9549, !9525, !9550}
!9550 = !DILocation(line: 885, column: 2, scope: !9522)
!9551 = !DILocation(line: 886, column: 1, scope: !9514)
!9552 = distinct !DISubprogram(name: "HXrand_init", scope: !266, file: !266, line: 56, type: !9553, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{null}
!9555 = !DILocalVariable(name: "seed", scope: !9552, file: !266, line: 58, type: !7)
!9556 = !DILocation(line: 58, column: 15, scope: !9552)
!9557 = !DILocalVariable(name: "fd", scope: !9552, file: !266, line: 59, type: !14)
!9558 = !DILocation(line: 59, column: 6, scope: !9552)
!9559 = !DILocalVariable(name: "ret", scope: !9552, file: !266, line: 59, type: !14)
!9560 = !DILocation(line: 59, column: 10, scope: !9552)
!9561 = !DILocation(line: 61, column: 12, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9552, file: !266, line: 61, column: 6)
!9563 = !DILocation(line: 61, column: 10, scope: !9562)
!9564 = !DILocation(line: 61, column: 55, scope: !9562)
!9565 = !DILocation(line: 61, column: 6, scope: !9552)
!9566 = !DILocation(line: 62, column: 14, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9562, file: !266, line: 61, column: 61)
!9568 = !DILocation(line: 62, column: 18, scope: !9567)
!9569 = !DILocation(line: 62, column: 9, scope: !9567)
!9570 = !DILocation(line: 62, column: 7, scope: !9567)
!9571 = !DILocation(line: 63, column: 9, scope: !9567)
!9572 = !DILocation(line: 63, column: 3, scope: !9567)
!9573 = !DILocation(line: 64, column: 2, scope: !9567)
!9574 = !DILocation(line: 65, column: 6, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9552, file: !266, line: 65, column: 6)
!9576 = !DILocation(line: 65, column: 10, scope: !9575)
!9577 = !DILocation(line: 65, column: 6, scope: !9552)
!9578 = !DILocation(line: 66, column: 10, scope: !9575)
!9579 = !DILocation(line: 66, column: 8, scope: !9575)
!9580 = !DILocation(line: 66, column: 3, scope: !9575)
!9581 = !DILocation(line: 67, column: 8, scope: !9552)
!9582 = !DILocation(line: 67, column: 2, scope: !9552)
!9583 = !DILocation(line: 68, column: 1, scope: !9552)
!9584 = distinct !DISubprogram(name: "HX_ident", scope: !266, file: !266, line: 73, type: !9553, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9585 = !DILocation(line: 75, column: 6, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9584, file: !266, line: 75, column: 6)
!9587 = !DILocation(line: 75, column: 31, scope: !9586)
!9588 = !DILocation(line: 75, column: 6, scope: !9584)
!9589 = !DILocation(line: 76, column: 11, scope: !9586)
!9590 = !DILocation(line: 76, column: 3, scope: !9586)
!9591 = !DILocation(line: 77, column: 1, scope: !9584)
!9592 = distinct !DISubprogram(name: "HXrand_obtain_seed", scope: !266, file: !266, line: 28, type: !9593, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{!7}
!9595 = !DILocalVariable(name: "s", scope: !9592, file: !266, line: 30, type: !7)
!9596 = !DILocation(line: 30, column: 15, scope: !9592)
!9597 = !DILocalVariable(name: "tv", scope: !9592, file: !266, line: 33, type: !9598)
!9598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !9599, line: 30, size: 128, elements: !9600)
!9599 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "")
!9600 = !{!9601, !9602}
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9598, file: !9599, line: 32, baseType: !2358, size: 64)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !9598, file: !9599, line: 33, baseType: !9603, size: 64, offset: 64)
!9603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !1933, line: 141, baseType: !95)
!9604 = !DILocation(line: 33, column: 17, scope: !9592)
!9605 = !DILocation(line: 35, column: 2, scope: !9592)
!9606 = !DILocation(line: 36, column: 10, scope: !9592)
!9607 = !DILocation(line: 36, column: 7, scope: !9592)
!9608 = !DILocation(line: 36, column: 5, scope: !9592)
!9609 = !DILocation(line: 37, column: 10, scope: !9592)
!9610 = !DILocation(line: 37, column: 18, scope: !9592)
!9611 = !DILocation(line: 37, column: 4, scope: !9592)
!9612 = !DILocation(line: 42, column: 7, scope: !9592)
!9613 = !DILocation(line: 42, column: 16, scope: !9592)
!9614 = !DILocation(line: 42, column: 4, scope: !9592)
!9615 = !DILocation(line: 45, column: 7, scope: !9592)
!9616 = !DILocation(line: 45, column: 17, scope: !9592)
!9617 = !DILocation(line: 45, column: 4, scope: !9592)
!9618 = !DILocation(line: 48, column: 7, scope: !9592)
!9619 = !DILocation(line: 48, column: 17, scope: !9592)
!9620 = !DILocation(line: 48, column: 4, scope: !9592)
!9621 = !DILocation(line: 51, column: 7, scope: !9592)
!9622 = !DILocation(line: 51, column: 17, scope: !9592)
!9623 = !DILocation(line: 51, column: 4, scope: !9592)
!9624 = !DILocation(line: 53, column: 9, scope: !9592)
!9625 = !DILocation(line: 53, column: 2, scope: !9592)
!9626 = distinct !DISubprogram(name: "HX_init", scope: !266, file: !266, line: 79, type: !9627, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9627 = !DISubroutineType(types: !9628)
!9628 = !{!14}
!9629 = !DILocation(line: 81, column: 2, scope: !9626)
!9630 = !DILocation(line: 82, column: 6, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9626, file: !266, line: 82, column: 6)
!9632 = !DILocation(line: 82, column: 19, scope: !9631)
!9633 = !DILocation(line: 82, column: 6, scope: !9626)
!9634 = !DILocation(line: 83, column: 3, scope: !9631)
!9635 = !DILocation(line: 84, column: 2, scope: !9626)
!9636 = !DILocation(line: 85, column: 2, scope: !9626)
!9637 = !DILocation(line: 86, column: 2, scope: !9626)
!9638 = distinct !DISubprogram(name: "HX_exit", scope: !266, file: !266, line: 89, type: !9553, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9639 = !DILocation(line: 91, column: 2, scope: !9638)
!9640 = !DILocation(line: 92, column: 6, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9638, file: !266, line: 92, column: 6)
!9642 = !DILocation(line: 92, column: 19, scope: !9641)
!9643 = !DILocation(line: 92, column: 6, scope: !9638)
!9644 = !DILocation(line: 93, column: 11, scope: !9641)
!9645 = !DILocation(line: 93, column: 3, scope: !9641)
!9646 = !DILocation(line: 95, column: 3, scope: !9641)
!9647 = !DILocation(line: 96, column: 2, scope: !9638)
!9648 = !DILocation(line: 97, column: 1, scope: !9638)
!9649 = distinct !DISubprogram(name: "HX_rand", scope: !266, file: !266, line: 99, type: !9627, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9650 = !DILocation(line: 105, column: 9, scope: !9649)
!9651 = !DILocation(line: 105, column: 2, scope: !9649)
!9652 = distinct !DISubprogram(name: "HX_drand", scope: !266, file: !266, line: 108, type: !9653, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!7489, !7489, !7489}
!9655 = !DILocalVariable(name: "lo", arg: 1, scope: !9652, file: !266, line: 108, type: !7489)
!9656 = !DILocation(line: 108, column: 38, scope: !9652)
!9657 = !DILocalVariable(name: "hi", arg: 2, scope: !9652, file: !266, line: 108, type: !7489)
!9658 = !DILocation(line: 108, column: 49, scope: !9652)
!9659 = !DILocalVariable(name: "delta", scope: !9652, file: !266, line: 110, type: !7489)
!9660 = !DILocation(line: 110, column: 9, scope: !9652)
!9661 = !DILocation(line: 110, column: 17, scope: !9652)
!9662 = !DILocation(line: 110, column: 22, scope: !9652)
!9663 = !DILocation(line: 110, column: 20, scope: !9652)
!9664 = !DILocation(line: 112, column: 9, scope: !9652)
!9665 = !DILocation(line: 112, column: 39, scope: !9652)
!9666 = !DILocation(line: 112, column: 37, scope: !9652)
!9667 = !DILocation(line: 112, column: 45, scope: !9652)
!9668 = !DILocation(line: 112, column: 58, scope: !9652)
!9669 = !DILocation(line: 112, column: 56, scope: !9652)
!9670 = !DILocation(line: 112, column: 2, scope: !9652)
!9671 = distinct !DISubprogram(name: "HX_irand", scope: !266, file: !266, line: 115, type: !9672, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !265, retainedNodes: !117)
!9672 = !DISubroutineType(types: !9673)
!9673 = !{!7, !7, !7}
!9674 = !DILocalVariable(name: "lo", arg: 1, scope: !9671, file: !266, line: 115, type: !7)
!9675 = !DILocation(line: 115, column: 50, scope: !9671)
!9676 = !DILocalVariable(name: "hi", arg: 2, scope: !9671, file: !266, line: 115, type: !7)
!9677 = !DILocation(line: 115, column: 67, scope: !9671)
!9678 = !DILocalVariable(name: "delta", scope: !9671, file: !266, line: 117, type: !7)
!9679 = !DILocation(line: 117, column: 15, scope: !9671)
!9680 = !DILocation(line: 117, column: 23, scope: !9671)
!9681 = !DILocation(line: 117, column: 28, scope: !9671)
!9682 = !DILocation(line: 117, column: 26, scope: !9671)
!9683 = !DILocation(line: 119, column: 6, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9671, file: !266, line: 119, column: 6)
!9685 = !DILocation(line: 119, column: 12, scope: !9684)
!9686 = !DILocation(line: 119, column: 6, scope: !9671)
!9687 = !DILocation(line: 120, column: 10, scope: !9684)
!9688 = !DILocation(line: 120, column: 22, scope: !9684)
!9689 = !DILocation(line: 120, column: 20, scope: !9684)
!9690 = !DILocation(line: 120, column: 30, scope: !9684)
!9691 = !DILocation(line: 120, column: 28, scope: !9684)
!9692 = !DILocation(line: 120, column: 3, scope: !9684)
!9693 = !DILocation(line: 122, column: 10, scope: !9684)
!9694 = !DILocation(line: 123, column: 60, scope: !9684)
!9695 = !DILocation(line: 123, column: 58, scope: !9684)
!9696 = !DILocation(line: 122, column: 3, scope: !9684)
!9697 = !DILocation(line: 124, column: 1, scope: !9671)
!9698 = distinct !DISubprogram(name: "HX_basename", scope: !301, file: !301, line: 25, type: !1099, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9699 = !DILocalVariable(name: "s", arg: 1, scope: !9698, file: !301, line: 25, type: !120)
!9700 = !DILocation(line: 25, column: 45, scope: !9698)
!9701 = !DILocalVariable(name: "p", scope: !9698, file: !301, line: 27, type: !120)
!9702 = !DILocation(line: 27, column: 14, scope: !9698)
!9703 = !DILocation(line: 28, column: 11, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9698, file: !301, line: 28, column: 2)
!9705 = !DILocation(line: 28, column: 22, scope: !9704)
!9706 = !DILocation(line: 28, column: 15, scope: !9704)
!9707 = !DILocation(line: 28, column: 13, scope: !9704)
!9708 = !DILocation(line: 28, column: 25, scope: !9704)
!9709 = !DILocation(line: 28, column: 9, scope: !9704)
!9710 = !DILocation(line: 28, column: 7, scope: !9704)
!9711 = !DILocation(line: 28, column: 30, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9704, file: !301, line: 28, column: 2)
!9713 = !DILocation(line: 28, column: 35, scope: !9712)
!9714 = !DILocation(line: 28, column: 32, scope: !9712)
!9715 = !DILocation(line: 28, column: 37, scope: !9712)
!9716 = !DILocation(line: 28, column: 41, scope: !9712)
!9717 = !DILocation(line: 28, column: 40, scope: !9712)
!9718 = !DILocation(line: 28, column: 43, scope: !9712)
!9719 = !DILocation(line: 0, scope: !9712)
!9720 = !DILocation(line: 28, column: 2, scope: !9704)
!9721 = !DILocation(line: 28, column: 51, scope: !9712)
!9722 = !DILocation(line: 28, column: 2, scope: !9712)
!9723 = distinct !{!9723, !9720, !9724}
!9724 = !DILocation(line: 29, column: 3, scope: !9704)
!9725 = !DILocation(line: 30, column: 6, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9698, file: !301, line: 30, column: 6)
!9727 = !DILocation(line: 30, column: 10, scope: !9726)
!9728 = !DILocation(line: 30, column: 8, scope: !9726)
!9729 = !DILocation(line: 30, column: 6, scope: !9698)
!9730 = !DILocation(line: 31, column: 10, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9726, file: !301, line: 31, column: 10)
!9732 = !DILocation(line: 31, column: 3, scope: !9726)
!9733 = !DILocation(line: 32, column: 22, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9698, file: !301, line: 32, column: 6)
!9735 = !DILocation(line: 32, column: 25, scope: !9734)
!9736 = !DILocation(line: 32, column: 11, scope: !9734)
!9737 = !DILocation(line: 32, column: 9, scope: !9734)
!9738 = !DILocation(line: 32, column: 34, scope: !9734)
!9739 = !DILocation(line: 32, column: 6, scope: !9698)
!9740 = !DILocation(line: 33, column: 10, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9734, file: !301, line: 33, column: 10)
!9742 = !DILocation(line: 33, column: 3, scope: !9734)
!9743 = !DILocation(line: 34, column: 9, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9698, file: !301, line: 34, column: 9)
!9745 = !DILocation(line: 34, column: 2, scope: !9698)
!9746 = !DILocation(line: 35, column: 1, scope: !9698)
!9747 = distinct !DISubprogram(name: "HX_strbchr", scope: !301, file: !301, line: 228, type: !9748, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9748 = !DISubroutineType(types: !9749)
!9749 = !{!92, !120, !120, !93}
!9750 = !DILocalVariable(name: "start", arg: 1, scope: !9747, file: !301, line: 228, type: !120)
!9751 = !DILocation(line: 228, column: 44, scope: !9747)
!9752 = !DILocalVariable(name: "now", arg: 2, scope: !9747, file: !301, line: 228, type: !120)
!9753 = !DILocation(line: 228, column: 63, scope: !9747)
!9754 = !DILocalVariable(name: "d", arg: 3, scope: !9747, file: !301, line: 228, type: !93)
!9755 = !DILocation(line: 228, column: 73, scope: !9747)
!9756 = !DILocation(line: 231, column: 2, scope: !9747)
!9757 = !DILocation(line: 231, column: 9, scope: !9747)
!9758 = !DILocation(line: 231, column: 16, scope: !9747)
!9759 = !DILocation(line: 231, column: 13, scope: !9747)
!9760 = !DILocation(line: 232, column: 11, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9747, file: !301, line: 232, column: 7)
!9762 = !DILocation(line: 232, column: 7, scope: !9761)
!9763 = !DILocation(line: 232, column: 17, scope: !9761)
!9764 = !DILocation(line: 232, column: 14, scope: !9761)
!9765 = !DILocation(line: 232, column: 7, scope: !9747)
!9766 = !DILocation(line: 233, column: 11, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9761, file: !301, line: 233, column: 11)
!9768 = !DILocation(line: 233, column: 4, scope: !9761)
!9769 = distinct !{!9769, !9756, !9770}
!9770 = !DILocation(line: 233, column: 11, scope: !9747)
!9771 = !DILocation(line: 234, column: 2, scope: !9747)
!9772 = !DILocation(line: 235, column: 1, scope: !9747)
!9773 = distinct !DISubprogram(name: "HX_basename_exact", scope: !301, file: !301, line: 37, type: !1099, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9774 = !DILocalVariable(name: "s", arg: 1, scope: !9773, file: !301, line: 37, type: !120)
!9775 = !DILocation(line: 37, column: 51, scope: !9773)
!9776 = !DILocalVariable(name: "start", scope: !9773, file: !301, line: 39, type: !120)
!9777 = !DILocation(line: 39, column: 14, scope: !9773)
!9778 = !DILocalVariable(name: "end", scope: !9773, file: !301, line: 39, type: !120)
!9779 = !DILocation(line: 39, column: 22, scope: !9773)
!9780 = !DILocalVariable(name: "ret", scope: !9773, file: !301, line: 40, type: !92)
!9781 = !DILocation(line: 40, column: 8, scope: !9773)
!9782 = !DILocalVariable(name: "len", scope: !9773, file: !301, line: 41, type: !14)
!9783 = !DILocation(line: 41, column: 6, scope: !9773)
!9784 = !DILocation(line: 43, column: 7, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9773, file: !301, line: 43, column: 6)
!9786 = !DILocation(line: 43, column: 6, scope: !9785)
!9787 = !DILocation(line: 43, column: 9, scope: !9785)
!9788 = !DILocation(line: 43, column: 6, scope: !9773)
!9789 = !DILocation(line: 44, column: 10, scope: !9785)
!9790 = !DILocation(line: 44, column: 3, scope: !9785)
!9791 = !DILocation(line: 45, column: 13, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9773, file: !301, line: 45, column: 2)
!9793 = !DILocation(line: 45, column: 24, scope: !9792)
!9794 = !DILocation(line: 45, column: 17, scope: !9792)
!9795 = !DILocation(line: 45, column: 15, scope: !9792)
!9796 = !DILocation(line: 45, column: 27, scope: !9792)
!9797 = !DILocation(line: 45, column: 11, scope: !9792)
!9798 = !DILocation(line: 45, column: 7, scope: !9792)
!9799 = !DILocation(line: 45, column: 32, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9792, file: !301, line: 45, column: 2)
!9801 = !DILocation(line: 45, column: 39, scope: !9800)
!9802 = !DILocation(line: 45, column: 36, scope: !9800)
!9803 = !DILocation(line: 45, column: 41, scope: !9800)
!9804 = !DILocation(line: 45, column: 45, scope: !9800)
!9805 = !DILocation(line: 45, column: 44, scope: !9800)
!9806 = !DILocation(line: 45, column: 49, scope: !9800)
!9807 = !DILocation(line: 0, scope: !9800)
!9808 = !DILocation(line: 45, column: 2, scope: !9792)
!9809 = !DILocation(line: 45, column: 57, scope: !9800)
!9810 = !DILocation(line: 45, column: 2, scope: !9800)
!9811 = distinct !{!9811, !9808, !9812}
!9812 = !DILocation(line: 46, column: 3, scope: !9792)
!9813 = !DILocation(line: 47, column: 6, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9773, file: !301, line: 47, column: 6)
!9815 = !DILocation(line: 47, column: 12, scope: !9814)
!9816 = !DILocation(line: 47, column: 10, scope: !9814)
!9817 = !DILocation(line: 47, column: 6, scope: !9773)
!9818 = !DILocation(line: 48, column: 10, scope: !9814)
!9819 = !DILocation(line: 48, column: 3, scope: !9814)
!9820 = !DILocation(line: 50, column: 21, scope: !9773)
!9821 = !DILocation(line: 50, column: 24, scope: !9773)
!9822 = !DILocation(line: 50, column: 10, scope: !9773)
!9823 = !DILocation(line: 50, column: 8, scope: !9773)
!9824 = !DILocation(line: 51, column: 6, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9773, file: !301, line: 51, column: 6)
!9826 = !DILocation(line: 51, column: 12, scope: !9825)
!9827 = !DILocation(line: 51, column: 6, scope: !9773)
!9828 = !DILocation(line: 52, column: 9, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9825, file: !301, line: 51, column: 21)
!9830 = !DILocation(line: 52, column: 15, scope: !9829)
!9831 = !DILocation(line: 52, column: 13, scope: !9829)
!9832 = !DILocation(line: 52, column: 17, scope: !9829)
!9833 = !DILocation(line: 52, column: 7, scope: !9829)
!9834 = !DILocation(line: 53, column: 19, scope: !9829)
!9835 = !DILocation(line: 53, column: 22, scope: !9829)
!9836 = !DILocation(line: 53, column: 26, scope: !9829)
!9837 = !DILocation(line: 53, column: 9, scope: !9829)
!9838 = !DILocation(line: 53, column: 7, scope: !9829)
!9839 = !DILocation(line: 54, column: 2, scope: !9829)
!9840 = !DILocation(line: 55, column: 3, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9825, file: !301, line: 54, column: 9)
!9842 = !DILocation(line: 56, column: 9, scope: !9841)
!9843 = !DILocation(line: 56, column: 15, scope: !9841)
!9844 = !DILocation(line: 56, column: 13, scope: !9841)
!9845 = !DILocation(line: 56, column: 21, scope: !9841)
!9846 = !DILocation(line: 56, column: 7, scope: !9841)
!9847 = !DILocation(line: 57, column: 19, scope: !9841)
!9848 = !DILocation(line: 57, column: 26, scope: !9841)
!9849 = !DILocation(line: 57, column: 30, scope: !9841)
!9850 = !DILocation(line: 57, column: 9, scope: !9841)
!9851 = !DILocation(line: 57, column: 7, scope: !9841)
!9852 = !DILocation(line: 59, column: 6, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9773, file: !301, line: 59, column: 6)
!9854 = !DILocation(line: 59, column: 10, scope: !9853)
!9855 = !DILocation(line: 59, column: 6, scope: !9773)
!9856 = !DILocation(line: 60, column: 3, scope: !9853)
!9857 = !DILocation(line: 61, column: 2, scope: !9773)
!9858 = !DILocation(line: 61, column: 6, scope: !9773)
!9859 = !DILocation(line: 61, column: 11, scope: !9773)
!9860 = !DILocation(line: 62, column: 9, scope: !9773)
!9861 = !DILocation(line: 62, column: 2, scope: !9773)
!9862 = !DILocation(line: 63, column: 1, scope: !9773)
!9863 = distinct !DISubprogram(name: "HX_strdup", scope: !304, file: !304, line: 132, type: !1099, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9864 = !DILocalVariable(name: "src", arg: 1, scope: !9863, file: !304, line: 132, type: !120)
!9865 = !DILocation(line: 132, column: 43, scope: !9863)
!9866 = !DILocation(line: 134, column: 6, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9863, file: !304, line: 134, column: 6)
!9868 = !DILocation(line: 134, column: 10, scope: !9867)
!9869 = !DILocation(line: 134, column: 6, scope: !9863)
!9870 = !DILocation(line: 135, column: 3, scope: !9867)
!9871 = !DILocation(line: 139, column: 19, scope: !9863)
!9872 = !DILocation(line: 139, column: 31, scope: !9863)
!9873 = !DILocation(line: 139, column: 24, scope: !9863)
!9874 = !DILocation(line: 139, column: 36, scope: !9863)
!9875 = !DILocation(line: 139, column: 9, scope: !9863)
!9876 = !DILocation(line: 139, column: 2, scope: !9863)
!9877 = !DILocation(line: 141, column: 1, scope: !9863)
!9878 = distinct !DISubprogram(name: "HX_memdup", scope: !304, file: !304, line: 104, type: !162, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9879 = !DILocalVariable(name: "buf", arg: 1, scope: !9878, file: !304, line: 104, type: !90)
!9880 = !DILocation(line: 104, column: 43, scope: !9878)
!9881 = !DILocalVariable(name: "len", arg: 2, scope: !9878, file: !304, line: 104, type: !157)
!9882 = !DILocation(line: 104, column: 55, scope: !9878)
!9883 = !DILocalVariable(name: "ret", scope: !9878, file: !304, line: 106, type: !89)
!9884 = !DILocation(line: 106, column: 8, scope: !9878)
!9885 = !DILocation(line: 107, column: 20, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9878, file: !304, line: 107, column: 6)
!9887 = !DILocation(line: 107, column: 13, scope: !9886)
!9888 = !DILocation(line: 107, column: 11, scope: !9886)
!9889 = !DILocation(line: 107, column: 26, scope: !9886)
!9890 = !DILocation(line: 107, column: 6, scope: !9878)
!9891 = !DILocation(line: 108, column: 3, scope: !9886)
!9892 = !DILocation(line: 109, column: 16, scope: !9878)
!9893 = !DILocation(line: 109, column: 21, scope: !9878)
!9894 = !DILocation(line: 109, column: 26, scope: !9878)
!9895 = !DILocation(line: 109, column: 9, scope: !9878)
!9896 = !DILocation(line: 109, column: 2, scope: !9878)
!9897 = !DILocation(line: 110, column: 1, scope: !9878)
!9898 = distinct !DISubprogram(name: "HX_chomp", scope: !301, file: !301, line: 65, type: !9899, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9899 = !DISubroutineType(types: !9900)
!9900 = !{!92, !92}
!9901 = !DILocalVariable(name: "s", arg: 1, scope: !9898, file: !301, line: 65, type: !92)
!9902 = !DILocation(line: 65, column: 36, scope: !9898)
!9903 = !DILocalVariable(name: "p", scope: !9898, file: !301, line: 67, type: !92)
!9904 = !DILocation(line: 67, column: 8, scope: !9898)
!9905 = !DILocation(line: 67, column: 12, scope: !9898)
!9906 = !DILocation(line: 67, column: 23, scope: !9898)
!9907 = !DILocation(line: 67, column: 16, scope: !9898)
!9908 = !DILocation(line: 67, column: 14, scope: !9898)
!9909 = !DILocation(line: 67, column: 26, scope: !9898)
!9910 = !DILocation(line: 68, column: 2, scope: !9898)
!9911 = !DILocation(line: 68, column: 9, scope: !9898)
!9912 = !DILocation(line: 68, column: 14, scope: !9898)
!9913 = !DILocation(line: 68, column: 11, scope: !9898)
!9914 = !DILocation(line: 69, column: 8, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9916, file: !301, line: 69, column: 7)
!9916 = distinct !DILexicalBlock(scope: !9898, file: !301, line: 68, column: 17)
!9917 = !DILocation(line: 69, column: 7, scope: !9915)
!9918 = !DILocation(line: 69, column: 10, scope: !9915)
!9919 = !DILocation(line: 69, column: 18, scope: !9915)
!9920 = !DILocation(line: 69, column: 22, scope: !9915)
!9921 = !DILocation(line: 69, column: 21, scope: !9915)
!9922 = !DILocation(line: 69, column: 24, scope: !9915)
!9923 = !DILocation(line: 69, column: 7, scope: !9916)
!9924 = !DILocation(line: 70, column: 4, scope: !9915)
!9925 = !DILocation(line: 71, column: 5, scope: !9916)
!9926 = !DILocation(line: 71, column: 8, scope: !9916)
!9927 = distinct !{!9927, !9910, !9928}
!9928 = !DILocation(line: 72, column: 2, scope: !9898)
!9929 = !DILocation(line: 73, column: 9, scope: !9898)
!9930 = !DILocation(line: 73, column: 2, scope: !9898)
!9931 = distinct !DISubprogram(name: "HX_dirname", scope: !301, file: !301, line: 76, type: !1099, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!9932 = !DILocalVariable(name: "s", arg: 1, scope: !9931, file: !301, line: 76, type: !120)
!9933 = !DILocation(line: 76, column: 44, scope: !9931)
!9934 = !DILocalVariable(name: "last", scope: !9931, file: !301, line: 78, type: !120)
!9935 = !DILocation(line: 78, column: 14, scope: !9931)
!9936 = !DILocalVariable(name: "stop", scope: !9931, file: !301, line: 78, type: !120)
!9937 = !DILocation(line: 78, column: 21, scope: !9931)
!9938 = !DILocalVariable(name: "p", scope: !9931, file: !301, line: 79, type: !92)
!9939 = !DILocation(line: 79, column: 8, scope: !9931)
!9940 = !DILocation(line: 81, column: 7, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9931, file: !301, line: 81, column: 6)
!9942 = !DILocation(line: 81, column: 6, scope: !9941)
!9943 = !DILocation(line: 81, column: 9, scope: !9941)
!9944 = !DILocation(line: 81, column: 6, scope: !9931)
!9945 = !DILocation(line: 82, column: 10, scope: !9941)
!9946 = !DILocation(line: 82, column: 3, scope: !9941)
!9947 = !DILocation(line: 84, column: 14, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9931, file: !301, line: 84, column: 2)
!9949 = !DILocation(line: 84, column: 25, scope: !9948)
!9950 = !DILocation(line: 84, column: 18, scope: !9948)
!9951 = !DILocation(line: 84, column: 16, scope: !9948)
!9952 = !DILocation(line: 84, column: 28, scope: !9948)
!9953 = !DILocation(line: 84, column: 12, scope: !9948)
!9954 = !DILocation(line: 84, column: 7, scope: !9948)
!9955 = !DILocation(line: 84, column: 33, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9948, file: !301, line: 84, column: 2)
!9957 = !DILocation(line: 84, column: 40, scope: !9956)
!9958 = !DILocation(line: 84, column: 38, scope: !9956)
!9959 = !DILocation(line: 84, column: 42, scope: !9956)
!9960 = !DILocation(line: 84, column: 46, scope: !9956)
!9961 = !DILocation(line: 84, column: 45, scope: !9956)
!9962 = !DILocation(line: 84, column: 51, scope: !9956)
!9963 = !DILocation(line: 0, scope: !9956)
!9964 = !DILocation(line: 84, column: 2, scope: !9948)
!9965 = !DILocation(line: 84, column: 59, scope: !9956)
!9966 = !DILocation(line: 84, column: 2, scope: !9956)
!9967 = distinct !{!9967, !9964, !9968}
!9968 = !DILocation(line: 85, column: 3, scope: !9948)
!9969 = !DILocation(line: 87, column: 25, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9931, file: !301, line: 87, column: 6)
!9971 = !DILocation(line: 87, column: 28, scope: !9970)
!9972 = !DILocation(line: 87, column: 14, scope: !9970)
!9973 = !DILocation(line: 87, column: 12, scope: !9970)
!9974 = !DILocation(line: 87, column: 40, scope: !9970)
!9975 = !DILocation(line: 87, column: 6, scope: !9931)
!9976 = !DILocation(line: 88, column: 10, scope: !9970)
!9977 = !DILocation(line: 88, column: 3, scope: !9970)
!9978 = !DILocation(line: 90, column: 2, scope: !9931)
!9979 = !DILocation(line: 90, column: 9, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !301, line: 90, column: 2)
!9981 = distinct !DILexicalBlock(scope: !9931, file: !301, line: 90, column: 2)
!9982 = !DILocation(line: 90, column: 16, scope: !9980)
!9983 = !DILocation(line: 90, column: 14, scope: !9980)
!9984 = !DILocation(line: 90, column: 18, scope: !9980)
!9985 = !DILocation(line: 90, column: 22, scope: !9980)
!9986 = !DILocation(line: 90, column: 21, scope: !9980)
!9987 = !DILocation(line: 90, column: 27, scope: !9980)
!9988 = !DILocation(line: 0, scope: !9980)
!9989 = !DILocation(line: 90, column: 2, scope: !9981)
!9990 = !DILocation(line: 90, column: 35, scope: !9980)
!9991 = !DILocation(line: 90, column: 2, scope: !9980)
!9992 = distinct !{!9992, !9989, !9993}
!9993 = !DILocation(line: 91, column: 3, scope: !9981)
!9994 = !DILocation(line: 93, column: 16, scope: !9931)
!9995 = !DILocation(line: 93, column: 19, scope: !9931)
!9996 = !DILocation(line: 93, column: 26, scope: !9931)
!9997 = !DILocation(line: 93, column: 24, scope: !9931)
!9998 = !DILocation(line: 93, column: 28, scope: !9931)
!9999 = !DILocation(line: 93, column: 6, scope: !9931)
!10000 = !DILocation(line: 93, column: 4, scope: !9931)
!10001 = !DILocation(line: 94, column: 2, scope: !9931)
!10002 = !DILocation(line: 94, column: 4, scope: !9931)
!10003 = !DILocation(line: 94, column: 9, scope: !9931)
!10004 = !DILocation(line: 94, column: 8, scope: !9931)
!10005 = !DILocation(line: 94, column: 10, scope: !9931)
!10006 = !DILocation(line: 94, column: 14, scope: !9931)
!10007 = !DILocation(line: 95, column: 9, scope: !9931)
!10008 = !DILocation(line: 95, column: 2, scope: !9931)
!10009 = !DILocation(line: 96, column: 1, scope: !9931)
!10010 = distinct !DISubprogram(name: "HX_getl", scope: !301, file: !301, line: 98, type: !10011, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10011 = !DISubroutineType(types: !10012)
!10012 = !{!2717, !6344, !10013}
!10013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10014, size: 64)
!10014 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1931, line: 48, baseType: !10015)
!10015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2003, line: 241, size: 1728, elements: !10016)
!10016 = !{!10017, !10018, !10019, !10020, !10021, !10022, !10023, !10024, !10025, !10026, !10027, !10028, !10029, !10037, !10038, !10039, !10040, !10041, !10042, !10043, !10044, !10045, !10046, !10047, !10048, !10049, !10050, !10051, !10052}
!10017 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10015, file: !2003, line: 242, baseType: !14, size: 32)
!10018 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10015, file: !2003, line: 247, baseType: !92, size: 64, offset: 64)
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10015, file: !2003, line: 248, baseType: !92, size: 64, offset: 128)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10015, file: !2003, line: 249, baseType: !92, size: 64, offset: 192)
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10015, file: !2003, line: 250, baseType: !92, size: 64, offset: 256)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10015, file: !2003, line: 251, baseType: !92, size: 64, offset: 320)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10015, file: !2003, line: 252, baseType: !92, size: 64, offset: 384)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10015, file: !2003, line: 253, baseType: !92, size: 64, offset: 448)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10015, file: !2003, line: 254, baseType: !92, size: 64, offset: 512)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10015, file: !2003, line: 256, baseType: !92, size: 64, offset: 576)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10015, file: !2003, line: 257, baseType: !92, size: 64, offset: 640)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10015, file: !2003, line: 258, baseType: !92, size: 64, offset: 704)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10015, file: !2003, line: 260, baseType: !10030, size: 64, offset: 768)
!10030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10031, size: 64)
!10031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2003, line: 156, size: 192, elements: !10032)
!10032 = !{!10033, !10034, !10036}
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !10031, file: !2003, line: 157, baseType: !10030, size: 64)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !10031, file: !2003, line: 158, baseType: !10035, size: 64, offset: 64)
!10035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10015, size: 64)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !10031, file: !2003, line: 162, baseType: !14, size: 32, offset: 128)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10015, file: !2003, line: 262, baseType: !10035, size: 64, offset: 832)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10015, file: !2003, line: 264, baseType: !14, size: 32, offset: 896)
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10015, file: !2003, line: 268, baseType: !14, size: 32, offset: 928)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10015, file: !2003, line: 270, baseType: !2029, size: 64, offset: 960)
!10041 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10015, file: !2003, line: 274, baseType: !94, size: 16, offset: 1024)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10015, file: !2003, line: 275, baseType: !407, size: 8, offset: 1040)
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10015, file: !2003, line: 276, baseType: !2033, size: 8, offset: 1048)
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10015, file: !2003, line: 280, baseType: !2037, size: 64, offset: 1088)
!10045 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10015, file: !2003, line: 289, baseType: !2040, size: 64, offset: 1152)
!10046 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !10015, file: !2003, line: 297, baseType: !89, size: 64, offset: 1216)
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !10015, file: !2003, line: 298, baseType: !89, size: 64, offset: 1280)
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !10015, file: !2003, line: 299, baseType: !89, size: 64, offset: 1344)
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !10015, file: !2003, line: 300, baseType: !89, size: 64, offset: 1408)
!10050 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10015, file: !2003, line: 302, baseType: !157, size: 64, offset: 1472)
!10051 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10015, file: !2003, line: 303, baseType: !14, size: 32, offset: 1536)
!10052 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10015, file: !2003, line: 305, baseType: !2048, size: 160, offset: 1568)
!10053 = !DILocalVariable(name: "ptr", arg: 1, scope: !10010, file: !301, line: 98, type: !6344)
!10054 = !DILocation(line: 98, column: 40, scope: !10010)
!10055 = !DILocalVariable(name: "fp", arg: 2, scope: !10010, file: !301, line: 98, type: !10013)
!10056 = !DILocation(line: 98, column: 51, scope: !10010)
!10057 = !DILocalVariable(name: "temp", scope: !10010, file: !301, line: 101, type: !2249)
!10058 = !DILocation(line: 101, column: 7, scope: !10010)
!10059 = !DILocation(line: 103, column: 12, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10010, file: !301, line: 103, column: 6)
!10061 = !DILocation(line: 103, column: 32, scope: !10060)
!10062 = !DILocation(line: 103, column: 6, scope: !10060)
!10063 = !DILocation(line: 103, column: 36, scope: !10060)
!10064 = !DILocation(line: 103, column: 6, scope: !10010)
!10065 = !DILocation(line: 104, column: 3, scope: !10060)
!10066 = !DILocation(line: 106, column: 7, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10010, file: !301, line: 106, column: 6)
!10068 = !DILocation(line: 106, column: 6, scope: !10067)
!10069 = !DILocation(line: 106, column: 11, scope: !10067)
!10070 = !DILocation(line: 106, column: 6, scope: !10010)
!10071 = !DILocation(line: 107, column: 10, scope: !10067)
!10072 = !DILocation(line: 107, column: 4, scope: !10067)
!10073 = !DILocation(line: 107, column: 8, scope: !10067)
!10074 = !DILocation(line: 107, column: 3, scope: !10067)
!10075 = !DILocation(line: 109, column: 14, scope: !10067)
!10076 = !DILocation(line: 109, column: 3, scope: !10067)
!10077 = !DILocation(line: 111, column: 2, scope: !10010)
!10078 = !DILocation(line: 112, column: 15, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10010, file: !301, line: 111, column: 5)
!10080 = !DILocation(line: 112, column: 20, scope: !10079)
!10081 = !DILocation(line: 112, column: 3, scope: !10079)
!10082 = !DILocation(line: 113, column: 14, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !301, line: 113, column: 7)
!10084 = !DILocation(line: 113, column: 7, scope: !10083)
!10085 = !DILocation(line: 113, column: 26, scope: !10083)
!10086 = !DILocation(line: 113, column: 7, scope: !10079)
!10087 = !DILocation(line: 114, column: 4, scope: !10083)
!10088 = !DILocation(line: 115, column: 2, scope: !10079)
!10089 = !DILocation(line: 115, column: 17, scope: !10010)
!10090 = !DILocation(line: 115, column: 37, scope: !10010)
!10091 = !DILocation(line: 115, column: 11, scope: !10010)
!10092 = !DILocation(line: 115, column: 41, scope: !10010)
!10093 = distinct !{!10093, !10077, !10094}
!10094 = !DILocation(line: 115, column: 48, scope: !10010)
!10095 = !DILocation(line: 117, column: 10, scope: !10010)
!10096 = !DILocation(line: 117, column: 9, scope: !10010)
!10097 = !DILocation(line: 117, column: 2, scope: !10010)
!10098 = !DILocation(line: 118, column: 1, scope: !10010)
!10099 = distinct !DISubprogram(name: "HX_memmem", scope: !301, file: !301, line: 120, type: !10100, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10100 = !DISubroutineType(types: !10101)
!10101 = !{!89, !90, !157, !90, !157}
!10102 = !DILocalVariable(name: "space", arg: 1, scope: !10099, file: !301, line: 120, type: !90)
!10103 = !DILocation(line: 120, column: 43, scope: !10099)
!10104 = !DILocalVariable(name: "spacesize", arg: 2, scope: !10099, file: !301, line: 120, type: !157)
!10105 = !DILocation(line: 120, column: 57, scope: !10099)
!10106 = !DILocalVariable(name: "point", arg: 3, scope: !10099, file: !301, line: 121, type: !90)
!10107 = !DILocation(line: 121, column: 17, scope: !10099)
!10108 = !DILocalVariable(name: "pointsize", arg: 4, scope: !10099, file: !301, line: 121, type: !157)
!10109 = !DILocation(line: 121, column: 31, scope: !10099)
!10110 = !DILocalVariable(name: "i", scope: !10099, file: !301, line: 123, type: !157)
!10111 = !DILocation(line: 123, column: 9, scope: !10099)
!10112 = !DILocation(line: 125, column: 6, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10099, file: !301, line: 125, column: 6)
!10114 = !DILocation(line: 125, column: 18, scope: !10113)
!10115 = !DILocation(line: 125, column: 16, scope: !10113)
!10116 = !DILocation(line: 125, column: 6, scope: !10099)
!10117 = !DILocation(line: 126, column: 3, scope: !10113)
!10118 = !DILocation(line: 127, column: 9, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10099, file: !301, line: 127, column: 2)
!10120 = !DILocation(line: 127, column: 7, scope: !10119)
!10121 = !DILocation(line: 127, column: 14, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10119, file: !301, line: 127, column: 2)
!10123 = !DILocation(line: 127, column: 19, scope: !10122)
!10124 = !DILocation(line: 127, column: 31, scope: !10122)
!10125 = !DILocation(line: 127, column: 29, scope: !10122)
!10126 = !DILocation(line: 127, column: 16, scope: !10122)
!10127 = !DILocation(line: 127, column: 2, scope: !10119)
!10128 = !DILocation(line: 128, column: 14, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10122, file: !301, line: 128, column: 7)
!10130 = !DILocation(line: 128, column: 22, scope: !10129)
!10131 = !DILocation(line: 128, column: 20, scope: !10129)
!10132 = !DILocation(line: 128, column: 25, scope: !10129)
!10133 = !DILocation(line: 128, column: 32, scope: !10129)
!10134 = !DILocation(line: 128, column: 7, scope: !10129)
!10135 = !DILocation(line: 128, column: 43, scope: !10129)
!10136 = !DILocation(line: 128, column: 7, scope: !10122)
!10137 = !DILocation(line: 129, column: 11, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10129, file: !301, line: 129, column: 11)
!10139 = !DILocation(line: 129, column: 4, scope: !10129)
!10140 = !DILocation(line: 128, column: 46, scope: !10129)
!10141 = !DILocation(line: 127, column: 42, scope: !10122)
!10142 = !DILocation(line: 127, column: 2, scope: !10122)
!10143 = distinct !{!10143, !10127, !10144}
!10144 = !DILocation(line: 129, column: 11, scope: !10119)
!10145 = !DILocation(line: 130, column: 2, scope: !10099)
!10146 = !DILocation(line: 131, column: 1, scope: !10099)
!10147 = distinct !DISubprogram(name: "HX_split", scope: !301, file: !301, line: 133, type: !10148, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!380, !120, !120, !7497, !14}
!10150 = !DILocalVariable(name: "str", arg: 1, scope: !10147, file: !301, line: 133, type: !120)
!10151 = !DILocation(line: 133, column: 43, scope: !10147)
!10152 = !DILocalVariable(name: "delim", arg: 2, scope: !10147, file: !301, line: 133, type: !120)
!10153 = !DILocation(line: 133, column: 60, scope: !10147)
!10154 = !DILocalVariable(name: "cp", arg: 3, scope: !10147, file: !301, line: 134, type: !7497)
!10155 = !DILocation(line: 134, column: 10, scope: !10147)
!10156 = !DILocalVariable(name: "max", arg: 4, scope: !10147, file: !301, line: 134, type: !14)
!10157 = !DILocation(line: 134, column: 18, scope: !10147)
!10158 = !DILocalVariable(name: "count", scope: !10147, file: !301, line: 141, type: !14)
!10159 = !DILocation(line: 141, column: 6, scope: !10147)
!10160 = !DILocalVariable(name: "ret", scope: !10147, file: !301, line: 142, type: !380)
!10161 = !DILocation(line: 142, column: 9, scope: !10147)
!10162 = !DILocation(line: 144, column: 6, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10147, file: !301, line: 144, column: 6)
!10164 = !DILocation(line: 144, column: 9, scope: !10163)
!10165 = !DILocation(line: 144, column: 6, scope: !10147)
!10166 = !DILocation(line: 145, column: 6, scope: !10163)
!10167 = !DILocation(line: 145, column: 3, scope: !10163)
!10168 = !DILocation(line: 146, column: 3, scope: !10147)
!10169 = !DILocation(line: 146, column: 6, scope: !10147)
!10170 = !DILocalVariable(name: "wp", scope: !10171, file: !301, line: 149, type: !120)
!10171 = distinct !DILexicalBlock(scope: !10147, file: !301, line: 148, column: 2)
!10172 = !DILocation(line: 149, column: 15, scope: !10171)
!10173 = !DILocation(line: 149, column: 20, scope: !10171)
!10174 = !DILocation(line: 150, column: 3, scope: !10171)
!10175 = !DILocation(line: 150, column: 24, scope: !10171)
!10176 = !DILocation(line: 150, column: 28, scope: !10171)
!10177 = !DILocation(line: 150, column: 16, scope: !10171)
!10178 = !DILocation(line: 150, column: 14, scope: !10171)
!10179 = !DILocation(line: 150, column: 36, scope: !10171)
!10180 = !DILocation(line: 151, column: 7, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10171, file: !301, line: 150, column: 45)
!10182 = !DILocation(line: 151, column: 4, scope: !10181)
!10183 = !DILocation(line: 152, column: 4, scope: !10181)
!10184 = distinct !{!10184, !10174, !10185}
!10185 = !DILocation(line: 153, column: 3, scope: !10171)
!10186 = !DILocation(line: 156, column: 6, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10147, file: !301, line: 156, column: 6)
!10188 = !DILocation(line: 156, column: 10, scope: !10187)
!10189 = !DILocation(line: 156, column: 6, scope: !10147)
!10190 = !DILocation(line: 157, column: 10, scope: !10187)
!10191 = !DILocation(line: 157, column: 9, scope: !10187)
!10192 = !DILocation(line: 157, column: 7, scope: !10187)
!10193 = !DILocation(line: 157, column: 3, scope: !10187)
!10194 = !DILocation(line: 158, column: 12, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10187, file: !301, line: 158, column: 11)
!10196 = !DILocation(line: 158, column: 11, scope: !10195)
!10197 = !DILocation(line: 158, column: 17, scope: !10195)
!10198 = !DILocation(line: 158, column: 15, scope: !10195)
!10199 = !DILocation(line: 158, column: 11, scope: !10187)
!10200 = !DILocation(line: 159, column: 9, scope: !10195)
!10201 = !DILocation(line: 159, column: 4, scope: !10195)
!10202 = !DILocation(line: 159, column: 7, scope: !10195)
!10203 = !DILocation(line: 159, column: 3, scope: !10195)
!10204 = !DILocation(line: 161, column: 34, scope: !10147)
!10205 = !DILocation(line: 161, column: 33, scope: !10147)
!10206 = !DILocation(line: 161, column: 37, scope: !10147)
!10207 = !DILocation(line: 161, column: 32, scope: !10147)
!10208 = !DILocation(line: 161, column: 30, scope: !10147)
!10209 = !DILocation(line: 161, column: 8, scope: !10147)
!10210 = !DILocation(line: 161, column: 6, scope: !10147)
!10211 = !DILocation(line: 162, column: 2, scope: !10147)
!10212 = !DILocation(line: 162, column: 7, scope: !10147)
!10213 = !DILocation(line: 162, column: 6, scope: !10147)
!10214 = !DILocation(line: 162, column: 11, scope: !10147)
!10215 = !DILocalVariable(name: "seg", scope: !10216, file: !301, line: 165, type: !92)
!10216 = distinct !DILexicalBlock(scope: !10147, file: !301, line: 164, column: 2)
!10217 = !DILocation(line: 165, column: 9, scope: !10216)
!10218 = !DILocalVariable(name: "wp", scope: !10216, file: !301, line: 165, type: !92)
!10219 = !DILocation(line: 165, column: 15, scope: !10216)
!10220 = !DILocation(line: 165, column: 30, scope: !10216)
!10221 = !DILocation(line: 165, column: 20, scope: !10216)
!10222 = !DILocalVariable(name: "bg", scope: !10216, file: !301, line: 165, type: !92)
!10223 = !DILocation(line: 165, column: 37, scope: !10216)
!10224 = !DILocation(line: 165, column: 42, scope: !10216)
!10225 = !DILocalVariable(name: "i", scope: !10216, file: !301, line: 166, type: !157)
!10226 = !DILocation(line: 166, column: 10, scope: !10216)
!10227 = !DILocation(line: 168, column: 3, scope: !10216)
!10228 = !DILocation(line: 168, column: 10, scope: !10216)
!10229 = !DILocation(line: 168, column: 16, scope: !10216)
!10230 = !DILocation(line: 169, column: 30, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10216, file: !301, line: 168, column: 21)
!10232 = !DILocation(line: 169, column: 15, scope: !10231)
!10233 = !DILocation(line: 169, column: 13, scope: !10231)
!10234 = !DILocation(line: 170, column: 25, scope: !10231)
!10235 = !DILocation(line: 170, column: 15, scope: !10231)
!10236 = !DILocation(line: 170, column: 4, scope: !10231)
!10237 = !DILocation(line: 170, column: 9, scope: !10231)
!10238 = !DILocation(line: 170, column: 13, scope: !10231)
!10239 = distinct !{!10239, !10227, !10240}
!10240 = !DILocation(line: 171, column: 3, scope: !10216)
!10241 = !DILocation(line: 173, column: 24, scope: !10216)
!10242 = !DILocation(line: 173, column: 14, scope: !10216)
!10243 = !DILocation(line: 173, column: 3, scope: !10216)
!10244 = !DILocation(line: 173, column: 8, scope: !10216)
!10245 = !DILocation(line: 173, column: 12, scope: !10216)
!10246 = !DILocation(line: 174, column: 8, scope: !10216)
!10247 = !DILocation(line: 174, column: 3, scope: !10216)
!10248 = !DILocation(line: 177, column: 9, scope: !10147)
!10249 = !DILocation(line: 177, column: 2, scope: !10147)
!10250 = distinct !DISubprogram(name: "HX_strsep", scope: !301, file: !301, line: 323, type: !10251, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!92, !380, !120}
!10253 = !DILocalVariable(name: "sp", arg: 1, scope: !10250, file: !301, line: 323, type: !380)
!10254 = !DILocation(line: 323, column: 38, scope: !10250)
!10255 = !DILocalVariable(name: "d", arg: 2, scope: !10250, file: !301, line: 323, type: !120)
!10256 = !DILocation(line: 323, column: 54, scope: !10250)
!10257 = !DILocalVariable(name: "begin", scope: !10250, file: !301, line: 325, type: !92)
!10258 = !DILocation(line: 325, column: 8, scope: !10250)
!10259 = !DILocalVariable(name: "end", scope: !10250, file: !301, line: 325, type: !92)
!10260 = !DILocation(line: 325, column: 16, scope: !10250)
!10261 = !DILocation(line: 327, column: 7, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10250, file: !301, line: 327, column: 6)
!10263 = !DILocation(line: 327, column: 6, scope: !10262)
!10264 = !DILocation(line: 327, column: 10, scope: !10262)
!10265 = !DILocation(line: 327, column: 18, scope: !10262)
!10266 = !DILocation(line: 327, column: 23, scope: !10262)
!10267 = !DILocation(line: 327, column: 22, scope: !10262)
!10268 = !DILocation(line: 327, column: 21, scope: !10262)
!10269 = !DILocation(line: 327, column: 26, scope: !10262)
!10270 = !DILocation(line: 327, column: 6, scope: !10250)
!10271 = !DILocation(line: 328, column: 3, scope: !10262)
!10272 = !DILocation(line: 329, column: 11, scope: !10250)
!10273 = !DILocation(line: 329, column: 10, scope: !10250)
!10274 = !DILocation(line: 329, column: 8, scope: !10250)
!10275 = !DILocation(line: 331, column: 6, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10250, file: !301, line: 331, column: 6)
!10277 = !DILocation(line: 331, column: 11, scope: !10276)
!10278 = !DILocation(line: 331, column: 19, scope: !10276)
!10279 = !DILocation(line: 331, column: 22, scope: !10276)
!10280 = !DILocation(line: 331, column: 27, scope: !10276)
!10281 = !DILocation(line: 331, column: 6, scope: !10250)
!10282 = !DILocation(line: 332, column: 8, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !301, line: 332, column: 7)
!10284 = distinct !DILexicalBlock(scope: !10276, file: !301, line: 331, column: 36)
!10285 = !DILocation(line: 332, column: 7, scope: !10283)
!10286 = !DILocation(line: 332, column: 18, scope: !10283)
!10287 = !DILocation(line: 332, column: 17, scope: !10283)
!10288 = !DILocation(line: 332, column: 14, scope: !10283)
!10289 = !DILocation(line: 332, column: 7, scope: !10284)
!10290 = !DILocation(line: 333, column: 10, scope: !10283)
!10291 = !DILocation(line: 333, column: 8, scope: !10283)
!10292 = !DILocation(line: 333, column: 4, scope: !10283)
!10293 = !DILocation(line: 334, column: 13, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10283, file: !301, line: 334, column: 12)
!10295 = !DILocation(line: 334, column: 12, scope: !10294)
!10296 = !DILocation(line: 334, column: 19, scope: !10294)
!10297 = !DILocation(line: 334, column: 12, scope: !10283)
!10298 = !DILocation(line: 335, column: 8, scope: !10294)
!10299 = !DILocation(line: 335, column: 4, scope: !10294)
!10300 = !DILocation(line: 337, column: 17, scope: !10294)
!10301 = !DILocation(line: 337, column: 23, scope: !10294)
!10302 = !DILocation(line: 337, column: 29, scope: !10294)
!10303 = !DILocation(line: 337, column: 28, scope: !10294)
!10304 = !DILocation(line: 337, column: 10, scope: !10294)
!10305 = !DILocation(line: 337, column: 8, scope: !10294)
!10306 = !DILocation(line: 338, column: 2, scope: !10284)
!10307 = !DILocation(line: 339, column: 17, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10276, file: !301, line: 338, column: 9)
!10309 = !DILocation(line: 339, column: 24, scope: !10308)
!10310 = !DILocation(line: 339, column: 9, scope: !10308)
!10311 = !DILocation(line: 339, column: 7, scope: !10308)
!10312 = !DILocation(line: 342, column: 6, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10250, file: !301, line: 342, column: 6)
!10314 = !DILocation(line: 342, column: 10, scope: !10313)
!10315 = !DILocation(line: 342, column: 6, scope: !10250)
!10316 = !DILocation(line: 343, column: 4, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10313, file: !301, line: 342, column: 19)
!10318 = !DILocation(line: 343, column: 7, scope: !10317)
!10319 = !DILocation(line: 344, column: 2, scope: !10317)
!10320 = !DILocation(line: 345, column: 7, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10313, file: !301, line: 344, column: 9)
!10322 = !DILocation(line: 345, column: 10, scope: !10321)
!10323 = !DILocation(line: 346, column: 9, scope: !10321)
!10324 = !DILocation(line: 346, column: 4, scope: !10321)
!10325 = !DILocation(line: 346, column: 7, scope: !10321)
!10326 = !DILocation(line: 349, column: 9, scope: !10250)
!10327 = !DILocation(line: 349, column: 2, scope: !10250)
!10328 = !DILocation(line: 350, column: 1, scope: !10250)
!10329 = distinct !DISubprogram(name: "HX_split4", scope: !301, file: !301, line: 180, type: !10330, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10330 = !DISubroutineType(types: !10331)
!10331 = !{!380, !92, !120, !7497, !14}
!10332 = !DILocalVariable(name: "s", arg: 1, scope: !10329, file: !301, line: 180, type: !92)
!10333 = !DILocation(line: 180, column: 38, scope: !10329)
!10334 = !DILocalVariable(name: "delim", arg: 2, scope: !10329, file: !301, line: 180, type: !120)
!10335 = !DILocation(line: 180, column: 53, scope: !10329)
!10336 = !DILocalVariable(name: "fld", arg: 3, scope: !10329, file: !301, line: 180, type: !7497)
!10337 = !DILocation(line: 180, column: 65, scope: !10329)
!10338 = !DILocalVariable(name: "max", arg: 4, scope: !10329, file: !301, line: 180, type: !14)
!10339 = !DILocation(line: 180, column: 74, scope: !10329)
!10340 = !DILocalVariable(name: "stk", scope: !10329, file: !301, line: 182, type: !380)
!10341 = !DILocation(line: 182, column: 9, scope: !10329)
!10342 = !DILocalVariable(name: "p", scope: !10329, file: !301, line: 183, type: !120)
!10343 = !DILocation(line: 183, column: 14, scope: !10329)
!10344 = !DILocation(line: 183, column: 18, scope: !10329)
!10345 = !DILocalVariable(name: "count", scope: !10329, file: !301, line: 184, type: !14)
!10346 = !DILocation(line: 184, column: 6, scope: !10329)
!10347 = !DILocation(line: 186, column: 19, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10329, file: !301, line: 186, column: 2)
!10349 = !DILocation(line: 186, column: 22, scope: !10348)
!10350 = !DILocation(line: 186, column: 11, scope: !10348)
!10351 = !DILocation(line: 186, column: 9, scope: !10348)
!10352 = !DILocation(line: 186, column: 7, scope: !10348)
!10353 = !DILocation(line: 186, column: 30, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10348, file: !301, line: 186, column: 2)
!10355 = !DILocation(line: 186, column: 32, scope: !10354)
!10356 = !DILocation(line: 186, column: 2, scope: !10348)
!10357 = !DILocation(line: 187, column: 7, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10354, file: !301, line: 187, column: 7)
!10359 = !DILocation(line: 187, column: 18, scope: !10358)
!10360 = !DILocation(line: 187, column: 15, scope: !10358)
!10361 = !DILocation(line: 187, column: 22, scope: !10358)
!10362 = !DILocation(line: 187, column: 25, scope: !10358)
!10363 = !DILocation(line: 187, column: 29, scope: !10358)
!10364 = !DILocation(line: 187, column: 7, scope: !10354)
!10365 = !DILocation(line: 188, column: 12, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10358, file: !301, line: 187, column: 34)
!10367 = !DILocation(line: 188, column: 10, scope: !10366)
!10368 = !DILocation(line: 189, column: 4, scope: !10366)
!10369 = !DILocation(line: 187, column: 31, scope: !10358)
!10370 = !DILocation(line: 186, column: 53, scope: !10354)
!10371 = !DILocation(line: 186, column: 58, scope: !10354)
!10372 = !DILocation(line: 186, column: 45, scope: !10354)
!10373 = !DILocation(line: 186, column: 43, scope: !10354)
!10374 = !DILocation(line: 186, column: 2, scope: !10354)
!10375 = distinct !{!10375, !10356, !10376}
!10376 = !DILocation(line: 190, column: 3, scope: !10348)
!10377 = !DILocation(line: 192, column: 33, scope: !10329)
!10378 = !DILocation(line: 192, column: 39, scope: !10329)
!10379 = !DILocation(line: 192, column: 32, scope: !10329)
!10380 = !DILocation(line: 192, column: 30, scope: !10329)
!10381 = !DILocation(line: 192, column: 8, scope: !10329)
!10382 = !DILocation(line: 192, column: 6, scope: !10329)
!10383 = !DILocation(line: 193, column: 6, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10329, file: !301, line: 193, column: 6)
!10385 = !DILocation(line: 193, column: 10, scope: !10384)
!10386 = !DILocation(line: 193, column: 6, scope: !10329)
!10387 = !DILocation(line: 194, column: 3, scope: !10384)
!10388 = !DILocation(line: 195, column: 2, scope: !10329)
!10389 = !DILocation(line: 195, column: 6, scope: !10329)
!10390 = !DILocation(line: 195, column: 13, scope: !10329)
!10391 = !DILocation(line: 196, column: 20, scope: !10329)
!10392 = !DILocation(line: 196, column: 23, scope: !10329)
!10393 = !DILocation(line: 196, column: 30, scope: !10329)
!10394 = !DILocation(line: 196, column: 37, scope: !10329)
!10395 = !DILocation(line: 196, column: 10, scope: !10329)
!10396 = !DILocation(line: 196, column: 8, scope: !10329)
!10397 = !DILocation(line: 197, column: 6, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10329, file: !301, line: 197, column: 6)
!10399 = !DILocation(line: 197, column: 10, scope: !10398)
!10400 = !DILocation(line: 197, column: 6, scope: !10329)
!10401 = !DILocation(line: 198, column: 10, scope: !10398)
!10402 = !DILocation(line: 198, column: 4, scope: !10398)
!10403 = !DILocation(line: 198, column: 8, scope: !10398)
!10404 = !DILocation(line: 198, column: 3, scope: !10398)
!10405 = !DILocation(line: 199, column: 9, scope: !10329)
!10406 = !DILocation(line: 199, column: 2, scope: !10329)
!10407 = !DILocation(line: 200, column: 1, scope: !10329)
!10408 = distinct !DISubprogram(name: "HX_split5", scope: !301, file: !301, line: 202, type: !10409, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10409 = !DISubroutineType(types: !10410)
!10410 = !{!14, !92, !120, !14, !380}
!10411 = !DILocalVariable(name: "s", arg: 1, scope: !10408, file: !301, line: 202, type: !92)
!10412 = !DILocation(line: 202, column: 35, scope: !10408)
!10413 = !DILocalVariable(name: "delim", arg: 2, scope: !10408, file: !301, line: 202, type: !120)
!10414 = !DILocation(line: 202, column: 50, scope: !10408)
!10415 = !DILocalVariable(name: "max", arg: 3, scope: !10408, file: !301, line: 202, type: !14)
!10416 = !DILocation(line: 202, column: 61, scope: !10408)
!10417 = !DILocalVariable(name: "stk", arg: 4, scope: !10408, file: !301, line: 202, type: !380)
!10418 = !DILocation(line: 202, column: 73, scope: !10408)
!10419 = !DILocalVariable(name: "i", scope: !10408, file: !301, line: 213, type: !14)
!10420 = !DILocation(line: 213, column: 6, scope: !10408)
!10421 = !DILocalVariable(name: "p", scope: !10408, file: !301, line: 214, type: !92)
!10422 = !DILocation(line: 214, column: 8, scope: !10408)
!10423 = !DILocation(line: 216, column: 2, scope: !10408)
!10424 = !DILocation(line: 216, column: 9, scope: !10408)
!10425 = !DILocation(line: 216, column: 15, scope: !10408)
!10426 = !DILocation(line: 217, column: 20, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !301, line: 217, column: 7)
!10428 = distinct !DILexicalBlock(scope: !10408, file: !301, line: 216, column: 20)
!10429 = !DILocation(line: 217, column: 23, scope: !10427)
!10430 = !DILocation(line: 217, column: 12, scope: !10427)
!10431 = !DILocation(line: 217, column: 10, scope: !10427)
!10432 = !DILocation(line: 217, column: 31, scope: !10427)
!10433 = !DILocation(line: 217, column: 7, scope: !10428)
!10434 = !DILocation(line: 218, column: 4, scope: !10427)
!10435 = !DILocation(line: 219, column: 14, scope: !10428)
!10436 = !DILocation(line: 219, column: 3, scope: !10428)
!10437 = !DILocation(line: 219, column: 8, scope: !10428)
!10438 = !DILocation(line: 219, column: 12, scope: !10428)
!10439 = !DILocation(line: 220, column: 4, scope: !10428)
!10440 = !DILocation(line: 220, column: 6, scope: !10428)
!10441 = !DILocation(line: 221, column: 8, scope: !10428)
!10442 = !DILocation(line: 221, column: 10, scope: !10428)
!10443 = !DILocation(line: 221, column: 6, scope: !10428)
!10444 = distinct !{!10444, !10423, !10445}
!10445 = !DILocation(line: 222, column: 2, scope: !10408)
!10446 = !DILocation(line: 224, column: 13, scope: !10408)
!10447 = !DILocation(line: 224, column: 2, scope: !10408)
!10448 = !DILocation(line: 224, column: 7, scope: !10408)
!10449 = !DILocation(line: 224, column: 11, scope: !10408)
!10450 = !DILocation(line: 225, column: 9, scope: !10408)
!10451 = !DILocation(line: 225, column: 2, scope: !10408)
!10452 = distinct !DISubprogram(name: "HX_strclone", scope: !301, file: !301, line: 237, type: !10251, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10453 = !DILocalVariable(name: "pa", arg: 1, scope: !10452, file: !301, line: 237, type: !380)
!10454 = !DILocation(line: 237, column: 40, scope: !10452)
!10455 = !DILocalVariable(name: "pb", arg: 2, scope: !10452, file: !301, line: 237, type: !120)
!10456 = !DILocation(line: 237, column: 56, scope: !10452)
!10457 = !DILocation(line: 239, column: 7, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10452, file: !301, line: 239, column: 6)
!10459 = !DILocation(line: 239, column: 6, scope: !10458)
!10460 = !DILocation(line: 239, column: 13, scope: !10458)
!10461 = !DILocation(line: 239, column: 10, scope: !10458)
!10462 = !DILocation(line: 239, column: 6, scope: !10452)
!10463 = !DILocation(line: 240, column: 11, scope: !10458)
!10464 = !DILocation(line: 240, column: 10, scope: !10458)
!10465 = !DILocation(line: 240, column: 3, scope: !10458)
!10466 = !DILocation(line: 241, column: 7, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10452, file: !301, line: 241, column: 6)
!10468 = !DILocation(line: 241, column: 6, scope: !10467)
!10469 = !DILocation(line: 241, column: 10, scope: !10467)
!10470 = !DILocation(line: 241, column: 6, scope: !10452)
!10471 = !DILocation(line: 242, column: 9, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10467, file: !301, line: 241, column: 19)
!10473 = !DILocation(line: 242, column: 8, scope: !10472)
!10474 = !DILocation(line: 242, column: 3, scope: !10472)
!10475 = !DILocation(line: 243, column: 4, scope: !10472)
!10476 = !DILocation(line: 243, column: 7, scope: !10472)
!10477 = !DILocation(line: 244, column: 2, scope: !10472)
!10478 = !DILocation(line: 245, column: 6, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10452, file: !301, line: 245, column: 6)
!10480 = !DILocation(line: 245, column: 9, scope: !10479)
!10481 = !DILocation(line: 245, column: 6, scope: !10452)
!10482 = !DILocation(line: 246, column: 3, scope: !10479)
!10483 = !DILocation(line: 247, column: 27, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10452, file: !301, line: 247, column: 6)
!10485 = !DILocation(line: 247, column: 20, scope: !10484)
!10486 = !DILocation(line: 247, column: 31, scope: !10484)
!10487 = !DILocation(line: 247, column: 13, scope: !10484)
!10488 = !DILocation(line: 247, column: 8, scope: !10484)
!10489 = !DILocation(line: 247, column: 11, scope: !10484)
!10490 = !DILocation(line: 247, column: 37, scope: !10484)
!10491 = !DILocation(line: 247, column: 6, scope: !10452)
!10492 = !DILocation(line: 248, column: 3, scope: !10484)
!10493 = !DILocation(line: 249, column: 10, scope: !10452)
!10494 = !DILocation(line: 249, column: 9, scope: !10452)
!10495 = !DILocation(line: 249, column: 14, scope: !10452)
!10496 = !DILocation(line: 249, column: 2, scope: !10452)
!10497 = !DILocation(line: 250, column: 10, scope: !10452)
!10498 = !DILocation(line: 250, column: 9, scope: !10452)
!10499 = !DILocation(line: 250, column: 2, scope: !10452)
!10500 = !DILocation(line: 251, column: 1, scope: !10452)
!10501 = distinct !DISubprogram(name: "HX_strlower", scope: !301, file: !301, line: 253, type: !9899, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10502 = !DILocalVariable(name: "orig", arg: 1, scope: !10501, file: !301, line: 253, type: !92)
!10503 = !DILocation(line: 253, column: 39, scope: !10501)
!10504 = !DILocalVariable(name: "expr", scope: !10501, file: !301, line: 255, type: !92)
!10505 = !DILocation(line: 255, column: 8, scope: !10501)
!10506 = !DILocation(line: 256, column: 14, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10501, file: !301, line: 256, column: 2)
!10508 = !DILocation(line: 256, column: 12, scope: !10507)
!10509 = !DILocation(line: 256, column: 7, scope: !10507)
!10510 = !DILocation(line: 256, column: 21, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10507, file: !301, line: 256, column: 2)
!10512 = !DILocation(line: 256, column: 20, scope: !10511)
!10513 = !DILocation(line: 256, column: 26, scope: !10511)
!10514 = !DILocation(line: 256, column: 2, scope: !10507)
!10515 = !DILocation(line: 257, column: 23, scope: !10511)
!10516 = !DILocation(line: 257, column: 22, scope: !10511)
!10517 = !DILocation(line: 257, column: 11, scope: !10511)
!10518 = !DILocation(line: 257, column: 4, scope: !10511)
!10519 = !DILocation(line: 257, column: 9, scope: !10511)
!10520 = !DILocation(line: 257, column: 3, scope: !10511)
!10521 = !DILocation(line: 256, column: 35, scope: !10511)
!10522 = !DILocation(line: 256, column: 2, scope: !10511)
!10523 = distinct !{!10523, !10514, !10524}
!10524 = !DILocation(line: 257, column: 27, scope: !10507)
!10525 = !DILocation(line: 258, column: 9, scope: !10501)
!10526 = !DILocation(line: 258, column: 2, scope: !10501)
!10527 = distinct !DISubprogram(name: "HX_tolower", scope: !1396, file: !1396, line: 72, type: !10528, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10528 = !DISubroutineType(types: !10529)
!10529 = !{!231, !231}
!10530 = !DILocalVariable(name: "c", arg: 1, scope: !10527, file: !1396, line: 72, type: !231)
!10531 = !DILocation(line: 72, column: 54, scope: !10527)
!10532 = !DILocation(line: 74, column: 17, scope: !10527)
!10533 = !DILocation(line: 74, column: 9, scope: !10527)
!10534 = !DILocation(line: 74, column: 2, scope: !10527)
!10535 = distinct !DISubprogram(name: "HX_strltrim", scope: !301, file: !301, line: 261, type: !10536, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{!157, !92}
!10538 = !DILocalVariable(name: "expr", arg: 1, scope: !10535, file: !301, line: 261, type: !92)
!10539 = !DILocation(line: 261, column: 40, scope: !10535)
!10540 = !DILocalVariable(name: "travp", scope: !10535, file: !301, line: 263, type: !92)
!10541 = !DILocation(line: 263, column: 8, scope: !10535)
!10542 = !DILocalVariable(name: "diff", scope: !10535, file: !301, line: 264, type: !157)
!10543 = !DILocation(line: 264, column: 9, scope: !10535)
!10544 = !DILocation(line: 265, column: 10, scope: !10535)
!10545 = !DILocation(line: 265, column: 8, scope: !10535)
!10546 = !DILocation(line: 267, column: 2, scope: !10535)
!10547 = !DILocation(line: 267, column: 10, scope: !10535)
!10548 = !DILocation(line: 267, column: 9, scope: !10535)
!10549 = !DILocation(line: 267, column: 16, scope: !10535)
!10550 = !DILocation(line: 267, column: 24, scope: !10535)
!10551 = !DILocation(line: 267, column: 39, scope: !10535)
!10552 = !DILocation(line: 267, column: 38, scope: !10535)
!10553 = !DILocation(line: 267, column: 27, scope: !10535)
!10554 = !DILocation(line: 0, scope: !10535)
!10555 = !DILocation(line: 268, column: 3, scope: !10535)
!10556 = distinct !{!10556, !10546, !10557}
!10557 = !DILocation(line: 268, column: 5, scope: !10535)
!10558 = !DILocation(line: 269, column: 14, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10535, file: !301, line: 269, column: 6)
!10560 = !DILocation(line: 269, column: 22, scope: !10559)
!10561 = !DILocation(line: 269, column: 20, scope: !10559)
!10562 = !DILocation(line: 269, column: 12, scope: !10559)
!10563 = !DILocation(line: 269, column: 28, scope: !10559)
!10564 = !DILocation(line: 269, column: 6, scope: !10535)
!10565 = !DILocation(line: 270, column: 11, scope: !10559)
!10566 = !DILocation(line: 270, column: 17, scope: !10559)
!10567 = !DILocation(line: 270, column: 24, scope: !10559)
!10568 = !DILocation(line: 270, column: 3, scope: !10559)
!10569 = !DILocation(line: 271, column: 9, scope: !10535)
!10570 = !DILocation(line: 271, column: 2, scope: !10535)
!10571 = distinct !DISubprogram(name: "HX_isspace", scope: !1396, file: !1396, line: 57, type: !1397, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10572 = !DILocalVariable(name: "c", arg: 1, scope: !10571, file: !1396, line: 57, type: !231)
!10573 = !DILocation(line: 57, column: 45, scope: !10571)
!10574 = !DILocation(line: 59, column: 9, scope: !10571)
!10575 = !DILocation(line: 59, column: 2, scope: !10571)
!10576 = distinct !DISubprogram(name: "HX_strmid", scope: !301, file: !301, line: 275, type: !10577, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10577 = !DISubroutineType(types: !10578)
!10578 = !{!92, !120, !95, !95}
!10579 = !DILocalVariable(name: "expr", arg: 1, scope: !10576, file: !301, line: 275, type: !120)
!10580 = !DILocation(line: 275, column: 43, scope: !10576)
!10581 = !DILocalVariable(name: "offset", arg: 2, scope: !10576, file: !301, line: 275, type: !95)
!10582 = !DILocation(line: 275, column: 54, scope: !10576)
!10583 = !DILocalVariable(name: "length", arg: 3, scope: !10576, file: !301, line: 275, type: !95)
!10584 = !DILocation(line: 275, column: 67, scope: !10576)
!10585 = !DILocalVariable(name: "buffer", scope: !10576, file: !301, line: 277, type: !92)
!10586 = !DILocation(line: 277, column: 8, scope: !10576)
!10587 = !DILocation(line: 279, column: 6, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10576, file: !301, line: 279, column: 6)
!10589 = !DILocation(line: 279, column: 13, scope: !10588)
!10590 = !DILocation(line: 279, column: 6, scope: !10576)
!10591 = !DILocation(line: 280, column: 19, scope: !10588)
!10592 = !DILocation(line: 280, column: 12, scope: !10588)
!10593 = !DILocation(line: 280, column: 27, scope: !10588)
!10594 = !DILocation(line: 280, column: 25, scope: !10588)
!10595 = !DILocation(line: 280, column: 10, scope: !10588)
!10596 = !DILocation(line: 280, column: 3, scope: !10588)
!10597 = !DILocation(line: 281, column: 6, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10576, file: !301, line: 281, column: 6)
!10599 = !DILocation(line: 281, column: 13, scope: !10598)
!10600 = !DILocation(line: 281, column: 6, scope: !10576)
!10601 = !DILocation(line: 282, column: 19, scope: !10598)
!10602 = !DILocation(line: 282, column: 12, scope: !10598)
!10603 = !DILocation(line: 282, column: 27, scope: !10598)
!10604 = !DILocation(line: 282, column: 25, scope: !10598)
!10605 = !DILocation(line: 282, column: 36, scope: !10598)
!10606 = !DILocation(line: 282, column: 34, scope: !10598)
!10607 = !DILocation(line: 282, column: 10, scope: !10598)
!10608 = !DILocation(line: 282, column: 3, scope: !10598)
!10609 = !DILocation(line: 283, column: 23, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10576, file: !301, line: 283, column: 6)
!10611 = !DILocation(line: 283, column: 30, scope: !10610)
!10612 = !DILocation(line: 283, column: 16, scope: !10610)
!10613 = !DILocation(line: 283, column: 14, scope: !10610)
!10614 = !DILocation(line: 283, column: 36, scope: !10610)
!10615 = !DILocation(line: 283, column: 6, scope: !10576)
!10616 = !DILocation(line: 284, column: 3, scope: !10610)
!10617 = !DILocation(line: 286, column: 10, scope: !10576)
!10618 = !DILocation(line: 286, column: 7, scope: !10576)
!10619 = !DILocation(line: 287, column: 20, scope: !10576)
!10620 = !DILocation(line: 287, column: 28, scope: !10576)
!10621 = !DILocation(line: 287, column: 34, scope: !10576)
!10622 = !DILocation(line: 287, column: 41, scope: !10576)
!10623 = !DILocation(line: 287, column: 9, scope: !10576)
!10624 = !DILocation(line: 287, column: 2, scope: !10576)
!10625 = !DILocation(line: 288, column: 1, scope: !10576)
!10626 = distinct !DISubprogram(name: "HX_strlcpy", scope: !304, file: !304, line: 87, type: !2662, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10627 = !DILocalVariable(name: "dest", arg: 1, scope: !10626, file: !304, line: 87, type: !92)
!10628 = !DILocation(line: 87, column: 38, scope: !10626)
!10629 = !DILocalVariable(name: "src", arg: 2, scope: !10626, file: !304, line: 87, type: !120)
!10630 = !DILocation(line: 87, column: 56, scope: !10626)
!10631 = !DILocalVariable(name: "n", arg: 3, scope: !10626, file: !304, line: 87, type: !157)
!10632 = !DILocation(line: 87, column: 68, scope: !10626)
!10633 = !DILocation(line: 89, column: 10, scope: !10626)
!10634 = !DILocation(line: 89, column: 16, scope: !10626)
!10635 = !DILocation(line: 89, column: 21, scope: !10626)
!10636 = !DILocation(line: 89, column: 2, scope: !10626)
!10637 = !DILocation(line: 90, column: 2, scope: !10626)
!10638 = !DILocation(line: 90, column: 7, scope: !10626)
!10639 = !DILocation(line: 90, column: 8, scope: !10626)
!10640 = !DILocation(line: 90, column: 12, scope: !10626)
!10641 = !DILocation(line: 91, column: 9, scope: !10626)
!10642 = !DILocation(line: 91, column: 2, scope: !10626)
!10643 = distinct !DISubprogram(name: "HX_strrcspn", scope: !301, file: !301, line: 290, type: !10644, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!157, !120, !120}
!10646 = !DILocalVariable(name: "s", arg: 1, scope: !10643, file: !301, line: 290, type: !120)
!10647 = !DILocation(line: 290, column: 46, scope: !10643)
!10648 = !DILocalVariable(name: "rej", arg: 2, scope: !10643, file: !301, line: 290, type: !120)
!10649 = !DILocation(line: 290, column: 61, scope: !10643)
!10650 = !DILocalVariable(name: "n", scope: !10643, file: !301, line: 292, type: !157)
!10651 = !DILocation(line: 292, column: 9, scope: !10643)
!10652 = !DILocation(line: 292, column: 20, scope: !10643)
!10653 = !DILocation(line: 292, column: 13, scope: !10643)
!10654 = !DILocalVariable(name: "p", scope: !10643, file: !301, line: 293, type: !120)
!10655 = !DILocation(line: 293, column: 14, scope: !10643)
!10656 = !DILocation(line: 293, column: 18, scope: !10643)
!10657 = !DILocation(line: 293, column: 22, scope: !10643)
!10658 = !DILocation(line: 293, column: 20, scope: !10643)
!10659 = !DILocation(line: 294, column: 2, scope: !10643)
!10660 = !DILocation(line: 294, column: 9, scope: !10643)
!10661 = !DILocation(line: 294, column: 16, scope: !10643)
!10662 = !DILocation(line: 294, column: 13, scope: !10643)
!10663 = !DILocation(line: 295, column: 14, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10643, file: !301, line: 295, column: 7)
!10665 = !DILocation(line: 295, column: 20, scope: !10664)
!10666 = !DILocation(line: 295, column: 19, scope: !10664)
!10667 = !DILocation(line: 295, column: 7, scope: !10664)
!10668 = !DILocation(line: 295, column: 23, scope: !10664)
!10669 = !DILocation(line: 295, column: 7, scope: !10643)
!10670 = !DILocation(line: 296, column: 11, scope: !10664)
!10671 = !DILocation(line: 296, column: 15, scope: !10664)
!10672 = !DILocation(line: 296, column: 13, scope: !10664)
!10673 = !DILocation(line: 296, column: 4, scope: !10664)
!10674 = distinct !{!10674, !10659, !10675}
!10675 = !DILocation(line: 296, column: 15, scope: !10643)
!10676 = !DILocation(line: 297, column: 9, scope: !10643)
!10677 = !DILocation(line: 297, column: 2, scope: !10643)
!10678 = !DILocation(line: 298, column: 1, scope: !10643)
!10679 = distinct !DISubprogram(name: "HX_strrev", scope: !301, file: !301, line: 300, type: !9899, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10680 = !DILocalVariable(name: "s", arg: 1, scope: !10679, file: !301, line: 300, type: !92)
!10681 = !DILocation(line: 300, column: 37, scope: !10679)
!10682 = !DILocalVariable(name: "i", scope: !10679, file: !301, line: 302, type: !157)
!10683 = !DILocation(line: 302, column: 9, scope: !10679)
!10684 = !DILocalVariable(name: "z", scope: !10679, file: !301, line: 302, type: !157)
!10685 = !DILocation(line: 302, column: 12, scope: !10679)
!10686 = !DILocation(line: 302, column: 23, scope: !10679)
!10687 = !DILocation(line: 302, column: 16, scope: !10679)
!10688 = !DILocation(line: 302, column: 25, scope: !10679)
!10689 = !DILocalVariable(name: "z2", scope: !10679, file: !301, line: 302, type: !157)
!10690 = !DILocation(line: 302, column: 29, scope: !10679)
!10691 = !DILocation(line: 302, column: 34, scope: !10679)
!10692 = !DILocation(line: 302, column: 36, scope: !10679)
!10693 = !DILocation(line: 304, column: 9, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10679, file: !301, line: 304, column: 2)
!10695 = !DILocation(line: 304, column: 7, scope: !10694)
!10696 = !DILocation(line: 304, column: 14, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10694, file: !301, line: 304, column: 2)
!10698 = !DILocation(line: 304, column: 18, scope: !10697)
!10699 = !DILocation(line: 304, column: 16, scope: !10697)
!10700 = !DILocation(line: 304, column: 2, scope: !10694)
!10701 = !DILocalVariable(name: "temp", scope: !10702, file: !301, line: 305, type: !93)
!10702 = distinct !DILexicalBlock(scope: !10697, file: !301, line: 304, column: 27)
!10703 = !DILocation(line: 305, column: 8, scope: !10702)
!10704 = !DILocation(line: 306, column: 10, scope: !10702)
!10705 = !DILocation(line: 306, column: 12, scope: !10702)
!10706 = !DILocation(line: 306, column: 8, scope: !10702)
!10707 = !DILocation(line: 307, column: 10, scope: !10702)
!10708 = !DILocation(line: 307, column: 12, scope: !10702)
!10709 = !DILocation(line: 307, column: 14, scope: !10702)
!10710 = !DILocation(line: 307, column: 13, scope: !10702)
!10711 = !DILocation(line: 307, column: 3, scope: !10702)
!10712 = !DILocation(line: 307, column: 5, scope: !10702)
!10713 = !DILocation(line: 307, column: 8, scope: !10702)
!10714 = !DILocation(line: 308, column: 12, scope: !10702)
!10715 = !DILocation(line: 308, column: 3, scope: !10702)
!10716 = !DILocation(line: 308, column: 5, scope: !10702)
!10717 = !DILocation(line: 308, column: 7, scope: !10702)
!10718 = !DILocation(line: 308, column: 6, scope: !10702)
!10719 = !DILocation(line: 308, column: 10, scope: !10702)
!10720 = !DILocation(line: 309, column: 2, scope: !10702)
!10721 = !DILocation(line: 304, column: 22, scope: !10697)
!10722 = !DILocation(line: 304, column: 2, scope: !10697)
!10723 = distinct !{!10723, !10700, !10724}
!10724 = !DILocation(line: 309, column: 2, scope: !10694)
!10725 = !DILocation(line: 311, column: 9, scope: !10679)
!10726 = !DILocation(line: 311, column: 2, scope: !10679)
!10727 = distinct !DISubprogram(name: "HX_strrtrim", scope: !301, file: !301, line: 314, type: !10536, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10728 = !DILocalVariable(name: "expr", arg: 1, scope: !10727, file: !301, line: 314, type: !92)
!10729 = !DILocation(line: 314, column: 40, scope: !10727)
!10730 = !DILocalVariable(name: "i", scope: !10727, file: !301, line: 316, type: !14)
!10731 = !DILocation(line: 316, column: 6, scope: !10727)
!10732 = !DILocation(line: 316, column: 17, scope: !10727)
!10733 = !DILocation(line: 316, column: 10, scope: !10727)
!10734 = !DILocalVariable(name: "s", scope: !10727, file: !301, line: 316, type: !14)
!10735 = !DILocation(line: 316, column: 24, scope: !10727)
!10736 = !DILocation(line: 317, column: 2, scope: !10727)
!10737 = !DILocation(line: 317, column: 10, scope: !10727)
!10738 = !DILocation(line: 317, column: 13, scope: !10727)
!10739 = !DILocation(line: 317, column: 27, scope: !10727)
!10740 = !DILocation(line: 317, column: 32, scope: !10727)
!10741 = !DILocation(line: 317, column: 16, scope: !10727)
!10742 = !DILocation(line: 0, scope: !10727)
!10743 = !DILocation(line: 318, column: 3, scope: !10727)
!10744 = distinct !{!10744, !10736, !10745}
!10745 = !DILocation(line: 318, column: 5, scope: !10727)
!10746 = !DILocation(line: 319, column: 2, scope: !10727)
!10747 = !DILocation(line: 319, column: 7, scope: !10727)
!10748 = !DILocation(line: 319, column: 12, scope: !10727)
!10749 = !DILocation(line: 320, column: 9, scope: !10727)
!10750 = !DILocation(line: 320, column: 2, scope: !10727)
!10751 = distinct !DISubprogram(name: "HX_strsep2", scope: !301, file: !301, line: 352, type: !10251, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10752 = !DILocalVariable(name: "wp", arg: 1, scope: !10751, file: !301, line: 352, type: !380)
!10753 = !DILocation(line: 352, column: 39, scope: !10751)
!10754 = !DILocalVariable(name: "str", arg: 2, scope: !10751, file: !301, line: 352, type: !120)
!10755 = !DILocation(line: 352, column: 55, scope: !10751)
!10756 = !DILocalVariable(name: "ptr", scope: !10751, file: !301, line: 354, type: !92)
!10757 = !DILocation(line: 354, column: 8, scope: !10751)
!10758 = !DILocalVariable(name: "ret", scope: !10751, file: !301, line: 354, type: !92)
!10759 = !DILocation(line: 354, column: 14, scope: !10751)
!10760 = !DILocation(line: 355, column: 7, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10751, file: !301, line: 355, column: 6)
!10762 = !DILocation(line: 355, column: 6, scope: !10761)
!10763 = !DILocation(line: 355, column: 10, scope: !10761)
!10764 = !DILocation(line: 355, column: 6, scope: !10751)
!10765 = !DILocation(line: 356, column: 3, scope: !10761)
!10766 = !DILocation(line: 357, column: 9, scope: !10751)
!10767 = !DILocation(line: 357, column: 8, scope: !10751)
!10768 = !DILocation(line: 357, column: 6, scope: !10751)
!10769 = !DILocation(line: 358, column: 21, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10751, file: !301, line: 358, column: 6)
!10771 = !DILocation(line: 358, column: 20, scope: !10770)
!10772 = !DILocation(line: 358, column: 25, scope: !10770)
!10773 = !DILocation(line: 358, column: 13, scope: !10770)
!10774 = !DILocation(line: 358, column: 11, scope: !10770)
!10775 = !DILocation(line: 358, column: 31, scope: !10770)
!10776 = !DILocation(line: 358, column: 6, scope: !10751)
!10777 = !DILocation(line: 359, column: 4, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10770, file: !301, line: 358, column: 40)
!10779 = !DILocation(line: 359, column: 7, scope: !10778)
!10780 = !DILocation(line: 360, column: 10, scope: !10778)
!10781 = !DILocation(line: 360, column: 3, scope: !10778)
!10782 = !DILocation(line: 362, column: 3, scope: !10751)
!10783 = !DILocation(line: 362, column: 7, scope: !10751)
!10784 = !DILocation(line: 363, column: 9, scope: !10751)
!10785 = !DILocation(line: 363, column: 22, scope: !10751)
!10786 = !DILocation(line: 363, column: 15, scope: !10751)
!10787 = !DILocation(line: 363, column: 13, scope: !10751)
!10788 = !DILocation(line: 363, column: 3, scope: !10751)
!10789 = !DILocation(line: 363, column: 7, scope: !10751)
!10790 = !DILocation(line: 364, column: 9, scope: !10751)
!10791 = !DILocation(line: 364, column: 2, scope: !10751)
!10792 = !DILocation(line: 365, column: 1, scope: !10751)
!10793 = distinct !DISubprogram(name: "HX_strquote", scope: !301, file: !301, line: 520, type: !10794, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!92, !120, !7, !380}
!10796 = !DILocalVariable(name: "src", arg: 1, scope: !10793, file: !301, line: 520, type: !120)
!10797 = !DILocation(line: 520, column: 45, scope: !10793)
!10798 = !DILocalVariable(name: "type", arg: 2, scope: !10793, file: !301, line: 520, type: !7)
!10799 = !DILocation(line: 520, column: 63, scope: !10793)
!10800 = !DILocalVariable(name: "free_me", arg: 3, scope: !10793, file: !301, line: 521, type: !380)
!10801 = !DILocation(line: 521, column: 12, scope: !10793)
!10802 = !DILocalVariable(name: "do_quote", scope: !10793, file: !301, line: 523, type: !141)
!10803 = !DILocation(line: 523, column: 7, scope: !10793)
!10804 = !DILocalVariable(name: "tmp", scope: !10793, file: !301, line: 524, type: !92)
!10805 = !DILocation(line: 524, column: 8, scope: !10793)
!10806 = !DILocation(line: 526, column: 13, scope: !10793)
!10807 = !DILocation(line: 526, column: 18, scope: !10793)
!10808 = !DILocation(line: 526, column: 33, scope: !10793)
!10809 = !DILocation(line: 527, column: 21, scope: !10793)
!10810 = !DILocation(line: 527, column: 41, scope: !10793)
!10811 = !DILocation(line: 527, column: 26, scope: !10793)
!10812 = !DILocation(line: 527, column: 13, scope: !10793)
!10813 = !DILocation(line: 527, column: 48, scope: !10793)
!10814 = !DILocation(line: 0, scope: !10793)
!10815 = !DILocation(line: 526, column: 11, scope: !10793)
!10816 = !DILocation(line: 532, column: 6, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10793, file: !301, line: 532, column: 6)
!10818 = !DILocation(line: 532, column: 14, scope: !10817)
!10819 = !DILocation(line: 532, column: 6, scope: !10793)
!10820 = !DILocation(line: 533, column: 9, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10817, file: !301, line: 532, column: 23)
!10822 = !DILocation(line: 533, column: 8, scope: !10821)
!10823 = !DILocation(line: 533, column: 3, scope: !10821)
!10824 = !DILocation(line: 534, column: 4, scope: !10821)
!10825 = !DILocation(line: 534, column: 12, scope: !10821)
!10826 = !DILocation(line: 535, column: 8, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10821, file: !301, line: 535, column: 7)
!10828 = !DILocation(line: 535, column: 7, scope: !10821)
!10829 = !DILocation(line: 536, column: 11, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10827, file: !301, line: 536, column: 11)
!10831 = !DILocation(line: 536, column: 4, scope: !10827)
!10832 = !DILocation(line: 537, column: 2, scope: !10821)
!10833 = !DILocation(line: 538, column: 8, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10835, file: !301, line: 538, column: 7)
!10835 = distinct !DILexicalBlock(scope: !10817, file: !301, line: 537, column: 9)
!10836 = !DILocation(line: 538, column: 7, scope: !10835)
!10837 = !DILocation(line: 539, column: 21, scope: !10834)
!10838 = !DILocation(line: 539, column: 11, scope: !10834)
!10839 = !DILocation(line: 539, column: 4, scope: !10834)
!10840 = !DILocation(line: 540, column: 11, scope: !10835)
!10841 = !DILocation(line: 543, column: 35, scope: !10793)
!10842 = !DILocation(line: 543, column: 40, scope: !10793)
!10843 = !DILocation(line: 543, column: 20, scope: !10793)
!10844 = !DILocation(line: 543, column: 46, scope: !10793)
!10845 = !DILocation(line: 543, column: 13, scope: !10793)
!10846 = !DILocation(line: 543, column: 3, scope: !10793)
!10847 = !DILocation(line: 543, column: 11, scope: !10793)
!10848 = !DILocation(line: 544, column: 7, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10793, file: !301, line: 544, column: 6)
!10850 = !DILocation(line: 544, column: 6, scope: !10849)
!10851 = !DILocation(line: 544, column: 15, scope: !10849)
!10852 = !DILocation(line: 544, column: 6, scope: !10793)
!10853 = !DILocation(line: 545, column: 3, scope: !10849)
!10854 = !DILocation(line: 547, column: 10, scope: !10793)
!10855 = !DILocation(line: 547, column: 2, scope: !10793)
!10856 = !DILocation(line: 550, column: 30, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10793, file: !301, line: 547, column: 16)
!10858 = !DILocation(line: 550, column: 29, scope: !10857)
!10859 = !DILocation(line: 550, column: 39, scope: !10857)
!10860 = !DILocation(line: 550, column: 59, scope: !10857)
!10861 = !DILocation(line: 550, column: 44, scope: !10857)
!10862 = !DILocation(line: 550, column: 10, scope: !10857)
!10863 = !DILocation(line: 550, column: 3, scope: !10857)
!10864 = !DILocation(line: 552, column: 25, scope: !10857)
!10865 = !DILocation(line: 552, column: 24, scope: !10857)
!10866 = !DILocation(line: 552, column: 34, scope: !10857)
!10867 = !DILocation(line: 552, column: 10, scope: !10857)
!10868 = !DILocation(line: 552, column: 3, scope: !10857)
!10869 = !DILocation(line: 555, column: 25, scope: !10857)
!10870 = !DILocation(line: 555, column: 24, scope: !10857)
!10871 = !DILocation(line: 555, column: 34, scope: !10857)
!10872 = !DILocation(line: 555, column: 54, scope: !10857)
!10873 = !DILocation(line: 555, column: 39, scope: !10857)
!10874 = !DILocation(line: 555, column: 10, scope: !10857)
!10875 = !DILocation(line: 555, column: 3, scope: !10857)
!10876 = !DILocation(line: 557, column: 2, scope: !10793)
!10877 = !DILocation(line: 558, column: 1, scope: !10793)
!10878 = distinct !DISubprogram(name: "HX_quoted_size", scope: !301, file: !301, line: 504, type: !10879, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10879 = !DISubroutineType(types: !10880)
!10880 = !{!157, !120, !7}
!10881 = !DILocalVariable(name: "s", arg: 1, scope: !10878, file: !301, line: 504, type: !120)
!10882 = !DILocation(line: 504, column: 42, scope: !10878)
!10883 = !DILocalVariable(name: "type", arg: 2, scope: !10878, file: !301, line: 504, type: !7)
!10884 = !DILocation(line: 504, column: 58, scope: !10878)
!10885 = !DILocation(line: 506, column: 10, scope: !10878)
!10886 = !DILocation(line: 506, column: 2, scope: !10878)
!10887 = !DILocation(line: 509, column: 29, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10878, file: !301, line: 506, column: 16)
!10889 = !DILocation(line: 509, column: 47, scope: !10888)
!10890 = !DILocation(line: 509, column: 32, scope: !10888)
!10891 = !DILocation(line: 509, column: 10, scope: !10888)
!10892 = !DILocation(line: 509, column: 3, scope: !10888)
!10893 = !DILocation(line: 511, column: 24, scope: !10888)
!10894 = !DILocation(line: 511, column: 10, scope: !10888)
!10895 = !DILocation(line: 511, column: 3, scope: !10888)
!10896 = !DILocation(line: 514, column: 29, scope: !10888)
!10897 = !DILocation(line: 514, column: 47, scope: !10888)
!10898 = !DILocation(line: 514, column: 32, scope: !10888)
!10899 = !DILocation(line: 514, column: 10, scope: !10888)
!10900 = !DILocation(line: 514, column: 3, scope: !10888)
!10901 = !DILocation(line: 516, column: 17, scope: !10888)
!10902 = !DILocation(line: 516, column: 10, scope: !10888)
!10903 = !DILocation(line: 516, column: 3, scope: !10888)
!10904 = !DILocation(line: 518, column: 1, scope: !10878)
!10905 = distinct !DISubprogram(name: "HX_quote_backslash", scope: !301, file: !301, line: 396, type: !317, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10906 = !DILocalVariable(name: "dest", arg: 1, scope: !10905, file: !301, line: 396, type: !92)
!10907 = !DILocation(line: 396, column: 39, scope: !10905)
!10908 = !DILocalVariable(name: "src", arg: 2, scope: !10905, file: !301, line: 396, type: !120)
!10909 = !DILocation(line: 396, column: 57, scope: !10905)
!10910 = !DILocalVariable(name: "qc", arg: 3, scope: !10905, file: !301, line: 396, type: !120)
!10911 = !DILocation(line: 396, column: 74, scope: !10905)
!10912 = !DILocalVariable(name: "ret", scope: !10905, file: !301, line: 398, type: !92)
!10913 = !DILocation(line: 398, column: 8, scope: !10905)
!10914 = !DILocation(line: 398, column: 14, scope: !10905)
!10915 = !DILocalVariable(name: "len", scope: !10905, file: !301, line: 399, type: !157)
!10916 = !DILocation(line: 399, column: 9, scope: !10905)
!10917 = !DILocation(line: 401, column: 2, scope: !10905)
!10918 = !DILocation(line: 401, column: 10, scope: !10905)
!10919 = !DILocation(line: 401, column: 9, scope: !10905)
!10920 = !DILocation(line: 401, column: 14, scope: !10905)
!10921 = !DILocation(line: 402, column: 17, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10905, file: !301, line: 401, column: 23)
!10923 = !DILocation(line: 402, column: 22, scope: !10922)
!10924 = !DILocation(line: 402, column: 9, scope: !10922)
!10925 = !DILocation(line: 402, column: 7, scope: !10922)
!10926 = !DILocation(line: 403, column: 7, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10922, file: !301, line: 403, column: 7)
!10928 = !DILocation(line: 403, column: 11, scope: !10927)
!10929 = !DILocation(line: 403, column: 7, scope: !10922)
!10930 = !DILocation(line: 404, column: 11, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10927, file: !301, line: 403, column: 16)
!10932 = !DILocation(line: 404, column: 17, scope: !10931)
!10933 = !DILocation(line: 404, column: 22, scope: !10931)
!10934 = !DILocation(line: 404, column: 4, scope: !10931)
!10935 = !DILocation(line: 405, column: 12, scope: !10931)
!10936 = !DILocation(line: 405, column: 9, scope: !10931)
!10937 = !DILocation(line: 406, column: 12, scope: !10931)
!10938 = !DILocation(line: 406, column: 9, scope: !10931)
!10939 = !DILocation(line: 407, column: 9, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10931, file: !301, line: 407, column: 8)
!10941 = !DILocation(line: 407, column: 8, scope: !10940)
!10942 = !DILocation(line: 407, column: 13, scope: !10940)
!10943 = !DILocation(line: 407, column: 8, scope: !10931)
!10944 = !DILocation(line: 408, column: 5, scope: !10940)
!10945 = !DILocation(line: 409, column: 3, scope: !10931)
!10946 = !DILocation(line: 410, column: 8, scope: !10922)
!10947 = !DILocation(line: 410, column: 11, scope: !10922)
!10948 = !DILocation(line: 411, column: 17, scope: !10922)
!10949 = !DILocation(line: 411, column: 13, scope: !10922)
!10950 = !DILocation(line: 411, column: 8, scope: !10922)
!10951 = !DILocation(line: 411, column: 11, scope: !10922)
!10952 = distinct !{!10952, !10917, !10953}
!10953 = !DILocation(line: 412, column: 2, scope: !10905)
!10954 = !DILocation(line: 414, column: 3, scope: !10905)
!10955 = !DILocation(line: 414, column: 8, scope: !10905)
!10956 = !DILocation(line: 415, column: 9, scope: !10905)
!10957 = !DILocation(line: 415, column: 2, scope: !10905)
!10958 = distinct !DISubprogram(name: "HX_quote_html", scope: !301, file: !301, line: 442, type: !7358, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!10959 = !DILocalVariable(name: "dest", arg: 1, scope: !10958, file: !301, line: 442, type: !92)
!10960 = !DILocation(line: 442, column: 34, scope: !10958)
!10961 = !DILocalVariable(name: "src", arg: 2, scope: !10958, file: !301, line: 442, type: !120)
!10962 = !DILocation(line: 442, column: 52, scope: !10958)
!10963 = !DILocalVariable(name: "ret", scope: !10958, file: !301, line: 449, type: !92)
!10964 = !DILocation(line: 449, column: 8, scope: !10958)
!10965 = !DILocation(line: 449, column: 14, scope: !10958)
!10966 = !DILocation(line: 451, column: 2, scope: !10958)
!10967 = !DILocation(line: 451, column: 10, scope: !10958)
!10968 = !DILocation(line: 451, column: 9, scope: !10958)
!10969 = !DILocation(line: 451, column: 14, scope: !10958)
!10970 = !DILocalVariable(name: "len", scope: !10971, file: !301, line: 452, type: !157)
!10971 = distinct !DILexicalBlock(scope: !10958, file: !301, line: 451, column: 23)
!10972 = !DILocation(line: 452, column: 10, scope: !10971)
!10973 = !DILocation(line: 452, column: 24, scope: !10971)
!10974 = !DILocation(line: 452, column: 29, scope: !10971)
!10975 = !DILocation(line: 452, column: 16, scope: !10971)
!10976 = !DILocation(line: 453, column: 7, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10971, file: !301, line: 453, column: 7)
!10978 = !DILocation(line: 453, column: 11, scope: !10977)
!10979 = !DILocation(line: 453, column: 7, scope: !10971)
!10980 = !DILocation(line: 454, column: 11, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10977, file: !301, line: 453, column: 16)
!10982 = !DILocation(line: 454, column: 17, scope: !10981)
!10983 = !DILocation(line: 454, column: 22, scope: !10981)
!10984 = !DILocation(line: 454, column: 4, scope: !10981)
!10985 = !DILocation(line: 455, column: 12, scope: !10981)
!10986 = !DILocation(line: 455, column: 9, scope: !10981)
!10987 = !DILocation(line: 456, column: 12, scope: !10981)
!10988 = !DILocation(line: 456, column: 9, scope: !10981)
!10989 = !DILocation(line: 457, column: 9, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10981, file: !301, line: 457, column: 8)
!10991 = !DILocation(line: 457, column: 8, scope: !10990)
!10992 = !DILocation(line: 457, column: 13, scope: !10990)
!10993 = !DILocation(line: 457, column: 8, scope: !10981)
!10994 = !DILocation(line: 458, column: 5, scope: !10990)
!10995 = !DILocation(line: 459, column: 3, scope: !10981)
!10996 = !DILocation(line: 460, column: 15, scope: !10971)
!10997 = !DILocation(line: 460, column: 11, scope: !10971)
!10998 = !DILocation(line: 460, column: 3, scope: !10971)
!10999 = !DILocation(line: 461, column: 13, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10971, file: !301, line: 460, column: 19)
!11001 = !DILocation(line: 461, column: 13, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !11000, file: !301, line: 461, column: 13)
!11003 = !DILocation(line: 461, column: 28, scope: !11000)
!11004 = !DILocation(line: 462, column: 13, scope: !11000)
!11005 = !DILocation(line: 462, column: 13, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11000, file: !301, line: 462, column: 13)
!11007 = !DILocation(line: 462, column: 27, scope: !11000)
!11008 = !DILocation(line: 463, column: 13, scope: !11000)
!11009 = !DILocation(line: 463, column: 13, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11000, file: !301, line: 463, column: 13)
!11011 = !DILocation(line: 463, column: 26, scope: !11000)
!11012 = !DILocation(line: 464, column: 13, scope: !11000)
!11013 = !DILocation(line: 464, column: 13, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11000, file: !301, line: 464, column: 13)
!11015 = !DILocation(line: 464, column: 26, scope: !11000)
!11016 = distinct !{!11016, !10966, !11017}
!11017 = !DILocation(line: 466, column: 2, scope: !10958)
!11018 = !DILocation(line: 467, column: 3, scope: !10958)
!11019 = !DILocation(line: 467, column: 8, scope: !10958)
!11020 = !DILocation(line: 468, column: 9, scope: !10958)
!11021 = !DILocation(line: 468, column: 2, scope: !10958)
!11022 = !DILocalVariable(name: "dest", arg: 1, scope: !316, file: !301, line: 472, type: !92)
!11023 = !DILocation(line: 472, column: 34, scope: !316)
!11024 = !DILocalVariable(name: "src", arg: 2, scope: !316, file: !301, line: 472, type: !120)
!11025 = !DILocation(line: 472, column: 52, scope: !316)
!11026 = !DILocalVariable(name: "qc", arg: 3, scope: !316, file: !301, line: 472, type: !120)
!11027 = !DILocation(line: 472, column: 69, scope: !316)
!11028 = !DILocalVariable(name: "ret", scope: !316, file: !301, line: 475, type: !92)
!11029 = !DILocation(line: 475, column: 8, scope: !316)
!11030 = !DILocation(line: 475, column: 14, scope: !316)
!11031 = !DILocalVariable(name: "len", scope: !316, file: !301, line: 476, type: !157)
!11032 = !DILocation(line: 476, column: 9, scope: !316)
!11033 = !DILocation(line: 478, column: 2, scope: !316)
!11034 = !DILocation(line: 478, column: 10, scope: !316)
!11035 = !DILocation(line: 478, column: 9, scope: !316)
!11036 = !DILocation(line: 478, column: 14, scope: !316)
!11037 = !DILocation(line: 479, column: 17, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !316, file: !301, line: 478, column: 23)
!11039 = !DILocation(line: 479, column: 22, scope: !11038)
!11040 = !DILocation(line: 479, column: 9, scope: !11038)
!11041 = !DILocation(line: 479, column: 7, scope: !11038)
!11042 = !DILocation(line: 480, column: 7, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11038, file: !301, line: 480, column: 7)
!11044 = !DILocation(line: 480, column: 11, scope: !11043)
!11045 = !DILocation(line: 480, column: 7, scope: !11038)
!11046 = !DILocation(line: 481, column: 11, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11043, file: !301, line: 480, column: 16)
!11048 = !DILocation(line: 481, column: 17, scope: !11047)
!11049 = !DILocation(line: 481, column: 22, scope: !11047)
!11050 = !DILocation(line: 481, column: 4, scope: !11047)
!11051 = !DILocation(line: 482, column: 12, scope: !11047)
!11052 = !DILocation(line: 482, column: 9, scope: !11047)
!11053 = !DILocation(line: 483, column: 12, scope: !11047)
!11054 = !DILocation(line: 483, column: 9, scope: !11047)
!11055 = !DILocation(line: 484, column: 9, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11047, file: !301, line: 484, column: 8)
!11057 = !DILocation(line: 484, column: 8, scope: !11056)
!11058 = !DILocation(line: 484, column: 13, scope: !11056)
!11059 = !DILocation(line: 484, column: 8, scope: !11047)
!11060 = !DILocation(line: 485, column: 5, scope: !11056)
!11061 = !DILocation(line: 486, column: 3, scope: !11047)
!11062 = !DILocation(line: 487, column: 8, scope: !11038)
!11063 = !DILocation(line: 487, column: 11, scope: !11038)
!11064 = !DILocation(line: 488, column: 19, scope: !11038)
!11065 = !DILocation(line: 488, column: 18, scope: !11038)
!11066 = !DILocation(line: 488, column: 23, scope: !11038)
!11067 = !DILocation(line: 488, column: 29, scope: !11038)
!11068 = !DILocation(line: 488, column: 13, scope: !11038)
!11069 = !DILocation(line: 488, column: 8, scope: !11038)
!11070 = !DILocation(line: 488, column: 11, scope: !11038)
!11071 = !DILocation(line: 489, column: 21, scope: !11038)
!11072 = !DILocation(line: 489, column: 17, scope: !11038)
!11073 = !DILocation(line: 489, column: 24, scope: !11038)
!11074 = !DILocation(line: 489, column: 13, scope: !11038)
!11075 = !DILocation(line: 489, column: 8, scope: !11038)
!11076 = !DILocation(line: 489, column: 11, scope: !11038)
!11077 = distinct !{!11077, !11033, !11078}
!11078 = !DILocation(line: 490, column: 2, scope: !316)
!11079 = !DILocation(line: 492, column: 3, scope: !316)
!11080 = !DILocation(line: 492, column: 8, scope: !316)
!11081 = !DILocation(line: 493, column: 9, scope: !316)
!11082 = !DILocation(line: 493, column: 2, scope: !316)
!11083 = distinct !DISubprogram(name: "HX_qsize_backslash", scope: !301, file: !301, line: 383, type: !11084, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!157, !120, !120, !7}
!11086 = !DILocalVariable(name: "s", arg: 1, scope: !11083, file: !301, line: 383, type: !120)
!11087 = !DILocation(line: 383, column: 46, scope: !11083)
!11088 = !DILocalVariable(name: "qchars", arg: 2, scope: !11083, file: !301, line: 383, type: !120)
!11089 = !DILocation(line: 383, column: 61, scope: !11083)
!11090 = !DILocalVariable(name: "cost", arg: 3, scope: !11083, file: !301, line: 384, type: !7)
!11091 = !DILocation(line: 384, column: 18, scope: !11083)
!11092 = !DILocalVariable(name: "p", scope: !11083, file: !301, line: 386, type: !120)
!11093 = !DILocation(line: 386, column: 14, scope: !11083)
!11094 = !DILocation(line: 386, column: 18, scope: !11083)
!11095 = !DILocalVariable(name: "n", scope: !11083, file: !301, line: 387, type: !157)
!11096 = !DILocation(line: 387, column: 9, scope: !11083)
!11097 = !DILocation(line: 387, column: 20, scope: !11083)
!11098 = !DILocation(line: 387, column: 13, scope: !11083)
!11099 = !DILocation(line: 389, column: 2, scope: !11083)
!11100 = !DILocation(line: 389, column: 22, scope: !11083)
!11101 = !DILocation(line: 389, column: 25, scope: !11083)
!11102 = !DILocation(line: 389, column: 14, scope: !11083)
!11103 = !DILocation(line: 389, column: 12, scope: !11083)
!11104 = !DILocation(line: 389, column: 34, scope: !11083)
!11105 = !DILocation(line: 390, column: 8, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11083, file: !301, line: 389, column: 43)
!11107 = !DILocation(line: 390, column: 5, scope: !11106)
!11108 = !DILocation(line: 391, column: 3, scope: !11106)
!11109 = distinct !{!11109, !11099, !11110}
!11110 = !DILocation(line: 392, column: 2, scope: !11083)
!11111 = !DILocation(line: 393, column: 9, scope: !11083)
!11112 = !DILocation(line: 393, column: 2, scope: !11083)
!11113 = distinct !DISubprogram(name: "HX_qsize_html", scope: !301, file: !301, line: 418, type: !11114, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!11114 = !DISubroutineType(types: !11115)
!11115 = !{!157, !120}
!11116 = !DILocalVariable(name: "s", arg: 1, scope: !11113, file: !301, line: 418, type: !120)
!11117 = !DILocation(line: 418, column: 41, scope: !11113)
!11118 = !DILocalVariable(name: "p", scope: !11113, file: !301, line: 420, type: !120)
!11119 = !DILocation(line: 420, column: 14, scope: !11113)
!11120 = !DILocation(line: 420, column: 18, scope: !11113)
!11121 = !DILocalVariable(name: "n", scope: !11113, file: !301, line: 421, type: !157)
!11122 = !DILocation(line: 421, column: 9, scope: !11113)
!11123 = !DILocation(line: 421, column: 20, scope: !11113)
!11124 = !DILocation(line: 421, column: 13, scope: !11113)
!11125 = !DILocation(line: 423, column: 2, scope: !11113)
!11126 = !DILocation(line: 423, column: 22, scope: !11113)
!11127 = !DILocation(line: 423, column: 25, scope: !11113)
!11128 = !DILocation(line: 423, column: 14, scope: !11113)
!11129 = !DILocation(line: 423, column: 12, scope: !11113)
!11130 = !DILocation(line: 423, column: 56, scope: !11113)
!11131 = !DILocation(line: 424, column: 12, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11113, file: !301, line: 423, column: 65)
!11133 = !DILocation(line: 424, column: 11, scope: !11132)
!11134 = !DILocation(line: 424, column: 3, scope: !11132)
!11135 = !DILocation(line: 427, column: 6, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11132, file: !301, line: 424, column: 15)
!11137 = !DILocation(line: 428, column: 4, scope: !11136)
!11138 = !DILocation(line: 430, column: 6, scope: !11136)
!11139 = !DILocation(line: 431, column: 4, scope: !11136)
!11140 = !DILocation(line: 434, column: 6, scope: !11136)
!11141 = !DILocation(line: 435, column: 4, scope: !11136)
!11142 = !DILocation(line: 437, column: 3, scope: !11132)
!11143 = distinct !{!11143, !11125, !11144}
!11144 = !DILocation(line: 438, column: 2, scope: !11113)
!11145 = !DILocation(line: 439, column: 9, scope: !11113)
!11146 = !DILocation(line: 439, column: 2, scope: !11113)
!11147 = distinct !DISubprogram(name: "HX_strupper", scope: !301, file: !301, line: 560, type: !9899, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !300, retainedNodes: !117)
!11148 = !DILocalVariable(name: "orig", arg: 1, scope: !11147, file: !301, line: 560, type: !92)
!11149 = !DILocation(line: 560, column: 39, scope: !11147)
!11150 = !DILocalVariable(name: "expr", scope: !11147, file: !301, line: 562, type: !92)
!11151 = !DILocation(line: 562, column: 8, scope: !11147)
!11152 = !DILocation(line: 563, column: 14, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11147, file: !301, line: 563, column: 2)
!11154 = !DILocation(line: 563, column: 12, scope: !11153)
!11155 = !DILocation(line: 563, column: 7, scope: !11153)
!11156 = !DILocation(line: 563, column: 21, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11153, file: !301, line: 563, column: 2)
!11158 = !DILocation(line: 563, column: 20, scope: !11157)
!11159 = !DILocation(line: 563, column: 26, scope: !11157)
!11160 = !DILocation(line: 563, column: 2, scope: !11153)
!11161 = !DILocation(line: 564, column: 23, scope: !11157)
!11162 = !DILocation(line: 564, column: 22, scope: !11157)
!11163 = !DILocation(line: 564, column: 11, scope: !11157)
!11164 = !DILocation(line: 564, column: 4, scope: !11157)
!11165 = !DILocation(line: 564, column: 9, scope: !11157)
!11166 = !DILocation(line: 564, column: 3, scope: !11157)
!11167 = !DILocation(line: 563, column: 35, scope: !11157)
!11168 = !DILocation(line: 563, column: 2, scope: !11157)
!11169 = distinct !{!11169, !11160, !11170}
!11170 = !DILocation(line: 564, column: 27, scope: !11153)
!11171 = !DILocation(line: 565, column: 9, scope: !11147)
!11172 = !DILocation(line: 565, column: 2, scope: !11147)
!11173 = distinct !DISubprogram(name: "HX_toupper", scope: !1396, file: !1396, line: 77, type: !10528, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !300, retainedNodes: !117)
!11174 = !DILocalVariable(name: "c", arg: 1, scope: !11173, file: !1396, line: 77, type: !231)
!11175 = !DILocation(line: 77, column: 54, scope: !11173)
!11176 = !DILocation(line: 79, column: 17, scope: !11173)
!11177 = !DILocation(line: 79, column: 9, scope: !11173)
!11178 = !DILocation(line: 79, column: 2, scope: !11173)
!11179 = distinct !DISubprogram(name: "HX_diff_timespec", scope: !383, file: !383, line: 26, type: !11180, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !382, retainedNodes: !117)
!11180 = !DISubroutineType(types: !11181)
!11181 = !{null, !11182, !11187, !11187}
!11182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11183, size: 64)
!11183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2355, line: 120, size: 128, elements: !11184)
!11184 = !{!11185, !11186}
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11183, file: !2355, line: 122, baseType: !2358, size: 64)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11183, file: !2355, line: 123, baseType: !2360, size: 64, offset: 64)
!11187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11188, size: 64)
!11188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11183)
!11189 = !DILocalVariable(name: "delta", arg: 1, scope: !11179, file: !383, line: 26, type: !11182)
!11190 = !DILocation(line: 26, column: 54, scope: !11179)
!11191 = !DILocalVariable(name: "future", arg: 2, scope: !11179, file: !383, line: 27, type: !11187)
!11192 = !DILocation(line: 27, column: 28, scope: !11179)
!11193 = !DILocalVariable(name: "past", arg: 3, scope: !11179, file: !383, line: 27, type: !11187)
!11194 = !DILocation(line: 27, column: 59, scope: !11179)
!11195 = !DILocation(line: 29, column: 19, scope: !11179)
!11196 = !DILocation(line: 29, column: 27, scope: !11179)
!11197 = !DILocation(line: 29, column: 37, scope: !11179)
!11198 = !DILocation(line: 29, column: 43, scope: !11179)
!11199 = !DILocation(line: 29, column: 35, scope: !11179)
!11200 = !DILocation(line: 29, column: 2, scope: !11179)
!11201 = !DILocation(line: 29, column: 9, scope: !11179)
!11202 = !DILocation(line: 29, column: 17, scope: !11179)
!11203 = !DILocation(line: 30, column: 19, scope: !11179)
!11204 = !DILocation(line: 30, column: 27, scope: !11179)
!11205 = !DILocation(line: 30, column: 37, scope: !11179)
!11206 = !DILocation(line: 30, column: 43, scope: !11179)
!11207 = !DILocation(line: 30, column: 35, scope: !11179)
!11208 = !DILocation(line: 30, column: 2, scope: !11179)
!11209 = !DILocation(line: 30, column: 9, scope: !11179)
!11210 = !DILocation(line: 30, column: 17, scope: !11179)
!11211 = !DILocation(line: 31, column: 6, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11179, file: !383, line: 31, column: 6)
!11213 = !DILocation(line: 31, column: 14, scope: !11212)
!11214 = !DILocation(line: 31, column: 23, scope: !11212)
!11215 = !DILocation(line: 31, column: 29, scope: !11212)
!11216 = !DILocation(line: 31, column: 21, scope: !11212)
!11217 = !DILocation(line: 31, column: 36, scope: !11212)
!11218 = !DILocation(line: 31, column: 40, scope: !11212)
!11219 = !DILocation(line: 31, column: 48, scope: !11212)
!11220 = !DILocation(line: 31, column: 58, scope: !11212)
!11221 = !DILocation(line: 31, column: 64, scope: !11212)
!11222 = !DILocation(line: 31, column: 55, scope: !11212)
!11223 = !DILocation(line: 31, column: 71, scope: !11212)
!11224 = !DILocation(line: 32, column: 6, scope: !11212)
!11225 = !DILocation(line: 32, column: 14, scope: !11212)
!11226 = !DILocation(line: 32, column: 24, scope: !11212)
!11227 = !DILocation(line: 32, column: 30, scope: !11212)
!11228 = !DILocation(line: 32, column: 22, scope: !11212)
!11229 = !DILocation(line: 31, column: 6, scope: !11179)
!11230 = !DILocation(line: 33, column: 7, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !383, line: 33, column: 7)
!11232 = distinct !DILexicalBlock(scope: !11212, file: !383, line: 32, column: 40)
!11233 = !DILocation(line: 33, column: 15, scope: !11231)
!11234 = !DILocation(line: 33, column: 25, scope: !11231)
!11235 = !DILocation(line: 33, column: 31, scope: !11231)
!11236 = !DILocation(line: 33, column: 23, scope: !11231)
!11237 = !DILocation(line: 33, column: 7, scope: !11232)
!11238 = !DILocation(line: 34, column: 35, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11231, file: !383, line: 33, column: 40)
!11240 = !DILocation(line: 34, column: 42, scope: !11239)
!11241 = !DILocation(line: 34, column: 33, scope: !11239)
!11242 = !DILocation(line: 34, column: 4, scope: !11239)
!11243 = !DILocation(line: 34, column: 11, scope: !11239)
!11244 = !DILocation(line: 34, column: 19, scope: !11239)
!11245 = !DILocation(line: 35, column: 6, scope: !11239)
!11246 = !DILocation(line: 35, column: 13, scope: !11239)
!11247 = !DILocation(line: 35, column: 4, scope: !11239)
!11248 = !DILocation(line: 36, column: 3, scope: !11239)
!11249 = !DILocation(line: 37, column: 7, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11232, file: !383, line: 37, column: 7)
!11251 = !DILocation(line: 37, column: 14, scope: !11250)
!11252 = !DILocation(line: 37, column: 21, scope: !11250)
!11253 = !DILocation(line: 37, column: 7, scope: !11232)
!11254 = !DILocation(line: 38, column: 4, scope: !11250)
!11255 = !DILocation(line: 38, column: 11, scope: !11250)
!11256 = !DILocation(line: 38, column: 19, scope: !11250)
!11257 = !DILocation(line: 39, column: 2, scope: !11232)
!11258 = !DILocation(line: 39, column: 13, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11212, file: !383, line: 39, column: 13)
!11260 = !DILocation(line: 39, column: 20, scope: !11259)
!11261 = !DILocation(line: 39, column: 28, scope: !11259)
!11262 = !DILocation(line: 39, column: 13, scope: !11212)
!11263 = !DILocation(line: 40, column: 3, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11259, file: !383, line: 39, column: 33)
!11265 = !DILocation(line: 40, column: 10, scope: !11264)
!11266 = !DILocation(line: 40, column: 18, scope: !11264)
!11267 = !DILocation(line: 41, column: 5, scope: !11264)
!11268 = !DILocation(line: 41, column: 12, scope: !11264)
!11269 = !DILocation(line: 41, column: 3, scope: !11264)
!11270 = !DILocation(line: 42, column: 2, scope: !11264)
!11271 = !DILocation(line: 43, column: 1, scope: !11179)
!11272 = distinct !DISubprogram(name: "HX_diff_timeval", scope: !383, file: !383, line: 47, type: !11273, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !382, retainedNodes: !117)
!11273 = !DISubroutineType(types: !11274)
!11274 = !{null, !11275, !11280, !11280}
!11275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11276, size: 64)
!11276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !9599, line: 30, size: 128, elements: !11277)
!11277 = !{!11278, !11279}
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11276, file: !9599, line: 32, baseType: !2358, size: 64)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !11276, file: !9599, line: 33, baseType: !9603, size: 64, offset: 64)
!11280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11281, size: 64)
!11281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11276)
!11282 = !DILocalVariable(name: "delta", arg: 1, scope: !11272, file: !383, line: 47, type: !11275)
!11283 = !DILocation(line: 47, column: 52, scope: !11272)
!11284 = !DILocalVariable(name: "future", arg: 2, scope: !11272, file: !383, line: 48, type: !11280)
!11285 = !DILocation(line: 48, column: 27, scope: !11272)
!11286 = !DILocalVariable(name: "past", arg: 3, scope: !11272, file: !383, line: 48, type: !11280)
!11287 = !DILocation(line: 48, column: 57, scope: !11272)
!11288 = !DILocation(line: 50, column: 19, scope: !11272)
!11289 = !DILocation(line: 50, column: 27, scope: !11272)
!11290 = !DILocation(line: 50, column: 37, scope: !11272)
!11291 = !DILocation(line: 50, column: 43, scope: !11272)
!11292 = !DILocation(line: 50, column: 35, scope: !11272)
!11293 = !DILocation(line: 50, column: 2, scope: !11272)
!11294 = !DILocation(line: 50, column: 9, scope: !11272)
!11295 = !DILocation(line: 50, column: 17, scope: !11272)
!11296 = !DILocation(line: 51, column: 19, scope: !11272)
!11297 = !DILocation(line: 51, column: 27, scope: !11272)
!11298 = !DILocation(line: 51, column: 37, scope: !11272)
!11299 = !DILocation(line: 51, column: 43, scope: !11272)
!11300 = !DILocation(line: 51, column: 35, scope: !11272)
!11301 = !DILocation(line: 51, column: 2, scope: !11272)
!11302 = !DILocation(line: 51, column: 9, scope: !11272)
!11303 = !DILocation(line: 51, column: 17, scope: !11272)
!11304 = !DILocation(line: 52, column: 6, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11272, file: !383, line: 52, column: 6)
!11306 = !DILocation(line: 52, column: 14, scope: !11305)
!11307 = !DILocation(line: 52, column: 23, scope: !11305)
!11308 = !DILocation(line: 52, column: 29, scope: !11305)
!11309 = !DILocation(line: 52, column: 21, scope: !11305)
!11310 = !DILocation(line: 52, column: 36, scope: !11305)
!11311 = !DILocation(line: 52, column: 40, scope: !11305)
!11312 = !DILocation(line: 52, column: 48, scope: !11305)
!11313 = !DILocation(line: 52, column: 58, scope: !11305)
!11314 = !DILocation(line: 52, column: 64, scope: !11305)
!11315 = !DILocation(line: 52, column: 55, scope: !11305)
!11316 = !DILocation(line: 52, column: 71, scope: !11305)
!11317 = !DILocation(line: 53, column: 6, scope: !11305)
!11318 = !DILocation(line: 53, column: 14, scope: !11305)
!11319 = !DILocation(line: 53, column: 24, scope: !11305)
!11320 = !DILocation(line: 53, column: 30, scope: !11305)
!11321 = !DILocation(line: 53, column: 22, scope: !11305)
!11322 = !DILocation(line: 52, column: 6, scope: !11272)
!11323 = !DILocation(line: 54, column: 7, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !383, line: 54, column: 7)
!11325 = distinct !DILexicalBlock(scope: !11305, file: !383, line: 53, column: 40)
!11326 = !DILocation(line: 54, column: 15, scope: !11324)
!11327 = !DILocation(line: 54, column: 25, scope: !11324)
!11328 = !DILocation(line: 54, column: 31, scope: !11324)
!11329 = !DILocation(line: 54, column: 23, scope: !11324)
!11330 = !DILocation(line: 54, column: 7, scope: !11325)
!11331 = !DILocation(line: 55, column: 36, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11324, file: !383, line: 54, column: 40)
!11333 = !DILocation(line: 55, column: 43, scope: !11332)
!11334 = !DILocation(line: 55, column: 34, scope: !11332)
!11335 = !DILocation(line: 55, column: 4, scope: !11332)
!11336 = !DILocation(line: 55, column: 11, scope: !11332)
!11337 = !DILocation(line: 55, column: 19, scope: !11332)
!11338 = !DILocation(line: 56, column: 6, scope: !11332)
!11339 = !DILocation(line: 56, column: 13, scope: !11332)
!11340 = !DILocation(line: 56, column: 4, scope: !11332)
!11341 = !DILocation(line: 57, column: 3, scope: !11332)
!11342 = !DILocation(line: 58, column: 7, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11325, file: !383, line: 58, column: 7)
!11344 = !DILocation(line: 58, column: 14, scope: !11343)
!11345 = !DILocation(line: 58, column: 21, scope: !11343)
!11346 = !DILocation(line: 58, column: 7, scope: !11325)
!11347 = !DILocation(line: 59, column: 4, scope: !11343)
!11348 = !DILocation(line: 59, column: 11, scope: !11343)
!11349 = !DILocation(line: 59, column: 19, scope: !11343)
!11350 = !DILocation(line: 60, column: 2, scope: !11325)
!11351 = !DILocation(line: 60, column: 13, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11305, file: !383, line: 60, column: 13)
!11353 = !DILocation(line: 60, column: 20, scope: !11352)
!11354 = !DILocation(line: 60, column: 28, scope: !11352)
!11355 = !DILocation(line: 60, column: 13, scope: !11305)
!11356 = !DILocation(line: 61, column: 3, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11352, file: !383, line: 60, column: 33)
!11358 = !DILocation(line: 61, column: 10, scope: !11357)
!11359 = !DILocation(line: 61, column: 18, scope: !11357)
!11360 = !DILocation(line: 62, column: 5, scope: !11357)
!11361 = !DILocation(line: 62, column: 12, scope: !11357)
!11362 = !DILocation(line: 62, column: 3, scope: !11357)
!11363 = !DILocation(line: 63, column: 2, scope: !11357)
!11364 = !DILocation(line: 64, column: 1, scope: !11272)
!11365 = distinct !DISubprogram(name: "HX_time_compare", scope: !383, file: !383, line: 67, type: !11366, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !382, retainedNodes: !117)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!95, !11368, !11368, !93}
!11368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11369, size: 64)
!11369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11370)
!11370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2332, line: 46, size: 1152, elements: !11371)
!11371 = !{!11372, !11373, !11374, !11375, !11376, !11377, !11378, !11379, !11380, !11381, !11382, !11383, !11384, !11385, !11386}
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11370, file: !2332, line: 48, baseType: !2335, size: 64)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11370, file: !2332, line: 53, baseType: !2337, size: 64, offset: 64)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11370, file: !2332, line: 61, baseType: !2339, size: 64, offset: 128)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11370, file: !2332, line: 62, baseType: !2341, size: 32, offset: 192)
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11370, file: !2332, line: 64, baseType: !2343, size: 32, offset: 224)
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11370, file: !2332, line: 65, baseType: !2345, size: 32, offset: 256)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !11370, file: !2332, line: 67, baseType: !14, size: 32, offset: 288)
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11370, file: !2332, line: 69, baseType: !2335, size: 64, offset: 320)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11370, file: !2332, line: 74, baseType: !2029, size: 64, offset: 384)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11370, file: !2332, line: 78, baseType: !2350, size: 64, offset: 448)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11370, file: !2332, line: 80, baseType: !2352, size: 64, offset: 512)
!11383 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11370, file: !2332, line: 91, baseType: !11183, size: 128, offset: 576)
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11370, file: !2332, line: 92, baseType: !11183, size: 128, offset: 704)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11370, file: !2332, line: 93, baseType: !11183, size: 128, offset: 832)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !11370, file: !2332, line: 106, baseType: !2364, size: 192, offset: 960)
!11387 = !DILocalVariable(name: "a", arg: 1, scope: !11365, file: !383, line: 67, type: !11368)
!11388 = !DILocation(line: 67, column: 55, scope: !11365)
!11389 = !DILocalVariable(name: "b", arg: 2, scope: !11365, file: !383, line: 68, type: !11368)
!11390 = !DILocation(line: 68, column: 24, scope: !11365)
!11391 = !DILocalVariable(name: "sel", arg: 3, scope: !11365, file: !383, line: 68, type: !93)
!11392 = !DILocation(line: 68, column: 32, scope: !11365)
!11393 = !DILocalVariable(name: "r", scope: !11365, file: !383, line: 70, type: !95)
!11394 = !DILocation(line: 70, column: 7, scope: !11365)
!11395 = !DILocation(line: 88, column: 6, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11365, file: !383, line: 88, column: 6)
!11397 = !DILocation(line: 88, column: 10, scope: !11396)
!11398 = !DILocation(line: 88, column: 6, scope: !11365)
!11399 = !DILocation(line: 89, column: 16, scope: !11396)
!11400 = !DILocation(line: 89, column: 19, scope: !11396)
!11401 = !DILocation(line: 89, column: 27, scope: !11396)
!11402 = !DILocation(line: 89, column: 36, scope: !11396)
!11403 = !DILocation(line: 89, column: 39, scope: !11396)
!11404 = !DILocation(line: 89, column: 47, scope: !11396)
!11405 = !DILocation(line: 89, column: 34, scope: !11396)
!11406 = !DILocation(line: 89, column: 14, scope: !11396)
!11407 = !DILocation(line: 89, column: 55, scope: !11396)
!11408 = !DILocation(line: 89, column: 10, scope: !11396)
!11409 = !DILocation(line: 90, column: 10, scope: !11396)
!11410 = !DILocation(line: 90, column: 14, scope: !11396)
!11411 = !DILocation(line: 90, column: 17, scope: !11396)
!11412 = !DILocation(line: 90, column: 25, scope: !11396)
!11413 = !DILocation(line: 90, column: 35, scope: !11396)
!11414 = !DILocation(line: 90, column: 38, scope: !11396)
!11415 = !DILocation(line: 90, column: 46, scope: !11396)
!11416 = !DILocation(line: 90, column: 33, scope: !11396)
!11417 = !DILocation(line: 89, column: 3, scope: !11396)
!11418 = !DILocation(line: 96, column: 11, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11396, file: !383, line: 96, column: 11)
!11420 = !DILocation(line: 96, column: 15, scope: !11419)
!11421 = !DILocation(line: 96, column: 11, scope: !11396)
!11422 = !DILocation(line: 97, column: 16, scope: !11419)
!11423 = !DILocation(line: 97, column: 19, scope: !11419)
!11424 = !DILocation(line: 97, column: 27, scope: !11419)
!11425 = !DILocation(line: 97, column: 36, scope: !11419)
!11426 = !DILocation(line: 97, column: 39, scope: !11419)
!11427 = !DILocation(line: 97, column: 47, scope: !11419)
!11428 = !DILocation(line: 97, column: 34, scope: !11419)
!11429 = !DILocation(line: 97, column: 14, scope: !11419)
!11430 = !DILocation(line: 97, column: 55, scope: !11419)
!11431 = !DILocation(line: 97, column: 10, scope: !11419)
!11432 = !DILocation(line: 98, column: 10, scope: !11419)
!11433 = !DILocation(line: 98, column: 14, scope: !11419)
!11434 = !DILocation(line: 98, column: 17, scope: !11419)
!11435 = !DILocation(line: 98, column: 25, scope: !11419)
!11436 = !DILocation(line: 98, column: 35, scope: !11419)
!11437 = !DILocation(line: 98, column: 38, scope: !11419)
!11438 = !DILocation(line: 98, column: 46, scope: !11419)
!11439 = !DILocation(line: 98, column: 33, scope: !11419)
!11440 = !DILocation(line: 97, column: 3, scope: !11419)
!11441 = !DILocation(line: 99, column: 11, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11419, file: !383, line: 99, column: 11)
!11443 = !DILocation(line: 99, column: 15, scope: !11442)
!11444 = !DILocation(line: 99, column: 11, scope: !11419)
!11445 = !DILocation(line: 100, column: 16, scope: !11442)
!11446 = !DILocation(line: 100, column: 19, scope: !11442)
!11447 = !DILocation(line: 100, column: 27, scope: !11442)
!11448 = !DILocation(line: 100, column: 36, scope: !11442)
!11449 = !DILocation(line: 100, column: 39, scope: !11442)
!11450 = !DILocation(line: 100, column: 47, scope: !11442)
!11451 = !DILocation(line: 100, column: 34, scope: !11442)
!11452 = !DILocation(line: 100, column: 14, scope: !11442)
!11453 = !DILocation(line: 100, column: 55, scope: !11442)
!11454 = !DILocation(line: 100, column: 10, scope: !11442)
!11455 = !DILocation(line: 101, column: 10, scope: !11442)
!11456 = !DILocation(line: 101, column: 14, scope: !11442)
!11457 = !DILocation(line: 101, column: 17, scope: !11442)
!11458 = !DILocation(line: 101, column: 25, scope: !11442)
!11459 = !DILocation(line: 101, column: 35, scope: !11442)
!11460 = !DILocation(line: 101, column: 38, scope: !11442)
!11461 = !DILocation(line: 101, column: 46, scope: !11442)
!11462 = !DILocation(line: 101, column: 33, scope: !11442)
!11463 = !DILocation(line: 100, column: 3, scope: !11442)
!11464 = !DILocation(line: 131, column: 2, scope: !11365)
!11465 = !DILocation(line: 132, column: 1, scope: !11365)
!11466 = distinct !DISubprogram(name: "HXproc_run_async", scope: !390, file: !390, line: 111, type: !11467, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !389, retainedNodes: !117)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{!14, !135, !11469}
!11469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11470, size: 64)
!11470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXproc", file: !393, line: 30, size: 320, elements: !11471)
!11471 = !{!11472, !11480, !11481, !11482, !11483, !11484, !11485, !11486, !11487, !11488}
!11472 = !DIDerivedType(tag: DW_TAG_member, name: "p_ops", scope: !11470, file: !393, line: 31, baseType: !11473, size: 64)
!11473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11474, size: 64)
!11474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11475)
!11475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HXproc_ops", file: !393, line: 24, size: 192, elements: !11476)
!11476 = !{!11477, !11478, !11479}
!11477 = !DIDerivedType(tag: DW_TAG_member, name: "p_prefork", scope: !11475, file: !393, line: 25, baseType: !165, size: 64)
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "p_postfork", scope: !11475, file: !393, line: 26, baseType: !165, size: 64, offset: 64)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "p_complete", scope: !11475, file: !393, line: 27, baseType: !165, size: 64, offset: 128)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "p_data", scope: !11470, file: !393, line: 32, baseType: !89, size: 64, offset: 64)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "p_flags", scope: !11470, file: !393, line: 33, baseType: !7, size: 32, offset: 128)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "p_stdin", scope: !11470, file: !393, line: 35, baseType: !14, size: 32, offset: 160)
!11483 = !DIDerivedType(tag: DW_TAG_member, name: "p_stdout", scope: !11470, file: !393, line: 35, baseType: !14, size: 32, offset: 192)
!11484 = !DIDerivedType(tag: DW_TAG_member, name: "p_stderr", scope: !11470, file: !393, line: 35, baseType: !14, size: 32, offset: 224)
!11485 = !DIDerivedType(tag: DW_TAG_member, name: "p_pid", scope: !11470, file: !393, line: 36, baseType: !14, size: 32, offset: 256)
!11486 = !DIDerivedType(tag: DW_TAG_member, name: "p_status", scope: !11470, file: !393, line: 37, baseType: !93, size: 8, offset: 288)
!11487 = !DIDerivedType(tag: DW_TAG_member, name: "p_exited", scope: !11470, file: !393, line: 38, baseType: !141, size: 8, offset: 296)
!11488 = !DIDerivedType(tag: DW_TAG_member, name: "p_terminated", scope: !11470, file: !393, line: 38, baseType: !141, size: 8, offset: 304)
!11489 = !DILocalVariable(name: "argv", arg: 1, scope: !11466, file: !390, line: 111, type: !135)
!11490 = !DILocation(line: 111, column: 55, scope: !11466)
!11491 = !DILocalVariable(name: "proc", arg: 2, scope: !11466, file: !390, line: 111, type: !11469)
!11492 = !DILocation(line: 111, column: 76, scope: !11466)
!11493 = !DILocalVariable(name: "pipes", scope: !11466, file: !390, line: 113, type: !11494)
!11494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 192, elements: !11495)
!11495 = !{!2366, !123}
!11496 = !DILocation(line: 113, column: 6, scope: !11466)
!11497 = !DILocalVariable(name: "nullfd", scope: !11466, file: !390, line: 113, type: !14)
!11498 = !DILocation(line: 113, column: 19, scope: !11466)
!11499 = !DILocalVariable(name: "ret", scope: !11466, file: !390, line: 113, type: !14)
!11500 = !DILocation(line: 113, column: 32, scope: !11466)
!11501 = !DILocalVariable(name: "saved_errno", scope: !11466, file: !390, line: 113, type: !14)
!11502 = !DILocation(line: 113, column: 37, scope: !11466)
!11503 = !DILocalVariable(name: "t", scope: !11466, file: !390, line: 114, type: !7)
!11504 = !DILocation(line: 114, column: 15, scope: !11466)
!11505 = !DILocation(line: 116, column: 6, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 116, column: 6)
!11507 = !DILocation(line: 116, column: 11, scope: !11506)
!11508 = !DILocation(line: 116, column: 19, scope: !11506)
!11509 = !DILocation(line: 116, column: 23, scope: !11506)
!11510 = !DILocation(line: 116, column: 22, scope: !11506)
!11511 = !DILocation(line: 116, column: 28, scope: !11506)
!11512 = !DILocation(line: 116, column: 6, scope: !11466)
!11513 = !DILocation(line: 117, column: 3, scope: !11506)
!11514 = !DILocation(line: 119, column: 35, scope: !11466)
!11515 = !DILocation(line: 119, column: 41, scope: !11466)
!11516 = !DILocation(line: 119, column: 50, scope: !11466)
!11517 = !DILocation(line: 119, column: 18, scope: !11466)
!11518 = !DILocation(line: 119, column: 24, scope: !11466)
!11519 = !DILocation(line: 119, column: 33, scope: !11466)
!11520 = !DILocation(line: 119, column: 2, scope: !11466)
!11521 = !DILocation(line: 119, column: 8, scope: !11466)
!11522 = !DILocation(line: 119, column: 16, scope: !11466)
!11523 = !DILocation(line: 121, column: 8, scope: !11466)
!11524 = !DILocation(line: 121, column: 14, scope: !11466)
!11525 = !DILocation(line: 121, column: 22, scope: !11466)
!11526 = !DILocation(line: 121, column: 60, scope: !11466)
!11527 = !DILocation(line: 121, column: 5, scope: !11466)
!11528 = !DILocation(line: 123, column: 8, scope: !11466)
!11529 = !DILocation(line: 123, column: 14, scope: !11466)
!11530 = !DILocation(line: 123, column: 22, scope: !11466)
!11531 = !DILocation(line: 123, column: 62, scope: !11466)
!11532 = !DILocation(line: 123, column: 4, scope: !11466)
!11533 = !DILocation(line: 125, column: 8, scope: !11466)
!11534 = !DILocation(line: 125, column: 14, scope: !11466)
!11535 = !DILocation(line: 125, column: 22, scope: !11466)
!11536 = !DILocation(line: 125, column: 62, scope: !11466)
!11537 = !DILocation(line: 125, column: 4, scope: !11466)
!11538 = !DILocation(line: 127, column: 6, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 127, column: 6)
!11540 = !DILocation(line: 127, column: 8, scope: !11539)
!11541 = !DILocation(line: 127, column: 6, scope: !11466)
!11542 = !DILocation(line: 128, column: 3, scope: !11539)
!11543 = !DILocation(line: 130, column: 6, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 130, column: 6)
!11545 = !DILocation(line: 130, column: 12, scope: !11544)
!11546 = !DILocation(line: 130, column: 20, scope: !11544)
!11547 = !DILocation(line: 130, column: 6, scope: !11466)
!11548 = !DILocation(line: 132, column: 17, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !390, line: 132, column: 7)
!11550 = distinct !DILexicalBlock(scope: !11544, file: !390, line: 131, column: 27)
!11551 = !DILocation(line: 132, column: 15, scope: !11549)
!11552 = !DILocation(line: 132, column: 44, scope: !11549)
!11553 = !DILocation(line: 132, column: 7, scope: !11550)
!11554 = !DILocation(line: 133, column: 12, scope: !11549)
!11555 = !DILocation(line: 133, column: 11, scope: !11549)
!11556 = !DILocation(line: 133, column: 4, scope: !11549)
!11557 = !DILocation(line: 134, column: 2, scope: !11550)
!11558 = !DILocation(line: 135, column: 32, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 135, column: 6)
!11560 = !DILocation(line: 135, column: 38, scope: !11559)
!11561 = !DILocation(line: 135, column: 13, scope: !11559)
!11562 = !DILocation(line: 135, column: 11, scope: !11559)
!11563 = !DILocation(line: 135, column: 46, scope: !11559)
!11564 = !DILocation(line: 135, column: 6, scope: !11466)
!11565 = !DILocation(line: 136, column: 17, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11559, file: !390, line: 135, column: 52)
!11567 = !DILocation(line: 136, column: 15, scope: !11566)
!11568 = !DILocation(line: 137, column: 7, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11566, file: !390, line: 137, column: 7)
!11570 = !DILocation(line: 137, column: 14, scope: !11569)
!11571 = !DILocation(line: 137, column: 7, scope: !11566)
!11572 = !DILocation(line: 138, column: 10, scope: !11569)
!11573 = !DILocation(line: 138, column: 4, scope: !11569)
!11574 = !DILocation(line: 139, column: 11, scope: !11566)
!11575 = !DILocation(line: 139, column: 3, scope: !11566)
!11576 = !DILocation(line: 139, column: 9, scope: !11566)
!11577 = !DILocation(line: 140, column: 10, scope: !11566)
!11578 = !DILocation(line: 140, column: 3, scope: !11566)
!11579 = !DILocation(line: 143, column: 6, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 143, column: 6)
!11581 = !DILocation(line: 143, column: 12, scope: !11580)
!11582 = !DILocation(line: 143, column: 18, scope: !11580)
!11583 = !DILocation(line: 143, column: 26, scope: !11580)
!11584 = !DILocation(line: 143, column: 29, scope: !11580)
!11585 = !DILocation(line: 143, column: 35, scope: !11580)
!11586 = !DILocation(line: 143, column: 42, scope: !11580)
!11587 = !DILocation(line: 143, column: 52, scope: !11580)
!11588 = !DILocation(line: 143, column: 6, scope: !11466)
!11589 = !DILocation(line: 144, column: 3, scope: !11580)
!11590 = !DILocation(line: 144, column: 9, scope: !11580)
!11591 = !DILocation(line: 144, column: 16, scope: !11580)
!11592 = !DILocation(line: 144, column: 26, scope: !11580)
!11593 = !DILocation(line: 144, column: 32, scope: !11580)
!11594 = !DILocation(line: 145, column: 21, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 145, column: 6)
!11596 = !DILocation(line: 145, column: 7, scope: !11595)
!11597 = !DILocation(line: 145, column: 13, scope: !11595)
!11598 = !DILocation(line: 145, column: 19, scope: !11595)
!11599 = !DILocation(line: 145, column: 29, scope: !11595)
!11600 = !DILocation(line: 145, column: 6, scope: !11466)
!11601 = !DILocation(line: 146, column: 17, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11595, file: !390, line: 145, column: 34)
!11603 = !DILocation(line: 146, column: 15, scope: !11602)
!11604 = !DILocation(line: 147, column: 7, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11602, file: !390, line: 147, column: 7)
!11606 = !DILocation(line: 147, column: 13, scope: !11605)
!11607 = !DILocation(line: 147, column: 19, scope: !11605)
!11608 = !DILocation(line: 147, column: 27, scope: !11605)
!11609 = !DILocation(line: 147, column: 30, scope: !11605)
!11610 = !DILocation(line: 147, column: 36, scope: !11605)
!11611 = !DILocation(line: 147, column: 43, scope: !11605)
!11612 = !DILocation(line: 147, column: 54, scope: !11605)
!11613 = !DILocation(line: 147, column: 7, scope: !11602)
!11614 = !DILocation(line: 148, column: 4, scope: !11605)
!11615 = !DILocation(line: 148, column: 10, scope: !11605)
!11616 = !DILocation(line: 148, column: 17, scope: !11605)
!11617 = !DILocation(line: 148, column: 28, scope: !11605)
!11618 = !DILocation(line: 148, column: 34, scope: !11605)
!11619 = !DILocation(line: 149, column: 22, scope: !11602)
!11620 = !DILocation(line: 149, column: 3, scope: !11602)
!11621 = !DILocation(line: 150, column: 7, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11602, file: !390, line: 150, column: 7)
!11623 = !DILocation(line: 150, column: 14, scope: !11622)
!11624 = !DILocation(line: 150, column: 7, scope: !11602)
!11625 = !DILocation(line: 151, column: 10, scope: !11622)
!11626 = !DILocation(line: 151, column: 4, scope: !11622)
!11627 = !DILocation(line: 152, column: 20, scope: !11602)
!11628 = !DILocation(line: 152, column: 12, scope: !11602)
!11629 = !DILocation(line: 152, column: 18, scope: !11602)
!11630 = !DILocation(line: 152, column: 10, scope: !11602)
!11631 = !DILocation(line: 152, column: 3, scope: !11602)
!11632 = !DILocation(line: 153, column: 13, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11595, file: !390, line: 153, column: 13)
!11634 = !DILocation(line: 153, column: 19, scope: !11633)
!11635 = !DILocation(line: 153, column: 25, scope: !11633)
!11636 = !DILocation(line: 153, column: 13, scope: !11595)
!11637 = !DILocalVariable(name: "prog", scope: !11638, file: !390, line: 154, type: !120)
!11638 = distinct !DILexicalBlock(scope: !11633, file: !390, line: 153, column: 31)
!11639 = !DILocation(line: 154, column: 15, scope: !11638)
!11640 = !DILocation(line: 154, column: 23, scope: !11638)
!11641 = !DILocation(line: 154, column: 22, scope: !11638)
!11642 = !DILocation(line: 163, column: 7, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 163, column: 7)
!11644 = !DILocation(line: 163, column: 13, scope: !11643)
!11645 = !DILocation(line: 163, column: 21, scope: !11643)
!11646 = !DILocation(line: 163, column: 7, scope: !11638)
!11647 = !DILocation(line: 164, column: 24, scope: !11643)
!11648 = !DILocation(line: 164, column: 20, scope: !11643)
!11649 = !DILocation(line: 164, column: 4, scope: !11643)
!11650 = !DILocation(line: 164, column: 10, scope: !11643)
!11651 = !DILocation(line: 164, column: 18, scope: !11643)
!11652 = !DILocation(line: 165, column: 12, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11643, file: !390, line: 165, column: 12)
!11654 = !DILocation(line: 165, column: 18, scope: !11653)
!11655 = !DILocation(line: 165, column: 26, scope: !11653)
!11656 = !DILocation(line: 165, column: 12, scope: !11643)
!11657 = !DILocation(line: 166, column: 24, scope: !11653)
!11658 = !DILocation(line: 166, column: 20, scope: !11653)
!11659 = !DILocation(line: 166, column: 4, scope: !11653)
!11660 = !DILocation(line: 166, column: 10, scope: !11653)
!11661 = !DILocation(line: 166, column: 18, scope: !11653)
!11662 = !DILocation(line: 167, column: 7, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 167, column: 7)
!11664 = !DILocation(line: 167, column: 13, scope: !11663)
!11665 = !DILocation(line: 167, column: 21, scope: !11663)
!11666 = !DILocation(line: 167, column: 7, scope: !11638)
!11667 = !DILocation(line: 168, column: 25, scope: !11663)
!11668 = !DILocation(line: 168, column: 21, scope: !11663)
!11669 = !DILocation(line: 168, column: 4, scope: !11663)
!11670 = !DILocation(line: 168, column: 10, scope: !11663)
!11671 = !DILocation(line: 168, column: 19, scope: !11663)
!11672 = !DILocation(line: 169, column: 12, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11663, file: !390, line: 169, column: 12)
!11674 = !DILocation(line: 169, column: 18, scope: !11673)
!11675 = !DILocation(line: 169, column: 26, scope: !11673)
!11676 = !DILocation(line: 169, column: 12, scope: !11663)
!11677 = !DILocation(line: 170, column: 25, scope: !11673)
!11678 = !DILocation(line: 170, column: 21, scope: !11673)
!11679 = !DILocation(line: 170, column: 4, scope: !11673)
!11680 = !DILocation(line: 170, column: 10, scope: !11673)
!11681 = !DILocation(line: 170, column: 19, scope: !11673)
!11682 = !DILocation(line: 171, column: 7, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 171, column: 7)
!11684 = !DILocation(line: 171, column: 13, scope: !11683)
!11685 = !DILocation(line: 171, column: 21, scope: !11683)
!11686 = !DILocation(line: 171, column: 7, scope: !11638)
!11687 = !DILocation(line: 172, column: 25, scope: !11683)
!11688 = !DILocation(line: 172, column: 21, scope: !11683)
!11689 = !DILocation(line: 172, column: 4, scope: !11683)
!11690 = !DILocation(line: 172, column: 10, scope: !11683)
!11691 = !DILocation(line: 172, column: 19, scope: !11683)
!11692 = !DILocation(line: 173, column: 12, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11683, file: !390, line: 173, column: 12)
!11694 = !DILocation(line: 173, column: 18, scope: !11693)
!11695 = !DILocation(line: 173, column: 26, scope: !11693)
!11696 = !DILocation(line: 173, column: 12, scope: !11683)
!11697 = !DILocation(line: 174, column: 25, scope: !11693)
!11698 = !DILocation(line: 174, column: 21, scope: !11693)
!11699 = !DILocation(line: 174, column: 4, scope: !11693)
!11700 = !DILocation(line: 174, column: 10, scope: !11693)
!11701 = !DILocation(line: 174, column: 19, scope: !11693)
!11702 = !DILocation(line: 175, column: 7, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 175, column: 7)
!11704 = !DILocation(line: 175, column: 13, scope: !11703)
!11705 = !DILocation(line: 175, column: 19, scope: !11703)
!11706 = !DILocation(line: 175, column: 27, scope: !11703)
!11707 = !DILocation(line: 175, column: 30, scope: !11703)
!11708 = !DILocation(line: 175, column: 36, scope: !11703)
!11709 = !DILocation(line: 175, column: 43, scope: !11703)
!11710 = !DILocation(line: 175, column: 54, scope: !11703)
!11711 = !DILocation(line: 175, column: 7, scope: !11638)
!11712 = !DILocation(line: 176, column: 4, scope: !11703)
!11713 = !DILocation(line: 176, column: 10, scope: !11703)
!11714 = !DILocation(line: 176, column: 17, scope: !11703)
!11715 = !DILocation(line: 176, column: 28, scope: !11703)
!11716 = !DILocation(line: 176, column: 34, scope: !11703)
!11717 = !DILocation(line: 182, column: 22, scope: !11638)
!11718 = !DILocation(line: 182, column: 3, scope: !11638)
!11719 = !DILocation(line: 183, column: 8, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 183, column: 7)
!11721 = !DILocation(line: 183, column: 14, scope: !11720)
!11722 = !DILocation(line: 183, column: 22, scope: !11720)
!11723 = !DILocation(line: 183, column: 60, scope: !11720)
!11724 = !DILocation(line: 184, column: 7, scope: !11720)
!11725 = !DILocation(line: 184, column: 13, scope: !11720)
!11726 = !DILocation(line: 184, column: 21, scope: !11720)
!11727 = !DILocation(line: 183, column: 7, scope: !11638)
!11728 = !DILocation(line: 185, column: 9, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11720, file: !390, line: 184, column: 38)
!11730 = !DILocation(line: 185, column: 15, scope: !11729)
!11731 = !DILocation(line: 185, column: 4, scope: !11729)
!11732 = !DILocation(line: 186, column: 10, scope: !11729)
!11733 = !DILocation(line: 186, column: 16, scope: !11729)
!11734 = !DILocation(line: 186, column: 4, scope: !11729)
!11735 = !DILocation(line: 187, column: 3, scope: !11729)
!11736 = !DILocation(line: 188, column: 8, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 188, column: 7)
!11738 = !DILocation(line: 188, column: 14, scope: !11737)
!11739 = !DILocation(line: 188, column: 22, scope: !11737)
!11740 = !DILocation(line: 188, column: 62, scope: !11737)
!11741 = !DILocation(line: 189, column: 7, scope: !11737)
!11742 = !DILocation(line: 189, column: 13, scope: !11737)
!11743 = !DILocation(line: 189, column: 22, scope: !11737)
!11744 = !DILocation(line: 188, column: 7, scope: !11638)
!11745 = !DILocation(line: 190, column: 9, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11737, file: !390, line: 189, column: 40)
!11747 = !DILocation(line: 190, column: 15, scope: !11746)
!11748 = !DILocation(line: 190, column: 4, scope: !11746)
!11749 = !DILocation(line: 191, column: 10, scope: !11746)
!11750 = !DILocation(line: 191, column: 16, scope: !11746)
!11751 = !DILocation(line: 191, column: 4, scope: !11746)
!11752 = !DILocation(line: 192, column: 3, scope: !11746)
!11753 = !DILocation(line: 193, column: 8, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 193, column: 7)
!11755 = !DILocation(line: 193, column: 14, scope: !11754)
!11756 = !DILocation(line: 193, column: 22, scope: !11754)
!11757 = !DILocation(line: 193, column: 62, scope: !11754)
!11758 = !DILocation(line: 194, column: 7, scope: !11754)
!11759 = !DILocation(line: 194, column: 13, scope: !11754)
!11760 = !DILocation(line: 194, column: 22, scope: !11754)
!11761 = !DILocation(line: 193, column: 7, scope: !11638)
!11762 = !DILocation(line: 195, column: 9, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11754, file: !390, line: 194, column: 40)
!11764 = !DILocation(line: 195, column: 15, scope: !11763)
!11765 = !DILocation(line: 195, column: 4, scope: !11763)
!11766 = !DILocation(line: 196, column: 10, scope: !11763)
!11767 = !DILocation(line: 196, column: 16, scope: !11763)
!11768 = !DILocation(line: 196, column: 4, scope: !11763)
!11769 = !DILocation(line: 197, column: 3, scope: !11763)
!11770 = !DILocation(line: 198, column: 7, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 198, column: 7)
!11772 = !DILocation(line: 198, column: 14, scope: !11771)
!11773 = !DILocation(line: 198, column: 7, scope: !11638)
!11774 = !DILocation(line: 199, column: 10, scope: !11771)
!11775 = !DILocation(line: 199, column: 4, scope: !11771)
!11776 = !DILocation(line: 200, column: 7, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 200, column: 7)
!11778 = !DILocation(line: 200, column: 13, scope: !11777)
!11779 = !DILocation(line: 200, column: 21, scope: !11777)
!11780 = !DILocation(line: 200, column: 7, scope: !11638)
!11781 = !DILocation(line: 201, column: 4, scope: !11777)
!11782 = !DILocation(line: 202, column: 7, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 202, column: 7)
!11784 = !DILocation(line: 202, column: 13, scope: !11783)
!11785 = !DILocation(line: 202, column: 21, scope: !11783)
!11786 = !DILocation(line: 202, column: 7, scope: !11638)
!11787 = !DILocation(line: 203, column: 10, scope: !11783)
!11788 = !DILocation(line: 203, column: 16, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11783, file: !390, line: 203, column: 16)
!11790 = !DILocation(line: 203, column: 4, scope: !11783)
!11791 = !DILocation(line: 205, column: 11, scope: !11783)
!11792 = !DILocation(line: 205, column: 17, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11783, file: !390, line: 205, column: 17)
!11794 = !DILocation(line: 205, column: 4, scope: !11783)
!11795 = !DILocation(line: 206, column: 7, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11638, file: !390, line: 206, column: 7)
!11797 = !DILocation(line: 206, column: 13, scope: !11796)
!11798 = !DILocation(line: 206, column: 21, scope: !11796)
!11799 = !DILocation(line: 206, column: 7, scope: !11638)
!11800 = !DILocation(line: 207, column: 12, scope: !11796)
!11801 = !DILocation(line: 208, column: 12, scope: !11796)
!11802 = !DILocation(line: 208, column: 27, scope: !11796)
!11803 = !DILocation(line: 208, column: 18, scope: !11796)
!11804 = !DILocation(line: 207, column: 4, scope: !11796)
!11805 = !DILocation(line: 209, column: 3, scope: !11638)
!11806 = !DILocation(line: 212, column: 6, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 212, column: 6)
!11808 = !DILocation(line: 212, column: 12, scope: !11807)
!11809 = !DILocation(line: 212, column: 20, scope: !11807)
!11810 = !DILocation(line: 212, column: 6, scope: !11466)
!11811 = !DILocation(line: 213, column: 9, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11807, file: !390, line: 212, column: 36)
!11813 = !DILocation(line: 213, column: 3, scope: !11812)
!11814 = !DILocation(line: 214, column: 19, scope: !11812)
!11815 = !DILocation(line: 214, column: 3, scope: !11812)
!11816 = !DILocation(line: 214, column: 9, scope: !11812)
!11817 = !DILocation(line: 214, column: 17, scope: !11812)
!11818 = !DILocation(line: 215, column: 2, scope: !11812)
!11819 = !DILocation(line: 216, column: 6, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 216, column: 6)
!11821 = !DILocation(line: 216, column: 12, scope: !11820)
!11822 = !DILocation(line: 216, column: 20, scope: !11820)
!11823 = !DILocation(line: 216, column: 6, scope: !11466)
!11824 = !DILocation(line: 217, column: 9, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11820, file: !390, line: 216, column: 37)
!11826 = !DILocation(line: 217, column: 3, scope: !11825)
!11827 = !DILocation(line: 218, column: 20, scope: !11825)
!11828 = !DILocation(line: 218, column: 3, scope: !11825)
!11829 = !DILocation(line: 218, column: 9, scope: !11825)
!11830 = !DILocation(line: 218, column: 18, scope: !11825)
!11831 = !DILocation(line: 219, column: 2, scope: !11825)
!11832 = !DILocation(line: 220, column: 6, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11466, file: !390, line: 220, column: 6)
!11834 = !DILocation(line: 220, column: 12, scope: !11833)
!11835 = !DILocation(line: 220, column: 20, scope: !11833)
!11836 = !DILocation(line: 220, column: 6, scope: !11466)
!11837 = !DILocation(line: 221, column: 9, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11833, file: !390, line: 220, column: 37)
!11839 = !DILocation(line: 221, column: 3, scope: !11838)
!11840 = !DILocation(line: 222, column: 20, scope: !11838)
!11841 = !DILocation(line: 222, column: 3, scope: !11838)
!11842 = !DILocation(line: 222, column: 9, scope: !11838)
!11843 = !DILocation(line: 222, column: 18, scope: !11838)
!11844 = !DILocation(line: 223, column: 2, scope: !11838)
!11845 = !DILocation(line: 225, column: 2, scope: !11466)
!11846 = !DILocation(line: 226, column: 1, scope: !11466)
!11847 = distinct !DISubprogram(name: "HXproc_build_pipes", scope: !390, file: !390, line: 63, type: !11848, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !389, retainedNodes: !117)
!11848 = !DISubroutineType(types: !11849)
!11849 = !{!14, !11850, !11852}
!11850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11851, size: 64)
!11851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11470)
!11852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11853, size: 64)
!11853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !122)
!11854 = !DILocalVariable(name: "proc", arg: 1, scope: !11847, file: !390, line: 63, type: !11850)
!11855 = !DILocation(line: 63, column: 59, scope: !11847)
!11856 = !DILocalVariable(name: "p", arg: 2, scope: !11847, file: !390, line: 63, type: !11852)
!11857 = !DILocation(line: 63, column: 71, scope: !11847)
!11858 = !DILocalVariable(name: "x", scope: !11847, file: !390, line: 65, type: !7)
!11859 = !DILocation(line: 65, column: 15, scope: !11847)
!11860 = !DILocalVariable(name: "y", scope: !11847, file: !390, line: 65, type: !7)
!11861 = !DILocation(line: 65, column: 18, scope: !11847)
!11862 = !DILocation(line: 67, column: 9, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11847, file: !390, line: 67, column: 2)
!11864 = !DILocation(line: 67, column: 7, scope: !11863)
!11865 = !DILocation(line: 67, column: 14, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11863, file: !390, line: 67, column: 2)
!11867 = !DILocation(line: 67, column: 16, scope: !11866)
!11868 = !DILocation(line: 67, column: 2, scope: !11863)
!11869 = !DILocation(line: 68, column: 10, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11866, file: !390, line: 68, column: 3)
!11871 = !DILocation(line: 68, column: 8, scope: !11870)
!11872 = !DILocation(line: 68, column: 15, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11870, file: !390, line: 68, column: 3)
!11874 = !DILocation(line: 68, column: 17, scope: !11873)
!11875 = !DILocation(line: 68, column: 3, scope: !11870)
!11876 = !DILocation(line: 69, column: 4, scope: !11873)
!11877 = !DILocation(line: 69, column: 6, scope: !11873)
!11878 = !DILocation(line: 69, column: 9, scope: !11873)
!11879 = !DILocation(line: 69, column: 12, scope: !11873)
!11880 = !DILocation(line: 68, column: 22, scope: !11873)
!11881 = !DILocation(line: 68, column: 3, scope: !11873)
!11882 = distinct !{!11882, !11875, !11883}
!11883 = !DILocation(line: 69, column: 15, scope: !11870)
!11884 = !DILocation(line: 67, column: 21, scope: !11866)
!11885 = !DILocation(line: 67, column: 2, scope: !11866)
!11886 = distinct !{!11886, !11868, !11887}
!11887 = !DILocation(line: 69, column: 15, scope: !11863)
!11888 = !DILocation(line: 71, column: 7, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11847, file: !390, line: 71, column: 6)
!11890 = !DILocation(line: 71, column: 13, scope: !11889)
!11891 = !DILocation(line: 71, column: 21, scope: !11889)
!11892 = !DILocation(line: 71, column: 37, scope: !11889)
!11893 = !DILocation(line: 71, column: 45, scope: !11889)
!11894 = !DILocation(line: 71, column: 40, scope: !11889)
!11895 = !DILocation(line: 71, column: 51, scope: !11889)
!11896 = !DILocation(line: 71, column: 6, scope: !11847)
!11897 = !DILocation(line: 72, column: 11, scope: !11889)
!11898 = !DILocation(line: 72, column: 10, scope: !11889)
!11899 = !DILocation(line: 72, column: 3, scope: !11889)
!11900 = !DILocation(line: 73, column: 7, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11847, file: !390, line: 73, column: 6)
!11902 = !DILocation(line: 73, column: 13, scope: !11901)
!11903 = !DILocation(line: 73, column: 21, scope: !11901)
!11904 = !DILocation(line: 73, column: 38, scope: !11901)
!11905 = !DILocation(line: 73, column: 46, scope: !11901)
!11906 = !DILocation(line: 73, column: 41, scope: !11901)
!11907 = !DILocation(line: 73, column: 52, scope: !11901)
!11908 = !DILocation(line: 73, column: 6, scope: !11847)
!11909 = !DILocation(line: 74, column: 11, scope: !11901)
!11910 = !DILocation(line: 74, column: 10, scope: !11901)
!11911 = !DILocation(line: 74, column: 3, scope: !11901)
!11912 = !DILocation(line: 75, column: 7, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11847, file: !390, line: 75, column: 6)
!11914 = !DILocation(line: 75, column: 13, scope: !11913)
!11915 = !DILocation(line: 75, column: 21, scope: !11913)
!11916 = !DILocation(line: 75, column: 38, scope: !11913)
!11917 = !DILocation(line: 75, column: 46, scope: !11913)
!11918 = !DILocation(line: 75, column: 41, scope: !11913)
!11919 = !DILocation(line: 75, column: 52, scope: !11913)
!11920 = !DILocation(line: 75, column: 6, scope: !11847)
!11921 = !DILocation(line: 76, column: 11, scope: !11913)
!11922 = !DILocation(line: 76, column: 10, scope: !11913)
!11923 = !DILocation(line: 76, column: 3, scope: !11913)
!11924 = !DILocation(line: 78, column: 2, scope: !11847)
!11925 = !DILocation(line: 79, column: 1, scope: !11847)
!11926 = distinct !DISubprogram(name: "HXproc_close_pipes", scope: !390, file: !390, line: 88, type: !11927, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !389, retainedNodes: !117)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{null, !11852}
!11929 = !DILocalVariable(name: "p", arg: 1, scope: !11926, file: !390, line: 88, type: !11852)
!11930 = !DILocation(line: 88, column: 38, scope: !11926)
!11931 = !DILocation(line: 90, column: 6, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11926, file: !390, line: 90, column: 6)
!11933 = !DILocation(line: 90, column: 14, scope: !11932)
!11934 = !DILocation(line: 90, column: 6, scope: !11926)
!11935 = !DILocation(line: 91, column: 9, scope: !11932)
!11936 = !DILocation(line: 91, column: 3, scope: !11932)
!11937 = !DILocation(line: 92, column: 6, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11926, file: !390, line: 92, column: 6)
!11939 = !DILocation(line: 92, column: 14, scope: !11938)
!11940 = !DILocation(line: 92, column: 6, scope: !11926)
!11941 = !DILocation(line: 93, column: 9, scope: !11938)
!11942 = !DILocation(line: 93, column: 3, scope: !11938)
!11943 = !DILocation(line: 94, column: 6, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11926, file: !390, line: 94, column: 6)
!11945 = !DILocation(line: 94, column: 14, scope: !11944)
!11946 = !DILocation(line: 94, column: 6, scope: !11926)
!11947 = !DILocation(line: 95, column: 9, scope: !11944)
!11948 = !DILocation(line: 95, column: 3, scope: !11944)
!11949 = !DILocation(line: 96, column: 6, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11926, file: !390, line: 96, column: 6)
!11951 = !DILocation(line: 96, column: 14, scope: !11950)
!11952 = !DILocation(line: 96, column: 6, scope: !11926)
!11953 = !DILocation(line: 97, column: 9, scope: !11950)
!11954 = !DILocation(line: 97, column: 3, scope: !11950)
!11955 = !DILocation(line: 98, column: 6, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11926, file: !390, line: 98, column: 6)
!11957 = !DILocation(line: 98, column: 14, scope: !11956)
!11958 = !DILocation(line: 98, column: 6, scope: !11926)
!11959 = !DILocation(line: 99, column: 9, scope: !11956)
!11960 = !DILocation(line: 99, column: 3, scope: !11956)
!11961 = !DILocation(line: 100, column: 6, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11926, file: !390, line: 100, column: 6)
!11963 = !DILocation(line: 100, column: 14, scope: !11962)
!11964 = !DILocation(line: 100, column: 6, scope: !11926)
!11965 = !DILocation(line: 101, column: 9, scope: !11962)
!11966 = !DILocation(line: 101, column: 3, scope: !11962)
!11967 = !DILocation(line: 102, column: 1, scope: !11926)
!11968 = distinct !DISubprogram(name: "HXproc_run_sync", scope: !390, file: !390, line: 228, type: !11969, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !389, retainedNodes: !117)
!11969 = !DISubroutineType(types: !11970)
!11970 = !{!14, !135, !7}
!11971 = !DILocalVariable(name: "argv", arg: 1, scope: !11968, file: !390, line: 228, type: !135)
!11972 = !DILocation(line: 228, column: 54, scope: !11968)
!11973 = !DILocalVariable(name: "flags", arg: 2, scope: !11968, file: !390, line: 228, type: !7)
!11974 = !DILocation(line: 228, column: 73, scope: !11968)
!11975 = !DILocalVariable(name: "proc", scope: !11968, file: !390, line: 230, type: !11470)
!11976 = !DILocation(line: 230, column: 16, scope: !11968)
!11977 = !DILocalVariable(name: "ret", scope: !11968, file: !390, line: 231, type: !14)
!11978 = !DILocation(line: 231, column: 6, scope: !11968)
!11979 = !DILocation(line: 233, column: 2, scope: !11968)
!11980 = !DILocation(line: 238, column: 6, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11968, file: !390, line: 238, column: 6)
!11982 = !DILocation(line: 238, column: 12, scope: !11981)
!11983 = !DILocation(line: 238, column: 6, scope: !11968)
!11984 = !DILocation(line: 239, column: 3, scope: !11981)
!11985 = !DILocation(line: 240, column: 17, scope: !11968)
!11986 = !DILocation(line: 240, column: 7, scope: !11968)
!11987 = !DILocation(line: 240, column: 15, scope: !11968)
!11988 = !DILocation(line: 241, column: 30, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11968, file: !390, line: 241, column: 6)
!11990 = !DILocation(line: 241, column: 13, scope: !11989)
!11991 = !DILocation(line: 241, column: 11, scope: !11989)
!11992 = !DILocation(line: 241, column: 44, scope: !11989)
!11993 = !DILocation(line: 241, column: 6, scope: !11968)
!11994 = !DILocation(line: 242, column: 10, scope: !11989)
!11995 = !DILocation(line: 242, column: 3, scope: !11989)
!11996 = !DILocation(line: 243, column: 9, scope: !11968)
!11997 = !DILocation(line: 243, column: 2, scope: !11968)
!11998 = !DILocation(line: 244, column: 1, scope: !11968)
!11999 = distinct !DISubprogram(name: "HXproc_wait", scope: !390, file: !390, line: 246, type: !12000, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !389, retainedNodes: !117)
!12000 = !DISubroutineType(types: !12001)
!12001 = !{!14, !11469}
!12002 = !DILocalVariable(name: "proc", arg: 1, scope: !11999, file: !390, line: 246, type: !11469)
!12003 = !DILocation(line: 246, column: 46, scope: !11999)
!12004 = !DILocalVariable(name: "status", scope: !11999, file: !390, line: 248, type: !14)
!12005 = !DILocation(line: 248, column: 6, scope: !11999)
!12006 = !DILocation(line: 252, column: 14, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11999, file: !390, line: 252, column: 6)
!12008 = !DILocation(line: 252, column: 20, scope: !12007)
!12009 = !DILocation(line: 252, column: 6, scope: !12007)
!12010 = !DILocation(line: 252, column: 39, scope: !12007)
!12011 = !DILocation(line: 252, column: 6, scope: !11999)
!12012 = !DILocation(line: 253, column: 11, scope: !12007)
!12013 = !DILocation(line: 253, column: 10, scope: !12007)
!12014 = !DILocation(line: 253, column: 3, scope: !12007)
!12015 = !DILocation(line: 254, column: 6, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11999, file: !390, line: 254, column: 6)
!12017 = !DILocation(line: 254, column: 12, scope: !12016)
!12018 = !DILocation(line: 254, column: 18, scope: !12016)
!12019 = !DILocation(line: 254, column: 26, scope: !12016)
!12020 = !DILocation(line: 254, column: 29, scope: !12016)
!12021 = !DILocation(line: 254, column: 35, scope: !12016)
!12022 = !DILocation(line: 254, column: 42, scope: !12016)
!12023 = !DILocation(line: 254, column: 53, scope: !12016)
!12024 = !DILocation(line: 254, column: 6, scope: !11999)
!12025 = !DILocation(line: 255, column: 3, scope: !12016)
!12026 = !DILocation(line: 255, column: 9, scope: !12016)
!12027 = !DILocation(line: 255, column: 16, scope: !12016)
!12028 = !DILocation(line: 255, column: 27, scope: !12016)
!12029 = !DILocation(line: 255, column: 33, scope: !12016)
!12030 = !DILocation(line: 257, column: 24, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !11999, file: !390, line: 257, column: 6)
!12032 = !DILocation(line: 257, column: 7, scope: !12031)
!12033 = !DILocation(line: 257, column: 13, scope: !12031)
!12034 = !DILocation(line: 257, column: 22, scope: !12031)
!12035 = !DILocation(line: 257, column: 6, scope: !11999)
!12036 = !DILocation(line: 258, column: 20, scope: !12031)
!12037 = !DILocation(line: 258, column: 3, scope: !12031)
!12038 = !DILocation(line: 258, column: 9, scope: !12031)
!12039 = !DILocation(line: 258, column: 18, scope: !12031)
!12040 = !DILocation(line: 259, column: 28, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !11999, file: !390, line: 259, column: 6)
!12042 = !DILocation(line: 259, column: 7, scope: !12041)
!12043 = !DILocation(line: 259, column: 13, scope: !12041)
!12044 = !DILocation(line: 259, column: 26, scope: !12041)
!12045 = !DILocation(line: 259, column: 6, scope: !11999)
!12046 = !DILocation(line: 260, column: 20, scope: !12041)
!12047 = !DILocation(line: 260, column: 3, scope: !12041)
!12048 = !DILocation(line: 260, column: 9, scope: !12041)
!12049 = !DILocation(line: 260, column: 18, scope: !12041)
!12050 = !DILocation(line: 261, column: 6, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !11999, file: !390, line: 261, column: 6)
!12052 = !DILocation(line: 261, column: 12, scope: !12051)
!12053 = !DILocation(line: 261, column: 6, scope: !11999)
!12054 = !DILocation(line: 262, column: 10, scope: !12051)
!12055 = !DILocation(line: 263, column: 54, scope: !12051)
!12056 = !DILocation(line: 262, column: 3, scope: !12051)
!12057 = !DILocation(line: 264, column: 9, scope: !11999)
!12058 = !DILocation(line: 264, column: 2, scope: !11999)
!12059 = !DILocation(line: 265, column: 1, scope: !11999)

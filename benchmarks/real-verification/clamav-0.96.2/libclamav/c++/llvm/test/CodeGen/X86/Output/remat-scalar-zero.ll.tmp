	.file	"<stdin>"
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI1_0:                               # constant pool double
	.quad	4596373779694328218     # double 2.000000e-01
.LCPI1_1:                               # constant pool double
	.quad	0                       # double 0.000000e+00
	.text
	.globl	foo
	.align	16, 0x90
	.type	foo,@function
foo:                                    # @foo
# BB#0:                                 # %entry
	movsd	(%rdi), %xmm0
	movsd	8(%rdi), %xmm1
	divsd	.LCPI1_1, %xmm0
	movsd	128(%rdi), %xmm2
	movsd	%xmm2, -8(%rsp)         # 8-byte Spill
	movsd	120(%rdi), %xmm3
	movsd	112(%rdi), %xmm4
	movsd	104(%rdi), %xmm5
	movsd	96(%rdi), %xmm6
	movsd	88(%rdi), %xmm7
	movsd	80(%rdi), %xmm8
	movsd	72(%rdi), %xmm9
	movsd	64(%rdi), %xmm10
	movsd	56(%rdi), %xmm11
	movsd	48(%rdi), %xmm12
	movsd	40(%rdi), %xmm13
	movsd	32(%rdi), %xmm14
	movsd	24(%rdi), %xmm15
	movsd	16(%rdi), %xmm2
	movsd	%xmm0, (%rsi)
	movsd	.LCPI1_0(%rip), %xmm0
	divsd	%xmm0, %xmm1
	movsd	%xmm1, 8(%rsi)
	divsd	%xmm0, %xmm2
	movsd	%xmm2, 16(%rsi)
	divsd	%xmm0, %xmm15
	movsd	%xmm15, 24(%rsi)
	divsd	%xmm0, %xmm14
	movsd	%xmm14, 32(%rsi)
	divsd	%xmm0, %xmm13
	movsd	%xmm13, 40(%rsi)
	divsd	%xmm0, %xmm12
	movsd	%xmm12, 48(%rsi)
	divsd	%xmm0, %xmm11
	movsd	%xmm11, 56(%rsi)
	divsd	%xmm0, %xmm10
	movsd	%xmm10, 64(%rsi)
	divsd	%xmm0, %xmm9
	movsd	%xmm9, 72(%rsi)
	divsd	%xmm0, %xmm8
	movsd	%xmm8, 80(%rsi)
	divsd	%xmm0, %xmm7
	movsd	%xmm7, 88(%rsi)
	divsd	%xmm0, %xmm6
	movsd	%xmm6, 96(%rsi)
	divsd	%xmm0, %xmm5
	movsd	%xmm5, 104(%rsi)
	divsd	%xmm0, %xmm4
	movsd	%xmm4, 112(%rsi)
	divsd	%xmm0, %xmm3
	movsd	%xmm3, 120(%rsi)
	movsd	-8(%rsp), %xmm2         # 8-byte Reload
	divsd	.LCPI1_1, %xmm2
	movsd	%xmm2, 128(%rsi)
	ret
	.size	foo, .-foo


	.section	.note.GNU-stack,"",@progbits

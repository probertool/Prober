	.file	"<stdin>"
	.text
	.globl	test1
	.align	16, 0x90
	.type	test1,@function
test1:                                  # @test1
.Leh_func_begin1:
# BB#0:
	movl	8(%esp), %eax
	movaps	(%eax), %xmm1
	movl	4(%esp), %eax
	movaps	(%eax), %xmm2
	movaps	%xmm2, %xmm0
	addps	%xmm1, %xmm0
	subps	%xmm1, %xmm2
	movlhps	%xmm2, %xmm0
	ret
	.size	test1, .-test1
.Leh_func_end1:

	.globl	movhl
	.align	16, 0x90
	.type	movhl,@function
movhl:                                  # @movhl
.Leh_func_begin2:
# BB#0:                                 # %entry
	movl	4(%esp), %eax
	movaps	(%eax), %xmm1
	movl	8(%esp), %eax
	movaps	(%eax), %xmm0
	movhlps	%xmm1, %xmm0
	ret
	.size	movhl, .-movhl
.Leh_func_end2:

	.section	.eh_frame,"aw",@progbits
.LEH_frame0:
.Lsection_eh_frame:
.Leh_frame_common:
	.set	.Lset1eh,.Leh_frame_common_end-.Leh_frame_common_begin
	.long	.Lset1eh                # Length of Common Information Entry
.Leh_frame_common_begin:
	.long	0                       # CIE Identifier Tag
	.byte	1                       # DW_CIE_VERSION
	.byte	0
                                        # CIE Augmentation
	.uleb128	1               # CIE Code Alignment Factor
	.sleb128	-4              # CIE Data Alignment Factor
	.byte	8
                                        # CIE Return Address Column
	.byte	12                      # CFA_def_cfa
	.uleb128	4               # Register
	.uleb128	4               # Offset
	.byte	136                     # DW_CFA_offset + Reg (8)
	.uleb128	1               # Offset
	.align	4
.Leh_frame_common_end:

.Ltest1.eh = 0

.Lmovhl.eh = 0


	.section	.note.GNU-stack,"",@progbits

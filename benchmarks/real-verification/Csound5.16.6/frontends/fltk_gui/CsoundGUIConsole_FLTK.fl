# data file for the Fltk User Interface Designer (fluid)
version 1.0107
do_not_include_H_from_C
header_name {.hpp}
code_name {.cpp}
decl {\#include "CsoundGUI.hpp"} {}

class CsoundGUIConsole {open selected
} {
  decl {Fl_Text_Buffer *buf;} {}
  decl {Fl_Text_Buffer *styleBuf;} {}
  decl {Csound_Message *firstMsg;} {}
  decl {Csound_Message *lastMsg;} {}
  decl {CsoundMutex mutex_;} {}
  decl {CsoundThreadLock msgNotifyLock;} {}
  decl {CsoundThreadLock clearLock;} {}
  decl {CsoundThreadLock quitLock;} {}
  decl {static const Fl_Text_Display::Style_Table_Entry styleTable[18];} {}
  decl {void *consoleThread;} {}
  Function {CsoundGUIConsole() : mutex_(0)} {open
  } {
    code {{
  firstMsg = (Csound_Message*) 0;
  lastMsg = (Csound_Message*) 0;
  buf = new Fl_Text_Buffer();
  styleBuf = new Fl_Text_Buffer();
  msgNotifyLock.TryLock();
  clearLock.TryLock();
  quitLock.TryLock();
  consoleThread = csoundCreateThread(&CsoundGUIConsole::consoleThreadFunc, (void*) this);
}} {}
    Fl_Window window {
      label {Csound console messages} open
      xywh {438 150 585 320} type Double resizable
      code0 {window = (Fl_Double_Window*) o;} visible
    } {
      Fl_Text_Display textDisplay {
        xywh {0 0 585 320} box DOWN_BOX color 255 labelsize 12 textfont 4 textsize 12 resizable
        code0 {o->buffer(buf);}
      }
    }
    code {textDisplay->highlight_data(styleBuf, (Fl_Text_Display::Style_Table_Entry*) &(styleTable[0]), 18, (char) 0, (Fl_Text_Display::Unfinished_Style_Cb) 0, (void*) 0);} {}
  }
  Function {~CsoundGUIConsole()} {open
  } {
    code {{
  clearLock.TryLock();
  quitLock.Unlock();
  msgNotifyLock.Unlock();
  csoundJoinThread(consoleThread);
  consoleThread = (void*) 0;
  delete window;
  window = (Fl_Double_Window*) 0;
  delete buf;
  buf = (Fl_Text_Buffer*) 0;
  delete styleBuf;
  styleBuf = (Fl_Text_Buffer*) 0;
  msgNotifyLock.Unlock();
  clearLock.Unlock();
  quitLock.Unlock();
}} {}
  }
  decl {static uintptr_t consoleThreadFunc(void *);} {}
  decl {static void messageCallback_NoThread(CSOUND *csound, int attr, const char *fmt, va_list args);} {public
  }
  decl {static void messageCallback_Thread(CSOUND *csound, int attr, const char *fmt, va_list args);} {public
  }
  decl {void updateDisplay(bool);} {public
  }
  decl {void flushMessages();} {public
  }
  decl {void Clear();} {public
  }
}

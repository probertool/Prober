# Makefile.in generated by automake 1.9.6 from Makefile.am.
# epan/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am
# Automake file for the EPAN library
# (Ethereal Protocol ANalyzer Library)
#
# $Id: Makefile.am 25595 2008-06-25 00:27:56Z gerald $
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

# Makefile.am.inc
# Include file for Makefile.am files to get additional rules
#
# $Id: Makefile.am.inc 22446 2007-08-04 02:13:52Z guy $
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

# Makefile.common
#     Contains the stuff from Makefile.am and Makefile.nmake that is
#     a) common to both files and
#     b) portable between both files
#
# $Id: Makefile.common 23476 2007-11-17 00:20:32Z martinm $
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/wireshark
pkglibdir = $(libdir)/wireshark
pkgincludedir = $(includedir)/wireshark
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/../Makefile.am.inc $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.common $(srcdir)/Makefile.in \
	$(srcdir)/doxygen.cfg.in
subdir = epan
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal-fallback/glib-2.0.m4 \
	$(top_srcdir)/aclocal-fallback/glib.m4 \
	$(top_srcdir)/aclocal-fallback/gtk-2.0.m4 \
	$(top_srcdir)/aclocal-fallback/gtk.m4 \
	$(top_srcdir)/aclocal-fallback/iconv.m4 \
	$(top_srcdir)/aclocal-fallback/libgcrypt.m4 \
	$(top_srcdir)/aclocal-fallback/libgnutls.m4 \
	$(top_srcdir)/aclocal-fallback/libsmi.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = doxygen.cfg
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
#am__DEPENDENCIES_1 = wslua/libwslua.la
am__objects_1 = libwireshark_la-addr_and_mask.lo \
	libwireshark_la-addr_resolv.lo libwireshark_la-adler32.lo \
	libwireshark_la-afn.lo libwireshark_la-asn1.lo \
	libwireshark_la-atalk-utils.lo libwireshark_la-base64.lo \
	libwireshark_la-bitswap.lo \
	libwireshark_la-camel-persistentdata.lo \
	libwireshark_la-charsets.lo libwireshark_la-circuit.lo \
	libwireshark_la-codecs.lo libwireshark_la-column.lo \
	libwireshark_la-column-utils.lo \
	libwireshark_la-conversation.lo libwireshark_la-crc10.lo \
	libwireshark_la-crc16.lo libwireshark_la-crc32.lo \
	libwireshark_la-crc6.lo libwireshark_la-crcdrm.lo \
	libwireshark_la-dissector_filters.lo libwireshark_la-emem.lo \
	libwireshark_la-epan.lo libwireshark_la-ex-opt.lo \
	libwireshark_la-except.lo libwireshark_la-expert.lo \
	libwireshark_la-filesystem.lo libwireshark_la-follow.lo \
	libwireshark_la-frame_data.lo \
	libwireshark_la-frequency-utils.lo libwireshark_la-funnel.lo \
	libwireshark_la-gcp.lo libwireshark_la-golay.lo \
	libwireshark_la-guid-utils.lo \
	libwireshark_la-h225-persistentdata.lo \
	libwireshark_la-in_cksum.lo libwireshark_la-ipproto.lo \
	libwireshark_la-ipv4.lo libwireshark_la-next_tvb.lo \
	libwireshark_la-nstime.lo libwireshark_la-oids.lo \
	libwireshark_la-osi-utils.lo libwireshark_la-packet.lo \
	libwireshark_la-plugins.lo libwireshark_la-prefs.lo \
	libwireshark_la-privileges.lo libwireshark_la-proto.lo \
	libwireshark_la-range.lo libwireshark_la-reassemble.lo \
	libwireshark_la-reedsolomon.lo libwireshark_la-report_err.lo \
	libwireshark_la-req_resp_hdrs.lo \
	libwireshark_la-sigcomp_state_hdlr.lo \
	libwireshark_la-sigcomp-udvm.lo libwireshark_la-sminmpec.lo \
	libwireshark_la-sna-utils.lo libwireshark_la-stat_cmd_args.lo \
	libwireshark_la-stats_tree.lo libwireshark_la-strutil.lo \
	libwireshark_la-stream.lo libwireshark_la-t35.lo \
	libwireshark_la-tap.lo libwireshark_la-tcap-persistentdata.lo \
	libwireshark_la-timestamp.lo libwireshark_la-tfs.lo \
	libwireshark_la-to_str.lo libwireshark_la-tvbparse.lo \
	libwireshark_la-tvbuff.lo libwireshark_la-uat.lo \
	libwireshark_la-unicode-utils.lo \
	libwireshark_la-value_string.lo libwireshark_la-ws_strsplit.lo \
	libwireshark_la-xdlc.lo libwireshark_la-xmlstub.lo
am__objects_2 =
am_libwireshark_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libwireshark_la_OBJECTS = $(am_libwireshark_la_OBJECTS)
libwireshark_asmopt_la_LIBADD =
am_libwireshark_asmopt_la_OBJECTS = asm_utils.lo
libwireshark_asmopt_la_OBJECTS = $(am_libwireshark_asmopt_la_OBJECTS)
libwireshark_generated_la_LIBADD =
am__objects_3 = dtd_grammar.lo
am__objects_4 = diam_dict.lo dtd_parse.lo dtd_preparse.lo \
	radius_dict.lo uat_load.lo
am__objects_5 = $(am__objects_3) $(am__objects_4)
am__objects_6 = $(am__objects_2) $(am__objects_2)
am_libwireshark_generated_la_OBJECTS = $(am__objects_5) \
	$(am__objects_6)
libwireshark_generated_la_OBJECTS =  \
	$(am_libwireshark_generated_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libwireshark_la_SOURCES) $(EXTRA_libwireshark_la_SOURCES) \
	$(libwireshark_asmopt_la_SOURCES) \
	$(libwireshark_generated_la_SOURCES)
DIST_SOURCES = $(libwireshark_la_SOURCES) \
	$(EXTRA_libwireshark_la_SOURCES) \
	$(libwireshark_asmopt_la_SOURCES) \
	$(libwireshark_generated_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/llvm/codesample/39apps/wireshark-1.0.16/missing --run aclocal-1.9
ADNS_LIBS = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /root/llvm/codesample/39apps/wireshark-1.0.16/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /root/llvm/codesample/39apps/wireshark-1.0.16/missing --run autoconf
AUTOHEADER = ${SHELL} /root/llvm/codesample/39apps/wireshark-1.0.16/missing --run autoheader
AUTOMAKE = ${SHELL} /root/llvm/codesample/39apps/wireshark-1.0.16/missing --run automake-1.9
AWK = gawk
CC = /root/llvm/llvm80/build/bin/clang -flto
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = /root/llvm/llvm80/build/bin/clang -flto
CFLAGS = -DINET6 -D_U_="__attribute__((unused))" -Wno-error -flto -v -g -Wall -W -Wdeclaration-after-statement -Wendif-labels -Wpointer-arith -Wno-pointer-sign -Warray-bounds -I/usr/local/include -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pcap
CPP = /root/llvm/llvm80/build/bin/clang -flto -E
CPPFLAGS =  -I/usr/local/include -I/usr/include/pcap '-DPLUGIN_DIR="$(plugindir)"'
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_STATIC = 
ENABLE_STATIC_FALSE = 
ENABLE_STATIC_TRUE = #
EXEEXT = 
FGREP = /bin/grep -F
FLEX_PATH = 
FOP = 
FRAMEWORKS = 
GETOPT_C = 
GETOPT_O = 
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_CONFIG = 
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0
GLIB_MKENUMS = glib-mkenums
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTK_CONFIG = 
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lfontconfig -lfreetype -lgthread-2.0 -pthread -lglib-2.0
G_ASCII_STRCASECMP_C = 
G_ASCII_STRCASECMP_LO = 
G_ASCII_STRCASECMP_O = 
G_ASCII_STRTOULL_C = 
G_ASCII_STRTOULL_LO = 
G_ASCII_STRTOULL_O = 
HAVE_BLESS = no
HAVE_DOXYGEN = no
HAVE_DOXYGEN_FALSE = 
HAVE_DOXYGEN_TRUE = #
HAVE_DPKG_BUILDPACKAGE = yes
HAVE_FOP = no
HAVE_FOP_FALSE = 
HAVE_FOP_TRUE = #
HAVE_HDIUTIL = no
HAVE_HHC = no
HAVE_HHC_FALSE = 
HAVE_HHC_TRUE = #
HAVE_LIBLUA_FALSE = 
HAVE_LIBLUA_TRUE = #
HAVE_LIBPORTAUDIO_FALSE = 
HAVE_LIBPORTAUDIO_TRUE = #
HAVE_OSX_PACKAGING = no
HAVE_PKGMK = no
HAVE_PKGPROTO = no
HAVE_PKGTRANS = no
HAVE_PLUGINS_FALSE = #
HAVE_PLUGINS_TRUE = 
HAVE_RPM = 
HAVE_SVR4_PACKAGING = no
HAVE_WARNINGS_AS_ERRORS_FALSE = 
HAVE_WARNINGS_AS_ERRORS_TRUE = #
HAVE_XCODEBUILD = no
HAVE_XMLLINT = yes
HAVE_XMLLINT_FALSE = #
HAVE_XMLLINT_TRUE = 
HAVE_XSLTPROC = no
HAVE_XSLTPROC_FALSE = 
HAVE_XSLTPROC_TRUE = #
HHC = 
HTML_VIEWER = 
INET_ATON_C = 
INET_ATON_LO = 
INET_ATON_O = 
INET_NTOP_C = 
INET_NTOP_LO = 
INET_NTOP_O = 
INET_PTON_C = 
INET_PTON_LO = 
INET_PTON_O = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
KRB5_CONFIG = 
KRB5_LIBS = 
LD = /usr/local/bin/ld
LDFLAGS =  -L/usr/local/lib -L/usr/local/lib -L/usr/local/lib
LDFLAGS_SHAREDLIB = 
LEX = /usr/bin/flex
LEXDUMMY = /usr/bin/flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBCAP_LIBS = 
LIBGCRYPT_CFLAGS = 
LIBGCRYPT_CONFIG = /usr/bin/libgcrypt-config
LIBGCRYPT_LIBS = -lgcrypt
LIBGNUTLS_CFLAGS = 
LIBGNUTLS_CONFIG = no
LIBGNUTLS_LIBS = 
LIBICONV = 
LIBOBJS = 
LIBS = -lz 
LIBSMI_CFLAGS = 
LIBSMI_LDFLAGS = 
LIBSMI_VERSION = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LUA_INCLUDES = 
LUA_LIBS = 
MAKEINFO = ${SHELL} /root/llvm/codesample/39apps/wireshark-1.0.16/missing --run makeinfo
MKSTEMP_C = 
MKSTEMP_O = 
NM = /usr/local/bin/nm -B
NMEDIT = 
NSL_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = wireshark
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PCAP_LIBS = -lpcap
PCRE_LIBS = -lpcre
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PLUGIN_LIBS = 
POD2HTML = /usr/bin/pod2html
POD2MAN = /usr/bin/pod2man
PORTAUDIO_INCLUDES = 
PORTAUDIO_LIBS = 
PYTHON = /usr/bin/python
RANLIB = ranlib
SED = /bin/sed
SETUID_INSTALL_FALSE = 
SETUID_INSTALL_TRUE = #
SET_MAKE = 
SHELL = /bin/bash
SOCKET_LIBS = 
SSL_LIBS = 
STRCASECMP_C = 
STRCASECMP_O = 
STRERROR_C = 
STRERROR_O = 
STRIP = strip
STRNCASECMP_C = 
STRNCASECMP_O = 
STRPTIME_C = 
STRPTIME_O = 
USE_GTK2_FALSE = #
USE_GTK2_TRUE = 
USE_PROFILE_BUILD_FALSE = 
USE_PROFILE_BUILD_TRUE = #
USE_THREADS_FALSE = 
USE_THREADS_TRUE = #
VERSION = 1.0.16
XMLLINT = /usr/bin/xmllint
XSLTPROC = 
YACC = bison -y
YACCDUMMY = /usr/bin/bison
YFLAGS = 
ac_ct_CC = /root/llvm/llvm80/build/bin/clang -flto
ac_ct_DUMPBIN = 
ac_cv_wireshark_have_rpm = no
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
capinfos_bin = capinfos$(EXEEXT)
capinfos_man = capinfos.1
datadir = ${datarootdir}
datarootdir = ${prefix}/share
dftest_bin = dftest$(EXEEXT)
docdir = ${datarootdir}/doc/${PACKAGE}
dumpcap_bin = dumpcap$(EXEEXT)
dumpcap_man = dumpcap.1
dvidir = ${docdir}
editcap_bin = editcap$(EXEEXT)
editcap_man = editcap.1
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
idl2wrs_bin = idl2wrs
idl2wrs_man = idl2wrs.1
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /root/llvm/codesample/39apps/wireshark-1.0.16/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mergecap_bin = mergecap$(EXEEXT)
mergecap_man = mergecap.1
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${libdir}/wireshark/plugins/${VERSION}
prefix = /root/llvm/codesample/39apps/wireshark-1.0.16/build
program_transform_name = s,x,x,
psdir = ${docdir}
randpkt_bin = randpkt$(EXEEXT)
rawshark_bin = rawshark$(EXEEXT)
rawshark_man = rawshark.1
rdps_bin = rdps$(EXEEXT)
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
text2pcap_bin = text2pcap$(EXEEXT)
text2pcap_man = text2pcap.1
tshark_bin = tshark$(EXEEXT)
tshark_man = tshark.1
wireshark_SUBDIRS = codecs gtk
wireshark_bin = wireshark$(EXEEXT)
wireshark_man = wireshark.1
wiresharkfilter_man = wireshark-filter.4
wslua_lib = 
#wslua_lib = wslua/libwslua.la
wslua_dir = 
#wslua_dir = wslua
wslua_dist_dir = wslua
#wslua_dist_dir = 
SUBDIRS = crypt ftypes dfilter dissectors $(wslua_dir)
DIST_SUBDIRS = $(SUBDIRS) $(wslua_dist_dir)
ACLOCAL_AMFLAGS = `../aclocal-flags`
noinst_LTLIBRARIES = libwireshark_generated.la libwireshark_asmopt.la
lib_LTLIBRARIES = libwireshark.la
libwireshark_la_LDFLAGS = -version-info 0:1:0 
LIBWIRESHARK_SRC = \
	addr_and_mask.c		\
	addr_resolv.c		\
	adler32.c		\
	afn.c			\
	asn1.c			\
	atalk-utils.c		\
	base64.c		\
	bitswap.c		\
	camel-persistentdata.c	\
	charsets.c		\
	circuit.c		\
	codecs.c		\
	column.c		\
	column-utils.c		\
	conversation.c		\
	crc10.c			\
	crc16.c			\
	crc32.c			\
	crc6.c			\
	crcdrm.c		\
	dissector_filters.c	\
	emem.c			\
	epan.c			\
	ex-opt.c		\
	except.c		\
	expert.c		\
	filesystem.c		\
	follow.c		\
	frame_data.c		\
	frequency-utils.c	\
	funnel.c    		\
	gcp.c			\
        golay.c			\
	guid-utils.c    	\
	h225-persistentdata.c	\
	in_cksum.c		\
	ipproto.c		\
	ipv4.c			\
	next_tvb.c		\
	nstime.c		\
        oids.c			\
	osi-utils.c		\
	packet.c		\
	plugins.c		\
	prefs.c			\
	privileges.c		\
	proto.c			\
	range.c			\
	reassemble.c		\
	reedsolomon.c		\
	report_err.c		\
	req_resp_hdrs.c		\
	sigcomp_state_hdlr.c	\
	sigcomp-udvm.c		\
	sminmpec.c		\
	sna-utils.c		\
	stat_cmd_args.c		\
	stats_tree.c		\
	strutil.c		\
	stream.c		\
	t35.c			\
	tap.c			\
	tcap-persistentdata.c	\
	timestamp.c		\
	tfs.c			\
	to_str.c		\
	tvbparse.c		\
	tvbuff.c		\
	uat.c			\
	unicode-utils.c		\
	value_string.c		\
	ws_strsplit.c 		\
	xdlc.c			\
	xmlstub.c


#
# These get removed on "make distclean", as the tools we use to generate
# them are part of the Wireshark distribution.
#
LIBWIRESHARK_DISTCLEAN_GENERATED_SRC = \
	dtd_grammar.c


#
# These don't get removed on "make distclean", as the tools we use to
# generate them aren't part of the Wireshark distribution, and aren't
# tools assumed to be present for any system capable of compiling
# from a tarball (e.g., make and a C compiler are assumed to be present,
# but Flex isn't).
#
LIBWIRESHARK_NODISTCLEAN_GENERATED_SRC = \
	diam_dict.c		\
	dtd_parse.c 		\
	dtd_preparse.c 		\
	radius_dict.c 		\
	uat_load.c

LIBWIRESHARK_GENERATED_SRC = \
	$(LIBWIRESHARK_DISTCLEAN_GENERATED_SRC) \
	$(LIBWIRESHARK_NODISTCLEAN_GENERATED_SRC)

LIBWIRESHARK_ALL_SRC = \
	$(LIBWIRESHARK_SRC) 	\
	$(LIBWIRESHARK_GENERATED_SRC)

LIBWIRESHARK_INCLUDES = \
	addr_and_mask.h		\
	addr_resolv.h		\
	address.h		\
	adler32.h		\
	afn.h			\
	aftypes.h		\
	arcnet_pids.h		\
	arptypes.h		\
	asn1.h			\
	atalk-utils.h		\
	base64.h		\
	bitswap.h		\
	bridged_pids.h		\
	camel-persistentdata.h	\
	charsets.h		\
	chdlctypes.h		\
	circuit.h		\
	codecs.h		\
	column.h		\
	column_info.h		\
	column-utils.h		\
	conversation.h		\
	crc6.h			\
	crc10.h			\
	crc16.h			\
	crc32.h			\
	crcdrm.h		\
	diam_dict.h		\
	dissector_filters.h	\
	dtd.h			\
	dtd_parse.h 		\
	eap.h 		\
	emem.h			\
	epan.h			\
	epan_dissect.h		\
	etypes.h		\
	ex-opt.h		\
	except.h		\
	exceptions.h		\
	expert.h		\
	filesystem.h		\
	follow.h		\
	frame_data.h		\
	frequency-utils.h	\
	funnel.h		\
	garrayfix.h		\
	gcp.h			\
	golay.h			\
	gnuc_format_check.h	\
	greproto.h		\
	guid-utils.h		\
	h225-persistentdata.h	\
	iax2_codec_type.h	\
	in_cksum.h		\
	ip_opts.h		\
	ipproto.h		\
	ipv4.h			\
	ipv6-utils.h		\
	lapd_sapi.h		\
	llcsaps.h		\
	next_tvb.h		\
	nlpid.h			\
	nstime.h		\
	oids.h			\
	osi-utils.h		\
	oui.h			\
	packet.h		\
	packet_info.h		\
	pint.h			\
	plugins.h		\
	ppptypes.h		\
	prefs.h			\
	prefs-int.h		\
	privileges.h		\
	proto.h			\
	ptvcursor.h		\
	range.h			\
	reassemble.h		\
	reedsolomon.h		\
	report_err.h		\
	req_resp_hdrs.h		\
	rtp_pt.h		\
	sctpppids.h		\
	sigcomp_state_hdlr.h	\
	sigcomp-udvm.h		\
	slab.h			\
	sminmpec.h		\
	sna-utils.h		\
	stat_cmd_args.h		\
	stats_tree.h		\
	stats_tree_priv.h	\
	stream.h		\
	strutil.h		\
	t35.h			\
	tap.h			\
	tap-voip.h		\
	tcap-persistentdata.h	\
	timestamp.h    		\
	tfs.h			\
	to_str.h		\
	tvbparse.h		\
	tvbuff.h		\
	uat.h			\
	uat-int.h		\
	unicode-utils.h		\
	value_string.h		\
	ws_strsplit.h 		\
	x264_prt_id.h		\
	xdlc.h			\
	xmlstub.h


#
# As with LIBWIRESHARK_DISTCLEAN_GENERATED_SRC, so with
# LIBWIRESHARK_DISTCLEAN_GENERATED_INCLUDES.
#
LIBWIRESHARK_DISTCLEAN_GENERATED_INCLUDES = \
	dtd_grammar.h


#
# As with LIBWIRESHARK_NODISTCLEAN_GENERATED_SRC, so with
# LIBWIRESHARK_NODISTCLEAN_GENERATED_INCLUDES.
#
LIBWIRESHARK_NODISTCLEAN_GENERATED_INCLUDES = \
	diam_dict_lex.h		\
	dtd_parse_lex.h		\
	dtd_preparse_lex.h	\
	radius_dict_lex.h	\
	uat_load_lex.h

LIBWIRESHARK_GENERATED_INCLUDES = \
	$(LIBWIRESHARK_DISTCLEAN_GENERATED_INCLUDES) \
	$(LIBWIRESHARK_NODISTCLEAN_GENERATED_INCLUDES)

INCLUDES = -I$(srcdir)/.. -I$(srcdir)/$(LEMON)  \
	$(LIBGNUTLS_CFLAGS) $(LIBGCRYPT_CFLAGS) $(LIBSMI_CFLAGS)

#AM_NON_GENERATED_CFLAGS = -Werror

#Since code generated by lex may trigger gcc warnings, we are now generating two
#libraries.  A single library is generated with the lex code without the barrier
#"stop on warning". An other library is generated from the remaining source
#files with the "stop on warning" barrier.
libwireshark_la_SOURCES = \
	$(LIBWIRESHARK_SRC)	\
	$(LIBWIRESHARK_INCLUDES)

libwireshark_la_CFLAGS = $(AM_NON_GENERATED_CFLAGS)
libwireshark_generated_la_SOURCES = \
	$(LIBWIRESHARK_GENERATED_SRC) \
	$(LIBWIRESHARK_GENERATED_INCLUDES)


# code optionally implemented in assembler
# only C source available for platforms other than Win32
libwireshark_asmopt_la_SOURCES = \
	asm_utils.c		\
	asm_utils.h		\
	asm_utils_win32_x86.asm

EXTRA_libwireshark_la_SOURCES = \
	g_ascii_strcasecmp.c	\
	g_ascii_strcasecmp.h	\
	g_ascii_strtoull.c	\
	g_ascii_strtoull.h	\
	inet_aton.c		\
	inet_aton.h

EXTRA_DIST = \
	diam_dict.l		\
	dtd_grammar.lemon 	\
	dtd_parse.l 		\
	dtd_parse.h 		\
	dtd_preparse.l 		\
	enterprise-numbers  	\
	libwireshark.def	\
	Makefile.common		\
	Makefile.nmake		\
	make-sminmpec.pl 	\
	radius_dict.l   	\
	tvbtest.c		\
	reassemble_test.c 	\
	uat_load.l		\
	exntest.c		\
	doxygen.cfg.in

CLEANFILES = \
	libwireshark.a			\
	libwireshark.la			\
	libwireshark_generated.a 	\
	libwireshark_generated.la 	\
	libwireshark_asmopt.a 		\
	libwireshark_asmopt.la 		\
	inet_ntop.c			\
	inet_pton.c			\
	*~

DISTCLEANFILES = \
	$(LIBWIRESHARK_DISTCLEAN_GENERATED_SRC) \
	$(LIBWIRESHARK_DISTCLEAN_GENERATED_INCLUDES) \
	dtd_grammar.out

MAINTAINERCLEANFILES = \
	$(LIBWIRESHARK_NODISTCLEAN_GENERATED_SRC) \
	$(LIBWIRESHARK_NODISTCLEAN_GENERATED_INCLUDES) \
	Makefile.in		\
	sminmpec.c


#
# Add the object files for missing routines, if any.
#
libwireshark_la_LIBADD =   \
	   libwireshark_generated.la \
	libwireshark_asmopt.la crypt/libairpdcap.la ftypes/libftypes.la \
	dfilter/libdfilter.la dissectors/libcleandissectors.la \
	dissectors/libdissectors.la dissectors/libasndissectors.la \
	dissectors/libpidldissectors.la $(wslua_lib)   \
	 -lgcrypt    \
	  -lm

libwireshark_la_DEPENDENCIES =   \
	   libwireshark_generated.la \
	libwireshark_asmopt.la crypt/libairpdcap.la ftypes/libftypes.la \
	dfilter/libdfilter.la dissectors/libcleandissectors.la \
	dissectors/libdissectors.la dissectors/libasndissectors.la \
	dissectors/libpidldissectors.la $(wslua_lib)

RUNLEX = $(top_srcdir)/tools/runlex.sh
LEMON = ../tools/lemon
plugin_src = 
#plugin_src = \
#	../plugins/artnet/packet-artnet.c \
#	../plugins/asn1/packet-asn1.c \
#	../plugins/docsis/packet-bpkmattr.c \
#	../plugins/docsis/packet-bpkmreq.c \
#	../plugins/docsis/packet-bpkmrsp.c \
#	../plugins/docsis/packet-docsis.c \
#	../plugins/docsis/packet-dsaack.c \
#	../plugins/docsis/packet-dsareq.c \
#	../plugins/docsis/packet-dsarsp.c \
#	../plugins/docsis/packet-dscack.c \
#	../plugins/docsis/packet-dscreq.c \
#	../plugins/docsis/packet-dscrsp.c \
#	../plugins/docsis/packet-dsdreq.c \
#	../plugins/docsis/packet-dsdrsp.c \
#	../plugins/docsis/packet-intrngreq.c \
#	../plugins/docsis/packet-macmgmt.c \
#	../plugins/docsis/packet-map.c \
#	../plugins/docsis/packet-regack.c \
#	../plugins/docsis/packet-regreq.c \
#	../plugins/docsis/packet-regrsp.c \
#	../plugins/docsis/packet-rngreq.c \
#	../plugins/docsis/packet-rngrsp.c \
#	../plugins/docsis/packet-tlv.c \
#	../plugins/docsis/packet-type29ucd.c \
#	../plugins/docsis/packet-uccreq.c \
#	../plugins/docsis/packet-uccrsp.c \
#	../plugins/docsis/packet-ucd.c \
#	../plugins/enttec/packet-enttec.c \
#	../plugins/giop/packet-cosnaming.c \
#	../plugins/giop/packet-coseventcomm.c \
#	../plugins/gryphon/packet-gryphon.c \
#	../plugins/infiniband/packet-infiniband.c \
#	../plugins/irda/packet-irda.c \
#	../plugins/lwres/packet-lwres.c \
#	../plugins/m2m/packet-m2m.c \
#	../plugins/m2m/wimax_tlv.c \
#	../plugins/mgcp/packet-mgcp.c \
#	../plugins/pcli/packet-pcli.c \
#	../plugins/rdm/packet-rdm.c \
#	../plugins/rtnet/packet-rtnet.c \
#	../plugins/v5ua/packet-v5ua.c \
#        ../plugins/wimax/crc.c \
#        ../plugins/wimax/crc_data.c \
#        ../plugins/wimax/mac_hd_generic_decoder.c \
#        ../plugins/wimax/mac_hd_type1_decoder.c \
#        ../plugins/wimax/mac_hd_type2_decoder.c \
#        ../plugins/wimax/mac_mgmt_msg_decoder.c \
#        ../plugins/wimax/msg_aas_beam.c \
#        ../plugins/wimax/msg_aas_fbck.c \
#        ../plugins/wimax/msg_arq.c \
#        ../plugins/wimax/msg_clk_cmp.c \
#        ../plugins/wimax/msg_dcd.c \
#        ../plugins/wimax/msg_dlmap.c \
#        ../plugins/wimax/msg_dreg.c \
#        ../plugins/wimax/msg_dsa.c \
#        ../plugins/wimax/msg_dsc.c \
#        ../plugins/wimax/msg_dsd.c \
#        ../plugins/wimax/msg_dsx_rvd.c \
#        ../plugins/wimax/msg_fpc.c \
#        ../plugins/wimax/msg_pkm.c \
#        ../plugins/wimax/msg_pmc.c \
#        ../plugins/wimax/msg_prc_lt_ctrl.c \
#        ../plugins/wimax/msg_reg_req.c \
#        ../plugins/wimax/msg_reg_rsp.c \
#        ../plugins/wimax/msg_rep.c \
#        ../plugins/wimax/msg_res_cmd.c \
#        ../plugins/wimax/msg_rng_req.c \
#        ../plugins/wimax/msg_rng_rsp.c \
#        ../plugins/wimax/msg_sbc.c \
#        ../plugins/wimax/msg_ucd.c \
#        ../plugins/wimax/msg_ulmap.c \
#        ../plugins/wimax/packet-wmx.c \
#        ../plugins/wimax/wimax_cdma_code_decoder.c \
#        ../plugins/wimax/wimax_compact_dlmap_ie_decoder.c \
#        ../plugins/wimax/wimax_compact_ulmap_ie_decoder.c \
#        ../plugins/wimax/wimax_fch_decoder.c \
#        ../plugins/wimax/wimax_ffb_decoder.c \
#        ../plugins/wimax/wimax_hack_decoder.c \
#        ../plugins/wimax/wimax_harq_map_decoder.c \
#        ../plugins/wimax/wimax_pdu_decoder.c \
#        ../plugins/wimax/wimax_phy_attributes_decoder.c \
#        ../plugins/wimax/wimax_tlv.c \
#        ../plugins/wimax/wimax_utils.c

#plugin_src = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .l .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../Makefile.am.inc $(srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  epan/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  epan/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
doxygen.cfg: $(top_builddir)/config.status $(srcdir)/doxygen.cfg.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libwireshark.la: $(libwireshark_la_OBJECTS) $(libwireshark_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libwireshark_la_LDFLAGS) $(libwireshark_la_OBJECTS) $(libwireshark_la_LIBADD) $(LIBS)
libwireshark_asmopt.la: $(libwireshark_asmopt_la_OBJECTS) $(libwireshark_asmopt_la_DEPENDENCIES) 
	$(LINK)  $(libwireshark_asmopt_la_LDFLAGS) $(libwireshark_asmopt_la_OBJECTS) $(libwireshark_asmopt_la_LIBADD) $(LIBS)
libwireshark_generated.la: $(libwireshark_generated_la_OBJECTS) $(libwireshark_generated_la_DEPENDENCIES) 
	$(LINK)  $(libwireshark_generated_la_LDFLAGS) $(libwireshark_generated_la_OBJECTS) $(libwireshark_generated_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/asm_utils.Plo
include ./$(DEPDIR)/diam_dict.Plo
include ./$(DEPDIR)/dtd_grammar.Plo
include ./$(DEPDIR)/dtd_parse.Plo
include ./$(DEPDIR)/dtd_preparse.Plo
include ./$(DEPDIR)/libwireshark_la-addr_and_mask.Plo
include ./$(DEPDIR)/libwireshark_la-addr_resolv.Plo
include ./$(DEPDIR)/libwireshark_la-adler32.Plo
include ./$(DEPDIR)/libwireshark_la-afn.Plo
include ./$(DEPDIR)/libwireshark_la-asn1.Plo
include ./$(DEPDIR)/libwireshark_la-atalk-utils.Plo
include ./$(DEPDIR)/libwireshark_la-base64.Plo
include ./$(DEPDIR)/libwireshark_la-bitswap.Plo
include ./$(DEPDIR)/libwireshark_la-camel-persistentdata.Plo
include ./$(DEPDIR)/libwireshark_la-charsets.Plo
include ./$(DEPDIR)/libwireshark_la-circuit.Plo
include ./$(DEPDIR)/libwireshark_la-codecs.Plo
include ./$(DEPDIR)/libwireshark_la-column-utils.Plo
include ./$(DEPDIR)/libwireshark_la-column.Plo
include ./$(DEPDIR)/libwireshark_la-conversation.Plo
include ./$(DEPDIR)/libwireshark_la-crc10.Plo
include ./$(DEPDIR)/libwireshark_la-crc16.Plo
include ./$(DEPDIR)/libwireshark_la-crc32.Plo
include ./$(DEPDIR)/libwireshark_la-crc6.Plo
include ./$(DEPDIR)/libwireshark_la-crcdrm.Plo
include ./$(DEPDIR)/libwireshark_la-dissector_filters.Plo
include ./$(DEPDIR)/libwireshark_la-emem.Plo
include ./$(DEPDIR)/libwireshark_la-epan.Plo
include ./$(DEPDIR)/libwireshark_la-ex-opt.Plo
include ./$(DEPDIR)/libwireshark_la-except.Plo
include ./$(DEPDIR)/libwireshark_la-expert.Plo
include ./$(DEPDIR)/libwireshark_la-filesystem.Plo
include ./$(DEPDIR)/libwireshark_la-follow.Plo
include ./$(DEPDIR)/libwireshark_la-frame_data.Plo
include ./$(DEPDIR)/libwireshark_la-frequency-utils.Plo
include ./$(DEPDIR)/libwireshark_la-funnel.Plo
include ./$(DEPDIR)/libwireshark_la-g_ascii_strcasecmp.Plo
include ./$(DEPDIR)/libwireshark_la-g_ascii_strtoull.Plo
include ./$(DEPDIR)/libwireshark_la-gcp.Plo
include ./$(DEPDIR)/libwireshark_la-golay.Plo
include ./$(DEPDIR)/libwireshark_la-guid-utils.Plo
include ./$(DEPDIR)/libwireshark_la-h225-persistentdata.Plo
include ./$(DEPDIR)/libwireshark_la-in_cksum.Plo
include ./$(DEPDIR)/libwireshark_la-inet_aton.Plo
include ./$(DEPDIR)/libwireshark_la-ipproto.Plo
include ./$(DEPDIR)/libwireshark_la-ipv4.Plo
include ./$(DEPDIR)/libwireshark_la-next_tvb.Plo
include ./$(DEPDIR)/libwireshark_la-nstime.Plo
include ./$(DEPDIR)/libwireshark_la-oids.Plo
include ./$(DEPDIR)/libwireshark_la-osi-utils.Plo
include ./$(DEPDIR)/libwireshark_la-packet.Plo
include ./$(DEPDIR)/libwireshark_la-plugins.Plo
include ./$(DEPDIR)/libwireshark_la-prefs.Plo
include ./$(DEPDIR)/libwireshark_la-privileges.Plo
include ./$(DEPDIR)/libwireshark_la-proto.Plo
include ./$(DEPDIR)/libwireshark_la-range.Plo
include ./$(DEPDIR)/libwireshark_la-reassemble.Plo
include ./$(DEPDIR)/libwireshark_la-reedsolomon.Plo
include ./$(DEPDIR)/libwireshark_la-report_err.Plo
include ./$(DEPDIR)/libwireshark_la-req_resp_hdrs.Plo
include ./$(DEPDIR)/libwireshark_la-sigcomp-udvm.Plo
include ./$(DEPDIR)/libwireshark_la-sigcomp_state_hdlr.Plo
include ./$(DEPDIR)/libwireshark_la-sminmpec.Plo
include ./$(DEPDIR)/libwireshark_la-sna-utils.Plo
include ./$(DEPDIR)/libwireshark_la-stat_cmd_args.Plo
include ./$(DEPDIR)/libwireshark_la-stats_tree.Plo
include ./$(DEPDIR)/libwireshark_la-stream.Plo
include ./$(DEPDIR)/libwireshark_la-strutil.Plo
include ./$(DEPDIR)/libwireshark_la-t35.Plo
include ./$(DEPDIR)/libwireshark_la-tap.Plo
include ./$(DEPDIR)/libwireshark_la-tcap-persistentdata.Plo
include ./$(DEPDIR)/libwireshark_la-tfs.Plo
include ./$(DEPDIR)/libwireshark_la-timestamp.Plo
include ./$(DEPDIR)/libwireshark_la-to_str.Plo
include ./$(DEPDIR)/libwireshark_la-tvbparse.Plo
include ./$(DEPDIR)/libwireshark_la-tvbuff.Plo
include ./$(DEPDIR)/libwireshark_la-uat.Plo
include ./$(DEPDIR)/libwireshark_la-unicode-utils.Plo
include ./$(DEPDIR)/libwireshark_la-value_string.Plo
include ./$(DEPDIR)/libwireshark_la-ws_strsplit.Plo
include ./$(DEPDIR)/libwireshark_la-xdlc.Plo
include ./$(DEPDIR)/libwireshark_la-xmlstub.Plo
include ./$(DEPDIR)/radius_dict.Plo
include ./$(DEPDIR)/uat_load.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libwireshark_la-addr_and_mask.lo: addr_and_mask.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-addr_and_mask.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-addr_and_mask.Tpo" -c -o libwireshark_la-addr_and_mask.lo `test -f 'addr_and_mask.c' || echo '$(srcdir)/'`addr_and_mask.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-addr_and_mask.Tpo" "$(DEPDIR)/libwireshark_la-addr_and_mask.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-addr_and_mask.Tpo"; exit 1; fi
#	source='addr_and_mask.c' object='libwireshark_la-addr_and_mask.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-addr_and_mask.lo `test -f 'addr_and_mask.c' || echo '$(srcdir)/'`addr_and_mask.c

libwireshark_la-addr_resolv.lo: addr_resolv.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-addr_resolv.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-addr_resolv.Tpo" -c -o libwireshark_la-addr_resolv.lo `test -f 'addr_resolv.c' || echo '$(srcdir)/'`addr_resolv.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-addr_resolv.Tpo" "$(DEPDIR)/libwireshark_la-addr_resolv.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-addr_resolv.Tpo"; exit 1; fi
#	source='addr_resolv.c' object='libwireshark_la-addr_resolv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-addr_resolv.lo `test -f 'addr_resolv.c' || echo '$(srcdir)/'`addr_resolv.c

libwireshark_la-adler32.lo: adler32.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-adler32.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-adler32.Tpo" -c -o libwireshark_la-adler32.lo `test -f 'adler32.c' || echo '$(srcdir)/'`adler32.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-adler32.Tpo" "$(DEPDIR)/libwireshark_la-adler32.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-adler32.Tpo"; exit 1; fi
#	source='adler32.c' object='libwireshark_la-adler32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-adler32.lo `test -f 'adler32.c' || echo '$(srcdir)/'`adler32.c

libwireshark_la-afn.lo: afn.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-afn.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-afn.Tpo" -c -o libwireshark_la-afn.lo `test -f 'afn.c' || echo '$(srcdir)/'`afn.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-afn.Tpo" "$(DEPDIR)/libwireshark_la-afn.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-afn.Tpo"; exit 1; fi
#	source='afn.c' object='libwireshark_la-afn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-afn.lo `test -f 'afn.c' || echo '$(srcdir)/'`afn.c

libwireshark_la-asn1.lo: asn1.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-asn1.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-asn1.Tpo" -c -o libwireshark_la-asn1.lo `test -f 'asn1.c' || echo '$(srcdir)/'`asn1.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-asn1.Tpo" "$(DEPDIR)/libwireshark_la-asn1.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-asn1.Tpo"; exit 1; fi
#	source='asn1.c' object='libwireshark_la-asn1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-asn1.lo `test -f 'asn1.c' || echo '$(srcdir)/'`asn1.c

libwireshark_la-atalk-utils.lo: atalk-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-atalk-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-atalk-utils.Tpo" -c -o libwireshark_la-atalk-utils.lo `test -f 'atalk-utils.c' || echo '$(srcdir)/'`atalk-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-atalk-utils.Tpo" "$(DEPDIR)/libwireshark_la-atalk-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-atalk-utils.Tpo"; exit 1; fi
#	source='atalk-utils.c' object='libwireshark_la-atalk-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-atalk-utils.lo `test -f 'atalk-utils.c' || echo '$(srcdir)/'`atalk-utils.c

libwireshark_la-base64.lo: base64.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-base64.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-base64.Tpo" -c -o libwireshark_la-base64.lo `test -f 'base64.c' || echo '$(srcdir)/'`base64.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-base64.Tpo" "$(DEPDIR)/libwireshark_la-base64.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-base64.Tpo"; exit 1; fi
#	source='base64.c' object='libwireshark_la-base64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-base64.lo `test -f 'base64.c' || echo '$(srcdir)/'`base64.c

libwireshark_la-bitswap.lo: bitswap.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-bitswap.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-bitswap.Tpo" -c -o libwireshark_la-bitswap.lo `test -f 'bitswap.c' || echo '$(srcdir)/'`bitswap.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-bitswap.Tpo" "$(DEPDIR)/libwireshark_la-bitswap.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-bitswap.Tpo"; exit 1; fi
#	source='bitswap.c' object='libwireshark_la-bitswap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-bitswap.lo `test -f 'bitswap.c' || echo '$(srcdir)/'`bitswap.c

libwireshark_la-camel-persistentdata.lo: camel-persistentdata.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-camel-persistentdata.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-camel-persistentdata.Tpo" -c -o libwireshark_la-camel-persistentdata.lo `test -f 'camel-persistentdata.c' || echo '$(srcdir)/'`camel-persistentdata.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-camel-persistentdata.Tpo" "$(DEPDIR)/libwireshark_la-camel-persistentdata.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-camel-persistentdata.Tpo"; exit 1; fi
#	source='camel-persistentdata.c' object='libwireshark_la-camel-persistentdata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-camel-persistentdata.lo `test -f 'camel-persistentdata.c' || echo '$(srcdir)/'`camel-persistentdata.c

libwireshark_la-charsets.lo: charsets.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-charsets.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-charsets.Tpo" -c -o libwireshark_la-charsets.lo `test -f 'charsets.c' || echo '$(srcdir)/'`charsets.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-charsets.Tpo" "$(DEPDIR)/libwireshark_la-charsets.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-charsets.Tpo"; exit 1; fi
#	source='charsets.c' object='libwireshark_la-charsets.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-charsets.lo `test -f 'charsets.c' || echo '$(srcdir)/'`charsets.c

libwireshark_la-circuit.lo: circuit.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-circuit.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-circuit.Tpo" -c -o libwireshark_la-circuit.lo `test -f 'circuit.c' || echo '$(srcdir)/'`circuit.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-circuit.Tpo" "$(DEPDIR)/libwireshark_la-circuit.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-circuit.Tpo"; exit 1; fi
#	source='circuit.c' object='libwireshark_la-circuit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-circuit.lo `test -f 'circuit.c' || echo '$(srcdir)/'`circuit.c

libwireshark_la-codecs.lo: codecs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-codecs.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-codecs.Tpo" -c -o libwireshark_la-codecs.lo `test -f 'codecs.c' || echo '$(srcdir)/'`codecs.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-codecs.Tpo" "$(DEPDIR)/libwireshark_la-codecs.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-codecs.Tpo"; exit 1; fi
#	source='codecs.c' object='libwireshark_la-codecs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-codecs.lo `test -f 'codecs.c' || echo '$(srcdir)/'`codecs.c

libwireshark_la-column.lo: column.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-column.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-column.Tpo" -c -o libwireshark_la-column.lo `test -f 'column.c' || echo '$(srcdir)/'`column.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-column.Tpo" "$(DEPDIR)/libwireshark_la-column.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-column.Tpo"; exit 1; fi
#	source='column.c' object='libwireshark_la-column.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-column.lo `test -f 'column.c' || echo '$(srcdir)/'`column.c

libwireshark_la-column-utils.lo: column-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-column-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-column-utils.Tpo" -c -o libwireshark_la-column-utils.lo `test -f 'column-utils.c' || echo '$(srcdir)/'`column-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-column-utils.Tpo" "$(DEPDIR)/libwireshark_la-column-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-column-utils.Tpo"; exit 1; fi
#	source='column-utils.c' object='libwireshark_la-column-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-column-utils.lo `test -f 'column-utils.c' || echo '$(srcdir)/'`column-utils.c

libwireshark_la-conversation.lo: conversation.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-conversation.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-conversation.Tpo" -c -o libwireshark_la-conversation.lo `test -f 'conversation.c' || echo '$(srcdir)/'`conversation.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-conversation.Tpo" "$(DEPDIR)/libwireshark_la-conversation.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-conversation.Tpo"; exit 1; fi
#	source='conversation.c' object='libwireshark_la-conversation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-conversation.lo `test -f 'conversation.c' || echo '$(srcdir)/'`conversation.c

libwireshark_la-crc10.lo: crc10.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-crc10.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-crc10.Tpo" -c -o libwireshark_la-crc10.lo `test -f 'crc10.c' || echo '$(srcdir)/'`crc10.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-crc10.Tpo" "$(DEPDIR)/libwireshark_la-crc10.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-crc10.Tpo"; exit 1; fi
#	source='crc10.c' object='libwireshark_la-crc10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-crc10.lo `test -f 'crc10.c' || echo '$(srcdir)/'`crc10.c

libwireshark_la-crc16.lo: crc16.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-crc16.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-crc16.Tpo" -c -o libwireshark_la-crc16.lo `test -f 'crc16.c' || echo '$(srcdir)/'`crc16.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-crc16.Tpo" "$(DEPDIR)/libwireshark_la-crc16.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-crc16.Tpo"; exit 1; fi
#	source='crc16.c' object='libwireshark_la-crc16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-crc16.lo `test -f 'crc16.c' || echo '$(srcdir)/'`crc16.c

libwireshark_la-crc32.lo: crc32.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-crc32.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-crc32.Tpo" -c -o libwireshark_la-crc32.lo `test -f 'crc32.c' || echo '$(srcdir)/'`crc32.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-crc32.Tpo" "$(DEPDIR)/libwireshark_la-crc32.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-crc32.Tpo"; exit 1; fi
#	source='crc32.c' object='libwireshark_la-crc32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-crc32.lo `test -f 'crc32.c' || echo '$(srcdir)/'`crc32.c

libwireshark_la-crc6.lo: crc6.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-crc6.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-crc6.Tpo" -c -o libwireshark_la-crc6.lo `test -f 'crc6.c' || echo '$(srcdir)/'`crc6.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-crc6.Tpo" "$(DEPDIR)/libwireshark_la-crc6.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-crc6.Tpo"; exit 1; fi
#	source='crc6.c' object='libwireshark_la-crc6.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-crc6.lo `test -f 'crc6.c' || echo '$(srcdir)/'`crc6.c

libwireshark_la-crcdrm.lo: crcdrm.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-crcdrm.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-crcdrm.Tpo" -c -o libwireshark_la-crcdrm.lo `test -f 'crcdrm.c' || echo '$(srcdir)/'`crcdrm.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-crcdrm.Tpo" "$(DEPDIR)/libwireshark_la-crcdrm.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-crcdrm.Tpo"; exit 1; fi
#	source='crcdrm.c' object='libwireshark_la-crcdrm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-crcdrm.lo `test -f 'crcdrm.c' || echo '$(srcdir)/'`crcdrm.c

libwireshark_la-dissector_filters.lo: dissector_filters.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-dissector_filters.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-dissector_filters.Tpo" -c -o libwireshark_la-dissector_filters.lo `test -f 'dissector_filters.c' || echo '$(srcdir)/'`dissector_filters.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-dissector_filters.Tpo" "$(DEPDIR)/libwireshark_la-dissector_filters.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-dissector_filters.Tpo"; exit 1; fi
#	source='dissector_filters.c' object='libwireshark_la-dissector_filters.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-dissector_filters.lo `test -f 'dissector_filters.c' || echo '$(srcdir)/'`dissector_filters.c

libwireshark_la-emem.lo: emem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-emem.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-emem.Tpo" -c -o libwireshark_la-emem.lo `test -f 'emem.c' || echo '$(srcdir)/'`emem.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-emem.Tpo" "$(DEPDIR)/libwireshark_la-emem.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-emem.Tpo"; exit 1; fi
#	source='emem.c' object='libwireshark_la-emem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-emem.lo `test -f 'emem.c' || echo '$(srcdir)/'`emem.c

libwireshark_la-epan.lo: epan.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-epan.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-epan.Tpo" -c -o libwireshark_la-epan.lo `test -f 'epan.c' || echo '$(srcdir)/'`epan.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-epan.Tpo" "$(DEPDIR)/libwireshark_la-epan.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-epan.Tpo"; exit 1; fi
#	source='epan.c' object='libwireshark_la-epan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-epan.lo `test -f 'epan.c' || echo '$(srcdir)/'`epan.c

libwireshark_la-ex-opt.lo: ex-opt.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-ex-opt.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-ex-opt.Tpo" -c -o libwireshark_la-ex-opt.lo `test -f 'ex-opt.c' || echo '$(srcdir)/'`ex-opt.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-ex-opt.Tpo" "$(DEPDIR)/libwireshark_la-ex-opt.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-ex-opt.Tpo"; exit 1; fi
#	source='ex-opt.c' object='libwireshark_la-ex-opt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-ex-opt.lo `test -f 'ex-opt.c' || echo '$(srcdir)/'`ex-opt.c

libwireshark_la-except.lo: except.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-except.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-except.Tpo" -c -o libwireshark_la-except.lo `test -f 'except.c' || echo '$(srcdir)/'`except.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-except.Tpo" "$(DEPDIR)/libwireshark_la-except.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-except.Tpo"; exit 1; fi
#	source='except.c' object='libwireshark_la-except.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-except.lo `test -f 'except.c' || echo '$(srcdir)/'`except.c

libwireshark_la-expert.lo: expert.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-expert.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-expert.Tpo" -c -o libwireshark_la-expert.lo `test -f 'expert.c' || echo '$(srcdir)/'`expert.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-expert.Tpo" "$(DEPDIR)/libwireshark_la-expert.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-expert.Tpo"; exit 1; fi
#	source='expert.c' object='libwireshark_la-expert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-expert.lo `test -f 'expert.c' || echo '$(srcdir)/'`expert.c

libwireshark_la-filesystem.lo: filesystem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-filesystem.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-filesystem.Tpo" -c -o libwireshark_la-filesystem.lo `test -f 'filesystem.c' || echo '$(srcdir)/'`filesystem.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-filesystem.Tpo" "$(DEPDIR)/libwireshark_la-filesystem.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-filesystem.Tpo"; exit 1; fi
#	source='filesystem.c' object='libwireshark_la-filesystem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-filesystem.lo `test -f 'filesystem.c' || echo '$(srcdir)/'`filesystem.c

libwireshark_la-follow.lo: follow.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-follow.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-follow.Tpo" -c -o libwireshark_la-follow.lo `test -f 'follow.c' || echo '$(srcdir)/'`follow.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-follow.Tpo" "$(DEPDIR)/libwireshark_la-follow.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-follow.Tpo"; exit 1; fi
#	source='follow.c' object='libwireshark_la-follow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-follow.lo `test -f 'follow.c' || echo '$(srcdir)/'`follow.c

libwireshark_la-frame_data.lo: frame_data.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-frame_data.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-frame_data.Tpo" -c -o libwireshark_la-frame_data.lo `test -f 'frame_data.c' || echo '$(srcdir)/'`frame_data.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-frame_data.Tpo" "$(DEPDIR)/libwireshark_la-frame_data.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-frame_data.Tpo"; exit 1; fi
#	source='frame_data.c' object='libwireshark_la-frame_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-frame_data.lo `test -f 'frame_data.c' || echo '$(srcdir)/'`frame_data.c

libwireshark_la-frequency-utils.lo: frequency-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-frequency-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-frequency-utils.Tpo" -c -o libwireshark_la-frequency-utils.lo `test -f 'frequency-utils.c' || echo '$(srcdir)/'`frequency-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-frequency-utils.Tpo" "$(DEPDIR)/libwireshark_la-frequency-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-frequency-utils.Tpo"; exit 1; fi
#	source='frequency-utils.c' object='libwireshark_la-frequency-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-frequency-utils.lo `test -f 'frequency-utils.c' || echo '$(srcdir)/'`frequency-utils.c

libwireshark_la-funnel.lo: funnel.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-funnel.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-funnel.Tpo" -c -o libwireshark_la-funnel.lo `test -f 'funnel.c' || echo '$(srcdir)/'`funnel.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-funnel.Tpo" "$(DEPDIR)/libwireshark_la-funnel.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-funnel.Tpo"; exit 1; fi
#	source='funnel.c' object='libwireshark_la-funnel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-funnel.lo `test -f 'funnel.c' || echo '$(srcdir)/'`funnel.c

libwireshark_la-gcp.lo: gcp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-gcp.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-gcp.Tpo" -c -o libwireshark_la-gcp.lo `test -f 'gcp.c' || echo '$(srcdir)/'`gcp.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-gcp.Tpo" "$(DEPDIR)/libwireshark_la-gcp.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-gcp.Tpo"; exit 1; fi
#	source='gcp.c' object='libwireshark_la-gcp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-gcp.lo `test -f 'gcp.c' || echo '$(srcdir)/'`gcp.c

libwireshark_la-golay.lo: golay.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-golay.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-golay.Tpo" -c -o libwireshark_la-golay.lo `test -f 'golay.c' || echo '$(srcdir)/'`golay.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-golay.Tpo" "$(DEPDIR)/libwireshark_la-golay.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-golay.Tpo"; exit 1; fi
#	source='golay.c' object='libwireshark_la-golay.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-golay.lo `test -f 'golay.c' || echo '$(srcdir)/'`golay.c

libwireshark_la-guid-utils.lo: guid-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-guid-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-guid-utils.Tpo" -c -o libwireshark_la-guid-utils.lo `test -f 'guid-utils.c' || echo '$(srcdir)/'`guid-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-guid-utils.Tpo" "$(DEPDIR)/libwireshark_la-guid-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-guid-utils.Tpo"; exit 1; fi
#	source='guid-utils.c' object='libwireshark_la-guid-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-guid-utils.lo `test -f 'guid-utils.c' || echo '$(srcdir)/'`guid-utils.c

libwireshark_la-h225-persistentdata.lo: h225-persistentdata.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-h225-persistentdata.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-h225-persistentdata.Tpo" -c -o libwireshark_la-h225-persistentdata.lo `test -f 'h225-persistentdata.c' || echo '$(srcdir)/'`h225-persistentdata.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-h225-persistentdata.Tpo" "$(DEPDIR)/libwireshark_la-h225-persistentdata.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-h225-persistentdata.Tpo"; exit 1; fi
#	source='h225-persistentdata.c' object='libwireshark_la-h225-persistentdata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-h225-persistentdata.lo `test -f 'h225-persistentdata.c' || echo '$(srcdir)/'`h225-persistentdata.c

libwireshark_la-in_cksum.lo: in_cksum.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-in_cksum.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-in_cksum.Tpo" -c -o libwireshark_la-in_cksum.lo `test -f 'in_cksum.c' || echo '$(srcdir)/'`in_cksum.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-in_cksum.Tpo" "$(DEPDIR)/libwireshark_la-in_cksum.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-in_cksum.Tpo"; exit 1; fi
#	source='in_cksum.c' object='libwireshark_la-in_cksum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-in_cksum.lo `test -f 'in_cksum.c' || echo '$(srcdir)/'`in_cksum.c

libwireshark_la-ipproto.lo: ipproto.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-ipproto.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-ipproto.Tpo" -c -o libwireshark_la-ipproto.lo `test -f 'ipproto.c' || echo '$(srcdir)/'`ipproto.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-ipproto.Tpo" "$(DEPDIR)/libwireshark_la-ipproto.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-ipproto.Tpo"; exit 1; fi
#	source='ipproto.c' object='libwireshark_la-ipproto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-ipproto.lo `test -f 'ipproto.c' || echo '$(srcdir)/'`ipproto.c

libwireshark_la-ipv4.lo: ipv4.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-ipv4.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-ipv4.Tpo" -c -o libwireshark_la-ipv4.lo `test -f 'ipv4.c' || echo '$(srcdir)/'`ipv4.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-ipv4.Tpo" "$(DEPDIR)/libwireshark_la-ipv4.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-ipv4.Tpo"; exit 1; fi
#	source='ipv4.c' object='libwireshark_la-ipv4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-ipv4.lo `test -f 'ipv4.c' || echo '$(srcdir)/'`ipv4.c

libwireshark_la-next_tvb.lo: next_tvb.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-next_tvb.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-next_tvb.Tpo" -c -o libwireshark_la-next_tvb.lo `test -f 'next_tvb.c' || echo '$(srcdir)/'`next_tvb.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-next_tvb.Tpo" "$(DEPDIR)/libwireshark_la-next_tvb.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-next_tvb.Tpo"; exit 1; fi
#	source='next_tvb.c' object='libwireshark_la-next_tvb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-next_tvb.lo `test -f 'next_tvb.c' || echo '$(srcdir)/'`next_tvb.c

libwireshark_la-nstime.lo: nstime.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-nstime.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-nstime.Tpo" -c -o libwireshark_la-nstime.lo `test -f 'nstime.c' || echo '$(srcdir)/'`nstime.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-nstime.Tpo" "$(DEPDIR)/libwireshark_la-nstime.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-nstime.Tpo"; exit 1; fi
#	source='nstime.c' object='libwireshark_la-nstime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-nstime.lo `test -f 'nstime.c' || echo '$(srcdir)/'`nstime.c

libwireshark_la-oids.lo: oids.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-oids.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-oids.Tpo" -c -o libwireshark_la-oids.lo `test -f 'oids.c' || echo '$(srcdir)/'`oids.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-oids.Tpo" "$(DEPDIR)/libwireshark_la-oids.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-oids.Tpo"; exit 1; fi
#	source='oids.c' object='libwireshark_la-oids.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-oids.lo `test -f 'oids.c' || echo '$(srcdir)/'`oids.c

libwireshark_la-osi-utils.lo: osi-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-osi-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-osi-utils.Tpo" -c -o libwireshark_la-osi-utils.lo `test -f 'osi-utils.c' || echo '$(srcdir)/'`osi-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-osi-utils.Tpo" "$(DEPDIR)/libwireshark_la-osi-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-osi-utils.Tpo"; exit 1; fi
#	source='osi-utils.c' object='libwireshark_la-osi-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-osi-utils.lo `test -f 'osi-utils.c' || echo '$(srcdir)/'`osi-utils.c

libwireshark_la-packet.lo: packet.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-packet.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-packet.Tpo" -c -o libwireshark_la-packet.lo `test -f 'packet.c' || echo '$(srcdir)/'`packet.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-packet.Tpo" "$(DEPDIR)/libwireshark_la-packet.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-packet.Tpo"; exit 1; fi
#	source='packet.c' object='libwireshark_la-packet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-packet.lo `test -f 'packet.c' || echo '$(srcdir)/'`packet.c

libwireshark_la-plugins.lo: plugins.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-plugins.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-plugins.Tpo" -c -o libwireshark_la-plugins.lo `test -f 'plugins.c' || echo '$(srcdir)/'`plugins.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-plugins.Tpo" "$(DEPDIR)/libwireshark_la-plugins.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-plugins.Tpo"; exit 1; fi
#	source='plugins.c' object='libwireshark_la-plugins.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-plugins.lo `test -f 'plugins.c' || echo '$(srcdir)/'`plugins.c

libwireshark_la-prefs.lo: prefs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-prefs.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-prefs.Tpo" -c -o libwireshark_la-prefs.lo `test -f 'prefs.c' || echo '$(srcdir)/'`prefs.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-prefs.Tpo" "$(DEPDIR)/libwireshark_la-prefs.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-prefs.Tpo"; exit 1; fi
#	source='prefs.c' object='libwireshark_la-prefs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-prefs.lo `test -f 'prefs.c' || echo '$(srcdir)/'`prefs.c

libwireshark_la-privileges.lo: privileges.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-privileges.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-privileges.Tpo" -c -o libwireshark_la-privileges.lo `test -f 'privileges.c' || echo '$(srcdir)/'`privileges.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-privileges.Tpo" "$(DEPDIR)/libwireshark_la-privileges.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-privileges.Tpo"; exit 1; fi
#	source='privileges.c' object='libwireshark_la-privileges.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-privileges.lo `test -f 'privileges.c' || echo '$(srcdir)/'`privileges.c

libwireshark_la-proto.lo: proto.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-proto.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-proto.Tpo" -c -o libwireshark_la-proto.lo `test -f 'proto.c' || echo '$(srcdir)/'`proto.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-proto.Tpo" "$(DEPDIR)/libwireshark_la-proto.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-proto.Tpo"; exit 1; fi
#	source='proto.c' object='libwireshark_la-proto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-proto.lo `test -f 'proto.c' || echo '$(srcdir)/'`proto.c

libwireshark_la-range.lo: range.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-range.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-range.Tpo" -c -o libwireshark_la-range.lo `test -f 'range.c' || echo '$(srcdir)/'`range.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-range.Tpo" "$(DEPDIR)/libwireshark_la-range.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-range.Tpo"; exit 1; fi
#	source='range.c' object='libwireshark_la-range.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-range.lo `test -f 'range.c' || echo '$(srcdir)/'`range.c

libwireshark_la-reassemble.lo: reassemble.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-reassemble.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-reassemble.Tpo" -c -o libwireshark_la-reassemble.lo `test -f 'reassemble.c' || echo '$(srcdir)/'`reassemble.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-reassemble.Tpo" "$(DEPDIR)/libwireshark_la-reassemble.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-reassemble.Tpo"; exit 1; fi
#	source='reassemble.c' object='libwireshark_la-reassemble.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-reassemble.lo `test -f 'reassemble.c' || echo '$(srcdir)/'`reassemble.c

libwireshark_la-reedsolomon.lo: reedsolomon.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-reedsolomon.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-reedsolomon.Tpo" -c -o libwireshark_la-reedsolomon.lo `test -f 'reedsolomon.c' || echo '$(srcdir)/'`reedsolomon.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-reedsolomon.Tpo" "$(DEPDIR)/libwireshark_la-reedsolomon.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-reedsolomon.Tpo"; exit 1; fi
#	source='reedsolomon.c' object='libwireshark_la-reedsolomon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-reedsolomon.lo `test -f 'reedsolomon.c' || echo '$(srcdir)/'`reedsolomon.c

libwireshark_la-report_err.lo: report_err.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-report_err.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-report_err.Tpo" -c -o libwireshark_la-report_err.lo `test -f 'report_err.c' || echo '$(srcdir)/'`report_err.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-report_err.Tpo" "$(DEPDIR)/libwireshark_la-report_err.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-report_err.Tpo"; exit 1; fi
#	source='report_err.c' object='libwireshark_la-report_err.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-report_err.lo `test -f 'report_err.c' || echo '$(srcdir)/'`report_err.c

libwireshark_la-req_resp_hdrs.lo: req_resp_hdrs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-req_resp_hdrs.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-req_resp_hdrs.Tpo" -c -o libwireshark_la-req_resp_hdrs.lo `test -f 'req_resp_hdrs.c' || echo '$(srcdir)/'`req_resp_hdrs.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-req_resp_hdrs.Tpo" "$(DEPDIR)/libwireshark_la-req_resp_hdrs.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-req_resp_hdrs.Tpo"; exit 1; fi
#	source='req_resp_hdrs.c' object='libwireshark_la-req_resp_hdrs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-req_resp_hdrs.lo `test -f 'req_resp_hdrs.c' || echo '$(srcdir)/'`req_resp_hdrs.c

libwireshark_la-sigcomp_state_hdlr.lo: sigcomp_state_hdlr.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-sigcomp_state_hdlr.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-sigcomp_state_hdlr.Tpo" -c -o libwireshark_la-sigcomp_state_hdlr.lo `test -f 'sigcomp_state_hdlr.c' || echo '$(srcdir)/'`sigcomp_state_hdlr.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-sigcomp_state_hdlr.Tpo" "$(DEPDIR)/libwireshark_la-sigcomp_state_hdlr.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-sigcomp_state_hdlr.Tpo"; exit 1; fi
#	source='sigcomp_state_hdlr.c' object='libwireshark_la-sigcomp_state_hdlr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-sigcomp_state_hdlr.lo `test -f 'sigcomp_state_hdlr.c' || echo '$(srcdir)/'`sigcomp_state_hdlr.c

libwireshark_la-sigcomp-udvm.lo: sigcomp-udvm.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-sigcomp-udvm.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-sigcomp-udvm.Tpo" -c -o libwireshark_la-sigcomp-udvm.lo `test -f 'sigcomp-udvm.c' || echo '$(srcdir)/'`sigcomp-udvm.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-sigcomp-udvm.Tpo" "$(DEPDIR)/libwireshark_la-sigcomp-udvm.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-sigcomp-udvm.Tpo"; exit 1; fi
#	source='sigcomp-udvm.c' object='libwireshark_la-sigcomp-udvm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-sigcomp-udvm.lo `test -f 'sigcomp-udvm.c' || echo '$(srcdir)/'`sigcomp-udvm.c

libwireshark_la-sminmpec.lo: sminmpec.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-sminmpec.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-sminmpec.Tpo" -c -o libwireshark_la-sminmpec.lo `test -f 'sminmpec.c' || echo '$(srcdir)/'`sminmpec.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-sminmpec.Tpo" "$(DEPDIR)/libwireshark_la-sminmpec.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-sminmpec.Tpo"; exit 1; fi
#	source='sminmpec.c' object='libwireshark_la-sminmpec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-sminmpec.lo `test -f 'sminmpec.c' || echo '$(srcdir)/'`sminmpec.c

libwireshark_la-sna-utils.lo: sna-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-sna-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-sna-utils.Tpo" -c -o libwireshark_la-sna-utils.lo `test -f 'sna-utils.c' || echo '$(srcdir)/'`sna-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-sna-utils.Tpo" "$(DEPDIR)/libwireshark_la-sna-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-sna-utils.Tpo"; exit 1; fi
#	source='sna-utils.c' object='libwireshark_la-sna-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-sna-utils.lo `test -f 'sna-utils.c' || echo '$(srcdir)/'`sna-utils.c

libwireshark_la-stat_cmd_args.lo: stat_cmd_args.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-stat_cmd_args.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-stat_cmd_args.Tpo" -c -o libwireshark_la-stat_cmd_args.lo `test -f 'stat_cmd_args.c' || echo '$(srcdir)/'`stat_cmd_args.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-stat_cmd_args.Tpo" "$(DEPDIR)/libwireshark_la-stat_cmd_args.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-stat_cmd_args.Tpo"; exit 1; fi
#	source='stat_cmd_args.c' object='libwireshark_la-stat_cmd_args.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-stat_cmd_args.lo `test -f 'stat_cmd_args.c' || echo '$(srcdir)/'`stat_cmd_args.c

libwireshark_la-stats_tree.lo: stats_tree.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-stats_tree.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-stats_tree.Tpo" -c -o libwireshark_la-stats_tree.lo `test -f 'stats_tree.c' || echo '$(srcdir)/'`stats_tree.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-stats_tree.Tpo" "$(DEPDIR)/libwireshark_la-stats_tree.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-stats_tree.Tpo"; exit 1; fi
#	source='stats_tree.c' object='libwireshark_la-stats_tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-stats_tree.lo `test -f 'stats_tree.c' || echo '$(srcdir)/'`stats_tree.c

libwireshark_la-strutil.lo: strutil.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-strutil.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-strutil.Tpo" -c -o libwireshark_la-strutil.lo `test -f 'strutil.c' || echo '$(srcdir)/'`strutil.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-strutil.Tpo" "$(DEPDIR)/libwireshark_la-strutil.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-strutil.Tpo"; exit 1; fi
#	source='strutil.c' object='libwireshark_la-strutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-strutil.lo `test -f 'strutil.c' || echo '$(srcdir)/'`strutil.c

libwireshark_la-stream.lo: stream.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-stream.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-stream.Tpo" -c -o libwireshark_la-stream.lo `test -f 'stream.c' || echo '$(srcdir)/'`stream.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-stream.Tpo" "$(DEPDIR)/libwireshark_la-stream.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-stream.Tpo"; exit 1; fi
#	source='stream.c' object='libwireshark_la-stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-stream.lo `test -f 'stream.c' || echo '$(srcdir)/'`stream.c

libwireshark_la-t35.lo: t35.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-t35.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-t35.Tpo" -c -o libwireshark_la-t35.lo `test -f 't35.c' || echo '$(srcdir)/'`t35.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-t35.Tpo" "$(DEPDIR)/libwireshark_la-t35.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-t35.Tpo"; exit 1; fi
#	source='t35.c' object='libwireshark_la-t35.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-t35.lo `test -f 't35.c' || echo '$(srcdir)/'`t35.c

libwireshark_la-tap.lo: tap.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-tap.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-tap.Tpo" -c -o libwireshark_la-tap.lo `test -f 'tap.c' || echo '$(srcdir)/'`tap.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-tap.Tpo" "$(DEPDIR)/libwireshark_la-tap.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-tap.Tpo"; exit 1; fi
#	source='tap.c' object='libwireshark_la-tap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-tap.lo `test -f 'tap.c' || echo '$(srcdir)/'`tap.c

libwireshark_la-tcap-persistentdata.lo: tcap-persistentdata.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-tcap-persistentdata.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-tcap-persistentdata.Tpo" -c -o libwireshark_la-tcap-persistentdata.lo `test -f 'tcap-persistentdata.c' || echo '$(srcdir)/'`tcap-persistentdata.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-tcap-persistentdata.Tpo" "$(DEPDIR)/libwireshark_la-tcap-persistentdata.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-tcap-persistentdata.Tpo"; exit 1; fi
#	source='tcap-persistentdata.c' object='libwireshark_la-tcap-persistentdata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-tcap-persistentdata.lo `test -f 'tcap-persistentdata.c' || echo '$(srcdir)/'`tcap-persistentdata.c

libwireshark_la-timestamp.lo: timestamp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-timestamp.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-timestamp.Tpo" -c -o libwireshark_la-timestamp.lo `test -f 'timestamp.c' || echo '$(srcdir)/'`timestamp.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-timestamp.Tpo" "$(DEPDIR)/libwireshark_la-timestamp.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-timestamp.Tpo"; exit 1; fi
#	source='timestamp.c' object='libwireshark_la-timestamp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-timestamp.lo `test -f 'timestamp.c' || echo '$(srcdir)/'`timestamp.c

libwireshark_la-tfs.lo: tfs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-tfs.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-tfs.Tpo" -c -o libwireshark_la-tfs.lo `test -f 'tfs.c' || echo '$(srcdir)/'`tfs.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-tfs.Tpo" "$(DEPDIR)/libwireshark_la-tfs.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-tfs.Tpo"; exit 1; fi
#	source='tfs.c' object='libwireshark_la-tfs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-tfs.lo `test -f 'tfs.c' || echo '$(srcdir)/'`tfs.c

libwireshark_la-to_str.lo: to_str.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-to_str.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-to_str.Tpo" -c -o libwireshark_la-to_str.lo `test -f 'to_str.c' || echo '$(srcdir)/'`to_str.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-to_str.Tpo" "$(DEPDIR)/libwireshark_la-to_str.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-to_str.Tpo"; exit 1; fi
#	source='to_str.c' object='libwireshark_la-to_str.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-to_str.lo `test -f 'to_str.c' || echo '$(srcdir)/'`to_str.c

libwireshark_la-tvbparse.lo: tvbparse.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-tvbparse.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-tvbparse.Tpo" -c -o libwireshark_la-tvbparse.lo `test -f 'tvbparse.c' || echo '$(srcdir)/'`tvbparse.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-tvbparse.Tpo" "$(DEPDIR)/libwireshark_la-tvbparse.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-tvbparse.Tpo"; exit 1; fi
#	source='tvbparse.c' object='libwireshark_la-tvbparse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-tvbparse.lo `test -f 'tvbparse.c' || echo '$(srcdir)/'`tvbparse.c

libwireshark_la-tvbuff.lo: tvbuff.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-tvbuff.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-tvbuff.Tpo" -c -o libwireshark_la-tvbuff.lo `test -f 'tvbuff.c' || echo '$(srcdir)/'`tvbuff.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-tvbuff.Tpo" "$(DEPDIR)/libwireshark_la-tvbuff.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-tvbuff.Tpo"; exit 1; fi
#	source='tvbuff.c' object='libwireshark_la-tvbuff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-tvbuff.lo `test -f 'tvbuff.c' || echo '$(srcdir)/'`tvbuff.c

libwireshark_la-uat.lo: uat.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-uat.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-uat.Tpo" -c -o libwireshark_la-uat.lo `test -f 'uat.c' || echo '$(srcdir)/'`uat.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-uat.Tpo" "$(DEPDIR)/libwireshark_la-uat.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-uat.Tpo"; exit 1; fi
#	source='uat.c' object='libwireshark_la-uat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-uat.lo `test -f 'uat.c' || echo '$(srcdir)/'`uat.c

libwireshark_la-unicode-utils.lo: unicode-utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-unicode-utils.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-unicode-utils.Tpo" -c -o libwireshark_la-unicode-utils.lo `test -f 'unicode-utils.c' || echo '$(srcdir)/'`unicode-utils.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-unicode-utils.Tpo" "$(DEPDIR)/libwireshark_la-unicode-utils.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-unicode-utils.Tpo"; exit 1; fi
#	source='unicode-utils.c' object='libwireshark_la-unicode-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-unicode-utils.lo `test -f 'unicode-utils.c' || echo '$(srcdir)/'`unicode-utils.c

libwireshark_la-value_string.lo: value_string.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-value_string.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-value_string.Tpo" -c -o libwireshark_la-value_string.lo `test -f 'value_string.c' || echo '$(srcdir)/'`value_string.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-value_string.Tpo" "$(DEPDIR)/libwireshark_la-value_string.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-value_string.Tpo"; exit 1; fi
#	source='value_string.c' object='libwireshark_la-value_string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-value_string.lo `test -f 'value_string.c' || echo '$(srcdir)/'`value_string.c

libwireshark_la-ws_strsplit.lo: ws_strsplit.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-ws_strsplit.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-ws_strsplit.Tpo" -c -o libwireshark_la-ws_strsplit.lo `test -f 'ws_strsplit.c' || echo '$(srcdir)/'`ws_strsplit.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-ws_strsplit.Tpo" "$(DEPDIR)/libwireshark_la-ws_strsplit.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-ws_strsplit.Tpo"; exit 1; fi
#	source='ws_strsplit.c' object='libwireshark_la-ws_strsplit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-ws_strsplit.lo `test -f 'ws_strsplit.c' || echo '$(srcdir)/'`ws_strsplit.c

libwireshark_la-xdlc.lo: xdlc.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-xdlc.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-xdlc.Tpo" -c -o libwireshark_la-xdlc.lo `test -f 'xdlc.c' || echo '$(srcdir)/'`xdlc.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-xdlc.Tpo" "$(DEPDIR)/libwireshark_la-xdlc.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-xdlc.Tpo"; exit 1; fi
#	source='xdlc.c' object='libwireshark_la-xdlc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-xdlc.lo `test -f 'xdlc.c' || echo '$(srcdir)/'`xdlc.c

libwireshark_la-xmlstub.lo: xmlstub.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-xmlstub.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-xmlstub.Tpo" -c -o libwireshark_la-xmlstub.lo `test -f 'xmlstub.c' || echo '$(srcdir)/'`xmlstub.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-xmlstub.Tpo" "$(DEPDIR)/libwireshark_la-xmlstub.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-xmlstub.Tpo"; exit 1; fi
#	source='xmlstub.c' object='libwireshark_la-xmlstub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-xmlstub.lo `test -f 'xmlstub.c' || echo '$(srcdir)/'`xmlstub.c

libwireshark_la-g_ascii_strcasecmp.lo: g_ascii_strcasecmp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-g_ascii_strcasecmp.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-g_ascii_strcasecmp.Tpo" -c -o libwireshark_la-g_ascii_strcasecmp.lo `test -f 'g_ascii_strcasecmp.c' || echo '$(srcdir)/'`g_ascii_strcasecmp.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-g_ascii_strcasecmp.Tpo" "$(DEPDIR)/libwireshark_la-g_ascii_strcasecmp.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-g_ascii_strcasecmp.Tpo"; exit 1; fi
#	source='g_ascii_strcasecmp.c' object='libwireshark_la-g_ascii_strcasecmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-g_ascii_strcasecmp.lo `test -f 'g_ascii_strcasecmp.c' || echo '$(srcdir)/'`g_ascii_strcasecmp.c

libwireshark_la-g_ascii_strtoull.lo: g_ascii_strtoull.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-g_ascii_strtoull.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-g_ascii_strtoull.Tpo" -c -o libwireshark_la-g_ascii_strtoull.lo `test -f 'g_ascii_strtoull.c' || echo '$(srcdir)/'`g_ascii_strtoull.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-g_ascii_strtoull.Tpo" "$(DEPDIR)/libwireshark_la-g_ascii_strtoull.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-g_ascii_strtoull.Tpo"; exit 1; fi
#	source='g_ascii_strtoull.c' object='libwireshark_la-g_ascii_strtoull.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-g_ascii_strtoull.lo `test -f 'g_ascii_strtoull.c' || echo '$(srcdir)/'`g_ascii_strtoull.c

libwireshark_la-inet_aton.lo: inet_aton.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -MT libwireshark_la-inet_aton.lo -MD -MP -MF "$(DEPDIR)/libwireshark_la-inet_aton.Tpo" -c -o libwireshark_la-inet_aton.lo `test -f 'inet_aton.c' || echo '$(srcdir)/'`inet_aton.c; \
	then mv -f "$(DEPDIR)/libwireshark_la-inet_aton.Tpo" "$(DEPDIR)/libwireshark_la-inet_aton.Plo"; else rm -f "$(DEPDIR)/libwireshark_la-inet_aton.Tpo"; exit 1; fi
#	source='inet_aton.c' object='libwireshark_la-inet_aton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwireshark_la_CFLAGS) $(CFLAGS) -c -o libwireshark_la-inet_aton.lo `test -f 'inet_aton.c' || echo '$(srcdir)/'`inet_aton.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES


.l.c:
	$(RUNLEX) "$(LEX)" -o$@ $<

#EXTRA_PROGRAMS = reassemble_test
#reassemble_test_LDADD = $(GLIB_LIBS)

reassemble_test: reassemble_test.o tvbuff.o except.o strutil.o emem.o \
                 reassemble.o
	$(LINK) $^ $(GLIB_LIBS) -lz

tvbtest: tvbtest.o tvbuff.o except.o strutil.o emem.o
	$(LINK) $^ $(GLIB_LIBS) -lz

exntest: exntest.o except.o
	$(LINK) $^ $(GLIB_LIBS)

diam_dict_lex.h: diam_dict.c

dtd_parse_lex.h: dtd_parse.c

dtd_preparse_lex.h: dtd_preparse.c

radius_dict_lex.h: radius_dict.c

uat_load_lex.h: uat_load.c

dtd_grammar.h: dtd_grammar.c

dtd_grammar.c: $(LEMON)/lemon$(EXEEXT) $(srcdir)/$(LEMON)/lempar.c $(srcdir)/dtd_grammar.lemon
	$(LEMON)/lemon$(EXEEXT) t=$(srcdir)/$(LEMON)/lempar.c $(srcdir)/dtd_grammar.lemon

tvbtest.o exntest.o: exceptions.h

sminmpec.c: enterprise-numbers make-sminmpec.pl
	$(PERL) $(srcdir)/make-sminmpec.pl $(srcdir)/enterprise-numbers sminmpec.c

inet_ntop.c:
	ln -s $(srcdir)/../inet_ntop.c .

inet_pton.c:
	ln -s $(srcdir)/../inet_pton.c .

doxygen:
#	$(DOXYGEN) doxygen.cfg
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

; ModuleID = 'ld-temp.o'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.paperdef = type { [15 x i8], double, double, double }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.cpTag = type { i16, i16, i32 }
%struct.crop_mask = type { double, double, [4 x double], float, float, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [8 x %struct.region], i16, [8 x %struct.zone], [8 x %struct.coordpairs] }
%struct.region = type { i32, i32, i32, i32, i32, i32, i32, i8* }
%struct.zone = type { i32, i32 }
%struct.coordpairs = type { double, double, double, double }
%struct.pagedef = type { [16 x i8], double, double, double, double, double, double, i32, i16, i32, i32, i32 }
%struct.dump_opts = type { i32, i32, i32, [4 x i8], [4097 x i8], [4097 x i8], %struct._IO_FILE*, %struct._IO_FILE* }
%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue* }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }
%struct.image_data = type { float, float, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.pageseg = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.buffinfo = type { i32, i8* }
%struct.offset = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [65 x i8] c"ac:d:e:f:hil:m:p:r:stvw:z:BCD:E:F:H:I:J:K:LMN:O:P:R:S:U:V:X:Y:Z:\00", align 1
@optarg = external global i8*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"Unknown compression option\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"For valid options type\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"tiffcrop -h\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Directory offset must be greater than zero\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"Unknown export mode\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"lsb2msb\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"msb2lsb\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Unknown fill order\00", align 1
@ignore = internal global i32 0, align 4, !dbg !0
@outtiled = internal global i32 -1, align 4, !dbg !149
@.str.11 = private unnamed_addr constant [9 x i8] c"separate\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"contig\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"Unkown planar configuration\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"Library Release\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"Tiffcrop version\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"%s, last updated: %s\00", align 1
@tiffcrop_version_id = internal global [4 x i8] c"2.4\00", align 1, !dbg !151
@tiffcrop_rev_date = internal global [11 x i8] c"12-13-2010\00", align 1, !dbg !156
@.str.17 = private unnamed_addr constant [12 x i8] c"Tiffcp code\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"Copyright (c) 1988-1997 Sam Leffler\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"           \00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"Copyright (c) 1991-1997 Silicon Graphics, Inc\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"Tiffcrop additions\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"Copyright (c) 2007-2010 Richard Nolde\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"%lf,%lf,%lf,%lf\00", align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"Unable to parse coordinates for region\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"Region list exceeds limit of\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"%d regions %s\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c":=\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"Invalid dump option\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"txt\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"parse_command_opts\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"Unknown dump format %s\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"lev\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"deb\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"Defaulting to dump level 1, no data.\00", align 1
@.str.44 = private unnamed_addr constant [46 x i8] c"You must specify a dump format for dump files\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c",:\00", align 1
@.str.46 = private unnamed_addr constant [51 x i8] c"Edge reference must be top, bottom, left, or right\00", align 1
@.str.47 = private unnamed_addr constant [39 x i8] c"Flip mode must be horiz, vert, or both\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.52 = private unnamed_addr constant [67 x i8] c"Missing or unknown option for inverting PHOTOMETRIC_INTERPRETATION\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"odd\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"even\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c":-\00", align 1
@.str.57 = private unnamed_addr constant [50 x i8] c"Orientation must be portrait, landscape, or auto.\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"%lfx%lf\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"Custom\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.61 = private unnamed_addr constant [43 x i8] c"Name            Width   Length (in inches)\00", align 1
@PaperTable = dso_local global [49 x %struct.paperdef] [%struct.paperdef { [15 x i8] c"default\00\00\00\00\00\00\00\00", double 8.500000e+00, double 1.400000e+01, double 0x3FE36C8B43958106 }, %struct.paperdef { [15 x i8] c"pa4\00\00\00\00\00\00\00\00\00\00\00\00", double 0x4020872B020C49BA, double 1.100000e+01, double 7.510000e-01 }, %struct.paperdef { [15 x i8] c"letter\00\00\00\00\00\00\00\00\00", double 8.500000e+00, double 1.100000e+01, double 7.730000e-01 }, %struct.paperdef { [15 x i8] c"legal\00\00\00\00\00\00\00\00\00\00", double 8.500000e+00, double 1.400000e+01, double 0x3FE36C8B43958106 }, %struct.paperdef { [15 x i8] c"half-letter\00\00\00\00", double 8.500000e+00, double 5.514000e+00, double 1.542000e+00 }, %struct.paperdef { [15 x i8] c"executive\00\00\00\00\00\00", double 7.264000e+00, double 1.052800e+01, double 6.900000e-01 }, %struct.paperdef { [15 x i8] c"tabloid\00\00\00\00\00\00\00\00", double 1.100000e+01, double 1.700000e+01, double 6.470000e-01 }, %struct.paperdef { [15 x i8] c"11x17\00\00\00\00\00\00\00\00\00\00", double 1.100000e+01, double 1.700000e+01, double 6.470000e-01 }, %struct.paperdef { [15 x i8] c"ledger\00\00\00\00\00\00\00\00\00", double 1.700000e+01, double 1.100000e+01, double 1.545000e+00 }, %struct.paperdef { [15 x i8] c"archa\00\00\00\00\00\00\00\00\00\00", double 9.000000e+00, double 1.200000e+01, double 7.500000e-01 }, %struct.paperdef { [15 x i8] c"archb\00\00\00\00\00\00\00\00\00\00", double 1.200000e+01, double 1.800000e+01, double 6.670000e-01 }, %struct.paperdef { [15 x i8] c"archc\00\00\00\00\00\00\00\00\00\00", double 1.800000e+01, double 2.400000e+01, double 7.500000e-01 }, %struct.paperdef { [15 x i8] c"archd\00\00\00\00\00\00\00\00\00\00", double 2.400000e+01, double 3.600000e+01, double 6.670000e-01 }, %struct.paperdef { [15 x i8] c"arche\00\00\00\00\00\00\00\00\00\00", double 3.600000e+01, double 4.800000e+01, double 7.500000e-01 }, %struct.paperdef { [15 x i8] c"csheet\00\00\00\00\00\00\00\00\00", double 1.700000e+01, double 2.200000e+01, double 7.730000e-01 }, %struct.paperdef { [15 x i8] c"dsheet\00\00\00\00\00\00\00\00\00", double 2.200000e+01, double 3.400000e+01, double 6.470000e-01 }, %struct.paperdef { [15 x i8] c"esheet\00\00\00\00\00\00\00\00\00", double 3.400000e+01, double 4.400000e+01, double 7.730000e-01 }, %struct.paperdef { [15 x i8] c"superb\00\00\00\00\00\00\00\00\00", double 1.170800e+01, double 1.704200e+01, double 6.870000e-01 }, %struct.paperdef { [15 x i8] c"commercial\00\00\00\00\00", double 4.139000e+00, double 9.528000e+00, double 4.340000e-01 }, %struct.paperdef { [15 x i8] c"monarch\00\00\00\00\00\00\00\00", double 3.889000e+00, double 0x401E1CAC083126E9, double 5.170000e-01 }, %struct.paperdef { [15 x i8] c"envelope-dl\00\00\00\00", double 4.333000e+00, double 8.681000e+00, double 4.990000e-01 }, %struct.paperdef { [15 x i8] c"envelope-c5\00\00\00\00", double 6.389000e+00, double 9.028000e+00, double 0x3FE6A7EF9DB22D0E }, %struct.paperdef { [15 x i8] c"europostcard\00\00\00", double 4.139000e+00, double 5.833000e+00, double 7.100000e-01 }, %struct.paperdef { [15 x i8] c"a0\00\00\00\00\00\00\00\00\00\00\00\00\00", double 3.311000e+01, double 4.681100e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"a1\00\00\00\00\00\00\00\00\00\00\00\00\00", double 2.338600e+01, double 3.311000e+01, double 7.060000e-01 }, %struct.paperdef { [15 x i8] c"a2\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.653500e+01, double 2.338600e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"a3\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.169300e+01, double 1.653500e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"a4\00\00\00\00\00\00\00\00\00\00\00\00\00", double 8.268000e+00, double 1.169300e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"a5\00\00\00\00\00\00\00\00\00\00\00\00\00", double 5.827000e+00, double 8.268000e+00, double 7.050000e-01 }, %struct.paperdef { [15 x i8] c"a6\00\00\00\00\00\00\00\00\00\00\00\00\00", double 4.134000e+00, double 5.827000e+00, double 7.090000e-01 }, %struct.paperdef { [15 x i8] c"a7\00\00\00\00\00\00\00\00\00\00\00\00\00", double 2.913000e+00, double 4.134000e+00, double 7.050000e-01 }, %struct.paperdef { [15 x i8] c"a8\00\00\00\00\00\00\00\00\00\00\00\00\00", double 2.047000e+00, double 2.913000e+00, double 7.030000e-01 }, %struct.paperdef { [15 x i8] c"a9\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.457000e+00, double 2.047000e+00, double 0x3FE6C8B439581062 }, %struct.paperdef { [15 x i8] c"a10\00\00\00\00\00\00\00\00\00\00\00\00", double 1.024000e+00, double 1.457000e+00, double 7.030000e-01 }, %struct.paperdef { [15 x i8] c"b0\00\00\00\00\00\00\00\00\00\00\00\00\00", double 3.937000e+01, double 5.566900e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"b1\00\00\00\00\00\00\00\00\00\00\00\00\00", double 2.783500e+01, double 3.937000e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"b2\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.968500e+01, double 2.783500e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"b3\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.389800e+01, double 1.968500e+01, double 7.060000e-01 }, %struct.paperdef { [15 x i8] c"b4\00\00\00\00\00\00\00\00\00\00\00\00\00", double 0x4023AF9DB22D0E56, double 1.389800e+01, double 0x3FE6A7EF9DB22D0E }, %struct.paperdef { [15 x i8] c"b5\00\00\00\00\00\00\00\00\00\00\00\00\00", double 6.929000e+00, double 0x4023AF9DB22D0E56, double 0x3FE6872B020C49BA }, %struct.paperdef { [15 x i8] c"b6\00\00\00\00\00\00\00\00\00\00\00\00\00", double 4.921000e+00, double 6.929000e+00, double 7.100000e-01 }, %struct.paperdef { [15 x i8] c"c0\00\00\00\00\00\00\00\00\00\00\00\00\00", double 3.610200e+01, double 5.106300e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"c1\00\00\00\00\00\00\00\00\00\00\00\00\00", double 2.551200e+01, double 3.610200e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"c2\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.803100e+01, double 2.551200e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"c3\00\00\00\00\00\00\00\00\00\00\00\00\00", double 1.275600e+01, double 1.803100e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"c4\00\00\00\00\00\00\00\00\00\00\00\00\00", double 9.016000e+00, double 1.275600e+01, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"c5\00\00\00\00\00\00\00\00\00\00\00\00\00", double 6.378000e+00, double 9.016000e+00, double 7.070000e-01 }, %struct.paperdef { [15 x i8] c"c6\00\00\00\00\00\00\00\00\00\00\00\00\00", double 4.488000e+00, double 6.378000e+00, double 0x3FE6872B020C49BA }, %struct.paperdef { [15 x i8] zeroinitializer, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00 }], align 16, !dbg !125
@.str.62 = private unnamed_addr constant [23 x i8] c"%-15.15s %5.2f   %5.2f\00", align 1
@.str.63 = private unnamed_addr constant [19 x i8] c"Invalid paper size\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"Select one of:\00", align 1
@.str.65 = private unnamed_addr constant [51 x i8] c"Rotation must be 90, 180, or 270 degrees clockwise\00", align 1
@.str.66 = private unnamed_addr constant [52 x i8] c"Limit for subdivisions, ie rows x columns, exceeded\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"cm\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"px\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"Illegal unit of measure\00", align 1
@.str.71 = private unnamed_addr constant [31 x i8] c"Zone list exceeds region limit\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.103 = private unnamed_addr constant [5 x i8] c"\0A%s\0A\00", align 1
@usage_info = internal global [132 x i8*] [i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* null], align 16, !dbg !143
@.str.104 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.105 = private unnamed_addr constant [59 x i8] c"usage: tiffcrop [options] source1 ... sourceN  destination\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"where options are:\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c" -h\09\09Print this syntax listing\00", align 1
@.str.108 = private unnamed_addr constant [62 x i8] c" -v\09\09Print tiffcrop version identifier and last revision date\00", align 1
@.str.109 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.110 = private unnamed_addr constant [45 x i8] c" -a\09\09Append to output instead of overwriting\00", align 1
@.str.111 = private unnamed_addr constant [79 x i8] c" -d offset\09Set initial directory offset, counting first image as one, not zero\00", align 1
@.str.112 = private unnamed_addr constant [54 x i8] c" -p contig\09Pack samples contiguously (e.g. RGBRGB...)\00", align 1
@.str.113 = private unnamed_addr constant [64 x i8] c" -p separate\09Store samples separately (e.g. RRR...GGG...BBB...)\00", align 1
@.str.114 = private unnamed_addr constant [28 x i8] c" -s\09\09Write output in strips\00", align 1
@.str.115 = private unnamed_addr constant [27 x i8] c" -t\09\09Write output in tiles\00", align 1
@.str.116 = private unnamed_addr constant [24 x i8] c" -i\09\09Ignore read errors\00", align 1
@.str.117 = private unnamed_addr constant [48 x i8] c" -r #\09\09Make each strip have no more than # rows\00", align 1
@.str.118 = private unnamed_addr constant [38 x i8] c" -w #\09\09Set output tile width (pixels)\00", align 1
@.str.119 = private unnamed_addr constant [39 x i8] c" -l #\09\09Set output tile length (pixels)\00", align 1
@.str.120 = private unnamed_addr constant [50 x i8] c" -f lsb2msb\09Force lsb-to-msb FillOrder for output\00", align 1
@.str.121 = private unnamed_addr constant [50 x i8] c" -f msb2lsb\09Force msb-to-lsb FillOrder for output\00", align 1
@.str.122 = private unnamed_addr constant [65 x i8] c" -c lzw[:opts]\09 Compress output with Lempel-Ziv & Welch encoding\00", align 1
@.str.123 = private unnamed_addr constant [54 x i8] c" -c zip[:opts]\09 Compress output with deflate encoding\00", align 1
@.str.124 = private unnamed_addr constant [51 x i8] c" -c jpeg[:opts] Compress output with JPEG encoding\00", align 1
@.str.125 = private unnamed_addr constant [53 x i8] c" -c packbits\09 Compress output with packbits encoding\00", align 1
@.str.126 = private unnamed_addr constant [59 x i8] c" -c g3[:opts]\09 Compress output with CCITT Group 3 encoding\00", align 1
@.str.127 = private unnamed_addr constant [53 x i8] c" -c g4\09\09 Compress output with CCITT Group 4 encoding\00", align 1
@.str.128 = private unnamed_addr constant [49 x i8] c" -c none\09 Use no compression algorithm on output\00", align 1
@.str.129 = private unnamed_addr constant [17 x i8] c"Group 3 options:\00", align 1
@.str.130 = private unnamed_addr constant [43 x i8] c" 1d\09\09Use default CCITT Group 3 1D-encoding\00", align 1
@.str.131 = private unnamed_addr constant [44 x i8] c" 2d\09\09Use optional CCITT Group 3 2D-encoding\00", align 1
@.str.132 = private unnamed_addr constant [28 x i8] c" fill\09\09Byte-align EOL codes\00", align 1
@.str.133 = private unnamed_addr constant [76 x i8] c"For example, -c g3:2d:fill to get G3-2D-encoded data with byte-aligned EOLs\00", align 1
@.str.134 = private unnamed_addr constant [14 x i8] c"JPEG options:\00", align 1
@.str.135 = private unnamed_addr constant [55 x i8] c" #\09\09Set compression quality level (0-100, default 100)\00", align 1
@.str.136 = private unnamed_addr constant [38 x i8] c" raw\09\09Output color image as raw YCbCr\00", align 1
@.str.137 = private unnamed_addr constant [32 x i8] c" rgb\09\09Output color image as RGB\00", align 1
@.str.138 = private unnamed_addr constant [80 x i8] c"For example, -c jpeg:rgb:50 to get JPEG-encoded RGB data with 50% comp. quality\00", align 1
@.str.139 = private unnamed_addr constant [25 x i8] c"LZW and deflate options:\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c" #\09\09Set predictor value\00", align 1
@.str.141 = private unnamed_addr constant [75 x i8] c"For example, -c lzw:2 to get LZW-encoded data with horizontal differencing\00", align 1
@.str.142 = private unnamed_addr constant [28 x i8] c"Page and selection options:\00", align 1
@.str.143 = private unnamed_addr constant [88 x i8] c" -N odd|even|#,#-#,#|last         sequences and ranges of images within file to process\00", align 1
@.str.144 = private unnamed_addr constant [91 x i8] c"             The words odd or even may be used to specify all odd or even numbered images.\00", align 1
@.str.145 = private unnamed_addr constant [89 x i8] c"             The word last may be used in place of a number in the sequence to indicate.\00", align 1
@.str.146 = private unnamed_addr constant [84 x i8] c"             The final image in the file without knowing how many images there are.\00", align 1
@.str.147 = private unnamed_addr constant [87 x i8] c"             Numbers are counted from one even though TIFF IFDs are counted from zero.\00", align 1
@.str.148 = private unnamed_addr constant [71 x i8] c" -E t|l|r|b  edge to use as origin for width and length of crop region\00", align 1
@.str.149 = private unnamed_addr constant [57 x i8] c" -U units    [in, cm, px ] inches, centimeters or pixels\00", align 1
@.str.150 = private unnamed_addr constant [92 x i8] c" -m #,#,#,#  margins from edges for selection: top, left, bottom, right separated by commas\00", align 1
@.str.151 = private unnamed_addr constant [82 x i8] c" -X #        horizontal dimension of region to extract expressed in current units\00", align 1
@.str.152 = private unnamed_addr constant [80 x i8] c" -Y #        vertical dimension of region to extract expressed in current units\00", align 1
@.str.153 = private unnamed_addr constant [63 x i8] c" -Z #:#,#:#  zones of the image designated as position X of Y,\00", align 1
@.str.154 = private unnamed_addr constant [88 x i8] c"             eg 1:3 would be first of three equal portions measured from reference edge\00", align 1
@.str.155 = private unnamed_addr constant [36 x i8] c" -z x1,y1,x2,y2:...:xN,yN,xN+1,yN+1\00", align 1
@.str.156 = private unnamed_addr constant [87 x i8] c"             regions of the image designated by upper left and lower right coordinates\00", align 1
@.str.157 = private unnamed_addr constant [25 x i8] c"Export grouping options:\00", align 1
@.str.158 = private unnamed_addr constant [74 x i8] c" -e c|d|i|m|s    export mode for images and selections from input images.\00", align 1
@.str.159 = private unnamed_addr constant [81 x i8] c"                 When exporting a composite image from multiple zones or regions\00", align 1
@.str.160 = private unnamed_addr constant [82 x i8] c"                 (combined and image modes), the selections must have equal sizes\00", align 1
@.str.161 = private unnamed_addr constant [75 x i8] c"                 for the axis perpendicular to the edge specified with -E.\00", align 1
@.str.162 = private unnamed_addr constant [83 x i8] c"    c|combined   All images and selections are written to a single file (default).\00", align 1
@.str.163 = private unnamed_addr constant [87 x i8] c"                 with multiple selections from one image combined into a single image.\00", align 1
@.str.164 = private unnamed_addr constant [72 x i8] c"    d|divided    All images and selections are written to a single file\00", align 1
@.str.165 = private unnamed_addr constant [76 x i8] c"                 with each selection from one image written to a new image.\00", align 1
@.str.166 = private unnamed_addr constant [87 x i8] c"    i|image      Each input image is written to a new file (numeric filename sequence)\00", align 1
@.str.167 = private unnamed_addr constant [82 x i8] c"                 with multiple selections from the image combined into one image.\00", align 1
@.str.168 = private unnamed_addr constant [87 x i8] c"    m|multiple   Each input image is written to a new file (numeric filename sequence)\00", align 1
@.str.169 = private unnamed_addr constant [76 x i8] c"                 with each selection from the image written to a new image.\00", align 1
@.str.170 = private unnamed_addr constant [86 x i8] c"    s|separated  Individual selections from each image are written to separate files.\00", align 1
@.str.171 = private unnamed_addr constant [16 x i8] c"Output options:\00", align 1
@.str.172 = private unnamed_addr constant [61 x i8] c" -H #        Set horizontal resolution of output images to #\00", align 1
@.str.173 = private unnamed_addr constant [59 x i8] c" -V #        Set vertical resolution of output images to #\00", align 1
@.str.174 = private unnamed_addr constant [82 x i8] c" -J #        Set horizontal margin of output page to # expressed in current units\00", align 1
@.str.175 = private unnamed_addr constant [85 x i8] c"             when sectioning image into columns x rows using the -S cols:rows option\00", align 1
@.str.176 = private unnamed_addr constant [82 x i8] c" -K #        Set verticalal margin of output page to # expressed in current units\00", align 1
@.str.177 = private unnamed_addr constant [70 x i8] c" -O orient    orientation for output image, portrait, landscape, auto\00", align 1
@.str.178 = private unnamed_addr constant [82 x i8] c" -P page      page size for output image segments, eg letter, legal, tabloid, etc\00", align 1
@.str.179 = private unnamed_addr constant [87 x i8] c"              use #.#x#.# to specify a custom page size in the currently defined units\00", align 1
@.str.180 = private unnamed_addr constant [56 x i8] c"              where #.# represents the width and length\00", align 1
@.str.181 = private unnamed_addr constant [90 x i8] c" -S cols:rows Divide the image into equal sized segments using cols across and rows down.\00", align 1
@.str.182 = private unnamed_addr constant [18 x i8] c" -F hor|vert|both\00", align 1
@.str.183 = private unnamed_addr constant [77 x i8] c"             flip (mirror) image or region horizontally, vertically, or both\00", align 1
@.str.184 = private unnamed_addr constant [85 x i8] c" -R #        [90,180,or 270] degrees clockwise rotation of image or extracted region\00", align 1
@.str.185 = private unnamed_addr constant [28 x i8] c" -I [black|white|data|both]\00", align 1
@.str.186 = private unnamed_addr constant [83 x i8] c"             invert color space, eg dark to light for bilevel and grayscale images\00", align 1
@.str.187 = private unnamed_addr constant [80 x i8] c"             If argument is white or black, set the PHOTOMETRIC_INTERPRETATION \00", align 1
@.str.188 = private unnamed_addr constant [77 x i8] c"             tag to MinIsBlack or MinIsWhite without altering the image data\00", align 1
@.str.189 = private unnamed_addr constant [75 x i8] c"             If the argument is data or both, the image data are modified:\00", align 1
@.str.190 = private unnamed_addr constant [75 x i8] c"             both inverts the data and the PHOTOMETRIC_INTERPRETATION tag,\00", align 1
@.str.191 = private unnamed_addr constant [78 x i8] c"             data inverts the data but not the PHOTOMETRIC_INTERPRETATION tag\00", align 1
@.str.192 = private unnamed_addr constant [51 x i8] c"-D opt1:value1,opt2:value2,opt3:value3:opt4:value4\00", align 1
@.str.193 = private unnamed_addr constant [72 x i8] c"             Debug/dump program progress and/or data to non-TIFF files.\00", align 1
@.str.194 = private unnamed_addr constant [73 x i8] c"             Options include the following and must be joined as a comma\00", align 1
@.str.195 = private unnamed_addr constant [75 x i8] c"             separate list. The use of this option is generally limited to\00", align 1
@.str.196 = private unnamed_addr constant [66 x i8] c"             program debugging and development of future options.\00", align 1
@.str.197 = private unnamed_addr constant [72 x i8] c"   debug:N   Display limited program progress indicators where larger N\00", align 1
@.str.198 = private unnamed_addr constant [79 x i8] c"             increase the level of detail. Note: Tiffcrop may be compiled with\00", align 1
@.str.199 = private unnamed_addr constant [78 x i8] c"             -DDEVELMODE to enable additional very low level debug reporting.\00", align 1
@.str.200 = private unnamed_addr constant [71 x i8] c"   Format:txt|raw  Format any logged data as ASCII text or raw binary \00", align 1
@.str.201 = private unnamed_addr constant [73 x i8] c"             values. ASCII text dumps include strings of ones and zeroes\00", align 1
@.str.202 = private unnamed_addr constant [88 x i8] c"             representing the binary values in the image data plus identifying headers.\00", align 1
@.str.203 = private unnamed_addr constant [70 x i8] c"   level:N   Specify the level of detail presented in the dump files.\00", align 1
@.str.204 = private unnamed_addr constant [88 x i8] c"             This can vary from dumps of the entire input or output image data to dumps\00", align 1
@.str.205 = private unnamed_addr constant [89 x i8] c"             of data processed by specific functions. Current range of levels is 1 to 3.\00", align 1
@.str.206 = private unnamed_addr constant [47 x i8] c"   input:full-path-to-directory/input-dumpname\00", align 1
@.str.207 = private unnamed_addr constant [49 x i8] c"   output:full-path-to-directory/output-dumpnaem\00", align 1
@.str.208 = private unnamed_addr constant [89 x i8] c"             When dump files are being written, each image will be written to a separate\00", align 1
@.str.209 = private unnamed_addr constant [89 x i8] c"             file with the name built by adding a numeric sequence value to the dumpname\00", align 1
@.str.210 = private unnamed_addr constant [80 x i8] c"             and an extension of .txt for ASCII dumps or .bin for binary dumps.\00", align 1
@.str.211 = private unnamed_addr constant [90 x i8] c"             The four debug/dump options are independent, though it makes little sense to\00", align 1
@.str.212 = private unnamed_addr constant [68 x i8] c"             specify a dump file without specifying a detail level.\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@defcompression = internal global i16 -1, align 2, !dbg !167
@.str.93 = private unnamed_addr constant [9 x i8] c"packbits\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"jpeg\00", align 1
@quality = internal global i32 100, align 4, !dbg !139
@jpegcolormode = internal global i32 1, align 4, !dbg !141
@.str.95 = private unnamed_addr constant [4 x i8] c"rgb\00", align 1
@.str.96 = private unnamed_addr constant [3 x i8] c"g3\00", align 1
@.str.97 = private unnamed_addr constant [3 x i8] c"g4\00", align 1
@.str.98 = private unnamed_addr constant [4 x i8] c"lzw\00", align 1
@defpredictor = internal global i16 -1, align 2, !dbg !171
@.str.99 = private unnamed_addr constant [4 x i8] c"zip\00", align 1
@defg3opts = internal global i32 -1, align 4, !dbg !183
@.str.100 = private unnamed_addr constant [3 x i8] c"1d\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"2d\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"fill\00", align 1
@little_endian = internal global i32 1, align 4, !dbg !161
@optind = external global i32, align 4
@pageNum = internal global i32 0, align 4, !dbg !163
@.str.72 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.73 = private unnamed_addr constant [54 x i8] c"Invalid image number %d, File contains only %d images\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"Error, setting subdirectory at %d\00", align 1
@config = internal global i16 0, align 2, !dbg !165
@compression = internal global i16 0, align 2, !dbg !169
@predictor = internal global i16 0, align 2, !dbg !173
@fillorder = internal global i16 0, align 2, !dbg !175
@rowsperstrip = internal global i32 0, align 4, !dbg !177
@tilewidth = internal global i32 0, align 4, !dbg !179
@tilelength = internal global i32 0, align 4, !dbg !181
@g3opts = internal global i32 0, align 4, !dbg !185
@.str.75 = private unnamed_addr constant [16 x i8] c"%s-read-%03d.%s\00", align 1
@.str.76 = private unnamed_addr constant [37 x i8] c"Unable to open dump file for writing\00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"Reading image\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"%d from %s\00", align 1
@.str.79 = private unnamed_addr constant [17 x i8] c"%s-write-%03d.%s\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"Writing image\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.82 = private unnamed_addr constant [38 x i8] c"Reading image %4d of %4d total pages.\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"Unable to load source image\00", align 1
@.str.84 = private unnamed_addr constant [36 x i8] c"Unable to correct image orientation\00", align 1
@.str.85 = private unnamed_addr constant [30 x i8] c"Unable to define crop regions\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"Unable to process image selections\00", align 1
@.str.87 = private unnamed_addr constant [30 x i8] c"Unable to create output image\00", align 1
@.str.88 = private unnamed_addr constant [26 x i8] c"Unable to write new image\00", align 1
@.str.89 = private unnamed_addr constant [38 x i8] c"Unable to compute output section data\00", align 1
@.str.90 = private unnamed_addr constant [31 x i8] c"Unable to write image sections\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"Completed run for %s\00", align 1
@.str.350 = private unnamed_addr constant [19 x i8] c"writeImageSections\00", align 1
@.str.351 = private unnamed_addr constant [83 x i8] c"%d Rows and Columns exceed maximum sections\0AIncrease resolution or reduce sections\00", align 1
@.str.352 = private unnamed_addr constant [34 x i8] c"Unable to allocate section buffer\00", align 1
@.str.353 = private unnamed_addr constant [33 x i8] c"Unable to extract image sections\00", align 1
@.str.354 = private unnamed_addr constant [30 x i8] c"Unable to write image section\00", align 1
@.str.359 = private unnamed_addr constant [8 x i8] c"palette\00", align 1
@.str.360 = private unnamed_addr constant [5 x i8] c"mask\00", align 1
@.str.357 = private unnamed_addr constant [19 x i8] c"writeSingleSection\00", align 1
@.str.358 = private unnamed_addr constant [51 x i8] c"JPEG compression cannot be used with %s image data\00", align 1
@.str.361 = private unnamed_addr constant [69 x i8] c"LogL and LogLuv source data require SGI_LOG or SGI_LOG24 compression\00", align 1
@.str.362 = private unnamed_addr constant [50 x i8] c"JPEG compression requires 8 or 12 bits per sample\00", align 1
@tags = internal global [33 x %struct.cpTag] [%struct.cpTag { i16 254, i16 1, i32 4 }, %struct.cpTag { i16 263, i16 1, i32 3 }, %struct.cpTag { i16 269, i16 1, i32 2 }, %struct.cpTag { i16 270, i16 1, i32 2 }, %struct.cpTag { i16 271, i16 1, i32 2 }, %struct.cpTag { i16 272, i16 1, i32 2 }, %struct.cpTag { i16 280, i16 1, i32 3 }, %struct.cpTag { i16 281, i16 1, i32 3 }, %struct.cpTag { i16 282, i16 1, i32 5 }, %struct.cpTag { i16 283, i16 1, i32 5 }, %struct.cpTag { i16 285, i16 1, i32 2 }, %struct.cpTag { i16 286, i16 1, i32 5 }, %struct.cpTag { i16 287, i16 1, i32 5 }, %struct.cpTag { i16 296, i16 1, i32 3 }, %struct.cpTag { i16 305, i16 1, i32 2 }, %struct.cpTag { i16 306, i16 1, i32 2 }, %struct.cpTag { i16 315, i16 1, i32 2 }, %struct.cpTag { i16 316, i16 1, i32 2 }, %struct.cpTag { i16 318, i16 -1, i32 5 }, %struct.cpTag { i16 319, i16 -1, i32 5 }, %struct.cpTag { i16 321, i16 2, i32 3 }, %struct.cpTag { i16 332, i16 1, i32 3 }, %struct.cpTag { i16 336, i16 2, i32 3 }, %struct.cpTag { i16 337, i16 1, i32 2 }, %struct.cpTag { i16 339, i16 1, i32 3 }, %struct.cpTag { i16 529, i16 -1, i32 5 }, %struct.cpTag { i16 530, i16 2, i32 3 }, %struct.cpTag { i16 531, i16 1, i32 3 }, %struct.cpTag { i16 532, i16 -1, i32 5 }, %struct.cpTag { i16 338, i16 -1, i32 3 }, %struct.cpTag { i16 340, i16 1, i32 12 }, %struct.cpTag { i16 341, i16 1, i32 12 }, %struct.cpTag { i16 -28097, i16 1, i32 12 }], align 16, !dbg !577
@.str.378 = private unnamed_addr constant [75 x i8] c"Sample %2d, Strip: %2d, bytes: %4d, Row %4d, bytes: %4d, Input offset: %6d\00", align 1
@.str.377 = private unnamed_addr constant [28 x i8] c"Error, can't write strip %u\00", align 1
@.str.284 = private unnamed_addr constant [35 x i8] c"Invalid FILE pointer for dump file\00", align 1
@.str.324 = private unnamed_addr constant [31 x i8] c"Row %4d, %d bytes at offset %d\00", align 1
@.str.285 = private unnamed_addr constant [6 x i8] c" %s  \00", align 1
@.str.286 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.287 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.293 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.221 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.289 = private unnamed_addr constant [41 x i8] c"Unable to write binary data to dump file\00", align 1
@.str.379 = private unnamed_addr constant [29 x i8] c"extractContigSamplesToBuffer\00", align 1
@.str.368 = private unnamed_addr constant [19 x i8] c"Sample %d, %d rows\00", align 1
@.str.267 = private unnamed_addr constant [26 x i8] c"Unsupported bit depth: %d\00", align 1
@.str.372 = private unnamed_addr constant [27 x i8] c"extractContigSamples32bits\00", align 1
@.str.273 = private unnamed_addr constant [31 x i8] c"Invalid input or output buffer\00", align 1
@.str.310 = private unnamed_addr constant [38 x i8] c"Invalid start column value %d ignored\00", align 1
@.str.311 = private unnamed_addr constant [36 x i8] c"Invalid end column value %d ignored\00", align 1
@.str.371 = private unnamed_addr constant [27 x i8] c"extractContigSamples24bits\00", align 1
@.str.370 = private unnamed_addr constant [27 x i8] c"extractContigSamples16bits\00", align 1
@.str.369 = private unnamed_addr constant [26 x i8] c"extractContigSamples8bits\00", align 1
@.str.309 = private unnamed_addr constant [26 x i8] c"extractContigSamplesBytes\00", align 1
@.str.373 = private unnamed_addr constant [27 x i8] c"writeBufferToSeparateTiles\00", align 1
@.str.374 = private unnamed_addr constant [62 x i8] c"Unable to extract data to tile for row %lu, col %lu sample %d\00", align 1
@.str.375 = private unnamed_addr constant [27 x i8] c"writeBufferToseparateTiles\00", align 1
@.str.376 = private unnamed_addr constant [40 x i8] c"Cannot write tile at %lu %lu sample %lu\00", align 1
@.str.367 = private unnamed_addr constant [33 x i8] c"extractContigSamplesToTileBuffer\00", align 1
@.str.364 = private unnamed_addr constant [25 x i8] c"writeBufferToContigTiles\00", align 1
@.str.365 = private unnamed_addr constant [52 x i8] c"Unable to extract data to tile for row %lu, col %lu\00", align 1
@.str.366 = private unnamed_addr constant [29 x i8] c"Cannot write tile at %lu %lu\00", align 1
@.str.363 = private unnamed_addr constant [46 x i8] c"Data type %d is not supported, tag %d skipped\00", align 1
@createImageSection.prev_sectsize = internal global i32 0, align 4, !dbg !572
@.str.355 = private unnamed_addr constant [19 x i8] c"createImageSection\00", align 1
@.str.356 = private unnamed_addr constant [45 x i8] c"Unable to allocate/reallocate section buffer\00", align 1
@.str.234 = private unnamed_addr constant [26 x i8] c"computeOutputPixelOffsets\00", align 1
@.str.235 = private unnamed_addr constant [77 x i8] c"Invalid horizontal or vertical resolution specified or read from input image\00", align 1
@.str.236 = private unnamed_addr constant [72 x i8] c"Page size: %s, Vres: %3.2f, Hres: %3.2f, Hmargin: %3.2f, Vmargin: %3.2f\00", align 1
@.str.237 = private unnamed_addr constant [61 x i8] c"Res_unit: %d, Scale: %3.2f, Page width: %3.2f, length: %3.2f\00", align 1
@.str.238 = private unnamed_addr constant [50 x i8] c"Combined left and right margins exceed page width\00", align 1
@.str.239 = private unnamed_addr constant [51 x i8] c"Combined top and bottom margins exceed page length\00", align 1
@.str.240 = private unnamed_addr constant [57 x i8] c"Output margins cannot be specified with rows and columns\00", align 1
@.str.241 = private unnamed_addr constant [80 x i8] c"Rows and Columns exceed maximum sections\0AIncrease resolution or reduce sections\00", align 1
@.str.406 = private unnamed_addr constant [18 x i8] c"writeCroppedImage\00", align 1
@.str.407 = private unnamed_addr constant [49 x i8] c"Group 3/4 compression is not usable with bps > 1\00", align 1
@.str.408 = private unnamed_addr constant [49 x i8] c"Unable to write contiguous tile data for page %d\00", align 1
@.str.409 = private unnamed_addr constant [47 x i8] c"Unable to write separate tile data for page %d\00", align 1
@.str.410 = private unnamed_addr constant [50 x i8] c"Unable to write contiguous strip data for page %d\00", align 1
@.str.411 = private unnamed_addr constant [48 x i8] c"Unable to write separate strip data for page %d\00", align 1
@.str.412 = private unnamed_addr constant [39 x i8] c"Failed to write IFD for page number %d\00", align 1
@.str.213 = private unnamed_addr constant [6 x i8] c".tiff\00", align 1
@update_output_file.findex = internal global i32 0, align 4, !dbg !187
@.str.214 = private unnamed_addr constant [5 x i8] c".tif\00", align 1
@.str.215 = private unnamed_addr constant [5 x i8] c".TIF\00", align 1
@.str.216 = private unnamed_addr constant [19 x i8] c"update_output_file\00", align 1
@.str.217 = private unnamed_addr constant [38 x i8] c"Maximum of %d pages per file exceeded\00", align 1
@.str.218 = private unnamed_addr constant [8 x i8] c"-%03d%s\00", align 1
@.str.219 = private unnamed_addr constant [30 x i8] c"Unable to open output file %s\00", align 1
@.str.349 = private unnamed_addr constant [13 x i8] c"writeRegions\00", align 1
@createCroppedImage.prev_cropsize = internal global i64 0, align 8, !dbg !587
@.str.402 = private unnamed_addr constant [19 x i8] c"createCroppedImage\00", align 1
@.str.381 = private unnamed_addr constant [42 x i8] c"Unable to allocate/reallocate crop buffer\00", align 1
@.str.403 = private unnamed_addr constant [59 x i8] c"Failed to invert colorspace for image or cropped selection\00", align 1
@.str.384 = private unnamed_addr constant [13 x i8] c"horizontally\00", align 1
@.str.385 = private unnamed_addr constant [11 x i8] c"vertically\00", align 1
@.str.404 = private unnamed_addr constant [47 x i8] c"Failed to mirror image or cropped selection %s\00", align 1
@.str.405 = private unnamed_addr constant [58 x i8] c"Failed to rotate image or cropped selection by %d degrees\00", align 1
@.str.340 = private unnamed_addr constant [12 x i8] c"rotateImage\00", align 1
@.str.341 = private unnamed_addr constant [26 x i8] c"Invalid rotation angle %d\00", align 1
@.str.342 = private unnamed_addr constant [48 x i8] c"Unable to allocate rotation buffer of %1u bytes\00", align 1
@.str.308 = private unnamed_addr constant [25 x i8] c"Unsupported bit depth %d\00", align 1
@.str.348 = private unnamed_addr constant [26 x i8] c"rotateContigSamples24bits\00", align 1
@.str.345 = private unnamed_addr constant [34 x i8] c"Invalid src or destination buffer\00", align 1
@.str.344 = private unnamed_addr constant [25 x i8] c"rotateContigSamples8bits\00", align 1
@.str.346 = private unnamed_addr constant [20 x i8] c"Invalid rotation %d\00", align 1
@.str.347 = private unnamed_addr constant [26 x i8] c"rotateContigSamples16bits\00", align 1
@.str.339 = private unnamed_addr constant [21 x i8] c"reverseSamples32bits\00", align 1
@.str.337 = private unnamed_addr constant [29 x i8] c"Invalid image or work buffer\00", align 1
@.str.338 = private unnamed_addr constant [21 x i8] c"reverseSamples24bits\00", align 1
@.str.336 = private unnamed_addr constant [20 x i8] c"reverseSample16bits\00", align 1
@.str.343 = private unnamed_addr constant [20 x i8] c"reverseSamples8bits\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"mirrorImage\00", align 1
@.str.332 = private unnamed_addr constant [51 x i8] c"Unable to allocate mirror line buffer of %1u bytes\00", align 1
@.str.333 = private unnamed_addr constant [38 x i8] c"Unable to allocate mirror line buffer\00", align 1
@.str.334 = private unnamed_addr constant [23 x i8] c"Invalid mirror axis %d\00", align 1
@.str.335 = private unnamed_addr constant [20 x i8] c"reverseSamplesBytes\00", align 1
@.str.397 = private unnamed_addr constant [12 x i8] c"invertImage\00", align 1
@.str.398 = private unnamed_addr constant [65 x i8] c"Image inversion not supported for more than one sample per pixel\00", align 1
@.str.399 = private unnamed_addr constant [58 x i8] c"Only black and white and grayscale images can be inverted\00", align 1
@.str.400 = private unnamed_addr constant [42 x i8] c"Invalid crop buffer passed to invertImage\00", align 1
@.str.380 = private unnamed_addr constant [22 x i8] c"processCropSelections\00", align 1
@.str.382 = private unnamed_addr constant [50 x i8] c"Failed to invert colorspace for composite regions\00", align 1
@.str.383 = private unnamed_addr constant [38 x i8] c"Failed to mirror composite regions %s\00", align 1
@.str.386 = private unnamed_addr constant [49 x i8] c"Failed to rotate composite regions by %d degrees\00", align 1
@.str.387 = private unnamed_addr constant [47 x i8] c"Unable to extract cropped region %d from image\00", align 1
@.str.388 = private unnamed_addr constant [39 x i8] c"Failed to invert colorspace for region\00", align 1
@.str.389 = private unnamed_addr constant [32 x i8] c"Failed to mirror crop region %s\00", align 1
@.str.390 = private unnamed_addr constant [43 x i8] c"Failed to rotate crop region by %d degrees\00", align 1
@.str.401 = private unnamed_addr constant [22 x i8] c"extractSeparateRegion\00", align 1
@.str.393 = private unnamed_addr constant [25 x i8] c"Unable to extract row %d\00", align 1
@.str.315 = private unnamed_addr constant [34 x i8] c"extractContigSamplesShifted32bits\00", align 1
@.str.314 = private unnamed_addr constant [34 x i8] c"extractContigSamplesShifted24bits\00", align 1
@.str.313 = private unnamed_addr constant [34 x i8] c"extractContigSamplesShifted16bits\00", align 1
@.str.312 = private unnamed_addr constant [33 x i8] c"extractContigSamplesShifted8bits\00", align 1
@.str.391 = private unnamed_addr constant [24 x i8] c"extractCompositeRegions\00", align 1
@.str.392 = private unnamed_addr constant [62 x i8] c"Only equal width regions can be combined for -E top or bottom\00", align 1
@.str.394 = private unnamed_addr constant [63 x i8] c"Only equal length regions can be combined for -E left or right\00", align 1
@.str.395 = private unnamed_addr constant [23 x i8] c"combineSeparateRegions\00", align 1
@.str.396 = private unnamed_addr constant [46 x i8] c"Combined width does not match composite width\00", align 1
@.str.222 = private unnamed_addr constant [15 x i8] c"getCropOffsets\00", align 1
@.str.223 = private unnamed_addr constant [31 x i8] c"Unable to compute crop margins\00", align 1
@.str.224 = private unnamed_addr constant [50 x i8] c"Margins: Top: %d  Left: %d  Bottom: %d  Right: %d\00", align 1
@.str.225 = private unnamed_addr constant [62 x i8] c"Crop region within margins: Adjusted Width:  %6d  Length: %6d\00", align 1
@.str.226 = private unnamed_addr constant [69 x i8] c"Zone %d, width: %4d, length: %4d, x1: %4d  x2: %4d  y1: %4d  y2: %4d\00", align 1
@.str.227 = private unnamed_addr constant [25 x i8] c"computeInputPixelOffsets\00", align 1
@.str.228 = private unnamed_addr constant [71 x i8] c"Cannot compute margins or fixed size sections without image resolution\00", align 1
@.str.229 = private unnamed_addr constant [38 x i8] c"Specify units in pixels and try again\00", align 1
@.str.230 = private unnamed_addr constant [51 x i8] c"Combined left and right margins exceed image width\00", align 1
@.str.231 = private unnamed_addr constant [52 x i8] c"Combined top and bottom margins exceed image length\00", align 1
@.str.232 = private unnamed_addr constant [62 x i8] c"Invalid left/right margins and /or image crop width requested\00", align 1
@.str.233 = private unnamed_addr constant [63 x i8] c"Invalid top/bottom margins and /or image crop length requested\00", align 1
@.str.325 = private unnamed_addr constant [19 x i8] c"correct_orientatin\00", align 1
@.str.326 = private unnamed_addr constant [32 x i8] c"Invalid image or buffer pointer\00", align 1
@.str.327 = private unnamed_addr constant [20 x i8] c"correct_orientation\00", align 1
@.str.328 = private unnamed_addr constant [23 x i8] c"Unable to mirror image\00", align 1
@.str.329 = private unnamed_addr constant [27 x i8] c"Invalid rotation value: %d\00", align 1
@.str.330 = private unnamed_addr constant [23 x i8] c"Unable to rotate image\00", align 1
@.str.242 = private unnamed_addr constant [10 x i8] c"loadImage\00", align 1
@.str.243 = private unnamed_addr constant [42 x i8] c"Image lacks Photometric interpreation tag\00", align 1
@.str.244 = private unnamed_addr constant [10 x i8] c"loadimage\00", align 1
@.str.245 = private unnamed_addr constant [28 x i8] c"Image lacks image width tag\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"Image lacks image length tag\00", align 1
@.str.247 = private unnamed_addr constant [55 x i8] c"Invalid samples per pixel (%d) or bits per sample (%d)\00", align 1
@.str.248 = private unnamed_addr constant [53 x i8] c"Tilesize: %u, Number of Tiles: %u, Tile row size: %u\00", align 1
@.str.249 = private unnamed_addr constant [75 x i8] c"Stripsize: %u, Number of Strips: %u, Rows per Strip: %u, Scanline size: %u\00", align 1
@.str.250 = private unnamed_addr constant [70 x i8] c"Can't copy/convert subsampled image with subsampling %d horiz %d vert\00", align 1
@loadImage.prev_readsize = internal global i32 0, align 4, !dbg !537
@.str.251 = private unnamed_addr constant [42 x i8] c"Unable to allocate/reallocate read buffer\00", align 1
@.str.252 = private unnamed_addr constant [45 x i8] c"Unable to read contiguous strips into buffer\00", align 1
@.str.253 = private unnamed_addr constant [43 x i8] c"Unable to read separate strips into buffer\00", align 1
@.str.254 = private unnamed_addr constant [44 x i8] c"Unable to read contiguous tiles into buffer\00", align 1
@.str.255 = private unnamed_addr constant [42 x i8] c"Unable to read separate tiles into buffer\00", align 1
@.str.256 = private unnamed_addr constant [30 x i8] c"Unsupported image file format\00", align 1
@.str.257 = private unnamed_addr constant [53 x i8] c"Image width %d, length %d, Raw image data, %4d bytes\00", align 1
@.str.258 = private unnamed_addr constant [41 x i8] c"Bits per sample %d, Samples per pixel %d\00", align 1
@.str.316 = private unnamed_addr constant [28 x i8] c"readSeparateTilesIntoBuffer\00", align 1
@.str.317 = private unnamed_addr constant [50 x i8] c"Unable to allocate tile read buffer for sample %d\00", align 1
@.str.318 = private unnamed_addr constant [55 x i8] c"Error, can't read tile for row %lu col %lu, sample %lu\00", align 1
@.str.323 = private unnamed_addr constant [33 x i8] c"combineSeparateTileSamples32bits\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c"Flush\00", align 1
@.str.275 = private unnamed_addr constant [7 x i8] c"Update\00", align 1
@.str.304 = private unnamed_addr constant [81 x i8] c"Row %3d, Col %3d, Sample %d, Src byte offset %3d  bit offset %2d  Dst offset %3d\00", align 1
@.str.295 = private unnamed_addr constant [12 x i8] c"Match bits \00", align 1
@.str.296 = private unnamed_addr constant [12 x i8] c"Src   bits \00", align 1
@.str.297 = private unnamed_addr constant [12 x i8] c"Buff1 bits \00", align 1
@.str.298 = private unnamed_addr constant [12 x i8] c"Buff2 bits \00", align 1
@.str.301 = private unnamed_addr constant [21 x i8] c"Ready bits:   %d, %s\00", align 1
@.str.281 = private unnamed_addr constant [70 x i8] c"Row %3d, Col %3d, Src byte offset %3d  bit offset %2d  Dst offset %3d\00", align 1
@.str.299 = private unnamed_addr constant [12 x i8] c"Write bits1\00", align 1
@.str.300 = private unnamed_addr constant [12 x i8] c"Write bits2\00", align 1
@.str.302 = private unnamed_addr constant [17 x i8] c"Ready bits:  %2d\00", align 1
@.str.283 = private unnamed_addr constant [12 x i8] c"Output data\00", align 1
@.str.288 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.322 = private unnamed_addr constant [33 x i8] c"combineSeparateTileSamples24bits\00", align 1
@.str.276 = private unnamed_addr constant [82 x i8] c"Row %3d, Col %3d, Samples %d, Src byte offset %3d  bit offset %2d  Dst offset %3d\00", align 1
@.str.321 = private unnamed_addr constant [33 x i8] c"combineSeparateTileSamples16bits\00", align 1
@.str.277 = private unnamed_addr constant [11 x i8] c"Match bits\00", align 1
@.str.278 = private unnamed_addr constant [11 x i8] c"Src   bits\00", align 1
@.str.279 = private unnamed_addr constant [11 x i8] c"Buff1 bits\00", align 1
@.str.280 = private unnamed_addr constant [11 x i8] c"Buff2 bits\00", align 1
@.str.291 = private unnamed_addr constant [11 x i8] c"Write byte\00", align 1
@.str.292 = private unnamed_addr constant [20 x i8] c"Ready bits:  %d, %s\00", align 1
@.str.282 = private unnamed_addr constant [11 x i8] c"Final bits\00", align 1
@.str.320 = private unnamed_addr constant [32 x i8] c"combineSeparateTileSamples8bits\00", align 1
@.str.319 = private unnamed_addr constant [32 x i8] c"combineSeparateTileSamplesBytes\00", align 1
@.str.269 = private unnamed_addr constant [23 x i8] c"Invalid buffer address\00", align 1
@.str.270 = private unnamed_addr constant [22 x i8] c"Input data, Sample %d\00", align 1
@.str.271 = private unnamed_addr constant [30 x i8] c"Output data, combined samples\00", align 1
@.str.305 = private unnamed_addr constant [65 x i8] c"Error, can't read tile at row %lu col %lu, Read %lu bytes of %lu\00", align 1
@.str.306 = private unnamed_addr constant [26 x i8] c"readContigTilesIntoBuffer\00", align 1
@.str.307 = private unnamed_addr constant [39 x i8] c"Unable to extract row %d from tile %lu\00", align 1
@.str.261 = private unnamed_addr constant [29 x i8] c"readSeparateStripsIntoBuffer\00", align 1
@.str.262 = private unnamed_addr constant [24 x i8] c"Invalid buffer argument\00", align 1
@.str.263 = private unnamed_addr constant [52 x i8] c"Image width %d, length %d, Scanline size, %4d bytes\00", align 1
@.str.264 = private unnamed_addr constant [57 x i8] c"Bits per sample %d, Samples per pixel %d, Shift width %d\00", align 1
@.str.265 = private unnamed_addr constant [51 x i8] c"Unable to allocate strip read buffer for sample %d\00", align 1
@.str.266 = private unnamed_addr constant [42 x i8] c"Error, can't read strip %lu for sample %d\00", align 1
@.str.303 = private unnamed_addr constant [29 x i8] c"combineSeparateSamples32bits\00", align 1
@.str.294 = private unnamed_addr constant [29 x i8] c"combineSeparateSamples24bits\00", align 1
@.str.290 = private unnamed_addr constant [29 x i8] c"combineSeparateSamples16bits\00", align 1
@.str.272 = private unnamed_addr constant [28 x i8] c"combineSeparateSamples8bits\00", align 1
@.str.268 = private unnamed_addr constant [28 x i8] c"combineSeparateSamplesBytes\00", align 1
@.str.259 = private unnamed_addr constant [41 x i8] c"Strip %d: read %lu bytes, strip size %lu\00", align 1
@.str.260 = private unnamed_addr constant [39 x i8] c"Error reading strip %lu after %lu rows\00", align 1
@.str.220 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@specialMalloc = external thread_local global i8, align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @process_command_opts(i32, i8**, i8*, i8*, i32*, i16*, i16*, i32*, i32*, i32*, %struct.crop_mask*, %struct.pagedef*, %struct.dump_opts*, i32*, i32*) #0 !dbg !651 {
  %16 = alloca i32, align 4
  %17 = alloca i8**, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i16*, align 8
  %22 = alloca i16*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  %26 = alloca %struct.crop_mask*, align 8
  %27 = alloca %struct.pagedef*, align 8
  %28 = alloca %struct.dump_opts*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  store i32 %0, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !673, metadata !DIExpression()), !dbg !674
  store i8** %1, i8*** %17, align 8
  call void @llvm.dbg.declare(metadata i8*** %17, metadata !675, metadata !DIExpression()), !dbg !676
  store i8* %2, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !677, metadata !DIExpression()), !dbg !678
  store i8* %3, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !679, metadata !DIExpression()), !dbg !680
  store i32* %4, i32** %20, align 8
  call void @llvm.dbg.declare(metadata i32** %20, metadata !681, metadata !DIExpression()), !dbg !682
  store i16* %5, i16** %21, align 8
  call void @llvm.dbg.declare(metadata i16** %21, metadata !683, metadata !DIExpression()), !dbg !684
  store i16* %6, i16** %22, align 8
  call void @llvm.dbg.declare(metadata i16** %22, metadata !685, metadata !DIExpression()), !dbg !686
  store i32* %7, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !687, metadata !DIExpression()), !dbg !688
  store i32* %8, i32** %24, align 8
  call void @llvm.dbg.declare(metadata i32** %24, metadata !689, metadata !DIExpression()), !dbg !690
  store i32* %9, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !691, metadata !DIExpression()), !dbg !692
  store %struct.crop_mask* %10, %struct.crop_mask** %26, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %26, metadata !693, metadata !DIExpression()), !dbg !694
  store %struct.pagedef* %11, %struct.pagedef** %27, align 8
  call void @llvm.dbg.declare(metadata %struct.pagedef** %27, metadata !695, metadata !DIExpression()), !dbg !696
  store %struct.dump_opts* %12, %struct.dump_opts** %28, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %28, metadata !697, metadata !DIExpression()), !dbg !698
  store i32* %13, i32** %29, align 8
  call void @llvm.dbg.declare(metadata i32** %29, metadata !699, metadata !DIExpression()), !dbg !700
  store i32* %14, i32** %30, align 8
  call void @llvm.dbg.declare(metadata i32** %30, metadata !701, metadata !DIExpression()), !dbg !702
  call void @llvm.dbg.declare(metadata i32* %31, metadata !703, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.declare(metadata i32* %32, metadata !705, metadata !DIExpression()), !dbg !706
  store i32 0, i32* %32, align 4, !dbg !706
  call void @llvm.dbg.declare(metadata i8** %33, metadata !707, metadata !DIExpression()), !dbg !708
  store i8* null, i8** %33, align 8, !dbg !708
  call void @llvm.dbg.declare(metadata i8** %34, metadata !709, metadata !DIExpression()), !dbg !710
  store i8* null, i8** %34, align 8, !dbg !710
  call void @llvm.dbg.declare(metadata i8** %35, metadata !711, metadata !DIExpression()), !dbg !712
  store i8* null, i8** %35, align 8, !dbg !712
  call void @llvm.dbg.declare(metadata i32* %36, metadata !713, metadata !DIExpression()), !dbg !714
  call void @llvm.dbg.declare(metadata i32* %37, metadata !715, metadata !DIExpression()), !dbg !716
  call void @llvm.dbg.declare(metadata i32* %38, metadata !717, metadata !DIExpression()), !dbg !718
  call void @llvm.dbg.declare(metadata i32* %39, metadata !719, metadata !DIExpression()), !dbg !720
  %40 = load i8*, i8** %18, align 8, !dbg !721
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !721
  store i8* %41, i8** %18, align 8, !dbg !721
  store i8 119, i8* %40, align 1, !dbg !722
  %42 = load i8*, i8** %18, align 8, !dbg !723
  store i8 0, i8* %42, align 1, !dbg !724
  br label %43, !dbg !725

43:                                               ; preds = %954, %531, %524, %517, %510, %15
  %44 = load i32, i32* %16, align 4, !dbg !726
  %45 = load i8**, i8*** %17, align 8, !dbg !727
  %46 = call i32 @getopt(i32 %44, i8** %45, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0)) #8, !dbg !728
  store i32 %46, i32* %31, align 4, !dbg !729
  %47 = icmp ne i32 %46, -1, !dbg !730
  br i1 %47, label %48, label %955, !dbg !725

48:                                               ; preds = %43
  %49 = load i32, i32* %32, align 4, !dbg !731
  %50 = add nsw i32 %49, 1, !dbg !731
  store i32 %50, i32* %32, align 4, !dbg !731
  %51 = load i32, i32* %31, align 4, !dbg !733
  switch i32 %51, label %954 [
    i32 97, label %52
    i32 99, label %55
    i32 100, label %62
    i32 101, label %73
    i32 102, label %107
    i32 104, label %123
    i32 105, label %124
    i32 108, label %125
    i32 112, label %129
    i32 114, label %145
    i32 115, label %150
    i32 116, label %151
    i32 118, label %152
    i32 119, label %154
    i32 122, label %158
    i32 66, label %224
    i32 76, label %228
    i32 77, label %232
    i32 67, label %236
    i32 68, label %240
    i32 109, label %416
    i32 69, label %446
    i32 70, label %467
    i32 72, label %491
    i32 73, label %500
    i32 74, label %536
    i32 75, label %545
    i32 78, label %554
    i32 79, label %676
    i32 80, label %694
    i32 82, label %775
    i32 83, label %796
    i32 85, label %836
    i32 86, label %868
    i32 88, label %877
    i32 89, label %888
    i32 90, label %899
    i32 63, label %953
  ], !dbg !734

52:                                               ; preds = %48
  %53 = load i8*, i8** %19, align 8, !dbg !735
  %54 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !735
  store i8 97, i8* %54, align 1, !dbg !737
  br label %954, !dbg !738

55:                                               ; preds = %48
  %56 = load i8*, i8** @optarg, align 8, !dbg !739
  %57 = call i32 @processCompressOptions(i8* %56), !dbg !741
  %58 = icmp ne i32 %57, 0, !dbg !741
  br i1 %58, label %61, label %59, !dbg !742

59:                                               ; preds = %55
  %60 = load i8*, i8** @optarg, align 8, !dbg !743
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %60), !dbg !745
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !746
  call void @exit(i32 -1) #9, !dbg !747
  unreachable, !dbg !747

61:                                               ; preds = %55
  br label %954, !dbg !748

62:                                               ; preds = %48
  %63 = load i8*, i8** @optarg, align 8, !dbg !749
  %64 = call i64 @strtoul(i8* %63, i8** null, i32 0) #8, !dbg !750
  %65 = trunc i64 %64 to i32, !dbg !750
  store i32 %65, i32* %38, align 4, !dbg !751
  %66 = load i32, i32* %38, align 4, !dbg !752
  %67 = icmp eq i32 %66, 0, !dbg !754
  br i1 %67, label %68, label %69, !dbg !755

68:                                               ; preds = %62
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0)), !dbg !756
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !758
  call void @exit(i32 -1) #9, !dbg !759
  unreachable, !dbg !759

69:                                               ; preds = %62
  %70 = load i32, i32* %38, align 4, !dbg !760
  %71 = sub i32 %70, 1, !dbg !761
  %72 = load i32*, i32** %20, align 8, !dbg !762
  store i32 %71, i32* %72, align 4, !dbg !763
  br label %954, !dbg !764

73:                                               ; preds = %48
  %74 = load i8*, i8** @optarg, align 8, !dbg !765
  %75 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !765
  %76 = load i8, i8* %75, align 1, !dbg !765
  %77 = sext i8 %76 to i32, !dbg !765
  %78 = call i32 @tolower(i32 %77) #10, !dbg !766
  switch i32 %78, label %104 [
    i32 99, label %79
    i32 100, label %84
    i32 105, label %89
    i32 109, label %94
    i32 115, label %99
  ], !dbg !767

79:                                               ; preds = %73
  %80 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !768
  %81 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %80, i32 0, i32 9, !dbg !770
  store i16 0, i16* %81, align 2, !dbg !771
  %82 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !772
  %83 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %82, i32 0, i32 8, !dbg !773
  store i16 0, i16* %83, align 4, !dbg !774
  br label %106, !dbg !775

84:                                               ; preds = %73
  %85 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !776
  %86 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %85, i32 0, i32 9, !dbg !777
  store i16 1, i16* %86, align 2, !dbg !778
  %87 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !779
  %88 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %87, i32 0, i32 8, !dbg !780
  store i16 1, i16* %88, align 4, !dbg !781
  br label %106, !dbg !782

89:                                               ; preds = %73
  %90 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !783
  %91 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %90, i32 0, i32 9, !dbg !784
  store i16 2, i16* %91, align 2, !dbg !785
  %92 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !786
  %93 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %92, i32 0, i32 8, !dbg !787
  store i16 0, i16* %93, align 4, !dbg !788
  br label %106, !dbg !789

94:                                               ; preds = %73
  %95 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !790
  %96 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %95, i32 0, i32 9, !dbg !791
  store i16 3, i16* %96, align 2, !dbg !792
  %97 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !793
  %98 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %97, i32 0, i32 8, !dbg !794
  store i16 1, i16* %98, align 4, !dbg !795
  br label %106, !dbg !796

99:                                               ; preds = %73
  %100 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !797
  %101 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %100, i32 0, i32 9, !dbg !798
  store i16 4, i16* %101, align 2, !dbg !799
  %102 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !800
  %103 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %102, i32 0, i32 8, !dbg !801
  store i16 1, i16* %103, align 4, !dbg !802
  br label %106, !dbg !803

104:                                              ; preds = %73
  %105 = load i8*, i8** @optarg, align 8, !dbg !804
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %105), !dbg !805
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !806
  call void @exit(i32 -1) #9, !dbg !807
  unreachable, !dbg !807

106:                                              ; preds = %99, %94, %89, %84, %79
  br label %954, !dbg !808

107:                                              ; preds = %48
  %108 = load i8*, i8** @optarg, align 8, !dbg !809
  %109 = call i32 @strcmp(i8* %108, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !809
  %110 = icmp eq i32 %109, 0, !dbg !809
  br i1 %110, label %111, label %113, !dbg !811

111:                                              ; preds = %107
  %112 = load i16*, i16** %22, align 8, !dbg !812
  store i16 2, i16* %112, align 2, !dbg !813
  br label %122, !dbg !814

113:                                              ; preds = %107
  %114 = load i8*, i8** @optarg, align 8, !dbg !815
  %115 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !815
  %116 = icmp eq i32 %115, 0, !dbg !815
  br i1 %116, label %117, label %119, !dbg !817

117:                                              ; preds = %113
  %118 = load i16*, i16** %22, align 8, !dbg !818
  store i16 1, i16* %118, align 2, !dbg !819
  br label %121, !dbg !820

119:                                              ; preds = %113
  %120 = load i8*, i8** @optarg, align 8, !dbg !821
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %120), !dbg !823
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !824
  call void @exit(i32 -1) #9, !dbg !825
  unreachable, !dbg !825

121:                                              ; preds = %117
  br label %122

122:                                              ; preds = %121, %111
  br label %954, !dbg !826

123:                                              ; preds = %48
  call void @usage(), !dbg !827
  br label %954, !dbg !828

124:                                              ; preds = %48
  store i32 1, i32* @ignore, align 4, !dbg !829
  br label %954, !dbg !830

125:                                              ; preds = %48
  store i32 1, i32* @outtiled, align 4, !dbg !831
  %126 = load i8*, i8** @optarg, align 8, !dbg !832
  %127 = call i32 @atoi(i8* %126) #10, !dbg !833
  %128 = load i32*, i32** %24, align 8, !dbg !834
  store i32 %127, i32* %128, align 4, !dbg !835
  br label %954, !dbg !836

129:                                              ; preds = %48
  %130 = load i8*, i8** @optarg, align 8, !dbg !837
  %131 = call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !837
  %132 = icmp eq i32 %131, 0, !dbg !837
  br i1 %132, label %133, label %135, !dbg !839

133:                                              ; preds = %129
  %134 = load i16*, i16** %21, align 8, !dbg !840
  store i16 2, i16* %134, align 2, !dbg !841
  br label %144, !dbg !842

135:                                              ; preds = %129
  %136 = load i8*, i8** @optarg, align 8, !dbg !843
  %137 = call i32 @strcmp(i8* %136, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !843
  %138 = icmp eq i32 %137, 0, !dbg !843
  br i1 %138, label %139, label %141, !dbg !845

139:                                              ; preds = %135
  %140 = load i16*, i16** %21, align 8, !dbg !846
  store i16 1, i16* %140, align 2, !dbg !847
  br label %143, !dbg !848

141:                                              ; preds = %135
  %142 = load i8*, i8** @optarg, align 8, !dbg !849
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %142), !dbg !851
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !852
  call void @exit(i32 -1) #9, !dbg !853
  unreachable, !dbg !853

143:                                              ; preds = %139
  br label %144

144:                                              ; preds = %143, %133
  br label %954, !dbg !854

145:                                              ; preds = %48
  %146 = load i8*, i8** @optarg, align 8, !dbg !855
  %147 = call i64 @atol(i8* %146) #10, !dbg !856
  %148 = trunc i64 %147 to i32, !dbg !856
  %149 = load i32*, i32** %25, align 8, !dbg !857
  store i32 %148, i32* %149, align 4, !dbg !858
  br label %954, !dbg !859

150:                                              ; preds = %48
  store i32 0, i32* @outtiled, align 4, !dbg !860
  br label %954, !dbg !861

151:                                              ; preds = %48
  store i32 1, i32* @outtiled, align 4, !dbg !862
  br label %954, !dbg !863

152:                                              ; preds = %48
  %153 = call i8* @TIFFGetVersion(), !dbg !864
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %153), !dbg !865
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @tiffcrop_version_id, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @tiffcrop_rev_date, i64 0, i64 0)), !dbg !866
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0)), !dbg !867
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i64 0, i64 0)), !dbg !868
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0)), !dbg !869
  call void @exit(i32 0) #9, !dbg !870
  unreachable, !dbg !870

154:                                              ; preds = %48
  store i32 1, i32* @outtiled, align 4, !dbg !871
  %155 = load i8*, i8** @optarg, align 8, !dbg !872
  %156 = call i32 @atoi(i8* %155) #10, !dbg !873
  %157 = load i32*, i32** %23, align 8, !dbg !874
  store i32 %156, i32* %157, align 4, !dbg !875
  br label %954, !dbg !876

158:                                              ; preds = %48
  %159 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !877
  %160 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %159, i32 0, i32 10, !dbg !878
  %161 = load i16, i16* %160, align 8, !dbg !879
  %162 = zext i16 %161 to i32, !dbg !879
  %163 = or i32 %162, 16, !dbg !879
  %164 = trunc i32 %163 to i16, !dbg !879
  store i16 %164, i16* %160, align 8, !dbg !879
  store i32 0, i32* %36, align 4, !dbg !880
  %165 = load i8*, i8** @optarg, align 8, !dbg !882
  %166 = call i8* @strtok(i8* %165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #8, !dbg !883
  store i8* %166, i8** %34, align 8, !dbg !884
  br label %167, !dbg !885

167:                                              ; preds = %211, %158
  %168 = load i8*, i8** %34, align 8, !dbg !886
  %169 = icmp ne i8* %168, null, !dbg !888
  br i1 %169, label %170, label %173, !dbg !889

170:                                              ; preds = %167
  %171 = load i32, i32* %36, align 4, !dbg !890
  %172 = icmp ult i32 %171, 8, !dbg !891
  br label %173

173:                                              ; preds = %170, %167
  %174 = phi i1 [ false, %167 ], [ %172, %170 ], !dbg !892
  br i1 %174, label %175, label %215, !dbg !893

175:                                              ; preds = %173
  %176 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !894
  %177 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %176, i32 0, i32 18, !dbg !896
  %178 = load i16, i16* %177, align 8, !dbg !897
  %179 = add i16 %178, 1, !dbg !897
  store i16 %179, i16* %177, align 8, !dbg !897
  %180 = load i8*, i8** %34, align 8, !dbg !898
  %181 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !900
  %182 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %181, i32 0, i32 22, !dbg !901
  %183 = load i32, i32* %36, align 4, !dbg !902
  %184 = zext i32 %183 to i64, !dbg !900
  %185 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %182, i64 0, i64 %184, !dbg !900
  %186 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %185, i32 0, i32 0, !dbg !903
  %187 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !904
  %188 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %187, i32 0, i32 22, !dbg !905
  %189 = load i32, i32* %36, align 4, !dbg !906
  %190 = zext i32 %189 to i64, !dbg !904
  %191 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %188, i64 0, i64 %190, !dbg !904
  %192 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %191, i32 0, i32 2, !dbg !907
  %193 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !908
  %194 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %193, i32 0, i32 22, !dbg !909
  %195 = load i32, i32* %36, align 4, !dbg !910
  %196 = zext i32 %195 to i64, !dbg !908
  %197 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %194, i64 0, i64 %196, !dbg !908
  %198 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %197, i32 0, i32 1, !dbg !911
  %199 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !912
  %200 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %199, i32 0, i32 22, !dbg !913
  %201 = load i32, i32* %36, align 4, !dbg !914
  %202 = zext i32 %201 to i64, !dbg !912
  %203 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %200, i64 0, i64 %202, !dbg !912
  %204 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %203, i32 0, i32 3, !dbg !915
  %205 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %180, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), double* %186, double* %192, double* %198, double* %204) #8, !dbg !916
  %206 = icmp ne i32 %205, 4, !dbg !917
  br i1 %206, label %207, label %210, !dbg !918

207:                                              ; preds = %175
  %208 = load i32, i32* %36, align 4, !dbg !919
  %209 = load i8*, i8** @optarg, align 8, !dbg !921
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), i32 %208, i8* %209), !dbg !922
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !923
  call void @exit(i32 -1) #9, !dbg !924
  unreachable, !dbg !924

210:                                              ; preds = %175
  br label %211, !dbg !925

211:                                              ; preds = %210
  %212 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #8, !dbg !926
  store i8* %212, i8** %34, align 8, !dbg !927
  %213 = load i32, i32* %36, align 4, !dbg !928
  %214 = add i32 %213, 1, !dbg !928
  store i32 %214, i32* %36, align 4, !dbg !928
  br label %167, !dbg !929, !llvm.loop !930

215:                                              ; preds = %173
  %216 = load i8*, i8** %34, align 8, !dbg !932
  %217 = icmp ne i8* %216, null, !dbg !934
  br i1 %217, label %218, label %223, !dbg !935

218:                                              ; preds = %215
  %219 = load i32, i32* %36, align 4, !dbg !936
  %220 = icmp uge i32 %219, 8, !dbg !937
  br i1 %220, label %221, label %223, !dbg !938

221:                                              ; preds = %218
  %222 = load i8*, i8** @optarg, align 8, !dbg !939
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i32 8, i8* %222), !dbg !941
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !942
  call void @exit(i32 -1) #9, !dbg !943
  unreachable, !dbg !943

223:                                              ; preds = %218, %215
  br label %954, !dbg !944

224:                                              ; preds = %48
  %225 = load i8*, i8** %18, align 8, !dbg !945
  %226 = getelementptr inbounds i8, i8* %225, i32 1, !dbg !945
  store i8* %226, i8** %18, align 8, !dbg !945
  store i8 98, i8* %225, align 1, !dbg !946
  %227 = load i8*, i8** %18, align 8, !dbg !947
  store i8 0, i8* %227, align 1, !dbg !948
  br label %954, !dbg !949

228:                                              ; preds = %48
  %229 = load i8*, i8** %18, align 8, !dbg !950
  %230 = getelementptr inbounds i8, i8* %229, i32 1, !dbg !950
  store i8* %230, i8** %18, align 8, !dbg !950
  store i8 108, i8* %229, align 1, !dbg !951
  %231 = load i8*, i8** %18, align 8, !dbg !952
  store i8 0, i8* %231, align 1, !dbg !953
  br label %954, !dbg !954

232:                                              ; preds = %48
  %233 = load i8*, i8** %18, align 8, !dbg !955
  %234 = getelementptr inbounds i8, i8* %233, i32 1, !dbg !955
  store i8* %234, i8** %18, align 8, !dbg !955
  store i8 109, i8* %233, align 1, !dbg !956
  %235 = load i8*, i8** %18, align 8, !dbg !957
  store i8 0, i8* %235, align 1, !dbg !958
  br label %954, !dbg !959

236:                                              ; preds = %48
  %237 = load i8*, i8** %18, align 8, !dbg !960
  %238 = getelementptr inbounds i8, i8* %237, i32 1, !dbg !960
  store i8* %238, i8** %18, align 8, !dbg !960
  store i8 99, i8* %237, align 1, !dbg !961
  %239 = load i8*, i8** %18, align 8, !dbg !962
  store i8 0, i8* %239, align 1, !dbg !963
  br label %954, !dbg !964

240:                                              ; preds = %48
  store i32 0, i32* %36, align 4, !dbg !965
  %241 = load i8*, i8** @optarg, align 8, !dbg !967
  %242 = call i8* @strtok(i8* %241, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !968
  store i8* %242, i8** %34, align 8, !dbg !969
  br label %243, !dbg !970

243:                                              ; preds = %386, %240
  %244 = load i8*, i8** %34, align 8, !dbg !971
  %245 = icmp ne i8* %244, null, !dbg !973
  br i1 %245, label %246, label %390, !dbg !974

246:                                              ; preds = %243
  %247 = load i8*, i8** %34, align 8, !dbg !975
  %248 = call i8* @strpbrk(i8* %247, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !977
  store i8* %248, i8** %33, align 8, !dbg !978
  %249 = load i8*, i8** %33, align 8, !dbg !979
  %250 = icmp eq i8* %249, null, !dbg !981
  br i1 %250, label %251, label %253, !dbg !982

251:                                              ; preds = %246
  %252 = load i8*, i8** @optarg, align 8, !dbg !983
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %252), !dbg !985
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !986
  call void @exit(i32 -1) #9, !dbg !987
  unreachable, !dbg !987

253:                                              ; preds = %246
  %254 = load i8*, i8** %33, align 8, !dbg !988
  store i8 0, i8* %254, align 1, !dbg !989
  %255 = load i8*, i8** %34, align 8, !dbg !990
  %256 = call i64 @strlen(i8* %255) #10, !dbg !991
  %257 = trunc i64 %256 to i32, !dbg !991
  store i32 %257, i32* %39, align 4, !dbg !992
  store i32 0, i32* %36, align 4, !dbg !993
  br label %258, !dbg !995

258:                                              ; preds = %275, %253
  %259 = load i32, i32* %36, align 4, !dbg !996
  %260 = load i32, i32* %39, align 4, !dbg !998
  %261 = icmp ult i32 %259, %260, !dbg !999
  br i1 %261, label %262, label %278, !dbg !1000

262:                                              ; preds = %258
  %263 = load i8*, i8** %34, align 8, !dbg !1001
  %264 = load i32, i32* %36, align 4, !dbg !1002
  %265 = zext i32 %264 to i64, !dbg !1003
  %266 = getelementptr inbounds i8, i8* %263, i64 %265, !dbg !1003
  %267 = load i8, i8* %266, align 1, !dbg !1004
  %268 = sext i8 %267 to i32, !dbg !1004
  %269 = call i32 @tolower(i32 %268) #10, !dbg !1005
  %270 = trunc i32 %269 to i8, !dbg !1005
  %271 = load i8*, i8** %34, align 8, !dbg !1006
  %272 = load i32, i32* %36, align 4, !dbg !1007
  %273 = zext i32 %272 to i64, !dbg !1008
  %274 = getelementptr inbounds i8, i8* %271, i64 %273, !dbg !1008
  store i8 %270, i8* %274, align 1, !dbg !1009
  br label %275, !dbg !1010

275:                                              ; preds = %262
  %276 = load i32, i32* %36, align 4, !dbg !1011
  %277 = add i32 %276, 1, !dbg !1011
  store i32 %277, i32* %36, align 4, !dbg !1011
  br label %258, !dbg !1012, !llvm.loop !1013

278:                                              ; preds = %258
  %279 = load i8*, i8** %34, align 8, !dbg !1015
  %280 = call i32 @strncmp(i8* %279, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i64 3) #10, !dbg !1017
  %281 = icmp eq i32 %280, 0, !dbg !1018
  br i1 %281, label %282, label %336, !dbg !1019

282:                                              ; preds = %278
  %283 = load i8*, i8** %33, align 8, !dbg !1020
  %284 = getelementptr inbounds i8, i8* %283, i64 1, !dbg !1022
  %285 = call i64 @strlen(i8* %284) #10, !dbg !1023
  %286 = trunc i64 %285 to i32, !dbg !1023
  store i32 %286, i32* %39, align 4, !dbg !1024
  store i32 1, i32* %36, align 4, !dbg !1025
  br label %287, !dbg !1027

287:                                              ; preds = %304, %282
  %288 = load i32, i32* %36, align 4, !dbg !1028
  %289 = load i32, i32* %39, align 4, !dbg !1030
  %290 = icmp ule i32 %288, %289, !dbg !1031
  br i1 %290, label %291, label %307, !dbg !1032

291:                                              ; preds = %287
  %292 = load i8*, i8** %33, align 8, !dbg !1033
  %293 = load i32, i32* %36, align 4, !dbg !1034
  %294 = zext i32 %293 to i64, !dbg !1035
  %295 = getelementptr inbounds i8, i8* %292, i64 %294, !dbg !1035
  %296 = load i8, i8* %295, align 1, !dbg !1036
  %297 = sext i8 %296 to i32, !dbg !1036
  %298 = call i32 @tolower(i32 %297) #10, !dbg !1037
  %299 = trunc i32 %298 to i8, !dbg !1037
  %300 = load i8*, i8** %33, align 8, !dbg !1038
  %301 = load i32, i32* %36, align 4, !dbg !1039
  %302 = zext i32 %301 to i64, !dbg !1040
  %303 = getelementptr inbounds i8, i8* %300, i64 %302, !dbg !1040
  store i8 %299, i8* %303, align 1, !dbg !1041
  br label %304, !dbg !1042

304:                                              ; preds = %291
  %305 = load i32, i32* %36, align 4, !dbg !1043
  %306 = add i32 %305, 1, !dbg !1043
  store i32 %306, i32* %36, align 4, !dbg !1043
  br label %287, !dbg !1044, !llvm.loop !1045

307:                                              ; preds = %287
  %308 = load i8*, i8** %33, align 8, !dbg !1047
  %309 = getelementptr inbounds i8, i8* %308, i64 1, !dbg !1049
  %310 = call i32 @strncmp(i8* %309, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i64 3) #10, !dbg !1050
  %311 = icmp eq i32 %310, 0, !dbg !1051
  br i1 %311, label %312, label %319, !dbg !1052

312:                                              ; preds = %307
  %313 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1053
  %314 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %313, i32 0, i32 1, !dbg !1055
  store i32 1, i32* %314, align 4, !dbg !1056
  %315 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1057
  %316 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %315, i32 0, i32 3, !dbg !1058
  %317 = getelementptr inbounds [4 x i8], [4 x i8]* %316, i64 0, i64 0, !dbg !1057
  %318 = call i8* @strcpy(i8* %317, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8, !dbg !1059
  br label %335, !dbg !1060

319:                                              ; preds = %307
  %320 = load i8*, i8** %33, align 8, !dbg !1061
  %321 = getelementptr inbounds i8, i8* %320, i64 1, !dbg !1064
  %322 = call i32 @strncmp(i8* %321, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #10, !dbg !1065
  %323 = icmp eq i32 %322, 0, !dbg !1066
  br i1 %323, label %324, label %331, !dbg !1067

324:                                              ; preds = %319
  %325 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1068
  %326 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %325, i32 0, i32 1, !dbg !1070
  store i32 2, i32* %326, align 4, !dbg !1071
  %327 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1072
  %328 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %327, i32 0, i32 3, !dbg !1073
  %329 = getelementptr inbounds [4 x i8], [4 x i8]* %328, i64 0, i64 0, !dbg !1072
  %330 = call i8* @strcpy(i8* %329, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #8, !dbg !1074
  br label %334, !dbg !1075

331:                                              ; preds = %319
  %332 = load i8*, i8** %33, align 8, !dbg !1076
  %333 = getelementptr inbounds i8, i8* %332, i64 1, !dbg !1078
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0), i8* %333), !dbg !1079
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1080
  call void @exit(i32 -1) #9, !dbg !1081
  unreachable, !dbg !1081

334:                                              ; preds = %324
  br label %335

335:                                              ; preds = %334, %312
  br label %385, !dbg !1082

336:                                              ; preds = %278
  %337 = load i8*, i8** %34, align 8, !dbg !1083
  %338 = call i32 @strncmp(i8* %337, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i64 3) #10, !dbg !1086
  %339 = icmp eq i32 %338, 0, !dbg !1087
  br i1 %339, label %340, label %346, !dbg !1088

340:                                              ; preds = %336
  %341 = load i8*, i8** %33, align 8, !dbg !1089
  %342 = getelementptr inbounds i8, i8* %341, i64 1, !dbg !1090
  %343 = call i32 @atoi(i8* %342) #10, !dbg !1091
  %344 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1092
  %345 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %344, i32 0, i32 2, !dbg !1093
  store i32 %343, i32* %345, align 8, !dbg !1094
  br label %346, !dbg !1092

346:                                              ; preds = %340, %336
  %347 = load i8*, i8** %34, align 8, !dbg !1095
  %348 = call i32 @strncmp(i8* %347, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i64 0, i64 0), i64 2) #10, !dbg !1097
  %349 = icmp eq i32 %348, 0, !dbg !1098
  br i1 %349, label %350, label %360, !dbg !1099

350:                                              ; preds = %346
  %351 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1100
  %352 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %351, i32 0, i32 4, !dbg !1102
  %353 = getelementptr inbounds [4097 x i8], [4097 x i8]* %352, i64 0, i64 0, !dbg !1100
  %354 = load i8*, i8** %33, align 8, !dbg !1103
  %355 = getelementptr inbounds i8, i8* %354, i64 1, !dbg !1104
  %356 = call i8* @strncpy(i8* %353, i8* %355, i64 4076) #8, !dbg !1105
  %357 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1106
  %358 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %357, i32 0, i32 4, !dbg !1107
  %359 = getelementptr inbounds [4097 x i8], [4097 x i8]* %358, i64 0, i64 4076, !dbg !1106
  store i8 0, i8* %359, align 4, !dbg !1108
  br label %360, !dbg !1109

360:                                              ; preds = %350, %346
  %361 = load i8*, i8** %34, align 8, !dbg !1110
  %362 = call i32 @strncmp(i8* %361, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #10, !dbg !1112
  %363 = icmp eq i32 %362, 0, !dbg !1113
  br i1 %363, label %364, label %374, !dbg !1114

364:                                              ; preds = %360
  %365 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1115
  %366 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %365, i32 0, i32 5, !dbg !1117
  %367 = getelementptr inbounds [4097 x i8], [4097 x i8]* %366, i64 0, i64 0, !dbg !1115
  %368 = load i8*, i8** %33, align 8, !dbg !1118
  %369 = getelementptr inbounds i8, i8* %368, i64 1, !dbg !1119
  %370 = call i8* @strncpy(i8* %367, i8* %369, i64 4076) #8, !dbg !1120
  %371 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1121
  %372 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %371, i32 0, i32 5, !dbg !1122
  %373 = getelementptr inbounds [4097 x i8], [4097 x i8]* %372, i64 0, i64 4076, !dbg !1121
  store i8 0, i8* %373, align 1, !dbg !1123
  br label %374, !dbg !1124

374:                                              ; preds = %364, %360
  %375 = load i8*, i8** %34, align 8, !dbg !1125
  %376 = call i32 @strncmp(i8* %375, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i64 3) #10, !dbg !1127
  %377 = icmp eq i32 %376, 0, !dbg !1128
  br i1 %377, label %378, label %384, !dbg !1129

378:                                              ; preds = %374
  %379 = load i8*, i8** %33, align 8, !dbg !1130
  %380 = getelementptr inbounds i8, i8* %379, i64 1, !dbg !1131
  %381 = call i32 @atoi(i8* %380) #10, !dbg !1132
  %382 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1133
  %383 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %382, i32 0, i32 0, !dbg !1134
  store i32 %381, i32* %383, align 8, !dbg !1135
  br label %384, !dbg !1133

384:                                              ; preds = %378, %374
  br label %385

385:                                              ; preds = %384, %335
  br label %386, !dbg !1136

386:                                              ; preds = %385
  %387 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !1137
  store i8* %387, i8** %34, align 8, !dbg !1138
  %388 = load i32, i32* %36, align 4, !dbg !1139
  %389 = add i32 %388, 1, !dbg !1139
  store i32 %389, i32* %36, align 4, !dbg !1139
  br label %243, !dbg !1140, !llvm.loop !1141

390:                                              ; preds = %243
  %391 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1143
  %392 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %391, i32 0, i32 4, !dbg !1145
  %393 = getelementptr inbounds [4097 x i8], [4097 x i8]* %392, i64 0, i64 0, !dbg !1143
  %394 = call i64 @strlen(i8* %393) #10, !dbg !1146
  %395 = icmp ne i64 %394, 0, !dbg !1146
  br i1 %395, label %402, label %396, !dbg !1147

396:                                              ; preds = %390
  %397 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1148
  %398 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %397, i32 0, i32 5, !dbg !1149
  %399 = getelementptr inbounds [4097 x i8], [4097 x i8]* %398, i64 0, i64 0, !dbg !1148
  %400 = call i64 @strlen(i8* %399) #10, !dbg !1150
  %401 = icmp ne i64 %400, 0, !dbg !1150
  br i1 %401, label %402, label %415, !dbg !1151

402:                                              ; preds = %396, %390
  %403 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1152
  %404 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %403, i32 0, i32 2, !dbg !1155
  %405 = load i32, i32* %404, align 8, !dbg !1155
  %406 = icmp eq i32 %405, 1, !dbg !1156
  br i1 %406, label %407, label %408, !dbg !1157

407:                                              ; preds = %402
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0)), !dbg !1158
  br label %408, !dbg !1158

408:                                              ; preds = %407, %402
  %409 = load %struct.dump_opts*, %struct.dump_opts** %28, align 8, !dbg !1159
  %410 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %409, i32 0, i32 1, !dbg !1161
  %411 = load i32, i32* %410, align 4, !dbg !1161
  %412 = icmp eq i32 %411, 0, !dbg !1162
  br i1 %412, label %413, label %414, !dbg !1163

413:                                              ; preds = %408
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.44, i64 0, i64 0)), !dbg !1164
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1166
  call void @exit(i32 -1) #9, !dbg !1167
  unreachable, !dbg !1167

414:                                              ; preds = %408
  br label %415, !dbg !1168

415:                                              ; preds = %414, %396
  br label %954, !dbg !1169

416:                                              ; preds = %48
  %417 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1170
  %418 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %417, i32 0, i32 10, !dbg !1171
  %419 = load i16, i16* %418, align 8, !dbg !1172
  %420 = zext i16 %419 to i32, !dbg !1172
  %421 = or i32 %420, 1, !dbg !1172
  %422 = trunc i32 %421 to i16, !dbg !1172
  store i16 %422, i16* %418, align 8, !dbg !1172
  store i32 0, i32* %36, align 4, !dbg !1173
  %423 = load i8*, i8** @optarg, align 8, !dbg !1175
  %424 = call i8* @strtok(i8* %423, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #8, !dbg !1176
  store i8* %424, i8** %34, align 8, !dbg !1177
  br label %425, !dbg !1178

425:                                              ; preds = %441, %416
  %426 = load i8*, i8** %34, align 8, !dbg !1179
  %427 = icmp ne i8* %426, null, !dbg !1181
  br i1 %427, label %428, label %431, !dbg !1182

428:                                              ; preds = %425
  %429 = load i32, i32* %36, align 4, !dbg !1183
  %430 = icmp ult i32 %429, 4, !dbg !1184
  br label %431

431:                                              ; preds = %428, %425
  %432 = phi i1 [ false, %425 ], [ %430, %428 ], !dbg !1185
  br i1 %432, label %433, label %445, !dbg !1186

433:                                              ; preds = %431
  %434 = load i8*, i8** %34, align 8, !dbg !1187
  %435 = call double @atof(i8* %434) #10, !dbg !1189
  %436 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1190
  %437 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %436, i32 0, i32 2, !dbg !1191
  %438 = load i32, i32* %36, align 4, !dbg !1192
  %439 = zext i32 %438 to i64, !dbg !1190
  %440 = getelementptr inbounds [4 x double], [4 x double]* %437, i64 0, i64 %439, !dbg !1190
  store double %435, double* %440, align 8, !dbg !1193
  br label %441, !dbg !1194

441:                                              ; preds = %433
  %442 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #8, !dbg !1195
  store i8* %442, i8** %34, align 8, !dbg !1196
  %443 = load i32, i32* %36, align 4, !dbg !1197
  %444 = add i32 %443, 1, !dbg !1197
  store i32 %444, i32* %36, align 4, !dbg !1197
  br label %425, !dbg !1198, !llvm.loop !1199

445:                                              ; preds = %431
  br label %954, !dbg !1201

446:                                              ; preds = %48
  %447 = load i8*, i8** @optarg, align 8, !dbg !1202
  %448 = getelementptr inbounds i8, i8* %447, i64 0, !dbg !1202
  %449 = load i8, i8* %448, align 1, !dbg !1202
  %450 = sext i8 %449 to i32, !dbg !1202
  %451 = call i32 @tolower(i32 %450) #10, !dbg !1203
  switch i32 %451, label %464 [
    i32 116, label %452
    i32 98, label %455
    i32 108, label %458
    i32 114, label %461
  ], !dbg !1204

452:                                              ; preds = %446
  %453 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1205
  %454 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %453, i32 0, i32 12, !dbg !1207
  store i16 1, i16* %454, align 4, !dbg !1208
  br label %466, !dbg !1209

455:                                              ; preds = %446
  %456 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1210
  %457 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %456, i32 0, i32 12, !dbg !1211
  store i16 3, i16* %457, align 4, !dbg !1212
  br label %466, !dbg !1213

458:                                              ; preds = %446
  %459 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1214
  %460 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %459, i32 0, i32 12, !dbg !1215
  store i16 2, i16* %460, align 4, !dbg !1216
  br label %466, !dbg !1217

461:                                              ; preds = %446
  %462 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1218
  %463 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %462, i32 0, i32 12, !dbg !1219
  store i16 4, i16* %463, align 4, !dbg !1220
  br label %466, !dbg !1221

464:                                              ; preds = %446
  %465 = load i8*, i8** @optarg, align 8, !dbg !1222
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %465), !dbg !1223
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1224
  call void @exit(i32 -1) #9, !dbg !1225
  unreachable, !dbg !1225

466:                                              ; preds = %461, %458, %455, %452
  br label %954, !dbg !1226

467:                                              ; preds = %48
  %468 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1227
  %469 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %468, i32 0, i32 10, !dbg !1228
  %470 = load i16, i16* %469, align 8, !dbg !1229
  %471 = zext i16 %470 to i32, !dbg !1229
  %472 = or i32 %471, 64, !dbg !1229
  %473 = trunc i32 %472 to i16, !dbg !1229
  store i16 %473, i16* %469, align 8, !dbg !1229
  %474 = load i8*, i8** @optarg, align 8, !dbg !1230
  %475 = getelementptr inbounds i8, i8* %474, i64 0, !dbg !1230
  %476 = load i8, i8* %475, align 1, !dbg !1230
  %477 = sext i8 %476 to i32, !dbg !1230
  %478 = call i32 @tolower(i32 %477) #10, !dbg !1231
  switch i32 %478, label %488 [
    i32 104, label %479
    i32 118, label %482
    i32 98, label %485
  ], !dbg !1232

479:                                              ; preds = %467
  %480 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1233
  %481 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %480, i32 0, i32 14, !dbg !1235
  store i16 1, i16* %481, align 8, !dbg !1236
  br label %490, !dbg !1237

482:                                              ; preds = %467
  %483 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1238
  %484 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %483, i32 0, i32 14, !dbg !1239
  store i16 2, i16* %484, align 8, !dbg !1240
  br label %490, !dbg !1241

485:                                              ; preds = %467
  %486 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1242
  %487 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %486, i32 0, i32 14, !dbg !1243
  store i16 3, i16* %487, align 8, !dbg !1244
  br label %490, !dbg !1245

488:                                              ; preds = %467
  %489 = load i8*, i8** @optarg, align 8, !dbg !1246
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %489), !dbg !1247
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1248
  call void @exit(i32 -1) #9, !dbg !1249
  unreachable, !dbg !1249

490:                                              ; preds = %485, %482, %479
  br label %954, !dbg !1250

491:                                              ; preds = %48
  %492 = load i8*, i8** @optarg, align 8, !dbg !1251
  %493 = call double @atof(i8* %492) #10, !dbg !1252
  %494 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1253
  %495 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %494, i32 0, i32 5, !dbg !1254
  store double %493, double* %495, align 8, !dbg !1255
  %496 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1256
  %497 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %496, i32 0, i32 7, !dbg !1257
  %498 = load i32, i32* %497, align 8, !dbg !1258
  %499 = or i32 %498, 1, !dbg !1258
  store i32 %499, i32* %497, align 8, !dbg !1258
  br label %954, !dbg !1259

500:                                              ; preds = %48
  %501 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1260
  %502 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %501, i32 0, i32 10, !dbg !1261
  %503 = load i16, i16* %502, align 8, !dbg !1262
  %504 = zext i16 %503 to i32, !dbg !1262
  %505 = or i32 %504, 128, !dbg !1262
  %506 = trunc i32 %505 to i16, !dbg !1262
  store i16 %506, i16* %502, align 8, !dbg !1262
  %507 = load i8*, i8** @optarg, align 8, !dbg !1263
  %508 = call i32 @strcmp(i8* %507, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0)) #10, !dbg !1263
  %509 = icmp eq i32 %508, 0, !dbg !1263
  br i1 %509, label %510, label %513, !dbg !1265

510:                                              ; preds = %500
  %511 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1266
  %512 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %511, i32 0, i32 16, !dbg !1268
  store i16 1, i16* %512, align 4, !dbg !1269
  br label %43, !dbg !1270, !llvm.loop !1271

513:                                              ; preds = %500
  %514 = load i8*, i8** @optarg, align 8, !dbg !1273
  %515 = call i32 @strcmp(i8* %514, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0)) #10, !dbg !1273
  %516 = icmp eq i32 %515, 0, !dbg !1273
  br i1 %516, label %517, label %520, !dbg !1275

517:                                              ; preds = %513
  %518 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1276
  %519 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %518, i32 0, i32 16, !dbg !1278
  store i16 0, i16* %519, align 4, !dbg !1279
  br label %43, !dbg !1280, !llvm.loop !1271

520:                                              ; preds = %513
  %521 = load i8*, i8** @optarg, align 8, !dbg !1281
  %522 = call i32 @strcmp(i8* %521, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #10, !dbg !1281
  %523 = icmp eq i32 %522, 0, !dbg !1281
  br i1 %523, label %524, label %527, !dbg !1283

524:                                              ; preds = %520
  %525 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1284
  %526 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %525, i32 0, i32 16, !dbg !1286
  store i16 10, i16* %526, align 4, !dbg !1287
  br label %43, !dbg !1288, !llvm.loop !1271

527:                                              ; preds = %520
  %528 = load i8*, i8** @optarg, align 8, !dbg !1289
  %529 = call i32 @strcmp(i8* %528, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1289
  %530 = icmp eq i32 %529, 0, !dbg !1289
  br i1 %530, label %531, label %534, !dbg !1291

531:                                              ; preds = %527
  %532 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1292
  %533 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %532, i32 0, i32 16, !dbg !1294
  store i16 11, i16* %533, align 4, !dbg !1295
  br label %43, !dbg !1296, !llvm.loop !1271

534:                                              ; preds = %527
  %535 = load i8*, i8** @optarg, align 8, !dbg !1297
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %535), !dbg !1298
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1299
  call void @exit(i32 -1) #9, !dbg !1300
  unreachable, !dbg !1300

536:                                              ; preds = %48
  %537 = load i8*, i8** @optarg, align 8, !dbg !1301
  %538 = call double @atof(i8* %537) #10, !dbg !1302
  %539 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1303
  %540 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %539, i32 0, i32 3, !dbg !1304
  store double %538, double* %540, align 8, !dbg !1305
  %541 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1306
  %542 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %541, i32 0, i32 7, !dbg !1307
  %543 = load i32, i32* %542, align 8, !dbg !1308
  %544 = or i32 %543, 4, !dbg !1308
  store i32 %544, i32* %542, align 8, !dbg !1308
  br label %954, !dbg !1309

545:                                              ; preds = %48
  %546 = load i8*, i8** @optarg, align 8, !dbg !1310
  %547 = call double @atof(i8* %546) #10, !dbg !1311
  %548 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1312
  %549 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %548, i32 0, i32 4, !dbg !1313
  store double %547, double* %549, align 8, !dbg !1314
  %550 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1315
  %551 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %550, i32 0, i32 7, !dbg !1316
  %552 = load i32, i32* %551, align 8, !dbg !1317
  %553 = or i32 %552, 4, !dbg !1317
  store i32 %553, i32* %551, align 8, !dbg !1317
  br label %954, !dbg !1318

554:                                              ; preds = %48
  store i32 0, i32* %36, align 4, !dbg !1319
  %555 = load i8*, i8** @optarg, align 8, !dbg !1321
  %556 = call i8* @strtok(i8* %555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !1322
  store i8* %556, i8** %34, align 8, !dbg !1323
  br label %557, !dbg !1324

557:                                              ; preds = %671, %554
  %558 = load i8*, i8** %34, align 8, !dbg !1325
  %559 = icmp ne i8* %558, null, !dbg !1327
  br i1 %559, label %560, label %563, !dbg !1328

560:                                              ; preds = %557
  %561 = load i32, i32* %36, align 4, !dbg !1329
  %562 = icmp ult i32 %561, 2048, !dbg !1330
  br label %563

563:                                              ; preds = %560, %557
  %564 = phi i1 [ false, %557 ], [ %562, %560 ], !dbg !1331
  br i1 %564, label %565, label %673, !dbg !1332

565:                                              ; preds = %563
  %566 = load i8*, i8** %34, align 8, !dbg !1333
  %567 = call i32 @strcmp(i8* %566, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #10, !dbg !1333
  %568 = icmp eq i32 %567, 0, !dbg !1333
  br i1 %568, label %569, label %585, !dbg !1336

569:                                              ; preds = %565
  store i32 1, i32* %37, align 4, !dbg !1337
  br label %570, !dbg !1340

570:                                              ; preds = %580, %569
  %571 = load i32, i32* %37, align 4, !dbg !1341
  %572 = icmp ule i32 %571, 2048, !dbg !1343
  br i1 %572, label %573, label %583, !dbg !1344

573:                                              ; preds = %570
  %574 = load i32, i32* %37, align 4, !dbg !1345
  %575 = load i32*, i32** %29, align 8, !dbg !1346
  %576 = load i32, i32* %36, align 4, !dbg !1347
  %577 = add i32 %576, 1, !dbg !1347
  store i32 %577, i32* %36, align 4, !dbg !1347
  %578 = zext i32 %576 to i64, !dbg !1346
  %579 = getelementptr inbounds i32, i32* %575, i64 %578, !dbg !1346
  store i32 %574, i32* %579, align 4, !dbg !1348
  br label %580, !dbg !1346

580:                                              ; preds = %573
  %581 = load i32, i32* %37, align 4, !dbg !1349
  %582 = add i32 %581, 2, !dbg !1349
  store i32 %582, i32* %37, align 4, !dbg !1349
  br label %570, !dbg !1350, !llvm.loop !1351

583:                                              ; preds = %570
  %584 = load i32*, i32** %30, align 8, !dbg !1353
  store i32 1023, i32* %584, align 4, !dbg !1354
  br label %673, !dbg !1355

585:                                              ; preds = %565
  %586 = load i8*, i8** %34, align 8, !dbg !1356
  %587 = call i32 @strcmp(i8* %586, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1356
  %588 = icmp eq i32 %587, 0, !dbg !1356
  br i1 %588, label %589, label %605, !dbg !1359

589:                                              ; preds = %585
  store i32 2, i32* %37, align 4, !dbg !1360
  br label %590, !dbg !1363

590:                                              ; preds = %600, %589
  %591 = load i32, i32* %37, align 4, !dbg !1364
  %592 = icmp ule i32 %591, 2048, !dbg !1366
  br i1 %592, label %593, label %603, !dbg !1367

593:                                              ; preds = %590
  %594 = load i32, i32* %37, align 4, !dbg !1368
  %595 = load i32*, i32** %29, align 8, !dbg !1369
  %596 = load i32, i32* %36, align 4, !dbg !1370
  %597 = add i32 %596, 1, !dbg !1370
  store i32 %597, i32* %36, align 4, !dbg !1370
  %598 = zext i32 %596 to i64, !dbg !1369
  %599 = getelementptr inbounds i32, i32* %595, i64 %598, !dbg !1369
  store i32 %594, i32* %599, align 4, !dbg !1371
  br label %600, !dbg !1369

600:                                              ; preds = %593
  %601 = load i32, i32* %37, align 4, !dbg !1372
  %602 = add i32 %601, 2, !dbg !1372
  store i32 %602, i32* %37, align 4, !dbg !1372
  br label %590, !dbg !1373, !llvm.loop !1374

603:                                              ; preds = %590
  %604 = load i32*, i32** %30, align 8, !dbg !1376
  store i32 1024, i32* %604, align 4, !dbg !1377
  br label %673, !dbg !1378

605:                                              ; preds = %585
  %606 = load i8*, i8** %34, align 8, !dbg !1379
  %607 = call i32 @strcmp(i8* %606, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1379
  %608 = icmp eq i32 %607, 0, !dbg !1379
  br i1 %608, label %609, label %615, !dbg !1382

609:                                              ; preds = %605
  %610 = load i32*, i32** %29, align 8, !dbg !1383
  %611 = load i32, i32* %36, align 4, !dbg !1384
  %612 = add i32 %611, 1, !dbg !1384
  store i32 %612, i32* %36, align 4, !dbg !1384
  %613 = zext i32 %611 to i64, !dbg !1383
  %614 = getelementptr inbounds i32, i32* %610, i64 %613, !dbg !1383
  store i32 2048, i32* %614, align 4, !dbg !1385
  br label %668, !dbg !1383

615:                                              ; preds = %605
  %616 = load i8*, i8** %34, align 8, !dbg !1386
  %617 = call i8* @strpbrk(i8* %616, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1388
  store i8* %617, i8** %35, align 8, !dbg !1389
  %618 = load i8*, i8** %35, align 8, !dbg !1390
  %619 = icmp ne i8* %618, null, !dbg !1390
  br i1 %619, label %628, label %620, !dbg !1392

620:                                              ; preds = %615
  %621 = load i8*, i8** %34, align 8, !dbg !1393
  %622 = call i32 @atoi(i8* %621) #10, !dbg !1394
  %623 = load i32*, i32** %29, align 8, !dbg !1395
  %624 = load i32, i32* %36, align 4, !dbg !1396
  %625 = add i32 %624, 1, !dbg !1396
  store i32 %625, i32* %36, align 4, !dbg !1396
  %626 = zext i32 %624 to i64, !dbg !1395
  %627 = getelementptr inbounds i32, i32* %623, i64 %626, !dbg !1395
  store i32 %622, i32* %627, align 4, !dbg !1397
  br label %667, !dbg !1395

628:                                              ; preds = %615
  %629 = load i8*, i8** %35, align 8, !dbg !1398
  store i8 0, i8* %629, align 1, !dbg !1400
  %630 = load i8*, i8** %34, align 8, !dbg !1401
  %631 = call i32 @atoi(i8* %630) #10, !dbg !1402
  store i32 %631, i32* %38, align 4, !dbg !1403
  %632 = load i8*, i8** %35, align 8, !dbg !1404
  %633 = getelementptr inbounds i8, i8* %632, i64 1, !dbg !1406
  %634 = call i32 @strcmp(i8* %633, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1407
  %635 = icmp ne i32 %634, 0, !dbg !1407
  br i1 %635, label %637, label %636, !dbg !1408

636:                                              ; preds = %628
  store i32 2048, i32* %39, align 4, !dbg !1409
  br label %641, !dbg !1410

637:                                              ; preds = %628
  %638 = load i8*, i8** %35, align 8, !dbg !1411
  %639 = getelementptr inbounds i8, i8* %638, i64 1, !dbg !1412
  %640 = call i32 @atoi(i8* %639) #10, !dbg !1413
  store i32 %640, i32* %39, align 4, !dbg !1414
  br label %641

641:                                              ; preds = %637, %636
  %642 = load i32, i32* %38, align 4, !dbg !1415
  store i32 %642, i32* %37, align 4, !dbg !1417
  br label %643, !dbg !1418

643:                                              ; preds = %663, %641
  %644 = load i32, i32* %37, align 4, !dbg !1419
  %645 = load i32, i32* %39, align 4, !dbg !1421
  %646 = icmp ule i32 %644, %645, !dbg !1422
  br i1 %646, label %647, label %654, !dbg !1423

647:                                              ; preds = %643
  %648 = load i32, i32* %37, align 4, !dbg !1424
  %649 = load i32, i32* %38, align 4, !dbg !1425
  %650 = sub i32 %648, %649, !dbg !1426
  %651 = load i32, i32* %36, align 4, !dbg !1427
  %652 = add i32 %650, %651, !dbg !1428
  %653 = icmp ult i32 %652, 2048, !dbg !1429
  br label %654

654:                                              ; preds = %647, %643
  %655 = phi i1 [ false, %643 ], [ %653, %647 ], !dbg !1430
  br i1 %655, label %656, label %666, !dbg !1431

656:                                              ; preds = %654
  %657 = load i32, i32* %37, align 4, !dbg !1432
  %658 = load i32*, i32** %29, align 8, !dbg !1433
  %659 = load i32, i32* %36, align 4, !dbg !1434
  %660 = add i32 %659, 1, !dbg !1434
  store i32 %660, i32* %36, align 4, !dbg !1434
  %661 = zext i32 %659 to i64, !dbg !1433
  %662 = getelementptr inbounds i32, i32* %658, i64 %661, !dbg !1433
  store i32 %657, i32* %662, align 4, !dbg !1435
  br label %663, !dbg !1433

663:                                              ; preds = %656
  %664 = load i32, i32* %37, align 4, !dbg !1436
  %665 = add i32 %664, 1, !dbg !1436
  store i32 %665, i32* %37, align 4, !dbg !1436
  br label %643, !dbg !1437, !llvm.loop !1438

666:                                              ; preds = %654
  br label %667

667:                                              ; preds = %666, %620
  br label %668

668:                                              ; preds = %667, %609
  br label %669

669:                                              ; preds = %668
  br label %670

670:                                              ; preds = %669
  br label %671, !dbg !1440

671:                                              ; preds = %670
  %672 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !1441
  store i8* %672, i8** %34, align 8, !dbg !1442
  br label %557, !dbg !1443, !llvm.loop !1444

673:                                              ; preds = %603, %583, %563
  %674 = load i32, i32* %36, align 4, !dbg !1446
  %675 = load i32*, i32** %30, align 8, !dbg !1447
  store i32 %674, i32* %675, align 4, !dbg !1448
  br label %954, !dbg !1449

676:                                              ; preds = %48
  %677 = load i8*, i8** @optarg, align 8, !dbg !1450
  %678 = getelementptr inbounds i8, i8* %677, i64 0, !dbg !1450
  %679 = load i8, i8* %678, align 1, !dbg !1450
  %680 = sext i8 %679 to i32, !dbg !1450
  %681 = call i32 @tolower(i32 %680) #10, !dbg !1451
  switch i32 %681, label %691 [
    i32 97, label %682
    i32 112, label %685
    i32 108, label %688
  ], !dbg !1452

682:                                              ; preds = %676
  %683 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1453
  %684 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %683, i32 0, i32 11, !dbg !1455
  store i32 16, i32* %684, align 8, !dbg !1456
  br label %693, !dbg !1457

685:                                              ; preds = %676
  %686 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1458
  %687 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %686, i32 0, i32 11, !dbg !1459
  store i32 1, i32* %687, align 8, !dbg !1460
  br label %693, !dbg !1461

688:                                              ; preds = %676
  %689 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1462
  %690 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %689, i32 0, i32 11, !dbg !1463
  store i32 2, i32* %690, align 8, !dbg !1464
  br label %693, !dbg !1465

691:                                              ; preds = %676
  %692 = load i8*, i8** @optarg, align 8, !dbg !1466
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %692), !dbg !1467
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1468
  call void @exit(i32 -1) #9, !dbg !1469
  unreachable, !dbg !1469

693:                                              ; preds = %688, %685, %682
  br label %954, !dbg !1470

694:                                              ; preds = %48
  %695 = load i8*, i8** @optarg, align 8, !dbg !1471
  %696 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1473
  %697 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %696, i32 0, i32 1, !dbg !1474
  %698 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1475
  %699 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %698, i32 0, i32 2, !dbg !1476
  %700 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %695, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i64 0, i64 0), double* %697, double* %699) #8, !dbg !1477
  %701 = icmp eq i32 %700, 2, !dbg !1478
  br i1 %701, label %702, label %711, !dbg !1479

702:                                              ; preds = %694
  %703 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1480
  %704 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %703, i32 0, i32 0, !dbg !1482
  %705 = getelementptr inbounds [16 x i8], [16 x i8]* %704, i64 0, i64 0, !dbg !1480
  %706 = call i8* @strcpy(i8* %705, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0)) #8, !dbg !1483
  %707 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1484
  %708 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %707, i32 0, i32 7, !dbg !1485
  %709 = load i32, i32* %708, align 8, !dbg !1486
  %710 = or i32 %709, 2, !dbg !1486
  store i32 %710, i32* %708, align 8, !dbg !1486
  br label %954, !dbg !1487

711:                                              ; preds = %694
  %712 = load i8*, i8** @optarg, align 8, !dbg !1488
  %713 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1490
  %714 = call i32 @get_page_geometry(i8* %712, %struct.pagedef* %713), !dbg !1491
  %715 = icmp ne i32 %714, 0, !dbg !1491
  br i1 %715, label %716, label %769, !dbg !1492

716:                                              ; preds = %711
  %717 = load i8*, i8** @optarg, align 8, !dbg !1493
  %718 = call i32 @strcmp(i8* %717, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1496
  %719 = icmp ne i32 %718, 0, !dbg !1496
  br i1 %719, label %744, label %720, !dbg !1497

720:                                              ; preds = %716
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.61, i64 0, i64 0)), !dbg !1498
  store i32 0, i32* %36, align 4, !dbg !1500
  br label %721, !dbg !1502

721:                                              ; preds = %740, %720
  %722 = load i32, i32* %36, align 4, !dbg !1503
  %723 = icmp ult i32 %722, 48, !dbg !1505
  br i1 %723, label %724, label %743, !dbg !1506

724:                                              ; preds = %721
  %725 = load i32, i32* %36, align 4, !dbg !1507
  %726 = zext i32 %725 to i64, !dbg !1508
  %727 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %726, !dbg !1508
  %728 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %727, i32 0, i32 0, !dbg !1509
  %729 = getelementptr inbounds [15 x i8], [15 x i8]* %728, i64 0, i64 0, !dbg !1508
  %730 = load i32, i32* %36, align 4, !dbg !1510
  %731 = zext i32 %730 to i64, !dbg !1511
  %732 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %731, !dbg !1511
  %733 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %732, i32 0, i32 1, !dbg !1512
  %734 = load double, double* %733, align 8, !dbg !1512
  %735 = load i32, i32* %36, align 4, !dbg !1513
  %736 = zext i32 %735 to i64, !dbg !1514
  %737 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %736, !dbg !1514
  %738 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %737, i32 0, i32 2, !dbg !1515
  %739 = load double, double* %738, align 8, !dbg !1515
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0), i8* %729, double %734, double %739), !dbg !1516
  br label %740, !dbg !1516

740:                                              ; preds = %724
  %741 = load i32, i32* %36, align 4, !dbg !1517
  %742 = add i32 %741, 1, !dbg !1517
  store i32 %742, i32* %36, align 4, !dbg !1517
  br label %721, !dbg !1518, !llvm.loop !1519

743:                                              ; preds = %721
  call void @exit(i32 -1) #9, !dbg !1521
  unreachable, !dbg !1521

744:                                              ; preds = %716
  %745 = load i8*, i8** @optarg, align 8, !dbg !1522
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %745), !dbg !1523
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i64 0, i64 0)), !dbg !1524
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.61, i64 0, i64 0)), !dbg !1525
  store i32 0, i32* %36, align 4, !dbg !1526
  br label %746, !dbg !1528

746:                                              ; preds = %765, %744
  %747 = load i32, i32* %36, align 4, !dbg !1529
  %748 = icmp ult i32 %747, 48, !dbg !1531
  br i1 %748, label %749, label %768, !dbg !1532

749:                                              ; preds = %746
  %750 = load i32, i32* %36, align 4, !dbg !1533
  %751 = zext i32 %750 to i64, !dbg !1534
  %752 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %751, !dbg !1534
  %753 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %752, i32 0, i32 0, !dbg !1535
  %754 = getelementptr inbounds [15 x i8], [15 x i8]* %753, i64 0, i64 0, !dbg !1534
  %755 = load i32, i32* %36, align 4, !dbg !1536
  %756 = zext i32 %755 to i64, !dbg !1537
  %757 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %756, !dbg !1537
  %758 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %757, i32 0, i32 1, !dbg !1538
  %759 = load double, double* %758, align 8, !dbg !1538
  %760 = load i32, i32* %36, align 4, !dbg !1539
  %761 = zext i32 %760 to i64, !dbg !1540
  %762 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %761, !dbg !1540
  %763 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %762, i32 0, i32 2, !dbg !1541
  %764 = load double, double* %763, align 8, !dbg !1541
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0), i8* %754, double %759, double %764), !dbg !1542
  br label %765, !dbg !1542

765:                                              ; preds = %749
  %766 = load i32, i32* %36, align 4, !dbg !1543
  %767 = add i32 %766, 1, !dbg !1543
  store i32 %767, i32* %36, align 4, !dbg !1543
  br label %746, !dbg !1544, !llvm.loop !1545

768:                                              ; preds = %746
  call void @exit(i32 -1) #9, !dbg !1547
  unreachable, !dbg !1547

769:                                              ; preds = %711
  %770 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1548
  %771 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %770, i32 0, i32 7, !dbg !1550
  %772 = load i32, i32* %771, align 8, !dbg !1551
  %773 = or i32 %772, 2, !dbg !1551
  store i32 %773, i32* %771, align 8, !dbg !1551
  br label %774

774:                                              ; preds = %769
  br label %954, !dbg !1552

775:                                              ; preds = %48
  %776 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1553
  %777 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %776, i32 0, i32 10, !dbg !1554
  %778 = load i16, i16* %777, align 8, !dbg !1555
  %779 = zext i16 %778 to i32, !dbg !1555
  %780 = or i32 %779, 32, !dbg !1555
  %781 = trunc i32 %780 to i16, !dbg !1555
  store i16 %781, i16* %777, align 8, !dbg !1555
  %782 = load i8*, i8** @optarg, align 8, !dbg !1556
  %783 = call i64 @strtoul(i8* %782, i8** null, i32 0) #8, !dbg !1557
  switch i64 %783, label %793 [
    i64 90, label %784
    i64 180, label %787
    i64 270, label %790
  ], !dbg !1558

784:                                              ; preds = %775
  %785 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1559
  %786 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %785, i32 0, i32 13, !dbg !1561
  store i16 90, i16* %786, align 2, !dbg !1562
  br label %795, !dbg !1563

787:                                              ; preds = %775
  %788 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1564
  %789 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %788, i32 0, i32 13, !dbg !1565
  store i16 180, i16* %789, align 2, !dbg !1566
  br label %795, !dbg !1567

790:                                              ; preds = %775
  %791 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1568
  %792 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %791, i32 0, i32 13, !dbg !1569
  store i16 270, i16* %792, align 2, !dbg !1570
  br label %795, !dbg !1571

793:                                              ; preds = %775
  %794 = load i8*, i8** @optarg, align 8, !dbg !1572
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %794), !dbg !1573
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1574
  call void @exit(i32 -1) #9, !dbg !1575
  unreachable, !dbg !1575

795:                                              ; preds = %790, %787, %784
  br label %954, !dbg !1576

796:                                              ; preds = %48
  %797 = load i8*, i8** @optarg, align 8, !dbg !1577
  %798 = call i8* @strpbrk(i8* %797, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !1578
  store i8* %798, i8** %35, align 8, !dbg !1579
  %799 = load i8*, i8** %35, align 8, !dbg !1580
  %800 = icmp ne i8* %799, null, !dbg !1580
  br i1 %800, label %801, label %812, !dbg !1582

801:                                              ; preds = %796
  %802 = load i8*, i8** %35, align 8, !dbg !1583
  store i8 0, i8* %802, align 1, !dbg !1585
  %803 = load i8*, i8** @optarg, align 8, !dbg !1586
  %804 = call i32 @atoi(i8* %803) #10, !dbg !1587
  %805 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1588
  %806 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %805, i32 0, i32 10, !dbg !1589
  store i32 %804, i32* %806, align 4, !dbg !1590
  %807 = load i8*, i8** %35, align 8, !dbg !1591
  %808 = getelementptr inbounds i8, i8* %807, i64 1, !dbg !1592
  %809 = call i32 @atoi(i8* %808) #10, !dbg !1593
  %810 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1594
  %811 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %810, i32 0, i32 9, !dbg !1595
  store i32 %809, i32* %811, align 8, !dbg !1596
  br label %821, !dbg !1597

812:                                              ; preds = %796
  %813 = load i8*, i8** @optarg, align 8, !dbg !1598
  %814 = call i32 @atoi(i8* %813) #10, !dbg !1600
  %815 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1601
  %816 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %815, i32 0, i32 10, !dbg !1602
  store i32 %814, i32* %816, align 4, !dbg !1603
  %817 = load i8*, i8** @optarg, align 8, !dbg !1604
  %818 = call i32 @atoi(i8* %817) #10, !dbg !1605
  %819 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1606
  %820 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %819, i32 0, i32 9, !dbg !1607
  store i32 %818, i32* %820, align 8, !dbg !1608
  br label %821

821:                                              ; preds = %812, %801
  %822 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1609
  %823 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %822, i32 0, i32 10, !dbg !1611
  %824 = load i32, i32* %823, align 4, !dbg !1611
  %825 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1612
  %826 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %825, i32 0, i32 9, !dbg !1613
  %827 = load i32, i32* %826, align 8, !dbg !1613
  %828 = mul i32 %824, %827, !dbg !1614
  %829 = icmp ugt i32 %828, 32, !dbg !1615
  br i1 %829, label %830, label %831, !dbg !1616

830:                                              ; preds = %821
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0), i32 32), !dbg !1617
  call void @exit(i32 -1) #9, !dbg !1619
  unreachable, !dbg !1619

831:                                              ; preds = %821
  %832 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1620
  %833 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %832, i32 0, i32 7, !dbg !1621
  %834 = load i32, i32* %833, align 8, !dbg !1622
  %835 = or i32 %834, 8, !dbg !1622
  store i32 %835, i32* %833, align 8, !dbg !1622
  br label %954, !dbg !1623

836:                                              ; preds = %48
  %837 = load i8*, i8** @optarg, align 8, !dbg !1624
  %838 = call i32 @strcmp(i8* %837, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !1624
  %839 = icmp eq i32 %838, 0, !dbg !1624
  br i1 %839, label %840, label %845, !dbg !1626

840:                                              ; preds = %836
  %841 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1627
  %842 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %841, i32 0, i32 11, !dbg !1629
  store i16 2, i16* %842, align 2, !dbg !1630
  %843 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1631
  %844 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %843, i32 0, i32 8, !dbg !1632
  store i16 2, i16* %844, align 4, !dbg !1633
  br label %867, !dbg !1634

845:                                              ; preds = %836
  %846 = load i8*, i8** @optarg, align 8, !dbg !1635
  %847 = call i32 @strcmp(i8* %846, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !1635
  %848 = icmp eq i32 %847, 0, !dbg !1635
  br i1 %848, label %849, label %854, !dbg !1637

849:                                              ; preds = %845
  %850 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1638
  %851 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %850, i32 0, i32 11, !dbg !1640
  store i16 3, i16* %851, align 2, !dbg !1641
  %852 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1642
  %853 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %852, i32 0, i32 8, !dbg !1643
  store i16 3, i16* %853, align 4, !dbg !1644
  br label %866, !dbg !1645

854:                                              ; preds = %845
  %855 = load i8*, i8** @optarg, align 8, !dbg !1646
  %856 = call i32 @strcmp(i8* %855, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !1646
  %857 = icmp eq i32 %856, 0, !dbg !1646
  br i1 %857, label %858, label %863, !dbg !1648

858:                                              ; preds = %854
  %859 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1649
  %860 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %859, i32 0, i32 11, !dbg !1651
  store i16 1, i16* %860, align 2, !dbg !1652
  %861 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1653
  %862 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %861, i32 0, i32 8, !dbg !1654
  store i16 1, i16* %862, align 4, !dbg !1655
  br label %865, !dbg !1656

863:                                              ; preds = %854
  %864 = load i8*, i8** @optarg, align 8, !dbg !1657
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %864), !dbg !1659
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1660
  call void @exit(i32 -1) #9, !dbg !1661
  unreachable, !dbg !1661

865:                                              ; preds = %858
  br label %866

866:                                              ; preds = %865, %849
  br label %867

867:                                              ; preds = %866, %840
  br label %954, !dbg !1662

868:                                              ; preds = %48
  %869 = load i8*, i8** @optarg, align 8, !dbg !1663
  %870 = call double @atof(i8* %869) #10, !dbg !1664
  %871 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1665
  %872 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %871, i32 0, i32 6, !dbg !1666
  store double %870, double* %872, align 8, !dbg !1667
  %873 = load %struct.pagedef*, %struct.pagedef** %27, align 8, !dbg !1668
  %874 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %873, i32 0, i32 7, !dbg !1669
  %875 = load i32, i32* %874, align 8, !dbg !1670
  %876 = or i32 %875, 1, !dbg !1670
  store i32 %876, i32* %874, align 8, !dbg !1670
  br label %954, !dbg !1671

877:                                              ; preds = %48
  %878 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1672
  %879 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %878, i32 0, i32 10, !dbg !1673
  %880 = load i16, i16* %879, align 8, !dbg !1674
  %881 = zext i16 %880 to i32, !dbg !1674
  %882 = or i32 %881, 2, !dbg !1674
  %883 = trunc i32 %882 to i16, !dbg !1674
  store i16 %883, i16* %879, align 8, !dbg !1674
  %884 = load i8*, i8** @optarg, align 8, !dbg !1675
  %885 = call double @atof(i8* %884) #10, !dbg !1676
  %886 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1677
  %887 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %886, i32 0, i32 0, !dbg !1678
  store double %885, double* %887, align 8, !dbg !1679
  br label %954, !dbg !1680

888:                                              ; preds = %48
  %889 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1681
  %890 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %889, i32 0, i32 10, !dbg !1682
  %891 = load i16, i16* %890, align 8, !dbg !1683
  %892 = zext i16 %891 to i32, !dbg !1683
  %893 = or i32 %892, 4, !dbg !1683
  %894 = trunc i32 %893 to i16, !dbg !1683
  store i16 %894, i16* %890, align 8, !dbg !1683
  %895 = load i8*, i8** @optarg, align 8, !dbg !1684
  %896 = call double @atof(i8* %895) #10, !dbg !1685
  %897 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1686
  %898 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %897, i32 0, i32 1, !dbg !1687
  store double %896, double* %898, align 8, !dbg !1688
  br label %954, !dbg !1689

899:                                              ; preds = %48
  %900 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1690
  %901 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %900, i32 0, i32 10, !dbg !1691
  %902 = load i16, i16* %901, align 8, !dbg !1692
  %903 = zext i16 %902 to i32, !dbg !1692
  %904 = or i32 %903, 8, !dbg !1692
  %905 = trunc i32 %904 to i16, !dbg !1692
  store i16 %905, i16* %901, align 8, !dbg !1692
  store i32 0, i32* %36, align 4, !dbg !1693
  %906 = load i8*, i8** @optarg, align 8, !dbg !1695
  %907 = call i8* @strtok(i8* %906, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !1696
  store i8* %907, i8** %34, align 8, !dbg !1697
  br label %908, !dbg !1698

908:                                              ; preds = %941, %899
  %909 = load i8*, i8** %34, align 8, !dbg !1699
  %910 = icmp ne i8* %909, null, !dbg !1701
  br i1 %910, label %911, label %914, !dbg !1702

911:                                              ; preds = %908
  %912 = load i32, i32* %36, align 4, !dbg !1703
  %913 = icmp ult i32 %912, 8, !dbg !1704
  br label %914

914:                                              ; preds = %911, %908
  %915 = phi i1 [ false, %908 ], [ %913, %911 ], !dbg !1705
  br i1 %915, label %916, label %945, !dbg !1706

916:                                              ; preds = %914
  %917 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1707
  %918 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %917, i32 0, i32 20, !dbg !1709
  %919 = load i16, i16* %918, align 8, !dbg !1710
  %920 = add i16 %919, 1, !dbg !1710
  store i16 %920, i16* %918, align 8, !dbg !1710
  %921 = load i8*, i8** %34, align 8, !dbg !1711
  %922 = call i8* @strchr(i8* %921, i32 58) #10, !dbg !1712
  store i8* %922, i8** %33, align 8, !dbg !1713
  %923 = load i8*, i8** %33, align 8, !dbg !1714
  store i8 0, i8* %923, align 1, !dbg !1715
  %924 = load i8*, i8** %34, align 8, !dbg !1716
  %925 = call i32 @atoi(i8* %924) #10, !dbg !1717
  %926 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1718
  %927 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %926, i32 0, i32 21, !dbg !1719
  %928 = load i32, i32* %36, align 4, !dbg !1720
  %929 = zext i32 %928 to i64, !dbg !1718
  %930 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %927, i64 0, i64 %929, !dbg !1718
  %931 = getelementptr inbounds %struct.zone, %struct.zone* %930, i32 0, i32 0, !dbg !1721
  store i32 %925, i32* %931, align 4, !dbg !1722
  %932 = load i8*, i8** %33, align 8, !dbg !1723
  %933 = getelementptr inbounds i8, i8* %932, i64 1, !dbg !1724
  %934 = call i32 @atoi(i8* %933) #10, !dbg !1725
  %935 = load %struct.crop_mask*, %struct.crop_mask** %26, align 8, !dbg !1726
  %936 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %935, i32 0, i32 21, !dbg !1727
  %937 = load i32, i32* %36, align 4, !dbg !1728
  %938 = zext i32 %937 to i64, !dbg !1726
  %939 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %936, i64 0, i64 %938, !dbg !1726
  %940 = getelementptr inbounds %struct.zone, %struct.zone* %939, i32 0, i32 1, !dbg !1729
  store i32 %934, i32* %940, align 4, !dbg !1730
  br label %941, !dbg !1731

941:                                              ; preds = %916
  %942 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !1732
  store i8* %942, i8** %34, align 8, !dbg !1733
  %943 = load i32, i32* %36, align 4, !dbg !1734
  %944 = add i32 %943, 1, !dbg !1734
  store i32 %944, i32* %36, align 4, !dbg !1734
  br label %908, !dbg !1735, !llvm.loop !1736

945:                                              ; preds = %914
  %946 = load i8*, i8** %34, align 8, !dbg !1738
  %947 = icmp ne i8* %946, null, !dbg !1740
  br i1 %947, label %948, label %952, !dbg !1741

948:                                              ; preds = %945
  %949 = load i32, i32* %36, align 4, !dbg !1742
  %950 = icmp uge i32 %949, 8, !dbg !1743
  br i1 %950, label %951, label %952, !dbg !1744

951:                                              ; preds = %948
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0), i32 8), !dbg !1745
  call void @exit(i32 -1) #9, !dbg !1747
  unreachable, !dbg !1747

952:                                              ; preds = %948, %945
  br label %954, !dbg !1748

953:                                              ; preds = %48
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1749
  call void @exit(i32 -1) #9, !dbg !1750
  unreachable, !dbg !1750

954:                                              ; preds = %952, %888, %877, %868, %867, %831, %795, %774, %702, %693, %673, %545, %536, %491, %490, %466, %445, %415, %236, %232, %228, %224, %223, %154, %151, %150, %145, %144, %125, %124, %123, %122, %106, %69, %61, %52, %48
  br label %43, !dbg !725, !llvm.loop !1271

955:                                              ; preds = %43
  ret void, !dbg !1751
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @getopt(i32, i8**, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @processCompressOptions(i8*) #0 !dbg !1752 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1755, metadata !DIExpression()), !dbg !1756
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1757, metadata !DIExpression()), !dbg !1758
  store i8* null, i8** %4, align 8, !dbg !1758
  %5 = load i8*, i8** %3, align 8, !dbg !1759
  %6 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0), i64 4) #10, !dbg !1759
  %7 = icmp eq i32 %6, 0, !dbg !1759
  br i1 %7, label %8, label %9, !dbg !1761

8:                                                ; preds = %1
  store i16 1, i16* @defcompression, align 2, !dbg !1762
  br label %109, !dbg !1764

9:                                                ; preds = %1
  %10 = load i8*, i8** %3, align 8, !dbg !1765
  %11 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !1765
  %12 = icmp eq i32 %11, 0, !dbg !1765
  br i1 %12, label %13, label %14, !dbg !1767

13:                                               ; preds = %9
  store i16 -32763, i16* @defcompression, align 2, !dbg !1768
  br label %108, !dbg !1770

14:                                               ; preds = %9
  %15 = load i8*, i8** %3, align 8, !dbg !1771
  %16 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i64 0, i64 0), i64 4) #10, !dbg !1771
  %17 = icmp eq i32 %16, 0, !dbg !1771
  br i1 %17, label %18, label %61, !dbg !1773

18:                                               ; preds = %14
  %19 = load i8*, i8** %3, align 8, !dbg !1774
  %20 = call i8* @strchr(i8* %19, i32 58) #10, !dbg !1776
  store i8* %20, i8** %4, align 8, !dbg !1777
  store i16 7, i16* @defcompression, align 2, !dbg !1778
  br label %21, !dbg !1779

21:                                               ; preds = %56, %18
  %22 = load i8*, i8** %4, align 8, !dbg !1780
  %23 = icmp ne i8* %22, null, !dbg !1779
  br i1 %23, label %24, label %60, !dbg !1779

24:                                               ; preds = %21
  %25 = call i16** @__ctype_b_loc() #11, !dbg !1781
  %26 = load i16*, i16** %25, align 8, !dbg !1781
  %27 = load i8*, i8** %4, align 8, !dbg !1781
  %28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !1781
  %29 = load i8, i8* %28, align 1, !dbg !1781
  %30 = sext i8 %29 to i32, !dbg !1781
  %31 = sext i32 %30 to i64, !dbg !1781
  %32 = getelementptr inbounds i16, i16* %26, i64 %31, !dbg !1781
  %33 = load i16, i16* %32, align 2, !dbg !1781
  %34 = zext i16 %33 to i32, !dbg !1781
  %35 = and i32 %34, 2048, !dbg !1781
  %36 = icmp ne i32 %35, 0, !dbg !1781
  br i1 %36, label %37, label %41, !dbg !1784

37:                                               ; preds = %24
  %38 = load i8*, i8** %4, align 8, !dbg !1785
  %39 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !1786
  %40 = call i32 @atoi(i8* %39) #10, !dbg !1787
  store i32 %40, i32* @quality, align 4, !dbg !1788
  br label %56, !dbg !1789

41:                                               ; preds = %24
  %42 = load i8*, i8** %4, align 8, !dbg !1790
  %43 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !1790
  %44 = call i32 @strncmp(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3) #10, !dbg !1790
  %45 = icmp eq i32 %44, 0, !dbg !1790
  br i1 %45, label %46, label %47, !dbg !1792

46:                                               ; preds = %41
  store i32 0, i32* @jpegcolormode, align 4, !dbg !1793
  br label %55, !dbg !1794

47:                                               ; preds = %41
  %48 = load i8*, i8** %4, align 8, !dbg !1795
  %49 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !1795
  %50 = call i32 @strncmp(i8* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0), i64 3) #10, !dbg !1795
  %51 = icmp eq i32 %50, 0, !dbg !1795
  br i1 %51, label %52, label %53, !dbg !1797

52:                                               ; preds = %47
  store i32 1, i32* @jpegcolormode, align 4, !dbg !1798
  br label %54, !dbg !1799

53:                                               ; preds = %47
  call void @usage(), !dbg !1800
  br label %54

54:                                               ; preds = %53, %52
  br label %55

55:                                               ; preds = %54, %46
  br label %56

56:                                               ; preds = %55, %37
  %57 = load i8*, i8** %4, align 8, !dbg !1801
  %58 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !1802
  %59 = call i8* @strchr(i8* %58, i32 58) #10, !dbg !1803
  store i8* %59, i8** %4, align 8, !dbg !1804
  br label %21, !dbg !1779, !llvm.loop !1805

60:                                               ; preds = %21
  br label %107, !dbg !1807

61:                                               ; preds = %14
  %62 = load i8*, i8** %3, align 8, !dbg !1808
  %63 = call i32 @strncmp(i8* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i64 0, i64 0), i64 2) #10, !dbg !1808
  %64 = icmp eq i32 %63, 0, !dbg !1808
  br i1 %64, label %65, label %67, !dbg !1810

65:                                               ; preds = %61
  %66 = load i8*, i8** %3, align 8, !dbg !1811
  call void @processG3Options(i8* %66), !dbg !1813
  store i16 3, i16* @defcompression, align 2, !dbg !1814
  br label %106, !dbg !1815

67:                                               ; preds = %61
  %68 = load i8*, i8** %3, align 8, !dbg !1816
  %69 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i64 0, i64 0)) #10, !dbg !1816
  %70 = icmp eq i32 %69, 0, !dbg !1816
  br i1 %70, label %71, label %72, !dbg !1818

71:                                               ; preds = %67
  store i16 4, i16* @defcompression, align 2, !dbg !1819
  br label %105, !dbg !1821

72:                                               ; preds = %67
  %73 = load i8*, i8** %3, align 8, !dbg !1822
  %74 = call i32 @strncmp(i8* %73, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i64 0, i64 0), i64 3) #10, !dbg !1822
  %75 = icmp eq i32 %74, 0, !dbg !1822
  br i1 %75, label %76, label %87, !dbg !1824

76:                                               ; preds = %72
  %77 = load i8*, i8** %3, align 8, !dbg !1825
  %78 = call i8* @strchr(i8* %77, i32 58) #10, !dbg !1827
  store i8* %78, i8** %4, align 8, !dbg !1828
  %79 = load i8*, i8** %4, align 8, !dbg !1829
  %80 = icmp ne i8* %79, null, !dbg !1829
  br i1 %80, label %81, label %86, !dbg !1831

81:                                               ; preds = %76
  %82 = load i8*, i8** %4, align 8, !dbg !1832
  %83 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !1833
  %84 = call i32 @atoi(i8* %83) #10, !dbg !1834
  %85 = trunc i32 %84 to i16, !dbg !1834
  store i16 %85, i16* @defpredictor, align 2, !dbg !1835
  br label %86, !dbg !1836

86:                                               ; preds = %81, %76
  store i16 5, i16* @defcompression, align 2, !dbg !1837
  br label %104, !dbg !1838

87:                                               ; preds = %72
  %88 = load i8*, i8** %3, align 8, !dbg !1839
  %89 = call i32 @strncmp(i8* %88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i64 0, i64 0), i64 3) #10, !dbg !1839
  %90 = icmp eq i32 %89, 0, !dbg !1839
  br i1 %90, label %91, label %102, !dbg !1841

91:                                               ; preds = %87
  %92 = load i8*, i8** %3, align 8, !dbg !1842
  %93 = call i8* @strchr(i8* %92, i32 58) #10, !dbg !1844
  store i8* %93, i8** %4, align 8, !dbg !1845
  %94 = load i8*, i8** %4, align 8, !dbg !1846
  %95 = icmp ne i8* %94, null, !dbg !1846
  br i1 %95, label %96, label %101, !dbg !1848

96:                                               ; preds = %91
  %97 = load i8*, i8** %4, align 8, !dbg !1849
  %98 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !1850
  %99 = call i32 @atoi(i8* %98) #10, !dbg !1851
  %100 = trunc i32 %99 to i16, !dbg !1851
  store i16 %100, i16* @defpredictor, align 2, !dbg !1852
  br label %101, !dbg !1853

101:                                              ; preds = %96, %91
  store i16 8, i16* @defcompression, align 2, !dbg !1854
  br label %103, !dbg !1855

102:                                              ; preds = %87
  store i32 0, i32* %2, align 4, !dbg !1856
  br label %110, !dbg !1856

103:                                              ; preds = %101
  br label %104

104:                                              ; preds = %103, %86
  br label %105

105:                                              ; preds = %104, %71
  br label %106

106:                                              ; preds = %105, %65
  br label %107

107:                                              ; preds = %106, %60
  br label %108

108:                                              ; preds = %107, %13
  br label %109

109:                                              ; preds = %108, %8
  store i32 1, i32* %2, align 4, !dbg !1857
  br label %110, !dbg !1857

110:                                              ; preds = %109, %102
  %111 = load i32, i32* %2, align 4, !dbg !1858
  ret i32 %111, !dbg !1858
}

declare void @TIFFError(i8*, i8*, ...) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly
declare i32 @tolower(i32) #5

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage() #0 !dbg !1859 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1862, metadata !DIExpression()), !dbg !1863
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1864
  %3 = call i8* @TIFFGetVersion(), !dbg !1865
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i64 0, i64 0), i8* %3), !dbg !1866
  store i32 0, i32* %1, align 4, !dbg !1867
  br label %5, !dbg !1869

5:                                                ; preds = %18, %0
  %6 = load i32, i32* %1, align 4, !dbg !1870
  %7 = sext i32 %6 to i64, !dbg !1872
  %8 = getelementptr inbounds [132 x i8*], [132 x i8*]* @usage_info, i64 0, i64 %7, !dbg !1872
  %9 = load i8*, i8** %8, align 8, !dbg !1872
  %10 = icmp ne i8* %9, null, !dbg !1873
  br i1 %10, label %11, label %21, !dbg !1874

11:                                               ; preds = %5
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1875
  %13 = load i32, i32* %1, align 4, !dbg !1876
  %14 = sext i32 %13 to i64, !dbg !1877
  %15 = getelementptr inbounds [132 x i8*], [132 x i8*]* @usage_info, i64 0, i64 %14, !dbg !1877
  %16 = load i8*, i8** %15, align 8, !dbg !1877
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i64 0, i64 0), i8* %16), !dbg !1878
  br label %18, !dbg !1878

18:                                               ; preds = %11
  %19 = load i32, i32* %1, align 4, !dbg !1879
  %20 = add nsw i32 %19, 1, !dbg !1879
  store i32 %20, i32* %1, align 4, !dbg !1879
  br label %5, !dbg !1880, !llvm.loop !1881

21:                                               ; preds = %5
  call void @exit(i32 -1) #9, !dbg !1883
  unreachable, !dbg !1883

22:                                               ; No predecessors!
  ret void, !dbg !1884
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind readonly
declare i64 @atol(i8*) #5

declare i8* @TIFFGetVersion() #3

; Function Attrs: nounwind
declare i8* @strtok(i8*, i8*) #2

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #5

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare double @atof(i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_page_geometry(i8*, %struct.pagedef*) #0 !dbg !1885 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.pagedef*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1888, metadata !DIExpression()), !dbg !1889
  store %struct.pagedef* %1, %struct.pagedef** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.pagedef** %5, metadata !1890, metadata !DIExpression()), !dbg !1891
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1892, metadata !DIExpression()), !dbg !1893
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1894, metadata !DIExpression()), !dbg !1895
  %8 = load i8*, i8** %4, align 8, !dbg !1896
  store i8* %8, i8** %6, align 8, !dbg !1898
  br label %9, !dbg !1899

9:                                                ; preds = %20, %2
  %10 = load i8*, i8** %6, align 8, !dbg !1900
  %11 = load i8, i8* %10, align 1, !dbg !1902
  %12 = icmp ne i8 %11, 0, !dbg !1903
  br i1 %12, label %13, label %23, !dbg !1903

13:                                               ; preds = %9
  %14 = load i8*, i8** %6, align 8, !dbg !1904
  %15 = load i8, i8* %14, align 1, !dbg !1905
  %16 = sext i8 %15 to i32, !dbg !1906
  %17 = call i32 @tolower(i32 %16) #10, !dbg !1907
  %18 = trunc i32 %17 to i8, !dbg !1908
  %19 = load i8*, i8** %6, align 8, !dbg !1909
  store i8 %18, i8* %19, align 1, !dbg !1910
  br label %20, !dbg !1911

20:                                               ; preds = %13
  %21 = load i8*, i8** %6, align 8, !dbg !1912
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !1912
  store i8* %22, i8** %6, align 8, !dbg !1912
  br label %9, !dbg !1913, !llvm.loop !1914

23:                                               ; preds = %9
  store i32 0, i32* %7, align 4, !dbg !1916
  br label %24, !dbg !1918

24:                                               ; preds = %64, %23
  %25 = load i32, i32* %7, align 4, !dbg !1919
  %26 = icmp slt i32 %25, 49, !dbg !1921
  br i1 %26, label %27, label %67, !dbg !1922

27:                                               ; preds = %24
  %28 = load i8*, i8** %4, align 8, !dbg !1923
  %29 = load i32, i32* %7, align 4, !dbg !1926
  %30 = sext i32 %29 to i64, !dbg !1927
  %31 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %30, !dbg !1927
  %32 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %31, i32 0, i32 0, !dbg !1928
  %33 = getelementptr inbounds [15 x i8], [15 x i8]* %32, i64 0, i64 0, !dbg !1927
  %34 = call i32 @strcmp(i8* %28, i8* %33) #10, !dbg !1929
  %35 = icmp eq i32 %34, 0, !dbg !1930
  br i1 %35, label %36, label %63, !dbg !1931

36:                                               ; preds = %27
  %37 = load i32, i32* %7, align 4, !dbg !1932
  %38 = sext i32 %37 to i64, !dbg !1934
  %39 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %38, !dbg !1934
  %40 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %39, i32 0, i32 1, !dbg !1935
  %41 = load double, double* %40, align 8, !dbg !1935
  %42 = load %struct.pagedef*, %struct.pagedef** %5, align 8, !dbg !1936
  %43 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %42, i32 0, i32 1, !dbg !1937
  store double %41, double* %43, align 8, !dbg !1938
  %44 = load i32, i32* %7, align 4, !dbg !1939
  %45 = sext i32 %44 to i64, !dbg !1940
  %46 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %45, !dbg !1940
  %47 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %46, i32 0, i32 2, !dbg !1941
  %48 = load double, double* %47, align 8, !dbg !1941
  %49 = load %struct.pagedef*, %struct.pagedef** %5, align 8, !dbg !1942
  %50 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %49, i32 0, i32 2, !dbg !1943
  store double %48, double* %50, align 8, !dbg !1944
  %51 = load %struct.pagedef*, %struct.pagedef** %5, align 8, !dbg !1945
  %52 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %51, i32 0, i32 0, !dbg !1946
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %52, i64 0, i64 0, !dbg !1945
  %54 = load i32, i32* %7, align 4, !dbg !1947
  %55 = sext i32 %54 to i64, !dbg !1948
  %56 = getelementptr inbounds [49 x %struct.paperdef], [49 x %struct.paperdef]* @PaperTable, i64 0, i64 %55, !dbg !1948
  %57 = getelementptr inbounds %struct.paperdef, %struct.paperdef* %56, i32 0, i32 0, !dbg !1949
  %58 = getelementptr inbounds [15 x i8], [15 x i8]* %57, i64 0, i64 0, !dbg !1948
  %59 = call i8* @strncpy(i8* %53, i8* %58, i64 15) #8, !dbg !1950
  %60 = load %struct.pagedef*, %struct.pagedef** %5, align 8, !dbg !1951
  %61 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %60, i32 0, i32 0, !dbg !1952
  %62 = getelementptr inbounds [16 x i8], [16 x i8]* %61, i64 0, i64 15, !dbg !1951
  store i8 0, i8* %62, align 1, !dbg !1953
  store i32 0, i32* %3, align 4, !dbg !1954
  br label %68, !dbg !1954

63:                                               ; preds = %27
  br label %64, !dbg !1955

64:                                               ; preds = %63
  %65 = load i32, i32* %7, align 4, !dbg !1956
  %66 = add nsw i32 %65, 1, !dbg !1956
  store i32 %66, i32* %7, align 4, !dbg !1956
  br label %24, !dbg !1957, !llvm.loop !1958

67:                                               ; preds = %24
  store i32 1, i32* %3, align 4, !dbg !1960
  br label %68, !dbg !1960

68:                                               ; preds = %67, %36
  %69 = load i32, i32* %3, align 4, !dbg !1961
  ret i32 %69, !dbg !1961
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #6

; Function Attrs: noinline nounwind optnone uwtable
define internal void @processG3Options(i8*) #0 !dbg !1962 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1965, metadata !DIExpression()), !dbg !1966
  %3 = load i8*, i8** %2, align 8, !dbg !1967
  %4 = call i8* @strchr(i8* %3, i32 58) #10, !dbg !1969
  store i8* %4, i8** %2, align 8, !dbg !1970
  %5 = icmp ne i8* %4, null, !dbg !1970
  br i1 %5, label %6, label %43, !dbg !1971

6:                                                ; preds = %1
  %7 = load i32, i32* @defg3opts, align 4, !dbg !1972
  %8 = icmp eq i32 %7, -1, !dbg !1975
  br i1 %8, label %9, label %10, !dbg !1976

9:                                                ; preds = %6
  store i32 0, i32* @defg3opts, align 4, !dbg !1977
  br label %10, !dbg !1978

10:                                               ; preds = %9, %6
  br label %11, !dbg !1979

11:                                               ; preds = %38, %10
  %12 = load i8*, i8** %2, align 8, !dbg !1980
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !1980
  store i8* %13, i8** %2, align 8, !dbg !1980
  %14 = load i8*, i8** %2, align 8, !dbg !1982
  %15 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i64 0, i64 0), i64 2) #10, !dbg !1982
  %16 = icmp eq i32 %15, 0, !dbg !1982
  br i1 %16, label %17, label %20, !dbg !1984

17:                                               ; preds = %11
  %18 = load i32, i32* @defg3opts, align 4, !dbg !1985
  %19 = and i32 %18, -2, !dbg !1985
  store i32 %19, i32* @defg3opts, align 4, !dbg !1985
  br label %37, !dbg !1986

20:                                               ; preds = %11
  %21 = load i8*, i8** %2, align 8, !dbg !1987
  %22 = call i32 @strncmp(i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i64 0, i64 0), i64 2) #10, !dbg !1987
  %23 = icmp eq i32 %22, 0, !dbg !1987
  br i1 %23, label %24, label %27, !dbg !1989

24:                                               ; preds = %20
  %25 = load i32, i32* @defg3opts, align 4, !dbg !1990
  %26 = or i32 %25, 1, !dbg !1990
  store i32 %26, i32* @defg3opts, align 4, !dbg !1990
  br label %36, !dbg !1991

27:                                               ; preds = %20
  %28 = load i8*, i8** %2, align 8, !dbg !1992
  %29 = call i32 @strncmp(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), i64 4) #10, !dbg !1992
  %30 = icmp eq i32 %29, 0, !dbg !1992
  br i1 %30, label %31, label %34, !dbg !1994

31:                                               ; preds = %27
  %32 = load i32, i32* @defg3opts, align 4, !dbg !1995
  %33 = or i32 %32, 4, !dbg !1995
  store i32 %33, i32* @defg3opts, align 4, !dbg !1995
  br label %35, !dbg !1996

34:                                               ; preds = %27
  call void @usage(), !dbg !1997
  br label %35

35:                                               ; preds = %34, %31
  br label %36

36:                                               ; preds = %35, %24
  br label %37

37:                                               ; preds = %36, %17
  br label %38, !dbg !1998

38:                                               ; preds = %37
  %39 = load i8*, i8** %2, align 8, !dbg !1999
  %40 = call i8* @strchr(i8* %39, i32 58) #10, !dbg !2000
  store i8* %40, i8** %2, align 8, !dbg !2001
  %41 = icmp ne i8* %40, null, !dbg !1998
  br i1 %41, label %11, label %42, !dbg !1998, !llvm.loop !2002

42:                                               ; preds = %38
  br label %43, !dbg !2004

43:                                               ; preds = %42, %1
  ret void, !dbg !2005
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #0 !dbg !2006 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.tiff*, align 8
  %13 = alloca %struct.tiff*, align 8
  %14 = alloca [10 x i8], align 1
  %15 = alloca i8*, align 8
  %16 = alloca %struct.image_data, align 4
  %17 = alloca %struct.crop_mask, align 8
  %18 = alloca %struct.pagedef, align 8
  %19 = alloca [32 x %struct.pageseg], align 16
  %20 = alloca [32 x %struct.buffinfo], align 16
  %21 = alloca %struct.dump_opts, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca [2049 x i32], align 16
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca [4097 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2009, metadata !DIExpression()), !dbg !2010
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !2011, metadata !DIExpression()), !dbg !2012
  call void @llvm.dbg.declare(metadata i16* %6, metadata !2013, metadata !DIExpression()), !dbg !2014
  store i16 -1, i16* %6, align 2, !dbg !2014
  call void @llvm.dbg.declare(metadata i16* %7, metadata !2015, metadata !DIExpression()), !dbg !2016
  store i16 0, i16* %7, align 2, !dbg !2016
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2017, metadata !DIExpression()), !dbg !2018
  store i32 0, i32* %8, align 4, !dbg !2018
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2019, metadata !DIExpression()), !dbg !2020
  store i32 0, i32* %9, align 4, !dbg !2020
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2021, metadata !DIExpression()), !dbg !2022
  store i32 0, i32* %10, align 4, !dbg !2022
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2023, metadata !DIExpression()), !dbg !2024
  store i32 0, i32* %11, align 4, !dbg !2024
  call void @llvm.dbg.declare(metadata %struct.tiff** %12, metadata !2025, metadata !DIExpression()), !dbg !2026
  store %struct.tiff* null, %struct.tiff** %12, align 8, !dbg !2026
  call void @llvm.dbg.declare(metadata %struct.tiff** %13, metadata !2027, metadata !DIExpression()), !dbg !2028
  store %struct.tiff* null, %struct.tiff** %13, align 8, !dbg !2028
  call void @llvm.dbg.declare(metadata [10 x i8]* %14, metadata !2029, metadata !DIExpression()), !dbg !2033
  call void @llvm.dbg.declare(metadata i8** %15, metadata !2034, metadata !DIExpression()), !dbg !2035
  %37 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0, !dbg !2036
  store i8* %37, i8** %15, align 8, !dbg !2035
  call void @llvm.dbg.declare(metadata %struct.image_data* %16, metadata !2037, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.declare(metadata %struct.crop_mask* %17, metadata !2039, metadata !DIExpression()), !dbg !2040
  call void @llvm.dbg.declare(metadata %struct.pagedef* %18, metadata !2041, metadata !DIExpression()), !dbg !2042
  call void @llvm.dbg.declare(metadata [32 x %struct.pageseg]* %19, metadata !2043, metadata !DIExpression()), !dbg !2056
  call void @llvm.dbg.declare(metadata [32 x %struct.buffinfo]* %20, metadata !2057, metadata !DIExpression()), !dbg !2063
  call void @llvm.dbg.declare(metadata %struct.dump_opts* %21, metadata !2064, metadata !DIExpression()), !dbg !2065
  call void @llvm.dbg.declare(metadata i8** %22, metadata !2066, metadata !DIExpression()), !dbg !2067
  store i8* null, i8** %22, align 8, !dbg !2067
  call void @llvm.dbg.declare(metadata i8** %23, metadata !2068, metadata !DIExpression()), !dbg !2069
  store i8* null, i8** %23, align 8, !dbg !2069
  call void @llvm.dbg.declare(metadata i8** %24, metadata !2070, metadata !DIExpression()), !dbg !2071
  store i8* null, i8** %24, align 8, !dbg !2071
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2072, metadata !DIExpression()), !dbg !2073
  store i8* null, i8** %25, align 8, !dbg !2073
  call void @llvm.dbg.declare(metadata [2049 x i32]* %26, metadata !2074, metadata !DIExpression()), !dbg !2078
  call void @llvm.dbg.declare(metadata i32* %27, metadata !2079, metadata !DIExpression()), !dbg !2080
  store i32 0, i32* %27, align 4, !dbg !2080
  call void @llvm.dbg.declare(metadata i32* %28, metadata !2081, metadata !DIExpression()), !dbg !2082
  store i32 0, i32* %28, align 4, !dbg !2082
  call void @llvm.dbg.declare(metadata i32* %29, metadata !2083, metadata !DIExpression()), !dbg !2084
  store i32 0, i32* %29, align 4, !dbg !2084
  call void @llvm.dbg.declare(metadata i32* %30, metadata !2085, metadata !DIExpression()), !dbg !2086
  store i32 0, i32* %30, align 4, !dbg !2086
  call void @llvm.dbg.declare(metadata i32* %31, metadata !2087, metadata !DIExpression()), !dbg !2088
  store i32 0, i32* %31, align 4, !dbg !2088
  call void @llvm.dbg.declare(metadata i32* %32, metadata !2089, metadata !DIExpression()), !dbg !2090
  store i32 0, i32* %32, align 4, !dbg !2090
  call void @llvm.dbg.declare(metadata i32* %33, metadata !2091, metadata !DIExpression()), !dbg !2092
  store i32 0, i32* %33, align 4, !dbg !2092
  call void @llvm.dbg.declare(metadata i32* %34, metadata !2093, metadata !DIExpression()), !dbg !2094
  call void @llvm.dbg.declare(metadata i32* %35, metadata !2095, metadata !DIExpression()), !dbg !2096
  call void @llvm.dbg.declare(metadata [4097 x i8]* %36, metadata !2097, metadata !DIExpression()), !dbg !2098
  %38 = load i8, i8* bitcast (i32* @little_endian to i8*), align 4, !dbg !2099
  %39 = zext i8 %38 to i32, !dbg !2099
  %40 = and i32 %39, 49, !dbg !2100
  store i32 %40, i32* @little_endian, align 4, !dbg !2101
  call void @initImageData(%struct.image_data* %16), !dbg !2102
  call void @initCropMasks(%struct.crop_mask* %17), !dbg !2103
  %41 = getelementptr inbounds [32 x %struct.pageseg], [32 x %struct.pageseg]* %19, i64 0, i64 0, !dbg !2104
  %42 = getelementptr inbounds [32 x %struct.buffinfo], [32 x %struct.buffinfo]* %20, i64 0, i64 0, !dbg !2105
  call void @initPageSetup(%struct.pagedef* %18, %struct.pageseg* %41, %struct.buffinfo* %42), !dbg !2106
  call void @initDumpOptions(%struct.dump_opts* %21), !dbg !2107
  %43 = load i32, i32* %4, align 4, !dbg !2108
  %44 = load i8**, i8*** %5, align 8, !dbg !2109
  %45 = load i8*, i8** %15, align 8, !dbg !2110
  %46 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0, !dbg !2111
  %47 = getelementptr inbounds [2049 x i32], [2049 x i32]* %26, i64 0, i64 0, !dbg !2112
  call void @process_command_opts(i32 %43, i8** %44, i8* %45, i8* %46, i32* %11, i16* %6, i16* %7, i32* %8, i32* %9, i32* %10, %struct.crop_mask* %17, %struct.pagedef* %18, %struct.dump_opts* %21, i32* %47, i32* %27), !dbg !2113
  %48 = load i32, i32* %4, align 4, !dbg !2114
  %49 = load i32, i32* @optind, align 4, !dbg !2116
  %50 = sub nsw i32 %48, %49, !dbg !2117
  %51 = icmp slt i32 %50, 2, !dbg !2118
  br i1 %51, label %52, label %53, !dbg !2119

52:                                               ; preds = %2
  call void @usage(), !dbg !2120
  br label %53, !dbg !2120

53:                                               ; preds = %52, %2
  %54 = load i32, i32* %4, align 4, !dbg !2121
  %55 = load i32, i32* @optind, align 4, !dbg !2123
  %56 = sub nsw i32 %54, %55, !dbg !2124
  %57 = icmp eq i32 %56, 2, !dbg !2125
  br i1 %57, label %58, label %59, !dbg !2126

58:                                               ; preds = %53
  store i32 -1, i32* @pageNum, align 4, !dbg !2127
  br label %60, !dbg !2128

59:                                               ; preds = %53
  store i32 0, i32* %32, align 4, !dbg !2129
  br label %60

60:                                               ; preds = %59, %58
  br label %61, !dbg !2130

61:                                               ; preds = %405, %60
  %62 = load i32, i32* @optind, align 4, !dbg !2131
  %63 = load i32, i32* %4, align 4, !dbg !2132
  %64 = sub nsw i32 %63, 1, !dbg !2133
  %65 = icmp slt i32 %62, %64, !dbg !2134
  br i1 %65, label %66, label %409, !dbg !2130

66:                                               ; preds = %61
  %67 = load i8**, i8*** %5, align 8, !dbg !2135
  %68 = load i32, i32* @optind, align 4, !dbg !2137
  %69 = sext i32 %68 to i64, !dbg !2135
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69, !dbg !2135
  %71 = load i8*, i8** %70, align 8, !dbg !2135
  %72 = call %struct.tiff* @TIFFOpen(i8* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.72, i64 0, i64 0)), !dbg !2138
  store %struct.tiff* %72, %struct.tiff** %12, align 8, !dbg !2139
  %73 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2140
  %74 = icmp eq %struct.tiff* %73, null, !dbg !2142
  br i1 %74, label %75, label %76, !dbg !2143

75:                                               ; preds = %66
  store i32 -3, i32* %3, align 4, !dbg !2144
  br label %469, !dbg !2144

76:                                               ; preds = %66
  %77 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2145
  %78 = call zeroext i16 @TIFFNumberOfDirectories(%struct.tiff* %77), !dbg !2146
  %79 = zext i16 %78 to i32, !dbg !2146
  store i32 %79, i32* %32, align 4, !dbg !2147
  %80 = load i32, i32* %27, align 4, !dbg !2148
  %81 = icmp eq i32 %80, 0, !dbg !2150
  br i1 %81, label %82, label %84, !dbg !2151

82:                                               ; preds = %76
  store i32 0, i32* %11, align 4, !dbg !2152
  %83 = load i32, i32* %32, align 4, !dbg !2154
  store i32 %83, i32* %31, align 4, !dbg !2155
  br label %101, !dbg !2156

84:                                               ; preds = %76
  %85 = load i32, i32* %29, align 4, !dbg !2157
  %86 = zext i32 %85 to i64, !dbg !2159
  %87 = getelementptr inbounds [2049 x i32], [2049 x i32]* %26, i64 0, i64 %86, !dbg !2159
  %88 = load i32, i32* %87, align 4, !dbg !2159
  %89 = sub i32 %88, 1, !dbg !2160
  %90 = trunc i32 %89 to i16, !dbg !2161
  %91 = zext i16 %90 to i32, !dbg !2161
  store i32 %91, i32* %11, align 4, !dbg !2162
  %92 = load i32, i32* %29, align 4, !dbg !2163
  %93 = add i32 %92, 1, !dbg !2163
  store i32 %93, i32* %29, align 4, !dbg !2163
  %94 = load i32, i32* %27, align 4, !dbg !2164
  %95 = load i32, i32* %32, align 4, !dbg !2166
  %96 = icmp ugt i32 %94, %95, !dbg !2167
  br i1 %96, label %97, label %99, !dbg !2168

97:                                               ; preds = %84
  %98 = load i32, i32* %32, align 4, !dbg !2169
  store i32 %98, i32* %27, align 4, !dbg !2170
  br label %99, !dbg !2171

99:                                               ; preds = %97, %84
  %100 = load i32, i32* %27, align 4, !dbg !2172
  store i32 %100, i32* %31, align 4, !dbg !2173
  br label %101

101:                                              ; preds = %99, %82
  %102 = load i32, i32* %11, align 4, !dbg !2174
  %103 = icmp eq i32 %102, 2047, !dbg !2176
  br i1 %103, label %104, label %107, !dbg !2177

104:                                              ; preds = %101
  %105 = load i32, i32* %32, align 4, !dbg !2178
  %106 = sub i32 %105, 1, !dbg !2179
  store i32 %106, i32* %11, align 4, !dbg !2180
  br label %107, !dbg !2181

107:                                              ; preds = %104, %101
  %108 = load i32, i32* %11, align 4, !dbg !2182
  %109 = load i32, i32* %32, align 4, !dbg !2184
  %110 = icmp ugt i32 %108, %109, !dbg !2185
  br i1 %110, label %111, label %122, !dbg !2186

111:                                              ; preds = %107
  %112 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2187
  %113 = call i8* @TIFFFileName(%struct.tiff* %112), !dbg !2189
  %114 = load i32, i32* %11, align 4, !dbg !2190
  %115 = add nsw i32 %114, 1, !dbg !2191
  %116 = load i32, i32* %32, align 4, !dbg !2192
  call void (i8*, i8*, ...) @TIFFError(i8* %113, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.73, i64 0, i64 0), i32 %115, i32 %116), !dbg !2193
  %117 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2194
  %118 = icmp ne %struct.tiff* %117, null, !dbg !2196
  br i1 %118, label %119, label %121, !dbg !2197

119:                                              ; preds = %111
  %120 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2198
  call void @TIFFClose(%struct.tiff* %120), !dbg !2199
  br label %121, !dbg !2200

121:                                              ; preds = %119, %111
  store i32 1, i32* %3, align 4, !dbg !2201
  br label %469, !dbg !2201

122:                                              ; preds = %107
  %123 = load i32, i32* %11, align 4, !dbg !2202
  %124 = icmp ne i32 %123, 0, !dbg !2204
  br i1 %124, label %125, label %140, !dbg !2205

125:                                              ; preds = %122
  %126 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2206
  %127 = load i32, i32* %11, align 4, !dbg !2207
  %128 = trunc i32 %127 to i16, !dbg !2208
  %129 = call i32 @TIFFSetDirectory(%struct.tiff* %126, i16 zeroext %128), !dbg !2209
  %130 = icmp ne i32 %129, 0, !dbg !2209
  br i1 %130, label %140, label %131, !dbg !2210

131:                                              ; preds = %125
  %132 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2211
  %133 = call i8* @TIFFFileName(%struct.tiff* %132), !dbg !2213
  %134 = load i32, i32* %11, align 4, !dbg !2214
  call void (i8*, i8*, ...) @TIFFError(i8* %133, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i64 0, i64 0), i32 %134), !dbg !2215
  %135 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2216
  %136 = icmp ne %struct.tiff* %135, null, !dbg !2218
  br i1 %136, label %137, label %139, !dbg !2219

137:                                              ; preds = %131
  %138 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2220
  call void @TIFFClose(%struct.tiff* %138), !dbg !2221
  br label %139, !dbg !2222

139:                                              ; preds = %137, %131
  store i32 1, i32* %3, align 4, !dbg !2223
  br label %469, !dbg !2223

140:                                              ; preds = %125, %122
  store i32 0, i32* %33, align 4, !dbg !2224
  br label %141, !dbg !2225

141:                                              ; preds = %404, %140
  %142 = load i32, i32* %33, align 4, !dbg !2226
  %143 = icmp eq i32 %142, 0, !dbg !2227
  br i1 %143, label %144, label %405, !dbg !2225

144:                                              ; preds = %141
  %145 = load i16, i16* %6, align 2, !dbg !2228
  store i16 %145, i16* @config, align 2, !dbg !2230
  %146 = load i16, i16* @defcompression, align 2, !dbg !2231
  store i16 %146, i16* @compression, align 2, !dbg !2232
  %147 = load i16, i16* @defpredictor, align 2, !dbg !2233
  store i16 %147, i16* @predictor, align 2, !dbg !2234
  %148 = load i16, i16* %7, align 2, !dbg !2235
  store i16 %148, i16* @fillorder, align 2, !dbg !2236
  %149 = load i32, i32* %10, align 4, !dbg !2237
  store i32 %149, i32* @rowsperstrip, align 4, !dbg !2238
  %150 = load i32, i32* %8, align 4, !dbg !2239
  store i32 %150, i32* @tilewidth, align 4, !dbg !2240
  %151 = load i32, i32* %9, align 4, !dbg !2241
  store i32 %151, i32* @tilelength, align 4, !dbg !2242
  %152 = load i32, i32* @defg3opts, align 4, !dbg !2243
  store i32 %152, i32* @g3opts, align 4, !dbg !2244
  %153 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2245
  %154 = load i32, i32* %153, align 4, !dbg !2245
  %155 = icmp ne i32 %154, 0, !dbg !2247
  br i1 %155, label %156, label %245, !dbg !2248

156:                                              ; preds = %144
  %157 = load i32, i32* %28, align 4, !dbg !2249
  %158 = add i32 %157, 1, !dbg !2249
  store i32 %158, i32* %28, align 4, !dbg !2249
  %159 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 4, !dbg !2251
  %160 = getelementptr inbounds [4097 x i8], [4097 x i8]* %159, i64 0, i64 0, !dbg !2252
  %161 = call i64 @strlen(i8* %160) #10, !dbg !2253
  %162 = trunc i64 %161 to i32, !dbg !2253
  store i32 %162, i32* %35, align 4, !dbg !2254
  %163 = load i32, i32* %35, align 4, !dbg !2255
  %164 = icmp sgt i32 %163, 0, !dbg !2257
  br i1 %164, label %165, label %201, !dbg !2258

165:                                              ; preds = %156
  %166 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 6, !dbg !2259
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !2259
  %168 = icmp ne %struct._IO_FILE* %167, null, !dbg !2262
  br i1 %168, label %169, label %173, !dbg !2263

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 6, !dbg !2264
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %170, align 8, !dbg !2264
  %172 = call i32 @fclose(%struct._IO_FILE* %171), !dbg !2265
  br label %173, !dbg !2265

173:                                              ; preds = %169, %165
  %174 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2266
  call void @llvm.memset.p0i8.i64(i8* align 16 %174, i8 0, i64 4097, i1 false), !dbg !2266
  %175 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2267
  %176 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 4, !dbg !2268
  %177 = getelementptr inbounds [4097 x i8], [4097 x i8]* %176, i64 0, i64 0, !dbg !2269
  %178 = load i32, i32* %28, align 4, !dbg !2270
  %179 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2271
  %180 = load i32, i32* %179, align 4, !dbg !2271
  %181 = icmp eq i32 %180, 1, !dbg !2272
  %182 = zext i1 %181 to i64, !dbg !2273
  %183 = select i1 %181, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), !dbg !2273
  %184 = call i32 (i8*, i8*, ...) @sprintf(i8* %175, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i64 0, i64 0), i8* %177, i32 %178, i8* %183) #8, !dbg !2274
  %185 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2275
  %186 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 3, !dbg !2277
  %187 = getelementptr inbounds [4 x i8], [4 x i8]* %186, i64 0, i64 0, !dbg !2278
  %188 = call %struct._IO_FILE* @fopen(i8* %185, i8* %187), !dbg !2279
  %189 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 6, !dbg !2280
  store %struct._IO_FILE* %188, %struct._IO_FILE** %189, align 8, !dbg !2281
  %190 = icmp eq %struct._IO_FILE* %188, null, !dbg !2282
  br i1 %190, label %191, label %193, !dbg !2283

191:                                              ; preds = %173
  %192 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2284
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %192), !dbg !2286
  call void @exit(i32 -1) #9, !dbg !2287
  unreachable, !dbg !2287

193:                                              ; preds = %173
  %194 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 6, !dbg !2288
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %194, align 8, !dbg !2288
  %196 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2289
  %197 = load i32, i32* %196, align 4, !dbg !2289
  %198 = load i32, i32* %28, align 4, !dbg !2290
  %199 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2291
  %200 = call i8* @TIFFFileName(%struct.tiff* %199), !dbg !2292
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %195, i32 %197, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i64 0, i64 0), i32 %198, i8* %200), !dbg !2293
  br label %201, !dbg !2294

201:                                              ; preds = %193, %156
  %202 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 5, !dbg !2295
  %203 = getelementptr inbounds [4097 x i8], [4097 x i8]* %202, i64 0, i64 0, !dbg !2296
  %204 = call i64 @strlen(i8* %203) #10, !dbg !2297
  %205 = trunc i64 %204 to i32, !dbg !2297
  store i32 %205, i32* %35, align 4, !dbg !2298
  %206 = load i32, i32* %35, align 4, !dbg !2299
  %207 = icmp sgt i32 %206, 0, !dbg !2301
  br i1 %207, label %208, label %244, !dbg !2302

208:                                              ; preds = %201
  %209 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2303
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %209, align 8, !dbg !2303
  %211 = icmp ne %struct._IO_FILE* %210, null, !dbg !2306
  br i1 %211, label %212, label %216, !dbg !2307

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2308
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** %213, align 8, !dbg !2308
  %215 = call i32 @fclose(%struct._IO_FILE* %214), !dbg !2309
  br label %216, !dbg !2309

216:                                              ; preds = %212, %208
  %217 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2310
  call void @llvm.memset.p0i8.i64(i8* align 16 %217, i8 0, i64 4097, i1 false), !dbg !2310
  %218 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2311
  %219 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 5, !dbg !2312
  %220 = getelementptr inbounds [4097 x i8], [4097 x i8]* %219, i64 0, i64 0, !dbg !2313
  %221 = load i32, i32* %28, align 4, !dbg !2314
  %222 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2315
  %223 = load i32, i32* %222, align 4, !dbg !2315
  %224 = icmp eq i32 %223, 1, !dbg !2316
  %225 = zext i1 %224 to i64, !dbg !2317
  %226 = select i1 %224, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), !dbg !2317
  %227 = call i32 (i8*, i8*, ...) @sprintf(i8* %218, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79, i64 0, i64 0), i8* %220, i32 %221, i8* %226) #8, !dbg !2318
  %228 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2319
  %229 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 3, !dbg !2321
  %230 = getelementptr inbounds [4 x i8], [4 x i8]* %229, i64 0, i64 0, !dbg !2322
  %231 = call %struct._IO_FILE* @fopen(i8* %228, i8* %230), !dbg !2323
  %232 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2324
  store %struct._IO_FILE* %231, %struct._IO_FILE** %232, align 8, !dbg !2325
  %233 = icmp eq %struct._IO_FILE* %231, null, !dbg !2326
  br i1 %233, label %234, label %236, !dbg !2327

234:                                              ; preds = %216
  %235 = getelementptr inbounds [4097 x i8], [4097 x i8]* %36, i64 0, i64 0, !dbg !2328
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %235), !dbg !2330
  call void @exit(i32 -1) #9, !dbg !2331
  unreachable, !dbg !2331

236:                                              ; preds = %216
  %237 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2332
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %237, align 8, !dbg !2332
  %239 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2333
  %240 = load i32, i32* %239, align 4, !dbg !2333
  %241 = load i32, i32* %28, align 4, !dbg !2334
  %242 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2335
  %243 = call i8* @TIFFFileName(%struct.tiff* %242), !dbg !2336
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %238, i32 %240, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i64 0, i64 0), i32 %241, i8* %243), !dbg !2337
  br label %244, !dbg !2338

244:                                              ; preds = %236, %201
  br label %245, !dbg !2339

245:                                              ; preds = %244, %144
  %246 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 0, !dbg !2340
  %247 = load i32, i32* %246, align 8, !dbg !2340
  %248 = icmp ne i32 %247, 0, !dbg !2342
  br i1 %248, label %249, label %253, !dbg !2343

249:                                              ; preds = %245
  %250 = load i32, i32* %11, align 4, !dbg !2344
  %251 = add i32 %250, 1, !dbg !2345
  %252 = load i32, i32* %31, align 4, !dbg !2346
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.82, i64 0, i64 0), i32 %251, i32 %252), !dbg !2347
  br label %253, !dbg !2347

253:                                              ; preds = %249, %245
  %254 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2348
  %255 = call i32 @loadImage(%struct.tiff* %254, %struct.image_data* %16, %struct.dump_opts* %21, i8** %22), !dbg !2350
  %256 = icmp ne i32 %255, 0, !dbg !2350
  br i1 %256, label %257, label %258, !dbg !2351

257:                                              ; preds = %253
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0)), !dbg !2352
  call void @exit(i32 -1) #9, !dbg !2354
  unreachable, !dbg !2354

258:                                              ; preds = %253
  %259 = getelementptr inbounds %struct.image_data, %struct.image_data* %16, i32 0, i32 11, !dbg !2355
  %260 = load i16, i16* %259, align 2, !dbg !2355
  %261 = zext i16 %260 to i32, !dbg !2357
  %262 = icmp ne i32 %261, 0, !dbg !2358
  br i1 %262, label %263, label %268, !dbg !2359

263:                                              ; preds = %258
  %264 = call i32 @correct_orientation(%struct.image_data* %16, i8** %22), !dbg !2360
  %265 = icmp ne i32 %264, 0, !dbg !2360
  br i1 %265, label %266, label %267, !dbg !2363

266:                                              ; preds = %263
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.84, i64 0, i64 0)), !dbg !2364
  br label %267, !dbg !2364

267:                                              ; preds = %266, %263
  br label %268, !dbg !2365

268:                                              ; preds = %267, %258
  %269 = call i32 @getCropOffsets(%struct.image_data* %16, %struct.crop_mask* %17, %struct.dump_opts* %21), !dbg !2366
  %270 = icmp ne i32 %269, 0, !dbg !2366
  br i1 %270, label %271, label %272, !dbg !2368

271:                                              ; preds = %268
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.85, i64 0, i64 0)), !dbg !2369
  call void @exit(i32 -1) #9, !dbg !2371
  unreachable, !dbg !2371

272:                                              ; preds = %268
  %273 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 17, !dbg !2372
  %274 = load i16, i16* %273, align 2, !dbg !2372
  %275 = zext i16 %274 to i32, !dbg !2374
  %276 = icmp sgt i32 %275, 0, !dbg !2375
  br i1 %276, label %277, label %283, !dbg !2376

277:                                              ; preds = %272
  %278 = getelementptr inbounds [32 x %struct.buffinfo], [32 x %struct.buffinfo]* %20, i64 0, i64 0, !dbg !2377
  %279 = call i32 @processCropSelections(%struct.image_data* %16, %struct.crop_mask* %17, i8** %22, %struct.buffinfo* %278), !dbg !2380
  %280 = icmp ne i32 %279, 0, !dbg !2380
  br i1 %280, label %281, label %282, !dbg !2381

281:                                              ; preds = %277
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i64 0, i64 0)), !dbg !2382
  call void @exit(i32 -1) #9, !dbg !2384
  unreachable, !dbg !2384

282:                                              ; preds = %277
  br label %288, !dbg !2385

283:                                              ; preds = %272
  %284 = call i32 @createCroppedImage(%struct.image_data* %16, %struct.crop_mask* %17, i8** %22, i8** %23), !dbg !2386
  %285 = icmp ne i32 %284, 0, !dbg !2386
  br i1 %285, label %286, label %287, !dbg !2389

286:                                              ; preds = %283
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.87, i64 0, i64 0)), !dbg !2390
  call void @exit(i32 -1) #9, !dbg !2392
  unreachable, !dbg !2392

287:                                              ; preds = %283
  br label %288

288:                                              ; preds = %287, %282
  %289 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %18, i32 0, i32 7, !dbg !2393
  %290 = load i32, i32* %289, align 8, !dbg !2393
  %291 = icmp eq i32 %290, 0, !dbg !2395
  br i1 %291, label %292, label %338, !dbg !2396

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 17, !dbg !2397
  %294 = load i16, i16* %293, align 2, !dbg !2397
  %295 = zext i16 %294 to i32, !dbg !2400
  %296 = icmp sgt i32 %295, 0, !dbg !2401
  br i1 %296, label %297, label %309, !dbg !2402

297:                                              ; preds = %292
  %298 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2403
  %299 = getelementptr inbounds [32 x %struct.buffinfo], [32 x %struct.buffinfo]* %20, i64 0, i64 0, !dbg !2405
  %300 = load i8*, i8** %15, align 8, !dbg !2406
  %301 = load i8**, i8*** %5, align 8, !dbg !2407
  %302 = load i32, i32* %4, align 4, !dbg !2408
  %303 = sub nsw i32 %302, 1, !dbg !2409
  %304 = sext i32 %303 to i64, !dbg !2407
  %305 = getelementptr inbounds i8*, i8** %301, i64 %304, !dbg !2407
  %306 = load i8*, i8** %305, align 8, !dbg !2407
  %307 = load i32, i32* %31, align 4, !dbg !2410
  %308 = call i32 @writeSelections(%struct.tiff* %298, %struct.tiff** %13, %struct.crop_mask* %17, %struct.image_data* %16, %struct.dump_opts* %21, %struct.buffinfo* %299, i8* %300, i8* %306, i32* %30, i32 %307), !dbg !2411
  br label %337, !dbg !2412

309:                                              ; preds = %292
  %310 = load i8*, i8** %15, align 8, !dbg !2413
  %311 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 9, !dbg !2416
  %312 = load i16, i16* %311, align 2, !dbg !2416
  %313 = zext i16 %312 to i32, !dbg !2417
  %314 = load i8**, i8*** %5, align 8, !dbg !2418
  %315 = load i32, i32* %4, align 4, !dbg !2419
  %316 = sub nsw i32 %315, 1, !dbg !2420
  %317 = sext i32 %316 to i64, !dbg !2418
  %318 = getelementptr inbounds i8*, i8** %314, i64 %317, !dbg !2418
  %319 = load i8*, i8** %318, align 8, !dbg !2418
  %320 = call i32 @update_output_file(%struct.tiff** %13, i8* %310, i32 %313, i8* %319, i32* %30), !dbg !2421
  %321 = icmp ne i32 %320, 0, !dbg !2421
  br i1 %321, label %322, label %323, !dbg !2422

322:                                              ; preds = %309
  call void @exit(i32 1) #9, !dbg !2423
  unreachable, !dbg !2423

323:                                              ; preds = %309
  %324 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2424
  %325 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2426
  %326 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 5, !dbg !2427
  %327 = load i32, i32* %326, align 8, !dbg !2427
  %328 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 6, !dbg !2428
  %329 = load i32, i32* %328, align 4, !dbg !2428
  %330 = load i8*, i8** %23, align 8, !dbg !2429
  %331 = load i32, i32* %30, align 4, !dbg !2430
  %332 = load i32, i32* %31, align 4, !dbg !2431
  %333 = call i32 @writeCroppedImage(%struct.tiff* %324, %struct.tiff* %325, %struct.image_data* %16, %struct.dump_opts* %21, i32 %327, i32 %329, i8* %330, i32 %331, i32 %332), !dbg !2432
  %334 = icmp ne i32 %333, 0, !dbg !2432
  br i1 %334, label %335, label %336, !dbg !2433

335:                                              ; preds = %323
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)), !dbg !2434
  call void @exit(i32 -1) #9, !dbg !2436
  unreachable, !dbg !2436

336:                                              ; preds = %323
  br label %337

337:                                              ; preds = %336, %297
  br label %373, !dbg !2437

338:                                              ; preds = %288
  %339 = load i8*, i8** %23, align 8, !dbg !2438
  %340 = icmp ne i8* %339, null, !dbg !2441
  br i1 %340, label %341, label %343, !dbg !2442

341:                                              ; preds = %338
  %342 = load i8*, i8** %23, align 8, !dbg !2443
  store i8* %342, i8** %25, align 8, !dbg !2444
  br label %345, !dbg !2445

343:                                              ; preds = %338
  %344 = load i8*, i8** %22, align 8, !dbg !2446
  store i8* %344, i8** %25, align 8, !dbg !2447
  br label %345

345:                                              ; preds = %343, %341
  %346 = getelementptr inbounds [32 x %struct.pageseg], [32 x %struct.pageseg]* %19, i64 0, i64 0, !dbg !2448
  %347 = call i32 @computeOutputPixelOffsets(%struct.crop_mask* %17, %struct.image_data* %16, %struct.pagedef* %18, %struct.pageseg* %346, %struct.dump_opts* %21), !dbg !2450
  %348 = icmp ne i32 %347, 0, !dbg !2450
  br i1 %348, label %349, label %350, !dbg !2451

349:                                              ; preds = %345
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i64 0, i64 0)), !dbg !2452
  call void @exit(i32 -1) #9, !dbg !2454
  unreachable, !dbg !2454

350:                                              ; preds = %345
  %351 = load i8*, i8** %15, align 8, !dbg !2455
  %352 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 9, !dbg !2457
  %353 = load i16, i16* %352, align 2, !dbg !2457
  %354 = zext i16 %353 to i32, !dbg !2458
  %355 = load i8**, i8*** %5, align 8, !dbg !2459
  %356 = load i32, i32* %4, align 4, !dbg !2460
  %357 = sub nsw i32 %356, 1, !dbg !2461
  %358 = sext i32 %357 to i64, !dbg !2459
  %359 = getelementptr inbounds i8*, i8** %355, i64 %358, !dbg !2459
  %360 = load i8*, i8** %359, align 8, !dbg !2459
  %361 = call i32 @update_output_file(%struct.tiff** %13, i8* %351, i32 %354, i8* %360, i32* %30), !dbg !2462
  %362 = icmp ne i32 %361, 0, !dbg !2462
  br i1 %362, label %363, label %364, !dbg !2463

363:                                              ; preds = %350
  call void @exit(i32 1) #9, !dbg !2464
  unreachable, !dbg !2464

364:                                              ; preds = %350
  %365 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2465
  %366 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2467
  %367 = getelementptr inbounds [32 x %struct.pageseg], [32 x %struct.pageseg]* %19, i64 0, i64 0, !dbg !2468
  %368 = load i8*, i8** %25, align 8, !dbg !2469
  %369 = call i32 @writeImageSections(%struct.tiff* %365, %struct.tiff* %366, %struct.image_data* %16, %struct.pagedef* %18, %struct.pageseg* %367, %struct.dump_opts* %21, i8* %368, i8** %24), !dbg !2470
  %370 = icmp ne i32 %369, 0, !dbg !2470
  br i1 %370, label %371, label %372, !dbg !2471

371:                                              ; preds = %364
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.90, i64 0, i64 0)), !dbg !2472
  call void @exit(i32 -1) #9, !dbg !2474
  unreachable, !dbg !2474

372:                                              ; preds = %364
  br label %373

373:                                              ; preds = %372, %337
  %374 = load i32, i32* %27, align 4, !dbg !2475
  %375 = icmp eq i32 %374, 0, !dbg !2477
  br i1 %375, label %376, label %379, !dbg !2478

376:                                              ; preds = %373
  %377 = load i32, i32* %11, align 4, !dbg !2479
  %378 = add i32 %377, 1, !dbg !2479
  store i32 %378, i32* %11, align 4, !dbg !2479
  br label %389, !dbg !2480

379:                                              ; preds = %373
  %380 = load i32, i32* %29, align 4, !dbg !2481
  %381 = zext i32 %380 to i64, !dbg !2483
  %382 = getelementptr inbounds [2049 x i32], [2049 x i32]* %26, i64 0, i64 %381, !dbg !2483
  %383 = load i32, i32* %382, align 4, !dbg !2483
  %384 = sub i32 %383, 1, !dbg !2484
  %385 = trunc i32 %384 to i16, !dbg !2485
  %386 = zext i16 %385 to i32, !dbg !2485
  store i32 %386, i32* %11, align 4, !dbg !2486
  %387 = load i32, i32* %29, align 4, !dbg !2487
  %388 = add i32 %387, 1, !dbg !2487
  store i32 %388, i32* %29, align 4, !dbg !2487
  br label %389

389:                                              ; preds = %379, %376
  %390 = load i32, i32* %11, align 4, !dbg !2488
  %391 = icmp eq i32 %390, 2047, !dbg !2490
  br i1 %391, label %392, label %397, !dbg !2491

392:                                              ; preds = %389
  %393 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2492
  %394 = call zeroext i16 @TIFFNumberOfDirectories(%struct.tiff* %393), !dbg !2493
  %395 = zext i16 %394 to i32, !dbg !2493
  %396 = sub nsw i32 %395, 1, !dbg !2494
  store i32 %396, i32* %11, align 4, !dbg !2495
  br label %397, !dbg !2496

397:                                              ; preds = %392, %389
  %398 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2497
  %399 = load i32, i32* %11, align 4, !dbg !2499
  %400 = trunc i32 %399 to i16, !dbg !2500
  %401 = call i32 @TIFFSetDirectory(%struct.tiff* %398, i16 zeroext %400), !dbg !2501
  %402 = icmp ne i32 %401, 0, !dbg !2501
  br i1 %402, label %404, label %403, !dbg !2502

403:                                              ; preds = %397
  store i32 1, i32* %33, align 4, !dbg !2503
  br label %404, !dbg !2504

404:                                              ; preds = %403, %397
  br label %141, !dbg !2225, !llvm.loop !2505

405:                                              ; preds = %141
  %406 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !2507
  call void @TIFFClose(%struct.tiff* %406), !dbg !2508
  %407 = load i32, i32* @optind, align 4, !dbg !2509
  %408 = add nsw i32 %407, 1, !dbg !2509
  store i32 %408, i32* @optind, align 4, !dbg !2509
  br label %61, !dbg !2130, !llvm.loop !2510

409:                                              ; preds = %61
  %410 = load i8*, i8** %22, align 8, !dbg !2512
  %411 = icmp ne i8* %410, null, !dbg !2512
  br i1 %411, label %412, label %414, !dbg !2514

412:                                              ; preds = %409
  %413 = load i8*, i8** %22, align 8, !dbg !2515
  call void @_TIFFfree(i8* %413), !dbg !2516
  br label %414, !dbg !2516

414:                                              ; preds = %412, %409
  %415 = load i8*, i8** %23, align 8, !dbg !2517
  %416 = icmp ne i8* %415, null, !dbg !2517
  br i1 %416, label %417, label %419, !dbg !2519

417:                                              ; preds = %414
  %418 = load i8*, i8** %23, align 8, !dbg !2520
  call void @_TIFFfree(i8* %418), !dbg !2521
  br label %419, !dbg !2521

419:                                              ; preds = %417, %414
  %420 = load i8*, i8** %24, align 8, !dbg !2522
  %421 = icmp ne i8* %420, null, !dbg !2522
  br i1 %421, label %422, label %424, !dbg !2524

422:                                              ; preds = %419
  %423 = load i8*, i8** %24, align 8, !dbg !2525
  call void @_TIFFfree(i8* %423), !dbg !2526
  br label %424, !dbg !2526

424:                                              ; preds = %422, %419
  store i32 0, i32* %34, align 4, !dbg !2527
  br label %425, !dbg !2529

425:                                              ; preds = %437, %424
  %426 = load i32, i32* %34, align 4, !dbg !2530
  %427 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %17, i32 0, i32 17, !dbg !2532
  %428 = load i16, i16* %427, align 2, !dbg !2532
  %429 = zext i16 %428 to i32, !dbg !2533
  %430 = icmp slt i32 %426, %429, !dbg !2534
  br i1 %430, label %431, label %440, !dbg !2535

431:                                              ; preds = %425
  %432 = load i32, i32* %34, align 4, !dbg !2536
  %433 = sext i32 %432 to i64, !dbg !2537
  %434 = getelementptr inbounds [32 x %struct.buffinfo], [32 x %struct.buffinfo]* %20, i64 0, i64 %433, !dbg !2537
  %435 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %434, i32 0, i32 1, !dbg !2538
  %436 = load i8*, i8** %435, align 8, !dbg !2538
  call void @_TIFFfree(i8* %436), !dbg !2539
  br label %437, !dbg !2539

437:                                              ; preds = %431
  %438 = load i32, i32* %34, align 4, !dbg !2540
  %439 = add nsw i32 %438, 1, !dbg !2540
  store i32 %439, i32* %34, align 4, !dbg !2540
  br label %425, !dbg !2541, !llvm.loop !2542

440:                                              ; preds = %425
  %441 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2544
  %442 = load i32, i32* %441, align 4, !dbg !2544
  %443 = icmp ne i32 %442, 0, !dbg !2546
  br i1 %443, label %444, label %467, !dbg !2547

444:                                              ; preds = %440
  %445 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 6, !dbg !2548
  %446 = load %struct._IO_FILE*, %struct._IO_FILE** %445, align 8, !dbg !2548
  %447 = icmp ne %struct._IO_FILE* %446, null, !dbg !2551
  br i1 %447, label %448, label %452, !dbg !2552

448:                                              ; preds = %444
  %449 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 6, !dbg !2553
  %450 = load %struct._IO_FILE*, %struct._IO_FILE** %449, align 8, !dbg !2553
  %451 = call i32 @fclose(%struct._IO_FILE* %450), !dbg !2554
  br label %452, !dbg !2554

452:                                              ; preds = %448, %444
  %453 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2555
  %454 = load %struct._IO_FILE*, %struct._IO_FILE** %453, align 8, !dbg !2555
  %455 = icmp ne %struct._IO_FILE* %454, null, !dbg !2557
  br i1 %455, label %456, label %466, !dbg !2558

456:                                              ; preds = %452
  %457 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2559
  %458 = load %struct._IO_FILE*, %struct._IO_FILE** %457, align 8, !dbg !2559
  %459 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 1, !dbg !2561
  %460 = load i32, i32* %459, align 4, !dbg !2561
  %461 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2562
  %462 = call i8* @TIFFFileName(%struct.tiff* %461), !dbg !2563
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %458, i32 %460, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i64 0, i64 0), i8* %462), !dbg !2564
  %463 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2565
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** %463, align 8, !dbg !2565
  %465 = call i32 @fclose(%struct._IO_FILE* %464), !dbg !2566
  br label %466, !dbg !2567

466:                                              ; preds = %456, %452
  br label %467, !dbg !2568

467:                                              ; preds = %466, %440
  %468 = load %struct.tiff*, %struct.tiff** %13, align 8, !dbg !2569
  call void @TIFFClose(%struct.tiff* %468), !dbg !2570
  store i32 0, i32* %3, align 4, !dbg !2571
  br label %469, !dbg !2571

469:                                              ; preds = %467, %139, %121, %75
  %470 = load i32, i32* %3, align 4, !dbg !2572
  ret i32 %470, !dbg !2572
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initImageData(%struct.image_data*) #0 !dbg !2573 {
  %2 = alloca %struct.image_data*, align 8
  store %struct.image_data* %0, %struct.image_data** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %2, metadata !2576, metadata !DIExpression()), !dbg !2577
  %3 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2578
  %4 = getelementptr inbounds %struct.image_data, %struct.image_data* %3, i32 0, i32 0, !dbg !2579
  store float 0.000000e+00, float* %4, align 4, !dbg !2580
  %5 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2581
  %6 = getelementptr inbounds %struct.image_data, %struct.image_data* %5, i32 0, i32 1, !dbg !2582
  store float 0.000000e+00, float* %6, align 4, !dbg !2583
  %7 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2584
  %8 = getelementptr inbounds %struct.image_data, %struct.image_data* %7, i32 0, i32 2, !dbg !2585
  store i32 0, i32* %8, align 4, !dbg !2586
  %9 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2587
  %10 = getelementptr inbounds %struct.image_data, %struct.image_data* %9, i32 0, i32 3, !dbg !2588
  store i32 0, i32* %10, align 4, !dbg !2589
  %11 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2590
  %12 = getelementptr inbounds %struct.image_data, %struct.image_data* %11, i32 0, i32 4, !dbg !2591
  store i16 1, i16* %12, align 4, !dbg !2592
  %13 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2593
  %14 = getelementptr inbounds %struct.image_data, %struct.image_data* %13, i32 0, i32 5, !dbg !2594
  store i16 0, i16* %14, align 2, !dbg !2595
  %15 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2596
  %16 = getelementptr inbounds %struct.image_data, %struct.image_data* %15, i32 0, i32 6, !dbg !2597
  store i16 0, i16* %16, align 4, !dbg !2598
  %17 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2599
  %18 = getelementptr inbounds %struct.image_data, %struct.image_data* %17, i32 0, i32 7, !dbg !2600
  store i16 0, i16* %18, align 2, !dbg !2601
  %19 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2602
  %20 = getelementptr inbounds %struct.image_data, %struct.image_data* %19, i32 0, i32 8, !dbg !2603
  store i16 0, i16* %20, align 4, !dbg !2604
  %21 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2605
  %22 = getelementptr inbounds %struct.image_data, %struct.image_data* %21, i32 0, i32 9, !dbg !2606
  store i16 0, i16* %22, align 2, !dbg !2607
  %23 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2608
  %24 = getelementptr inbounds %struct.image_data, %struct.image_data* %23, i32 0, i32 10, !dbg !2609
  store i16 1, i16* %24, align 4, !dbg !2610
  %25 = load %struct.image_data*, %struct.image_data** %2, align 8, !dbg !2611
  %26 = getelementptr inbounds %struct.image_data, %struct.image_data* %25, i32 0, i32 11, !dbg !2612
  store i16 0, i16* %26, align 2, !dbg !2613
  ret void, !dbg !2614
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initCropMasks(%struct.crop_mask*) #0 !dbg !2615 {
  %2 = alloca %struct.crop_mask*, align 8
  %3 = alloca i32, align 4
  store %struct.crop_mask* %0, %struct.crop_mask** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %2, metadata !2618, metadata !DIExpression()), !dbg !2619
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2620, metadata !DIExpression()), !dbg !2621
  %4 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2622
  %5 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %4, i32 0, i32 10, !dbg !2623
  store i16 0, i16* %5, align 8, !dbg !2624
  %6 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2625
  %7 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %6, i32 0, i32 11, !dbg !2626
  store i16 1, i16* %7, align 2, !dbg !2627
  %8 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2628
  %9 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %8, i32 0, i32 12, !dbg !2629
  store i16 1, i16* %9, align 4, !dbg !2630
  %10 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2631
  %11 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %10, i32 0, i32 0, !dbg !2632
  store double 0.000000e+00, double* %11, align 8, !dbg !2633
  %12 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2634
  %13 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %12, i32 0, i32 1, !dbg !2635
  store double 0.000000e+00, double* %13, align 8, !dbg !2636
  store i32 0, i32* %3, align 4, !dbg !2637
  br label %14, !dbg !2639

14:                                               ; preds = %23, %1
  %15 = load i32, i32* %3, align 4, !dbg !2640
  %16 = icmp slt i32 %15, 4, !dbg !2642
  br i1 %16, label %17, label %26, !dbg !2643

17:                                               ; preds = %14
  %18 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2644
  %19 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %18, i32 0, i32 2, !dbg !2645
  %20 = load i32, i32* %3, align 4, !dbg !2646
  %21 = sext i32 %20 to i64, !dbg !2644
  %22 = getelementptr inbounds [4 x double], [4 x double]* %19, i64 0, i64 %21, !dbg !2644
  store double 0.000000e+00, double* %22, align 8, !dbg !2647
  br label %23, !dbg !2644

23:                                               ; preds = %17
  %24 = load i32, i32* %3, align 4, !dbg !2648
  %25 = add nsw i32 %24, 1, !dbg !2648
  store i32 %25, i32* %3, align 4, !dbg !2648
  br label %14, !dbg !2649, !llvm.loop !2650

26:                                               ; preds = %14
  %27 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2652
  %28 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %27, i32 0, i32 7, !dbg !2653
  store i32 0, i32* %28, align 8, !dbg !2654
  %29 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2655
  %30 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %29, i32 0, i32 5, !dbg !2656
  store i32 0, i32* %30, align 8, !dbg !2657
  %31 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2658
  %32 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %31, i32 0, i32 6, !dbg !2659
  store i32 0, i32* %32, align 4, !dbg !2660
  %33 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2661
  %34 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %33, i32 0, i32 13, !dbg !2662
  store i16 0, i16* %34, align 2, !dbg !2663
  %35 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2664
  %36 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %35, i32 0, i32 16, !dbg !2665
  store i16 11, i16* %36, align 4, !dbg !2666
  %37 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2667
  %38 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %37, i32 0, i32 14, !dbg !2668
  store i16 0, i16* %38, align 8, !dbg !2669
  %39 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2670
  %40 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %39, i32 0, i32 15, !dbg !2671
  store i16 0, i16* %40, align 2, !dbg !2672
  %41 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2673
  %42 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %41, i32 0, i32 20, !dbg !2674
  store i16 0, i16* %42, align 8, !dbg !2675
  %43 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2676
  %44 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %43, i32 0, i32 18, !dbg !2677
  store i16 0, i16* %44, align 8, !dbg !2678
  store i32 0, i32* %3, align 4, !dbg !2679
  br label %45, !dbg !2681

45:                                               ; preds = %133, %26
  %46 = load i32, i32* %3, align 4, !dbg !2682
  %47 = icmp slt i32 %46, 8, !dbg !2684
  br i1 %47, label %48, label %136, !dbg !2685

48:                                               ; preds = %45
  %49 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2686
  %50 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %49, i32 0, i32 22, !dbg !2688
  %51 = load i32, i32* %3, align 4, !dbg !2689
  %52 = sext i32 %51 to i64, !dbg !2686
  %53 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %50, i64 0, i64 %52, !dbg !2686
  %54 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %53, i32 0, i32 0, !dbg !2690
  store double 0.000000e+00, double* %54, align 8, !dbg !2691
  %55 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2692
  %56 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %55, i32 0, i32 22, !dbg !2693
  %57 = load i32, i32* %3, align 4, !dbg !2694
  %58 = sext i32 %57 to i64, !dbg !2692
  %59 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %56, i64 0, i64 %58, !dbg !2692
  %60 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %59, i32 0, i32 1, !dbg !2695
  store double 0.000000e+00, double* %60, align 8, !dbg !2696
  %61 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2697
  %62 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %61, i32 0, i32 22, !dbg !2698
  %63 = load i32, i32* %3, align 4, !dbg !2699
  %64 = sext i32 %63 to i64, !dbg !2697
  %65 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %62, i64 0, i64 %64, !dbg !2697
  %66 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %65, i32 0, i32 2, !dbg !2700
  store double 0.000000e+00, double* %66, align 8, !dbg !2701
  %67 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2702
  %68 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %67, i32 0, i32 22, !dbg !2703
  %69 = load i32, i32* %3, align 4, !dbg !2704
  %70 = sext i32 %69 to i64, !dbg !2702
  %71 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %68, i64 0, i64 %70, !dbg !2702
  %72 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %71, i32 0, i32 3, !dbg !2705
  store double 0.000000e+00, double* %72, align 8, !dbg !2706
  %73 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2707
  %74 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %73, i32 0, i32 19, !dbg !2708
  %75 = load i32, i32* %3, align 4, !dbg !2709
  %76 = sext i32 %75 to i64, !dbg !2707
  %77 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %74, i64 0, i64 %76, !dbg !2707
  %78 = getelementptr inbounds %struct.region, %struct.region* %77, i32 0, i32 0, !dbg !2710
  store i32 0, i32* %78, align 8, !dbg !2711
  %79 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2712
  %80 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %79, i32 0, i32 19, !dbg !2713
  %81 = load i32, i32* %3, align 4, !dbg !2714
  %82 = sext i32 %81 to i64, !dbg !2712
  %83 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %80, i64 0, i64 %82, !dbg !2712
  %84 = getelementptr inbounds %struct.region, %struct.region* %83, i32 0, i32 1, !dbg !2715
  store i32 0, i32* %84, align 4, !dbg !2716
  %85 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2717
  %86 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %85, i32 0, i32 19, !dbg !2718
  %87 = load i32, i32* %3, align 4, !dbg !2719
  %88 = sext i32 %87 to i64, !dbg !2717
  %89 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %86, i64 0, i64 %88, !dbg !2717
  %90 = getelementptr inbounds %struct.region, %struct.region* %89, i32 0, i32 2, !dbg !2720
  store i32 0, i32* %90, align 8, !dbg !2721
  %91 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2722
  %92 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %91, i32 0, i32 19, !dbg !2723
  %93 = load i32, i32* %3, align 4, !dbg !2724
  %94 = sext i32 %93 to i64, !dbg !2722
  %95 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %92, i64 0, i64 %94, !dbg !2722
  %96 = getelementptr inbounds %struct.region, %struct.region* %95, i32 0, i32 3, !dbg !2725
  store i32 0, i32* %96, align 4, !dbg !2726
  %97 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2727
  %98 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %97, i32 0, i32 19, !dbg !2728
  %99 = load i32, i32* %3, align 4, !dbg !2729
  %100 = sext i32 %99 to i64, !dbg !2727
  %101 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %98, i64 0, i64 %100, !dbg !2727
  %102 = getelementptr inbounds %struct.region, %struct.region* %101, i32 0, i32 4, !dbg !2730
  store i32 0, i32* %102, align 8, !dbg !2731
  %103 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2732
  %104 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %103, i32 0, i32 19, !dbg !2733
  %105 = load i32, i32* %3, align 4, !dbg !2734
  %106 = sext i32 %105 to i64, !dbg !2732
  %107 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %104, i64 0, i64 %106, !dbg !2732
  %108 = getelementptr inbounds %struct.region, %struct.region* %107, i32 0, i32 5, !dbg !2735
  store i32 0, i32* %108, align 4, !dbg !2736
  %109 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2737
  %110 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %109, i32 0, i32 19, !dbg !2738
  %111 = load i32, i32* %3, align 4, !dbg !2739
  %112 = sext i32 %111 to i64, !dbg !2737
  %113 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %110, i64 0, i64 %112, !dbg !2737
  %114 = getelementptr inbounds %struct.region, %struct.region* %113, i32 0, i32 6, !dbg !2740
  store i32 0, i32* %114, align 8, !dbg !2741
  %115 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2742
  %116 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %115, i32 0, i32 19, !dbg !2743
  %117 = load i32, i32* %3, align 4, !dbg !2744
  %118 = sext i32 %117 to i64, !dbg !2742
  %119 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %116, i64 0, i64 %118, !dbg !2742
  %120 = getelementptr inbounds %struct.region, %struct.region* %119, i32 0, i32 7, !dbg !2745
  store i8* null, i8** %120, align 8, !dbg !2746
  %121 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2747
  %122 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %121, i32 0, i32 21, !dbg !2748
  %123 = load i32, i32* %3, align 4, !dbg !2749
  %124 = sext i32 %123 to i64, !dbg !2747
  %125 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %122, i64 0, i64 %124, !dbg !2747
  %126 = getelementptr inbounds %struct.zone, %struct.zone* %125, i32 0, i32 0, !dbg !2750
  store i32 0, i32* %126, align 4, !dbg !2751
  %127 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2752
  %128 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %127, i32 0, i32 21, !dbg !2753
  %129 = load i32, i32* %3, align 4, !dbg !2754
  %130 = sext i32 %129 to i64, !dbg !2752
  %131 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %128, i64 0, i64 %130, !dbg !2752
  %132 = getelementptr inbounds %struct.zone, %struct.zone* %131, i32 0, i32 1, !dbg !2755
  store i32 0, i32* %132, align 4, !dbg !2756
  br label %133, !dbg !2757

133:                                              ; preds = %48
  %134 = load i32, i32* %3, align 4, !dbg !2758
  %135 = add nsw i32 %134, 1, !dbg !2758
  store i32 %135, i32* %3, align 4, !dbg !2758
  br label %45, !dbg !2759, !llvm.loop !2760

136:                                              ; preds = %45
  %137 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2762
  %138 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %137, i32 0, i32 9, !dbg !2763
  store i16 0, i16* %138, align 2, !dbg !2764
  %139 = load %struct.crop_mask*, %struct.crop_mask** %2, align 8, !dbg !2765
  %140 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %139, i32 0, i32 8, !dbg !2766
  store i16 0, i16* %140, align 4, !dbg !2767
  ret void, !dbg !2768
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initPageSetup(%struct.pagedef*, %struct.pageseg*, %struct.buffinfo*) #0 !dbg !2769 {
  %4 = alloca %struct.pagedef*, align 8
  %5 = alloca %struct.pageseg*, align 8
  %6 = alloca %struct.buffinfo*, align 8
  %7 = alloca i32, align 4
  store %struct.pagedef* %0, %struct.pagedef** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.pagedef** %4, metadata !2774, metadata !DIExpression()), !dbg !2775
  store %struct.pageseg* %1, %struct.pageseg** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.pageseg** %5, metadata !2776, metadata !DIExpression()), !dbg !2777
  store %struct.buffinfo* %2, %struct.buffinfo** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.buffinfo** %6, metadata !2778, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2780, metadata !DIExpression()), !dbg !2781
  %8 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2782
  %9 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %8, i32 0, i32 0, !dbg !2783
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0, !dbg !2782
  %11 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)) #8, !dbg !2784
  %12 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2785
  %13 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %12, i32 0, i32 7, !dbg !2786
  store i32 0, i32* %13, align 8, !dbg !2787
  %14 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2788
  %15 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %14, i32 0, i32 8, !dbg !2789
  store i16 1, i16* %15, align 4, !dbg !2790
  %16 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2791
  %17 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %16, i32 0, i32 5, !dbg !2792
  store double 0.000000e+00, double* %17, align 8, !dbg !2793
  %18 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2794
  %19 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %18, i32 0, i32 6, !dbg !2795
  store double 0.000000e+00, double* %19, align 8, !dbg !2796
  %20 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2797
  %21 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %20, i32 0, i32 1, !dbg !2798
  store double 0.000000e+00, double* %21, align 8, !dbg !2799
  %22 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2800
  %23 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %22, i32 0, i32 2, !dbg !2801
  store double 0.000000e+00, double* %23, align 8, !dbg !2802
  %24 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2803
  %25 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %24, i32 0, i32 3, !dbg !2804
  store double 0.000000e+00, double* %25, align 8, !dbg !2805
  %26 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2806
  %27 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %26, i32 0, i32 4, !dbg !2807
  store double 0.000000e+00, double* %27, align 8, !dbg !2808
  %28 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2809
  %29 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %28, i32 0, i32 9, !dbg !2810
  store i32 0, i32* %29, align 8, !dbg !2811
  %30 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2812
  %31 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %30, i32 0, i32 10, !dbg !2813
  store i32 0, i32* %31, align 4, !dbg !2814
  %32 = load %struct.pagedef*, %struct.pagedef** %4, align 8, !dbg !2815
  %33 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %32, i32 0, i32 11, !dbg !2816
  store i32 0, i32* %33, align 8, !dbg !2817
  store i32 0, i32* %7, align 4, !dbg !2818
  br label %34, !dbg !2820

34:                                               ; preds = %73, %3
  %35 = load i32, i32* %7, align 4, !dbg !2821
  %36 = icmp slt i32 %35, 32, !dbg !2823
  br i1 %36, label %37, label %76, !dbg !2824

37:                                               ; preds = %34
  %38 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2825
  %39 = load i32, i32* %7, align 4, !dbg !2827
  %40 = sext i32 %39 to i64, !dbg !2825
  %41 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %38, i64 %40, !dbg !2825
  %42 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %41, i32 0, i32 0, !dbg !2828
  store i32 0, i32* %42, align 4, !dbg !2829
  %43 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2830
  %44 = load i32, i32* %7, align 4, !dbg !2831
  %45 = sext i32 %44 to i64, !dbg !2830
  %46 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %43, i64 %45, !dbg !2830
  %47 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %46, i32 0, i32 1, !dbg !2832
  store i32 0, i32* %47, align 4, !dbg !2833
  %48 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2834
  %49 = load i32, i32* %7, align 4, !dbg !2835
  %50 = sext i32 %49 to i64, !dbg !2834
  %51 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %48, i64 %50, !dbg !2834
  %52 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %51, i32 0, i32 2, !dbg !2836
  store i32 0, i32* %52, align 4, !dbg !2837
  %53 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2838
  %54 = load i32, i32* %7, align 4, !dbg !2839
  %55 = sext i32 %54 to i64, !dbg !2838
  %56 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %53, i64 %55, !dbg !2838
  %57 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %56, i32 0, i32 3, !dbg !2840
  store i32 0, i32* %57, align 4, !dbg !2841
  %58 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2842
  %59 = load i32, i32* %7, align 4, !dbg !2843
  %60 = sext i32 %59 to i64, !dbg !2842
  %61 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %58, i64 %60, !dbg !2842
  %62 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %61, i32 0, i32 6, !dbg !2844
  store i32 0, i32* %62, align 4, !dbg !2845
  %63 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2846
  %64 = load i32, i32* %7, align 4, !dbg !2847
  %65 = sext i32 %64 to i64, !dbg !2846
  %66 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %63, i64 %65, !dbg !2846
  %67 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %66, i32 0, i32 4, !dbg !2848
  store i32 0, i32* %67, align 4, !dbg !2849
  %68 = load %struct.pageseg*, %struct.pageseg** %5, align 8, !dbg !2850
  %69 = load i32, i32* %7, align 4, !dbg !2851
  %70 = sext i32 %69 to i64, !dbg !2850
  %71 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %68, i64 %70, !dbg !2850
  %72 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %71, i32 0, i32 5, !dbg !2852
  store i32 0, i32* %72, align 4, !dbg !2853
  br label %73, !dbg !2854

73:                                               ; preds = %37
  %74 = load i32, i32* %7, align 4, !dbg !2855
  %75 = add nsw i32 %74, 1, !dbg !2855
  store i32 %75, i32* %7, align 4, !dbg !2855
  br label %34, !dbg !2856, !llvm.loop !2857

76:                                               ; preds = %34
  store i32 0, i32* %7, align 4, !dbg !2859
  br label %77, !dbg !2861

77:                                               ; preds = %91, %76
  %78 = load i32, i32* %7, align 4, !dbg !2862
  %79 = icmp slt i32 %78, 8, !dbg !2864
  br i1 %79, label %80, label %94, !dbg !2865

80:                                               ; preds = %77
  %81 = load %struct.buffinfo*, %struct.buffinfo** %6, align 8, !dbg !2866
  %82 = load i32, i32* %7, align 4, !dbg !2868
  %83 = sext i32 %82 to i64, !dbg !2866
  %84 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %81, i64 %83, !dbg !2866
  %85 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %84, i32 0, i32 0, !dbg !2869
  store i32 0, i32* %85, align 8, !dbg !2870
  %86 = load %struct.buffinfo*, %struct.buffinfo** %6, align 8, !dbg !2871
  %87 = load i32, i32* %7, align 4, !dbg !2872
  %88 = sext i32 %87 to i64, !dbg !2871
  %89 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %86, i64 %88, !dbg !2871
  %90 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %89, i32 0, i32 1, !dbg !2873
  store i8* null, i8** %90, align 8, !dbg !2874
  br label %91, !dbg !2875

91:                                               ; preds = %80
  %92 = load i32, i32* %7, align 4, !dbg !2876
  %93 = add nsw i32 %92, 1, !dbg !2876
  store i32 %93, i32* %7, align 4, !dbg !2876
  br label %77, !dbg !2877, !llvm.loop !2878

94:                                               ; preds = %77
  ret void, !dbg !2880
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initDumpOptions(%struct.dump_opts*) #0 !dbg !2881 {
  %2 = alloca %struct.dump_opts*, align 8
  store %struct.dump_opts* %0, %struct.dump_opts** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %2, metadata !2884, metadata !DIExpression()), !dbg !2885
  %3 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2886
  %4 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %3, i32 0, i32 0, !dbg !2887
  store i32 0, i32* %4, align 8, !dbg !2888
  %5 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2889
  %6 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %5, i32 0, i32 1, !dbg !2890
  store i32 0, i32* %6, align 4, !dbg !2891
  %7 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2892
  %8 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %7, i32 0, i32 2, !dbg !2893
  store i32 1, i32* %8, align 8, !dbg !2894
  %9 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2895
  %10 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %9, i32 0, i32 3, !dbg !2896
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0, !dbg !2895
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8, !dbg !2897
  %13 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2898
  %14 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %13, i32 0, i32 4, !dbg !2899
  %15 = getelementptr inbounds [4097 x i8], [4097 x i8]* %14, i64 0, i64 0, !dbg !2900
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 4097, i1 false), !dbg !2900
  %16 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2901
  %17 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %16, i32 0, i32 5, !dbg !2902
  %18 = getelementptr inbounds [4097 x i8], [4097 x i8]* %17, i64 0, i64 0, !dbg !2903
  call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 4097, i1 false), !dbg !2903
  %19 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2904
  %20 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %19, i32 0, i32 6, !dbg !2905
  store %struct._IO_FILE* null, %struct._IO_FILE** %20, align 8, !dbg !2906
  %21 = load %struct.dump_opts*, %struct.dump_opts** %2, align 8, !dbg !2907
  %22 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %21, i32 0, i32 7, !dbg !2908
  store %struct._IO_FILE* null, %struct._IO_FILE** %22, align 8, !dbg !2909
  ret void, !dbg !2910
}

declare %struct.tiff* @TIFFOpen(i8*, i8*) #3

declare zeroext i16 @TIFFNumberOfDirectories(%struct.tiff*) #3

declare i8* @TIFFFileName(%struct.tiff*) #3

declare void @TIFFClose(%struct.tiff*) #3

declare i32 @TIFFSetDirectory(%struct.tiff*, i16 zeroext) #3

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dump_info(%struct._IO_FILE*, i32, i8*, i8*, ...) #0 !dbg !2911 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !2914, metadata !DIExpression()), !dbg !2915
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2916, metadata !DIExpression()), !dbg !2917
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2918, metadata !DIExpression()), !dbg !2919
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2920, metadata !DIExpression()), !dbg !2921
  %10 = load i32, i32* %6, align 4, !dbg !2922
  %11 = icmp eq i32 %10, 1, !dbg !2924
  br i1 %11, label %12, label %24, !dbg !2925

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !2926, metadata !DIExpression()), !dbg !2933
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !2934
  %14 = bitcast %struct.__va_list_tag* %13 to i8*, !dbg !2934
  call void @llvm.va_start(i8* %14), !dbg !2934
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2935
  %16 = load i8*, i8** %7, align 8, !dbg !2936
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.220, i64 0, i64 0), i8* %16), !dbg !2937
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2938
  %19 = load i8*, i8** %8, align 8, !dbg !2939
  %20 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !2940
  %21 = call i32 @vfprintf(%struct._IO_FILE* %18, i8* %19, %struct.__va_list_tag* %20), !dbg !2941
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !2942
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i64 0, i64 0)), !dbg !2943
  br label %24, !dbg !2944

24:                                               ; preds = %12, %4
  ret void, !dbg !2945
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @loadImage(%struct.tiff*, %struct.image_data*, %struct.dump_opts*, i8**) #0 !dbg !539 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.tiff*, align 8
  %7 = alloca %struct.image_data*, align 8
  %8 = alloca %struct.dump_opts*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca i16, align 2
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i32, align 4
  store %struct.tiff* %0, %struct.tiff** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %6, metadata !2946, metadata !DIExpression()), !dbg !2947
  store %struct.image_data* %1, %struct.image_data** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %7, metadata !2948, metadata !DIExpression()), !dbg !2949
  store %struct.dump_opts* %2, %struct.dump_opts** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %8, metadata !2950, metadata !DIExpression()), !dbg !2951
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !2952, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2954, metadata !DIExpression()), !dbg !2955
  call void @llvm.dbg.declare(metadata float* %11, metadata !2956, metadata !DIExpression()), !dbg !2957
  store float 0.000000e+00, float* %11, align 4, !dbg !2957
  call void @llvm.dbg.declare(metadata float* %12, metadata !2958, metadata !DIExpression()), !dbg !2959
  store float 0.000000e+00, float* %12, align 4, !dbg !2959
  call void @llvm.dbg.declare(metadata i16* %13, metadata !2960, metadata !DIExpression()), !dbg !2961
  store i16 0, i16* %13, align 2, !dbg !2961
  call void @llvm.dbg.declare(metadata i16* %14, metadata !2962, metadata !DIExpression()), !dbg !2963
  store i16 0, i16* %14, align 2, !dbg !2963
  call void @llvm.dbg.declare(metadata i16* %15, metadata !2964, metadata !DIExpression()), !dbg !2965
  store i16 0, i16* %15, align 2, !dbg !2965
  call void @llvm.dbg.declare(metadata i16* %16, metadata !2966, metadata !DIExpression()), !dbg !2967
  store i16 0, i16* %16, align 2, !dbg !2967
  call void @llvm.dbg.declare(metadata i16* %17, metadata !2968, metadata !DIExpression()), !dbg !2969
  store i16 0, i16* %17, align 2, !dbg !2969
  call void @llvm.dbg.declare(metadata i16* %18, metadata !2970, metadata !DIExpression()), !dbg !2971
  store i16 0, i16* %18, align 2, !dbg !2971
  call void @llvm.dbg.declare(metadata i16* %19, metadata !2972, metadata !DIExpression()), !dbg !2973
  store i16 0, i16* %19, align 2, !dbg !2973
  call void @llvm.dbg.declare(metadata i16* %20, metadata !2974, metadata !DIExpression()), !dbg !2975
  store i16 0, i16* %20, align 2, !dbg !2975
  call void @llvm.dbg.declare(metadata i16* %21, metadata !2976, metadata !DIExpression()), !dbg !2977
  store i16 0, i16* %21, align 2, !dbg !2977
  call void @llvm.dbg.declare(metadata i16* %22, metadata !2978, metadata !DIExpression()), !dbg !2979
  call void @llvm.dbg.declare(metadata i16* %23, metadata !2980, metadata !DIExpression()), !dbg !2981
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2982, metadata !DIExpression()), !dbg !2983
  store i32 0, i32* %24, align 4, !dbg !2983
  call void @llvm.dbg.declare(metadata i32* %25, metadata !2984, metadata !DIExpression()), !dbg !2985
  store i32 0, i32* %25, align 4, !dbg !2985
  call void @llvm.dbg.declare(metadata i32* %26, metadata !2986, metadata !DIExpression()), !dbg !2987
  store i32 0, i32* %26, align 4, !dbg !2987
  call void @llvm.dbg.declare(metadata i32* %27, metadata !2988, metadata !DIExpression()), !dbg !2989
  store i32 0, i32* %27, align 4, !dbg !2989
  call void @llvm.dbg.declare(metadata i32* %28, metadata !2990, metadata !DIExpression()), !dbg !2991
  store i32 0, i32* %28, align 4, !dbg !2991
  call void @llvm.dbg.declare(metadata i32* %29, metadata !2992, metadata !DIExpression()), !dbg !2993
  store i32 0, i32* %29, align 4, !dbg !2993
  call void @llvm.dbg.declare(metadata i32* %30, metadata !2994, metadata !DIExpression()), !dbg !2995
  store i32 0, i32* %30, align 4, !dbg !2995
  call void @llvm.dbg.declare(metadata i32* %31, metadata !2996, metadata !DIExpression()), !dbg !2997
  store i32 0, i32* %31, align 4, !dbg !2997
  call void @llvm.dbg.declare(metadata i32* %32, metadata !2998, metadata !DIExpression()), !dbg !2999
  store i32 0, i32* %32, align 4, !dbg !2999
  call void @llvm.dbg.declare(metadata i8** %33, metadata !3000, metadata !DIExpression()), !dbg !3001
  store i8* null, i8** %33, align 8, !dbg !3001
  call void @llvm.dbg.declare(metadata i8** %34, metadata !3002, metadata !DIExpression()), !dbg !3003
  store i8* null, i8** %34, align 8, !dbg !3003
  call void @llvm.dbg.declare(metadata i32* %35, metadata !3004, metadata !DIExpression()), !dbg !3005
  store i32 0, i32* %35, align 4, !dbg !3005
  %36 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3006
  %37 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %36, i32 258, i16* %16), !dbg !3007
  %38 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3008
  %39 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %38, i32 277, i16* %17), !dbg !3009
  %40 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3010
  %41 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %40, i32 284, i16* %15), !dbg !3011
  %42 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3012
  %43 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %42, i32 274, i16* %19), !dbg !3013
  %44 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3014
  %45 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %44, i32 262, i16* %21), !dbg !3016
  %46 = icmp ne i32 %45, 0, !dbg !3016
  br i1 %46, label %48, label %47, !dbg !3017

47:                                               ; preds = %4
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.243, i64 0, i64 0)), !dbg !3018
  br label %48, !dbg !3018

48:                                               ; preds = %47, %4
  %49 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3019
  %50 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %49, i32 256, i32* %24), !dbg !3021
  %51 = icmp ne i32 %50, 0, !dbg !3021
  br i1 %51, label %53, label %52, !dbg !3022

52:                                               ; preds = %48
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.244, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.245, i64 0, i64 0)), !dbg !3023
  br label %53, !dbg !3023

53:                                               ; preds = %52, %48
  %54 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3024
  %55 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %54, i32 257, i32* %25), !dbg !3026
  %56 = icmp ne i32 %55, 0, !dbg !3026
  br i1 %56, label %58, label %57, !dbg !3027

57:                                               ; preds = %53
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.244, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i64 0, i64 0)), !dbg !3028
  br label %58, !dbg !3028

58:                                               ; preds = %57, %53
  %59 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3029
  %60 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %59, i32 282, float* %11), !dbg !3030
  %61 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3031
  %62 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %61, i32 283, float* %12), !dbg !3032
  %63 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3033
  %64 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %63, i32 296, i16* %18), !dbg !3035
  %65 = icmp ne i32 %64, 0, !dbg !3035
  br i1 %65, label %67, label %66, !dbg !3036

66:                                               ; preds = %58
  store i16 2, i16* %18, align 2, !dbg !3037
  br label %67, !dbg !3038

67:                                               ; preds = %66, %58
  %68 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3039
  %69 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %68, i32 259, i16* %20), !dbg !3041
  %70 = icmp ne i32 %69, 0, !dbg !3041
  br i1 %70, label %72, label %71, !dbg !3042

71:                                               ; preds = %67
  store i16 1, i16* %20, align 2, !dbg !3043
  br label %72, !dbg !3044

72:                                               ; preds = %71, %67
  %73 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3045
  %74 = call i64 @TIFFScanlineSize(%struct.tiff* %73), !dbg !3046
  %75 = trunc i64 %74 to i32, !dbg !3046
  store i32 %75, i32* %29, align 4, !dbg !3047
  %76 = load i16, i16* %16, align 2, !dbg !3048
  %77 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3049
  %78 = getelementptr inbounds %struct.image_data, %struct.image_data* %77, i32 0, i32 5, !dbg !3050
  store i16 %76, i16* %78, align 2, !dbg !3051
  %79 = load i16, i16* %17, align 2, !dbg !3052
  %80 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3053
  %81 = getelementptr inbounds %struct.image_data, %struct.image_data* %80, i32 0, i32 6, !dbg !3054
  store i16 %79, i16* %81, align 4, !dbg !3055
  %82 = load i16, i16* %15, align 2, !dbg !3056
  %83 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3057
  %84 = getelementptr inbounds %struct.image_data, %struct.image_data* %83, i32 0, i32 7, !dbg !3058
  store i16 %82, i16* %84, align 2, !dbg !3059
  %85 = load i32, i32* %24, align 4, !dbg !3060
  %86 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3061
  %87 = getelementptr inbounds %struct.image_data, %struct.image_data* %86, i32 0, i32 2, !dbg !3062
  store i32 %85, i32* %87, align 4, !dbg !3063
  %88 = load i32, i32* %25, align 4, !dbg !3064
  %89 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3065
  %90 = getelementptr inbounds %struct.image_data, %struct.image_data* %89, i32 0, i32 3, !dbg !3066
  store i32 %88, i32* %90, align 4, !dbg !3067
  %91 = load float, float* %11, align 4, !dbg !3068
  %92 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3069
  %93 = getelementptr inbounds %struct.image_data, %struct.image_data* %92, i32 0, i32 0, !dbg !3070
  store float %91, float* %93, align 4, !dbg !3071
  %94 = load float, float* %12, align 4, !dbg !3072
  %95 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3073
  %96 = getelementptr inbounds %struct.image_data, %struct.image_data* %95, i32 0, i32 1, !dbg !3074
  store float %94, float* %96, align 4, !dbg !3075
  %97 = load i16, i16* %18, align 2, !dbg !3076
  %98 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3077
  %99 = getelementptr inbounds %struct.image_data, %struct.image_data* %98, i32 0, i32 4, !dbg !3078
  store i16 %97, i16* %99, align 4, !dbg !3079
  %100 = load i16, i16* %20, align 2, !dbg !3080
  %101 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3081
  %102 = getelementptr inbounds %struct.image_data, %struct.image_data* %101, i32 0, i32 10, !dbg !3082
  store i16 %100, i16* %102, align 4, !dbg !3083
  %103 = load i16, i16* %21, align 2, !dbg !3084
  %104 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3085
  %105 = getelementptr inbounds %struct.image_data, %struct.image_data* %104, i32 0, i32 8, !dbg !3086
  store i16 %103, i16* %105, align 4, !dbg !3087
  %106 = load i16, i16* %19, align 2, !dbg !3088
  %107 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3089
  %108 = getelementptr inbounds %struct.image_data, %struct.image_data* %107, i32 0, i32 9, !dbg !3090
  store i16 %106, i16* %108, align 2, !dbg !3091
  %109 = load i16, i16* %19, align 2, !dbg !3092
  %110 = zext i16 %109 to i32, !dbg !3092
  switch i32 %110, label %135 [
    i32 0, label %111
    i32 1, label %111
    i32 2, label %114
    i32 3, label %117
    i32 4, label %120
    i32 5, label %123
    i32 6, label %126
    i32 7, label %129
    i32 8, label %132
  ], !dbg !3093

111:                                              ; preds = %72, %72
  %112 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3094
  %113 = getelementptr inbounds %struct.image_data, %struct.image_data* %112, i32 0, i32 11, !dbg !3096
  store i16 0, i16* %113, align 2, !dbg !3097
  br label %140, !dbg !3098

114:                                              ; preds = %72
  %115 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3099
  %116 = getelementptr inbounds %struct.image_data, %struct.image_data* %115, i32 0, i32 11, !dbg !3100
  store i16 1, i16* %116, align 2, !dbg !3101
  br label %140, !dbg !3102

117:                                              ; preds = %72
  %118 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3103
  %119 = getelementptr inbounds %struct.image_data, %struct.image_data* %118, i32 0, i32 11, !dbg !3104
  store i16 16, i16* %119, align 2, !dbg !3105
  br label %140, !dbg !3106

120:                                              ; preds = %72
  %121 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3107
  %122 = getelementptr inbounds %struct.image_data, %struct.image_data* %121, i32 0, i32 11, !dbg !3108
  store i16 2, i16* %122, align 2, !dbg !3109
  br label %140, !dbg !3110

123:                                              ; preds = %72
  %124 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3111
  %125 = getelementptr inbounds %struct.image_data, %struct.image_data* %124, i32 0, i32 11, !dbg !3112
  store i16 10, i16* %125, align 2, !dbg !3113
  br label %140, !dbg !3114

126:                                              ; preds = %72
  %127 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3115
  %128 = getelementptr inbounds %struct.image_data, %struct.image_data* %127, i32 0, i32 11, !dbg !3116
  store i16 8, i16* %128, align 2, !dbg !3117
  br label %140, !dbg !3118

129:                                              ; preds = %72
  %130 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3119
  %131 = getelementptr inbounds %struct.image_data, %struct.image_data* %130, i32 0, i32 11, !dbg !3120
  store i16 34, i16* %131, align 2, !dbg !3121
  br label %140, !dbg !3122

132:                                              ; preds = %72
  %133 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3123
  %134 = getelementptr inbounds %struct.image_data, %struct.image_data* %133, i32 0, i32 11, !dbg !3124
  store i16 32, i16* %134, align 2, !dbg !3125
  br label %140, !dbg !3126

135:                                              ; preds = %72
  %136 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3127
  %137 = getelementptr inbounds %struct.image_data, %struct.image_data* %136, i32 0, i32 11, !dbg !3128
  store i16 0, i16* %137, align 2, !dbg !3129
  %138 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !3130
  %139 = getelementptr inbounds %struct.image_data, %struct.image_data* %138, i32 0, i32 9, !dbg !3131
  store i16 1, i16* %139, align 2, !dbg !3132
  br label %140, !dbg !3133

140:                                              ; preds = %135, %132, %129, %126, %123, %120, %117, %114, %111
  %141 = load i16, i16* %16, align 2, !dbg !3134
  %142 = zext i16 %141 to i32, !dbg !3134
  %143 = icmp eq i32 %142, 0, !dbg !3136
  br i1 %143, label %148, label %144, !dbg !3137

144:                                              ; preds = %140
  %145 = load i16, i16* %17, align 2, !dbg !3138
  %146 = zext i16 %145 to i32, !dbg !3138
  %147 = icmp eq i32 %146, 0, !dbg !3139
  br i1 %147, label %148, label %153, !dbg !3140

148:                                              ; preds = %144, %140
  %149 = load i16, i16* %17, align 2, !dbg !3141
  %150 = zext i16 %149 to i32, !dbg !3141
  %151 = load i16, i16* %16, align 2, !dbg !3143
  %152 = zext i16 %151 to i32, !dbg !3143
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.247, i64 0, i64 0), i32 %150, i32 %152), !dbg !3144
  store i32 -1, i32* %5, align 4, !dbg !3145
  br label %439, !dbg !3145

153:                                              ; preds = %144
  %154 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3146
  %155 = call i32 @TIFFIsTiled(%struct.tiff* %154), !dbg !3148
  %156 = icmp ne i32 %155, 0, !dbg !3148
  br i1 %156, label %157, label %207, !dbg !3149

157:                                              ; preds = %153
  store i32 2, i32* %35, align 4, !dbg !3150
  %158 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3152
  %159 = call i64 @TIFFTileSize(%struct.tiff* %158), !dbg !3153
  %160 = trunc i64 %159 to i32, !dbg !3153
  store i32 %160, i32* %27, align 4, !dbg !3154
  %161 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3155
  %162 = call i32 @TIFFNumberOfTiles(%struct.tiff* %161), !dbg !3156
  %163 = trunc i32 %162 to i16, !dbg !3156
  store i16 %163, i16* %14, align 2, !dbg !3157
  %164 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3158
  %165 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %164, i32 322, i32* %30), !dbg !3159
  %166 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3160
  %167 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %166, i32 323, i32* %31), !dbg !3161
  %168 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3162
  %169 = call i64 @TIFFTileRowSize(%struct.tiff* %168), !dbg !3163
  %170 = trunc i64 %169 to i32, !dbg !3163
  store i32 %170, i32* %32, align 4, !dbg !3164
  %171 = load i32, i32* %27, align 4, !dbg !3165
  %172 = load i16, i16* %14, align 2, !dbg !3166
  %173 = zext i16 %172 to i32, !dbg !3166
  %174 = mul i32 %171, %173, !dbg !3167
  store i32 %174, i32* %28, align 4, !dbg !3168
  %175 = load i32, i32* %28, align 4, !dbg !3169
  %176 = load i16, i16* %14, align 2, !dbg !3171
  %177 = zext i16 %176 to i32, !dbg !3171
  %178 = load i32, i32* %31, align 4, !dbg !3172
  %179 = mul i32 %177, %178, !dbg !3173
  %180 = load i32, i32* %32, align 4, !dbg !3174
  %181 = mul i32 %179, %180, !dbg !3175
  %182 = icmp ult i32 %175, %181, !dbg !3176
  br i1 %182, label %183, label %190, !dbg !3177

183:                                              ; preds = %157
  %184 = load i16, i16* %14, align 2, !dbg !3178
  %185 = zext i16 %184 to i32, !dbg !3178
  %186 = load i32, i32* %31, align 4, !dbg !3180
  %187 = mul i32 %185, %186, !dbg !3181
  %188 = load i32, i32* %32, align 4, !dbg !3182
  %189 = mul i32 %187, %188, !dbg !3183
  store i32 %189, i32* %28, align 4, !dbg !3184
  br label %190, !dbg !3185

190:                                              ; preds = %183, %157
  %191 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3186
  %192 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %191, i32 0, i32 6, !dbg !3188
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %192, align 8, !dbg !3188
  %194 = icmp ne %struct._IO_FILE* %193, null, !dbg !3189
  br i1 %194, label %195, label %206, !dbg !3190

195:                                              ; preds = %190
  %196 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3191
  %197 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %196, i32 0, i32 6, !dbg !3192
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** %197, align 8, !dbg !3192
  %199 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3193
  %200 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %199, i32 0, i32 1, !dbg !3194
  %201 = load i32, i32* %200, align 4, !dbg !3194
  %202 = load i32, i32* %27, align 4, !dbg !3195
  %203 = load i16, i16* %14, align 2, !dbg !3196
  %204 = zext i16 %203 to i32, !dbg !3196
  %205 = load i32, i32* %32, align 4, !dbg !3197
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %198, i32 %201, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.248, i64 0, i64 0), i32 %202, i32 %204, i32 %205), !dbg !3198
  br label %206, !dbg !3198

206:                                              ; preds = %195, %190
  br label %263, !dbg !3199

207:                                              ; preds = %153
  store i32 1, i32* %35, align 4, !dbg !3200
  %208 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3202
  %209 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %208, i32 278, i32* @rowsperstrip), !dbg !3203
  %210 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3204
  %211 = call i64 @TIFFStripSize(%struct.tiff* %210), !dbg !3205
  %212 = trunc i64 %211 to i32, !dbg !3205
  store i32 %212, i32* %26, align 4, !dbg !3206
  %213 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3207
  %214 = call i32 @TIFFNumberOfStrips(%struct.tiff* %213), !dbg !3208
  %215 = trunc i32 %214 to i16, !dbg !3208
  store i16 %215, i16* %13, align 2, !dbg !3209
  %216 = load i32, i32* %26, align 4, !dbg !3210
  %217 = load i16, i16* %13, align 2, !dbg !3211
  %218 = zext i16 %217 to i32, !dbg !3211
  %219 = mul i32 %216, %218, !dbg !3212
  store i32 %219, i32* %28, align 4, !dbg !3213
  %220 = load i32, i32* %28, align 4, !dbg !3214
  %221 = load i32, i32* %25, align 4, !dbg !3216
  %222 = load i32, i32* %24, align 4, !dbg !3217
  %223 = mul i32 %221, %222, !dbg !3218
  %224 = load i16, i16* %17, align 2, !dbg !3219
  %225 = zext i16 %224 to i32, !dbg !3219
  %226 = mul i32 %223, %225, !dbg !3220
  %227 = load i16, i16* %16, align 2, !dbg !3221
  %228 = zext i16 %227 to i32, !dbg !3221
  %229 = mul i32 %226, %228, !dbg !3222
  %230 = add i32 %229, 7, !dbg !3223
  %231 = udiv i32 %230, 8, !dbg !3224
  %232 = icmp ult i32 %220, %231, !dbg !3225
  br i1 %232, label %233, label %245, !dbg !3226

233:                                              ; preds = %207
  %234 = load i32, i32* %25, align 4, !dbg !3227
  %235 = load i32, i32* %24, align 4, !dbg !3229
  %236 = mul i32 %234, %235, !dbg !3230
  %237 = load i16, i16* %17, align 2, !dbg !3231
  %238 = zext i16 %237 to i32, !dbg !3231
  %239 = mul i32 %236, %238, !dbg !3232
  %240 = load i16, i16* %16, align 2, !dbg !3233
  %241 = zext i16 %240 to i32, !dbg !3233
  %242 = mul i32 %239, %241, !dbg !3234
  %243 = add i32 %242, 7, !dbg !3235
  %244 = udiv i32 %243, 8, !dbg !3236
  store i32 %244, i32* %28, align 4, !dbg !3237
  br label %245, !dbg !3238

245:                                              ; preds = %233, %207
  %246 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3239
  %247 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %246, i32 0, i32 6, !dbg !3241
  %248 = load %struct._IO_FILE*, %struct._IO_FILE** %247, align 8, !dbg !3241
  %249 = icmp ne %struct._IO_FILE* %248, null, !dbg !3242
  br i1 %249, label %250, label %262, !dbg !3243

250:                                              ; preds = %245
  %251 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3244
  %252 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %251, i32 0, i32 6, !dbg !3245
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** %252, align 8, !dbg !3245
  %254 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3246
  %255 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %254, i32 0, i32 1, !dbg !3247
  %256 = load i32, i32* %255, align 4, !dbg !3247
  %257 = load i32, i32* %26, align 4, !dbg !3248
  %258 = load i16, i16* %13, align 2, !dbg !3249
  %259 = zext i16 %258 to i32, !dbg !3249
  %260 = load i32, i32* @rowsperstrip, align 4, !dbg !3250
  %261 = load i32, i32* %29, align 4, !dbg !3251
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %253, i32 %256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.249, i64 0, i64 0), i32 %257, i32 %259, i32 %260, i32 %261), !dbg !3252
  br label %262, !dbg !3252

262:                                              ; preds = %250, %245
  br label %263

263:                                              ; preds = %262, %206
  %264 = load i16, i16* %20, align 2, !dbg !3253
  %265 = zext i16 %264 to i32, !dbg !3253
  %266 = icmp eq i32 %265, 7, !dbg !3255
  br i1 %266, label %267, label %270, !dbg !3256

267:                                              ; preds = %263
  store i32 1, i32* @jpegcolormode, align 4, !dbg !3257
  %268 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3259
  %269 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %268, i32 65538, i32 1), !dbg !3260
  br label %291, !dbg !3261

270:                                              ; preds = %263
  %271 = load i16, i16* %21, align 2, !dbg !3262
  %272 = zext i16 %271 to i32, !dbg !3262
  %273 = icmp eq i32 %272, 6, !dbg !3265
  br i1 %273, label %274, label %290, !dbg !3266

274:                                              ; preds = %270
  %275 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3267
  %276 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %275, i32 530, i16* %22, i16* %23), !dbg !3269
  %277 = load i16, i16* %22, align 2, !dbg !3270
  %278 = zext i16 %277 to i32, !dbg !3270
  %279 = icmp ne i32 %278, 1, !dbg !3272
  br i1 %279, label %284, label %280, !dbg !3273

280:                                              ; preds = %274
  %281 = load i16, i16* %23, align 2, !dbg !3274
  %282 = zext i16 %281 to i32, !dbg !3274
  %283 = icmp ne i32 %282, 1, !dbg !3275
  br i1 %283, label %284, label %289, !dbg !3276

284:                                              ; preds = %280, %274
  %285 = load i16, i16* %22, align 2, !dbg !3277
  %286 = zext i16 %285 to i32, !dbg !3277
  %287 = load i16, i16* %23, align 2, !dbg !3279
  %288 = zext i16 %287 to i32, !dbg !3279
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.250, i64 0, i64 0), i32 %286, i32 %288), !dbg !3280
  store i32 -1, i32* %5, align 4, !dbg !3281
  br label %439, !dbg !3281

289:                                              ; preds = %280
  br label %290, !dbg !3282

290:                                              ; preds = %289, %270
  br label %291

291:                                              ; preds = %290, %267
  %292 = load i8**, i8*** %9, align 8, !dbg !3283
  %293 = load i8*, i8** %292, align 8, !dbg !3284
  store i8* %293, i8** %33, align 8, !dbg !3285
  %294 = load i8*, i8** %33, align 8, !dbg !3286
  %295 = icmp ne i8* %294, null, !dbg !3286
  br i1 %295, label %300, label %296, !dbg !3288

296:                                              ; preds = %291
  %297 = load i32, i32* %28, align 4, !dbg !3289
  %298 = zext i32 %297 to i64, !dbg !3289
  %299 = call i8* @_TIFFmalloc(i64 %298), !dbg !3290
  store i8* %299, i8** %33, align 8, !dbg !3291
  br label %320, !dbg !3292

300:                                              ; preds = %291
  %301 = load i32, i32* @loadImage.prev_readsize, align 4, !dbg !3293
  %302 = load i32, i32* %28, align 4, !dbg !3296
  %303 = icmp ult i32 %301, %302, !dbg !3297
  br i1 %303, label %304, label %319, !dbg !3298

304:                                              ; preds = %300
  %305 = load i8*, i8** %33, align 8, !dbg !3299
  %306 = load i32, i32* %28, align 4, !dbg !3301
  %307 = zext i32 %306 to i64, !dbg !3301
  %308 = call i8* @_TIFFrealloc(i8* %305, i64 %307), !dbg !3302
  store i8* %308, i8** %34, align 8, !dbg !3303
  %309 = load i8*, i8** %34, align 8, !dbg !3304
  %310 = icmp ne i8* %309, null, !dbg !3304
  br i1 %310, label %316, label %311, !dbg !3306

311:                                              ; preds = %304
  %312 = load i8*, i8** %33, align 8, !dbg !3307
  call void @free(i8* %312) #8, !dbg !3309
  %313 = load i32, i32* %28, align 4, !dbg !3310
  %314 = zext i32 %313 to i64, !dbg !3310
  %315 = call i8* @_TIFFmalloc(i64 %314), !dbg !3311
  store i8* %315, i8** %33, align 8, !dbg !3312
  br label %318, !dbg !3313

316:                                              ; preds = %304
  %317 = load i8*, i8** %34, align 8, !dbg !3314
  store i8* %317, i8** %33, align 8, !dbg !3315
  br label %318

318:                                              ; preds = %316, %311
  br label %319, !dbg !3316

319:                                              ; preds = %318, %300
  br label %320

320:                                              ; preds = %319, %296
  %321 = load i8*, i8** %33, align 8, !dbg !3317
  %322 = icmp ne i8* %321, null, !dbg !3317
  br i1 %322, label %324, label %323, !dbg !3319

323:                                              ; preds = %320
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.251, i64 0, i64 0)), !dbg !3320
  store i32 -1, i32* %5, align 4, !dbg !3322
  br label %439, !dbg !3322

324:                                              ; preds = %320
  %325 = load i32, i32* %28, align 4, !dbg !3323
  store i32 %325, i32* @loadImage.prev_readsize, align 4, !dbg !3324
  %326 = load i8*, i8** %33, align 8, !dbg !3325
  %327 = load i8**, i8*** %9, align 8, !dbg !3326
  store i8* %326, i8** %327, align 8, !dbg !3327
  %328 = load i32, i32* %35, align 4, !dbg !3328
  switch i32 %328, label %383 [
    i32 1, label %329
    i32 2, label %352
  ], !dbg !3329

329:                                              ; preds = %324
  %330 = load i16, i16* %15, align 2, !dbg !3330
  %331 = zext i16 %330 to i32, !dbg !3330
  %332 = icmp eq i32 %331, 1, !dbg !3333
  br i1 %332, label %333, label %340, !dbg !3334

333:                                              ; preds = %329
  %334 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3335
  %335 = load i8*, i8** %33, align 8, !dbg !3338
  %336 = call i32 @readContigStripsIntoBuffer(%struct.tiff* %334, i8* %335), !dbg !3339
  %337 = icmp ne i32 %336, 0, !dbg !3339
  br i1 %337, label %339, label %338, !dbg !3340

338:                                              ; preds = %333
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.252, i64 0, i64 0)), !dbg !3341
  store i32 -1, i32* %5, align 4, !dbg !3343
  br label %439, !dbg !3343

339:                                              ; preds = %333
  br label %351, !dbg !3344

340:                                              ; preds = %329
  %341 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3345
  %342 = load i8*, i8** %33, align 8, !dbg !3348
  %343 = load i32, i32* %25, align 4, !dbg !3349
  %344 = load i32, i32* %24, align 4, !dbg !3350
  %345 = load i16, i16* %17, align 2, !dbg !3351
  %346 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3352
  %347 = call i32 @readSeparateStripsIntoBuffer(%struct.tiff* %341, i8* %342, i32 %343, i32 %344, i16 zeroext %345, %struct.dump_opts* %346), !dbg !3353
  %348 = icmp ne i32 %347, 0, !dbg !3353
  br i1 %348, label %350, label %349, !dbg !3354

349:                                              ; preds = %340
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.253, i64 0, i64 0)), !dbg !3355
  store i32 -1, i32* %5, align 4, !dbg !3357
  br label %439, !dbg !3357

350:                                              ; preds = %340
  br label %351

351:                                              ; preds = %350, %339
  br label %384, !dbg !3358

352:                                              ; preds = %324
  %353 = load i16, i16* %15, align 2, !dbg !3359
  %354 = zext i16 %353 to i32, !dbg !3359
  %355 = icmp eq i32 %354, 1, !dbg !3361
  br i1 %355, label %356, label %369, !dbg !3362

356:                                              ; preds = %352
  %357 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3363
  %358 = load i8*, i8** %33, align 8, !dbg !3366
  %359 = load i32, i32* %25, align 4, !dbg !3367
  %360 = load i32, i32* %24, align 4, !dbg !3368
  %361 = load i32, i32* %30, align 4, !dbg !3369
  %362 = load i32, i32* %31, align 4, !dbg !3370
  %363 = load i16, i16* %17, align 2, !dbg !3371
  %364 = load i16, i16* %16, align 2, !dbg !3372
  %365 = call i32 @readContigTilesIntoBuffer(%struct.tiff* %357, i8* %358, i32 %359, i32 %360, i32 %361, i32 %362, i16 zeroext %363, i16 zeroext %364), !dbg !3373
  %366 = icmp ne i32 %365, 0, !dbg !3373
  br i1 %366, label %368, label %367, !dbg !3374

367:                                              ; preds = %356
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.254, i64 0, i64 0)), !dbg !3375
  store i32 -1, i32* %5, align 4, !dbg !3377
  br label %439, !dbg !3377

368:                                              ; preds = %356
  br label %382, !dbg !3378

369:                                              ; preds = %352
  %370 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !3379
  %371 = load i8*, i8** %33, align 8, !dbg !3382
  %372 = load i32, i32* %25, align 4, !dbg !3383
  %373 = load i32, i32* %24, align 4, !dbg !3384
  %374 = load i32, i32* %30, align 4, !dbg !3385
  %375 = load i32, i32* %31, align 4, !dbg !3386
  %376 = load i16, i16* %17, align 2, !dbg !3387
  %377 = load i16, i16* %16, align 2, !dbg !3388
  %378 = call i32 @readSeparateTilesIntoBuffer(%struct.tiff* %370, i8* %371, i32 %372, i32 %373, i32 %374, i32 %375, i16 zeroext %376, i16 zeroext %377), !dbg !3389
  %379 = icmp ne i32 %378, 0, !dbg !3389
  br i1 %379, label %381, label %380, !dbg !3390

380:                                              ; preds = %369
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.255, i64 0, i64 0)), !dbg !3391
  store i32 -1, i32* %5, align 4, !dbg !3393
  br label %439, !dbg !3393

381:                                              ; preds = %369
  br label %382

382:                                              ; preds = %381, %368
  br label %384, !dbg !3394

383:                                              ; preds = %324
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.256, i64 0, i64 0)), !dbg !3395
  store i32 -1, i32* %5, align 4, !dbg !3396
  br label %439, !dbg !3396

384:                                              ; preds = %382, %351
  %385 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3397
  %386 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %385, i32 0, i32 6, !dbg !3399
  %387 = load %struct._IO_FILE*, %struct._IO_FILE** %386, align 8, !dbg !3399
  %388 = icmp ne %struct._IO_FILE* %387, null, !dbg !3400
  br i1 %388, label %389, label %438, !dbg !3401

389:                                              ; preds = %384
  %390 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3402
  %391 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %390, i32 0, i32 2, !dbg !3403
  %392 = load i32, i32* %391, align 8, !dbg !3403
  %393 = icmp eq i32 %392, 2, !dbg !3404
  br i1 %393, label %394, label %438, !dbg !3405

394:                                              ; preds = %389
  %395 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3406
  %396 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %395, i32 0, i32 6, !dbg !3408
  %397 = load %struct._IO_FILE*, %struct._IO_FILE** %396, align 8, !dbg !3408
  %398 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3409
  %399 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %398, i32 0, i32 1, !dbg !3410
  %400 = load i32, i32* %399, align 4, !dbg !3410
  %401 = load i32, i32* %24, align 4, !dbg !3411
  %402 = load i32, i32* %25, align 4, !dbg !3412
  %403 = load i32, i32* %28, align 4, !dbg !3413
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %397, i32 %400, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.257, i64 0, i64 0), i32 %401, i32 %402, i32 %403), !dbg !3414
  %404 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3415
  %405 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %404, i32 0, i32 6, !dbg !3416
  %406 = load %struct._IO_FILE*, %struct._IO_FILE** %405, align 8, !dbg !3416
  %407 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3417
  %408 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %407, i32 0, i32 1, !dbg !3418
  %409 = load i32, i32* %408, align 4, !dbg !3418
  %410 = load i16, i16* %16, align 2, !dbg !3419
  %411 = zext i16 %410 to i32, !dbg !3419
  %412 = load i16, i16* %17, align 2, !dbg !3420
  %413 = zext i16 %412 to i32, !dbg !3420
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %406, i32 %409, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.258, i64 0, i64 0), i32 %411, i32 %413), !dbg !3421
  store i32 0, i32* %10, align 4, !dbg !3422
  br label %414, !dbg !3424

414:                                              ; preds = %434, %394
  %415 = load i32, i32* %10, align 4, !dbg !3425
  %416 = load i32, i32* %25, align 4, !dbg !3427
  %417 = icmp ult i32 %415, %416, !dbg !3428
  br i1 %417, label %418, label %437, !dbg !3429

418:                                              ; preds = %414
  %419 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3430
  %420 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %419, i32 0, i32 6, !dbg !3431
  %421 = load %struct._IO_FILE*, %struct._IO_FILE** %420, align 8, !dbg !3431
  %422 = load %struct.dump_opts*, %struct.dump_opts** %8, align 8, !dbg !3432
  %423 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %422, i32 0, i32 1, !dbg !3433
  %424 = load i32, i32* %423, align 4, !dbg !3433
  %425 = load i32, i32* %29, align 4, !dbg !3434
  %426 = load i32, i32* %10, align 4, !dbg !3435
  %427 = load i8*, i8** %33, align 8, !dbg !3436
  %428 = load i32, i32* %10, align 4, !dbg !3437
  %429 = load i32, i32* %29, align 4, !dbg !3438
  %430 = mul i32 %428, %429, !dbg !3439
  %431 = zext i32 %430 to i64, !dbg !3440
  %432 = getelementptr inbounds i8, i8* %427, i64 %431, !dbg !3440
  %433 = call i32 @dump_buffer(%struct._IO_FILE* %421, i32 %424, i32 1, i32 %425, i32 %426, i8* %432), !dbg !3441
  br label %434, !dbg !3441

434:                                              ; preds = %418
  %435 = load i32, i32* %10, align 4, !dbg !3442
  %436 = add i32 %435, 1, !dbg !3442
  store i32 %436, i32* %10, align 4, !dbg !3442
  br label %414, !dbg !3443, !llvm.loop !3444

437:                                              ; preds = %414
  br label %438, !dbg !3446

438:                                              ; preds = %437, %389, %384
  store i32 0, i32* %5, align 4, !dbg !3447
  br label %439, !dbg !3447

439:                                              ; preds = %438, %383, %380, %367, %349, %338, %323, %284, %148
  %440 = load i32, i32* %5, align 4, !dbg !3448
  ret i32 %440, !dbg !3448
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @correct_orientation(%struct.image_data*, i8**) #0 !dbg !3449 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.image_data*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  store %struct.image_data* %0, %struct.image_data** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %4, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !3454, metadata !DIExpression()), !dbg !3455
  call void @llvm.dbg.declare(metadata i16* %6, metadata !3456, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.declare(metadata i16* %7, metadata !3458, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3460, metadata !DIExpression()), !dbg !3461
  %9 = load i8**, i8*** %5, align 8, !dbg !3462
  %10 = load i8*, i8** %9, align 8, !dbg !3463
  store i8* %10, i8** %8, align 8, !dbg !3464
  %11 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3465
  %12 = icmp eq %struct.image_data* %11, null, !dbg !3467
  br i1 %12, label %16, label %13, !dbg !3468

13:                                               ; preds = %2
  %14 = load i8*, i8** %8, align 8, !dbg !3469
  %15 = icmp eq i8* %14, null, !dbg !3470
  br i1 %15, label %16, label %17, !dbg !3471

16:                                               ; preds = %13, %2
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.325, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.326, i64 0, i64 0)), !dbg !3472
  store i32 -1, i32* %3, align 4, !dbg !3474
  br label %118, !dbg !3474

17:                                               ; preds = %13
  %18 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3475
  %19 = getelementptr inbounds %struct.image_data, %struct.image_data* %18, i32 0, i32 11, !dbg !3477
  %20 = load i16, i16* %19, align 2, !dbg !3477
  %21 = zext i16 %20 to i32, !dbg !3475
  %22 = and i32 %21, 1, !dbg !3478
  %23 = icmp ne i32 %22, 0, !dbg !3478
  br i1 %23, label %31, label %24, !dbg !3479

24:                                               ; preds = %17
  %25 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3480
  %26 = getelementptr inbounds %struct.image_data, %struct.image_data* %25, i32 0, i32 11, !dbg !3481
  %27 = load i16, i16* %26, align 2, !dbg !3481
  %28 = zext i16 %27 to i32, !dbg !3480
  %29 = and i32 %28, 2, !dbg !3482
  %30 = icmp ne i32 %29, 0, !dbg !3482
  br i1 %30, label %31, label %56, !dbg !3483

31:                                               ; preds = %24, %17
  %32 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3484
  %33 = getelementptr inbounds %struct.image_data, %struct.image_data* %32, i32 0, i32 11, !dbg !3486
  %34 = load i16, i16* %33, align 2, !dbg !3486
  %35 = zext i16 %34 to i32, !dbg !3484
  %36 = and i32 %35, 3, !dbg !3487
  %37 = trunc i32 %36 to i16, !dbg !3488
  store i16 %37, i16* %6, align 2, !dbg !3489
  %38 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3490
  %39 = getelementptr inbounds %struct.image_data, %struct.image_data* %38, i32 0, i32 6, !dbg !3492
  %40 = load i16, i16* %39, align 4, !dbg !3492
  %41 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3493
  %42 = getelementptr inbounds %struct.image_data, %struct.image_data* %41, i32 0, i32 5, !dbg !3494
  %43 = load i16, i16* %42, align 2, !dbg !3494
  %44 = load i16, i16* %6, align 2, !dbg !3495
  %45 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3496
  %46 = getelementptr inbounds %struct.image_data, %struct.image_data* %45, i32 0, i32 2, !dbg !3497
  %47 = load i32, i32* %46, align 4, !dbg !3497
  %48 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3498
  %49 = getelementptr inbounds %struct.image_data, %struct.image_data* %48, i32 0, i32 3, !dbg !3499
  %50 = load i32, i32* %49, align 4, !dbg !3499
  %51 = load i8*, i8** %8, align 8, !dbg !3500
  %52 = call i32 @mirrorImage(i16 zeroext %40, i16 zeroext %43, i16 zeroext %44, i32 %47, i32 %50, i8* %51), !dbg !3501
  %53 = icmp ne i32 %52, 0, !dbg !3501
  br i1 %53, label %54, label %55, !dbg !3502

54:                                               ; preds = %31
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.328, i64 0, i64 0)), !dbg !3503
  store i32 -1, i32* %3, align 4, !dbg !3505
  br label %118, !dbg !3505

55:                                               ; preds = %31
  br label %56, !dbg !3506

56:                                               ; preds = %55, %24
  %57 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3507
  %58 = getelementptr inbounds %struct.image_data, %struct.image_data* %57, i32 0, i32 11, !dbg !3509
  %59 = load i16, i16* %58, align 2, !dbg !3509
  %60 = zext i16 %59 to i32, !dbg !3507
  %61 = and i32 %60, 8, !dbg !3510
  %62 = icmp ne i32 %61, 0, !dbg !3510
  br i1 %62, label %65, label %63, !dbg !3511

63:                                               ; preds = %56
  br i1 true, label %65, label %64, !dbg !3511

64:                                               ; preds = %63
  br i1 true, label %65, label %117, !dbg !3512

65:                                               ; preds = %64, %63, %56
  %66 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3513
  %67 = getelementptr inbounds %struct.image_data, %struct.image_data* %66, i32 0, i32 11, !dbg !3516
  %68 = load i16, i16* %67, align 2, !dbg !3516
  %69 = zext i16 %68 to i32, !dbg !3513
  %70 = and i32 %69, 8, !dbg !3517
  %71 = icmp ne i32 %70, 0, !dbg !3517
  br i1 %71, label %72, label %73, !dbg !3518

72:                                               ; preds = %65
  store i16 90, i16* %7, align 2, !dbg !3519
  br label %103, !dbg !3520

73:                                               ; preds = %65
  %74 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3521
  %75 = getelementptr inbounds %struct.image_data, %struct.image_data* %74, i32 0, i32 11, !dbg !3523
  %76 = load i16, i16* %75, align 2, !dbg !3523
  %77 = zext i16 %76 to i32, !dbg !3521
  %78 = and i32 %77, 16, !dbg !3524
  %79 = icmp ne i32 %78, 0, !dbg !3524
  br i1 %79, label %80, label %81, !dbg !3525

80:                                               ; preds = %73
  store i16 180, i16* %7, align 2, !dbg !3526
  br label %102, !dbg !3527

81:                                               ; preds = %73
  %82 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3528
  %83 = getelementptr inbounds %struct.image_data, %struct.image_data* %82, i32 0, i32 11, !dbg !3530
  %84 = load i16, i16* %83, align 2, !dbg !3530
  %85 = zext i16 %84 to i32, !dbg !3528
  %86 = and i32 %85, 32, !dbg !3531
  %87 = icmp ne i32 %86, 0, !dbg !3531
  br i1 %87, label %88, label %89, !dbg !3532

88:                                               ; preds = %81
  store i16 270, i16* %7, align 2, !dbg !3533
  br label %101, !dbg !3534

89:                                               ; preds = %81
  %90 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3535
  %91 = getelementptr inbounds %struct.image_data, %struct.image_data* %90, i32 0, i32 11, !dbg !3537
  %92 = load i16, i16* %91, align 2, !dbg !3537
  %93 = zext i16 %92 to i32, !dbg !3535
  %94 = and i32 %93, 8, !dbg !3538
  %95 = icmp ne i32 %94, 0, !dbg !3538
  br i1 %95, label %98, label %96, !dbg !3539

96:                                               ; preds = %89
  br i1 true, label %98, label %97, !dbg !3539

97:                                               ; preds = %96
  br label %98, !dbg !3539

98:                                               ; preds = %97, %96, %89
  %99 = phi i1 [ true, %96 ], [ true, %89 ], [ true, %97 ]
  %100 = zext i1 %99 to i32, !dbg !3539
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.329, i64 0, i64 0), i32 %100), !dbg !3540
  store i32 -1, i32* %3, align 4, !dbg !3541
  br label %118, !dbg !3541

101:                                              ; preds = %88
  br label %102

102:                                              ; preds = %101, %80
  br label %103

103:                                              ; preds = %102, %72
  %104 = load i16, i16* %7, align 2, !dbg !3542
  %105 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3544
  %106 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3545
  %107 = getelementptr inbounds %struct.image_data, %struct.image_data* %106, i32 0, i32 2, !dbg !3546
  %108 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3547
  %109 = getelementptr inbounds %struct.image_data, %struct.image_data* %108, i32 0, i32 3, !dbg !3548
  %110 = load i8**, i8*** %5, align 8, !dbg !3549
  %111 = call i32 @rotateImage(i16 zeroext %104, %struct.image_data* %105, i32* %107, i32* %109, i8** %110), !dbg !3550
  %112 = icmp ne i32 %111, 0, !dbg !3550
  br i1 %112, label %113, label %114, !dbg !3551

113:                                              ; preds = %103
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.330, i64 0, i64 0)), !dbg !3552
  store i32 -1, i32* %3, align 4, !dbg !3554
  br label %118, !dbg !3554

114:                                              ; preds = %103
  %115 = load %struct.image_data*, %struct.image_data** %4, align 8, !dbg !3555
  %116 = getelementptr inbounds %struct.image_data, %struct.image_data* %115, i32 0, i32 9, !dbg !3556
  store i16 1, i16* %116, align 2, !dbg !3557
  br label %117, !dbg !3558

117:                                              ; preds = %114, %64
  store i32 0, i32* %3, align 4, !dbg !3559
  br label %118, !dbg !3559

118:                                              ; preds = %117, %113, %98, %54, %16
  %119 = load i32, i32* %3, align 4, !dbg !3560
  ret i32 %119, !dbg !3560
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getCropOffsets(%struct.image_data*, %struct.crop_mask*, %struct.dump_opts*) #0 !dbg !3561 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.image_data*, align 8
  %6 = alloca %struct.crop_mask*, align 8
  %7 = alloca %struct.dump_opts*, align 8
  %8 = alloca %struct.offset, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.image_data* %0, %struct.image_data** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %5, metadata !3564, metadata !DIExpression()), !dbg !3565
  store %struct.crop_mask* %1, %struct.crop_mask** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %6, metadata !3566, metadata !DIExpression()), !dbg !3567
  store %struct.dump_opts* %2, %struct.dump_opts** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %7, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata %struct.offset* %8, metadata !3570, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3584, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3586, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3588, metadata !DIExpression()), !dbg !3589
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3590, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3592, metadata !DIExpression()), !dbg !3593
  store i32 0, i32* %13, align 4, !dbg !3593
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3594, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3596, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.declare(metadata i32* %16, metadata !3598, metadata !DIExpression()), !dbg !3599
  %17 = bitcast %struct.offset* %8 to i8*, !dbg !3600
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 40, i1 false), !dbg !3600
  %18 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3601
  %19 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %18, i32 0, i32 7, !dbg !3602
  store i32 0, i32* %19, align 8, !dbg !3603
  %20 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3604
  %21 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %20, i32 0, i32 5, !dbg !3605
  store i32 0, i32* %21, align 8, !dbg !3606
  %22 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3607
  %23 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %22, i32 0, i32 6, !dbg !3608
  store i32 0, i32* %23, align 4, !dbg !3609
  %24 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3610
  %25 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %24, i32 0, i32 17, !dbg !3611
  store i16 0, i16* %25, align 2, !dbg !3612
  %26 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3613
  %27 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %26, i32 0, i32 10, !dbg !3615
  %28 = load i16, i16* %27, align 8, !dbg !3615
  %29 = zext i16 %28 to i32, !dbg !3613
  %30 = and i32 %29, 1, !dbg !3616
  %31 = icmp ne i32 %30, 0, !dbg !3616
  br i1 %31, label %53, label %32, !dbg !3617

32:                                               ; preds = %3
  %33 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3618
  %34 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %33, i32 0, i32 10, !dbg !3619
  %35 = load i16, i16* %34, align 8, !dbg !3619
  %36 = zext i16 %35 to i32, !dbg !3618
  %37 = and i32 %36, 16, !dbg !3620
  %38 = icmp ne i32 %37, 0, !dbg !3620
  br i1 %38, label %53, label %39, !dbg !3621

39:                                               ; preds = %32
  %40 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3622
  %41 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %40, i32 0, i32 10, !dbg !3623
  %42 = load i16, i16* %41, align 8, !dbg !3623
  %43 = zext i16 %42 to i32, !dbg !3622
  %44 = and i32 %43, 4, !dbg !3624
  %45 = icmp ne i32 %44, 0, !dbg !3624
  br i1 %45, label %53, label %46, !dbg !3625

46:                                               ; preds = %39
  %47 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3626
  %48 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %47, i32 0, i32 10, !dbg !3627
  %49 = load i16, i16* %48, align 8, !dbg !3627
  %50 = zext i16 %49 to i32, !dbg !3626
  %51 = and i32 %50, 2, !dbg !3628
  %52 = icmp ne i32 %51, 0, !dbg !3628
  br i1 %52, label %53, label %73, !dbg !3629

53:                                               ; preds = %46, %39, %32, %3
  %54 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3630
  %55 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3633
  %56 = call i32 @computeInputPixelOffsets(%struct.crop_mask* %54, %struct.image_data* %55, %struct.offset* %8), !dbg !3634
  %57 = icmp ne i32 %56, 0, !dbg !3634
  br i1 %57, label %58, label %59, !dbg !3635

58:                                               ; preds = %53
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.223, i64 0, i64 0)), !dbg !3636
  store i32 -1, i32* %4, align 4, !dbg !3638
  br label %814, !dbg !3638

59:                                               ; preds = %53
  store i32 1, i32* %13, align 4, !dbg !3639
  %60 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3640
  %61 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %60, i32 0, i32 18, !dbg !3641
  %62 = load i16, i16* %61, align 8, !dbg !3641
  %63 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3642
  %64 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %63, i32 0, i32 17, !dbg !3643
  store i16 %62, i16* %64, align 2, !dbg !3644
  %65 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3645
  %66 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %65, i32 0, i32 10, !dbg !3647
  %67 = load i16, i16* %66, align 8, !dbg !3647
  %68 = zext i16 %67 to i32, !dbg !3645
  %69 = and i32 %68, 16, !dbg !3648
  %70 = icmp ne i32 %69, 0, !dbg !3648
  br i1 %70, label %71, label %72, !dbg !3649

71:                                               ; preds = %59
  store i32 0, i32* %4, align 4, !dbg !3650
  br label %814, !dbg !3650

72:                                               ; preds = %59
  br label %98, !dbg !3651

73:                                               ; preds = %46
  %74 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 0, !dbg !3652
  store i32 0, i32* %74, align 4, !dbg !3654
  %75 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 1, !dbg !3655
  store i32 0, i32* %75, align 4, !dbg !3656
  %76 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 2, !dbg !3657
  store i32 0, i32* %76, align 4, !dbg !3658
  %77 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 3, !dbg !3659
  store i32 0, i32* %77, align 4, !dbg !3660
  %78 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3661
  %79 = getelementptr inbounds %struct.image_data, %struct.image_data* %78, i32 0, i32 2, !dbg !3662
  %80 = load i32, i32* %79, align 4, !dbg !3662
  %81 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !3663
  store i32 %80, i32* %81, align 4, !dbg !3664
  %82 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3665
  %83 = getelementptr inbounds %struct.image_data, %struct.image_data* %82, i32 0, i32 3, !dbg !3666
  %84 = load i32, i32* %83, align 4, !dbg !3666
  %85 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !3667
  store i32 %84, i32* %85, align 4, !dbg !3668
  %86 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !3669
  store i32 0, i32* %86, align 4, !dbg !3670
  %87 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3671
  %88 = getelementptr inbounds %struct.image_data, %struct.image_data* %87, i32 0, i32 2, !dbg !3672
  %89 = load i32, i32* %88, align 4, !dbg !3672
  %90 = sub i32 %89, 1, !dbg !3673
  %91 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 7, !dbg !3674
  store i32 %90, i32* %91, align 4, !dbg !3675
  %92 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 8, !dbg !3676
  store i32 0, i32* %92, align 4, !dbg !3677
  %93 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3678
  %94 = getelementptr inbounds %struct.image_data, %struct.image_data* %93, i32 0, i32 3, !dbg !3679
  %95 = load i32, i32* %94, align 4, !dbg !3679
  %96 = sub i32 %95, 1, !dbg !3680
  %97 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 9, !dbg !3681
  store i32 %96, i32* %97, align 4, !dbg !3682
  store i32 0, i32* %13, align 4, !dbg !3683
  br label %98

98:                                               ; preds = %73, %72
  %99 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !3684
  %100 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %99, i32 0, i32 7, !dbg !3686
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %100, align 8, !dbg !3686
  %102 = icmp ne %struct._IO_FILE* %101, null, !dbg !3687
  br i1 %102, label %103, label %128, !dbg !3688

103:                                              ; preds = %98
  %104 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !3689
  %105 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %104, i32 0, i32 7, !dbg !3691
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %105, align 8, !dbg !3691
  %107 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !3692
  %108 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %107, i32 0, i32 1, !dbg !3693
  %109 = load i32, i32* %108, align 4, !dbg !3693
  %110 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 0, !dbg !3694
  %111 = load i32, i32* %110, align 4, !dbg !3694
  %112 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 1, !dbg !3695
  %113 = load i32, i32* %112, align 4, !dbg !3695
  %114 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 2, !dbg !3696
  %115 = load i32, i32* %114, align 4, !dbg !3696
  %116 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 3, !dbg !3697
  %117 = load i32, i32* %116, align 4, !dbg !3697
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %106, i32 %109, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.224, i64 0, i64 0), i32 %111, i32 %113, i32 %115, i32 %117), !dbg !3698
  %118 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !3699
  %119 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %118, i32 0, i32 7, !dbg !3700
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %119, align 8, !dbg !3700
  %121 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !3701
  %122 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %121, i32 0, i32 1, !dbg !3702
  %123 = load i32, i32* %122, align 4, !dbg !3702
  %124 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !3703
  %125 = load i32, i32* %124, align 4, !dbg !3703
  %126 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !3704
  %127 = load i32, i32* %126, align 4, !dbg !3704
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %120, i32 %123, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.225, i64 0, i64 0), i32 %125, i32 %127), !dbg !3705
  br label %128, !dbg !3706

128:                                              ; preds = %103, %98
  %129 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3707
  %130 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %129, i32 0, i32 10, !dbg !3709
  %131 = load i16, i16* %130, align 8, !dbg !3709
  %132 = zext i16 %131 to i32, !dbg !3707
  %133 = and i32 %132, 8, !dbg !3710
  %134 = icmp ne i32 %133, 0, !dbg !3710
  br i1 %134, label %165, label %135, !dbg !3711

135:                                              ; preds = %128
  %136 = load i32, i32* %13, align 4, !dbg !3712
  %137 = icmp eq i32 %136, 0, !dbg !3715
  br i1 %137, label %138, label %151, !dbg !3716

138:                                              ; preds = %135
  %139 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3717
  %140 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %139, i32 0, i32 17, !dbg !3719
  store i16 0, i16* %140, align 2, !dbg !3720
  %141 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3721
  %142 = getelementptr inbounds %struct.image_data, %struct.image_data* %141, i32 0, i32 2, !dbg !3722
  %143 = load i32, i32* %142, align 4, !dbg !3722
  %144 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3723
  %145 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %144, i32 0, i32 5, !dbg !3724
  store i32 %143, i32* %145, align 8, !dbg !3725
  %146 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3726
  %147 = getelementptr inbounds %struct.image_data, %struct.image_data* %146, i32 0, i32 3, !dbg !3727
  %148 = load i32, i32* %147, align 4, !dbg !3727
  %149 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3728
  %150 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %149, i32 0, i32 6, !dbg !3729
  store i32 %148, i32* %150, align 4, !dbg !3730
  store i32 0, i32* %4, align 4, !dbg !3731
  br label %814, !dbg !3731

151:                                              ; preds = %135
  %152 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3732
  %153 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %152, i32 0, i32 17, !dbg !3734
  store i16 1, i16* %153, align 2, !dbg !3735
  %154 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3736
  %155 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %154, i32 0, i32 20, !dbg !3737
  store i16 1, i16* %155, align 8, !dbg !3738
  %156 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3739
  %157 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %156, i32 0, i32 21, !dbg !3740
  %158 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %157, i64 0, i64 0, !dbg !3739
  %159 = getelementptr inbounds %struct.zone, %struct.zone* %158, i32 0, i32 1, !dbg !3741
  store i32 1, i32* %159, align 4, !dbg !3742
  %160 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3743
  %161 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %160, i32 0, i32 21, !dbg !3744
  %162 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %161, i64 0, i64 0, !dbg !3743
  %163 = getelementptr inbounds %struct.zone, %struct.zone* %162, i32 0, i32 0, !dbg !3745
  store i32 1, i32* %163, align 4, !dbg !3746
  br label %164

164:                                              ; preds = %151
  br label %171, !dbg !3747

165:                                              ; preds = %128
  %166 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3748
  %167 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %166, i32 0, i32 20, !dbg !3749
  %168 = load i16, i16* %167, align 8, !dbg !3749
  %169 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3750
  %170 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %169, i32 0, i32 17, !dbg !3751
  store i16 %168, i16* %170, align 2, !dbg !3752
  br label %171

171:                                              ; preds = %165, %164
  store i32 0, i32* %9, align 4, !dbg !3753
  br label %172, !dbg !3755

172:                                              ; preds = %810, %171
  %173 = load i32, i32* %9, align 4, !dbg !3756
  %174 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3758
  %175 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %174, i32 0, i32 20, !dbg !3759
  %176 = load i16, i16* %175, align 8, !dbg !3759
  %177 = zext i16 %176 to i32, !dbg !3758
  %178 = icmp slt i32 %173, %177, !dbg !3760
  br i1 %178, label %179, label %813, !dbg !3761

179:                                              ; preds = %172
  %180 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3762
  %181 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %180, i32 0, i32 21, !dbg !3764
  %182 = load i32, i32* %9, align 4, !dbg !3765
  %183 = sext i32 %182 to i64, !dbg !3762
  %184 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %181, i64 0, i64 %183, !dbg !3762
  %185 = getelementptr inbounds %struct.zone, %struct.zone* %184, i32 0, i32 0, !dbg !3766
  %186 = load i32, i32* %185, align 4, !dbg !3766
  store i32 %186, i32* %11, align 4, !dbg !3767
  %187 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3768
  %188 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %187, i32 0, i32 21, !dbg !3769
  %189 = load i32, i32* %9, align 4, !dbg !3770
  %190 = sext i32 %189 to i64, !dbg !3768
  %191 = getelementptr inbounds [8 x %struct.zone], [8 x %struct.zone]* %188, i64 0, i64 %190, !dbg !3768
  %192 = getelementptr inbounds %struct.zone, %struct.zone* %191, i32 0, i32 1, !dbg !3771
  %193 = load i32, i32* %192, align 4, !dbg !3771
  store i32 %193, i32* %12, align 4, !dbg !3772
  %194 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3773
  %195 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %194, i32 0, i32 12, !dbg !3774
  %196 = load i16, i16* %195, align 4, !dbg !3774
  %197 = zext i16 %196 to i32, !dbg !3773
  switch i32 %197, label %596 [
    i32 2, label %198
    i32 3, label %325
    i32 4, label %465
    i32 1, label %595
  ], !dbg !3775

198:                                              ; preds = %179
  %199 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !3776
  %200 = load i32, i32* %199, align 4, !dbg !3776
  store i32 %200, i32* %16, align 4, !dbg !3778
  %201 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 8, !dbg !3779
  %202 = load i32, i32* %201, align 4, !dbg !3779
  %203 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3780
  %204 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %203, i32 0, i32 19, !dbg !3781
  %205 = load i32, i32* %9, align 4, !dbg !3782
  %206 = sext i32 %205 to i64, !dbg !3780
  %207 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %204, i64 0, i64 %206, !dbg !3780
  %208 = getelementptr inbounds %struct.region, %struct.region* %207, i32 0, i32 2, !dbg !3783
  store i32 %202, i32* %208, align 8, !dbg !3784
  %209 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 9, !dbg !3785
  %210 = load i32, i32* %209, align 4, !dbg !3785
  %211 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3786
  %212 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %211, i32 0, i32 19, !dbg !3787
  %213 = load i32, i32* %9, align 4, !dbg !3788
  %214 = sext i32 %213 to i64, !dbg !3786
  %215 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %212, i64 0, i64 %214, !dbg !3786
  %216 = getelementptr inbounds %struct.region, %struct.region* %215, i32 0, i32 3, !dbg !3789
  store i32 %210, i32* %216, align 4, !dbg !3790
  %217 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !3791
  %218 = load i32, i32* %217, align 4, !dbg !3791
  %219 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !3792
  %220 = load i32, i32* %219, align 4, !dbg !3792
  %221 = uitofp i32 %220 to double, !dbg !3793
  %222 = fmul double %221, 1.000000e+00, !dbg !3794
  %223 = load i32, i32* %11, align 4, !dbg !3795
  %224 = sub i32 %223, 1, !dbg !3796
  %225 = uitofp i32 %224 to double, !dbg !3797
  %226 = fmul double %222, %225, !dbg !3798
  %227 = load i32, i32* %12, align 4, !dbg !3799
  %228 = uitofp i32 %227 to double, !dbg !3799
  %229 = fdiv double %226, %228, !dbg !3800
  %230 = fptoui double %229 to i32, !dbg !3801
  %231 = add i32 %218, %230, !dbg !3802
  %232 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3803
  %233 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %232, i32 0, i32 19, !dbg !3804
  %234 = load i32, i32* %9, align 4, !dbg !3805
  %235 = sext i32 %234 to i64, !dbg !3803
  %236 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %233, i64 0, i64 %235, !dbg !3803
  %237 = getelementptr inbounds %struct.region, %struct.region* %236, i32 0, i32 0, !dbg !3806
  store i32 %231, i32* %237, align 8, !dbg !3807
  %238 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !3808
  %239 = load i32, i32* %238, align 4, !dbg !3808
  %240 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !3809
  %241 = load i32, i32* %240, align 4, !dbg !3809
  %242 = uitofp i32 %241 to double, !dbg !3810
  %243 = fmul double %242, 1.000000e+00, !dbg !3811
  %244 = load i32, i32* %11, align 4, !dbg !3812
  %245 = uitofp i32 %244 to double, !dbg !3812
  %246 = fmul double %243, %245, !dbg !3813
  %247 = load i32, i32* %12, align 4, !dbg !3814
  %248 = uitofp i32 %247 to double, !dbg !3814
  %249 = fdiv double %246, %248, !dbg !3815
  %250 = fptosi double %249 to i32, !dbg !3816
  %251 = add nsw i32 %239, %250, !dbg !3817
  store i32 %251, i32* %10, align 4, !dbg !3818
  %252 = load i32, i32* %10, align 4, !dbg !3819
  %253 = icmp slt i32 %252, 1, !dbg !3821
  br i1 %253, label %254, label %261, !dbg !3822

254:                                              ; preds = %198
  %255 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3823
  %256 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %255, i32 0, i32 19, !dbg !3824
  %257 = load i32, i32* %9, align 4, !dbg !3825
  %258 = sext i32 %257 to i64, !dbg !3823
  %259 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %256, i64 0, i64 %258, !dbg !3823
  %260 = getelementptr inbounds %struct.region, %struct.region* %259, i32 0, i32 1, !dbg !3826
  store i32 0, i32* %260, align 4, !dbg !3827
  br label %289, !dbg !3823

261:                                              ; preds = %198
  %262 = load i32, i32* %10, align 4, !dbg !3828
  %263 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3831
  %264 = getelementptr inbounds %struct.image_data, %struct.image_data* %263, i32 0, i32 2, !dbg !3832
  %265 = load i32, i32* %264, align 4, !dbg !3832
  %266 = sub i32 %265, 1, !dbg !3833
  %267 = icmp sgt i32 %262, %266, !dbg !3834
  br i1 %267, label %268, label %279, !dbg !3835

268:                                              ; preds = %261
  %269 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3836
  %270 = getelementptr inbounds %struct.image_data, %struct.image_data* %269, i32 0, i32 2, !dbg !3837
  %271 = load i32, i32* %270, align 4, !dbg !3837
  %272 = sub i32 %271, 1, !dbg !3838
  %273 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3839
  %274 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %273, i32 0, i32 19, !dbg !3840
  %275 = load i32, i32* %9, align 4, !dbg !3841
  %276 = sext i32 %275 to i64, !dbg !3839
  %277 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %274, i64 0, i64 %276, !dbg !3839
  %278 = getelementptr inbounds %struct.region, %struct.region* %277, i32 0, i32 1, !dbg !3842
  store i32 %272, i32* %278, align 4, !dbg !3843
  br label %288, !dbg !3839

279:                                              ; preds = %261
  %280 = load i32, i32* %10, align 4, !dbg !3844
  %281 = sub nsw i32 %280, 1, !dbg !3845
  %282 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3846
  %283 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %282, i32 0, i32 19, !dbg !3847
  %284 = load i32, i32* %9, align 4, !dbg !3848
  %285 = sext i32 %284 to i64, !dbg !3846
  %286 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %283, i64 0, i64 %285, !dbg !3846
  %287 = getelementptr inbounds %struct.region, %struct.region* %286, i32 0, i32 1, !dbg !3849
  store i32 %281, i32* %287, align 4, !dbg !3850
  br label %288

288:                                              ; preds = %279, %268
  br label %289

289:                                              ; preds = %288, %254
  %290 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3851
  %291 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %290, i32 0, i32 19, !dbg !3852
  %292 = load i32, i32* %9, align 4, !dbg !3853
  %293 = sext i32 %292 to i64, !dbg !3851
  %294 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %291, i64 0, i64 %293, !dbg !3851
  %295 = getelementptr inbounds %struct.region, %struct.region* %294, i32 0, i32 1, !dbg !3854
  %296 = load i32, i32* %295, align 4, !dbg !3854
  %297 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3855
  %298 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %297, i32 0, i32 19, !dbg !3856
  %299 = load i32, i32* %9, align 4, !dbg !3857
  %300 = sext i32 %299 to i64, !dbg !3855
  %301 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %298, i64 0, i64 %300, !dbg !3855
  %302 = getelementptr inbounds %struct.region, %struct.region* %301, i32 0, i32 0, !dbg !3858
  %303 = load i32, i32* %302, align 8, !dbg !3858
  %304 = sub i32 %296, %303, !dbg !3859
  %305 = add i32 %304, 1, !dbg !3860
  store i32 %305, i32* %15, align 4, !dbg !3861
  %306 = load i32, i32* %16, align 4, !dbg !3862
  %307 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3863
  %308 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %307, i32 0, i32 6, !dbg !3864
  store i32 %306, i32* %308, align 4, !dbg !3865
  %309 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3866
  %310 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %309, i32 0, i32 9, !dbg !3868
  %311 = load i16, i16* %310, align 2, !dbg !3868
  %312 = zext i16 %311 to i32, !dbg !3866
  %313 = icmp eq i32 %312, 0, !dbg !3869
  br i1 %313, label %314, label %320, !dbg !3870

314:                                              ; preds = %289
  %315 = load i32, i32* %15, align 4, !dbg !3871
  %316 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3872
  %317 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %316, i32 0, i32 5, !dbg !3873
  %318 = load i32, i32* %317, align 8, !dbg !3874
  %319 = add i32 %318, %315, !dbg !3874
  store i32 %319, i32* %317, align 8, !dbg !3874
  br label %324, !dbg !3872

320:                                              ; preds = %289
  %321 = load i32, i32* %15, align 4, !dbg !3875
  %322 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3876
  %323 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %322, i32 0, i32 5, !dbg !3877
  store i32 %321, i32* %323, align 8, !dbg !3878
  br label %324

324:                                              ; preds = %320, %314
  br label %723, !dbg !3879

325:                                              ; preds = %179
  %326 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !3880
  %327 = load i32, i32* %326, align 4, !dbg !3880
  store i32 %327, i32* %15, align 4, !dbg !3881
  %328 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !3882
  %329 = load i32, i32* %328, align 4, !dbg !3882
  %330 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3883
  %331 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %330, i32 0, i32 19, !dbg !3884
  %332 = load i32, i32* %9, align 4, !dbg !3885
  %333 = sext i32 %332 to i64, !dbg !3883
  %334 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %331, i64 0, i64 %333, !dbg !3883
  %335 = getelementptr inbounds %struct.region, %struct.region* %334, i32 0, i32 0, !dbg !3886
  store i32 %329, i32* %335, align 8, !dbg !3887
  %336 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 7, !dbg !3888
  %337 = load i32, i32* %336, align 4, !dbg !3888
  %338 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3889
  %339 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %338, i32 0, i32 19, !dbg !3890
  %340 = load i32, i32* %9, align 4, !dbg !3891
  %341 = sext i32 %340 to i64, !dbg !3889
  %342 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %339, i64 0, i64 %341, !dbg !3889
  %343 = getelementptr inbounds %struct.region, %struct.region* %342, i32 0, i32 1, !dbg !3892
  store i32 %337, i32* %343, align 4, !dbg !3893
  %344 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 9, !dbg !3894
  %345 = load i32, i32* %344, align 4, !dbg !3894
  %346 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !3895
  %347 = load i32, i32* %346, align 4, !dbg !3895
  %348 = uitofp i32 %347 to double, !dbg !3896
  %349 = fmul double %348, 1.000000e+00, !dbg !3897
  %350 = load i32, i32* %11, align 4, !dbg !3898
  %351 = uitofp i32 %350 to double, !dbg !3898
  %352 = fmul double %349, %351, !dbg !3899
  %353 = load i32, i32* %12, align 4, !dbg !3900
  %354 = uitofp i32 %353 to double, !dbg !3900
  %355 = fdiv double %352, %354, !dbg !3901
  %356 = fptoui double %355 to i32, !dbg !3902
  %357 = sub i32 %345, %356, !dbg !3903
  store i32 %357, i32* %10, align 4, !dbg !3904
  %358 = load i32, i32* %10, align 4, !dbg !3905
  %359 = icmp slt i32 %358, 1, !dbg !3907
  br i1 %359, label %360, label %367, !dbg !3908

360:                                              ; preds = %325
  %361 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3909
  %362 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %361, i32 0, i32 19, !dbg !3910
  %363 = load i32, i32* %9, align 4, !dbg !3911
  %364 = sext i32 %363 to i64, !dbg !3909
  %365 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %362, i64 0, i64 %364, !dbg !3909
  %366 = getelementptr inbounds %struct.region, %struct.region* %365, i32 0, i32 2, !dbg !3912
  store i32 0, i32* %366, align 8, !dbg !3913
  br label %376, !dbg !3909

367:                                              ; preds = %325
  %368 = load i32, i32* %10, align 4, !dbg !3914
  %369 = add nsw i32 %368, 1, !dbg !3915
  %370 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3916
  %371 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %370, i32 0, i32 19, !dbg !3917
  %372 = load i32, i32* %9, align 4, !dbg !3918
  %373 = sext i32 %372 to i64, !dbg !3916
  %374 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %371, i64 0, i64 %373, !dbg !3916
  %375 = getelementptr inbounds %struct.region, %struct.region* %374, i32 0, i32 2, !dbg !3919
  store i32 %369, i32* %375, align 8, !dbg !3920
  br label %376

376:                                              ; preds = %367, %360
  %377 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 9, !dbg !3921
  %378 = load i32, i32* %377, align 4, !dbg !3921
  %379 = uitofp i32 %378 to double, !dbg !3922
  %380 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !3923
  %381 = load i32, i32* %380, align 4, !dbg !3923
  %382 = uitofp i32 %381 to double, !dbg !3924
  %383 = fmul double %382, 1.000000e+00, !dbg !3925
  %384 = load i32, i32* %11, align 4, !dbg !3926
  %385 = sub i32 %384, 1, !dbg !3927
  %386 = uitofp i32 %385 to double, !dbg !3928
  %387 = fmul double %383, %386, !dbg !3929
  %388 = load i32, i32* %12, align 4, !dbg !3930
  %389 = uitofp i32 %388 to double, !dbg !3930
  %390 = fdiv double %387, %389, !dbg !3931
  %391 = fsub double %379, %390, !dbg !3932
  %392 = fptosi double %391 to i32, !dbg !3922
  store i32 %392, i32* %10, align 4, !dbg !3933
  %393 = load i32, i32* %10, align 4, !dbg !3934
  %394 = icmp slt i32 %393, 1, !dbg !3936
  br i1 %394, label %395, label %402, !dbg !3937

395:                                              ; preds = %376
  %396 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3938
  %397 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %396, i32 0, i32 19, !dbg !3939
  %398 = load i32, i32* %9, align 4, !dbg !3940
  %399 = sext i32 %398 to i64, !dbg !3938
  %400 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %397, i64 0, i64 %399, !dbg !3938
  %401 = getelementptr inbounds %struct.region, %struct.region* %400, i32 0, i32 3, !dbg !3941
  store i32 0, i32* %401, align 4, !dbg !3942
  br label %429, !dbg !3938

402:                                              ; preds = %376
  %403 = load i32, i32* %10, align 4, !dbg !3943
  %404 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3946
  %405 = getelementptr inbounds %struct.image_data, %struct.image_data* %404, i32 0, i32 3, !dbg !3947
  %406 = load i32, i32* %405, align 4, !dbg !3947
  %407 = sub i32 %406, 1, !dbg !3948
  %408 = icmp sgt i32 %403, %407, !dbg !3949
  br i1 %408, label %409, label %420, !dbg !3950

409:                                              ; preds = %402
  %410 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !3951
  %411 = getelementptr inbounds %struct.image_data, %struct.image_data* %410, i32 0, i32 3, !dbg !3952
  %412 = load i32, i32* %411, align 4, !dbg !3952
  %413 = sub i32 %412, 1, !dbg !3953
  %414 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3954
  %415 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %414, i32 0, i32 19, !dbg !3955
  %416 = load i32, i32* %9, align 4, !dbg !3956
  %417 = sext i32 %416 to i64, !dbg !3954
  %418 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %415, i64 0, i64 %417, !dbg !3954
  %419 = getelementptr inbounds %struct.region, %struct.region* %418, i32 0, i32 3, !dbg !3957
  store i32 %413, i32* %419, align 4, !dbg !3958
  br label %428, !dbg !3954

420:                                              ; preds = %402
  %421 = load i32, i32* %10, align 4, !dbg !3959
  %422 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3960
  %423 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %422, i32 0, i32 19, !dbg !3961
  %424 = load i32, i32* %9, align 4, !dbg !3962
  %425 = sext i32 %424 to i64, !dbg !3960
  %426 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %423, i64 0, i64 %425, !dbg !3960
  %427 = getelementptr inbounds %struct.region, %struct.region* %426, i32 0, i32 3, !dbg !3963
  store i32 %421, i32* %427, align 4, !dbg !3964
  br label %428

428:                                              ; preds = %420, %409
  br label %429

429:                                              ; preds = %428, %395
  %430 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3965
  %431 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %430, i32 0, i32 19, !dbg !3966
  %432 = load i32, i32* %9, align 4, !dbg !3967
  %433 = sext i32 %432 to i64, !dbg !3965
  %434 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %431, i64 0, i64 %433, !dbg !3965
  %435 = getelementptr inbounds %struct.region, %struct.region* %434, i32 0, i32 3, !dbg !3968
  %436 = load i32, i32* %435, align 4, !dbg !3968
  %437 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3969
  %438 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %437, i32 0, i32 19, !dbg !3970
  %439 = load i32, i32* %9, align 4, !dbg !3971
  %440 = sext i32 %439 to i64, !dbg !3969
  %441 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %438, i64 0, i64 %440, !dbg !3969
  %442 = getelementptr inbounds %struct.region, %struct.region* %441, i32 0, i32 2, !dbg !3972
  %443 = load i32, i32* %442, align 8, !dbg !3972
  %444 = sub i32 %436, %443, !dbg !3973
  %445 = add i32 %444, 1, !dbg !3974
  store i32 %445, i32* %16, align 4, !dbg !3975
  %446 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3976
  %447 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %446, i32 0, i32 9, !dbg !3978
  %448 = load i16, i16* %447, align 2, !dbg !3978
  %449 = zext i16 %448 to i32, !dbg !3976
  %450 = icmp eq i32 %449, 0, !dbg !3979
  br i1 %450, label %451, label %457, !dbg !3980

451:                                              ; preds = %429
  %452 = load i32, i32* %16, align 4, !dbg !3981
  %453 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3982
  %454 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %453, i32 0, i32 6, !dbg !3983
  %455 = load i32, i32* %454, align 4, !dbg !3984
  %456 = add i32 %455, %452, !dbg !3984
  store i32 %456, i32* %454, align 4, !dbg !3984
  br label %461, !dbg !3982

457:                                              ; preds = %429
  %458 = load i32, i32* %16, align 4, !dbg !3985
  %459 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3986
  %460 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %459, i32 0, i32 6, !dbg !3987
  store i32 %458, i32* %460, align 4, !dbg !3988
  br label %461

461:                                              ; preds = %457, %451
  %462 = load i32, i32* %15, align 4, !dbg !3989
  %463 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3990
  %464 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %463, i32 0, i32 5, !dbg !3991
  store i32 %462, i32* %464, align 8, !dbg !3992
  br label %723, !dbg !3993

465:                                              ; preds = %179
  %466 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !3994
  %467 = load i32, i32* %466, align 4, !dbg !3994
  store i32 %467, i32* %16, align 4, !dbg !3995
  %468 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 8, !dbg !3996
  %469 = load i32, i32* %468, align 4, !dbg !3996
  %470 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !3997
  %471 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %470, i32 0, i32 19, !dbg !3998
  %472 = load i32, i32* %9, align 4, !dbg !3999
  %473 = sext i32 %472 to i64, !dbg !3997
  %474 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %471, i64 0, i64 %473, !dbg !3997
  %475 = getelementptr inbounds %struct.region, %struct.region* %474, i32 0, i32 2, !dbg !4000
  store i32 %469, i32* %475, align 8, !dbg !4001
  %476 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 9, !dbg !4002
  %477 = load i32, i32* %476, align 4, !dbg !4002
  %478 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4003
  %479 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %478, i32 0, i32 19, !dbg !4004
  %480 = load i32, i32* %9, align 4, !dbg !4005
  %481 = sext i32 %480 to i64, !dbg !4003
  %482 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %479, i64 0, i64 %481, !dbg !4003
  %483 = getelementptr inbounds %struct.region, %struct.region* %482, i32 0, i32 3, !dbg !4006
  store i32 %477, i32* %483, align 4, !dbg !4007
  %484 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !4008
  %485 = load i32, i32* %484, align 4, !dbg !4008
  %486 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !4009
  %487 = load i32, i32* %486, align 4, !dbg !4009
  %488 = load i32, i32* %12, align 4, !dbg !4010
  %489 = load i32, i32* %11, align 4, !dbg !4011
  %490 = sub i32 %488, %489, !dbg !4012
  %491 = mul i32 %487, %490, !dbg !4013
  %492 = uitofp i32 %491 to double, !dbg !4014
  %493 = fmul double %492, 1.000000e+00, !dbg !4015
  %494 = load i32, i32* %12, align 4, !dbg !4016
  %495 = uitofp i32 %494 to double, !dbg !4016
  %496 = fdiv double %493, %495, !dbg !4017
  %497 = fptoui double %496 to i32, !dbg !4018
  %498 = add i32 %485, %497, !dbg !4019
  %499 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4020
  %500 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %499, i32 0, i32 19, !dbg !4021
  %501 = load i32, i32* %9, align 4, !dbg !4022
  %502 = sext i32 %501 to i64, !dbg !4020
  %503 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %500, i64 0, i64 %502, !dbg !4020
  %504 = getelementptr inbounds %struct.region, %struct.region* %503, i32 0, i32 0, !dbg !4023
  store i32 %498, i32* %504, align 8, !dbg !4024
  %505 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !4025
  %506 = load i32, i32* %505, align 4, !dbg !4025
  %507 = uitofp i32 %506 to double, !dbg !4026
  %508 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !4027
  %509 = load i32, i32* %508, align 4, !dbg !4027
  %510 = load i32, i32* %12, align 4, !dbg !4028
  %511 = load i32, i32* %11, align 4, !dbg !4029
  %512 = sub i32 %510, %511, !dbg !4030
  %513 = add i32 %512, 1, !dbg !4031
  %514 = mul i32 %509, %513, !dbg !4032
  %515 = uitofp i32 %514 to double, !dbg !4033
  %516 = fmul double %515, 1.000000e+00, !dbg !4034
  %517 = load i32, i32* %12, align 4, !dbg !4035
  %518 = uitofp i32 %517 to double, !dbg !4035
  %519 = fdiv double %516, %518, !dbg !4036
  %520 = fadd double %507, %519, !dbg !4037
  %521 = fptosi double %520 to i32, !dbg !4026
  store i32 %521, i32* %10, align 4, !dbg !4038
  %522 = load i32, i32* %10, align 4, !dbg !4039
  %523 = icmp slt i32 %522, 1, !dbg !4041
  br i1 %523, label %524, label %531, !dbg !4042

524:                                              ; preds = %465
  %525 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4043
  %526 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %525, i32 0, i32 19, !dbg !4044
  %527 = load i32, i32* %9, align 4, !dbg !4045
  %528 = sext i32 %527 to i64, !dbg !4043
  %529 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %526, i64 0, i64 %528, !dbg !4043
  %530 = getelementptr inbounds %struct.region, %struct.region* %529, i32 0, i32 1, !dbg !4046
  store i32 0, i32* %530, align 4, !dbg !4047
  br label %559, !dbg !4043

531:                                              ; preds = %465
  %532 = load i32, i32* %10, align 4, !dbg !4048
  %533 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !4051
  %534 = getelementptr inbounds %struct.image_data, %struct.image_data* %533, i32 0, i32 2, !dbg !4052
  %535 = load i32, i32* %534, align 4, !dbg !4052
  %536 = sub i32 %535, 1, !dbg !4053
  %537 = icmp sgt i32 %532, %536, !dbg !4054
  br i1 %537, label %538, label %549, !dbg !4055

538:                                              ; preds = %531
  %539 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !4056
  %540 = getelementptr inbounds %struct.image_data, %struct.image_data* %539, i32 0, i32 2, !dbg !4057
  %541 = load i32, i32* %540, align 4, !dbg !4057
  %542 = sub i32 %541, 1, !dbg !4058
  %543 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4059
  %544 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %543, i32 0, i32 19, !dbg !4060
  %545 = load i32, i32* %9, align 4, !dbg !4061
  %546 = sext i32 %545 to i64, !dbg !4059
  %547 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %544, i64 0, i64 %546, !dbg !4059
  %548 = getelementptr inbounds %struct.region, %struct.region* %547, i32 0, i32 1, !dbg !4062
  store i32 %542, i32* %548, align 4, !dbg !4063
  br label %558, !dbg !4059

549:                                              ; preds = %531
  %550 = load i32, i32* %10, align 4, !dbg !4064
  %551 = sub nsw i32 %550, 1, !dbg !4065
  %552 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4066
  %553 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %552, i32 0, i32 19, !dbg !4067
  %554 = load i32, i32* %9, align 4, !dbg !4068
  %555 = sext i32 %554 to i64, !dbg !4066
  %556 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %553, i64 0, i64 %555, !dbg !4066
  %557 = getelementptr inbounds %struct.region, %struct.region* %556, i32 0, i32 1, !dbg !4069
  store i32 %551, i32* %557, align 4, !dbg !4070
  br label %558

558:                                              ; preds = %549, %538
  br label %559

559:                                              ; preds = %558, %524
  %560 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4071
  %561 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %560, i32 0, i32 19, !dbg !4072
  %562 = load i32, i32* %9, align 4, !dbg !4073
  %563 = sext i32 %562 to i64, !dbg !4071
  %564 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %561, i64 0, i64 %563, !dbg !4071
  %565 = getelementptr inbounds %struct.region, %struct.region* %564, i32 0, i32 1, !dbg !4074
  %566 = load i32, i32* %565, align 4, !dbg !4074
  %567 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4075
  %568 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %567, i32 0, i32 19, !dbg !4076
  %569 = load i32, i32* %9, align 4, !dbg !4077
  %570 = sext i32 %569 to i64, !dbg !4075
  %571 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %568, i64 0, i64 %570, !dbg !4075
  %572 = getelementptr inbounds %struct.region, %struct.region* %571, i32 0, i32 0, !dbg !4078
  %573 = load i32, i32* %572, align 8, !dbg !4078
  %574 = sub i32 %566, %573, !dbg !4079
  %575 = add i32 %574, 1, !dbg !4080
  store i32 %575, i32* %15, align 4, !dbg !4081
  %576 = load i32, i32* %16, align 4, !dbg !4082
  %577 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4083
  %578 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %577, i32 0, i32 6, !dbg !4084
  store i32 %576, i32* %578, align 4, !dbg !4085
  %579 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4086
  %580 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %579, i32 0, i32 9, !dbg !4088
  %581 = load i16, i16* %580, align 2, !dbg !4088
  %582 = zext i16 %581 to i32, !dbg !4086
  %583 = icmp eq i32 %582, 0, !dbg !4089
  br i1 %583, label %584, label %590, !dbg !4090

584:                                              ; preds = %559
  %585 = load i32, i32* %15, align 4, !dbg !4091
  %586 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4092
  %587 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %586, i32 0, i32 5, !dbg !4093
  %588 = load i32, i32* %587, align 8, !dbg !4094
  %589 = add i32 %588, %585, !dbg !4094
  store i32 %589, i32* %587, align 8, !dbg !4094
  br label %594, !dbg !4092

590:                                              ; preds = %559
  %591 = load i32, i32* %15, align 4, !dbg !4095
  %592 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4096
  %593 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %592, i32 0, i32 5, !dbg !4097
  store i32 %591, i32* %593, align 8, !dbg !4098
  br label %594

594:                                              ; preds = %590, %584
  br label %723, !dbg !4099

595:                                              ; preds = %179
  br label %596, !dbg !4099

596:                                              ; preds = %595, %179
  %597 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 4, !dbg !4100
  %598 = load i32, i32* %597, align 4, !dbg !4100
  store i32 %598, i32* %15, align 4, !dbg !4101
  %599 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 6, !dbg !4102
  %600 = load i32, i32* %599, align 4, !dbg !4102
  %601 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4103
  %602 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %601, i32 0, i32 19, !dbg !4104
  %603 = load i32, i32* %9, align 4, !dbg !4105
  %604 = sext i32 %603 to i64, !dbg !4103
  %605 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %602, i64 0, i64 %604, !dbg !4103
  %606 = getelementptr inbounds %struct.region, %struct.region* %605, i32 0, i32 0, !dbg !4106
  store i32 %600, i32* %606, align 8, !dbg !4107
  %607 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 7, !dbg !4108
  %608 = load i32, i32* %607, align 4, !dbg !4108
  %609 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4109
  %610 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %609, i32 0, i32 19, !dbg !4110
  %611 = load i32, i32* %9, align 4, !dbg !4111
  %612 = sext i32 %611 to i64, !dbg !4109
  %613 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %610, i64 0, i64 %612, !dbg !4109
  %614 = getelementptr inbounds %struct.region, %struct.region* %613, i32 0, i32 1, !dbg !4112
  store i32 %608, i32* %614, align 4, !dbg !4113
  %615 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 8, !dbg !4114
  %616 = load i32, i32* %615, align 4, !dbg !4114
  %617 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !4115
  %618 = load i32, i32* %617, align 4, !dbg !4115
  %619 = uitofp i32 %618 to double, !dbg !4116
  %620 = fmul double %619, 1.000000e+00, !dbg !4117
  %621 = load i32, i32* %11, align 4, !dbg !4118
  %622 = sub i32 %621, 1, !dbg !4119
  %623 = uitofp i32 %622 to double, !dbg !4120
  %624 = fmul double %620, %623, !dbg !4121
  %625 = load i32, i32* %12, align 4, !dbg !4122
  %626 = uitofp i32 %625 to double, !dbg !4122
  %627 = fdiv double %624, %626, !dbg !4123
  %628 = fptoui double %627 to i32, !dbg !4124
  %629 = add i32 %616, %628, !dbg !4125
  %630 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4126
  %631 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %630, i32 0, i32 19, !dbg !4127
  %632 = load i32, i32* %9, align 4, !dbg !4128
  %633 = sext i32 %632 to i64, !dbg !4126
  %634 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %631, i64 0, i64 %633, !dbg !4126
  %635 = getelementptr inbounds %struct.region, %struct.region* %634, i32 0, i32 2, !dbg !4129
  store i32 %629, i32* %635, align 8, !dbg !4130
  %636 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 8, !dbg !4131
  %637 = load i32, i32* %636, align 4, !dbg !4131
  %638 = getelementptr inbounds %struct.offset, %struct.offset* %8, i32 0, i32 5, !dbg !4132
  %639 = load i32, i32* %638, align 4, !dbg !4132
  %640 = uitofp i32 %639 to double, !dbg !4133
  %641 = fmul double %640, 1.000000e+00, !dbg !4134
  %642 = load i32, i32* %11, align 4, !dbg !4135
  %643 = uitofp i32 %642 to double, !dbg !4135
  %644 = fmul double %641, %643, !dbg !4136
  %645 = load i32, i32* %12, align 4, !dbg !4137
  %646 = uitofp i32 %645 to double, !dbg !4137
  %647 = fdiv double %644, %646, !dbg !4138
  %648 = fptoui double %647 to i32, !dbg !4139
  %649 = add i32 %637, %648, !dbg !4140
  store i32 %649, i32* %10, align 4, !dbg !4141
  %650 = load i32, i32* %10, align 4, !dbg !4142
  %651 = icmp slt i32 %650, 1, !dbg !4144
  br i1 %651, label %652, label %659, !dbg !4145

652:                                              ; preds = %596
  %653 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4146
  %654 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %653, i32 0, i32 19, !dbg !4147
  %655 = load i32, i32* %9, align 4, !dbg !4148
  %656 = sext i32 %655 to i64, !dbg !4146
  %657 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %654, i64 0, i64 %656, !dbg !4146
  %658 = getelementptr inbounds %struct.region, %struct.region* %657, i32 0, i32 3, !dbg !4149
  store i32 0, i32* %658, align 4, !dbg !4150
  br label %687, !dbg !4146

659:                                              ; preds = %596
  %660 = load i32, i32* %10, align 4, !dbg !4151
  %661 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !4154
  %662 = getelementptr inbounds %struct.image_data, %struct.image_data* %661, i32 0, i32 3, !dbg !4155
  %663 = load i32, i32* %662, align 4, !dbg !4155
  %664 = sub i32 %663, 1, !dbg !4156
  %665 = icmp sgt i32 %660, %664, !dbg !4157
  br i1 %665, label %666, label %677, !dbg !4158

666:                                              ; preds = %659
  %667 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !4159
  %668 = getelementptr inbounds %struct.image_data, %struct.image_data* %667, i32 0, i32 3, !dbg !4160
  %669 = load i32, i32* %668, align 4, !dbg !4160
  %670 = sub i32 %669, 1, !dbg !4161
  %671 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4162
  %672 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %671, i32 0, i32 19, !dbg !4163
  %673 = load i32, i32* %9, align 4, !dbg !4164
  %674 = sext i32 %673 to i64, !dbg !4162
  %675 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %672, i64 0, i64 %674, !dbg !4162
  %676 = getelementptr inbounds %struct.region, %struct.region* %675, i32 0, i32 3, !dbg !4165
  store i32 %670, i32* %676, align 4, !dbg !4166
  br label %686, !dbg !4162

677:                                              ; preds = %659
  %678 = load i32, i32* %10, align 4, !dbg !4167
  %679 = sub nsw i32 %678, 1, !dbg !4168
  %680 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4169
  %681 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %680, i32 0, i32 19, !dbg !4170
  %682 = load i32, i32* %9, align 4, !dbg !4171
  %683 = sext i32 %682 to i64, !dbg !4169
  %684 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %681, i64 0, i64 %683, !dbg !4169
  %685 = getelementptr inbounds %struct.region, %struct.region* %684, i32 0, i32 3, !dbg !4172
  store i32 %679, i32* %685, align 4, !dbg !4173
  br label %686

686:                                              ; preds = %677, %666
  br label %687

687:                                              ; preds = %686, %652
  %688 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4174
  %689 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %688, i32 0, i32 19, !dbg !4175
  %690 = load i32, i32* %9, align 4, !dbg !4176
  %691 = sext i32 %690 to i64, !dbg !4174
  %692 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %689, i64 0, i64 %691, !dbg !4174
  %693 = getelementptr inbounds %struct.region, %struct.region* %692, i32 0, i32 3, !dbg !4177
  %694 = load i32, i32* %693, align 4, !dbg !4177
  %695 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4178
  %696 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %695, i32 0, i32 19, !dbg !4179
  %697 = load i32, i32* %9, align 4, !dbg !4180
  %698 = sext i32 %697 to i64, !dbg !4178
  %699 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %696, i64 0, i64 %698, !dbg !4178
  %700 = getelementptr inbounds %struct.region, %struct.region* %699, i32 0, i32 2, !dbg !4181
  %701 = load i32, i32* %700, align 8, !dbg !4181
  %702 = sub i32 %694, %701, !dbg !4182
  %703 = add i32 %702, 1, !dbg !4183
  store i32 %703, i32* %16, align 4, !dbg !4184
  %704 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4185
  %705 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %704, i32 0, i32 9, !dbg !4187
  %706 = load i16, i16* %705, align 2, !dbg !4187
  %707 = zext i16 %706 to i32, !dbg !4185
  %708 = icmp eq i32 %707, 0, !dbg !4188
  br i1 %708, label %709, label %715, !dbg !4189

709:                                              ; preds = %687
  %710 = load i32, i32* %16, align 4, !dbg !4190
  %711 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4191
  %712 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %711, i32 0, i32 6, !dbg !4192
  %713 = load i32, i32* %712, align 4, !dbg !4193
  %714 = add i32 %713, %710, !dbg !4193
  store i32 %714, i32* %712, align 4, !dbg !4193
  br label %719, !dbg !4191

715:                                              ; preds = %687
  %716 = load i32, i32* %16, align 4, !dbg !4194
  %717 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4195
  %718 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %717, i32 0, i32 6, !dbg !4196
  store i32 %716, i32* %718, align 4, !dbg !4197
  br label %719

719:                                              ; preds = %715, %709
  %720 = load i32, i32* %15, align 4, !dbg !4198
  %721 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4199
  %722 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %721, i32 0, i32 5, !dbg !4200
  store i32 %720, i32* %722, align 8, !dbg !4201
  br label %723, !dbg !4202

723:                                              ; preds = %719, %594, %461, %324
  %724 = load i32, i32* %15, align 4, !dbg !4203
  %725 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !4204
  %726 = getelementptr inbounds %struct.image_data, %struct.image_data* %725, i32 0, i32 5, !dbg !4205
  %727 = load i16, i16* %726, align 2, !dbg !4205
  %728 = zext i16 %727 to i32, !dbg !4204
  %729 = mul i32 %724, %728, !dbg !4206
  %730 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !4207
  %731 = getelementptr inbounds %struct.image_data, %struct.image_data* %730, i32 0, i32 6, !dbg !4208
  %732 = load i16, i16* %731, align 4, !dbg !4208
  %733 = zext i16 %732 to i32, !dbg !4207
  %734 = mul i32 %729, %733, !dbg !4209
  %735 = add i32 %734, 7, !dbg !4210
  %736 = udiv i32 %735, 8, !dbg !4211
  %737 = load i32, i32* %16, align 4, !dbg !4212
  %738 = add i32 %737, 1, !dbg !4213
  %739 = mul i32 %736, %738, !dbg !4214
  store i32 %739, i32* %14, align 4, !dbg !4215
  %740 = load i32, i32* %15, align 4, !dbg !4216
  %741 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4217
  %742 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %741, i32 0, i32 19, !dbg !4218
  %743 = load i32, i32* %9, align 4, !dbg !4219
  %744 = sext i32 %743 to i64, !dbg !4217
  %745 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %742, i64 0, i64 %744, !dbg !4217
  %746 = getelementptr inbounds %struct.region, %struct.region* %745, i32 0, i32 4, !dbg !4220
  store i32 %740, i32* %746, align 8, !dbg !4221
  %747 = load i32, i32* %16, align 4, !dbg !4222
  %748 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4223
  %749 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %748, i32 0, i32 19, !dbg !4224
  %750 = load i32, i32* %9, align 4, !dbg !4225
  %751 = sext i32 %750 to i64, !dbg !4223
  %752 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %749, i64 0, i64 %751, !dbg !4223
  %753 = getelementptr inbounds %struct.region, %struct.region* %752, i32 0, i32 5, !dbg !4226
  store i32 %747, i32* %753, align 4, !dbg !4227
  %754 = load i32, i32* %14, align 4, !dbg !4228
  %755 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4229
  %756 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %755, i32 0, i32 19, !dbg !4230
  %757 = load i32, i32* %9, align 4, !dbg !4231
  %758 = sext i32 %757 to i64, !dbg !4229
  %759 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %756, i64 0, i64 %758, !dbg !4229
  %760 = getelementptr inbounds %struct.region, %struct.region* %759, i32 0, i32 6, !dbg !4232
  store i32 %754, i32* %760, align 8, !dbg !4233
  %761 = load i32, i32* %14, align 4, !dbg !4234
  %762 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4235
  %763 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %762, i32 0, i32 7, !dbg !4236
  %764 = load i32, i32* %763, align 8, !dbg !4237
  %765 = add i32 %764, %761, !dbg !4237
  store i32 %765, i32* %763, align 8, !dbg !4237
  %766 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !4238
  %767 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %766, i32 0, i32 7, !dbg !4240
  %768 = load %struct._IO_FILE*, %struct._IO_FILE** %767, align 8, !dbg !4240
  %769 = icmp ne %struct._IO_FILE* %768, null, !dbg !4241
  br i1 %769, label %770, label %809, !dbg !4242

770:                                              ; preds = %723
  %771 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !4243
  %772 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %771, i32 0, i32 7, !dbg !4244
  %773 = load %struct._IO_FILE*, %struct._IO_FILE** %772, align 8, !dbg !4244
  %774 = load %struct.dump_opts*, %struct.dump_opts** %7, align 8, !dbg !4245
  %775 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %774, i32 0, i32 1, !dbg !4246
  %776 = load i32, i32* %775, align 4, !dbg !4246
  %777 = load i32, i32* %9, align 4, !dbg !4247
  %778 = add nsw i32 %777, 1, !dbg !4248
  %779 = load i32, i32* %15, align 4, !dbg !4249
  %780 = load i32, i32* %16, align 4, !dbg !4250
  %781 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4251
  %782 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %781, i32 0, i32 19, !dbg !4252
  %783 = load i32, i32* %9, align 4, !dbg !4253
  %784 = sext i32 %783 to i64, !dbg !4251
  %785 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %782, i64 0, i64 %784, !dbg !4251
  %786 = getelementptr inbounds %struct.region, %struct.region* %785, i32 0, i32 0, !dbg !4254
  %787 = load i32, i32* %786, align 8, !dbg !4254
  %788 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4255
  %789 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %788, i32 0, i32 19, !dbg !4256
  %790 = load i32, i32* %9, align 4, !dbg !4257
  %791 = sext i32 %790 to i64, !dbg !4255
  %792 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %789, i64 0, i64 %791, !dbg !4255
  %793 = getelementptr inbounds %struct.region, %struct.region* %792, i32 0, i32 1, !dbg !4258
  %794 = load i32, i32* %793, align 4, !dbg !4258
  %795 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4259
  %796 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %795, i32 0, i32 19, !dbg !4260
  %797 = load i32, i32* %9, align 4, !dbg !4261
  %798 = sext i32 %797 to i64, !dbg !4259
  %799 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %796, i64 0, i64 %798, !dbg !4259
  %800 = getelementptr inbounds %struct.region, %struct.region* %799, i32 0, i32 2, !dbg !4262
  %801 = load i32, i32* %800, align 8, !dbg !4262
  %802 = load %struct.crop_mask*, %struct.crop_mask** %6, align 8, !dbg !4263
  %803 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %802, i32 0, i32 19, !dbg !4264
  %804 = load i32, i32* %9, align 4, !dbg !4265
  %805 = sext i32 %804 to i64, !dbg !4263
  %806 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %803, i64 0, i64 %805, !dbg !4263
  %807 = getelementptr inbounds %struct.region, %struct.region* %806, i32 0, i32 3, !dbg !4266
  %808 = load i32, i32* %807, align 4, !dbg !4266
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %773, i32 %776, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.226, i64 0, i64 0), i32 %778, i32 %779, i32 %780, i32 %787, i32 %794, i32 %801, i32 %808), !dbg !4267
  br label %809, !dbg !4267

809:                                              ; preds = %770, %723
  br label %810, !dbg !4268

810:                                              ; preds = %809
  %811 = load i32, i32* %9, align 4, !dbg !4269
  %812 = add nsw i32 %811, 1, !dbg !4269
  store i32 %812, i32* %9, align 4, !dbg !4269
  br label %172, !dbg !4270, !llvm.loop !4271

813:                                              ; preds = %172
  store i32 0, i32* %4, align 4, !dbg !4273
  br label %814, !dbg !4273

814:                                              ; preds = %813, %138, %71, %58
  %815 = load i32, i32* %4, align 4, !dbg !4274
  ret i32 %815, !dbg !4274
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @processCropSelections(%struct.image_data*, %struct.crop_mask*, i8**, %struct.buffinfo*) #0 !dbg !4275 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.image_data*, align 8
  %7 = alloca %struct.crop_mask*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca %struct.buffinfo*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  store %struct.image_data* %0, %struct.image_data** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %6, metadata !4278, metadata !DIExpression()), !dbg !4279
  store %struct.crop_mask* %1, %struct.crop_mask** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %7, metadata !4280, metadata !DIExpression()), !dbg !4281
  store i8** %2, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !4282, metadata !DIExpression()), !dbg !4283
  store %struct.buffinfo* %3, %struct.buffinfo** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.buffinfo** %9, metadata !4284, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4286, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4288, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4290, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4292, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4294, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.declare(metadata i64* %15, metadata !4296, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4298, metadata !DIExpression()), !dbg !4299
  store i8* null, i8** %16, align 8, !dbg !4299
  call void @llvm.dbg.declare(metadata i8** %17, metadata !4300, metadata !DIExpression()), !dbg !4301
  store i8* null, i8** %17, align 8, !dbg !4301
  call void @llvm.dbg.declare(metadata i8** %18, metadata !4302, metadata !DIExpression()), !dbg !4303
  store i8* null, i8** %18, align 8, !dbg !4303
  call void @llvm.dbg.declare(metadata i64* %19, metadata !4304, metadata !DIExpression()), !dbg !4305
  store i64 0, i64* %19, align 8, !dbg !4305
  %20 = load i8**, i8*** %8, align 8, !dbg !4306
  %21 = load i8*, i8** %20, align 8, !dbg !4307
  store i8* %21, i8** %17, align 8, !dbg !4308
  %22 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4309
  %23 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %22, i32 0, i32 8, !dbg !4311
  %24 = load i16, i16* %23, align 4, !dbg !4311
  %25 = zext i16 %24 to i32, !dbg !4309
  %26 = icmp eq i32 %25, 0, !dbg !4312
  br i1 %26, label %27, label %233, !dbg !4313

27:                                               ; preds = %4
  %28 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4314
  %29 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %28, i32 0, i32 7, !dbg !4316
  %30 = load i32, i32* %29, align 8, !dbg !4316
  %31 = zext i32 %30 to i64, !dbg !4314
  store i64 %31, i64* %15, align 8, !dbg !4317
  %32 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4318
  %33 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %32, i64 0, !dbg !4318
  %34 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %33, i32 0, i32 1, !dbg !4319
  %35 = load i8*, i8** %34, align 8, !dbg !4319
  store i8* %35, i8** %16, align 8, !dbg !4320
  %36 = load i8*, i8** %16, align 8, !dbg !4321
  %37 = icmp ne i8* %36, null, !dbg !4321
  br i1 %37, label %41, label %38, !dbg !4323

38:                                               ; preds = %27
  %39 = load i64, i64* %15, align 8, !dbg !4324
  %40 = call i8* @_TIFFmalloc(i64 %39), !dbg !4325
  store i8* %40, i8** %16, align 8, !dbg !4326
  br label %64, !dbg !4327

41:                                               ; preds = %27
  %42 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4328
  %43 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %42, i64 0, !dbg !4328
  %44 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %43, i32 0, i32 0, !dbg !4330
  %45 = load i32, i32* %44, align 8, !dbg !4330
  %46 = zext i32 %45 to i64, !dbg !4328
  store i64 %46, i64* %19, align 8, !dbg !4331
  %47 = load i64, i64* %19, align 8, !dbg !4332
  %48 = load i64, i64* %15, align 8, !dbg !4334
  %49 = icmp slt i64 %47, %48, !dbg !4335
  br i1 %49, label %50, label %63, !dbg !4336

50:                                               ; preds = %41
  %51 = load i8*, i8** %16, align 8, !dbg !4337
  %52 = load i64, i64* %15, align 8, !dbg !4339
  %53 = call i8* @_TIFFrealloc(i8* %51, i64 %52), !dbg !4340
  store i8* %53, i8** %18, align 8, !dbg !4341
  %54 = load i8*, i8** %18, align 8, !dbg !4342
  %55 = icmp ne i8* %54, null, !dbg !4342
  br i1 %55, label %60, label %56, !dbg !4344

56:                                               ; preds = %50
  %57 = load i8*, i8** %16, align 8, !dbg !4345
  call void @_TIFFfree(i8* %57), !dbg !4347
  %58 = load i64, i64* %15, align 8, !dbg !4348
  %59 = call i8* @_TIFFmalloc(i64 %58), !dbg !4349
  store i8* %59, i8** %16, align 8, !dbg !4350
  br label %62, !dbg !4351

60:                                               ; preds = %50
  %61 = load i8*, i8** %18, align 8, !dbg !4352
  store i8* %61, i8** %16, align 8, !dbg !4353
  br label %62

62:                                               ; preds = %60, %56
  br label %63, !dbg !4354

63:                                               ; preds = %62, %41
  br label %64

64:                                               ; preds = %63, %38
  %65 = load i8*, i8** %16, align 8, !dbg !4355
  %66 = icmp ne i8* %65, null, !dbg !4355
  br i1 %66, label %68, label %67, !dbg !4357

67:                                               ; preds = %64
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.381, i64 0, i64 0)), !dbg !4358
  store i32 -1, i32* %5, align 4, !dbg !4360
  br label %510, !dbg !4360

68:                                               ; preds = %64
  %69 = load i8*, i8** %16, align 8, !dbg !4361
  %70 = load i64, i64* %15, align 8, !dbg !4362
  call void @_TIFFmemset(i8* %69, i32 0, i64 %70), !dbg !4363
  %71 = load i8*, i8** %16, align 8, !dbg !4364
  %72 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4365
  %73 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %72, i64 0, !dbg !4365
  %74 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %73, i32 0, i32 1, !dbg !4366
  store i8* %71, i8** %74, align 8, !dbg !4367
  %75 = load i64, i64* %15, align 8, !dbg !4368
  %76 = trunc i64 %75 to i32, !dbg !4368
  %77 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4369
  %78 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %77, i64 0, !dbg !4369
  %79 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %78, i32 0, i32 0, !dbg !4370
  store i32 %76, i32* %79, align 8, !dbg !4371
  %80 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4372
  %81 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4374
  %82 = load i8*, i8** %17, align 8, !dbg !4375
  %83 = load i8*, i8** %16, align 8, !dbg !4376
  %84 = call i32 @extractCompositeRegions(%struct.image_data* %80, %struct.crop_mask* %81, i8* %82, i8* %83), !dbg !4377
  %85 = icmp ne i32 %84, 0, !dbg !4378
  br i1 %85, label %86, label %87, !dbg !4379

86:                                               ; preds = %68
  store i32 1, i32* %5, align 4, !dbg !4380
  br label %510, !dbg !4380

87:                                               ; preds = %68
  %88 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4381
  %89 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %88, i32 0, i32 10, !dbg !4383
  %90 = load i16, i16* %89, align 8, !dbg !4383
  %91 = zext i16 %90 to i32, !dbg !4381
  %92 = and i32 %91, 128, !dbg !4384
  %93 = icmp ne i32 %92, 0, !dbg !4384
  br i1 %93, label %94, label %147, !dbg !4385

94:                                               ; preds = %87
  %95 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4386
  %96 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %95, i32 0, i32 16, !dbg !4388
  %97 = load i16, i16* %96, align 4, !dbg !4388
  %98 = zext i16 %97 to i32, !dbg !4386
  switch i32 %98, label %145 [
    i32 0, label %99
    i32 1, label %99
    i32 10, label %105
    i32 11, label %105
  ], !dbg !4389

99:                                               ; preds = %94, %94
  %100 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4390
  %101 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %100, i32 0, i32 16, !dbg !4392
  %102 = load i16, i16* %101, align 4, !dbg !4392
  %103 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4393
  %104 = getelementptr inbounds %struct.image_data, %struct.image_data* %103, i32 0, i32 8, !dbg !4394
  store i16 %102, i16* %104, align 4, !dbg !4395
  br label %146, !dbg !4396

105:                                              ; preds = %94, %94
  %106 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4397
  %107 = getelementptr inbounds %struct.image_data, %struct.image_data* %106, i32 0, i32 8, !dbg !4399
  %108 = load i16, i16* %107, align 4, !dbg !4399
  %109 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4400
  %110 = getelementptr inbounds %struct.image_data, %struct.image_data* %109, i32 0, i32 6, !dbg !4401
  %111 = load i16, i16* %110, align 4, !dbg !4401
  %112 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4402
  %113 = getelementptr inbounds %struct.image_data, %struct.image_data* %112, i32 0, i32 5, !dbg !4403
  %114 = load i16, i16* %113, align 2, !dbg !4403
  %115 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4404
  %116 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %115, i32 0, i32 5, !dbg !4405
  %117 = load i32, i32* %116, align 8, !dbg !4405
  %118 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4406
  %119 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %118, i32 0, i32 6, !dbg !4407
  %120 = load i32, i32* %119, align 4, !dbg !4407
  %121 = load i8*, i8** %16, align 8, !dbg !4408
  %122 = call i32 @invertImage(i16 zeroext %108, i16 zeroext %111, i16 zeroext %114, i32 %117, i32 %120, i8* %121), !dbg !4409
  %123 = icmp ne i32 %122, 0, !dbg !4409
  br i1 %123, label %124, label %125, !dbg !4410

124:                                              ; preds = %105
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.382, i64 0, i64 0)), !dbg !4411
  store i32 -1, i32* %5, align 4, !dbg !4413
  br label %510, !dbg !4413

125:                                              ; preds = %105
  %126 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4414
  %127 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %126, i32 0, i32 16, !dbg !4416
  %128 = load i16, i16* %127, align 4, !dbg !4416
  %129 = zext i16 %128 to i32, !dbg !4414
  %130 = icmp eq i32 %129, 11, !dbg !4417
  br i1 %130, label %131, label %144, !dbg !4418

131:                                              ; preds = %125
  %132 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4419
  %133 = getelementptr inbounds %struct.image_data, %struct.image_data* %132, i32 0, i32 8, !dbg !4421
  %134 = load i16, i16* %133, align 4, !dbg !4421
  %135 = zext i16 %134 to i32, !dbg !4419
  switch i32 %135, label %142 [
    i32 0, label %136
    i32 1, label %139
  ], !dbg !4422

136:                                              ; preds = %131
  %137 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4423
  %138 = getelementptr inbounds %struct.image_data, %struct.image_data* %137, i32 0, i32 8, !dbg !4425
  store i16 1, i16* %138, align 4, !dbg !4426
  br label %143, !dbg !4427

139:                                              ; preds = %131
  %140 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4428
  %141 = getelementptr inbounds %struct.image_data, %struct.image_data* %140, i32 0, i32 8, !dbg !4429
  store i16 0, i16* %141, align 4, !dbg !4430
  br label %143, !dbg !4431

142:                                              ; preds = %131
  br label %143, !dbg !4432

143:                                              ; preds = %142, %139, %136
  br label %144, !dbg !4433

144:                                              ; preds = %143, %125
  br label %146, !dbg !4434

145:                                              ; preds = %94
  br label %146, !dbg !4435

146:                                              ; preds = %145, %144, %99
  br label %147, !dbg !4436

147:                                              ; preds = %146, %87
  %148 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4437
  %149 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %148, i32 0, i32 10, !dbg !4439
  %150 = load i16, i16* %149, align 8, !dbg !4439
  %151 = zext i16 %150 to i32, !dbg !4437
  %152 = and i32 %151, 64, !dbg !4440
  %153 = icmp ne i32 %152, 0, !dbg !4440
  br i1 %153, label %154, label %182, !dbg !4441

154:                                              ; preds = %147
  %155 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4442
  %156 = getelementptr inbounds %struct.image_data, %struct.image_data* %155, i32 0, i32 6, !dbg !4445
  %157 = load i16, i16* %156, align 4, !dbg !4445
  %158 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4446
  %159 = getelementptr inbounds %struct.image_data, %struct.image_data* %158, i32 0, i32 5, !dbg !4447
  %160 = load i16, i16* %159, align 2, !dbg !4447
  %161 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4448
  %162 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %161, i32 0, i32 14, !dbg !4449
  %163 = load i16, i16* %162, align 8, !dbg !4449
  %164 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4450
  %165 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %164, i32 0, i32 5, !dbg !4451
  %166 = load i32, i32* %165, align 8, !dbg !4451
  %167 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4452
  %168 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %167, i32 0, i32 6, !dbg !4453
  %169 = load i32, i32* %168, align 4, !dbg !4453
  %170 = load i8*, i8** %16, align 8, !dbg !4454
  %171 = call i32 @mirrorImage(i16 zeroext %157, i16 zeroext %160, i16 zeroext %163, i32 %166, i32 %169, i8* %170), !dbg !4455
  %172 = icmp ne i32 %171, 0, !dbg !4455
  br i1 %172, label %173, label %181, !dbg !4456

173:                                              ; preds = %154
  %174 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4457
  %175 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %174, i32 0, i32 13, !dbg !4459
  %176 = load i16, i16* %175, align 2, !dbg !4459
  %177 = zext i16 %176 to i32, !dbg !4457
  %178 = icmp eq i32 %177, 1, !dbg !4460
  %179 = zext i1 %178 to i64, !dbg !4461
  %180 = select i1 %178, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.384, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.385, i64 0, i64 0), !dbg !4461
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.383, i64 0, i64 0), i8* %180), !dbg !4462
  store i32 -1, i32* %5, align 4, !dbg !4463
  br label %510, !dbg !4463

181:                                              ; preds = %154
  br label %182, !dbg !4464

182:                                              ; preds = %181, %147
  %183 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4465
  %184 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %183, i32 0, i32 10, !dbg !4467
  %185 = load i16, i16* %184, align 8, !dbg !4467
  %186 = zext i16 %185 to i32, !dbg !4465
  %187 = and i32 %186, 32, !dbg !4468
  %188 = icmp ne i32 %187, 0, !dbg !4468
  br i1 %188, label %189, label %232, !dbg !4469

189:                                              ; preds = %182
  %190 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4470
  %191 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %190, i32 0, i32 13, !dbg !4473
  %192 = load i16, i16* %191, align 2, !dbg !4473
  %193 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4474
  %194 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4475
  %195 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %194, i32 0, i32 5, !dbg !4476
  %196 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4477
  %197 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %196, i32 0, i32 6, !dbg !4478
  %198 = call i32 @rotateImage(i16 zeroext %192, %struct.image_data* %193, i32* %195, i32* %197, i8** %16), !dbg !4479
  %199 = icmp ne i32 %198, 0, !dbg !4479
  br i1 %199, label %200, label %205, !dbg !4480

200:                                              ; preds = %189
  %201 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4481
  %202 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %201, i32 0, i32 13, !dbg !4483
  %203 = load i16, i16* %202, align 2, !dbg !4483
  %204 = zext i16 %203 to i32, !dbg !4481
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.386, i64 0, i64 0), i32 %204), !dbg !4484
  store i32 -1, i32* %5, align 4, !dbg !4485
  br label %510, !dbg !4485

205:                                              ; preds = %189
  %206 = load i8*, i8** %16, align 8, !dbg !4486
  %207 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4487
  %208 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %207, i64 0, !dbg !4487
  %209 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %208, i32 0, i32 1, !dbg !4488
  store i8* %206, i8** %209, align 8, !dbg !4489
  %210 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4490
  %211 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %210, i32 0, i32 5, !dbg !4491
  %212 = load i32, i32* %211, align 8, !dbg !4491
  %213 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4492
  %214 = getelementptr inbounds %struct.image_data, %struct.image_data* %213, i32 0, i32 5, !dbg !4493
  %215 = load i16, i16* %214, align 2, !dbg !4493
  %216 = zext i16 %215 to i32, !dbg !4492
  %217 = mul i32 %212, %216, !dbg !4494
  %218 = add i32 %217, 7, !dbg !4495
  %219 = udiv i32 %218, 8, !dbg !4496
  %220 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4497
  %221 = getelementptr inbounds %struct.image_data, %struct.image_data* %220, i32 0, i32 6, !dbg !4498
  %222 = load i16, i16* %221, align 4, !dbg !4498
  %223 = zext i16 %222 to i32, !dbg !4497
  %224 = mul i32 %219, %223, !dbg !4499
  %225 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4500
  %226 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %225, i32 0, i32 6, !dbg !4501
  %227 = load i32, i32* %226, align 4, !dbg !4501
  %228 = mul i32 %224, %227, !dbg !4502
  %229 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4503
  %230 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %229, i64 0, !dbg !4503
  %231 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %230, i32 0, i32 0, !dbg !4504
  store i32 %228, i32* %231, align 8, !dbg !4505
  br label %232, !dbg !4506

232:                                              ; preds = %205, %182
  br label %509, !dbg !4507

233:                                              ; preds = %4
  store i32 0, i32* %14, align 4, !dbg !4508
  store i32 0, i32* %13, align 4, !dbg !4510
  store i32 0, i32* %10, align 4, !dbg !4511
  br label %234, !dbg !4513

234:                                              ; preds = %505, %233
  %235 = load i32, i32* %10, align 4, !dbg !4514
  %236 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4516
  %237 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %236, i32 0, i32 17, !dbg !4517
  %238 = load i16, i16* %237, align 2, !dbg !4517
  %239 = zext i16 %238 to i32, !dbg !4516
  %240 = icmp slt i32 %235, %239, !dbg !4518
  br i1 %240, label %241, label %508, !dbg !4519

241:                                              ; preds = %234
  %242 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4520
  %243 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %242, i32 0, i32 7, !dbg !4522
  %244 = load i32, i32* %243, align 8, !dbg !4522
  %245 = zext i32 %244 to i64, !dbg !4520
  store i64 %245, i64* %15, align 8, !dbg !4523
  %246 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4524
  %247 = load i32, i32* %10, align 4, !dbg !4525
  %248 = sext i32 %247 to i64, !dbg !4524
  %249 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %246, i64 %248, !dbg !4524
  %250 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %249, i32 0, i32 1, !dbg !4526
  %251 = load i8*, i8** %250, align 8, !dbg !4526
  store i8* %251, i8** %16, align 8, !dbg !4527
  %252 = load i8*, i8** %16, align 8, !dbg !4528
  %253 = icmp ne i8* %252, null, !dbg !4528
  br i1 %253, label %257, label %254, !dbg !4530

254:                                              ; preds = %241
  %255 = load i64, i64* %15, align 8, !dbg !4531
  %256 = call i8* @_TIFFmalloc(i64 %255), !dbg !4532
  store i8* %256, i8** %16, align 8, !dbg !4533
  br label %280, !dbg !4534

257:                                              ; preds = %241
  %258 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4535
  %259 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %258, i64 0, !dbg !4535
  %260 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %259, i32 0, i32 0, !dbg !4537
  %261 = load i32, i32* %260, align 8, !dbg !4537
  %262 = zext i32 %261 to i64, !dbg !4535
  store i64 %262, i64* %19, align 8, !dbg !4538
  %263 = load i64, i64* %19, align 8, !dbg !4539
  %264 = load i64, i64* %15, align 8, !dbg !4541
  %265 = icmp slt i64 %263, %264, !dbg !4542
  br i1 %265, label %266, label %279, !dbg !4543

266:                                              ; preds = %257
  %267 = load i8*, i8** %16, align 8, !dbg !4544
  %268 = load i64, i64* %15, align 8, !dbg !4546
  %269 = call i8* @_TIFFrealloc(i8* %267, i64 %268), !dbg !4547
  store i8* %269, i8** %18, align 8, !dbg !4548
  %270 = load i8*, i8** %18, align 8, !dbg !4549
  %271 = icmp ne i8* %270, null, !dbg !4549
  br i1 %271, label %276, label %272, !dbg !4551

272:                                              ; preds = %266
  %273 = load i8*, i8** %16, align 8, !dbg !4552
  call void @_TIFFfree(i8* %273), !dbg !4554
  %274 = load i64, i64* %15, align 8, !dbg !4555
  %275 = call i8* @_TIFFmalloc(i64 %274), !dbg !4556
  store i8* %275, i8** %16, align 8, !dbg !4557
  br label %278, !dbg !4558

276:                                              ; preds = %266
  %277 = load i8*, i8** %18, align 8, !dbg !4559
  store i8* %277, i8** %16, align 8, !dbg !4560
  br label %278

278:                                              ; preds = %276, %272
  br label %279, !dbg !4561

279:                                              ; preds = %278, %257
  br label %280

280:                                              ; preds = %279, %254
  %281 = load i8*, i8** %16, align 8, !dbg !4562
  %282 = icmp ne i8* %281, null, !dbg !4562
  br i1 %282, label %284, label %283, !dbg !4564

283:                                              ; preds = %280
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.381, i64 0, i64 0)), !dbg !4565
  store i32 -1, i32* %5, align 4, !dbg !4567
  br label %510, !dbg !4567

284:                                              ; preds = %280
  %285 = load i8*, i8** %16, align 8, !dbg !4568
  %286 = load i64, i64* %15, align 8, !dbg !4569
  call void @_TIFFmemset(i8* %285, i32 0, i64 %286), !dbg !4570
  %287 = load i8*, i8** %16, align 8, !dbg !4571
  %288 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4572
  %289 = load i32, i32* %10, align 4, !dbg !4573
  %290 = sext i32 %289 to i64, !dbg !4572
  %291 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %288, i64 %290, !dbg !4572
  %292 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %291, i32 0, i32 1, !dbg !4574
  store i8* %287, i8** %292, align 8, !dbg !4575
  %293 = load i64, i64* %15, align 8, !dbg !4576
  %294 = trunc i64 %293 to i32, !dbg !4576
  %295 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4577
  %296 = load i32, i32* %10, align 4, !dbg !4578
  %297 = sext i32 %296 to i64, !dbg !4577
  %298 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %295, i64 %297, !dbg !4577
  %299 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %298, i32 0, i32 0, !dbg !4579
  store i32 %294, i32* %299, align 8, !dbg !4580
  %300 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4581
  %301 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4583
  %302 = load i8*, i8** %17, align 8, !dbg !4584
  %303 = load i8*, i8** %16, align 8, !dbg !4585
  %304 = load i32, i32* %10, align 4, !dbg !4586
  %305 = call i32 @extractSeparateRegion(%struct.image_data* %300, %struct.crop_mask* %301, i8* %302, i8* %303, i32 %304), !dbg !4587
  %306 = icmp ne i32 %305, 0, !dbg !4587
  br i1 %306, label %307, label %309, !dbg !4588

307:                                              ; preds = %284
  %308 = load i32, i32* %10, align 4, !dbg !4589
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.387, i64 0, i64 0), i32 %308), !dbg !4591
  store i32 -1, i32* %5, align 4, !dbg !4592
  br label %510, !dbg !4592

309:                                              ; preds = %284
  %310 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4593
  %311 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %310, i32 0, i32 19, !dbg !4594
  %312 = load i32, i32* %10, align 4, !dbg !4595
  %313 = sext i32 %312 to i64, !dbg !4593
  %314 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %311, i64 0, i64 %313, !dbg !4593
  %315 = getelementptr inbounds %struct.region, %struct.region* %314, i32 0, i32 4, !dbg !4596
  %316 = load i32, i32* %315, align 8, !dbg !4596
  store i32 %316, i32* %11, align 4, !dbg !4597
  %317 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4598
  %318 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %317, i32 0, i32 19, !dbg !4599
  %319 = load i32, i32* %10, align 4, !dbg !4600
  %320 = sext i32 %319 to i64, !dbg !4598
  %321 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %318, i64 0, i64 %320, !dbg !4598
  %322 = getelementptr inbounds %struct.region, %struct.region* %321, i32 0, i32 5, !dbg !4601
  %323 = load i32, i32* %322, align 4, !dbg !4601
  store i32 %323, i32* %12, align 4, !dbg !4602
  %324 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4603
  %325 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %324, i32 0, i32 10, !dbg !4605
  %326 = load i16, i16* %325, align 8, !dbg !4605
  %327 = zext i16 %326 to i32, !dbg !4603
  %328 = and i32 %327, 128, !dbg !4606
  %329 = icmp ne i32 %328, 0, !dbg !4606
  br i1 %329, label %330, label %379, !dbg !4607

330:                                              ; preds = %309
  %331 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4608
  %332 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %331, i32 0, i32 16, !dbg !4610
  %333 = load i16, i16* %332, align 4, !dbg !4610
  %334 = zext i16 %333 to i32, !dbg !4608
  switch i32 %334, label %377 [
    i32 0, label %335
    i32 1, label %335
    i32 10, label %341
    i32 11, label %341
  ], !dbg !4611

335:                                              ; preds = %330, %330
  %336 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4612
  %337 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %336, i32 0, i32 16, !dbg !4614
  %338 = load i16, i16* %337, align 4, !dbg !4614
  %339 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4615
  %340 = getelementptr inbounds %struct.image_data, %struct.image_data* %339, i32 0, i32 8, !dbg !4616
  store i16 %338, i16* %340, align 4, !dbg !4617
  br label %378, !dbg !4618

341:                                              ; preds = %330, %330
  %342 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4619
  %343 = getelementptr inbounds %struct.image_data, %struct.image_data* %342, i32 0, i32 8, !dbg !4621
  %344 = load i16, i16* %343, align 4, !dbg !4621
  %345 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4622
  %346 = getelementptr inbounds %struct.image_data, %struct.image_data* %345, i32 0, i32 6, !dbg !4623
  %347 = load i16, i16* %346, align 4, !dbg !4623
  %348 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4624
  %349 = getelementptr inbounds %struct.image_data, %struct.image_data* %348, i32 0, i32 5, !dbg !4625
  %350 = load i16, i16* %349, align 2, !dbg !4625
  %351 = load i32, i32* %11, align 4, !dbg !4626
  %352 = load i32, i32* %12, align 4, !dbg !4627
  %353 = load i8*, i8** %16, align 8, !dbg !4628
  %354 = call i32 @invertImage(i16 zeroext %344, i16 zeroext %347, i16 zeroext %350, i32 %351, i32 %352, i8* %353), !dbg !4629
  %355 = icmp ne i32 %354, 0, !dbg !4629
  br i1 %355, label %356, label %357, !dbg !4630

356:                                              ; preds = %341
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.388, i64 0, i64 0)), !dbg !4631
  store i32 -1, i32* %5, align 4, !dbg !4633
  br label %510, !dbg !4633

357:                                              ; preds = %341
  %358 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4634
  %359 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %358, i32 0, i32 16, !dbg !4636
  %360 = load i16, i16* %359, align 4, !dbg !4636
  %361 = zext i16 %360 to i32, !dbg !4634
  %362 = icmp eq i32 %361, 11, !dbg !4637
  br i1 %362, label %363, label %376, !dbg !4638

363:                                              ; preds = %357
  %364 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4639
  %365 = getelementptr inbounds %struct.image_data, %struct.image_data* %364, i32 0, i32 8, !dbg !4641
  %366 = load i16, i16* %365, align 4, !dbg !4641
  %367 = zext i16 %366 to i32, !dbg !4639
  switch i32 %367, label %374 [
    i32 0, label %368
    i32 1, label %371
  ], !dbg !4642

368:                                              ; preds = %363
  %369 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4643
  %370 = getelementptr inbounds %struct.image_data, %struct.image_data* %369, i32 0, i32 8, !dbg !4645
  store i16 1, i16* %370, align 4, !dbg !4646
  br label %375, !dbg !4647

371:                                              ; preds = %363
  %372 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4648
  %373 = getelementptr inbounds %struct.image_data, %struct.image_data* %372, i32 0, i32 8, !dbg !4649
  store i16 0, i16* %373, align 4, !dbg !4650
  br label %375, !dbg !4651

374:                                              ; preds = %363
  br label %375, !dbg !4652

375:                                              ; preds = %374, %371, %368
  br label %376, !dbg !4653

376:                                              ; preds = %375, %357
  br label %378, !dbg !4654

377:                                              ; preds = %330
  br label %378, !dbg !4655

378:                                              ; preds = %377, %376, %335
  br label %379, !dbg !4656

379:                                              ; preds = %378, %309
  %380 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4657
  %381 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %380, i32 0, i32 10, !dbg !4659
  %382 = load i16, i16* %381, align 8, !dbg !4659
  %383 = zext i16 %382 to i32, !dbg !4657
  %384 = and i32 %383, 64, !dbg !4660
  %385 = icmp ne i32 %384, 0, !dbg !4660
  br i1 %385, label %386, label %410, !dbg !4661

386:                                              ; preds = %379
  %387 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4662
  %388 = getelementptr inbounds %struct.image_data, %struct.image_data* %387, i32 0, i32 6, !dbg !4665
  %389 = load i16, i16* %388, align 4, !dbg !4665
  %390 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4666
  %391 = getelementptr inbounds %struct.image_data, %struct.image_data* %390, i32 0, i32 5, !dbg !4667
  %392 = load i16, i16* %391, align 2, !dbg !4667
  %393 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4668
  %394 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %393, i32 0, i32 14, !dbg !4669
  %395 = load i16, i16* %394, align 8, !dbg !4669
  %396 = load i32, i32* %11, align 4, !dbg !4670
  %397 = load i32, i32* %12, align 4, !dbg !4671
  %398 = load i8*, i8** %16, align 8, !dbg !4672
  %399 = call i32 @mirrorImage(i16 zeroext %389, i16 zeroext %392, i16 zeroext %395, i32 %396, i32 %397, i8* %398), !dbg !4673
  %400 = icmp ne i32 %399, 0, !dbg !4673
  br i1 %400, label %401, label %409, !dbg !4674

401:                                              ; preds = %386
  %402 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4675
  %403 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %402, i32 0, i32 13, !dbg !4677
  %404 = load i16, i16* %403, align 2, !dbg !4677
  %405 = zext i16 %404 to i32, !dbg !4675
  %406 = icmp eq i32 %405, 1, !dbg !4678
  %407 = zext i1 %406 to i64, !dbg !4679
  %408 = select i1 %406, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.384, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.385, i64 0, i64 0), !dbg !4679
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.389, i64 0, i64 0), i8* %408), !dbg !4680
  store i32 -1, i32* %5, align 4, !dbg !4681
  br label %510, !dbg !4681

409:                                              ; preds = %386
  br label %410, !dbg !4682

410:                                              ; preds = %409, %379
  %411 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4683
  %412 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %411, i32 0, i32 10, !dbg !4685
  %413 = load i16, i16* %412, align 8, !dbg !4685
  %414 = zext i16 %413 to i32, !dbg !4683
  %415 = and i32 %414, 32, !dbg !4686
  %416 = icmp ne i32 %415, 0, !dbg !4686
  br i1 %416, label %417, label %504, !dbg !4687

417:                                              ; preds = %410
  %418 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4688
  %419 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %418, i32 0, i32 13, !dbg !4691
  %420 = load i16, i16* %419, align 2, !dbg !4691
  %421 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4692
  %422 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4693
  %423 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %422, i32 0, i32 19, !dbg !4694
  %424 = load i32, i32* %10, align 4, !dbg !4695
  %425 = sext i32 %424 to i64, !dbg !4693
  %426 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %423, i64 0, i64 %425, !dbg !4693
  %427 = getelementptr inbounds %struct.region, %struct.region* %426, i32 0, i32 4, !dbg !4696
  %428 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4697
  %429 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %428, i32 0, i32 19, !dbg !4698
  %430 = load i32, i32* %10, align 4, !dbg !4699
  %431 = sext i32 %430 to i64, !dbg !4697
  %432 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %429, i64 0, i64 %431, !dbg !4697
  %433 = getelementptr inbounds %struct.region, %struct.region* %432, i32 0, i32 5, !dbg !4700
  %434 = call i32 @rotateImage(i16 zeroext %420, %struct.image_data* %421, i32* %427, i32* %433, i8** %16), !dbg !4701
  %435 = icmp ne i32 %434, 0, !dbg !4701
  br i1 %435, label %436, label %441, !dbg !4702

436:                                              ; preds = %417
  %437 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4703
  %438 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %437, i32 0, i32 13, !dbg !4705
  %439 = load i16, i16* %438, align 2, !dbg !4705
  %440 = zext i16 %439 to i32, !dbg !4703
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.390, i64 0, i64 0), i32 %440), !dbg !4706
  store i32 -1, i32* %5, align 4, !dbg !4707
  br label %510, !dbg !4707

441:                                              ; preds = %417
  %442 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4708
  %443 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %442, i32 0, i32 19, !dbg !4709
  %444 = load i32, i32* %10, align 4, !dbg !4710
  %445 = sext i32 %444 to i64, !dbg !4708
  %446 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %443, i64 0, i64 %445, !dbg !4708
  %447 = getelementptr inbounds %struct.region, %struct.region* %446, i32 0, i32 4, !dbg !4711
  %448 = load i32, i32* %447, align 8, !dbg !4711
  %449 = load i32, i32* %13, align 4, !dbg !4712
  %450 = add i32 %449, %448, !dbg !4712
  store i32 %450, i32* %13, align 4, !dbg !4712
  %451 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4713
  %452 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %451, i32 0, i32 19, !dbg !4714
  %453 = load i32, i32* %10, align 4, !dbg !4715
  %454 = sext i32 %453 to i64, !dbg !4713
  %455 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %452, i64 0, i64 %454, !dbg !4713
  %456 = getelementptr inbounds %struct.region, %struct.region* %455, i32 0, i32 5, !dbg !4716
  %457 = load i32, i32* %456, align 4, !dbg !4716
  %458 = load i32, i32* %14, align 4, !dbg !4717
  %459 = add i32 %458, %457, !dbg !4717
  store i32 %459, i32* %14, align 4, !dbg !4717
  %460 = load i32, i32* %13, align 4, !dbg !4718
  %461 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4719
  %462 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %461, i32 0, i32 5, !dbg !4720
  store i32 %460, i32* %462, align 8, !dbg !4721
  %463 = load i32, i32* %14, align 4, !dbg !4722
  %464 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4723
  %465 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %464, i32 0, i32 6, !dbg !4724
  store i32 %463, i32* %465, align 4, !dbg !4725
  %466 = load i8*, i8** %16, align 8, !dbg !4726
  %467 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4727
  %468 = load i32, i32* %10, align 4, !dbg !4728
  %469 = sext i32 %468 to i64, !dbg !4727
  %470 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %467, i64 %469, !dbg !4727
  %471 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %470, i32 0, i32 1, !dbg !4729
  store i8* %466, i8** %471, align 8, !dbg !4730
  %472 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4731
  %473 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %472, i32 0, i32 19, !dbg !4732
  %474 = load i32, i32* %10, align 4, !dbg !4733
  %475 = sext i32 %474 to i64, !dbg !4731
  %476 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %473, i64 0, i64 %475, !dbg !4731
  %477 = getelementptr inbounds %struct.region, %struct.region* %476, i32 0, i32 4, !dbg !4734
  %478 = load i32, i32* %477, align 8, !dbg !4734
  %479 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4735
  %480 = getelementptr inbounds %struct.image_data, %struct.image_data* %479, i32 0, i32 5, !dbg !4736
  %481 = load i16, i16* %480, align 2, !dbg !4736
  %482 = zext i16 %481 to i32, !dbg !4735
  %483 = mul i32 %478, %482, !dbg !4737
  %484 = add i32 %483, 7, !dbg !4738
  %485 = udiv i32 %484, 8, !dbg !4739
  %486 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4740
  %487 = getelementptr inbounds %struct.image_data, %struct.image_data* %486, i32 0, i32 6, !dbg !4741
  %488 = load i16, i16* %487, align 4, !dbg !4741
  %489 = zext i16 %488 to i32, !dbg !4740
  %490 = mul i32 %485, %489, !dbg !4742
  %491 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4743
  %492 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %491, i32 0, i32 19, !dbg !4744
  %493 = load i32, i32* %10, align 4, !dbg !4745
  %494 = sext i32 %493 to i64, !dbg !4743
  %495 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %492, i64 0, i64 %494, !dbg !4743
  %496 = getelementptr inbounds %struct.region, %struct.region* %495, i32 0, i32 5, !dbg !4746
  %497 = load i32, i32* %496, align 4, !dbg !4746
  %498 = mul i32 %490, %497, !dbg !4747
  %499 = load %struct.buffinfo*, %struct.buffinfo** %9, align 8, !dbg !4748
  %500 = load i32, i32* %10, align 4, !dbg !4749
  %501 = sext i32 %500 to i64, !dbg !4748
  %502 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %499, i64 %501, !dbg !4748
  %503 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %502, i32 0, i32 0, !dbg !4750
  store i32 %498, i32* %503, align 8, !dbg !4751
  br label %504, !dbg !4752

504:                                              ; preds = %441, %410
  br label %505, !dbg !4753

505:                                              ; preds = %504
  %506 = load i32, i32* %10, align 4, !dbg !4754
  %507 = add nsw i32 %506, 1, !dbg !4754
  store i32 %507, i32* %10, align 4, !dbg !4754
  br label %234, !dbg !4755, !llvm.loop !4756

508:                                              ; preds = %234
  br label %509

509:                                              ; preds = %508, %232
  store i32 0, i32* %5, align 4, !dbg !4758
  br label %510, !dbg !4758

510:                                              ; preds = %509, %436, %401, %356, %307, %283, %200, %173, %124, %86, %67
  %511 = load i32, i32* %5, align 4, !dbg !4759
  ret i32 %511, !dbg !4759
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @createCroppedImage(%struct.image_data*, %struct.crop_mask*, i8**, i8**) #0 !dbg !589 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.image_data*, align 8
  %7 = alloca %struct.crop_mask*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store %struct.image_data* %0, %struct.image_data** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %6, metadata !4760, metadata !DIExpression()), !dbg !4761
  store %struct.crop_mask* %1, %struct.crop_mask** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %7, metadata !4762, metadata !DIExpression()), !dbg !4763
  store i8** %2, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !4764, metadata !DIExpression()), !dbg !4765
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4768, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4770, metadata !DIExpression()), !dbg !4771
  store i8* null, i8** %11, align 8, !dbg !4771
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4772, metadata !DIExpression()), !dbg !4773
  store i8* null, i8** %12, align 8, !dbg !4773
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4774, metadata !DIExpression()), !dbg !4775
  store i8* null, i8** %13, align 8, !dbg !4775
  %14 = load i8**, i8*** %8, align 8, !dbg !4776
  %15 = load i8*, i8** %14, align 8, !dbg !4777
  store i8* %15, i8** %11, align 8, !dbg !4778
  %16 = load i8*, i8** %11, align 8, !dbg !4779
  store i8* %16, i8** %12, align 8, !dbg !4780
  %17 = load i8*, i8** %11, align 8, !dbg !4781
  %18 = load i8**, i8*** %9, align 8, !dbg !4782
  store i8* %17, i8** %18, align 8, !dbg !4783
  %19 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4784
  %20 = getelementptr inbounds %struct.image_data, %struct.image_data* %19, i32 0, i32 2, !dbg !4785
  %21 = load i32, i32* %20, align 4, !dbg !4785
  %22 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4786
  %23 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %22, i32 0, i32 5, !dbg !4787
  store i32 %21, i32* %23, align 8, !dbg !4788
  %24 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4789
  %25 = getelementptr inbounds %struct.image_data, %struct.image_data* %24, i32 0, i32 3, !dbg !4790
  %26 = load i32, i32* %25, align 4, !dbg !4790
  %27 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4791
  %28 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %27, i32 0, i32 6, !dbg !4792
  store i32 %26, i32* %28, align 4, !dbg !4793
  %29 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4794
  %30 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %29, i32 0, i32 7, !dbg !4795
  %31 = load i32, i32* %30, align 8, !dbg !4795
  %32 = zext i32 %31 to i64, !dbg !4794
  store i64 %32, i64* %10, align 8, !dbg !4796
  %33 = load i8**, i8*** %9, align 8, !dbg !4797
  %34 = load i8*, i8** %33, align 8, !dbg !4798
  store i8* %34, i8** %12, align 8, !dbg !4799
  %35 = load i8*, i8** %12, align 8, !dbg !4800
  %36 = icmp ne i8* %35, null, !dbg !4800
  br i1 %36, label %45, label %37, !dbg !4802

37:                                               ; preds = %4
  %38 = load i64, i64* %10, align 8, !dbg !4803
  %39 = call i8* @_TIFFmalloc(i64 %38), !dbg !4805
  store i8* %39, i8** %12, align 8, !dbg !4806
  %40 = load i8*, i8** %12, align 8, !dbg !4807
  %41 = load i8**, i8*** %9, align 8, !dbg !4808
  store i8* %40, i8** %41, align 8, !dbg !4809
  %42 = load i8*, i8** %12, align 8, !dbg !4810
  %43 = load i64, i64* %10, align 8, !dbg !4811
  call void @_TIFFmemset(i8* %42, i32 0, i64 %43), !dbg !4812
  %44 = load i64, i64* %10, align 8, !dbg !4813
  store i64 %44, i64* @createCroppedImage.prev_cropsize, align 8, !dbg !4814
  br label %65, !dbg !4815

45:                                               ; preds = %4
  %46 = load i64, i64* @createCroppedImage.prev_cropsize, align 8, !dbg !4816
  %47 = load i64, i64* %10, align 8, !dbg !4819
  %48 = icmp slt i64 %46, %47, !dbg !4820
  br i1 %48, label %49, label %64, !dbg !4821

49:                                               ; preds = %45
  %50 = load i8*, i8** %12, align 8, !dbg !4822
  %51 = load i64, i64* %10, align 8, !dbg !4824
  %52 = call i8* @_TIFFrealloc(i8* %50, i64 %51), !dbg !4825
  store i8* %52, i8** %13, align 8, !dbg !4826
  %53 = load i8*, i8** %13, align 8, !dbg !4827
  %54 = icmp ne i8* %53, null, !dbg !4827
  br i1 %54, label %59, label %55, !dbg !4829

55:                                               ; preds = %49
  %56 = load i8*, i8** %12, align 8, !dbg !4830
  call void @free(i8* %56) #8, !dbg !4832
  %57 = load i64, i64* %10, align 8, !dbg !4833
  %58 = call i8* @_TIFFmalloc(i64 %57), !dbg !4834
  store i8* %58, i8** %12, align 8, !dbg !4835
  br label %61, !dbg !4836

59:                                               ; preds = %49
  %60 = load i8*, i8** %13, align 8, !dbg !4837
  store i8* %60, i8** %12, align 8, !dbg !4838
  br label %61

61:                                               ; preds = %59, %55
  %62 = load i8*, i8** %12, align 8, !dbg !4839
  %63 = load i64, i64* %10, align 8, !dbg !4840
  call void @_TIFFmemset(i8* %62, i32 0, i64 %63), !dbg !4841
  br label %64, !dbg !4842

64:                                               ; preds = %61, %45
  br label %65

65:                                               ; preds = %64, %37
  %66 = load i8*, i8** %12, align 8, !dbg !4843
  %67 = icmp ne i8* %66, null, !dbg !4843
  br i1 %67, label %69, label %68, !dbg !4845

68:                                               ; preds = %65
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.402, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.381, i64 0, i64 0)), !dbg !4846
  store i32 -1, i32* %5, align 4, !dbg !4848
  br label %198, !dbg !4848

69:                                               ; preds = %65
  %70 = load i8*, i8** %12, align 8, !dbg !4849
  %71 = load i8**, i8*** %9, align 8, !dbg !4850
  store i8* %70, i8** %71, align 8, !dbg !4851
  %72 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4852
  %73 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %72, i32 0, i32 10, !dbg !4854
  %74 = load i16, i16* %73, align 8, !dbg !4854
  %75 = zext i16 %74 to i32, !dbg !4852
  %76 = and i32 %75, 128, !dbg !4855
  %77 = icmp ne i32 %76, 0, !dbg !4855
  br i1 %77, label %78, label %131, !dbg !4856

78:                                               ; preds = %69
  %79 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4857
  %80 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %79, i32 0, i32 16, !dbg !4859
  %81 = load i16, i16* %80, align 4, !dbg !4859
  %82 = zext i16 %81 to i32, !dbg !4857
  switch i32 %82, label %129 [
    i32 0, label %83
    i32 1, label %83
    i32 10, label %89
    i32 11, label %89
  ], !dbg !4860

83:                                               ; preds = %78, %78
  %84 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4861
  %85 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %84, i32 0, i32 16, !dbg !4863
  %86 = load i16, i16* %85, align 4, !dbg !4863
  %87 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4864
  %88 = getelementptr inbounds %struct.image_data, %struct.image_data* %87, i32 0, i32 8, !dbg !4865
  store i16 %86, i16* %88, align 4, !dbg !4866
  br label %130, !dbg !4867

89:                                               ; preds = %78, %78
  %90 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4868
  %91 = getelementptr inbounds %struct.image_data, %struct.image_data* %90, i32 0, i32 8, !dbg !4870
  %92 = load i16, i16* %91, align 4, !dbg !4870
  %93 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4871
  %94 = getelementptr inbounds %struct.image_data, %struct.image_data* %93, i32 0, i32 6, !dbg !4872
  %95 = load i16, i16* %94, align 4, !dbg !4872
  %96 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4873
  %97 = getelementptr inbounds %struct.image_data, %struct.image_data* %96, i32 0, i32 5, !dbg !4874
  %98 = load i16, i16* %97, align 2, !dbg !4874
  %99 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4875
  %100 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %99, i32 0, i32 5, !dbg !4876
  %101 = load i32, i32* %100, align 8, !dbg !4876
  %102 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4877
  %103 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %102, i32 0, i32 6, !dbg !4878
  %104 = load i32, i32* %103, align 4, !dbg !4878
  %105 = load i8*, i8** %12, align 8, !dbg !4879
  %106 = call i32 @invertImage(i16 zeroext %92, i16 zeroext %95, i16 zeroext %98, i32 %101, i32 %104, i8* %105), !dbg !4880
  %107 = icmp ne i32 %106, 0, !dbg !4880
  br i1 %107, label %108, label %109, !dbg !4881

108:                                              ; preds = %89
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.402, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.403, i64 0, i64 0)), !dbg !4882
  store i32 -1, i32* %5, align 4, !dbg !4884
  br label %198, !dbg !4884

109:                                              ; preds = %89
  %110 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4885
  %111 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %110, i32 0, i32 16, !dbg !4887
  %112 = load i16, i16* %111, align 4, !dbg !4887
  %113 = zext i16 %112 to i32, !dbg !4885
  %114 = icmp eq i32 %113, 11, !dbg !4888
  br i1 %114, label %115, label %128, !dbg !4889

115:                                              ; preds = %109
  %116 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4890
  %117 = getelementptr inbounds %struct.image_data, %struct.image_data* %116, i32 0, i32 8, !dbg !4892
  %118 = load i16, i16* %117, align 4, !dbg !4892
  %119 = zext i16 %118 to i32, !dbg !4890
  switch i32 %119, label %126 [
    i32 0, label %120
    i32 1, label %123
  ], !dbg !4893

120:                                              ; preds = %115
  %121 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4894
  %122 = getelementptr inbounds %struct.image_data, %struct.image_data* %121, i32 0, i32 8, !dbg !4896
  store i16 1, i16* %122, align 4, !dbg !4897
  br label %127, !dbg !4898

123:                                              ; preds = %115
  %124 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4899
  %125 = getelementptr inbounds %struct.image_data, %struct.image_data* %124, i32 0, i32 8, !dbg !4900
  store i16 0, i16* %125, align 4, !dbg !4901
  br label %127, !dbg !4902

126:                                              ; preds = %115
  br label %127, !dbg !4903

127:                                              ; preds = %126, %123, %120
  br label %128, !dbg !4904

128:                                              ; preds = %127, %109
  br label %130, !dbg !4905

129:                                              ; preds = %78
  br label %130, !dbg !4906

130:                                              ; preds = %129, %128, %83
  br label %131, !dbg !4907

131:                                              ; preds = %130, %69
  %132 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4908
  %133 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %132, i32 0, i32 10, !dbg !4910
  %134 = load i16, i16* %133, align 8, !dbg !4910
  %135 = zext i16 %134 to i32, !dbg !4908
  %136 = and i32 %135, 64, !dbg !4911
  %137 = icmp ne i32 %136, 0, !dbg !4911
  br i1 %137, label %138, label %166, !dbg !4912

138:                                              ; preds = %131
  %139 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4913
  %140 = getelementptr inbounds %struct.image_data, %struct.image_data* %139, i32 0, i32 6, !dbg !4916
  %141 = load i16, i16* %140, align 4, !dbg !4916
  %142 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4917
  %143 = getelementptr inbounds %struct.image_data, %struct.image_data* %142, i32 0, i32 5, !dbg !4918
  %144 = load i16, i16* %143, align 2, !dbg !4918
  %145 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4919
  %146 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %145, i32 0, i32 14, !dbg !4920
  %147 = load i16, i16* %146, align 8, !dbg !4920
  %148 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4921
  %149 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %148, i32 0, i32 5, !dbg !4922
  %150 = load i32, i32* %149, align 8, !dbg !4922
  %151 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4923
  %152 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %151, i32 0, i32 6, !dbg !4924
  %153 = load i32, i32* %152, align 4, !dbg !4924
  %154 = load i8*, i8** %12, align 8, !dbg !4925
  %155 = call i32 @mirrorImage(i16 zeroext %141, i16 zeroext %144, i16 zeroext %147, i32 %150, i32 %153, i8* %154), !dbg !4926
  %156 = icmp ne i32 %155, 0, !dbg !4926
  br i1 %156, label %157, label %165, !dbg !4927

157:                                              ; preds = %138
  %158 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4928
  %159 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %158, i32 0, i32 13, !dbg !4930
  %160 = load i16, i16* %159, align 2, !dbg !4930
  %161 = zext i16 %160 to i32, !dbg !4928
  %162 = icmp eq i32 %161, 1, !dbg !4931
  %163 = zext i1 %162 to i64, !dbg !4932
  %164 = select i1 %162, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.384, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.385, i64 0, i64 0), !dbg !4932
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.402, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.404, i64 0, i64 0), i8* %164), !dbg !4933
  store i32 -1, i32* %5, align 4, !dbg !4934
  br label %198, !dbg !4934

165:                                              ; preds = %138
  br label %166, !dbg !4935

166:                                              ; preds = %165, %131
  %167 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4936
  %168 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %167, i32 0, i32 10, !dbg !4938
  %169 = load i16, i16* %168, align 8, !dbg !4938
  %170 = zext i16 %169 to i32, !dbg !4936
  %171 = and i32 %170, 32, !dbg !4939
  %172 = icmp ne i32 %171, 0, !dbg !4939
  br i1 %172, label %173, label %191, !dbg !4940

173:                                              ; preds = %166
  %174 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4941
  %175 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %174, i32 0, i32 13, !dbg !4944
  %176 = load i16, i16* %175, align 2, !dbg !4944
  %177 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !4945
  %178 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4946
  %179 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %178, i32 0, i32 5, !dbg !4947
  %180 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4948
  %181 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %180, i32 0, i32 6, !dbg !4949
  %182 = load i8**, i8*** %9, align 8, !dbg !4950
  %183 = call i32 @rotateImage(i16 zeroext %176, %struct.image_data* %177, i32* %179, i32* %181, i8** %182), !dbg !4951
  %184 = icmp ne i32 %183, 0, !dbg !4951
  br i1 %184, label %185, label %190, !dbg !4952

185:                                              ; preds = %173
  %186 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !4953
  %187 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %186, i32 0, i32 13, !dbg !4955
  %188 = load i16, i16* %187, align 2, !dbg !4955
  %189 = zext i16 %188 to i32, !dbg !4953
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.402, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.405, i64 0, i64 0), i32 %189), !dbg !4956
  store i32 -1, i32* %5, align 4, !dbg !4957
  br label %198, !dbg !4957

190:                                              ; preds = %173
  br label %191, !dbg !4958

191:                                              ; preds = %190, %166
  %192 = load i8*, i8** %12, align 8, !dbg !4959
  %193 = load i8*, i8** %11, align 8, !dbg !4961
  %194 = icmp eq i8* %192, %193, !dbg !4962
  br i1 %194, label %195, label %197, !dbg !4963

195:                                              ; preds = %191
  %196 = load i8**, i8*** %8, align 8, !dbg !4964
  store i8* null, i8** %196, align 8, !dbg !4965
  br label %197, !dbg !4966

197:                                              ; preds = %195, %191
  store i32 0, i32* %5, align 4, !dbg !4967
  br label %198, !dbg !4967

198:                                              ; preds = %197, %185, %157, %108, %68
  %199 = load i32, i32* %5, align 4, !dbg !4968
  ret i32 %199, !dbg !4968
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeSelections(%struct.tiff*, %struct.tiff**, %struct.crop_mask*, %struct.image_data*, %struct.dump_opts*, %struct.buffinfo*, i8*, i8*, i32*, i32) #0 !dbg !4969 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.tiff*, align 8
  %13 = alloca %struct.tiff**, align 8
  %14 = alloca %struct.crop_mask*, align 8
  %15 = alloca %struct.image_data*, align 8
  %16 = alloca %struct.dump_opts*, align 8
  %17 = alloca %struct.buffinfo*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %12, metadata !4972, metadata !DIExpression()), !dbg !4973
  store %struct.tiff** %1, %struct.tiff*** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff*** %13, metadata !4974, metadata !DIExpression()), !dbg !4975
  store %struct.crop_mask* %2, %struct.crop_mask** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %14, metadata !4976, metadata !DIExpression()), !dbg !4977
  store %struct.image_data* %3, %struct.image_data** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %15, metadata !4978, metadata !DIExpression()), !dbg !4979
  store %struct.dump_opts* %4, %struct.dump_opts** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %16, metadata !4980, metadata !DIExpression()), !dbg !4981
  store %struct.buffinfo* %5, %struct.buffinfo** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.buffinfo** %17, metadata !4982, metadata !DIExpression()), !dbg !4983
  store i8* %6, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !4984, metadata !DIExpression()), !dbg !4985
  store i8* %7, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4986, metadata !DIExpression()), !dbg !4987
  store i32* %8, i32** %20, align 8
  call void @llvm.dbg.declare(metadata i32** %20, metadata !4988, metadata !DIExpression()), !dbg !4989
  store i32 %9, i32* %21, align 4
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4990, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.declare(metadata i32* %22, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %24, metadata !4996, metadata !DIExpression()), !dbg !4997
  store i32 0, i32* %24, align 4, !dbg !4997
  call void @llvm.dbg.declare(metadata i8** %25, metadata !4998, metadata !DIExpression()), !dbg !4999
  store i8* null, i8** %25, align 8, !dbg !4999
  %26 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5000
  %27 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %26, i32 0, i32 9, !dbg !5001
  %28 = load i16, i16* %27, align 2, !dbg !5001
  %29 = zext i16 %28 to i32, !dbg !5000
  switch i32 %29, label %272 [
    i32 0, label %30
    i32 1, label %64
    i32 2, label %125
    i32 3, label %158
    i32 4, label %217
  ], !dbg !5002

30:                                               ; preds = %10
  store i32 0, i32* %24, align 4, !dbg !5003
  %31 = load %struct.buffinfo*, %struct.buffinfo** %17, align 8, !dbg !5005
  %32 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %31, i64 0, !dbg !5005
  %33 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %32, i32 0, i32 1, !dbg !5006
  %34 = load i8*, i8** %33, align 8, !dbg !5006
  store i8* %34, i8** %25, align 8, !dbg !5007
  %35 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5008
  %36 = load i8*, i8** %18, align 8, !dbg !5010
  %37 = load i32, i32* %24, align 4, !dbg !5011
  %38 = load i8*, i8** %19, align 8, !dbg !5012
  %39 = load i32*, i32** %20, align 8, !dbg !5013
  %40 = call i32 @update_output_file(%struct.tiff** %35, i8* %36, i32 %37, i8* %38, i32* %39), !dbg !5014
  %41 = icmp ne i32 %40, 0, !dbg !5014
  br i1 %41, label %42, label %43, !dbg !5015

42:                                               ; preds = %30
  store i32 1, i32* %11, align 4, !dbg !5016
  br label %274, !dbg !5016

43:                                               ; preds = %30
  %44 = load i32, i32* %21, align 4, !dbg !5017
  store i32 %44, i32* %23, align 4, !dbg !5018
  %45 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5019
  %46 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5021
  %47 = load %struct.tiff*, %struct.tiff** %46, align 8, !dbg !5022
  %48 = load %struct.image_data*, %struct.image_data** %15, align 8, !dbg !5023
  %49 = load %struct.dump_opts*, %struct.dump_opts** %16, align 8, !dbg !5024
  %50 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5025
  %51 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %50, i32 0, i32 5, !dbg !5026
  %52 = load i32, i32* %51, align 8, !dbg !5026
  %53 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5027
  %54 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %53, i32 0, i32 6, !dbg !5028
  %55 = load i32, i32* %54, align 4, !dbg !5028
  %56 = load i8*, i8** %25, align 8, !dbg !5029
  %57 = load i32*, i32** %20, align 8, !dbg !5030
  %58 = load i32, i32* %57, align 4, !dbg !5031
  %59 = load i32, i32* %21, align 4, !dbg !5032
  %60 = call i32 @writeCroppedImage(%struct.tiff* %45, %struct.tiff* %47, %struct.image_data* %48, %struct.dump_opts* %49, i32 %52, i32 %55, i8* %56, i32 %58, i32 %59), !dbg !5033
  %61 = icmp ne i32 %60, 0, !dbg !5033
  br i1 %61, label %62, label %63, !dbg !5034

62:                                               ; preds = %43
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)), !dbg !5035
  store i32 -1, i32* %11, align 4, !dbg !5037
  br label %274, !dbg !5037

63:                                               ; preds = %43
  br label %273, !dbg !5038

64:                                               ; preds = %10
  store i32 0, i32* %24, align 4, !dbg !5039
  %65 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5040
  %66 = load i8*, i8** %18, align 8, !dbg !5042
  %67 = load i32, i32* %24, align 4, !dbg !5043
  %68 = load i8*, i8** %19, align 8, !dbg !5044
  %69 = load i32*, i32** %20, align 8, !dbg !5045
  %70 = call i32 @update_output_file(%struct.tiff** %65, i8* %66, i32 %67, i8* %68, i32* %69), !dbg !5046
  %71 = icmp ne i32 %70, 0, !dbg !5046
  br i1 %71, label %72, label %73, !dbg !5047

72:                                               ; preds = %64
  store i32 1, i32* %11, align 4, !dbg !5048
  br label %274, !dbg !5048

73:                                               ; preds = %64
  %74 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5049
  %75 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %74, i32 0, i32 17, !dbg !5050
  %76 = load i16, i16* %75, align 2, !dbg !5050
  %77 = zext i16 %76 to i32, !dbg !5049
  %78 = load i32, i32* %21, align 4, !dbg !5051
  %79 = mul i32 %77, %78, !dbg !5052
  store i32 %79, i32* %23, align 4, !dbg !5053
  store i32 0, i32* %22, align 4, !dbg !5054
  br label %80, !dbg !5056

80:                                               ; preds = %121, %73
  %81 = load i32, i32* %22, align 4, !dbg !5057
  %82 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5059
  %83 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %82, i32 0, i32 17, !dbg !5060
  %84 = load i16, i16* %83, align 2, !dbg !5060
  %85 = zext i16 %84 to i32, !dbg !5059
  %86 = icmp slt i32 %81, %85, !dbg !5061
  br i1 %86, label %87, label %124, !dbg !5062

87:                                               ; preds = %80
  %88 = load %struct.buffinfo*, %struct.buffinfo** %17, align 8, !dbg !5063
  %89 = load i32, i32* %22, align 4, !dbg !5065
  %90 = sext i32 %89 to i64, !dbg !5063
  %91 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %88, i64 %90, !dbg !5063
  %92 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %91, i32 0, i32 1, !dbg !5066
  %93 = load i8*, i8** %92, align 8, !dbg !5066
  store i8* %93, i8** %25, align 8, !dbg !5067
  %94 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5068
  %95 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5070
  %96 = load %struct.tiff*, %struct.tiff** %95, align 8, !dbg !5071
  %97 = load %struct.image_data*, %struct.image_data** %15, align 8, !dbg !5072
  %98 = load %struct.dump_opts*, %struct.dump_opts** %16, align 8, !dbg !5073
  %99 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5074
  %100 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %99, i32 0, i32 19, !dbg !5075
  %101 = load i32, i32* %22, align 4, !dbg !5076
  %102 = sext i32 %101 to i64, !dbg !5074
  %103 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %100, i64 0, i64 %102, !dbg !5074
  %104 = getelementptr inbounds %struct.region, %struct.region* %103, i32 0, i32 4, !dbg !5077
  %105 = load i32, i32* %104, align 8, !dbg !5077
  %106 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5078
  %107 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %106, i32 0, i32 19, !dbg !5079
  %108 = load i32, i32* %22, align 4, !dbg !5080
  %109 = sext i32 %108 to i64, !dbg !5078
  %110 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %107, i64 0, i64 %109, !dbg !5078
  %111 = getelementptr inbounds %struct.region, %struct.region* %110, i32 0, i32 5, !dbg !5081
  %112 = load i32, i32* %111, align 4, !dbg !5081
  %113 = load i8*, i8** %25, align 8, !dbg !5082
  %114 = load i32*, i32** %20, align 8, !dbg !5083
  %115 = load i32, i32* %114, align 4, !dbg !5084
  %116 = load i32, i32* %23, align 4, !dbg !5085
  %117 = call i32 @writeCroppedImage(%struct.tiff* %94, %struct.tiff* %96, %struct.image_data* %97, %struct.dump_opts* %98, i32 %105, i32 %112, i8* %113, i32 %115, i32 %116), !dbg !5086
  %118 = icmp ne i32 %117, 0, !dbg !5086
  br i1 %118, label %119, label %120, !dbg !5087

119:                                              ; preds = %87
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)), !dbg !5088
  store i32 -1, i32* %11, align 4, !dbg !5090
  br label %274, !dbg !5090

120:                                              ; preds = %87
  br label %121, !dbg !5091

121:                                              ; preds = %120
  %122 = load i32, i32* %22, align 4, !dbg !5092
  %123 = add nsw i32 %122, 1, !dbg !5092
  store i32 %123, i32* %22, align 4, !dbg !5092
  br label %80, !dbg !5093, !llvm.loop !5094

124:                                              ; preds = %80
  br label %273, !dbg !5096

125:                                              ; preds = %10
  store i32 1, i32* %24, align 4, !dbg !5097
  %126 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5098
  %127 = load i8*, i8** %18, align 8, !dbg !5100
  %128 = load i32, i32* %24, align 4, !dbg !5101
  %129 = load i8*, i8** %19, align 8, !dbg !5102
  %130 = load i32*, i32** %20, align 8, !dbg !5103
  %131 = call i32 @update_output_file(%struct.tiff** %126, i8* %127, i32 %128, i8* %129, i32* %130), !dbg !5104
  %132 = icmp ne i32 %131, 0, !dbg !5104
  br i1 %132, label %133, label %134, !dbg !5105

133:                                              ; preds = %125
  store i32 1, i32* %11, align 4, !dbg !5106
  br label %274, !dbg !5106

134:                                              ; preds = %125
  %135 = load %struct.buffinfo*, %struct.buffinfo** %17, align 8, !dbg !5107
  %136 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %135, i64 0, !dbg !5107
  %137 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %136, i32 0, i32 1, !dbg !5108
  %138 = load i8*, i8** %137, align 8, !dbg !5108
  store i8* %138, i8** %25, align 8, !dbg !5109
  %139 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5110
  %140 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5112
  %141 = load %struct.tiff*, %struct.tiff** %140, align 8, !dbg !5113
  %142 = load %struct.image_data*, %struct.image_data** %15, align 8, !dbg !5114
  %143 = load %struct.dump_opts*, %struct.dump_opts** %16, align 8, !dbg !5115
  %144 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5116
  %145 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %144, i32 0, i32 5, !dbg !5117
  %146 = load i32, i32* %145, align 8, !dbg !5117
  %147 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5118
  %148 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %147, i32 0, i32 6, !dbg !5119
  %149 = load i32, i32* %148, align 4, !dbg !5119
  %150 = load i8*, i8** %25, align 8, !dbg !5120
  %151 = load i32*, i32** %20, align 8, !dbg !5121
  %152 = load i32, i32* %151, align 4, !dbg !5122
  %153 = load i32, i32* %21, align 4, !dbg !5123
  %154 = call i32 @writeCroppedImage(%struct.tiff* %139, %struct.tiff* %141, %struct.image_data* %142, %struct.dump_opts* %143, i32 %146, i32 %149, i8* %150, i32 %152, i32 %153), !dbg !5124
  %155 = icmp ne i32 %154, 0, !dbg !5124
  br i1 %155, label %156, label %157, !dbg !5125

156:                                              ; preds = %134
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)), !dbg !5126
  store i32 -1, i32* %11, align 4, !dbg !5128
  br label %274, !dbg !5128

157:                                              ; preds = %134
  br label %273, !dbg !5129

158:                                              ; preds = %10
  store i32 1, i32* %24, align 4, !dbg !5130
  %159 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5131
  %160 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %159, i32 0, i32 17, !dbg !5132
  %161 = load i16, i16* %160, align 2, !dbg !5132
  %162 = zext i16 %161 to i32, !dbg !5131
  store i32 %162, i32* %23, align 4, !dbg !5133
  %163 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5134
  %164 = load i8*, i8** %18, align 8, !dbg !5136
  %165 = load i32, i32* %24, align 4, !dbg !5137
  %166 = load i8*, i8** %19, align 8, !dbg !5138
  %167 = load i32*, i32** %20, align 8, !dbg !5139
  %168 = call i32 @update_output_file(%struct.tiff** %163, i8* %164, i32 %165, i8* %166, i32* %167), !dbg !5140
  %169 = icmp ne i32 %168, 0, !dbg !5140
  br i1 %169, label %170, label %171, !dbg !5141

170:                                              ; preds = %158
  store i32 1, i32* %11, align 4, !dbg !5142
  br label %274, !dbg !5142

171:                                              ; preds = %158
  store i32 0, i32* %22, align 4, !dbg !5143
  br label %172, !dbg !5145

172:                                              ; preds = %213, %171
  %173 = load i32, i32* %22, align 4, !dbg !5146
  %174 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5148
  %175 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %174, i32 0, i32 17, !dbg !5149
  %176 = load i16, i16* %175, align 2, !dbg !5149
  %177 = zext i16 %176 to i32, !dbg !5148
  %178 = icmp slt i32 %173, %177, !dbg !5150
  br i1 %178, label %179, label %216, !dbg !5151

179:                                              ; preds = %172
  %180 = load %struct.buffinfo*, %struct.buffinfo** %17, align 8, !dbg !5152
  %181 = load i32, i32* %22, align 4, !dbg !5154
  %182 = sext i32 %181 to i64, !dbg !5152
  %183 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %180, i64 %182, !dbg !5152
  %184 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %183, i32 0, i32 1, !dbg !5155
  %185 = load i8*, i8** %184, align 8, !dbg !5155
  store i8* %185, i8** %25, align 8, !dbg !5156
  %186 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5157
  %187 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5159
  %188 = load %struct.tiff*, %struct.tiff** %187, align 8, !dbg !5160
  %189 = load %struct.image_data*, %struct.image_data** %15, align 8, !dbg !5161
  %190 = load %struct.dump_opts*, %struct.dump_opts** %16, align 8, !dbg !5162
  %191 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5163
  %192 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %191, i32 0, i32 19, !dbg !5164
  %193 = load i32, i32* %22, align 4, !dbg !5165
  %194 = sext i32 %193 to i64, !dbg !5163
  %195 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %192, i64 0, i64 %194, !dbg !5163
  %196 = getelementptr inbounds %struct.region, %struct.region* %195, i32 0, i32 4, !dbg !5166
  %197 = load i32, i32* %196, align 8, !dbg !5166
  %198 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5167
  %199 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %198, i32 0, i32 19, !dbg !5168
  %200 = load i32, i32* %22, align 4, !dbg !5169
  %201 = sext i32 %200 to i64, !dbg !5167
  %202 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %199, i64 0, i64 %201, !dbg !5167
  %203 = getelementptr inbounds %struct.region, %struct.region* %202, i32 0, i32 5, !dbg !5170
  %204 = load i32, i32* %203, align 4, !dbg !5170
  %205 = load i8*, i8** %25, align 8, !dbg !5171
  %206 = load i32*, i32** %20, align 8, !dbg !5172
  %207 = load i32, i32* %206, align 4, !dbg !5173
  %208 = load i32, i32* %23, align 4, !dbg !5174
  %209 = call i32 @writeCroppedImage(%struct.tiff* %186, %struct.tiff* %188, %struct.image_data* %189, %struct.dump_opts* %190, i32 %197, i32 %204, i8* %205, i32 %207, i32 %208), !dbg !5175
  %210 = icmp ne i32 %209, 0, !dbg !5175
  br i1 %210, label %211, label %212, !dbg !5176

211:                                              ; preds = %179
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)), !dbg !5177
  store i32 -1, i32* %11, align 4, !dbg !5179
  br label %274, !dbg !5179

212:                                              ; preds = %179
  br label %213, !dbg !5180

213:                                              ; preds = %212
  %214 = load i32, i32* %22, align 4, !dbg !5181
  %215 = add nsw i32 %214, 1, !dbg !5181
  store i32 %215, i32* %22, align 4, !dbg !5181
  br label %172, !dbg !5182, !llvm.loop !5183

216:                                              ; preds = %172
  br label %273, !dbg !5185

217:                                              ; preds = %10
  store i32 1, i32* %24, align 4, !dbg !5186
  store i32 1, i32* %23, align 4, !dbg !5187
  store i32 0, i32* %22, align 4, !dbg !5188
  br label %218, !dbg !5190

218:                                              ; preds = %268, %217
  %219 = load i32, i32* %22, align 4, !dbg !5191
  %220 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5193
  %221 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %220, i32 0, i32 17, !dbg !5194
  %222 = load i16, i16* %221, align 2, !dbg !5194
  %223 = zext i16 %222 to i32, !dbg !5193
  %224 = icmp slt i32 %219, %223, !dbg !5195
  br i1 %224, label %225, label %271, !dbg !5196

225:                                              ; preds = %218
  %226 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5197
  %227 = load i8*, i8** %18, align 8, !dbg !5200
  %228 = load i32, i32* %24, align 4, !dbg !5201
  %229 = load i8*, i8** %19, align 8, !dbg !5202
  %230 = load i32*, i32** %20, align 8, !dbg !5203
  %231 = call i32 @update_output_file(%struct.tiff** %226, i8* %227, i32 %228, i8* %229, i32* %230), !dbg !5204
  %232 = icmp ne i32 %231, 0, !dbg !5204
  br i1 %232, label %233, label %234, !dbg !5205

233:                                              ; preds = %225
  store i32 1, i32* %11, align 4, !dbg !5206
  br label %274, !dbg !5206

234:                                              ; preds = %225
  %235 = load %struct.buffinfo*, %struct.buffinfo** %17, align 8, !dbg !5207
  %236 = load i32, i32* %22, align 4, !dbg !5208
  %237 = sext i32 %236 to i64, !dbg !5207
  %238 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %235, i64 %237, !dbg !5207
  %239 = getelementptr inbounds %struct.buffinfo, %struct.buffinfo* %238, i32 0, i32 1, !dbg !5209
  %240 = load i8*, i8** %239, align 8, !dbg !5209
  store i8* %240, i8** %25, align 8, !dbg !5210
  %241 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5211
  %242 = load %struct.tiff**, %struct.tiff*** %13, align 8, !dbg !5213
  %243 = load %struct.tiff*, %struct.tiff** %242, align 8, !dbg !5214
  %244 = load %struct.image_data*, %struct.image_data** %15, align 8, !dbg !5215
  %245 = load %struct.dump_opts*, %struct.dump_opts** %16, align 8, !dbg !5216
  %246 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5217
  %247 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %246, i32 0, i32 19, !dbg !5218
  %248 = load i32, i32* %22, align 4, !dbg !5219
  %249 = sext i32 %248 to i64, !dbg !5217
  %250 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %247, i64 0, i64 %249, !dbg !5217
  %251 = getelementptr inbounds %struct.region, %struct.region* %250, i32 0, i32 4, !dbg !5220
  %252 = load i32, i32* %251, align 8, !dbg !5220
  %253 = load %struct.crop_mask*, %struct.crop_mask** %14, align 8, !dbg !5221
  %254 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %253, i32 0, i32 19, !dbg !5222
  %255 = load i32, i32* %22, align 4, !dbg !5223
  %256 = sext i32 %255 to i64, !dbg !5221
  %257 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %254, i64 0, i64 %256, !dbg !5221
  %258 = getelementptr inbounds %struct.region, %struct.region* %257, i32 0, i32 5, !dbg !5224
  %259 = load i32, i32* %258, align 4, !dbg !5224
  %260 = load i8*, i8** %25, align 8, !dbg !5225
  %261 = load i32*, i32** %20, align 8, !dbg !5226
  %262 = load i32, i32* %261, align 4, !dbg !5227
  %263 = load i32, i32* %23, align 4, !dbg !5228
  %264 = call i32 @writeCroppedImage(%struct.tiff* %241, %struct.tiff* %243, %struct.image_data* %244, %struct.dump_opts* %245, i32 %252, i32 %259, i8* %260, i32 %262, i32 %263), !dbg !5229
  %265 = icmp ne i32 %264, 0, !dbg !5229
  br i1 %265, label %266, label %267, !dbg !5230

266:                                              ; preds = %234
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0)), !dbg !5231
  store i32 -1, i32* %11, align 4, !dbg !5233
  br label %274, !dbg !5233

267:                                              ; preds = %234
  br label %268, !dbg !5234

268:                                              ; preds = %267
  %269 = load i32, i32* %22, align 4, !dbg !5235
  %270 = add nsw i32 %269, 1, !dbg !5235
  store i32 %270, i32* %22, align 4, !dbg !5235
  br label %218, !dbg !5236, !llvm.loop !5237

271:                                              ; preds = %218
  br label %273, !dbg !5239

272:                                              ; preds = %10
  store i32 1, i32* %11, align 4, !dbg !5240
  br label %274, !dbg !5240

273:                                              ; preds = %271, %216, %157, %124, %63
  store i32 0, i32* %11, align 4, !dbg !5241
  br label %274, !dbg !5241

274:                                              ; preds = %273, %272, %266, %233, %211, %170, %156, %133, %119, %72, %62, %42
  %275 = load i32, i32* %11, align 4, !dbg !5242
  ret i32 %275, !dbg !5242
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @update_output_file(%struct.tiff**, i8*, i32, i8*, i32*) #0 !dbg !189 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.tiff**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [16 x i8], align 16
  %15 = alloca [4096 x i8], align 16
  store %struct.tiff** %0, %struct.tiff*** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff*** %7, metadata !5243, metadata !DIExpression()), !dbg !5244
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5245, metadata !DIExpression()), !dbg !5246
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5247, metadata !DIExpression()), !dbg !5248
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5249, metadata !DIExpression()), !dbg !5250
  store i32* %4, i32** %11, align 8
  call void @llvm.dbg.declare(metadata i32** %11, metadata !5251, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5253, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.declare(metadata [16 x i8]* %13, metadata !5255, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.declare(metadata [16 x i8]* %14, metadata !5257, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.declare(metadata [4096 x i8]* %15, metadata !5259, metadata !DIExpression()), !dbg !5263
  %16 = load i32, i32* %9, align 4, !dbg !5264
  %17 = icmp ne i32 %16, 0, !dbg !5264
  br i1 %17, label %18, label %26, !dbg !5266

18:                                               ; preds = %5
  %19 = load %struct.tiff**, %struct.tiff*** %7, align 8, !dbg !5267
  %20 = load %struct.tiff*, %struct.tiff** %19, align 8, !dbg !5268
  %21 = icmp ne %struct.tiff* %20, null, !dbg !5269
  br i1 %21, label %22, label %26, !dbg !5270

22:                                               ; preds = %18
  %23 = load %struct.tiff**, %struct.tiff*** %7, align 8, !dbg !5271
  %24 = load %struct.tiff*, %struct.tiff** %23, align 8, !dbg !5273
  call void @TIFFClose(%struct.tiff* %24), !dbg !5274
  %25 = load %struct.tiff**, %struct.tiff*** %7, align 8, !dbg !5275
  store %struct.tiff* null, %struct.tiff** %25, align 8, !dbg !5276
  br label %26, !dbg !5277

26:                                               ; preds = %22, %18, %5
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 0, !dbg !5278
  %28 = call i8* @strcpy(i8* %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i64 0, i64 0)) #8, !dbg !5279
  %29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5280
  call void @llvm.memset.p0i8.i64(i8* align 16 %29, i8 0, i64 4096, i1 false), !dbg !5280
  %30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5281
  %31 = load i8*, i8** %10, align 8, !dbg !5282
  %32 = call i8* @strncpy(i8* %30, i8* %31, i64 4080) #8, !dbg !5283
  %33 = load %struct.tiff**, %struct.tiff*** %7, align 8, !dbg !5284
  %34 = load %struct.tiff*, %struct.tiff** %33, align 8, !dbg !5286
  %35 = icmp eq %struct.tiff* %34, null, !dbg !5287
  br i1 %35, label %36, label %84, !dbg !5288

36:                                               ; preds = %26
  %37 = load i32, i32* %9, align 4, !dbg !5289
  %38 = icmp ne i32 %37, 0, !dbg !5289
  br i1 %38, label %39, label %71, !dbg !5292

39:                                               ; preds = %36
  %40 = load i32, i32* @update_output_file.findex, align 4, !dbg !5293
  %41 = add nsw i32 %40, 1, !dbg !5293
  store i32 %41, i32* @update_output_file.findex, align 4, !dbg !5293
  %42 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5295
  %43 = call i8* @strstr(i8* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.214, i64 0, i64 0)) #10, !dbg !5297
  store i8* %43, i8** %12, align 8, !dbg !5298
  %44 = icmp ne i8* %43, null, !dbg !5298
  br i1 %44, label %49, label %45, !dbg !5299

45:                                               ; preds = %39
  %46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5300
  %47 = call i8* @strstr(i8* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.215, i64 0, i64 0)) #10, !dbg !5301
  store i8* %47, i8** %12, align 8, !dbg !5302
  %48 = icmp ne i8* %47, null, !dbg !5302
  br i1 %48, label %49, label %54, !dbg !5303

49:                                               ; preds = %45, %39
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 0, !dbg !5304
  %51 = load i8*, i8** %12, align 8, !dbg !5306
  %52 = call i8* @strncpy(i8* %50, i8* %51, i64 5) #8, !dbg !5307
  %53 = load i8*, i8** %12, align 8, !dbg !5308
  store i8 0, i8* %53, align 1, !dbg !5309
  br label %57, !dbg !5310

54:                                               ; preds = %45
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 0, !dbg !5311
  %56 = call i8* @strncpy(i8* %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i64 0, i64 0), i64 5) #8, !dbg !5312
  br label %57

57:                                               ; preds = %54, %49
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 5, !dbg !5313
  store i8 0, i8* %58, align 1, !dbg !5314
  %59 = load i32, i32* @update_output_file.findex, align 4, !dbg !5315
  %60 = icmp sgt i32 %59, 999999, !dbg !5317
  br i1 %60, label %61, label %62, !dbg !5318

61:                                               ; preds = %57
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.217, i64 0, i64 0), i32 999999), !dbg !5319
  store i32 1, i32* %6, align 4, !dbg !5321
  br label %89, !dbg !5321

62:                                               ; preds = %57
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 0, !dbg !5322
  %64 = load i32, i32* @update_output_file.findex, align 4, !dbg !5323
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 0, !dbg !5324
  %66 = call i32 (i8*, i8*, ...) @sprintf(i8* %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.218, i64 0, i64 0), i32 %64, i8* %65) #8, !dbg !5325
  %67 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 14, !dbg !5326
  store i8 0, i8* %67, align 2, !dbg !5327
  %68 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5328
  %69 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 0, !dbg !5329
  %70 = call i8* @strncat(i8* %68, i8* %69, i64 15) #8, !dbg !5330
  br label %71, !dbg !5331

71:                                               ; preds = %62, %36
  %72 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 4095, !dbg !5332
  store i8 0, i8* %72, align 1, !dbg !5333
  %73 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5334
  %74 = load i8*, i8** %8, align 8, !dbg !5335
  %75 = call %struct.tiff* @TIFFOpen(i8* %73, i8* %74), !dbg !5336
  %76 = load %struct.tiff**, %struct.tiff*** %7, align 8, !dbg !5337
  store %struct.tiff* %75, %struct.tiff** %76, align 8, !dbg !5338
  %77 = load %struct.tiff**, %struct.tiff*** %7, align 8, !dbg !5339
  %78 = load %struct.tiff*, %struct.tiff** %77, align 8, !dbg !5341
  %79 = icmp eq %struct.tiff* %78, null, !dbg !5342
  br i1 %79, label %80, label %82, !dbg !5343

80:                                               ; preds = %71
  %81 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0, !dbg !5344
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.219, i64 0, i64 0), i8* %81), !dbg !5346
  store i32 1, i32* %6, align 4, !dbg !5347
  br label %89, !dbg !5347

82:                                               ; preds = %71
  %83 = load i32*, i32** %11, align 8, !dbg !5348
  store i32 0, i32* %83, align 4, !dbg !5349
  store i32 0, i32* %6, align 4, !dbg !5350
  br label %89, !dbg !5350

84:                                               ; preds = %26
  %85 = load i32*, i32** %11, align 8, !dbg !5351
  %86 = load i32, i32* %85, align 4, !dbg !5352
  %87 = add i32 %86, 1, !dbg !5352
  store i32 %87, i32* %85, align 4, !dbg !5352
  br label %88

88:                                               ; preds = %84
  store i32 0, i32* %6, align 4, !dbg !5353
  br label %89, !dbg !5353

89:                                               ; preds = %88, %82, %80, %61
  %90 = load i32, i32* %6, align 4, !dbg !5354
  ret i32 %90, !dbg !5354
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeCroppedImage(%struct.tiff*, %struct.tiff*, %struct.image_data*, %struct.dump_opts*, i32, i32, i8*, i32, i32) #0 !dbg !5355 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.tiff*, align 8
  %12 = alloca %struct.tiff*, align 8
  %13 = alloca %struct.image_data*, align 8
  %14 = alloca %struct.dump_opts*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca i16, align 2
  %24 = alloca i16, align 2
  %25 = alloca %struct.cpTag*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i8**, align 8
  %28 = alloca i16, align 2
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca i16, align 2
  %33 = alloca i16, align 2
  store %struct.tiff* %0, %struct.tiff** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %11, metadata !5358, metadata !DIExpression()), !dbg !5359
  store %struct.tiff* %1, %struct.tiff** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %12, metadata !5360, metadata !DIExpression()), !dbg !5361
  store %struct.image_data* %2, %struct.image_data** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %13, metadata !5362, metadata !DIExpression()), !dbg !5363
  store %struct.dump_opts* %3, %struct.dump_opts** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %14, metadata !5364, metadata !DIExpression()), !dbg !5365
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5366, metadata !DIExpression()), !dbg !5367
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5368, metadata !DIExpression()), !dbg !5369
  store i8* %6, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !5370, metadata !DIExpression()), !dbg !5371
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !5372, metadata !DIExpression()), !dbg !5373
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5374, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.declare(metadata i16* %20, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata i16* %21, metadata !5378, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.declare(metadata i16* %22, metadata !5380, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.declare(metadata i16* %23, metadata !5382, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata i16* %24, metadata !5384, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata %struct.cpTag** %25, metadata !5386, metadata !DIExpression()), !dbg !5388
  %34 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !5389
  %35 = getelementptr inbounds %struct.image_data, %struct.image_data* %34, i32 0, i32 10, !dbg !5390
  %36 = load i16, i16* %35, align 4, !dbg !5390
  store i16 %36, i16* %22, align 2, !dbg !5391
  %37 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !5392
  %38 = getelementptr inbounds %struct.image_data, %struct.image_data* %37, i32 0, i32 8, !dbg !5393
  %39 = load i16, i16* %38, align 4, !dbg !5393
  store i16 %39, i16* %23, align 2, !dbg !5394
  %40 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !5395
  %41 = getelementptr inbounds %struct.image_data, %struct.image_data* %40, i32 0, i32 6, !dbg !5396
  %42 = load i16, i16* %41, align 4, !dbg !5396
  store i16 %42, i16* %21, align 2, !dbg !5397
  %43 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !5398
  %44 = getelementptr inbounds %struct.image_data, %struct.image_data* %43, i32 0, i32 5, !dbg !5399
  %45 = load i16, i16* %44, align 2, !dbg !5399
  store i16 %45, i16* %20, align 2, !dbg !5400
  %46 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5401
  %47 = load i32, i32* %15, align 4, !dbg !5402
  %48 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %46, i32 256, i32 %47), !dbg !5403
  %49 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5404
  %50 = load i32, i32* %16, align 4, !dbg !5405
  %51 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %49, i32 257, i32 %50), !dbg !5406
  %52 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5407
  %53 = load i16, i16* %20, align 2, !dbg !5408
  %54 = zext i16 %53 to i32, !dbg !5408
  %55 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %52, i32 258, i32 %54), !dbg !5409
  %56 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5410
  %57 = load i16, i16* %21, align 2, !dbg !5411
  %58 = zext i16 %57 to i32, !dbg !5411
  %59 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %56, i32 277, i32 %58), !dbg !5412
  %60 = load i16, i16* @compression, align 2, !dbg !5413
  %61 = zext i16 %60 to i32, !dbg !5413
  %62 = icmp ne i32 %61, 65535, !dbg !5415
  br i1 %62, label %63, label %68, !dbg !5416

63:                                               ; preds = %9
  %64 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5417
  %65 = load i16, i16* @compression, align 2, !dbg !5418
  %66 = zext i16 %65 to i32, !dbg !5418
  %67 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %64, i32 259, i32 %66), !dbg !5419
  br label %86, !dbg !5419

68:                                               ; preds = %9
  %69 = load i16, i16* %22, align 2, !dbg !5420
  %70 = zext i16 %69 to i32, !dbg !5420
  %71 = icmp eq i32 %70, 6, !dbg !5423
  br i1 %71, label %72, label %75, !dbg !5424

72:                                               ; preds = %68
  store i16 7, i16* @compression, align 2, !dbg !5425
  store i32 0, i32* @jpegcolormode, align 4, !dbg !5427
  %73 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5428
  %74 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %73, i32 259, i32 7), !dbg !5429
  br label %85, !dbg !5430

75:                                               ; preds = %68
  %76 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5431
  %77 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %76, i32 259, i16* @compression), !dbg !5431
  %78 = icmp ne i32 %77, 0, !dbg !5431
  br i1 %78, label %79, label %84, !dbg !5433

79:                                               ; preds = %75
  %80 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5431
  %81 = load i16, i16* @compression, align 2, !dbg !5431
  %82 = zext i16 %81 to i32, !dbg !5431
  %83 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %80, i32 259, i32 %82), !dbg !5431
  br label %84, !dbg !5431

84:                                               ; preds = %79, %75
  br label %85

85:                                               ; preds = %84, %72
  br label %86

86:                                               ; preds = %85, %63
  %87 = load i16, i16* @compression, align 2, !dbg !5434
  %88 = zext i16 %87 to i32, !dbg !5434
  %89 = icmp eq i32 %88, 7, !dbg !5436
  br i1 %89, label %90, label %120, !dbg !5437

90:                                               ; preds = %86
  %91 = load i16, i16* %23, align 2, !dbg !5438
  %92 = zext i16 %91 to i32, !dbg !5438
  %93 = icmp eq i32 %92, 3, !dbg !5441
  br i1 %93, label %98, label %94, !dbg !5442

94:                                               ; preds = %90
  %95 = load i16, i16* %23, align 2, !dbg !5443
  %96 = zext i16 %95 to i32, !dbg !5443
  %97 = icmp eq i32 %96, 4, !dbg !5444
  br i1 %97, label %98, label %104, !dbg !5445

98:                                               ; preds = %94, %90
  %99 = load i16, i16* %23, align 2, !dbg !5446
  %100 = zext i16 %99 to i32, !dbg !5446
  %101 = icmp eq i32 %100, 3, !dbg !5448
  %102 = zext i1 %101 to i64, !dbg !5449
  %103 = select i1 %101, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.360, i64 0, i64 0), !dbg !5449
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.358, i64 0, i64 0), i8* %103), !dbg !5450
  store i32 -1, i32* %10, align 4, !dbg !5451
  br label %529, !dbg !5451

104:                                              ; preds = %94
  %105 = load i16, i16* %23, align 2, !dbg !5452
  %106 = zext i16 %105 to i32, !dbg !5452
  %107 = icmp eq i32 %106, 2, !dbg !5454
  br i1 %107, label %108, label %114, !dbg !5455

108:                                              ; preds = %104
  %109 = load i32, i32* @jpegcolormode, align 4, !dbg !5456
  %110 = icmp eq i32 %109, 1, !dbg !5457
  br i1 %110, label %111, label %114, !dbg !5458

111:                                              ; preds = %108
  %112 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5459
  %113 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %112, i32 262, i32 6), !dbg !5460
  br label %119, !dbg !5460

114:                                              ; preds = %108, %104
  %115 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5461
  %116 = load i16, i16* %23, align 2, !dbg !5462
  %117 = zext i16 %116 to i32, !dbg !5462
  %118 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %115, i32 262, i32 %117), !dbg !5463
  br label %119

119:                                              ; preds = %114, %111
  br label %161, !dbg !5464

120:                                              ; preds = %86
  %121 = load i16, i16* @compression, align 2, !dbg !5465
  %122 = zext i16 %121 to i32, !dbg !5465
  %123 = icmp eq i32 %122, 34676, !dbg !5468
  br i1 %123, label %128, label %124, !dbg !5469

124:                                              ; preds = %120
  %125 = load i16, i16* @compression, align 2, !dbg !5470
  %126 = zext i16 %125 to i32, !dbg !5470
  %127 = icmp eq i32 %126, 34677, !dbg !5471
  br i1 %127, label %128, label %136, !dbg !5472

128:                                              ; preds = %124, %120
  %129 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5473
  %130 = load i16, i16* %21, align 2, !dbg !5475
  %131 = zext i16 %130 to i32, !dbg !5475
  %132 = icmp eq i32 %131, 1, !dbg !5476
  %133 = zext i1 %132 to i64, !dbg !5475
  %134 = select i1 %132, i32 32844, i32 32845, !dbg !5475
  %135 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %129, i32 262, i32 %134), !dbg !5477
  br label %160, !dbg !5478

136:                                              ; preds = %124
  %137 = load i16, i16* %22, align 2, !dbg !5479
  %138 = zext i16 %137 to i32, !dbg !5479
  %139 = icmp eq i32 %138, 34676, !dbg !5482
  br i1 %139, label %144, label %140, !dbg !5483

140:                                              ; preds = %136
  %141 = load i16, i16* %22, align 2, !dbg !5484
  %142 = zext i16 %141 to i32, !dbg !5484
  %143 = icmp eq i32 %142, 34677, !dbg !5485
  br i1 %143, label %144, label %152, !dbg !5486

144:                                              ; preds = %140, %136
  %145 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5487
  %146 = load i16, i16* %21, align 2, !dbg !5489
  %147 = zext i16 %146 to i32, !dbg !5489
  %148 = icmp eq i32 %147, 1, !dbg !5490
  %149 = zext i1 %148 to i64, !dbg !5489
  %150 = select i1 %148, i32 32844, i32 32845, !dbg !5489
  %151 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %145, i32 262, i32 %150), !dbg !5491
  br label %159, !dbg !5492

152:                                              ; preds = %140
  %153 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5493
  %154 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !5494
  %155 = getelementptr inbounds %struct.image_data, %struct.image_data* %154, i32 0, i32 8, !dbg !5495
  %156 = load i16, i16* %155, align 4, !dbg !5495
  %157 = zext i16 %156 to i32, !dbg !5494
  %158 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %153, i32 262, i32 %157), !dbg !5496
  br label %159

159:                                              ; preds = %152, %144
  br label %160

160:                                              ; preds = %159, %128
  br label %161

161:                                              ; preds = %160, %119
  %162 = load i16, i16* %23, align 2, !dbg !5497
  %163 = zext i16 %162 to i32, !dbg !5497
  %164 = icmp eq i32 %163, 32844, !dbg !5499
  br i1 %164, label %169, label %165, !dbg !5500

165:                                              ; preds = %161
  %166 = load i16, i16* %23, align 2, !dbg !5501
  %167 = zext i16 %166 to i32, !dbg !5501
  %168 = icmp eq i32 %167, 32845, !dbg !5502
  br i1 %168, label %169, label %178, !dbg !5503

169:                                              ; preds = %165, %161
  %170 = load i16, i16* @compression, align 2, !dbg !5504
  %171 = zext i16 %170 to i32, !dbg !5504
  %172 = icmp ne i32 %171, 34676, !dbg !5505
  br i1 %172, label %173, label %178, !dbg !5506

173:                                              ; preds = %169
  %174 = load i16, i16* @compression, align 2, !dbg !5507
  %175 = zext i16 %174 to i32, !dbg !5507
  %176 = icmp ne i32 %175, 34677, !dbg !5508
  br i1 %176, label %177, label %178, !dbg !5509

177:                                              ; preds = %173
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.361, i64 0, i64 0)), !dbg !5510
  store i32 -1, i32* %10, align 4, !dbg !5512
  br label %529, !dbg !5512

178:                                              ; preds = %173, %169, %165
  %179 = load i16, i16* @fillorder, align 2, !dbg !5513
  %180 = zext i16 %179 to i32, !dbg !5513
  %181 = icmp ne i32 %180, 0, !dbg !5515
  br i1 %181, label %182, label %187, !dbg !5516

182:                                              ; preds = %178
  %183 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5517
  %184 = load i16, i16* @fillorder, align 2, !dbg !5518
  %185 = zext i16 %184 to i32, !dbg !5518
  %186 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %183, i32 266, i32 %185), !dbg !5519
  br label %190, !dbg !5519

187:                                              ; preds = %178
  %188 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5520
  %189 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5520
  call void @cpTag(%struct.tiff* %188, %struct.tiff* %189, i16 zeroext 266, i16 zeroext 1, i32 3), !dbg !5520
  br label %190

190:                                              ; preds = %187, %182
  %191 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5521
  %192 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !5522
  %193 = getelementptr inbounds %struct.image_data, %struct.image_data* %192, i32 0, i32 9, !dbg !5523
  %194 = load i16, i16* %193, align 2, !dbg !5523
  %195 = zext i16 %194 to i32, !dbg !5522
  %196 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %191, i32 274, i32 %195), !dbg !5524
  %197 = load i32, i32* @outtiled, align 4, !dbg !5525
  %198 = icmp eq i32 %197, -1, !dbg !5527
  br i1 %198, label %199, label %202, !dbg !5528

199:                                              ; preds = %190
  %200 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5529
  %201 = call i32 @TIFFIsTiled(%struct.tiff* %200), !dbg !5530
  store i32 %201, i32* @outtiled, align 4, !dbg !5531
  br label %202, !dbg !5532

202:                                              ; preds = %199, %190
  %203 = load i32, i32* @outtiled, align 4, !dbg !5533
  %204 = icmp ne i32 %203, 0, !dbg !5533
  br i1 %204, label %205, label %232, !dbg !5535

205:                                              ; preds = %202
  %206 = load i32, i32* @tilewidth, align 4, !dbg !5536
  %207 = icmp eq i32 %206, 0, !dbg !5539
  br i1 %207, label %208, label %211, !dbg !5540

208:                                              ; preds = %205
  %209 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5541
  %210 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %209, i32 322, i32* @tilewidth), !dbg !5542
  br label %211, !dbg !5542

211:                                              ; preds = %208, %205
  %212 = load i32, i32* @tilelength, align 4, !dbg !5543
  %213 = icmp eq i32 %212, 0, !dbg !5545
  br i1 %213, label %214, label %217, !dbg !5546

214:                                              ; preds = %211
  %215 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5547
  %216 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %215, i32 323, i32* @tilelength), !dbg !5548
  br label %217, !dbg !5548

217:                                              ; preds = %214, %211
  %218 = load i32, i32* @tilewidth, align 4, !dbg !5549
  %219 = icmp eq i32 %218, 0, !dbg !5551
  br i1 %219, label %223, label %220, !dbg !5552

220:                                              ; preds = %217
  %221 = load i32, i32* @tilelength, align 4, !dbg !5553
  %222 = icmp eq i32 %221, 0, !dbg !5554
  br i1 %222, label %223, label %225, !dbg !5555

223:                                              ; preds = %220, %217
  %224 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5556
  call void @TIFFDefaultTileSize(%struct.tiff* %224, i32* @tilewidth, i32* @tilelength), !dbg !5557
  br label %225, !dbg !5557

225:                                              ; preds = %223, %220
  %226 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5558
  %227 = load i32, i32* @tilewidth, align 4, !dbg !5559
  %228 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %226, i32 322, i32 %227), !dbg !5560
  %229 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5561
  %230 = load i32, i32* @tilelength, align 4, !dbg !5562
  %231 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %229, i32 323, i32 %230), !dbg !5563
  br label %265, !dbg !5564

232:                                              ; preds = %202
  %233 = load i32, i32* @rowsperstrip, align 4, !dbg !5565
  %234 = icmp eq i32 %233, 0, !dbg !5568
  br i1 %234, label %235, label %255, !dbg !5569

235:                                              ; preds = %232
  %236 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5570
  %237 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %236, i32 278, i32* @rowsperstrip), !dbg !5573
  %238 = icmp ne i32 %237, 0, !dbg !5573
  br i1 %238, label %243, label %239, !dbg !5574

239:                                              ; preds = %235
  %240 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5575
  %241 = load i32, i32* @rowsperstrip, align 4, !dbg !5576
  %242 = call i32 @TIFFDefaultStripSize(%struct.tiff* %240, i32 %241), !dbg !5577
  store i32 %242, i32* @rowsperstrip, align 4, !dbg !5578
  br label %243, !dbg !5579

243:                                              ; preds = %239, %235
  %244 = load i16, i16* @compression, align 2, !dbg !5580
  %245 = zext i16 %244 to i32, !dbg !5580
  %246 = icmp ne i32 %245, 7, !dbg !5582
  br i1 %246, label %247, label %254, !dbg !5583

247:                                              ; preds = %243
  %248 = load i32, i32* @rowsperstrip, align 4, !dbg !5584
  %249 = load i32, i32* %16, align 4, !dbg !5587
  %250 = icmp ugt i32 %248, %249, !dbg !5588
  br i1 %250, label %251, label %253, !dbg !5589

251:                                              ; preds = %247
  %252 = load i32, i32* %16, align 4, !dbg !5590
  store i32 %252, i32* @rowsperstrip, align 4, !dbg !5591
  br label %253, !dbg !5592

253:                                              ; preds = %251, %247
  br label %254, !dbg !5593

254:                                              ; preds = %253, %243
  br label %261, !dbg !5594

255:                                              ; preds = %232
  %256 = load i32, i32* @rowsperstrip, align 4, !dbg !5595
  %257 = icmp eq i32 %256, -1, !dbg !5597
  br i1 %257, label %258, label %260, !dbg !5598

258:                                              ; preds = %255
  %259 = load i32, i32* %16, align 4, !dbg !5599
  store i32 %259, i32* @rowsperstrip, align 4, !dbg !5600
  br label %260, !dbg !5601

260:                                              ; preds = %258, %255
  br label %261

261:                                              ; preds = %260, %254
  %262 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5602
  %263 = load i32, i32* @rowsperstrip, align 4, !dbg !5603
  %264 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %262, i32 278, i32 %263), !dbg !5604
  br label %265

265:                                              ; preds = %261, %225
  %266 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5605
  %267 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %266, i32 284, i16* %24), !dbg !5606
  %268 = load i16, i16* @config, align 2, !dbg !5607
  %269 = zext i16 %268 to i32, !dbg !5607
  %270 = icmp ne i32 %269, 65535, !dbg !5609
  br i1 %270, label %271, label %276, !dbg !5610

271:                                              ; preds = %265
  %272 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5611
  %273 = load i16, i16* @config, align 2, !dbg !5612
  %274 = zext i16 %273 to i32, !dbg !5612
  %275 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %272, i32 284, i32 %274), !dbg !5613
  br label %286, !dbg !5613

276:                                              ; preds = %265
  %277 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5614
  %278 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %277, i32 284, i16* @config), !dbg !5614
  %279 = icmp ne i32 %278, 0, !dbg !5614
  br i1 %279, label %280, label %285, !dbg !5616

280:                                              ; preds = %276
  %281 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5614
  %282 = load i16, i16* @config, align 2, !dbg !5614
  %283 = zext i16 %282 to i32, !dbg !5614
  %284 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %281, i32 284, i32 %283), !dbg !5614
  br label %285, !dbg !5614

285:                                              ; preds = %280, %276
  br label %286

286:                                              ; preds = %285, %271
  %287 = load i16, i16* %21, align 2, !dbg !5617
  %288 = zext i16 %287 to i32, !dbg !5617
  %289 = icmp sle i32 %288, 4, !dbg !5619
  br i1 %289, label %290, label %293, !dbg !5620

290:                                              ; preds = %286
  %291 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5621
  %292 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5621
  call void @cpTag(%struct.tiff* %291, %struct.tiff* %292, i16 zeroext 301, i16 zeroext 4, i32 3), !dbg !5621
  br label %293, !dbg !5621

293:                                              ; preds = %290, %286
  %294 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5622
  %295 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5622
  call void @cpTag(%struct.tiff* %294, %struct.tiff* %295, i16 zeroext 320, i16 zeroext 4, i32 3), !dbg !5622
  %296 = load i16, i16* @compression, align 2, !dbg !5623
  %297 = zext i16 %296 to i32, !dbg !5623
  switch i32 %297, label %379 [
    i32 7, label %298
    i32 5, label %316
    i32 8, label %316
    i32 32946, label %316
    i32 3, label %336
    i32 4, label %336
    i32 1, label %378
  ], !dbg !5624

298:                                              ; preds = %293
  %299 = load i16, i16* %20, align 2, !dbg !5625
  %300 = zext i16 %299 to i32, !dbg !5625
  %301 = srem i32 %300, 8, !dbg !5628
  %302 = icmp eq i32 %301, 0, !dbg !5629
  br i1 %302, label %308, label %303, !dbg !5630

303:                                              ; preds = %298
  %304 = load i16, i16* %20, align 2, !dbg !5631
  %305 = zext i16 %304 to i32, !dbg !5631
  %306 = srem i32 %305, 12, !dbg !5632
  %307 = icmp eq i32 %306, 0, !dbg !5633
  br i1 %307, label %308, label %314, !dbg !5634

308:                                              ; preds = %303, %298
  %309 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5635
  %310 = load i32, i32* @quality, align 4, !dbg !5637
  %311 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %309, i32 65537, i32 %310), !dbg !5638
  %312 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5639
  %313 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %312, i32 65538, i32 1), !dbg !5640
  br label %315, !dbg !5641

314:                                              ; preds = %303
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.362, i64 0, i64 0)), !dbg !5642
  store i32 -1, i32* %10, align 4, !dbg !5644
  br label %529, !dbg !5644

315:                                              ; preds = %308
  br label %380, !dbg !5645

316:                                              ; preds = %293, %293, %293
  %317 = load i16, i16* @predictor, align 2, !dbg !5646
  %318 = zext i16 %317 to i32, !dbg !5646
  %319 = icmp ne i32 %318, 65535, !dbg !5648
  br i1 %319, label %320, label %325, !dbg !5649

320:                                              ; preds = %316
  %321 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5650
  %322 = load i16, i16* @predictor, align 2, !dbg !5651
  %323 = zext i16 %322 to i32, !dbg !5651
  %324 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %321, i32 317, i32 %323), !dbg !5652
  br label %335, !dbg !5652

325:                                              ; preds = %316
  %326 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5653
  %327 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %326, i32 317, i16* @predictor), !dbg !5653
  %328 = icmp ne i32 %327, 0, !dbg !5653
  br i1 %328, label %329, label %334, !dbg !5655

329:                                              ; preds = %325
  %330 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5653
  %331 = load i16, i16* @predictor, align 2, !dbg !5653
  %332 = zext i16 %331 to i32, !dbg !5653
  %333 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %330, i32 317, i32 %332), !dbg !5653
  br label %334, !dbg !5653

334:                                              ; preds = %329, %325
  br label %335

335:                                              ; preds = %334, %320
  br label %380, !dbg !5656

336:                                              ; preds = %293, %293
  %337 = load i16, i16* %20, align 2, !dbg !5657
  %338 = zext i16 %337 to i32, !dbg !5657
  %339 = icmp ne i32 %338, 1, !dbg !5659
  br i1 %339, label %340, label %341, !dbg !5660

340:                                              ; preds = %336
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.407, i64 0, i64 0)), !dbg !5661
  store i32 -1, i32* %10, align 4, !dbg !5663
  br label %529, !dbg !5663

341:                                              ; preds = %336
  %342 = load i16, i16* @compression, align 2, !dbg !5664
  %343 = zext i16 %342 to i32, !dbg !5664
  %344 = icmp eq i32 %343, 3, !dbg !5666
  br i1 %344, label %345, label %362, !dbg !5667

345:                                              ; preds = %341
  %346 = load i32, i32* @g3opts, align 4, !dbg !5668
  %347 = icmp ne i32 %346, -1, !dbg !5671
  br i1 %347, label %348, label %352, !dbg !5672

348:                                              ; preds = %345
  %349 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5673
  %350 = load i32, i32* @g3opts, align 4, !dbg !5674
  %351 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %349, i32 292, i32 %350), !dbg !5675
  br label %361, !dbg !5675

352:                                              ; preds = %345
  %353 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5676
  %354 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %353, i32 292, i32* @g3opts), !dbg !5676
  %355 = icmp ne i32 %354, 0, !dbg !5676
  br i1 %355, label %356, label %360, !dbg !5678

356:                                              ; preds = %352
  %357 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5676
  %358 = load i32, i32* @g3opts, align 4, !dbg !5676
  %359 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %357, i32 292, i32 %358), !dbg !5676
  br label %360, !dbg !5676

360:                                              ; preds = %356, %352
  br label %361

361:                                              ; preds = %360, %348
  br label %365, !dbg !5679

362:                                              ; preds = %341
  %363 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5680
  %364 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5680
  call void @cpTag(%struct.tiff* %363, %struct.tiff* %364, i16 zeroext 293, i16 zeroext 1, i32 4), !dbg !5680
  br label %365

365:                                              ; preds = %362, %361
  %366 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5681
  %367 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5681
  call void @cpTag(%struct.tiff* %366, %struct.tiff* %367, i16 zeroext 326, i16 zeroext 1, i32 4), !dbg !5681
  %368 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5682
  %369 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5682
  call void @cpTag(%struct.tiff* %368, %struct.tiff* %369, i16 zeroext 327, i16 zeroext 1, i32 4), !dbg !5682
  %370 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5683
  %371 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5683
  call void @cpTag(%struct.tiff* %370, %struct.tiff* %371, i16 zeroext 328, i16 zeroext 1, i32 4), !dbg !5683
  %372 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5684
  %373 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5684
  call void @cpTag(%struct.tiff* %372, %struct.tiff* %373, i16 zeroext -30628, i16 zeroext 1, i32 4), !dbg !5684
  %374 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5685
  %375 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5685
  call void @cpTag(%struct.tiff* %374, %struct.tiff* %375, i16 zeroext -30626, i16 zeroext 1, i32 4), !dbg !5685
  %376 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5686
  %377 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5686
  call void @cpTag(%struct.tiff* %376, %struct.tiff* %377, i16 zeroext -30627, i16 zeroext 1, i32 2), !dbg !5686
  br label %380, !dbg !5687

378:                                              ; preds = %293
  br label %380, !dbg !5688

379:                                              ; preds = %293
  br label %380, !dbg !5689

380:                                              ; preds = %379, %378, %365, %335, %315
  call void @llvm.dbg.declare(metadata i32* %26, metadata !5690, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.declare(metadata i8*** %27, metadata !5693, metadata !DIExpression()), !dbg !5694
  %381 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5695
  %382 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %381, i32 34675, i32* %26, i8*** %27), !dbg !5697
  %383 = icmp ne i32 %382, 0, !dbg !5697
  br i1 %383, label %384, label %389, !dbg !5698

384:                                              ; preds = %380
  %385 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5699
  %386 = load i32, i32* %26, align 4, !dbg !5700
  %387 = load i8**, i8*** %27, align 8, !dbg !5701
  %388 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %385, i32 34675, i32 %386, i8** %387), !dbg !5702
  br label %389, !dbg !5702

389:                                              ; preds = %384, %380
  call void @llvm.dbg.declare(metadata i16* %28, metadata !5703, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.declare(metadata i8** %29, metadata !5706, metadata !DIExpression()), !dbg !5709
  %390 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5710
  %391 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %390, i32 334, i16* %28), !dbg !5712
  %392 = icmp ne i32 %391, 0, !dbg !5712
  br i1 %392, label %393, label %435, !dbg !5713

393:                                              ; preds = %389
  %394 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5714
  %395 = load i16, i16* %28, align 2, !dbg !5716
  %396 = zext i16 %395 to i32, !dbg !5716
  %397 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %394, i32 334, i32 %396), !dbg !5717
  %398 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5718
  %399 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %398, i32 333, i8** %29), !dbg !5720
  %400 = icmp ne i32 %399, 0, !dbg !5720
  br i1 %400, label %401, label %434, !dbg !5721

401:                                              ; preds = %393
  call void @llvm.dbg.declare(metadata i32* %30, metadata !5722, metadata !DIExpression()), !dbg !5724
  %402 = load i8*, i8** %29, align 8, !dbg !5725
  %403 = call i64 @strlen(i8* %402) #10, !dbg !5726
  %404 = add i64 %403, 1, !dbg !5727
  %405 = trunc i64 %404 to i32, !dbg !5726
  store i32 %405, i32* %30, align 4, !dbg !5724
  call void @llvm.dbg.declare(metadata i8** %31, metadata !5728, metadata !DIExpression()), !dbg !5729
  %406 = load i8*, i8** %29, align 8, !dbg !5730
  store i8* %406, i8** %31, align 8, !dbg !5729
  br label %407, !dbg !5731

407:                                              ; preds = %426, %401
  %408 = load i16, i16* %28, align 2, !dbg !5732
  %409 = zext i16 %408 to i32, !dbg !5732
  %410 = icmp sgt i32 %409, 1, !dbg !5733
  br i1 %410, label %411, label %429, !dbg !5731

411:                                              ; preds = %407
  %412 = load i8*, i8** %31, align 8, !dbg !5734
  %413 = call i8* @strchr(i8* %412, i32 0) #10, !dbg !5736
  store i8* %413, i8** %31, align 8, !dbg !5737
  %414 = load i8*, i8** %31, align 8, !dbg !5738
  %415 = icmp ne i8* %414, null, !dbg !5738
  br i1 %415, label %416, label %426, !dbg !5740

416:                                              ; preds = %411
  %417 = load i8*, i8** %31, align 8, !dbg !5741
  %418 = getelementptr inbounds i8, i8* %417, i32 1, !dbg !5741
  store i8* %418, i8** %31, align 8, !dbg !5741
  %419 = load i8*, i8** %31, align 8, !dbg !5743
  %420 = call i64 @strlen(i8* %419) #10, !dbg !5744
  %421 = add i64 %420, 1, !dbg !5745
  %422 = load i32, i32* %30, align 4, !dbg !5746
  %423 = sext i32 %422 to i64, !dbg !5746
  %424 = add i64 %423, %421, !dbg !5746
  %425 = trunc i64 %424 to i32, !dbg !5746
  store i32 %425, i32* %30, align 4, !dbg !5746
  br label %426, !dbg !5747

426:                                              ; preds = %416, %411
  %427 = load i16, i16* %28, align 2, !dbg !5748
  %428 = add i16 %427, -1, !dbg !5748
  store i16 %428, i16* %28, align 2, !dbg !5748
  br label %407, !dbg !5731, !llvm.loop !5749

429:                                              ; preds = %407
  %430 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5751
  %431 = load i32, i32* %30, align 4, !dbg !5752
  %432 = load i8*, i8** %29, align 8, !dbg !5753
  %433 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %430, i32 333, i32 %431, i8* %432), !dbg !5754
  br label %434, !dbg !5755

434:                                              ; preds = %429, %393
  br label %435, !dbg !5756

435:                                              ; preds = %434, %389
  call void @llvm.dbg.declare(metadata i16* %32, metadata !5757, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i16* %33, metadata !5760, metadata !DIExpression()), !dbg !5761
  %436 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5762
  %437 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %436, i32 297, i16* %32, i16* %33), !dbg !5764
  %438 = icmp ne i32 %437, 0, !dbg !5764
  br i1 %438, label %439, label %444, !dbg !5765

439:                                              ; preds = %435
  %440 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5766
  %441 = load i32, i32* %18, align 4, !dbg !5768
  %442 = load i32, i32* %19, align 4, !dbg !5769
  %443 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %440, i32 297, i32 %441, i32 %442), !dbg !5770
  br label %444, !dbg !5771

444:                                              ; preds = %439, %435
  store %struct.cpTag* getelementptr inbounds ([33 x %struct.cpTag], [33 x %struct.cpTag]* @tags, i64 0, i64 0), %struct.cpTag** %25, align 8, !dbg !5772
  br label %445, !dbg !5774

445:                                              ; preds = %460, %444
  %446 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !5775
  %447 = icmp ult %struct.cpTag* %446, getelementptr inbounds ([33 x %struct.cpTag], [33 x %struct.cpTag]* @tags, i64 1, i64 0), !dbg !5777
  br i1 %447, label %448, label %463, !dbg !5778

448:                                              ; preds = %445
  %449 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !5779
  %450 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5779
  %451 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !5779
  %452 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %451, i32 0, i32 0, !dbg !5779
  %453 = load i16, i16* %452, align 4, !dbg !5779
  %454 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !5779
  %455 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %454, i32 0, i32 1, !dbg !5779
  %456 = load i16, i16* %455, align 2, !dbg !5779
  %457 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !5779
  %458 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %457, i32 0, i32 2, !dbg !5779
  %459 = load i32, i32* %458, align 4, !dbg !5779
  call void @cpTag(%struct.tiff* %449, %struct.tiff* %450, i16 zeroext %453, i16 zeroext %456, i32 %459), !dbg !5779
  br label %460, !dbg !5779

460:                                              ; preds = %448
  %461 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !5780
  %462 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %461, i32 1, !dbg !5780
  store %struct.cpTag* %462, %struct.cpTag** %25, align 8, !dbg !5780
  br label %445, !dbg !5781, !llvm.loop !5782

463:                                              ; preds = %445
  %464 = load i32, i32* @outtiled, align 4, !dbg !5784
  %465 = icmp ne i32 %464, 0, !dbg !5784
  br i1 %465, label %466, label %495, !dbg !5786

466:                                              ; preds = %463
  %467 = load i16, i16* @config, align 2, !dbg !5787
  %468 = zext i16 %467 to i32, !dbg !5787
  %469 = icmp eq i32 %468, 1, !dbg !5790
  br i1 %469, label %470, label %482, !dbg !5791

470:                                              ; preds = %466
  %471 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5792
  %472 = load i8*, i8** %17, align 8, !dbg !5795
  %473 = load i32, i32* %16, align 4, !dbg !5796
  %474 = load i32, i32* %15, align 4, !dbg !5797
  %475 = load i16, i16* %21, align 2, !dbg !5798
  %476 = load %struct.dump_opts*, %struct.dump_opts** %14, align 8, !dbg !5799
  %477 = call i32 @writeBufferToContigTiles(%struct.tiff* %471, i8* %472, i32 %473, i32 %474, i16 zeroext %475, %struct.dump_opts* %476), !dbg !5800
  %478 = icmp ne i32 %477, 0, !dbg !5800
  br i1 %478, label %479, label %481, !dbg !5801

479:                                              ; preds = %470
  %480 = load i32, i32* %18, align 4, !dbg !5802
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.408, i64 0, i64 0), i32 %480), !dbg !5803
  br label %481, !dbg !5803

481:                                              ; preds = %479, %470
  br label %494, !dbg !5804

482:                                              ; preds = %466
  %483 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5805
  %484 = load i8*, i8** %17, align 8, !dbg !5808
  %485 = load i32, i32* %16, align 4, !dbg !5809
  %486 = load i32, i32* %15, align 4, !dbg !5810
  %487 = load i16, i16* %21, align 2, !dbg !5811
  %488 = load %struct.dump_opts*, %struct.dump_opts** %14, align 8, !dbg !5812
  %489 = call i32 @writeBufferToSeparateTiles(%struct.tiff* %483, i8* %484, i32 %485, i32 %486, i16 zeroext %487, %struct.dump_opts* %488), !dbg !5813
  %490 = icmp ne i32 %489, 0, !dbg !5813
  br i1 %490, label %491, label %493, !dbg !5814

491:                                              ; preds = %482
  %492 = load i32, i32* %18, align 4, !dbg !5815
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.409, i64 0, i64 0), i32 %492), !dbg !5816
  br label %493, !dbg !5816

493:                                              ; preds = %491, %482
  br label %494

494:                                              ; preds = %493, %481
  br label %521, !dbg !5817

495:                                              ; preds = %463
  %496 = load i16, i16* @config, align 2, !dbg !5818
  %497 = zext i16 %496 to i32, !dbg !5818
  %498 = icmp eq i32 %497, 1, !dbg !5821
  br i1 %498, label %499, label %508, !dbg !5822

499:                                              ; preds = %495
  %500 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5823
  %501 = load i8*, i8** %17, align 8, !dbg !5826
  %502 = load i32, i32* %16, align 4, !dbg !5827
  %503 = call i32 @writeBufferToContigStrips(%struct.tiff* %500, i8* %501, i32 %502), !dbg !5828
  %504 = icmp ne i32 %503, 0, !dbg !5828
  br i1 %504, label %505, label %507, !dbg !5829

505:                                              ; preds = %499
  %506 = load i32, i32* %18, align 4, !dbg !5830
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.410, i64 0, i64 0), i32 %506), !dbg !5831
  br label %507, !dbg !5831

507:                                              ; preds = %505, %499
  br label %520, !dbg !5832

508:                                              ; preds = %495
  %509 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5833
  %510 = load i8*, i8** %17, align 8, !dbg !5836
  %511 = load i32, i32* %16, align 4, !dbg !5837
  %512 = load i32, i32* %15, align 4, !dbg !5838
  %513 = load i16, i16* %21, align 2, !dbg !5839
  %514 = load %struct.dump_opts*, %struct.dump_opts** %14, align 8, !dbg !5840
  %515 = call i32 @writeBufferToSeparateStrips(%struct.tiff* %509, i8* %510, i32 %511, i32 %512, i16 zeroext %513, %struct.dump_opts* %514), !dbg !5841
  %516 = icmp ne i32 %515, 0, !dbg !5841
  br i1 %516, label %517, label %519, !dbg !5842

517:                                              ; preds = %508
  %518 = load i32, i32* %18, align 4, !dbg !5843
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.411, i64 0, i64 0), i32 %518), !dbg !5844
  br label %519, !dbg !5844

519:                                              ; preds = %517, %508
  br label %520

520:                                              ; preds = %519, %507
  br label %521

521:                                              ; preds = %520, %494
  %522 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5845
  %523 = call i32 @TIFFWriteDirectory(%struct.tiff* %522), !dbg !5847
  %524 = icmp ne i32 %523, 0, !dbg !5847
  br i1 %524, label %528, label %525, !dbg !5848

525:                                              ; preds = %521
  %526 = load i32, i32* %18, align 4, !dbg !5849
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.412, i64 0, i64 0), i32 %526), !dbg !5851
  %527 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !5852
  call void @TIFFClose(%struct.tiff* %527), !dbg !5853
  store i32 -1, i32* %10, align 4, !dbg !5854
  br label %529, !dbg !5854

528:                                              ; preds = %521
  store i32 0, i32* %10, align 4, !dbg !5855
  br label %529, !dbg !5855

529:                                              ; preds = %528, %525, %340, %314, %177, %98
  %530 = load i32, i32* %10, align 4, !dbg !5856
  ret i32 %530, !dbg !5856
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @computeOutputPixelOffsets(%struct.crop_mask*, %struct.image_data*, %struct.pagedef*, %struct.pageseg*, %struct.dump_opts*) #0 !dbg !5857 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.crop_mask*, align 8
  %8 = alloca %struct.image_data*, align 8
  %9 = alloca %struct.pagedef*, align 8
  %10 = alloca %struct.pageseg*, align 8
  %11 = alloca %struct.dump_opts*, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  store %struct.crop_mask* %0, %struct.crop_mask** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %7, metadata !5860, metadata !DIExpression()), !dbg !5861
  store %struct.image_data* %1, %struct.image_data** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %8, metadata !5862, metadata !DIExpression()), !dbg !5863
  store %struct.pagedef* %2, %struct.pagedef** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.pagedef** %9, metadata !5864, metadata !DIExpression()), !dbg !5865
  store %struct.pageseg* %3, %struct.pageseg** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.pageseg** %10, metadata !5866, metadata !DIExpression()), !dbg !5867
  store %struct.dump_opts* %4, %struct.dump_opts** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %11, metadata !5868, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.declare(metadata double* %12, metadata !5870, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.declare(metadata double* %13, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata double* %14, metadata !5874, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5876, metadata !DIExpression()), !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5878, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5880, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %18, metadata !5882, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5884, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.declare(metadata i32* %20, metadata !5886, metadata !DIExpression()), !dbg !5887
  call void @llvm.dbg.declare(metadata i32* %21, metadata !5888, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5890, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5892, metadata !DIExpression()), !dbg !5893
  call void @llvm.dbg.declare(metadata i32* %24, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.declare(metadata i32* %25, metadata !5896, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.declare(metadata i32* %26, metadata !5898, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5900, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.declare(metadata i32* %28, metadata !5902, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.declare(metadata i32* %29, metadata !5904, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.declare(metadata i32* %30, metadata !5906, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.declare(metadata i32* %31, metadata !5908, metadata !DIExpression()), !dbg !5909
  store double 1.000000e+00, double* %12, align 8, !dbg !5910
  %32 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5911
  %33 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %32, i32 0, i32 8, !dbg !5913
  %34 = load i16, i16* %33, align 4, !dbg !5913
  %35 = zext i16 %34 to i32, !dbg !5911
  %36 = icmp eq i32 %35, 1, !dbg !5914
  br i1 %36, label %37, label %43, !dbg !5915

37:                                               ; preds = %5
  %38 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !5916
  %39 = getelementptr inbounds %struct.image_data, %struct.image_data* %38, i32 0, i32 4, !dbg !5917
  %40 = load i16, i16* %39, align 4, !dbg !5917
  %41 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5918
  %42 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %41, i32 0, i32 8, !dbg !5919
  store i16 %40, i16* %42, align 4, !dbg !5920
  br label %43, !dbg !5918

43:                                               ; preds = %37, %5
  %44 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !5921
  %45 = getelementptr inbounds %struct.image_data, %struct.image_data* %44, i32 0, i32 4, !dbg !5922
  %46 = load i16, i16* %45, align 4, !dbg !5922
  %47 = zext i16 %46 to i32, !dbg !5921
  switch i32 %47, label %65 [
    i32 3, label %48
    i32 2, label %56
    i32 1, label %64
  ], !dbg !5923

48:                                               ; preds = %43
  %49 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5924
  %50 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %49, i32 0, i32 8, !dbg !5927
  %51 = load i16, i16* %50, align 4, !dbg !5927
  %52 = zext i16 %51 to i32, !dbg !5924
  %53 = icmp eq i32 %52, 2, !dbg !5928
  br i1 %53, label %54, label %55, !dbg !5929

54:                                               ; preds = %48
  store double 0x3FD93264C993264C, double* %12, align 8, !dbg !5930
  br label %55, !dbg !5931

55:                                               ; preds = %54, %48
  br label %66, !dbg !5932

56:                                               ; preds = %43
  %57 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5933
  %58 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %57, i32 0, i32 8, !dbg !5935
  %59 = load i16, i16* %58, align 4, !dbg !5935
  %60 = zext i16 %59 to i32, !dbg !5933
  %61 = icmp eq i32 %60, 3, !dbg !5936
  br i1 %61, label %62, label %63, !dbg !5937

62:                                               ; preds = %56
  store double 2.540000e+00, double* %12, align 8, !dbg !5938
  br label %63, !dbg !5939

63:                                               ; preds = %62, %56
  br label %66, !dbg !5940

64:                                               ; preds = %43
  br label %65, !dbg !5940

65:                                               ; preds = %64, %43
  br label %66, !dbg !5941

66:                                               ; preds = %65, %63, %55
  %67 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !5942
  %68 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %67, i32 0, i32 5, !dbg !5944
  %69 = load i32, i32* %68, align 8, !dbg !5944
  %70 = icmp ugt i32 %69, 0, !dbg !5945
  br i1 %70, label %71, label %75, !dbg !5946

71:                                               ; preds = %66
  %72 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !5947
  %73 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %72, i32 0, i32 5, !dbg !5948
  %74 = load i32, i32* %73, align 8, !dbg !5948
  store i32 %74, i32* %15, align 4, !dbg !5949
  br label %79, !dbg !5950

75:                                               ; preds = %66
  %76 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !5951
  %77 = getelementptr inbounds %struct.image_data, %struct.image_data* %76, i32 0, i32 2, !dbg !5952
  %78 = load i32, i32* %77, align 4, !dbg !5952
  store i32 %78, i32* %15, align 4, !dbg !5953
  br label %79

79:                                               ; preds = %75, %71
  %80 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !5954
  %81 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %80, i32 0, i32 6, !dbg !5956
  %82 = load i32, i32* %81, align 4, !dbg !5956
  %83 = icmp ugt i32 %82, 0, !dbg !5957
  br i1 %83, label %84, label %88, !dbg !5958

84:                                               ; preds = %79
  %85 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !5959
  %86 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %85, i32 0, i32 6, !dbg !5960
  %87 = load i32, i32* %86, align 4, !dbg !5960
  store i32 %87, i32* %16, align 4, !dbg !5961
  br label %92, !dbg !5962

88:                                               ; preds = %79
  %89 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !5963
  %90 = getelementptr inbounds %struct.image_data, %struct.image_data* %89, i32 0, i32 3, !dbg !5964
  %91 = load i32, i32* %90, align 4, !dbg !5964
  store i32 %91, i32* %16, align 4, !dbg !5965
  br label %92

92:                                               ; preds = %88, %84
  %93 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5966
  %94 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %93, i32 0, i32 5, !dbg !5968
  %95 = load double, double* %94, align 8, !dbg !5968
  %96 = fcmp ole double %95, 1.000000e+00, !dbg !5969
  br i1 %96, label %97, label %104, !dbg !5970

97:                                               ; preds = %92
  %98 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !5971
  %99 = getelementptr inbounds %struct.image_data, %struct.image_data* %98, i32 0, i32 0, !dbg !5972
  %100 = load float, float* %99, align 4, !dbg !5972
  %101 = fpext float %100 to double, !dbg !5971
  %102 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5973
  %103 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %102, i32 0, i32 5, !dbg !5974
  store double %101, double* %103, align 8, !dbg !5975
  br label %104, !dbg !5973

104:                                              ; preds = %97, %92
  %105 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5976
  %106 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %105, i32 0, i32 6, !dbg !5978
  %107 = load double, double* %106, align 8, !dbg !5978
  %108 = fcmp ole double %107, 1.000000e+00, !dbg !5979
  br i1 %108, label %109, label %116, !dbg !5980

109:                                              ; preds = %104
  %110 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !5981
  %111 = getelementptr inbounds %struct.image_data, %struct.image_data* %110, i32 0, i32 1, !dbg !5982
  %112 = load float, float* %111, align 4, !dbg !5982
  %113 = fpext float %112 to double, !dbg !5981
  %114 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5983
  %115 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %114, i32 0, i32 6, !dbg !5984
  store double %113, double* %115, align 8, !dbg !5985
  br label %116, !dbg !5983

116:                                              ; preds = %109, %104
  %117 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5986
  %118 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %117, i32 0, i32 5, !dbg !5988
  %119 = load double, double* %118, align 8, !dbg !5988
  %120 = fcmp olt double %119, 1.000000e+00, !dbg !5989
  br i1 %120, label %126, label %121, !dbg !5990

121:                                              ; preds = %116
  %122 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5991
  %123 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %122, i32 0, i32 6, !dbg !5992
  %124 = load double, double* %123, align 8, !dbg !5992
  %125 = fcmp olt double %124, 1.000000e+00, !dbg !5993
  br i1 %125, label %126, label %127, !dbg !5994

126:                                              ; preds = %121, %116
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.235, i64 0, i64 0)), !dbg !5995
  store i32 1, i32* %6, align 4, !dbg !5997
  br label %626, !dbg !5997

127:                                              ; preds = %121
  %128 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !5998
  %129 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %128, i32 0, i32 1, !dbg !6000
  %130 = load double, double* %129, align 8, !dbg !6000
  %131 = fcmp ole double %130, 0.000000e+00, !dbg !6001
  br i1 %131, label %132, label %135, !dbg !6002

132:                                              ; preds = %127
  %133 = load i32, i32* %15, align 4, !dbg !6003
  %134 = uitofp i32 %133 to double, !dbg !6003
  store double %134, double* %13, align 8, !dbg !6004
  br label %139, !dbg !6005

135:                                              ; preds = %127
  %136 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6006
  %137 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %136, i32 0, i32 1, !dbg !6007
  %138 = load double, double* %137, align 8, !dbg !6007
  store double %138, double* %13, align 8, !dbg !6008
  br label %139

139:                                              ; preds = %135, %132
  %140 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6009
  %141 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %140, i32 0, i32 2, !dbg !6011
  %142 = load double, double* %141, align 8, !dbg !6011
  %143 = fcmp ole double %142, 0.000000e+00, !dbg !6012
  br i1 %143, label %144, label %147, !dbg !6013

144:                                              ; preds = %139
  %145 = load i32, i32* %16, align 4, !dbg !6014
  %146 = uitofp i32 %145 to double, !dbg !6014
  store double %146, double* %14, align 8, !dbg !6015
  br label %151, !dbg !6016

147:                                              ; preds = %139
  %148 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6017
  %149 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %148, i32 0, i32 2, !dbg !6018
  %150 = load double, double* %149, align 8, !dbg !6018
  store double %150, double* %14, align 8, !dbg !6019
  br label %151

151:                                              ; preds = %147, %144
  %152 = load %struct.dump_opts*, %struct.dump_opts** %11, align 8, !dbg !6020
  %153 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %152, i32 0, i32 0, !dbg !6022
  %154 = load i32, i32* %153, align 8, !dbg !6022
  %155 = icmp ne i32 %154, 0, !dbg !6020
  br i1 %155, label %156, label %179, !dbg !6023

156:                                              ; preds = %151
  %157 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6024
  %158 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %157, i32 0, i32 0, !dbg !6026
  %159 = getelementptr inbounds [16 x i8], [16 x i8]* %158, i64 0, i64 0, !dbg !6024
  %160 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6027
  %161 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %160, i32 0, i32 6, !dbg !6028
  %162 = load double, double* %161, align 8, !dbg !6028
  %163 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6029
  %164 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %163, i32 0, i32 5, !dbg !6030
  %165 = load double, double* %164, align 8, !dbg !6030
  %166 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6031
  %167 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %166, i32 0, i32 3, !dbg !6032
  %168 = load double, double* %167, align 8, !dbg !6032
  %169 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6033
  %170 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %169, i32 0, i32 4, !dbg !6034
  %171 = load double, double* %170, align 8, !dbg !6034
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.236, i64 0, i64 0), i8* %159, double %162, double %165, double %168, double %171), !dbg !6035
  %172 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6036
  %173 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %172, i32 0, i32 8, !dbg !6037
  %174 = load i16, i16* %173, align 4, !dbg !6037
  %175 = zext i16 %174 to i32, !dbg !6036
  %176 = load double, double* %12, align 8, !dbg !6038
  %177 = load double, double* %13, align 8, !dbg !6039
  %178 = load double, double* %14, align 8, !dbg !6040
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.237, i64 0, i64 0), i32 %175, double %176, double %177, double %178), !dbg !6041
  br label %179, !dbg !6042

179:                                              ; preds = %156, %151
  %180 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6043
  %181 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %180, i32 0, i32 7, !dbg !6045
  %182 = load i32, i32* %181, align 8, !dbg !6045
  %183 = and i32 %182, 4, !dbg !6046
  %184 = icmp ne i32 %183, 0, !dbg !6046
  br i1 %184, label %185, label %286, !dbg !6047

185:                                              ; preds = %179
  %186 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6048
  %187 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %186, i32 0, i32 8, !dbg !6051
  %188 = load i16, i16* %187, align 4, !dbg !6051
  %189 = zext i16 %188 to i32, !dbg !6048
  %190 = icmp eq i32 %189, 2, !dbg !6052
  br i1 %190, label %197, label %191, !dbg !6053

191:                                              ; preds = %185
  %192 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6054
  %193 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %192, i32 0, i32 8, !dbg !6055
  %194 = load i16, i16* %193, align 4, !dbg !6055
  %195 = zext i16 %194 to i32, !dbg !6054
  %196 = icmp eq i32 %195, 3, !dbg !6056
  br i1 %196, label %197, label %234, !dbg !6057

197:                                              ; preds = %191, %185
  %198 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6058
  %199 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %198, i32 0, i32 3, !dbg !6060
  %200 = load double, double* %199, align 8, !dbg !6060
  %201 = load double, double* %12, align 8, !dbg !6061
  %202 = fmul double %200, %201, !dbg !6062
  %203 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6063
  %204 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %203, i32 0, i32 5, !dbg !6064
  %205 = load double, double* %204, align 8, !dbg !6064
  %206 = fmul double %202, %205, !dbg !6065
  %207 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6066
  %208 = getelementptr inbounds %struct.image_data, %struct.image_data* %207, i32 0, i32 5, !dbg !6067
  %209 = load i16, i16* %208, align 2, !dbg !6067
  %210 = zext i16 %209 to i32, !dbg !6066
  %211 = add nsw i32 %210, 7, !dbg !6068
  %212 = sdiv i32 %211, 8, !dbg !6069
  %213 = sitofp i32 %212 to double, !dbg !6070
  %214 = fmul double %206, %213, !dbg !6071
  %215 = fptoui double %214 to i32, !dbg !6072
  store i32 %215, i32* %21, align 4, !dbg !6073
  %216 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6074
  %217 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %216, i32 0, i32 4, !dbg !6075
  %218 = load double, double* %217, align 8, !dbg !6075
  %219 = load double, double* %12, align 8, !dbg !6076
  %220 = fmul double %218, %219, !dbg !6077
  %221 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6078
  %222 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %221, i32 0, i32 6, !dbg !6079
  %223 = load double, double* %222, align 8, !dbg !6079
  %224 = fmul double %220, %223, !dbg !6080
  %225 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6081
  %226 = getelementptr inbounds %struct.image_data, %struct.image_data* %225, i32 0, i32 5, !dbg !6082
  %227 = load i16, i16* %226, align 2, !dbg !6082
  %228 = zext i16 %227 to i32, !dbg !6081
  %229 = add nsw i32 %228, 7, !dbg !6083
  %230 = sdiv i32 %229, 8, !dbg !6084
  %231 = sitofp i32 %230 to double, !dbg !6085
  %232 = fmul double %224, %231, !dbg !6086
  %233 = fptoui double %232 to i32, !dbg !6087
  store i32 %233, i32* %22, align 4, !dbg !6088
  br label %263, !dbg !6089

234:                                              ; preds = %191
  %235 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6090
  %236 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %235, i32 0, i32 3, !dbg !6092
  %237 = load double, double* %236, align 8, !dbg !6092
  %238 = load double, double* %12, align 8, !dbg !6093
  %239 = fmul double %237, %238, !dbg !6094
  %240 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6095
  %241 = getelementptr inbounds %struct.image_data, %struct.image_data* %240, i32 0, i32 5, !dbg !6096
  %242 = load i16, i16* %241, align 2, !dbg !6096
  %243 = zext i16 %242 to i32, !dbg !6095
  %244 = add nsw i32 %243, 7, !dbg !6097
  %245 = sdiv i32 %244, 8, !dbg !6098
  %246 = sitofp i32 %245 to double, !dbg !6099
  %247 = fmul double %239, %246, !dbg !6100
  %248 = fptoui double %247 to i32, !dbg !6101
  store i32 %248, i32* %21, align 4, !dbg !6102
  %249 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6103
  %250 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %249, i32 0, i32 4, !dbg !6104
  %251 = load double, double* %250, align 8, !dbg !6104
  %252 = load double, double* %12, align 8, !dbg !6105
  %253 = fmul double %251, %252, !dbg !6106
  %254 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6107
  %255 = getelementptr inbounds %struct.image_data, %struct.image_data* %254, i32 0, i32 5, !dbg !6108
  %256 = load i16, i16* %255, align 2, !dbg !6108
  %257 = zext i16 %256 to i32, !dbg !6107
  %258 = add nsw i32 %257, 7, !dbg !6109
  %259 = sdiv i32 %258, 8, !dbg !6110
  %260 = sitofp i32 %259 to double, !dbg !6111
  %261 = fmul double %253, %260, !dbg !6112
  %262 = fptoui double %261 to i32, !dbg !6113
  store i32 %262, i32* %22, align 4, !dbg !6114
  br label %263

263:                                              ; preds = %234, %197
  %264 = load i32, i32* %21, align 4, !dbg !6115
  %265 = uitofp i32 %264 to double, !dbg !6115
  %266 = fmul double %265, 2.000000e+00, !dbg !6117
  %267 = load double, double* %13, align 8, !dbg !6118
  %268 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6119
  %269 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %268, i32 0, i32 5, !dbg !6120
  %270 = load double, double* %269, align 8, !dbg !6120
  %271 = fmul double %267, %270, !dbg !6121
  %272 = fcmp ogt double %266, %271, !dbg !6122
  br i1 %272, label %273, label %274, !dbg !6123

273:                                              ; preds = %263
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.238, i64 0, i64 0)), !dbg !6124
  store i32 0, i32* %21, align 4, !dbg !6126
  store i32 -1, i32* %6, align 4, !dbg !6127
  br label %626, !dbg !6127

274:                                              ; preds = %263
  %275 = load i32, i32* %22, align 4, !dbg !6128
  %276 = uitofp i32 %275 to double, !dbg !6128
  %277 = fmul double %276, 2.000000e+00, !dbg !6130
  %278 = load double, double* %14, align 8, !dbg !6131
  %279 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6132
  %280 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %279, i32 0, i32 6, !dbg !6133
  %281 = load double, double* %280, align 8, !dbg !6133
  %282 = fmul double %278, %281, !dbg !6134
  %283 = fcmp ogt double %277, %282, !dbg !6135
  br i1 %283, label %284, label %285, !dbg !6136

284:                                              ; preds = %274
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.239, i64 0, i64 0)), !dbg !6137
  store i32 0, i32* %22, align 4, !dbg !6139
  store i32 -1, i32* %6, align 4, !dbg !6140
  br label %626, !dbg !6140

285:                                              ; preds = %274
  br label %287, !dbg !6141

286:                                              ; preds = %179
  store i32 0, i32* %21, align 4, !dbg !6142
  store i32 0, i32* %22, align 4, !dbg !6144
  br label %287

287:                                              ; preds = %286, %285
  %288 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6145
  %289 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %288, i32 0, i32 7, !dbg !6147
  %290 = load i32, i32* %289, align 8, !dbg !6147
  %291 = and i32 %290, 8, !dbg !6148
  %292 = icmp ne i32 %291, 0, !dbg !6148
  br i1 %292, label %293, label %321, !dbg !6149

293:                                              ; preds = %287
  %294 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6150
  %295 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %294, i32 0, i32 7, !dbg !6153
  %296 = load i32, i32* %295, align 8, !dbg !6153
  %297 = and i32 %296, 4, !dbg !6154
  %298 = icmp ne i32 %297, 0, !dbg !6154
  br i1 %298, label %299, label %300, !dbg !6155

299:                                              ; preds = %293
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.240, i64 0, i64 0)), !dbg !6156
  br label %300, !dbg !6156

300:                                              ; preds = %299, %293
  %301 = load i32, i32* %15, align 4, !dbg !6157
  %302 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6157
  %303 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %302, i32 0, i32 10, !dbg !6157
  %304 = load i32, i32* %303, align 4, !dbg !6157
  %305 = sub i32 %304, 1, !dbg !6157
  %306 = add i32 %301, %305, !dbg !6157
  %307 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6157
  %308 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %307, i32 0, i32 10, !dbg !6157
  %309 = load i32, i32* %308, align 4, !dbg !6157
  %310 = udiv i32 %306, %309, !dbg !6157
  store i32 %310, i32* %17, align 4, !dbg !6158
  %311 = load i32, i32* %16, align 4, !dbg !6159
  %312 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6159
  %313 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %312, i32 0, i32 9, !dbg !6159
  %314 = load i32, i32* %313, align 8, !dbg !6159
  %315 = sub i32 %314, 1, !dbg !6159
  %316 = add i32 %311, %315, !dbg !6159
  %317 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6159
  %318 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %317, i32 0, i32 9, !dbg !6159
  %319 = load i32, i32* %318, align 8, !dbg !6159
  %320 = udiv i32 %316, %319, !dbg !6159
  store i32 %320, i32* %18, align 4, !dbg !6160
  br label %372, !dbg !6161

321:                                              ; preds = %287
  %322 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6162
  %323 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %322, i32 0, i32 7, !dbg !6165
  %324 = load i32, i32* %323, align 8, !dbg !6165
  %325 = and i32 %324, 2, !dbg !6166
  %326 = icmp ne i32 %325, 0, !dbg !6166
  br i1 %326, label %327, label %348, !dbg !6167

327:                                              ; preds = %321
  %328 = load double, double* %13, align 8, !dbg !6168
  %329 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6170
  %330 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %329, i32 0, i32 5, !dbg !6171
  %331 = load double, double* %330, align 8, !dbg !6171
  %332 = fmul double %328, %331, !dbg !6172
  %333 = load i32, i32* %21, align 4, !dbg !6173
  %334 = mul i32 %333, 2, !dbg !6174
  %335 = uitofp i32 %334 to double, !dbg !6175
  %336 = fsub double %332, %335, !dbg !6176
  %337 = fptoui double %336 to i32, !dbg !6177
  store i32 %337, i32* %17, align 4, !dbg !6178
  %338 = load double, double* %14, align 8, !dbg !6179
  %339 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6180
  %340 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %339, i32 0, i32 6, !dbg !6181
  %341 = load double, double* %340, align 8, !dbg !6181
  %342 = fmul double %338, %341, !dbg !6182
  %343 = load i32, i32* %22, align 4, !dbg !6183
  %344 = mul i32 %343, 2, !dbg !6184
  %345 = uitofp i32 %344 to double, !dbg !6185
  %346 = fsub double %342, %345, !dbg !6186
  %347 = fptoui double %346 to i32, !dbg !6187
  store i32 %347, i32* %18, align 4, !dbg !6188
  br label %371, !dbg !6189

348:                                              ; preds = %321
  %349 = load i32, i32* %15, align 4, !dbg !6190
  %350 = uitofp i32 %349 to double, !dbg !6190
  %351 = load i32, i32* %21, align 4, !dbg !6192
  %352 = mul i32 %351, 2, !dbg !6193
  %353 = uitofp i32 %352 to double, !dbg !6192
  %354 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6194
  %355 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %354, i32 0, i32 5, !dbg !6195
  %356 = load double, double* %355, align 8, !dbg !6195
  %357 = fmul double %353, %356, !dbg !6196
  %358 = fsub double %350, %357, !dbg !6197
  %359 = fptoui double %358 to i32, !dbg !6198
  store i32 %359, i32* %17, align 4, !dbg !6199
  %360 = load i32, i32* %16, align 4, !dbg !6200
  %361 = uitofp i32 %360 to double, !dbg !6200
  %362 = load i32, i32* %22, align 4, !dbg !6201
  %363 = mul i32 %362, 2, !dbg !6202
  %364 = uitofp i32 %363 to double, !dbg !6201
  %365 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6203
  %366 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %365, i32 0, i32 6, !dbg !6204
  %367 = load double, double* %366, align 8, !dbg !6204
  %368 = fmul double %364, %367, !dbg !6205
  %369 = fsub double %361, %368, !dbg !6206
  %370 = fptoui double %369 to i32, !dbg !6207
  store i32 %370, i32* %18, align 4, !dbg !6208
  br label %371

371:                                              ; preds = %348, %327
  br label %372

372:                                              ; preds = %371, %300
  %373 = load i32, i32* %17, align 4, !dbg !6209
  %374 = load i32, i32* %15, align 4, !dbg !6211
  %375 = icmp ugt i32 %373, %374, !dbg !6212
  br i1 %375, label %376, label %378, !dbg !6213

376:                                              ; preds = %372
  %377 = load i32, i32* %15, align 4, !dbg !6214
  store i32 %377, i32* %17, align 4, !dbg !6215
  br label %378, !dbg !6216

378:                                              ; preds = %376, %372
  %379 = load i32, i32* %18, align 4, !dbg !6217
  %380 = load i32, i32* %16, align 4, !dbg !6219
  %381 = icmp ugt i32 %379, %380, !dbg !6220
  br i1 %381, label %382, label %384, !dbg !6221

382:                                              ; preds = %378
  %383 = load i32, i32* %16, align 4, !dbg !6222
  store i32 %383, i32* %18, align 4, !dbg !6223
  br label %384, !dbg !6224

384:                                              ; preds = %382, %378
  %385 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6225
  %386 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %385, i32 0, i32 11, !dbg !6226
  %387 = load i32, i32* %386, align 8, !dbg !6226
  switch i32 %387, label %418 [
    i32 0, label %388
    i32 1, label %388
    i32 2, label %401
    i32 16, label %417
  ], !dbg !6227

388:                                              ; preds = %384, %384
  %389 = load i32, i32* %15, align 4, !dbg !6228
  %390 = load i32, i32* %17, align 4, !dbg !6228
  %391 = sub i32 %390, 1, !dbg !6228
  %392 = add i32 %389, %391, !dbg !6228
  %393 = load i32, i32* %17, align 4, !dbg !6228
  %394 = udiv i32 %392, %393, !dbg !6228
  store i32 %394, i32* %20, align 4, !dbg !6230
  %395 = load i32, i32* %16, align 4, !dbg !6231
  %396 = load i32, i32* %18, align 4, !dbg !6231
  %397 = sub i32 %396, 1, !dbg !6231
  %398 = add i32 %395, %397, !dbg !6231
  %399 = load i32, i32* %18, align 4, !dbg !6231
  %400 = udiv i32 %398, %399, !dbg !6231
  store i32 %400, i32* %19, align 4, !dbg !6232
  store i32 1, i32* %28, align 4, !dbg !6233
  br label %460, !dbg !6234

401:                                              ; preds = %384
  %402 = load i32, i32* %15, align 4, !dbg !6235
  %403 = load i32, i32* %18, align 4, !dbg !6235
  %404 = sub i32 %403, 1, !dbg !6235
  %405 = add i32 %402, %404, !dbg !6235
  %406 = load i32, i32* %18, align 4, !dbg !6235
  %407 = udiv i32 %405, %406, !dbg !6235
  store i32 %407, i32* %20, align 4, !dbg !6236
  %408 = load i32, i32* %16, align 4, !dbg !6237
  %409 = load i32, i32* %17, align 4, !dbg !6237
  %410 = sub i32 %409, 1, !dbg !6237
  %411 = add i32 %408, %410, !dbg !6237
  %412 = load i32, i32* %17, align 4, !dbg !6237
  %413 = udiv i32 %411, %412, !dbg !6237
  store i32 %413, i32* %19, align 4, !dbg !6238
  %414 = load i32, i32* %18, align 4, !dbg !6239
  store i32 %414, i32* %23, align 4, !dbg !6240
  %415 = load i32, i32* %17, align 4, !dbg !6241
  store i32 %415, i32* %18, align 4, !dbg !6242
  %416 = load i32, i32* %23, align 4, !dbg !6243
  store i32 %416, i32* %17, align 4, !dbg !6244
  store i32 2, i32* %28, align 4, !dbg !6245
  br label %460, !dbg !6246

417:                                              ; preds = %384
  br label %418, !dbg !6246

418:                                              ; preds = %417, %384
  %419 = load i32, i32* %15, align 4, !dbg !6247
  %420 = load i32, i32* %17, align 4, !dbg !6247
  %421 = sub i32 %420, 1, !dbg !6247
  %422 = add i32 %419, %421, !dbg !6247
  %423 = load i32, i32* %17, align 4, !dbg !6247
  %424 = udiv i32 %422, %423, !dbg !6247
  store i32 %424, i32* %23, align 4, !dbg !6248
  %425 = load i32, i32* %16, align 4, !dbg !6249
  %426 = load i32, i32* %18, align 4, !dbg !6249
  %427 = sub i32 %426, 1, !dbg !6249
  %428 = add i32 %425, %427, !dbg !6249
  %429 = load i32, i32* %18, align 4, !dbg !6249
  %430 = udiv i32 %428, %429, !dbg !6249
  store i32 %430, i32* %24, align 4, !dbg !6250
  %431 = load i32, i32* %15, align 4, !dbg !6251
  %432 = load i32, i32* %18, align 4, !dbg !6251
  %433 = sub i32 %432, 1, !dbg !6251
  %434 = add i32 %431, %433, !dbg !6251
  %435 = load i32, i32* %18, align 4, !dbg !6251
  %436 = udiv i32 %434, %435, !dbg !6251
  store i32 %436, i32* %25, align 4, !dbg !6252
  %437 = load i32, i32* %16, align 4, !dbg !6253
  %438 = load i32, i32* %17, align 4, !dbg !6253
  %439 = sub i32 %438, 1, !dbg !6253
  %440 = add i32 %437, %439, !dbg !6253
  %441 = load i32, i32* %17, align 4, !dbg !6253
  %442 = udiv i32 %440, %441, !dbg !6253
  store i32 %442, i32* %26, align 4, !dbg !6254
  %443 = load i32, i32* %23, align 4, !dbg !6255
  %444 = load i32, i32* %24, align 4, !dbg !6257
  %445 = mul i32 %443, %444, !dbg !6258
  %446 = load i32, i32* %25, align 4, !dbg !6259
  %447 = load i32, i32* %26, align 4, !dbg !6260
  %448 = mul i32 %446, %447, !dbg !6261
  %449 = icmp ult i32 %445, %448, !dbg !6262
  br i1 %449, label %450, label %453, !dbg !6263

450:                                              ; preds = %418
  %451 = load i32, i32* %23, align 4, !dbg !6264
  store i32 %451, i32* %20, align 4, !dbg !6266
  %452 = load i32, i32* %24, align 4, !dbg !6267
  store i32 %452, i32* %19, align 4, !dbg !6268
  store i32 1, i32* %28, align 4, !dbg !6269
  br label %459, !dbg !6270

453:                                              ; preds = %418
  %454 = load i32, i32* %25, align 4, !dbg !6271
  store i32 %454, i32* %20, align 4, !dbg !6273
  %455 = load i32, i32* %26, align 4, !dbg !6274
  store i32 %455, i32* %19, align 4, !dbg !6275
  %456 = load i32, i32* %18, align 4, !dbg !6276
  store i32 %456, i32* %23, align 4, !dbg !6277
  %457 = load i32, i32* %17, align 4, !dbg !6278
  store i32 %457, i32* %18, align 4, !dbg !6279
  %458 = load i32, i32* %23, align 4, !dbg !6280
  store i32 %458, i32* %17, align 4, !dbg !6281
  store i32 2, i32* %28, align 4, !dbg !6282
  br label %459

459:                                              ; preds = %453, %450
  br label %460, !dbg !6283

460:                                              ; preds = %459, %401, %388
  %461 = load i32, i32* %20, align 4, !dbg !6284
  %462 = icmp ult i32 %461, 1, !dbg !6286
  br i1 %462, label %463, label %464, !dbg !6287

463:                                              ; preds = %460
  store i32 1, i32* %20, align 4, !dbg !6288
  br label %464, !dbg !6289

464:                                              ; preds = %463, %460
  %465 = load i32, i32* %19, align 4, !dbg !6290
  %466 = icmp ult i32 %465, 1, !dbg !6292
  br i1 %466, label %467, label %468, !dbg !6293

467:                                              ; preds = %464
  store i32 1, i32* %19, align 4, !dbg !6294
  br label %468, !dbg !6295

468:                                              ; preds = %467, %464
  %469 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6296
  %470 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %469, i32 0, i32 9, !dbg !6298
  %471 = load i32, i32* %470, align 8, !dbg !6298
  %472 = icmp ult i32 %471, 1, !dbg !6299
  br i1 %472, label %473, label %477, !dbg !6300

473:                                              ; preds = %468
  %474 = load i32, i32* %19, align 4, !dbg !6301
  %475 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6302
  %476 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %475, i32 0, i32 9, !dbg !6303
  store i32 %474, i32* %476, align 8, !dbg !6304
  br label %477, !dbg !6302

477:                                              ; preds = %473, %468
  %478 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6305
  %479 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %478, i32 0, i32 10, !dbg !6307
  %480 = load i32, i32* %479, align 4, !dbg !6307
  %481 = icmp ult i32 %480, 1, !dbg !6308
  br i1 %481, label %482, label %486, !dbg !6309

482:                                              ; preds = %477
  %483 = load i32, i32* %20, align 4, !dbg !6310
  %484 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6311
  %485 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %484, i32 0, i32 10, !dbg !6312
  store i32 %483, i32* %485, align 4, !dbg !6313
  br label %486, !dbg !6311

486:                                              ; preds = %482, %477
  %487 = load i32, i32* %17, align 4, !dbg !6314
  %488 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6314
  %489 = getelementptr inbounds %struct.image_data, %struct.image_data* %488, i32 0, i32 5, !dbg !6314
  %490 = load i16, i16* %489, align 2, !dbg !6314
  %491 = zext i16 %490 to i32, !dbg !6314
  %492 = mul i32 %487, %491, !dbg !6314
  %493 = and i32 %492, 7, !dbg !6314
  %494 = icmp ne i32 %493, 0, !dbg !6314
  br i1 %494, label %495, label %504, !dbg !6314

495:                                              ; preds = %486
  %496 = load i32, i32* %17, align 4, !dbg !6314
  %497 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6314
  %498 = getelementptr inbounds %struct.image_data, %struct.image_data* %497, i32 0, i32 5, !dbg !6314
  %499 = load i16, i16* %498, align 2, !dbg !6314
  %500 = zext i16 %499 to i32, !dbg !6314
  %501 = mul i32 %496, %500, !dbg !6314
  %502 = lshr i32 %501, 3, !dbg !6314
  %503 = add i32 %502, 1, !dbg !6314
  br label %512, !dbg !6314

504:                                              ; preds = %486
  %505 = load i32, i32* %17, align 4, !dbg !6314
  %506 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6314
  %507 = getelementptr inbounds %struct.image_data, %struct.image_data* %506, i32 0, i32 5, !dbg !6314
  %508 = load i16, i16* %507, align 2, !dbg !6314
  %509 = zext i16 %508 to i32, !dbg !6314
  %510 = mul i32 %505, %509, !dbg !6314
  %511 = lshr i32 %510, 3, !dbg !6314
  br label %512, !dbg !6314

512:                                              ; preds = %504, %495
  %513 = phi i32 [ %503, %495 ], [ %511, %504 ], !dbg !6314
  %514 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !6315
  %515 = getelementptr inbounds %struct.image_data, %struct.image_data* %514, i32 0, i32 6, !dbg !6316
  %516 = load i16, i16* %515, align 4, !dbg !6316
  %517 = zext i16 %516 to i32, !dbg !6315
  %518 = mul i32 %513, %517, !dbg !6317
  store i32 %518, i32* %27, align 4, !dbg !6318
  %519 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6319
  %520 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %519, i32 0, i32 9, !dbg !6321
  %521 = load i32, i32* %520, align 8, !dbg !6321
  %522 = load %struct.pagedef*, %struct.pagedef** %9, align 8, !dbg !6322
  %523 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %522, i32 0, i32 10, !dbg !6323
  %524 = load i32, i32* %523, align 4, !dbg !6323
  %525 = mul i32 %521, %524, !dbg !6324
  %526 = icmp ugt i32 %525, 32, !dbg !6325
  br i1 %526, label %527, label %528, !dbg !6326

527:                                              ; preds = %512
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.241, i64 0, i64 0)), !dbg !6327
  store i32 -1, i32* %6, align 4, !dbg !6329
  br label %626, !dbg !6329

528:                                              ; preds = %512
  store i32 0, i32* %31, align 4, !dbg !6330
  store i32 0, i32* %29, align 4, !dbg !6332
  br label %529, !dbg !6333

529:                                              ; preds = %622, %528
  %530 = load i32, i32* %29, align 4, !dbg !6334
  %531 = load i32, i32* %19, align 4, !dbg !6336
  %532 = icmp ult i32 %530, %531, !dbg !6337
  br i1 %532, label %533, label %625, !dbg !6338

533:                                              ; preds = %529
  %534 = load i32, i32* %18, align 4, !dbg !6339
  %535 = load i32, i32* %29, align 4, !dbg !6341
  %536 = mul i32 %534, %535, !dbg !6342
  store i32 %536, i32* %25, align 4, !dbg !6343
  %537 = load i32, i32* %18, align 4, !dbg !6344
  %538 = load i32, i32* %29, align 4, !dbg !6345
  %539 = add i32 %538, 1, !dbg !6346
  %540 = mul i32 %537, %539, !dbg !6347
  %541 = sub i32 %540, 1, !dbg !6348
  store i32 %541, i32* %26, align 4, !dbg !6349
  %542 = load i32, i32* %26, align 4, !dbg !6350
  %543 = load i32, i32* %16, align 4, !dbg !6352
  %544 = icmp uge i32 %542, %543, !dbg !6353
  br i1 %544, label %545, label %548, !dbg !6354

545:                                              ; preds = %533
  %546 = load i32, i32* %16, align 4, !dbg !6355
  %547 = sub i32 %546, 1, !dbg !6356
  store i32 %547, i32* %26, align 4, !dbg !6357
  br label %548, !dbg !6358

548:                                              ; preds = %545, %533
  store i32 0, i32* %30, align 4, !dbg !6359
  br label %549, !dbg !6361

549:                                              ; preds = %616, %548
  %550 = load i32, i32* %30, align 4, !dbg !6362
  %551 = load i32, i32* %20, align 4, !dbg !6364
  %552 = icmp ult i32 %550, %551, !dbg !6365
  br i1 %552, label %553, label %621, !dbg !6366

553:                                              ; preds = %549
  %554 = load i32, i32* %17, align 4, !dbg !6367
  %555 = load i32, i32* %30, align 4, !dbg !6369
  %556 = mul i32 %554, %555, !dbg !6370
  store i32 %556, i32* %23, align 4, !dbg !6371
  %557 = load i32, i32* %17, align 4, !dbg !6372
  %558 = load i32, i32* %30, align 4, !dbg !6373
  %559 = add i32 %558, 1, !dbg !6374
  %560 = mul i32 %557, %559, !dbg !6375
  %561 = sub i32 %560, 1, !dbg !6376
  store i32 %561, i32* %24, align 4, !dbg !6377
  %562 = load i32, i32* %24, align 4, !dbg !6378
  %563 = load i32, i32* %15, align 4, !dbg !6380
  %564 = icmp uge i32 %562, %563, !dbg !6381
  br i1 %564, label %565, label %568, !dbg !6382

565:                                              ; preds = %553
  %566 = load i32, i32* %15, align 4, !dbg !6383
  %567 = sub i32 %566, 1, !dbg !6384
  store i32 %567, i32* %24, align 4, !dbg !6385
  br label %568, !dbg !6386

568:                                              ; preds = %565, %553
  %569 = load i32, i32* %23, align 4, !dbg !6387
  %570 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6388
  %571 = load i32, i32* %31, align 4, !dbg !6389
  %572 = zext i32 %571 to i64, !dbg !6388
  %573 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %570, i64 %572, !dbg !6388
  %574 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %573, i32 0, i32 0, !dbg !6390
  store i32 %569, i32* %574, align 4, !dbg !6391
  %575 = load i32, i32* %24, align 4, !dbg !6392
  %576 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6393
  %577 = load i32, i32* %31, align 4, !dbg !6394
  %578 = zext i32 %577 to i64, !dbg !6393
  %579 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %576, i64 %578, !dbg !6393
  %580 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %579, i32 0, i32 1, !dbg !6395
  store i32 %575, i32* %580, align 4, !dbg !6396
  %581 = load i32, i32* %25, align 4, !dbg !6397
  %582 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6398
  %583 = load i32, i32* %31, align 4, !dbg !6399
  %584 = zext i32 %583 to i64, !dbg !6398
  %585 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %582, i64 %584, !dbg !6398
  %586 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %585, i32 0, i32 2, !dbg !6400
  store i32 %581, i32* %586, align 4, !dbg !6401
  %587 = load i32, i32* %26, align 4, !dbg !6402
  %588 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6403
  %589 = load i32, i32* %31, align 4, !dbg !6404
  %590 = zext i32 %589 to i64, !dbg !6403
  %591 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %588, i64 %590, !dbg !6403
  %592 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %591, i32 0, i32 3, !dbg !6405
  store i32 %587, i32* %592, align 4, !dbg !6406
  %593 = load i32, i32* %27, align 4, !dbg !6407
  %594 = load i32, i32* %18, align 4, !dbg !6408
  %595 = mul i32 %593, %594, !dbg !6409
  %596 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6410
  %597 = load i32, i32* %31, align 4, !dbg !6411
  %598 = zext i32 %597 to i64, !dbg !6410
  %599 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %596, i64 %598, !dbg !6410
  %600 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %599, i32 0, i32 6, !dbg !6412
  store i32 %595, i32* %600, align 4, !dbg !6413
  %601 = load i32, i32* %31, align 4, !dbg !6414
  %602 = add i32 %601, 1, !dbg !6415
  %603 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6416
  %604 = load i32, i32* %31, align 4, !dbg !6417
  %605 = zext i32 %604 to i64, !dbg !6416
  %606 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %603, i64 %605, !dbg !6416
  %607 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %606, i32 0, i32 4, !dbg !6418
  store i32 %602, i32* %607, align 4, !dbg !6419
  %608 = load i32, i32* %19, align 4, !dbg !6420
  %609 = load i32, i32* %20, align 4, !dbg !6421
  %610 = mul i32 %608, %609, !dbg !6422
  %611 = load %struct.pageseg*, %struct.pageseg** %10, align 8, !dbg !6423
  %612 = load i32, i32* %31, align 4, !dbg !6424
  %613 = zext i32 %612 to i64, !dbg !6423
  %614 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %611, i64 %613, !dbg !6423
  %615 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %614, i32 0, i32 5, !dbg !6425
  store i32 %610, i32* %615, align 4, !dbg !6426
  br label %616, !dbg !6427

616:                                              ; preds = %568
  %617 = load i32, i32* %30, align 4, !dbg !6428
  %618 = add i32 %617, 1, !dbg !6428
  store i32 %618, i32* %30, align 4, !dbg !6428
  %619 = load i32, i32* %31, align 4, !dbg !6429
  %620 = add i32 %619, 1, !dbg !6429
  store i32 %620, i32* %31, align 4, !dbg !6429
  br label %549, !dbg !6430, !llvm.loop !6431

621:                                              ; preds = %549
  br label %622, !dbg !6433

622:                                              ; preds = %621
  %623 = load i32, i32* %29, align 4, !dbg !6434
  %624 = add i32 %623, 1, !dbg !6434
  store i32 %624, i32* %29, align 4, !dbg !6434
  br label %529, !dbg !6435, !llvm.loop !6436

625:                                              ; preds = %529
  store i32 0, i32* %6, align 4, !dbg !6438
  br label %626, !dbg !6438

626:                                              ; preds = %625, %527, %284, %273, %126
  %627 = load i32, i32* %6, align 4, !dbg !6439
  ret i32 %627, !dbg !6439
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeImageSections(%struct.tiff*, %struct.tiff*, %struct.image_data*, %struct.pagedef*, %struct.pageseg*, %struct.dump_opts*, i8*, i8**) #0 !dbg !6440 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.tiff*, align 8
  %11 = alloca %struct.tiff*, align 8
  %12 = alloca %struct.image_data*, align 8
  %13 = alloca %struct.pagedef*, align 8
  %14 = alloca %struct.pageseg*, align 8
  %15 = alloca %struct.dump_opts*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8**, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %10, metadata !6443, metadata !DIExpression()), !dbg !6444
  store %struct.tiff* %1, %struct.tiff** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %11, metadata !6445, metadata !DIExpression()), !dbg !6446
  store %struct.image_data* %2, %struct.image_data** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %12, metadata !6447, metadata !DIExpression()), !dbg !6448
  store %struct.pagedef* %3, %struct.pagedef** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.pagedef** %13, metadata !6449, metadata !DIExpression()), !dbg !6450
  store %struct.pageseg* %4, %struct.pageseg** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.pageseg** %14, metadata !6451, metadata !DIExpression()), !dbg !6452
  store %struct.dump_opts* %5, %struct.dump_opts** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %15, metadata !6453, metadata !DIExpression()), !dbg !6454
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !6455, metadata !DIExpression()), !dbg !6456
  store i8** %7, i8*** %17, align 8
  call void @llvm.dbg.declare(metadata i8*** %17, metadata !6457, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.declare(metadata double* %18, metadata !6459, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.declare(metadata double* %19, metadata !6461, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.declare(metadata i32* %20, metadata !6463, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.declare(metadata i32* %21, metadata !6465, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.declare(metadata i32* %22, metadata !6467, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.declare(metadata i32* %23, metadata !6469, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.declare(metadata i32* %24, metadata !6471, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.declare(metadata i8** %25, metadata !6473, metadata !DIExpression()), !dbg !6474
  %26 = load i8**, i8*** %17, align 8, !dbg !6475
  %27 = load i8*, i8** %26, align 8, !dbg !6476
  store i8* %27, i8** %25, align 8, !dbg !6474
  %28 = load %struct.pagedef*, %struct.pagedef** %13, align 8, !dbg !6477
  %29 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %28, i32 0, i32 5, !dbg !6478
  %30 = load double, double* %29, align 8, !dbg !6478
  store double %30, double* %18, align 8, !dbg !6479
  %31 = load %struct.pagedef*, %struct.pagedef** %13, align 8, !dbg !6480
  %32 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %31, i32 0, i32 6, !dbg !6481
  %33 = load double, double* %32, align 8, !dbg !6481
  store double %33, double* %19, align 8, !dbg !6482
  %34 = load %struct.pagedef*, %struct.pagedef** %13, align 8, !dbg !6483
  %35 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %34, i32 0, i32 10, !dbg !6484
  %36 = load i32, i32* %35, align 4, !dbg !6484
  %37 = load %struct.pagedef*, %struct.pagedef** %13, align 8, !dbg !6485
  %38 = getelementptr inbounds %struct.pagedef, %struct.pagedef* %37, i32 0, i32 9, !dbg !6486
  %39 = load i32, i32* %38, align 8, !dbg !6486
  %40 = mul i32 %36, %39, !dbg !6487
  store i32 %40, i32* %21, align 4, !dbg !6488
  %41 = load i32, i32* %21, align 4, !dbg !6489
  %42 = icmp ult i32 %41, 1, !dbg !6491
  br i1 %42, label %46, label %43, !dbg !6492

43:                                               ; preds = %8
  %44 = load i32, i32* %21, align 4, !dbg !6493
  %45 = icmp ugt i32 %44, 32, !dbg !6494
  br i1 %45, label %46, label %48, !dbg !6495

46:                                               ; preds = %43, %8
  %47 = load i32, i32* %21, align 4, !dbg !6496
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.351, i64 0, i64 0), i32 %47), !dbg !6498
  store i32 -1, i32* %9, align 4, !dbg !6499
  br label %136, !dbg !6499

48:                                               ; preds = %43
  store i32 0, i32* %20, align 4, !dbg !6500
  br label %49, !dbg !6502

49:                                               ; preds = %132, %48
  %50 = load i32, i32* %20, align 4, !dbg !6503
  %51 = load i32, i32* %21, align 4, !dbg !6505
  %52 = icmp ult i32 %50, %51, !dbg !6506
  br i1 %52, label %53, label %135, !dbg !6507

53:                                               ; preds = %49
  %54 = load %struct.pageseg*, %struct.pageseg** %14, align 8, !dbg !6508
  %55 = load i32, i32* %20, align 4, !dbg !6510
  %56 = zext i32 %55 to i64, !dbg !6508
  %57 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %54, i64 %56, !dbg !6508
  %58 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %57, i32 0, i32 1, !dbg !6511
  %59 = load i32, i32* %58, align 4, !dbg !6511
  %60 = load %struct.pageseg*, %struct.pageseg** %14, align 8, !dbg !6512
  %61 = load i32, i32* %20, align 4, !dbg !6513
  %62 = zext i32 %61 to i64, !dbg !6512
  %63 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %60, i64 %62, !dbg !6512
  %64 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %63, i32 0, i32 0, !dbg !6514
  %65 = load i32, i32* %64, align 4, !dbg !6514
  %66 = sub i32 %59, %65, !dbg !6515
  %67 = add i32 %66, 1, !dbg !6516
  store i32 %67, i32* %22, align 4, !dbg !6517
  %68 = load %struct.pageseg*, %struct.pageseg** %14, align 8, !dbg !6518
  %69 = load i32, i32* %20, align 4, !dbg !6519
  %70 = zext i32 %69 to i64, !dbg !6518
  %71 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %68, i64 %70, !dbg !6518
  %72 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %71, i32 0, i32 3, !dbg !6520
  %73 = load i32, i32* %72, align 4, !dbg !6520
  %74 = load %struct.pageseg*, %struct.pageseg** %14, align 8, !dbg !6521
  %75 = load i32, i32* %20, align 4, !dbg !6522
  %76 = zext i32 %75 to i64, !dbg !6521
  %77 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %74, i64 %76, !dbg !6521
  %78 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %77, i32 0, i32 2, !dbg !6523
  %79 = load i32, i32* %78, align 4, !dbg !6523
  %80 = sub i32 %73, %79, !dbg !6524
  %81 = add i32 %80, 1, !dbg !6525
  store i32 %81, i32* %23, align 4, !dbg !6526
  %82 = load i32, i32* %22, align 4, !dbg !6527
  %83 = load %struct.image_data*, %struct.image_data** %12, align 8, !dbg !6528
  %84 = getelementptr inbounds %struct.image_data, %struct.image_data* %83, i32 0, i32 5, !dbg !6529
  %85 = load i16, i16* %84, align 2, !dbg !6529
  %86 = zext i16 %85 to i32, !dbg !6528
  %87 = mul i32 %82, %86, !dbg !6530
  %88 = add i32 %87, 7, !dbg !6531
  %89 = uitofp i32 %88 to double, !dbg !6532
  %90 = fdiv double %89, 8.000000e+00, !dbg !6533
  %91 = call double @llvm.ceil.f64(double %90), !dbg !6534
  %92 = fptoui double %91 to i32, !dbg !6535
  %93 = load %struct.image_data*, %struct.image_data** %12, align 8, !dbg !6536
  %94 = getelementptr inbounds %struct.image_data, %struct.image_data* %93, i32 0, i32 6, !dbg !6537
  %95 = load i16, i16* %94, align 4, !dbg !6537
  %96 = zext i16 %95 to i32, !dbg !6536
  %97 = mul i32 %92, %96, !dbg !6538
  %98 = load i32, i32* %23, align 4, !dbg !6539
  %99 = mul i32 %97, %98, !dbg !6540
  store i32 %99, i32* %24, align 4, !dbg !6541
  %100 = load i32, i32* %24, align 4, !dbg !6542
  %101 = load i8**, i8*** %17, align 8, !dbg !6544
  %102 = call i32 @createImageSection(i32 %100, i8** %101), !dbg !6545
  %103 = icmp ne i32 %102, 0, !dbg !6545
  br i1 %103, label %104, label %105, !dbg !6546

104:                                              ; preds = %53
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.352, i64 0, i64 0)), !dbg !6547
  call void @exit(i32 -1) #9, !dbg !6549
  unreachable, !dbg !6549

105:                                              ; preds = %53
  %106 = load i8**, i8*** %17, align 8, !dbg !6550
  %107 = load i8*, i8** %106, align 8, !dbg !6551
  store i8* %107, i8** %25, align 8, !dbg !6552
  %108 = load %struct.image_data*, %struct.image_data** %12, align 8, !dbg !6553
  %109 = load %struct.pageseg*, %struct.pageseg** %14, align 8, !dbg !6555
  %110 = load i32, i32* %20, align 4, !dbg !6556
  %111 = zext i32 %110 to i64, !dbg !6555
  %112 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %109, i64 %111, !dbg !6555
  %113 = load i8*, i8** %16, align 8, !dbg !6557
  %114 = load i8*, i8** %25, align 8, !dbg !6558
  %115 = call i32 @extractImageSection(%struct.image_data* %108, %struct.pageseg* %112, i8* %113, i8* %114), !dbg !6559
  %116 = icmp ne i32 %115, 0, !dbg !6559
  br i1 %116, label %117, label %118, !dbg !6560

117:                                              ; preds = %105
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.353, i64 0, i64 0)), !dbg !6561
  call void @exit(i32 -1) #9, !dbg !6563
  unreachable, !dbg !6563

118:                                              ; preds = %105
  %119 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !6564
  %120 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !6566
  %121 = load %struct.image_data*, %struct.image_data** %12, align 8, !dbg !6567
  %122 = load %struct.dump_opts*, %struct.dump_opts** %15, align 8, !dbg !6568
  %123 = load i32, i32* %22, align 4, !dbg !6569
  %124 = load i32, i32* %23, align 4, !dbg !6570
  %125 = load double, double* %18, align 8, !dbg !6571
  %126 = load double, double* %19, align 8, !dbg !6572
  %127 = load i8*, i8** %25, align 8, !dbg !6573
  %128 = call i32 @writeSingleSection(%struct.tiff* %119, %struct.tiff* %120, %struct.image_data* %121, %struct.dump_opts* %122, i32 %123, i32 %124, double %125, double %126, i8* %127), !dbg !6574
  %129 = icmp ne i32 %128, 0, !dbg !6574
  br i1 %129, label %130, label %131, !dbg !6575

130:                                              ; preds = %118
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.354, i64 0, i64 0)), !dbg !6576
  call void @exit(i32 -1) #9, !dbg !6578
  unreachable, !dbg !6578

131:                                              ; preds = %118
  br label %132, !dbg !6579

132:                                              ; preds = %131
  %133 = load i32, i32* %20, align 4, !dbg !6580
  %134 = add i32 %133, 1, !dbg !6580
  store i32 %134, i32* %20, align 4, !dbg !6580
  br label %49, !dbg !6581, !llvm.loop !6582

135:                                              ; preds = %49
  store i32 0, i32* %9, align 4, !dbg !6584
  br label %136, !dbg !6584

136:                                              ; preds = %135, %46
  %137 = load i32, i32* %9, align 4, !dbg !6585
  ret i32 %137, !dbg !6585
}

declare void @_TIFFfree(i8*) #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @createImageSection(i32, i8**) #0 !dbg !574 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6586, metadata !DIExpression()), !dbg !6587
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !6588, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6590, metadata !DIExpression()), !dbg !6591
  store i8* null, i8** %6, align 8, !dbg !6591
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6592, metadata !DIExpression()), !dbg !6593
  store i8* null, i8** %7, align 8, !dbg !6593
  %8 = load i8**, i8*** %5, align 8, !dbg !6594
  %9 = load i8*, i8** %8, align 8, !dbg !6595
  store i8* %9, i8** %6, align 8, !dbg !6596
  %10 = load i8*, i8** %6, align 8, !dbg !6597
  %11 = icmp ne i8* %10, null, !dbg !6597
  br i1 %11, label %21, label %12, !dbg !6599

12:                                               ; preds = %2
  %13 = load i32, i32* %4, align 4, !dbg !6600
  %14 = zext i32 %13 to i64, !dbg !6600
  %15 = call i8* @_TIFFmalloc(i64 %14), !dbg !6602
  store i8* %15, i8** %6, align 8, !dbg !6603
  %16 = load i8*, i8** %6, align 8, !dbg !6604
  %17 = load i8**, i8*** %5, align 8, !dbg !6605
  store i8* %16, i8** %17, align 8, !dbg !6606
  %18 = load i8*, i8** %6, align 8, !dbg !6607
  %19 = load i32, i32* %4, align 4, !dbg !6608
  %20 = zext i32 %19 to i64, !dbg !6608
  call void @_TIFFmemset(i8* %18, i32 0, i64 %20), !dbg !6609
  br label %44, !dbg !6610

21:                                               ; preds = %2
  %22 = load i32, i32* @createImageSection.prev_sectsize, align 4, !dbg !6611
  %23 = load i32, i32* %4, align 4, !dbg !6614
  %24 = icmp ult i32 %22, %23, !dbg !6615
  br i1 %24, label %25, label %43, !dbg !6616

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 8, !dbg !6617
  %27 = load i32, i32* %4, align 4, !dbg !6619
  %28 = zext i32 %27 to i64, !dbg !6619
  %29 = call i8* @_TIFFrealloc(i8* %26, i64 %28), !dbg !6620
  store i8* %29, i8** %7, align 8, !dbg !6621
  %30 = load i8*, i8** %7, align 8, !dbg !6622
  %31 = icmp ne i8* %30, null, !dbg !6622
  br i1 %31, label %37, label %32, !dbg !6624

32:                                               ; preds = %25
  %33 = load i8*, i8** %6, align 8, !dbg !6625
  call void @free(i8* %33) #8, !dbg !6627
  %34 = load i32, i32* %4, align 4, !dbg !6628
  %35 = zext i32 %34 to i64, !dbg !6628
  %36 = call i8* @_TIFFmalloc(i64 %35), !dbg !6629
  store i8* %36, i8** %6, align 8, !dbg !6630
  br label %39, !dbg !6631

37:                                               ; preds = %25
  %38 = load i8*, i8** %7, align 8, !dbg !6632
  store i8* %38, i8** %6, align 8, !dbg !6633
  br label %39

39:                                               ; preds = %37, %32
  %40 = load i8*, i8** %6, align 8, !dbg !6634
  %41 = load i32, i32* %4, align 4, !dbg !6635
  %42 = zext i32 %41 to i64, !dbg !6635
  call void @_TIFFmemset(i8* %40, i32 0, i64 %42), !dbg !6636
  br label %43, !dbg !6637

43:                                               ; preds = %39, %21
  br label %44

44:                                               ; preds = %43, %12
  %45 = load i8*, i8** %6, align 8, !dbg !6638
  %46 = icmp ne i8* %45, null, !dbg !6638
  br i1 %46, label %48, label %47, !dbg !6640

47:                                               ; preds = %44
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.355, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.356, i64 0, i64 0)), !dbg !6641
  store i32 -1, i32* %3, align 4, !dbg !6643
  br label %52, !dbg !6643

48:                                               ; preds = %44
  %49 = load i32, i32* %4, align 4, !dbg !6644
  store i32 %49, i32* @createImageSection.prev_sectsize, align 4, !dbg !6645
  %50 = load i8*, i8** %6, align 8, !dbg !6646
  %51 = load i8**, i8*** %5, align 8, !dbg !6647
  store i8* %50, i8** %51, align 8, !dbg !6648
  store i32 0, i32* %3, align 4, !dbg !6649
  br label %52, !dbg !6649

52:                                               ; preds = %48, %47
  %53 = load i32, i32* %3, align 4, !dbg !6650
  ret i32 %53, !dbg !6650
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractImageSection(%struct.image_data*, %struct.pageseg*, i8*, i8*) #0 !dbg !6651 {
  %5 = alloca %struct.image_data*, align 8
  %6 = alloca %struct.pageseg*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i16, align 2
  %35 = alloca i16, align 2
  store %struct.image_data* %0, %struct.image_data** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %5, metadata !6654, metadata !DIExpression()), !dbg !6655
  store %struct.pageseg* %1, %struct.pageseg** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.pageseg** %6, metadata !6656, metadata !DIExpression()), !dbg !6657
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6658, metadata !DIExpression()), !dbg !6659
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata i8* %10, metadata !6664, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6666, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6668, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6670, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6672, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6676, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.declare(metadata i32* %17, metadata !6678, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.declare(metadata i32* %18, metadata !6680, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.declare(metadata i32* %19, metadata !6682, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.declare(metadata i32* %20, metadata !6684, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.declare(metadata i32* %21, metadata !6686, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.declare(metadata i32* %22, metadata !6688, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.declare(metadata i32* %23, metadata !6690, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.declare(metadata i32* %24, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %25, metadata !6694, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.declare(metadata i32* %26, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.declare(metadata i32* %27, metadata !6698, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.declare(metadata i32* %28, metadata !6700, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.declare(metadata i32* %29, metadata !6702, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.declare(metadata i32* %30, metadata !6704, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.declare(metadata i32* %31, metadata !6706, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.declare(metadata i32* %32, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata i32* %33, metadata !6710, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.declare(metadata i16* %34, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata i16* %35, metadata !6714, metadata !DIExpression()), !dbg !6715
  %36 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !6716
  %37 = getelementptr inbounds %struct.image_data, %struct.image_data* %36, i32 0, i32 2, !dbg !6717
  %38 = load i32, i32* %37, align 4, !dbg !6717
  store i32 %38, i32* %13, align 4, !dbg !6718
  %39 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !6719
  %40 = getelementptr inbounds %struct.image_data, %struct.image_data* %39, i32 0, i32 3, !dbg !6720
  %41 = load i32, i32* %40, align 4, !dbg !6720
  store i32 %41, i32* %14, align 4, !dbg !6721
  %42 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !6722
  %43 = getelementptr inbounds %struct.image_data, %struct.image_data* %42, i32 0, i32 5, !dbg !6723
  %44 = load i16, i16* %43, align 2, !dbg !6723
  store i16 %44, i16* %34, align 2, !dbg !6724
  %45 = load %struct.image_data*, %struct.image_data** %5, align 8, !dbg !6725
  %46 = getelementptr inbounds %struct.image_data, %struct.image_data* %45, i32 0, i32 6, !dbg !6726
  %47 = load i16, i16* %46, align 4, !dbg !6726
  store i16 %47, i16* %35, align 2, !dbg !6727
  %48 = load i8*, i8** %7, align 8, !dbg !6728
  store i8* %48, i8** %11, align 8, !dbg !6729
  %49 = load i8*, i8** %8, align 8, !dbg !6730
  store i8* %49, i8** %12, align 8, !dbg !6731
  store i32 0, i32* %25, align 4, !dbg !6732
  store i32 0, i32* %26, align 4, !dbg !6733
  %50 = load %struct.pageseg*, %struct.pageseg** %6, align 8, !dbg !6734
  %51 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %50, i32 0, i32 2, !dbg !6735
  %52 = load i32, i32* %51, align 4, !dbg !6735
  store i32 %52, i32* %21, align 4, !dbg !6736
  %53 = load %struct.pageseg*, %struct.pageseg** %6, align 8, !dbg !6737
  %54 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %53, i32 0, i32 3, !dbg !6738
  %55 = load i32, i32* %54, align 4, !dbg !6738
  store i32 %55, i32* %22, align 4, !dbg !6739
  %56 = load %struct.pageseg*, %struct.pageseg** %6, align 8, !dbg !6740
  %57 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %56, i32 0, i32 0, !dbg !6741
  %58 = load i32, i32* %57, align 4, !dbg !6741
  store i32 %58, i32* %23, align 4, !dbg !6742
  %59 = load %struct.pageseg*, %struct.pageseg** %6, align 8, !dbg !6743
  %60 = getelementptr inbounds %struct.pageseg, %struct.pageseg* %59, i32 0, i32 1, !dbg !6744
  %61 = load i32, i32* %60, align 4, !dbg !6744
  store i32 %61, i32* %24, align 4, !dbg !6745
  %62 = load i32, i32* %24, align 4, !dbg !6746
  %63 = load i32, i32* %23, align 4, !dbg !6747
  %64 = sub i32 %62, %63, !dbg !6748
  %65 = add i32 %64, 1, !dbg !6749
  store i32 %65, i32* %32, align 4, !dbg !6750
  %66 = load i32, i32* %22, align 4, !dbg !6751
  %67 = load i32, i32* %21, align 4, !dbg !6752
  %68 = sub i32 %66, %67, !dbg !6753
  %69 = add i32 %68, 1, !dbg !6754
  store i32 %69, i32* %33, align 4, !dbg !6755
  %70 = load i32, i32* %13, align 4, !dbg !6756
  %71 = load i16, i16* %34, align 2, !dbg !6757
  %72 = zext i16 %71 to i32, !dbg !6757
  %73 = mul i32 %70, %72, !dbg !6758
  %74 = add i32 %73, 7, !dbg !6759
  %75 = udiv i32 %74, 8, !dbg !6760
  %76 = load i16, i16* %35, align 2, !dbg !6761
  %77 = zext i16 %76 to i32, !dbg !6761
  %78 = mul i32 %75, %77, !dbg !6762
  store i32 %78, i32* %15, align 4, !dbg !6763
  %79 = load i32, i32* %32, align 4, !dbg !6764
  %80 = load i16, i16* %35, align 2, !dbg !6765
  %81 = zext i16 %80 to i32, !dbg !6765
  %82 = mul i32 %79, %81, !dbg !6766
  %83 = load i16, i16* %34, align 2, !dbg !6767
  %84 = zext i16 %83 to i32, !dbg !6767
  %85 = mul i32 %82, %84, !dbg !6768
  %86 = udiv i32 %85, 8, !dbg !6769
  store i32 %86, i32* %31, align 4, !dbg !6770
  %87 = load i32, i32* %32, align 4, !dbg !6771
  %88 = load i16, i16* %34, align 2, !dbg !6772
  %89 = zext i16 %88 to i32, !dbg !6772
  %90 = mul i32 %87, %89, !dbg !6773
  %91 = urem i32 %90, 8, !dbg !6774
  store i32 %91, i32* %19, align 4, !dbg !6775
  %92 = load i16, i16* %34, align 2, !dbg !6776
  %93 = zext i16 %92 to i32, !dbg !6776
  %94 = srem i32 %93, 8, !dbg !6778
  %95 = icmp eq i32 %94, 0, !dbg !6779
  br i1 %95, label %96, label %134, !dbg !6780

96:                                               ; preds = %4
  %97 = load i32, i32* %23, align 4, !dbg !6781
  %98 = load i16, i16* %35, align 2, !dbg !6783
  %99 = zext i16 %98 to i32, !dbg !6783
  %100 = mul i32 %97, %99, !dbg !6784
  %101 = load i16, i16* %34, align 2, !dbg !6785
  %102 = zext i16 %101 to i32, !dbg !6785
  %103 = mul i32 %100, %102, !dbg !6786
  %104 = udiv i32 %103, 8, !dbg !6787
  store i32 %104, i32* %28, align 4, !dbg !6788
  %105 = load i32, i32* %21, align 4, !dbg !6789
  store i32 %105, i32* %20, align 4, !dbg !6791
  br label %106, !dbg !6792

106:                                              ; preds = %130, %96
  %107 = load i32, i32* %20, align 4, !dbg !6793
  %108 = load i32, i32* %22, align 4, !dbg !6795
  %109 = icmp ule i32 %107, %108, !dbg !6796
  br i1 %109, label %110, label %133, !dbg !6797

110:                                              ; preds = %106
  %111 = load i32, i32* %20, align 4, !dbg !6798
  %112 = load i32, i32* %15, align 4, !dbg !6800
  %113 = mul i32 %111, %112, !dbg !6801
  store i32 %113, i32* %27, align 4, !dbg !6802
  %114 = load i32, i32* %27, align 4, !dbg !6803
  %115 = load i32, i32* %28, align 4, !dbg !6804
  %116 = add i32 %114, %115, !dbg !6805
  store i32 %116, i32* %25, align 4, !dbg !6806
  %117 = load i8*, i8** %8, align 8, !dbg !6807
  %118 = load i32, i32* %26, align 4, !dbg !6808
  %119 = zext i32 %118 to i64, !dbg !6809
  %120 = getelementptr inbounds i8, i8* %117, i64 %119, !dbg !6809
  %121 = load i8*, i8** %7, align 8, !dbg !6810
  %122 = load i32, i32* %25, align 4, !dbg !6811
  %123 = zext i32 %122 to i64, !dbg !6812
  %124 = getelementptr inbounds i8, i8* %121, i64 %123, !dbg !6812
  %125 = load i32, i32* %31, align 4, !dbg !6813
  %126 = zext i32 %125 to i64, !dbg !6813
  call void @_TIFFmemcpy(i8* %120, i8* %124, i64 %126), !dbg !6814
  %127 = load i32, i32* %31, align 4, !dbg !6815
  %128 = load i32, i32* %26, align 4, !dbg !6816
  %129 = add i32 %128, %127, !dbg !6816
  store i32 %129, i32* %26, align 4, !dbg !6816
  br label %130, !dbg !6817

130:                                              ; preds = %110
  %131 = load i32, i32* %20, align 4, !dbg !6818
  %132 = add i32 %131, 1, !dbg !6818
  store i32 %132, i32* %20, align 4, !dbg !6818
  br label %106, !dbg !6819, !llvm.loop !6820

133:                                              ; preds = %106
  br label %330, !dbg !6822

134:                                              ; preds = %4
  %135 = load i16, i16* %35, align 2, !dbg !6823
  %136 = zext i16 %135 to i32, !dbg !6823
  %137 = load i32, i32* %23, align 4, !dbg !6825
  %138 = load i16, i16* %34, align 2, !dbg !6826
  %139 = zext i16 %138 to i32, !dbg !6826
  %140 = mul i32 %137, %139, !dbg !6827
  %141 = urem i32 %140, 8, !dbg !6828
  %142 = mul i32 %136, %141, !dbg !6829
  store i32 %142, i32* %17, align 4, !dbg !6830
  %143 = load i16, i16* %35, align 2, !dbg !6831
  %144 = zext i16 %143 to i32, !dbg !6831
  %145 = load i32, i32* %24, align 4, !dbg !6832
  %146 = load i16, i16* %34, align 2, !dbg !6833
  %147 = zext i16 %146 to i32, !dbg !6833
  %148 = mul i32 %145, %147, !dbg !6834
  %149 = urem i32 %148, 8, !dbg !6835
  %150 = mul i32 %144, %149, !dbg !6836
  store i32 %150, i32* %18, align 4, !dbg !6837
  %151 = load i32, i32* %21, align 4, !dbg !6838
  store i32 %151, i32* %20, align 4, !dbg !6840
  br label %152, !dbg !6841

152:                                              ; preds = %326, %134
  %153 = load i32, i32* %20, align 4, !dbg !6842
  %154 = load i32, i32* %22, align 4, !dbg !6844
  %155 = icmp ule i32 %153, %154, !dbg !6845
  br i1 %155, label %156, label %329, !dbg !6846

156:                                              ; preds = %152
  %157 = load i32, i32* %20, align 4, !dbg !6847
  %158 = load i32, i32* %15, align 4, !dbg !6849
  %159 = mul i32 %157, %158, !dbg !6850
  store i32 %159, i32* %27, align 4, !dbg !6851
  %160 = load i32, i32* %27, align 4, !dbg !6852
  %161 = load i32, i32* %23, align 4, !dbg !6853
  %162 = load i16, i16* %34, align 2, !dbg !6854
  %163 = zext i16 %162 to i32, !dbg !6854
  %164 = mul i32 %161, %163, !dbg !6855
  %165 = udiv i32 %164, 8, !dbg !6856
  %166 = add i32 %160, %165, !dbg !6857
  store i32 %166, i32* %29, align 4, !dbg !6858
  %167 = load i32, i32* %27, align 4, !dbg !6859
  %168 = load i32, i32* %24, align 4, !dbg !6860
  %169 = load i16, i16* %34, align 2, !dbg !6861
  %170 = zext i16 %169 to i32, !dbg !6861
  %171 = mul i32 %168, %170, !dbg !6862
  %172 = udiv i32 %171, 8, !dbg !6863
  %173 = add i32 %167, %172, !dbg !6864
  store i32 %173, i32* %30, align 4, !dbg !6865
  store i8 0, i8* %10, align 1, !dbg !6866
  store i8 0, i8* %9, align 1, !dbg !6867
  %174 = load i32, i32* %17, align 4, !dbg !6868
  %175 = icmp eq i32 %174, 0, !dbg !6870
  br i1 %175, label %176, label %212, !dbg !6871

176:                                              ; preds = %156
  %177 = load i8*, i8** %8, align 8, !dbg !6872
  %178 = load i32, i32* %26, align 4, !dbg !6874
  %179 = zext i32 %178 to i64, !dbg !6875
  %180 = getelementptr inbounds i8, i8* %177, i64 %179, !dbg !6875
  %181 = load i8*, i8** %7, align 8, !dbg !6876
  %182 = load i32, i32* %29, align 4, !dbg !6877
  %183 = zext i32 %182 to i64, !dbg !6878
  %184 = getelementptr inbounds i8, i8* %181, i64 %183, !dbg !6878
  %185 = load i32, i32* %31, align 4, !dbg !6879
  %186 = zext i32 %185 to i64, !dbg !6879
  call void @_TIFFmemcpy(i8* %180, i8* %184, i64 %186), !dbg !6880
  %187 = load i32, i32* %31, align 4, !dbg !6881
  %188 = load i32, i32* %26, align 4, !dbg !6882
  %189 = add i32 %188, %187, !dbg !6882
  store i32 %189, i32* %26, align 4, !dbg !6882
  %190 = load i32, i32* %19, align 4, !dbg !6883
  %191 = icmp ne i32 %190, 0, !dbg !6885
  br i1 %191, label %192, label %211, !dbg !6886

192:                                              ; preds = %176
  %193 = load i8*, i8** %7, align 8, !dbg !6887
  %194 = load i32, i32* %30, align 4, !dbg !6889
  %195 = zext i32 %194 to i64, !dbg !6887
  %196 = getelementptr inbounds i8, i8* %193, i64 %195, !dbg !6887
  %197 = load i8, i8* %196, align 1, !dbg !6887
  %198 = zext i8 %197 to i32, !dbg !6887
  %199 = load i32, i32* %18, align 4, !dbg !6890
  %200 = sub i32 7, %199, !dbg !6891
  %201 = shl i32 255, %200, !dbg !6892
  %202 = and i32 %198, %201, !dbg !6893
  %203 = trunc i32 %202 to i8, !dbg !6887
  store i8 %203, i8* %10, align 1, !dbg !6894
  %204 = load i8, i8* %10, align 1, !dbg !6895
  %205 = load i8*, i8** %8, align 8, !dbg !6896
  %206 = load i32, i32* %26, align 4, !dbg !6897
  %207 = zext i32 %206 to i64, !dbg !6896
  %208 = getelementptr inbounds i8, i8* %205, i64 %207, !dbg !6896
  store i8 %204, i8* %208, align 1, !dbg !6898
  %209 = load i32, i32* %26, align 4, !dbg !6899
  %210 = add i32 %209, 1, !dbg !6899
  store i32 %210, i32* %26, align 4, !dbg !6899
  br label %211, !dbg !6900

211:                                              ; preds = %192, %176
  br label %325, !dbg !6901

212:                                              ; preds = %156
  store i32 0, i32* %16, align 4, !dbg !6902
  br label %213, !dbg !6905

213:                                              ; preds = %261, %212
  %214 = load i32, i32* %16, align 4, !dbg !6906
  %215 = load i32, i32* %31, align 4, !dbg !6908
  %216 = icmp ule i32 %214, %215, !dbg !6909
  br i1 %216, label %217, label %264, !dbg !6910

217:                                              ; preds = %213
  %218 = load i8*, i8** %7, align 8, !dbg !6911
  %219 = load i32, i32* %29, align 4, !dbg !6913
  %220 = load i32, i32* %16, align 4, !dbg !6914
  %221 = add i32 %219, %220, !dbg !6915
  %222 = zext i32 %221 to i64, !dbg !6911
  %223 = getelementptr inbounds i8, i8* %218, i64 %222, !dbg !6911
  %224 = load i8, i8* %223, align 1, !dbg !6911
  %225 = zext i8 %224 to i32, !dbg !6911
  %226 = load i32, i32* %17, align 4, !dbg !6916
  %227 = ashr i32 255, %226, !dbg !6917
  %228 = and i32 %225, %227, !dbg !6918
  %229 = trunc i32 %228 to i8, !dbg !6911
  store i8 %229, i8* %9, align 1, !dbg !6919
  %230 = load i8*, i8** %7, align 8, !dbg !6920
  %231 = load i32, i32* %29, align 4, !dbg !6921
  %232 = load i32, i32* %16, align 4, !dbg !6922
  %233 = add i32 %231, %232, !dbg !6923
  %234 = add i32 %233, 1, !dbg !6924
  %235 = zext i32 %234 to i64, !dbg !6920
  %236 = getelementptr inbounds i8, i8* %230, i64 %235, !dbg !6920
  %237 = load i8, i8* %236, align 1, !dbg !6920
  %238 = zext i8 %237 to i32, !dbg !6920
  %239 = load i32, i32* %17, align 4, !dbg !6925
  %240 = sub i32 7, %239, !dbg !6926
  %241 = shl i32 255, %240, !dbg !6927
  %242 = and i32 %238, %241, !dbg !6928
  %243 = trunc i32 %242 to i8, !dbg !6920
  store i8 %243, i8* %10, align 1, !dbg !6929
  %244 = load i8, i8* %9, align 1, !dbg !6930
  %245 = zext i8 %244 to i32, !dbg !6930
  %246 = load i32, i32* %17, align 4, !dbg !6931
  %247 = shl i32 %245, %246, !dbg !6932
  %248 = load i8, i8* %10, align 1, !dbg !6933
  %249 = zext i8 %248 to i32, !dbg !6933
  %250 = load i32, i32* %17, align 4, !dbg !6934
  %251 = sub i32 8, %250, !dbg !6935
  %252 = ashr i32 %249, %251, !dbg !6936
  %253 = or i32 %247, %252, !dbg !6937
  %254 = trunc i32 %253 to i8, !dbg !6938
  %255 = load i8*, i8** %8, align 8, !dbg !6939
  %256 = load i32, i32* %26, align 4, !dbg !6940
  %257 = load i32, i32* %16, align 4, !dbg !6941
  %258 = add i32 %256, %257, !dbg !6942
  %259 = zext i32 %258 to i64, !dbg !6939
  %260 = getelementptr inbounds i8, i8* %255, i64 %259, !dbg !6939
  store i8 %254, i8* %260, align 1, !dbg !6943
  br label %261, !dbg !6944

261:                                              ; preds = %217
  %262 = load i32, i32* %16, align 4, !dbg !6945
  %263 = add i32 %262, 1, !dbg !6945
  store i32 %263, i32* %16, align 4, !dbg !6945
  br label %213, !dbg !6946, !llvm.loop !6947

264:                                              ; preds = %213
  %265 = load i32, i32* %31, align 4, !dbg !6949
  %266 = load i32, i32* %26, align 4, !dbg !6950
  %267 = add i32 %266, %265, !dbg !6950
  store i32 %267, i32* %26, align 4, !dbg !6950
  %268 = load i32, i32* %19, align 4, !dbg !6951
  %269 = icmp ne i32 %268, 0, !dbg !6953
  br i1 %269, label %270, label %322, !dbg !6954

270:                                              ; preds = %264
  %271 = load i32, i32* %18, align 4, !dbg !6955
  %272 = load i32, i32* %17, align 4, !dbg !6958
  %273 = icmp ugt i32 %271, %272, !dbg !6959
  br i1 %273, label %274, label %299, !dbg !6960

274:                                              ; preds = %270
  %275 = load i8*, i8** %7, align 8, !dbg !6961
  %276 = load i32, i32* %29, align 4, !dbg !6963
  %277 = load i32, i32* %31, align 4, !dbg !6964
  %278 = add i32 %276, %277, !dbg !6965
  %279 = zext i32 %278 to i64, !dbg !6961
  %280 = getelementptr inbounds i8, i8* %275, i64 %279, !dbg !6961
  %281 = load i8, i8* %280, align 1, !dbg !6961
  %282 = zext i8 %281 to i32, !dbg !6961
  %283 = load i32, i32* %18, align 4, !dbg !6966
  %284 = sub i32 7, %283, !dbg !6967
  %285 = shl i32 255, %284, !dbg !6968
  %286 = and i32 %282, %285, !dbg !6969
  %287 = trunc i32 %286 to i8, !dbg !6961
  store i8 %287, i8* %9, align 1, !dbg !6970
  %288 = load i8, i8* %9, align 1, !dbg !6971
  %289 = zext i8 %288 to i32, !dbg !6971
  %290 = load i32, i32* %17, align 4, !dbg !6972
  %291 = shl i32 255, %290, !dbg !6973
  %292 = and i32 %289, %291, !dbg !6974
  %293 = trunc i32 %292 to i8, !dbg !6971
  store i8 %293, i8* %10, align 1, !dbg !6975
  %294 = load i8, i8* %10, align 1, !dbg !6976
  %295 = load i8*, i8** %8, align 8, !dbg !6977
  %296 = load i32, i32* %26, align 4, !dbg !6978
  %297 = zext i32 %296 to i64, !dbg !6977
  %298 = getelementptr inbounds i8, i8* %295, i64 %297, !dbg !6977
  store i8 %294, i8* %298, align 1, !dbg !6979
  br label %321, !dbg !6980

299:                                              ; preds = %270
  %300 = load i32, i32* %18, align 4, !dbg !6981
  %301 = load i32, i32* %17, align 4, !dbg !6984
  %302 = icmp ult i32 %300, %301, !dbg !6985
  br i1 %302, label %303, label %320, !dbg !6986

303:                                              ; preds = %299
  %304 = load i32, i32* %17, align 4, !dbg !6987
  %305 = load i32, i32* %18, align 4, !dbg !6989
  %306 = sub i32 %304, %305, !dbg !6990
  %307 = sub i32 %306, 1, !dbg !6991
  %308 = shl i32 255, %307, !dbg !6992
  %309 = trunc i32 %308 to i8, !dbg !6993
  store i8 %309, i8* %10, align 1, !dbg !6994
  %310 = load i8, i8* %10, align 1, !dbg !6995
  %311 = zext i8 %310 to i32, !dbg !6995
  %312 = load i8*, i8** %8, align 8, !dbg !6996
  %313 = load i32, i32* %26, align 4, !dbg !6997
  %314 = zext i32 %313 to i64, !dbg !6996
  %315 = getelementptr inbounds i8, i8* %312, i64 %314, !dbg !6996
  %316 = load i8, i8* %315, align 1, !dbg !6998
  %317 = zext i8 %316 to i32, !dbg !6998
  %318 = and i32 %317, %311, !dbg !6998
  %319 = trunc i32 %318 to i8, !dbg !6998
  store i8 %319, i8* %315, align 1, !dbg !6998
  br label %320, !dbg !6999

320:                                              ; preds = %303, %299
  br label %321

321:                                              ; preds = %320, %274
  br label %322, !dbg !7000

322:                                              ; preds = %321, %264
  %323 = load i32, i32* %26, align 4, !dbg !7001
  %324 = add i32 %323, 1, !dbg !7001
  store i32 %324, i32* %26, align 4, !dbg !7001
  br label %325

325:                                              ; preds = %322, %211
  br label %326, !dbg !7002

326:                                              ; preds = %325
  %327 = load i32, i32* %20, align 4, !dbg !7003
  %328 = add i32 %327, 1, !dbg !7003
  store i32 %328, i32* %20, align 4, !dbg !7003
  br label %152, !dbg !7004, !llvm.loop !7005

329:                                              ; preds = %152
  br label %330

330:                                              ; preds = %329, %133
  ret i32 0, !dbg !7007
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeSingleSection(%struct.tiff*, %struct.tiff*, %struct.image_data*, %struct.dump_opts*, i32, i32, double, double, i8*) #0 !dbg !7008 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.tiff*, align 8
  %12 = alloca %struct.tiff*, align 8
  %13 = alloca %struct.image_data*, align 8
  %14 = alloca %struct.dump_opts*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i16, align 2
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca i16, align 2
  %24 = alloca i16, align 2
  %25 = alloca %struct.cpTag*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i8**, align 8
  %28 = alloca i16, align 2
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca i16, align 2
  %33 = alloca i16, align 2
  store %struct.tiff* %0, %struct.tiff** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %11, metadata !7011, metadata !DIExpression()), !dbg !7012
  store %struct.tiff* %1, %struct.tiff** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %12, metadata !7013, metadata !DIExpression()), !dbg !7014
  store %struct.image_data* %2, %struct.image_data** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %13, metadata !7015, metadata !DIExpression()), !dbg !7016
  store %struct.dump_opts* %3, %struct.dump_opts** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %14, metadata !7017, metadata !DIExpression()), !dbg !7018
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7019, metadata !DIExpression()), !dbg !7020
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7021, metadata !DIExpression()), !dbg !7022
  store double %6, double* %17, align 8
  call void @llvm.dbg.declare(metadata double* %17, metadata !7023, metadata !DIExpression()), !dbg !7024
  store double %7, double* %18, align 8
  call void @llvm.dbg.declare(metadata double* %18, metadata !7025, metadata !DIExpression()), !dbg !7026
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !7027, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.declare(metadata i16* %20, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.declare(metadata i16* %21, metadata !7031, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.declare(metadata i16* %22, metadata !7033, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.declare(metadata i16* %23, metadata !7035, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata i16* %24, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.declare(metadata %struct.cpTag** %25, metadata !7039, metadata !DIExpression()), !dbg !7040
  %34 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !7041
  %35 = getelementptr inbounds %struct.image_data, %struct.image_data* %34, i32 0, i32 10, !dbg !7042
  %36 = load i16, i16* %35, align 4, !dbg !7042
  store i16 %36, i16* %22, align 2, !dbg !7043
  %37 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !7044
  %38 = getelementptr inbounds %struct.image_data, %struct.image_data* %37, i32 0, i32 8, !dbg !7045
  %39 = load i16, i16* %38, align 4, !dbg !7045
  store i16 %39, i16* %23, align 2, !dbg !7046
  %40 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !7047
  %41 = getelementptr inbounds %struct.image_data, %struct.image_data* %40, i32 0, i32 6, !dbg !7048
  %42 = load i16, i16* %41, align 4, !dbg !7048
  store i16 %42, i16* %21, align 2, !dbg !7049
  %43 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !7050
  %44 = getelementptr inbounds %struct.image_data, %struct.image_data* %43, i32 0, i32 5, !dbg !7051
  %45 = load i16, i16* %44, align 2, !dbg !7051
  store i16 %45, i16* %20, align 2, !dbg !7052
  %46 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7053
  %47 = load i32, i32* %15, align 4, !dbg !7054
  %48 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %46, i32 256, i32 %47), !dbg !7055
  %49 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7056
  %50 = load i32, i32* %16, align 4, !dbg !7057
  %51 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %49, i32 257, i32 %50), !dbg !7058
  %52 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7059
  %53 = load i16, i16* %20, align 2, !dbg !7060
  %54 = zext i16 %53 to i32, !dbg !7060
  %55 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %52, i32 258, i32 %54), !dbg !7061
  %56 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7062
  %57 = load i16, i16* %21, align 2, !dbg !7063
  %58 = zext i16 %57 to i32, !dbg !7063
  %59 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %56, i32 277, i32 %58), !dbg !7064
  %60 = load i16, i16* @compression, align 2, !dbg !7065
  %61 = zext i16 %60 to i32, !dbg !7065
  %62 = icmp ne i32 %61, 65535, !dbg !7067
  br i1 %62, label %63, label %68, !dbg !7068

63:                                               ; preds = %9
  %64 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7069
  %65 = load i16, i16* @compression, align 2, !dbg !7070
  %66 = zext i16 %65 to i32, !dbg !7070
  %67 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %64, i32 259, i32 %66), !dbg !7071
  br label %81, !dbg !7071

68:                                               ; preds = %9
  %69 = load i16, i16* %22, align 2, !dbg !7072
  %70 = zext i16 %69 to i32, !dbg !7072
  %71 = icmp eq i32 %70, 6, !dbg !7075
  br i1 %71, label %72, label %75, !dbg !7076

72:                                               ; preds = %68
  store i16 7, i16* @compression, align 2, !dbg !7077
  store i32 0, i32* @jpegcolormode, align 4, !dbg !7079
  %73 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7080
  %74 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %73, i32 259, i32 7), !dbg !7081
  br label %80, !dbg !7082

75:                                               ; preds = %68
  %76 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7083
  %77 = load i16, i16* @compression, align 2, !dbg !7084
  %78 = zext i16 %77 to i32, !dbg !7084
  %79 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %76, i32 259, i32 %78), !dbg !7085
  br label %80

80:                                               ; preds = %75, %72
  br label %81

81:                                               ; preds = %80, %63
  %82 = load i16, i16* @compression, align 2, !dbg !7086
  %83 = zext i16 %82 to i32, !dbg !7086
  %84 = icmp eq i32 %83, 7, !dbg !7088
  br i1 %84, label %85, label %115, !dbg !7089

85:                                               ; preds = %81
  %86 = load i16, i16* %23, align 2, !dbg !7090
  %87 = zext i16 %86 to i32, !dbg !7090
  %88 = icmp eq i32 %87, 3, !dbg !7093
  br i1 %88, label %93, label %89, !dbg !7094

89:                                               ; preds = %85
  %90 = load i16, i16* %23, align 2, !dbg !7095
  %91 = zext i16 %90 to i32, !dbg !7095
  %92 = icmp eq i32 %91, 4, !dbg !7096
  br i1 %92, label %93, label %99, !dbg !7097

93:                                               ; preds = %89, %85
  %94 = load i16, i16* %23, align 2, !dbg !7098
  %95 = zext i16 %94 to i32, !dbg !7098
  %96 = icmp eq i32 %95, 3, !dbg !7100
  %97 = zext i1 %96 to i64, !dbg !7101
  %98 = select i1 %96, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.360, i64 0, i64 0), !dbg !7101
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.357, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.358, i64 0, i64 0), i8* %98), !dbg !7102
  store i32 -1, i32* %10, align 4, !dbg !7103
  br label %505, !dbg !7103

99:                                               ; preds = %89
  %100 = load i16, i16* %23, align 2, !dbg !7104
  %101 = zext i16 %100 to i32, !dbg !7104
  %102 = icmp eq i32 %101, 2, !dbg !7106
  br i1 %102, label %103, label %109, !dbg !7107

103:                                              ; preds = %99
  %104 = load i32, i32* @jpegcolormode, align 4, !dbg !7108
  %105 = icmp eq i32 %104, 1, !dbg !7109
  br i1 %105, label %106, label %109, !dbg !7110

106:                                              ; preds = %103
  %107 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7111
  %108 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %107, i32 262, i32 6), !dbg !7112
  br label %114, !dbg !7112

109:                                              ; preds = %103, %99
  %110 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7113
  %111 = load i16, i16* %23, align 2, !dbg !7114
  %112 = zext i16 %111 to i32, !dbg !7114
  %113 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %110, i32 262, i32 %112), !dbg !7115
  br label %114

114:                                              ; preds = %109, %106
  br label %139, !dbg !7116

115:                                              ; preds = %81
  %116 = load i16, i16* @compression, align 2, !dbg !7117
  %117 = zext i16 %116 to i32, !dbg !7117
  %118 = icmp eq i32 %117, 34676, !dbg !7120
  br i1 %118, label %123, label %119, !dbg !7121

119:                                              ; preds = %115
  %120 = load i16, i16* @compression, align 2, !dbg !7122
  %121 = zext i16 %120 to i32, !dbg !7122
  %122 = icmp eq i32 %121, 34677, !dbg !7123
  br i1 %122, label %123, label %131, !dbg !7124

123:                                              ; preds = %119, %115
  %124 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7125
  %125 = load i16, i16* %21, align 2, !dbg !7126
  %126 = zext i16 %125 to i32, !dbg !7126
  %127 = icmp eq i32 %126, 1, !dbg !7127
  %128 = zext i1 %127 to i64, !dbg !7126
  %129 = select i1 %127, i32 32844, i32 32845, !dbg !7126
  %130 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %124, i32 262, i32 %129), !dbg !7128
  br label %138, !dbg !7128

131:                                              ; preds = %119
  %132 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7129
  %133 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !7130
  %134 = getelementptr inbounds %struct.image_data, %struct.image_data* %133, i32 0, i32 8, !dbg !7131
  %135 = load i16, i16* %134, align 4, !dbg !7131
  %136 = zext i16 %135 to i32, !dbg !7130
  %137 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %132, i32 262, i32 %136), !dbg !7132
  br label %138

138:                                              ; preds = %131, %123
  br label %139

139:                                              ; preds = %138, %114
  %140 = load i16, i16* %23, align 2, !dbg !7133
  %141 = zext i16 %140 to i32, !dbg !7133
  %142 = icmp eq i32 %141, 32844, !dbg !7135
  br i1 %142, label %147, label %143, !dbg !7136

143:                                              ; preds = %139
  %144 = load i16, i16* %23, align 2, !dbg !7137
  %145 = zext i16 %144 to i32, !dbg !7137
  %146 = icmp eq i32 %145, 32845, !dbg !7138
  br i1 %146, label %147, label %156, !dbg !7139

147:                                              ; preds = %143, %139
  %148 = load i16, i16* @compression, align 2, !dbg !7140
  %149 = zext i16 %148 to i32, !dbg !7140
  %150 = icmp ne i32 %149, 34676, !dbg !7141
  br i1 %150, label %151, label %156, !dbg !7142

151:                                              ; preds = %147
  %152 = load i16, i16* @compression, align 2, !dbg !7143
  %153 = zext i16 %152 to i32, !dbg !7143
  %154 = icmp ne i32 %153, 34677, !dbg !7144
  br i1 %154, label %155, label %156, !dbg !7145

155:                                              ; preds = %151
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.357, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.361, i64 0, i64 0)), !dbg !7146
  store i32 -1, i32* %10, align 4, !dbg !7148
  br label %505, !dbg !7148

156:                                              ; preds = %151, %147, %143
  %157 = load i16, i16* @fillorder, align 2, !dbg !7149
  %158 = zext i16 %157 to i32, !dbg !7149
  %159 = icmp ne i32 %158, 0, !dbg !7151
  br i1 %159, label %160, label %165, !dbg !7152

160:                                              ; preds = %156
  %161 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7153
  %162 = load i16, i16* @fillorder, align 2, !dbg !7154
  %163 = zext i16 %162 to i32, !dbg !7154
  %164 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %161, i32 266, i32 %163), !dbg !7155
  br label %168, !dbg !7155

165:                                              ; preds = %156
  %166 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7156
  %167 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7156
  call void @cpTag(%struct.tiff* %166, %struct.tiff* %167, i16 zeroext 266, i16 zeroext 1, i32 3), !dbg !7156
  br label %168

168:                                              ; preds = %165, %160
  %169 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7157
  %170 = load %struct.image_data*, %struct.image_data** %13, align 8, !dbg !7158
  %171 = getelementptr inbounds %struct.image_data, %struct.image_data* %170, i32 0, i32 9, !dbg !7159
  %172 = load i16, i16* %171, align 2, !dbg !7159
  %173 = zext i16 %172 to i32, !dbg !7158
  %174 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %169, i32 274, i32 %173), !dbg !7160
  %175 = load i32, i32* @outtiled, align 4, !dbg !7161
  %176 = icmp eq i32 %175, -1, !dbg !7163
  br i1 %176, label %177, label %180, !dbg !7164

177:                                              ; preds = %168
  %178 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7165
  %179 = call i32 @TIFFIsTiled(%struct.tiff* %178), !dbg !7166
  store i32 %179, i32* @outtiled, align 4, !dbg !7167
  br label %180, !dbg !7168

180:                                              ; preds = %177, %168
  %181 = load i32, i32* @outtiled, align 4, !dbg !7169
  %182 = icmp ne i32 %181, 0, !dbg !7169
  br i1 %182, label %183, label %211, !dbg !7171

183:                                              ; preds = %180
  %184 = load i32, i32* @tilewidth, align 4, !dbg !7172
  %185 = icmp eq i32 %184, 0, !dbg !7175
  br i1 %185, label %186, label %189, !dbg !7176

186:                                              ; preds = %183
  %187 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7177
  %188 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %187, i32 322, i32* @tilewidth), !dbg !7178
  br label %189, !dbg !7178

189:                                              ; preds = %186, %183
  %190 = load i32, i32* @tilelength, align 4, !dbg !7179
  %191 = icmp eq i32 %190, 0, !dbg !7181
  br i1 %191, label %192, label %195, !dbg !7182

192:                                              ; preds = %189
  %193 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7183
  %194 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %193, i32 323, i32* @tilelength), !dbg !7184
  br label %195, !dbg !7184

195:                                              ; preds = %192, %189
  %196 = load i32, i32* @tilewidth, align 4, !dbg !7185
  %197 = icmp eq i32 %196, 0, !dbg !7187
  br i1 %197, label %201, label %198, !dbg !7188

198:                                              ; preds = %195
  %199 = load i32, i32* @tilelength, align 4, !dbg !7189
  %200 = icmp eq i32 %199, 0, !dbg !7190
  br i1 %200, label %201, label %203, !dbg !7191

201:                                              ; preds = %198, %195
  %202 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7192
  call void @TIFFDefaultTileSize(%struct.tiff* %202, i32* @tilewidth, i32* @tilelength), !dbg !7193
  br label %203, !dbg !7193

203:                                              ; preds = %201, %198
  %204 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7194
  call void @TIFFDefaultTileSize(%struct.tiff* %204, i32* @tilewidth, i32* @tilelength), !dbg !7195
  %205 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7196
  %206 = load i32, i32* @tilewidth, align 4, !dbg !7197
  %207 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %205, i32 322, i32 %206), !dbg !7198
  %208 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7199
  %209 = load i32, i32* @tilelength, align 4, !dbg !7200
  %210 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %208, i32 323, i32 %209), !dbg !7201
  br label %244, !dbg !7202

211:                                              ; preds = %180
  %212 = load i32, i32* @rowsperstrip, align 4, !dbg !7203
  %213 = icmp eq i32 %212, 0, !dbg !7206
  br i1 %213, label %214, label %234, !dbg !7207

214:                                              ; preds = %211
  %215 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7208
  %216 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %215, i32 278, i32* @rowsperstrip), !dbg !7211
  %217 = icmp ne i32 %216, 0, !dbg !7211
  br i1 %217, label %222, label %218, !dbg !7212

218:                                              ; preds = %214
  %219 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7213
  %220 = load i32, i32* @rowsperstrip, align 4, !dbg !7214
  %221 = call i32 @TIFFDefaultStripSize(%struct.tiff* %219, i32 %220), !dbg !7215
  store i32 %221, i32* @rowsperstrip, align 4, !dbg !7216
  br label %222, !dbg !7217

222:                                              ; preds = %218, %214
  %223 = load i16, i16* @compression, align 2, !dbg !7218
  %224 = zext i16 %223 to i32, !dbg !7218
  %225 = icmp ne i32 %224, 7, !dbg !7220
  br i1 %225, label %226, label %233, !dbg !7221

226:                                              ; preds = %222
  %227 = load i32, i32* @rowsperstrip, align 4, !dbg !7222
  %228 = load i32, i32* %16, align 4, !dbg !7225
  %229 = icmp ugt i32 %227, %228, !dbg !7226
  br i1 %229, label %230, label %232, !dbg !7227

230:                                              ; preds = %226
  %231 = load i32, i32* %16, align 4, !dbg !7228
  store i32 %231, i32* @rowsperstrip, align 4, !dbg !7229
  br label %232, !dbg !7230

232:                                              ; preds = %230, %226
  br label %233, !dbg !7231

233:                                              ; preds = %232, %222
  br label %240, !dbg !7232

234:                                              ; preds = %211
  %235 = load i32, i32* @rowsperstrip, align 4, !dbg !7233
  %236 = icmp eq i32 %235, -1, !dbg !7235
  br i1 %236, label %237, label %239, !dbg !7236

237:                                              ; preds = %234
  %238 = load i32, i32* %16, align 4, !dbg !7237
  store i32 %238, i32* @rowsperstrip, align 4, !dbg !7238
  br label %239, !dbg !7239

239:                                              ; preds = %237, %234
  br label %240

240:                                              ; preds = %239, %233
  %241 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7240
  %242 = load i32, i32* @rowsperstrip, align 4, !dbg !7241
  %243 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %241, i32 278, i32 %242), !dbg !7242
  br label %244

244:                                              ; preds = %240, %203
  %245 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7243
  %246 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %245, i32 284, i16* %24), !dbg !7244
  %247 = load i16, i16* @config, align 2, !dbg !7245
  %248 = zext i16 %247 to i32, !dbg !7245
  %249 = icmp ne i32 %248, 65535, !dbg !7247
  br i1 %249, label %250, label %255, !dbg !7248

250:                                              ; preds = %244
  %251 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7249
  %252 = load i16, i16* @config, align 2, !dbg !7250
  %253 = zext i16 %252 to i32, !dbg !7250
  %254 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %251, i32 284, i32 %253), !dbg !7251
  br label %265, !dbg !7251

255:                                              ; preds = %244
  %256 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7252
  %257 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %256, i32 284, i16* @config), !dbg !7252
  %258 = icmp ne i32 %257, 0, !dbg !7252
  br i1 %258, label %259, label %264, !dbg !7254

259:                                              ; preds = %255
  %260 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7252
  %261 = load i16, i16* @config, align 2, !dbg !7252
  %262 = zext i16 %261 to i32, !dbg !7252
  %263 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %260, i32 284, i32 %262), !dbg !7252
  br label %264, !dbg !7252

264:                                              ; preds = %259, %255
  br label %265

265:                                              ; preds = %264, %250
  %266 = load i16, i16* %21, align 2, !dbg !7255
  %267 = zext i16 %266 to i32, !dbg !7255
  %268 = icmp sle i32 %267, 4, !dbg !7257
  br i1 %268, label %269, label %272, !dbg !7258

269:                                              ; preds = %265
  %270 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7259
  %271 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7259
  call void @cpTag(%struct.tiff* %270, %struct.tiff* %271, i16 zeroext 301, i16 zeroext 4, i32 3), !dbg !7259
  br label %272, !dbg !7259

272:                                              ; preds = %269, %265
  %273 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7260
  %274 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7260
  call void @cpTag(%struct.tiff* %273, %struct.tiff* %274, i16 zeroext 320, i16 zeroext 4, i32 3), !dbg !7260
  %275 = load i16, i16* @compression, align 2, !dbg !7261
  %276 = zext i16 %275 to i32, !dbg !7261
  switch i32 %276, label %352 [
    i32 7, label %277
    i32 5, label %295
    i32 8, label %295
    i32 32946, label %295
    i32 3, label %315
    i32 4, label %315
  ], !dbg !7262

277:                                              ; preds = %272
  %278 = load i16, i16* %20, align 2, !dbg !7263
  %279 = zext i16 %278 to i32, !dbg !7263
  %280 = srem i32 %279, 8, !dbg !7266
  %281 = icmp eq i32 %280, 0, !dbg !7267
  br i1 %281, label %287, label %282, !dbg !7268

282:                                              ; preds = %277
  %283 = load i16, i16* %20, align 2, !dbg !7269
  %284 = zext i16 %283 to i32, !dbg !7269
  %285 = srem i32 %284, 12, !dbg !7270
  %286 = icmp eq i32 %285, 0, !dbg !7271
  br i1 %286, label %287, label %293, !dbg !7272

287:                                              ; preds = %282, %277
  %288 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7273
  %289 = load i32, i32* @quality, align 4, !dbg !7275
  %290 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %288, i32 65537, i32 %289), !dbg !7276
  %291 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7277
  %292 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %291, i32 65538, i32 1), !dbg !7278
  br label %294, !dbg !7279

293:                                              ; preds = %282
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.357, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.362, i64 0, i64 0)), !dbg !7280
  store i32 -1, i32* %10, align 4, !dbg !7282
  br label %505, !dbg !7282

294:                                              ; preds = %287
  br label %352, !dbg !7283

295:                                              ; preds = %272, %272, %272
  %296 = load i16, i16* @predictor, align 2, !dbg !7284
  %297 = zext i16 %296 to i32, !dbg !7284
  %298 = icmp ne i32 %297, 65535, !dbg !7286
  br i1 %298, label %299, label %304, !dbg !7287

299:                                              ; preds = %295
  %300 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7288
  %301 = load i16, i16* @predictor, align 2, !dbg !7289
  %302 = zext i16 %301 to i32, !dbg !7289
  %303 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %300, i32 317, i32 %302), !dbg !7290
  br label %314, !dbg !7290

304:                                              ; preds = %295
  %305 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7291
  %306 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %305, i32 317, i16* @predictor), !dbg !7291
  %307 = icmp ne i32 %306, 0, !dbg !7291
  br i1 %307, label %308, label %313, !dbg !7293

308:                                              ; preds = %304
  %309 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7291
  %310 = load i16, i16* @predictor, align 2, !dbg !7291
  %311 = zext i16 %310 to i32, !dbg !7291
  %312 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %309, i32 317, i32 %311), !dbg !7291
  br label %313, !dbg !7291

313:                                              ; preds = %308, %304
  br label %314

314:                                              ; preds = %313, %299
  br label %352, !dbg !7294

315:                                              ; preds = %272, %272
  %316 = load i16, i16* @compression, align 2, !dbg !7295
  %317 = zext i16 %316 to i32, !dbg !7295
  %318 = icmp eq i32 %317, 3, !dbg !7297
  br i1 %318, label %319, label %336, !dbg !7298

319:                                              ; preds = %315
  %320 = load i32, i32* @g3opts, align 4, !dbg !7299
  %321 = icmp ne i32 %320, -1, !dbg !7302
  br i1 %321, label %322, label %326, !dbg !7303

322:                                              ; preds = %319
  %323 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7304
  %324 = load i32, i32* @g3opts, align 4, !dbg !7305
  %325 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %323, i32 292, i32 %324), !dbg !7306
  br label %335, !dbg !7306

326:                                              ; preds = %319
  %327 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7307
  %328 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %327, i32 292, i32* @g3opts), !dbg !7307
  %329 = icmp ne i32 %328, 0, !dbg !7307
  br i1 %329, label %330, label %334, !dbg !7309

330:                                              ; preds = %326
  %331 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7307
  %332 = load i32, i32* @g3opts, align 4, !dbg !7307
  %333 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %331, i32 292, i32 %332), !dbg !7307
  br label %334, !dbg !7307

334:                                              ; preds = %330, %326
  br label %335

335:                                              ; preds = %334, %322
  br label %339, !dbg !7310

336:                                              ; preds = %315
  %337 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7311
  %338 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7311
  call void @cpTag(%struct.tiff* %337, %struct.tiff* %338, i16 zeroext 293, i16 zeroext 1, i32 4), !dbg !7311
  br label %339

339:                                              ; preds = %336, %335
  %340 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7312
  %341 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7312
  call void @cpTag(%struct.tiff* %340, %struct.tiff* %341, i16 zeroext 326, i16 zeroext 1, i32 4), !dbg !7312
  %342 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7313
  %343 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7313
  call void @cpTag(%struct.tiff* %342, %struct.tiff* %343, i16 zeroext 327, i16 zeroext 1, i32 4), !dbg !7313
  %344 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7314
  %345 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7314
  call void @cpTag(%struct.tiff* %344, %struct.tiff* %345, i16 zeroext 328, i16 zeroext 1, i32 4), !dbg !7314
  %346 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7315
  %347 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7315
  call void @cpTag(%struct.tiff* %346, %struct.tiff* %347, i16 zeroext -30628, i16 zeroext 1, i32 4), !dbg !7315
  %348 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7316
  %349 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7316
  call void @cpTag(%struct.tiff* %348, %struct.tiff* %349, i16 zeroext -30626, i16 zeroext 1, i32 4), !dbg !7316
  %350 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7317
  %351 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7317
  call void @cpTag(%struct.tiff* %350, %struct.tiff* %351, i16 zeroext -30627, i16 zeroext 1, i32 2), !dbg !7317
  br label %352, !dbg !7318

352:                                              ; preds = %339, %314, %294, %272
  call void @llvm.dbg.declare(metadata i32* %26, metadata !7319, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata i8*** %27, metadata !7322, metadata !DIExpression()), !dbg !7323
  %353 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7324
  %354 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %353, i32 34675, i32* %26, i8*** %27), !dbg !7326
  %355 = icmp ne i32 %354, 0, !dbg !7326
  br i1 %355, label %356, label %361, !dbg !7327

356:                                              ; preds = %352
  %357 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7328
  %358 = load i32, i32* %26, align 4, !dbg !7329
  %359 = load i8**, i8*** %27, align 8, !dbg !7330
  %360 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %357, i32 34675, i32 %358, i8** %359), !dbg !7331
  br label %361, !dbg !7331

361:                                              ; preds = %356, %352
  call void @llvm.dbg.declare(metadata i16* %28, metadata !7332, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata i8** %29, metadata !7335, metadata !DIExpression()), !dbg !7336
  %362 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7337
  %363 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %362, i32 334, i16* %28), !dbg !7339
  %364 = icmp ne i32 %363, 0, !dbg !7339
  br i1 %364, label %365, label %407, !dbg !7340

365:                                              ; preds = %361
  %366 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7341
  %367 = load i16, i16* %28, align 2, !dbg !7343
  %368 = zext i16 %367 to i32, !dbg !7343
  %369 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %366, i32 334, i32 %368), !dbg !7344
  %370 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7345
  %371 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %370, i32 333, i8** %29), !dbg !7347
  %372 = icmp ne i32 %371, 0, !dbg !7347
  br i1 %372, label %373, label %406, !dbg !7348

373:                                              ; preds = %365
  call void @llvm.dbg.declare(metadata i32* %30, metadata !7349, metadata !DIExpression()), !dbg !7351
  %374 = load i8*, i8** %29, align 8, !dbg !7352
  %375 = call i64 @strlen(i8* %374) #10, !dbg !7353
  %376 = add i64 %375, 1, !dbg !7354
  %377 = trunc i64 %376 to i32, !dbg !7353
  store i32 %377, i32* %30, align 4, !dbg !7351
  call void @llvm.dbg.declare(metadata i8** %31, metadata !7355, metadata !DIExpression()), !dbg !7356
  %378 = load i8*, i8** %29, align 8, !dbg !7357
  store i8* %378, i8** %31, align 8, !dbg !7356
  br label %379, !dbg !7358

379:                                              ; preds = %398, %373
  %380 = load i16, i16* %28, align 2, !dbg !7359
  %381 = zext i16 %380 to i32, !dbg !7359
  %382 = icmp sgt i32 %381, 1, !dbg !7360
  br i1 %382, label %383, label %401, !dbg !7358

383:                                              ; preds = %379
  %384 = load i8*, i8** %31, align 8, !dbg !7361
  %385 = call i8* @strchr(i8* %384, i32 0) #10, !dbg !7363
  store i8* %385, i8** %31, align 8, !dbg !7364
  %386 = load i8*, i8** %31, align 8, !dbg !7365
  %387 = icmp ne i8* %386, null, !dbg !7365
  br i1 %387, label %388, label %398, !dbg !7367

388:                                              ; preds = %383
  %389 = load i8*, i8** %31, align 8, !dbg !7368
  %390 = getelementptr inbounds i8, i8* %389, i32 1, !dbg !7368
  store i8* %390, i8** %31, align 8, !dbg !7368
  %391 = load i8*, i8** %31, align 8, !dbg !7370
  %392 = call i64 @strlen(i8* %391) #10, !dbg !7371
  %393 = add i64 %392, 1, !dbg !7372
  %394 = load i32, i32* %30, align 4, !dbg !7373
  %395 = sext i32 %394 to i64, !dbg !7373
  %396 = add i64 %395, %393, !dbg !7373
  %397 = trunc i64 %396 to i32, !dbg !7373
  store i32 %397, i32* %30, align 4, !dbg !7373
  br label %398, !dbg !7374

398:                                              ; preds = %388, %383
  %399 = load i16, i16* %28, align 2, !dbg !7375
  %400 = add i16 %399, -1, !dbg !7375
  store i16 %400, i16* %28, align 2, !dbg !7375
  br label %379, !dbg !7358, !llvm.loop !7376

401:                                              ; preds = %379
  %402 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7378
  %403 = load i32, i32* %30, align 4, !dbg !7379
  %404 = load i8*, i8** %29, align 8, !dbg !7380
  %405 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %402, i32 333, i32 %403, i8* %404), !dbg !7381
  br label %406, !dbg !7382

406:                                              ; preds = %401, %365
  br label %407, !dbg !7383

407:                                              ; preds = %406, %361
  call void @llvm.dbg.declare(metadata i16* %32, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.declare(metadata i16* %33, metadata !7387, metadata !DIExpression()), !dbg !7388
  %408 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7389
  %409 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %408, i32 297, i16* %32, i16* %33), !dbg !7391
  %410 = icmp ne i32 %409, 0, !dbg !7391
  br i1 %410, label %411, label %427, !dbg !7392

411:                                              ; preds = %407
  %412 = load i32, i32* @pageNum, align 4, !dbg !7393
  %413 = icmp slt i32 %412, 0, !dbg !7396
  br i1 %413, label %414, label %421, !dbg !7397

414:                                              ; preds = %411
  %415 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7398
  %416 = load i16, i16* %32, align 2, !dbg !7399
  %417 = zext i16 %416 to i32, !dbg !7399
  %418 = load i16, i16* %33, align 2, !dbg !7400
  %419 = zext i16 %418 to i32, !dbg !7400
  %420 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %415, i32 297, i32 %417, i32 %419), !dbg !7401
  br label %426, !dbg !7401

421:                                              ; preds = %411
  %422 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7402
  %423 = load i32, i32* @pageNum, align 4, !dbg !7403
  %424 = add nsw i32 %423, 1, !dbg !7403
  store i32 %424, i32* @pageNum, align 4, !dbg !7403
  %425 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %422, i32 297, i32 %423, i32 0), !dbg !7404
  br label %426

426:                                              ; preds = %421, %414
  br label %427, !dbg !7405

427:                                              ; preds = %426, %407
  store %struct.cpTag* getelementptr inbounds ([33 x %struct.cpTag], [33 x %struct.cpTag]* @tags, i64 0, i64 0), %struct.cpTag** %25, align 8, !dbg !7406
  br label %428, !dbg !7408

428:                                              ; preds = %443, %427
  %429 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !7409
  %430 = icmp ult %struct.cpTag* %429, getelementptr inbounds ([33 x %struct.cpTag], [33 x %struct.cpTag]* @tags, i64 1, i64 0), !dbg !7411
  br i1 %430, label %431, label %446, !dbg !7412

431:                                              ; preds = %428
  %432 = load %struct.tiff*, %struct.tiff** %11, align 8, !dbg !7413
  %433 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7413
  %434 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !7413
  %435 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %434, i32 0, i32 0, !dbg !7413
  %436 = load i16, i16* %435, align 4, !dbg !7413
  %437 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !7413
  %438 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %437, i32 0, i32 1, !dbg !7413
  %439 = load i16, i16* %438, align 2, !dbg !7413
  %440 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !7413
  %441 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %440, i32 0, i32 2, !dbg !7413
  %442 = load i32, i32* %441, align 4, !dbg !7413
  call void @cpTag(%struct.tiff* %432, %struct.tiff* %433, i16 zeroext %436, i16 zeroext %439, i32 %442), !dbg !7413
  br label %443, !dbg !7413

443:                                              ; preds = %431
  %444 = load %struct.cpTag*, %struct.cpTag** %25, align 8, !dbg !7414
  %445 = getelementptr inbounds %struct.cpTag, %struct.cpTag* %444, i32 1, !dbg !7414
  store %struct.cpTag* %445, %struct.cpTag** %25, align 8, !dbg !7414
  br label %428, !dbg !7415, !llvm.loop !7416

446:                                              ; preds = %428
  %447 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7418
  %448 = load double, double* %17, align 8, !dbg !7419
  %449 = fptrunc double %448 to float, !dbg !7420
  %450 = fpext float %449 to double, !dbg !7420
  %451 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %447, i32 282, double %450), !dbg !7421
  %452 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7422
  %453 = load double, double* %18, align 8, !dbg !7423
  %454 = fptrunc double %453 to float, !dbg !7424
  %455 = fpext float %454 to double, !dbg !7424
  %456 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %452, i32 283, double %455), !dbg !7425
  %457 = load i32, i32* @outtiled, align 4, !dbg !7426
  %458 = icmp ne i32 %457, 0, !dbg !7426
  br i1 %458, label %459, label %480, !dbg !7428

459:                                              ; preds = %446
  %460 = load i16, i16* @config, align 2, !dbg !7429
  %461 = zext i16 %460 to i32, !dbg !7429
  %462 = icmp eq i32 %461, 1, !dbg !7432
  br i1 %462, label %463, label %471, !dbg !7433

463:                                              ; preds = %459
  %464 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7434
  %465 = load i8*, i8** %19, align 8, !dbg !7435
  %466 = load i32, i32* %16, align 4, !dbg !7436
  %467 = load i32, i32* %15, align 4, !dbg !7437
  %468 = load i16, i16* %21, align 2, !dbg !7438
  %469 = load %struct.dump_opts*, %struct.dump_opts** %14, align 8, !dbg !7439
  %470 = call i32 @writeBufferToContigTiles(%struct.tiff* %464, i8* %465, i32 %466, i32 %467, i16 zeroext %468, %struct.dump_opts* %469), !dbg !7440
  br label %479, !dbg !7440

471:                                              ; preds = %459
  %472 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7441
  %473 = load i8*, i8** %19, align 8, !dbg !7442
  %474 = load i32, i32* %16, align 4, !dbg !7443
  %475 = load i32, i32* %15, align 4, !dbg !7444
  %476 = load i16, i16* %21, align 2, !dbg !7445
  %477 = load %struct.dump_opts*, %struct.dump_opts** %14, align 8, !dbg !7446
  %478 = call i32 @writeBufferToSeparateTiles(%struct.tiff* %472, i8* %473, i32 %474, i32 %475, i16 zeroext %476, %struct.dump_opts* %477), !dbg !7447
  br label %479

479:                                              ; preds = %471, %463
  br label %498, !dbg !7448

480:                                              ; preds = %446
  %481 = load i16, i16* @config, align 2, !dbg !7449
  %482 = zext i16 %481 to i32, !dbg !7449
  %483 = icmp eq i32 %482, 1, !dbg !7452
  br i1 %483, label %484, label %489, !dbg !7453

484:                                              ; preds = %480
  %485 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7454
  %486 = load i8*, i8** %19, align 8, !dbg !7455
  %487 = load i32, i32* %16, align 4, !dbg !7456
  %488 = call i32 @writeBufferToContigStrips(%struct.tiff* %485, i8* %486, i32 %487), !dbg !7457
  br label %497, !dbg !7457

489:                                              ; preds = %480
  %490 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7458
  %491 = load i8*, i8** %19, align 8, !dbg !7459
  %492 = load i32, i32* %16, align 4, !dbg !7460
  %493 = load i32, i32* %15, align 4, !dbg !7461
  %494 = load i16, i16* %21, align 2, !dbg !7462
  %495 = load %struct.dump_opts*, %struct.dump_opts** %14, align 8, !dbg !7463
  %496 = call i32 @writeBufferToSeparateStrips(%struct.tiff* %490, i8* %491, i32 %492, i32 %493, i16 zeroext %494, %struct.dump_opts* %495), !dbg !7464
  br label %497

497:                                              ; preds = %489, %484
  br label %498

498:                                              ; preds = %497, %479
  %499 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7465
  %500 = call i32 @TIFFWriteDirectory(%struct.tiff* %499), !dbg !7467
  %501 = icmp ne i32 %500, 0, !dbg !7467
  br i1 %501, label %504, label %502, !dbg !7468

502:                                              ; preds = %498
  %503 = load %struct.tiff*, %struct.tiff** %12, align 8, !dbg !7469
  call void @TIFFClose(%struct.tiff* %503), !dbg !7471
  store i32 -1, i32* %10, align 4, !dbg !7472
  br label %505, !dbg !7472

504:                                              ; preds = %498
  store i32 0, i32* %10, align 4, !dbg !7473
  br label %505, !dbg !7473

505:                                              ; preds = %504, %502, %293, %155, %93
  %506 = load i32, i32* %10, align 4, !dbg !7474
  ret i32 %506, !dbg !7474
}

declare i32 @TIFFSetField(%struct.tiff*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cpTag(%struct.tiff*, %struct.tiff*, i16 zeroext, i16 zeroext, i32) #0 !dbg !7475 {
  %6 = alloca %struct.tiff*, align 8
  %7 = alloca %struct.tiff*, align 8
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16*, align 8
  %15 = alloca i16*, align 8
  %16 = alloca i16*, align 8
  %17 = alloca i16*, align 8
  %18 = alloca i16, align 2
  %19 = alloca i16*, align 8
  %20 = alloca i32, align 4
  %21 = alloca float, align 4
  %22 = alloca float*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca double, align 8
  %25 = alloca double*, align 8
  store %struct.tiff* %0, %struct.tiff** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %6, metadata !7478, metadata !DIExpression()), !dbg !7479
  store %struct.tiff* %1, %struct.tiff** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %7, metadata !7480, metadata !DIExpression()), !dbg !7481
  store i16 %2, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !7482, metadata !DIExpression()), !dbg !7483
  store i16 %3, i16* %9, align 2
  call void @llvm.dbg.declare(metadata i16* %9, metadata !7484, metadata !DIExpression()), !dbg !7485
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7486, metadata !DIExpression()), !dbg !7487
  %26 = load i32, i32* %10, align 4, !dbg !7488
  switch i32 %26, label %207 [
    i32 3, label %27
    i32 4, label %108
    i32 5, label %121
    i32 2, label %158
    i32 12, label %171
  ], !dbg !7489

27:                                               ; preds = %5
  %28 = load i16, i16* %9, align 2, !dbg !7490
  %29 = zext i16 %28 to i32, !dbg !7490
  %30 = icmp eq i32 %29, 1, !dbg !7493
  br i1 %30, label %31, label %45, !dbg !7494

31:                                               ; preds = %27
  call void @llvm.dbg.declare(metadata i16* %11, metadata !7495, metadata !DIExpression()), !dbg !7497
  %32 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7498
  %33 = load i16, i16* %8, align 2, !dbg !7498
  %34 = zext i16 %33 to i32, !dbg !7498
  %35 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %32, i32 %34, i16* %11), !dbg !7498
  %36 = icmp ne i32 %35, 0, !dbg !7498
  br i1 %36, label %37, label %44, !dbg !7500

37:                                               ; preds = %31
  %38 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7498
  %39 = load i16, i16* %8, align 2, !dbg !7498
  %40 = zext i16 %39 to i32, !dbg !7498
  %41 = load i16, i16* %11, align 2, !dbg !7498
  %42 = zext i16 %41 to i32, !dbg !7498
  %43 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %38, i32 %40, i32 %42), !dbg !7498
  br label %44, !dbg !7498

44:                                               ; preds = %37, %31
  br label %107, !dbg !7501

45:                                               ; preds = %27
  %46 = load i16, i16* %9, align 2, !dbg !7502
  %47 = zext i16 %46 to i32, !dbg !7502
  %48 = icmp eq i32 %47, 2, !dbg !7504
  br i1 %48, label %49, label %65, !dbg !7505

49:                                               ; preds = %45
  call void @llvm.dbg.declare(metadata i16* %12, metadata !7506, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata i16* %13, metadata !7509, metadata !DIExpression()), !dbg !7510
  %50 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7511
  %51 = load i16, i16* %8, align 2, !dbg !7511
  %52 = zext i16 %51 to i32, !dbg !7511
  %53 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %50, i32 %52, i16* %12, i16* %13), !dbg !7511
  %54 = icmp ne i32 %53, 0, !dbg !7511
  br i1 %54, label %55, label %64, !dbg !7513

55:                                               ; preds = %49
  %56 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7511
  %57 = load i16, i16* %8, align 2, !dbg !7511
  %58 = zext i16 %57 to i32, !dbg !7511
  %59 = load i16, i16* %12, align 2, !dbg !7511
  %60 = zext i16 %59 to i32, !dbg !7511
  %61 = load i16, i16* %13, align 2, !dbg !7511
  %62 = zext i16 %61 to i32, !dbg !7511
  %63 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %56, i32 %58, i32 %60, i32 %62), !dbg !7511
  br label %64, !dbg !7511

64:                                               ; preds = %55, %49
  br label %106, !dbg !7514

65:                                               ; preds = %45
  %66 = load i16, i16* %9, align 2, !dbg !7515
  %67 = zext i16 %66 to i32, !dbg !7515
  %68 = icmp eq i32 %67, 4, !dbg !7517
  br i1 %68, label %69, label %85, !dbg !7518

69:                                               ; preds = %65
  call void @llvm.dbg.declare(metadata i16** %14, metadata !7519, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.declare(metadata i16** %15, metadata !7522, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.declare(metadata i16** %16, metadata !7524, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.declare(metadata i16** %17, metadata !7526, metadata !DIExpression()), !dbg !7527
  %70 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7528
  %71 = load i16, i16* %8, align 2, !dbg !7528
  %72 = zext i16 %71 to i32, !dbg !7528
  %73 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %70, i32 %72, i16** %14, i16** %15, i16** %16, i16** %17), !dbg !7528
  %74 = icmp ne i32 %73, 0, !dbg !7528
  br i1 %74, label %75, label %84, !dbg !7530

75:                                               ; preds = %69
  %76 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7528
  %77 = load i16, i16* %8, align 2, !dbg !7528
  %78 = zext i16 %77 to i32, !dbg !7528
  %79 = load i16*, i16** %14, align 8, !dbg !7528
  %80 = load i16*, i16** %15, align 8, !dbg !7528
  %81 = load i16*, i16** %16, align 8, !dbg !7528
  %82 = load i16*, i16** %17, align 8, !dbg !7528
  %83 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %76, i32 %78, i16* %79, i16* %80, i16* %81, i16* %82), !dbg !7528
  br label %84, !dbg !7528

84:                                               ; preds = %75, %69
  br label %105, !dbg !7531

85:                                               ; preds = %65
  %86 = load i16, i16* %9, align 2, !dbg !7532
  %87 = zext i16 %86 to i32, !dbg !7532
  %88 = icmp eq i32 %87, 65535, !dbg !7534
  br i1 %88, label %89, label %104, !dbg !7535

89:                                               ; preds = %85
  call void @llvm.dbg.declare(metadata i16* %18, metadata !7536, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.declare(metadata i16** %19, metadata !7539, metadata !DIExpression()), !dbg !7540
  %90 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7541
  %91 = load i16, i16* %8, align 2, !dbg !7541
  %92 = zext i16 %91 to i32, !dbg !7541
  %93 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %90, i32 %92, i16* %18, i16** %19), !dbg !7541
  %94 = icmp ne i32 %93, 0, !dbg !7541
  br i1 %94, label %95, label %103, !dbg !7543

95:                                               ; preds = %89
  %96 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7541
  %97 = load i16, i16* %8, align 2, !dbg !7541
  %98 = zext i16 %97 to i32, !dbg !7541
  %99 = load i16, i16* %18, align 2, !dbg !7541
  %100 = zext i16 %99 to i32, !dbg !7541
  %101 = load i16*, i16** %19, align 8, !dbg !7541
  %102 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %96, i32 %98, i32 %100, i16* %101), !dbg !7541
  br label %103, !dbg !7541

103:                                              ; preds = %95, %89
  br label %104, !dbg !7544

104:                                              ; preds = %103, %85
  br label %105

105:                                              ; preds = %104, %84
  br label %106

106:                                              ; preds = %105, %64
  br label %107

107:                                              ; preds = %106, %44
  br label %213, !dbg !7545

108:                                              ; preds = %5
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7546, metadata !DIExpression()), !dbg !7548
  %109 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7549
  %110 = load i16, i16* %8, align 2, !dbg !7549
  %111 = zext i16 %110 to i32, !dbg !7549
  %112 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %109, i32 %111, i32* %20), !dbg !7549
  %113 = icmp ne i32 %112, 0, !dbg !7549
  br i1 %113, label %114, label %120, !dbg !7551

114:                                              ; preds = %108
  %115 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7549
  %116 = load i16, i16* %8, align 2, !dbg !7549
  %117 = zext i16 %116 to i32, !dbg !7549
  %118 = load i32, i32* %20, align 4, !dbg !7549
  %119 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %115, i32 %117, i32 %118), !dbg !7549
  br label %120, !dbg !7549

120:                                              ; preds = %114, %108
  br label %213, !dbg !7552

121:                                              ; preds = %5
  %122 = load i16, i16* %9, align 2, !dbg !7553
  %123 = zext i16 %122 to i32, !dbg !7553
  %124 = icmp eq i32 %123, 1, !dbg !7555
  br i1 %124, label %125, label %139, !dbg !7556

125:                                              ; preds = %121
  call void @llvm.dbg.declare(metadata float* %21, metadata !7557, metadata !DIExpression()), !dbg !7559
  %126 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7560
  %127 = load i16, i16* %8, align 2, !dbg !7560
  %128 = zext i16 %127 to i32, !dbg !7560
  %129 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %126, i32 %128, float* %21), !dbg !7560
  %130 = icmp ne i32 %129, 0, !dbg !7560
  br i1 %130, label %131, label %138, !dbg !7562

131:                                              ; preds = %125
  %132 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7560
  %133 = load i16, i16* %8, align 2, !dbg !7560
  %134 = zext i16 %133 to i32, !dbg !7560
  %135 = load float, float* %21, align 4, !dbg !7560
  %136 = fpext float %135 to double, !dbg !7560
  %137 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %132, i32 %134, double %136), !dbg !7560
  br label %138, !dbg !7560

138:                                              ; preds = %131, %125
  br label %157, !dbg !7563

139:                                              ; preds = %121
  %140 = load i16, i16* %9, align 2, !dbg !7564
  %141 = zext i16 %140 to i32, !dbg !7564
  %142 = icmp eq i32 %141, 65535, !dbg !7566
  br i1 %142, label %143, label %156, !dbg !7567

143:                                              ; preds = %139
  call void @llvm.dbg.declare(metadata float** %22, metadata !7568, metadata !DIExpression()), !dbg !7570
  %144 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7571
  %145 = load i16, i16* %8, align 2, !dbg !7571
  %146 = zext i16 %145 to i32, !dbg !7571
  %147 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %144, i32 %146, float** %22), !dbg !7571
  %148 = icmp ne i32 %147, 0, !dbg !7571
  br i1 %148, label %149, label %155, !dbg !7573

149:                                              ; preds = %143
  %150 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7571
  %151 = load i16, i16* %8, align 2, !dbg !7571
  %152 = zext i16 %151 to i32, !dbg !7571
  %153 = load float*, float** %22, align 8, !dbg !7571
  %154 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %150, i32 %152, float* %153), !dbg !7571
  br label %155, !dbg !7571

155:                                              ; preds = %149, %143
  br label %156, !dbg !7574

156:                                              ; preds = %155, %139
  br label %157

157:                                              ; preds = %156, %138
  br label %213, !dbg !7575

158:                                              ; preds = %5
  call void @llvm.dbg.declare(metadata i8** %23, metadata !7576, metadata !DIExpression()), !dbg !7578
  %159 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7579
  %160 = load i16, i16* %8, align 2, !dbg !7579
  %161 = zext i16 %160 to i32, !dbg !7579
  %162 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %159, i32 %161, i8** %23), !dbg !7579
  %163 = icmp ne i32 %162, 0, !dbg !7579
  br i1 %163, label %164, label %170, !dbg !7581

164:                                              ; preds = %158
  %165 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7579
  %166 = load i16, i16* %8, align 2, !dbg !7579
  %167 = zext i16 %166 to i32, !dbg !7579
  %168 = load i8*, i8** %23, align 8, !dbg !7579
  %169 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %165, i32 %167, i8* %168), !dbg !7579
  br label %170, !dbg !7579

170:                                              ; preds = %164, %158
  br label %213, !dbg !7582

171:                                              ; preds = %5
  %172 = load i16, i16* %9, align 2, !dbg !7583
  %173 = zext i16 %172 to i32, !dbg !7583
  %174 = icmp eq i32 %173, 1, !dbg !7585
  br i1 %174, label %175, label %188, !dbg !7586

175:                                              ; preds = %171
  call void @llvm.dbg.declare(metadata double* %24, metadata !7587, metadata !DIExpression()), !dbg !7589
  %176 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7590
  %177 = load i16, i16* %8, align 2, !dbg !7590
  %178 = zext i16 %177 to i32, !dbg !7590
  %179 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %176, i32 %178, double* %24), !dbg !7590
  %180 = icmp ne i32 %179, 0, !dbg !7590
  br i1 %180, label %181, label %187, !dbg !7592

181:                                              ; preds = %175
  %182 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7590
  %183 = load i16, i16* %8, align 2, !dbg !7590
  %184 = zext i16 %183 to i32, !dbg !7590
  %185 = load double, double* %24, align 8, !dbg !7590
  %186 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %182, i32 %184, double %185), !dbg !7590
  br label %187, !dbg !7590

187:                                              ; preds = %181, %175
  br label %206, !dbg !7593

188:                                              ; preds = %171
  %189 = load i16, i16* %9, align 2, !dbg !7594
  %190 = zext i16 %189 to i32, !dbg !7594
  %191 = icmp eq i32 %190, 65535, !dbg !7596
  br i1 %191, label %192, label %205, !dbg !7597

192:                                              ; preds = %188
  call void @llvm.dbg.declare(metadata double** %25, metadata !7598, metadata !DIExpression()), !dbg !7600
  %193 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7601
  %194 = load i16, i16* %8, align 2, !dbg !7601
  %195 = zext i16 %194 to i32, !dbg !7601
  %196 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %193, i32 %195, double** %25), !dbg !7601
  %197 = icmp ne i32 %196, 0, !dbg !7601
  br i1 %197, label %198, label %204, !dbg !7603

198:                                              ; preds = %192
  %199 = load %struct.tiff*, %struct.tiff** %7, align 8, !dbg !7601
  %200 = load i16, i16* %8, align 2, !dbg !7601
  %201 = zext i16 %200 to i32, !dbg !7601
  %202 = load double*, double** %25, align 8, !dbg !7601
  %203 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %199, i32 %201, double* %202), !dbg !7601
  br label %204, !dbg !7601

204:                                              ; preds = %198, %192
  br label %205, !dbg !7604

205:                                              ; preds = %204, %188
  br label %206

206:                                              ; preds = %205, %187
  br label %213, !dbg !7605

207:                                              ; preds = %5
  %208 = load %struct.tiff*, %struct.tiff** %6, align 8, !dbg !7606
  %209 = call i8* @TIFFFileName(%struct.tiff* %208), !dbg !7607
  %210 = load i16, i16* %8, align 2, !dbg !7608
  %211 = zext i16 %210 to i32, !dbg !7608
  %212 = load i32, i32* %10, align 4, !dbg !7609
  call void (i8*, i8*, ...) @TIFFError(i8* %209, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.363, i64 0, i64 0), i32 %211, i32 %212), !dbg !7610
  br label %213, !dbg !7611

213:                                              ; preds = %207, %206, %170, %157, %120, %107
  ret void, !dbg !7612
}

declare i32 @TIFFIsTiled(%struct.tiff*) #3

declare i32 @TIFFGetField(%struct.tiff*, i32, ...) #3

declare void @TIFFDefaultTileSize(%struct.tiff*, i32*, i32*) #3

declare i32 @TIFFDefaultStripSize(%struct.tiff*, i32) #3

declare i32 @TIFFGetFieldDefaulted(%struct.tiff*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeBufferToContigTiles(%struct.tiff*, i8*, i32, i32, i16 zeroext, %struct.dump_opts*) #0 !dbg !7613 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.tiff*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  %13 = alloca %struct.dump_opts*, align 8
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %8, metadata !7617, metadata !DIExpression()), !dbg !7618
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7619, metadata !DIExpression()), !dbg !7620
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7621, metadata !DIExpression()), !dbg !7622
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7623, metadata !DIExpression()), !dbg !7624
  store i16 %4, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !7625, metadata !DIExpression()), !dbg !7626
  store %struct.dump_opts* %5, %struct.dump_opts** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %13, metadata !7627, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.declare(metadata i16* %14, metadata !7629, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7631, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7633, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.declare(metadata i32* %17, metadata !7635, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7637, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.declare(metadata i32* %19, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7641, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.declare(metadata i32* %21, metadata !7643, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.declare(metadata i32* %22, metadata !7645, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.declare(metadata i32* %23, metadata !7647, metadata !DIExpression()), !dbg !7648
  %28 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7649
  %29 = call i64 @TIFFTileRowSize(%struct.tiff* %28), !dbg !7650
  %30 = trunc i64 %29 to i32, !dbg !7650
  store i32 %30, i32* %23, align 4, !dbg !7648
  call void @llvm.dbg.declare(metadata i8** %24, metadata !7651, metadata !DIExpression()), !dbg !7652
  %31 = load i8*, i8** %9, align 8, !dbg !7653
  store i8* %31, i8** %24, align 8, !dbg !7652
  call void @llvm.dbg.declare(metadata i64* %25, metadata !7654, metadata !DIExpression()), !dbg !7655
  store i64 0, i64* %25, align 8, !dbg !7655
  call void @llvm.dbg.declare(metadata i64* %26, metadata !7656, metadata !DIExpression()), !dbg !7657
  %32 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7658
  %33 = call i64 @TIFFTileSize(%struct.tiff* %32), !dbg !7659
  store i64 %33, i64* %26, align 8, !dbg !7657
  call void @llvm.dbg.declare(metadata i8** %27, metadata !7660, metadata !DIExpression()), !dbg !7661
  store i8* null, i8** %27, align 8, !dbg !7661
  %34 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7662
  %35 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %34, i32 323, i32* %15), !dbg !7663
  %36 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7664
  %37 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %36, i32 322, i32* %16), !dbg !7665
  %38 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7666
  %39 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %38, i32 258, i16* %14), !dbg !7667
  %40 = load i64, i64* %26, align 8, !dbg !7668
  store i64 %40, i64* %25, align 8, !dbg !7669
  %41 = load i64, i64* %26, align 8, !dbg !7670
  %42 = load i32, i32* %15, align 4, !dbg !7672
  %43 = load i32, i32* %23, align 4, !dbg !7673
  %44 = mul i32 %42, %43, !dbg !7674
  %45 = zext i32 %44 to i64, !dbg !7675
  %46 = icmp slt i64 %41, %45, !dbg !7676
  br i1 %46, label %47, label %52, !dbg !7677

47:                                               ; preds = %6
  %48 = load i32, i32* %15, align 4, !dbg !7678
  %49 = load i32, i32* %23, align 4, !dbg !7680
  %50 = mul i32 %48, %49, !dbg !7681
  %51 = zext i32 %50 to i64, !dbg !7678
  store i64 %51, i64* %25, align 8, !dbg !7682
  br label %52, !dbg !7683

52:                                               ; preds = %47, %6
  %53 = load i64, i64* %25, align 8, !dbg !7684
  %54 = call i8* @_TIFFmalloc(i64 %53), !dbg !7685
  store i8* %54, i8** %27, align 8, !dbg !7686
  %55 = load i8*, i8** %27, align 8, !dbg !7687
  %56 = icmp eq i8* %55, null, !dbg !7689
  br i1 %56, label %57, label %58, !dbg !7690

57:                                               ; preds = %52
  store i32 1, i32* %7, align 4, !dbg !7691
  br label %164, !dbg !7691

58:                                               ; preds = %52
  %59 = load i32, i32* %11, align 4, !dbg !7692
  %60 = load i16, i16* %12, align 2, !dbg !7693
  %61 = zext i16 %60 to i32, !dbg !7693
  %62 = mul i32 %59, %61, !dbg !7694
  %63 = load i16, i16* %14, align 2, !dbg !7695
  %64 = zext i16 %63 to i32, !dbg !7695
  %65 = mul i32 %62, %64, !dbg !7696
  %66 = add i32 %65, 7, !dbg !7697
  %67 = udiv i32 %66, 8, !dbg !7698
  store i32 %67, i32* %21, align 4, !dbg !7699
  store i32 0, i32* %17, align 4, !dbg !7700
  br label %68, !dbg !7702

68:                                               ; preds = %158, %58
  %69 = load i32, i32* %17, align 4, !dbg !7703
  %70 = load i32, i32* %10, align 4, !dbg !7705
  %71 = icmp ult i32 %69, %70, !dbg !7706
  br i1 %71, label %72, label %162, !dbg !7707

72:                                               ; preds = %68
  %73 = load i32, i32* %17, align 4, !dbg !7708
  %74 = load i32, i32* %15, align 4, !dbg !7710
  %75 = add i32 %73, %74, !dbg !7711
  %76 = load i32, i32* %10, align 4, !dbg !7712
  %77 = icmp ugt i32 %75, %76, !dbg !7713
  br i1 %77, label %78, label %82, !dbg !7714

78:                                               ; preds = %72
  %79 = load i32, i32* %10, align 4, !dbg !7715
  %80 = load i32, i32* %17, align 4, !dbg !7716
  %81 = sub i32 %79, %80, !dbg !7717
  br label %84, !dbg !7714

82:                                               ; preds = %72
  %83 = load i32, i32* %15, align 4, !dbg !7718
  br label %84, !dbg !7714

84:                                               ; preds = %82, %78
  %85 = phi i32 [ %81, %78 ], [ %83, %82 ], !dbg !7714
  store i32 %85, i32* %19, align 4, !dbg !7719
  store i32 0, i32* %18, align 4, !dbg !7720
  br label %86, !dbg !7722

86:                                               ; preds = %153, %84
  %87 = load i32, i32* %18, align 4, !dbg !7723
  %88 = load i32, i32* %11, align 4, !dbg !7725
  %89 = icmp ult i32 %87, %88, !dbg !7726
  br i1 %89, label %90, label %157, !dbg !7727

90:                                               ; preds = %86
  %91 = load i32, i32* %18, align 4, !dbg !7728
  %92 = load i32, i32* %16, align 4, !dbg !7731
  %93 = add i32 %91, %92, !dbg !7732
  %94 = load i32, i32* %11, align 4, !dbg !7733
  %95 = icmp ugt i32 %93, %94, !dbg !7734
  br i1 %95, label %96, label %100, !dbg !7735

96:                                               ; preds = %90
  %97 = load i32, i32* %11, align 4, !dbg !7736
  %98 = load i32, i32* %18, align 4, !dbg !7737
  %99 = sub i32 %97, %98, !dbg !7738
  store i32 %99, i32* %20, align 4, !dbg !7739
  br label %102, !dbg !7740

100:                                              ; preds = %90
  %101 = load i32, i32* %16, align 4, !dbg !7741
  store i32 %101, i32* %20, align 4, !dbg !7742
  br label %102

102:                                              ; preds = %100, %96
  %103 = load i32, i32* %18, align 4, !dbg !7743
  %104 = load i16, i16* %14, align 2, !dbg !7744
  %105 = zext i16 %104 to i32, !dbg !7744
  %106 = mul i32 %103, %105, !dbg !7745
  %107 = load i16, i16* %12, align 2, !dbg !7746
  %108 = zext i16 %107 to i32, !dbg !7746
  %109 = mul i32 %106, %108, !dbg !7747
  %110 = add i32 %109, 7, !dbg !7748
  %111 = udiv i32 %110, 8, !dbg !7749
  store i32 %111, i32* %22, align 4, !dbg !7750
  %112 = load i8*, i8** %9, align 8, !dbg !7751
  %113 = load i32, i32* %17, align 4, !dbg !7752
  %114 = load i32, i32* %21, align 4, !dbg !7753
  %115 = mul i32 %113, %114, !dbg !7754
  %116 = zext i32 %115 to i64, !dbg !7755
  %117 = getelementptr inbounds i8, i8* %112, i64 %116, !dbg !7755
  %118 = load i32, i32* %22, align 4, !dbg !7756
  %119 = zext i32 %118 to i64, !dbg !7757
  %120 = getelementptr inbounds i8, i8* %117, i64 %119, !dbg !7757
  store i8* %120, i8** %24, align 8, !dbg !7758
  %121 = load i8*, i8** %27, align 8, !dbg !7759
  %122 = load i8*, i8** %24, align 8, !dbg !7761
  %123 = load i32, i32* %19, align 4, !dbg !7762
  %124 = load i32, i32* %20, align 4, !dbg !7763
  %125 = load i32, i32* %11, align 4, !dbg !7764
  %126 = load i32, i32* %16, align 4, !dbg !7765
  %127 = load i16, i16* %12, align 2, !dbg !7766
  %128 = load i16, i16* %12, align 2, !dbg !7767
  %129 = load i16, i16* %14, align 2, !dbg !7768
  %130 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !7769
  %131 = call i32 @extractContigSamplesToTileBuffer(i8* %121, i8* %122, i32 %123, i32 %124, i32 %125, i32 %126, i16 zeroext 0, i16 zeroext %127, i16 zeroext %128, i16 zeroext %129, %struct.dump_opts* %130), !dbg !7770
  %132 = icmp sgt i32 %131, 0, !dbg !7771
  br i1 %132, label %133, label %139, !dbg !7772

133:                                              ; preds = %102
  %134 = load i32, i32* %17, align 4, !dbg !7773
  %135 = zext i32 %134 to i64, !dbg !7775
  %136 = load i32, i32* %18, align 4, !dbg !7776
  %137 = zext i32 %136 to i64, !dbg !7777
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.365, i64 0, i64 0), i64 %135, i64 %137), !dbg !7778
  %138 = load i8*, i8** %27, align 8, !dbg !7779
  call void @_TIFFfree(i8* %138), !dbg !7780
  store i32 1, i32* %7, align 4, !dbg !7781
  br label %164, !dbg !7781

139:                                              ; preds = %102
  %140 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7782
  %141 = load i8*, i8** %27, align 8, !dbg !7784
  %142 = load i32, i32* %18, align 4, !dbg !7785
  %143 = load i32, i32* %17, align 4, !dbg !7786
  %144 = call i64 @TIFFWriteTile(%struct.tiff* %140, i8* %141, i32 %142, i32 %143, i32 0, i16 zeroext 0), !dbg !7787
  %145 = icmp slt i64 %144, 0, !dbg !7788
  br i1 %145, label %146, label %152, !dbg !7789

146:                                              ; preds = %139
  %147 = load i32, i32* %18, align 4, !dbg !7790
  %148 = zext i32 %147 to i64, !dbg !7792
  %149 = load i32, i32* %17, align 4, !dbg !7793
  %150 = zext i32 %149 to i64, !dbg !7794
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.366, i64 0, i64 0), i64 %148, i64 %150), !dbg !7795
  %151 = load i8*, i8** %27, align 8, !dbg !7796
  call void @_TIFFfree(i8* %151), !dbg !7797
  store i32 1, i32* %7, align 4, !dbg !7798
  br label %164, !dbg !7798

152:                                              ; preds = %139
  br label %153, !dbg !7799

153:                                              ; preds = %152
  %154 = load i32, i32* %16, align 4, !dbg !7800
  %155 = load i32, i32* %18, align 4, !dbg !7801
  %156 = add i32 %155, %154, !dbg !7801
  store i32 %156, i32* %18, align 4, !dbg !7801
  br label %86, !dbg !7802, !llvm.loop !7803

157:                                              ; preds = %86
  br label %158, !dbg !7805

158:                                              ; preds = %157
  %159 = load i32, i32* %15, align 4, !dbg !7806
  %160 = load i32, i32* %17, align 4, !dbg !7807
  %161 = add i32 %160, %159, !dbg !7807
  store i32 %161, i32* %17, align 4, !dbg !7807
  br label %68, !dbg !7808, !llvm.loop !7809

162:                                              ; preds = %68
  %163 = load i8*, i8** %27, align 8, !dbg !7811
  call void @_TIFFfree(i8* %163), !dbg !7812
  store i32 0, i32* %7, align 4, !dbg !7813
  br label %164, !dbg !7813

164:                                              ; preds = %162, %146, %133, %57
  %165 = load i32, i32* %7, align 4, !dbg !7814
  ret i32 %165, !dbg !7814
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeBufferToSeparateTiles(%struct.tiff*, i8*, i32, i32, i16 zeroext, %struct.dump_opts*) #0 !dbg !7815 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.tiff*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  %13 = alloca %struct.dump_opts*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i16, align 2
  %24 = alloca i16, align 2
  %25 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %8, metadata !7816, metadata !DIExpression()), !dbg !7817
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7818, metadata !DIExpression()), !dbg !7819
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7820, metadata !DIExpression()), !dbg !7821
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7822, metadata !DIExpression()), !dbg !7823
  store i16 %4, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !7824, metadata !DIExpression()), !dbg !7825
  store %struct.dump_opts* %5, %struct.dump_opts** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %13, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata i8** %14, metadata !7828, metadata !DIExpression()), !dbg !7830
  %26 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7831
  %27 = call i64 @TIFFTileSize(%struct.tiff* %26), !dbg !7832
  %28 = call i8* @_TIFFmalloc(i64 %27), !dbg !7833
  store i8* %28, i8** %14, align 8, !dbg !7830
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7834, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7836, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.declare(metadata i32* %17, metadata !7838, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.declare(metadata i32* %19, metadata !7842, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7844, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.declare(metadata i32* %21, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata i32* %22, metadata !7848, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.declare(metadata i16* %23, metadata !7850, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.declare(metadata i16* %24, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata i8** %25, metadata !7854, metadata !DIExpression()), !dbg !7855
  %29 = load i8*, i8** %9, align 8, !dbg !7856
  store i8* %29, i8** %25, align 8, !dbg !7855
  %30 = load i8*, i8** %14, align 8, !dbg !7857
  %31 = icmp eq i8* %30, null, !dbg !7859
  br i1 %31, label %32, label %33, !dbg !7860

32:                                               ; preds = %6
  store i32 1, i32* %7, align 4, !dbg !7861
  br label %161, !dbg !7861

33:                                               ; preds = %6
  %34 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7862
  %35 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %34, i32 323, i32* %15), !dbg !7863
  %36 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7864
  %37 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %36, i32 322, i32* %16), !dbg !7865
  %38 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7866
  %39 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %38, i32 258, i16* %23), !dbg !7867
  %40 = load i32, i32* %11, align 4, !dbg !7868
  %41 = load i16, i16* %12, align 2, !dbg !7869
  %42 = zext i16 %41 to i32, !dbg !7869
  %43 = mul i32 %40, %42, !dbg !7870
  %44 = load i16, i16* %23, align 2, !dbg !7871
  %45 = zext i16 %44 to i32, !dbg !7871
  %46 = mul i32 %43, %45, !dbg !7872
  %47 = add i32 %46, 7, !dbg !7873
  %48 = udiv i32 %47, 8, !dbg !7874
  store i32 %48, i32* %21, align 4, !dbg !7875
  store i32 0, i32* %17, align 4, !dbg !7876
  br label %49, !dbg !7878

49:                                               ; preds = %155, %33
  %50 = load i32, i32* %17, align 4, !dbg !7879
  %51 = load i32, i32* %10, align 4, !dbg !7881
  %52 = icmp ult i32 %50, %51, !dbg !7882
  br i1 %52, label %53, label %159, !dbg !7883

53:                                               ; preds = %49
  %54 = load i32, i32* %17, align 4, !dbg !7884
  %55 = load i32, i32* %15, align 4, !dbg !7886
  %56 = add i32 %54, %55, !dbg !7887
  %57 = load i32, i32* %10, align 4, !dbg !7888
  %58 = icmp ugt i32 %56, %57, !dbg !7889
  br i1 %58, label %59, label %63, !dbg !7890

59:                                               ; preds = %53
  %60 = load i32, i32* %10, align 4, !dbg !7891
  %61 = load i32, i32* %17, align 4, !dbg !7892
  %62 = sub i32 %60, %61, !dbg !7893
  br label %65, !dbg !7890

63:                                               ; preds = %53
  %64 = load i32, i32* %15, align 4, !dbg !7894
  br label %65, !dbg !7890

65:                                               ; preds = %63, %59
  %66 = phi i32 [ %62, %59 ], [ %64, %63 ], !dbg !7890
  store i32 %66, i32* %19, align 4, !dbg !7895
  store i32 0, i32* %18, align 4, !dbg !7896
  br label %67, !dbg !7898

67:                                               ; preds = %150, %65
  %68 = load i32, i32* %18, align 4, !dbg !7899
  %69 = load i32, i32* %11, align 4, !dbg !7901
  %70 = icmp ult i32 %68, %69, !dbg !7902
  br i1 %70, label %71, label %154, !dbg !7903

71:                                               ; preds = %67
  %72 = load i32, i32* %18, align 4, !dbg !7904
  %73 = load i32, i32* %16, align 4, !dbg !7907
  %74 = add i32 %72, %73, !dbg !7908
  %75 = load i32, i32* %11, align 4, !dbg !7909
  %76 = icmp ugt i32 %74, %75, !dbg !7910
  br i1 %76, label %77, label %81, !dbg !7911

77:                                               ; preds = %71
  %78 = load i32, i32* %11, align 4, !dbg !7912
  %79 = load i32, i32* %18, align 4, !dbg !7913
  %80 = sub i32 %78, %79, !dbg !7914
  store i32 %80, i32* %20, align 4, !dbg !7915
  br label %83, !dbg !7916

81:                                               ; preds = %71
  %82 = load i32, i32* %16, align 4, !dbg !7917
  store i32 %82, i32* %20, align 4, !dbg !7918
  br label %83

83:                                               ; preds = %81, %77
  %84 = load i32, i32* %18, align 4, !dbg !7919
  %85 = load i16, i16* %23, align 2, !dbg !7920
  %86 = zext i16 %85 to i32, !dbg !7920
  %87 = mul i32 %84, %86, !dbg !7921
  %88 = load i16, i16* %12, align 2, !dbg !7922
  %89 = zext i16 %88 to i32, !dbg !7922
  %90 = mul i32 %87, %89, !dbg !7923
  %91 = add i32 %90, 7, !dbg !7924
  %92 = udiv i32 %91, 8, !dbg !7925
  store i32 %92, i32* %22, align 4, !dbg !7926
  %93 = load i8*, i8** %9, align 8, !dbg !7927
  %94 = load i32, i32* %17, align 4, !dbg !7928
  %95 = load i32, i32* %21, align 4, !dbg !7929
  %96 = mul i32 %94, %95, !dbg !7930
  %97 = zext i32 %96 to i64, !dbg !7931
  %98 = getelementptr inbounds i8, i8* %93, i64 %97, !dbg !7931
  %99 = load i32, i32* %22, align 4, !dbg !7932
  %100 = zext i32 %99 to i64, !dbg !7933
  %101 = getelementptr inbounds i8, i8* %98, i64 %100, !dbg !7933
  store i8* %101, i8** %25, align 8, !dbg !7934
  store i16 0, i16* %24, align 2, !dbg !7935
  br label %102, !dbg !7937

102:                                              ; preds = %146, %83
  %103 = load i16, i16* %24, align 2, !dbg !7938
  %104 = zext i16 %103 to i32, !dbg !7938
  %105 = load i16, i16* %12, align 2, !dbg !7940
  %106 = zext i16 %105 to i32, !dbg !7940
  %107 = icmp slt i32 %104, %106, !dbg !7941
  br i1 %107, label %108, label %149, !dbg !7942

108:                                              ; preds = %102
  %109 = load i8*, i8** %14, align 8, !dbg !7943
  %110 = load i8*, i8** %25, align 8, !dbg !7946
  %111 = load i32, i32* %19, align 4, !dbg !7947
  %112 = load i32, i32* %20, align 4, !dbg !7948
  %113 = load i32, i32* %11, align 4, !dbg !7949
  %114 = load i32, i32* %16, align 4, !dbg !7950
  %115 = load i16, i16* %24, align 2, !dbg !7951
  %116 = load i16, i16* %12, align 2, !dbg !7952
  %117 = load i16, i16* %23, align 2, !dbg !7953
  %118 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !7954
  %119 = call i32 @extractContigSamplesToTileBuffer(i8* %109, i8* %110, i32 %111, i32 %112, i32 %113, i32 %114, i16 zeroext %115, i16 zeroext 1, i16 zeroext %116, i16 zeroext %117, %struct.dump_opts* %118), !dbg !7955
  %120 = icmp sgt i32 %119, 0, !dbg !7956
  br i1 %120, label %121, label %129, !dbg !7957

121:                                              ; preds = %108
  %122 = load i32, i32* %17, align 4, !dbg !7958
  %123 = zext i32 %122 to i64, !dbg !7960
  %124 = load i32, i32* %18, align 4, !dbg !7961
  %125 = zext i32 %124 to i64, !dbg !7962
  %126 = load i16, i16* %24, align 2, !dbg !7963
  %127 = zext i16 %126 to i32, !dbg !7964
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.374, i64 0, i64 0), i64 %123, i64 %125, i32 %127), !dbg !7965
  %128 = load i8*, i8** %14, align 8, !dbg !7966
  call void @_TIFFfree(i8* %128), !dbg !7967
  store i32 1, i32* %7, align 4, !dbg !7968
  br label %161, !dbg !7968

129:                                              ; preds = %108
  %130 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !7969
  %131 = load i8*, i8** %14, align 8, !dbg !7971
  %132 = load i32, i32* %18, align 4, !dbg !7972
  %133 = load i32, i32* %17, align 4, !dbg !7973
  %134 = load i16, i16* %24, align 2, !dbg !7974
  %135 = call i64 @TIFFWriteTile(%struct.tiff* %130, i8* %131, i32 %132, i32 %133, i32 0, i16 zeroext %134), !dbg !7975
  %136 = icmp slt i64 %135, 0, !dbg !7976
  br i1 %136, label %137, label %145, !dbg !7977

137:                                              ; preds = %129
  %138 = load i32, i32* %18, align 4, !dbg !7978
  %139 = zext i32 %138 to i64, !dbg !7980
  %140 = load i32, i32* %17, align 4, !dbg !7981
  %141 = zext i32 %140 to i64, !dbg !7982
  %142 = load i16, i16* %24, align 2, !dbg !7983
  %143 = zext i16 %142 to i64, !dbg !7984
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.375, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.376, i64 0, i64 0), i64 %139, i64 %141, i64 %143), !dbg !7985
  %144 = load i8*, i8** %14, align 8, !dbg !7986
  call void @_TIFFfree(i8* %144), !dbg !7987
  store i32 1, i32* %7, align 4, !dbg !7988
  br label %161, !dbg !7988

145:                                              ; preds = %129
  br label %146, !dbg !7989

146:                                              ; preds = %145
  %147 = load i16, i16* %24, align 2, !dbg !7990
  %148 = add i16 %147, 1, !dbg !7990
  store i16 %148, i16* %24, align 2, !dbg !7990
  br label %102, !dbg !7991, !llvm.loop !7992

149:                                              ; preds = %102
  br label %150, !dbg !7994

150:                                              ; preds = %149
  %151 = load i32, i32* %16, align 4, !dbg !7995
  %152 = load i32, i32* %18, align 4, !dbg !7996
  %153 = add i32 %152, %151, !dbg !7996
  store i32 %153, i32* %18, align 4, !dbg !7996
  br label %67, !dbg !7997, !llvm.loop !7998

154:                                              ; preds = %67
  br label %155, !dbg !8000

155:                                              ; preds = %154
  %156 = load i32, i32* %15, align 4, !dbg !8001
  %157 = load i32, i32* %17, align 4, !dbg !8002
  %158 = add i32 %157, %156, !dbg !8002
  store i32 %158, i32* %17, align 4, !dbg !8002
  br label %49, !dbg !8003, !llvm.loop !8004

159:                                              ; preds = %49
  %160 = load i8*, i8** %14, align 8, !dbg !8006
  call void @_TIFFfree(i8* %160), !dbg !8007
  store i32 0, i32* %7, align 4, !dbg !8008
  br label %161, !dbg !8008

161:                                              ; preds = %159, %137, %121, %32
  %162 = load i32, i32* %7, align 4, !dbg !8009
  ret i32 %162, !dbg !8009
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeBufferToContigStrips(%struct.tiff*, i8*, i32) #0 !dbg !8010 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.tiff*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  store %struct.tiff* %0, %struct.tiff** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %5, metadata !8013, metadata !DIExpression()), !dbg !8014
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8015, metadata !DIExpression()), !dbg !8016
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8017, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8019, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8025, metadata !DIExpression()), !dbg !8028
  store i32 0, i32* %11, align 4, !dbg !8028
  call void @llvm.dbg.declare(metadata i64* %12, metadata !8029, metadata !DIExpression()), !dbg !8030
  %13 = load %struct.tiff*, %struct.tiff** %5, align 8, !dbg !8031
  %14 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %13, i32 278, i32* %10), !dbg !8032
  store i32 0, i32* %8, align 4, !dbg !8033
  br label %15, !dbg !8035

15:                                               ; preds = %52, %3
  %16 = load i32, i32* %8, align 4, !dbg !8036
  %17 = load i32, i32* %7, align 4, !dbg !8038
  %18 = icmp ult i32 %16, %17, !dbg !8039
  br i1 %18, label %19, label %56, !dbg !8040

19:                                               ; preds = %15
  %20 = load i32, i32* %8, align 4, !dbg !8041
  %21 = load i32, i32* %10, align 4, !dbg !8043
  %22 = add i32 %20, %21, !dbg !8044
  %23 = load i32, i32* %7, align 4, !dbg !8045
  %24 = icmp ugt i32 %22, %23, !dbg !8046
  br i1 %24, label %25, label %29, !dbg !8047

25:                                               ; preds = %19
  %26 = load i32, i32* %7, align 4, !dbg !8048
  %27 = load i32, i32* %8, align 4, !dbg !8049
  %28 = sub i32 %26, %27, !dbg !8050
  br label %31, !dbg !8047

29:                                               ; preds = %19
  %30 = load i32, i32* %10, align 4, !dbg !8051
  br label %31, !dbg !8047

31:                                               ; preds = %29, %25
  %32 = phi i32 [ %28, %25 ], [ %30, %29 ], !dbg !8047
  store i32 %32, i32* %9, align 4, !dbg !8052
  %33 = load %struct.tiff*, %struct.tiff** %5, align 8, !dbg !8053
  %34 = load i32, i32* %9, align 4, !dbg !8054
  %35 = call i64 @TIFFVStripSize(%struct.tiff* %33, i32 %34), !dbg !8055
  store i64 %35, i64* %12, align 8, !dbg !8056
  %36 = load %struct.tiff*, %struct.tiff** %5, align 8, !dbg !8057
  %37 = load i32, i32* %11, align 4, !dbg !8059
  %38 = add i32 %37, 1, !dbg !8059
  store i32 %38, i32* %11, align 4, !dbg !8059
  %39 = load i8*, i8** %6, align 8, !dbg !8060
  %40 = load i64, i64* %12, align 8, !dbg !8061
  %41 = call i64 @TIFFWriteEncodedStrip(%struct.tiff* %36, i32 %37, i8* %39, i64 %40), !dbg !8062
  %42 = icmp slt i64 %41, 0, !dbg !8063
  br i1 %42, label %43, label %48, !dbg !8064

43:                                               ; preds = %31
  %44 = load %struct.tiff*, %struct.tiff** %5, align 8, !dbg !8065
  %45 = call i8* @TIFFFileName(%struct.tiff* %44), !dbg !8067
  %46 = load i32, i32* %11, align 4, !dbg !8068
  %47 = sub i32 %46, 1, !dbg !8069
  call void (i8*, i8*, ...) @TIFFError(i8* %45, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.377, i64 0, i64 0), i32 %47), !dbg !8070
  store i32 1, i32* %4, align 4, !dbg !8071
  br label %57, !dbg !8071

48:                                               ; preds = %31
  %49 = load i64, i64* %12, align 8, !dbg !8072
  %50 = load i8*, i8** %6, align 8, !dbg !8073
  %51 = getelementptr inbounds i8, i8* %50, i64 %49, !dbg !8073
  store i8* %51, i8** %6, align 8, !dbg !8073
  br label %52, !dbg !8074

52:                                               ; preds = %48
  %53 = load i32, i32* %10, align 4, !dbg !8075
  %54 = load i32, i32* %8, align 4, !dbg !8076
  %55 = add i32 %54, %53, !dbg !8076
  store i32 %55, i32* %8, align 4, !dbg !8076
  br label %15, !dbg !8077, !llvm.loop !8078

56:                                               ; preds = %15
  store i32 0, i32* %4, align 4, !dbg !8080
  br label %57, !dbg !8080

57:                                               ; preds = %56, %43
  %58 = load i32, i32* %4, align 4, !dbg !8081
  ret i32 %58, !dbg !8081
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @writeBufferToSeparateStrips(%struct.tiff*, i8*, i32, i32, i16 zeroext, %struct.dump_opts*) #0 !dbg !8082 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.tiff*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  %13 = alloca %struct.dump_opts*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i16, align 2
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %8, metadata !8085, metadata !DIExpression()), !dbg !8086
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8087, metadata !DIExpression()), !dbg !8088
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8089, metadata !DIExpression()), !dbg !8090
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8091, metadata !DIExpression()), !dbg !8092
  store i16 %4, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !8093, metadata !DIExpression()), !dbg !8094
  store %struct.dump_opts* %5, %struct.dump_opts** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %13, metadata !8095, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata i8** %14, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata i16* %15, metadata !8099, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8101, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8107, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8109, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.declare(metadata i16* %21, metadata !8111, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8113, metadata !DIExpression()), !dbg !8114
  store i32 0, i32* %22, align 4, !dbg !8114
  call void @llvm.dbg.declare(metadata i64* %23, metadata !8115, metadata !DIExpression()), !dbg !8116
  %28 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8117
  %29 = call i64 @TIFFStripSize(%struct.tiff* %28), !dbg !8118
  store i64 %29, i64* %23, align 8, !dbg !8116
  call void @llvm.dbg.declare(metadata i64* %24, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata i64* %25, metadata !8121, metadata !DIExpression()), !dbg !8122
  %30 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8123
  %31 = call i64 @TIFFScanlineSize(%struct.tiff* %30), !dbg !8124
  store i64 %31, i64* %25, align 8, !dbg !8122
  call void @llvm.dbg.declare(metadata i64* %26, metadata !8125, metadata !DIExpression()), !dbg !8126
  store i64 0, i64* %26, align 8, !dbg !8126
  call void @llvm.dbg.declare(metadata i8** %27, metadata !8127, metadata !DIExpression()), !dbg !8128
  %32 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8129
  %33 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %32, i32 278, i32* %19), !dbg !8130
  %34 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8131
  %35 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %34, i32 258, i16* %15), !dbg !8132
  %36 = load i16, i16* %15, align 2, !dbg !8133
  %37 = zext i16 %36 to i32, !dbg !8133
  %38 = add nsw i32 %37, 7, !dbg !8134
  %39 = sdiv i32 %38, 8, !dbg !8135
  store i32 %39, i32* %20, align 4, !dbg !8136
  %40 = load i16, i16* %15, align 2, !dbg !8137
  %41 = zext i16 %40 to i32, !dbg !8137
  %42 = load i16, i16* %12, align 2, !dbg !8138
  %43 = zext i16 %42 to i32, !dbg !8138
  %44 = mul nsw i32 %41, %43, !dbg !8139
  %45 = load i32, i32* %11, align 4, !dbg !8140
  %46 = mul i32 %44, %45, !dbg !8141
  %47 = add i32 %46, 7, !dbg !8142
  %48 = udiv i32 %47, 8, !dbg !8143
  store i32 %48, i32* %18, align 4, !dbg !8144
  %49 = load i32, i32* %19, align 4, !dbg !8145
  %50 = load i32, i32* %20, align 4, !dbg !8146
  %51 = mul i32 %49, %50, !dbg !8147
  %52 = load i32, i32* %11, align 4, !dbg !8148
  %53 = add i32 %52, 1, !dbg !8149
  %54 = mul i32 %51, %53, !dbg !8150
  %55 = zext i32 %54 to i64, !dbg !8145
  store i64 %55, i64* %24, align 8, !dbg !8151
  %56 = load i64, i64* %24, align 8, !dbg !8152
  %57 = call i8* @_TIFFmalloc(i64 %56), !dbg !8153
  store i8* %57, i8** %27, align 8, !dbg !8154
  %58 = load i8*, i8** %27, align 8, !dbg !8155
  %59 = icmp eq i8* %58, null, !dbg !8157
  br i1 %59, label %60, label %61, !dbg !8158

60:                                               ; preds = %6
  store i32 1, i32* %7, align 4, !dbg !8159
  br label %181, !dbg !8159

61:                                               ; preds = %6
  store i16 0, i16* %21, align 2, !dbg !8160
  br label %62, !dbg !8162

62:                                               ; preds = %176, %61
  %63 = load i16, i16* %21, align 2, !dbg !8163
  %64 = zext i16 %63 to i32, !dbg !8163
  %65 = load i16, i16* %12, align 2, !dbg !8165
  %66 = zext i16 %65 to i32, !dbg !8165
  %67 = icmp slt i32 %64, %66, !dbg !8166
  br i1 %67, label %68, label %179, !dbg !8167

68:                                               ; preds = %62
  store i32 0, i32* %16, align 4, !dbg !8168
  br label %69, !dbg !8171

69:                                               ; preds = %171, %68
  %70 = load i32, i32* %16, align 4, !dbg !8172
  %71 = load i32, i32* %10, align 4, !dbg !8174
  %72 = icmp ult i32 %70, %71, !dbg !8175
  br i1 %72, label %73, label %175, !dbg !8176

73:                                               ; preds = %69
  %74 = load i32, i32* %16, align 4, !dbg !8177
  %75 = load i32, i32* %19, align 4, !dbg !8179
  %76 = add i32 %74, %75, !dbg !8180
  %77 = load i32, i32* %10, align 4, !dbg !8181
  %78 = icmp ugt i32 %76, %77, !dbg !8182
  br i1 %78, label %79, label %83, !dbg !8183

79:                                               ; preds = %73
  %80 = load i32, i32* %10, align 4, !dbg !8184
  %81 = load i32, i32* %16, align 4, !dbg !8185
  %82 = sub i32 %80, %81, !dbg !8186
  br label %85, !dbg !8183

83:                                               ; preds = %73
  %84 = load i32, i32* %19, align 4, !dbg !8187
  br label %85, !dbg !8183

85:                                               ; preds = %83, %79
  %86 = phi i32 [ %82, %79 ], [ %84, %83 ], !dbg !8183
  store i32 %86, i32* %17, align 4, !dbg !8188
  %87 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8189
  %88 = load i32, i32* %17, align 4, !dbg !8190
  %89 = call i64 @TIFFVStripSize(%struct.tiff* %87, i32 %88), !dbg !8191
  store i64 %89, i64* %23, align 8, !dbg !8192
  %90 = load i8*, i8** %9, align 8, !dbg !8193
  %91 = load i32, i32* %16, align 4, !dbg !8194
  %92 = load i32, i32* %18, align 4, !dbg !8195
  %93 = mul i32 %91, %92, !dbg !8196
  %94 = zext i32 %93 to i64, !dbg !8197
  %95 = getelementptr inbounds i8, i8* %90, i64 %94, !dbg !8197
  store i8* %95, i8** %14, align 8, !dbg !8198
  %96 = load i64, i64* %23, align 8, !dbg !8199
  %97 = load i64, i64* %26, align 8, !dbg !8200
  %98 = add nsw i64 %97, %96, !dbg !8200
  store i64 %98, i64* %26, align 8, !dbg !8200
  %99 = load i8*, i8** %27, align 8, !dbg !8201
  %100 = load i64, i64* %24, align 8, !dbg !8202
  call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 %100, i1 false), !dbg !8203
  %101 = load i8*, i8** %27, align 8, !dbg !8204
  %102 = load i8*, i8** %14, align 8, !dbg !8206
  %103 = load i32, i32* %17, align 4, !dbg !8207
  %104 = load i32, i32* %11, align 4, !dbg !8208
  %105 = load i16, i16* %21, align 2, !dbg !8209
  %106 = load i16, i16* %12, align 2, !dbg !8210
  %107 = load i16, i16* %15, align 2, !dbg !8211
  %108 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8212
  %109 = call i32 @extractContigSamplesToBuffer(i8* %101, i8* %102, i32 %103, i32 %104, i16 zeroext %105, i16 zeroext %106, i16 zeroext %107, %struct.dump_opts* %108), !dbg !8213
  %110 = icmp ne i32 %109, 0, !dbg !8213
  br i1 %110, label %111, label %113, !dbg !8214

111:                                              ; preds = %85
  %112 = load i8*, i8** %27, align 8, !dbg !8215
  call void @_TIFFfree(i8* %112), !dbg !8217
  store i32 1, i32* %7, align 4, !dbg !8218
  br label %181, !dbg !8218

113:                                              ; preds = %85
  %114 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8219
  %115 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %114, i32 0, i32 7, !dbg !8221
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %115, align 8, !dbg !8221
  %117 = icmp ne %struct._IO_FILE* %116, null, !dbg !8222
  br i1 %117, label %118, label %156, !dbg !8223

118:                                              ; preds = %113
  %119 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8224
  %120 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %119, i32 0, i32 2, !dbg !8225
  %121 = load i32, i32* %120, align 8, !dbg !8225
  %122 = icmp eq i32 %121, 1, !dbg !8226
  br i1 %122, label %123, label %156, !dbg !8227

123:                                              ; preds = %118
  %124 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8228
  %125 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %124, i32 0, i32 7, !dbg !8230
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** %125, align 8, !dbg !8230
  %127 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8231
  %128 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %127, i32 0, i32 1, !dbg !8232
  %129 = load i32, i32* %128, align 4, !dbg !8232
  %130 = load i16, i16* %21, align 2, !dbg !8233
  %131 = zext i16 %130 to i32, !dbg !8233
  %132 = add nsw i32 %131, 1, !dbg !8234
  %133 = load i32, i32* %22, align 4, !dbg !8235
  %134 = add i32 %133, 1, !dbg !8236
  %135 = load i64, i64* %23, align 8, !dbg !8237
  %136 = load i32, i32* %16, align 4, !dbg !8238
  %137 = add i32 %136, 1, !dbg !8239
  %138 = load i64, i64* %25, align 8, !dbg !8240
  %139 = load i8*, i8** %14, align 8, !dbg !8241
  %140 = load i8*, i8** %9, align 8, !dbg !8242
  %141 = ptrtoint i8* %139 to i64, !dbg !8243
  %142 = ptrtoint i8* %140 to i64, !dbg !8243
  %143 = sub i64 %141, %142, !dbg !8243
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %126, i32 %129, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.378, i64 0, i64 0), i32 %132, i32 %134, i64 %135, i32 %137, i64 %138, i64 %143), !dbg !8244
  %144 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8245
  %145 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %144, i32 0, i32 7, !dbg !8246
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %145, align 8, !dbg !8246
  %147 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !8247
  %148 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %147, i32 0, i32 1, !dbg !8248
  %149 = load i32, i32* %148, align 4, !dbg !8248
  %150 = load i32, i32* %17, align 4, !dbg !8249
  %151 = load i64, i64* %25, align 8, !dbg !8250
  %152 = trunc i64 %151 to i32, !dbg !8250
  %153 = load i32, i32* %16, align 4, !dbg !8251
  %154 = load i8*, i8** %27, align 8, !dbg !8252
  %155 = call i32 @dump_buffer(%struct._IO_FILE* %146, i32 %149, i32 %150, i32 %152, i32 %153, i8* %154), !dbg !8253
  br label %156, !dbg !8254

156:                                              ; preds = %123, %118, %113
  %157 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8255
  %158 = load i32, i32* %22, align 4, !dbg !8257
  %159 = add i32 %158, 1, !dbg !8257
  store i32 %159, i32* %22, align 4, !dbg !8257
  %160 = load i8*, i8** %27, align 8, !dbg !8258
  %161 = load i64, i64* %23, align 8, !dbg !8259
  %162 = call i64 @TIFFWriteEncodedStrip(%struct.tiff* %157, i32 %158, i8* %160, i64 %161), !dbg !8260
  %163 = icmp slt i64 %162, 0, !dbg !8261
  br i1 %163, label %164, label %170, !dbg !8262

164:                                              ; preds = %156
  %165 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !8263
  %166 = call i8* @TIFFFileName(%struct.tiff* %165), !dbg !8265
  %167 = load i32, i32* %22, align 4, !dbg !8266
  %168 = sub i32 %167, 1, !dbg !8267
  call void (i8*, i8*, ...) @TIFFError(i8* %166, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.377, i64 0, i64 0), i32 %168), !dbg !8268
  %169 = load i8*, i8** %27, align 8, !dbg !8269
  call void @_TIFFfree(i8* %169), !dbg !8270
  store i32 1, i32* %7, align 4, !dbg !8271
  br label %181, !dbg !8271

170:                                              ; preds = %156
  br label %171, !dbg !8272

171:                                              ; preds = %170
  %172 = load i32, i32* %19, align 4, !dbg !8273
  %173 = load i32, i32* %16, align 4, !dbg !8274
  %174 = add i32 %173, %172, !dbg !8274
  store i32 %174, i32* %16, align 4, !dbg !8274
  br label %69, !dbg !8275, !llvm.loop !8276

175:                                              ; preds = %69
  br label %176, !dbg !8278

176:                                              ; preds = %175
  %177 = load i16, i16* %21, align 2, !dbg !8279
  %178 = add i16 %177, 1, !dbg !8279
  store i16 %178, i16* %21, align 2, !dbg !8279
  br label %62, !dbg !8280, !llvm.loop !8281

179:                                              ; preds = %62
  %180 = load i8*, i8** %27, align 8, !dbg !8283
  call void @_TIFFfree(i8* %180), !dbg !8284
  store i32 0, i32* %7, align 4, !dbg !8285
  br label %181, !dbg !8285

181:                                              ; preds = %179, %164, %111, %60
  %182 = load i32, i32* %7, align 4, !dbg !8286
  ret i32 %182, !dbg !8286
}

declare i32 @TIFFWriteDirectory(%struct.tiff*) #3

declare i64 @TIFFStripSize(%struct.tiff*) #3

declare i64 @TIFFScanlineSize(%struct.tiff*) #3

declare i8* @_TIFFmalloc(i64) #3

declare i64 @TIFFVStripSize(%struct.tiff*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesToBuffer(i8*, i8*, i32, i32, i16 zeroext, i16 zeroext, i16 zeroext, %struct.dump_opts*) #0 !dbg !8287 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca %struct.dump_opts*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i16, align 2
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !8290, metadata !DIExpression()), !dbg !8291
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !8292, metadata !DIExpression()), !dbg !8293
  store i32 %2, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8296, metadata !DIExpression()), !dbg !8297
  store i16 %4, i16* %14, align 2
  call void @llvm.dbg.declare(metadata i16* %14, metadata !8298, metadata !DIExpression()), !dbg !8299
  store i16 %5, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !8300, metadata !DIExpression()), !dbg !8301
  store i16 %6, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !8302, metadata !DIExpression()), !dbg !8303
  store %struct.dump_opts* %7, %struct.dump_opts** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %17, metadata !8304, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8306, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8308, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8310, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8312, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8314, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8318, metadata !DIExpression()), !dbg !8319
  store i32 0, i32* %24, align 4, !dbg !8319
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8320, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8322, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.declare(metadata i16* %27, metadata !8324, metadata !DIExpression()), !dbg !8325
  store i16 1, i16* %27, align 2, !dbg !8325
  call void @llvm.dbg.declare(metadata i8** %28, metadata !8326, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.declare(metadata i8** %29, metadata !8328, metadata !DIExpression()), !dbg !8329
  %30 = load i16, i16* %16, align 2, !dbg !8330
  %31 = zext i16 %30 to i32, !dbg !8330
  %32 = add nsw i32 %31, 7, !dbg !8331
  %33 = sdiv i32 %32, 8, !dbg !8332
  store i32 %33, i32* %19, align 4, !dbg !8333
  %34 = load i16, i16* %16, align 2, !dbg !8334
  %35 = zext i16 %34 to i32, !dbg !8334
  %36 = load i16, i16* %15, align 2, !dbg !8335
  %37 = zext i16 %36 to i32, !dbg !8335
  %38 = mul nsw i32 %35, %37, !dbg !8336
  %39 = add nsw i32 %38, 7, !dbg !8337
  %40 = sdiv i32 %39, 8, !dbg !8338
  store i32 %40, i32* %20, align 4, !dbg !8339
  %41 = load i16, i16* %16, align 2, !dbg !8340
  %42 = zext i16 %41 to i32, !dbg !8340
  %43 = srem i32 %42, 8, !dbg !8342
  %44 = icmp eq i32 %43, 0, !dbg !8343
  br i1 %44, label %45, label %46, !dbg !8344

45:                                               ; preds = %8
  store i32 0, i32* %18, align 4, !dbg !8345
  br label %57, !dbg !8346

46:                                               ; preds = %8
  %47 = load i32, i32* %20, align 4, !dbg !8347
  %48 = load i32, i32* %19, align 4, !dbg !8350
  %49 = add nsw i32 %48, 1, !dbg !8351
  %50 = icmp slt i32 %47, %49, !dbg !8352
  br i1 %50, label %51, label %53, !dbg !8353

51:                                               ; preds = %46
  %52 = load i32, i32* %20, align 4, !dbg !8354
  store i32 %52, i32* %18, align 4, !dbg !8355
  br label %56, !dbg !8356

53:                                               ; preds = %46
  %54 = load i32, i32* %19, align 4, !dbg !8357
  %55 = add nsw i32 %54, 1, !dbg !8358
  store i32 %55, i32* %18, align 4, !dbg !8359
  br label %56

56:                                               ; preds = %53, %51
  br label %57

57:                                               ; preds = %56, %45
  %58 = load i16, i16* %16, align 2, !dbg !8360
  %59 = zext i16 %58 to i32, !dbg !8360
  %60 = load i16, i16* %15, align 2, !dbg !8361
  %61 = zext i16 %60 to i32, !dbg !8361
  %62 = mul nsw i32 %59, %61, !dbg !8362
  %63 = load i32, i32* %13, align 4, !dbg !8363
  %64 = mul i32 %62, %63, !dbg !8364
  %65 = add i32 %64, 7, !dbg !8365
  %66 = udiv i32 %65, 8, !dbg !8366
  store i32 %66, i32* %21, align 4, !dbg !8367
  %67 = load i16, i16* %16, align 2, !dbg !8368
  %68 = zext i16 %67 to i32, !dbg !8368
  %69 = load i32, i32* %13, align 4, !dbg !8369
  %70 = mul i32 %68, %69, !dbg !8370
  %71 = add i32 %70, 7, !dbg !8371
  %72 = udiv i32 %71, 8, !dbg !8372
  store i32 %72, i32* %25, align 4, !dbg !8373
  %73 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8374
  %74 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %73, i32 0, i32 7, !dbg !8376
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %74, align 8, !dbg !8376
  %76 = icmp ne %struct._IO_FILE* %75, null, !dbg !8377
  br i1 %76, label %77, label %94, !dbg !8378

77:                                               ; preds = %57
  %78 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8379
  %79 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %78, i32 0, i32 2, !dbg !8380
  %80 = load i32, i32* %79, align 8, !dbg !8380
  %81 = icmp eq i32 %80, 4, !dbg !8381
  br i1 %81, label %82, label %94, !dbg !8382

82:                                               ; preds = %77
  %83 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8383
  %84 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %83, i32 0, i32 7, !dbg !8385
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %84, align 8, !dbg !8385
  %86 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8386
  %87 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %86, i32 0, i32 1, !dbg !8387
  %88 = load i32, i32* %87, align 4, !dbg !8387
  %89 = load i16, i16* %14, align 2, !dbg !8388
  %90 = zext i16 %89 to i32, !dbg !8388
  %91 = add nsw i32 %90, 1, !dbg !8389
  %92 = load i32, i32* %12, align 4, !dbg !8390
  %93 = add i32 %92, 1, !dbg !8391
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %85, i32 %88, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.368, i64 0, i64 0), i32 %91, i32 %93), !dbg !8392
  br label %94, !dbg !8393

94:                                               ; preds = %82, %77, %57
  store i32 0, i32* %23, align 4, !dbg !8394
  br label %95, !dbg !8396

95:                                               ; preds = %215, %94
  %96 = load i32, i32* %23, align 4, !dbg !8397
  %97 = load i32, i32* %12, align 4, !dbg !8399
  %98 = icmp ult i32 %96, %97, !dbg !8400
  br i1 %98, label %99, label %218, !dbg !8401

99:                                               ; preds = %95
  %100 = load i32, i32* %23, align 4, !dbg !8402
  %101 = load i32, i32* %21, align 4, !dbg !8404
  %102 = mul i32 %100, %101, !dbg !8405
  store i32 %102, i32* %22, align 4, !dbg !8406
  %103 = load i32, i32* %23, align 4, !dbg !8407
  %104 = load i32, i32* %25, align 4, !dbg !8408
  %105 = mul i32 %103, %104, !dbg !8409
  store i32 %105, i32* %26, align 4, !dbg !8410
  %106 = load i8*, i8** %11, align 8, !dbg !8411
  %107 = load i32, i32* %22, align 4, !dbg !8412
  %108 = zext i32 %107 to i64, !dbg !8413
  %109 = getelementptr inbounds i8, i8* %106, i64 %108, !dbg !8413
  store i8* %109, i8** %28, align 8, !dbg !8414
  %110 = load i8*, i8** %10, align 8, !dbg !8415
  %111 = load i32, i32* %26, align 4, !dbg !8416
  %112 = zext i32 %111 to i64, !dbg !8417
  %113 = getelementptr inbounds i8, i8* %110, i64 %112, !dbg !8417
  store i8* %113, i8** %29, align 8, !dbg !8418
  %114 = load i32, i32* %18, align 4, !dbg !8419
  switch i32 %114, label %190 [
    i32 0, label %115
    i32 1, label %129
    i32 2, label %162
    i32 3, label %176
    i32 4, label %176
    i32 5, label %176
  ], !dbg !8420

115:                                              ; preds = %99
  %116 = load i8*, i8** %28, align 8, !dbg !8421
  %117 = load i8*, i8** %29, align 8, !dbg !8424
  %118 = load i32, i32* %13, align 4, !dbg !8425
  %119 = load i16, i16* %14, align 2, !dbg !8426
  %120 = load i16, i16* %15, align 2, !dbg !8427
  %121 = load i16, i16* %16, align 2, !dbg !8428
  %122 = load i16, i16* %27, align 2, !dbg !8429
  %123 = load i32, i32* %24, align 4, !dbg !8430
  %124 = load i32, i32* %13, align 4, !dbg !8431
  %125 = call i32 @extractContigSamplesBytes(i8* %116, i8* %117, i32 %118, i16 zeroext %119, i16 zeroext %120, i16 zeroext %121, i16 zeroext %122, i32 %123, i32 %124), !dbg !8432
  %126 = icmp ne i32 %125, 0, !dbg !8432
  br i1 %126, label %127, label %128, !dbg !8433

127:                                              ; preds = %115
  store i32 1, i32* %9, align 4, !dbg !8434
  br label %219, !dbg !8434

128:                                              ; preds = %115
  br label %193, !dbg !8435

129:                                              ; preds = %99
  %130 = load i16, i16* %16, align 2, !dbg !8436
  %131 = zext i16 %130 to i32, !dbg !8436
  %132 = icmp eq i32 %131, 1, !dbg !8438
  br i1 %132, label %133, label %147, !dbg !8439

133:                                              ; preds = %129
  %134 = load i8*, i8** %28, align 8, !dbg !8440
  %135 = load i8*, i8** %29, align 8, !dbg !8443
  %136 = load i32, i32* %13, align 4, !dbg !8444
  %137 = load i16, i16* %14, align 2, !dbg !8445
  %138 = load i16, i16* %15, align 2, !dbg !8446
  %139 = load i16, i16* %16, align 2, !dbg !8447
  %140 = load i16, i16* %27, align 2, !dbg !8448
  %141 = load i32, i32* %24, align 4, !dbg !8449
  %142 = load i32, i32* %13, align 4, !dbg !8450
  %143 = call i32 @extractContigSamples8bits(i8* %134, i8* %135, i32 %136, i16 zeroext %137, i16 zeroext %138, i16 zeroext %139, i16 zeroext %140, i32 %141, i32 %142), !dbg !8451
  %144 = icmp ne i32 %143, 0, !dbg !8451
  br i1 %144, label %145, label %146, !dbg !8452

145:                                              ; preds = %133
  store i32 1, i32* %9, align 4, !dbg !8453
  br label %219, !dbg !8453

146:                                              ; preds = %133
  br label %193, !dbg !8454

147:                                              ; preds = %129
  %148 = load i8*, i8** %28, align 8, !dbg !8455
  %149 = load i8*, i8** %29, align 8, !dbg !8457
  %150 = load i32, i32* %13, align 4, !dbg !8458
  %151 = load i16, i16* %14, align 2, !dbg !8459
  %152 = load i16, i16* %15, align 2, !dbg !8460
  %153 = load i16, i16* %16, align 2, !dbg !8461
  %154 = load i16, i16* %27, align 2, !dbg !8462
  %155 = load i32, i32* %24, align 4, !dbg !8463
  %156 = load i32, i32* %13, align 4, !dbg !8464
  %157 = call i32 @extractContigSamples16bits(i8* %148, i8* %149, i32 %150, i16 zeroext %151, i16 zeroext %152, i16 zeroext %153, i16 zeroext %154, i32 %155, i32 %156), !dbg !8465
  %158 = icmp ne i32 %157, 0, !dbg !8465
  br i1 %158, label %159, label %160, !dbg !8466

159:                                              ; preds = %147
  store i32 1, i32* %9, align 4, !dbg !8467
  br label %219, !dbg !8467

160:                                              ; preds = %147
  br label %161

161:                                              ; preds = %160
  br label %193, !dbg !8468

162:                                              ; preds = %99
  %163 = load i8*, i8** %28, align 8, !dbg !8469
  %164 = load i8*, i8** %29, align 8, !dbg !8471
  %165 = load i32, i32* %13, align 4, !dbg !8472
  %166 = load i16, i16* %14, align 2, !dbg !8473
  %167 = load i16, i16* %15, align 2, !dbg !8474
  %168 = load i16, i16* %16, align 2, !dbg !8475
  %169 = load i16, i16* %27, align 2, !dbg !8476
  %170 = load i32, i32* %24, align 4, !dbg !8477
  %171 = load i32, i32* %13, align 4, !dbg !8478
  %172 = call i32 @extractContigSamples24bits(i8* %163, i8* %164, i32 %165, i16 zeroext %166, i16 zeroext %167, i16 zeroext %168, i16 zeroext %169, i32 %170, i32 %171), !dbg !8479
  %173 = icmp ne i32 %172, 0, !dbg !8479
  br i1 %173, label %174, label %175, !dbg !8480

174:                                              ; preds = %162
  store i32 1, i32* %9, align 4, !dbg !8481
  br label %219, !dbg !8481

175:                                              ; preds = %162
  br label %193, !dbg !8482

176:                                              ; preds = %99, %99, %99
  %177 = load i8*, i8** %28, align 8, !dbg !8483
  %178 = load i8*, i8** %29, align 8, !dbg !8485
  %179 = load i32, i32* %13, align 4, !dbg !8486
  %180 = load i16, i16* %14, align 2, !dbg !8487
  %181 = load i16, i16* %15, align 2, !dbg !8488
  %182 = load i16, i16* %16, align 2, !dbg !8489
  %183 = load i16, i16* %27, align 2, !dbg !8490
  %184 = load i32, i32* %24, align 4, !dbg !8491
  %185 = load i32, i32* %13, align 4, !dbg !8492
  %186 = call i32 @extractContigSamples32bits(i8* %177, i8* %178, i32 %179, i16 zeroext %180, i16 zeroext %181, i16 zeroext %182, i16 zeroext %183, i32 %184, i32 %185), !dbg !8493
  %187 = icmp ne i32 %186, 0, !dbg !8493
  br i1 %187, label %188, label %189, !dbg !8494

188:                                              ; preds = %176
  store i32 1, i32* %9, align 4, !dbg !8495
  br label %219, !dbg !8495

189:                                              ; preds = %176
  br label %193, !dbg !8496

190:                                              ; preds = %99
  %191 = load i16, i16* %16, align 2, !dbg !8497
  %192 = zext i16 %191 to i32, !dbg !8497
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.267, i64 0, i64 0), i32 %192), !dbg !8498
  store i32 1, i32* %9, align 4, !dbg !8499
  br label %219, !dbg !8499

193:                                              ; preds = %189, %175, %161, %146, %128
  %194 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8500
  %195 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %194, i32 0, i32 7, !dbg !8502
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** %195, align 8, !dbg !8502
  %197 = icmp ne %struct._IO_FILE* %196, null, !dbg !8503
  br i1 %197, label %198, label %214, !dbg !8504

198:                                              ; preds = %193
  %199 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8505
  %200 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %199, i32 0, i32 2, !dbg !8506
  %201 = load i32, i32* %200, align 8, !dbg !8506
  %202 = icmp eq i32 %201, 4, !dbg !8507
  br i1 %202, label %203, label %214, !dbg !8508

203:                                              ; preds = %198
  %204 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8509
  %205 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %204, i32 0, i32 7, !dbg !8510
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %205, align 8, !dbg !8510
  %207 = load %struct.dump_opts*, %struct.dump_opts** %17, align 8, !dbg !8511
  %208 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %207, i32 0, i32 1, !dbg !8512
  %209 = load i32, i32* %208, align 4, !dbg !8512
  %210 = load i32, i32* %25, align 4, !dbg !8513
  %211 = load i32, i32* %23, align 4, !dbg !8514
  %212 = load i8*, i8** %29, align 8, !dbg !8515
  %213 = call i32 @dump_buffer(%struct._IO_FILE* %206, i32 %209, i32 1, i32 %210, i32 %211, i8* %212), !dbg !8516
  br label %214, !dbg !8516

214:                                              ; preds = %203, %198, %193
  br label %215, !dbg !8517

215:                                              ; preds = %214
  %216 = load i32, i32* %23, align 4, !dbg !8518
  %217 = add i32 %216, 1, !dbg !8518
  store i32 %217, i32* %23, align 4, !dbg !8518
  br label %95, !dbg !8519, !llvm.loop !8520

218:                                              ; preds = %95
  store i32 0, i32* %9, align 4, !dbg !8522
  br label %219, !dbg !8522

219:                                              ; preds = %218, %190, %188, %174, %159, %145, %127
  %220 = load i32, i32* %9, align 4, !dbg !8523
  ret i32 %220, !dbg !8523
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dump_buffer(%struct._IO_FILE*, i32, i32, i32, i32, i8*) #0 !dbg !8524 {
  %7 = alloca i32, align 4
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %8, metadata !8527, metadata !DIExpression()), !dbg !8528
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8529, metadata !DIExpression()), !dbg !8530
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8531, metadata !DIExpression()), !dbg !8532
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8533, metadata !DIExpression()), !dbg !8534
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8535, metadata !DIExpression()), !dbg !8536
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !8537, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8541, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8543, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.declare(metadata i8** %17, metadata !8545, metadata !DIExpression()), !dbg !8546
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !dbg !8547
  %19 = icmp eq %struct._IO_FILE* %18, null, !dbg !8549
  br i1 %19, label %20, label %21, !dbg !8550

20:                                               ; preds = %6
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)), !dbg !8551
  store i32 1, i32* %7, align 4, !dbg !8553
  br label %77, !dbg !8553

21:                                               ; preds = %6
  store i32 0, i32* %16, align 4, !dbg !8554
  br label %22, !dbg !8556

22:                                               ; preds = %73, %21
  %23 = load i32, i32* %16, align 4, !dbg !8557
  %24 = load i32, i32* %10, align 4, !dbg !8559
  %25 = icmp ult i32 %23, %24, !dbg !8560
  br i1 %25, label %26, label %76, !dbg !8561

26:                                               ; preds = %22
  %27 = load i8*, i8** %13, align 8, !dbg !8562
  %28 = load i32, i32* %16, align 4, !dbg !8564
  %29 = load i32, i32* %11, align 4, !dbg !8565
  %30 = mul i32 %28, %29, !dbg !8566
  %31 = zext i32 %30 to i64, !dbg !8567
  %32 = getelementptr inbounds i8, i8* %27, i64 %31, !dbg !8567
  store i8* %32, i8** %17, align 8, !dbg !8568
  %33 = load i32, i32* %9, align 4, !dbg !8569
  %34 = icmp eq i32 %33, 1, !dbg !8571
  br i1 %34, label %35, label %46, !dbg !8572

35:                                               ; preds = %26
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !dbg !8573
  %37 = load i32, i32* %9, align 4, !dbg !8574
  %38 = load i32, i32* %12, align 4, !dbg !8575
  %39 = load i32, i32* %16, align 4, !dbg !8576
  %40 = add i32 %38, %39, !dbg !8577
  %41 = add i32 %40, 1, !dbg !8578
  %42 = load i32, i32* %11, align 4, !dbg !8579
  %43 = load i32, i32* %12, align 4, !dbg !8580
  %44 = load i32, i32* %11, align 4, !dbg !8581
  %45 = mul i32 %43, %44, !dbg !8582
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %36, i32 %37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.324, i64 0, i64 0), i32 %41, i32 %42, i32 %45), !dbg !8583
  br label %46, !dbg !8583

46:                                               ; preds = %35, %26
  store i32 0, i32* %14, align 4, !dbg !8584
  %47 = load i32, i32* %11, align 4, !dbg !8586
  store i32 %47, i32* %15, align 4, !dbg !8587
  br label %48, !dbg !8588

48:                                               ; preds = %56, %46
  %49 = load i32, i32* %15, align 4, !dbg !8589
  %50 = icmp sge i32 %49, 10, !dbg !8591
  br i1 %50, label %51, label %63, !dbg !8592

51:                                               ; preds = %48
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !dbg !8593
  %53 = load i32, i32* %9, align 4, !dbg !8594
  %54 = load i8*, i8** %17, align 8, !dbg !8595
  %55 = call i32 @dump_data(%struct._IO_FILE* %52, i32 %53, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* %54, i32 10), !dbg !8596
  br label %56, !dbg !8596

56:                                               ; preds = %51
  %57 = load i32, i32* %14, align 4, !dbg !8597
  %58 = add nsw i32 %57, 10, !dbg !8597
  store i32 %58, i32* %14, align 4, !dbg !8597
  %59 = load i32, i32* %15, align 4, !dbg !8598
  %60 = sub nsw i32 %59, 10, !dbg !8598
  store i32 %60, i32* %15, align 4, !dbg !8598
  %61 = load i8*, i8** %17, align 8, !dbg !8599
  %62 = getelementptr inbounds i8, i8* %61, i64 10, !dbg !8599
  store i8* %62, i8** %17, align 8, !dbg !8599
  br label %48, !dbg !8600, !llvm.loop !8601

63:                                               ; preds = %48
  %64 = load i32, i32* %15, align 4, !dbg !8603
  %65 = icmp sgt i32 %64, 0, !dbg !8605
  br i1 %65, label %66, label %72, !dbg !8606

66:                                               ; preds = %63
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !dbg !8607
  %68 = load i32, i32* %9, align 4, !dbg !8608
  %69 = load i8*, i8** %17, align 8, !dbg !8609
  %70 = load i32, i32* %15, align 4, !dbg !8610
  %71 = call i32 @dump_data(%struct._IO_FILE* %67, i32 %68, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* %69, i32 %70), !dbg !8611
  br label %72, !dbg !8611

72:                                               ; preds = %66, %63
  br label %73, !dbg !8612

73:                                               ; preds = %72
  %74 = load i32, i32* %16, align 4, !dbg !8613
  %75 = add i32 %74, 1, !dbg !8613
  store i32 %75, i32* %16, align 4, !dbg !8613
  br label %22, !dbg !8614, !llvm.loop !8615

76:                                               ; preds = %22
  store i32 0, i32* %7, align 4, !dbg !8617
  br label %77, !dbg !8617

77:                                               ; preds = %76, %20
  %78 = load i32, i32* %7, align 4, !dbg !8618
  ret i32 %78, !dbg !8618
}

declare i64 @TIFFWriteEncodedStrip(%struct.tiff*, i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dump_data(%struct._IO_FILE*, i32, i8*, i8*, i32) #0 !dbg !8619 {
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [10 x i8], align 1
  %16 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !8622, metadata !DIExpression()), !dbg !8623
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8624, metadata !DIExpression()), !dbg !8625
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8626, metadata !DIExpression()), !dbg !8627
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !8628, metadata !DIExpression()), !dbg !8629
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8632, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8634, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8636, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.declare(metadata [10 x i8]* %15, metadata !8638, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.declare(metadata i8* %16, metadata !8640, metadata !DIExpression()), !dbg !8641
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8642
  %18 = icmp eq %struct._IO_FILE* %17, null, !dbg !8644
  br i1 %18, label %19, label %20, !dbg !8645

19:                                               ; preds = %5
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)), !dbg !8646
  store i32 1, i32* %6, align 4, !dbg !8648
  br label %86, !dbg !8648

20:                                               ; preds = %5
  %21 = load i32, i32* %8, align 4, !dbg !8649
  %22 = icmp eq i32 %21, 1, !dbg !8651
  br i1 %22, label %23, label %74, !dbg !8652

23:                                               ; preds = %20
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8653
  %25 = load i8*, i8** %9, align 8, !dbg !8655
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i64 0, i64 0), i8* %25), !dbg !8656
  store i32 0, i32* %14, align 4, !dbg !8657
  br label %27, !dbg !8659

27:                                               ; preds = %68, %23
  %28 = load i32, i32* %14, align 4, !dbg !8660
  %29 = load i32, i32* %11, align 4, !dbg !8662
  %30 = icmp ult i32 %28, %29, !dbg !8663
  br i1 %30, label %31, label %71, !dbg !8664

31:                                               ; preds = %27
  store i32 0, i32* %12, align 4, !dbg !8665
  store i32 7, i32* %13, align 4, !dbg !8668
  br label %32, !dbg !8669

32:                                               ; preds = %58, %31
  %33 = load i32, i32* %12, align 4, !dbg !8670
  %34 = icmp slt i32 %33, 8, !dbg !8672
  br i1 %34, label %35, label %63, !dbg !8673

35:                                               ; preds = %32
  %36 = load i8*, i8** %10, align 8, !dbg !8674
  %37 = load i32, i32* %14, align 4, !dbg !8676
  %38 = zext i32 %37 to i64, !dbg !8677
  %39 = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !8677
  %40 = load i8, i8* %39, align 1, !dbg !8678
  %41 = zext i8 %40 to i32, !dbg !8679
  %42 = load i32, i32* %13, align 4, !dbg !8680
  %43 = shl i32 1, %42, !dbg !8681
  %44 = and i32 %41, %43, !dbg !8682
  %45 = icmp ne i32 %44, 0, !dbg !8679
  %46 = zext i1 %45 to i64, !dbg !8679
  %47 = select i1 %45, i32 1, i32 0, !dbg !8679
  %48 = trunc i32 %47 to i8, !dbg !8679
  store i8 %48, i8* %16, align 1, !dbg !8683
  %49 = load i32, i32* %12, align 4, !dbg !8684
  %50 = sext i32 %49 to i64, !dbg !8685
  %51 = getelementptr inbounds [10 x i8], [10 x i8]* %15, i64 0, i64 %50, !dbg !8685
  %52 = load i8, i8* %16, align 1, !dbg !8686
  %53 = zext i8 %52 to i32, !dbg !8687
  %54 = icmp ne i32 %53, 0, !dbg !8687
  %55 = zext i1 %54 to i64, !dbg !8687
  %56 = select i1 %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0), !dbg !8687
  %57 = call i32 (i8*, i8*, ...) @sprintf(i8* %51, i8* %56) #8, !dbg !8688
  br label %58, !dbg !8689

58:                                               ; preds = %35
  %59 = load i32, i32* %12, align 4, !dbg !8690
  %60 = add nsw i32 %59, 1, !dbg !8690
  store i32 %60, i32* %12, align 4, !dbg !8690
  %61 = load i32, i32* %13, align 4, !dbg !8691
  %62 = add nsw i32 %61, -1, !dbg !8691
  store i32 %62, i32* %13, align 4, !dbg !8691
  br label %32, !dbg !8692, !llvm.loop !8693

63:                                               ; preds = %32
  %64 = getelementptr inbounds [10 x i8], [10 x i8]* %15, i64 0, i64 8, !dbg !8695
  store i8 0, i8* %64, align 1, !dbg !8696
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8697
  %66 = getelementptr inbounds [10 x i8], [10 x i8]* %15, i64 0, i64 0, !dbg !8698
  %67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.293, i64 0, i64 0), i8* %66), !dbg !8699
  br label %68, !dbg !8700

68:                                               ; preds = %63
  %69 = load i32, i32* %14, align 4, !dbg !8701
  %70 = add i32 %69, 1, !dbg !8701
  store i32 %70, i32* %14, align 4, !dbg !8701
  br label %27, !dbg !8702, !llvm.loop !8703

71:                                               ; preds = %27
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8705
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i64 0, i64 0)), !dbg !8706
  br label %85, !dbg !8707

74:                                               ; preds = %20
  %75 = load i8*, i8** %10, align 8, !dbg !8708
  %76 = load i32, i32* %11, align 4, !dbg !8711
  %77 = zext i32 %76 to i64, !dbg !8711
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !8712
  %79 = call i64 @fwrite(i8* %75, i64 1, i64 %77, %struct._IO_FILE* %78), !dbg !8713
  %80 = load i32, i32* %11, align 4, !dbg !8714
  %81 = zext i32 %80 to i64, !dbg !8714
  %82 = icmp ne i64 %79, %81, !dbg !8715
  br i1 %82, label %83, label %84, !dbg !8716

83:                                               ; preds = %74
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0)), !dbg !8717
  store i32 1, i32* %6, align 4, !dbg !8719
  br label %86, !dbg !8719

84:                                               ; preds = %74
  br label %85

85:                                               ; preds = %84, %71
  store i32 0, i32* %6, align 4, !dbg !8720
  br label %86, !dbg !8720

86:                                               ; preds = %85, %83, %19
  %87 = load i32, i32* %6, align 4, !dbg !8721
  ret i32 %87, !dbg !8721
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesBytes(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32) #0 !dbg !8722 {
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !8725, metadata !DIExpression()), !dbg !8726
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8727, metadata !DIExpression()), !dbg !8728
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8729, metadata !DIExpression()), !dbg !8730
  store i16 %3, i16* %14, align 2
  call void @llvm.dbg.declare(metadata i16* %14, metadata !8731, metadata !DIExpression()), !dbg !8732
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !8733, metadata !DIExpression()), !dbg !8734
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !8735, metadata !DIExpression()), !dbg !8736
  store i16 %6, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8739, metadata !DIExpression()), !dbg !8740
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8741, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8743, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8745, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8747, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8751, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8753, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8755, metadata !DIExpression()), !dbg !8756
  call void @llvm.dbg.declare(metadata i32* %27, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata i8** %28, metadata !8759, metadata !DIExpression()), !dbg !8760
  %30 = load i8*, i8** %11, align 8, !dbg !8761
  store i8* %30, i8** %28, align 8, !dbg !8760
  call void @llvm.dbg.declare(metadata i8** %29, metadata !8762, metadata !DIExpression()), !dbg !8763
  %31 = load i8*, i8** %12, align 8, !dbg !8764
  store i8* %31, i8** %29, align 8, !dbg !8763
  %32 = load i8*, i8** %28, align 8, !dbg !8765
  %33 = icmp eq i8* %32, null, !dbg !8767
  br i1 %33, label %37, label %34, !dbg !8768

34:                                               ; preds = %9
  %35 = load i8*, i8** %29, align 8, !dbg !8769
  %36 = icmp eq i8* %35, null, !dbg !8770
  br i1 %36, label %37, label %38, !dbg !8771

37:                                               ; preds = %34, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.309, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !8772
  store i32 1, i32* %10, align 4, !dbg !8774
  br label %174, !dbg !8774

38:                                               ; preds = %34
  %39 = load i32, i32* %18, align 4, !dbg !8775
  %40 = load i32, i32* %19, align 4, !dbg !8777
  %41 = icmp ugt i32 %39, %40, !dbg !8778
  br i1 %41, label %46, label %42, !dbg !8779

42:                                               ; preds = %38
  %43 = load i32, i32* %18, align 4, !dbg !8780
  %44 = load i32, i32* %13, align 4, !dbg !8781
  %45 = icmp ugt i32 %43, %44, !dbg !8782
  br i1 %45, label %46, label %48, !dbg !8783

46:                                               ; preds = %42, %38
  %47 = load i32, i32* %18, align 4, !dbg !8784
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.309, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %47), !dbg !8786
  store i32 0, i32* %18, align 4, !dbg !8787
  br label %48, !dbg !8788

48:                                               ; preds = %46, %42
  %49 = load i32, i32* %19, align 4, !dbg !8789
  %50 = icmp eq i32 %49, 0, !dbg !8791
  br i1 %50, label %55, label %51, !dbg !8792

51:                                               ; preds = %48
  %52 = load i32, i32* %19, align 4, !dbg !8793
  %53 = load i32, i32* %13, align 4, !dbg !8794
  %54 = icmp ugt i32 %52, %53, !dbg !8795
  br i1 %54, label %55, label %58, !dbg !8796

55:                                               ; preds = %51, %48
  %56 = load i32, i32* %19, align 4, !dbg !8797
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.309, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %56), !dbg !8799
  %57 = load i32, i32* %13, align 4, !dbg !8800
  store i32 %57, i32* %19, align 4, !dbg !8801
  br label %58, !dbg !8802

58:                                               ; preds = %55, %51
  %59 = load i16, i16* %16, align 2, !dbg !8803
  %60 = zext i16 %59 to i32, !dbg !8803
  %61 = load i32, i32* %19, align 4, !dbg !8804
  %62 = load i32, i32* %18, align 4, !dbg !8805
  %63 = sub i32 %61, %62, !dbg !8806
  %64 = mul i32 %60, %63, !dbg !8807
  %65 = load i16, i16* %17, align 2, !dbg !8808
  %66 = zext i16 %65 to i32, !dbg !8808
  %67 = mul i32 %64, %66, !dbg !8809
  %68 = udiv i32 %67, 8, !dbg !8810
  store i32 %68, i32* %24, align 4, !dbg !8811
  %69 = load i16, i16* %16, align 2, !dbg !8812
  %70 = zext i16 %69 to i32, !dbg !8812
  %71 = add nsw i32 %70, 7, !dbg !8813
  %72 = sdiv i32 %71, 8, !dbg !8814
  store i32 %72, i32* %21, align 4, !dbg !8815
  %73 = load i16, i16* %17, align 2, !dbg !8816
  %74 = zext i16 %73 to i32, !dbg !8816
  %75 = load i16, i16* %15, align 2, !dbg !8818
  %76 = zext i16 %75 to i32, !dbg !8818
  %77 = icmp eq i32 %74, %76, !dbg !8819
  br i1 %77, label %78, label %92, !dbg !8820

78:                                               ; preds = %58
  %79 = load i8*, i8** %11, align 8, !dbg !8821
  %80 = load i32, i32* %18, align 4, !dbg !8823
  %81 = load i16, i16* %15, align 2, !dbg !8824
  %82 = zext i16 %81 to i32, !dbg !8824
  %83 = mul i32 %80, %82, !dbg !8825
  %84 = load i32, i32* %21, align 4, !dbg !8826
  %85 = mul i32 %83, %84, !dbg !8827
  %86 = zext i32 %85 to i64, !dbg !8828
  %87 = getelementptr inbounds i8, i8* %79, i64 %86, !dbg !8828
  store i8* %87, i8** %28, align 8, !dbg !8829
  %88 = load i8*, i8** %29, align 8, !dbg !8830
  %89 = load i8*, i8** %28, align 8, !dbg !8831
  %90 = load i32, i32* %24, align 4, !dbg !8832
  %91 = zext i32 %90 to i64, !dbg !8832
  call void @_TIFFmemcpy(i8* %88, i8* %89, i64 %91), !dbg !8833
  br label %173, !dbg !8834

92:                                               ; preds = %58
  %93 = load i32, i32* %18, align 4, !dbg !8835
  store i32 %93, i32* %23, align 4, !dbg !8838
  br label %94, !dbg !8839

94:                                               ; preds = %169, %92
  %95 = load i32, i32* %23, align 4, !dbg !8840
  %96 = load i32, i32* %19, align 4, !dbg !8842
  %97 = icmp ult i32 %95, %96, !dbg !8843
  br i1 %97, label %98, label %172, !dbg !8844

98:                                               ; preds = %94
  %99 = load i16, i16* %14, align 2, !dbg !8845
  %100 = zext i16 %99 to i32, !dbg !8845
  store i32 %100, i32* %22, align 4, !dbg !8848
  br label %101, !dbg !8849

101:                                              ; preds = %165, %98
  %102 = load i32, i32* %22, align 4, !dbg !8850
  %103 = load i16, i16* %15, align 2, !dbg !8852
  %104 = zext i16 %103 to i32, !dbg !8852
  %105 = icmp slt i32 %102, %104, !dbg !8853
  br i1 %105, label %106, label %114, !dbg !8854

106:                                              ; preds = %101
  %107 = load i32, i32* %22, align 4, !dbg !8855
  %108 = load i16, i16* %14, align 2, !dbg !8856
  %109 = zext i16 %108 to i32, !dbg !8856
  %110 = load i16, i16* %17, align 2, !dbg !8857
  %111 = zext i16 %110 to i32, !dbg !8857
  %112 = add nsw i32 %109, %111, !dbg !8858
  %113 = icmp slt i32 %107, %112, !dbg !8859
  br label %114

114:                                              ; preds = %106, %101
  %115 = phi i1 [ false, %101 ], [ %113, %106 ], !dbg !8860
  br i1 %115, label %116, label %168, !dbg !8861

116:                                              ; preds = %114
  %117 = load i32, i32* %23, align 4, !dbg !8862
  %118 = load i16, i16* %16, align 2, !dbg !8864
  %119 = zext i16 %118 to i32, !dbg !8864
  %120 = mul i32 %117, %119, !dbg !8865
  %121 = load i16, i16* %15, align 2, !dbg !8866
  %122 = zext i16 %121 to i32, !dbg !8866
  %123 = mul i32 %120, %122, !dbg !8867
  store i32 %123, i32* %25, align 4, !dbg !8868
  %124 = load i32, i32* %22, align 4, !dbg !8869
  %125 = icmp eq i32 %124, 0, !dbg !8871
  br i1 %125, label %126, label %131, !dbg !8872

126:                                              ; preds = %116
  %127 = load i32, i32* %25, align 4, !dbg !8873
  %128 = udiv i32 %127, 8, !dbg !8875
  store i32 %128, i32* %26, align 4, !dbg !8876
  %129 = load i32, i32* %25, align 4, !dbg !8877
  %130 = urem i32 %129, 8, !dbg !8878
  store i32 %130, i32* %27, align 4, !dbg !8879
  br label %146, !dbg !8880

131:                                              ; preds = %116
  %132 = load i32, i32* %25, align 4, !dbg !8881
  %133 = load i32, i32* %22, align 4, !dbg !8883
  %134 = load i16, i16* %16, align 2, !dbg !8884
  %135 = zext i16 %134 to i32, !dbg !8884
  %136 = mul nsw i32 %133, %135, !dbg !8885
  %137 = add i32 %132, %136, !dbg !8886
  %138 = udiv i32 %137, 8, !dbg !8887
  store i32 %138, i32* %26, align 4, !dbg !8888
  %139 = load i32, i32* %25, align 4, !dbg !8889
  %140 = load i32, i32* %22, align 4, !dbg !8890
  %141 = load i16, i16* %16, align 2, !dbg !8891
  %142 = zext i16 %141 to i32, !dbg !8891
  %143 = mul nsw i32 %140, %142, !dbg !8892
  %144 = add i32 %139, %143, !dbg !8893
  %145 = urem i32 %144, 8, !dbg !8894
  store i32 %145, i32* %27, align 4, !dbg !8895
  br label %146

146:                                              ; preds = %131, %126
  %147 = load i8*, i8** %11, align 8, !dbg !8896
  %148 = load i32, i32* %26, align 4, !dbg !8897
  %149 = zext i32 %148 to i64, !dbg !8898
  %150 = getelementptr inbounds i8, i8* %147, i64 %149, !dbg !8898
  store i8* %150, i8** %28, align 8, !dbg !8899
  store i32 0, i32* %20, align 4, !dbg !8900
  br label %151, !dbg !8902

151:                                              ; preds = %161, %146
  %152 = load i32, i32* %20, align 4, !dbg !8903
  %153 = load i32, i32* %21, align 4, !dbg !8905
  %154 = icmp slt i32 %152, %153, !dbg !8906
  br i1 %154, label %155, label %164, !dbg !8907

155:                                              ; preds = %151
  %156 = load i8*, i8** %28, align 8, !dbg !8908
  %157 = getelementptr inbounds i8, i8* %156, i32 1, !dbg !8908
  store i8* %157, i8** %28, align 8, !dbg !8908
  %158 = load i8, i8* %156, align 1, !dbg !8909
  %159 = load i8*, i8** %29, align 8, !dbg !8910
  %160 = getelementptr inbounds i8, i8* %159, i32 1, !dbg !8910
  store i8* %160, i8** %29, align 8, !dbg !8910
  store i8 %158, i8* %159, align 1, !dbg !8911
  br label %161, !dbg !8912

161:                                              ; preds = %155
  %162 = load i32, i32* %20, align 4, !dbg !8913
  %163 = add nsw i32 %162, 1, !dbg !8913
  store i32 %163, i32* %20, align 4, !dbg !8913
  br label %151, !dbg !8914, !llvm.loop !8915

164:                                              ; preds = %151
  br label %165, !dbg !8917

165:                                              ; preds = %164
  %166 = load i32, i32* %22, align 4, !dbg !8918
  %167 = add nsw i32 %166, 1, !dbg !8918
  store i32 %167, i32* %22, align 4, !dbg !8918
  br label %101, !dbg !8919, !llvm.loop !8920

168:                                              ; preds = %114
  br label %169, !dbg !8922

169:                                              ; preds = %168
  %170 = load i32, i32* %23, align 4, !dbg !8923
  %171 = add i32 %170, 1, !dbg !8923
  store i32 %171, i32* %23, align 4, !dbg !8923
  br label %94, !dbg !8924, !llvm.loop !8925

172:                                              ; preds = %94
  br label %173

173:                                              ; preds = %172, %78
  store i32 0, i32* %10, align 4, !dbg !8927
  br label %174, !dbg !8927

174:                                              ; preds = %173, %37
  %175 = load i32, i32* %10, align 4, !dbg !8928
  ret i32 %175, !dbg !8928
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamples8bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32) #0 !dbg !8929 {
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !8930, metadata !DIExpression()), !dbg !8931
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8932, metadata !DIExpression()), !dbg !8933
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8934, metadata !DIExpression()), !dbg !8935
  store i16 %3, i16* %14, align 2
  call void @llvm.dbg.declare(metadata i16* %14, metadata !8936, metadata !DIExpression()), !dbg !8937
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !8940, metadata !DIExpression()), !dbg !8941
  store i16 %6, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !8942, metadata !DIExpression()), !dbg !8943
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8944, metadata !DIExpression()), !dbg !8945
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8946, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8948, metadata !DIExpression()), !dbg !8949
  store i32 0, i32* %20, align 4, !dbg !8949
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8950, metadata !DIExpression()), !dbg !8951
  store i32 0, i32* %21, align 4, !dbg !8951
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8952, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8954, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8956, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8958, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.declare(metadata i8* %26, metadata !8960, metadata !DIExpression()), !dbg !8961
  store i8 0, i8* %26, align 1, !dbg !8961
  call void @llvm.dbg.declare(metadata i8* %27, metadata !8962, metadata !DIExpression()), !dbg !8963
  store i8 0, i8* %27, align 1, !dbg !8963
  call void @llvm.dbg.declare(metadata i8* %28, metadata !8964, metadata !DIExpression()), !dbg !8965
  store i8 0, i8* %28, align 1, !dbg !8965
  call void @llvm.dbg.declare(metadata i8* %29, metadata !8966, metadata !DIExpression()), !dbg !8967
  store i8 0, i8* %29, align 1, !dbg !8967
  call void @llvm.dbg.declare(metadata i8** %30, metadata !8968, metadata !DIExpression()), !dbg !8969
  %32 = load i8*, i8** %11, align 8, !dbg !8970
  store i8* %32, i8** %30, align 8, !dbg !8969
  call void @llvm.dbg.declare(metadata i8** %31, metadata !8971, metadata !DIExpression()), !dbg !8972
  %33 = load i8*, i8** %12, align 8, !dbg !8973
  store i8* %33, i8** %31, align 8, !dbg !8972
  %34 = load i8*, i8** %30, align 8, !dbg !8974
  %35 = icmp eq i8* %34, null, !dbg !8976
  br i1 %35, label %39, label %36, !dbg !8977

36:                                               ; preds = %9
  %37 = load i8*, i8** %31, align 8, !dbg !8978
  %38 = icmp eq i8* %37, null, !dbg !8979
  br i1 %38, label %39, label %40, !dbg !8980

39:                                               ; preds = %36, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.369, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !8981
  store i32 1, i32* %10, align 4, !dbg !8983
  br label %190, !dbg !8983

40:                                               ; preds = %36
  %41 = load i32, i32* %18, align 4, !dbg !8984
  %42 = load i32, i32* %19, align 4, !dbg !8986
  %43 = icmp ugt i32 %41, %42, !dbg !8987
  br i1 %43, label %48, label %44, !dbg !8988

44:                                               ; preds = %40
  %45 = load i32, i32* %18, align 4, !dbg !8989
  %46 = load i32, i32* %13, align 4, !dbg !8990
  %47 = icmp ugt i32 %45, %46, !dbg !8991
  br i1 %47, label %48, label %50, !dbg !8992

48:                                               ; preds = %44, %40
  %49 = load i32, i32* %18, align 4, !dbg !8993
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.369, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %49), !dbg !8995
  store i32 0, i32* %18, align 4, !dbg !8996
  br label %50, !dbg !8997

50:                                               ; preds = %48, %44
  %51 = load i32, i32* %19, align 4, !dbg !8998
  %52 = icmp eq i32 %51, 0, !dbg !9000
  br i1 %52, label %57, label %53, !dbg !9001

53:                                               ; preds = %50
  %54 = load i32, i32* %19, align 4, !dbg !9002
  %55 = load i32, i32* %13, align 4, !dbg !9003
  %56 = icmp ugt i32 %54, %55, !dbg !9004
  br i1 %56, label %57, label %60, !dbg !9005

57:                                               ; preds = %53, %50
  %58 = load i32, i32* %19, align 4, !dbg !9006
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.369, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %58), !dbg !9008
  %59 = load i32, i32* %13, align 4, !dbg !9009
  store i32 %59, i32* %19, align 4, !dbg !9010
  br label %60, !dbg !9011

60:                                               ; preds = %57, %53
  store i32 0, i32* %20, align 4, !dbg !9012
  %61 = load i16, i16* %16, align 2, !dbg !9013
  %62 = zext i16 %61 to i32, !dbg !9013
  %63 = sub nsw i32 8, %62, !dbg !9014
  %64 = ashr i32 255, %63, !dbg !9015
  %65 = trunc i32 %64 to i8, !dbg !9016
  store i8 %65, i8* %26, align 1, !dbg !9017
  store i8 0, i8* %29, align 1, !dbg !9018
  store i8 0, i8* %28, align 1, !dbg !9019
  %66 = load i32, i32* %18, align 4, !dbg !9020
  store i32 %66, i32* %22, align 4, !dbg !9022
  br label %67, !dbg !9023

67:                                               ; preds = %169, %60
  %68 = load i32, i32* %22, align 4, !dbg !9024
  %69 = load i32, i32* %19, align 4, !dbg !9026
  %70 = icmp ult i32 %68, %69, !dbg !9027
  br i1 %70, label %71, label %172, !dbg !9028

71:                                               ; preds = %67
  %72 = load i32, i32* %22, align 4, !dbg !9029
  %73 = load i16, i16* %16, align 2, !dbg !9031
  %74 = zext i16 %73 to i32, !dbg !9031
  %75 = mul i32 %72, %74, !dbg !9032
  %76 = load i16, i16* %15, align 2, !dbg !9033
  %77 = zext i16 %76 to i32, !dbg !9033
  %78 = mul i32 %75, %77, !dbg !9034
  store i32 %78, i32* %25, align 4, !dbg !9035
  %79 = load i16, i16* %14, align 2, !dbg !9036
  %80 = zext i16 %79 to i32, !dbg !9036
  store i32 %80, i32* %21, align 4, !dbg !9038
  br label %81, !dbg !9039

81:                                               ; preds = %165, %71
  %82 = load i32, i32* %21, align 4, !dbg !9040
  %83 = load i16, i16* %15, align 2, !dbg !9042
  %84 = zext i16 %83 to i32, !dbg !9042
  %85 = icmp slt i32 %82, %84, !dbg !9043
  br i1 %85, label %86, label %94, !dbg !9044

86:                                               ; preds = %81
  %87 = load i32, i32* %21, align 4, !dbg !9045
  %88 = load i16, i16* %14, align 2, !dbg !9046
  %89 = zext i16 %88 to i32, !dbg !9046
  %90 = load i16, i16* %17, align 2, !dbg !9047
  %91 = zext i16 %90 to i32, !dbg !9047
  %92 = add nsw i32 %89, %91, !dbg !9048
  %93 = icmp slt i32 %87, %92, !dbg !9049
  br label %94

94:                                               ; preds = %86, %81
  %95 = phi i1 [ false, %81 ], [ %93, %86 ], !dbg !9050
  br i1 %95, label %96, label %168, !dbg !9051

96:                                               ; preds = %94
  %97 = load i32, i32* %21, align 4, !dbg !9052
  %98 = icmp eq i32 %97, 0, !dbg !9055
  br i1 %98, label %99, label %104, !dbg !9056

99:                                               ; preds = %96
  %100 = load i32, i32* %25, align 4, !dbg !9057
  %101 = udiv i32 %100, 8, !dbg !9059
  store i32 %101, i32* %23, align 4, !dbg !9060
  %102 = load i32, i32* %25, align 4, !dbg !9061
  %103 = urem i32 %102, 8, !dbg !9062
  store i32 %103, i32* %24, align 4, !dbg !9063
  br label %119, !dbg !9064

104:                                              ; preds = %96
  %105 = load i32, i32* %25, align 4, !dbg !9065
  %106 = load i32, i32* %21, align 4, !dbg !9067
  %107 = load i16, i16* %16, align 2, !dbg !9068
  %108 = zext i16 %107 to i32, !dbg !9068
  %109 = mul nsw i32 %106, %108, !dbg !9069
  %110 = add i32 %105, %109, !dbg !9070
  %111 = udiv i32 %110, 8, !dbg !9071
  store i32 %111, i32* %23, align 4, !dbg !9072
  %112 = load i32, i32* %25, align 4, !dbg !9073
  %113 = load i32, i32* %21, align 4, !dbg !9074
  %114 = load i16, i16* %16, align 2, !dbg !9075
  %115 = zext i16 %114 to i32, !dbg !9075
  %116 = mul nsw i32 %113, %115, !dbg !9076
  %117 = add i32 %112, %116, !dbg !9077
  %118 = urem i32 %117, 8, !dbg !9078
  store i32 %118, i32* %24, align 4, !dbg !9079
  br label %119

119:                                              ; preds = %104, %99
  %120 = load i8*, i8** %11, align 8, !dbg !9080
  %121 = load i32, i32* %23, align 4, !dbg !9081
  %122 = zext i32 %121 to i64, !dbg !9082
  %123 = getelementptr inbounds i8, i8* %120, i64 %122, !dbg !9082
  store i8* %123, i8** %30, align 8, !dbg !9083
  %124 = load i8, i8* %26, align 1, !dbg !9084
  %125 = zext i8 %124 to i32, !dbg !9084
  %126 = load i32, i32* %24, align 4, !dbg !9085
  %127 = sub i32 8, %126, !dbg !9086
  %128 = load i16, i16* %16, align 2, !dbg !9087
  %129 = zext i16 %128 to i32, !dbg !9087
  %130 = sub i32 %127, %129, !dbg !9088
  %131 = shl i32 %125, %130, !dbg !9089
  %132 = trunc i32 %131 to i8, !dbg !9084
  store i8 %132, i8* %27, align 1, !dbg !9090
  %133 = load i8*, i8** %30, align 8, !dbg !9091
  %134 = load i8, i8* %133, align 1, !dbg !9092
  %135 = zext i8 %134 to i32, !dbg !9093
  %136 = load i8, i8* %27, align 1, !dbg !9094
  %137 = zext i8 %136 to i32, !dbg !9094
  %138 = and i32 %135, %137, !dbg !9095
  %139 = load i32, i32* %24, align 4, !dbg !9096
  %140 = shl i32 %138, %139, !dbg !9097
  %141 = trunc i32 %140 to i8, !dbg !9098
  store i8 %141, i8* %28, align 1, !dbg !9099
  %142 = load i32, i32* %20, align 4, !dbg !9100
  %143 = icmp sge i32 %142, 8, !dbg !9102
  br i1 %143, label %144, label %151, !dbg !9103

144:                                              ; preds = %119
  %145 = load i8, i8* %29, align 1, !dbg !9104
  %146 = load i8*, i8** %31, align 8, !dbg !9106
  %147 = getelementptr inbounds i8, i8* %146, i32 1, !dbg !9106
  store i8* %147, i8** %31, align 8, !dbg !9106
  store i8 %145, i8* %146, align 1, !dbg !9107
  %148 = load i8, i8* %28, align 1, !dbg !9108
  store i8 %148, i8* %29, align 1, !dbg !9109
  %149 = load i32, i32* %20, align 4, !dbg !9110
  %150 = sub nsw i32 %149, 8, !dbg !9110
  store i32 %150, i32* %20, align 4, !dbg !9110
  br label %160, !dbg !9111

151:                                              ; preds = %119
  %152 = load i8, i8* %29, align 1, !dbg !9112
  %153 = zext i8 %152 to i32, !dbg !9112
  %154 = load i8, i8* %28, align 1, !dbg !9113
  %155 = zext i8 %154 to i32, !dbg !9113
  %156 = load i32, i32* %20, align 4, !dbg !9114
  %157 = ashr i32 %155, %156, !dbg !9115
  %158 = or i32 %153, %157, !dbg !9116
  %159 = trunc i32 %158 to i8, !dbg !9117
  store i8 %159, i8* %29, align 1, !dbg !9118
  br label %160

160:                                              ; preds = %151, %144
  %161 = load i16, i16* %16, align 2, !dbg !9119
  %162 = zext i16 %161 to i32, !dbg !9119
  %163 = load i32, i32* %20, align 4, !dbg !9120
  %164 = add nsw i32 %163, %162, !dbg !9120
  store i32 %164, i32* %20, align 4, !dbg !9120
  br label %165, !dbg !9121

165:                                              ; preds = %160
  %166 = load i32, i32* %21, align 4, !dbg !9122
  %167 = add nsw i32 %166, 1, !dbg !9122
  store i32 %167, i32* %21, align 4, !dbg !9122
  br label %81, !dbg !9123, !llvm.loop !9124

168:                                              ; preds = %94
  br label %169, !dbg !9126

169:                                              ; preds = %168
  %170 = load i32, i32* %22, align 4, !dbg !9127
  %171 = add i32 %170, 1, !dbg !9127
  store i32 %171, i32* %22, align 4, !dbg !9127
  br label %67, !dbg !9128, !llvm.loop !9129

172:                                              ; preds = %67
  br label %173, !dbg !9131

173:                                              ; preds = %176, %172
  %174 = load i32, i32* %20, align 4, !dbg !9132
  %175 = icmp sgt i32 %174, 0, !dbg !9133
  br i1 %175, label %176, label %189, !dbg !9131

176:                                              ; preds = %173
  %177 = load i8, i8* %29, align 1, !dbg !9134
  %178 = zext i8 %177 to i32, !dbg !9134
  %179 = load i32, i32* %20, align 4, !dbg !9136
  %180 = sub nsw i32 8, %179, !dbg !9137
  %181 = shl i32 255, %180, !dbg !9138
  %182 = and i32 %178, %181, !dbg !9139
  %183 = trunc i32 %182 to i8, !dbg !9140
  store i8 %183, i8* %28, align 1, !dbg !9141
  %184 = load i8, i8* %28, align 1, !dbg !9142
  %185 = load i8*, i8** %31, align 8, !dbg !9143
  %186 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !9143
  store i8* %186, i8** %31, align 8, !dbg !9143
  store i8 %184, i8* %185, align 1, !dbg !9144
  %187 = load i32, i32* %20, align 4, !dbg !9145
  %188 = sub nsw i32 %187, 8, !dbg !9145
  store i32 %188, i32* %20, align 4, !dbg !9145
  br label %173, !dbg !9131, !llvm.loop !9146

189:                                              ; preds = %173
  store i32 0, i32* %10, align 4, !dbg !9148
  br label %190, !dbg !9148

190:                                              ; preds = %189, %39
  %191 = load i32, i32* %10, align 4, !dbg !9149
  ret i32 %191, !dbg !9149
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamples16bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32) #0 !dbg !9150 {
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i16, align 2
  %28 = alloca i16, align 2
  %29 = alloca i16, align 2
  %30 = alloca i8, align 1
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !9151, metadata !DIExpression()), !dbg !9152
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9153, metadata !DIExpression()), !dbg !9154
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9155, metadata !DIExpression()), !dbg !9156
  store i16 %3, i16* %14, align 2
  call void @llvm.dbg.declare(metadata i16* %14, metadata !9157, metadata !DIExpression()), !dbg !9158
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !9159, metadata !DIExpression()), !dbg !9160
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !9161, metadata !DIExpression()), !dbg !9162
  store i16 %6, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !9163, metadata !DIExpression()), !dbg !9164
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9165, metadata !DIExpression()), !dbg !9166
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9167, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9169, metadata !DIExpression()), !dbg !9170
  store i32 0, i32* %20, align 4, !dbg !9170
  call void @llvm.dbg.declare(metadata i32* %21, metadata !9171, metadata !DIExpression()), !dbg !9172
  store i32 0, i32* %21, align 4, !dbg !9172
  call void @llvm.dbg.declare(metadata i32* %22, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %23, metadata !9175, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9177, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9179, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.declare(metadata i16* %26, metadata !9181, metadata !DIExpression()), !dbg !9182
  store i16 0, i16* %26, align 2, !dbg !9182
  call void @llvm.dbg.declare(metadata i16* %27, metadata !9183, metadata !DIExpression()), !dbg !9184
  store i16 0, i16* %27, align 2, !dbg !9184
  call void @llvm.dbg.declare(metadata i16* %28, metadata !9185, metadata !DIExpression()), !dbg !9186
  store i16 0, i16* %28, align 2, !dbg !9186
  call void @llvm.dbg.declare(metadata i16* %29, metadata !9187, metadata !DIExpression()), !dbg !9188
  store i16 0, i16* %29, align 2, !dbg !9188
  call void @llvm.dbg.declare(metadata i8* %30, metadata !9189, metadata !DIExpression()), !dbg !9190
  store i8 0, i8* %30, align 1, !dbg !9190
  call void @llvm.dbg.declare(metadata i8** %31, metadata !9191, metadata !DIExpression()), !dbg !9192
  %33 = load i8*, i8** %11, align 8, !dbg !9193
  store i8* %33, i8** %31, align 8, !dbg !9192
  call void @llvm.dbg.declare(metadata i8** %32, metadata !9194, metadata !DIExpression()), !dbg !9195
  %34 = load i8*, i8** %12, align 8, !dbg !9196
  store i8* %34, i8** %32, align 8, !dbg !9195
  %35 = load i8*, i8** %31, align 8, !dbg !9197
  %36 = icmp eq i8* %35, null, !dbg !9199
  br i1 %36, label %40, label %37, !dbg !9200

37:                                               ; preds = %9
  %38 = load i8*, i8** %32, align 8, !dbg !9201
  %39 = icmp eq i8* %38, null, !dbg !9202
  br i1 %39, label %40, label %41, !dbg !9203

40:                                               ; preds = %37, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.370, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !9204
  store i32 1, i32* %10, align 4, !dbg !9206
  br label %226, !dbg !9206

41:                                               ; preds = %37
  %42 = load i32, i32* %18, align 4, !dbg !9207
  %43 = load i32, i32* %19, align 4, !dbg !9209
  %44 = icmp ugt i32 %42, %43, !dbg !9210
  br i1 %44, label %49, label %45, !dbg !9211

45:                                               ; preds = %41
  %46 = load i32, i32* %18, align 4, !dbg !9212
  %47 = load i32, i32* %13, align 4, !dbg !9213
  %48 = icmp ugt i32 %46, %47, !dbg !9214
  br i1 %48, label %49, label %51, !dbg !9215

49:                                               ; preds = %45, %41
  %50 = load i32, i32* %18, align 4, !dbg !9216
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.370, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %50), !dbg !9218
  store i32 0, i32* %18, align 4, !dbg !9219
  br label %51, !dbg !9220

51:                                               ; preds = %49, %45
  %52 = load i32, i32* %19, align 4, !dbg !9221
  %53 = icmp eq i32 %52, 0, !dbg !9223
  br i1 %53, label %58, label %54, !dbg !9224

54:                                               ; preds = %51
  %55 = load i32, i32* %19, align 4, !dbg !9225
  %56 = load i32, i32* %13, align 4, !dbg !9226
  %57 = icmp ugt i32 %55, %56, !dbg !9227
  br i1 %57, label %58, label %61, !dbg !9228

58:                                               ; preds = %54, %51
  %59 = load i32, i32* %19, align 4, !dbg !9229
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.370, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %59), !dbg !9231
  %60 = load i32, i32* %13, align 4, !dbg !9232
  store i32 %60, i32* %19, align 4, !dbg !9233
  br label %61, !dbg !9234

61:                                               ; preds = %58, %54
  store i32 0, i32* %20, align 4, !dbg !9235
  %62 = load i16, i16* %16, align 2, !dbg !9236
  %63 = zext i16 %62 to i32, !dbg !9236
  %64 = sub nsw i32 16, %63, !dbg !9237
  %65 = ashr i32 65535, %64, !dbg !9238
  %66 = trunc i32 %65 to i16, !dbg !9239
  store i16 %66, i16* %26, align 2, !dbg !9240
  %67 = load i32, i32* %18, align 4, !dbg !9241
  store i32 %67, i32* %22, align 4, !dbg !9243
  br label %68, !dbg !9244

68:                                               ; preds = %208, %61
  %69 = load i32, i32* %22, align 4, !dbg !9245
  %70 = load i32, i32* %19, align 4, !dbg !9247
  %71 = icmp ult i32 %69, %70, !dbg !9248
  br i1 %71, label %72, label %211, !dbg !9249

72:                                               ; preds = %68
  %73 = load i32, i32* %22, align 4, !dbg !9250
  %74 = load i16, i16* %16, align 2, !dbg !9252
  %75 = zext i16 %74 to i32, !dbg !9252
  %76 = mul i32 %73, %75, !dbg !9253
  %77 = load i16, i16* %15, align 2, !dbg !9254
  %78 = zext i16 %77 to i32, !dbg !9254
  %79 = mul i32 %76, %78, !dbg !9255
  store i32 %79, i32* %25, align 4, !dbg !9256
  %80 = load i16, i16* %14, align 2, !dbg !9257
  %81 = zext i16 %80 to i32, !dbg !9257
  store i32 %81, i32* %21, align 4, !dbg !9259
  br label %82, !dbg !9260

82:                                               ; preds = %204, %72
  %83 = load i32, i32* %21, align 4, !dbg !9261
  %84 = load i16, i16* %15, align 2, !dbg !9263
  %85 = zext i16 %84 to i32, !dbg !9263
  %86 = icmp slt i32 %83, %85, !dbg !9264
  br i1 %86, label %87, label %95, !dbg !9265

87:                                               ; preds = %82
  %88 = load i32, i32* %21, align 4, !dbg !9266
  %89 = load i16, i16* %14, align 2, !dbg !9267
  %90 = zext i16 %89 to i32, !dbg !9267
  %91 = load i16, i16* %17, align 2, !dbg !9268
  %92 = zext i16 %91 to i32, !dbg !9268
  %93 = add nsw i32 %90, %92, !dbg !9269
  %94 = icmp slt i32 %88, %93, !dbg !9270
  br label %95

95:                                               ; preds = %87, %82
  %96 = phi i1 [ false, %82 ], [ %94, %87 ], !dbg !9271
  br i1 %96, label %97, label %207, !dbg !9272

97:                                               ; preds = %95
  %98 = load i32, i32* %21, align 4, !dbg !9273
  %99 = icmp eq i32 %98, 0, !dbg !9276
  br i1 %99, label %100, label %105, !dbg !9277

100:                                              ; preds = %97
  %101 = load i32, i32* %25, align 4, !dbg !9278
  %102 = udiv i32 %101, 8, !dbg !9280
  store i32 %102, i32* %23, align 4, !dbg !9281
  %103 = load i32, i32* %25, align 4, !dbg !9282
  %104 = urem i32 %103, 8, !dbg !9283
  store i32 %104, i32* %24, align 4, !dbg !9284
  br label %120, !dbg !9285

105:                                              ; preds = %97
  %106 = load i32, i32* %25, align 4, !dbg !9286
  %107 = load i32, i32* %21, align 4, !dbg !9288
  %108 = load i16, i16* %16, align 2, !dbg !9289
  %109 = zext i16 %108 to i32, !dbg !9289
  %110 = mul nsw i32 %107, %109, !dbg !9290
  %111 = add i32 %106, %110, !dbg !9291
  %112 = udiv i32 %111, 8, !dbg !9292
  store i32 %112, i32* %23, align 4, !dbg !9293
  %113 = load i32, i32* %25, align 4, !dbg !9294
  %114 = load i32, i32* %21, align 4, !dbg !9295
  %115 = load i16, i16* %16, align 2, !dbg !9296
  %116 = zext i16 %115 to i32, !dbg !9296
  %117 = mul nsw i32 %114, %116, !dbg !9297
  %118 = add i32 %113, %117, !dbg !9298
  %119 = urem i32 %118, 8, !dbg !9299
  store i32 %119, i32* %24, align 4, !dbg !9300
  br label %120

120:                                              ; preds = %105, %100
  %121 = load i8*, i8** %11, align 8, !dbg !9301
  %122 = load i32, i32* %23, align 4, !dbg !9302
  %123 = zext i32 %122 to i64, !dbg !9303
  %124 = getelementptr inbounds i8, i8* %121, i64 %123, !dbg !9303
  store i8* %124, i8** %31, align 8, !dbg !9304
  %125 = load i16, i16* %26, align 2, !dbg !9305
  %126 = zext i16 %125 to i32, !dbg !9305
  %127 = load i32, i32* %24, align 4, !dbg !9306
  %128 = sub i32 16, %127, !dbg !9307
  %129 = load i16, i16* %16, align 2, !dbg !9308
  %130 = zext i16 %129 to i32, !dbg !9308
  %131 = sub i32 %128, %130, !dbg !9309
  %132 = shl i32 %126, %131, !dbg !9310
  %133 = trunc i32 %132 to i16, !dbg !9305
  store i16 %133, i16* %27, align 2, !dbg !9311
  %134 = load i32, i32* @little_endian, align 4, !dbg !9312
  %135 = icmp ne i32 %134, 0, !dbg !9312
  br i1 %135, label %136, label %148, !dbg !9314

136:                                              ; preds = %120
  %137 = load i8*, i8** %31, align 8, !dbg !9315
  %138 = getelementptr inbounds i8, i8* %137, i64 0, !dbg !9315
  %139 = load i8, i8* %138, align 1, !dbg !9315
  %140 = zext i8 %139 to i32, !dbg !9315
  %141 = shl i32 %140, 8, !dbg !9316
  %142 = load i8*, i8** %31, align 8, !dbg !9317
  %143 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !9317
  %144 = load i8, i8* %143, align 1, !dbg !9317
  %145 = zext i8 %144 to i32, !dbg !9317
  %146 = or i32 %141, %145, !dbg !9318
  %147 = trunc i32 %146 to i16, !dbg !9319
  store i16 %147, i16* %28, align 2, !dbg !9320
  br label %160, !dbg !9321

148:                                              ; preds = %120
  %149 = load i8*, i8** %31, align 8, !dbg !9322
  %150 = getelementptr inbounds i8, i8* %149, i64 1, !dbg !9322
  %151 = load i8, i8* %150, align 1, !dbg !9322
  %152 = zext i8 %151 to i32, !dbg !9322
  %153 = shl i32 %152, 8, !dbg !9323
  %154 = load i8*, i8** %31, align 8, !dbg !9324
  %155 = getelementptr inbounds i8, i8* %154, i64 0, !dbg !9324
  %156 = load i8, i8* %155, align 1, !dbg !9324
  %157 = zext i8 %156 to i32, !dbg !9324
  %158 = or i32 %153, %157, !dbg !9325
  %159 = trunc i32 %158 to i16, !dbg !9326
  store i16 %159, i16* %28, align 2, !dbg !9327
  br label %160

160:                                              ; preds = %148, %136
  %161 = load i16, i16* %28, align 2, !dbg !9328
  %162 = zext i16 %161 to i32, !dbg !9328
  %163 = load i16, i16* %27, align 2, !dbg !9329
  %164 = zext i16 %163 to i32, !dbg !9329
  %165 = and i32 %162, %164, !dbg !9330
  %166 = load i32, i32* %24, align 4, !dbg !9331
  %167 = shl i32 %165, %166, !dbg !9332
  %168 = trunc i32 %167 to i16, !dbg !9333
  store i16 %168, i16* %28, align 2, !dbg !9334
  %169 = load i32, i32* %20, align 4, !dbg !9335
  %170 = icmp slt i32 %169, 8, !dbg !9337
  br i1 %170, label %171, label %180, !dbg !9338

171:                                              ; preds = %160
  store i8 0, i8* %30, align 1, !dbg !9339
  %172 = load i16, i16* %29, align 2, !dbg !9341
  %173 = zext i16 %172 to i32, !dbg !9341
  %174 = load i16, i16* %28, align 2, !dbg !9342
  %175 = zext i16 %174 to i32, !dbg !9342
  %176 = load i32, i32* %20, align 4, !dbg !9343
  %177 = ashr i32 %175, %176, !dbg !9344
  %178 = or i32 %173, %177, !dbg !9345
  %179 = trunc i32 %178 to i16, !dbg !9346
  store i16 %179, i16* %29, align 2, !dbg !9347
  br label %199, !dbg !9348

180:                                              ; preds = %160
  %181 = load i16, i16* %29, align 2, !dbg !9349
  %182 = zext i16 %181 to i32, !dbg !9349
  %183 = ashr i32 %182, 8, !dbg !9351
  %184 = trunc i32 %183 to i8, !dbg !9352
  store i8 %184, i8* %30, align 1, !dbg !9353
  %185 = load i8, i8* %30, align 1, !dbg !9354
  %186 = load i8*, i8** %32, align 8, !dbg !9355
  %187 = getelementptr inbounds i8, i8* %186, i32 1, !dbg !9355
  store i8* %187, i8** %32, align 8, !dbg !9355
  store i8 %185, i8* %186, align 1, !dbg !9356
  %188 = load i32, i32* %20, align 4, !dbg !9357
  %189 = sub nsw i32 %188, 8, !dbg !9357
  store i32 %189, i32* %20, align 4, !dbg !9357
  %190 = load i16, i16* %29, align 2, !dbg !9358
  %191 = zext i16 %190 to i32, !dbg !9358
  %192 = shl i32 %191, 8, !dbg !9359
  %193 = load i16, i16* %28, align 2, !dbg !9360
  %194 = zext i16 %193 to i32, !dbg !9360
  %195 = load i32, i32* %20, align 4, !dbg !9361
  %196 = ashr i32 %194, %195, !dbg !9362
  %197 = or i32 %192, %196, !dbg !9363
  %198 = trunc i32 %197 to i16, !dbg !9364
  store i16 %198, i16* %29, align 2, !dbg !9365
  br label %199

199:                                              ; preds = %180, %171
  %200 = load i16, i16* %16, align 2, !dbg !9366
  %201 = zext i16 %200 to i32, !dbg !9366
  %202 = load i32, i32* %20, align 4, !dbg !9367
  %203 = add nsw i32 %202, %201, !dbg !9367
  store i32 %203, i32* %20, align 4, !dbg !9367
  br label %204, !dbg !9368

204:                                              ; preds = %199
  %205 = load i32, i32* %21, align 4, !dbg !9369
  %206 = add nsw i32 %205, 1, !dbg !9369
  store i32 %206, i32* %21, align 4, !dbg !9369
  br label %82, !dbg !9370, !llvm.loop !9371

207:                                              ; preds = %95
  br label %208, !dbg !9373

208:                                              ; preds = %207
  %209 = load i32, i32* %22, align 4, !dbg !9374
  %210 = add i32 %209, 1, !dbg !9374
  store i32 %210, i32* %22, align 4, !dbg !9374
  br label %68, !dbg !9375, !llvm.loop !9376

211:                                              ; preds = %68
  br label %212, !dbg !9378

212:                                              ; preds = %215, %211
  %213 = load i32, i32* %20, align 4, !dbg !9379
  %214 = icmp sgt i32 %213, 0, !dbg !9380
  br i1 %214, label %215, label %225, !dbg !9378

215:                                              ; preds = %212
  %216 = load i16, i16* %29, align 2, !dbg !9381
  %217 = zext i16 %216 to i32, !dbg !9381
  %218 = ashr i32 %217, 8, !dbg !9383
  %219 = trunc i32 %218 to i8, !dbg !9384
  store i8 %219, i8* %30, align 1, !dbg !9385
  %220 = load i8, i8* %30, align 1, !dbg !9386
  %221 = load i8*, i8** %32, align 8, !dbg !9387
  %222 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !9387
  store i8* %222, i8** %32, align 8, !dbg !9387
  store i8 %220, i8* %221, align 1, !dbg !9388
  %223 = load i32, i32* %20, align 4, !dbg !9389
  %224 = sub nsw i32 %223, 8, !dbg !9389
  store i32 %224, i32* %20, align 4, !dbg !9389
  br label %212, !dbg !9378, !llvm.loop !9390

225:                                              ; preds = %212
  store i32 0, i32* %10, align 4, !dbg !9392
  br label %226, !dbg !9392

226:                                              ; preds = %225, %40
  %227 = load i32, i32* %10, align 4, !dbg !9393
  ret i32 %227, !dbg !9393
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamples24bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32) #0 !dbg !9394 {
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !9395, metadata !DIExpression()), !dbg !9396
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9397, metadata !DIExpression()), !dbg !9398
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9399, metadata !DIExpression()), !dbg !9400
  store i16 %3, i16* %14, align 2
  call void @llvm.dbg.declare(metadata i16* %14, metadata !9401, metadata !DIExpression()), !dbg !9402
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !9403, metadata !DIExpression()), !dbg !9404
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !9405, metadata !DIExpression()), !dbg !9406
  store i16 %6, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !9407, metadata !DIExpression()), !dbg !9408
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9409, metadata !DIExpression()), !dbg !9410
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9411, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9413, metadata !DIExpression()), !dbg !9414
  store i32 0, i32* %20, align 4, !dbg !9414
  call void @llvm.dbg.declare(metadata i32* %21, metadata !9415, metadata !DIExpression()), !dbg !9416
  store i32 0, i32* %21, align 4, !dbg !9416
  call void @llvm.dbg.declare(metadata i32* %22, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata i32* %23, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9421, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9423, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.declare(metadata i32* %26, metadata !9425, metadata !DIExpression()), !dbg !9426
  store i32 0, i32* %26, align 4, !dbg !9426
  call void @llvm.dbg.declare(metadata i32* %27, metadata !9427, metadata !DIExpression()), !dbg !9428
  store i32 0, i32* %27, align 4, !dbg !9428
  call void @llvm.dbg.declare(metadata i32* %28, metadata !9429, metadata !DIExpression()), !dbg !9430
  store i32 0, i32* %28, align 4, !dbg !9430
  call void @llvm.dbg.declare(metadata i32* %29, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i32 0, i32* %29, align 4, !dbg !9432
  call void @llvm.dbg.declare(metadata i8* %30, metadata !9433, metadata !DIExpression()), !dbg !9434
  store i8 0, i8* %30, align 1, !dbg !9434
  call void @llvm.dbg.declare(metadata i8* %31, metadata !9435, metadata !DIExpression()), !dbg !9436
  store i8 0, i8* %31, align 1, !dbg !9436
  call void @llvm.dbg.declare(metadata i8** %32, metadata !9437, metadata !DIExpression()), !dbg !9438
  %34 = load i8*, i8** %11, align 8, !dbg !9439
  store i8* %34, i8** %32, align 8, !dbg !9438
  call void @llvm.dbg.declare(metadata i8** %33, metadata !9440, metadata !DIExpression()), !dbg !9441
  %35 = load i8*, i8** %12, align 8, !dbg !9442
  store i8* %35, i8** %33, align 8, !dbg !9441
  %36 = load i8*, i8** %11, align 8, !dbg !9443
  %37 = icmp eq i8* %36, null, !dbg !9445
  br i1 %37, label %41, label %38, !dbg !9446

38:                                               ; preds = %9
  %39 = load i8*, i8** %12, align 8, !dbg !9447
  %40 = icmp eq i8* %39, null, !dbg !9448
  br i1 %40, label %41, label %42, !dbg !9449

41:                                               ; preds = %38, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !9450
  store i32 1, i32* %10, align 4, !dbg !9452
  br label %244, !dbg !9452

42:                                               ; preds = %38
  %43 = load i32, i32* %18, align 4, !dbg !9453
  %44 = load i32, i32* %19, align 4, !dbg !9455
  %45 = icmp ugt i32 %43, %44, !dbg !9456
  br i1 %45, label %50, label %46, !dbg !9457

46:                                               ; preds = %42
  %47 = load i32, i32* %18, align 4, !dbg !9458
  %48 = load i32, i32* %13, align 4, !dbg !9459
  %49 = icmp ugt i32 %47, %48, !dbg !9460
  br i1 %49, label %50, label %52, !dbg !9461

50:                                               ; preds = %46, %42
  %51 = load i32, i32* %18, align 4, !dbg !9462
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %51), !dbg !9464
  store i32 0, i32* %18, align 4, !dbg !9465
  br label %52, !dbg !9466

52:                                               ; preds = %50, %46
  %53 = load i32, i32* %19, align 4, !dbg !9467
  %54 = icmp eq i32 %53, 0, !dbg !9469
  br i1 %54, label %59, label %55, !dbg !9470

55:                                               ; preds = %52
  %56 = load i32, i32* %19, align 4, !dbg !9471
  %57 = load i32, i32* %13, align 4, !dbg !9472
  %58 = icmp ugt i32 %56, %57, !dbg !9473
  br i1 %58, label %59, label %62, !dbg !9474

59:                                               ; preds = %55, %52
  %60 = load i32, i32* %19, align 4, !dbg !9475
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %60), !dbg !9477
  %61 = load i32, i32* %13, align 4, !dbg !9478
  store i32 %61, i32* %19, align 4, !dbg !9479
  br label %62, !dbg !9480

62:                                               ; preds = %59, %55
  store i32 0, i32* %20, align 4, !dbg !9481
  %63 = load i16, i16* %16, align 2, !dbg !9482
  %64 = zext i16 %63 to i32, !dbg !9482
  %65 = sub nsw i32 32, %64, !dbg !9483
  %66 = lshr i32 -1, %65, !dbg !9484
  store i32 %66, i32* %26, align 4, !dbg !9485
  %67 = load i32, i32* %18, align 4, !dbg !9486
  store i32 %67, i32* %22, align 4, !dbg !9488
  br label %68, !dbg !9489

68:                                               ; preds = %224, %62
  %69 = load i32, i32* %22, align 4, !dbg !9490
  %70 = load i32, i32* %19, align 4, !dbg !9492
  %71 = icmp ult i32 %69, %70, !dbg !9493
  br i1 %71, label %72, label %227, !dbg !9494

72:                                               ; preds = %68
  %73 = load i32, i32* %22, align 4, !dbg !9495
  %74 = load i16, i16* %16, align 2, !dbg !9497
  %75 = zext i16 %74 to i32, !dbg !9497
  %76 = mul i32 %73, %75, !dbg !9498
  %77 = load i16, i16* %15, align 2, !dbg !9499
  %78 = zext i16 %77 to i32, !dbg !9499
  %79 = mul i32 %76, %78, !dbg !9500
  store i32 %79, i32* %25, align 4, !dbg !9501
  %80 = load i16, i16* %14, align 2, !dbg !9502
  %81 = zext i16 %80 to i32, !dbg !9502
  store i32 %81, i32* %21, align 4, !dbg !9504
  br label %82, !dbg !9505

82:                                               ; preds = %220, %72
  %83 = load i32, i32* %21, align 4, !dbg !9506
  %84 = load i16, i16* %15, align 2, !dbg !9508
  %85 = zext i16 %84 to i32, !dbg !9508
  %86 = icmp slt i32 %83, %85, !dbg !9509
  br i1 %86, label %87, label %95, !dbg !9510

87:                                               ; preds = %82
  %88 = load i32, i32* %21, align 4, !dbg !9511
  %89 = load i16, i16* %14, align 2, !dbg !9512
  %90 = zext i16 %89 to i32, !dbg !9512
  %91 = load i16, i16* %17, align 2, !dbg !9513
  %92 = zext i16 %91 to i32, !dbg !9513
  %93 = add nsw i32 %90, %92, !dbg !9514
  %94 = icmp slt i32 %88, %93, !dbg !9515
  br label %95

95:                                               ; preds = %87, %82
  %96 = phi i1 [ false, %82 ], [ %94, %87 ], !dbg !9516
  br i1 %96, label %97, label %223, !dbg !9517

97:                                               ; preds = %95
  %98 = load i32, i32* %21, align 4, !dbg !9518
  %99 = icmp eq i32 %98, 0, !dbg !9521
  br i1 %99, label %100, label %105, !dbg !9522

100:                                              ; preds = %97
  %101 = load i32, i32* %25, align 4, !dbg !9523
  %102 = udiv i32 %101, 8, !dbg !9525
  store i32 %102, i32* %23, align 4, !dbg !9526
  %103 = load i32, i32* %25, align 4, !dbg !9527
  %104 = urem i32 %103, 8, !dbg !9528
  store i32 %104, i32* %24, align 4, !dbg !9529
  br label %120, !dbg !9530

105:                                              ; preds = %97
  %106 = load i32, i32* %25, align 4, !dbg !9531
  %107 = load i32, i32* %21, align 4, !dbg !9533
  %108 = load i16, i16* %16, align 2, !dbg !9534
  %109 = zext i16 %108 to i32, !dbg !9534
  %110 = mul nsw i32 %107, %109, !dbg !9535
  %111 = add i32 %106, %110, !dbg !9536
  %112 = udiv i32 %111, 8, !dbg !9537
  store i32 %112, i32* %23, align 4, !dbg !9538
  %113 = load i32, i32* %25, align 4, !dbg !9539
  %114 = load i32, i32* %21, align 4, !dbg !9540
  %115 = load i16, i16* %16, align 2, !dbg !9541
  %116 = zext i16 %115 to i32, !dbg !9541
  %117 = mul nsw i32 %114, %116, !dbg !9542
  %118 = add i32 %113, %117, !dbg !9543
  %119 = urem i32 %118, 8, !dbg !9544
  store i32 %119, i32* %24, align 4, !dbg !9545
  br label %120

120:                                              ; preds = %105, %100
  %121 = load i8*, i8** %11, align 8, !dbg !9546
  %122 = load i32, i32* %23, align 4, !dbg !9547
  %123 = zext i32 %122 to i64, !dbg !9548
  %124 = getelementptr inbounds i8, i8* %121, i64 %123, !dbg !9548
  store i8* %124, i8** %32, align 8, !dbg !9549
  %125 = load i32, i32* %26, align 4, !dbg !9550
  %126 = load i32, i32* %24, align 4, !dbg !9551
  %127 = sub i32 32, %126, !dbg !9552
  %128 = load i16, i16* %16, align 2, !dbg !9553
  %129 = zext i16 %128 to i32, !dbg !9553
  %130 = sub i32 %127, %129, !dbg !9554
  %131 = shl i32 %125, %130, !dbg !9555
  store i32 %131, i32* %27, align 4, !dbg !9556
  %132 = load i32, i32* @little_endian, align 4, !dbg !9557
  %133 = icmp ne i32 %132, 0, !dbg !9557
  br i1 %133, label %134, label %157, !dbg !9559

134:                                              ; preds = %120
  %135 = load i8*, i8** %32, align 8, !dbg !9560
  %136 = getelementptr inbounds i8, i8* %135, i64 0, !dbg !9560
  %137 = load i8, i8* %136, align 1, !dbg !9560
  %138 = zext i8 %137 to i32, !dbg !9560
  %139 = shl i32 %138, 24, !dbg !9561
  %140 = load i8*, i8** %32, align 8, !dbg !9562
  %141 = getelementptr inbounds i8, i8* %140, i64 1, !dbg !9562
  %142 = load i8, i8* %141, align 1, !dbg !9562
  %143 = zext i8 %142 to i32, !dbg !9562
  %144 = shl i32 %143, 16, !dbg !9563
  %145 = or i32 %139, %144, !dbg !9564
  %146 = load i8*, i8** %32, align 8, !dbg !9565
  %147 = getelementptr inbounds i8, i8* %146, i64 2, !dbg !9565
  %148 = load i8, i8* %147, align 1, !dbg !9565
  %149 = zext i8 %148 to i32, !dbg !9565
  %150 = shl i32 %149, 8, !dbg !9566
  %151 = or i32 %145, %150, !dbg !9567
  %152 = load i8*, i8** %32, align 8, !dbg !9568
  %153 = getelementptr inbounds i8, i8* %152, i64 3, !dbg !9568
  %154 = load i8, i8* %153, align 1, !dbg !9568
  %155 = zext i8 %154 to i32, !dbg !9568
  %156 = or i32 %151, %155, !dbg !9569
  store i32 %156, i32* %28, align 4, !dbg !9570
  br label %180, !dbg !9571

157:                                              ; preds = %120
  %158 = load i8*, i8** %32, align 8, !dbg !9572
  %159 = getelementptr inbounds i8, i8* %158, i64 3, !dbg !9572
  %160 = load i8, i8* %159, align 1, !dbg !9572
  %161 = zext i8 %160 to i32, !dbg !9572
  %162 = shl i32 %161, 24, !dbg !9573
  %163 = load i8*, i8** %32, align 8, !dbg !9574
  %164 = getelementptr inbounds i8, i8* %163, i64 2, !dbg !9574
  %165 = load i8, i8* %164, align 1, !dbg !9574
  %166 = zext i8 %165 to i32, !dbg !9574
  %167 = shl i32 %166, 16, !dbg !9575
  %168 = or i32 %162, %167, !dbg !9576
  %169 = load i8*, i8** %32, align 8, !dbg !9577
  %170 = getelementptr inbounds i8, i8* %169, i64 1, !dbg !9577
  %171 = load i8, i8* %170, align 1, !dbg !9577
  %172 = zext i8 %171 to i32, !dbg !9577
  %173 = shl i32 %172, 8, !dbg !9578
  %174 = or i32 %168, %173, !dbg !9579
  %175 = load i8*, i8** %32, align 8, !dbg !9580
  %176 = getelementptr inbounds i8, i8* %175, i64 0, !dbg !9580
  %177 = load i8, i8* %176, align 1, !dbg !9580
  %178 = zext i8 %177 to i32, !dbg !9580
  %179 = or i32 %174, %178, !dbg !9581
  store i32 %179, i32* %28, align 4, !dbg !9582
  br label %180

180:                                              ; preds = %157, %134
  %181 = load i32, i32* %28, align 4, !dbg !9583
  %182 = load i32, i32* %27, align 4, !dbg !9584
  %183 = and i32 %181, %182, !dbg !9585
  %184 = load i32, i32* %24, align 4, !dbg !9586
  %185 = shl i32 %183, %184, !dbg !9587
  store i32 %185, i32* %28, align 4, !dbg !9588
  %186 = load i32, i32* %20, align 4, !dbg !9589
  %187 = icmp slt i32 %186, 16, !dbg !9591
  br i1 %187, label %188, label %194, !dbg !9592

188:                                              ; preds = %180
  store i8 0, i8* %31, align 1, !dbg !9593
  store i8 0, i8* %30, align 1, !dbg !9595
  %189 = load i32, i32* %29, align 4, !dbg !9596
  %190 = load i32, i32* %28, align 4, !dbg !9597
  %191 = load i32, i32* %20, align 4, !dbg !9598
  %192 = lshr i32 %190, %191, !dbg !9599
  %193 = or i32 %189, %192, !dbg !9600
  store i32 %193, i32* %29, align 4, !dbg !9601
  br label %215, !dbg !9602

194:                                              ; preds = %180
  %195 = load i32, i32* %29, align 4, !dbg !9603
  %196 = lshr i32 %195, 24, !dbg !9605
  %197 = trunc i32 %196 to i8, !dbg !9606
  store i8 %197, i8* %30, align 1, !dbg !9607
  %198 = load i8, i8* %30, align 1, !dbg !9608
  %199 = load i8*, i8** %33, align 8, !dbg !9609
  %200 = getelementptr inbounds i8, i8* %199, i32 1, !dbg !9609
  store i8* %200, i8** %33, align 8, !dbg !9609
  store i8 %198, i8* %199, align 1, !dbg !9610
  %201 = load i32, i32* %29, align 4, !dbg !9611
  %202 = lshr i32 %201, 16, !dbg !9612
  %203 = trunc i32 %202 to i8, !dbg !9613
  store i8 %203, i8* %31, align 1, !dbg !9614
  %204 = load i8, i8* %31, align 1, !dbg !9615
  %205 = load i8*, i8** %33, align 8, !dbg !9616
  %206 = getelementptr inbounds i8, i8* %205, i32 1, !dbg !9616
  store i8* %206, i8** %33, align 8, !dbg !9616
  store i8 %204, i8* %205, align 1, !dbg !9617
  %207 = load i32, i32* %20, align 4, !dbg !9618
  %208 = sub nsw i32 %207, 16, !dbg !9618
  store i32 %208, i32* %20, align 4, !dbg !9618
  %209 = load i32, i32* %29, align 4, !dbg !9619
  %210 = shl i32 %209, 16, !dbg !9620
  %211 = load i32, i32* %28, align 4, !dbg !9621
  %212 = load i32, i32* %20, align 4, !dbg !9622
  %213 = lshr i32 %211, %212, !dbg !9623
  %214 = or i32 %210, %213, !dbg !9624
  store i32 %214, i32* %29, align 4, !dbg !9625
  br label %215

215:                                              ; preds = %194, %188
  %216 = load i16, i16* %16, align 2, !dbg !9626
  %217 = zext i16 %216 to i32, !dbg !9626
  %218 = load i32, i32* %20, align 4, !dbg !9627
  %219 = add nsw i32 %218, %217, !dbg !9627
  store i32 %219, i32* %20, align 4, !dbg !9627
  br label %220, !dbg !9628

220:                                              ; preds = %215
  %221 = load i32, i32* %21, align 4, !dbg !9629
  %222 = add nsw i32 %221, 1, !dbg !9629
  store i32 %222, i32* %21, align 4, !dbg !9629
  br label %82, !dbg !9630, !llvm.loop !9631

223:                                              ; preds = %95
  br label %224, !dbg !9633

224:                                              ; preds = %223
  %225 = load i32, i32* %22, align 4, !dbg !9634
  %226 = add i32 %225, 1, !dbg !9634
  store i32 %226, i32* %22, align 4, !dbg !9634
  br label %68, !dbg !9635, !llvm.loop !9636

227:                                              ; preds = %68
  br label %228, !dbg !9638

228:                                              ; preds = %231, %227
  %229 = load i32, i32* %20, align 4, !dbg !9639
  %230 = icmp sgt i32 %229, 0, !dbg !9640
  br i1 %230, label %231, label %243, !dbg !9638

231:                                              ; preds = %228
  %232 = load i32, i32* %29, align 4, !dbg !9641
  %233 = lshr i32 %232, 24, !dbg !9643
  %234 = trunc i32 %233 to i8, !dbg !9644
  store i8 %234, i8* %30, align 1, !dbg !9645
  %235 = load i8, i8* %30, align 1, !dbg !9646
  %236 = load i8*, i8** %33, align 8, !dbg !9647
  %237 = getelementptr inbounds i8, i8* %236, i32 1, !dbg !9647
  store i8* %237, i8** %33, align 8, !dbg !9647
  store i8 %235, i8* %236, align 1, !dbg !9648
  %238 = load i32, i32* %29, align 4, !dbg !9649
  %239 = shl i32 %238, 8, !dbg !9650
  store i32 %239, i32* %29, align 4, !dbg !9651
  %240 = load i8, i8* %30, align 1, !dbg !9652
  store i8 %240, i8* %31, align 1, !dbg !9653
  %241 = load i32, i32* %20, align 4, !dbg !9654
  %242 = sub nsw i32 %241, 8, !dbg !9654
  store i32 %242, i32* %20, align 4, !dbg !9654
  br label %228, !dbg !9638, !llvm.loop !9655

243:                                              ; preds = %228
  store i32 0, i32* %10, align 4, !dbg !9657
  br label %244, !dbg !9657

244:                                              ; preds = %243, %41
  %245 = load i32, i32* %10, align 4, !dbg !9658
  ret i32 %245, !dbg !9658
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamples32bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32) #0 !dbg !9659 {
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !9660, metadata !DIExpression()), !dbg !9661
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9662, metadata !DIExpression()), !dbg !9663
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9664, metadata !DIExpression()), !dbg !9665
  store i16 %3, i16* %14, align 2
  call void @llvm.dbg.declare(metadata i16* %14, metadata !9666, metadata !DIExpression()), !dbg !9667
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !9668, metadata !DIExpression()), !dbg !9669
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !9670, metadata !DIExpression()), !dbg !9671
  store i16 %6, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !9672, metadata !DIExpression()), !dbg !9673
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9674, metadata !DIExpression()), !dbg !9675
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9676, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9678, metadata !DIExpression()), !dbg !9679
  store i32 0, i32* %20, align 4, !dbg !9679
  call void @llvm.dbg.declare(metadata i32* %21, metadata !9680, metadata !DIExpression()), !dbg !9681
  store i32 0, i32* %21, align 4, !dbg !9681
  call void @llvm.dbg.declare(metadata i32* %22, metadata !9682, metadata !DIExpression()), !dbg !9683
  store i32 0, i32* %22, align 4, !dbg !9683
  call void @llvm.dbg.declare(metadata i32* %23, metadata !9684, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9686, metadata !DIExpression()), !dbg !9687
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9688, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.declare(metadata i32* %26, metadata !9690, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.declare(metadata i32* %27, metadata !9692, metadata !DIExpression()), !dbg !9693
  store i32 0, i32* %27, align 4, !dbg !9693
  call void @llvm.dbg.declare(metadata i32* %28, metadata !9694, metadata !DIExpression()), !dbg !9695
  store i32 0, i32* %28, align 4, !dbg !9695
  call void @llvm.dbg.declare(metadata i64* %29, metadata !9696, metadata !DIExpression()), !dbg !9697
  store i64 0, i64* %29, align 8, !dbg !9697
  call void @llvm.dbg.declare(metadata i64* %30, metadata !9698, metadata !DIExpression()), !dbg !9699
  store i64 0, i64* %30, align 8, !dbg !9699
  call void @llvm.dbg.declare(metadata i64* %31, metadata !9700, metadata !DIExpression()), !dbg !9701
  store i64 0, i64* %31, align 8, !dbg !9701
  call void @llvm.dbg.declare(metadata i64* %32, metadata !9702, metadata !DIExpression()), !dbg !9703
  store i64 0, i64* %32, align 8, !dbg !9703
  call void @llvm.dbg.declare(metadata i64* %33, metadata !9704, metadata !DIExpression()), !dbg !9705
  store i64 0, i64* %33, align 8, !dbg !9705
  call void @llvm.dbg.declare(metadata i8* %34, metadata !9706, metadata !DIExpression()), !dbg !9707
  store i8 0, i8* %34, align 1, !dbg !9707
  call void @llvm.dbg.declare(metadata i8* %35, metadata !9708, metadata !DIExpression()), !dbg !9709
  store i8 0, i8* %35, align 1, !dbg !9709
  call void @llvm.dbg.declare(metadata i8* %36, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i8 0, i8* %36, align 1, !dbg !9711
  call void @llvm.dbg.declare(metadata i8* %37, metadata !9712, metadata !DIExpression()), !dbg !9713
  store i8 0, i8* %37, align 1, !dbg !9713
  call void @llvm.dbg.declare(metadata i8** %38, metadata !9714, metadata !DIExpression()), !dbg !9715
  %40 = load i8*, i8** %11, align 8, !dbg !9716
  store i8* %40, i8** %38, align 8, !dbg !9715
  call void @llvm.dbg.declare(metadata i8** %39, metadata !9717, metadata !DIExpression()), !dbg !9718
  %41 = load i8*, i8** %12, align 8, !dbg !9719
  store i8* %41, i8** %39, align 8, !dbg !9718
  %42 = load i8*, i8** %11, align 8, !dbg !9720
  %43 = icmp eq i8* %42, null, !dbg !9722
  br i1 %43, label %47, label %44, !dbg !9723

44:                                               ; preds = %9
  %45 = load i8*, i8** %12, align 8, !dbg !9724
  %46 = icmp eq i8* %45, null, !dbg !9725
  br i1 %46, label %47, label %48, !dbg !9726

47:                                               ; preds = %44, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.372, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !9727
  store i32 1, i32* %10, align 4, !dbg !9729
  br label %279, !dbg !9729

48:                                               ; preds = %44
  %49 = load i32, i32* %18, align 4, !dbg !9730
  %50 = load i32, i32* %19, align 4, !dbg !9732
  %51 = icmp ugt i32 %49, %50, !dbg !9733
  br i1 %51, label %56, label %52, !dbg !9734

52:                                               ; preds = %48
  %53 = load i32, i32* %18, align 4, !dbg !9735
  %54 = load i32, i32* %13, align 4, !dbg !9736
  %55 = icmp ugt i32 %53, %54, !dbg !9737
  br i1 %55, label %56, label %58, !dbg !9738

56:                                               ; preds = %52, %48
  %57 = load i32, i32* %18, align 4, !dbg !9739
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.372, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %57), !dbg !9741
  store i32 0, i32* %18, align 4, !dbg !9742
  br label %58, !dbg !9743

58:                                               ; preds = %56, %52
  %59 = load i32, i32* %19, align 4, !dbg !9744
  %60 = icmp eq i32 %59, 0, !dbg !9746
  br i1 %60, label %65, label %61, !dbg !9747

61:                                               ; preds = %58
  %62 = load i32, i32* %19, align 4, !dbg !9748
  %63 = load i32, i32* %13, align 4, !dbg !9749
  %64 = icmp ugt i32 %62, %63, !dbg !9750
  br i1 %64, label %65, label %68, !dbg !9751

65:                                               ; preds = %61, %58
  %66 = load i32, i32* %19, align 4, !dbg !9752
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.372, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %66), !dbg !9754
  %67 = load i32, i32* %13, align 4, !dbg !9755
  store i32 %67, i32* %19, align 4, !dbg !9756
  br label %68, !dbg !9757

68:                                               ; preds = %65, %61
  %69 = load i16, i16* %16, align 2, !dbg !9758
  %70 = zext i16 %69 to i32, !dbg !9758
  %71 = add nsw i32 %70, 7, !dbg !9759
  %72 = sdiv i32 %71, 8, !dbg !9760
  %73 = add nsw i32 %72, 1, !dbg !9761
  store i32 %73, i32* %22, align 4, !dbg !9762
  store i32 0, i32* %20, align 4, !dbg !9763
  %74 = load i16, i16* %16, align 2, !dbg !9764
  %75 = zext i16 %74 to i32, !dbg !9764
  %76 = sub nsw i32 64, %75, !dbg !9765
  %77 = zext i32 %76 to i64, !dbg !9766
  %78 = lshr i64 -1, %77, !dbg !9766
  store i64 %78, i64* %29, align 8, !dbg !9767
  %79 = load i32, i32* %18, align 4, !dbg !9768
  store i32 %79, i32* %23, align 4, !dbg !9770
  br label %80, !dbg !9771

80:                                               ; preds = %260, %68
  %81 = load i32, i32* %23, align 4, !dbg !9772
  %82 = load i32, i32* %19, align 4, !dbg !9774
  %83 = icmp ult i32 %81, %82, !dbg !9775
  br i1 %83, label %84, label %263, !dbg !9776

84:                                               ; preds = %80
  %85 = load i32, i32* %23, align 4, !dbg !9777
  %86 = load i16, i16* %16, align 2, !dbg !9779
  %87 = zext i16 %86 to i32, !dbg !9779
  %88 = mul i32 %85, %87, !dbg !9780
  %89 = load i16, i16* %15, align 2, !dbg !9781
  %90 = zext i16 %89 to i32, !dbg !9781
  %91 = mul i32 %88, %90, !dbg !9782
  store i32 %91, i32* %26, align 4, !dbg !9783
  %92 = load i16, i16* %14, align 2, !dbg !9784
  %93 = zext i16 %92 to i32, !dbg !9784
  store i32 %93, i32* %21, align 4, !dbg !9786
  br label %94, !dbg !9787

94:                                               ; preds = %256, %84
  %95 = load i32, i32* %21, align 4, !dbg !9788
  %96 = load i16, i16* %15, align 2, !dbg !9790
  %97 = zext i16 %96 to i32, !dbg !9790
  %98 = icmp slt i32 %95, %97, !dbg !9791
  br i1 %98, label %99, label %107, !dbg !9792

99:                                               ; preds = %94
  %100 = load i32, i32* %21, align 4, !dbg !9793
  %101 = load i16, i16* %14, align 2, !dbg !9794
  %102 = zext i16 %101 to i32, !dbg !9794
  %103 = load i16, i16* %17, align 2, !dbg !9795
  %104 = zext i16 %103 to i32, !dbg !9795
  %105 = add nsw i32 %102, %104, !dbg !9796
  %106 = icmp slt i32 %100, %105, !dbg !9797
  br label %107

107:                                              ; preds = %99, %94
  %108 = phi i1 [ false, %94 ], [ %106, %99 ], !dbg !9798
  br i1 %108, label %109, label %259, !dbg !9799

109:                                              ; preds = %107
  %110 = load i32, i32* %21, align 4, !dbg !9800
  %111 = icmp eq i32 %110, 0, !dbg !9803
  br i1 %111, label %112, label %117, !dbg !9804

112:                                              ; preds = %109
  %113 = load i32, i32* %26, align 4, !dbg !9805
  %114 = udiv i32 %113, 8, !dbg !9807
  store i32 %114, i32* %24, align 4, !dbg !9808
  %115 = load i32, i32* %26, align 4, !dbg !9809
  %116 = urem i32 %115, 8, !dbg !9810
  store i32 %116, i32* %25, align 4, !dbg !9811
  br label %132, !dbg !9812

117:                                              ; preds = %109
  %118 = load i32, i32* %26, align 4, !dbg !9813
  %119 = load i32, i32* %21, align 4, !dbg !9815
  %120 = load i16, i16* %16, align 2, !dbg !9816
  %121 = zext i16 %120 to i32, !dbg !9816
  %122 = mul nsw i32 %119, %121, !dbg !9817
  %123 = add i32 %118, %122, !dbg !9818
  %124 = udiv i32 %123, 8, !dbg !9819
  store i32 %124, i32* %24, align 4, !dbg !9820
  %125 = load i32, i32* %26, align 4, !dbg !9821
  %126 = load i32, i32* %21, align 4, !dbg !9822
  %127 = load i16, i16* %16, align 2, !dbg !9823
  %128 = zext i16 %127 to i32, !dbg !9823
  %129 = mul nsw i32 %126, %128, !dbg !9824
  %130 = add i32 %125, %129, !dbg !9825
  %131 = urem i32 %130, 8, !dbg !9826
  store i32 %131, i32* %25, align 4, !dbg !9827
  br label %132

132:                                              ; preds = %117, %112
  %133 = load i8*, i8** %11, align 8, !dbg !9828
  %134 = load i32, i32* %24, align 4, !dbg !9829
  %135 = zext i32 %134 to i64, !dbg !9830
  %136 = getelementptr inbounds i8, i8* %133, i64 %135, !dbg !9830
  store i8* %136, i8** %38, align 8, !dbg !9831
  %137 = load i64, i64* %29, align 8, !dbg !9832
  %138 = load i32, i32* %25, align 4, !dbg !9833
  %139 = sub i32 64, %138, !dbg !9834
  %140 = load i16, i16* %16, align 2, !dbg !9835
  %141 = zext i16 %140 to i32, !dbg !9835
  %142 = sub i32 %139, %141, !dbg !9836
  %143 = zext i32 %142 to i64, !dbg !9837
  %144 = shl i64 %137, %143, !dbg !9837
  store i64 %144, i64* %30, align 8, !dbg !9838
  %145 = load i32, i32* @little_endian, align 4, !dbg !9839
  %146 = icmp ne i32 %145, 0, !dbg !9839
  br i1 %146, label %147, label %171, !dbg !9841

147:                                              ; preds = %132
  %148 = load i8*, i8** %38, align 8, !dbg !9842
  %149 = getelementptr inbounds i8, i8* %148, i64 0, !dbg !9842
  %150 = load i8, i8* %149, align 1, !dbg !9842
  %151 = zext i8 %150 to i32, !dbg !9842
  %152 = shl i32 %151, 24, !dbg !9844
  %153 = load i8*, i8** %38, align 8, !dbg !9845
  %154 = getelementptr inbounds i8, i8* %153, i64 1, !dbg !9845
  %155 = load i8, i8* %154, align 1, !dbg !9845
  %156 = zext i8 %155 to i32, !dbg !9845
  %157 = shl i32 %156, 16, !dbg !9846
  %158 = or i32 %152, %157, !dbg !9847
  %159 = load i8*, i8** %38, align 8, !dbg !9848
  %160 = getelementptr inbounds i8, i8* %159, i64 2, !dbg !9848
  %161 = load i8, i8* %160, align 1, !dbg !9848
  %162 = zext i8 %161 to i32, !dbg !9848
  %163 = shl i32 %162, 8, !dbg !9849
  %164 = or i32 %158, %163, !dbg !9850
  %165 = load i8*, i8** %38, align 8, !dbg !9851
  %166 = getelementptr inbounds i8, i8* %165, i64 3, !dbg !9851
  %167 = load i8, i8* %166, align 1, !dbg !9851
  %168 = zext i8 %167 to i32, !dbg !9851
  %169 = or i32 %164, %168, !dbg !9852
  store i32 %169, i32* %27, align 4, !dbg !9853
  %170 = load i32, i32* %27, align 4, !dbg !9854
  store i32 %170, i32* %28, align 4, !dbg !9855
  br label %195, !dbg !9856

171:                                              ; preds = %132
  %172 = load i8*, i8** %38, align 8, !dbg !9857
  %173 = getelementptr inbounds i8, i8* %172, i64 3, !dbg !9857
  %174 = load i8, i8* %173, align 1, !dbg !9857
  %175 = zext i8 %174 to i32, !dbg !9857
  %176 = shl i32 %175, 24, !dbg !9859
  %177 = load i8*, i8** %38, align 8, !dbg !9860
  %178 = getelementptr inbounds i8, i8* %177, i64 2, !dbg !9860
  %179 = load i8, i8* %178, align 1, !dbg !9860
  %180 = zext i8 %179 to i32, !dbg !9860
  %181 = shl i32 %180, 16, !dbg !9861
  %182 = or i32 %176, %181, !dbg !9862
  %183 = load i8*, i8** %38, align 8, !dbg !9863
  %184 = getelementptr inbounds i8, i8* %183, i64 1, !dbg !9863
  %185 = load i8, i8* %184, align 1, !dbg !9863
  %186 = zext i8 %185 to i32, !dbg !9863
  %187 = shl i32 %186, 8, !dbg !9864
  %188 = or i32 %182, %187, !dbg !9865
  %189 = load i8*, i8** %38, align 8, !dbg !9866
  %190 = getelementptr inbounds i8, i8* %189, i64 0, !dbg !9866
  %191 = load i8, i8* %190, align 1, !dbg !9866
  %192 = zext i8 %191 to i32, !dbg !9866
  %193 = or i32 %188, %192, !dbg !9867
  store i32 %193, i32* %27, align 4, !dbg !9868
  %194 = load i32, i32* %27, align 4, !dbg !9869
  store i32 %194, i32* %28, align 4, !dbg !9870
  br label %195

195:                                              ; preds = %171, %147
  %196 = load i32, i32* %27, align 4, !dbg !9871
  %197 = zext i32 %196 to i64, !dbg !9872
  %198 = shl i64 %197, 32, !dbg !9873
  %199 = load i32, i32* %28, align 4, !dbg !9874
  %200 = zext i32 %199 to i64, !dbg !9874
  %201 = or i64 %198, %200, !dbg !9875
  store i64 %201, i64* %33, align 8, !dbg !9876
  %202 = load i64, i64* %33, align 8, !dbg !9877
  %203 = load i64, i64* %30, align 8, !dbg !9878
  %204 = and i64 %202, %203, !dbg !9879
  %205 = load i32, i32* %25, align 4, !dbg !9880
  %206 = zext i32 %205 to i64, !dbg !9881
  %207 = shl i64 %204, %206, !dbg !9881
  store i64 %207, i64* %31, align 8, !dbg !9882
  %208 = load i32, i32* %20, align 4, !dbg !9883
  %209 = icmp sge i32 %208, 32, !dbg !9885
  br i1 %209, label %210, label %244, !dbg !9886

210:                                              ; preds = %195
  %211 = load i64, i64* %32, align 8, !dbg !9887
  %212 = lshr i64 %211, 56, !dbg !9889
  %213 = trunc i64 %212 to i8, !dbg !9890
  store i8 %213, i8* %34, align 1, !dbg !9891
  %214 = load i8, i8* %34, align 1, !dbg !9892
  %215 = load i8*, i8** %39, align 8, !dbg !9893
  %216 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !9893
  store i8* %216, i8** %39, align 8, !dbg !9893
  store i8 %214, i8* %215, align 1, !dbg !9894
  %217 = load i64, i64* %32, align 8, !dbg !9895
  %218 = lshr i64 %217, 48, !dbg !9896
  %219 = trunc i64 %218 to i8, !dbg !9897
  store i8 %219, i8* %35, align 1, !dbg !9898
  %220 = load i8, i8* %35, align 1, !dbg !9899
  %221 = load i8*, i8** %39, align 8, !dbg !9900
  %222 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !9900
  store i8* %222, i8** %39, align 8, !dbg !9900
  store i8 %220, i8* %221, align 1, !dbg !9901
  %223 = load i64, i64* %32, align 8, !dbg !9902
  %224 = lshr i64 %223, 40, !dbg !9903
  %225 = trunc i64 %224 to i8, !dbg !9904
  store i8 %225, i8* %36, align 1, !dbg !9905
  %226 = load i8, i8* %36, align 1, !dbg !9906
  %227 = load i8*, i8** %39, align 8, !dbg !9907
  %228 = getelementptr inbounds i8, i8* %227, i32 1, !dbg !9907
  store i8* %228, i8** %39, align 8, !dbg !9907
  store i8 %226, i8* %227, align 1, !dbg !9908
  %229 = load i64, i64* %32, align 8, !dbg !9909
  %230 = lshr i64 %229, 32, !dbg !9910
  %231 = trunc i64 %230 to i8, !dbg !9911
  store i8 %231, i8* %37, align 1, !dbg !9912
  %232 = load i8, i8* %37, align 1, !dbg !9913
  %233 = load i8*, i8** %39, align 8, !dbg !9914
  %234 = getelementptr inbounds i8, i8* %233, i32 1, !dbg !9914
  store i8* %234, i8** %39, align 8, !dbg !9914
  store i8 %232, i8* %233, align 1, !dbg !9915
  %235 = load i32, i32* %20, align 4, !dbg !9916
  %236 = sub nsw i32 %235, 32, !dbg !9916
  store i32 %236, i32* %20, align 4, !dbg !9916
  %237 = load i64, i64* %32, align 8, !dbg !9917
  %238 = shl i64 %237, 32, !dbg !9918
  %239 = load i64, i64* %31, align 8, !dbg !9919
  %240 = load i32, i32* %20, align 4, !dbg !9920
  %241 = zext i32 %240 to i64, !dbg !9921
  %242 = lshr i64 %239, %241, !dbg !9921
  %243 = or i64 %238, %242, !dbg !9922
  store i64 %243, i64* %32, align 8, !dbg !9923
  br label %251, !dbg !9924

244:                                              ; preds = %195
  store i8 0, i8* %37, align 1, !dbg !9925
  store i8 0, i8* %36, align 1, !dbg !9927
  store i8 0, i8* %35, align 1, !dbg !9928
  store i8 0, i8* %34, align 1, !dbg !9929
  %245 = load i64, i64* %32, align 8, !dbg !9930
  %246 = load i64, i64* %31, align 8, !dbg !9931
  %247 = load i32, i32* %20, align 4, !dbg !9932
  %248 = zext i32 %247 to i64, !dbg !9933
  %249 = lshr i64 %246, %248, !dbg !9933
  %250 = or i64 %245, %249, !dbg !9934
  store i64 %250, i64* %32, align 8, !dbg !9935
  br label %251

251:                                              ; preds = %244, %210
  %252 = load i16, i16* %16, align 2, !dbg !9936
  %253 = zext i16 %252 to i32, !dbg !9936
  %254 = load i32, i32* %20, align 4, !dbg !9937
  %255 = add nsw i32 %254, %253, !dbg !9937
  store i32 %255, i32* %20, align 4, !dbg !9937
  br label %256, !dbg !9938

256:                                              ; preds = %251
  %257 = load i32, i32* %21, align 4, !dbg !9939
  %258 = add nsw i32 %257, 1, !dbg !9939
  store i32 %258, i32* %21, align 4, !dbg !9939
  br label %94, !dbg !9940, !llvm.loop !9941

259:                                              ; preds = %107
  br label %260, !dbg !9943

260:                                              ; preds = %259
  %261 = load i32, i32* %23, align 4, !dbg !9944
  %262 = add i32 %261, 1, !dbg !9944
  store i32 %262, i32* %23, align 4, !dbg !9944
  br label %80, !dbg !9945, !llvm.loop !9946

263:                                              ; preds = %80
  br label %264, !dbg !9948

264:                                              ; preds = %267, %263
  %265 = load i32, i32* %20, align 4, !dbg !9949
  %266 = icmp sgt i32 %265, 0, !dbg !9950
  br i1 %266, label %267, label %278, !dbg !9948

267:                                              ; preds = %264
  %268 = load i64, i64* %32, align 8, !dbg !9951
  %269 = lshr i64 %268, 56, !dbg !9953
  %270 = trunc i64 %269 to i8, !dbg !9954
  store i8 %270, i8* %34, align 1, !dbg !9955
  %271 = load i8, i8* %34, align 1, !dbg !9956
  %272 = load i8*, i8** %39, align 8, !dbg !9957
  %273 = getelementptr inbounds i8, i8* %272, i32 1, !dbg !9957
  store i8* %273, i8** %39, align 8, !dbg !9957
  store i8 %271, i8* %272, align 1, !dbg !9958
  %274 = load i64, i64* %32, align 8, !dbg !9959
  %275 = shl i64 %274, 8, !dbg !9960
  store i64 %275, i64* %32, align 8, !dbg !9961
  %276 = load i32, i32* %20, align 4, !dbg !9962
  %277 = sub nsw i32 %276, 8, !dbg !9962
  store i32 %277, i32* %20, align 4, !dbg !9962
  br label %264, !dbg !9948, !llvm.loop !9963

278:                                              ; preds = %264
  store i32 0, i32* %10, align 4, !dbg !9965
  br label %279, !dbg !9965

279:                                              ; preds = %278, %47
  %280 = load i32, i32* %10, align 4, !dbg !9966
  ret i32 %280, !dbg !9966
}

declare void @_TIFFmemcpy(i8*, i8*, i64) #3

declare i64 @TIFFTileSize(%struct.tiff*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesToTileBuffer(i8*, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, %struct.dump_opts*) #0 !dbg !9967 {
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca %struct.dump_opts*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !9970, metadata !DIExpression()), !dbg !9971
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !9972, metadata !DIExpression()), !dbg !9973
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9974, metadata !DIExpression()), !dbg !9975
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9976, metadata !DIExpression()), !dbg !9977
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9978, metadata !DIExpression()), !dbg !9979
  store i32 %5, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9980, metadata !DIExpression()), !dbg !9981
  store i16 %6, i16* %19, align 2
  call void @llvm.dbg.declare(metadata i16* %19, metadata !9982, metadata !DIExpression()), !dbg !9983
  store i16 %7, i16* %20, align 2
  call void @llvm.dbg.declare(metadata i16* %20, metadata !9984, metadata !DIExpression()), !dbg !9985
  store i16 %8, i16* %21, align 2
  call void @llvm.dbg.declare(metadata i16* %21, metadata !9986, metadata !DIExpression()), !dbg !9987
  store i16 %9, i16* %22, align 2
  call void @llvm.dbg.declare(metadata i16* %22, metadata !9988, metadata !DIExpression()), !dbg !9989
  store %struct.dump_opts* %10, %struct.dump_opts** %23, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %23, metadata !9990, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9992, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.declare(metadata i32* %26, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata i32* %27, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata i32* %28, metadata !10000, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata i32* %29, metadata !10002, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.declare(metadata i32* %30, metadata !10004, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.declare(metadata i32* %31, metadata !10006, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.declare(metadata i8** %32, metadata !10008, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.declare(metadata i8** %33, metadata !10010, metadata !DIExpression()), !dbg !10011
  %34 = load i16, i16* %22, align 2, !dbg !10012
  %35 = zext i16 %34 to i32, !dbg !10012
  %36 = add nsw i32 %35, 7, !dbg !10013
  %37 = sdiv i32 %36, 8, !dbg !10014
  store i32 %37, i32* %25, align 4, !dbg !10015
  %38 = load i16, i16* %22, align 2, !dbg !10016
  %39 = zext i16 %38 to i32, !dbg !10016
  %40 = load i16, i16* %21, align 2, !dbg !10017
  %41 = zext i16 %40 to i32, !dbg !10017
  %42 = mul nsw i32 %39, %41, !dbg !10018
  %43 = add nsw i32 %42, 7, !dbg !10019
  %44 = sdiv i32 %43, 8, !dbg !10020
  store i32 %44, i32* %26, align 4, !dbg !10021
  %45 = load i16, i16* %22, align 2, !dbg !10022
  %46 = zext i16 %45 to i32, !dbg !10022
  %47 = srem i32 %46, 8, !dbg !10024
  %48 = icmp eq i32 %47, 0, !dbg !10025
  br i1 %48, label %49, label %50, !dbg !10026

49:                                               ; preds = %11
  store i32 0, i32* %24, align 4, !dbg !10027
  br label %61, !dbg !10028

50:                                               ; preds = %11
  %51 = load i32, i32* %26, align 4, !dbg !10029
  %52 = load i32, i32* %25, align 4, !dbg !10032
  %53 = add nsw i32 %52, 1, !dbg !10033
  %54 = icmp slt i32 %51, %53, !dbg !10034
  br i1 %54, label %55, label %57, !dbg !10035

55:                                               ; preds = %50
  %56 = load i32, i32* %26, align 4, !dbg !10036
  store i32 %56, i32* %24, align 4, !dbg !10037
  br label %60, !dbg !10038

57:                                               ; preds = %50
  %58 = load i32, i32* %25, align 4, !dbg !10039
  %59 = add nsw i32 %58, 1, !dbg !10040
  store i32 %59, i32* %24, align 4, !dbg !10041
  br label %60

60:                                               ; preds = %57, %55
  br label %61

61:                                               ; preds = %60, %49
  %62 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10042
  %63 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %62, i32 0, i32 7, !dbg !10044
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %63, align 8, !dbg !10044
  %65 = icmp ne %struct._IO_FILE* %64, null, !dbg !10045
  br i1 %65, label %66, label %83, !dbg !10046

66:                                               ; preds = %61
  %67 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10047
  %68 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %67, i32 0, i32 2, !dbg !10048
  %69 = load i32, i32* %68, align 8, !dbg !10048
  %70 = icmp eq i32 %69, 4, !dbg !10049
  br i1 %70, label %71, label %83, !dbg !10050

71:                                               ; preds = %66
  %72 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10051
  %73 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %72, i32 0, i32 7, !dbg !10053
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %73, align 8, !dbg !10053
  %75 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10054
  %76 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %75, i32 0, i32 1, !dbg !10055
  %77 = load i32, i32* %76, align 4, !dbg !10055
  %78 = load i16, i16* %19, align 2, !dbg !10056
  %79 = zext i16 %78 to i32, !dbg !10056
  %80 = add nsw i32 %79, 1, !dbg !10057
  %81 = load i32, i32* %15, align 4, !dbg !10058
  %82 = add i32 %81, 1, !dbg !10059
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %74, i32 %77, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.367, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.368, i64 0, i64 0), i32 %80, i32 %82), !dbg !10060
  br label %83, !dbg !10061

83:                                               ; preds = %71, %66, %61
  %84 = load i16, i16* %22, align 2, !dbg !10062
  %85 = zext i16 %84 to i32, !dbg !10062
  %86 = load i16, i16* %21, align 2, !dbg !10063
  %87 = zext i16 %86 to i32, !dbg !10063
  %88 = mul nsw i32 %85, %87, !dbg !10064
  %89 = load i32, i32* %17, align 4, !dbg !10065
  %90 = mul i32 %88, %89, !dbg !10066
  %91 = add i32 %90, 7, !dbg !10067
  %92 = udiv i32 %91, 8, !dbg !10068
  store i32 %92, i32* %27, align 4, !dbg !10069
  %93 = load i16, i16* %22, align 2, !dbg !10070
  %94 = zext i16 %93 to i32, !dbg !10070
  %95 = load i32, i32* %18, align 4, !dbg !10071
  %96 = mul i32 %94, %95, !dbg !10072
  %97 = load i16, i16* %20, align 2, !dbg !10073
  %98 = zext i16 %97 to i32, !dbg !10073
  %99 = mul i32 %96, %98, !dbg !10074
  %100 = add i32 %99, 7, !dbg !10075
  %101 = udiv i32 %100, 8, !dbg !10076
  store i32 %101, i32* %30, align 4, !dbg !10077
  store i32 0, i32* %29, align 4, !dbg !10078
  br label %102, !dbg !10080

102:                                              ; preds = %217, %83
  %103 = load i32, i32* %29, align 4, !dbg !10081
  %104 = load i32, i32* %15, align 4, !dbg !10083
  %105 = icmp ult i32 %103, %104, !dbg !10084
  br i1 %105, label %106, label %220, !dbg !10085

106:                                              ; preds = %102
  %107 = load i32, i32* %29, align 4, !dbg !10086
  %108 = load i32, i32* %27, align 4, !dbg !10088
  %109 = mul i32 %107, %108, !dbg !10089
  store i32 %109, i32* %28, align 4, !dbg !10090
  %110 = load i32, i32* %29, align 4, !dbg !10091
  %111 = load i32, i32* %30, align 4, !dbg !10092
  %112 = mul i32 %110, %111, !dbg !10093
  store i32 %112, i32* %31, align 4, !dbg !10094
  %113 = load i8*, i8** %14, align 8, !dbg !10095
  %114 = load i32, i32* %28, align 4, !dbg !10096
  %115 = zext i32 %114 to i64, !dbg !10097
  %116 = getelementptr inbounds i8, i8* %113, i64 %115, !dbg !10097
  store i8* %116, i8** %32, align 8, !dbg !10098
  %117 = load i8*, i8** %13, align 8, !dbg !10099
  %118 = load i32, i32* %31, align 4, !dbg !10100
  %119 = zext i32 %118 to i64, !dbg !10101
  %120 = getelementptr inbounds i8, i8* %117, i64 %119, !dbg !10101
  store i8* %120, i8** %33, align 8, !dbg !10102
  %121 = load i32, i32* %24, align 4, !dbg !10103
  switch i32 %121, label %192 [
    i32 0, label %122
    i32 1, label %135
    i32 2, label %166
    i32 3, label %179
    i32 4, label %179
    i32 5, label %179
  ], !dbg !10104

122:                                              ; preds = %106
  %123 = load i8*, i8** %32, align 8, !dbg !10105
  %124 = load i8*, i8** %33, align 8, !dbg !10108
  %125 = load i32, i32* %16, align 4, !dbg !10109
  %126 = load i16, i16* %19, align 2, !dbg !10110
  %127 = load i16, i16* %21, align 2, !dbg !10111
  %128 = load i16, i16* %22, align 2, !dbg !10112
  %129 = load i16, i16* %20, align 2, !dbg !10113
  %130 = load i32, i32* %16, align 4, !dbg !10114
  %131 = call i32 @extractContigSamplesBytes(i8* %123, i8* %124, i32 %125, i16 zeroext %126, i16 zeroext %127, i16 zeroext %128, i16 zeroext %129, i32 0, i32 %130), !dbg !10115
  %132 = icmp ne i32 %131, 0, !dbg !10115
  br i1 %132, label %133, label %134, !dbg !10116

133:                                              ; preds = %122
  store i32 1, i32* %12, align 4, !dbg !10117
  br label %221, !dbg !10117

134:                                              ; preds = %122
  br label %195, !dbg !10118

135:                                              ; preds = %106
  %136 = load i16, i16* %22, align 2, !dbg !10119
  %137 = zext i16 %136 to i32, !dbg !10119
  %138 = icmp eq i32 %137, 1, !dbg !10121
  br i1 %138, label %139, label %152, !dbg !10122

139:                                              ; preds = %135
  %140 = load i8*, i8** %32, align 8, !dbg !10123
  %141 = load i8*, i8** %33, align 8, !dbg !10126
  %142 = load i32, i32* %16, align 4, !dbg !10127
  %143 = load i16, i16* %19, align 2, !dbg !10128
  %144 = load i16, i16* %21, align 2, !dbg !10129
  %145 = load i16, i16* %22, align 2, !dbg !10130
  %146 = load i16, i16* %20, align 2, !dbg !10131
  %147 = load i32, i32* %16, align 4, !dbg !10132
  %148 = call i32 @extractContigSamples8bits(i8* %140, i8* %141, i32 %142, i16 zeroext %143, i16 zeroext %144, i16 zeroext %145, i16 zeroext %146, i32 0, i32 %147), !dbg !10133
  %149 = icmp ne i32 %148, 0, !dbg !10133
  br i1 %149, label %150, label %151, !dbg !10134

150:                                              ; preds = %139
  store i32 1, i32* %12, align 4, !dbg !10135
  br label %221, !dbg !10135

151:                                              ; preds = %139
  br label %195, !dbg !10136

152:                                              ; preds = %135
  %153 = load i8*, i8** %32, align 8, !dbg !10137
  %154 = load i8*, i8** %33, align 8, !dbg !10139
  %155 = load i32, i32* %16, align 4, !dbg !10140
  %156 = load i16, i16* %19, align 2, !dbg !10141
  %157 = load i16, i16* %21, align 2, !dbg !10142
  %158 = load i16, i16* %22, align 2, !dbg !10143
  %159 = load i16, i16* %20, align 2, !dbg !10144
  %160 = load i32, i32* %16, align 4, !dbg !10145
  %161 = call i32 @extractContigSamples16bits(i8* %153, i8* %154, i32 %155, i16 zeroext %156, i16 zeroext %157, i16 zeroext %158, i16 zeroext %159, i32 0, i32 %160), !dbg !10146
  %162 = icmp ne i32 %161, 0, !dbg !10146
  br i1 %162, label %163, label %164, !dbg !10147

163:                                              ; preds = %152
  store i32 1, i32* %12, align 4, !dbg !10148
  br label %221, !dbg !10148

164:                                              ; preds = %152
  br label %165

165:                                              ; preds = %164
  br label %195, !dbg !10149

166:                                              ; preds = %106
  %167 = load i8*, i8** %32, align 8, !dbg !10150
  %168 = load i8*, i8** %33, align 8, !dbg !10152
  %169 = load i32, i32* %16, align 4, !dbg !10153
  %170 = load i16, i16* %19, align 2, !dbg !10154
  %171 = load i16, i16* %21, align 2, !dbg !10155
  %172 = load i16, i16* %22, align 2, !dbg !10156
  %173 = load i16, i16* %20, align 2, !dbg !10157
  %174 = load i32, i32* %16, align 4, !dbg !10158
  %175 = call i32 @extractContigSamples24bits(i8* %167, i8* %168, i32 %169, i16 zeroext %170, i16 zeroext %171, i16 zeroext %172, i16 zeroext %173, i32 0, i32 %174), !dbg !10159
  %176 = icmp ne i32 %175, 0, !dbg !10159
  br i1 %176, label %177, label %178, !dbg !10160

177:                                              ; preds = %166
  store i32 1, i32* %12, align 4, !dbg !10161
  br label %221, !dbg !10161

178:                                              ; preds = %166
  br label %195, !dbg !10162

179:                                              ; preds = %106, %106, %106
  %180 = load i8*, i8** %32, align 8, !dbg !10163
  %181 = load i8*, i8** %33, align 8, !dbg !10165
  %182 = load i32, i32* %16, align 4, !dbg !10166
  %183 = load i16, i16* %19, align 2, !dbg !10167
  %184 = load i16, i16* %21, align 2, !dbg !10168
  %185 = load i16, i16* %22, align 2, !dbg !10169
  %186 = load i16, i16* %20, align 2, !dbg !10170
  %187 = load i32, i32* %16, align 4, !dbg !10171
  %188 = call i32 @extractContigSamples32bits(i8* %180, i8* %181, i32 %182, i16 zeroext %183, i16 zeroext %184, i16 zeroext %185, i16 zeroext %186, i32 0, i32 %187), !dbg !10172
  %189 = icmp ne i32 %188, 0, !dbg !10172
  br i1 %189, label %190, label %191, !dbg !10173

190:                                              ; preds = %179
  store i32 1, i32* %12, align 4, !dbg !10174
  br label %221, !dbg !10174

191:                                              ; preds = %179
  br label %195, !dbg !10175

192:                                              ; preds = %106
  %193 = load i16, i16* %22, align 2, !dbg !10176
  %194 = zext i16 %193 to i32, !dbg !10176
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.367, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.267, i64 0, i64 0), i32 %194), !dbg !10177
  store i32 1, i32* %12, align 4, !dbg !10178
  br label %221, !dbg !10178

195:                                              ; preds = %191, %178, %165, %151, %134
  %196 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10179
  %197 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %196, i32 0, i32 7, !dbg !10181
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** %197, align 8, !dbg !10181
  %199 = icmp ne %struct._IO_FILE* %198, null, !dbg !10182
  br i1 %199, label %200, label %216, !dbg !10183

200:                                              ; preds = %195
  %201 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10184
  %202 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %201, i32 0, i32 2, !dbg !10185
  %203 = load i32, i32* %202, align 8, !dbg !10185
  %204 = icmp eq i32 %203, 4, !dbg !10186
  br i1 %204, label %205, label %216, !dbg !10187

205:                                              ; preds = %200
  %206 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10188
  %207 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %206, i32 0, i32 7, !dbg !10189
  %208 = load %struct._IO_FILE*, %struct._IO_FILE** %207, align 8, !dbg !10189
  %209 = load %struct.dump_opts*, %struct.dump_opts** %23, align 8, !dbg !10190
  %210 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %209, i32 0, i32 1, !dbg !10191
  %211 = load i32, i32* %210, align 4, !dbg !10191
  %212 = load i32, i32* %30, align 4, !dbg !10192
  %213 = load i32, i32* %29, align 4, !dbg !10193
  %214 = load i8*, i8** %33, align 8, !dbg !10194
  %215 = call i32 @dump_buffer(%struct._IO_FILE* %208, i32 %211, i32 1, i32 %212, i32 %213, i8* %214), !dbg !10195
  br label %216, !dbg !10195

216:                                              ; preds = %205, %200, %195
  br label %217, !dbg !10196

217:                                              ; preds = %216
  %218 = load i32, i32* %29, align 4, !dbg !10197
  %219 = add i32 %218, 1, !dbg !10197
  store i32 %219, i32* %29, align 4, !dbg !10197
  br label %102, !dbg !10198, !llvm.loop !10199

220:                                              ; preds = %102
  store i32 0, i32* %12, align 4, !dbg !10201
  br label %221, !dbg !10201

221:                                              ; preds = %220, %192, %190, %177, %163, %150, %133
  %222 = load i32, i32* %12, align 4, !dbg !10202
  ret i32 %222, !dbg !10202
}

declare i64 @TIFFWriteTile(%struct.tiff*, i8*, i32, i32, i32, i16 zeroext) #3

declare i64 @TIFFTileRowSize(%struct.tiff*) #3

declare void @_TIFFmemset(i8*, i32, i64) #3

declare i8* @_TIFFrealloc(i8*, i64) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #5

; Function Attrs: nounwind
declare i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @invertImage(i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i8*) #0 !dbg !10203 {
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8*, align 8
  %21 = alloca i16*, align 8
  %22 = alloca i32*, align 8
  store i16 %0, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !10206, metadata !DIExpression()), !dbg !10207
  store i16 %1, i16* %9, align 2
  call void @llvm.dbg.declare(metadata i16* %9, metadata !10208, metadata !DIExpression()), !dbg !10209
  store i16 %2, i16* %10, align 2
  call void @llvm.dbg.declare(metadata i16* %10, metadata !10210, metadata !DIExpression()), !dbg !10211
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10212, metadata !DIExpression()), !dbg !10213
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10214, metadata !DIExpression()), !dbg !10215
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !10216, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10218, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.declare(metadata i32* %15, metadata !10220, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.declare(metadata i8* %16, metadata !10222, metadata !DIExpression()), !dbg !10223
  call void @llvm.dbg.declare(metadata i8* %17, metadata !10224, metadata !DIExpression()), !dbg !10225
  call void @llvm.dbg.declare(metadata i8* %18, metadata !10226, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.declare(metadata i8* %19, metadata !10228, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.declare(metadata i8** %20, metadata !10230, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.declare(metadata i16** %21, metadata !10232, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.declare(metadata i32** %22, metadata !10234, metadata !DIExpression()), !dbg !10235
  %23 = load i16, i16* %9, align 2, !dbg !10236
  %24 = zext i16 %23 to i32, !dbg !10236
  %25 = icmp ne i32 %24, 1, !dbg !10238
  br i1 %25, label %26, label %27, !dbg !10239

26:                                               ; preds = %6
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.398, i64 0, i64 0)), !dbg !10240
  store i32 -1, i32* %7, align 4, !dbg !10242
  br label %283, !dbg !10242

27:                                               ; preds = %6
  %28 = load i16, i16* %8, align 2, !dbg !10243
  %29 = zext i16 %28 to i32, !dbg !10243
  %30 = icmp ne i32 %29, 0, !dbg !10245
  br i1 %30, label %31, label %36, !dbg !10246

31:                                               ; preds = %27
  %32 = load i16, i16* %8, align 2, !dbg !10247
  %33 = zext i16 %32 to i32, !dbg !10247
  %34 = icmp ne i32 %33, 1, !dbg !10248
  br i1 %34, label %35, label %36, !dbg !10249

35:                                               ; preds = %31
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.399, i64 0, i64 0)), !dbg !10250
  store i32 -1, i32* %7, align 4, !dbg !10252
  br label %283, !dbg !10252

36:                                               ; preds = %31, %27
  %37 = load i8*, i8** %13, align 8, !dbg !10253
  store i8* %37, i8** %20, align 8, !dbg !10254
  %38 = load i8*, i8** %20, align 8, !dbg !10255
  %39 = icmp eq i8* %38, null, !dbg !10257
  br i1 %39, label %40, label %41, !dbg !10258

40:                                               ; preds = %36
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.400, i64 0, i64 0)), !dbg !10259
  store i32 -1, i32* %7, align 4, !dbg !10261
  br label %283, !dbg !10261

41:                                               ; preds = %36
  %42 = load i16, i16* %10, align 2, !dbg !10262
  %43 = zext i16 %42 to i32, !dbg !10262
  switch i32 %43, label %279 [
    i32 32, label %44
    i32 16, label %71
    i32 8, label %100
    i32 4, label %127
    i32 2, label %170
    i32 1, label %246
  ], !dbg !10263

44:                                               ; preds = %41
  %45 = load i8*, i8** %20, align 8, !dbg !10264
  %46 = bitcast i8* %45 to i32*, !dbg !10266
  store i32* %46, i32** %22, align 8, !dbg !10267
  store i32 0, i32* %14, align 4, !dbg !10268
  br label %47, !dbg !10270

47:                                               ; preds = %67, %44
  %48 = load i32, i32* %14, align 4, !dbg !10271
  %49 = load i32, i32* %12, align 4, !dbg !10273
  %50 = icmp ult i32 %48, %49, !dbg !10274
  br i1 %50, label %51, label %70, !dbg !10275

51:                                               ; preds = %47
  store i32 0, i32* %15, align 4, !dbg !10276
  br label %52, !dbg !10278

52:                                               ; preds = %63, %51
  %53 = load i32, i32* %15, align 4, !dbg !10279
  %54 = load i32, i32* %11, align 4, !dbg !10281
  %55 = icmp ult i32 %53, %54, !dbg !10282
  br i1 %55, label %56, label %66, !dbg !10283

56:                                               ; preds = %52
  %57 = load i32*, i32** %22, align 8, !dbg !10284
  %58 = load i32, i32* %57, align 4, !dbg !10286
  %59 = sub i32 -1, %58, !dbg !10287
  %60 = load i32*, i32** %22, align 8, !dbg !10288
  store i32 %59, i32* %60, align 4, !dbg !10289
  %61 = load i32*, i32** %22, align 8, !dbg !10290
  %62 = getelementptr inbounds i32, i32* %61, i32 1, !dbg !10290
  store i32* %62, i32** %22, align 8, !dbg !10290
  br label %63, !dbg !10291

63:                                               ; preds = %56
  %64 = load i32, i32* %15, align 4, !dbg !10292
  %65 = add i32 %64, 1, !dbg !10292
  store i32 %65, i32* %15, align 4, !dbg !10292
  br label %52, !dbg !10293, !llvm.loop !10294

66:                                               ; preds = %52
  br label %67, !dbg !10295

67:                                               ; preds = %66
  %68 = load i32, i32* %14, align 4, !dbg !10296
  %69 = add i32 %68, 1, !dbg !10296
  store i32 %69, i32* %14, align 4, !dbg !10296
  br label %47, !dbg !10297, !llvm.loop !10298

70:                                               ; preds = %47
  br label %282, !dbg !10300

71:                                               ; preds = %41
  %72 = load i8*, i8** %20, align 8, !dbg !10301
  %73 = bitcast i8* %72 to i16*, !dbg !10302
  store i16* %73, i16** %21, align 8, !dbg !10303
  store i32 0, i32* %14, align 4, !dbg !10304
  br label %74, !dbg !10306

74:                                               ; preds = %96, %71
  %75 = load i32, i32* %14, align 4, !dbg !10307
  %76 = load i32, i32* %12, align 4, !dbg !10309
  %77 = icmp ult i32 %75, %76, !dbg !10310
  br i1 %77, label %78, label %99, !dbg !10311

78:                                               ; preds = %74
  store i32 0, i32* %15, align 4, !dbg !10312
  br label %79, !dbg !10314

79:                                               ; preds = %92, %78
  %80 = load i32, i32* %15, align 4, !dbg !10315
  %81 = load i32, i32* %11, align 4, !dbg !10317
  %82 = icmp ult i32 %80, %81, !dbg !10318
  br i1 %82, label %83, label %95, !dbg !10319

83:                                               ; preds = %79
  %84 = load i16*, i16** %21, align 8, !dbg !10320
  %85 = load i16, i16* %84, align 2, !dbg !10322
  %86 = zext i16 %85 to i32, !dbg !10322
  %87 = sub nsw i32 65535, %86, !dbg !10323
  %88 = trunc i32 %87 to i16, !dbg !10324
  %89 = load i16*, i16** %21, align 8, !dbg !10325
  store i16 %88, i16* %89, align 2, !dbg !10326
  %90 = load i16*, i16** %21, align 8, !dbg !10327
  %91 = getelementptr inbounds i16, i16* %90, i32 1, !dbg !10327
  store i16* %91, i16** %21, align 8, !dbg !10327
  br label %92, !dbg !10328

92:                                               ; preds = %83
  %93 = load i32, i32* %15, align 4, !dbg !10329
  %94 = add i32 %93, 1, !dbg !10329
  store i32 %94, i32* %15, align 4, !dbg !10329
  br label %79, !dbg !10330, !llvm.loop !10331

95:                                               ; preds = %79
  br label %96, !dbg !10332

96:                                               ; preds = %95
  %97 = load i32, i32* %14, align 4, !dbg !10333
  %98 = add i32 %97, 1, !dbg !10333
  store i32 %98, i32* %14, align 4, !dbg !10333
  br label %74, !dbg !10334, !llvm.loop !10335

99:                                               ; preds = %74
  br label %282, !dbg !10337

100:                                              ; preds = %41
  store i32 0, i32* %14, align 4, !dbg !10338
  br label %101, !dbg !10340

101:                                              ; preds = %123, %100
  %102 = load i32, i32* %14, align 4, !dbg !10341
  %103 = load i32, i32* %12, align 4, !dbg !10343
  %104 = icmp ult i32 %102, %103, !dbg !10344
  br i1 %104, label %105, label %126, !dbg !10345

105:                                              ; preds = %101
  store i32 0, i32* %15, align 4, !dbg !10346
  br label %106, !dbg !10348

106:                                              ; preds = %119, %105
  %107 = load i32, i32* %15, align 4, !dbg !10349
  %108 = load i32, i32* %11, align 4, !dbg !10351
  %109 = icmp ult i32 %107, %108, !dbg !10352
  br i1 %109, label %110, label %122, !dbg !10353

110:                                              ; preds = %106
  %111 = load i8*, i8** %20, align 8, !dbg !10354
  %112 = load i8, i8* %111, align 1, !dbg !10356
  %113 = zext i8 %112 to i32, !dbg !10356
  %114 = sub nsw i32 255, %113, !dbg !10357
  %115 = trunc i32 %114 to i8, !dbg !10358
  %116 = load i8*, i8** %20, align 8, !dbg !10359
  store i8 %115, i8* %116, align 1, !dbg !10360
  %117 = load i8*, i8** %20, align 8, !dbg !10361
  %118 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !10361
  store i8* %118, i8** %20, align 8, !dbg !10361
  br label %119, !dbg !10362

119:                                              ; preds = %110
  %120 = load i32, i32* %15, align 4, !dbg !10363
  %121 = add i32 %120, 1, !dbg !10363
  store i32 %121, i32* %15, align 4, !dbg !10363
  br label %106, !dbg !10364, !llvm.loop !10365

122:                                              ; preds = %106
  br label %123, !dbg !10366

123:                                              ; preds = %122
  %124 = load i32, i32* %14, align 4, !dbg !10367
  %125 = add i32 %124, 1, !dbg !10367
  store i32 %125, i32* %14, align 4, !dbg !10367
  br label %101, !dbg !10368, !llvm.loop !10369

126:                                              ; preds = %101
  br label %282, !dbg !10371

127:                                              ; preds = %41
  store i32 0, i32* %14, align 4, !dbg !10372
  br label %128, !dbg !10374

128:                                              ; preds = %166, %127
  %129 = load i32, i32* %14, align 4, !dbg !10375
  %130 = load i32, i32* %12, align 4, !dbg !10377
  %131 = icmp ult i32 %129, %130, !dbg !10378
  br i1 %131, label %132, label %169, !dbg !10379

132:                                              ; preds = %128
  store i32 0, i32* %15, align 4, !dbg !10380
  br label %133, !dbg !10382

133:                                              ; preds = %162, %132
  %134 = load i32, i32* %15, align 4, !dbg !10383
  %135 = load i32, i32* %11, align 4, !dbg !10385
  %136 = icmp ult i32 %134, %135, !dbg !10386
  br i1 %136, label %137, label %165, !dbg !10387

137:                                              ; preds = %133
  %138 = load i8*, i8** %20, align 8, !dbg !10388
  %139 = load i8, i8* %138, align 1, !dbg !10390
  %140 = zext i8 %139 to i32, !dbg !10390
  %141 = and i32 %140, 15, !dbg !10391
  %142 = trunc i32 %141 to i8, !dbg !10392
  %143 = zext i8 %142 to i32, !dbg !10392
  %144 = sub nsw i32 16, %143, !dbg !10393
  %145 = trunc i32 %144 to i8, !dbg !10394
  store i8 %145, i8* %16, align 1, !dbg !10395
  %146 = load i8*, i8** %20, align 8, !dbg !10396
  %147 = load i8, i8* %146, align 1, !dbg !10397
  %148 = zext i8 %147 to i32, !dbg !10397
  %149 = and i32 %148, 15, !dbg !10398
  %150 = sub nsw i32 16, %149, !dbg !10399
  %151 = trunc i32 %150 to i8, !dbg !10400
  store i8 %151, i8* %17, align 1, !dbg !10401
  %152 = load i8, i8* %16, align 1, !dbg !10402
  %153 = zext i8 %152 to i32, !dbg !10402
  %154 = shl i32 %153, 4, !dbg !10403
  %155 = load i8, i8* %17, align 1, !dbg !10404
  %156 = zext i8 %155 to i32, !dbg !10404
  %157 = and i32 %154, %156, !dbg !10405
  %158 = trunc i32 %157 to i8, !dbg !10402
  %159 = load i8*, i8** %20, align 8, !dbg !10406
  store i8 %158, i8* %159, align 1, !dbg !10407
  %160 = load i8*, i8** %20, align 8, !dbg !10408
  %161 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !10408
  store i8* %161, i8** %20, align 8, !dbg !10408
  br label %162, !dbg !10409

162:                                              ; preds = %137
  %163 = load i32, i32* %15, align 4, !dbg !10410
  %164 = add i32 %163, 1, !dbg !10410
  store i32 %164, i32* %15, align 4, !dbg !10410
  br label %133, !dbg !10411, !llvm.loop !10412

165:                                              ; preds = %133
  br label %166, !dbg !10413

166:                                              ; preds = %165
  %167 = load i32, i32* %14, align 4, !dbg !10414
  %168 = add i32 %167, 1, !dbg !10414
  store i32 %168, i32* %14, align 4, !dbg !10414
  br label %128, !dbg !10415, !llvm.loop !10416

169:                                              ; preds = %128
  br label %282, !dbg !10418

170:                                              ; preds = %41
  store i32 0, i32* %14, align 4, !dbg !10419
  br label %171, !dbg !10421

171:                                              ; preds = %242, %170
  %172 = load i32, i32* %14, align 4, !dbg !10422
  %173 = load i32, i32* %12, align 4, !dbg !10424
  %174 = icmp ult i32 %172, %173, !dbg !10425
  br i1 %174, label %175, label %245, !dbg !10426

175:                                              ; preds = %171
  store i32 0, i32* %15, align 4, !dbg !10427
  br label %176, !dbg !10429

176:                                              ; preds = %238, %175
  %177 = load i32, i32* %15, align 4, !dbg !10430
  %178 = load i32, i32* %11, align 4, !dbg !10432
  %179 = icmp ult i32 %177, %178, !dbg !10433
  br i1 %179, label %180, label %241, !dbg !10434

180:                                              ; preds = %176
  %181 = load i8*, i8** %20, align 8, !dbg !10435
  %182 = load i8, i8* %181, align 1, !dbg !10437
  %183 = zext i8 %182 to i32, !dbg !10437
  %184 = and i32 %183, 3, !dbg !10438
  %185 = trunc i32 %184 to i8, !dbg !10439
  %186 = zext i8 %185 to i32, !dbg !10439
  %187 = sub nsw i32 4, %186, !dbg !10440
  %188 = trunc i32 %187 to i8, !dbg !10441
  store i8 %188, i8* %16, align 1, !dbg !10442
  %189 = load i8*, i8** %20, align 8, !dbg !10443
  %190 = load i8, i8* %189, align 1, !dbg !10444
  %191 = zext i8 %190 to i32, !dbg !10444
  %192 = and i32 %191, 3, !dbg !10445
  %193 = trunc i32 %192 to i8, !dbg !10446
  %194 = zext i8 %193 to i32, !dbg !10446
  %195 = sub nsw i32 4, %194, !dbg !10447
  %196 = trunc i32 %195 to i8, !dbg !10448
  store i8 %196, i8* %17, align 1, !dbg !10449
  %197 = load i8*, i8** %20, align 8, !dbg !10450
  %198 = load i8, i8* %197, align 1, !dbg !10451
  %199 = zext i8 %198 to i32, !dbg !10451
  %200 = and i32 %199, 3, !dbg !10452
  %201 = trunc i32 %200 to i8, !dbg !10453
  %202 = zext i8 %201 to i32, !dbg !10453
  %203 = sub nsw i32 4, %202, !dbg !10454
  %204 = trunc i32 %203 to i8, !dbg !10455
  store i8 %204, i8* %18, align 1, !dbg !10456
  %205 = load i8*, i8** %20, align 8, !dbg !10457
  %206 = load i8, i8* %205, align 1, !dbg !10458
  %207 = zext i8 %206 to i32, !dbg !10458
  %208 = and i32 %207, 3, !dbg !10459
  %209 = trunc i32 %208 to i8, !dbg !10460
  %210 = zext i8 %209 to i32, !dbg !10460
  %211 = sub nsw i32 4, %210, !dbg !10461
  %212 = trunc i32 %211 to i8, !dbg !10462
  store i8 %212, i8* %19, align 1, !dbg !10463
  %213 = load i8, i8* %16, align 1, !dbg !10464
  %214 = zext i8 %213 to i32, !dbg !10464
  %215 = shl i32 %214, 6, !dbg !10465
  %216 = icmp ne i32 %215, 0, !dbg !10465
  br i1 %216, label %231, label %217, !dbg !10466

217:                                              ; preds = %180
  %218 = load i8, i8* %17, align 1, !dbg !10467
  %219 = zext i8 %218 to i32, !dbg !10467
  %220 = shl i32 %219, 4, !dbg !10468
  %221 = icmp ne i32 %220, 0, !dbg !10468
  br i1 %221, label %231, label %222, !dbg !10469

222:                                              ; preds = %217
  %223 = load i8, i8* %18, align 1, !dbg !10470
  %224 = zext i8 %223 to i32, !dbg !10470
  %225 = shl i32 %224, 2, !dbg !10471
  %226 = icmp ne i32 %225, 0, !dbg !10471
  br i1 %226, label %231, label %227, !dbg !10472

227:                                              ; preds = %222
  %228 = load i8, i8* %19, align 1, !dbg !10473
  %229 = zext i8 %228 to i32, !dbg !10473
  %230 = icmp ne i32 %229, 0, !dbg !10472
  br label %231, !dbg !10472

231:                                              ; preds = %227, %222, %217, %180
  %232 = phi i1 [ true, %222 ], [ true, %217 ], [ true, %180 ], [ %230, %227 ]
  %233 = zext i1 %232 to i32, !dbg !10472
  %234 = trunc i32 %233 to i8, !dbg !10474
  %235 = load i8*, i8** %20, align 8, !dbg !10475
  store i8 %234, i8* %235, align 1, !dbg !10476
  %236 = load i8*, i8** %20, align 8, !dbg !10477
  %237 = getelementptr inbounds i8, i8* %236, i32 1, !dbg !10477
  store i8* %237, i8** %20, align 8, !dbg !10477
  br label %238, !dbg !10478

238:                                              ; preds = %231
  %239 = load i32, i32* %15, align 4, !dbg !10479
  %240 = add i32 %239, 1, !dbg !10479
  store i32 %240, i32* %15, align 4, !dbg !10479
  br label %176, !dbg !10480, !llvm.loop !10481

241:                                              ; preds = %176
  br label %242, !dbg !10482

242:                                              ; preds = %241
  %243 = load i32, i32* %14, align 4, !dbg !10483
  %244 = add i32 %243, 1, !dbg !10483
  store i32 %244, i32* %14, align 4, !dbg !10483
  br label %171, !dbg !10484, !llvm.loop !10485

245:                                              ; preds = %171
  br label %282, !dbg !10487

246:                                              ; preds = %41
  store i32 0, i32* %14, align 4, !dbg !10488
  br label %247, !dbg !10490

247:                                              ; preds = %275, %246
  %248 = load i32, i32* %14, align 4, !dbg !10491
  %249 = load i32, i32* %12, align 4, !dbg !10493
  %250 = icmp ult i32 %248, %249, !dbg !10494
  br i1 %250, label %251, label %278, !dbg !10495

251:                                              ; preds = %247
  store i32 0, i32* %15, align 4, !dbg !10496
  br label %252, !dbg !10498

252:                                              ; preds = %265, %251
  %253 = load i32, i32* %15, align 4, !dbg !10499
  %254 = load i32, i32* %11, align 4, !dbg !10501
  %255 = icmp ult i32 %253, %254, !dbg !10502
  br i1 %255, label %256, label %274, !dbg !10503

256:                                              ; preds = %252
  %257 = load i8*, i8** %20, align 8, !dbg !10504
  %258 = load i8, i8* %257, align 1, !dbg !10506
  %259 = zext i8 %258 to i32, !dbg !10507
  %260 = xor i32 %259, -1, !dbg !10508
  %261 = trunc i32 %260 to i8, !dbg !10508
  %262 = load i8*, i8** %20, align 8, !dbg !10509
  store i8 %261, i8* %262, align 1, !dbg !10510
  %263 = load i8*, i8** %20, align 8, !dbg !10511
  %264 = getelementptr inbounds i8, i8* %263, i32 1, !dbg !10511
  store i8* %264, i8** %20, align 8, !dbg !10511
  br label %265, !dbg !10512

265:                                              ; preds = %256
  %266 = load i16, i16* %9, align 2, !dbg !10513
  %267 = zext i16 %266 to i32, !dbg !10513
  %268 = load i16, i16* %10, align 2, !dbg !10514
  %269 = zext i16 %268 to i32, !dbg !10514
  %270 = mul nsw i32 %267, %269, !dbg !10515
  %271 = sdiv i32 8, %270, !dbg !10516
  %272 = load i32, i32* %15, align 4, !dbg !10517
  %273 = add i32 %272, %271, !dbg !10517
  store i32 %273, i32* %15, align 4, !dbg !10517
  br label %252, !dbg !10518, !llvm.loop !10519

274:                                              ; preds = %252
  br label %275, !dbg !10520

275:                                              ; preds = %274
  %276 = load i32, i32* %14, align 4, !dbg !10521
  %277 = add i32 %276, 1, !dbg !10521
  store i32 %277, i32* %14, align 4, !dbg !10521
  br label %247, !dbg !10522, !llvm.loop !10523

278:                                              ; preds = %247
  br label %282, !dbg !10525

279:                                              ; preds = %41
  %280 = load i16, i16* %10, align 2, !dbg !10526
  %281 = zext i16 %280 to i32, !dbg !10526
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %281), !dbg !10527
  store i32 -1, i32* %7, align 4, !dbg !10528
  br label %283, !dbg !10528

282:                                              ; preds = %278, %245, %169, %126, %99, %70
  store i32 0, i32* %7, align 4, !dbg !10529
  br label %283, !dbg !10529

283:                                              ; preds = %282, %279, %40, %35, %26
  %284 = load i32, i32* %7, align 4, !dbg !10530
  ret i32 %284, !dbg !10530
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mirrorImage(i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i8*) #0 !dbg !10531 {
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  store i16 %0, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !10532, metadata !DIExpression()), !dbg !10533
  store i16 %1, i16* %9, align 2
  call void @llvm.dbg.declare(metadata i16* %9, metadata !10534, metadata !DIExpression()), !dbg !10535
  store i16 %2, i16* %10, align 2
  call void @llvm.dbg.declare(metadata i16* %10, metadata !10536, metadata !DIExpression()), !dbg !10537
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10538, metadata !DIExpression()), !dbg !10539
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10540, metadata !DIExpression()), !dbg !10541
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !10542, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10544, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.declare(metadata i32* %15, metadata !10546, metadata !DIExpression()), !dbg !10547
  call void @llvm.dbg.declare(metadata i32* %16, metadata !10548, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.declare(metadata i32* %17, metadata !10550, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.declare(metadata i32* %18, metadata !10552, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.declare(metadata i32* %19, metadata !10554, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.declare(metadata i8** %20, metadata !10556, metadata !DIExpression()), !dbg !10557
  store i8* null, i8** %20, align 8, !dbg !10557
  call void @llvm.dbg.declare(metadata i8** %21, metadata !10558, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.declare(metadata i8** %22, metadata !10560, metadata !DIExpression()), !dbg !10561
  %23 = load i8*, i8** %13, align 8, !dbg !10562
  store i8* %23, i8** %21, align 8, !dbg !10563
  %24 = load i32, i32* %11, align 4, !dbg !10564
  %25 = load i16, i16* %9, align 2, !dbg !10565
  %26 = zext i16 %25 to i32, !dbg !10565
  %27 = mul i32 %24, %26, !dbg !10566
  %28 = load i16, i16* %8, align 2, !dbg !10567
  %29 = zext i16 %28 to i32, !dbg !10567
  %30 = mul i32 %27, %29, !dbg !10568
  %31 = add i32 %30, 7, !dbg !10569
  %32 = udiv i32 %31, 8, !dbg !10570
  store i32 %32, i32* %18, align 4, !dbg !10571
  %33 = load i16, i16* %10, align 2, !dbg !10572
  %34 = zext i16 %33 to i32, !dbg !10572
  switch i32 %34, label %235 [
    i32 3, label %35
    i32 2, label %35
    i32 1, label %92
  ], !dbg !10573

35:                                               ; preds = %6, %6
  %36 = load i32, i32* %18, align 4, !dbg !10574
  %37 = zext i32 %36 to i64, !dbg !10574
  %38 = call i8* @_TIFFmalloc(i64 %37), !dbg !10576
  store i8* %38, i8** %20, align 8, !dbg !10577
  %39 = load i8*, i8** %20, align 8, !dbg !10578
  %40 = icmp eq i8* %39, null, !dbg !10580
  br i1 %40, label %41, label %43, !dbg !10581

41:                                               ; preds = %35
  %42 = load i32, i32* %18, align 4, !dbg !10582
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.332, i64 0, i64 0), i32 %42), !dbg !10584
  store i32 -1, i32* %7, align 4, !dbg !10585
  br label %239, !dbg !10585

43:                                               ; preds = %35
  %44 = load i8*, i8** %13, align 8, !dbg !10586
  %45 = load i32, i32* %18, align 4, !dbg !10587
  %46 = load i32, i32* %12, align 4, !dbg !10588
  %47 = sub i32 %46, 1, !dbg !10589
  %48 = mul i32 %45, %47, !dbg !10590
  %49 = zext i32 %48 to i64, !dbg !10591
  %50 = getelementptr inbounds i8, i8* %44, i64 %49, !dbg !10591
  store i8* %50, i8** %22, align 8, !dbg !10592
  store i32 0, i32* %17, align 4, !dbg !10593
  br label %51, !dbg !10595

51:                                               ; preds = %78, %43
  %52 = load i32, i32* %17, align 4, !dbg !10596
  %53 = load i32, i32* %12, align 4, !dbg !10598
  %54 = udiv i32 %53, 2, !dbg !10599
  %55 = icmp ult i32 %52, %54, !dbg !10600
  br i1 %55, label %56, label %81, !dbg !10601

56:                                               ; preds = %51
  %57 = load i8*, i8** %20, align 8, !dbg !10602
  %58 = load i8*, i8** %21, align 8, !dbg !10604
  %59 = load i32, i32* %18, align 4, !dbg !10605
  %60 = zext i32 %59 to i64, !dbg !10605
  call void @_TIFFmemcpy(i8* %57, i8* %58, i64 %60), !dbg !10606
  %61 = load i8*, i8** %21, align 8, !dbg !10607
  %62 = load i8*, i8** %22, align 8, !dbg !10608
  %63 = load i32, i32* %18, align 4, !dbg !10609
  %64 = zext i32 %63 to i64, !dbg !10609
  call void @_TIFFmemcpy(i8* %61, i8* %62, i64 %64), !dbg !10610
  %65 = load i8*, i8** %22, align 8, !dbg !10611
  %66 = load i8*, i8** %20, align 8, !dbg !10612
  %67 = load i32, i32* %18, align 4, !dbg !10613
  %68 = zext i32 %67 to i64, !dbg !10613
  call void @_TIFFmemcpy(i8* %65, i8* %66, i64 %68), !dbg !10614
  %69 = load i32, i32* %18, align 4, !dbg !10615
  %70 = load i8*, i8** %21, align 8, !dbg !10616
  %71 = zext i32 %69 to i64, !dbg !10616
  %72 = getelementptr inbounds i8, i8* %70, i64 %71, !dbg !10616
  store i8* %72, i8** %21, align 8, !dbg !10616
  %73 = load i32, i32* %18, align 4, !dbg !10617
  %74 = load i8*, i8** %22, align 8, !dbg !10618
  %75 = zext i32 %73 to i64, !dbg !10618
  %76 = sub i64 0, %75, !dbg !10618
  %77 = getelementptr inbounds i8, i8* %74, i64 %76, !dbg !10618
  store i8* %77, i8** %22, align 8, !dbg !10618
  br label %78, !dbg !10619

78:                                               ; preds = %56
  %79 = load i32, i32* %17, align 4, !dbg !10620
  %80 = add i32 %79, 1, !dbg !10620
  store i32 %80, i32* %17, align 4, !dbg !10620
  br label %51, !dbg !10621, !llvm.loop !10622

81:                                               ; preds = %51
  %82 = load i8*, i8** %20, align 8, !dbg !10624
  %83 = icmp ne i8* %82, null, !dbg !10624
  br i1 %83, label %84, label %86, !dbg !10626

84:                                               ; preds = %81
  %85 = load i8*, i8** %20, align 8, !dbg !10627
  call void @_TIFFfree(i8* %85), !dbg !10628
  br label %86, !dbg !10628

86:                                               ; preds = %84, %81
  %87 = load i16, i16* %10, align 2, !dbg !10629
  %88 = zext i16 %87 to i32, !dbg !10629
  %89 = icmp eq i32 %88, 2, !dbg !10631
  br i1 %89, label %90, label %91, !dbg !10632

90:                                               ; preds = %86
  br label %238, !dbg !10633

91:                                               ; preds = %86
  br label %92, !dbg !10634

92:                                               ; preds = %91, %6
  %93 = load i16, i16* %9, align 2, !dbg !10635
  %94 = zext i16 %93 to i32, !dbg !10635
  %95 = srem i32 %94, 8, !dbg !10637
  %96 = icmp eq i32 %95, 0, !dbg !10638
  br i1 %96, label %97, label %130, !dbg !10639

97:                                               ; preds = %92
  store i32 0, i32* %17, align 4, !dbg !10640
  br label %98, !dbg !10643

98:                                               ; preds = %126, %97
  %99 = load i32, i32* %17, align 4, !dbg !10644
  %100 = load i32, i32* %12, align 4, !dbg !10646
  %101 = icmp ult i32 %99, %100, !dbg !10647
  br i1 %101, label %102, label %129, !dbg !10648

102:                                              ; preds = %98
  %103 = load i32, i32* %17, align 4, !dbg !10649
  %104 = load i32, i32* %18, align 4, !dbg !10651
  %105 = mul i32 %103, %104, !dbg !10652
  store i32 %105, i32* %19, align 4, !dbg !10653
  %106 = load i8*, i8** %13, align 8, !dbg !10654
  %107 = load i32, i32* %19, align 4, !dbg !10655
  %108 = zext i32 %107 to i64, !dbg !10656
  %109 = getelementptr inbounds i8, i8* %106, i64 %108, !dbg !10656
  store i8* %109, i8** %21, align 8, !dbg !10657
  %110 = load i8*, i8** %13, align 8, !dbg !10658
  %111 = load i32, i32* %19, align 4, !dbg !10659
  %112 = zext i32 %111 to i64, !dbg !10660
  %113 = getelementptr inbounds i8, i8* %110, i64 %112, !dbg !10660
  %114 = load i32, i32* %18, align 4, !dbg !10661
  %115 = zext i32 %114 to i64, !dbg !10662
  %116 = getelementptr inbounds i8, i8* %113, i64 %115, !dbg !10662
  store i8* %116, i8** %22, align 8, !dbg !10663
  %117 = load i16, i16* %8, align 2, !dbg !10664
  %118 = load i16, i16* %9, align 2, !dbg !10666
  %119 = load i32, i32* %11, align 4, !dbg !10667
  %120 = load i8*, i8** %21, align 8, !dbg !10668
  %121 = load i8*, i8** %22, align 8, !dbg !10669
  %122 = call i32 @reverseSamplesBytes(i16 zeroext %117, i16 zeroext %118, i32 %119, i8* %120, i8* %121), !dbg !10670
  %123 = icmp ne i32 %122, 0, !dbg !10670
  br i1 %123, label %124, label %125, !dbg !10671

124:                                              ; preds = %102
  store i32 -1, i32* %7, align 4, !dbg !10672
  br label %239, !dbg !10672

125:                                              ; preds = %102
  br label %126, !dbg !10674

126:                                              ; preds = %125
  %127 = load i32, i32* %17, align 4, !dbg !10675
  %128 = add i32 %127, 1, !dbg !10675
  store i32 %128, i32* %17, align 4, !dbg !10675
  br label %98, !dbg !10676, !llvm.loop !10677

129:                                              ; preds = %98
  br label %234, !dbg !10679

130:                                              ; preds = %92
  %131 = load i32, i32* %18, align 4, !dbg !10680
  %132 = add i32 %131, 1, !dbg !10683
  %133 = zext i32 %132 to i64, !dbg !10680
  %134 = call i8* @_TIFFmalloc(i64 %133), !dbg !10684
  store i8* %134, i8** %20, align 8, !dbg !10685
  %135 = icmp ne i8* %134, null, !dbg !10685
  br i1 %135, label %137, label %136, !dbg !10686

136:                                              ; preds = %130
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.333, i64 0, i64 0)), !dbg !10687
  store i32 -1, i32* %7, align 4, !dbg !10689
  br label %239, !dbg !10689

137:                                              ; preds = %130
  %138 = load i16, i16* %9, align 2, !dbg !10690
  %139 = zext i16 %138 to i32, !dbg !10690
  %140 = add nsw i32 %139, 7, !dbg !10691
  %141 = sdiv i32 %140, 8, !dbg !10692
  store i32 %141, i32* %16, align 4, !dbg !10693
  %142 = load i16, i16* %9, align 2, !dbg !10694
  %143 = zext i16 %142 to i32, !dbg !10694
  %144 = load i16, i16* %8, align 2, !dbg !10695
  %145 = zext i16 %144 to i32, !dbg !10695
  %146 = mul nsw i32 %143, %145, !dbg !10696
  %147 = add nsw i32 %146, 7, !dbg !10697
  %148 = sdiv i32 %147, 8, !dbg !10698
  store i32 %148, i32* %15, align 4, !dbg !10699
  %149 = load i32, i32* %15, align 4, !dbg !10700
  %150 = load i32, i32* %16, align 4, !dbg !10702
  %151 = add i32 %150, 1, !dbg !10703
  %152 = icmp ult i32 %149, %151, !dbg !10704
  br i1 %152, label %153, label %155, !dbg !10705

153:                                              ; preds = %137
  %154 = load i32, i32* %15, align 4, !dbg !10706
  store i32 %154, i32* %14, align 4, !dbg !10707
  br label %158, !dbg !10708

155:                                              ; preds = %137
  %156 = load i32, i32* %16, align 4, !dbg !10709
  %157 = add i32 %156, 1, !dbg !10710
  store i32 %157, i32* %14, align 4, !dbg !10711
  br label %158

158:                                              ; preds = %155, %153
  store i32 0, i32* %17, align 4, !dbg !10712
  br label %159, !dbg !10714

159:                                              ; preds = %225, %158
  %160 = load i32, i32* %17, align 4, !dbg !10715
  %161 = load i32, i32* %12, align 4, !dbg !10717
  %162 = icmp ult i32 %160, %161, !dbg !10718
  br i1 %162, label %163, label %228, !dbg !10719

163:                                              ; preds = %159
  %164 = load i32, i32* %17, align 4, !dbg !10720
  %165 = load i32, i32* %18, align 4, !dbg !10722
  %166 = mul i32 %164, %165, !dbg !10723
  store i32 %166, i32* %19, align 4, !dbg !10724
  %167 = load i8*, i8** %13, align 8, !dbg !10725
  %168 = load i32, i32* %19, align 4, !dbg !10726
  %169 = zext i32 %168 to i64, !dbg !10727
  %170 = getelementptr inbounds i8, i8* %167, i64 %169, !dbg !10727
  store i8* %170, i8** %21, align 8, !dbg !10728
  %171 = load i8*, i8** %20, align 8, !dbg !10729
  %172 = load i32, i32* %18, align 4, !dbg !10730
  %173 = zext i32 %172 to i64, !dbg !10730
  call void @_TIFFmemset(i8* %171, i32 0, i64 %173), !dbg !10731
  %174 = load i32, i32* %14, align 4, !dbg !10732
  switch i32 %174, label %220 [
    i32 1, label %175
    i32 2, label %190
    i32 3, label %205
    i32 4, label %205
    i32 5, label %205
  ], !dbg !10733

175:                                              ; preds = %163
  %176 = load i16, i16* %8, align 2, !dbg !10734
  %177 = load i16, i16* %9, align 2, !dbg !10737
  %178 = load i32, i32* %11, align 4, !dbg !10738
  %179 = load i8*, i8** %21, align 8, !dbg !10739
  %180 = load i8*, i8** %20, align 8, !dbg !10740
  %181 = call i32 @reverseSamples16bits(i16 zeroext %176, i16 zeroext %177, i32 %178, i8* %179, i8* %180), !dbg !10741
  %182 = icmp ne i32 %181, 0, !dbg !10741
  br i1 %182, label %183, label %185, !dbg !10742

183:                                              ; preds = %175
  %184 = load i8*, i8** %20, align 8, !dbg !10743
  call void @_TIFFfree(i8* %184), !dbg !10745
  store i32 -1, i32* %7, align 4, !dbg !10746
  br label %239, !dbg !10746

185:                                              ; preds = %175
  %186 = load i8*, i8** %21, align 8, !dbg !10747
  %187 = load i8*, i8** %20, align 8, !dbg !10748
  %188 = load i32, i32* %18, align 4, !dbg !10749
  %189 = zext i32 %188 to i64, !dbg !10749
  call void @_TIFFmemcpy(i8* %186, i8* %187, i64 %189), !dbg !10750
  br label %224, !dbg !10751

190:                                              ; preds = %163
  %191 = load i16, i16* %8, align 2, !dbg !10752
  %192 = load i16, i16* %9, align 2, !dbg !10754
  %193 = load i32, i32* %11, align 4, !dbg !10755
  %194 = load i8*, i8** %21, align 8, !dbg !10756
  %195 = load i8*, i8** %20, align 8, !dbg !10757
  %196 = call i32 @reverseSamples24bits(i16 zeroext %191, i16 zeroext %192, i32 %193, i8* %194, i8* %195), !dbg !10758
  %197 = icmp ne i32 %196, 0, !dbg !10758
  br i1 %197, label %198, label %200, !dbg !10759

198:                                              ; preds = %190
  %199 = load i8*, i8** %20, align 8, !dbg !10760
  call void @_TIFFfree(i8* %199), !dbg !10762
  store i32 -1, i32* %7, align 4, !dbg !10763
  br label %239, !dbg !10763

200:                                              ; preds = %190
  %201 = load i8*, i8** %21, align 8, !dbg !10764
  %202 = load i8*, i8** %20, align 8, !dbg !10765
  %203 = load i32, i32* %18, align 4, !dbg !10766
  %204 = zext i32 %203 to i64, !dbg !10766
  call void @_TIFFmemcpy(i8* %201, i8* %202, i64 %204), !dbg !10767
  br label %224, !dbg !10768

205:                                              ; preds = %163, %163, %163
  %206 = load i16, i16* %8, align 2, !dbg !10769
  %207 = load i16, i16* %9, align 2, !dbg !10771
  %208 = load i32, i32* %11, align 4, !dbg !10772
  %209 = load i8*, i8** %21, align 8, !dbg !10773
  %210 = load i8*, i8** %20, align 8, !dbg !10774
  %211 = call i32 @reverseSamples32bits(i16 zeroext %206, i16 zeroext %207, i32 %208, i8* %209, i8* %210), !dbg !10775
  %212 = icmp ne i32 %211, 0, !dbg !10775
  br i1 %212, label %213, label %215, !dbg !10776

213:                                              ; preds = %205
  %214 = load i8*, i8** %20, align 8, !dbg !10777
  call void @_TIFFfree(i8* %214), !dbg !10779
  store i32 -1, i32* %7, align 4, !dbg !10780
  br label %239, !dbg !10780

215:                                              ; preds = %205
  %216 = load i8*, i8** %21, align 8, !dbg !10781
  %217 = load i8*, i8** %20, align 8, !dbg !10782
  %218 = load i32, i32* %18, align 4, !dbg !10783
  %219 = zext i32 %218 to i64, !dbg !10783
  call void @_TIFFmemcpy(i8* %216, i8* %217, i64 %219), !dbg !10784
  br label %224, !dbg !10785

220:                                              ; preds = %163
  %221 = load i16, i16* %9, align 2, !dbg !10786
  %222 = zext i16 %221 to i32, !dbg !10786
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %222), !dbg !10787
  %223 = load i8*, i8** %20, align 8, !dbg !10788
  call void @_TIFFfree(i8* %223), !dbg !10789
  store i32 -1, i32* %7, align 4, !dbg !10790
  br label %239, !dbg !10790

224:                                              ; preds = %215, %200, %185
  br label %225, !dbg !10791

225:                                              ; preds = %224
  %226 = load i32, i32* %17, align 4, !dbg !10792
  %227 = add i32 %226, 1, !dbg !10792
  store i32 %227, i32* %17, align 4, !dbg !10792
  br label %159, !dbg !10793, !llvm.loop !10794

228:                                              ; preds = %159
  %229 = load i8*, i8** %20, align 8, !dbg !10796
  %230 = icmp ne i8* %229, null, !dbg !10796
  br i1 %230, label %231, label %233, !dbg !10798

231:                                              ; preds = %228
  %232 = load i8*, i8** %20, align 8, !dbg !10799
  call void @_TIFFfree(i8* %232), !dbg !10800
  br label %233, !dbg !10800

233:                                              ; preds = %231, %228
  br label %234

234:                                              ; preds = %233, %129
  br label %238, !dbg !10801

235:                                              ; preds = %6
  %236 = load i16, i16* %10, align 2, !dbg !10802
  %237 = zext i16 %236 to i32, !dbg !10802
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.334, i64 0, i64 0), i32 %237), !dbg !10803
  store i32 -1, i32* %7, align 4, !dbg !10804
  br label %239, !dbg !10804

238:                                              ; preds = %234, %90
  store i32 0, i32* %7, align 4, !dbg !10805
  br label %239, !dbg !10805

239:                                              ; preds = %238, %235, %220, %213, %198, %183, %136, %124, %41
  %240 = load i32, i32* %7, align 4, !dbg !10806
  ret i32 %240, !dbg !10806
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rotateImage(i16 zeroext, %struct.image_data*, i32*, i32*, i8**) #0 !dbg !10807 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca %struct.image_data*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca float, align 4
  %33 = alloca i8*, align 8
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !10810, metadata !DIExpression()), !dbg !10811
  store %struct.image_data* %1, %struct.image_data** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %8, metadata !10812, metadata !DIExpression()), !dbg !10813
  store i32* %2, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i32* %3, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !10816, metadata !DIExpression()), !dbg !10817
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !10818, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10820, metadata !DIExpression()), !dbg !10821
  call void @llvm.dbg.declare(metadata i32* %13, metadata !10822, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10824, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.declare(metadata i32* %15, metadata !10826, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.declare(metadata i32* %16, metadata !10828, metadata !DIExpression()), !dbg !10829
  call void @llvm.dbg.declare(metadata i32* %17, metadata !10830, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.declare(metadata i32* %18, metadata !10832, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.declare(metadata i32* %19, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata i32* %20, metadata !10836, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.declare(metadata i32* %21, metadata !10838, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.declare(metadata i32* %22, metadata !10840, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.declare(metadata i32* %23, metadata !10842, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.declare(metadata i32* %24, metadata !10844, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.declare(metadata i32* %25, metadata !10846, metadata !DIExpression()), !dbg !10847
  call void @llvm.dbg.declare(metadata i32* %26, metadata !10848, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.declare(metadata i8** %27, metadata !10850, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.declare(metadata i8** %28, metadata !10852, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.declare(metadata i8** %29, metadata !10854, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.declare(metadata i16* %30, metadata !10856, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.declare(metadata i16* %31, metadata !10858, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.declare(metadata float* %32, metadata !10860, metadata !DIExpression()), !dbg !10861
  call void @llvm.dbg.declare(metadata i8** %33, metadata !10862, metadata !DIExpression()), !dbg !10863
  store i8* null, i8** %33, align 8, !dbg !10863
  %34 = load i32*, i32** %9, align 8, !dbg !10864
  %35 = load i32, i32* %34, align 4, !dbg !10865
  store i32 %35, i32* %21, align 4, !dbg !10866
  %36 = load i32*, i32** %10, align 8, !dbg !10867
  %37 = load i32, i32* %36, align 4, !dbg !10868
  store i32 %37, i32* %22, align 4, !dbg !10869
  %38 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !10870
  %39 = getelementptr inbounds %struct.image_data, %struct.image_data* %38, i32 0, i32 6, !dbg !10871
  %40 = load i16, i16* %39, align 4, !dbg !10871
  store i16 %40, i16* %30, align 2, !dbg !10872
  %41 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !10873
  %42 = getelementptr inbounds %struct.image_data, %struct.image_data* %41, i32 0, i32 5, !dbg !10874
  %43 = load i16, i16* %42, align 2, !dbg !10874
  store i16 %43, i16* %31, align 2, !dbg !10875
  %44 = load i16, i16* %31, align 2, !dbg !10876
  %45 = zext i16 %44 to i32, !dbg !10876
  %46 = load i16, i16* %30, align 2, !dbg !10877
  %47 = zext i16 %46 to i32, !dbg !10877
  %48 = mul nsw i32 %45, %47, !dbg !10878
  %49 = load i32, i32* %21, align 4, !dbg !10879
  %50 = mul i32 %48, %49, !dbg !10880
  %51 = add i32 %50, 7, !dbg !10881
  %52 = udiv i32 %51, 8, !dbg !10882
  store i32 %52, i32* %16, align 4, !dbg !10883
  %53 = load i16, i16* %31, align 2, !dbg !10884
  %54 = zext i16 %53 to i32, !dbg !10884
  %55 = load i16, i16* %30, align 2, !dbg !10885
  %56 = zext i16 %55 to i32, !dbg !10885
  %57 = mul nsw i32 %54, %56, !dbg !10886
  %58 = load i32, i32* %22, align 4, !dbg !10887
  %59 = mul i32 %57, %58, !dbg !10888
  %60 = add i32 %59, 7, !dbg !10889
  %61 = udiv i32 %60, 8, !dbg !10890
  store i32 %61, i32* %23, align 4, !dbg !10891
  %62 = load i32, i32* %23, align 4, !dbg !10892
  %63 = load i32, i32* %21, align 4, !dbg !10894
  %64 = mul i32 %62, %63, !dbg !10895
  %65 = load i32, i32* %16, align 4, !dbg !10896
  %66 = load i32, i32* %22, align 4, !dbg !10897
  %67 = mul i32 %65, %66, !dbg !10898
  %68 = icmp ugt i32 %64, %67, !dbg !10899
  br i1 %68, label %69, label %74, !dbg !10900

69:                                               ; preds = %5
  %70 = load i32, i32* %23, align 4, !dbg !10901
  %71 = add i32 %70, 1, !dbg !10902
  %72 = load i32, i32* %21, align 4, !dbg !10903
  %73 = mul i32 %71, %72, !dbg !10904
  store i32 %73, i32* %24, align 4, !dbg !10905
  br label %79, !dbg !10906

74:                                               ; preds = %5
  %75 = load i32, i32* %16, align 4, !dbg !10907
  %76 = add i32 %75, 1, !dbg !10908
  %77 = load i32, i32* %22, align 4, !dbg !10909
  %78 = mul i32 %76, %77, !dbg !10910
  store i32 %78, i32* %24, align 4, !dbg !10911
  br label %79

79:                                               ; preds = %74, %69
  %80 = load i16, i16* %31, align 2, !dbg !10912
  %81 = zext i16 %80 to i32, !dbg !10912
  %82 = add nsw i32 %81, 7, !dbg !10913
  %83 = sdiv i32 %82, 8, !dbg !10914
  store i32 %83, i32* %14, align 4, !dbg !10915
  %84 = load i16, i16* %31, align 2, !dbg !10916
  %85 = zext i16 %84 to i32, !dbg !10916
  %86 = load i16, i16* %30, align 2, !dbg !10917
  %87 = zext i16 %86 to i32, !dbg !10917
  %88 = mul nsw i32 %85, %87, !dbg !10918
  %89 = add nsw i32 %88, 7, !dbg !10919
  %90 = sdiv i32 %89, 8, !dbg !10920
  store i32 %90, i32* %13, align 4, !dbg !10921
  %91 = load i32, i32* %13, align 4, !dbg !10922
  %92 = load i32, i32* %14, align 4, !dbg !10924
  %93 = add i32 %92, 1, !dbg !10925
  %94 = icmp ult i32 %91, %93, !dbg !10926
  br i1 %94, label %95, label %97, !dbg !10927

95:                                               ; preds = %79
  %96 = load i32, i32* %13, align 4, !dbg !10928
  store i32 %96, i32* %12, align 4, !dbg !10929
  br label %100, !dbg !10930

97:                                               ; preds = %79
  %98 = load i32, i32* %14, align 4, !dbg !10931
  %99 = add i32 %98, 1, !dbg !10932
  store i32 %99, i32* %12, align 4, !dbg !10933
  br label %100

100:                                              ; preds = %97, %95
  %101 = load i16, i16* %7, align 2, !dbg !10934
  %102 = zext i16 %101 to i32, !dbg !10934
  switch i32 %102, label %105 [
    i32 0, label %103
    i32 360, label %103
    i32 90, label %104
    i32 180, label %104
    i32 270, label %104
  ], !dbg !10935

103:                                              ; preds = %100, %100
  store i32 0, i32* %6, align 4, !dbg !10936
  br label %630, !dbg !10936

104:                                              ; preds = %100, %100, %100
  br label %108, !dbg !10938

105:                                              ; preds = %100
  %106 = load i16, i16* %7, align 2, !dbg !10939
  %107 = zext i16 %106 to i32, !dbg !10939
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.341, i64 0, i64 0), i32 %107), !dbg !10940
  store i32 -1, i32* %6, align 4, !dbg !10941
  br label %630, !dbg !10941

108:                                              ; preds = %104
  %109 = load i32, i32* %24, align 4, !dbg !10942
  %110 = zext i32 %109 to i64, !dbg !10942
  %111 = call i8* @_TIFFmalloc(i64 %110), !dbg !10944
  store i8* %111, i8** %33, align 8, !dbg !10945
  %112 = icmp ne i8* %111, null, !dbg !10945
  br i1 %112, label %115, label %113, !dbg !10946

113:                                              ; preds = %108
  %114 = load i32, i32* %24, align 4, !dbg !10947
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.342, i64 0, i64 0), i32 %114), !dbg !10949
  store i32 -1, i32* %6, align 4, !dbg !10950
  br label %630, !dbg !10950

115:                                              ; preds = %108
  %116 = load i8*, i8** %33, align 8, !dbg !10951
  %117 = load i32, i32* %24, align 4, !dbg !10952
  %118 = zext i32 %117 to i64, !dbg !10952
  call void @_TIFFmemset(i8* %116, i32 0, i64 %118), !dbg !10953
  %119 = load i8**, i8*** %11, align 8, !dbg !10954
  %120 = load i8*, i8** %119, align 8, !dbg !10955
  store i8* %120, i8** %27, align 8, !dbg !10956
  %121 = load i16, i16* %7, align 2, !dbg !10957
  %122 = zext i16 %121 to i32, !dbg !10957
  switch i32 %122, label %628 [
    i32 180, label %123
    i32 90, label %272
    i32 270, label %452
  ], !dbg !10958

123:                                              ; preds = %115
  %124 = load i16, i16* %31, align 2, !dbg !10959
  %125 = zext i16 %124 to i32, !dbg !10959
  %126 = srem i32 %125, 8, !dbg !10962
  %127 = icmp eq i32 %126, 0, !dbg !10963
  br i1 %127, label %128, label %187, !dbg !10964

128:                                              ; preds = %123
  %129 = load i8*, i8** %27, align 8, !dbg !10965
  store i8* %129, i8** %28, align 8, !dbg !10967
  %130 = load i16, i16* %30, align 2, !dbg !10968
  %131 = zext i16 %130 to i32, !dbg !10968
  %132 = load i16, i16* %31, align 2, !dbg !10969
  %133 = zext i16 %132 to i32, !dbg !10969
  %134 = mul nsw i32 %131, %133, !dbg !10970
  %135 = sdiv i32 %134, 8, !dbg !10971
  store i32 %135, i32* %26, align 4, !dbg !10972
  store i32 0, i32* %15, align 4, !dbg !10973
  br label %136, !dbg !10975

136:                                              ; preds = %183, %128
  %137 = load i32, i32* %15, align 4, !dbg !10976
  %138 = load i32, i32* %22, align 4, !dbg !10978
  %139 = icmp ult i32 %137, %138, !dbg !10979
  br i1 %139, label %140, label %186, !dbg !10980

140:                                              ; preds = %136
  %141 = load i32, i32* %22, align 4, !dbg !10981
  %142 = load i32, i32* %15, align 4, !dbg !10983
  %143 = sub i32 %141, %142, !dbg !10984
  %144 = sub i32 %143, 1, !dbg !10985
  %145 = load i32, i32* %16, align 4, !dbg !10986
  %146 = mul i32 %144, %145, !dbg !10987
  store i32 %146, i32* %18, align 4, !dbg !10988
  store i32 0, i32* %20, align 4, !dbg !10989
  br label %147, !dbg !10991

147:                                              ; preds = %179, %140
  %148 = load i32, i32* %20, align 4, !dbg !10992
  %149 = load i32, i32* %21, align 4, !dbg !10994
  %150 = icmp ult i32 %148, %149, !dbg !10995
  br i1 %150, label %151, label %182, !dbg !10996

151:                                              ; preds = %147
  %152 = load i32, i32* %21, align 4, !dbg !10997
  %153 = load i32, i32* %20, align 4, !dbg !10999
  %154 = sub i32 %152, %153, !dbg !11000
  %155 = sub i32 %154, 1, !dbg !11001
  %156 = load i32, i32* %26, align 4, !dbg !11002
  %157 = mul i32 %155, %156, !dbg !11003
  store i32 %157, i32* %25, align 4, !dbg !11004
  %158 = load i8*, i8** %33, align 8, !dbg !11005
  %159 = load i32, i32* %18, align 4, !dbg !11006
  %160 = zext i32 %159 to i64, !dbg !11007
  %161 = getelementptr inbounds i8, i8* %158, i64 %160, !dbg !11007
  %162 = load i32, i32* %25, align 4, !dbg !11008
  %163 = zext i32 %162 to i64, !dbg !11009
  %164 = getelementptr inbounds i8, i8* %161, i64 %163, !dbg !11009
  store i8* %164, i8** %29, align 8, !dbg !11010
  store i32 0, i32* %19, align 4, !dbg !11011
  br label %165, !dbg !11013

165:                                              ; preds = %175, %151
  %166 = load i32, i32* %19, align 4, !dbg !11014
  %167 = load i32, i32* %13, align 4, !dbg !11016
  %168 = icmp ult i32 %166, %167, !dbg !11017
  br i1 %168, label %169, label %178, !dbg !11018

169:                                              ; preds = %165
  %170 = load i8*, i8** %28, align 8, !dbg !11019
  %171 = getelementptr inbounds i8, i8* %170, i32 1, !dbg !11019
  store i8* %171, i8** %28, align 8, !dbg !11019
  %172 = load i8, i8* %170, align 1, !dbg !11020
  %173 = load i8*, i8** %29, align 8, !dbg !11021
  %174 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !11021
  store i8* %174, i8** %29, align 8, !dbg !11021
  store i8 %172, i8* %173, align 1, !dbg !11022
  br label %175, !dbg !11023

175:                                              ; preds = %169
  %176 = load i32, i32* %19, align 4, !dbg !11024
  %177 = add i32 %176, 1, !dbg !11024
  store i32 %177, i32* %19, align 4, !dbg !11024
  br label %165, !dbg !11025, !llvm.loop !11026

178:                                              ; preds = %165
  br label %179, !dbg !11028

179:                                              ; preds = %178
  %180 = load i32, i32* %20, align 4, !dbg !11029
  %181 = add i32 %180, 1, !dbg !11029
  store i32 %181, i32* %20, align 4, !dbg !11029
  br label %147, !dbg !11030, !llvm.loop !11031

182:                                              ; preds = %147
  br label %183, !dbg !11033

183:                                              ; preds = %182
  %184 = load i32, i32* %15, align 4, !dbg !11034
  %185 = add i32 %184, 1, !dbg !11034
  store i32 %185, i32* %15, align 4, !dbg !11034
  br label %136, !dbg !11035, !llvm.loop !11036

186:                                              ; preds = %136
  br label %268, !dbg !11038

187:                                              ; preds = %123
  store i32 0, i32* %15, align 4, !dbg !11039
  br label %188, !dbg !11042

188:                                              ; preds = %264, %187
  %189 = load i32, i32* %15, align 4, !dbg !11043
  %190 = load i32, i32* %22, align 4, !dbg !11045
  %191 = icmp ult i32 %189, %190, !dbg !11046
  br i1 %191, label %192, label %267, !dbg !11047

192:                                              ; preds = %188
  %193 = load i32, i32* %15, align 4, !dbg !11048
  %194 = load i32, i32* %16, align 4, !dbg !11050
  %195 = mul i32 %193, %194, !dbg !11051
  store i32 %195, i32* %17, align 4, !dbg !11052
  %196 = load i32, i32* %22, align 4, !dbg !11053
  %197 = load i32, i32* %15, align 4, !dbg !11054
  %198 = sub i32 %196, %197, !dbg !11055
  %199 = sub i32 %198, 1, !dbg !11056
  %200 = load i32, i32* %16, align 4, !dbg !11057
  %201 = mul i32 %199, %200, !dbg !11058
  store i32 %201, i32* %18, align 4, !dbg !11059
  %202 = load i8*, i8** %27, align 8, !dbg !11060
  %203 = load i32, i32* %17, align 4, !dbg !11061
  %204 = zext i32 %203 to i64, !dbg !11062
  %205 = getelementptr inbounds i8, i8* %202, i64 %204, !dbg !11062
  store i8* %205, i8** %28, align 8, !dbg !11063
  %206 = load i8*, i8** %33, align 8, !dbg !11064
  %207 = load i32, i32* %18, align 4, !dbg !11065
  %208 = zext i32 %207 to i64, !dbg !11066
  %209 = getelementptr inbounds i8, i8* %206, i64 %208, !dbg !11066
  store i8* %209, i8** %29, align 8, !dbg !11067
  %210 = load i32, i32* %12, align 4, !dbg !11068
  switch i32 %210, label %259 [
    i32 1, label %211
    i32 2, label %237
    i32 3, label %248
    i32 4, label %248
    i32 5, label %248
  ], !dbg !11069

211:                                              ; preds = %192
  %212 = load i16, i16* %31, align 2, !dbg !11070
  %213 = zext i16 %212 to i32, !dbg !11070
  %214 = icmp eq i32 %213, 1, !dbg !11073
  br i1 %214, label %215, label %226, !dbg !11074

215:                                              ; preds = %211
  %216 = load i16, i16* %30, align 2, !dbg !11075
  %217 = load i16, i16* %31, align 2, !dbg !11078
  %218 = load i32, i32* %21, align 4, !dbg !11079
  %219 = load i8*, i8** %28, align 8, !dbg !11080
  %220 = load i8*, i8** %29, align 8, !dbg !11081
  %221 = call i32 @reverseSamples8bits(i16 zeroext %216, i16 zeroext %217, i32 %218, i8* %219, i8* %220), !dbg !11082
  %222 = icmp ne i32 %221, 0, !dbg !11082
  br i1 %222, label %223, label %225, !dbg !11083

223:                                              ; preds = %215
  %224 = load i8*, i8** %33, align 8, !dbg !11084
  call void @_TIFFfree(i8* %224), !dbg !11086
  store i32 -1, i32* %6, align 4, !dbg !11087
  br label %630, !dbg !11087

225:                                              ; preds = %215
  br label %263, !dbg !11088

226:                                              ; preds = %211
  %227 = load i16, i16* %30, align 2, !dbg !11089
  %228 = load i16, i16* %31, align 2, !dbg !11091
  %229 = load i32, i32* %21, align 4, !dbg !11092
  %230 = load i8*, i8** %28, align 8, !dbg !11093
  %231 = load i8*, i8** %29, align 8, !dbg !11094
  %232 = call i32 @reverseSamples16bits(i16 zeroext %227, i16 zeroext %228, i32 %229, i8* %230, i8* %231), !dbg !11095
  %233 = icmp ne i32 %232, 0, !dbg !11095
  br i1 %233, label %234, label %236, !dbg !11096

234:                                              ; preds = %226
  %235 = load i8*, i8** %33, align 8, !dbg !11097
  call void @_TIFFfree(i8* %235), !dbg !11099
  store i32 -1, i32* %6, align 4, !dbg !11100
  br label %630, !dbg !11100

236:                                              ; preds = %226
  br label %263, !dbg !11101

237:                                              ; preds = %192
  %238 = load i16, i16* %30, align 2, !dbg !11102
  %239 = load i16, i16* %31, align 2, !dbg !11104
  %240 = load i32, i32* %21, align 4, !dbg !11105
  %241 = load i8*, i8** %28, align 8, !dbg !11106
  %242 = load i8*, i8** %29, align 8, !dbg !11107
  %243 = call i32 @reverseSamples24bits(i16 zeroext %238, i16 zeroext %239, i32 %240, i8* %241, i8* %242), !dbg !11108
  %244 = icmp ne i32 %243, 0, !dbg !11108
  br i1 %244, label %245, label %247, !dbg !11109

245:                                              ; preds = %237
  %246 = load i8*, i8** %33, align 8, !dbg !11110
  call void @_TIFFfree(i8* %246), !dbg !11112
  store i32 -1, i32* %6, align 4, !dbg !11113
  br label %630, !dbg !11113

247:                                              ; preds = %237
  br label %263, !dbg !11114

248:                                              ; preds = %192, %192, %192
  %249 = load i16, i16* %30, align 2, !dbg !11115
  %250 = load i16, i16* %31, align 2, !dbg !11117
  %251 = load i32, i32* %21, align 4, !dbg !11118
  %252 = load i8*, i8** %28, align 8, !dbg !11119
  %253 = load i8*, i8** %29, align 8, !dbg !11120
  %254 = call i32 @reverseSamples32bits(i16 zeroext %249, i16 zeroext %250, i32 %251, i8* %252, i8* %253), !dbg !11121
  %255 = icmp ne i32 %254, 0, !dbg !11121
  br i1 %255, label %256, label %258, !dbg !11122

256:                                              ; preds = %248
  %257 = load i8*, i8** %33, align 8, !dbg !11123
  call void @_TIFFfree(i8* %257), !dbg !11125
  store i32 -1, i32* %6, align 4, !dbg !11126
  br label %630, !dbg !11126

258:                                              ; preds = %248
  br label %263, !dbg !11127

259:                                              ; preds = %192
  %260 = load i16, i16* %31, align 2, !dbg !11128
  %261 = zext i16 %260 to i32, !dbg !11128
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %261), !dbg !11129
  %262 = load i8*, i8** %33, align 8, !dbg !11130
  call void @_TIFFfree(i8* %262), !dbg !11131
  store i32 -1, i32* %6, align 4, !dbg !11132
  br label %630, !dbg !11132

263:                                              ; preds = %258, %247, %236, %225
  br label %264, !dbg !11133

264:                                              ; preds = %263
  %265 = load i32, i32* %15, align 4, !dbg !11134
  %266 = add i32 %265, 1, !dbg !11134
  store i32 %266, i32* %15, align 4, !dbg !11134
  br label %188, !dbg !11135, !llvm.loop !11136

267:                                              ; preds = %188
  br label %268

268:                                              ; preds = %267, %186
  %269 = load i8*, i8** %27, align 8, !dbg !11138
  call void @_TIFFfree(i8* %269), !dbg !11139
  %270 = load i8*, i8** %33, align 8, !dbg !11140
  %271 = load i8**, i8*** %11, align 8, !dbg !11141
  store i8* %270, i8** %271, align 8, !dbg !11142
  br label %629, !dbg !11143

272:                                              ; preds = %115
  %273 = load i16, i16* %31, align 2, !dbg !11144
  %274 = zext i16 %273 to i32, !dbg !11144
  %275 = srem i32 %274, 8, !dbg !11146
  %276 = icmp eq i32 %275, 0, !dbg !11147
  br i1 %276, label %277, label %336, !dbg !11148

277:                                              ; preds = %272
  store i32 0, i32* %20, align 4, !dbg !11149
  br label %278, !dbg !11152

278:                                              ; preds = %332, %277
  %279 = load i32, i32* %20, align 4, !dbg !11153
  %280 = load i32, i32* %21, align 4, !dbg !11155
  %281 = icmp ult i32 %279, %280, !dbg !11156
  br i1 %281, label %282, label %335, !dbg !11157

282:                                              ; preds = %278
  %283 = load i32, i32* %22, align 4, !dbg !11158
  %284 = sub i32 %283, 1, !dbg !11160
  %285 = load i32, i32* %16, align 4, !dbg !11161
  %286 = mul i32 %284, %285, !dbg !11162
  %287 = load i32, i32* %20, align 4, !dbg !11163
  %288 = load i32, i32* %13, align 4, !dbg !11164
  %289 = mul i32 %287, %288, !dbg !11165
  %290 = add i32 %286, %289, !dbg !11166
  store i32 %290, i32* %17, align 4, !dbg !11167
  %291 = load i32, i32* %20, align 4, !dbg !11168
  %292 = load i32, i32* %23, align 4, !dbg !11169
  %293 = mul i32 %291, %292, !dbg !11170
  store i32 %293, i32* %18, align 4, !dbg !11171
  %294 = load i8*, i8** %27, align 8, !dbg !11172
  %295 = load i32, i32* %17, align 4, !dbg !11173
  %296 = zext i32 %295 to i64, !dbg !11174
  %297 = getelementptr inbounds i8, i8* %294, i64 %296, !dbg !11174
  store i8* %297, i8** %28, align 8, !dbg !11175
  %298 = load i8*, i8** %33, align 8, !dbg !11176
  %299 = load i32, i32* %18, align 4, !dbg !11177
  %300 = zext i32 %299 to i64, !dbg !11178
  %301 = getelementptr inbounds i8, i8* %298, i64 %300, !dbg !11178
  store i8* %301, i8** %29, align 8, !dbg !11179
  %302 = load i32, i32* %22, align 4, !dbg !11180
  store i32 %302, i32* %15, align 4, !dbg !11182
  br label %303, !dbg !11183

303:                                              ; preds = %328, %282
  %304 = load i32, i32* %15, align 4, !dbg !11184
  %305 = icmp ugt i32 %304, 0, !dbg !11186
  br i1 %305, label %306, label %331, !dbg !11187

306:                                              ; preds = %303
  store i32 0, i32* %19, align 4, !dbg !11188
  br label %307, !dbg !11191

307:                                              ; preds = %319, %306
  %308 = load i32, i32* %19, align 4, !dbg !11192
  %309 = load i32, i32* %13, align 4, !dbg !11194
  %310 = icmp ult i32 %308, %309, !dbg !11195
  br i1 %310, label %311, label %322, !dbg !11196

311:                                              ; preds = %307
  %312 = load i8*, i8** %28, align 8, !dbg !11197
  %313 = load i32, i32* %19, align 4, !dbg !11198
  %314 = zext i32 %313 to i64, !dbg !11199
  %315 = getelementptr inbounds i8, i8* %312, i64 %314, !dbg !11199
  %316 = load i8, i8* %315, align 1, !dbg !11200
  %317 = load i8*, i8** %29, align 8, !dbg !11201
  %318 = getelementptr inbounds i8, i8* %317, i32 1, !dbg !11201
  store i8* %318, i8** %29, align 8, !dbg !11201
  store i8 %316, i8* %317, align 1, !dbg !11202
  br label %319, !dbg !11203

319:                                              ; preds = %311
  %320 = load i32, i32* %19, align 4, !dbg !11204
  %321 = add i32 %320, 1, !dbg !11204
  store i32 %321, i32* %19, align 4, !dbg !11204
  br label %307, !dbg !11205, !llvm.loop !11206

322:                                              ; preds = %307
  %323 = load i32, i32* %16, align 4, !dbg !11208
  %324 = load i8*, i8** %28, align 8, !dbg !11209
  %325 = zext i32 %323 to i64, !dbg !11209
  %326 = sub i64 0, %325, !dbg !11209
  %327 = getelementptr inbounds i8, i8* %324, i64 %326, !dbg !11209
  store i8* %327, i8** %28, align 8, !dbg !11209
  br label %328, !dbg !11210

328:                                              ; preds = %322
  %329 = load i32, i32* %15, align 4, !dbg !11211
  %330 = add i32 %329, -1, !dbg !11211
  store i32 %330, i32* %15, align 4, !dbg !11211
  br label %303, !dbg !11212, !llvm.loop !11213

331:                                              ; preds = %303
  br label %332, !dbg !11215

332:                                              ; preds = %331
  %333 = load i32, i32* %20, align 4, !dbg !11216
  %334 = add i32 %333, 1, !dbg !11216
  store i32 %334, i32* %20, align 4, !dbg !11216
  br label %278, !dbg !11217, !llvm.loop !11218

335:                                              ; preds = %278
  br label %427, !dbg !11220

336:                                              ; preds = %272
  store i32 0, i32* %20, align 4, !dbg !11221
  br label %337, !dbg !11224

337:                                              ; preds = %423, %336
  %338 = load i32, i32* %20, align 4, !dbg !11225
  %339 = load i32, i32* %21, align 4, !dbg !11227
  %340 = icmp ult i32 %338, %339, !dbg !11228
  br i1 %340, label %341, label %426, !dbg !11229

341:                                              ; preds = %337
  %342 = load i32, i32* %22, align 4, !dbg !11230
  %343 = sub i32 %342, 1, !dbg !11232
  %344 = load i32, i32* %16, align 4, !dbg !11233
  %345 = mul i32 %343, %344, !dbg !11234
  store i32 %345, i32* %17, align 4, !dbg !11235
  %346 = load i32, i32* %20, align 4, !dbg !11236
  %347 = load i32, i32* %23, align 4, !dbg !11237
  %348 = mul i32 %346, %347, !dbg !11238
  store i32 %348, i32* %18, align 4, !dbg !11239
  %349 = load i8*, i8** %27, align 8, !dbg !11240
  %350 = load i32, i32* %17, align 4, !dbg !11241
  %351 = zext i32 %350 to i64, !dbg !11242
  %352 = getelementptr inbounds i8, i8* %349, i64 %351, !dbg !11242
  store i8* %352, i8** %28, align 8, !dbg !11243
  %353 = load i8*, i8** %33, align 8, !dbg !11244
  %354 = load i32, i32* %18, align 4, !dbg !11245
  %355 = zext i32 %354 to i64, !dbg !11246
  %356 = getelementptr inbounds i8, i8* %353, i64 %355, !dbg !11246
  store i8* %356, i8** %29, align 8, !dbg !11247
  %357 = load i32, i32* %12, align 4, !dbg !11248
  switch i32 %357, label %418 [
    i32 1, label %358
    i32 2, label %390
    i32 3, label %404
    i32 4, label %404
    i32 5, label %404
  ], !dbg !11249

358:                                              ; preds = %341
  %359 = load i16, i16* %31, align 2, !dbg !11250
  %360 = zext i16 %359 to i32, !dbg !11250
  %361 = icmp eq i32 %360, 1, !dbg !11253
  br i1 %361, label %362, label %376, !dbg !11254

362:                                              ; preds = %358
  %363 = load i16, i16* %7, align 2, !dbg !11255
  %364 = load i16, i16* %30, align 2, !dbg !11258
  %365 = load i16, i16* %31, align 2, !dbg !11259
  %366 = load i32, i32* %21, align 4, !dbg !11260
  %367 = load i32, i32* %22, align 4, !dbg !11261
  %368 = load i32, i32* %20, align 4, !dbg !11262
  %369 = load i8*, i8** %28, align 8, !dbg !11263
  %370 = load i8*, i8** %29, align 8, !dbg !11264
  %371 = call i32 @rotateContigSamples8bits(i16 zeroext %363, i16 zeroext %364, i16 zeroext %365, i32 %366, i32 %367, i32 %368, i8* %369, i8* %370), !dbg !11265
  %372 = icmp ne i32 %371, 0, !dbg !11265
  br i1 %372, label %373, label %375, !dbg !11266

373:                                              ; preds = %362
  %374 = load i8*, i8** %33, align 8, !dbg !11267
  call void @_TIFFfree(i8* %374), !dbg !11269
  store i32 -1, i32* %6, align 4, !dbg !11270
  br label %630, !dbg !11270

375:                                              ; preds = %362
  br label %422, !dbg !11271

376:                                              ; preds = %358
  %377 = load i16, i16* %7, align 2, !dbg !11272
  %378 = load i16, i16* %30, align 2, !dbg !11274
  %379 = load i16, i16* %31, align 2, !dbg !11275
  %380 = load i32, i32* %21, align 4, !dbg !11276
  %381 = load i32, i32* %22, align 4, !dbg !11277
  %382 = load i32, i32* %20, align 4, !dbg !11278
  %383 = load i8*, i8** %28, align 8, !dbg !11279
  %384 = load i8*, i8** %29, align 8, !dbg !11280
  %385 = call i32 @rotateContigSamples16bits(i16 zeroext %377, i16 zeroext %378, i16 zeroext %379, i32 %380, i32 %381, i32 %382, i8* %383, i8* %384), !dbg !11281
  %386 = icmp ne i32 %385, 0, !dbg !11281
  br i1 %386, label %387, label %389, !dbg !11282

387:                                              ; preds = %376
  %388 = load i8*, i8** %33, align 8, !dbg !11283
  call void @_TIFFfree(i8* %388), !dbg !11285
  store i32 -1, i32* %6, align 4, !dbg !11286
  br label %630, !dbg !11286

389:                                              ; preds = %376
  br label %422, !dbg !11287

390:                                              ; preds = %341
  %391 = load i16, i16* %7, align 2, !dbg !11288
  %392 = load i16, i16* %30, align 2, !dbg !11290
  %393 = load i16, i16* %31, align 2, !dbg !11291
  %394 = load i32, i32* %21, align 4, !dbg !11292
  %395 = load i32, i32* %22, align 4, !dbg !11293
  %396 = load i32, i32* %20, align 4, !dbg !11294
  %397 = load i8*, i8** %28, align 8, !dbg !11295
  %398 = load i8*, i8** %29, align 8, !dbg !11296
  %399 = call i32 @rotateContigSamples24bits(i16 zeroext %391, i16 zeroext %392, i16 zeroext %393, i32 %394, i32 %395, i32 %396, i8* %397, i8* %398), !dbg !11297
  %400 = icmp ne i32 %399, 0, !dbg !11297
  br i1 %400, label %401, label %403, !dbg !11298

401:                                              ; preds = %390
  %402 = load i8*, i8** %33, align 8, !dbg !11299
  call void @_TIFFfree(i8* %402), !dbg !11301
  store i32 -1, i32* %6, align 4, !dbg !11302
  br label %630, !dbg !11302

403:                                              ; preds = %390
  br label %422, !dbg !11303

404:                                              ; preds = %341, %341, %341
  %405 = load i16, i16* %7, align 2, !dbg !11304
  %406 = load i16, i16* %30, align 2, !dbg !11306
  %407 = load i16, i16* %31, align 2, !dbg !11307
  %408 = load i32, i32* %21, align 4, !dbg !11308
  %409 = load i32, i32* %22, align 4, !dbg !11309
  %410 = load i32, i32* %20, align 4, !dbg !11310
  %411 = load i8*, i8** %28, align 8, !dbg !11311
  %412 = load i8*, i8** %29, align 8, !dbg !11312
  %413 = call i32 @rotateContigSamples32bits(i16 zeroext %405, i16 zeroext %406, i16 zeroext %407, i32 %408, i32 %409, i32 %410, i8* %411, i8* %412), !dbg !11313
  %414 = icmp ne i32 %413, 0, !dbg !11313
  br i1 %414, label %415, label %417, !dbg !11314

415:                                              ; preds = %404
  %416 = load i8*, i8** %33, align 8, !dbg !11315
  call void @_TIFFfree(i8* %416), !dbg !11317
  store i32 -1, i32* %6, align 4, !dbg !11318
  br label %630, !dbg !11318

417:                                              ; preds = %404
  br label %422, !dbg !11319

418:                                              ; preds = %341
  %419 = load i16, i16* %31, align 2, !dbg !11320
  %420 = zext i16 %419 to i32, !dbg !11320
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %420), !dbg !11321
  %421 = load i8*, i8** %33, align 8, !dbg !11322
  call void @_TIFFfree(i8* %421), !dbg !11323
  store i32 -1, i32* %6, align 4, !dbg !11324
  br label %630, !dbg !11324

422:                                              ; preds = %417, %403, %389, %375
  br label %423, !dbg !11325

423:                                              ; preds = %422
  %424 = load i32, i32* %20, align 4, !dbg !11326
  %425 = add i32 %424, 1, !dbg !11326
  store i32 %425, i32* %20, align 4, !dbg !11326
  br label %337, !dbg !11327, !llvm.loop !11328

426:                                              ; preds = %337
  br label %427

427:                                              ; preds = %426, %335
  %428 = load i8*, i8** %27, align 8, !dbg !11330
  call void @_TIFFfree(i8* %428), !dbg !11331
  %429 = load i8*, i8** %33, align 8, !dbg !11332
  %430 = load i8**, i8*** %11, align 8, !dbg !11333
  store i8* %429, i8** %430, align 8, !dbg !11334
  %431 = load i32, i32* %22, align 4, !dbg !11335
  %432 = load i32*, i32** %9, align 8, !dbg !11336
  store i32 %431, i32* %432, align 4, !dbg !11337
  %433 = load i32, i32* %21, align 4, !dbg !11338
  %434 = load i32*, i32** %10, align 8, !dbg !11339
  store i32 %433, i32* %434, align 4, !dbg !11340
  %435 = load i32, i32* %22, align 4, !dbg !11341
  %436 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11342
  %437 = getelementptr inbounds %struct.image_data, %struct.image_data* %436, i32 0, i32 2, !dbg !11343
  store i32 %435, i32* %437, align 4, !dbg !11344
  %438 = load i32, i32* %21, align 4, !dbg !11345
  %439 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11346
  %440 = getelementptr inbounds %struct.image_data, %struct.image_data* %439, i32 0, i32 3, !dbg !11347
  store i32 %438, i32* %440, align 4, !dbg !11348
  %441 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11349
  %442 = getelementptr inbounds %struct.image_data, %struct.image_data* %441, i32 0, i32 0, !dbg !11350
  %443 = load float, float* %442, align 4, !dbg !11350
  store float %443, float* %32, align 4, !dbg !11351
  %444 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11352
  %445 = getelementptr inbounds %struct.image_data, %struct.image_data* %444, i32 0, i32 1, !dbg !11353
  %446 = load float, float* %445, align 4, !dbg !11353
  %447 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11354
  %448 = getelementptr inbounds %struct.image_data, %struct.image_data* %447, i32 0, i32 0, !dbg !11355
  store float %446, float* %448, align 4, !dbg !11356
  %449 = load float, float* %32, align 4, !dbg !11357
  %450 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11358
  %451 = getelementptr inbounds %struct.image_data, %struct.image_data* %450, i32 0, i32 1, !dbg !11359
  store float %449, float* %451, align 4, !dbg !11360
  br label %629, !dbg !11361

452:                                              ; preds = %115
  %453 = load i16, i16* %31, align 2, !dbg !11362
  %454 = zext i16 %453 to i32, !dbg !11362
  %455 = srem i32 %454, 8, !dbg !11364
  %456 = icmp eq i32 %455, 0, !dbg !11365
  br i1 %456, label %457, label %513, !dbg !11366

457:                                              ; preds = %452
  store i32 0, i32* %20, align 4, !dbg !11367
  br label %458, !dbg !11370

458:                                              ; preds = %509, %457
  %459 = load i32, i32* %20, align 4, !dbg !11371
  %460 = load i32, i32* %21, align 4, !dbg !11373
  %461 = icmp ult i32 %459, %460, !dbg !11374
  br i1 %461, label %462, label %512, !dbg !11375

462:                                              ; preds = %458
  %463 = load i32, i32* %20, align 4, !dbg !11376
  %464 = load i32, i32* %13, align 4, !dbg !11378
  %465 = mul i32 %463, %464, !dbg !11379
  store i32 %465, i32* %17, align 4, !dbg !11380
  %466 = load i32, i32* %21, align 4, !dbg !11381
  %467 = load i32, i32* %20, align 4, !dbg !11382
  %468 = sub i32 %466, %467, !dbg !11383
  %469 = sub i32 %468, 1, !dbg !11384
  %470 = load i32, i32* %23, align 4, !dbg !11385
  %471 = mul i32 %469, %470, !dbg !11386
  store i32 %471, i32* %18, align 4, !dbg !11387
  %472 = load i8*, i8** %27, align 8, !dbg !11388
  %473 = load i32, i32* %17, align 4, !dbg !11389
  %474 = zext i32 %473 to i64, !dbg !11390
  %475 = getelementptr inbounds i8, i8* %472, i64 %474, !dbg !11390
  store i8* %475, i8** %28, align 8, !dbg !11391
  %476 = load i8*, i8** %33, align 8, !dbg !11392
  %477 = load i32, i32* %18, align 4, !dbg !11393
  %478 = zext i32 %477 to i64, !dbg !11394
  %479 = getelementptr inbounds i8, i8* %476, i64 %478, !dbg !11394
  store i8* %479, i8** %29, align 8, !dbg !11395
  %480 = load i32, i32* %22, align 4, !dbg !11396
  store i32 %480, i32* %15, align 4, !dbg !11398
  br label %481, !dbg !11399

481:                                              ; preds = %505, %462
  %482 = load i32, i32* %15, align 4, !dbg !11400
  %483 = icmp ugt i32 %482, 0, !dbg !11402
  br i1 %483, label %484, label %508, !dbg !11403

484:                                              ; preds = %481
  store i32 0, i32* %19, align 4, !dbg !11404
  br label %485, !dbg !11407

485:                                              ; preds = %497, %484
  %486 = load i32, i32* %19, align 4, !dbg !11408
  %487 = load i32, i32* %13, align 4, !dbg !11410
  %488 = icmp ult i32 %486, %487, !dbg !11411
  br i1 %488, label %489, label %500, !dbg !11412

489:                                              ; preds = %485
  %490 = load i8*, i8** %28, align 8, !dbg !11413
  %491 = load i32, i32* %19, align 4, !dbg !11414
  %492 = zext i32 %491 to i64, !dbg !11415
  %493 = getelementptr inbounds i8, i8* %490, i64 %492, !dbg !11415
  %494 = load i8, i8* %493, align 1, !dbg !11416
  %495 = load i8*, i8** %29, align 8, !dbg !11417
  %496 = getelementptr inbounds i8, i8* %495, i32 1, !dbg !11417
  store i8* %496, i8** %29, align 8, !dbg !11417
  store i8 %494, i8* %495, align 1, !dbg !11418
  br label %497, !dbg !11419

497:                                              ; preds = %489
  %498 = load i32, i32* %19, align 4, !dbg !11420
  %499 = add i32 %498, 1, !dbg !11420
  store i32 %499, i32* %19, align 4, !dbg !11420
  br label %485, !dbg !11421, !llvm.loop !11422

500:                                              ; preds = %485
  %501 = load i32, i32* %16, align 4, !dbg !11424
  %502 = load i8*, i8** %28, align 8, !dbg !11425
  %503 = zext i32 %501 to i64, !dbg !11425
  %504 = getelementptr inbounds i8, i8* %502, i64 %503, !dbg !11425
  store i8* %504, i8** %28, align 8, !dbg !11425
  br label %505, !dbg !11426

505:                                              ; preds = %500
  %506 = load i32, i32* %15, align 4, !dbg !11427
  %507 = add i32 %506, -1, !dbg !11427
  store i32 %507, i32* %15, align 4, !dbg !11427
  br label %481, !dbg !11428, !llvm.loop !11429

508:                                              ; preds = %481
  br label %509, !dbg !11431

509:                                              ; preds = %508
  %510 = load i32, i32* %20, align 4, !dbg !11432
  %511 = add i32 %510, 1, !dbg !11432
  store i32 %511, i32* %20, align 4, !dbg !11432
  br label %458, !dbg !11433, !llvm.loop !11434

512:                                              ; preds = %458
  br label %603, !dbg !11436

513:                                              ; preds = %452
  store i32 0, i32* %20, align 4, !dbg !11437
  br label %514, !dbg !11440

514:                                              ; preds = %599, %513
  %515 = load i32, i32* %20, align 4, !dbg !11441
  %516 = load i32, i32* %21, align 4, !dbg !11443
  %517 = icmp ult i32 %515, %516, !dbg !11444
  br i1 %517, label %518, label %602, !dbg !11445

518:                                              ; preds = %514
  store i32 0, i32* %17, align 4, !dbg !11446
  %519 = load i32, i32* %21, align 4, !dbg !11448
  %520 = load i32, i32* %20, align 4, !dbg !11449
  %521 = sub i32 %519, %520, !dbg !11450
  %522 = sub i32 %521, 1, !dbg !11451
  %523 = load i32, i32* %23, align 4, !dbg !11452
  %524 = mul i32 %522, %523, !dbg !11453
  store i32 %524, i32* %18, align 4, !dbg !11454
  %525 = load i8*, i8** %27, align 8, !dbg !11455
  %526 = load i32, i32* %17, align 4, !dbg !11456
  %527 = zext i32 %526 to i64, !dbg !11457
  %528 = getelementptr inbounds i8, i8* %525, i64 %527, !dbg !11457
  store i8* %528, i8** %28, align 8, !dbg !11458
  %529 = load i8*, i8** %33, align 8, !dbg !11459
  %530 = load i32, i32* %18, align 4, !dbg !11460
  %531 = zext i32 %530 to i64, !dbg !11461
  %532 = getelementptr inbounds i8, i8* %529, i64 %531, !dbg !11461
  store i8* %532, i8** %29, align 8, !dbg !11462
  %533 = load i32, i32* %12, align 4, !dbg !11463
  switch i32 %533, label %594 [
    i32 1, label %534
    i32 2, label %566
    i32 3, label %580
    i32 4, label %580
    i32 5, label %580
  ], !dbg !11464

534:                                              ; preds = %518
  %535 = load i16, i16* %31, align 2, !dbg !11465
  %536 = zext i16 %535 to i32, !dbg !11465
  %537 = icmp eq i32 %536, 1, !dbg !11468
  br i1 %537, label %538, label %552, !dbg !11469

538:                                              ; preds = %534
  %539 = load i16, i16* %7, align 2, !dbg !11470
  %540 = load i16, i16* %30, align 2, !dbg !11473
  %541 = load i16, i16* %31, align 2, !dbg !11474
  %542 = load i32, i32* %21, align 4, !dbg !11475
  %543 = load i32, i32* %22, align 4, !dbg !11476
  %544 = load i32, i32* %20, align 4, !dbg !11477
  %545 = load i8*, i8** %28, align 8, !dbg !11478
  %546 = load i8*, i8** %29, align 8, !dbg !11479
  %547 = call i32 @rotateContigSamples8bits(i16 zeroext %539, i16 zeroext %540, i16 zeroext %541, i32 %542, i32 %543, i32 %544, i8* %545, i8* %546), !dbg !11480
  %548 = icmp ne i32 %547, 0, !dbg !11480
  br i1 %548, label %549, label %551, !dbg !11481

549:                                              ; preds = %538
  %550 = load i8*, i8** %33, align 8, !dbg !11482
  call void @_TIFFfree(i8* %550), !dbg !11484
  store i32 -1, i32* %6, align 4, !dbg !11485
  br label %630, !dbg !11485

551:                                              ; preds = %538
  br label %598, !dbg !11486

552:                                              ; preds = %534
  %553 = load i16, i16* %7, align 2, !dbg !11487
  %554 = load i16, i16* %30, align 2, !dbg !11489
  %555 = load i16, i16* %31, align 2, !dbg !11490
  %556 = load i32, i32* %21, align 4, !dbg !11491
  %557 = load i32, i32* %22, align 4, !dbg !11492
  %558 = load i32, i32* %20, align 4, !dbg !11493
  %559 = load i8*, i8** %28, align 8, !dbg !11494
  %560 = load i8*, i8** %29, align 8, !dbg !11495
  %561 = call i32 @rotateContigSamples16bits(i16 zeroext %553, i16 zeroext %554, i16 zeroext %555, i32 %556, i32 %557, i32 %558, i8* %559, i8* %560), !dbg !11496
  %562 = icmp ne i32 %561, 0, !dbg !11496
  br i1 %562, label %563, label %565, !dbg !11497

563:                                              ; preds = %552
  %564 = load i8*, i8** %33, align 8, !dbg !11498
  call void @_TIFFfree(i8* %564), !dbg !11500
  store i32 -1, i32* %6, align 4, !dbg !11501
  br label %630, !dbg !11501

565:                                              ; preds = %552
  br label %598, !dbg !11502

566:                                              ; preds = %518
  %567 = load i16, i16* %7, align 2, !dbg !11503
  %568 = load i16, i16* %30, align 2, !dbg !11505
  %569 = load i16, i16* %31, align 2, !dbg !11506
  %570 = load i32, i32* %21, align 4, !dbg !11507
  %571 = load i32, i32* %22, align 4, !dbg !11508
  %572 = load i32, i32* %20, align 4, !dbg !11509
  %573 = load i8*, i8** %28, align 8, !dbg !11510
  %574 = load i8*, i8** %29, align 8, !dbg !11511
  %575 = call i32 @rotateContigSamples24bits(i16 zeroext %567, i16 zeroext %568, i16 zeroext %569, i32 %570, i32 %571, i32 %572, i8* %573, i8* %574), !dbg !11512
  %576 = icmp ne i32 %575, 0, !dbg !11512
  br i1 %576, label %577, label %579, !dbg !11513

577:                                              ; preds = %566
  %578 = load i8*, i8** %33, align 8, !dbg !11514
  call void @_TIFFfree(i8* %578), !dbg !11516
  store i32 -1, i32* %6, align 4, !dbg !11517
  br label %630, !dbg !11517

579:                                              ; preds = %566
  br label %598, !dbg !11518

580:                                              ; preds = %518, %518, %518
  %581 = load i16, i16* %7, align 2, !dbg !11519
  %582 = load i16, i16* %30, align 2, !dbg !11521
  %583 = load i16, i16* %31, align 2, !dbg !11522
  %584 = load i32, i32* %21, align 4, !dbg !11523
  %585 = load i32, i32* %22, align 4, !dbg !11524
  %586 = load i32, i32* %20, align 4, !dbg !11525
  %587 = load i8*, i8** %28, align 8, !dbg !11526
  %588 = load i8*, i8** %29, align 8, !dbg !11527
  %589 = call i32 @rotateContigSamples32bits(i16 zeroext %581, i16 zeroext %582, i16 zeroext %583, i32 %584, i32 %585, i32 %586, i8* %587, i8* %588), !dbg !11528
  %590 = icmp ne i32 %589, 0, !dbg !11528
  br i1 %590, label %591, label %593, !dbg !11529

591:                                              ; preds = %580
  %592 = load i8*, i8** %33, align 8, !dbg !11530
  call void @_TIFFfree(i8* %592), !dbg !11532
  store i32 -1, i32* %6, align 4, !dbg !11533
  br label %630, !dbg !11533

593:                                              ; preds = %580
  br label %598, !dbg !11534

594:                                              ; preds = %518
  %595 = load i16, i16* %31, align 2, !dbg !11535
  %596 = zext i16 %595 to i32, !dbg !11535
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %596), !dbg !11536
  %597 = load i8*, i8** %33, align 8, !dbg !11537
  call void @_TIFFfree(i8* %597), !dbg !11538
  store i32 -1, i32* %6, align 4, !dbg !11539
  br label %630, !dbg !11539

598:                                              ; preds = %593, %579, %565, %551
  br label %599, !dbg !11540

599:                                              ; preds = %598
  %600 = load i32, i32* %20, align 4, !dbg !11541
  %601 = add i32 %600, 1, !dbg !11541
  store i32 %601, i32* %20, align 4, !dbg !11541
  br label %514, !dbg !11542, !llvm.loop !11543

602:                                              ; preds = %514
  br label %603

603:                                              ; preds = %602, %512
  %604 = load i8*, i8** %27, align 8, !dbg !11545
  call void @_TIFFfree(i8* %604), !dbg !11546
  %605 = load i8*, i8** %33, align 8, !dbg !11547
  %606 = load i8**, i8*** %11, align 8, !dbg !11548
  store i8* %605, i8** %606, align 8, !dbg !11549
  %607 = load i32, i32* %22, align 4, !dbg !11550
  %608 = load i32*, i32** %9, align 8, !dbg !11551
  store i32 %607, i32* %608, align 4, !dbg !11552
  %609 = load i32, i32* %21, align 4, !dbg !11553
  %610 = load i32*, i32** %10, align 8, !dbg !11554
  store i32 %609, i32* %610, align 4, !dbg !11555
  %611 = load i32, i32* %22, align 4, !dbg !11556
  %612 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11557
  %613 = getelementptr inbounds %struct.image_data, %struct.image_data* %612, i32 0, i32 2, !dbg !11558
  store i32 %611, i32* %613, align 4, !dbg !11559
  %614 = load i32, i32* %21, align 4, !dbg !11560
  %615 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11561
  %616 = getelementptr inbounds %struct.image_data, %struct.image_data* %615, i32 0, i32 3, !dbg !11562
  store i32 %614, i32* %616, align 4, !dbg !11563
  %617 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11564
  %618 = getelementptr inbounds %struct.image_data, %struct.image_data* %617, i32 0, i32 0, !dbg !11565
  %619 = load float, float* %618, align 4, !dbg !11565
  store float %619, float* %32, align 4, !dbg !11566
  %620 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11567
  %621 = getelementptr inbounds %struct.image_data, %struct.image_data* %620, i32 0, i32 1, !dbg !11568
  %622 = load float, float* %621, align 4, !dbg !11568
  %623 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11569
  %624 = getelementptr inbounds %struct.image_data, %struct.image_data* %623, i32 0, i32 0, !dbg !11570
  store float %622, float* %624, align 4, !dbg !11571
  %625 = load float, float* %32, align 4, !dbg !11572
  %626 = load %struct.image_data*, %struct.image_data** %8, align 8, !dbg !11573
  %627 = getelementptr inbounds %struct.image_data, %struct.image_data* %626, i32 0, i32 1, !dbg !11574
  store float %625, float* %627, align 4, !dbg !11575
  br label %629, !dbg !11576

628:                                              ; preds = %115
  br label %629, !dbg !11577

629:                                              ; preds = %628, %603, %427, %268
  store i32 0, i32* %6, align 4, !dbg !11578
  br label %630, !dbg !11578

630:                                              ; preds = %629, %594, %591, %577, %563, %549, %418, %415, %401, %387, %373, %259, %256, %245, %234, %223, %113, %105, %103
  %631 = load i32, i32* %6, align 4, !dbg !11579
  ret i32 %631, !dbg !11579
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reverseSamples8bits(i16 zeroext, i16 zeroext, i32, i8*, i8*) #0 !dbg !11580 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i16, align 2
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i16 %1, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !11585, metadata !DIExpression()), !dbg !11586
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11587, metadata !DIExpression()), !dbg !11588
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !11589, metadata !DIExpression()), !dbg !11590
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !11591, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.declare(metadata i32* %12, metadata !11593, metadata !DIExpression()), !dbg !11594
  store i32 0, i32* %12, align 4, !dbg !11594
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11595, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11597, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.declare(metadata i32* %15, metadata !11599, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.declare(metadata i32* %16, metadata !11601, metadata !DIExpression()), !dbg !11602
  store i32 0, i32* %16, align 4, !dbg !11602
  call void @llvm.dbg.declare(metadata i8* %17, metadata !11603, metadata !DIExpression()), !dbg !11604
  store i8 0, i8* %17, align 1, !dbg !11604
  call void @llvm.dbg.declare(metadata i8* %18, metadata !11605, metadata !DIExpression()), !dbg !11606
  store i8 0, i8* %18, align 1, !dbg !11606
  call void @llvm.dbg.declare(metadata i8* %19, metadata !11607, metadata !DIExpression()), !dbg !11608
  store i8 0, i8* %19, align 1, !dbg !11608
  call void @llvm.dbg.declare(metadata i8* %20, metadata !11609, metadata !DIExpression()), !dbg !11610
  store i8 0, i8* %20, align 1, !dbg !11610
  call void @llvm.dbg.declare(metadata i8** %21, metadata !11611, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.declare(metadata i8** %22, metadata !11613, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.declare(metadata i16* %23, metadata !11615, metadata !DIExpression()), !dbg !11616
  %24 = load i8*, i8** %10, align 8, !dbg !11617
  %25 = icmp eq i8* %24, null, !dbg !11619
  br i1 %25, label %29, label %26, !dbg !11620

26:                                               ; preds = %5
  %27 = load i8*, i8** %11, align 8, !dbg !11621
  %28 = icmp eq i8* %27, null, !dbg !11622
  br i1 %28, label %29, label %30, !dbg !11623

29:                                               ; preds = %26, %5
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.343, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i64 0, i64 0)), !dbg !11624
  store i32 1, i32* %6, align 4, !dbg !11626
  br label %150, !dbg !11626

30:                                               ; preds = %26
  store i32 0, i32* %12, align 4, !dbg !11627
  %31 = load i16, i16* %8, align 2, !dbg !11628
  %32 = zext i16 %31 to i32, !dbg !11628
  %33 = sub nsw i32 8, %32, !dbg !11629
  %34 = ashr i32 255, %33, !dbg !11630
  %35 = trunc i32 %34 to i8, !dbg !11631
  store i8 %35, i8* %18, align 1, !dbg !11632
  %36 = load i8*, i8** %11, align 8, !dbg !11633
  store i8* %36, i8** %22, align 8, !dbg !11634
  %37 = load i32, i32* %9, align 4, !dbg !11635
  store i32 %37, i32* %13, align 4, !dbg !11637
  br label %38, !dbg !11638

38:                                               ; preds = %132, %30
  %39 = load i32, i32* %13, align 4, !dbg !11639
  %40 = icmp ugt i32 %39, 0, !dbg !11641
  br i1 %40, label %41, label %135, !dbg !11642

41:                                               ; preds = %38
  %42 = load i32, i32* %13, align 4, !dbg !11643
  %43 = sub i32 %42, 1, !dbg !11645
  %44 = load i16, i16* %8, align 2, !dbg !11646
  %45 = zext i16 %44 to i32, !dbg !11646
  %46 = mul i32 %43, %45, !dbg !11647
  %47 = load i16, i16* %7, align 2, !dbg !11648
  %48 = zext i16 %47 to i32, !dbg !11648
  %49 = mul i32 %46, %48, !dbg !11649
  store i32 %49, i32* %16, align 4, !dbg !11650
  store i16 0, i16* %23, align 2, !dbg !11651
  br label %50, !dbg !11653

50:                                               ; preds = %128, %41
  %51 = load i16, i16* %23, align 2, !dbg !11654
  %52 = zext i16 %51 to i32, !dbg !11654
  %53 = load i16, i16* %7, align 2, !dbg !11656
  %54 = zext i16 %53 to i32, !dbg !11656
  %55 = icmp slt i32 %52, %54, !dbg !11657
  br i1 %55, label %56, label %131, !dbg !11658

56:                                               ; preds = %50
  %57 = load i16, i16* %23, align 2, !dbg !11659
  %58 = zext i16 %57 to i32, !dbg !11659
  %59 = icmp eq i32 %58, 0, !dbg !11662
  br i1 %59, label %60, label %65, !dbg !11663

60:                                               ; preds = %56
  %61 = load i32, i32* %16, align 4, !dbg !11664
  %62 = udiv i32 %61, 8, !dbg !11666
  store i32 %62, i32* %14, align 4, !dbg !11667
  %63 = load i32, i32* %16, align 4, !dbg !11668
  %64 = urem i32 %63, 8, !dbg !11669
  store i32 %64, i32* %15, align 4, !dbg !11670
  br label %82, !dbg !11671

65:                                               ; preds = %56
  %66 = load i32, i32* %16, align 4, !dbg !11672
  %67 = load i16, i16* %23, align 2, !dbg !11674
  %68 = zext i16 %67 to i32, !dbg !11674
  %69 = load i16, i16* %8, align 2, !dbg !11675
  %70 = zext i16 %69 to i32, !dbg !11675
  %71 = mul nsw i32 %68, %70, !dbg !11676
  %72 = add i32 %66, %71, !dbg !11677
  %73 = udiv i32 %72, 8, !dbg !11678
  store i32 %73, i32* %14, align 4, !dbg !11679
  %74 = load i32, i32* %16, align 4, !dbg !11680
  %75 = load i16, i16* %23, align 2, !dbg !11681
  %76 = zext i16 %75 to i32, !dbg !11681
  %77 = load i16, i16* %8, align 2, !dbg !11682
  %78 = zext i16 %77 to i32, !dbg !11682
  %79 = mul nsw i32 %76, %78, !dbg !11683
  %80 = add i32 %74, %79, !dbg !11684
  %81 = urem i32 %80, 8, !dbg !11685
  store i32 %81, i32* %15, align 4, !dbg !11686
  br label %82

82:                                               ; preds = %65, %60
  %83 = load i8*, i8** %10, align 8, !dbg !11687
  %84 = load i32, i32* %14, align 4, !dbg !11688
  %85 = zext i32 %84 to i64, !dbg !11689
  %86 = getelementptr inbounds i8, i8* %83, i64 %85, !dbg !11689
  store i8* %86, i8** %21, align 8, !dbg !11690
  %87 = load i8, i8* %18, align 1, !dbg !11691
  %88 = zext i8 %87 to i32, !dbg !11691
  %89 = load i32, i32* %15, align 4, !dbg !11692
  %90 = sub i32 8, %89, !dbg !11693
  %91 = load i16, i16* %8, align 2, !dbg !11694
  %92 = zext i16 %91 to i32, !dbg !11694
  %93 = sub i32 %90, %92, !dbg !11695
  %94 = shl i32 %88, %93, !dbg !11696
  %95 = trunc i32 %94 to i8, !dbg !11691
  store i8 %95, i8* %17, align 1, !dbg !11697
  %96 = load i8*, i8** %21, align 8, !dbg !11698
  %97 = load i8, i8* %96, align 1, !dbg !11699
  %98 = zext i8 %97 to i32, !dbg !11700
  %99 = load i8, i8* %17, align 1, !dbg !11701
  %100 = zext i8 %99 to i32, !dbg !11701
  %101 = and i32 %98, %100, !dbg !11702
  %102 = load i32, i32* %15, align 4, !dbg !11703
  %103 = shl i32 %101, %102, !dbg !11704
  %104 = trunc i32 %103 to i8, !dbg !11705
  store i8 %104, i8* %19, align 1, !dbg !11706
  %105 = load i32, i32* %12, align 4, !dbg !11707
  %106 = icmp slt i32 %105, 8, !dbg !11709
  br i1 %106, label %107, label %116, !dbg !11710

107:                                              ; preds = %82
  %108 = load i8, i8* %20, align 1, !dbg !11711
  %109 = zext i8 %108 to i32, !dbg !11711
  %110 = load i8, i8* %19, align 1, !dbg !11712
  %111 = zext i8 %110 to i32, !dbg !11712
  %112 = load i32, i32* %12, align 4, !dbg !11713
  %113 = ashr i32 %111, %112, !dbg !11714
  %114 = or i32 %109, %113, !dbg !11715
  %115 = trunc i32 %114 to i8, !dbg !11716
  store i8 %115, i8* %20, align 1, !dbg !11717
  br label %123, !dbg !11718

116:                                              ; preds = %82
  %117 = load i8, i8* %20, align 1, !dbg !11719
  %118 = load i8*, i8** %22, align 8, !dbg !11721
  %119 = getelementptr inbounds i8, i8* %118, i32 1, !dbg !11721
  store i8* %119, i8** %22, align 8, !dbg !11721
  store i8 %117, i8* %118, align 1, !dbg !11722
  %120 = load i8, i8* %19, align 1, !dbg !11723
  store i8 %120, i8* %20, align 1, !dbg !11724
  %121 = load i32, i32* %12, align 4, !dbg !11725
  %122 = sub nsw i32 %121, 8, !dbg !11725
  store i32 %122, i32* %12, align 4, !dbg !11725
  br label %123

123:                                              ; preds = %116, %107
  %124 = load i16, i16* %8, align 2, !dbg !11726
  %125 = zext i16 %124 to i32, !dbg !11726
  %126 = load i32, i32* %12, align 4, !dbg !11727
  %127 = add nsw i32 %126, %125, !dbg !11727
  store i32 %127, i32* %12, align 4, !dbg !11727
  br label %128, !dbg !11728

128:                                              ; preds = %123
  %129 = load i16, i16* %23, align 2, !dbg !11729
  %130 = add i16 %129, 1, !dbg !11729
  store i16 %130, i16* %23, align 2, !dbg !11729
  br label %50, !dbg !11730, !llvm.loop !11731

131:                                              ; preds = %50
  br label %132, !dbg !11733

132:                                              ; preds = %131
  %133 = load i32, i32* %13, align 4, !dbg !11734
  %134 = add i32 %133, -1, !dbg !11734
  store i32 %134, i32* %13, align 4, !dbg !11734
  br label %38, !dbg !11735, !llvm.loop !11736

135:                                              ; preds = %38
  %136 = load i32, i32* %12, align 4, !dbg !11738
  %137 = icmp sgt i32 %136, 0, !dbg !11740
  br i1 %137, label %138, label %149, !dbg !11741

138:                                              ; preds = %135
  %139 = load i8, i8* %20, align 1, !dbg !11742
  %140 = zext i8 %139 to i32, !dbg !11742
  %141 = load i32, i32* %12, align 4, !dbg !11744
  %142 = sub nsw i32 8, %141, !dbg !11745
  %143 = shl i32 255, %142, !dbg !11746
  %144 = and i32 %140, %143, !dbg !11747
  %145 = trunc i32 %144 to i8, !dbg !11748
  store i8 %145, i8* %19, align 1, !dbg !11749
  %146 = load i8, i8* %19, align 1, !dbg !11750
  %147 = load i8*, i8** %22, align 8, !dbg !11751
  %148 = getelementptr inbounds i8, i8* %147, i32 1, !dbg !11751
  store i8* %148, i8** %22, align 8, !dbg !11751
  store i8 %146, i8* %147, align 1, !dbg !11752
  br label %149, !dbg !11753

149:                                              ; preds = %138, %135
  store i32 0, i32* %6, align 4, !dbg !11754
  br label %150, !dbg !11754

150:                                              ; preds = %149, %29
  %151 = load i32, i32* %6, align 4, !dbg !11755
  ret i32 %151, !dbg !11755
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reverseSamples16bits(i16 zeroext, i16 zeroext, i32, i8*, i8*) #0 !dbg !11756 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca i8, align 1
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i16, align 2
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !11757, metadata !DIExpression()), !dbg !11758
  store i16 %1, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !11759, metadata !DIExpression()), !dbg !11760
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11761, metadata !DIExpression()), !dbg !11762
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !11763, metadata !DIExpression()), !dbg !11764
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !11765, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.declare(metadata i32* %12, metadata !11767, metadata !DIExpression()), !dbg !11768
  store i32 0, i32* %12, align 4, !dbg !11768
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11769, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11771, metadata !DIExpression()), !dbg !11772
  store i32 0, i32* %14, align 4, !dbg !11772
  call void @llvm.dbg.declare(metadata i32* %15, metadata !11773, metadata !DIExpression()), !dbg !11774
  store i32 0, i32* %15, align 4, !dbg !11774
  call void @llvm.dbg.declare(metadata i32* %16, metadata !11775, metadata !DIExpression()), !dbg !11776
  store i32 0, i32* %16, align 4, !dbg !11776
  call void @llvm.dbg.declare(metadata i16* %17, metadata !11777, metadata !DIExpression()), !dbg !11778
  store i16 0, i16* %17, align 2, !dbg !11778
  call void @llvm.dbg.declare(metadata i16* %18, metadata !11779, metadata !DIExpression()), !dbg !11780
  store i16 0, i16* %18, align 2, !dbg !11780
  call void @llvm.dbg.declare(metadata i16* %19, metadata !11781, metadata !DIExpression()), !dbg !11782
  store i16 0, i16* %19, align 2, !dbg !11782
  call void @llvm.dbg.declare(metadata i16* %20, metadata !11783, metadata !DIExpression()), !dbg !11784
  store i16 0, i16* %20, align 2, !dbg !11784
  call void @llvm.dbg.declare(metadata i8* %21, metadata !11785, metadata !DIExpression()), !dbg !11786
  store i8 0, i8* %21, align 1, !dbg !11786
  call void @llvm.dbg.declare(metadata i8** %22, metadata !11787, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.declare(metadata i8** %23, metadata !11789, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.declare(metadata i16* %24, metadata !11791, metadata !DIExpression()), !dbg !11792
  %25 = load i8*, i8** %10, align 8, !dbg !11793
  %26 = icmp eq i8* %25, null, !dbg !11795
  br i1 %26, label %30, label %27, !dbg !11796

27:                                               ; preds = %5
  %28 = load i8*, i8** %11, align 8, !dbg !11797
  %29 = icmp eq i8* %28, null, !dbg !11798
  br i1 %29, label %30, label %31, !dbg !11799

30:                                               ; preds = %27, %5
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.336, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i64 0, i64 0)), !dbg !11800
  store i32 1, i32* %6, align 4, !dbg !11802
  br label %186, !dbg !11802

31:                                               ; preds = %27
  store i32 0, i32* %12, align 4, !dbg !11803
  %32 = load i16, i16* %8, align 2, !dbg !11804
  %33 = zext i16 %32 to i32, !dbg !11804
  %34 = sub nsw i32 16, %33, !dbg !11805
  %35 = ashr i32 65535, %34, !dbg !11806
  %36 = trunc i32 %35 to i16, !dbg !11807
  store i16 %36, i16* %18, align 2, !dbg !11808
  %37 = load i8*, i8** %11, align 8, !dbg !11809
  store i8* %37, i8** %23, align 8, !dbg !11810
  %38 = load i32, i32* %9, align 4, !dbg !11811
  store i32 %38, i32* %13, align 4, !dbg !11813
  br label %39, !dbg !11814

39:                                               ; preds = %171, %31
  %40 = load i32, i32* %13, align 4, !dbg !11815
  %41 = icmp ugt i32 %40, 0, !dbg !11817
  br i1 %41, label %42, label %174, !dbg !11818

42:                                               ; preds = %39
  %43 = load i32, i32* %13, align 4, !dbg !11819
  %44 = sub i32 %43, 1, !dbg !11821
  %45 = load i16, i16* %8, align 2, !dbg !11822
  %46 = zext i16 %45 to i32, !dbg !11822
  %47 = mul i32 %44, %46, !dbg !11823
  %48 = load i16, i16* %7, align 2, !dbg !11824
  %49 = zext i16 %48 to i32, !dbg !11824
  %50 = mul i32 %47, %49, !dbg !11825
  store i32 %50, i32* %16, align 4, !dbg !11826
  store i16 0, i16* %24, align 2, !dbg !11827
  br label %51, !dbg !11829

51:                                               ; preds = %167, %42
  %52 = load i16, i16* %24, align 2, !dbg !11830
  %53 = zext i16 %52 to i32, !dbg !11830
  %54 = load i16, i16* %7, align 2, !dbg !11832
  %55 = zext i16 %54 to i32, !dbg !11832
  %56 = icmp slt i32 %53, %55, !dbg !11833
  br i1 %56, label %57, label %170, !dbg !11834

57:                                               ; preds = %51
  %58 = load i16, i16* %24, align 2, !dbg !11835
  %59 = zext i16 %58 to i32, !dbg !11835
  %60 = icmp eq i32 %59, 0, !dbg !11838
  br i1 %60, label %61, label %66, !dbg !11839

61:                                               ; preds = %57
  %62 = load i32, i32* %16, align 4, !dbg !11840
  %63 = udiv i32 %62, 8, !dbg !11842
  store i32 %63, i32* %14, align 4, !dbg !11843
  %64 = load i32, i32* %16, align 4, !dbg !11844
  %65 = urem i32 %64, 8, !dbg !11845
  store i32 %65, i32* %15, align 4, !dbg !11846
  br label %83, !dbg !11847

66:                                               ; preds = %57
  %67 = load i32, i32* %16, align 4, !dbg !11848
  %68 = load i16, i16* %24, align 2, !dbg !11850
  %69 = zext i16 %68 to i32, !dbg !11850
  %70 = load i16, i16* %8, align 2, !dbg !11851
  %71 = zext i16 %70 to i32, !dbg !11851
  %72 = mul nsw i32 %69, %71, !dbg !11852
  %73 = add i32 %67, %72, !dbg !11853
  %74 = udiv i32 %73, 8, !dbg !11854
  store i32 %74, i32* %14, align 4, !dbg !11855
  %75 = load i32, i32* %16, align 4, !dbg !11856
  %76 = load i16, i16* %24, align 2, !dbg !11857
  %77 = zext i16 %76 to i32, !dbg !11857
  %78 = load i16, i16* %8, align 2, !dbg !11858
  %79 = zext i16 %78 to i32, !dbg !11858
  %80 = mul nsw i32 %77, %79, !dbg !11859
  %81 = add i32 %75, %80, !dbg !11860
  %82 = urem i32 %81, 8, !dbg !11861
  store i32 %82, i32* %15, align 4, !dbg !11862
  br label %83

83:                                               ; preds = %66, %61
  %84 = load i8*, i8** %10, align 8, !dbg !11863
  %85 = load i32, i32* %14, align 4, !dbg !11864
  %86 = zext i32 %85 to i64, !dbg !11865
  %87 = getelementptr inbounds i8, i8* %84, i64 %86, !dbg !11865
  store i8* %87, i8** %22, align 8, !dbg !11866
  %88 = load i16, i16* %18, align 2, !dbg !11867
  %89 = zext i16 %88 to i32, !dbg !11867
  %90 = load i32, i32* %15, align 4, !dbg !11868
  %91 = sub i32 16, %90, !dbg !11869
  %92 = load i16, i16* %8, align 2, !dbg !11870
  %93 = zext i16 %92 to i32, !dbg !11870
  %94 = sub i32 %91, %93, !dbg !11871
  %95 = shl i32 %89, %94, !dbg !11872
  %96 = trunc i32 %95 to i16, !dbg !11867
  store i16 %96, i16* %17, align 2, !dbg !11873
  %97 = load i32, i32* @little_endian, align 4, !dbg !11874
  %98 = icmp ne i32 %97, 0, !dbg !11874
  br i1 %98, label %99, label %111, !dbg !11876

99:                                               ; preds = %83
  %100 = load i8*, i8** %22, align 8, !dbg !11877
  %101 = getelementptr inbounds i8, i8* %100, i64 0, !dbg !11877
  %102 = load i8, i8* %101, align 1, !dbg !11877
  %103 = zext i8 %102 to i32, !dbg !11877
  %104 = shl i32 %103, 8, !dbg !11878
  %105 = load i8*, i8** %22, align 8, !dbg !11879
  %106 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !11879
  %107 = load i8, i8* %106, align 1, !dbg !11879
  %108 = zext i8 %107 to i32, !dbg !11879
  %109 = or i32 %104, %108, !dbg !11880
  %110 = trunc i32 %109 to i16, !dbg !11881
  store i16 %110, i16* %19, align 2, !dbg !11882
  br label %123, !dbg !11883

111:                                              ; preds = %83
  %112 = load i8*, i8** %22, align 8, !dbg !11884
  %113 = getelementptr inbounds i8, i8* %112, i64 1, !dbg !11884
  %114 = load i8, i8* %113, align 1, !dbg !11884
  %115 = zext i8 %114 to i32, !dbg !11884
  %116 = shl i32 %115, 8, !dbg !11885
  %117 = load i8*, i8** %22, align 8, !dbg !11886
  %118 = getelementptr inbounds i8, i8* %117, i64 0, !dbg !11886
  %119 = load i8, i8* %118, align 1, !dbg !11886
  %120 = zext i8 %119 to i32, !dbg !11886
  %121 = or i32 %116, %120, !dbg !11887
  %122 = trunc i32 %121 to i16, !dbg !11888
  store i16 %122, i16* %19, align 2, !dbg !11889
  br label %123

123:                                              ; preds = %111, %99
  %124 = load i16, i16* %19, align 2, !dbg !11890
  %125 = zext i16 %124 to i32, !dbg !11890
  %126 = load i16, i16* %17, align 2, !dbg !11891
  %127 = zext i16 %126 to i32, !dbg !11891
  %128 = and i32 %125, %127, !dbg !11892
  %129 = load i32, i32* %15, align 4, !dbg !11893
  %130 = shl i32 %128, %129, !dbg !11894
  %131 = trunc i32 %130 to i16, !dbg !11895
  store i16 %131, i16* %19, align 2, !dbg !11896
  %132 = load i32, i32* %12, align 4, !dbg !11897
  %133 = icmp slt i32 %132, 8, !dbg !11899
  br i1 %133, label %134, label %143, !dbg !11900

134:                                              ; preds = %123
  store i8 0, i8* %21, align 1, !dbg !11901
  %135 = load i16, i16* %20, align 2, !dbg !11903
  %136 = zext i16 %135 to i32, !dbg !11903
  %137 = load i16, i16* %19, align 2, !dbg !11904
  %138 = zext i16 %137 to i32, !dbg !11904
  %139 = load i32, i32* %12, align 4, !dbg !11905
  %140 = ashr i32 %138, %139, !dbg !11906
  %141 = or i32 %136, %140, !dbg !11907
  %142 = trunc i32 %141 to i16, !dbg !11908
  store i16 %142, i16* %20, align 2, !dbg !11909
  br label %162, !dbg !11910

143:                                              ; preds = %123
  %144 = load i16, i16* %20, align 2, !dbg !11911
  %145 = zext i16 %144 to i32, !dbg !11911
  %146 = ashr i32 %145, 8, !dbg !11913
  %147 = trunc i32 %146 to i8, !dbg !11914
  store i8 %147, i8* %21, align 1, !dbg !11915
  %148 = load i8, i8* %21, align 1, !dbg !11916
  %149 = load i8*, i8** %23, align 8, !dbg !11917
  %150 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !11917
  store i8* %150, i8** %23, align 8, !dbg !11917
  store i8 %148, i8* %149, align 1, !dbg !11918
  %151 = load i32, i32* %12, align 4, !dbg !11919
  %152 = sub nsw i32 %151, 8, !dbg !11919
  store i32 %152, i32* %12, align 4, !dbg !11919
  %153 = load i16, i16* %20, align 2, !dbg !11920
  %154 = zext i16 %153 to i32, !dbg !11920
  %155 = shl i32 %154, 8, !dbg !11921
  %156 = load i16, i16* %19, align 2, !dbg !11922
  %157 = zext i16 %156 to i32, !dbg !11922
  %158 = load i32, i32* %12, align 4, !dbg !11923
  %159 = ashr i32 %157, %158, !dbg !11924
  %160 = or i32 %155, %159, !dbg !11925
  %161 = trunc i32 %160 to i16, !dbg !11926
  store i16 %161, i16* %20, align 2, !dbg !11927
  br label %162

162:                                              ; preds = %143, %134
  %163 = load i16, i16* %8, align 2, !dbg !11928
  %164 = zext i16 %163 to i32, !dbg !11928
  %165 = load i32, i32* %12, align 4, !dbg !11929
  %166 = add nsw i32 %165, %164, !dbg !11929
  store i32 %166, i32* %12, align 4, !dbg !11929
  br label %167, !dbg !11930

167:                                              ; preds = %162
  %168 = load i16, i16* %24, align 2, !dbg !11931
  %169 = add i16 %168, 1, !dbg !11931
  store i16 %169, i16* %24, align 2, !dbg !11931
  br label %51, !dbg !11932, !llvm.loop !11933

170:                                              ; preds = %51
  br label %171, !dbg !11935

171:                                              ; preds = %170
  %172 = load i32, i32* %13, align 4, !dbg !11936
  %173 = add i32 %172, -1, !dbg !11936
  store i32 %173, i32* %13, align 4, !dbg !11936
  br label %39, !dbg !11937, !llvm.loop !11938

174:                                              ; preds = %39
  %175 = load i32, i32* %12, align 4, !dbg !11940
  %176 = icmp sgt i32 %175, 0, !dbg !11942
  br i1 %176, label %177, label %185, !dbg !11943

177:                                              ; preds = %174
  %178 = load i16, i16* %20, align 2, !dbg !11944
  %179 = zext i16 %178 to i32, !dbg !11944
  %180 = ashr i32 %179, 8, !dbg !11946
  %181 = trunc i32 %180 to i8, !dbg !11947
  store i8 %181, i8* %21, align 1, !dbg !11948
  %182 = load i8, i8* %21, align 1, !dbg !11949
  %183 = load i8*, i8** %23, align 8, !dbg !11950
  %184 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !11950
  store i8* %184, i8** %23, align 8, !dbg !11950
  store i8 %182, i8* %183, align 1, !dbg !11951
  br label %185, !dbg !11952

185:                                              ; preds = %177, %174
  store i32 0, i32* %6, align 4, !dbg !11953
  br label %186, !dbg !11953

186:                                              ; preds = %185, %30
  %187 = load i32, i32* %6, align 4, !dbg !11954
  ret i32 %187, !dbg !11954
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reverseSamples24bits(i16 zeroext, i16 zeroext, i32, i8*, i8*) #0 !dbg !11955 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i16, align 2
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !11956, metadata !DIExpression()), !dbg !11957
  store i16 %1, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !11958, metadata !DIExpression()), !dbg !11959
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11960, metadata !DIExpression()), !dbg !11961
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !11962, metadata !DIExpression()), !dbg !11963
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !11964, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.declare(metadata i32* %12, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i32 0, i32* %12, align 4, !dbg !11967
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11968, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11970, metadata !DIExpression()), !dbg !11971
  store i32 0, i32* %14, align 4, !dbg !11971
  call void @llvm.dbg.declare(metadata i32* %15, metadata !11972, metadata !DIExpression()), !dbg !11973
  store i32 0, i32* %15, align 4, !dbg !11973
  call void @llvm.dbg.declare(metadata i32* %16, metadata !11974, metadata !DIExpression()), !dbg !11975
  store i32 0, i32* %16, align 4, !dbg !11975
  call void @llvm.dbg.declare(metadata i32* %17, metadata !11976, metadata !DIExpression()), !dbg !11977
  store i32 0, i32* %17, align 4, !dbg !11977
  call void @llvm.dbg.declare(metadata i32* %18, metadata !11978, metadata !DIExpression()), !dbg !11979
  store i32 0, i32* %18, align 4, !dbg !11979
  call void @llvm.dbg.declare(metadata i32* %19, metadata !11980, metadata !DIExpression()), !dbg !11981
  store i32 0, i32* %19, align 4, !dbg !11981
  call void @llvm.dbg.declare(metadata i32* %20, metadata !11982, metadata !DIExpression()), !dbg !11983
  store i32 0, i32* %20, align 4, !dbg !11983
  call void @llvm.dbg.declare(metadata i8* %21, metadata !11984, metadata !DIExpression()), !dbg !11985
  store i8 0, i8* %21, align 1, !dbg !11985
  call void @llvm.dbg.declare(metadata i8* %22, metadata !11986, metadata !DIExpression()), !dbg !11987
  store i8 0, i8* %22, align 1, !dbg !11987
  call void @llvm.dbg.declare(metadata i8** %23, metadata !11988, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.declare(metadata i8** %24, metadata !11990, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.declare(metadata i16* %25, metadata !11992, metadata !DIExpression()), !dbg !11993
  %26 = load i8*, i8** %10, align 8, !dbg !11994
  %27 = icmp eq i8* %26, null, !dbg !11996
  br i1 %27, label %31, label %28, !dbg !11997

28:                                               ; preds = %5
  %29 = load i8*, i8** %11, align 8, !dbg !11998
  %30 = icmp eq i8* %29, null, !dbg !11999
  br i1 %30, label %31, label %32, !dbg !12000

31:                                               ; preds = %28, %5
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.338, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i64 0, i64 0)), !dbg !12001
  store i32 1, i32* %6, align 4, !dbg !12003
  br label %207, !dbg !12003

32:                                               ; preds = %28
  store i32 0, i32* %12, align 4, !dbg !12004
  %33 = load i16, i16* %8, align 2, !dbg !12005
  %34 = zext i16 %33 to i32, !dbg !12005
  %35 = sub nsw i32 32, %34, !dbg !12006
  %36 = lshr i32 -1, %35, !dbg !12007
  store i32 %36, i32* %18, align 4, !dbg !12008
  %37 = load i8*, i8** %11, align 8, !dbg !12009
  store i8* %37, i8** %24, align 8, !dbg !12010
  %38 = load i32, i32* %9, align 4, !dbg !12011
  store i32 %38, i32* %13, align 4, !dbg !12013
  br label %39, !dbg !12014

39:                                               ; preds = %187, %32
  %40 = load i32, i32* %13, align 4, !dbg !12015
  %41 = icmp ugt i32 %40, 0, !dbg !12017
  br i1 %41, label %42, label %190, !dbg !12018

42:                                               ; preds = %39
  %43 = load i32, i32* %13, align 4, !dbg !12019
  %44 = sub i32 %43, 1, !dbg !12021
  %45 = load i16, i16* %8, align 2, !dbg !12022
  %46 = zext i16 %45 to i32, !dbg !12022
  %47 = mul i32 %44, %46, !dbg !12023
  %48 = load i16, i16* %7, align 2, !dbg !12024
  %49 = zext i16 %48 to i32, !dbg !12024
  %50 = mul i32 %47, %49, !dbg !12025
  store i32 %50, i32* %16, align 4, !dbg !12026
  store i16 0, i16* %25, align 2, !dbg !12027
  br label %51, !dbg !12029

51:                                               ; preds = %183, %42
  %52 = load i16, i16* %25, align 2, !dbg !12030
  %53 = zext i16 %52 to i32, !dbg !12030
  %54 = load i16, i16* %7, align 2, !dbg !12032
  %55 = zext i16 %54 to i32, !dbg !12032
  %56 = icmp slt i32 %53, %55, !dbg !12033
  br i1 %56, label %57, label %186, !dbg !12034

57:                                               ; preds = %51
  %58 = load i16, i16* %25, align 2, !dbg !12035
  %59 = zext i16 %58 to i32, !dbg !12035
  %60 = icmp eq i32 %59, 0, !dbg !12038
  br i1 %60, label %61, label %66, !dbg !12039

61:                                               ; preds = %57
  %62 = load i32, i32* %16, align 4, !dbg !12040
  %63 = udiv i32 %62, 8, !dbg !12042
  store i32 %63, i32* %14, align 4, !dbg !12043
  %64 = load i32, i32* %16, align 4, !dbg !12044
  %65 = urem i32 %64, 8, !dbg !12045
  store i32 %65, i32* %15, align 4, !dbg !12046
  br label %83, !dbg !12047

66:                                               ; preds = %57
  %67 = load i32, i32* %16, align 4, !dbg !12048
  %68 = load i16, i16* %25, align 2, !dbg !12050
  %69 = zext i16 %68 to i32, !dbg !12050
  %70 = load i16, i16* %8, align 2, !dbg !12051
  %71 = zext i16 %70 to i32, !dbg !12051
  %72 = mul nsw i32 %69, %71, !dbg !12052
  %73 = add i32 %67, %72, !dbg !12053
  %74 = udiv i32 %73, 8, !dbg !12054
  store i32 %74, i32* %14, align 4, !dbg !12055
  %75 = load i32, i32* %16, align 4, !dbg !12056
  %76 = load i16, i16* %25, align 2, !dbg !12057
  %77 = zext i16 %76 to i32, !dbg !12057
  %78 = load i16, i16* %8, align 2, !dbg !12058
  %79 = zext i16 %78 to i32, !dbg !12058
  %80 = mul nsw i32 %77, %79, !dbg !12059
  %81 = add i32 %75, %80, !dbg !12060
  %82 = urem i32 %81, 8, !dbg !12061
  store i32 %82, i32* %15, align 4, !dbg !12062
  br label %83

83:                                               ; preds = %66, %61
  %84 = load i8*, i8** %10, align 8, !dbg !12063
  %85 = load i32, i32* %14, align 4, !dbg !12064
  %86 = zext i32 %85 to i64, !dbg !12065
  %87 = getelementptr inbounds i8, i8* %84, i64 %86, !dbg !12065
  store i8* %87, i8** %23, align 8, !dbg !12066
  %88 = load i32, i32* %18, align 4, !dbg !12067
  %89 = load i32, i32* %15, align 4, !dbg !12068
  %90 = sub i32 32, %89, !dbg !12069
  %91 = load i16, i16* %8, align 2, !dbg !12070
  %92 = zext i16 %91 to i32, !dbg !12070
  %93 = sub i32 %90, %92, !dbg !12071
  %94 = shl i32 %88, %93, !dbg !12072
  store i32 %94, i32* %17, align 4, !dbg !12073
  %95 = load i32, i32* @little_endian, align 4, !dbg !12074
  %96 = icmp ne i32 %95, 0, !dbg !12074
  br i1 %96, label %97, label %120, !dbg !12076

97:                                               ; preds = %83
  %98 = load i8*, i8** %23, align 8, !dbg !12077
  %99 = getelementptr inbounds i8, i8* %98, i64 0, !dbg !12077
  %100 = load i8, i8* %99, align 1, !dbg !12077
  %101 = zext i8 %100 to i32, !dbg !12077
  %102 = shl i32 %101, 24, !dbg !12078
  %103 = load i8*, i8** %23, align 8, !dbg !12079
  %104 = getelementptr inbounds i8, i8* %103, i64 1, !dbg !12079
  %105 = load i8, i8* %104, align 1, !dbg !12079
  %106 = zext i8 %105 to i32, !dbg !12079
  %107 = shl i32 %106, 16, !dbg !12080
  %108 = or i32 %102, %107, !dbg !12081
  %109 = load i8*, i8** %23, align 8, !dbg !12082
  %110 = getelementptr inbounds i8, i8* %109, i64 2, !dbg !12082
  %111 = load i8, i8* %110, align 1, !dbg !12082
  %112 = zext i8 %111 to i32, !dbg !12082
  %113 = shl i32 %112, 8, !dbg !12083
  %114 = or i32 %108, %113, !dbg !12084
  %115 = load i8*, i8** %23, align 8, !dbg !12085
  %116 = getelementptr inbounds i8, i8* %115, i64 3, !dbg !12085
  %117 = load i8, i8* %116, align 1, !dbg !12085
  %118 = zext i8 %117 to i32, !dbg !12085
  %119 = or i32 %114, %118, !dbg !12086
  store i32 %119, i32* %19, align 4, !dbg !12087
  br label %143, !dbg !12088

120:                                              ; preds = %83
  %121 = load i8*, i8** %23, align 8, !dbg !12089
  %122 = getelementptr inbounds i8, i8* %121, i64 3, !dbg !12089
  %123 = load i8, i8* %122, align 1, !dbg !12089
  %124 = zext i8 %123 to i32, !dbg !12089
  %125 = shl i32 %124, 24, !dbg !12090
  %126 = load i8*, i8** %23, align 8, !dbg !12091
  %127 = getelementptr inbounds i8, i8* %126, i64 2, !dbg !12091
  %128 = load i8, i8* %127, align 1, !dbg !12091
  %129 = zext i8 %128 to i32, !dbg !12091
  %130 = shl i32 %129, 16, !dbg !12092
  %131 = or i32 %125, %130, !dbg !12093
  %132 = load i8*, i8** %23, align 8, !dbg !12094
  %133 = getelementptr inbounds i8, i8* %132, i64 1, !dbg !12094
  %134 = load i8, i8* %133, align 1, !dbg !12094
  %135 = zext i8 %134 to i32, !dbg !12094
  %136 = shl i32 %135, 8, !dbg !12095
  %137 = or i32 %131, %136, !dbg !12096
  %138 = load i8*, i8** %23, align 8, !dbg !12097
  %139 = getelementptr inbounds i8, i8* %138, i64 0, !dbg !12097
  %140 = load i8, i8* %139, align 1, !dbg !12097
  %141 = zext i8 %140 to i32, !dbg !12097
  %142 = or i32 %137, %141, !dbg !12098
  store i32 %142, i32* %19, align 4, !dbg !12099
  br label %143

143:                                              ; preds = %120, %97
  %144 = load i32, i32* %19, align 4, !dbg !12100
  %145 = load i32, i32* %17, align 4, !dbg !12101
  %146 = and i32 %144, %145, !dbg !12102
  %147 = load i32, i32* %15, align 4, !dbg !12103
  %148 = shl i32 %146, %147, !dbg !12104
  store i32 %148, i32* %19, align 4, !dbg !12105
  %149 = load i32, i32* %12, align 4, !dbg !12106
  %150 = icmp slt i32 %149, 16, !dbg !12108
  br i1 %150, label %151, label %157, !dbg !12109

151:                                              ; preds = %143
  store i8 0, i8* %22, align 1, !dbg !12110
  store i8 0, i8* %21, align 1, !dbg !12112
  %152 = load i32, i32* %20, align 4, !dbg !12113
  %153 = load i32, i32* %19, align 4, !dbg !12114
  %154 = load i32, i32* %12, align 4, !dbg !12115
  %155 = lshr i32 %153, %154, !dbg !12116
  %156 = or i32 %152, %155, !dbg !12117
  store i32 %156, i32* %20, align 4, !dbg !12118
  br label %178, !dbg !12119

157:                                              ; preds = %143
  %158 = load i32, i32* %20, align 4, !dbg !12120
  %159 = lshr i32 %158, 24, !dbg !12122
  %160 = trunc i32 %159 to i8, !dbg !12123
  store i8 %160, i8* %21, align 1, !dbg !12124
  %161 = load i8, i8* %21, align 1, !dbg !12125
  %162 = load i8*, i8** %24, align 8, !dbg !12126
  %163 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !12126
  store i8* %163, i8** %24, align 8, !dbg !12126
  store i8 %161, i8* %162, align 1, !dbg !12127
  %164 = load i32, i32* %20, align 4, !dbg !12128
  %165 = lshr i32 %164, 16, !dbg !12129
  %166 = trunc i32 %165 to i8, !dbg !12130
  store i8 %166, i8* %22, align 1, !dbg !12131
  %167 = load i8, i8* %22, align 1, !dbg !12132
  %168 = load i8*, i8** %24, align 8, !dbg !12133
  %169 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !12133
  store i8* %169, i8** %24, align 8, !dbg !12133
  store i8 %167, i8* %168, align 1, !dbg !12134
  %170 = load i32, i32* %12, align 4, !dbg !12135
  %171 = sub nsw i32 %170, 16, !dbg !12135
  store i32 %171, i32* %12, align 4, !dbg !12135
  %172 = load i32, i32* %20, align 4, !dbg !12136
  %173 = shl i32 %172, 16, !dbg !12137
  %174 = load i32, i32* %19, align 4, !dbg !12138
  %175 = load i32, i32* %12, align 4, !dbg !12139
  %176 = lshr i32 %174, %175, !dbg !12140
  %177 = or i32 %173, %176, !dbg !12141
  store i32 %177, i32* %20, align 4, !dbg !12142
  br label %178

178:                                              ; preds = %157, %151
  %179 = load i16, i16* %8, align 2, !dbg !12143
  %180 = zext i16 %179 to i32, !dbg !12143
  %181 = load i32, i32* %12, align 4, !dbg !12144
  %182 = add nsw i32 %181, %180, !dbg !12144
  store i32 %182, i32* %12, align 4, !dbg !12144
  br label %183, !dbg !12145

183:                                              ; preds = %178
  %184 = load i16, i16* %25, align 2, !dbg !12146
  %185 = add i16 %184, 1, !dbg !12146
  store i16 %185, i16* %25, align 2, !dbg !12146
  br label %51, !dbg !12147, !llvm.loop !12148

186:                                              ; preds = %51
  br label %187, !dbg !12150

187:                                              ; preds = %186
  %188 = load i32, i32* %13, align 4, !dbg !12151
  %189 = add i32 %188, -1, !dbg !12151
  store i32 %189, i32* %13, align 4, !dbg !12151
  br label %39, !dbg !12152, !llvm.loop !12153

190:                                              ; preds = %39
  br label %191, !dbg !12155

191:                                              ; preds = %194, %190
  %192 = load i32, i32* %12, align 4, !dbg !12156
  %193 = icmp sgt i32 %192, 0, !dbg !12157
  br i1 %193, label %194, label %206, !dbg !12155

194:                                              ; preds = %191
  %195 = load i32, i32* %20, align 4, !dbg !12158
  %196 = lshr i32 %195, 24, !dbg !12160
  %197 = trunc i32 %196 to i8, !dbg !12161
  store i8 %197, i8* %21, align 1, !dbg !12162
  %198 = load i8, i8* %21, align 1, !dbg !12163
  %199 = load i8*, i8** %24, align 8, !dbg !12164
  %200 = getelementptr inbounds i8, i8* %199, i32 1, !dbg !12164
  store i8* %200, i8** %24, align 8, !dbg !12164
  store i8 %198, i8* %199, align 1, !dbg !12165
  %201 = load i32, i32* %20, align 4, !dbg !12166
  %202 = shl i32 %201, 8, !dbg !12167
  store i32 %202, i32* %20, align 4, !dbg !12168
  %203 = load i8, i8* %21, align 1, !dbg !12169
  store i8 %203, i8* %22, align 1, !dbg !12170
  %204 = load i32, i32* %12, align 4, !dbg !12171
  %205 = sub nsw i32 %204, 8, !dbg !12171
  store i32 %205, i32* %12, align 4, !dbg !12171
  br label %191, !dbg !12155, !llvm.loop !12172

206:                                              ; preds = %191
  store i32 0, i32* %6, align 4, !dbg !12174
  br label %207, !dbg !12174

207:                                              ; preds = %206, %31
  %208 = load i32, i32* %6, align 4, !dbg !12175
  ret i32 %208, !dbg !12175
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reverseSamples32bits(i16 zeroext, i16 zeroext, i32, i8*, i8*) #0 !dbg !12176 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i16, align 2
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !12177, metadata !DIExpression()), !dbg !12178
  store i16 %1, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !12179, metadata !DIExpression()), !dbg !12180
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12181, metadata !DIExpression()), !dbg !12182
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !12183, metadata !DIExpression()), !dbg !12184
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !12185, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12187, metadata !DIExpression()), !dbg !12188
  store i32 0, i32* %12, align 4, !dbg !12188
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12189, metadata !DIExpression()), !dbg !12190
  store i32 0, i32* %13, align 4, !dbg !12190
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12191, metadata !DIExpression()), !dbg !12192
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12193, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.declare(metadata i32* %16, metadata !12195, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.declare(metadata i32* %17, metadata !12197, metadata !DIExpression()), !dbg !12198
  store i32 0, i32* %17, align 4, !dbg !12198
  call void @llvm.dbg.declare(metadata i32* %18, metadata !12199, metadata !DIExpression()), !dbg !12200
  store i32 0, i32* %18, align 4, !dbg !12200
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12201, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12203, metadata !DIExpression()), !dbg !12204
  store i32 0, i32* %20, align 4, !dbg !12204
  call void @llvm.dbg.declare(metadata i32* %21, metadata !12205, metadata !DIExpression()), !dbg !12206
  store i32 0, i32* %21, align 4, !dbg !12206
  call void @llvm.dbg.declare(metadata i64* %22, metadata !12207, metadata !DIExpression()), !dbg !12208
  store i64 0, i64* %22, align 8, !dbg !12208
  call void @llvm.dbg.declare(metadata i64* %23, metadata !12209, metadata !DIExpression()), !dbg !12210
  store i64 0, i64* %23, align 8, !dbg !12210
  call void @llvm.dbg.declare(metadata i64* %24, metadata !12211, metadata !DIExpression()), !dbg !12212
  store i64 0, i64* %24, align 8, !dbg !12212
  call void @llvm.dbg.declare(metadata i64* %25, metadata !12213, metadata !DIExpression()), !dbg !12214
  store i64 0, i64* %25, align 8, !dbg !12214
  call void @llvm.dbg.declare(metadata i64* %26, metadata !12215, metadata !DIExpression()), !dbg !12216
  store i64 0, i64* %26, align 8, !dbg !12216
  call void @llvm.dbg.declare(metadata i8* %27, metadata !12217, metadata !DIExpression()), !dbg !12218
  store i8 0, i8* %27, align 1, !dbg !12218
  call void @llvm.dbg.declare(metadata i8* %28, metadata !12219, metadata !DIExpression()), !dbg !12220
  store i8 0, i8* %28, align 1, !dbg !12220
  call void @llvm.dbg.declare(metadata i8* %29, metadata !12221, metadata !DIExpression()), !dbg !12222
  store i8 0, i8* %29, align 1, !dbg !12222
  call void @llvm.dbg.declare(metadata i8* %30, metadata !12223, metadata !DIExpression()), !dbg !12224
  store i8 0, i8* %30, align 1, !dbg !12224
  call void @llvm.dbg.declare(metadata i8** %31, metadata !12225, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.declare(metadata i8** %32, metadata !12227, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.declare(metadata i16* %33, metadata !12229, metadata !DIExpression()), !dbg !12230
  %34 = load i8*, i8** %10, align 8, !dbg !12231
  %35 = icmp eq i8* %34, null, !dbg !12233
  br i1 %35, label %39, label %36, !dbg !12234

36:                                               ; preds = %5
  %37 = load i8*, i8** %11, align 8, !dbg !12235
  %38 = icmp eq i8* %37, null, !dbg !12236
  br i1 %38, label %39, label %40, !dbg !12237

39:                                               ; preds = %36, %5
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i64 0, i64 0)), !dbg !12238
  store i32 1, i32* %6, align 4, !dbg !12240
  br label %260, !dbg !12240

40:                                               ; preds = %36
  store i32 0, i32* %12, align 4, !dbg !12241
  %41 = load i16, i16* %8, align 2, !dbg !12242
  %42 = zext i16 %41 to i32, !dbg !12242
  %43 = sub nsw i32 64, %42, !dbg !12243
  %44 = zext i32 %43 to i64, !dbg !12244
  %45 = lshr i64 -1, %44, !dbg !12244
  store i64 %45, i64* %22, align 8, !dbg !12245
  %46 = load i8*, i8** %11, align 8, !dbg !12246
  store i8* %46, i8** %32, align 8, !dbg !12247
  %47 = load i16, i16* %8, align 2, !dbg !12248
  %48 = zext i16 %47 to i32, !dbg !12248
  %49 = add nsw i32 %48, 7, !dbg !12249
  %50 = sdiv i32 %49, 8, !dbg !12250
  store i32 %50, i32* %14, align 4, !dbg !12251
  %51 = load i16, i16* %8, align 2, !dbg !12252
  %52 = zext i16 %51 to i32, !dbg !12252
  %53 = load i16, i16* %7, align 2, !dbg !12253
  %54 = zext i16 %53 to i32, !dbg !12253
  %55 = mul nsw i32 %52, %54, !dbg !12254
  %56 = add nsw i32 %55, 7, !dbg !12255
  %57 = sdiv i32 %56, 8, !dbg !12256
  store i32 %57, i32* %15, align 4, !dbg !12257
  %58 = load i32, i32* %15, align 4, !dbg !12258
  %59 = load i32, i32* %14, align 4, !dbg !12260
  %60 = add nsw i32 %59, 1, !dbg !12261
  %61 = icmp slt i32 %58, %60, !dbg !12262
  br i1 %61, label %62, label %64, !dbg !12263

62:                                               ; preds = %40
  %63 = load i32, i32* %15, align 4, !dbg !12264
  store i32 %63, i32* %13, align 4, !dbg !12265
  br label %67, !dbg !12266

64:                                               ; preds = %40
  %65 = load i32, i32* %14, align 4, !dbg !12267
  %66 = add nsw i32 %65, 1, !dbg !12268
  store i32 %66, i32* %13, align 4, !dbg !12269
  br label %67

67:                                               ; preds = %64, %62
  %68 = load i32, i32* %9, align 4, !dbg !12270
  store i32 %68, i32* %19, align 4, !dbg !12272
  br label %69, !dbg !12273

69:                                               ; preds = %241, %67
  %70 = load i32, i32* %19, align 4, !dbg !12274
  %71 = icmp ugt i32 %70, 0, !dbg !12276
  br i1 %71, label %72, label %244, !dbg !12277

72:                                               ; preds = %69
  %73 = load i32, i32* %19, align 4, !dbg !12278
  %74 = sub i32 %73, 1, !dbg !12280
  %75 = load i16, i16* %8, align 2, !dbg !12281
  %76 = zext i16 %75 to i32, !dbg !12281
  %77 = mul i32 %74, %76, !dbg !12282
  %78 = load i16, i16* %7, align 2, !dbg !12283
  %79 = zext i16 %78 to i32, !dbg !12283
  %80 = mul i32 %77, %79, !dbg !12284
  store i32 %80, i32* %16, align 4, !dbg !12285
  store i16 0, i16* %33, align 2, !dbg !12286
  br label %81, !dbg !12288

81:                                               ; preds = %237, %72
  %82 = load i16, i16* %33, align 2, !dbg !12289
  %83 = zext i16 %82 to i32, !dbg !12289
  %84 = load i16, i16* %7, align 2, !dbg !12291
  %85 = zext i16 %84 to i32, !dbg !12291
  %86 = icmp slt i32 %83, %85, !dbg !12292
  br i1 %86, label %87, label %240, !dbg !12293

87:                                               ; preds = %81
  %88 = load i16, i16* %33, align 2, !dbg !12294
  %89 = zext i16 %88 to i32, !dbg !12294
  %90 = icmp eq i32 %89, 0, !dbg !12297
  br i1 %90, label %91, label %96, !dbg !12298

91:                                               ; preds = %87
  %92 = load i32, i32* %16, align 4, !dbg !12299
  %93 = udiv i32 %92, 8, !dbg !12301
  store i32 %93, i32* %17, align 4, !dbg !12302
  %94 = load i32, i32* %16, align 4, !dbg !12303
  %95 = urem i32 %94, 8, !dbg !12304
  store i32 %95, i32* %18, align 4, !dbg !12305
  br label %113, !dbg !12306

96:                                               ; preds = %87
  %97 = load i32, i32* %16, align 4, !dbg !12307
  %98 = load i16, i16* %33, align 2, !dbg !12309
  %99 = zext i16 %98 to i32, !dbg !12309
  %100 = load i16, i16* %8, align 2, !dbg !12310
  %101 = zext i16 %100 to i32, !dbg !12310
  %102 = mul nsw i32 %99, %101, !dbg !12311
  %103 = add i32 %97, %102, !dbg !12312
  %104 = udiv i32 %103, 8, !dbg !12313
  store i32 %104, i32* %17, align 4, !dbg !12314
  %105 = load i32, i32* %16, align 4, !dbg !12315
  %106 = load i16, i16* %33, align 2, !dbg !12316
  %107 = zext i16 %106 to i32, !dbg !12316
  %108 = load i16, i16* %8, align 2, !dbg !12317
  %109 = zext i16 %108 to i32, !dbg !12317
  %110 = mul nsw i32 %107, %109, !dbg !12318
  %111 = add i32 %105, %110, !dbg !12319
  %112 = urem i32 %111, 8, !dbg !12320
  store i32 %112, i32* %18, align 4, !dbg !12321
  br label %113

113:                                              ; preds = %96, %91
  %114 = load i8*, i8** %10, align 8, !dbg !12322
  %115 = load i32, i32* %17, align 4, !dbg !12323
  %116 = zext i32 %115 to i64, !dbg !12324
  %117 = getelementptr inbounds i8, i8* %114, i64 %116, !dbg !12324
  store i8* %117, i8** %31, align 8, !dbg !12325
  %118 = load i64, i64* %22, align 8, !dbg !12326
  %119 = load i32, i32* %18, align 4, !dbg !12327
  %120 = sub i32 64, %119, !dbg !12328
  %121 = load i16, i16* %8, align 2, !dbg !12329
  %122 = zext i16 %121 to i32, !dbg !12329
  %123 = sub i32 %120, %122, !dbg !12330
  %124 = zext i32 %123 to i64, !dbg !12331
  %125 = shl i64 %118, %124, !dbg !12331
  store i64 %125, i64* %23, align 8, !dbg !12332
  %126 = load i32, i32* @little_endian, align 4, !dbg !12333
  %127 = icmp ne i32 %126, 0, !dbg !12333
  br i1 %127, label %128, label %152, !dbg !12335

128:                                              ; preds = %113
  %129 = load i8*, i8** %31, align 8, !dbg !12336
  %130 = getelementptr inbounds i8, i8* %129, i64 0, !dbg !12336
  %131 = load i8, i8* %130, align 1, !dbg !12336
  %132 = zext i8 %131 to i32, !dbg !12336
  %133 = shl i32 %132, 24, !dbg !12338
  %134 = load i8*, i8** %31, align 8, !dbg !12339
  %135 = getelementptr inbounds i8, i8* %134, i64 1, !dbg !12339
  %136 = load i8, i8* %135, align 1, !dbg !12339
  %137 = zext i8 %136 to i32, !dbg !12339
  %138 = shl i32 %137, 16, !dbg !12340
  %139 = or i32 %133, %138, !dbg !12341
  %140 = load i8*, i8** %31, align 8, !dbg !12342
  %141 = getelementptr inbounds i8, i8* %140, i64 2, !dbg !12342
  %142 = load i8, i8* %141, align 1, !dbg !12342
  %143 = zext i8 %142 to i32, !dbg !12342
  %144 = shl i32 %143, 8, !dbg !12343
  %145 = or i32 %139, %144, !dbg !12344
  %146 = load i8*, i8** %31, align 8, !dbg !12345
  %147 = getelementptr inbounds i8, i8* %146, i64 3, !dbg !12345
  %148 = load i8, i8* %147, align 1, !dbg !12345
  %149 = zext i8 %148 to i32, !dbg !12345
  %150 = or i32 %145, %149, !dbg !12346
  store i32 %150, i32* %20, align 4, !dbg !12347
  %151 = load i32, i32* %20, align 4, !dbg !12348
  store i32 %151, i32* %21, align 4, !dbg !12349
  br label %176, !dbg !12350

152:                                              ; preds = %113
  %153 = load i8*, i8** %31, align 8, !dbg !12351
  %154 = getelementptr inbounds i8, i8* %153, i64 3, !dbg !12351
  %155 = load i8, i8* %154, align 1, !dbg !12351
  %156 = zext i8 %155 to i32, !dbg !12351
  %157 = shl i32 %156, 24, !dbg !12353
  %158 = load i8*, i8** %31, align 8, !dbg !12354
  %159 = getelementptr inbounds i8, i8* %158, i64 2, !dbg !12354
  %160 = load i8, i8* %159, align 1, !dbg !12354
  %161 = zext i8 %160 to i32, !dbg !12354
  %162 = shl i32 %161, 16, !dbg !12355
  %163 = or i32 %157, %162, !dbg !12356
  %164 = load i8*, i8** %31, align 8, !dbg !12357
  %165 = getelementptr inbounds i8, i8* %164, i64 1, !dbg !12357
  %166 = load i8, i8* %165, align 1, !dbg !12357
  %167 = zext i8 %166 to i32, !dbg !12357
  %168 = shl i32 %167, 8, !dbg !12358
  %169 = or i32 %163, %168, !dbg !12359
  %170 = load i8*, i8** %31, align 8, !dbg !12360
  %171 = getelementptr inbounds i8, i8* %170, i64 0, !dbg !12360
  %172 = load i8, i8* %171, align 1, !dbg !12360
  %173 = zext i8 %172 to i32, !dbg !12360
  %174 = or i32 %169, %173, !dbg !12361
  store i32 %174, i32* %20, align 4, !dbg !12362
  %175 = load i32, i32* %20, align 4, !dbg !12363
  store i32 %175, i32* %21, align 4, !dbg !12364
  br label %176

176:                                              ; preds = %152, %128
  %177 = load i32, i32* %20, align 4, !dbg !12365
  %178 = zext i32 %177 to i64, !dbg !12366
  %179 = shl i64 %178, 32, !dbg !12367
  %180 = load i32, i32* %21, align 4, !dbg !12368
  %181 = zext i32 %180 to i64, !dbg !12368
  %182 = or i64 %179, %181, !dbg !12369
  store i64 %182, i64* %26, align 8, !dbg !12370
  %183 = load i64, i64* %26, align 8, !dbg !12371
  %184 = load i64, i64* %23, align 8, !dbg !12372
  %185 = and i64 %183, %184, !dbg !12373
  %186 = load i32, i32* %18, align 4, !dbg !12374
  %187 = zext i32 %186 to i64, !dbg !12375
  %188 = shl i64 %185, %187, !dbg !12375
  store i64 %188, i64* %24, align 8, !dbg !12376
  %189 = load i32, i32* %12, align 4, !dbg !12377
  %190 = icmp slt i32 %189, 32, !dbg !12379
  br i1 %190, label %191, label %198, !dbg !12380

191:                                              ; preds = %176
  store i8 0, i8* %30, align 1, !dbg !12381
  store i8 0, i8* %29, align 1, !dbg !12383
  store i8 0, i8* %28, align 1, !dbg !12384
  store i8 0, i8* %27, align 1, !dbg !12385
  %192 = load i64, i64* %25, align 8, !dbg !12386
  %193 = load i64, i64* %24, align 8, !dbg !12387
  %194 = load i32, i32* %12, align 4, !dbg !12388
  %195 = zext i32 %194 to i64, !dbg !12389
  %196 = lshr i64 %193, %195, !dbg !12389
  %197 = or i64 %192, %196, !dbg !12390
  store i64 %197, i64* %25, align 8, !dbg !12391
  br label %232, !dbg !12392

198:                                              ; preds = %176
  %199 = load i64, i64* %25, align 8, !dbg !12393
  %200 = lshr i64 %199, 56, !dbg !12395
  %201 = trunc i64 %200 to i8, !dbg !12396
  store i8 %201, i8* %27, align 1, !dbg !12397
  %202 = load i8, i8* %27, align 1, !dbg !12398
  %203 = load i8*, i8** %32, align 8, !dbg !12399
  %204 = getelementptr inbounds i8, i8* %203, i32 1, !dbg !12399
  store i8* %204, i8** %32, align 8, !dbg !12399
  store i8 %202, i8* %203, align 1, !dbg !12400
  %205 = load i64, i64* %25, align 8, !dbg !12401
  %206 = lshr i64 %205, 48, !dbg !12402
  %207 = trunc i64 %206 to i8, !dbg !12403
  store i8 %207, i8* %28, align 1, !dbg !12404
  %208 = load i8, i8* %28, align 1, !dbg !12405
  %209 = load i8*, i8** %32, align 8, !dbg !12406
  %210 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !12406
  store i8* %210, i8** %32, align 8, !dbg !12406
  store i8 %208, i8* %209, align 1, !dbg !12407
  %211 = load i64, i64* %25, align 8, !dbg !12408
  %212 = lshr i64 %211, 40, !dbg !12409
  %213 = trunc i64 %212 to i8, !dbg !12410
  store i8 %213, i8* %29, align 1, !dbg !12411
  %214 = load i8, i8* %29, align 1, !dbg !12412
  %215 = load i8*, i8** %32, align 8, !dbg !12413
  %216 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !12413
  store i8* %216, i8** %32, align 8, !dbg !12413
  store i8 %214, i8* %215, align 1, !dbg !12414
  %217 = load i64, i64* %25, align 8, !dbg !12415
  %218 = lshr i64 %217, 32, !dbg !12416
  %219 = trunc i64 %218 to i8, !dbg !12417
  store i8 %219, i8* %30, align 1, !dbg !12418
  %220 = load i8, i8* %30, align 1, !dbg !12419
  %221 = load i8*, i8** %32, align 8, !dbg !12420
  %222 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !12420
  store i8* %222, i8** %32, align 8, !dbg !12420
  store i8 %220, i8* %221, align 1, !dbg !12421
  %223 = load i32, i32* %12, align 4, !dbg !12422
  %224 = sub nsw i32 %223, 32, !dbg !12422
  store i32 %224, i32* %12, align 4, !dbg !12422
  %225 = load i64, i64* %25, align 8, !dbg !12423
  %226 = shl i64 %225, 32, !dbg !12424
  %227 = load i64, i64* %24, align 8, !dbg !12425
  %228 = load i32, i32* %12, align 4, !dbg !12426
  %229 = zext i32 %228 to i64, !dbg !12427
  %230 = lshr i64 %227, %229, !dbg !12427
  %231 = or i64 %226, %230, !dbg !12428
  store i64 %231, i64* %25, align 8, !dbg !12429
  br label %232

232:                                              ; preds = %198, %191
  %233 = load i16, i16* %8, align 2, !dbg !12430
  %234 = zext i16 %233 to i32, !dbg !12430
  %235 = load i32, i32* %12, align 4, !dbg !12431
  %236 = add nsw i32 %235, %234, !dbg !12431
  store i32 %236, i32* %12, align 4, !dbg !12431
  br label %237, !dbg !12432

237:                                              ; preds = %232
  %238 = load i16, i16* %33, align 2, !dbg !12433
  %239 = add i16 %238, 1, !dbg !12433
  store i16 %239, i16* %33, align 2, !dbg !12433
  br label %81, !dbg !12434, !llvm.loop !12435

240:                                              ; preds = %81
  br label %241, !dbg !12437

241:                                              ; preds = %240
  %242 = load i32, i32* %19, align 4, !dbg !12438
  %243 = add i32 %242, -1, !dbg !12438
  store i32 %243, i32* %19, align 4, !dbg !12438
  br label %69, !dbg !12439, !llvm.loop !12440

244:                                              ; preds = %69
  br label %245, !dbg !12442

245:                                              ; preds = %248, %244
  %246 = load i32, i32* %12, align 4, !dbg !12443
  %247 = icmp sgt i32 %246, 0, !dbg !12444
  br i1 %247, label %248, label %259, !dbg !12442

248:                                              ; preds = %245
  %249 = load i64, i64* %25, align 8, !dbg !12445
  %250 = lshr i64 %249, 56, !dbg !12447
  %251 = trunc i64 %250 to i8, !dbg !12448
  store i8 %251, i8* %27, align 1, !dbg !12449
  %252 = load i8, i8* %27, align 1, !dbg !12450
  %253 = load i8*, i8** %32, align 8, !dbg !12451
  %254 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !12451
  store i8* %254, i8** %32, align 8, !dbg !12451
  store i8 %252, i8* %253, align 1, !dbg !12452
  %255 = load i64, i64* %25, align 8, !dbg !12453
  %256 = shl i64 %255, 8, !dbg !12454
  store i64 %256, i64* %25, align 8, !dbg !12455
  %257 = load i32, i32* %12, align 4, !dbg !12456
  %258 = sub nsw i32 %257, 8, !dbg !12456
  store i32 %258, i32* %12, align 4, !dbg !12456
  br label %245, !dbg !12442, !llvm.loop !12457

259:                                              ; preds = %245
  store i32 0, i32* %6, align 4, !dbg !12459
  br label %260, !dbg !12459

260:                                              ; preds = %259, %39
  %261 = load i32, i32* %6, align 4, !dbg !12460
  ret i32 %261, !dbg !12460
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rotateContigSamples8bits(i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32, i8*, i8*) #0 !dbg !12461 {
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8*, align 8
  %29 = alloca i16, align 2
  store i16 %0, i16* %10, align 2
  call void @llvm.dbg.declare(metadata i16* %10, metadata !12464, metadata !DIExpression()), !dbg !12465
  store i16 %1, i16* %11, align 2
  call void @llvm.dbg.declare(metadata i16* %11, metadata !12466, metadata !DIExpression()), !dbg !12467
  store i16 %2, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !12468, metadata !DIExpression()), !dbg !12469
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12470, metadata !DIExpression()), !dbg !12471
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12472, metadata !DIExpression()), !dbg !12473
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12474, metadata !DIExpression()), !dbg !12475
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12476, metadata !DIExpression()), !dbg !12477
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12478, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.declare(metadata i32* %18, metadata !12480, metadata !DIExpression()), !dbg !12481
  store i32 0, i32* %18, align 4, !dbg !12481
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12482, metadata !DIExpression()), !dbg !12483
  store i32 0, i32* %19, align 4, !dbg !12483
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12484, metadata !DIExpression()), !dbg !12485
  store i32 0, i32* %20, align 4, !dbg !12485
  call void @llvm.dbg.declare(metadata i32* %21, metadata !12486, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.declare(metadata i32* %22, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i32 0, i32* %22, align 4, !dbg !12489
  call void @llvm.dbg.declare(metadata i32* %23, metadata !12490, metadata !DIExpression()), !dbg !12491
  store i32 0, i32* %23, align 4, !dbg !12491
  call void @llvm.dbg.declare(metadata i8* %24, metadata !12492, metadata !DIExpression()), !dbg !12493
  store i8 0, i8* %24, align 1, !dbg !12493
  call void @llvm.dbg.declare(metadata i8* %25, metadata !12494, metadata !DIExpression()), !dbg !12495
  store i8 0, i8* %25, align 1, !dbg !12495
  call void @llvm.dbg.declare(metadata i8* %26, metadata !12496, metadata !DIExpression()), !dbg !12497
  store i8 0, i8* %26, align 1, !dbg !12497
  call void @llvm.dbg.declare(metadata i8* %27, metadata !12498, metadata !DIExpression()), !dbg !12499
  store i8 0, i8* %27, align 1, !dbg !12499
  call void @llvm.dbg.declare(metadata i8** %28, metadata !12500, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata i16* %29, metadata !12502, metadata !DIExpression()), !dbg !12503
  %30 = load i8*, i8** %16, align 8, !dbg !12504
  %31 = icmp eq i8* %30, null, !dbg !12506
  br i1 %31, label %35, label %32, !dbg !12507

32:                                               ; preds = %8
  %33 = load i8*, i8** %17, align 8, !dbg !12508
  %34 = icmp eq i8* %33, null, !dbg !12509
  br i1 %34, label %35, label %36, !dbg !12510

35:                                               ; preds = %32, %8
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.345, i64 0, i64 0)), !dbg !12511
  store i32 1, i32* %9, align 4, !dbg !12513
  br label %186, !dbg !12513

36:                                               ; preds = %32
  %37 = load i16, i16* %12, align 2, !dbg !12514
  %38 = zext i16 %37 to i32, !dbg !12514
  %39 = load i16, i16* %11, align 2, !dbg !12515
  %40 = zext i16 %39 to i32, !dbg !12515
  %41 = mul nsw i32 %38, %40, !dbg !12516
  %42 = load i32, i32* %13, align 4, !dbg !12517
  %43 = mul i32 %41, %42, !dbg !12518
  %44 = add i32 %43, 7, !dbg !12519
  %45 = udiv i32 %44, 8, !dbg !12520
  store i32 %45, i32* %22, align 4, !dbg !12521
  store i32 0, i32* %18, align 4, !dbg !12522
  %46 = load i16, i16* %12, align 2, !dbg !12523
  %47 = zext i16 %46 to i32, !dbg !12523
  %48 = sub nsw i32 8, %47, !dbg !12524
  %49 = ashr i32 255, %48, !dbg !12525
  %50 = trunc i32 %49 to i8, !dbg !12526
  store i8 %50, i8* %25, align 1, !dbg !12527
  store i8 0, i8* %27, align 1, !dbg !12528
  store i8 0, i8* %26, align 1, !dbg !12529
  store i32 0, i32* %21, align 4, !dbg !12530
  br label %51, !dbg !12532

51:                                               ; preds = %168, %36
  %52 = load i32, i32* %21, align 4, !dbg !12533
  %53 = load i32, i32* %14, align 4, !dbg !12535
  %54 = icmp ult i32 %52, %53, !dbg !12536
  br i1 %54, label %55, label %171, !dbg !12537

55:                                               ; preds = %51
  %56 = load i32, i32* %15, align 4, !dbg !12538
  %57 = load i16, i16* %12, align 2, !dbg !12540
  %58 = zext i16 %57 to i32, !dbg !12540
  %59 = mul i32 %56, %58, !dbg !12541
  %60 = load i16, i16* %11, align 2, !dbg !12542
  %61 = zext i16 %60 to i32, !dbg !12542
  %62 = mul i32 %59, %61, !dbg !12543
  store i32 %62, i32* %23, align 4, !dbg !12544
  store i16 0, i16* %29, align 2, !dbg !12545
  br label %63, !dbg !12547

63:                                               ; preds = %164, %55
  %64 = load i16, i16* %29, align 2, !dbg !12548
  %65 = zext i16 %64 to i32, !dbg !12548
  %66 = load i16, i16* %11, align 2, !dbg !12550
  %67 = zext i16 %66 to i32, !dbg !12550
  %68 = icmp slt i32 %65, %67, !dbg !12551
  br i1 %68, label %69, label %167, !dbg !12552

69:                                               ; preds = %63
  %70 = load i16, i16* %29, align 2, !dbg !12553
  %71 = zext i16 %70 to i32, !dbg !12553
  %72 = icmp eq i32 %71, 0, !dbg !12556
  br i1 %72, label %73, label %78, !dbg !12557

73:                                               ; preds = %69
  %74 = load i32, i32* %23, align 4, !dbg !12558
  %75 = udiv i32 %74, 8, !dbg !12560
  store i32 %75, i32* %19, align 4, !dbg !12561
  %76 = load i32, i32* %23, align 4, !dbg !12562
  %77 = urem i32 %76, 8, !dbg !12563
  store i32 %77, i32* %20, align 4, !dbg !12564
  br label %95, !dbg !12565

78:                                               ; preds = %69
  %79 = load i32, i32* %23, align 4, !dbg !12566
  %80 = load i16, i16* %29, align 2, !dbg !12568
  %81 = zext i16 %80 to i32, !dbg !12568
  %82 = load i16, i16* %12, align 2, !dbg !12569
  %83 = zext i16 %82 to i32, !dbg !12569
  %84 = mul nsw i32 %81, %83, !dbg !12570
  %85 = add i32 %79, %84, !dbg !12571
  %86 = udiv i32 %85, 8, !dbg !12572
  store i32 %86, i32* %19, align 4, !dbg !12573
  %87 = load i32, i32* %23, align 4, !dbg !12574
  %88 = load i16, i16* %29, align 2, !dbg !12575
  %89 = zext i16 %88 to i32, !dbg !12575
  %90 = load i16, i16* %12, align 2, !dbg !12576
  %91 = zext i16 %90 to i32, !dbg !12576
  %92 = mul nsw i32 %89, %91, !dbg !12577
  %93 = add i32 %87, %92, !dbg !12578
  %94 = urem i32 %93, 8, !dbg !12579
  store i32 %94, i32* %20, align 4, !dbg !12580
  br label %95

95:                                               ; preds = %78, %73
  %96 = load i16, i16* %10, align 2, !dbg !12581
  %97 = zext i16 %96 to i32, !dbg !12581
  switch i32 %97, label %119 [
    i32 90, label %98
    i32 270, label %109
  ], !dbg !12582

98:                                               ; preds = %95
  %99 = load i8*, i8** %16, align 8, !dbg !12583
  %100 = load i32, i32* %19, align 4, !dbg !12585
  %101 = zext i32 %100 to i64, !dbg !12586
  %102 = getelementptr inbounds i8, i8* %99, i64 %101, !dbg !12586
  %103 = load i32, i32* %21, align 4, !dbg !12587
  %104 = load i32, i32* %22, align 4, !dbg !12588
  %105 = mul i32 %103, %104, !dbg !12589
  %106 = zext i32 %105 to i64, !dbg !12590
  %107 = sub i64 0, %106, !dbg !12590
  %108 = getelementptr inbounds i8, i8* %102, i64 %107, !dbg !12590
  store i8* %108, i8** %28, align 8, !dbg !12591
  br label %122, !dbg !12592

109:                                              ; preds = %95
  %110 = load i8*, i8** %16, align 8, !dbg !12593
  %111 = load i32, i32* %19, align 4, !dbg !12594
  %112 = zext i32 %111 to i64, !dbg !12595
  %113 = getelementptr inbounds i8, i8* %110, i64 %112, !dbg !12595
  %114 = load i32, i32* %21, align 4, !dbg !12596
  %115 = load i32, i32* %22, align 4, !dbg !12597
  %116 = mul i32 %114, %115, !dbg !12598
  %117 = zext i32 %116 to i64, !dbg !12599
  %118 = getelementptr inbounds i8, i8* %113, i64 %117, !dbg !12599
  store i8* %118, i8** %28, align 8, !dbg !12600
  br label %122, !dbg !12601

119:                                              ; preds = %95
  %120 = load i16, i16* %10, align 2, !dbg !12602
  %121 = zext i16 %120 to i32, !dbg !12602
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i64 0, i64 0), i32 %121), !dbg !12603
  store i32 1, i32* %9, align 4, !dbg !12604
  br label %186, !dbg !12604

122:                                              ; preds = %109, %98
  %123 = load i8, i8* %25, align 1, !dbg !12605
  %124 = zext i8 %123 to i32, !dbg !12605
  %125 = load i32, i32* %20, align 4, !dbg !12606
  %126 = sub i32 8, %125, !dbg !12607
  %127 = load i16, i16* %12, align 2, !dbg !12608
  %128 = zext i16 %127 to i32, !dbg !12608
  %129 = sub i32 %126, %128, !dbg !12609
  %130 = shl i32 %124, %129, !dbg !12610
  %131 = trunc i32 %130 to i8, !dbg !12605
  store i8 %131, i8* %24, align 1, !dbg !12611
  %132 = load i8*, i8** %28, align 8, !dbg !12612
  %133 = load i8, i8* %132, align 1, !dbg !12613
  %134 = zext i8 %133 to i32, !dbg !12614
  %135 = load i8, i8* %24, align 1, !dbg !12615
  %136 = zext i8 %135 to i32, !dbg !12615
  %137 = and i32 %134, %136, !dbg !12616
  %138 = load i32, i32* %20, align 4, !dbg !12617
  %139 = shl i32 %137, %138, !dbg !12618
  %140 = trunc i32 %139 to i8, !dbg !12619
  store i8 %140, i8* %26, align 1, !dbg !12620
  %141 = load i32, i32* %18, align 4, !dbg !12621
  %142 = icmp sge i32 %141, 8, !dbg !12623
  br i1 %142, label %143, label %150, !dbg !12624

143:                                              ; preds = %122
  %144 = load i8, i8* %27, align 1, !dbg !12625
  %145 = load i8*, i8** %17, align 8, !dbg !12627
  %146 = getelementptr inbounds i8, i8* %145, i32 1, !dbg !12627
  store i8* %146, i8** %17, align 8, !dbg !12627
  store i8 %144, i8* %145, align 1, !dbg !12628
  %147 = load i8, i8* %26, align 1, !dbg !12629
  store i8 %147, i8* %27, align 1, !dbg !12630
  %148 = load i32, i32* %18, align 4, !dbg !12631
  %149 = sub nsw i32 %148, 8, !dbg !12631
  store i32 %149, i32* %18, align 4, !dbg !12631
  br label %159, !dbg !12632

150:                                              ; preds = %122
  %151 = load i8, i8* %27, align 1, !dbg !12633
  %152 = zext i8 %151 to i32, !dbg !12633
  %153 = load i8, i8* %26, align 1, !dbg !12635
  %154 = zext i8 %153 to i32, !dbg !12635
  %155 = load i32, i32* %18, align 4, !dbg !12636
  %156 = ashr i32 %154, %155, !dbg !12637
  %157 = or i32 %152, %156, !dbg !12638
  %158 = trunc i32 %157 to i8, !dbg !12639
  store i8 %158, i8* %27, align 1, !dbg !12640
  br label %159

159:                                              ; preds = %150, %143
  %160 = load i16, i16* %12, align 2, !dbg !12641
  %161 = zext i16 %160 to i32, !dbg !12641
  %162 = load i32, i32* %18, align 4, !dbg !12642
  %163 = add nsw i32 %162, %161, !dbg !12642
  store i32 %163, i32* %18, align 4, !dbg !12642
  br label %164, !dbg !12643

164:                                              ; preds = %159
  %165 = load i16, i16* %29, align 2, !dbg !12644
  %166 = add i16 %165, 1, !dbg !12644
  store i16 %166, i16* %29, align 2, !dbg !12644
  br label %63, !dbg !12645, !llvm.loop !12646

167:                                              ; preds = %63
  br label %168, !dbg !12648

168:                                              ; preds = %167
  %169 = load i32, i32* %21, align 4, !dbg !12649
  %170 = add i32 %169, 1, !dbg !12649
  store i32 %170, i32* %21, align 4, !dbg !12649
  br label %51, !dbg !12650, !llvm.loop !12651

171:                                              ; preds = %51
  %172 = load i32, i32* %18, align 4, !dbg !12653
  %173 = icmp sgt i32 %172, 0, !dbg !12655
  br i1 %173, label %174, label %185, !dbg !12656

174:                                              ; preds = %171
  %175 = load i8, i8* %27, align 1, !dbg !12657
  %176 = zext i8 %175 to i32, !dbg !12657
  %177 = load i32, i32* %18, align 4, !dbg !12659
  %178 = sub nsw i32 8, %177, !dbg !12660
  %179 = shl i32 255, %178, !dbg !12661
  %180 = and i32 %176, %179, !dbg !12662
  %181 = trunc i32 %180 to i8, !dbg !12663
  store i8 %181, i8* %26, align 1, !dbg !12664
  %182 = load i8, i8* %26, align 1, !dbg !12665
  %183 = load i8*, i8** %17, align 8, !dbg !12666
  %184 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !12666
  store i8* %184, i8** %17, align 8, !dbg !12666
  store i8 %182, i8* %183, align 1, !dbg !12667
  br label %185, !dbg !12668

185:                                              ; preds = %174, %171
  store i32 0, i32* %9, align 4, !dbg !12669
  br label %186, !dbg !12669

186:                                              ; preds = %185, %119, %35
  %187 = load i32, i32* %9, align 4, !dbg !12670
  ret i32 %187, !dbg !12670
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rotateContigSamples16bits(i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32, i8*, i8*) #0 !dbg !12671 {
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i16, align 2
  %25 = alloca i16, align 2
  %26 = alloca i16, align 2
  %27 = alloca i16, align 2
  %28 = alloca i8, align 1
  %29 = alloca i8*, align 8
  %30 = alloca i16, align 2
  store i16 %0, i16* %10, align 2
  call void @llvm.dbg.declare(metadata i16* %10, metadata !12672, metadata !DIExpression()), !dbg !12673
  store i16 %1, i16* %11, align 2
  call void @llvm.dbg.declare(metadata i16* %11, metadata !12674, metadata !DIExpression()), !dbg !12675
  store i16 %2, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !12676, metadata !DIExpression()), !dbg !12677
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12678, metadata !DIExpression()), !dbg !12679
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12680, metadata !DIExpression()), !dbg !12681
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12682, metadata !DIExpression()), !dbg !12683
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12684, metadata !DIExpression()), !dbg !12685
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12686, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.declare(metadata i32* %18, metadata !12688, metadata !DIExpression()), !dbg !12689
  store i32 0, i32* %18, align 4, !dbg !12689
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12690, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12692, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.declare(metadata i32* %21, metadata !12694, metadata !DIExpression()), !dbg !12695
  call void @llvm.dbg.declare(metadata i32* %22, metadata !12696, metadata !DIExpression()), !dbg !12697
  store i32 0, i32* %22, align 4, !dbg !12697
  call void @llvm.dbg.declare(metadata i32* %23, metadata !12698, metadata !DIExpression()), !dbg !12699
  store i32 0, i32* %23, align 4, !dbg !12699
  call void @llvm.dbg.declare(metadata i16* %24, metadata !12700, metadata !DIExpression()), !dbg !12701
  store i16 0, i16* %24, align 2, !dbg !12701
  call void @llvm.dbg.declare(metadata i16* %25, metadata !12702, metadata !DIExpression()), !dbg !12703
  store i16 0, i16* %25, align 2, !dbg !12703
  call void @llvm.dbg.declare(metadata i16* %26, metadata !12704, metadata !DIExpression()), !dbg !12705
  store i16 0, i16* %26, align 2, !dbg !12705
  call void @llvm.dbg.declare(metadata i16* %27, metadata !12706, metadata !DIExpression()), !dbg !12707
  store i16 0, i16* %27, align 2, !dbg !12707
  call void @llvm.dbg.declare(metadata i8* %28, metadata !12708, metadata !DIExpression()), !dbg !12709
  store i8 0, i8* %28, align 1, !dbg !12709
  call void @llvm.dbg.declare(metadata i8** %29, metadata !12710, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.declare(metadata i16* %30, metadata !12712, metadata !DIExpression()), !dbg !12713
  %31 = load i8*, i8** %16, align 8, !dbg !12714
  %32 = icmp eq i8* %31, null, !dbg !12716
  br i1 %32, label %36, label %33, !dbg !12717

33:                                               ; preds = %8
  %34 = load i8*, i8** %17, align 8, !dbg !12718
  %35 = icmp eq i8* %34, null, !dbg !12719
  br i1 %35, label %36, label %37, !dbg !12720

36:                                               ; preds = %33, %8
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.347, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.345, i64 0, i64 0)), !dbg !12721
  store i32 1, i32* %9, align 4, !dbg !12723
  br label %222, !dbg !12723

37:                                               ; preds = %33
  %38 = load i16, i16* %12, align 2, !dbg !12724
  %39 = zext i16 %38 to i32, !dbg !12724
  %40 = load i16, i16* %11, align 2, !dbg !12725
  %41 = zext i16 %40 to i32, !dbg !12725
  %42 = mul nsw i32 %39, %41, !dbg !12726
  %43 = load i32, i32* %13, align 4, !dbg !12727
  %44 = mul i32 %42, %43, !dbg !12728
  %45 = add i32 %44, 7, !dbg !12729
  %46 = udiv i32 %45, 8, !dbg !12730
  store i32 %46, i32* %20, align 4, !dbg !12731
  store i32 0, i32* %18, align 4, !dbg !12732
  %47 = load i16, i16* %12, align 2, !dbg !12733
  %48 = zext i16 %47 to i32, !dbg !12733
  %49 = sub nsw i32 16, %48, !dbg !12734
  %50 = ashr i32 65535, %49, !dbg !12735
  %51 = trunc i32 %50 to i16, !dbg !12736
  store i16 %51, i16* %25, align 2, !dbg !12737
  store i16 0, i16* %27, align 2, !dbg !12738
  store i16 0, i16* %26, align 2, !dbg !12739
  store i32 0, i32* %19, align 4, !dbg !12740
  br label %52, !dbg !12742

52:                                               ; preds = %207, %37
  %53 = load i32, i32* %19, align 4, !dbg !12743
  %54 = load i32, i32* %14, align 4, !dbg !12745
  %55 = icmp ult i32 %53, %54, !dbg !12746
  br i1 %55, label %56, label %210, !dbg !12747

56:                                               ; preds = %52
  %57 = load i32, i32* %15, align 4, !dbg !12748
  %58 = load i16, i16* %12, align 2, !dbg !12750
  %59 = zext i16 %58 to i32, !dbg !12750
  %60 = mul i32 %57, %59, !dbg !12751
  %61 = load i16, i16* %11, align 2, !dbg !12752
  %62 = zext i16 %61 to i32, !dbg !12752
  %63 = mul i32 %60, %62, !dbg !12753
  store i32 %63, i32* %21, align 4, !dbg !12754
  store i16 0, i16* %30, align 2, !dbg !12755
  br label %64, !dbg !12757

64:                                               ; preds = %203, %56
  %65 = load i16, i16* %30, align 2, !dbg !12758
  %66 = zext i16 %65 to i32, !dbg !12758
  %67 = load i16, i16* %11, align 2, !dbg !12760
  %68 = zext i16 %67 to i32, !dbg !12760
  %69 = icmp slt i32 %66, %68, !dbg !12761
  br i1 %69, label %70, label %206, !dbg !12762

70:                                               ; preds = %64
  %71 = load i16, i16* %30, align 2, !dbg !12763
  %72 = zext i16 %71 to i32, !dbg !12763
  %73 = icmp eq i32 %72, 0, !dbg !12766
  br i1 %73, label %74, label %79, !dbg !12767

74:                                               ; preds = %70
  %75 = load i32, i32* %21, align 4, !dbg !12768
  %76 = udiv i32 %75, 8, !dbg !12770
  store i32 %76, i32* %22, align 4, !dbg !12771
  %77 = load i32, i32* %21, align 4, !dbg !12772
  %78 = urem i32 %77, 8, !dbg !12773
  store i32 %78, i32* %23, align 4, !dbg !12774
  br label %96, !dbg !12775

79:                                               ; preds = %70
  %80 = load i32, i32* %21, align 4, !dbg !12776
  %81 = load i16, i16* %30, align 2, !dbg !12778
  %82 = zext i16 %81 to i32, !dbg !12778
  %83 = load i16, i16* %12, align 2, !dbg !12779
  %84 = zext i16 %83 to i32, !dbg !12779
  %85 = mul nsw i32 %82, %84, !dbg !12780
  %86 = add i32 %80, %85, !dbg !12781
  %87 = udiv i32 %86, 8, !dbg !12782
  store i32 %87, i32* %22, align 4, !dbg !12783
  %88 = load i32, i32* %21, align 4, !dbg !12784
  %89 = load i16, i16* %30, align 2, !dbg !12785
  %90 = zext i16 %89 to i32, !dbg !12785
  %91 = load i16, i16* %12, align 2, !dbg !12786
  %92 = zext i16 %91 to i32, !dbg !12786
  %93 = mul nsw i32 %90, %92, !dbg !12787
  %94 = add i32 %88, %93, !dbg !12788
  %95 = urem i32 %94, 8, !dbg !12789
  store i32 %95, i32* %23, align 4, !dbg !12790
  br label %96

96:                                               ; preds = %79, %74
  %97 = load i16, i16* %10, align 2, !dbg !12791
  %98 = zext i16 %97 to i32, !dbg !12791
  switch i32 %98, label %120 [
    i32 90, label %99
    i32 270, label %110
  ], !dbg !12792

99:                                               ; preds = %96
  %100 = load i8*, i8** %16, align 8, !dbg !12793
  %101 = load i32, i32* %22, align 4, !dbg !12795
  %102 = zext i32 %101 to i64, !dbg !12796
  %103 = getelementptr inbounds i8, i8* %100, i64 %102, !dbg !12796
  %104 = load i32, i32* %19, align 4, !dbg !12797
  %105 = load i32, i32* %20, align 4, !dbg !12798
  %106 = mul i32 %104, %105, !dbg !12799
  %107 = zext i32 %106 to i64, !dbg !12800
  %108 = sub i64 0, %107, !dbg !12800
  %109 = getelementptr inbounds i8, i8* %103, i64 %108, !dbg !12800
  store i8* %109, i8** %29, align 8, !dbg !12801
  br label %123, !dbg !12802

110:                                              ; preds = %96
  %111 = load i8*, i8** %16, align 8, !dbg !12803
  %112 = load i32, i32* %22, align 4, !dbg !12804
  %113 = zext i32 %112 to i64, !dbg !12805
  %114 = getelementptr inbounds i8, i8* %111, i64 %113, !dbg !12805
  %115 = load i32, i32* %19, align 4, !dbg !12806
  %116 = load i32, i32* %20, align 4, !dbg !12807
  %117 = mul i32 %115, %116, !dbg !12808
  %118 = zext i32 %117 to i64, !dbg !12809
  %119 = getelementptr inbounds i8, i8* %114, i64 %118, !dbg !12809
  store i8* %119, i8** %29, align 8, !dbg !12810
  br label %123, !dbg !12811

120:                                              ; preds = %96
  %121 = load i16, i16* %10, align 2, !dbg !12812
  %122 = zext i16 %121 to i32, !dbg !12812
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i64 0, i64 0), i32 %122), !dbg !12813
  store i32 1, i32* %9, align 4, !dbg !12814
  br label %222, !dbg !12814

123:                                              ; preds = %110, %99
  %124 = load i16, i16* %25, align 2, !dbg !12815
  %125 = zext i16 %124 to i32, !dbg !12815
  %126 = load i32, i32* %23, align 4, !dbg !12816
  %127 = sub i32 16, %126, !dbg !12817
  %128 = load i16, i16* %12, align 2, !dbg !12818
  %129 = zext i16 %128 to i32, !dbg !12818
  %130 = sub i32 %127, %129, !dbg !12819
  %131 = shl i32 %125, %130, !dbg !12820
  %132 = trunc i32 %131 to i16, !dbg !12815
  store i16 %132, i16* %24, align 2, !dbg !12821
  %133 = load i32, i32* @little_endian, align 4, !dbg !12822
  %134 = icmp ne i32 %133, 0, !dbg !12822
  br i1 %134, label %135, label %147, !dbg !12824

135:                                              ; preds = %123
  %136 = load i8*, i8** %29, align 8, !dbg !12825
  %137 = getelementptr inbounds i8, i8* %136, i64 0, !dbg !12825
  %138 = load i8, i8* %137, align 1, !dbg !12825
  %139 = zext i8 %138 to i32, !dbg !12825
  %140 = shl i32 %139, 8, !dbg !12826
  %141 = load i8*, i8** %29, align 8, !dbg !12827
  %142 = getelementptr inbounds i8, i8* %141, i64 1, !dbg !12827
  %143 = load i8, i8* %142, align 1, !dbg !12827
  %144 = zext i8 %143 to i32, !dbg !12827
  %145 = or i32 %140, %144, !dbg !12828
  %146 = trunc i32 %145 to i16, !dbg !12829
  store i16 %146, i16* %26, align 2, !dbg !12830
  br label %159, !dbg !12831

147:                                              ; preds = %123
  %148 = load i8*, i8** %29, align 8, !dbg !12832
  %149 = getelementptr inbounds i8, i8* %148, i64 1, !dbg !12832
  %150 = load i8, i8* %149, align 1, !dbg !12832
  %151 = zext i8 %150 to i32, !dbg !12832
  %152 = shl i32 %151, 8, !dbg !12833
  %153 = load i8*, i8** %29, align 8, !dbg !12834
  %154 = getelementptr inbounds i8, i8* %153, i64 0, !dbg !12834
  %155 = load i8, i8* %154, align 1, !dbg !12834
  %156 = zext i8 %155 to i32, !dbg !12834
  %157 = or i32 %152, %156, !dbg !12835
  %158 = trunc i32 %157 to i16, !dbg !12836
  store i16 %158, i16* %26, align 2, !dbg !12837
  br label %159

159:                                              ; preds = %147, %135
  %160 = load i16, i16* %26, align 2, !dbg !12838
  %161 = zext i16 %160 to i32, !dbg !12838
  %162 = load i16, i16* %24, align 2, !dbg !12839
  %163 = zext i16 %162 to i32, !dbg !12839
  %164 = and i32 %161, %163, !dbg !12840
  %165 = load i32, i32* %23, align 4, !dbg !12841
  %166 = shl i32 %164, %165, !dbg !12842
  %167 = trunc i32 %166 to i16, !dbg !12843
  store i16 %167, i16* %26, align 2, !dbg !12844
  %168 = load i32, i32* %18, align 4, !dbg !12845
  %169 = icmp sge i32 %168, 8, !dbg !12847
  br i1 %169, label %170, label %189, !dbg !12848

170:                                              ; preds = %159
  %171 = load i16, i16* %27, align 2, !dbg !12849
  %172 = zext i16 %171 to i32, !dbg !12849
  %173 = ashr i32 %172, 8, !dbg !12851
  %174 = trunc i32 %173 to i8, !dbg !12852
  store i8 %174, i8* %28, align 1, !dbg !12853
  %175 = load i8, i8* %28, align 1, !dbg !12854
  %176 = load i8*, i8** %17, align 8, !dbg !12855
  %177 = getelementptr inbounds i8, i8* %176, i32 1, !dbg !12855
  store i8* %177, i8** %17, align 8, !dbg !12855
  store i8 %175, i8* %176, align 1, !dbg !12856
  %178 = load i32, i32* %18, align 4, !dbg !12857
  %179 = sub nsw i32 %178, 8, !dbg !12857
  store i32 %179, i32* %18, align 4, !dbg !12857
  %180 = load i16, i16* %27, align 2, !dbg !12858
  %181 = zext i16 %180 to i32, !dbg !12858
  %182 = shl i32 %181, 8, !dbg !12859
  %183 = load i16, i16* %26, align 2, !dbg !12860
  %184 = zext i16 %183 to i32, !dbg !12860
  %185 = load i32, i32* %18, align 4, !dbg !12861
  %186 = ashr i32 %184, %185, !dbg !12862
  %187 = or i32 %182, %186, !dbg !12863
  %188 = trunc i32 %187 to i16, !dbg !12864
  store i16 %188, i16* %27, align 2, !dbg !12865
  br label %198, !dbg !12866

189:                                              ; preds = %159
  store i8 0, i8* %28, align 1, !dbg !12867
  %190 = load i16, i16* %27, align 2, !dbg !12869
  %191 = zext i16 %190 to i32, !dbg !12869
  %192 = load i16, i16* %26, align 2, !dbg !12870
  %193 = zext i16 %192 to i32, !dbg !12870
  %194 = load i32, i32* %18, align 4, !dbg !12871
  %195 = ashr i32 %193, %194, !dbg !12872
  %196 = or i32 %191, %195, !dbg !12873
  %197 = trunc i32 %196 to i16, !dbg !12874
  store i16 %197, i16* %27, align 2, !dbg !12875
  br label %198

198:                                              ; preds = %189, %170
  %199 = load i16, i16* %12, align 2, !dbg !12876
  %200 = zext i16 %199 to i32, !dbg !12876
  %201 = load i32, i32* %18, align 4, !dbg !12877
  %202 = add nsw i32 %201, %200, !dbg !12877
  store i32 %202, i32* %18, align 4, !dbg !12877
  br label %203, !dbg !12878

203:                                              ; preds = %198
  %204 = load i16, i16* %30, align 2, !dbg !12879
  %205 = add i16 %204, 1, !dbg !12879
  store i16 %205, i16* %30, align 2, !dbg !12879
  br label %64, !dbg !12880, !llvm.loop !12881

206:                                              ; preds = %64
  br label %207, !dbg !12883

207:                                              ; preds = %206
  %208 = load i32, i32* %19, align 4, !dbg !12884
  %209 = add i32 %208, 1, !dbg !12884
  store i32 %209, i32* %19, align 4, !dbg !12884
  br label %52, !dbg !12885, !llvm.loop !12886

210:                                              ; preds = %52
  %211 = load i32, i32* %18, align 4, !dbg !12888
  %212 = icmp sgt i32 %211, 0, !dbg !12890
  br i1 %212, label %213, label %221, !dbg !12891

213:                                              ; preds = %210
  %214 = load i16, i16* %27, align 2, !dbg !12892
  %215 = zext i16 %214 to i32, !dbg !12892
  %216 = ashr i32 %215, 8, !dbg !12894
  %217 = trunc i32 %216 to i8, !dbg !12895
  store i8 %217, i8* %28, align 1, !dbg !12896
  %218 = load i8, i8* %28, align 1, !dbg !12897
  %219 = load i8*, i8** %17, align 8, !dbg !12898
  %220 = getelementptr inbounds i8, i8* %219, i32 1, !dbg !12898
  store i8* %220, i8** %17, align 8, !dbg !12898
  store i8 %218, i8* %219, align 1, !dbg !12899
  br label %221, !dbg !12900

221:                                              ; preds = %213, %210
  store i32 0, i32* %9, align 4, !dbg !12901
  br label %222, !dbg !12901

222:                                              ; preds = %221, %120, %36
  %223 = load i32, i32* %9, align 4, !dbg !12902
  ret i32 %223, !dbg !12902
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rotateContigSamples24bits(i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32, i8*, i8*) #0 !dbg !12903 {
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8*, align 8
  %31 = alloca i16, align 2
  store i16 %0, i16* %10, align 2
  call void @llvm.dbg.declare(metadata i16* %10, metadata !12904, metadata !DIExpression()), !dbg !12905
  store i16 %1, i16* %11, align 2
  call void @llvm.dbg.declare(metadata i16* %11, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i16 %2, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !12908, metadata !DIExpression()), !dbg !12909
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12910, metadata !DIExpression()), !dbg !12911
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12912, metadata !DIExpression()), !dbg !12913
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !12914, metadata !DIExpression()), !dbg !12915
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12916, metadata !DIExpression()), !dbg !12917
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata i32* %18, metadata !12920, metadata !DIExpression()), !dbg !12921
  store i32 0, i32* %18, align 4, !dbg !12921
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12922, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12924, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata i32* %21, metadata !12926, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.declare(metadata i32* %22, metadata !12928, metadata !DIExpression()), !dbg !12929
  store i32 0, i32* %22, align 4, !dbg !12929
  call void @llvm.dbg.declare(metadata i32* %23, metadata !12930, metadata !DIExpression()), !dbg !12931
  store i32 0, i32* %23, align 4, !dbg !12931
  call void @llvm.dbg.declare(metadata i32* %24, metadata !12932, metadata !DIExpression()), !dbg !12933
  store i32 0, i32* %24, align 4, !dbg !12933
  call void @llvm.dbg.declare(metadata i32* %25, metadata !12934, metadata !DIExpression()), !dbg !12935
  store i32 0, i32* %25, align 4, !dbg !12935
  call void @llvm.dbg.declare(metadata i32* %26, metadata !12936, metadata !DIExpression()), !dbg !12937
  store i32 0, i32* %26, align 4, !dbg !12937
  call void @llvm.dbg.declare(metadata i32* %27, metadata !12938, metadata !DIExpression()), !dbg !12939
  store i32 0, i32* %27, align 4, !dbg !12939
  call void @llvm.dbg.declare(metadata i8* %28, metadata !12940, metadata !DIExpression()), !dbg !12941
  store i8 0, i8* %28, align 1, !dbg !12941
  call void @llvm.dbg.declare(metadata i8* %29, metadata !12942, metadata !DIExpression()), !dbg !12943
  store i8 0, i8* %29, align 1, !dbg !12943
  call void @llvm.dbg.declare(metadata i8** %30, metadata !12944, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.declare(metadata i16* %31, metadata !12946, metadata !DIExpression()), !dbg !12947
  %32 = load i8*, i8** %16, align 8, !dbg !12948
  %33 = icmp eq i8* %32, null, !dbg !12950
  br i1 %33, label %37, label %34, !dbg !12951

34:                                               ; preds = %8
  %35 = load i8*, i8** %17, align 8, !dbg !12952
  %36 = icmp eq i8* %35, null, !dbg !12953
  br i1 %36, label %37, label %38, !dbg !12954

37:                                               ; preds = %34, %8
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.348, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.345, i64 0, i64 0)), !dbg !12955
  store i32 1, i32* %9, align 4, !dbg !12957
  br label %243, !dbg !12957

38:                                               ; preds = %34
  %39 = load i16, i16* %12, align 2, !dbg !12958
  %40 = zext i16 %39 to i32, !dbg !12958
  %41 = load i16, i16* %11, align 2, !dbg !12959
  %42 = zext i16 %41 to i32, !dbg !12959
  %43 = mul nsw i32 %40, %42, !dbg !12960
  %44 = load i32, i32* %13, align 4, !dbg !12961
  %45 = mul i32 %43, %44, !dbg !12962
  %46 = add i32 %45, 7, !dbg !12963
  %47 = udiv i32 %46, 8, !dbg !12964
  store i32 %47, i32* %20, align 4, !dbg !12965
  store i32 0, i32* %18, align 4, !dbg !12966
  %48 = load i16, i16* %12, align 2, !dbg !12967
  %49 = zext i16 %48 to i32, !dbg !12967
  %50 = sub nsw i32 32, %49, !dbg !12968
  %51 = lshr i32 -1, %50, !dbg !12969
  store i32 %51, i32* %25, align 4, !dbg !12970
  store i32 0, i32* %27, align 4, !dbg !12971
  store i32 0, i32* %26, align 4, !dbg !12972
  store i32 0, i32* %19, align 4, !dbg !12973
  br label %52, !dbg !12975

52:                                               ; preds = %223, %38
  %53 = load i32, i32* %19, align 4, !dbg !12976
  %54 = load i32, i32* %14, align 4, !dbg !12978
  %55 = icmp ult i32 %53, %54, !dbg !12979
  br i1 %55, label %56, label %226, !dbg !12980

56:                                               ; preds = %52
  %57 = load i32, i32* %15, align 4, !dbg !12981
  %58 = load i16, i16* %12, align 2, !dbg !12983
  %59 = zext i16 %58 to i32, !dbg !12983
  %60 = mul i32 %57, %59, !dbg !12984
  %61 = load i16, i16* %11, align 2, !dbg !12985
  %62 = zext i16 %61 to i32, !dbg !12985
  %63 = mul i32 %60, %62, !dbg !12986
  store i32 %63, i32* %21, align 4, !dbg !12987
  store i16 0, i16* %31, align 2, !dbg !12988
  br label %64, !dbg !12990

64:                                               ; preds = %219, %56
  %65 = load i16, i16* %31, align 2, !dbg !12991
  %66 = zext i16 %65 to i32, !dbg !12991
  %67 = load i16, i16* %11, align 2, !dbg !12993
  %68 = zext i16 %67 to i32, !dbg !12993
  %69 = icmp slt i32 %66, %68, !dbg !12994
  br i1 %69, label %70, label %222, !dbg !12995

70:                                               ; preds = %64
  %71 = load i16, i16* %31, align 2, !dbg !12996
  %72 = zext i16 %71 to i32, !dbg !12996
  %73 = icmp eq i32 %72, 0, !dbg !12999
  br i1 %73, label %74, label %79, !dbg !13000

74:                                               ; preds = %70
  %75 = load i32, i32* %21, align 4, !dbg !13001
  %76 = udiv i32 %75, 8, !dbg !13003
  store i32 %76, i32* %22, align 4, !dbg !13004
  %77 = load i32, i32* %21, align 4, !dbg !13005
  %78 = urem i32 %77, 8, !dbg !13006
  store i32 %78, i32* %23, align 4, !dbg !13007
  br label %96, !dbg !13008

79:                                               ; preds = %70
  %80 = load i32, i32* %21, align 4, !dbg !13009
  %81 = load i16, i16* %31, align 2, !dbg !13011
  %82 = zext i16 %81 to i32, !dbg !13011
  %83 = load i16, i16* %12, align 2, !dbg !13012
  %84 = zext i16 %83 to i32, !dbg !13012
  %85 = mul nsw i32 %82, %84, !dbg !13013
  %86 = add i32 %80, %85, !dbg !13014
  %87 = udiv i32 %86, 8, !dbg !13015
  store i32 %87, i32* %22, align 4, !dbg !13016
  %88 = load i32, i32* %21, align 4, !dbg !13017
  %89 = load i16, i16* %31, align 2, !dbg !13018
  %90 = zext i16 %89 to i32, !dbg !13018
  %91 = load i16, i16* %12, align 2, !dbg !13019
  %92 = zext i16 %91 to i32, !dbg !13019
  %93 = mul nsw i32 %90, %92, !dbg !13020
  %94 = add i32 %88, %93, !dbg !13021
  %95 = urem i32 %94, 8, !dbg !13022
  store i32 %95, i32* %23, align 4, !dbg !13023
  br label %96

96:                                               ; preds = %79, %74
  %97 = load i16, i16* %10, align 2, !dbg !13024
  %98 = zext i16 %97 to i32, !dbg !13024
  switch i32 %98, label %120 [
    i32 90, label %99
    i32 270, label %110
  ], !dbg !13025

99:                                               ; preds = %96
  %100 = load i8*, i8** %16, align 8, !dbg !13026
  %101 = load i32, i32* %22, align 4, !dbg !13028
  %102 = zext i32 %101 to i64, !dbg !13029
  %103 = getelementptr inbounds i8, i8* %100, i64 %102, !dbg !13029
  %104 = load i32, i32* %19, align 4, !dbg !13030
  %105 = load i32, i32* %20, align 4, !dbg !13031
  %106 = mul i32 %104, %105, !dbg !13032
  %107 = zext i32 %106 to i64, !dbg !13033
  %108 = sub i64 0, %107, !dbg !13033
  %109 = getelementptr inbounds i8, i8* %103, i64 %108, !dbg !13033
  store i8* %109, i8** %30, align 8, !dbg !13034
  br label %123, !dbg !13035

110:                                              ; preds = %96
  %111 = load i8*, i8** %16, align 8, !dbg !13036
  %112 = load i32, i32* %22, align 4, !dbg !13037
  %113 = zext i32 %112 to i64, !dbg !13038
  %114 = getelementptr inbounds i8, i8* %111, i64 %113, !dbg !13038
  %115 = load i32, i32* %19, align 4, !dbg !13039
  %116 = load i32, i32* %20, align 4, !dbg !13040
  %117 = mul i32 %115, %116, !dbg !13041
  %118 = zext i32 %117 to i64, !dbg !13042
  %119 = getelementptr inbounds i8, i8* %114, i64 %118, !dbg !13042
  store i8* %119, i8** %30, align 8, !dbg !13043
  br label %123, !dbg !13044

120:                                              ; preds = %96
  %121 = load i16, i16* %10, align 2, !dbg !13045
  %122 = zext i16 %121 to i32, !dbg !13045
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i64 0, i64 0), i32 %122), !dbg !13046
  store i32 1, i32* %9, align 4, !dbg !13047
  br label %243, !dbg !13047

123:                                              ; preds = %110, %99
  %124 = load i32, i32* %25, align 4, !dbg !13048
  %125 = load i32, i32* %23, align 4, !dbg !13049
  %126 = sub i32 32, %125, !dbg !13050
  %127 = load i16, i16* %12, align 2, !dbg !13051
  %128 = zext i16 %127 to i32, !dbg !13051
  %129 = sub i32 %126, %128, !dbg !13052
  %130 = shl i32 %124, %129, !dbg !13053
  store i32 %130, i32* %24, align 4, !dbg !13054
  %131 = load i32, i32* @little_endian, align 4, !dbg !13055
  %132 = icmp ne i32 %131, 0, !dbg !13055
  br i1 %132, label %133, label %156, !dbg !13057

133:                                              ; preds = %123
  %134 = load i8*, i8** %30, align 8, !dbg !13058
  %135 = getelementptr inbounds i8, i8* %134, i64 0, !dbg !13058
  %136 = load i8, i8* %135, align 1, !dbg !13058
  %137 = zext i8 %136 to i32, !dbg !13058
  %138 = shl i32 %137, 24, !dbg !13059
  %139 = load i8*, i8** %30, align 8, !dbg !13060
  %140 = getelementptr inbounds i8, i8* %139, i64 1, !dbg !13060
  %141 = load i8, i8* %140, align 1, !dbg !13060
  %142 = zext i8 %141 to i32, !dbg !13060
  %143 = shl i32 %142, 16, !dbg !13061
  %144 = or i32 %138, %143, !dbg !13062
  %145 = load i8*, i8** %30, align 8, !dbg !13063
  %146 = getelementptr inbounds i8, i8* %145, i64 2, !dbg !13063
  %147 = load i8, i8* %146, align 1, !dbg !13063
  %148 = zext i8 %147 to i32, !dbg !13063
  %149 = shl i32 %148, 8, !dbg !13064
  %150 = or i32 %144, %149, !dbg !13065
  %151 = load i8*, i8** %30, align 8, !dbg !13066
  %152 = getelementptr inbounds i8, i8* %151, i64 3, !dbg !13066
  %153 = load i8, i8* %152, align 1, !dbg !13066
  %154 = zext i8 %153 to i32, !dbg !13066
  %155 = or i32 %150, %154, !dbg !13067
  store i32 %155, i32* %26, align 4, !dbg !13068
  br label %179, !dbg !13069

156:                                              ; preds = %123
  %157 = load i8*, i8** %30, align 8, !dbg !13070
  %158 = getelementptr inbounds i8, i8* %157, i64 3, !dbg !13070
  %159 = load i8, i8* %158, align 1, !dbg !13070
  %160 = zext i8 %159 to i32, !dbg !13070
  %161 = shl i32 %160, 24, !dbg !13071
  %162 = load i8*, i8** %30, align 8, !dbg !13072
  %163 = getelementptr inbounds i8, i8* %162, i64 2, !dbg !13072
  %164 = load i8, i8* %163, align 1, !dbg !13072
  %165 = zext i8 %164 to i32, !dbg !13072
  %166 = shl i32 %165, 16, !dbg !13073
  %167 = or i32 %161, %166, !dbg !13074
  %168 = load i8*, i8** %30, align 8, !dbg !13075
  %169 = getelementptr inbounds i8, i8* %168, i64 1, !dbg !13075
  %170 = load i8, i8* %169, align 1, !dbg !13075
  %171 = zext i8 %170 to i32, !dbg !13075
  %172 = shl i32 %171, 8, !dbg !13076
  %173 = or i32 %167, %172, !dbg !13077
  %174 = load i8*, i8** %30, align 8, !dbg !13078
  %175 = getelementptr inbounds i8, i8* %174, i64 0, !dbg !13078
  %176 = load i8, i8* %175, align 1, !dbg !13078
  %177 = zext i8 %176 to i32, !dbg !13078
  %178 = or i32 %173, %177, !dbg !13079
  store i32 %178, i32* %26, align 4, !dbg !13080
  br label %179

179:                                              ; preds = %156, %133
  %180 = load i32, i32* %26, align 4, !dbg !13081
  %181 = load i32, i32* %24, align 4, !dbg !13082
  %182 = and i32 %180, %181, !dbg !13083
  %183 = load i32, i32* %23, align 4, !dbg !13084
  %184 = shl i32 %182, %183, !dbg !13085
  store i32 %184, i32* %26, align 4, !dbg !13086
  %185 = load i32, i32* %18, align 4, !dbg !13087
  %186 = icmp sge i32 %185, 16, !dbg !13089
  br i1 %186, label %187, label %208, !dbg !13090

187:                                              ; preds = %179
  %188 = load i32, i32* %27, align 4, !dbg !13091
  %189 = lshr i32 %188, 24, !dbg !13093
  %190 = trunc i32 %189 to i8, !dbg !13094
  store i8 %190, i8* %28, align 1, !dbg !13095
  %191 = load i8, i8* %28, align 1, !dbg !13096
  %192 = load i8*, i8** %17, align 8, !dbg !13097
  %193 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !13097
  store i8* %193, i8** %17, align 8, !dbg !13097
  store i8 %191, i8* %192, align 1, !dbg !13098
  %194 = load i32, i32* %27, align 4, !dbg !13099
  %195 = lshr i32 %194, 16, !dbg !13100
  %196 = trunc i32 %195 to i8, !dbg !13101
  store i8 %196, i8* %29, align 1, !dbg !13102
  %197 = load i8, i8* %29, align 1, !dbg !13103
  %198 = load i8*, i8** %17, align 8, !dbg !13104
  %199 = getelementptr inbounds i8, i8* %198, i32 1, !dbg !13104
  store i8* %199, i8** %17, align 8, !dbg !13104
  store i8 %197, i8* %198, align 1, !dbg !13105
  %200 = load i32, i32* %18, align 4, !dbg !13106
  %201 = sub nsw i32 %200, 16, !dbg !13106
  store i32 %201, i32* %18, align 4, !dbg !13106
  %202 = load i32, i32* %27, align 4, !dbg !13107
  %203 = shl i32 %202, 16, !dbg !13108
  %204 = load i32, i32* %26, align 4, !dbg !13109
  %205 = load i32, i32* %18, align 4, !dbg !13110
  %206 = lshr i32 %204, %205, !dbg !13111
  %207 = or i32 %203, %206, !dbg !13112
  store i32 %207, i32* %27, align 4, !dbg !13113
  br label %214, !dbg !13114

208:                                              ; preds = %179
  store i8 0, i8* %29, align 1, !dbg !13115
  store i8 0, i8* %28, align 1, !dbg !13117
  %209 = load i32, i32* %27, align 4, !dbg !13118
  %210 = load i32, i32* %26, align 4, !dbg !13119
  %211 = load i32, i32* %18, align 4, !dbg !13120
  %212 = lshr i32 %210, %211, !dbg !13121
  %213 = or i32 %209, %212, !dbg !13122
  store i32 %213, i32* %27, align 4, !dbg !13123
  br label %214

214:                                              ; preds = %208, %187
  %215 = load i16, i16* %12, align 2, !dbg !13124
  %216 = zext i16 %215 to i32, !dbg !13124
  %217 = load i32, i32* %18, align 4, !dbg !13125
  %218 = add nsw i32 %217, %216, !dbg !13125
  store i32 %218, i32* %18, align 4, !dbg !13125
  br label %219, !dbg !13126

219:                                              ; preds = %214
  %220 = load i16, i16* %31, align 2, !dbg !13127
  %221 = add i16 %220, 1, !dbg !13127
  store i16 %221, i16* %31, align 2, !dbg !13127
  br label %64, !dbg !13128, !llvm.loop !13129

222:                                              ; preds = %64
  br label %223, !dbg !13131

223:                                              ; preds = %222
  %224 = load i32, i32* %19, align 4, !dbg !13132
  %225 = add i32 %224, 1, !dbg !13132
  store i32 %225, i32* %19, align 4, !dbg !13132
  br label %52, !dbg !13133, !llvm.loop !13134

226:                                              ; preds = %52
  br label %227, !dbg !13136

227:                                              ; preds = %230, %226
  %228 = load i32, i32* %18, align 4, !dbg !13137
  %229 = icmp sgt i32 %228, 0, !dbg !13138
  br i1 %229, label %230, label %242, !dbg !13136

230:                                              ; preds = %227
  %231 = load i32, i32* %27, align 4, !dbg !13139
  %232 = lshr i32 %231, 24, !dbg !13141
  %233 = trunc i32 %232 to i8, !dbg !13142
  store i8 %233, i8* %28, align 1, !dbg !13143
  %234 = load i8, i8* %28, align 1, !dbg !13144
  %235 = load i8*, i8** %17, align 8, !dbg !13145
  %236 = getelementptr inbounds i8, i8* %235, i32 1, !dbg !13145
  store i8* %236, i8** %17, align 8, !dbg !13145
  store i8 %234, i8* %235, align 1, !dbg !13146
  %237 = load i32, i32* %27, align 4, !dbg !13147
  %238 = shl i32 %237, 8, !dbg !13148
  store i32 %238, i32* %27, align 4, !dbg !13149
  %239 = load i8, i8* %28, align 1, !dbg !13150
  store i8 %239, i8* %29, align 1, !dbg !13151
  %240 = load i32, i32* %18, align 4, !dbg !13152
  %241 = sub nsw i32 %240, 8, !dbg !13152
  store i32 %241, i32* %18, align 4, !dbg !13152
  br label %227, !dbg !13136, !llvm.loop !13153

242:                                              ; preds = %227
  store i32 0, i32* %9, align 4, !dbg !13155
  br label %243, !dbg !13155

243:                                              ; preds = %242, %120, %37
  %244 = load i32, i32* %9, align 4, !dbg !13156
  ret i32 %244, !dbg !13156
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rotateContigSamples32bits(i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32, i8*, i8*) #0 !dbg !13157 {
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8*, align 8
  %39 = alloca i16, align 2
  store i16 %0, i16* %10, align 2
  call void @llvm.dbg.declare(metadata i16* %10, metadata !13158, metadata !DIExpression()), !dbg !13159
  store i16 %1, i16* %11, align 2
  call void @llvm.dbg.declare(metadata i16* %11, metadata !13160, metadata !DIExpression()), !dbg !13161
  store i16 %2, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !13162, metadata !DIExpression()), !dbg !13163
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13164, metadata !DIExpression()), !dbg !13165
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13166, metadata !DIExpression()), !dbg !13167
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !13168, metadata !DIExpression()), !dbg !13169
  store i8* %6, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !13170, metadata !DIExpression()), !dbg !13171
  store i8* %7, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !13172, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.declare(metadata i32* %18, metadata !13174, metadata !DIExpression()), !dbg !13175
  store i32 0, i32* %18, align 4, !dbg !13175
  call void @llvm.dbg.declare(metadata i32* %19, metadata !13176, metadata !DIExpression()), !dbg !13177
  store i32 0, i32* %19, align 4, !dbg !13177
  call void @llvm.dbg.declare(metadata i32* %20, metadata !13178, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.declare(metadata i32* %21, metadata !13180, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.declare(metadata i32* %22, metadata !13182, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.declare(metadata i32* %23, metadata !13184, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.declare(metadata i32* %24, metadata !13186, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.declare(metadata i32* %25, metadata !13188, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.declare(metadata i32* %26, metadata !13190, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.declare(metadata i32* %27, metadata !13192, metadata !DIExpression()), !dbg !13193
  store i32 0, i32* %27, align 4, !dbg !13193
  call void @llvm.dbg.declare(metadata i32* %28, metadata !13194, metadata !DIExpression()), !dbg !13195
  store i32 0, i32* %28, align 4, !dbg !13195
  call void @llvm.dbg.declare(metadata i64* %29, metadata !13196, metadata !DIExpression()), !dbg !13197
  store i64 0, i64* %29, align 8, !dbg !13197
  call void @llvm.dbg.declare(metadata i64* %30, metadata !13198, metadata !DIExpression()), !dbg !13199
  store i64 0, i64* %30, align 8, !dbg !13199
  call void @llvm.dbg.declare(metadata i64* %31, metadata !13200, metadata !DIExpression()), !dbg !13201
  store i64 0, i64* %31, align 8, !dbg !13201
  call void @llvm.dbg.declare(metadata i64* %32, metadata !13202, metadata !DIExpression()), !dbg !13203
  store i64 0, i64* %32, align 8, !dbg !13203
  call void @llvm.dbg.declare(metadata i64* %33, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i64 0, i64* %33, align 8, !dbg !13205
  call void @llvm.dbg.declare(metadata i8* %34, metadata !13206, metadata !DIExpression()), !dbg !13207
  store i8 0, i8* %34, align 1, !dbg !13207
  call void @llvm.dbg.declare(metadata i8* %35, metadata !13208, metadata !DIExpression()), !dbg !13209
  store i8 0, i8* %35, align 1, !dbg !13209
  call void @llvm.dbg.declare(metadata i8* %36, metadata !13210, metadata !DIExpression()), !dbg !13211
  store i8 0, i8* %36, align 1, !dbg !13211
  call void @llvm.dbg.declare(metadata i8* %37, metadata !13212, metadata !DIExpression()), !dbg !13213
  store i8 0, i8* %37, align 1, !dbg !13213
  call void @llvm.dbg.declare(metadata i8** %38, metadata !13214, metadata !DIExpression()), !dbg !13215
  call void @llvm.dbg.declare(metadata i16* %39, metadata !13216, metadata !DIExpression()), !dbg !13217
  %40 = load i8*, i8** %16, align 8, !dbg !13218
  %41 = icmp eq i8* %40, null, !dbg !13220
  br i1 %41, label %45, label %42, !dbg !13221

42:                                               ; preds = %8
  %43 = load i8*, i8** %17, align 8, !dbg !13222
  %44 = icmp eq i8* %43, null, !dbg !13223
  br i1 %44, label %45, label %46, !dbg !13224

45:                                               ; preds = %42, %8
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.348, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.345, i64 0, i64 0)), !dbg !13225
  store i32 1, i32* %9, align 4, !dbg !13227
  br label %296, !dbg !13227

46:                                               ; preds = %42
  %47 = load i16, i16* %12, align 2, !dbg !13228
  %48 = zext i16 %47 to i32, !dbg !13228
  %49 = add nsw i32 %48, 7, !dbg !13229
  %50 = sdiv i32 %49, 8, !dbg !13230
  store i32 %50, i32* %20, align 4, !dbg !13231
  %51 = load i16, i16* %12, align 2, !dbg !13232
  %52 = zext i16 %51 to i32, !dbg !13232
  %53 = load i16, i16* %11, align 2, !dbg !13233
  %54 = zext i16 %53 to i32, !dbg !13233
  %55 = mul nsw i32 %52, %54, !dbg !13234
  %56 = add nsw i32 %55, 7, !dbg !13235
  %57 = sdiv i32 %56, 8, !dbg !13236
  store i32 %57, i32* %21, align 4, !dbg !13237
  %58 = load i32, i32* %21, align 4, !dbg !13238
  %59 = load i32, i32* %20, align 4, !dbg !13240
  %60 = add nsw i32 %59, 1, !dbg !13241
  %61 = icmp slt i32 %58, %60, !dbg !13242
  br i1 %61, label %62, label %64, !dbg !13243

62:                                               ; preds = %46
  %63 = load i32, i32* %21, align 4, !dbg !13244
  store i32 %63, i32* %19, align 4, !dbg !13245
  br label %67, !dbg !13246

64:                                               ; preds = %46
  %65 = load i32, i32* %20, align 4, !dbg !13247
  %66 = add nsw i32 %65, 1, !dbg !13248
  store i32 %66, i32* %19, align 4, !dbg !13249
  br label %67

67:                                               ; preds = %64, %62
  %68 = load i16, i16* %12, align 2, !dbg !13250
  %69 = zext i16 %68 to i32, !dbg !13250
  %70 = load i16, i16* %11, align 2, !dbg !13251
  %71 = zext i16 %70 to i32, !dbg !13251
  %72 = mul nsw i32 %69, %71, !dbg !13252
  %73 = load i32, i32* %13, align 4, !dbg !13253
  %74 = mul i32 %72, %73, !dbg !13254
  %75 = add i32 %74, 7, !dbg !13255
  %76 = udiv i32 %75, 8, !dbg !13256
  store i32 %76, i32* %23, align 4, !dbg !13257
  store i32 0, i32* %18, align 4, !dbg !13258
  %77 = load i16, i16* %12, align 2, !dbg !13259
  %78 = zext i16 %77 to i32, !dbg !13259
  %79 = sub nsw i32 64, %78, !dbg !13260
  %80 = zext i32 %79 to i64, !dbg !13261
  %81 = lshr i64 -1, %80, !dbg !13261
  store i64 %81, i64* %29, align 8, !dbg !13262
  store i64 0, i64* %32, align 8, !dbg !13263
  store i64 0, i64* %31, align 8, !dbg !13264
  store i32 0, i32* %22, align 4, !dbg !13265
  br label %82, !dbg !13267

82:                                               ; preds = %277, %67
  %83 = load i32, i32* %22, align 4, !dbg !13268
  %84 = load i32, i32* %14, align 4, !dbg !13270
  %85 = icmp ult i32 %83, %84, !dbg !13271
  br i1 %85, label %86, label %280, !dbg !13272

86:                                               ; preds = %82
  %87 = load i32, i32* %15, align 4, !dbg !13273
  %88 = load i16, i16* %12, align 2, !dbg !13275
  %89 = zext i16 %88 to i32, !dbg !13275
  %90 = mul i32 %87, %89, !dbg !13276
  %91 = load i16, i16* %11, align 2, !dbg !13277
  %92 = zext i16 %91 to i32, !dbg !13277
  %93 = mul i32 %90, %92, !dbg !13278
  store i32 %93, i32* %24, align 4, !dbg !13279
  store i16 0, i16* %39, align 2, !dbg !13280
  br label %94, !dbg !13282

94:                                               ; preds = %273, %86
  %95 = load i16, i16* %39, align 2, !dbg !13283
  %96 = zext i16 %95 to i32, !dbg !13283
  %97 = load i16, i16* %11, align 2, !dbg !13285
  %98 = zext i16 %97 to i32, !dbg !13285
  %99 = icmp slt i32 %96, %98, !dbg !13286
  br i1 %99, label %100, label %276, !dbg !13287

100:                                              ; preds = %94
  %101 = load i16, i16* %39, align 2, !dbg !13288
  %102 = zext i16 %101 to i32, !dbg !13288
  %103 = icmp eq i32 %102, 0, !dbg !13291
  br i1 %103, label %104, label %109, !dbg !13292

104:                                              ; preds = %100
  %105 = load i32, i32* %24, align 4, !dbg !13293
  %106 = udiv i32 %105, 8, !dbg !13295
  store i32 %106, i32* %25, align 4, !dbg !13296
  %107 = load i32, i32* %24, align 4, !dbg !13297
  %108 = urem i32 %107, 8, !dbg !13298
  store i32 %108, i32* %26, align 4, !dbg !13299
  br label %126, !dbg !13300

109:                                              ; preds = %100
  %110 = load i32, i32* %24, align 4, !dbg !13301
  %111 = load i16, i16* %39, align 2, !dbg !13303
  %112 = zext i16 %111 to i32, !dbg !13303
  %113 = load i16, i16* %12, align 2, !dbg !13304
  %114 = zext i16 %113 to i32, !dbg !13304
  %115 = mul nsw i32 %112, %114, !dbg !13305
  %116 = add i32 %110, %115, !dbg !13306
  %117 = udiv i32 %116, 8, !dbg !13307
  store i32 %117, i32* %25, align 4, !dbg !13308
  %118 = load i32, i32* %24, align 4, !dbg !13309
  %119 = load i16, i16* %39, align 2, !dbg !13310
  %120 = zext i16 %119 to i32, !dbg !13310
  %121 = load i16, i16* %12, align 2, !dbg !13311
  %122 = zext i16 %121 to i32, !dbg !13311
  %123 = mul nsw i32 %120, %122, !dbg !13312
  %124 = add i32 %118, %123, !dbg !13313
  %125 = urem i32 %124, 8, !dbg !13314
  store i32 %125, i32* %26, align 4, !dbg !13315
  br label %126

126:                                              ; preds = %109, %104
  %127 = load i16, i16* %10, align 2, !dbg !13316
  %128 = zext i16 %127 to i32, !dbg !13316
  switch i32 %128, label %150 [
    i32 90, label %129
    i32 270, label %140
  ], !dbg !13317

129:                                              ; preds = %126
  %130 = load i8*, i8** %16, align 8, !dbg !13318
  %131 = load i32, i32* %25, align 4, !dbg !13320
  %132 = zext i32 %131 to i64, !dbg !13321
  %133 = getelementptr inbounds i8, i8* %130, i64 %132, !dbg !13321
  %134 = load i32, i32* %22, align 4, !dbg !13322
  %135 = load i32, i32* %23, align 4, !dbg !13323
  %136 = mul i32 %134, %135, !dbg !13324
  %137 = zext i32 %136 to i64, !dbg !13325
  %138 = sub i64 0, %137, !dbg !13325
  %139 = getelementptr inbounds i8, i8* %133, i64 %138, !dbg !13325
  store i8* %139, i8** %38, align 8, !dbg !13326
  br label %153, !dbg !13327

140:                                              ; preds = %126
  %141 = load i8*, i8** %16, align 8, !dbg !13328
  %142 = load i32, i32* %25, align 4, !dbg !13329
  %143 = zext i32 %142 to i64, !dbg !13330
  %144 = getelementptr inbounds i8, i8* %141, i64 %143, !dbg !13330
  %145 = load i32, i32* %22, align 4, !dbg !13331
  %146 = load i32, i32* %23, align 4, !dbg !13332
  %147 = mul i32 %145, %146, !dbg !13333
  %148 = zext i32 %147 to i64, !dbg !13334
  %149 = getelementptr inbounds i8, i8* %144, i64 %148, !dbg !13334
  store i8* %149, i8** %38, align 8, !dbg !13335
  br label %153, !dbg !13336

150:                                              ; preds = %126
  %151 = load i16, i16* %10, align 2, !dbg !13337
  %152 = zext i16 %151 to i32, !dbg !13337
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i64 0, i64 0), i32 %152), !dbg !13338
  store i32 1, i32* %9, align 4, !dbg !13339
  br label %296, !dbg !13339

153:                                              ; preds = %140, %129
  %154 = load i64, i64* %29, align 8, !dbg !13340
  %155 = load i32, i32* %26, align 4, !dbg !13341
  %156 = sub i32 64, %155, !dbg !13342
  %157 = load i16, i16* %12, align 2, !dbg !13343
  %158 = zext i16 %157 to i32, !dbg !13343
  %159 = sub i32 %156, %158, !dbg !13344
  %160 = zext i32 %159 to i64, !dbg !13345
  %161 = shl i64 %154, %160, !dbg !13345
  store i64 %161, i64* %30, align 8, !dbg !13346
  %162 = load i32, i32* @little_endian, align 4, !dbg !13347
  %163 = icmp ne i32 %162, 0, !dbg !13347
  br i1 %163, label %164, label %188, !dbg !13349

164:                                              ; preds = %153
  %165 = load i8*, i8** %38, align 8, !dbg !13350
  %166 = getelementptr inbounds i8, i8* %165, i64 0, !dbg !13350
  %167 = load i8, i8* %166, align 1, !dbg !13350
  %168 = zext i8 %167 to i32, !dbg !13350
  %169 = shl i32 %168, 24, !dbg !13352
  %170 = load i8*, i8** %38, align 8, !dbg !13353
  %171 = getelementptr inbounds i8, i8* %170, i64 1, !dbg !13353
  %172 = load i8, i8* %171, align 1, !dbg !13353
  %173 = zext i8 %172 to i32, !dbg !13353
  %174 = shl i32 %173, 16, !dbg !13354
  %175 = or i32 %169, %174, !dbg !13355
  %176 = load i8*, i8** %38, align 8, !dbg !13356
  %177 = getelementptr inbounds i8, i8* %176, i64 2, !dbg !13356
  %178 = load i8, i8* %177, align 1, !dbg !13356
  %179 = zext i8 %178 to i32, !dbg !13356
  %180 = shl i32 %179, 8, !dbg !13357
  %181 = or i32 %175, %180, !dbg !13358
  %182 = load i8*, i8** %38, align 8, !dbg !13359
  %183 = getelementptr inbounds i8, i8* %182, i64 3, !dbg !13359
  %184 = load i8, i8* %183, align 1, !dbg !13359
  %185 = zext i8 %184 to i32, !dbg !13359
  %186 = or i32 %181, %185, !dbg !13360
  store i32 %186, i32* %27, align 4, !dbg !13361
  %187 = load i32, i32* %27, align 4, !dbg !13362
  store i32 %187, i32* %28, align 4, !dbg !13363
  br label %212, !dbg !13364

188:                                              ; preds = %153
  %189 = load i8*, i8** %38, align 8, !dbg !13365
  %190 = getelementptr inbounds i8, i8* %189, i64 3, !dbg !13365
  %191 = load i8, i8* %190, align 1, !dbg !13365
  %192 = zext i8 %191 to i32, !dbg !13365
  %193 = shl i32 %192, 24, !dbg !13367
  %194 = load i8*, i8** %38, align 8, !dbg !13368
  %195 = getelementptr inbounds i8, i8* %194, i64 2, !dbg !13368
  %196 = load i8, i8* %195, align 1, !dbg !13368
  %197 = zext i8 %196 to i32, !dbg !13368
  %198 = shl i32 %197, 16, !dbg !13369
  %199 = or i32 %193, %198, !dbg !13370
  %200 = load i8*, i8** %38, align 8, !dbg !13371
  %201 = getelementptr inbounds i8, i8* %200, i64 1, !dbg !13371
  %202 = load i8, i8* %201, align 1, !dbg !13371
  %203 = zext i8 %202 to i32, !dbg !13371
  %204 = shl i32 %203, 8, !dbg !13372
  %205 = or i32 %199, %204, !dbg !13373
  %206 = load i8*, i8** %38, align 8, !dbg !13374
  %207 = getelementptr inbounds i8, i8* %206, i64 0, !dbg !13374
  %208 = load i8, i8* %207, align 1, !dbg !13374
  %209 = zext i8 %208 to i32, !dbg !13374
  %210 = or i32 %205, %209, !dbg !13375
  store i32 %210, i32* %27, align 4, !dbg !13376
  %211 = load i32, i32* %27, align 4, !dbg !13377
  store i32 %211, i32* %28, align 4, !dbg !13378
  br label %212

212:                                              ; preds = %188, %164
  %213 = load i32, i32* %27, align 4, !dbg !13379
  %214 = zext i32 %213 to i64, !dbg !13380
  %215 = shl i64 %214, 32, !dbg !13381
  %216 = load i32, i32* %28, align 4, !dbg !13382
  %217 = zext i32 %216 to i64, !dbg !13382
  %218 = or i64 %215, %217, !dbg !13383
  store i64 %218, i64* %33, align 8, !dbg !13384
  %219 = load i64, i64* %33, align 8, !dbg !13385
  %220 = load i64, i64* %30, align 8, !dbg !13386
  %221 = and i64 %219, %220, !dbg !13387
  %222 = load i32, i32* %26, align 4, !dbg !13388
  %223 = zext i32 %222 to i64, !dbg !13389
  %224 = shl i64 %221, %223, !dbg !13389
  store i64 %224, i64* %31, align 8, !dbg !13390
  %225 = load i32, i32* %18, align 4, !dbg !13391
  %226 = icmp slt i32 %225, 32, !dbg !13393
  br i1 %226, label %227, label %234, !dbg !13394

227:                                              ; preds = %212
  store i8 0, i8* %37, align 1, !dbg !13395
  store i8 0, i8* %36, align 1, !dbg !13397
  store i8 0, i8* %35, align 1, !dbg !13398
  store i8 0, i8* %34, align 1, !dbg !13399
  %228 = load i64, i64* %32, align 8, !dbg !13400
  %229 = load i64, i64* %31, align 8, !dbg !13401
  %230 = load i32, i32* %18, align 4, !dbg !13402
  %231 = zext i32 %230 to i64, !dbg !13403
  %232 = lshr i64 %229, %231, !dbg !13403
  %233 = or i64 %228, %232, !dbg !13404
  store i64 %233, i64* %32, align 8, !dbg !13405
  br label %268, !dbg !13406

234:                                              ; preds = %212
  %235 = load i64, i64* %32, align 8, !dbg !13407
  %236 = lshr i64 %235, 56, !dbg !13409
  %237 = trunc i64 %236 to i8, !dbg !13410
  store i8 %237, i8* %34, align 1, !dbg !13411
  %238 = load i8, i8* %34, align 1, !dbg !13412
  %239 = load i8*, i8** %17, align 8, !dbg !13413
  %240 = getelementptr inbounds i8, i8* %239, i32 1, !dbg !13413
  store i8* %240, i8** %17, align 8, !dbg !13413
  store i8 %238, i8* %239, align 1, !dbg !13414
  %241 = load i64, i64* %32, align 8, !dbg !13415
  %242 = lshr i64 %241, 48, !dbg !13416
  %243 = trunc i64 %242 to i8, !dbg !13417
  store i8 %243, i8* %35, align 1, !dbg !13418
  %244 = load i8, i8* %35, align 1, !dbg !13419
  %245 = load i8*, i8** %17, align 8, !dbg !13420
  %246 = getelementptr inbounds i8, i8* %245, i32 1, !dbg !13420
  store i8* %246, i8** %17, align 8, !dbg !13420
  store i8 %244, i8* %245, align 1, !dbg !13421
  %247 = load i64, i64* %32, align 8, !dbg !13422
  %248 = lshr i64 %247, 40, !dbg !13423
  %249 = trunc i64 %248 to i8, !dbg !13424
  store i8 %249, i8* %36, align 1, !dbg !13425
  %250 = load i8, i8* %36, align 1, !dbg !13426
  %251 = load i8*, i8** %17, align 8, !dbg !13427
  %252 = getelementptr inbounds i8, i8* %251, i32 1, !dbg !13427
  store i8* %252, i8** %17, align 8, !dbg !13427
  store i8 %250, i8* %251, align 1, !dbg !13428
  %253 = load i64, i64* %32, align 8, !dbg !13429
  %254 = lshr i64 %253, 32, !dbg !13430
  %255 = trunc i64 %254 to i8, !dbg !13431
  store i8 %255, i8* %37, align 1, !dbg !13432
  %256 = load i8, i8* %37, align 1, !dbg !13433
  %257 = load i8*, i8** %17, align 8, !dbg !13434
  %258 = getelementptr inbounds i8, i8* %257, i32 1, !dbg !13434
  store i8* %258, i8** %17, align 8, !dbg !13434
  store i8 %256, i8* %257, align 1, !dbg !13435
  %259 = load i32, i32* %18, align 4, !dbg !13436
  %260 = sub nsw i32 %259, 32, !dbg !13436
  store i32 %260, i32* %18, align 4, !dbg !13436
  %261 = load i64, i64* %32, align 8, !dbg !13437
  %262 = shl i64 %261, 32, !dbg !13438
  %263 = load i64, i64* %31, align 8, !dbg !13439
  %264 = load i32, i32* %18, align 4, !dbg !13440
  %265 = zext i32 %264 to i64, !dbg !13441
  %266 = lshr i64 %263, %265, !dbg !13441
  %267 = or i64 %262, %266, !dbg !13442
  store i64 %267, i64* %32, align 8, !dbg !13443
  br label %268

268:                                              ; preds = %234, %227
  %269 = load i16, i16* %12, align 2, !dbg !13444
  %270 = zext i16 %269 to i32, !dbg !13444
  %271 = load i32, i32* %18, align 4, !dbg !13445
  %272 = add nsw i32 %271, %270, !dbg !13445
  store i32 %272, i32* %18, align 4, !dbg !13445
  br label %273, !dbg !13446

273:                                              ; preds = %268
  %274 = load i16, i16* %39, align 2, !dbg !13447
  %275 = add i16 %274, 1, !dbg !13447
  store i16 %275, i16* %39, align 2, !dbg !13447
  br label %94, !dbg !13448, !llvm.loop !13449

276:                                              ; preds = %94
  br label %277, !dbg !13451

277:                                              ; preds = %276
  %278 = load i32, i32* %22, align 4, !dbg !13452
  %279 = add i32 %278, 1, !dbg !13452
  store i32 %279, i32* %22, align 4, !dbg !13452
  br label %82, !dbg !13453, !llvm.loop !13454

280:                                              ; preds = %82
  br label %281, !dbg !13456

281:                                              ; preds = %284, %280
  %282 = load i32, i32* %18, align 4, !dbg !13457
  %283 = icmp sgt i32 %282, 0, !dbg !13458
  br i1 %283, label %284, label %295, !dbg !13456

284:                                              ; preds = %281
  %285 = load i64, i64* %32, align 8, !dbg !13459
  %286 = lshr i64 %285, 56, !dbg !13461
  %287 = trunc i64 %286 to i8, !dbg !13462
  store i8 %287, i8* %34, align 1, !dbg !13463
  %288 = load i8, i8* %34, align 1, !dbg !13464
  %289 = load i8*, i8** %17, align 8, !dbg !13465
  %290 = getelementptr inbounds i8, i8* %289, i32 1, !dbg !13465
  store i8* %290, i8** %17, align 8, !dbg !13465
  store i8 %288, i8* %289, align 1, !dbg !13466
  %291 = load i64, i64* %32, align 8, !dbg !13467
  %292 = shl i64 %291, 8, !dbg !13468
  store i64 %292, i64* %32, align 8, !dbg !13469
  %293 = load i32, i32* %18, align 4, !dbg !13470
  %294 = sub nsw i32 %293, 8, !dbg !13470
  store i32 %294, i32* %18, align 4, !dbg !13470
  br label %281, !dbg !13456, !llvm.loop !13471

295:                                              ; preds = %281
  store i32 0, i32* %9, align 4, !dbg !13473
  br label %296, !dbg !13473

296:                                              ; preds = %295, %150, %45
  %297 = load i32, i32* %9, align 4, !dbg !13474
  ret i32 %297, !dbg !13474
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reverseSamplesBytes(i16 zeroext, i16 zeroext, i32, i8*, i8*) #0 !dbg !13475 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca [32 x i8], align 16
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !13476, metadata !DIExpression()), !dbg !13477
  store i16 %1, i16* %8, align 2
  call void @llvm.dbg.declare(metadata i16* %8, metadata !13478, metadata !DIExpression()), !dbg !13479
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13480, metadata !DIExpression()), !dbg !13481
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !13484, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.declare(metadata i32* %12, metadata !13486, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13488, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata i32* %15, metadata !13492, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.declare(metadata i8* %16, metadata !13494, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.declare(metadata [32 x i8]* %17, metadata !13496, metadata !DIExpression()), !dbg !13498
  %18 = load i8*, i8** %10, align 8, !dbg !13499
  %19 = icmp eq i8* %18, null, !dbg !13501
  br i1 %19, label %23, label %20, !dbg !13502

20:                                               ; preds = %5
  %21 = load i8*, i8** %11, align 8, !dbg !13503
  %22 = icmp eq i8* %21, null, !dbg !13504
  br i1 %22, label %23, label %24, !dbg !13505

23:                                               ; preds = %20, %5
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.335, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !13506
  store i32 1, i32* %6, align 4, !dbg !13508
  br label %138, !dbg !13508

24:                                               ; preds = %20
  %25 = load i16, i16* %8, align 2, !dbg !13509
  %26 = zext i16 %25 to i32, !dbg !13509
  %27 = load i16, i16* %7, align 2, !dbg !13510
  %28 = zext i16 %27 to i32, !dbg !13510
  %29 = mul nsw i32 %26, %28, !dbg !13511
  %30 = add nsw i32 %29, 7, !dbg !13512
  %31 = sdiv i32 %30, 8, !dbg !13513
  store i32 %31, i32* %14, align 4, !dbg !13514
  %32 = load i16, i16* %8, align 2, !dbg !13515
  %33 = zext i16 %32 to i32, !dbg !13515
  %34 = sdiv i32 %33, 8, !dbg !13516
  switch i32 %34, label %134 [
    i32 8, label %35
    i32 4, label %35
    i32 3, label %35
    i32 2, label %35
    i32 1, label %83
  ], !dbg !13517

35:                                               ; preds = %24, %24, %24, %24
  store i32 0, i32* %13, align 4, !dbg !13518
  br label %36, !dbg !13521

36:                                               ; preds = %79, %35
  %37 = load i32, i32* %13, align 4, !dbg !13522
  %38 = load i32, i32* %9, align 4, !dbg !13524
  %39 = udiv i32 %38, 2, !dbg !13525
  %40 = icmp ult i32 %37, %39, !dbg !13526
  br i1 %40, label %41, label %82, !dbg !13527

41:                                               ; preds = %36
  %42 = load i32, i32* %13, align 4, !dbg !13528
  %43 = load i32, i32* %14, align 4, !dbg !13530
  %44 = mul i32 %42, %43, !dbg !13531
  store i32 %44, i32* %15, align 4, !dbg !13532
  %45 = getelementptr inbounds [32 x i8], [32 x i8]* %17, i64 0, i64 0, !dbg !13533
  %46 = load i8*, i8** %10, align 8, !dbg !13534
  %47 = load i32, i32* %15, align 4, !dbg !13535
  %48 = zext i32 %47 to i64, !dbg !13536
  %49 = getelementptr inbounds i8, i8* %46, i64 %48, !dbg !13536
  %50 = load i32, i32* %14, align 4, !dbg !13537
  %51 = zext i32 %50 to i64, !dbg !13537
  call void @_TIFFmemcpy(i8* %45, i8* %49, i64 %51), !dbg !13538
  %52 = load i8*, i8** %10, align 8, !dbg !13539
  %53 = load i32, i32* %15, align 4, !dbg !13540
  %54 = zext i32 %53 to i64, !dbg !13541
  %55 = getelementptr inbounds i8, i8* %52, i64 %54, !dbg !13541
  %56 = load i8*, i8** %11, align 8, !dbg !13542
  %57 = load i32, i32* %15, align 4, !dbg !13543
  %58 = zext i32 %57 to i64, !dbg !13544
  %59 = sub i64 0, %58, !dbg !13544
  %60 = getelementptr inbounds i8, i8* %56, i64 %59, !dbg !13544
  %61 = load i32, i32* %14, align 4, !dbg !13545
  %62 = zext i32 %61 to i64, !dbg !13546
  %63 = sub i64 0, %62, !dbg !13546
  %64 = getelementptr inbounds i8, i8* %60, i64 %63, !dbg !13546
  %65 = load i32, i32* %14, align 4, !dbg !13547
  %66 = zext i32 %65 to i64, !dbg !13547
  call void @_TIFFmemcpy(i8* %55, i8* %64, i64 %66), !dbg !13548
  %67 = load i8*, i8** %11, align 8, !dbg !13549
  %68 = load i32, i32* %15, align 4, !dbg !13550
  %69 = zext i32 %68 to i64, !dbg !13551
  %70 = sub i64 0, %69, !dbg !13551
  %71 = getelementptr inbounds i8, i8* %67, i64 %70, !dbg !13551
  %72 = load i32, i32* %14, align 4, !dbg !13552
  %73 = zext i32 %72 to i64, !dbg !13553
  %74 = sub i64 0, %73, !dbg !13553
  %75 = getelementptr inbounds i8, i8* %71, i64 %74, !dbg !13553
  %76 = getelementptr inbounds [32 x i8], [32 x i8]* %17, i64 0, i64 0, !dbg !13554
  %77 = load i32, i32* %14, align 4, !dbg !13555
  %78 = zext i32 %77 to i64, !dbg !13555
  call void @_TIFFmemcpy(i8* %75, i8* %76, i64 %78), !dbg !13556
  br label %79, !dbg !13557

79:                                               ; preds = %41
  %80 = load i32, i32* %13, align 4, !dbg !13558
  %81 = add i32 %80, 1, !dbg !13558
  store i32 %81, i32* %13, align 4, !dbg !13558
  br label %36, !dbg !13559, !llvm.loop !13560

82:                                               ; preds = %36
  br label %137, !dbg !13562

83:                                               ; preds = %24
  store i32 0, i32* %13, align 4, !dbg !13563
  br label %84, !dbg !13565

84:                                               ; preds = %130, %83
  %85 = load i32, i32* %13, align 4, !dbg !13566
  %86 = load i32, i32* %9, align 4, !dbg !13568
  %87 = udiv i32 %86, 2, !dbg !13569
  %88 = icmp ult i32 %85, %87, !dbg !13570
  br i1 %88, label %89, label %133, !dbg !13571

89:                                               ; preds = %84
  store i32 0, i32* %12, align 4, !dbg !13572
  br label %90, !dbg !13575

90:                                               ; preds = %120, %89
  %91 = load i32, i32* %12, align 4, !dbg !13576
  %92 = load i16, i16* %7, align 2, !dbg !13578
  %93 = zext i16 %92 to i32, !dbg !13578
  %94 = icmp slt i32 %91, %93, !dbg !13579
  br i1 %94, label %95, label %123, !dbg !13580

95:                                               ; preds = %90
  %96 = load i8*, i8** %10, align 8, !dbg !13581
  %97 = load i8, i8* %96, align 1, !dbg !13583
  store i8 %97, i8* %16, align 1, !dbg !13584
  %98 = load i8*, i8** %11, align 8, !dbg !13585
  %99 = load i16, i16* %7, align 2, !dbg !13586
  %100 = zext i16 %99 to i32, !dbg !13586
  %101 = sext i32 %100 to i64, !dbg !13587
  %102 = sub i64 0, %101, !dbg !13587
  %103 = getelementptr inbounds i8, i8* %98, i64 %102, !dbg !13587
  %104 = load i32, i32* %12, align 4, !dbg !13588
  %105 = sext i32 %104 to i64, !dbg !13589
  %106 = getelementptr inbounds i8, i8* %103, i64 %105, !dbg !13589
  %107 = load i8, i8* %106, align 1, !dbg !13590
  %108 = load i8*, i8** %10, align 8, !dbg !13591
  %109 = getelementptr inbounds i8, i8* %108, i32 1, !dbg !13591
  store i8* %109, i8** %10, align 8, !dbg !13591
  store i8 %107, i8* %108, align 1, !dbg !13592
  %110 = load i8, i8* %16, align 1, !dbg !13593
  %111 = load i8*, i8** %11, align 8, !dbg !13594
  %112 = load i16, i16* %7, align 2, !dbg !13595
  %113 = zext i16 %112 to i32, !dbg !13595
  %114 = sext i32 %113 to i64, !dbg !13596
  %115 = sub i64 0, %114, !dbg !13596
  %116 = getelementptr inbounds i8, i8* %111, i64 %115, !dbg !13596
  %117 = load i32, i32* %12, align 4, !dbg !13597
  %118 = sext i32 %117 to i64, !dbg !13598
  %119 = getelementptr inbounds i8, i8* %116, i64 %118, !dbg !13598
  store i8 %110, i8* %119, align 1, !dbg !13599
  br label %120, !dbg !13600

120:                                              ; preds = %95
  %121 = load i32, i32* %12, align 4, !dbg !13601
  %122 = add nsw i32 %121, 1, !dbg !13601
  store i32 %122, i32* %12, align 4, !dbg !13601
  br label %90, !dbg !13602, !llvm.loop !13603

123:                                              ; preds = %90
  %124 = load i16, i16* %7, align 2, !dbg !13605
  %125 = zext i16 %124 to i32, !dbg !13605
  %126 = load i8*, i8** %11, align 8, !dbg !13606
  %127 = sext i32 %125 to i64, !dbg !13606
  %128 = sub i64 0, %127, !dbg !13606
  %129 = getelementptr inbounds i8, i8* %126, i64 %128, !dbg !13606
  store i8* %129, i8** %11, align 8, !dbg !13606
  br label %130, !dbg !13607

130:                                              ; preds = %123
  %131 = load i32, i32* %13, align 4, !dbg !13608
  %132 = add i32 %131, 1, !dbg !13608
  store i32 %132, i32* %13, align 4, !dbg !13608
  br label %84, !dbg !13609, !llvm.loop !13610

133:                                              ; preds = %84
  br label %137, !dbg !13612

134:                                              ; preds = %24
  %135 = load i16, i16* %8, align 2, !dbg !13613
  %136 = zext i16 %135 to i32, !dbg !13613
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.335, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %136), !dbg !13614
  store i32 1, i32* %6, align 4, !dbg !13615
  br label %138, !dbg !13615

137:                                              ; preds = %133, %82
  store i32 0, i32* %6, align 4, !dbg !13616
  br label %138, !dbg !13616

138:                                              ; preds = %137, %134, %23
  %139 = load i32, i32* %6, align 4, !dbg !13617
  ret i32 %139, !dbg !13617
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractCompositeRegions(%struct.image_data*, %struct.crop_mask*, i8*, i8*) #0 !dbg !13618 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.image_data*, align 8
  %7 = alloca %struct.crop_mask*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i16, align 2
  %33 = alloca i16, align 2
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i16, align 2
  %37 = alloca i16, align 2
  store %struct.image_data* %0, %struct.image_data** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %6, metadata !13621, metadata !DIExpression()), !dbg !13622
  store %struct.crop_mask* %1, %struct.crop_mask** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %7, metadata !13623, metadata !DIExpression()), !dbg !13624
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !13625, metadata !DIExpression()), !dbg !13626
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !13627, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13629, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13631, metadata !DIExpression()), !dbg !13632
  call void @llvm.dbg.declare(metadata i32* %12, metadata !13633, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13635, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13637, metadata !DIExpression()), !dbg !13638
  call void @llvm.dbg.declare(metadata i32* %15, metadata !13639, metadata !DIExpression()), !dbg !13640
  call void @llvm.dbg.declare(metadata i32* %16, metadata !13641, metadata !DIExpression()), !dbg !13642
  call void @llvm.dbg.declare(metadata i32* %17, metadata !13643, metadata !DIExpression()), !dbg !13644
  call void @llvm.dbg.declare(metadata i32* %18, metadata !13645, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.declare(metadata i32* %19, metadata !13647, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.declare(metadata i32* %20, metadata !13649, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.declare(metadata i32* %21, metadata !13651, metadata !DIExpression()), !dbg !13652
  call void @llvm.dbg.declare(metadata i32* %22, metadata !13653, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.declare(metadata i32* %23, metadata !13655, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.declare(metadata i32* %24, metadata !13657, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.declare(metadata i32* %25, metadata !13659, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.declare(metadata i32* %26, metadata !13661, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.declare(metadata i32* %27, metadata !13663, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.declare(metadata i32* %28, metadata !13665, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.declare(metadata i32* %29, metadata !13667, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.declare(metadata i32* %30, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.declare(metadata i32* %31, metadata !13671, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.declare(metadata i16* %32, metadata !13673, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.declare(metadata i16* %33, metadata !13675, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.declare(metadata i8** %34, metadata !13677, metadata !DIExpression()), !dbg !13678
  call void @llvm.dbg.declare(metadata i8** %35, metadata !13679, metadata !DIExpression()), !dbg !13680
  call void @llvm.dbg.declare(metadata i16* %36, metadata !13681, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.declare(metadata i16* %37, metadata !13683, metadata !DIExpression()), !dbg !13684
  store i16 0, i16* %37, align 2, !dbg !13684
  %38 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !13685
  %39 = getelementptr inbounds %struct.image_data, %struct.image_data* %38, i32 0, i32 2, !dbg !13686
  %40 = load i32, i32* %39, align 4, !dbg !13686
  store i32 %40, i32* %27, align 4, !dbg !13687
  %41 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !13688
  %42 = getelementptr inbounds %struct.image_data, %struct.image_data* %41, i32 0, i32 3, !dbg !13689
  %43 = load i32, i32* %42, align 4, !dbg !13689
  store i32 %43, i32* %28, align 4, !dbg !13690
  %44 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !13691
  %45 = getelementptr inbounds %struct.image_data, %struct.image_data* %44, i32 0, i32 5, !dbg !13692
  %46 = load i16, i16* %45, align 2, !dbg !13692
  store i16 %46, i16* %32, align 2, !dbg !13693
  %47 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !13694
  %48 = getelementptr inbounds %struct.image_data, %struct.image_data* %47, i32 0, i32 6, !dbg !13695
  %49 = load i16, i16* %48, align 4, !dbg !13695
  store i16 %49, i16* %33, align 2, !dbg !13696
  %50 = load i16, i16* %33, align 2, !dbg !13697
  store i16 %50, i16* %36, align 2, !dbg !13698
  %51 = load i16, i16* %32, align 2, !dbg !13699
  %52 = zext i16 %51 to i32, !dbg !13699
  %53 = add nsw i32 %52, 7, !dbg !13700
  %54 = sdiv i32 %53, 8, !dbg !13701
  store i32 %54, i32* %11, align 4, !dbg !13702
  %55 = load i16, i16* %32, align 2, !dbg !13703
  %56 = zext i16 %55 to i32, !dbg !13703
  %57 = load i16, i16* %33, align 2, !dbg !13704
  %58 = zext i16 %57 to i32, !dbg !13704
  %59 = mul nsw i32 %56, %58, !dbg !13705
  %60 = add nsw i32 %59, 7, !dbg !13706
  %61 = sdiv i32 %60, 8, !dbg !13707
  store i32 %61, i32* %12, align 4, !dbg !13708
  %62 = load i16, i16* %32, align 2, !dbg !13709
  %63 = zext i16 %62 to i32, !dbg !13709
  %64 = srem i32 %63, 8, !dbg !13711
  %65 = icmp eq i32 %64, 0, !dbg !13712
  br i1 %65, label %66, label %67, !dbg !13713

66:                                               ; preds = %4
  store i32 0, i32* %10, align 4, !dbg !13714
  br label %78, !dbg !13715

67:                                               ; preds = %4
  %68 = load i32, i32* %12, align 4, !dbg !13716
  %69 = load i32, i32* %11, align 4, !dbg !13719
  %70 = add nsw i32 %69, 1, !dbg !13720
  %71 = icmp slt i32 %68, %70, !dbg !13721
  br i1 %71, label %72, label %74, !dbg !13722

72:                                               ; preds = %67
  %73 = load i32, i32* %12, align 4, !dbg !13723
  store i32 %73, i32* %10, align 4, !dbg !13724
  br label %77, !dbg !13725

74:                                               ; preds = %67
  %75 = load i32, i32* %11, align 4, !dbg !13726
  %76 = add nsw i32 %75, 1, !dbg !13727
  store i32 %76, i32* %10, align 4, !dbg !13728
  br label %77

77:                                               ; preds = %74, %72
  br label %78

78:                                               ; preds = %77, %66
  %79 = load i8*, i8** %8, align 8, !dbg !13729
  store i8* %79, i8** %34, align 8, !dbg !13730
  %80 = load i8*, i8** %9, align 8, !dbg !13731
  store i8* %80, i8** %35, align 8, !dbg !13732
  store i32 0, i32* %29, align 4, !dbg !13733
  store i32 0, i32* %30, align 4, !dbg !13734
  store i32 0, i32* %14, align 4, !dbg !13735
  store i32 0, i32* %15, align 4, !dbg !13736
  %81 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13737
  %82 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %81, i32 0, i32 5, !dbg !13738
  %83 = load i32, i32* %82, align 8, !dbg !13738
  store i32 %83, i32* %31, align 4, !dbg !13739
  %84 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13740
  %85 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %84, i32 0, i32 5, !dbg !13741
  store i32 0, i32* %85, align 8, !dbg !13742
  %86 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13743
  %87 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %86, i32 0, i32 6, !dbg !13744
  store i32 0, i32* %87, align 4, !dbg !13745
  store i32 0, i32* %13, align 4, !dbg !13746
  br label %88, !dbg !13748

88:                                               ; preds = %512, %78
  %89 = load i32, i32* %13, align 4, !dbg !13749
  %90 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13751
  %91 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %90, i32 0, i32 17, !dbg !13752
  %92 = load i16, i16* %91, align 2, !dbg !13752
  %93 = zext i16 %92 to i32, !dbg !13751
  %94 = icmp ult i32 %89, %93, !dbg !13753
  br i1 %94, label %95, label %515, !dbg !13754

95:                                               ; preds = %88
  %96 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13755
  %97 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %96, i32 0, i32 19, !dbg !13757
  %98 = load i32, i32* %13, align 4, !dbg !13758
  %99 = zext i32 %98 to i64, !dbg !13755
  %100 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %97, i64 0, i64 %99, !dbg !13755
  %101 = getelementptr inbounds %struct.region, %struct.region* %100, i32 0, i32 2, !dbg !13759
  %102 = load i32, i32* %101, align 8, !dbg !13759
  store i32 %102, i32* %17, align 4, !dbg !13760
  %103 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13761
  %104 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %103, i32 0, i32 19, !dbg !13762
  %105 = load i32, i32* %13, align 4, !dbg !13763
  %106 = zext i32 %105 to i64, !dbg !13761
  %107 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %104, i64 0, i64 %106, !dbg !13761
  %108 = getelementptr inbounds %struct.region, %struct.region* %107, i32 0, i32 3, !dbg !13764
  %109 = load i32, i32* %108, align 4, !dbg !13764
  store i32 %109, i32* %18, align 4, !dbg !13765
  %110 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13766
  %111 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %110, i32 0, i32 19, !dbg !13767
  %112 = load i32, i32* %13, align 4, !dbg !13768
  %113 = zext i32 %112 to i64, !dbg !13766
  %114 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %111, i64 0, i64 %113, !dbg !13766
  %115 = getelementptr inbounds %struct.region, %struct.region* %114, i32 0, i32 0, !dbg !13769
  %116 = load i32, i32* %115, align 8, !dbg !13769
  store i32 %116, i32* %19, align 4, !dbg !13770
  %117 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13771
  %118 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %117, i32 0, i32 19, !dbg !13772
  %119 = load i32, i32* %13, align 4, !dbg !13773
  %120 = zext i32 %119 to i64, !dbg !13771
  %121 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %118, i64 0, i64 %120, !dbg !13771
  %122 = getelementptr inbounds %struct.region, %struct.region* %121, i32 0, i32 1, !dbg !13774
  %123 = load i32, i32* %122, align 4, !dbg !13774
  store i32 %123, i32* %20, align 4, !dbg !13775
  %124 = load i32, i32* %20, align 4, !dbg !13776
  %125 = load i32, i32* %19, align 4, !dbg !13777
  %126 = sub i32 %124, %125, !dbg !13778
  %127 = add i32 %126, 1, !dbg !13779
  store i32 %127, i32* %25, align 4, !dbg !13780
  %128 = load i32, i32* %18, align 4, !dbg !13781
  %129 = load i32, i32* %17, align 4, !dbg !13782
  %130 = sub i32 %128, %129, !dbg !13783
  %131 = add i32 %130, 1, !dbg !13784
  store i32 %131, i32* %26, align 4, !dbg !13785
  %132 = load i32, i32* %25, align 4, !dbg !13786
  %133 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13787
  %134 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %133, i32 0, i32 19, !dbg !13788
  %135 = load i32, i32* %13, align 4, !dbg !13789
  %136 = zext i32 %135 to i64, !dbg !13787
  %137 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %134, i64 0, i64 %136, !dbg !13787
  %138 = getelementptr inbounds %struct.region, %struct.region* %137, i32 0, i32 4, !dbg !13790
  store i32 %132, i32* %138, align 8, !dbg !13791
  %139 = load i32, i32* %26, align 4, !dbg !13792
  %140 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13793
  %141 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %140, i32 0, i32 19, !dbg !13794
  %142 = load i32, i32* %13, align 4, !dbg !13795
  %143 = zext i32 %142 to i64, !dbg !13793
  %144 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %141, i64 0, i64 %143, !dbg !13793
  %145 = getelementptr inbounds %struct.region, %struct.region* %144, i32 0, i32 5, !dbg !13796
  store i32 %139, i32* %145, align 4, !dbg !13797
  %146 = load i8*, i8** %9, align 8, !dbg !13798
  %147 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13799
  %148 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %147, i32 0, i32 19, !dbg !13800
  %149 = load i32, i32* %13, align 4, !dbg !13801
  %150 = zext i32 %149 to i64, !dbg !13799
  %151 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %148, i64 0, i64 %150, !dbg !13799
  %152 = getelementptr inbounds %struct.region, %struct.region* %151, i32 0, i32 7, !dbg !13802
  store i8* %146, i8** %152, align 8, !dbg !13803
  %153 = load i32, i32* %27, align 4, !dbg !13804
  %154 = load i16, i16* %32, align 2, !dbg !13805
  %155 = zext i16 %154 to i32, !dbg !13805
  %156 = mul i32 %153, %155, !dbg !13806
  %157 = load i16, i16* %33, align 2, !dbg !13807
  %158 = zext i16 %157 to i32, !dbg !13807
  %159 = mul i32 %156, %158, !dbg !13808
  %160 = add i32 %159, 7, !dbg !13809
  %161 = udiv i32 %160, 8, !dbg !13810
  store i32 %161, i32* %21, align 4, !dbg !13811
  %162 = load i32, i32* %25, align 4, !dbg !13812
  %163 = load i16, i16* %32, align 2, !dbg !13813
  %164 = zext i16 %163 to i32, !dbg !13813
  %165 = mul i32 %162, %164, !dbg !13814
  %166 = load i16, i16* %36, align 2, !dbg !13815
  %167 = zext i16 %166 to i32, !dbg !13815
  %168 = mul i32 %165, %167, !dbg !13816
  %169 = add i32 %168, 7, !dbg !13817
  %170 = udiv i32 %169, 8, !dbg !13818
  store i32 %170, i32* %22, align 4, !dbg !13819
  %171 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13820
  %172 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %171, i32 0, i32 12, !dbg !13821
  %173 = load i16, i16* %172, align 4, !dbg !13821
  %174 = zext i16 %173 to i32, !dbg !13820
  switch i32 %174, label %175 [
    i32 1, label %176
    i32 3, label %176
    i32 2, label %328
    i32 4, label %328
  ], !dbg !13822

175:                                              ; preds = %95
  br label %176, !dbg !13823

176:                                              ; preds = %175, %95, %95
  %177 = load i32, i32* %13, align 4, !dbg !13824
  %178 = icmp ugt i32 %177, 0, !dbg !13827
  br i1 %178, label %179, label %191, !dbg !13828

179:                                              ; preds = %176
  %180 = load i32, i32* %25, align 4, !dbg !13829
  %181 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13830
  %182 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %181, i32 0, i32 19, !dbg !13831
  %183 = load i32, i32* %13, align 4, !dbg !13832
  %184 = sub i32 %183, 1, !dbg !13833
  %185 = zext i32 %184 to i64, !dbg !13830
  %186 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %182, i64 0, i64 %185, !dbg !13830
  %187 = getelementptr inbounds %struct.region, %struct.region* %186, i32 0, i32 4, !dbg !13834
  %188 = load i32, i32* %187, align 8, !dbg !13834
  %189 = icmp ne i32 %180, %188, !dbg !13835
  br i1 %189, label %190, label %191, !dbg !13836

190:                                              ; preds = %179
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.392, i64 0, i64 0)), !dbg !13837
  store i32 1, i32* %5, align 4, !dbg !13839
  br label %523, !dbg !13839

191:                                              ; preds = %179, %176
  %192 = load i32, i32* %25, align 4, !dbg !13840
  %193 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13841
  %194 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %193, i32 0, i32 5, !dbg !13842
  store i32 %192, i32* %194, align 8, !dbg !13843
  %195 = load i32, i32* %26, align 4, !dbg !13844
  %196 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13845
  %197 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %196, i32 0, i32 6, !dbg !13846
  %198 = load i32, i32* %197, align 4, !dbg !13847
  %199 = add i32 %198, %195, !dbg !13847
  store i32 %199, i32* %197, align 4, !dbg !13847
  %200 = load i32, i32* %17, align 4, !dbg !13848
  store i32 %200, i32* %16, align 4, !dbg !13850
  br label %201, !dbg !13851

201:                                              ; preds = %321, %191
  %202 = load i32, i32* %16, align 4, !dbg !13852
  %203 = load i32, i32* %18, align 4, !dbg !13854
  %204 = icmp ule i32 %202, %203, !dbg !13855
  br i1 %204, label %205, label %324, !dbg !13856

205:                                              ; preds = %201
  %206 = load i32, i32* %16, align 4, !dbg !13857
  %207 = load i32, i32* %21, align 4, !dbg !13859
  %208 = mul i32 %206, %207, !dbg !13860
  store i32 %208, i32* %23, align 4, !dbg !13861
  %209 = load i32, i32* %16, align 4, !dbg !13862
  %210 = load i32, i32* %17, align 4, !dbg !13863
  %211 = sub i32 %209, %210, !dbg !13864
  %212 = load i32, i32* %22, align 4, !dbg !13865
  %213 = mul i32 %211, %212, !dbg !13866
  store i32 %213, i32* %24, align 4, !dbg !13867
  %214 = load i8*, i8** %8, align 8, !dbg !13868
  %215 = load i32, i32* %23, align 4, !dbg !13869
  %216 = zext i32 %215 to i64, !dbg !13870
  %217 = getelementptr inbounds i8, i8* %214, i64 %216, !dbg !13870
  store i8* %217, i8** %34, align 8, !dbg !13871
  %218 = load i8*, i8** %9, align 8, !dbg !13872
  %219 = load i32, i32* %24, align 4, !dbg !13873
  %220 = zext i32 %219 to i64, !dbg !13874
  %221 = getelementptr inbounds i8, i8* %218, i64 %220, !dbg !13874
  %222 = load i32, i32* %29, align 4, !dbg !13875
  %223 = load i32, i32* %22, align 4, !dbg !13876
  %224 = mul i32 %222, %223, !dbg !13877
  %225 = zext i32 %224 to i64, !dbg !13878
  %226 = getelementptr inbounds i8, i8* %221, i64 %225, !dbg !13878
  store i8* %226, i8** %35, align 8, !dbg !13879
  %227 = load i32, i32* %10, align 4, !dbg !13880
  switch i32 %227, label %317 [
    i32 0, label %228
    i32 1, label %244
    i32 2, label %283
    i32 3, label %300
    i32 4, label %300
    i32 5, label %300
  ], !dbg !13881

228:                                              ; preds = %205
  %229 = load i8*, i8** %34, align 8, !dbg !13882
  %230 = load i8*, i8** %35, align 8, !dbg !13885
  %231 = load i32, i32* %27, align 4, !dbg !13886
  %232 = load i16, i16* %37, align 2, !dbg !13887
  %233 = load i16, i16* %33, align 2, !dbg !13888
  %234 = load i16, i16* %32, align 2, !dbg !13889
  %235 = load i16, i16* %36, align 2, !dbg !13890
  %236 = load i32, i32* %19, align 4, !dbg !13891
  %237 = load i32, i32* %20, align 4, !dbg !13892
  %238 = add i32 %237, 1, !dbg !13893
  %239 = call i32 @extractContigSamplesBytes(i8* %229, i8* %230, i32 %231, i16 zeroext %232, i16 zeroext %233, i16 zeroext %234, i16 zeroext %235, i32 %236, i32 %238), !dbg !13894
  %240 = icmp ne i32 %239, 0, !dbg !13894
  br i1 %240, label %241, label %243, !dbg !13895

241:                                              ; preds = %228
  %242 = load i32, i32* %16, align 4, !dbg !13896
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %242), !dbg !13898
  store i32 1, i32* %5, align 4, !dbg !13899
  br label %523, !dbg !13899

243:                                              ; preds = %228
  br label %320, !dbg !13900

244:                                              ; preds = %205
  %245 = load i16, i16* %32, align 2, !dbg !13901
  %246 = zext i16 %245 to i32, !dbg !13901
  %247 = icmp eq i32 %246, 1, !dbg !13903
  br i1 %247, label %248, label %265, !dbg !13904

248:                                              ; preds = %244
  %249 = load i8*, i8** %34, align 8, !dbg !13905
  %250 = load i8*, i8** %35, align 8, !dbg !13908
  %251 = load i32, i32* %27, align 4, !dbg !13909
  %252 = load i16, i16* %37, align 2, !dbg !13910
  %253 = load i16, i16* %33, align 2, !dbg !13911
  %254 = load i16, i16* %32, align 2, !dbg !13912
  %255 = load i16, i16* %36, align 2, !dbg !13913
  %256 = load i32, i32* %19, align 4, !dbg !13914
  %257 = load i32, i32* %20, align 4, !dbg !13915
  %258 = add i32 %257, 1, !dbg !13916
  %259 = load i32, i32* %15, align 4, !dbg !13917
  %260 = call i32 @extractContigSamplesShifted8bits(i8* %249, i8* %250, i32 %251, i16 zeroext %252, i16 zeroext %253, i16 zeroext %254, i16 zeroext %255, i32 %256, i32 %258, i32 %259), !dbg !13918
  %261 = icmp ne i32 %260, 0, !dbg !13918
  br i1 %261, label %262, label %264, !dbg !13919

262:                                              ; preds = %248
  %263 = load i32, i32* %16, align 4, !dbg !13920
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %263), !dbg !13922
  store i32 1, i32* %5, align 4, !dbg !13923
  br label %523, !dbg !13923

264:                                              ; preds = %248
  br label %320, !dbg !13924

265:                                              ; preds = %244
  %266 = load i8*, i8** %34, align 8, !dbg !13925
  %267 = load i8*, i8** %35, align 8, !dbg !13927
  %268 = load i32, i32* %27, align 4, !dbg !13928
  %269 = load i16, i16* %37, align 2, !dbg !13929
  %270 = load i16, i16* %33, align 2, !dbg !13930
  %271 = load i16, i16* %32, align 2, !dbg !13931
  %272 = load i16, i16* %36, align 2, !dbg !13932
  %273 = load i32, i32* %19, align 4, !dbg !13933
  %274 = load i32, i32* %20, align 4, !dbg !13934
  %275 = add i32 %274, 1, !dbg !13935
  %276 = load i32, i32* %15, align 4, !dbg !13936
  %277 = call i32 @extractContigSamplesShifted16bits(i8* %266, i8* %267, i32 %268, i16 zeroext %269, i16 zeroext %270, i16 zeroext %271, i16 zeroext %272, i32 %273, i32 %275, i32 %276), !dbg !13937
  %278 = icmp ne i32 %277, 0, !dbg !13937
  br i1 %278, label %279, label %281, !dbg !13938

279:                                              ; preds = %265
  %280 = load i32, i32* %16, align 4, !dbg !13939
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %280), !dbg !13941
  store i32 1, i32* %5, align 4, !dbg !13942
  br label %523, !dbg !13942

281:                                              ; preds = %265
  br label %282

282:                                              ; preds = %281
  br label %320, !dbg !13943

283:                                              ; preds = %205
  %284 = load i8*, i8** %34, align 8, !dbg !13944
  %285 = load i8*, i8** %35, align 8, !dbg !13946
  %286 = load i32, i32* %27, align 4, !dbg !13947
  %287 = load i16, i16* %37, align 2, !dbg !13948
  %288 = load i16, i16* %33, align 2, !dbg !13949
  %289 = load i16, i16* %32, align 2, !dbg !13950
  %290 = load i16, i16* %36, align 2, !dbg !13951
  %291 = load i32, i32* %19, align 4, !dbg !13952
  %292 = load i32, i32* %20, align 4, !dbg !13953
  %293 = add i32 %292, 1, !dbg !13954
  %294 = load i32, i32* %15, align 4, !dbg !13955
  %295 = call i32 @extractContigSamplesShifted24bits(i8* %284, i8* %285, i32 %286, i16 zeroext %287, i16 zeroext %288, i16 zeroext %289, i16 zeroext %290, i32 %291, i32 %293, i32 %294), !dbg !13956
  %296 = icmp ne i32 %295, 0, !dbg !13956
  br i1 %296, label %297, label %299, !dbg !13957

297:                                              ; preds = %283
  %298 = load i32, i32* %16, align 4, !dbg !13958
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %298), !dbg !13960
  store i32 1, i32* %5, align 4, !dbg !13961
  br label %523, !dbg !13961

299:                                              ; preds = %283
  br label %320, !dbg !13962

300:                                              ; preds = %205, %205, %205
  %301 = load i8*, i8** %34, align 8, !dbg !13963
  %302 = load i8*, i8** %35, align 8, !dbg !13965
  %303 = load i32, i32* %27, align 4, !dbg !13966
  %304 = load i16, i16* %37, align 2, !dbg !13967
  %305 = load i16, i16* %33, align 2, !dbg !13968
  %306 = load i16, i16* %32, align 2, !dbg !13969
  %307 = load i16, i16* %36, align 2, !dbg !13970
  %308 = load i32, i32* %19, align 4, !dbg !13971
  %309 = load i32, i32* %20, align 4, !dbg !13972
  %310 = add i32 %309, 1, !dbg !13973
  %311 = load i32, i32* %15, align 4, !dbg !13974
  %312 = call i32 @extractContigSamplesShifted32bits(i8* %301, i8* %302, i32 %303, i16 zeroext %304, i16 zeroext %305, i16 zeroext %306, i16 zeroext %307, i32 %308, i32 %310, i32 %311), !dbg !13975
  %313 = icmp ne i32 %312, 0, !dbg !13975
  br i1 %313, label %314, label %316, !dbg !13976

314:                                              ; preds = %300
  %315 = load i32, i32* %16, align 4, !dbg !13977
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %315), !dbg !13979
  store i32 1, i32* %5, align 4, !dbg !13980
  br label %523, !dbg !13980

316:                                              ; preds = %300
  br label %320, !dbg !13981

317:                                              ; preds = %205
  %318 = load i16, i16* %32, align 2, !dbg !13982
  %319 = zext i16 %318 to i32, !dbg !13982
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %319), !dbg !13983
  store i32 1, i32* %5, align 4, !dbg !13984
  br label %523, !dbg !13984

320:                                              ; preds = %316, %299, %282, %264, %243
  br label %321, !dbg !13985

321:                                              ; preds = %320
  %322 = load i32, i32* %16, align 4, !dbg !13986
  %323 = add i32 %322, 1, !dbg !13986
  store i32 %323, i32* %16, align 4, !dbg !13986
  br label %201, !dbg !13987, !llvm.loop !13988

324:                                              ; preds = %201
  %325 = load i32, i32* %26, align 4, !dbg !13990
  %326 = load i32, i32* %29, align 4, !dbg !13991
  %327 = add i32 %326, %325, !dbg !13991
  store i32 %327, i32* %29, align 4, !dbg !13991
  br label %511, !dbg !13992

328:                                              ; preds = %95, %95
  %329 = load i32, i32* %13, align 4, !dbg !13993
  %330 = icmp ugt i32 %329, 0, !dbg !13995
  br i1 %330, label %331, label %343, !dbg !13996

331:                                              ; preds = %328
  %332 = load i32, i32* %26, align 4, !dbg !13997
  %333 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !13998
  %334 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %333, i32 0, i32 19, !dbg !13999
  %335 = load i32, i32* %13, align 4, !dbg !14000
  %336 = sub i32 %335, 1, !dbg !14001
  %337 = zext i32 %336 to i64, !dbg !13998
  %338 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %334, i64 0, i64 %337, !dbg !13998
  %339 = getelementptr inbounds %struct.region, %struct.region* %338, i32 0, i32 5, !dbg !14002
  %340 = load i32, i32* %339, align 4, !dbg !14002
  %341 = icmp ne i32 %332, %340, !dbg !14003
  br i1 %341, label %342, label %343, !dbg !14004

342:                                              ; preds = %331
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.394, i64 0, i64 0)), !dbg !14005
  store i32 1, i32* %5, align 4, !dbg !14007
  br label %523, !dbg !14007

343:                                              ; preds = %331, %328
  %344 = load i32, i32* %25, align 4, !dbg !14008
  %345 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !14009
  %346 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %345, i32 0, i32 5, !dbg !14010
  %347 = load i32, i32* %346, align 8, !dbg !14011
  %348 = add i32 %347, %344, !dbg !14011
  store i32 %348, i32* %346, align 8, !dbg !14011
  %349 = load i32, i32* %26, align 4, !dbg !14012
  %350 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !14013
  %351 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %350, i32 0, i32 6, !dbg !14014
  store i32 %349, i32* %351, align 4, !dbg !14015
  %352 = load i32, i32* %31, align 4, !dbg !14016
  %353 = load i16, i16* %32, align 2, !dbg !14017
  %354 = zext i16 %353 to i32, !dbg !14017
  %355 = mul i32 %352, %354, !dbg !14018
  %356 = load i16, i16* %36, align 2, !dbg !14019
  %357 = zext i16 %356 to i32, !dbg !14019
  %358 = mul i32 %355, %357, !dbg !14020
  %359 = add i32 %358, 7, !dbg !14021
  %360 = udiv i32 %359, 8, !dbg !14022
  store i32 %360, i32* %22, align 4, !dbg !14023
  %361 = load i32, i32* %25, align 4, !dbg !14024
  %362 = load i16, i16* %32, align 2, !dbg !14025
  %363 = zext i16 %362 to i32, !dbg !14025
  %364 = mul i32 %361, %363, !dbg !14026
  %365 = load i16, i16* %36, align 2, !dbg !14027
  %366 = zext i16 %365 to i32, !dbg !14027
  %367 = mul i32 %364, %366, !dbg !14028
  %368 = urem i32 %367, 8, !dbg !14029
  store i32 %368, i32* %14, align 4, !dbg !14030
  %369 = load i32, i32* %17, align 4, !dbg !14031
  store i32 %369, i32* %16, align 4, !dbg !14033
  br label %370, !dbg !14034

370:                                              ; preds = %488, %343
  %371 = load i32, i32* %16, align 4, !dbg !14035
  %372 = load i32, i32* %18, align 4, !dbg !14037
  %373 = icmp ule i32 %371, %372, !dbg !14038
  br i1 %373, label %374, label %491, !dbg !14039

374:                                              ; preds = %370
  %375 = load i32, i32* %16, align 4, !dbg !14040
  %376 = load i32, i32* %21, align 4, !dbg !14042
  %377 = mul i32 %375, %376, !dbg !14043
  store i32 %377, i32* %23, align 4, !dbg !14044
  %378 = load i32, i32* %16, align 4, !dbg !14045
  %379 = load i32, i32* %17, align 4, !dbg !14046
  %380 = sub i32 %378, %379, !dbg !14047
  %381 = load i32, i32* %22, align 4, !dbg !14048
  %382 = mul i32 %380, %381, !dbg !14049
  store i32 %382, i32* %24, align 4, !dbg !14050
  %383 = load i8*, i8** %8, align 8, !dbg !14051
  %384 = load i32, i32* %23, align 4, !dbg !14052
  %385 = zext i32 %384 to i64, !dbg !14053
  %386 = getelementptr inbounds i8, i8* %383, i64 %385, !dbg !14053
  store i8* %386, i8** %34, align 8, !dbg !14054
  %387 = load i8*, i8** %9, align 8, !dbg !14055
  %388 = load i32, i32* %24, align 4, !dbg !14056
  %389 = zext i32 %388 to i64, !dbg !14057
  %390 = getelementptr inbounds i8, i8* %387, i64 %389, !dbg !14057
  %391 = load i32, i32* %30, align 4, !dbg !14058
  %392 = zext i32 %391 to i64, !dbg !14059
  %393 = getelementptr inbounds i8, i8* %390, i64 %392, !dbg !14059
  store i8* %393, i8** %35, align 8, !dbg !14060
  %394 = load i32, i32* %10, align 4, !dbg !14061
  switch i32 %394, label %484 [
    i32 0, label %395
    i32 1, label %411
    i32 2, label %450
    i32 3, label %467
    i32 4, label %467
    i32 5, label %467
  ], !dbg !14062

395:                                              ; preds = %374
  %396 = load i8*, i8** %34, align 8, !dbg !14063
  %397 = load i8*, i8** %35, align 8, !dbg !14066
  %398 = load i32, i32* %27, align 4, !dbg !14067
  %399 = load i16, i16* %37, align 2, !dbg !14068
  %400 = load i16, i16* %33, align 2, !dbg !14069
  %401 = load i16, i16* %32, align 2, !dbg !14070
  %402 = load i16, i16* %36, align 2, !dbg !14071
  %403 = load i32, i32* %19, align 4, !dbg !14072
  %404 = load i32, i32* %20, align 4, !dbg !14073
  %405 = add i32 %404, 1, !dbg !14074
  %406 = call i32 @extractContigSamplesBytes(i8* %396, i8* %397, i32 %398, i16 zeroext %399, i16 zeroext %400, i16 zeroext %401, i16 zeroext %402, i32 %403, i32 %405), !dbg !14075
  %407 = icmp ne i32 %406, 0, !dbg !14075
  br i1 %407, label %408, label %410, !dbg !14076

408:                                              ; preds = %395
  %409 = load i32, i32* %16, align 4, !dbg !14077
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %409), !dbg !14079
  store i32 1, i32* %5, align 4, !dbg !14080
  br label %523, !dbg !14080

410:                                              ; preds = %395
  br label %487, !dbg !14081

411:                                              ; preds = %374
  %412 = load i16, i16* %32, align 2, !dbg !14082
  %413 = zext i16 %412 to i32, !dbg !14082
  %414 = icmp eq i32 %413, 1, !dbg !14084
  br i1 %414, label %415, label %432, !dbg !14085

415:                                              ; preds = %411
  %416 = load i8*, i8** %34, align 8, !dbg !14086
  %417 = load i8*, i8** %35, align 8, !dbg !14089
  %418 = load i32, i32* %27, align 4, !dbg !14090
  %419 = load i16, i16* %37, align 2, !dbg !14091
  %420 = load i16, i16* %33, align 2, !dbg !14092
  %421 = load i16, i16* %32, align 2, !dbg !14093
  %422 = load i16, i16* %36, align 2, !dbg !14094
  %423 = load i32, i32* %19, align 4, !dbg !14095
  %424 = load i32, i32* %20, align 4, !dbg !14096
  %425 = add i32 %424, 1, !dbg !14097
  %426 = load i32, i32* %15, align 4, !dbg !14098
  %427 = call i32 @extractContigSamplesShifted8bits(i8* %416, i8* %417, i32 %418, i16 zeroext %419, i16 zeroext %420, i16 zeroext %421, i16 zeroext %422, i32 %423, i32 %425, i32 %426), !dbg !14099
  %428 = icmp ne i32 %427, 0, !dbg !14099
  br i1 %428, label %429, label %431, !dbg !14100

429:                                              ; preds = %415
  %430 = load i32, i32* %16, align 4, !dbg !14101
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %430), !dbg !14103
  store i32 1, i32* %5, align 4, !dbg !14104
  br label %523, !dbg !14104

431:                                              ; preds = %415
  br label %487, !dbg !14105

432:                                              ; preds = %411
  %433 = load i8*, i8** %34, align 8, !dbg !14106
  %434 = load i8*, i8** %35, align 8, !dbg !14108
  %435 = load i32, i32* %27, align 4, !dbg !14109
  %436 = load i16, i16* %37, align 2, !dbg !14110
  %437 = load i16, i16* %33, align 2, !dbg !14111
  %438 = load i16, i16* %32, align 2, !dbg !14112
  %439 = load i16, i16* %36, align 2, !dbg !14113
  %440 = load i32, i32* %19, align 4, !dbg !14114
  %441 = load i32, i32* %20, align 4, !dbg !14115
  %442 = add i32 %441, 1, !dbg !14116
  %443 = load i32, i32* %15, align 4, !dbg !14117
  %444 = call i32 @extractContigSamplesShifted16bits(i8* %433, i8* %434, i32 %435, i16 zeroext %436, i16 zeroext %437, i16 zeroext %438, i16 zeroext %439, i32 %440, i32 %442, i32 %443), !dbg !14118
  %445 = icmp ne i32 %444, 0, !dbg !14118
  br i1 %445, label %446, label %448, !dbg !14119

446:                                              ; preds = %432
  %447 = load i32, i32* %16, align 4, !dbg !14120
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %447), !dbg !14122
  store i32 1, i32* %5, align 4, !dbg !14123
  br label %523, !dbg !14123

448:                                              ; preds = %432
  br label %449

449:                                              ; preds = %448
  br label %487, !dbg !14124

450:                                              ; preds = %374
  %451 = load i8*, i8** %34, align 8, !dbg !14125
  %452 = load i8*, i8** %35, align 8, !dbg !14127
  %453 = load i32, i32* %27, align 4, !dbg !14128
  %454 = load i16, i16* %37, align 2, !dbg !14129
  %455 = load i16, i16* %33, align 2, !dbg !14130
  %456 = load i16, i16* %32, align 2, !dbg !14131
  %457 = load i16, i16* %36, align 2, !dbg !14132
  %458 = load i32, i32* %19, align 4, !dbg !14133
  %459 = load i32, i32* %20, align 4, !dbg !14134
  %460 = add i32 %459, 1, !dbg !14135
  %461 = load i32, i32* %15, align 4, !dbg !14136
  %462 = call i32 @extractContigSamplesShifted24bits(i8* %451, i8* %452, i32 %453, i16 zeroext %454, i16 zeroext %455, i16 zeroext %456, i16 zeroext %457, i32 %458, i32 %460, i32 %461), !dbg !14137
  %463 = icmp ne i32 %462, 0, !dbg !14137
  br i1 %463, label %464, label %466, !dbg !14138

464:                                              ; preds = %450
  %465 = load i32, i32* %16, align 4, !dbg !14139
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %465), !dbg !14141
  store i32 1, i32* %5, align 4, !dbg !14142
  br label %523, !dbg !14142

466:                                              ; preds = %450
  br label %487, !dbg !14143

467:                                              ; preds = %374, %374, %374
  %468 = load i8*, i8** %34, align 8, !dbg !14144
  %469 = load i8*, i8** %35, align 8, !dbg !14146
  %470 = load i32, i32* %27, align 4, !dbg !14147
  %471 = load i16, i16* %37, align 2, !dbg !14148
  %472 = load i16, i16* %33, align 2, !dbg !14149
  %473 = load i16, i16* %32, align 2, !dbg !14150
  %474 = load i16, i16* %36, align 2, !dbg !14151
  %475 = load i32, i32* %19, align 4, !dbg !14152
  %476 = load i32, i32* %20, align 4, !dbg !14153
  %477 = add i32 %476, 1, !dbg !14154
  %478 = load i32, i32* %15, align 4, !dbg !14155
  %479 = call i32 @extractContigSamplesShifted32bits(i8* %468, i8* %469, i32 %470, i16 zeroext %471, i16 zeroext %472, i16 zeroext %473, i16 zeroext %474, i32 %475, i32 %477, i32 %478), !dbg !14156
  %480 = icmp ne i32 %479, 0, !dbg !14156
  br i1 %480, label %481, label %483, !dbg !14157

481:                                              ; preds = %467
  %482 = load i32, i32* %16, align 4, !dbg !14158
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %482), !dbg !14160
  store i32 1, i32* %5, align 4, !dbg !14161
  br label %523, !dbg !14161

483:                                              ; preds = %467
  br label %487, !dbg !14162

484:                                              ; preds = %374
  %485 = load i16, i16* %32, align 2, !dbg !14163
  %486 = zext i16 %485 to i32, !dbg !14163
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %486), !dbg !14164
  store i32 1, i32* %5, align 4, !dbg !14165
  br label %523, !dbg !14165

487:                                              ; preds = %483, %466, %449, %431, %410
  br label %488, !dbg !14166

488:                                              ; preds = %487
  %489 = load i32, i32* %16, align 4, !dbg !14167
  %490 = add i32 %489, 1, !dbg !14167
  store i32 %490, i32* %16, align 4, !dbg !14167
  br label %370, !dbg !14168, !llvm.loop !14169

491:                                              ; preds = %370
  %492 = load i32, i32* %25, align 4, !dbg !14171
  %493 = load i16, i16* %32, align 2, !dbg !14172
  %494 = zext i16 %493 to i32, !dbg !14172
  %495 = mul i32 %492, %494, !dbg !14173
  %496 = load i16, i16* %36, align 2, !dbg !14174
  %497 = zext i16 %496 to i32, !dbg !14174
  %498 = mul i32 %495, %497, !dbg !14175
  %499 = udiv i32 %498, 8, !dbg !14176
  %500 = load i32, i32* %30, align 4, !dbg !14177
  %501 = add i32 %500, %499, !dbg !14177
  store i32 %501, i32* %30, align 4, !dbg !14177
  %502 = load i32, i32* %14, align 4, !dbg !14178
  %503 = load i32, i32* %15, align 4, !dbg !14179
  %504 = add i32 %503, %502, !dbg !14179
  store i32 %504, i32* %15, align 4, !dbg !14179
  %505 = load i32, i32* %15, align 4, !dbg !14180
  %506 = icmp ugt i32 %505, 7, !dbg !14182
  br i1 %506, label %507, label %510, !dbg !14183

507:                                              ; preds = %491
  %508 = load i32, i32* %15, align 4, !dbg !14184
  %509 = sub i32 %508, 8, !dbg !14184
  store i32 %509, i32* %15, align 4, !dbg !14184
  br label %510, !dbg !14185

510:                                              ; preds = %507, %491
  br label %511, !dbg !14186

511:                                              ; preds = %510, %324
  br label %512, !dbg !14187

512:                                              ; preds = %511
  %513 = load i32, i32* %13, align 4, !dbg !14188
  %514 = add i32 %513, 1, !dbg !14188
  store i32 %514, i32* %13, align 4, !dbg !14188
  br label %88, !dbg !14189, !llvm.loop !14190

515:                                              ; preds = %88
  %516 = load %struct.crop_mask*, %struct.crop_mask** %7, align 8, !dbg !14192
  %517 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %516, i32 0, i32 5, !dbg !14194
  %518 = load i32, i32* %517, align 8, !dbg !14194
  %519 = load i32, i32* %31, align 4, !dbg !14195
  %520 = icmp ne i32 %518, %519, !dbg !14196
  br i1 %520, label %521, label %522, !dbg !14197

521:                                              ; preds = %515
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.396, i64 0, i64 0)), !dbg !14198
  br label %522, !dbg !14198

522:                                              ; preds = %521, %515
  store i32 0, i32* %5, align 4, !dbg !14199
  br label %523, !dbg !14199

523:                                              ; preds = %522, %484, %481, %464, %446, %429, %408, %342, %317, %314, %297, %279, %262, %241, %190
  %524 = load i32, i32* %5, align 4, !dbg !14200
  ret i32 %524, !dbg !14200
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractSeparateRegion(%struct.image_data*, %struct.crop_mask*, i8*, i8*, i32) #0 !dbg !14201 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.image_data*, align 8
  %8 = alloca %struct.crop_mask*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i16, align 2
  %30 = alloca i16, align 2
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i16, align 2
  %34 = alloca i16, align 2
  store %struct.image_data* %0, %struct.image_data** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %7, metadata !14204, metadata !DIExpression()), !dbg !14205
  store %struct.crop_mask* %1, %struct.crop_mask** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %8, metadata !14206, metadata !DIExpression()), !dbg !14207
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !14208, metadata !DIExpression()), !dbg !14209
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !14210, metadata !DIExpression()), !dbg !14211
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14212, metadata !DIExpression()), !dbg !14213
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14214, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.declare(metadata i32* %13, metadata !14216, metadata !DIExpression()), !dbg !14217
  store i32 0, i32* %13, align 4, !dbg !14217
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14218, metadata !DIExpression()), !dbg !14219
  call void @llvm.dbg.declare(metadata i32* %15, metadata !14220, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.declare(metadata i32* %16, metadata !14222, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.declare(metadata i32* %17, metadata !14224, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.declare(metadata i32* %18, metadata !14226, metadata !DIExpression()), !dbg !14227
  call void @llvm.dbg.declare(metadata i32* %19, metadata !14228, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.declare(metadata i32* %20, metadata !14230, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.declare(metadata i32* %21, metadata !14232, metadata !DIExpression()), !dbg !14233
  call void @llvm.dbg.declare(metadata i32* %22, metadata !14234, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.declare(metadata i32* %23, metadata !14236, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.declare(metadata i32* %24, metadata !14238, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.declare(metadata i32* %25, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.declare(metadata i32* %26, metadata !14242, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.declare(metadata i32* %27, metadata !14244, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.declare(metadata i32* %28, metadata !14246, metadata !DIExpression()), !dbg !14247
  call void @llvm.dbg.declare(metadata i16* %29, metadata !14248, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.declare(metadata i16* %30, metadata !14250, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.declare(metadata i8** %31, metadata !14252, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.declare(metadata i8** %32, metadata !14254, metadata !DIExpression()), !dbg !14255
  call void @llvm.dbg.declare(metadata i16* %33, metadata !14256, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.declare(metadata i16* %34, metadata !14258, metadata !DIExpression()), !dbg !14259
  store i16 0, i16* %34, align 2, !dbg !14259
  %35 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !14260
  %36 = getelementptr inbounds %struct.image_data, %struct.image_data* %35, i32 0, i32 2, !dbg !14261
  %37 = load i32, i32* %36, align 4, !dbg !14261
  store i32 %37, i32* %27, align 4, !dbg !14262
  %38 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !14263
  %39 = getelementptr inbounds %struct.image_data, %struct.image_data* %38, i32 0, i32 3, !dbg !14264
  %40 = load i32, i32* %39, align 4, !dbg !14264
  store i32 %40, i32* %28, align 4, !dbg !14265
  %41 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !14266
  %42 = getelementptr inbounds %struct.image_data, %struct.image_data* %41, i32 0, i32 5, !dbg !14267
  %43 = load i16, i16* %42, align 2, !dbg !14267
  store i16 %43, i16* %29, align 2, !dbg !14268
  %44 = load %struct.image_data*, %struct.image_data** %7, align 8, !dbg !14269
  %45 = getelementptr inbounds %struct.image_data, %struct.image_data* %44, i32 0, i32 6, !dbg !14270
  %46 = load i16, i16* %45, align 4, !dbg !14270
  store i16 %46, i16* %30, align 2, !dbg !14271
  %47 = load i16, i16* %30, align 2, !dbg !14272
  store i16 %47, i16* %33, align 2, !dbg !14273
  %48 = load i16, i16* %29, align 2, !dbg !14274
  %49 = zext i16 %48 to i32, !dbg !14274
  %50 = add nsw i32 %49, 7, !dbg !14275
  %51 = sdiv i32 %50, 8, !dbg !14276
  store i32 %51, i32* %14, align 4, !dbg !14277
  %52 = load i16, i16* %29, align 2, !dbg !14278
  %53 = zext i16 %52 to i32, !dbg !14278
  %54 = load i16, i16* %30, align 2, !dbg !14279
  %55 = zext i16 %54 to i32, !dbg !14279
  %56 = mul nsw i32 %53, %55, !dbg !14280
  %57 = add nsw i32 %56, 7, !dbg !14281
  %58 = sdiv i32 %57, 8, !dbg !14282
  store i32 %58, i32* %15, align 4, !dbg !14283
  %59 = load i16, i16* %29, align 2, !dbg !14284
  %60 = zext i16 %59 to i32, !dbg !14284
  %61 = srem i32 %60, 8, !dbg !14286
  %62 = icmp eq i32 %61, 0, !dbg !14287
  br i1 %62, label %63, label %64, !dbg !14288

63:                                               ; preds = %5
  store i32 0, i32* %12, align 4, !dbg !14289
  br label %75, !dbg !14290

64:                                               ; preds = %5
  %65 = load i32, i32* %15, align 4, !dbg !14291
  %66 = load i32, i32* %14, align 4, !dbg !14294
  %67 = add i32 %66, 1, !dbg !14295
  %68 = icmp ult i32 %65, %67, !dbg !14296
  br i1 %68, label %69, label %71, !dbg !14297

69:                                               ; preds = %64
  %70 = load i32, i32* %15, align 4, !dbg !14298
  store i32 %70, i32* %12, align 4, !dbg !14299
  br label %74, !dbg !14300

71:                                               ; preds = %64
  %72 = load i32, i32* %14, align 4, !dbg !14301
  %73 = add i32 %72, 1, !dbg !14302
  store i32 %73, i32* %12, align 4, !dbg !14303
  br label %74

74:                                               ; preds = %71, %69
  br label %75

75:                                               ; preds = %74, %63
  %76 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14304
  %77 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %76, i32 0, i32 19, !dbg !14305
  %78 = load i32, i32* %11, align 4, !dbg !14306
  %79 = sext i32 %78 to i64, !dbg !14304
  %80 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %77, i64 0, i64 %79, !dbg !14304
  %81 = getelementptr inbounds %struct.region, %struct.region* %80, i32 0, i32 2, !dbg !14307
  %82 = load i32, i32* %81, align 8, !dbg !14307
  store i32 %82, i32* %19, align 4, !dbg !14308
  %83 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14309
  %84 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %83, i32 0, i32 19, !dbg !14310
  %85 = load i32, i32* %11, align 4, !dbg !14311
  %86 = sext i32 %85 to i64, !dbg !14309
  %87 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %84, i64 0, i64 %86, !dbg !14309
  %88 = getelementptr inbounds %struct.region, %struct.region* %87, i32 0, i32 3, !dbg !14312
  %89 = load i32, i32* %88, align 4, !dbg !14312
  store i32 %89, i32* %20, align 4, !dbg !14313
  %90 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14314
  %91 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %90, i32 0, i32 19, !dbg !14315
  %92 = load i32, i32* %11, align 4, !dbg !14316
  %93 = sext i32 %92 to i64, !dbg !14314
  %94 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %91, i64 0, i64 %93, !dbg !14314
  %95 = getelementptr inbounds %struct.region, %struct.region* %94, i32 0, i32 0, !dbg !14317
  %96 = load i32, i32* %95, align 8, !dbg !14317
  store i32 %96, i32* %21, align 4, !dbg !14318
  %97 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14319
  %98 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %97, i32 0, i32 19, !dbg !14320
  %99 = load i32, i32* %11, align 4, !dbg !14321
  %100 = sext i32 %99 to i64, !dbg !14319
  %101 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %98, i64 0, i64 %100, !dbg !14319
  %102 = getelementptr inbounds %struct.region, %struct.region* %101, i32 0, i32 1, !dbg !14322
  %103 = load i32, i32* %102, align 4, !dbg !14322
  store i32 %103, i32* %22, align 4, !dbg !14323
  %104 = load i32, i32* %22, align 4, !dbg !14324
  %105 = load i32, i32* %21, align 4, !dbg !14325
  %106 = sub i32 %104, %105, !dbg !14326
  %107 = add i32 %106, 1, !dbg !14327
  store i32 %107, i32* %25, align 4, !dbg !14328
  %108 = load i32, i32* %20, align 4, !dbg !14329
  %109 = load i32, i32* %19, align 4, !dbg !14330
  %110 = sub i32 %108, %109, !dbg !14331
  %111 = add i32 %110, 1, !dbg !14332
  store i32 %111, i32* %26, align 4, !dbg !14333
  %112 = load i32, i32* %25, align 4, !dbg !14334
  %113 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14335
  %114 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %113, i32 0, i32 19, !dbg !14336
  %115 = load i32, i32* %11, align 4, !dbg !14337
  %116 = sext i32 %115 to i64, !dbg !14335
  %117 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %114, i64 0, i64 %116, !dbg !14335
  %118 = getelementptr inbounds %struct.region, %struct.region* %117, i32 0, i32 4, !dbg !14338
  store i32 %112, i32* %118, align 8, !dbg !14339
  %119 = load i32, i32* %26, align 4, !dbg !14340
  %120 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14341
  %121 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %120, i32 0, i32 19, !dbg !14342
  %122 = load i32, i32* %11, align 4, !dbg !14343
  %123 = sext i32 %122 to i64, !dbg !14341
  %124 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %121, i64 0, i64 %123, !dbg !14341
  %125 = getelementptr inbounds %struct.region, %struct.region* %124, i32 0, i32 5, !dbg !14344
  store i32 %119, i32* %125, align 4, !dbg !14345
  %126 = load i8*, i8** %10, align 8, !dbg !14346
  %127 = load %struct.crop_mask*, %struct.crop_mask** %8, align 8, !dbg !14347
  %128 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %127, i32 0, i32 19, !dbg !14348
  %129 = load i32, i32* %11, align 4, !dbg !14349
  %130 = sext i32 %129 to i64, !dbg !14347
  %131 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %128, i64 0, i64 %130, !dbg !14347
  %132 = getelementptr inbounds %struct.region, %struct.region* %131, i32 0, i32 7, !dbg !14350
  store i8* %126, i8** %132, align 8, !dbg !14351
  %133 = load i8*, i8** %9, align 8, !dbg !14352
  store i8* %133, i8** %31, align 8, !dbg !14353
  %134 = load i8*, i8** %10, align 8, !dbg !14354
  store i8* %134, i8** %32, align 8, !dbg !14355
  %135 = load i32, i32* %27, align 4, !dbg !14356
  %136 = load i16, i16* %29, align 2, !dbg !14357
  %137 = zext i16 %136 to i32, !dbg !14357
  %138 = mul i32 %135, %137, !dbg !14358
  %139 = load i16, i16* %30, align 2, !dbg !14359
  %140 = zext i16 %139 to i32, !dbg !14359
  %141 = mul i32 %138, %140, !dbg !14360
  %142 = add i32 %141, 7, !dbg !14361
  %143 = udiv i32 %142, 8, !dbg !14362
  store i32 %143, i32* %16, align 4, !dbg !14363
  %144 = load i32, i32* %25, align 4, !dbg !14364
  %145 = load i16, i16* %29, align 2, !dbg !14365
  %146 = zext i16 %145 to i32, !dbg !14365
  %147 = mul i32 %144, %146, !dbg !14366
  %148 = load i16, i16* %30, align 2, !dbg !14367
  %149 = zext i16 %148 to i32, !dbg !14367
  %150 = mul i32 %147, %149, !dbg !14368
  %151 = add i32 %150, 7, !dbg !14369
  %152 = udiv i32 %151, 8, !dbg !14370
  store i32 %152, i32* %17, align 4, !dbg !14371
  %153 = load i32, i32* %19, align 4, !dbg !14372
  store i32 %153, i32* %18, align 4, !dbg !14374
  br label %154, !dbg !14375

154:                                              ; preds = %269, %75
  %155 = load i32, i32* %18, align 4, !dbg !14376
  %156 = load i32, i32* %20, align 4, !dbg !14378
  %157 = icmp ule i32 %155, %156, !dbg !14379
  br i1 %157, label %158, label %272, !dbg !14380

158:                                              ; preds = %154
  %159 = load i32, i32* %18, align 4, !dbg !14381
  %160 = load i32, i32* %16, align 4, !dbg !14383
  %161 = mul i32 %159, %160, !dbg !14384
  store i32 %161, i32* %23, align 4, !dbg !14385
  %162 = load i32, i32* %18, align 4, !dbg !14386
  %163 = load i32, i32* %19, align 4, !dbg !14387
  %164 = sub i32 %162, %163, !dbg !14388
  %165 = load i32, i32* %17, align 4, !dbg !14389
  %166 = mul i32 %164, %165, !dbg !14390
  store i32 %166, i32* %24, align 4, !dbg !14391
  %167 = load i8*, i8** %9, align 8, !dbg !14392
  %168 = load i32, i32* %23, align 4, !dbg !14393
  %169 = zext i32 %168 to i64, !dbg !14394
  %170 = getelementptr inbounds i8, i8* %167, i64 %169, !dbg !14394
  store i8* %170, i8** %31, align 8, !dbg !14395
  %171 = load i8*, i8** %10, align 8, !dbg !14396
  %172 = load i32, i32* %24, align 4, !dbg !14397
  %173 = zext i32 %172 to i64, !dbg !14398
  %174 = getelementptr inbounds i8, i8* %171, i64 %173, !dbg !14398
  store i8* %174, i8** %32, align 8, !dbg !14399
  %175 = load i32, i32* %12, align 4, !dbg !14400
  switch i32 %175, label %265 [
    i32 0, label %176
    i32 1, label %192
    i32 2, label %231
    i32 3, label %248
    i32 4, label %248
    i32 5, label %248
  ], !dbg !14401

176:                                              ; preds = %158
  %177 = load i8*, i8** %31, align 8, !dbg !14402
  %178 = load i8*, i8** %32, align 8, !dbg !14405
  %179 = load i32, i32* %27, align 4, !dbg !14406
  %180 = load i16, i16* %34, align 2, !dbg !14407
  %181 = load i16, i16* %30, align 2, !dbg !14408
  %182 = load i16, i16* %29, align 2, !dbg !14409
  %183 = load i16, i16* %33, align 2, !dbg !14410
  %184 = load i32, i32* %21, align 4, !dbg !14411
  %185 = load i32, i32* %22, align 4, !dbg !14412
  %186 = add i32 %185, 1, !dbg !14413
  %187 = call i32 @extractContigSamplesBytes(i8* %177, i8* %178, i32 %179, i16 zeroext %180, i16 zeroext %181, i16 zeroext %182, i16 zeroext %183, i32 %184, i32 %186), !dbg !14414
  %188 = icmp ne i32 %187, 0, !dbg !14414
  br i1 %188, label %189, label %191, !dbg !14415

189:                                              ; preds = %176
  %190 = load i32, i32* %18, align 4, !dbg !14416
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %190), !dbg !14418
  store i32 1, i32* %6, align 4, !dbg !14419
  br label %273, !dbg !14419

191:                                              ; preds = %176
  br label %268, !dbg !14420

192:                                              ; preds = %158
  %193 = load i16, i16* %29, align 2, !dbg !14421
  %194 = zext i16 %193 to i32, !dbg !14421
  %195 = icmp eq i32 %194, 1, !dbg !14423
  br i1 %195, label %196, label %213, !dbg !14424

196:                                              ; preds = %192
  %197 = load i8*, i8** %31, align 8, !dbg !14425
  %198 = load i8*, i8** %32, align 8, !dbg !14428
  %199 = load i32, i32* %27, align 4, !dbg !14429
  %200 = load i16, i16* %34, align 2, !dbg !14430
  %201 = load i16, i16* %30, align 2, !dbg !14431
  %202 = load i16, i16* %29, align 2, !dbg !14432
  %203 = load i16, i16* %33, align 2, !dbg !14433
  %204 = load i32, i32* %21, align 4, !dbg !14434
  %205 = load i32, i32* %22, align 4, !dbg !14435
  %206 = add i32 %205, 1, !dbg !14436
  %207 = load i32, i32* %13, align 4, !dbg !14437
  %208 = call i32 @extractContigSamplesShifted8bits(i8* %197, i8* %198, i32 %199, i16 zeroext %200, i16 zeroext %201, i16 zeroext %202, i16 zeroext %203, i32 %204, i32 %206, i32 %207), !dbg !14438
  %209 = icmp ne i32 %208, 0, !dbg !14438
  br i1 %209, label %210, label %212, !dbg !14439

210:                                              ; preds = %196
  %211 = load i32, i32* %18, align 4, !dbg !14440
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %211), !dbg !14442
  store i32 1, i32* %6, align 4, !dbg !14443
  br label %273, !dbg !14443

212:                                              ; preds = %196
  br label %268, !dbg !14444

213:                                              ; preds = %192
  %214 = load i8*, i8** %31, align 8, !dbg !14445
  %215 = load i8*, i8** %32, align 8, !dbg !14447
  %216 = load i32, i32* %27, align 4, !dbg !14448
  %217 = load i16, i16* %34, align 2, !dbg !14449
  %218 = load i16, i16* %30, align 2, !dbg !14450
  %219 = load i16, i16* %29, align 2, !dbg !14451
  %220 = load i16, i16* %33, align 2, !dbg !14452
  %221 = load i32, i32* %21, align 4, !dbg !14453
  %222 = load i32, i32* %22, align 4, !dbg !14454
  %223 = add i32 %222, 1, !dbg !14455
  %224 = load i32, i32* %13, align 4, !dbg !14456
  %225 = call i32 @extractContigSamplesShifted16bits(i8* %214, i8* %215, i32 %216, i16 zeroext %217, i16 zeroext %218, i16 zeroext %219, i16 zeroext %220, i32 %221, i32 %223, i32 %224), !dbg !14457
  %226 = icmp ne i32 %225, 0, !dbg !14457
  br i1 %226, label %227, label %229, !dbg !14458

227:                                              ; preds = %213
  %228 = load i32, i32* %18, align 4, !dbg !14459
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %228), !dbg !14461
  store i32 1, i32* %6, align 4, !dbg !14462
  br label %273, !dbg !14462

229:                                              ; preds = %213
  br label %230

230:                                              ; preds = %229
  br label %268, !dbg !14463

231:                                              ; preds = %158
  %232 = load i8*, i8** %31, align 8, !dbg !14464
  %233 = load i8*, i8** %32, align 8, !dbg !14466
  %234 = load i32, i32* %27, align 4, !dbg !14467
  %235 = load i16, i16* %34, align 2, !dbg !14468
  %236 = load i16, i16* %30, align 2, !dbg !14469
  %237 = load i16, i16* %29, align 2, !dbg !14470
  %238 = load i16, i16* %33, align 2, !dbg !14471
  %239 = load i32, i32* %21, align 4, !dbg !14472
  %240 = load i32, i32* %22, align 4, !dbg !14473
  %241 = add i32 %240, 1, !dbg !14474
  %242 = load i32, i32* %13, align 4, !dbg !14475
  %243 = call i32 @extractContigSamplesShifted24bits(i8* %232, i8* %233, i32 %234, i16 zeroext %235, i16 zeroext %236, i16 zeroext %237, i16 zeroext %238, i32 %239, i32 %241, i32 %242), !dbg !14476
  %244 = icmp ne i32 %243, 0, !dbg !14476
  br i1 %244, label %245, label %247, !dbg !14477

245:                                              ; preds = %231
  %246 = load i32, i32* %18, align 4, !dbg !14478
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %246), !dbg !14480
  store i32 1, i32* %6, align 4, !dbg !14481
  br label %273, !dbg !14481

247:                                              ; preds = %231
  br label %268, !dbg !14482

248:                                              ; preds = %158, %158, %158
  %249 = load i8*, i8** %31, align 8, !dbg !14483
  %250 = load i8*, i8** %32, align 8, !dbg !14485
  %251 = load i32, i32* %27, align 4, !dbg !14486
  %252 = load i16, i16* %34, align 2, !dbg !14487
  %253 = load i16, i16* %30, align 2, !dbg !14488
  %254 = load i16, i16* %29, align 2, !dbg !14489
  %255 = load i16, i16* %33, align 2, !dbg !14490
  %256 = load i32, i32* %21, align 4, !dbg !14491
  %257 = load i32, i32* %22, align 4, !dbg !14492
  %258 = add i32 %257, 1, !dbg !14493
  %259 = load i32, i32* %13, align 4, !dbg !14494
  %260 = call i32 @extractContigSamplesShifted32bits(i8* %249, i8* %250, i32 %251, i16 zeroext %252, i16 zeroext %253, i16 zeroext %254, i16 zeroext %255, i32 %256, i32 %258, i32 %259), !dbg !14495
  %261 = icmp ne i32 %260, 0, !dbg !14495
  br i1 %261, label %262, label %264, !dbg !14496

262:                                              ; preds = %248
  %263 = load i32, i32* %18, align 4, !dbg !14497
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.393, i64 0, i64 0), i32 %263), !dbg !14499
  store i32 1, i32* %6, align 4, !dbg !14500
  br label %273, !dbg !14500

264:                                              ; preds = %248
  br label %268, !dbg !14501

265:                                              ; preds = %158
  %266 = load i16, i16* %29, align 2, !dbg !14502
  %267 = zext i16 %266 to i32, !dbg !14502
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %267), !dbg !14503
  store i32 1, i32* %6, align 4, !dbg !14504
  br label %273, !dbg !14504

268:                                              ; preds = %264, %247, %230, %212, %191
  br label %269, !dbg !14505

269:                                              ; preds = %268
  %270 = load i32, i32* %18, align 4, !dbg !14506
  %271 = add i32 %270, 1, !dbg !14506
  store i32 %271, i32* %18, align 4, !dbg !14506
  br label %154, !dbg !14507, !llvm.loop !14508

272:                                              ; preds = %154
  store i32 0, i32* %6, align 4, !dbg !14510
  br label %273, !dbg !14510

273:                                              ; preds = %272, %265, %262, %245, %227, %210, %189
  %274 = load i32, i32* %6, align 4, !dbg !14511
  ret i32 %274, !dbg !14511
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesShifted8bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32) #0 !dbg !14512 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !14515, metadata !DIExpression()), !dbg !14516
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !14517, metadata !DIExpression()), !dbg !14518
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14519, metadata !DIExpression()), !dbg !14520
  store i16 %3, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !14521, metadata !DIExpression()), !dbg !14522
  store i16 %4, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !14523, metadata !DIExpression()), !dbg !14524
  store i16 %5, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !14525, metadata !DIExpression()), !dbg !14526
  store i16 %6, i16* %18, align 2
  call void @llvm.dbg.declare(metadata i16* %18, metadata !14527, metadata !DIExpression()), !dbg !14528
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !14529, metadata !DIExpression()), !dbg !14530
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !14531, metadata !DIExpression()), !dbg !14532
  store i32 %9, i32* %21, align 4
  call void @llvm.dbg.declare(metadata i32* %21, metadata !14533, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.declare(metadata i32* %22, metadata !14535, metadata !DIExpression()), !dbg !14536
  store i32 0, i32* %22, align 4, !dbg !14536
  call void @llvm.dbg.declare(metadata i32* %23, metadata !14537, metadata !DIExpression()), !dbg !14538
  store i32 0, i32* %23, align 4, !dbg !14538
  call void @llvm.dbg.declare(metadata i32* %24, metadata !14539, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.declare(metadata i32* %25, metadata !14541, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.declare(metadata i32* %26, metadata !14543, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.declare(metadata i32* %27, metadata !14545, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.declare(metadata i8* %28, metadata !14547, metadata !DIExpression()), !dbg !14548
  store i8 0, i8* %28, align 1, !dbg !14548
  call void @llvm.dbg.declare(metadata i8* %29, metadata !14549, metadata !DIExpression()), !dbg !14550
  store i8 0, i8* %29, align 1, !dbg !14550
  call void @llvm.dbg.declare(metadata i8* %30, metadata !14551, metadata !DIExpression()), !dbg !14552
  store i8 0, i8* %30, align 1, !dbg !14552
  call void @llvm.dbg.declare(metadata i8* %31, metadata !14553, metadata !DIExpression()), !dbg !14554
  store i8 0, i8* %31, align 1, !dbg !14554
  call void @llvm.dbg.declare(metadata i8** %32, metadata !14555, metadata !DIExpression()), !dbg !14556
  %34 = load i8*, i8** %12, align 8, !dbg !14557
  store i8* %34, i8** %32, align 8, !dbg !14556
  call void @llvm.dbg.declare(metadata i8** %33, metadata !14558, metadata !DIExpression()), !dbg !14559
  %35 = load i8*, i8** %13, align 8, !dbg !14560
  store i8* %35, i8** %33, align 8, !dbg !14559
  %36 = load i8*, i8** %32, align 8, !dbg !14561
  %37 = icmp eq i8* %36, null, !dbg !14563
  br i1 %37, label %41, label %38, !dbg !14564

38:                                               ; preds = %10
  %39 = load i8*, i8** %33, align 8, !dbg !14565
  %40 = icmp eq i8* %39, null, !dbg !14566
  br i1 %40, label %41, label %42, !dbg !14567

41:                                               ; preds = %38, %10
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !14568
  store i32 1, i32* %11, align 4, !dbg !14570
  br label %215, !dbg !14570

42:                                               ; preds = %38
  %43 = load i32, i32* %19, align 4, !dbg !14571
  %44 = load i32, i32* %20, align 4, !dbg !14573
  %45 = icmp ugt i32 %43, %44, !dbg !14574
  br i1 %45, label %50, label %46, !dbg !14575

46:                                               ; preds = %42
  %47 = load i32, i32* %19, align 4, !dbg !14576
  %48 = load i32, i32* %14, align 4, !dbg !14577
  %49 = icmp ugt i32 %47, %48, !dbg !14578
  br i1 %49, label %50, label %52, !dbg !14579

50:                                               ; preds = %46, %42
  %51 = load i32, i32* %19, align 4, !dbg !14580
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %51), !dbg !14582
  store i32 0, i32* %19, align 4, !dbg !14583
  br label %52, !dbg !14584

52:                                               ; preds = %50, %46
  %53 = load i32, i32* %20, align 4, !dbg !14585
  %54 = icmp eq i32 %53, 0, !dbg !14587
  br i1 %54, label %59, label %55, !dbg !14588

55:                                               ; preds = %52
  %56 = load i32, i32* %20, align 4, !dbg !14589
  %57 = load i32, i32* %14, align 4, !dbg !14590
  %58 = icmp ugt i32 %56, %57, !dbg !14591
  br i1 %58, label %59, label %62, !dbg !14592

59:                                               ; preds = %55, %52
  %60 = load i32, i32* %20, align 4, !dbg !14593
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %60), !dbg !14595
  %61 = load i32, i32* %14, align 4, !dbg !14596
  store i32 %61, i32* %20, align 4, !dbg !14597
  br label %62, !dbg !14598

62:                                               ; preds = %59, %55
  %63 = load i32, i32* %21, align 4, !dbg !14599
  store i32 %63, i32* %22, align 4, !dbg !14600
  %64 = load i16, i16* %17, align 2, !dbg !14601
  %65 = zext i16 %64 to i32, !dbg !14601
  %66 = sub nsw i32 8, %65, !dbg !14602
  %67 = ashr i32 255, %66, !dbg !14603
  %68 = trunc i32 %67 to i8, !dbg !14604
  store i8 %68, i8* %28, align 1, !dbg !14605
  store i8 0, i8* %31, align 1, !dbg !14606
  store i8 0, i8* %30, align 1, !dbg !14607
  %69 = load i32, i32* %19, align 4, !dbg !14608
  store i32 %69, i32* %24, align 4, !dbg !14610
  br label %70, !dbg !14611

70:                                               ; preds = %194, %62
  %71 = load i32, i32* %24, align 4, !dbg !14612
  %72 = load i32, i32* %20, align 4, !dbg !14614
  %73 = icmp ult i32 %71, %72, !dbg !14615
  br i1 %73, label %74, label %197, !dbg !14616

74:                                               ; preds = %70
  %75 = load i32, i32* %24, align 4, !dbg !14617
  %76 = load i16, i16* %17, align 2, !dbg !14619
  %77 = zext i16 %76 to i32, !dbg !14619
  %78 = mul i32 %75, %77, !dbg !14620
  %79 = load i16, i16* %16, align 2, !dbg !14621
  %80 = zext i16 %79 to i32, !dbg !14621
  %81 = mul i32 %78, %80, !dbg !14622
  store i32 %81, i32* %27, align 4, !dbg !14623
  %82 = load i16, i16* %15, align 2, !dbg !14624
  %83 = zext i16 %82 to i32, !dbg !14624
  store i32 %83, i32* %23, align 4, !dbg !14626
  br label %84, !dbg !14627

84:                                               ; preds = %190, %74
  %85 = load i32, i32* %23, align 4, !dbg !14628
  %86 = load i16, i16* %16, align 2, !dbg !14630
  %87 = zext i16 %86 to i32, !dbg !14630
  %88 = icmp slt i32 %85, %87, !dbg !14631
  br i1 %88, label %89, label %97, !dbg !14632

89:                                               ; preds = %84
  %90 = load i32, i32* %23, align 4, !dbg !14633
  %91 = load i16, i16* %15, align 2, !dbg !14634
  %92 = zext i16 %91 to i32, !dbg !14634
  %93 = load i16, i16* %18, align 2, !dbg !14635
  %94 = zext i16 %93 to i32, !dbg !14635
  %95 = add nsw i32 %92, %94, !dbg !14636
  %96 = icmp slt i32 %90, %95, !dbg !14637
  br label %97

97:                                               ; preds = %89, %84
  %98 = phi i1 [ false, %84 ], [ %96, %89 ], !dbg !14638
  br i1 %98, label %99, label %193, !dbg !14639

99:                                               ; preds = %97
  %100 = load i32, i32* %23, align 4, !dbg !14640
  %101 = icmp eq i32 %100, 0, !dbg !14643
  br i1 %101, label %102, label %107, !dbg !14644

102:                                              ; preds = %99
  %103 = load i32, i32* %27, align 4, !dbg !14645
  %104 = udiv i32 %103, 8, !dbg !14647
  store i32 %104, i32* %25, align 4, !dbg !14648
  %105 = load i32, i32* %27, align 4, !dbg !14649
  %106 = urem i32 %105, 8, !dbg !14650
  store i32 %106, i32* %26, align 4, !dbg !14651
  br label %122, !dbg !14652

107:                                              ; preds = %99
  %108 = load i32, i32* %27, align 4, !dbg !14653
  %109 = load i32, i32* %23, align 4, !dbg !14655
  %110 = load i16, i16* %17, align 2, !dbg !14656
  %111 = zext i16 %110 to i32, !dbg !14656
  %112 = mul nsw i32 %109, %111, !dbg !14657
  %113 = add i32 %108, %112, !dbg !14658
  %114 = udiv i32 %113, 8, !dbg !14659
  store i32 %114, i32* %25, align 4, !dbg !14660
  %115 = load i32, i32* %27, align 4, !dbg !14661
  %116 = load i32, i32* %23, align 4, !dbg !14662
  %117 = load i16, i16* %17, align 2, !dbg !14663
  %118 = zext i16 %117 to i32, !dbg !14663
  %119 = mul nsw i32 %116, %118, !dbg !14664
  %120 = add i32 %115, %119, !dbg !14665
  %121 = urem i32 %120, 8, !dbg !14666
  store i32 %121, i32* %26, align 4, !dbg !14667
  br label %122

122:                                              ; preds = %107, %102
  %123 = load i8*, i8** %12, align 8, !dbg !14668
  %124 = load i32, i32* %25, align 4, !dbg !14669
  %125 = zext i32 %124 to i64, !dbg !14670
  %126 = getelementptr inbounds i8, i8* %123, i64 %125, !dbg !14670
  store i8* %126, i8** %32, align 8, !dbg !14671
  %127 = load i8, i8* %28, align 1, !dbg !14672
  %128 = zext i8 %127 to i32, !dbg !14672
  %129 = load i32, i32* %26, align 4, !dbg !14673
  %130 = sub i32 8, %129, !dbg !14674
  %131 = load i16, i16* %17, align 2, !dbg !14675
  %132 = zext i16 %131 to i32, !dbg !14675
  %133 = sub i32 %130, %132, !dbg !14676
  %134 = shl i32 %128, %133, !dbg !14677
  %135 = trunc i32 %134 to i8, !dbg !14672
  store i8 %135, i8* %29, align 1, !dbg !14678
  %136 = load i8*, i8** %32, align 8, !dbg !14679
  %137 = load i8, i8* %136, align 1, !dbg !14680
  %138 = zext i8 %137 to i32, !dbg !14681
  %139 = load i8, i8* %29, align 1, !dbg !14682
  %140 = zext i8 %139 to i32, !dbg !14682
  %141 = and i32 %138, %140, !dbg !14683
  %142 = load i32, i32* %26, align 4, !dbg !14684
  %143 = shl i32 %141, %142, !dbg !14685
  %144 = trunc i32 %143 to i8, !dbg !14686
  store i8 %144, i8* %30, align 1, !dbg !14687
  %145 = load i32, i32* %24, align 4, !dbg !14688
  %146 = load i32, i32* %19, align 4, !dbg !14690
  %147 = icmp eq i32 %145, %146, !dbg !14691
  br i1 %147, label %148, label %161, !dbg !14692

148:                                              ; preds = %122
  %149 = load i32, i32* %23, align 4, !dbg !14693
  %150 = load i16, i16* %15, align 2, !dbg !14694
  %151 = zext i16 %150 to i32, !dbg !14694
  %152 = icmp eq i32 %149, %151, !dbg !14695
  br i1 %152, label %153, label %161, !dbg !14696

153:                                              ; preds = %148
  %154 = load i8*, i8** %32, align 8, !dbg !14697
  %155 = load i8, i8* %154, align 1, !dbg !14698
  %156 = zext i8 %155 to i32, !dbg !14698
  %157 = load i32, i32* %21, align 4, !dbg !14699
  %158 = shl i32 255, %157, !dbg !14700
  %159 = and i32 %156, %158, !dbg !14701
  %160 = trunc i32 %159 to i8, !dbg !14698
  store i8 %160, i8* %31, align 1, !dbg !14702
  br label %161, !dbg !14703

161:                                              ; preds = %153, %148, %122
  %162 = load i32, i32* %22, align 4, !dbg !14704
  %163 = icmp sge i32 %162, 8, !dbg !14706
  br i1 %163, label %164, label %176, !dbg !14707

164:                                              ; preds = %161
  %165 = load i8, i8* %31, align 1, !dbg !14708
  %166 = zext i8 %165 to i32, !dbg !14708
  %167 = load i8*, i8** %33, align 8, !dbg !14710
  %168 = getelementptr inbounds i8, i8* %167, i32 1, !dbg !14710
  store i8* %168, i8** %33, align 8, !dbg !14710
  %169 = load i8, i8* %167, align 1, !dbg !14711
  %170 = zext i8 %169 to i32, !dbg !14711
  %171 = or i32 %170, %166, !dbg !14711
  %172 = trunc i32 %171 to i8, !dbg !14711
  store i8 %172, i8* %167, align 1, !dbg !14711
  %173 = load i8, i8* %30, align 1, !dbg !14712
  store i8 %173, i8* %31, align 1, !dbg !14713
  %174 = load i32, i32* %22, align 4, !dbg !14714
  %175 = sub nsw i32 %174, 8, !dbg !14714
  store i32 %175, i32* %22, align 4, !dbg !14714
  br label %185, !dbg !14715

176:                                              ; preds = %161
  %177 = load i8, i8* %31, align 1, !dbg !14716
  %178 = zext i8 %177 to i32, !dbg !14716
  %179 = load i8, i8* %30, align 1, !dbg !14717
  %180 = zext i8 %179 to i32, !dbg !14717
  %181 = load i32, i32* %22, align 4, !dbg !14718
  %182 = ashr i32 %180, %181, !dbg !14719
  %183 = or i32 %178, %182, !dbg !14720
  %184 = trunc i32 %183 to i8, !dbg !14716
  store i8 %184, i8* %31, align 1, !dbg !14721
  br label %185

185:                                              ; preds = %176, %164
  %186 = load i16, i16* %17, align 2, !dbg !14722
  %187 = zext i16 %186 to i32, !dbg !14722
  %188 = load i32, i32* %22, align 4, !dbg !14723
  %189 = add nsw i32 %188, %187, !dbg !14723
  store i32 %189, i32* %22, align 4, !dbg !14723
  br label %190, !dbg !14724

190:                                              ; preds = %185
  %191 = load i32, i32* %23, align 4, !dbg !14725
  %192 = add nsw i32 %191, 1, !dbg !14725
  store i32 %192, i32* %23, align 4, !dbg !14725
  br label %84, !dbg !14726, !llvm.loop !14727

193:                                              ; preds = %97
  br label %194, !dbg !14729

194:                                              ; preds = %193
  %195 = load i32, i32* %24, align 4, !dbg !14730
  %196 = add i32 %195, 1, !dbg !14730
  store i32 %196, i32* %24, align 4, !dbg !14730
  br label %70, !dbg !14731, !llvm.loop !14732

197:                                              ; preds = %70
  br label %198, !dbg !14734

198:                                              ; preds = %201, %197
  %199 = load i32, i32* %22, align 4, !dbg !14735
  %200 = icmp sgt i32 %199, 0, !dbg !14736
  br i1 %200, label %201, label %214, !dbg !14734

201:                                              ; preds = %198
  %202 = load i8, i8* %31, align 1, !dbg !14737
  %203 = zext i8 %202 to i32, !dbg !14737
  %204 = load i32, i32* %22, align 4, !dbg !14739
  %205 = sub nsw i32 8, %204, !dbg !14740
  %206 = shl i32 255, %205, !dbg !14741
  %207 = and i32 %203, %206, !dbg !14742
  %208 = trunc i32 %207 to i8, !dbg !14743
  store i8 %208, i8* %30, align 1, !dbg !14744
  %209 = load i8, i8* %30, align 1, !dbg !14745
  %210 = load i8*, i8** %33, align 8, !dbg !14746
  %211 = getelementptr inbounds i8, i8* %210, i32 1, !dbg !14746
  store i8* %211, i8** %33, align 8, !dbg !14746
  store i8 %209, i8* %210, align 1, !dbg !14747
  %212 = load i32, i32* %22, align 4, !dbg !14748
  %213 = sub nsw i32 %212, 8, !dbg !14748
  store i32 %213, i32* %22, align 4, !dbg !14748
  br label %198, !dbg !14734, !llvm.loop !14749

214:                                              ; preds = %198
  store i32 0, i32* %11, align 4, !dbg !14751
  br label %215, !dbg !14751

215:                                              ; preds = %214, %41
  %216 = load i32, i32* %11, align 4, !dbg !14752
  ret i32 %216, !dbg !14752
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesShifted16bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32) #0 !dbg !14753 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i16, align 2
  %29 = alloca i16, align 2
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca i8, align 1
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !14754, metadata !DIExpression()), !dbg !14755
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !14756, metadata !DIExpression()), !dbg !14757
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14758, metadata !DIExpression()), !dbg !14759
  store i16 %3, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !14760, metadata !DIExpression()), !dbg !14761
  store i16 %4, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !14762, metadata !DIExpression()), !dbg !14763
  store i16 %5, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !14764, metadata !DIExpression()), !dbg !14765
  store i16 %6, i16* %18, align 2
  call void @llvm.dbg.declare(metadata i16* %18, metadata !14766, metadata !DIExpression()), !dbg !14767
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !14768, metadata !DIExpression()), !dbg !14769
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !14770, metadata !DIExpression()), !dbg !14771
  store i32 %9, i32* %21, align 4
  call void @llvm.dbg.declare(metadata i32* %21, metadata !14772, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.declare(metadata i32* %22, metadata !14774, metadata !DIExpression()), !dbg !14775
  store i32 0, i32* %22, align 4, !dbg !14775
  call void @llvm.dbg.declare(metadata i32* %23, metadata !14776, metadata !DIExpression()), !dbg !14777
  store i32 0, i32* %23, align 4, !dbg !14777
  call void @llvm.dbg.declare(metadata i32* %24, metadata !14778, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.declare(metadata i32* %25, metadata !14780, metadata !DIExpression()), !dbg !14781
  call void @llvm.dbg.declare(metadata i32* %26, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.declare(metadata i32* %27, metadata !14784, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.declare(metadata i16* %28, metadata !14786, metadata !DIExpression()), !dbg !14787
  store i16 0, i16* %28, align 2, !dbg !14787
  call void @llvm.dbg.declare(metadata i16* %29, metadata !14788, metadata !DIExpression()), !dbg !14789
  store i16 0, i16* %29, align 2, !dbg !14789
  call void @llvm.dbg.declare(metadata i16* %30, metadata !14790, metadata !DIExpression()), !dbg !14791
  store i16 0, i16* %30, align 2, !dbg !14791
  call void @llvm.dbg.declare(metadata i16* %31, metadata !14792, metadata !DIExpression()), !dbg !14793
  store i16 0, i16* %31, align 2, !dbg !14793
  call void @llvm.dbg.declare(metadata i8* %32, metadata !14794, metadata !DIExpression()), !dbg !14795
  store i8 0, i8* %32, align 1, !dbg !14795
  call void @llvm.dbg.declare(metadata i8** %33, metadata !14796, metadata !DIExpression()), !dbg !14797
  %35 = load i8*, i8** %12, align 8, !dbg !14798
  store i8* %35, i8** %33, align 8, !dbg !14797
  call void @llvm.dbg.declare(metadata i8** %34, metadata !14799, metadata !DIExpression()), !dbg !14800
  %36 = load i8*, i8** %13, align 8, !dbg !14801
  store i8* %36, i8** %34, align 8, !dbg !14800
  %37 = load i8*, i8** %33, align 8, !dbg !14802
  %38 = icmp eq i8* %37, null, !dbg !14804
  br i1 %38, label %42, label %39, !dbg !14805

39:                                               ; preds = %10
  %40 = load i8*, i8** %34, align 8, !dbg !14806
  %41 = icmp eq i8* %40, null, !dbg !14807
  br i1 %41, label %42, label %43, !dbg !14808

42:                                               ; preds = %39, %10
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !14809
  store i32 1, i32* %11, align 4, !dbg !14811
  br label %246, !dbg !14811

43:                                               ; preds = %39
  %44 = load i32, i32* %19, align 4, !dbg !14812
  %45 = load i32, i32* %20, align 4, !dbg !14814
  %46 = icmp ugt i32 %44, %45, !dbg !14815
  br i1 %46, label %51, label %47, !dbg !14816

47:                                               ; preds = %43
  %48 = load i32, i32* %19, align 4, !dbg !14817
  %49 = load i32, i32* %14, align 4, !dbg !14818
  %50 = icmp ugt i32 %48, %49, !dbg !14819
  br i1 %50, label %51, label %53, !dbg !14820

51:                                               ; preds = %47, %43
  %52 = load i32, i32* %19, align 4, !dbg !14821
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %52), !dbg !14823
  store i32 0, i32* %19, align 4, !dbg !14824
  br label %53, !dbg !14825

53:                                               ; preds = %51, %47
  %54 = load i32, i32* %20, align 4, !dbg !14826
  %55 = icmp eq i32 %54, 0, !dbg !14828
  br i1 %55, label %60, label %56, !dbg !14829

56:                                               ; preds = %53
  %57 = load i32, i32* %20, align 4, !dbg !14830
  %58 = load i32, i32* %14, align 4, !dbg !14831
  %59 = icmp ugt i32 %57, %58, !dbg !14832
  br i1 %59, label %60, label %63, !dbg !14833

60:                                               ; preds = %56, %53
  %61 = load i32, i32* %20, align 4, !dbg !14834
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %61), !dbg !14836
  %62 = load i32, i32* %14, align 4, !dbg !14837
  store i32 %62, i32* %20, align 4, !dbg !14838
  br label %63, !dbg !14839

63:                                               ; preds = %60, %56
  %64 = load i32, i32* %21, align 4, !dbg !14840
  store i32 %64, i32* %22, align 4, !dbg !14841
  %65 = load i16, i16* %17, align 2, !dbg !14842
  %66 = zext i16 %65 to i32, !dbg !14842
  %67 = sub nsw i32 16, %66, !dbg !14843
  %68 = ashr i32 65535, %67, !dbg !14844
  %69 = trunc i32 %68 to i16, !dbg !14845
  store i16 %69, i16* %28, align 2, !dbg !14846
  %70 = load i32, i32* %19, align 4, !dbg !14847
  store i32 %70, i32* %24, align 4, !dbg !14849
  br label %71, !dbg !14850

71:                                               ; preds = %228, %63
  %72 = load i32, i32* %24, align 4, !dbg !14851
  %73 = load i32, i32* %20, align 4, !dbg !14853
  %74 = icmp ult i32 %72, %73, !dbg !14854
  br i1 %74, label %75, label %231, !dbg !14855

75:                                               ; preds = %71
  %76 = load i32, i32* %24, align 4, !dbg !14856
  %77 = load i16, i16* %17, align 2, !dbg !14858
  %78 = zext i16 %77 to i32, !dbg !14858
  %79 = mul i32 %76, %78, !dbg !14859
  %80 = load i16, i16* %16, align 2, !dbg !14860
  %81 = zext i16 %80 to i32, !dbg !14860
  %82 = mul i32 %79, %81, !dbg !14861
  store i32 %82, i32* %27, align 4, !dbg !14862
  %83 = load i16, i16* %15, align 2, !dbg !14863
  %84 = zext i16 %83 to i32, !dbg !14863
  store i32 %84, i32* %23, align 4, !dbg !14865
  br label %85, !dbg !14866

85:                                               ; preds = %224, %75
  %86 = load i32, i32* %23, align 4, !dbg !14867
  %87 = load i16, i16* %16, align 2, !dbg !14869
  %88 = zext i16 %87 to i32, !dbg !14869
  %89 = icmp slt i32 %86, %88, !dbg !14870
  br i1 %89, label %90, label %98, !dbg !14871

90:                                               ; preds = %85
  %91 = load i32, i32* %23, align 4, !dbg !14872
  %92 = load i16, i16* %15, align 2, !dbg !14873
  %93 = zext i16 %92 to i32, !dbg !14873
  %94 = load i16, i16* %18, align 2, !dbg !14874
  %95 = zext i16 %94 to i32, !dbg !14874
  %96 = add nsw i32 %93, %95, !dbg !14875
  %97 = icmp slt i32 %91, %96, !dbg !14876
  br label %98

98:                                               ; preds = %90, %85
  %99 = phi i1 [ false, %85 ], [ %97, %90 ], !dbg !14877
  br i1 %99, label %100, label %227, !dbg !14878

100:                                              ; preds = %98
  %101 = load i32, i32* %23, align 4, !dbg !14879
  %102 = icmp eq i32 %101, 0, !dbg !14882
  br i1 %102, label %103, label %108, !dbg !14883

103:                                              ; preds = %100
  %104 = load i32, i32* %27, align 4, !dbg !14884
  %105 = udiv i32 %104, 8, !dbg !14886
  store i32 %105, i32* %25, align 4, !dbg !14887
  %106 = load i32, i32* %27, align 4, !dbg !14888
  %107 = urem i32 %106, 8, !dbg !14889
  store i32 %107, i32* %26, align 4, !dbg !14890
  br label %123, !dbg !14891

108:                                              ; preds = %100
  %109 = load i32, i32* %27, align 4, !dbg !14892
  %110 = load i32, i32* %23, align 4, !dbg !14894
  %111 = load i16, i16* %17, align 2, !dbg !14895
  %112 = zext i16 %111 to i32, !dbg !14895
  %113 = mul nsw i32 %110, %112, !dbg !14896
  %114 = add i32 %109, %113, !dbg !14897
  %115 = udiv i32 %114, 8, !dbg !14898
  store i32 %115, i32* %25, align 4, !dbg !14899
  %116 = load i32, i32* %27, align 4, !dbg !14900
  %117 = load i32, i32* %23, align 4, !dbg !14901
  %118 = load i16, i16* %17, align 2, !dbg !14902
  %119 = zext i16 %118 to i32, !dbg !14902
  %120 = mul nsw i32 %117, %119, !dbg !14903
  %121 = add i32 %116, %120, !dbg !14904
  %122 = urem i32 %121, 8, !dbg !14905
  store i32 %122, i32* %26, align 4, !dbg !14906
  br label %123

123:                                              ; preds = %108, %103
  %124 = load i8*, i8** %12, align 8, !dbg !14907
  %125 = load i32, i32* %25, align 4, !dbg !14908
  %126 = zext i32 %125 to i64, !dbg !14909
  %127 = getelementptr inbounds i8, i8* %124, i64 %126, !dbg !14909
  store i8* %127, i8** %33, align 8, !dbg !14910
  %128 = load i16, i16* %28, align 2, !dbg !14911
  %129 = zext i16 %128 to i32, !dbg !14911
  %130 = load i32, i32* %26, align 4, !dbg !14912
  %131 = sub i32 16, %130, !dbg !14913
  %132 = load i16, i16* %17, align 2, !dbg !14914
  %133 = zext i16 %132 to i32, !dbg !14914
  %134 = sub i32 %131, %133, !dbg !14915
  %135 = shl i32 %129, %134, !dbg !14916
  %136 = trunc i32 %135 to i16, !dbg !14911
  store i16 %136, i16* %29, align 2, !dbg !14917
  %137 = load i32, i32* @little_endian, align 4, !dbg !14918
  %138 = icmp ne i32 %137, 0, !dbg !14918
  br i1 %138, label %139, label %151, !dbg !14920

139:                                              ; preds = %123
  %140 = load i8*, i8** %33, align 8, !dbg !14921
  %141 = getelementptr inbounds i8, i8* %140, i64 0, !dbg !14921
  %142 = load i8, i8* %141, align 1, !dbg !14921
  %143 = zext i8 %142 to i32, !dbg !14921
  %144 = shl i32 %143, 8, !dbg !14922
  %145 = load i8*, i8** %33, align 8, !dbg !14923
  %146 = getelementptr inbounds i8, i8* %145, i64 1, !dbg !14923
  %147 = load i8, i8* %146, align 1, !dbg !14923
  %148 = zext i8 %147 to i32, !dbg !14923
  %149 = or i32 %144, %148, !dbg !14924
  %150 = trunc i32 %149 to i16, !dbg !14925
  store i16 %150, i16* %30, align 2, !dbg !14926
  br label %163, !dbg !14927

151:                                              ; preds = %123
  %152 = load i8*, i8** %33, align 8, !dbg !14928
  %153 = getelementptr inbounds i8, i8* %152, i64 1, !dbg !14928
  %154 = load i8, i8* %153, align 1, !dbg !14928
  %155 = zext i8 %154 to i32, !dbg !14928
  %156 = shl i32 %155, 8, !dbg !14929
  %157 = load i8*, i8** %33, align 8, !dbg !14930
  %158 = getelementptr inbounds i8, i8* %157, i64 0, !dbg !14930
  %159 = load i8, i8* %158, align 1, !dbg !14930
  %160 = zext i8 %159 to i32, !dbg !14930
  %161 = or i32 %156, %160, !dbg !14931
  %162 = trunc i32 %161 to i16, !dbg !14932
  store i16 %162, i16* %30, align 2, !dbg !14933
  br label %163

163:                                              ; preds = %151, %139
  %164 = load i32, i32* %24, align 4, !dbg !14934
  %165 = load i32, i32* %19, align 4, !dbg !14936
  %166 = icmp eq i32 %164, %165, !dbg !14937
  br i1 %166, label %167, label %180, !dbg !14938

167:                                              ; preds = %163
  %168 = load i32, i32* %23, align 4, !dbg !14939
  %169 = load i16, i16* %15, align 2, !dbg !14940
  %170 = zext i16 %169 to i32, !dbg !14940
  %171 = icmp eq i32 %168, %170, !dbg !14941
  br i1 %171, label %172, label %180, !dbg !14942

172:                                              ; preds = %167
  %173 = load i16, i16* %30, align 2, !dbg !14943
  %174 = zext i16 %173 to i32, !dbg !14943
  %175 = load i32, i32* %21, align 4, !dbg !14944
  %176 = sub nsw i32 8, %175, !dbg !14945
  %177 = shl i32 65535, %176, !dbg !14946
  %178 = and i32 %174, %177, !dbg !14947
  %179 = trunc i32 %178 to i16, !dbg !14943
  store i16 %179, i16* %31, align 2, !dbg !14948
  br label %180, !dbg !14949

180:                                              ; preds = %172, %167, %163
  %181 = load i16, i16* %30, align 2, !dbg !14950
  %182 = zext i16 %181 to i32, !dbg !14950
  %183 = load i16, i16* %29, align 2, !dbg !14951
  %184 = zext i16 %183 to i32, !dbg !14951
  %185 = and i32 %182, %184, !dbg !14952
  %186 = load i32, i32* %26, align 4, !dbg !14953
  %187 = shl i32 %185, %186, !dbg !14954
  %188 = trunc i32 %187 to i16, !dbg !14955
  store i16 %188, i16* %30, align 2, !dbg !14956
  %189 = load i32, i32* %22, align 4, !dbg !14957
  %190 = icmp slt i32 %189, 8, !dbg !14959
  br i1 %190, label %191, label %200, !dbg !14960

191:                                              ; preds = %180
  %192 = load i16, i16* %31, align 2, !dbg !14961
  %193 = zext i16 %192 to i32, !dbg !14961
  %194 = load i16, i16* %30, align 2, !dbg !14962
  %195 = zext i16 %194 to i32, !dbg !14962
  %196 = load i32, i32* %22, align 4, !dbg !14963
  %197 = ashr i32 %195, %196, !dbg !14964
  %198 = or i32 %193, %197, !dbg !14965
  %199 = trunc i32 %198 to i16, !dbg !14961
  store i16 %199, i16* %31, align 2, !dbg !14966
  br label %219, !dbg !14967

200:                                              ; preds = %180
  %201 = load i16, i16* %31, align 2, !dbg !14968
  %202 = zext i16 %201 to i32, !dbg !14968
  %203 = ashr i32 %202, 8, !dbg !14970
  %204 = trunc i32 %203 to i8, !dbg !14971
  store i8 %204, i8* %32, align 1, !dbg !14972
  %205 = load i8, i8* %32, align 1, !dbg !14973
  %206 = load i8*, i8** %34, align 8, !dbg !14974
  %207 = getelementptr inbounds i8, i8* %206, i32 1, !dbg !14974
  store i8* %207, i8** %34, align 8, !dbg !14974
  store i8 %205, i8* %206, align 1, !dbg !14975
  %208 = load i32, i32* %22, align 4, !dbg !14976
  %209 = sub nsw i32 %208, 8, !dbg !14976
  store i32 %209, i32* %22, align 4, !dbg !14976
  %210 = load i16, i16* %31, align 2, !dbg !14977
  %211 = zext i16 %210 to i32, !dbg !14977
  %212 = shl i32 %211, 8, !dbg !14978
  %213 = load i16, i16* %30, align 2, !dbg !14979
  %214 = zext i16 %213 to i32, !dbg !14979
  %215 = load i32, i32* %22, align 4, !dbg !14980
  %216 = ashr i32 %214, %215, !dbg !14981
  %217 = or i32 %212, %216, !dbg !14982
  %218 = trunc i32 %217 to i16, !dbg !14983
  store i16 %218, i16* %31, align 2, !dbg !14984
  br label %219

219:                                              ; preds = %200, %191
  %220 = load i16, i16* %17, align 2, !dbg !14985
  %221 = zext i16 %220 to i32, !dbg !14985
  %222 = load i32, i32* %22, align 4, !dbg !14986
  %223 = add nsw i32 %222, %221, !dbg !14986
  store i32 %223, i32* %22, align 4, !dbg !14986
  br label %224, !dbg !14987

224:                                              ; preds = %219
  %225 = load i32, i32* %23, align 4, !dbg !14988
  %226 = add nsw i32 %225, 1, !dbg !14988
  store i32 %226, i32* %23, align 4, !dbg !14988
  br label %85, !dbg !14989, !llvm.loop !14990

227:                                              ; preds = %98
  br label %228, !dbg !14992

228:                                              ; preds = %227
  %229 = load i32, i32* %24, align 4, !dbg !14993
  %230 = add i32 %229, 1, !dbg !14993
  store i32 %230, i32* %24, align 4, !dbg !14993
  br label %71, !dbg !14994, !llvm.loop !14995

231:                                              ; preds = %71
  br label %232, !dbg !14997

232:                                              ; preds = %235, %231
  %233 = load i32, i32* %22, align 4, !dbg !14998
  %234 = icmp sgt i32 %233, 0, !dbg !14999
  br i1 %234, label %235, label %245, !dbg !14997

235:                                              ; preds = %232
  %236 = load i16, i16* %31, align 2, !dbg !15000
  %237 = zext i16 %236 to i32, !dbg !15000
  %238 = ashr i32 %237, 8, !dbg !15002
  %239 = trunc i32 %238 to i8, !dbg !15003
  store i8 %239, i8* %32, align 1, !dbg !15004
  %240 = load i8, i8* %32, align 1, !dbg !15005
  %241 = load i8*, i8** %34, align 8, !dbg !15006
  %242 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !15006
  store i8* %242, i8** %34, align 8, !dbg !15006
  store i8 %240, i8* %241, align 1, !dbg !15007
  %243 = load i32, i32* %22, align 4, !dbg !15008
  %244 = sub nsw i32 %243, 8, !dbg !15008
  store i32 %244, i32* %22, align 4, !dbg !15008
  br label %232, !dbg !14997, !llvm.loop !15009

245:                                              ; preds = %232
  store i32 0, i32* %11, align 4, !dbg !15011
  br label %246, !dbg !15011

246:                                              ; preds = %245, %42
  %247 = load i32, i32* %11, align 4, !dbg !15012
  ret i32 %247, !dbg !15012
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesShifted24bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32) #0 !dbg !15013 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !15014, metadata !DIExpression()), !dbg !15015
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !15016, metadata !DIExpression()), !dbg !15017
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !15018, metadata !DIExpression()), !dbg !15019
  store i16 %3, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !15020, metadata !DIExpression()), !dbg !15021
  store i16 %4, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !15022, metadata !DIExpression()), !dbg !15023
  store i16 %5, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !15024, metadata !DIExpression()), !dbg !15025
  store i16 %6, i16* %18, align 2
  call void @llvm.dbg.declare(metadata i16* %18, metadata !15026, metadata !DIExpression()), !dbg !15027
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !15028, metadata !DIExpression()), !dbg !15029
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !15030, metadata !DIExpression()), !dbg !15031
  store i32 %9, i32* %21, align 4
  call void @llvm.dbg.declare(metadata i32* %21, metadata !15032, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.declare(metadata i32* %22, metadata !15034, metadata !DIExpression()), !dbg !15035
  store i32 0, i32* %22, align 4, !dbg !15035
  call void @llvm.dbg.declare(metadata i32* %23, metadata !15036, metadata !DIExpression()), !dbg !15037
  store i32 0, i32* %23, align 4, !dbg !15037
  call void @llvm.dbg.declare(metadata i32* %24, metadata !15038, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.declare(metadata i32* %25, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.declare(metadata i32* %26, metadata !15042, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.declare(metadata i32* %27, metadata !15044, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.declare(metadata i32* %28, metadata !15046, metadata !DIExpression()), !dbg !15047
  store i32 0, i32* %28, align 4, !dbg !15047
  call void @llvm.dbg.declare(metadata i32* %29, metadata !15048, metadata !DIExpression()), !dbg !15049
  store i32 0, i32* %29, align 4, !dbg !15049
  call void @llvm.dbg.declare(metadata i32* %30, metadata !15050, metadata !DIExpression()), !dbg !15051
  store i32 0, i32* %30, align 4, !dbg !15051
  call void @llvm.dbg.declare(metadata i32* %31, metadata !15052, metadata !DIExpression()), !dbg !15053
  store i32 0, i32* %31, align 4, !dbg !15053
  call void @llvm.dbg.declare(metadata i8* %32, metadata !15054, metadata !DIExpression()), !dbg !15055
  store i8 0, i8* %32, align 1, !dbg !15055
  call void @llvm.dbg.declare(metadata i8* %33, metadata !15056, metadata !DIExpression()), !dbg !15057
  store i8 0, i8* %33, align 1, !dbg !15057
  call void @llvm.dbg.declare(metadata i8** %34, metadata !15058, metadata !DIExpression()), !dbg !15059
  %36 = load i8*, i8** %12, align 8, !dbg !15060
  store i8* %36, i8** %34, align 8, !dbg !15059
  call void @llvm.dbg.declare(metadata i8** %35, metadata !15061, metadata !DIExpression()), !dbg !15062
  %37 = load i8*, i8** %13, align 8, !dbg !15063
  store i8* %37, i8** %35, align 8, !dbg !15062
  %38 = load i8*, i8** %12, align 8, !dbg !15064
  %39 = icmp eq i8* %38, null, !dbg !15066
  br i1 %39, label %43, label %40, !dbg !15067

40:                                               ; preds = %10
  %41 = load i8*, i8** %13, align 8, !dbg !15068
  %42 = icmp eq i8* %41, null, !dbg !15069
  br i1 %42, label %43, label %44, !dbg !15070

43:                                               ; preds = %40, %10
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.314, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !15071
  store i32 1, i32* %11, align 4, !dbg !15073
  br label %262, !dbg !15073

44:                                               ; preds = %40
  %45 = load i32, i32* %19, align 4, !dbg !15074
  %46 = load i32, i32* %20, align 4, !dbg !15076
  %47 = icmp ugt i32 %45, %46, !dbg !15077
  br i1 %47, label %52, label %48, !dbg !15078

48:                                               ; preds = %44
  %49 = load i32, i32* %19, align 4, !dbg !15079
  %50 = load i32, i32* %14, align 4, !dbg !15080
  %51 = icmp ugt i32 %49, %50, !dbg !15081
  br i1 %51, label %52, label %54, !dbg !15082

52:                                               ; preds = %48, %44
  %53 = load i32, i32* %19, align 4, !dbg !15083
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.314, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %53), !dbg !15085
  store i32 0, i32* %19, align 4, !dbg !15086
  br label %54, !dbg !15087

54:                                               ; preds = %52, %48
  %55 = load i32, i32* %20, align 4, !dbg !15088
  %56 = icmp eq i32 %55, 0, !dbg !15090
  br i1 %56, label %61, label %57, !dbg !15091

57:                                               ; preds = %54
  %58 = load i32, i32* %20, align 4, !dbg !15092
  %59 = load i32, i32* %14, align 4, !dbg !15093
  %60 = icmp ugt i32 %58, %59, !dbg !15094
  br i1 %60, label %61, label %64, !dbg !15095

61:                                               ; preds = %57, %54
  %62 = load i32, i32* %20, align 4, !dbg !15096
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.314, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %62), !dbg !15098
  %63 = load i32, i32* %14, align 4, !dbg !15099
  store i32 %63, i32* %20, align 4, !dbg !15100
  br label %64, !dbg !15101

64:                                               ; preds = %61, %57
  %65 = load i32, i32* %21, align 4, !dbg !15102
  store i32 %65, i32* %22, align 4, !dbg !15103
  %66 = load i16, i16* %17, align 2, !dbg !15104
  %67 = zext i16 %66 to i32, !dbg !15104
  %68 = sub nsw i32 32, %67, !dbg !15105
  %69 = lshr i32 -1, %68, !dbg !15106
  store i32 %69, i32* %28, align 4, !dbg !15107
  %70 = load i32, i32* %19, align 4, !dbg !15108
  store i32 %70, i32* %24, align 4, !dbg !15110
  br label %71, !dbg !15111

71:                                               ; preds = %242, %64
  %72 = load i32, i32* %24, align 4, !dbg !15112
  %73 = load i32, i32* %20, align 4, !dbg !15114
  %74 = icmp ult i32 %72, %73, !dbg !15115
  br i1 %74, label %75, label %245, !dbg !15116

75:                                               ; preds = %71
  %76 = load i32, i32* %24, align 4, !dbg !15117
  %77 = load i16, i16* %17, align 2, !dbg !15119
  %78 = zext i16 %77 to i32, !dbg !15119
  %79 = mul i32 %76, %78, !dbg !15120
  %80 = load i16, i16* %16, align 2, !dbg !15121
  %81 = zext i16 %80 to i32, !dbg !15121
  %82 = mul i32 %79, %81, !dbg !15122
  store i32 %82, i32* %27, align 4, !dbg !15123
  %83 = load i16, i16* %15, align 2, !dbg !15124
  %84 = zext i16 %83 to i32, !dbg !15124
  store i32 %84, i32* %23, align 4, !dbg !15126
  br label %85, !dbg !15127

85:                                               ; preds = %238, %75
  %86 = load i32, i32* %23, align 4, !dbg !15128
  %87 = load i16, i16* %16, align 2, !dbg !15130
  %88 = zext i16 %87 to i32, !dbg !15130
  %89 = icmp slt i32 %86, %88, !dbg !15131
  br i1 %89, label %90, label %98, !dbg !15132

90:                                               ; preds = %85
  %91 = load i32, i32* %23, align 4, !dbg !15133
  %92 = load i16, i16* %15, align 2, !dbg !15134
  %93 = zext i16 %92 to i32, !dbg !15134
  %94 = load i16, i16* %18, align 2, !dbg !15135
  %95 = zext i16 %94 to i32, !dbg !15135
  %96 = add nsw i32 %93, %95, !dbg !15136
  %97 = icmp slt i32 %91, %96, !dbg !15137
  br label %98

98:                                               ; preds = %90, %85
  %99 = phi i1 [ false, %85 ], [ %97, %90 ], !dbg !15138
  br i1 %99, label %100, label %241, !dbg !15139

100:                                              ; preds = %98
  %101 = load i32, i32* %23, align 4, !dbg !15140
  %102 = icmp eq i32 %101, 0, !dbg !15143
  br i1 %102, label %103, label %108, !dbg !15144

103:                                              ; preds = %100
  %104 = load i32, i32* %27, align 4, !dbg !15145
  %105 = udiv i32 %104, 8, !dbg !15147
  store i32 %105, i32* %25, align 4, !dbg !15148
  %106 = load i32, i32* %27, align 4, !dbg !15149
  %107 = urem i32 %106, 8, !dbg !15150
  store i32 %107, i32* %26, align 4, !dbg !15151
  br label %123, !dbg !15152

108:                                              ; preds = %100
  %109 = load i32, i32* %27, align 4, !dbg !15153
  %110 = load i32, i32* %23, align 4, !dbg !15155
  %111 = load i16, i16* %17, align 2, !dbg !15156
  %112 = zext i16 %111 to i32, !dbg !15156
  %113 = mul nsw i32 %110, %112, !dbg !15157
  %114 = add i32 %109, %113, !dbg !15158
  %115 = udiv i32 %114, 8, !dbg !15159
  store i32 %115, i32* %25, align 4, !dbg !15160
  %116 = load i32, i32* %27, align 4, !dbg !15161
  %117 = load i32, i32* %23, align 4, !dbg !15162
  %118 = load i16, i16* %17, align 2, !dbg !15163
  %119 = zext i16 %118 to i32, !dbg !15163
  %120 = mul nsw i32 %117, %119, !dbg !15164
  %121 = add i32 %116, %120, !dbg !15165
  %122 = urem i32 %121, 8, !dbg !15166
  store i32 %122, i32* %26, align 4, !dbg !15167
  br label %123

123:                                              ; preds = %108, %103
  %124 = load i8*, i8** %12, align 8, !dbg !15168
  %125 = load i32, i32* %25, align 4, !dbg !15169
  %126 = zext i32 %125 to i64, !dbg !15170
  %127 = getelementptr inbounds i8, i8* %124, i64 %126, !dbg !15170
  store i8* %127, i8** %34, align 8, !dbg !15171
  %128 = load i32, i32* %28, align 4, !dbg !15172
  %129 = load i32, i32* %26, align 4, !dbg !15173
  %130 = sub i32 32, %129, !dbg !15174
  %131 = load i16, i16* %17, align 2, !dbg !15175
  %132 = zext i16 %131 to i32, !dbg !15175
  %133 = sub i32 %130, %132, !dbg !15176
  %134 = shl i32 %128, %133, !dbg !15177
  store i32 %134, i32* %29, align 4, !dbg !15178
  %135 = load i32, i32* @little_endian, align 4, !dbg !15179
  %136 = icmp ne i32 %135, 0, !dbg !15179
  br i1 %136, label %137, label %160, !dbg !15181

137:                                              ; preds = %123
  %138 = load i8*, i8** %34, align 8, !dbg !15182
  %139 = getelementptr inbounds i8, i8* %138, i64 0, !dbg !15182
  %140 = load i8, i8* %139, align 1, !dbg !15182
  %141 = zext i8 %140 to i32, !dbg !15182
  %142 = shl i32 %141, 24, !dbg !15183
  %143 = load i8*, i8** %34, align 8, !dbg !15184
  %144 = getelementptr inbounds i8, i8* %143, i64 1, !dbg !15184
  %145 = load i8, i8* %144, align 1, !dbg !15184
  %146 = zext i8 %145 to i32, !dbg !15184
  %147 = shl i32 %146, 16, !dbg !15185
  %148 = or i32 %142, %147, !dbg !15186
  %149 = load i8*, i8** %34, align 8, !dbg !15187
  %150 = getelementptr inbounds i8, i8* %149, i64 2, !dbg !15187
  %151 = load i8, i8* %150, align 1, !dbg !15187
  %152 = zext i8 %151 to i32, !dbg !15187
  %153 = shl i32 %152, 8, !dbg !15188
  %154 = or i32 %148, %153, !dbg !15189
  %155 = load i8*, i8** %34, align 8, !dbg !15190
  %156 = getelementptr inbounds i8, i8* %155, i64 3, !dbg !15190
  %157 = load i8, i8* %156, align 1, !dbg !15190
  %158 = zext i8 %157 to i32, !dbg !15190
  %159 = or i32 %154, %158, !dbg !15191
  store i32 %159, i32* %30, align 4, !dbg !15192
  br label %183, !dbg !15193

160:                                              ; preds = %123
  %161 = load i8*, i8** %34, align 8, !dbg !15194
  %162 = getelementptr inbounds i8, i8* %161, i64 3, !dbg !15194
  %163 = load i8, i8* %162, align 1, !dbg !15194
  %164 = zext i8 %163 to i32, !dbg !15194
  %165 = shl i32 %164, 24, !dbg !15195
  %166 = load i8*, i8** %34, align 8, !dbg !15196
  %167 = getelementptr inbounds i8, i8* %166, i64 2, !dbg !15196
  %168 = load i8, i8* %167, align 1, !dbg !15196
  %169 = zext i8 %168 to i32, !dbg !15196
  %170 = shl i32 %169, 16, !dbg !15197
  %171 = or i32 %165, %170, !dbg !15198
  %172 = load i8*, i8** %34, align 8, !dbg !15199
  %173 = getelementptr inbounds i8, i8* %172, i64 1, !dbg !15199
  %174 = load i8, i8* %173, align 1, !dbg !15199
  %175 = zext i8 %174 to i32, !dbg !15199
  %176 = shl i32 %175, 8, !dbg !15200
  %177 = or i32 %171, %176, !dbg !15201
  %178 = load i8*, i8** %34, align 8, !dbg !15202
  %179 = getelementptr inbounds i8, i8* %178, i64 0, !dbg !15202
  %180 = load i8, i8* %179, align 1, !dbg !15202
  %181 = zext i8 %180 to i32, !dbg !15202
  %182 = or i32 %177, %181, !dbg !15203
  store i32 %182, i32* %30, align 4, !dbg !15204
  br label %183

183:                                              ; preds = %160, %137
  %184 = load i32, i32* %24, align 4, !dbg !15205
  %185 = load i32, i32* %19, align 4, !dbg !15207
  %186 = icmp eq i32 %184, %185, !dbg !15208
  br i1 %186, label %187, label %198, !dbg !15209

187:                                              ; preds = %183
  %188 = load i32, i32* %23, align 4, !dbg !15210
  %189 = load i16, i16* %15, align 2, !dbg !15211
  %190 = zext i16 %189 to i32, !dbg !15211
  %191 = icmp eq i32 %188, %190, !dbg !15212
  br i1 %191, label %192, label %198, !dbg !15213

192:                                              ; preds = %187
  %193 = load i32, i32* %30, align 4, !dbg !15214
  %194 = load i32, i32* %21, align 4, !dbg !15215
  %195 = sub nsw i32 16, %194, !dbg !15216
  %196 = shl i32 -1, %195, !dbg !15217
  %197 = and i32 %193, %196, !dbg !15218
  store i32 %197, i32* %31, align 4, !dbg !15219
  br label %198, !dbg !15220

198:                                              ; preds = %192, %187, %183
  %199 = load i32, i32* %30, align 4, !dbg !15221
  %200 = load i32, i32* %29, align 4, !dbg !15222
  %201 = and i32 %199, %200, !dbg !15223
  %202 = load i32, i32* %26, align 4, !dbg !15224
  %203 = shl i32 %201, %202, !dbg !15225
  store i32 %203, i32* %30, align 4, !dbg !15226
  %204 = load i32, i32* %22, align 4, !dbg !15227
  %205 = icmp slt i32 %204, 16, !dbg !15229
  br i1 %205, label %206, label %212, !dbg !15230

206:                                              ; preds = %198
  store i8 0, i8* %33, align 1, !dbg !15231
  store i8 0, i8* %32, align 1, !dbg !15233
  %207 = load i32, i32* %31, align 4, !dbg !15234
  %208 = load i32, i32* %30, align 4, !dbg !15235
  %209 = load i32, i32* %22, align 4, !dbg !15236
  %210 = lshr i32 %208, %209, !dbg !15237
  %211 = or i32 %207, %210, !dbg !15238
  store i32 %211, i32* %31, align 4, !dbg !15239
  br label %233, !dbg !15240

212:                                              ; preds = %198
  %213 = load i32, i32* %31, align 4, !dbg !15241
  %214 = lshr i32 %213, 24, !dbg !15243
  %215 = trunc i32 %214 to i8, !dbg !15244
  store i8 %215, i8* %32, align 1, !dbg !15245
  %216 = load i8, i8* %32, align 1, !dbg !15246
  %217 = load i8*, i8** %35, align 8, !dbg !15247
  %218 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !15247
  store i8* %218, i8** %35, align 8, !dbg !15247
  store i8 %216, i8* %217, align 1, !dbg !15248
  %219 = load i32, i32* %31, align 4, !dbg !15249
  %220 = lshr i32 %219, 16, !dbg !15250
  %221 = trunc i32 %220 to i8, !dbg !15251
  store i8 %221, i8* %33, align 1, !dbg !15252
  %222 = load i8, i8* %33, align 1, !dbg !15253
  %223 = load i8*, i8** %35, align 8, !dbg !15254
  %224 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !15254
  store i8* %224, i8** %35, align 8, !dbg !15254
  store i8 %222, i8* %223, align 1, !dbg !15255
  %225 = load i32, i32* %22, align 4, !dbg !15256
  %226 = sub nsw i32 %225, 16, !dbg !15256
  store i32 %226, i32* %22, align 4, !dbg !15256
  %227 = load i32, i32* %31, align 4, !dbg !15257
  %228 = shl i32 %227, 16, !dbg !15258
  %229 = load i32, i32* %30, align 4, !dbg !15259
  %230 = load i32, i32* %22, align 4, !dbg !15260
  %231 = lshr i32 %229, %230, !dbg !15261
  %232 = or i32 %228, %231, !dbg !15262
  store i32 %232, i32* %31, align 4, !dbg !15263
  br label %233

233:                                              ; preds = %212, %206
  %234 = load i16, i16* %17, align 2, !dbg !15264
  %235 = zext i16 %234 to i32, !dbg !15264
  %236 = load i32, i32* %22, align 4, !dbg !15265
  %237 = add nsw i32 %236, %235, !dbg !15265
  store i32 %237, i32* %22, align 4, !dbg !15265
  br label %238, !dbg !15266

238:                                              ; preds = %233
  %239 = load i32, i32* %23, align 4, !dbg !15267
  %240 = add nsw i32 %239, 1, !dbg !15267
  store i32 %240, i32* %23, align 4, !dbg !15267
  br label %85, !dbg !15268, !llvm.loop !15269

241:                                              ; preds = %98
  br label %242, !dbg !15271

242:                                              ; preds = %241
  %243 = load i32, i32* %24, align 4, !dbg !15272
  %244 = add i32 %243, 1, !dbg !15272
  store i32 %244, i32* %24, align 4, !dbg !15272
  br label %71, !dbg !15273, !llvm.loop !15274

245:                                              ; preds = %71
  br label %246, !dbg !15276

246:                                              ; preds = %249, %245
  %247 = load i32, i32* %22, align 4, !dbg !15277
  %248 = icmp sgt i32 %247, 0, !dbg !15278
  br i1 %248, label %249, label %261, !dbg !15276

249:                                              ; preds = %246
  %250 = load i32, i32* %31, align 4, !dbg !15279
  %251 = lshr i32 %250, 24, !dbg !15281
  %252 = trunc i32 %251 to i8, !dbg !15282
  store i8 %252, i8* %32, align 1, !dbg !15283
  %253 = load i8, i8* %32, align 1, !dbg !15284
  %254 = load i8*, i8** %35, align 8, !dbg !15285
  %255 = getelementptr inbounds i8, i8* %254, i32 1, !dbg !15285
  store i8* %255, i8** %35, align 8, !dbg !15285
  store i8 %253, i8* %254, align 1, !dbg !15286
  %256 = load i32, i32* %31, align 4, !dbg !15287
  %257 = shl i32 %256, 8, !dbg !15288
  store i32 %257, i32* %31, align 4, !dbg !15289
  %258 = load i8, i8* %32, align 1, !dbg !15290
  store i8 %258, i8* %33, align 1, !dbg !15291
  %259 = load i32, i32* %22, align 4, !dbg !15292
  %260 = sub nsw i32 %259, 8, !dbg !15292
  store i32 %260, i32* %22, align 4, !dbg !15292
  br label %246, !dbg !15276, !llvm.loop !15293

261:                                              ; preds = %246
  store i32 0, i32* %11, align 4, !dbg !15295
  br label %262, !dbg !15295

262:                                              ; preds = %261, %43
  %263 = load i32, i32* %11, align 4, !dbg !15296
  ret i32 %263, !dbg !15296
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @extractContigSamplesShifted32bits(i8*, i8*, i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32, i32, i32) #0 !dbg !15297 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8*, align 8
  %41 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !15298, metadata !DIExpression()), !dbg !15299
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !15300, metadata !DIExpression()), !dbg !15301
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !15302, metadata !DIExpression()), !dbg !15303
  store i16 %3, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !15304, metadata !DIExpression()), !dbg !15305
  store i16 %4, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !15306, metadata !DIExpression()), !dbg !15307
  store i16 %5, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !15308, metadata !DIExpression()), !dbg !15309
  store i16 %6, i16* %18, align 2
  call void @llvm.dbg.declare(metadata i16* %18, metadata !15310, metadata !DIExpression()), !dbg !15311
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !15312, metadata !DIExpression()), !dbg !15313
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !15314, metadata !DIExpression()), !dbg !15315
  store i32 %9, i32* %21, align 4
  call void @llvm.dbg.declare(metadata i32* %21, metadata !15316, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.declare(metadata i32* %22, metadata !15318, metadata !DIExpression()), !dbg !15319
  store i32 0, i32* %22, align 4, !dbg !15319
  call void @llvm.dbg.declare(metadata i32* %23, metadata !15320, metadata !DIExpression()), !dbg !15321
  store i32 0, i32* %23, align 4, !dbg !15321
  call void @llvm.dbg.declare(metadata i32* %24, metadata !15322, metadata !DIExpression()), !dbg !15323
  store i32 0, i32* %24, align 4, !dbg !15323
  call void @llvm.dbg.declare(metadata i32* %25, metadata !15324, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.declare(metadata i32* %26, metadata !15326, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.declare(metadata i32* %27, metadata !15328, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.declare(metadata i32* %28, metadata !15330, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.declare(metadata i32* %29, metadata !15332, metadata !DIExpression()), !dbg !15333
  store i32 0, i32* %29, align 4, !dbg !15333
  call void @llvm.dbg.declare(metadata i32* %30, metadata !15334, metadata !DIExpression()), !dbg !15335
  store i32 0, i32* %30, align 4, !dbg !15335
  call void @llvm.dbg.declare(metadata i64* %31, metadata !15336, metadata !DIExpression()), !dbg !15337
  store i64 0, i64* %31, align 8, !dbg !15337
  call void @llvm.dbg.declare(metadata i64* %32, metadata !15338, metadata !DIExpression()), !dbg !15339
  store i64 0, i64* %32, align 8, !dbg !15339
  call void @llvm.dbg.declare(metadata i64* %33, metadata !15340, metadata !DIExpression()), !dbg !15341
  store i64 0, i64* %33, align 8, !dbg !15341
  call void @llvm.dbg.declare(metadata i64* %34, metadata !15342, metadata !DIExpression()), !dbg !15343
  store i64 0, i64* %34, align 8, !dbg !15343
  call void @llvm.dbg.declare(metadata i64* %35, metadata !15344, metadata !DIExpression()), !dbg !15345
  store i64 0, i64* %35, align 8, !dbg !15345
  call void @llvm.dbg.declare(metadata i8* %36, metadata !15346, metadata !DIExpression()), !dbg !15347
  store i8 0, i8* %36, align 1, !dbg !15347
  call void @llvm.dbg.declare(metadata i8* %37, metadata !15348, metadata !DIExpression()), !dbg !15349
  store i8 0, i8* %37, align 1, !dbg !15349
  call void @llvm.dbg.declare(metadata i8* %38, metadata !15350, metadata !DIExpression()), !dbg !15351
  store i8 0, i8* %38, align 1, !dbg !15351
  call void @llvm.dbg.declare(metadata i8* %39, metadata !15352, metadata !DIExpression()), !dbg !15353
  store i8 0, i8* %39, align 1, !dbg !15353
  call void @llvm.dbg.declare(metadata i8** %40, metadata !15354, metadata !DIExpression()), !dbg !15355
  %42 = load i8*, i8** %12, align 8, !dbg !15356
  store i8* %42, i8** %40, align 8, !dbg !15355
  call void @llvm.dbg.declare(metadata i8** %41, metadata !15357, metadata !DIExpression()), !dbg !15358
  %43 = load i8*, i8** %13, align 8, !dbg !15359
  store i8* %43, i8** %41, align 8, !dbg !15358
  %44 = load i8*, i8** %12, align 8, !dbg !15360
  %45 = icmp eq i8* %44, null, !dbg !15362
  br i1 %45, label %49, label %46, !dbg !15363

46:                                               ; preds = %10
  %47 = load i8*, i8** %13, align 8, !dbg !15364
  %48 = icmp eq i8* %47, null, !dbg !15365
  br i1 %48, label %49, label %50, !dbg !15366

49:                                               ; preds = %46, %10
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.315, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !15367
  store i32 1, i32* %11, align 4, !dbg !15369
  br label %298, !dbg !15369

50:                                               ; preds = %46
  %51 = load i32, i32* %19, align 4, !dbg !15370
  %52 = load i32, i32* %20, align 4, !dbg !15372
  %53 = icmp ugt i32 %51, %52, !dbg !15373
  br i1 %53, label %58, label %54, !dbg !15374

54:                                               ; preds = %50
  %55 = load i32, i32* %19, align 4, !dbg !15375
  %56 = load i32, i32* %14, align 4, !dbg !15376
  %57 = icmp ugt i32 %55, %56, !dbg !15377
  br i1 %57, label %58, label %60, !dbg !15378

58:                                               ; preds = %54, %50
  %59 = load i32, i32* %19, align 4, !dbg !15379
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.315, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.310, i64 0, i64 0), i32 %59), !dbg !15381
  store i32 0, i32* %19, align 4, !dbg !15382
  br label %60, !dbg !15383

60:                                               ; preds = %58, %54
  %61 = load i32, i32* %20, align 4, !dbg !15384
  %62 = icmp eq i32 %61, 0, !dbg !15386
  br i1 %62, label %67, label %63, !dbg !15387

63:                                               ; preds = %60
  %64 = load i32, i32* %20, align 4, !dbg !15388
  %65 = load i32, i32* %14, align 4, !dbg !15389
  %66 = icmp ugt i32 %64, %65, !dbg !15390
  br i1 %66, label %67, label %70, !dbg !15391

67:                                               ; preds = %63, %60
  %68 = load i32, i32* %20, align 4, !dbg !15392
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.315, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %68), !dbg !15394
  %69 = load i32, i32* %14, align 4, !dbg !15395
  store i32 %69, i32* %20, align 4, !dbg !15396
  br label %70, !dbg !15397

70:                                               ; preds = %67, %63
  %71 = load i16, i16* %17, align 2, !dbg !15398
  %72 = zext i16 %71 to i32, !dbg !15398
  %73 = add nsw i32 %72, 7, !dbg !15399
  %74 = sdiv i32 %73, 8, !dbg !15400
  %75 = add nsw i32 %74, 1, !dbg !15401
  store i32 %75, i32* %24, align 4, !dbg !15402
  %76 = load i32, i32* %21, align 4, !dbg !15403
  store i32 %76, i32* %22, align 4, !dbg !15404
  %77 = load i16, i16* %17, align 2, !dbg !15405
  %78 = zext i16 %77 to i32, !dbg !15405
  %79 = sub nsw i32 64, %78, !dbg !15406
  %80 = zext i32 %79 to i64, !dbg !15407
  %81 = lshr i64 -1, %80, !dbg !15407
  store i64 %81, i64* %31, align 8, !dbg !15408
  %82 = load i32, i32* %19, align 4, !dbg !15409
  store i32 %82, i32* %25, align 4, !dbg !15411
  br label %83, !dbg !15412

83:                                               ; preds = %279, %70
  %84 = load i32, i32* %25, align 4, !dbg !15413
  %85 = load i32, i32* %20, align 4, !dbg !15415
  %86 = icmp ult i32 %84, %85, !dbg !15416
  br i1 %86, label %87, label %282, !dbg !15417

87:                                               ; preds = %83
  %88 = load i32, i32* %25, align 4, !dbg !15418
  %89 = load i16, i16* %17, align 2, !dbg !15420
  %90 = zext i16 %89 to i32, !dbg !15420
  %91 = mul i32 %88, %90, !dbg !15421
  %92 = load i16, i16* %16, align 2, !dbg !15422
  %93 = zext i16 %92 to i32, !dbg !15422
  %94 = mul i32 %91, %93, !dbg !15423
  store i32 %94, i32* %28, align 4, !dbg !15424
  %95 = load i16, i16* %15, align 2, !dbg !15425
  %96 = zext i16 %95 to i32, !dbg !15425
  store i32 %96, i32* %23, align 4, !dbg !15427
  br label %97, !dbg !15428

97:                                               ; preds = %275, %87
  %98 = load i32, i32* %23, align 4, !dbg !15429
  %99 = load i16, i16* %16, align 2, !dbg !15431
  %100 = zext i16 %99 to i32, !dbg !15431
  %101 = icmp slt i32 %98, %100, !dbg !15432
  br i1 %101, label %102, label %110, !dbg !15433

102:                                              ; preds = %97
  %103 = load i32, i32* %23, align 4, !dbg !15434
  %104 = load i16, i16* %15, align 2, !dbg !15435
  %105 = zext i16 %104 to i32, !dbg !15435
  %106 = load i16, i16* %18, align 2, !dbg !15436
  %107 = zext i16 %106 to i32, !dbg !15436
  %108 = add nsw i32 %105, %107, !dbg !15437
  %109 = icmp slt i32 %103, %108, !dbg !15438
  br label %110

110:                                              ; preds = %102, %97
  %111 = phi i1 [ false, %97 ], [ %109, %102 ], !dbg !15439
  br i1 %111, label %112, label %278, !dbg !15440

112:                                              ; preds = %110
  %113 = load i32, i32* %23, align 4, !dbg !15441
  %114 = icmp eq i32 %113, 0, !dbg !15444
  br i1 %114, label %115, label %120, !dbg !15445

115:                                              ; preds = %112
  %116 = load i32, i32* %28, align 4, !dbg !15446
  %117 = udiv i32 %116, 8, !dbg !15448
  store i32 %117, i32* %26, align 4, !dbg !15449
  %118 = load i32, i32* %28, align 4, !dbg !15450
  %119 = urem i32 %118, 8, !dbg !15451
  store i32 %119, i32* %27, align 4, !dbg !15452
  br label %135, !dbg !15453

120:                                              ; preds = %112
  %121 = load i32, i32* %28, align 4, !dbg !15454
  %122 = load i32, i32* %23, align 4, !dbg !15456
  %123 = load i16, i16* %17, align 2, !dbg !15457
  %124 = zext i16 %123 to i32, !dbg !15457
  %125 = mul nsw i32 %122, %124, !dbg !15458
  %126 = add i32 %121, %125, !dbg !15459
  %127 = udiv i32 %126, 8, !dbg !15460
  store i32 %127, i32* %26, align 4, !dbg !15461
  %128 = load i32, i32* %28, align 4, !dbg !15462
  %129 = load i32, i32* %23, align 4, !dbg !15463
  %130 = load i16, i16* %17, align 2, !dbg !15464
  %131 = zext i16 %130 to i32, !dbg !15464
  %132 = mul nsw i32 %129, %131, !dbg !15465
  %133 = add i32 %128, %132, !dbg !15466
  %134 = urem i32 %133, 8, !dbg !15467
  store i32 %134, i32* %27, align 4, !dbg !15468
  br label %135

135:                                              ; preds = %120, %115
  %136 = load i8*, i8** %12, align 8, !dbg !15469
  %137 = load i32, i32* %26, align 4, !dbg !15470
  %138 = zext i32 %137 to i64, !dbg !15471
  %139 = getelementptr inbounds i8, i8* %136, i64 %138, !dbg !15471
  store i8* %139, i8** %40, align 8, !dbg !15472
  %140 = load i64, i64* %31, align 8, !dbg !15473
  %141 = load i32, i32* %27, align 4, !dbg !15474
  %142 = sub i32 64, %141, !dbg !15475
  %143 = load i16, i16* %17, align 2, !dbg !15476
  %144 = zext i16 %143 to i32, !dbg !15476
  %145 = sub i32 %142, %144, !dbg !15477
  %146 = zext i32 %145 to i64, !dbg !15478
  %147 = shl i64 %140, %146, !dbg !15478
  store i64 %147, i64* %32, align 8, !dbg !15479
  %148 = load i32, i32* @little_endian, align 4, !dbg !15480
  %149 = icmp ne i32 %148, 0, !dbg !15480
  br i1 %149, label %150, label %174, !dbg !15482

150:                                              ; preds = %135
  %151 = load i8*, i8** %40, align 8, !dbg !15483
  %152 = getelementptr inbounds i8, i8* %151, i64 0, !dbg !15483
  %153 = load i8, i8* %152, align 1, !dbg !15483
  %154 = zext i8 %153 to i32, !dbg !15483
  %155 = shl i32 %154, 24, !dbg !15485
  %156 = load i8*, i8** %40, align 8, !dbg !15486
  %157 = getelementptr inbounds i8, i8* %156, i64 1, !dbg !15486
  %158 = load i8, i8* %157, align 1, !dbg !15486
  %159 = zext i8 %158 to i32, !dbg !15486
  %160 = shl i32 %159, 16, !dbg !15487
  %161 = or i32 %155, %160, !dbg !15488
  %162 = load i8*, i8** %40, align 8, !dbg !15489
  %163 = getelementptr inbounds i8, i8* %162, i64 2, !dbg !15489
  %164 = load i8, i8* %163, align 1, !dbg !15489
  %165 = zext i8 %164 to i32, !dbg !15489
  %166 = shl i32 %165, 8, !dbg !15490
  %167 = or i32 %161, %166, !dbg !15491
  %168 = load i8*, i8** %40, align 8, !dbg !15492
  %169 = getelementptr inbounds i8, i8* %168, i64 3, !dbg !15492
  %170 = load i8, i8* %169, align 1, !dbg !15492
  %171 = zext i8 %170 to i32, !dbg !15492
  %172 = or i32 %167, %171, !dbg !15493
  store i32 %172, i32* %29, align 4, !dbg !15494
  %173 = load i32, i32* %29, align 4, !dbg !15495
  store i32 %173, i32* %30, align 4, !dbg !15496
  br label %198, !dbg !15497

174:                                              ; preds = %135
  %175 = load i8*, i8** %40, align 8, !dbg !15498
  %176 = getelementptr inbounds i8, i8* %175, i64 3, !dbg !15498
  %177 = load i8, i8* %176, align 1, !dbg !15498
  %178 = zext i8 %177 to i32, !dbg !15498
  %179 = shl i32 %178, 24, !dbg !15500
  %180 = load i8*, i8** %40, align 8, !dbg !15501
  %181 = getelementptr inbounds i8, i8* %180, i64 2, !dbg !15501
  %182 = load i8, i8* %181, align 1, !dbg !15501
  %183 = zext i8 %182 to i32, !dbg !15501
  %184 = shl i32 %183, 16, !dbg !15502
  %185 = or i32 %179, %184, !dbg !15503
  %186 = load i8*, i8** %40, align 8, !dbg !15504
  %187 = getelementptr inbounds i8, i8* %186, i64 1, !dbg !15504
  %188 = load i8, i8* %187, align 1, !dbg !15504
  %189 = zext i8 %188 to i32, !dbg !15504
  %190 = shl i32 %189, 8, !dbg !15505
  %191 = or i32 %185, %190, !dbg !15506
  %192 = load i8*, i8** %40, align 8, !dbg !15507
  %193 = getelementptr inbounds i8, i8* %192, i64 0, !dbg !15507
  %194 = load i8, i8* %193, align 1, !dbg !15507
  %195 = zext i8 %194 to i32, !dbg !15507
  %196 = or i32 %191, %195, !dbg !15508
  store i32 %196, i32* %29, align 4, !dbg !15509
  %197 = load i32, i32* %29, align 4, !dbg !15510
  store i32 %197, i32* %30, align 4, !dbg !15511
  br label %198

198:                                              ; preds = %174, %150
  %199 = load i32, i32* %29, align 4, !dbg !15512
  %200 = zext i32 %199 to i64, !dbg !15513
  %201 = shl i64 %200, 32, !dbg !15514
  %202 = load i32, i32* %30, align 4, !dbg !15515
  %203 = zext i32 %202 to i64, !dbg !15515
  %204 = or i64 %201, %203, !dbg !15516
  store i64 %204, i64* %35, align 8, !dbg !15517
  %205 = load i32, i32* %25, align 4, !dbg !15518
  %206 = load i32, i32* %19, align 4, !dbg !15520
  %207 = icmp eq i32 %205, %206, !dbg !15521
  br i1 %207, label %208, label %220, !dbg !15522

208:                                              ; preds = %198
  %209 = load i32, i32* %23, align 4, !dbg !15523
  %210 = load i16, i16* %15, align 2, !dbg !15524
  %211 = zext i16 %210 to i32, !dbg !15524
  %212 = icmp eq i32 %209, %211, !dbg !15525
  br i1 %212, label %213, label %220, !dbg !15526

213:                                              ; preds = %208
  %214 = load i64, i64* %35, align 8, !dbg !15527
  %215 = load i32, i32* %21, align 4, !dbg !15528
  %216 = sub nsw i32 32, %215, !dbg !15529
  %217 = zext i32 %216 to i64, !dbg !15530
  %218 = shl i64 -1, %217, !dbg !15530
  %219 = and i64 %214, %218, !dbg !15531
  store i64 %219, i64* %34, align 8, !dbg !15532
  br label %220, !dbg !15533

220:                                              ; preds = %213, %208, %198
  %221 = load i64, i64* %35, align 8, !dbg !15534
  %222 = load i64, i64* %32, align 8, !dbg !15535
  %223 = and i64 %221, %222, !dbg !15536
  %224 = load i32, i32* %27, align 4, !dbg !15537
  %225 = zext i32 %224 to i64, !dbg !15538
  %226 = shl i64 %223, %225, !dbg !15538
  store i64 %226, i64* %33, align 8, !dbg !15539
  %227 = load i32, i32* %22, align 4, !dbg !15540
  %228 = icmp slt i32 %227, 32, !dbg !15542
  br i1 %228, label %229, label %236, !dbg !15543

229:                                              ; preds = %220
  store i8 0, i8* %39, align 1, !dbg !15544
  store i8 0, i8* %38, align 1, !dbg !15546
  store i8 0, i8* %37, align 1, !dbg !15547
  store i8 0, i8* %36, align 1, !dbg !15548
  %230 = load i64, i64* %34, align 8, !dbg !15549
  %231 = load i64, i64* %33, align 8, !dbg !15550
  %232 = load i32, i32* %22, align 4, !dbg !15551
  %233 = zext i32 %232 to i64, !dbg !15552
  %234 = lshr i64 %231, %233, !dbg !15552
  %235 = or i64 %230, %234, !dbg !15553
  store i64 %235, i64* %34, align 8, !dbg !15554
  br label %270, !dbg !15555

236:                                              ; preds = %220
  %237 = load i64, i64* %34, align 8, !dbg !15556
  %238 = lshr i64 %237, 56, !dbg !15558
  %239 = trunc i64 %238 to i8, !dbg !15559
  store i8 %239, i8* %36, align 1, !dbg !15560
  %240 = load i8, i8* %36, align 1, !dbg !15561
  %241 = load i8*, i8** %41, align 8, !dbg !15562
  %242 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !15562
  store i8* %242, i8** %41, align 8, !dbg !15562
  store i8 %240, i8* %241, align 1, !dbg !15563
  %243 = load i64, i64* %34, align 8, !dbg !15564
  %244 = lshr i64 %243, 48, !dbg !15565
  %245 = trunc i64 %244 to i8, !dbg !15566
  store i8 %245, i8* %37, align 1, !dbg !15567
  %246 = load i8, i8* %37, align 1, !dbg !15568
  %247 = load i8*, i8** %41, align 8, !dbg !15569
  %248 = getelementptr inbounds i8, i8* %247, i32 1, !dbg !15569
  store i8* %248, i8** %41, align 8, !dbg !15569
  store i8 %246, i8* %247, align 1, !dbg !15570
  %249 = load i64, i64* %34, align 8, !dbg !15571
  %250 = lshr i64 %249, 40, !dbg !15572
  %251 = trunc i64 %250 to i8, !dbg !15573
  store i8 %251, i8* %38, align 1, !dbg !15574
  %252 = load i8, i8* %38, align 1, !dbg !15575
  %253 = load i8*, i8** %41, align 8, !dbg !15576
  %254 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !15576
  store i8* %254, i8** %41, align 8, !dbg !15576
  store i8 %252, i8* %253, align 1, !dbg !15577
  %255 = load i64, i64* %34, align 8, !dbg !15578
  %256 = lshr i64 %255, 32, !dbg !15579
  %257 = trunc i64 %256 to i8, !dbg !15580
  store i8 %257, i8* %39, align 1, !dbg !15581
  %258 = load i8, i8* %39, align 1, !dbg !15582
  %259 = load i8*, i8** %41, align 8, !dbg !15583
  %260 = getelementptr inbounds i8, i8* %259, i32 1, !dbg !15583
  store i8* %260, i8** %41, align 8, !dbg !15583
  store i8 %258, i8* %259, align 1, !dbg !15584
  %261 = load i32, i32* %22, align 4, !dbg !15585
  %262 = sub nsw i32 %261, 32, !dbg !15585
  store i32 %262, i32* %22, align 4, !dbg !15585
  %263 = load i64, i64* %34, align 8, !dbg !15586
  %264 = shl i64 %263, 32, !dbg !15587
  %265 = load i64, i64* %33, align 8, !dbg !15588
  %266 = load i32, i32* %22, align 4, !dbg !15589
  %267 = zext i32 %266 to i64, !dbg !15590
  %268 = lshr i64 %265, %267, !dbg !15590
  %269 = or i64 %264, %268, !dbg !15591
  store i64 %269, i64* %34, align 8, !dbg !15592
  br label %270

270:                                              ; preds = %236, %229
  %271 = load i16, i16* %17, align 2, !dbg !15593
  %272 = zext i16 %271 to i32, !dbg !15593
  %273 = load i32, i32* %22, align 4, !dbg !15594
  %274 = add nsw i32 %273, %272, !dbg !15594
  store i32 %274, i32* %22, align 4, !dbg !15594
  br label %275, !dbg !15595

275:                                              ; preds = %270
  %276 = load i32, i32* %23, align 4, !dbg !15596
  %277 = add nsw i32 %276, 1, !dbg !15596
  store i32 %277, i32* %23, align 4, !dbg !15596
  br label %97, !dbg !15597, !llvm.loop !15598

278:                                              ; preds = %110
  br label %279, !dbg !15600

279:                                              ; preds = %278
  %280 = load i32, i32* %25, align 4, !dbg !15601
  %281 = add i32 %280, 1, !dbg !15601
  store i32 %281, i32* %25, align 4, !dbg !15601
  br label %83, !dbg !15602, !llvm.loop !15603

282:                                              ; preds = %83
  br label %283, !dbg !15605

283:                                              ; preds = %286, %282
  %284 = load i32, i32* %22, align 4, !dbg !15606
  %285 = icmp sgt i32 %284, 0, !dbg !15607
  br i1 %285, label %286, label %297, !dbg !15605

286:                                              ; preds = %283
  %287 = load i64, i64* %34, align 8, !dbg !15608
  %288 = lshr i64 %287, 56, !dbg !15610
  %289 = trunc i64 %288 to i8, !dbg !15611
  store i8 %289, i8* %36, align 1, !dbg !15612
  %290 = load i8, i8* %36, align 1, !dbg !15613
  %291 = load i8*, i8** %41, align 8, !dbg !15614
  %292 = getelementptr inbounds i8, i8* %291, i32 1, !dbg !15614
  store i8* %292, i8** %41, align 8, !dbg !15614
  store i8 %290, i8* %291, align 1, !dbg !15615
  %293 = load i64, i64* %34, align 8, !dbg !15616
  %294 = shl i64 %293, 8, !dbg !15617
  store i64 %294, i64* %34, align 8, !dbg !15618
  %295 = load i32, i32* %22, align 4, !dbg !15619
  %296 = sub nsw i32 %295, 8, !dbg !15619
  store i32 %296, i32* %22, align 4, !dbg !15619
  br label %283, !dbg !15605, !llvm.loop !15620

297:                                              ; preds = %283
  store i32 0, i32* %11, align 4, !dbg !15622
  br label %298, !dbg !15622

298:                                              ; preds = %297, %49
  %299 = load i32, i32* %11, align 4, !dbg !15623
  ret i32 %299, !dbg !15623
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @computeInputPixelOffsets(%struct.crop_mask*, %struct.image_data*, %struct.offset*) #0 !dbg !15624 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.crop_mask*, align 8
  %6 = alloca %struct.image_data*, align 8
  %7 = alloca %struct.offset*, align 8
  %8 = alloca double, align 8
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  store %struct.crop_mask* %0, %struct.crop_mask** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.crop_mask** %5, metadata !15628, metadata !DIExpression()), !dbg !15629
  store %struct.image_data* %1, %struct.image_data** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.image_data** %6, metadata !15630, metadata !DIExpression()), !dbg !15631
  store %struct.offset* %2, %struct.offset** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.offset** %7, metadata !15632, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.declare(metadata double* %8, metadata !15634, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.declare(metadata float* %9, metadata !15636, metadata !DIExpression()), !dbg !15637
  call void @llvm.dbg.declare(metadata float* %10, metadata !15638, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.declare(metadata i32* %11, metadata !15640, metadata !DIExpression()), !dbg !15641
  call void @llvm.dbg.declare(metadata i32* %12, metadata !15642, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.declare(metadata i32* %13, metadata !15644, metadata !DIExpression()), !dbg !15645
  call void @llvm.dbg.declare(metadata i32* %14, metadata !15646, metadata !DIExpression()), !dbg !15647
  call void @llvm.dbg.declare(metadata i32* %15, metadata !15648, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.declare(metadata i32* %16, metadata !15650, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.declare(metadata i32* %17, metadata !15652, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.declare(metadata i32* %18, metadata !15654, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.declare(metadata i32* %19, metadata !15656, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.declare(metadata i32* %20, metadata !15658, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.declare(metadata i32* %21, metadata !15660, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.declare(metadata i32* %22, metadata !15662, metadata !DIExpression()), !dbg !15663
  call void @llvm.dbg.declare(metadata i32* %23, metadata !15664, metadata !DIExpression()), !dbg !15665
  call void @llvm.dbg.declare(metadata i32* %24, metadata !15666, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.declare(metadata i32* %25, metadata !15668, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.declare(metadata i32* %26, metadata !15670, metadata !DIExpression()), !dbg !15671
  call void @llvm.dbg.declare(metadata i32* %27, metadata !15672, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.declare(metadata i32* %28, metadata !15674, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.declare(metadata i32* %29, metadata !15676, metadata !DIExpression()), !dbg !15677
  call void @llvm.dbg.declare(metadata i32* %30, metadata !15678, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.declare(metadata i32* %31, metadata !15680, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.declare(metadata i32* %32, metadata !15682, metadata !DIExpression()), !dbg !15683
  %33 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15684
  %34 = getelementptr inbounds %struct.image_data, %struct.image_data* %33, i32 0, i32 4, !dbg !15686
  %35 = load i16, i16* %34, align 4, !dbg !15686
  %36 = zext i16 %35 to i32, !dbg !15684
  %37 = icmp ne i32 %36, 2, !dbg !15687
  br i1 %37, label %38, label %45, !dbg !15688

38:                                               ; preds = %3
  %39 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15689
  %40 = getelementptr inbounds %struct.image_data, %struct.image_data* %39, i32 0, i32 4, !dbg !15690
  %41 = load i16, i16* %40, align 4, !dbg !15690
  %42 = zext i16 %41 to i32, !dbg !15689
  %43 = icmp ne i32 %42, 3, !dbg !15691
  br i1 %43, label %44, label %45, !dbg !15692

44:                                               ; preds = %38
  store float 1.000000e+00, float* %9, align 4, !dbg !15693
  store float 1.000000e+00, float* %10, align 4, !dbg !15695
  br label %97, !dbg !15696

45:                                               ; preds = %38, %3
  %46 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15697
  %47 = getelementptr inbounds %struct.image_data, %struct.image_data* %46, i32 0, i32 0, !dbg !15700
  %48 = load float, float* %47, align 4, !dbg !15700
  %49 = fcmp oeq float %48, 0.000000e+00, !dbg !15701
  br i1 %49, label %55, label %50, !dbg !15702

50:                                               ; preds = %45
  %51 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15703
  %52 = getelementptr inbounds %struct.image_data, %struct.image_data* %51, i32 0, i32 1, !dbg !15704
  %53 = load float, float* %52, align 4, !dbg !15704
  %54 = fcmp oeq float %53, 0.000000e+00, !dbg !15705
  br i1 %54, label %55, label %90, !dbg !15706

55:                                               ; preds = %50, %45
  %56 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15707
  %57 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %56, i32 0, i32 11, !dbg !15708
  %58 = load i16, i16* %57, align 2, !dbg !15708
  %59 = zext i16 %58 to i32, !dbg !15707
  %60 = icmp ne i32 %59, 1, !dbg !15709
  br i1 %60, label %61, label %90, !dbg !15710

61:                                               ; preds = %55
  %62 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15711
  %63 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %62, i32 0, i32 10, !dbg !15712
  %64 = load i16, i16* %63, align 8, !dbg !15712
  %65 = zext i16 %64 to i32, !dbg !15711
  %66 = and i32 %65, 16, !dbg !15713
  %67 = icmp ne i32 %66, 0, !dbg !15713
  br i1 %67, label %89, label %68, !dbg !15714

68:                                               ; preds = %61
  %69 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15715
  %70 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %69, i32 0, i32 10, !dbg !15716
  %71 = load i16, i16* %70, align 8, !dbg !15716
  %72 = zext i16 %71 to i32, !dbg !15715
  %73 = and i32 %72, 1, !dbg !15717
  %74 = icmp ne i32 %73, 0, !dbg !15717
  br i1 %74, label %89, label %75, !dbg !15718

75:                                               ; preds = %68
  %76 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15719
  %77 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %76, i32 0, i32 10, !dbg !15720
  %78 = load i16, i16* %77, align 8, !dbg !15720
  %79 = zext i16 %78 to i32, !dbg !15719
  %80 = and i32 %79, 4, !dbg !15721
  %81 = icmp ne i32 %80, 0, !dbg !15721
  br i1 %81, label %89, label %82, !dbg !15722

82:                                               ; preds = %75
  %83 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15723
  %84 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %83, i32 0, i32 10, !dbg !15724
  %85 = load i16, i16* %84, align 8, !dbg !15724
  %86 = zext i16 %85 to i32, !dbg !15723
  %87 = and i32 %86, 2, !dbg !15725
  %88 = icmp ne i32 %87, 0, !dbg !15725
  br i1 %88, label %89, label %90, !dbg !15726

89:                                               ; preds = %82, %75, %68, %61
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.228, i64 0, i64 0)), !dbg !15727
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.229, i64 0, i64 0)), !dbg !15729
  store i32 -1, i32* %4, align 4, !dbg !15730
  br label %848, !dbg !15730

90:                                               ; preds = %82, %55, %50
  %91 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15731
  %92 = getelementptr inbounds %struct.image_data, %struct.image_data* %91, i32 0, i32 0, !dbg !15732
  %93 = load float, float* %92, align 4, !dbg !15732
  store float %93, float* %9, align 4, !dbg !15733
  %94 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15734
  %95 = getelementptr inbounds %struct.image_data, %struct.image_data* %94, i32 0, i32 1, !dbg !15735
  %96 = load float, float* %95, align 4, !dbg !15735
  store float %96, float* %10, align 4, !dbg !15736
  br label %97

97:                                               ; preds = %90, %44
  store double 1.000000e+00, double* %8, align 8, !dbg !15737
  %98 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15738
  %99 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %98, i32 0, i32 11, !dbg !15739
  %100 = load i16, i16* %99, align 2, !dbg !15739
  %101 = zext i16 %100 to i32, !dbg !15738
  switch i32 %101, label %119 [
    i32 3, label %102
    i32 2, label %110
    i32 1, label %118
  ], !dbg !15740

102:                                              ; preds = %97
  %103 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15741
  %104 = getelementptr inbounds %struct.image_data, %struct.image_data* %103, i32 0, i32 4, !dbg !15744
  %105 = load i16, i16* %104, align 4, !dbg !15744
  %106 = zext i16 %105 to i32, !dbg !15741
  %107 = icmp eq i32 %106, 2, !dbg !15745
  br i1 %107, label %108, label %109, !dbg !15746

108:                                              ; preds = %102
  store double 0x3FD93264C993264C, double* %8, align 8, !dbg !15747
  br label %109, !dbg !15748

109:                                              ; preds = %108, %102
  br label %120, !dbg !15749

110:                                              ; preds = %97
  %111 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15750
  %112 = getelementptr inbounds %struct.image_data, %struct.image_data* %111, i32 0, i32 4, !dbg !15752
  %113 = load i16, i16* %112, align 4, !dbg !15752
  %114 = zext i16 %113 to i32, !dbg !15750
  %115 = icmp eq i32 %114, 3, !dbg !15753
  br i1 %115, label %116, label %117, !dbg !15754

116:                                              ; preds = %110
  store double 2.540000e+00, double* %8, align 8, !dbg !15755
  br label %117, !dbg !15756

117:                                              ; preds = %116, %110
  br label %120, !dbg !15757

118:                                              ; preds = %97
  br label %119, !dbg !15757

119:                                              ; preds = %118, %97
  br label %120, !dbg !15758

120:                                              ; preds = %119, %117, %109
  %121 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15759
  %122 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %121, i32 0, i32 10, !dbg !15761
  %123 = load i16, i16* %122, align 8, !dbg !15761
  %124 = zext i16 %123 to i32, !dbg !15759
  %125 = and i32 %124, 16, !dbg !15762
  %126 = icmp ne i32 %125, 0, !dbg !15762
  br i1 %126, label %127, label %433, !dbg !15763

127:                                              ; preds = %120
  store i32 0, i32* %25, align 4, !dbg !15764
  store i32 0, i32* %24, align 4, !dbg !15766
  store i32 0, i32* %23, align 4, !dbg !15767
  br label %128, !dbg !15769

128:                                              ; preds = %429, %127
  %129 = load i32, i32* %23, align 4, !dbg !15770
  %130 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15772
  %131 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %130, i32 0, i32 18, !dbg !15773
  %132 = load i16, i16* %131, align 8, !dbg !15773
  %133 = zext i16 %132 to i32, !dbg !15772
  %134 = icmp ult i32 %129, %133, !dbg !15774
  br i1 %134, label %135, label %432, !dbg !15775

135:                                              ; preds = %128
  %136 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15776
  %137 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %136, i32 0, i32 11, !dbg !15779
  %138 = load i16, i16* %137, align 2, !dbg !15779
  %139 = zext i16 %138 to i32, !dbg !15776
  %140 = icmp eq i32 %139, 2, !dbg !15780
  br i1 %140, label %147, label %141, !dbg !15781

141:                                              ; preds = %135
  %142 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15782
  %143 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %142, i32 0, i32 11, !dbg !15783
  %144 = load i16, i16* %143, align 2, !dbg !15783
  %145 = zext i16 %144 to i32, !dbg !15782
  %146 = icmp eq i32 %145, 3, !dbg !15784
  br i1 %146, label %147, label %200, !dbg !15785

147:                                              ; preds = %141, %135
  %148 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15786
  %149 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %148, i32 0, i32 22, !dbg !15788
  %150 = load i32, i32* %23, align 4, !dbg !15789
  %151 = zext i32 %150 to i64, !dbg !15786
  %152 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %149, i64 0, i64 %151, !dbg !15786
  %153 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %152, i32 0, i32 0, !dbg !15790
  %154 = load double, double* %153, align 8, !dbg !15790
  %155 = load double, double* %8, align 8, !dbg !15791
  %156 = fmul double %154, %155, !dbg !15792
  %157 = load float, float* %9, align 4, !dbg !15793
  %158 = fpext float %157 to double, !dbg !15793
  %159 = fmul double %156, %158, !dbg !15794
  %160 = fptoui double %159 to i32, !dbg !15795
  store i32 %160, i32* %29, align 4, !dbg !15796
  %161 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15797
  %162 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %161, i32 0, i32 22, !dbg !15798
  %163 = load i32, i32* %23, align 4, !dbg !15799
  %164 = zext i32 %163 to i64, !dbg !15797
  %165 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %162, i64 0, i64 %164, !dbg !15797
  %166 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %165, i32 0, i32 1, !dbg !15800
  %167 = load double, double* %166, align 8, !dbg !15800
  %168 = load double, double* %8, align 8, !dbg !15801
  %169 = fmul double %167, %168, !dbg !15802
  %170 = load float, float* %9, align 4, !dbg !15803
  %171 = fpext float %170 to double, !dbg !15803
  %172 = fmul double %169, %171, !dbg !15804
  %173 = fptoui double %172 to i32, !dbg !15805
  store i32 %173, i32* %30, align 4, !dbg !15806
  %174 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15807
  %175 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %174, i32 0, i32 22, !dbg !15808
  %176 = load i32, i32* %23, align 4, !dbg !15809
  %177 = zext i32 %176 to i64, !dbg !15807
  %178 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %175, i64 0, i64 %177, !dbg !15807
  %179 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %178, i32 0, i32 2, !dbg !15810
  %180 = load double, double* %179, align 8, !dbg !15810
  %181 = load double, double* %8, align 8, !dbg !15811
  %182 = fmul double %180, %181, !dbg !15812
  %183 = load float, float* %10, align 4, !dbg !15813
  %184 = fpext float %183 to double, !dbg !15813
  %185 = fmul double %182, %184, !dbg !15814
  %186 = fptoui double %185 to i32, !dbg !15815
  store i32 %186, i32* %31, align 4, !dbg !15816
  %187 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15817
  %188 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %187, i32 0, i32 22, !dbg !15818
  %189 = load i32, i32* %23, align 4, !dbg !15819
  %190 = zext i32 %189 to i64, !dbg !15817
  %191 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %188, i64 0, i64 %190, !dbg !15817
  %192 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %191, i32 0, i32 3, !dbg !15820
  %193 = load double, double* %192, align 8, !dbg !15820
  %194 = load double, double* %8, align 8, !dbg !15821
  %195 = fmul double %193, %194, !dbg !15822
  %196 = load float, float* %10, align 4, !dbg !15823
  %197 = fpext float %196 to double, !dbg !15823
  %198 = fmul double %195, %197, !dbg !15824
  %199 = fptoui double %198 to i32, !dbg !15825
  store i32 %199, i32* %32, align 4, !dbg !15826
  br label %233, !dbg !15827

200:                                              ; preds = %141
  %201 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15828
  %202 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %201, i32 0, i32 22, !dbg !15830
  %203 = load i32, i32* %23, align 4, !dbg !15831
  %204 = zext i32 %203 to i64, !dbg !15828
  %205 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %202, i64 0, i64 %204, !dbg !15828
  %206 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %205, i32 0, i32 0, !dbg !15832
  %207 = load double, double* %206, align 8, !dbg !15832
  %208 = fptoui double %207 to i32, !dbg !15833
  store i32 %208, i32* %29, align 4, !dbg !15834
  %209 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15835
  %210 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %209, i32 0, i32 22, !dbg !15836
  %211 = load i32, i32* %23, align 4, !dbg !15837
  %212 = zext i32 %211 to i64, !dbg !15835
  %213 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %210, i64 0, i64 %212, !dbg !15835
  %214 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %213, i32 0, i32 1, !dbg !15838
  %215 = load double, double* %214, align 8, !dbg !15838
  %216 = fptoui double %215 to i32, !dbg !15839
  store i32 %216, i32* %30, align 4, !dbg !15840
  %217 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15841
  %218 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %217, i32 0, i32 22, !dbg !15842
  %219 = load i32, i32* %23, align 4, !dbg !15843
  %220 = zext i32 %219 to i64, !dbg !15841
  %221 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %218, i64 0, i64 %220, !dbg !15841
  %222 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %221, i32 0, i32 2, !dbg !15844
  %223 = load double, double* %222, align 8, !dbg !15844
  %224 = fptoui double %223 to i32, !dbg !15845
  store i32 %224, i32* %31, align 4, !dbg !15846
  %225 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15847
  %226 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %225, i32 0, i32 22, !dbg !15848
  %227 = load i32, i32* %23, align 4, !dbg !15849
  %228 = zext i32 %227 to i64, !dbg !15847
  %229 = getelementptr inbounds [8 x %struct.coordpairs], [8 x %struct.coordpairs]* %226, i64 0, i64 %228, !dbg !15847
  %230 = getelementptr inbounds %struct.coordpairs, %struct.coordpairs* %229, i32 0, i32 3, !dbg !15850
  %231 = load double, double* %230, align 8, !dbg !15850
  %232 = fptoui double %231 to i32, !dbg !15851
  store i32 %232, i32* %32, align 4, !dbg !15852
  br label %233

233:                                              ; preds = %200, %147
  %234 = load i32, i32* %29, align 4, !dbg !15853
  %235 = icmp ult i32 %234, 1, !dbg !15855
  br i1 %235, label %236, label %243, !dbg !15856

236:                                              ; preds = %233
  %237 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15857
  %238 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %237, i32 0, i32 19, !dbg !15858
  %239 = load i32, i32* %23, align 4, !dbg !15859
  %240 = zext i32 %239 to i64, !dbg !15857
  %241 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %238, i64 0, i64 %240, !dbg !15857
  %242 = getelementptr inbounds %struct.region, %struct.region* %241, i32 0, i32 0, !dbg !15860
  store i32 0, i32* %242, align 8, !dbg !15861
  br label %252, !dbg !15857

243:                                              ; preds = %233
  %244 = load i32, i32* %29, align 4, !dbg !15862
  %245 = sub i32 %244, 1, !dbg !15863
  %246 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15864
  %247 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %246, i32 0, i32 19, !dbg !15865
  %248 = load i32, i32* %23, align 4, !dbg !15866
  %249 = zext i32 %248 to i64, !dbg !15864
  %250 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %247, i64 0, i64 %249, !dbg !15864
  %251 = getelementptr inbounds %struct.region, %struct.region* %250, i32 0, i32 0, !dbg !15867
  store i32 %245, i32* %251, align 8, !dbg !15868
  br label %252

252:                                              ; preds = %243, %236
  %253 = load i32, i32* %30, align 4, !dbg !15869
  %254 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15871
  %255 = getelementptr inbounds %struct.image_data, %struct.image_data* %254, i32 0, i32 2, !dbg !15872
  %256 = load i32, i32* %255, align 4, !dbg !15872
  %257 = sub i32 %256, 1, !dbg !15873
  %258 = icmp ugt i32 %253, %257, !dbg !15874
  br i1 %258, label %259, label %270, !dbg !15875

259:                                              ; preds = %252
  %260 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15876
  %261 = getelementptr inbounds %struct.image_data, %struct.image_data* %260, i32 0, i32 2, !dbg !15877
  %262 = load i32, i32* %261, align 4, !dbg !15877
  %263 = sub i32 %262, 1, !dbg !15878
  %264 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15879
  %265 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %264, i32 0, i32 19, !dbg !15880
  %266 = load i32, i32* %23, align 4, !dbg !15881
  %267 = zext i32 %266 to i64, !dbg !15879
  %268 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %265, i64 0, i64 %267, !dbg !15879
  %269 = getelementptr inbounds %struct.region, %struct.region* %268, i32 0, i32 1, !dbg !15882
  store i32 %263, i32* %269, align 4, !dbg !15883
  br label %279, !dbg !15879

270:                                              ; preds = %252
  %271 = load i32, i32* %30, align 4, !dbg !15884
  %272 = sub i32 %271, 1, !dbg !15885
  %273 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15886
  %274 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %273, i32 0, i32 19, !dbg !15887
  %275 = load i32, i32* %23, align 4, !dbg !15888
  %276 = zext i32 %275 to i64, !dbg !15886
  %277 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %274, i64 0, i64 %276, !dbg !15886
  %278 = getelementptr inbounds %struct.region, %struct.region* %277, i32 0, i32 1, !dbg !15889
  store i32 %272, i32* %278, align 4, !dbg !15890
  br label %279

279:                                              ; preds = %270, %259
  %280 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15891
  %281 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %280, i32 0, i32 19, !dbg !15892
  %282 = load i32, i32* %23, align 4, !dbg !15893
  %283 = zext i32 %282 to i64, !dbg !15891
  %284 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %281, i64 0, i64 %283, !dbg !15891
  %285 = getelementptr inbounds %struct.region, %struct.region* %284, i32 0, i32 1, !dbg !15894
  %286 = load i32, i32* %285, align 4, !dbg !15894
  %287 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15895
  %288 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %287, i32 0, i32 19, !dbg !15896
  %289 = load i32, i32* %23, align 4, !dbg !15897
  %290 = zext i32 %289 to i64, !dbg !15895
  %291 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %288, i64 0, i64 %290, !dbg !15895
  %292 = getelementptr inbounds %struct.region, %struct.region* %291, i32 0, i32 0, !dbg !15898
  %293 = load i32, i32* %292, align 8, !dbg !15898
  %294 = sub i32 %286, %293, !dbg !15899
  %295 = add i32 %294, 1, !dbg !15900
  store i32 %295, i32* %26, align 4, !dbg !15901
  %296 = load i32, i32* %31, align 4, !dbg !15902
  %297 = icmp ult i32 %296, 1, !dbg !15904
  br i1 %297, label %298, label %305, !dbg !15905

298:                                              ; preds = %279
  %299 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15906
  %300 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %299, i32 0, i32 19, !dbg !15907
  %301 = load i32, i32* %23, align 4, !dbg !15908
  %302 = zext i32 %301 to i64, !dbg !15906
  %303 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %300, i64 0, i64 %302, !dbg !15906
  %304 = getelementptr inbounds %struct.region, %struct.region* %303, i32 0, i32 2, !dbg !15909
  store i32 0, i32* %304, align 8, !dbg !15910
  br label %314, !dbg !15906

305:                                              ; preds = %279
  %306 = load i32, i32* %31, align 4, !dbg !15911
  %307 = sub i32 %306, 1, !dbg !15912
  %308 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15913
  %309 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %308, i32 0, i32 19, !dbg !15914
  %310 = load i32, i32* %23, align 4, !dbg !15915
  %311 = zext i32 %310 to i64, !dbg !15913
  %312 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %309, i64 0, i64 %311, !dbg !15913
  %313 = getelementptr inbounds %struct.region, %struct.region* %312, i32 0, i32 2, !dbg !15916
  store i32 %307, i32* %313, align 8, !dbg !15917
  br label %314

314:                                              ; preds = %305, %298
  %315 = load i32, i32* %32, align 4, !dbg !15918
  %316 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15920
  %317 = getelementptr inbounds %struct.image_data, %struct.image_data* %316, i32 0, i32 3, !dbg !15921
  %318 = load i32, i32* %317, align 4, !dbg !15921
  %319 = sub i32 %318, 1, !dbg !15922
  %320 = icmp ugt i32 %315, %319, !dbg !15923
  br i1 %320, label %321, label %332, !dbg !15924

321:                                              ; preds = %314
  %322 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15925
  %323 = getelementptr inbounds %struct.image_data, %struct.image_data* %322, i32 0, i32 3, !dbg !15926
  %324 = load i32, i32* %323, align 4, !dbg !15926
  %325 = sub i32 %324, 1, !dbg !15927
  %326 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15928
  %327 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %326, i32 0, i32 19, !dbg !15929
  %328 = load i32, i32* %23, align 4, !dbg !15930
  %329 = zext i32 %328 to i64, !dbg !15928
  %330 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %327, i64 0, i64 %329, !dbg !15928
  %331 = getelementptr inbounds %struct.region, %struct.region* %330, i32 0, i32 3, !dbg !15931
  store i32 %325, i32* %331, align 4, !dbg !15932
  br label %341, !dbg !15928

332:                                              ; preds = %314
  %333 = load i32, i32* %32, align 4, !dbg !15933
  %334 = sub i32 %333, 1, !dbg !15934
  %335 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15935
  %336 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %335, i32 0, i32 19, !dbg !15936
  %337 = load i32, i32* %23, align 4, !dbg !15937
  %338 = zext i32 %337 to i64, !dbg !15935
  %339 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %336, i64 0, i64 %338, !dbg !15935
  %340 = getelementptr inbounds %struct.region, %struct.region* %339, i32 0, i32 3, !dbg !15938
  store i32 %334, i32* %340, align 4, !dbg !15939
  br label %341

341:                                              ; preds = %332, %321
  %342 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15940
  %343 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %342, i32 0, i32 19, !dbg !15941
  %344 = load i32, i32* %23, align 4, !dbg !15942
  %345 = zext i32 %344 to i64, !dbg !15940
  %346 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %343, i64 0, i64 %345, !dbg !15940
  %347 = getelementptr inbounds %struct.region, %struct.region* %346, i32 0, i32 3, !dbg !15943
  %348 = load i32, i32* %347, align 4, !dbg !15943
  %349 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15944
  %350 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %349, i32 0, i32 19, !dbg !15945
  %351 = load i32, i32* %23, align 4, !dbg !15946
  %352 = zext i32 %351 to i64, !dbg !15944
  %353 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %350, i64 0, i64 %352, !dbg !15944
  %354 = getelementptr inbounds %struct.region, %struct.region* %353, i32 0, i32 2, !dbg !15947
  %355 = load i32, i32* %354, align 8, !dbg !15947
  %356 = sub i32 %348, %355, !dbg !15948
  %357 = add i32 %356, 1, !dbg !15949
  store i32 %357, i32* %27, align 4, !dbg !15950
  %358 = load i32, i32* %26, align 4, !dbg !15951
  %359 = load i32, i32* %24, align 4, !dbg !15953
  %360 = icmp ugt i32 %358, %359, !dbg !15954
  br i1 %360, label %361, label %363, !dbg !15955

361:                                              ; preds = %341
  %362 = load i32, i32* %26, align 4, !dbg !15956
  store i32 %362, i32* %24, align 4, !dbg !15957
  br label %363, !dbg !15958

363:                                              ; preds = %361, %341
  %364 = load i32, i32* %27, align 4, !dbg !15959
  %365 = load i32, i32* %25, align 4, !dbg !15961
  %366 = icmp ugt i32 %364, %365, !dbg !15962
  br i1 %366, label %367, label %369, !dbg !15963

367:                                              ; preds = %363
  %368 = load i32, i32* %27, align 4, !dbg !15964
  store i32 %368, i32* %25, align 4, !dbg !15965
  br label %369, !dbg !15966

369:                                              ; preds = %367, %363
  %370 = load i32, i32* %26, align 4, !dbg !15967
  %371 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15968
  %372 = getelementptr inbounds %struct.image_data, %struct.image_data* %371, i32 0, i32 5, !dbg !15969
  %373 = load i16, i16* %372, align 2, !dbg !15969
  %374 = zext i16 %373 to i32, !dbg !15968
  %375 = mul i32 %370, %374, !dbg !15970
  %376 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !15971
  %377 = getelementptr inbounds %struct.image_data, %struct.image_data* %376, i32 0, i32 6, !dbg !15972
  %378 = load i16, i16* %377, align 4, !dbg !15972
  %379 = zext i16 %378 to i32, !dbg !15971
  %380 = mul i32 %375, %379, !dbg !15973
  %381 = add i32 %380, 7, !dbg !15974
  %382 = udiv i32 %381, 8, !dbg !15975
  %383 = load i32, i32* %27, align 4, !dbg !15976
  %384 = add i32 %383, 1, !dbg !15977
  %385 = mul i32 %382, %384, !dbg !15978
  store i32 %385, i32* %28, align 4, !dbg !15979
  %386 = load i32, i32* %28, align 4, !dbg !15980
  %387 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15981
  %388 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %387, i32 0, i32 19, !dbg !15982
  %389 = load i32, i32* %23, align 4, !dbg !15983
  %390 = zext i32 %389 to i64, !dbg !15981
  %391 = getelementptr inbounds [8 x %struct.region], [8 x %struct.region]* %388, i64 0, i64 %390, !dbg !15981
  %392 = getelementptr inbounds %struct.region, %struct.region* %391, i32 0, i32 6, !dbg !15984
  store i32 %386, i32* %392, align 8, !dbg !15985
  %393 = load i32, i32* %28, align 4, !dbg !15986
  %394 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15987
  %395 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %394, i32 0, i32 7, !dbg !15988
  %396 = load i32, i32* %395, align 8, !dbg !15989
  %397 = add i32 %396, %393, !dbg !15989
  store i32 %397, i32* %395, align 8, !dbg !15989
  %398 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15990
  %399 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %398, i32 0, i32 8, !dbg !15992
  %400 = load i16, i16* %399, align 4, !dbg !15992
  %401 = zext i16 %400 to i32, !dbg !15990
  %402 = icmp eq i32 %401, 0, !dbg !15993
  br i1 %402, label %403, label %428, !dbg !15994

403:                                              ; preds = %369
  %404 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !15995
  %405 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %404, i32 0, i32 12, !dbg !15997
  %406 = load i16, i16* %405, align 4, !dbg !15997
  %407 = zext i16 %406 to i32, !dbg !15995
  switch i32 %407, label %418 [
    i32 2, label %408
    i32 4, label %408
    i32 3, label %417
    i32 1, label %417
  ], !dbg !15998

408:                                              ; preds = %403, %403
  %409 = load i32, i32* %27, align 4, !dbg !15999
  %410 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16001
  %411 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %410, i32 0, i32 6, !dbg !16002
  store i32 %409, i32* %411, align 4, !dbg !16003
  %412 = load i32, i32* %26, align 4, !dbg !16004
  %413 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16005
  %414 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %413, i32 0, i32 5, !dbg !16006
  %415 = load i32, i32* %414, align 8, !dbg !16007
  %416 = add i32 %415, %412, !dbg !16007
  store i32 %416, i32* %414, align 8, !dbg !16007
  br label %427, !dbg !16008

417:                                              ; preds = %403, %403
  br label %418, !dbg !16008

418:                                              ; preds = %417, %403
  %419 = load i32, i32* %26, align 4, !dbg !16009
  %420 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16010
  %421 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %420, i32 0, i32 5, !dbg !16011
  store i32 %419, i32* %421, align 8, !dbg !16012
  %422 = load i32, i32* %27, align 4, !dbg !16013
  %423 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16014
  %424 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %423, i32 0, i32 6, !dbg !16015
  %425 = load i32, i32* %424, align 4, !dbg !16016
  %426 = add i32 %425, %422, !dbg !16016
  store i32 %426, i32* %424, align 4, !dbg !16016
  br label %427, !dbg !16017

427:                                              ; preds = %418, %408
  br label %428, !dbg !16018

428:                                              ; preds = %427, %369
  br label %429, !dbg !16019

429:                                              ; preds = %428
  %430 = load i32, i32* %23, align 4, !dbg !16020
  %431 = add i32 %430, 1, !dbg !16020
  store i32 %431, i32* %23, align 4, !dbg !16020
  br label %128, !dbg !16021, !llvm.loop !16022

432:                                              ; preds = %128
  store i32 0, i32* %4, align 4, !dbg !16024
  br label %848, !dbg !16024

433:                                              ; preds = %120
  %434 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16025
  %435 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %434, i32 0, i32 10, !dbg !16027
  %436 = load i16, i16* %435, align 8, !dbg !16027
  %437 = zext i16 %436 to i32, !dbg !16025
  %438 = and i32 %437, 1, !dbg !16028
  %439 = icmp ne i32 %438, 0, !dbg !16028
  br i1 %439, label %440, label %533, !dbg !16029

440:                                              ; preds = %433
  %441 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16030
  %442 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %441, i32 0, i32 11, !dbg !16033
  %443 = load i16, i16* %442, align 2, !dbg !16033
  %444 = zext i16 %443 to i32, !dbg !16030
  %445 = icmp ne i32 %444, 2, !dbg !16034
  br i1 %445, label %446, label %473, !dbg !16035

446:                                              ; preds = %440
  %447 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16036
  %448 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %447, i32 0, i32 11, !dbg !16037
  %449 = load i16, i16* %448, align 2, !dbg !16037
  %450 = zext i16 %449 to i32, !dbg !16036
  %451 = icmp ne i32 %450, 3, !dbg !16038
  br i1 %451, label %452, label %473, !dbg !16039

452:                                              ; preds = %446
  %453 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16040
  %454 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %453, i32 0, i32 2, !dbg !16042
  %455 = getelementptr inbounds [4 x double], [4 x double]* %454, i64 0, i64 0, !dbg !16040
  %456 = load double, double* %455, align 8, !dbg !16040
  %457 = fptoui double %456 to i32, !dbg !16043
  store i32 %457, i32* %11, align 4, !dbg !16044
  %458 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16045
  %459 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %458, i32 0, i32 2, !dbg !16046
  %460 = getelementptr inbounds [4 x double], [4 x double]* %459, i64 0, i64 1, !dbg !16045
  %461 = load double, double* %460, align 8, !dbg !16045
  %462 = fptoui double %461 to i32, !dbg !16047
  store i32 %462, i32* %13, align 4, !dbg !16048
  %463 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16049
  %464 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %463, i32 0, i32 2, !dbg !16050
  %465 = getelementptr inbounds [4 x double], [4 x double]* %464, i64 0, i64 2, !dbg !16049
  %466 = load double, double* %465, align 8, !dbg !16049
  %467 = fptoui double %466 to i32, !dbg !16051
  store i32 %467, i32* %12, align 4, !dbg !16052
  %468 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16053
  %469 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %468, i32 0, i32 2, !dbg !16054
  %470 = getelementptr inbounds [4 x double], [4 x double]* %469, i64 0, i64 3, !dbg !16053
  %471 = load double, double* %470, align 8, !dbg !16053
  %472 = fptoui double %471 to i32, !dbg !16055
  store i32 %472, i32* %14, align 4, !dbg !16056
  br label %514, !dbg !16057

473:                                              ; preds = %446, %440
  %474 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16058
  %475 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %474, i32 0, i32 2, !dbg !16060
  %476 = getelementptr inbounds [4 x double], [4 x double]* %475, i64 0, i64 0, !dbg !16058
  %477 = load double, double* %476, align 8, !dbg !16058
  %478 = load double, double* %8, align 8, !dbg !16061
  %479 = fmul double %477, %478, !dbg !16062
  %480 = load float, float* %10, align 4, !dbg !16063
  %481 = fpext float %480 to double, !dbg !16063
  %482 = fmul double %479, %481, !dbg !16064
  %483 = fptoui double %482 to i32, !dbg !16065
  store i32 %483, i32* %11, align 4, !dbg !16066
  %484 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16067
  %485 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %484, i32 0, i32 2, !dbg !16068
  %486 = getelementptr inbounds [4 x double], [4 x double]* %485, i64 0, i64 1, !dbg !16067
  %487 = load double, double* %486, align 8, !dbg !16067
  %488 = load double, double* %8, align 8, !dbg !16069
  %489 = fmul double %487, %488, !dbg !16070
  %490 = load float, float* %9, align 4, !dbg !16071
  %491 = fpext float %490 to double, !dbg !16071
  %492 = fmul double %489, %491, !dbg !16072
  %493 = fptoui double %492 to i32, !dbg !16073
  store i32 %493, i32* %13, align 4, !dbg !16074
  %494 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16075
  %495 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %494, i32 0, i32 2, !dbg !16076
  %496 = getelementptr inbounds [4 x double], [4 x double]* %495, i64 0, i64 2, !dbg !16075
  %497 = load double, double* %496, align 8, !dbg !16075
  %498 = load double, double* %8, align 8, !dbg !16077
  %499 = fmul double %497, %498, !dbg !16078
  %500 = load float, float* %10, align 4, !dbg !16079
  %501 = fpext float %500 to double, !dbg !16079
  %502 = fmul double %499, %501, !dbg !16080
  %503 = fptoui double %502 to i32, !dbg !16081
  store i32 %503, i32* %12, align 4, !dbg !16082
  %504 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16083
  %505 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %504, i32 0, i32 2, !dbg !16084
  %506 = getelementptr inbounds [4 x double], [4 x double]* %505, i64 0, i64 3, !dbg !16083
  %507 = load double, double* %506, align 8, !dbg !16083
  %508 = load double, double* %8, align 8, !dbg !16085
  %509 = fmul double %507, %508, !dbg !16086
  %510 = load float, float* %9, align 4, !dbg !16087
  %511 = fpext float %510 to double, !dbg !16087
  %512 = fmul double %509, %511, !dbg !16088
  %513 = fptoui double %512 to i32, !dbg !16089
  store i32 %513, i32* %14, align 4, !dbg !16090
  br label %514

514:                                              ; preds = %473, %452
  %515 = load i32, i32* %13, align 4, !dbg !16091
  %516 = load i32, i32* %14, align 4, !dbg !16093
  %517 = add i32 %515, %516, !dbg !16094
  %518 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16095
  %519 = getelementptr inbounds %struct.image_data, %struct.image_data* %518, i32 0, i32 2, !dbg !16096
  %520 = load i32, i32* %519, align 4, !dbg !16096
  %521 = icmp ugt i32 %517, %520, !dbg !16097
  br i1 %521, label %522, label %523, !dbg !16098

522:                                              ; preds = %514
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.230, i64 0, i64 0)), !dbg !16099
  store i32 0, i32* %13, align 4, !dbg !16101
  store i32 0, i32* %14, align 4, !dbg !16102
  store i32 -1, i32* %4, align 4, !dbg !16103
  br label %848, !dbg !16103

523:                                              ; preds = %514
  %524 = load i32, i32* %11, align 4, !dbg !16104
  %525 = load i32, i32* %12, align 4, !dbg !16106
  %526 = add i32 %524, %525, !dbg !16107
  %527 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16108
  %528 = getelementptr inbounds %struct.image_data, %struct.image_data* %527, i32 0, i32 3, !dbg !16109
  %529 = load i32, i32* %528, align 4, !dbg !16109
  %530 = icmp ugt i32 %526, %529, !dbg !16110
  br i1 %530, label %531, label %532, !dbg !16111

531:                                              ; preds = %523
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.231, i64 0, i64 0)), !dbg !16112
  store i32 0, i32* %11, align 4, !dbg !16114
  store i32 0, i32* %12, align 4, !dbg !16115
  store i32 -1, i32* %4, align 4, !dbg !16116
  br label %848, !dbg !16116

532:                                              ; preds = %523
  br label %534, !dbg !16117

533:                                              ; preds = %433
  store i32 0, i32* %11, align 4, !dbg !16118
  store i32 0, i32* %13, align 4, !dbg !16120
  store i32 0, i32* %12, align 4, !dbg !16121
  store i32 0, i32* %14, align 4, !dbg !16122
  br label %534

534:                                              ; preds = %533, %532
  %535 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16123
  %536 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %535, i32 0, i32 11, !dbg !16125
  %537 = load i16, i16* %536, align 2, !dbg !16125
  %538 = zext i16 %537 to i32, !dbg !16123
  %539 = icmp ne i32 %538, 2, !dbg !16126
  br i1 %539, label %540, label %587, !dbg !16127

540:                                              ; preds = %534
  %541 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16128
  %542 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %541, i32 0, i32 11, !dbg !16129
  %543 = load i16, i16* %542, align 2, !dbg !16129
  %544 = zext i16 %543 to i32, !dbg !16128
  %545 = icmp ne i32 %544, 3, !dbg !16130
  br i1 %545, label %546, label %587, !dbg !16131

546:                                              ; preds = %540
  %547 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16132
  %548 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %547, i32 0, i32 10, !dbg !16135
  %549 = load i16, i16* %548, align 8, !dbg !16135
  %550 = zext i16 %549 to i32, !dbg !16132
  %551 = and i32 %550, 2, !dbg !16136
  %552 = icmp ne i32 %551, 0, !dbg !16136
  br i1 %552, label %553, label %558, !dbg !16137

553:                                              ; preds = %546
  %554 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16138
  %555 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %554, i32 0, i32 0, !dbg !16139
  %556 = load double, double* %555, align 8, !dbg !16139
  %557 = fptoui double %556 to i32, !dbg !16140
  store i32 %557, i32* %19, align 4, !dbg !16141
  br label %566, !dbg !16142

558:                                              ; preds = %546
  %559 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16143
  %560 = getelementptr inbounds %struct.image_data, %struct.image_data* %559, i32 0, i32 2, !dbg !16144
  %561 = load i32, i32* %560, align 4, !dbg !16144
  %562 = load i32, i32* %13, align 4, !dbg !16145
  %563 = sub i32 %561, %562, !dbg !16146
  %564 = load i32, i32* %14, align 4, !dbg !16147
  %565 = sub i32 %563, %564, !dbg !16148
  store i32 %565, i32* %19, align 4, !dbg !16149
  br label %566

566:                                              ; preds = %558, %553
  %567 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16150
  %568 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %567, i32 0, i32 10, !dbg !16152
  %569 = load i16, i16* %568, align 8, !dbg !16152
  %570 = zext i16 %569 to i32, !dbg !16150
  %571 = and i32 %570, 4, !dbg !16153
  %572 = icmp ne i32 %571, 0, !dbg !16153
  br i1 %572, label %573, label %578, !dbg !16154

573:                                              ; preds = %566
  %574 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16155
  %575 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %574, i32 0, i32 1, !dbg !16156
  %576 = load double, double* %575, align 8, !dbg !16156
  %577 = fptoui double %576 to i32, !dbg !16157
  store i32 %577, i32* %20, align 4, !dbg !16158
  br label %586, !dbg !16159

578:                                              ; preds = %566
  %579 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16160
  %580 = getelementptr inbounds %struct.image_data, %struct.image_data* %579, i32 0, i32 3, !dbg !16161
  %581 = load i32, i32* %580, align 4, !dbg !16161
  %582 = load i32, i32* %11, align 4, !dbg !16162
  %583 = sub i32 %581, %582, !dbg !16163
  %584 = load i32, i32* %12, align 4, !dbg !16164
  %585 = sub i32 %583, %584, !dbg !16165
  store i32 %585, i32* %20, align 4, !dbg !16166
  br label %586

586:                                              ; preds = %578, %573
  br label %642, !dbg !16167

587:                                              ; preds = %540, %534
  %588 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16168
  %589 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %588, i32 0, i32 10, !dbg !16171
  %590 = load i16, i16* %589, align 8, !dbg !16171
  %591 = zext i16 %590 to i32, !dbg !16168
  %592 = and i32 %591, 2, !dbg !16172
  %593 = icmp ne i32 %592, 0, !dbg !16172
  br i1 %593, label %594, label %606, !dbg !16173

594:                                              ; preds = %587
  %595 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16174
  %596 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %595, i32 0, i32 0, !dbg !16175
  %597 = load double, double* %596, align 8, !dbg !16175
  %598 = load double, double* %8, align 8, !dbg !16176
  %599 = fmul double %597, %598, !dbg !16177
  %600 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16178
  %601 = getelementptr inbounds %struct.image_data, %struct.image_data* %600, i32 0, i32 0, !dbg !16179
  %602 = load float, float* %601, align 4, !dbg !16179
  %603 = fpext float %602 to double, !dbg !16178
  %604 = fmul double %599, %603, !dbg !16180
  %605 = fptoui double %604 to i32, !dbg !16181
  store i32 %605, i32* %19, align 4, !dbg !16182
  br label %614, !dbg !16183

606:                                              ; preds = %587
  %607 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16184
  %608 = getelementptr inbounds %struct.image_data, %struct.image_data* %607, i32 0, i32 2, !dbg !16185
  %609 = load i32, i32* %608, align 4, !dbg !16185
  %610 = load i32, i32* %13, align 4, !dbg !16186
  %611 = sub i32 %609, %610, !dbg !16187
  %612 = load i32, i32* %14, align 4, !dbg !16188
  %613 = sub i32 %611, %612, !dbg !16189
  store i32 %613, i32* %19, align 4, !dbg !16190
  br label %614

614:                                              ; preds = %606, %594
  %615 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16191
  %616 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %615, i32 0, i32 10, !dbg !16193
  %617 = load i16, i16* %616, align 8, !dbg !16193
  %618 = zext i16 %617 to i32, !dbg !16191
  %619 = and i32 %618, 4, !dbg !16194
  %620 = icmp ne i32 %619, 0, !dbg !16194
  br i1 %620, label %621, label %633, !dbg !16195

621:                                              ; preds = %614
  %622 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16196
  %623 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %622, i32 0, i32 1, !dbg !16197
  %624 = load double, double* %623, align 8, !dbg !16197
  %625 = load double, double* %8, align 8, !dbg !16198
  %626 = fmul double %624, %625, !dbg !16199
  %627 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16200
  %628 = getelementptr inbounds %struct.image_data, %struct.image_data* %627, i32 0, i32 1, !dbg !16201
  %629 = load float, float* %628, align 4, !dbg !16201
  %630 = fpext float %629 to double, !dbg !16200
  %631 = fmul double %626, %630, !dbg !16202
  %632 = fptoui double %631 to i32, !dbg !16203
  store i32 %632, i32* %20, align 4, !dbg !16204
  br label %641, !dbg !16205

633:                                              ; preds = %614
  %634 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16206
  %635 = getelementptr inbounds %struct.image_data, %struct.image_data* %634, i32 0, i32 3, !dbg !16207
  %636 = load i32, i32* %635, align 4, !dbg !16207
  %637 = load i32, i32* %11, align 4, !dbg !16208
  %638 = sub i32 %636, %637, !dbg !16209
  %639 = load i32, i32* %12, align 4, !dbg !16210
  %640 = sub i32 %638, %639, !dbg !16211
  store i32 %640, i32* %20, align 4, !dbg !16212
  br label %641

641:                                              ; preds = %633, %621
  br label %642

642:                                              ; preds = %641, %586
  %643 = load i32, i32* %11, align 4, !dbg !16213
  %644 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16214
  %645 = getelementptr inbounds %struct.offset, %struct.offset* %644, i32 0, i32 0, !dbg !16215
  store i32 %643, i32* %645, align 4, !dbg !16216
  %646 = load i32, i32* %12, align 4, !dbg !16217
  %647 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16218
  %648 = getelementptr inbounds %struct.offset, %struct.offset* %647, i32 0, i32 2, !dbg !16219
  store i32 %646, i32* %648, align 4, !dbg !16220
  %649 = load i32, i32* %13, align 4, !dbg !16221
  %650 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16222
  %651 = getelementptr inbounds %struct.offset, %struct.offset* %650, i32 0, i32 1, !dbg !16223
  store i32 %649, i32* %651, align 4, !dbg !16224
  %652 = load i32, i32* %14, align 4, !dbg !16225
  %653 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16226
  %654 = getelementptr inbounds %struct.offset, %struct.offset* %653, i32 0, i32 3, !dbg !16227
  store i32 %652, i32* %654, align 4, !dbg !16228
  %655 = load %struct.crop_mask*, %struct.crop_mask** %5, align 8, !dbg !16229
  %656 = getelementptr inbounds %struct.crop_mask, %struct.crop_mask* %655, i32 0, i32 12, !dbg !16230
  %657 = load i16, i16* %656, align 4, !dbg !16230
  %658 = zext i16 %657 to i32, !dbg !16229
  switch i32 %658, label %746 [
    i32 3, label %659
    i32 4, label %702
    i32 1, label %745
    i32 2, label %745
  ], !dbg !16231

659:                                              ; preds = %642
  %660 = load i32, i32* %13, align 4, !dbg !16232
  store i32 %660, i32* %15, align 4, !dbg !16234
  %661 = load i32, i32* %15, align 4, !dbg !16235
  %662 = load i32, i32* %19, align 4, !dbg !16237
  %663 = add i32 %661, %662, !dbg !16238
  %664 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16239
  %665 = getelementptr inbounds %struct.image_data, %struct.image_data* %664, i32 0, i32 2, !dbg !16240
  %666 = load i32, i32* %665, align 4, !dbg !16240
  %667 = load i32, i32* %14, align 4, !dbg !16241
  %668 = sub i32 %666, %667, !dbg !16242
  %669 = icmp uge i32 %663, %668, !dbg !16243
  br i1 %669, label %670, label %677, !dbg !16244

670:                                              ; preds = %659
  %671 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16245
  %672 = getelementptr inbounds %struct.image_data, %struct.image_data* %671, i32 0, i32 2, !dbg !16246
  %673 = load i32, i32* %672, align 4, !dbg !16246
  %674 = load i32, i32* %14, align 4, !dbg !16247
  %675 = sub i32 %673, %674, !dbg !16248
  %676 = sub i32 %675, 1, !dbg !16249
  store i32 %676, i32* %16, align 4, !dbg !16250
  br label %682, !dbg !16251

677:                                              ; preds = %659
  %678 = load i32, i32* %15, align 4, !dbg !16252
  %679 = load i32, i32* %19, align 4, !dbg !16253
  %680 = add i32 %678, %679, !dbg !16254
  %681 = sub i32 %680, 1, !dbg !16255
  store i32 %681, i32* %16, align 4, !dbg !16256
  br label %682

682:                                              ; preds = %677, %670
  %683 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16257
  %684 = getelementptr inbounds %struct.image_data, %struct.image_data* %683, i32 0, i32 3, !dbg !16258
  %685 = load i32, i32* %684, align 4, !dbg !16258
  %686 = load i32, i32* %12, align 4, !dbg !16259
  %687 = sub i32 %685, %686, !dbg !16260
  %688 = sub i32 %687, 1, !dbg !16261
  store i32 %688, i32* %18, align 4, !dbg !16262
  %689 = load i32, i32* %18, align 4, !dbg !16263
  %690 = load i32, i32* %20, align 4, !dbg !16265
  %691 = sub i32 %689, %690, !dbg !16266
  %692 = load i32, i32* %11, align 4, !dbg !16267
  %693 = icmp ule i32 %691, %692, !dbg !16268
  br i1 %693, label %694, label %696, !dbg !16269

694:                                              ; preds = %682
  %695 = load i32, i32* %11, align 4, !dbg !16270
  store i32 %695, i32* %17, align 4, !dbg !16271
  br label %701, !dbg !16272

696:                                              ; preds = %682
  %697 = load i32, i32* %18, align 4, !dbg !16273
  %698 = load i32, i32* %20, align 4, !dbg !16274
  %699 = sub i32 %697, %698, !dbg !16275
  %700 = add i32 %699, 1, !dbg !16276
  store i32 %700, i32* %17, align 4, !dbg !16277
  br label %701

701:                                              ; preds = %696, %694
  br label %793, !dbg !16278

702:                                              ; preds = %642
  %703 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16279
  %704 = getelementptr inbounds %struct.image_data, %struct.image_data* %703, i32 0, i32 2, !dbg !16280
  %705 = load i32, i32* %704, align 4, !dbg !16280
  %706 = load i32, i32* %14, align 4, !dbg !16281
  %707 = sub i32 %705, %706, !dbg !16282
  %708 = sub i32 %707, 1, !dbg !16283
  store i32 %708, i32* %16, align 4, !dbg !16284
  %709 = load i32, i32* %16, align 4, !dbg !16285
  %710 = load i32, i32* %19, align 4, !dbg !16287
  %711 = sub i32 %709, %710, !dbg !16288
  %712 = load i32, i32* %13, align 4, !dbg !16289
  %713 = icmp ule i32 %711, %712, !dbg !16290
  br i1 %713, label %714, label %716, !dbg !16291

714:                                              ; preds = %702
  %715 = load i32, i32* %13, align 4, !dbg !16292
  store i32 %715, i32* %15, align 4, !dbg !16293
  br label %721, !dbg !16294

716:                                              ; preds = %702
  %717 = load i32, i32* %16, align 4, !dbg !16295
  %718 = load i32, i32* %19, align 4, !dbg !16296
  %719 = sub i32 %717, %718, !dbg !16297
  %720 = add i32 %719, 1, !dbg !16298
  store i32 %720, i32* %15, align 4, !dbg !16299
  br label %721

721:                                              ; preds = %716, %714
  %722 = load i32, i32* %11, align 4, !dbg !16300
  store i32 %722, i32* %17, align 4, !dbg !16301
  %723 = load i32, i32* %17, align 4, !dbg !16302
  %724 = load i32, i32* %20, align 4, !dbg !16304
  %725 = add i32 %723, %724, !dbg !16305
  %726 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16306
  %727 = getelementptr inbounds %struct.image_data, %struct.image_data* %726, i32 0, i32 3, !dbg !16307
  %728 = load i32, i32* %727, align 4, !dbg !16307
  %729 = load i32, i32* %12, align 4, !dbg !16308
  %730 = sub i32 %728, %729, !dbg !16309
  %731 = icmp uge i32 %725, %730, !dbg !16310
  br i1 %731, label %732, label %739, !dbg !16311

732:                                              ; preds = %721
  %733 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16312
  %734 = getelementptr inbounds %struct.image_data, %struct.image_data* %733, i32 0, i32 3, !dbg !16313
  %735 = load i32, i32* %734, align 4, !dbg !16313
  %736 = load i32, i32* %12, align 4, !dbg !16314
  %737 = sub i32 %735, %736, !dbg !16315
  %738 = sub i32 %737, 1, !dbg !16316
  store i32 %738, i32* %18, align 4, !dbg !16317
  br label %744, !dbg !16318

739:                                              ; preds = %721
  %740 = load i32, i32* %17, align 4, !dbg !16319
  %741 = load i32, i32* %20, align 4, !dbg !16320
  %742 = add i32 %740, %741, !dbg !16321
  %743 = sub i32 %742, 1, !dbg !16322
  store i32 %743, i32* %18, align 4, !dbg !16323
  br label %744

744:                                              ; preds = %739, %732
  br label %793, !dbg !16324

745:                                              ; preds = %642, %642
  br label %746, !dbg !16324

746:                                              ; preds = %745, %642
  %747 = load i32, i32* %13, align 4, !dbg !16325
  store i32 %747, i32* %15, align 4, !dbg !16326
  %748 = load i32, i32* %15, align 4, !dbg !16327
  %749 = load i32, i32* %19, align 4, !dbg !16329
  %750 = add i32 %748, %749, !dbg !16330
  %751 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16331
  %752 = getelementptr inbounds %struct.image_data, %struct.image_data* %751, i32 0, i32 2, !dbg !16332
  %753 = load i32, i32* %752, align 4, !dbg !16332
  %754 = load i32, i32* %14, align 4, !dbg !16333
  %755 = sub i32 %753, %754, !dbg !16334
  %756 = icmp uge i32 %750, %755, !dbg !16335
  br i1 %756, label %757, label %764, !dbg !16336

757:                                              ; preds = %746
  %758 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16337
  %759 = getelementptr inbounds %struct.image_data, %struct.image_data* %758, i32 0, i32 2, !dbg !16338
  %760 = load i32, i32* %759, align 4, !dbg !16338
  %761 = load i32, i32* %14, align 4, !dbg !16339
  %762 = sub i32 %760, %761, !dbg !16340
  %763 = sub i32 %762, 1, !dbg !16341
  store i32 %763, i32* %16, align 4, !dbg !16342
  br label %769, !dbg !16343

764:                                              ; preds = %746
  %765 = load i32, i32* %15, align 4, !dbg !16344
  %766 = load i32, i32* %19, align 4, !dbg !16345
  %767 = add i32 %765, %766, !dbg !16346
  %768 = sub i32 %767, 1, !dbg !16347
  store i32 %768, i32* %16, align 4, !dbg !16348
  br label %769

769:                                              ; preds = %764, %757
  %770 = load i32, i32* %11, align 4, !dbg !16349
  store i32 %770, i32* %17, align 4, !dbg !16350
  %771 = load i32, i32* %17, align 4, !dbg !16351
  %772 = load i32, i32* %20, align 4, !dbg !16353
  %773 = add i32 %771, %772, !dbg !16354
  %774 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16355
  %775 = getelementptr inbounds %struct.image_data, %struct.image_data* %774, i32 0, i32 3, !dbg !16356
  %776 = load i32, i32* %775, align 4, !dbg !16356
  %777 = load i32, i32* %12, align 4, !dbg !16357
  %778 = sub i32 %776, %777, !dbg !16358
  %779 = icmp uge i32 %773, %778, !dbg !16359
  br i1 %779, label %780, label %787, !dbg !16360

780:                                              ; preds = %769
  %781 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16361
  %782 = getelementptr inbounds %struct.image_data, %struct.image_data* %781, i32 0, i32 3, !dbg !16362
  %783 = load i32, i32* %782, align 4, !dbg !16362
  %784 = load i32, i32* %12, align 4, !dbg !16363
  %785 = sub i32 %783, %784, !dbg !16364
  %786 = sub i32 %785, 1, !dbg !16365
  store i32 %786, i32* %18, align 4, !dbg !16366
  br label %792, !dbg !16367

787:                                              ; preds = %769
  %788 = load i32, i32* %17, align 4, !dbg !16368
  %789 = load i32, i32* %20, align 4, !dbg !16369
  %790 = add i32 %788, %789, !dbg !16370
  %791 = sub i32 %790, 1, !dbg !16371
  store i32 %791, i32* %18, align 4, !dbg !16372
  br label %792

792:                                              ; preds = %787, %780
  br label %793, !dbg !16373

793:                                              ; preds = %792, %744, %701
  %794 = load i32, i32* %15, align 4, !dbg !16374
  %795 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16375
  %796 = getelementptr inbounds %struct.offset, %struct.offset* %795, i32 0, i32 6, !dbg !16376
  store i32 %794, i32* %796, align 4, !dbg !16377
  %797 = load i32, i32* %17, align 4, !dbg !16378
  %798 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16379
  %799 = getelementptr inbounds %struct.offset, %struct.offset* %798, i32 0, i32 8, !dbg !16380
  store i32 %797, i32* %799, align 4, !dbg !16381
  %800 = load i32, i32* %16, align 4, !dbg !16382
  %801 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16383
  %802 = getelementptr inbounds %struct.offset, %struct.offset* %801, i32 0, i32 7, !dbg !16384
  store i32 %800, i32* %802, align 4, !dbg !16385
  %803 = load i32, i32* %18, align 4, !dbg !16386
  %804 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16387
  %805 = getelementptr inbounds %struct.offset, %struct.offset* %804, i32 0, i32 9, !dbg !16388
  store i32 %803, i32* %805, align 4, !dbg !16389
  %806 = load i32, i32* %16, align 4, !dbg !16390
  %807 = load i32, i32* %15, align 4, !dbg !16391
  %808 = sub i32 %806, %807, !dbg !16392
  %809 = add i32 %808, 1, !dbg !16393
  store i32 %809, i32* %21, align 4, !dbg !16394
  %810 = load i32, i32* %18, align 4, !dbg !16395
  %811 = load i32, i32* %17, align 4, !dbg !16396
  %812 = sub i32 %810, %811, !dbg !16397
  %813 = add i32 %812, 1, !dbg !16398
  store i32 %813, i32* %22, align 4, !dbg !16399
  %814 = load i32, i32* %21, align 4, !dbg !16400
  %815 = icmp ule i32 %814, 0, !dbg !16402
  br i1 %815, label %816, label %817, !dbg !16403

816:                                              ; preds = %793
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.232, i64 0, i64 0)), !dbg !16404
  store i32 -1, i32* %4, align 4, !dbg !16406
  br label %848, !dbg !16406

817:                                              ; preds = %793
  %818 = load i32, i32* %21, align 4, !dbg !16407
  %819 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16409
  %820 = getelementptr inbounds %struct.image_data, %struct.image_data* %819, i32 0, i32 2, !dbg !16410
  %821 = load i32, i32* %820, align 4, !dbg !16410
  %822 = icmp ugt i32 %818, %821, !dbg !16411
  br i1 %822, label %823, label %827, !dbg !16412

823:                                              ; preds = %817
  %824 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16413
  %825 = getelementptr inbounds %struct.image_data, %struct.image_data* %824, i32 0, i32 2, !dbg !16414
  %826 = load i32, i32* %825, align 4, !dbg !16414
  store i32 %826, i32* %21, align 4, !dbg !16415
  br label %827, !dbg !16416

827:                                              ; preds = %823, %817
  %828 = load i32, i32* %22, align 4, !dbg !16417
  %829 = icmp ule i32 %828, 0, !dbg !16419
  br i1 %829, label %830, label %831, !dbg !16420

830:                                              ; preds = %827
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.233, i64 0, i64 0)), !dbg !16421
  store i32 -1, i32* %4, align 4, !dbg !16423
  br label %848, !dbg !16423

831:                                              ; preds = %827
  %832 = load i32, i32* %22, align 4, !dbg !16424
  %833 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16426
  %834 = getelementptr inbounds %struct.image_data, %struct.image_data* %833, i32 0, i32 3, !dbg !16427
  %835 = load i32, i32* %834, align 4, !dbg !16427
  %836 = icmp ugt i32 %832, %835, !dbg !16428
  br i1 %836, label %837, label %841, !dbg !16429

837:                                              ; preds = %831
  %838 = load %struct.image_data*, %struct.image_data** %6, align 8, !dbg !16430
  %839 = getelementptr inbounds %struct.image_data, %struct.image_data* %838, i32 0, i32 3, !dbg !16431
  %840 = load i32, i32* %839, align 4, !dbg !16431
  store i32 %840, i32* %22, align 4, !dbg !16432
  br label %841, !dbg !16433

841:                                              ; preds = %837, %831
  %842 = load i32, i32* %21, align 4, !dbg !16434
  %843 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16435
  %844 = getelementptr inbounds %struct.offset, %struct.offset* %843, i32 0, i32 4, !dbg !16436
  store i32 %842, i32* %844, align 4, !dbg !16437
  %845 = load i32, i32* %22, align 4, !dbg !16438
  %846 = load %struct.offset*, %struct.offset** %7, align 8, !dbg !16439
  %847 = getelementptr inbounds %struct.offset, %struct.offset* %846, i32 0, i32 5, !dbg !16440
  store i32 %845, i32* %847, align 4, !dbg !16441
  store i32 0, i32* %4, align 4, !dbg !16442
  br label %848, !dbg !16442

848:                                              ; preds = %841, %830, %816, %531, %522, %432, %89
  %849 = load i32, i32* %4, align 4, !dbg !16443
  ret i32 %849, !dbg !16443
}

declare i32 @TIFFNumberOfTiles(%struct.tiff*) #3

declare i32 @TIFFNumberOfStrips(%struct.tiff*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @readContigStripsIntoBuffer(%struct.tiff*, i8*) #0 !dbg !16444 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.tiff*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store %struct.tiff* %0, %struct.tiff** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %4, metadata !16447, metadata !DIExpression()), !dbg !16448
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16449, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16451, metadata !DIExpression()), !dbg !16452
  %14 = load i8*, i8** %5, align 8, !dbg !16453
  store i8* %14, i8** %6, align 8, !dbg !16452
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16454, metadata !DIExpression()), !dbg !16455
  store i32 0, i32* %7, align 4, !dbg !16455
  call void @llvm.dbg.declare(metadata i16* %8, metadata !16456, metadata !DIExpression()), !dbg !16457
  call void @llvm.dbg.declare(metadata i16* %9, metadata !16458, metadata !DIExpression()), !dbg !16459
  %15 = load %struct.tiff*, %struct.tiff** %4, align 8, !dbg !16460
  %16 = call i32 @TIFFNumberOfStrips(%struct.tiff* %15), !dbg !16461
  %17 = trunc i32 %16 to i16, !dbg !16461
  store i16 %17, i16* %9, align 2, !dbg !16459
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16462, metadata !DIExpression()), !dbg !16463
  %18 = load %struct.tiff*, %struct.tiff** %4, align 8, !dbg !16464
  %19 = call i64 @TIFFStripSize(%struct.tiff* %18), !dbg !16465
  %20 = trunc i64 %19 to i32, !dbg !16465
  store i32 %20, i32* %10, align 4, !dbg !16463
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16466, metadata !DIExpression()), !dbg !16467
  store i32 0, i32* %11, align 4, !dbg !16467
  call void @llvm.dbg.declare(metadata i32* %12, metadata !16468, metadata !DIExpression()), !dbg !16469
  %21 = load %struct.tiff*, %struct.tiff** %4, align 8, !dbg !16470
  %22 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %21, i32 278, i32* %12), !dbg !16471
  store i32 %22, i32* %12, align 4, !dbg !16469
  call void @llvm.dbg.declare(metadata i64* %13, metadata !16472, metadata !DIExpression()), !dbg !16473
  %23 = load %struct.tiff*, %struct.tiff** %4, align 8, !dbg !16474
  %24 = call i64 @TIFFScanlineSize(%struct.tiff* %23), !dbg !16475
  store i64 %24, i64* %13, align 8, !dbg !16473
  store i16 0, i16* %8, align 2, !dbg !16476
  br label %25, !dbg !16478

25:                                               ; preds = %77, %2
  %26 = load i16, i16* %8, align 2, !dbg !16479
  %27 = zext i16 %26 to i32, !dbg !16479
  %28 = load i16, i16* %9, align 2, !dbg !16481
  %29 = zext i16 %28 to i32, !dbg !16481
  %30 = icmp slt i32 %27, %29, !dbg !16482
  br i1 %30, label %31, label %80, !dbg !16483

31:                                               ; preds = %25
  %32 = load %struct.tiff*, %struct.tiff** %4, align 8, !dbg !16484
  %33 = load i16, i16* %8, align 2, !dbg !16486
  %34 = zext i16 %33 to i32, !dbg !16486
  %35 = load i8*, i8** %6, align 8, !dbg !16487
  %36 = call i64 @TIFFReadEncodedStrip(%struct.tiff* %32, i32 %34, i8* %35, i64 -1), !dbg !16488
  %37 = trunc i64 %36 to i32, !dbg !16488
  store i32 %37, i32* %7, align 4, !dbg !16489
  %38 = load i32, i32* %7, align 4, !dbg !16490
  %39 = sext i32 %38 to i64, !dbg !16490
  %40 = load i64, i64* %13, align 8, !dbg !16491
  %41 = sdiv i64 %39, %40, !dbg !16492
  %42 = trunc i64 %41 to i32, !dbg !16490
  store i32 %42, i32* %11, align 4, !dbg !16493
  %43 = load i16, i16* %8, align 2, !dbg !16494
  %44 = zext i16 %43 to i32, !dbg !16494
  %45 = load i16, i16* %9, align 2, !dbg !16496
  %46 = zext i16 %45 to i32, !dbg !16496
  %47 = sub nsw i32 %46, 1, !dbg !16497
  %48 = icmp slt i32 %44, %47, !dbg !16498
  br i1 %48, label %49, label %61, !dbg !16499

49:                                               ; preds = %31
  %50 = load i32, i32* %7, align 4, !dbg !16500
  %51 = load i32, i32* %10, align 4, !dbg !16501
  %52 = icmp ne i32 %50, %51, !dbg !16502
  br i1 %52, label %53, label %61, !dbg !16503

53:                                               ; preds = %49
  %54 = load i16, i16* %8, align 2, !dbg !16504
  %55 = zext i16 %54 to i32, !dbg !16505
  %56 = add nsw i32 %55, 1, !dbg !16506
  %57 = load i32, i32* %7, align 4, !dbg !16507
  %58 = sext i32 %57 to i64, !dbg !16508
  %59 = load i32, i32* %10, align 4, !dbg !16509
  %60 = zext i32 %59 to i64, !dbg !16510
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.259, i64 0, i64 0), i32 %56, i64 %58, i64 %60), !dbg !16511
  br label %61, !dbg !16511

61:                                               ; preds = %53, %49, %31
  %62 = load i32, i32* %7, align 4, !dbg !16512
  %63 = icmp slt i32 %62, 0, !dbg !16514
  br i1 %63, label %64, label %72, !dbg !16515

64:                                               ; preds = %61
  %65 = load i32, i32* @ignore, align 4, !dbg !16516
  %66 = icmp ne i32 %65, 0, !dbg !16516
  br i1 %66, label %72, label %67, !dbg !16517

67:                                               ; preds = %64
  %68 = load i16, i16* %8, align 2, !dbg !16518
  %69 = zext i16 %68 to i64, !dbg !16520
  %70 = load i32, i32* %11, align 4, !dbg !16521
  %71 = zext i32 %70 to i64, !dbg !16522
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.260, i64 0, i64 0), i64 %69, i64 %71), !dbg !16523
  store i32 0, i32* %3, align 4, !dbg !16524
  br label %81, !dbg !16524

72:                                               ; preds = %64, %61
  %73 = load i32, i32* %7, align 4, !dbg !16525
  %74 = load i8*, i8** %6, align 8, !dbg !16526
  %75 = sext i32 %73 to i64, !dbg !16526
  %76 = getelementptr inbounds i8, i8* %74, i64 %75, !dbg !16526
  store i8* %76, i8** %6, align 8, !dbg !16526
  br label %77, !dbg !16527

77:                                               ; preds = %72
  %78 = load i16, i16* %8, align 2, !dbg !16528
  %79 = add i16 %78, 1, !dbg !16528
  store i16 %79, i16* %8, align 2, !dbg !16528
  br label %25, !dbg !16529, !llvm.loop !16530

80:                                               ; preds = %25
  store i32 1, i32* %3, align 4, !dbg !16532
  br label %81, !dbg !16532

81:                                               ; preds = %80, %67
  %82 = load i32, i32* %3, align 4, !dbg !16533
  ret i32 %82, !dbg !16533
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @readSeparateStripsIntoBuffer(%struct.tiff*, i8*, i32, i32, i16 zeroext, %struct.dump_opts*) #0 !dbg !16534 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.tiff*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  %13 = alloca %struct.dump_opts*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca i16, align 2
  %24 = alloca i16, align 2
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i16, align 2
  %31 = alloca i32, align 4
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca [8 x i8*], align 16
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %8, metadata !16535, metadata !DIExpression()), !dbg !16536
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !16537, metadata !DIExpression()), !dbg !16538
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16539, metadata !DIExpression()), !dbg !16540
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16541, metadata !DIExpression()), !dbg !16542
  store i16 %4, i16* %12, align 2
  call void @llvm.dbg.declare(metadata i16* %12, metadata !16543, metadata !DIExpression()), !dbg !16544
  store %struct.dump_opts* %5, %struct.dump_opts** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.dump_opts** %13, metadata !16545, metadata !DIExpression()), !dbg !16546
  call void @llvm.dbg.declare(metadata i32* %14, metadata !16547, metadata !DIExpression()), !dbg !16548
  call void @llvm.dbg.declare(metadata i32* %15, metadata !16549, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.declare(metadata i32* %16, metadata !16551, metadata !DIExpression()), !dbg !16552
  call void @llvm.dbg.declare(metadata i32* %17, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.declare(metadata i32* %18, metadata !16555, metadata !DIExpression()), !dbg !16556
  call void @llvm.dbg.declare(metadata i32* %19, metadata !16557, metadata !DIExpression()), !dbg !16558
  store i32 1, i32* %19, align 4, !dbg !16558
  call void @llvm.dbg.declare(metadata i32* %20, metadata !16559, metadata !DIExpression()), !dbg !16560
  store i32 0, i32* %20, align 4, !dbg !16560
  call void @llvm.dbg.declare(metadata i16* %21, metadata !16561, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.declare(metadata i16* %22, metadata !16563, metadata !DIExpression()), !dbg !16564
  call void @llvm.dbg.declare(metadata i16* %23, metadata !16565, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.declare(metadata i16* %24, metadata !16567, metadata !DIExpression()), !dbg !16568
  call void @llvm.dbg.declare(metadata i32* %25, metadata !16569, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.declare(metadata i32* %26, metadata !16571, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.declare(metadata i32* %27, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.declare(metadata i32* %28, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.declare(metadata i32* %29, metadata !16577, metadata !DIExpression()), !dbg !16578
  store i32 0, i32* %29, align 4, !dbg !16578
  call void @llvm.dbg.declare(metadata i16* %30, metadata !16579, metadata !DIExpression()), !dbg !16580
  call void @llvm.dbg.declare(metadata i32* %31, metadata !16581, metadata !DIExpression()), !dbg !16582
  call void @llvm.dbg.declare(metadata i64* %32, metadata !16583, metadata !DIExpression()), !dbg !16584
  %37 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16585
  %38 = call i64 @TIFFScanlineSize(%struct.tiff* %37), !dbg !16586
  store i64 %38, i64* %32, align 8, !dbg !16584
  call void @llvm.dbg.declare(metadata i64* %33, metadata !16587, metadata !DIExpression()), !dbg !16588
  %39 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16589
  %40 = call i64 @TIFFStripSize(%struct.tiff* %39), !dbg !16590
  store i64 %40, i64* %33, align 8, !dbg !16588
  call void @llvm.dbg.declare(metadata [8 x i8*]* %34, metadata !16591, metadata !DIExpression()), !dbg !16593
  call void @llvm.dbg.declare(metadata i8** %35, metadata !16594, metadata !DIExpression()), !dbg !16595
  store i8* null, i8** %35, align 8, !dbg !16595
  call void @llvm.dbg.declare(metadata i8** %36, metadata !16596, metadata !DIExpression()), !dbg !16597
  store i8* null, i8** %36, align 8, !dbg !16597
  %41 = load i8*, i8** %9, align 8, !dbg !16598
  %42 = icmp eq i8* %41, null, !dbg !16600
  br i1 %42, label %43, label %44, !dbg !16601

43:                                               ; preds = %6
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.262, i64 0, i64 0)), !dbg !16602
  store i32 0, i32* %7, align 4, !dbg !16604
  br label %413, !dbg !16604

44:                                               ; preds = %6
  %45 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !16605
  %46 = bitcast i8** %45 to i8*, !dbg !16605
  call void @llvm.memset.p0i8.i64(i8* align 16 %46, i8 0, i64 64, i1 false), !dbg !16605
  %47 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16606
  %48 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %47, i32 258, i16* %21), !dbg !16607
  %49 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16608
  %50 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %49, i32 284, i16* %23), !dbg !16609
  %51 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16610
  %52 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %51, i32 278, i32* %28), !dbg !16611
  %53 = load i32, i32* %28, align 4, !dbg !16612
  %54 = load i32, i32* %10, align 4, !dbg !16614
  %55 = icmp ugt i32 %53, %54, !dbg !16615
  br i1 %55, label %56, label %58, !dbg !16616

56:                                               ; preds = %44
  %57 = load i32, i32* %10, align 4, !dbg !16617
  store i32 %57, i32* %28, align 4, !dbg !16618
  br label %58, !dbg !16619

58:                                               ; preds = %56, %44
  %59 = load i16, i16* %21, align 2, !dbg !16620
  %60 = zext i16 %59 to i32, !dbg !16620
  %61 = add nsw i32 %60, 7, !dbg !16621
  %62 = sdiv i32 %61, 8, !dbg !16622
  store i32 %62, i32* %16, align 4, !dbg !16623
  %63 = load i16, i16* %21, align 2, !dbg !16624
  %64 = zext i16 %63 to i32, !dbg !16624
  %65 = load i16, i16* %12, align 2, !dbg !16625
  %66 = zext i16 %65 to i32, !dbg !16625
  %67 = mul nsw i32 %64, %66, !dbg !16626
  %68 = add nsw i32 %67, 7, !dbg !16627
  %69 = sdiv i32 %68, 8, !dbg !16628
  store i32 %69, i32* %17, align 4, !dbg !16629
  %70 = load i32, i32* %17, align 4, !dbg !16630
  %71 = load i32, i32* %16, align 4, !dbg !16632
  %72 = add nsw i32 %71, 1, !dbg !16633
  %73 = icmp slt i32 %70, %72, !dbg !16634
  br i1 %73, label %74, label %76, !dbg !16635

74:                                               ; preds = %58
  %75 = load i32, i32* %17, align 4, !dbg !16636
  store i32 %75, i32* %18, align 4, !dbg !16637
  br label %79, !dbg !16638

76:                                               ; preds = %58
  %77 = load i32, i32* %16, align 4, !dbg !16639
  %78 = add nsw i32 %77, 1, !dbg !16640
  store i32 %78, i32* %18, align 4, !dbg !16641
  br label %79

79:                                               ; preds = %76, %74
  %80 = load i16, i16* %21, align 2, !dbg !16642
  %81 = zext i16 %80 to i32, !dbg !16642
  %82 = load i32, i32* %11, align 4, !dbg !16643
  %83 = mul i32 %81, %82, !dbg !16644
  %84 = add i32 %83, 7, !dbg !16645
  %85 = udiv i32 %84, 8, !dbg !16646
  store i32 %85, i32* %25, align 4, !dbg !16647
  %86 = load i16, i16* %21, align 2, !dbg !16648
  %87 = zext i16 %86 to i32, !dbg !16648
  %88 = load i32, i32* %11, align 4, !dbg !16649
  %89 = mul i32 %87, %88, !dbg !16650
  %90 = load i16, i16* %12, align 2, !dbg !16651
  %91 = zext i16 %90 to i32, !dbg !16651
  %92 = mul i32 %89, %91, !dbg !16652
  %93 = add i32 %92, 7, !dbg !16653
  %94 = udiv i32 %93, 8, !dbg !16654
  store i32 %94, i32* %26, align 4, !dbg !16655
  %95 = load i8*, i8** %9, align 8, !dbg !16656
  store i8* %95, i8** %36, align 8, !dbg !16657
  %96 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16658
  %97 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %96, i32 0, i32 6, !dbg !16660
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %97, align 8, !dbg !16660
  %99 = icmp ne %struct._IO_FILE* %98, null, !dbg !16661
  br i1 %99, label %100, label %126, !dbg !16662

100:                                              ; preds = %79
  %101 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16663
  %102 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %101, i32 0, i32 2, !dbg !16664
  %103 = load i32, i32* %102, align 8, !dbg !16664
  %104 = icmp eq i32 %103, 3, !dbg !16665
  br i1 %104, label %105, label %126, !dbg !16666

105:                                              ; preds = %100
  %106 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16667
  %107 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %106, i32 0, i32 6, !dbg !16669
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %107, align 8, !dbg !16669
  %109 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16670
  %110 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %109, i32 0, i32 1, !dbg !16671
  %111 = load i32, i32* %110, align 4, !dbg !16671
  %112 = load i32, i32* %11, align 4, !dbg !16672
  %113 = load i32, i32* %10, align 4, !dbg !16673
  %114 = load i64, i64* %32, align 8, !dbg !16674
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %108, i32 %111, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.263, i64 0, i64 0), i32 %112, i32 %113, i64 %114), !dbg !16675
  %115 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16676
  %116 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %115, i32 0, i32 6, !dbg !16677
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %116, align 8, !dbg !16677
  %118 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16678
  %119 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %118, i32 0, i32 1, !dbg !16679
  %120 = load i32, i32* %119, align 4, !dbg !16679
  %121 = load i16, i16* %21, align 2, !dbg !16680
  %122 = zext i16 %121 to i32, !dbg !16680
  %123 = load i16, i16* %12, align 2, !dbg !16681
  %124 = zext i16 %123 to i32, !dbg !16681
  %125 = load i32, i32* %18, align 4, !dbg !16682
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %117, i32 %120, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.264, i64 0, i64 0), i32 %122, i32 %124, i32 %125), !dbg !16683
  br label %126, !dbg !16684

126:                                              ; preds = %105, %100, %79
  %127 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16685
  %128 = call i32 @TIFFNumberOfStrips(%struct.tiff* %127), !dbg !16686
  %129 = trunc i32 %128 to i16, !dbg !16686
  store i16 %129, i16* %22, align 2, !dbg !16687
  %130 = load i16, i16* %22, align 2, !dbg !16688
  %131 = zext i16 %130 to i32, !dbg !16688
  %132 = load i16, i16* %12, align 2, !dbg !16689
  %133 = zext i16 %132 to i32, !dbg !16689
  %134 = sdiv i32 %131, %133, !dbg !16690
  %135 = trunc i32 %134 to i16, !dbg !16688
  store i16 %135, i16* %24, align 2, !dbg !16691
  store i16 0, i16* %30, align 2, !dbg !16692
  br label %136, !dbg !16694

136:                                              ; preds = %178, %126
  %137 = load i16, i16* %30, align 2, !dbg !16695
  %138 = zext i16 %137 to i32, !dbg !16695
  %139 = load i16, i16* %12, align 2, !dbg !16697
  %140 = zext i16 %139 to i32, !dbg !16697
  %141 = icmp slt i32 %138, %140, !dbg !16698
  br i1 %141, label %142, label %146, !dbg !16699

142:                                              ; preds = %136
  %143 = load i16, i16* %30, align 2, !dbg !16700
  %144 = zext i16 %143 to i32, !dbg !16700
  %145 = icmp slt i32 %144, 8, !dbg !16701
  br label %146

146:                                              ; preds = %142, %136
  %147 = phi i1 [ false, %136 ], [ %145, %142 ], !dbg !16702
  br i1 %147, label %148, label %181, !dbg !16703

148:                                              ; preds = %146
  %149 = load i16, i16* %30, align 2, !dbg !16704
  %150 = zext i16 %149 to i64, !dbg !16706
  %151 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %150, !dbg !16706
  store i8* null, i8** %151, align 8, !dbg !16707
  %152 = load i64, i64* %33, align 8, !dbg !16708
  %153 = call i8* @_TIFFmalloc(i64 %152), !dbg !16709
  store i8* %153, i8** %35, align 8, !dbg !16710
  %154 = load i8*, i8** %35, align 8, !dbg !16711
  %155 = icmp ne i8* %154, null, !dbg !16711
  br i1 %155, label %173, label %156, !dbg !16713

156:                                              ; preds = %148
  %157 = load i16, i16* %30, align 2, !dbg !16714
  %158 = zext i16 %157 to i32, !dbg !16714
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.265, i64 0, i64 0), i32 %158), !dbg !16716
  store i32 0, i32* %14, align 4, !dbg !16717
  br label %159, !dbg !16719

159:                                              ; preds = %169, %156
  %160 = load i32, i32* %14, align 4, !dbg !16720
  %161 = load i16, i16* %30, align 2, !dbg !16722
  %162 = zext i16 %161 to i32, !dbg !16722
  %163 = icmp slt i32 %160, %162, !dbg !16723
  br i1 %163, label %164, label %172, !dbg !16724

164:                                              ; preds = %159
  %165 = load i32, i32* %14, align 4, !dbg !16725
  %166 = sext i32 %165 to i64, !dbg !16726
  %167 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %166, !dbg !16726
  %168 = load i8*, i8** %167, align 8, !dbg !16726
  call void @_TIFFfree(i8* %168), !dbg !16727
  br label %169, !dbg !16727

169:                                              ; preds = %164
  %170 = load i32, i32* %14, align 4, !dbg !16728
  %171 = add nsw i32 %170, 1, !dbg !16728
  store i32 %171, i32* %14, align 4, !dbg !16728
  br label %159, !dbg !16729, !llvm.loop !16730

172:                                              ; preds = %159
  store i32 0, i32* %7, align 4, !dbg !16732
  br label %413, !dbg !16732

173:                                              ; preds = %148
  %174 = load i8*, i8** %35, align 8, !dbg !16733
  %175 = load i16, i16* %30, align 2, !dbg !16734
  %176 = zext i16 %175 to i64, !dbg !16735
  %177 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %176, !dbg !16735
  store i8* %174, i8** %177, align 8, !dbg !16736
  br label %178, !dbg !16737

178:                                              ; preds = %173
  %179 = load i16, i16* %30, align 2, !dbg !16738
  %180 = add i16 %179, 1, !dbg !16738
  store i16 %180, i16* %30, align 2, !dbg !16738
  br label %136, !dbg !16739, !llvm.loop !16740

181:                                              ; preds = %146
  store i32 0, i32* %27, align 4, !dbg !16742
  store i32 0, i32* %15, align 4, !dbg !16743
  br label %182, !dbg !16745

182:                                              ; preds = %382, %181
  %183 = load i32, i32* %15, align 4, !dbg !16746
  %184 = load i16, i16* %24, align 2, !dbg !16748
  %185 = zext i16 %184 to i32, !dbg !16748
  %186 = icmp slt i32 %183, %185, !dbg !16749
  br i1 %186, label %187, label %190, !dbg !16750

187:                                              ; preds = %182
  %188 = load i32, i32* %19, align 4, !dbg !16751
  %189 = icmp eq i32 %188, 1, !dbg !16752
  br label %190

190:                                              ; preds = %187, %182
  %191 = phi i1 [ false, %182 ], [ %189, %187 ], !dbg !16753
  br i1 %191, label %192, label %385, !dbg !16754

192:                                              ; preds = %190
  store i16 0, i16* %30, align 2, !dbg !16755
  br label %193, !dbg !16758

193:                                              ; preds = %240, %192
  %194 = load i16, i16* %30, align 2, !dbg !16759
  %195 = zext i16 %194 to i32, !dbg !16759
  %196 = load i16, i16* %12, align 2, !dbg !16761
  %197 = zext i16 %196 to i32, !dbg !16761
  %198 = icmp slt i32 %195, %197, !dbg !16762
  br i1 %198, label %199, label %203, !dbg !16763

199:                                              ; preds = %193
  %200 = load i16, i16* %30, align 2, !dbg !16764
  %201 = zext i16 %200 to i32, !dbg !16764
  %202 = icmp slt i32 %201, 8, !dbg !16765
  br label %203

203:                                              ; preds = %199, %193
  %204 = phi i1 [ false, %193 ], [ %202, %199 ], !dbg !16766
  br i1 %204, label %205, label %243, !dbg !16767

205:                                              ; preds = %203
  %206 = load i16, i16* %30, align 2, !dbg !16768
  %207 = zext i16 %206 to i64, !dbg !16770
  %208 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %207, !dbg !16770
  %209 = load i8*, i8** %208, align 8, !dbg !16770
  store i8* %209, i8** %35, align 8, !dbg !16771
  %210 = load i16, i16* %30, align 2, !dbg !16772
  %211 = zext i16 %210 to i32, !dbg !16772
  %212 = load i16, i16* %24, align 2, !dbg !16773
  %213 = zext i16 %212 to i32, !dbg !16773
  %214 = mul nsw i32 %211, %213, !dbg !16774
  %215 = load i32, i32* %15, align 4, !dbg !16775
  %216 = add nsw i32 %214, %215, !dbg !16776
  store i32 %216, i32* %31, align 4, !dbg !16777
  %217 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16778
  %218 = load i32, i32* %31, align 4, !dbg !16779
  %219 = load i8*, i8** %35, align 8, !dbg !16780
  %220 = load i64, i64* %33, align 8, !dbg !16781
  %221 = call i64 @TIFFReadEncodedStrip(%struct.tiff* %217, i32 %218, i8* %219, i64 %220), !dbg !16782
  %222 = trunc i64 %221 to i32, !dbg !16782
  store i32 %222, i32* %20, align 4, !dbg !16783
  %223 = load i32, i32* %20, align 4, !dbg !16784
  %224 = load i32, i32* %25, align 4, !dbg !16785
  %225 = udiv i32 %223, %224, !dbg !16786
  store i32 %225, i32* %29, align 4, !dbg !16787
  %226 = load i32, i32* %20, align 4, !dbg !16788
  %227 = icmp slt i32 %226, 0, !dbg !16790
  br i1 %227, label %228, label %239, !dbg !16791

228:                                              ; preds = %205
  %229 = load i32, i32* @ignore, align 4, !dbg !16792
  %230 = icmp ne i32 %229, 0, !dbg !16792
  br i1 %230, label %239, label %231, !dbg !16793

231:                                              ; preds = %228
  %232 = load %struct.tiff*, %struct.tiff** %8, align 8, !dbg !16794
  %233 = call i8* @TIFFFileName(%struct.tiff* %232), !dbg !16796
  %234 = load i32, i32* %31, align 4, !dbg !16797
  %235 = zext i32 %234 to i64, !dbg !16798
  %236 = load i16, i16* %30, align 2, !dbg !16799
  %237 = zext i16 %236 to i32, !dbg !16799
  %238 = add nsw i32 %237, 1, !dbg !16800
  call void (i8*, i8*, ...) @TIFFError(i8* %233, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.266, i64 0, i64 0), i64 %235, i32 %238), !dbg !16801
  store i32 0, i32* %19, align 4, !dbg !16802
  br label %243, !dbg !16803

239:                                              ; preds = %228, %205
  br label %240, !dbg !16804

240:                                              ; preds = %239
  %241 = load i16, i16* %30, align 2, !dbg !16805
  %242 = add i16 %241, 1, !dbg !16805
  store i16 %242, i16* %30, align 2, !dbg !16805
  br label %193, !dbg !16806, !llvm.loop !16807

243:                                              ; preds = %231, %203
  %244 = load i32, i32* %28, align 4, !dbg !16809
  %245 = load i32, i32* %29, align 4, !dbg !16811
  %246 = icmp ugt i32 %244, %245, !dbg !16812
  br i1 %246, label %247, label %249, !dbg !16813

247:                                              ; preds = %243
  %248 = load i32, i32* %29, align 4, !dbg !16814
  store i32 %248, i32* %28, align 4, !dbg !16815
  br label %249, !dbg !16816

249:                                              ; preds = %247, %243
  %250 = load i8*, i8** %9, align 8, !dbg !16817
  %251 = load i32, i32* %26, align 4, !dbg !16818
  %252 = load i32, i32* %27, align 4, !dbg !16819
  %253 = mul i32 %251, %252, !dbg !16820
  %254 = zext i32 %253 to i64, !dbg !16821
  %255 = getelementptr inbounds i8, i8* %250, i64 %254, !dbg !16821
  store i8* %255, i8** %36, align 8, !dbg !16822
  %256 = load i16, i16* %21, align 2, !dbg !16823
  %257 = zext i16 %256 to i32, !dbg !16823
  %258 = srem i32 %257, 8, !dbg !16825
  %259 = icmp eq i32 %258, 0, !dbg !16826
  br i1 %259, label %260, label %280, !dbg !16827

260:                                              ; preds = %249
  %261 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !16828
  %262 = load i8*, i8** %36, align 8, !dbg !16831
  %263 = load i32, i32* %11, align 4, !dbg !16832
  %264 = load i32, i32* %28, align 4, !dbg !16833
  %265 = load i16, i16* %12, align 2, !dbg !16834
  %266 = load i16, i16* %21, align 2, !dbg !16835
  %267 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16836
  %268 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %267, i32 0, i32 6, !dbg !16837
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** %268, align 8, !dbg !16837
  %270 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16838
  %271 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %270, i32 0, i32 1, !dbg !16839
  %272 = load i32, i32* %271, align 4, !dbg !16839
  %273 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16840
  %274 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %273, i32 0, i32 2, !dbg !16841
  %275 = load i32, i32* %274, align 8, !dbg !16841
  %276 = call i32 @combineSeparateSamplesBytes(i8** %261, i8* %262, i32 %263, i32 %264, i16 zeroext %265, i16 zeroext %266, %struct._IO_FILE* %269, i32 %272, i32 %275), !dbg !16842
  %277 = icmp ne i32 %276, 0, !dbg !16842
  br i1 %277, label %278, label %279, !dbg !16843

278:                                              ; preds = %260
  store i32 0, i32* %19, align 4, !dbg !16844
  br label %385, !dbg !16846

279:                                              ; preds = %260
  br label %366, !dbg !16847

280:                                              ; preds = %249
  %281 = load i32, i32* %18, align 4, !dbg !16848
  switch i32 %281, label %362 [
    i32 1, label %282
    i32 2, label %302
    i32 3, label %322
    i32 4, label %342
    i32 5, label %342
    i32 6, label %342
    i32 7, label %342
    i32 8, label %342
  ], !dbg !16850

282:                                              ; preds = %280
  %283 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !16851
  %284 = load i8*, i8** %36, align 8, !dbg !16854
  %285 = load i32, i32* %11, align 4, !dbg !16855
  %286 = load i32, i32* %28, align 4, !dbg !16856
  %287 = load i16, i16* %12, align 2, !dbg !16857
  %288 = load i16, i16* %21, align 2, !dbg !16858
  %289 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16859
  %290 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %289, i32 0, i32 6, !dbg !16860
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %290, align 8, !dbg !16860
  %292 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16861
  %293 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %292, i32 0, i32 1, !dbg !16862
  %294 = load i32, i32* %293, align 4, !dbg !16862
  %295 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16863
  %296 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %295, i32 0, i32 2, !dbg !16864
  %297 = load i32, i32* %296, align 8, !dbg !16864
  %298 = call i32 @combineSeparateSamples8bits(i8** %283, i8* %284, i32 %285, i32 %286, i16 zeroext %287, i16 zeroext %288, %struct._IO_FILE* %291, i32 %294, i32 %297), !dbg !16865
  %299 = icmp ne i32 %298, 0, !dbg !16865
  br i1 %299, label %300, label %301, !dbg !16866

300:                                              ; preds = %282
  store i32 0, i32* %19, align 4, !dbg !16867
  br label %365, !dbg !16869

301:                                              ; preds = %282
  br label %365, !dbg !16870

302:                                              ; preds = %280
  %303 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !16871
  %304 = load i8*, i8** %36, align 8, !dbg !16873
  %305 = load i32, i32* %11, align 4, !dbg !16874
  %306 = load i32, i32* %28, align 4, !dbg !16875
  %307 = load i16, i16* %12, align 2, !dbg !16876
  %308 = load i16, i16* %21, align 2, !dbg !16877
  %309 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16878
  %310 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %309, i32 0, i32 6, !dbg !16879
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %310, align 8, !dbg !16879
  %312 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16880
  %313 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %312, i32 0, i32 1, !dbg !16881
  %314 = load i32, i32* %313, align 4, !dbg !16881
  %315 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16882
  %316 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %315, i32 0, i32 2, !dbg !16883
  %317 = load i32, i32* %316, align 8, !dbg !16883
  %318 = call i32 @combineSeparateSamples16bits(i8** %303, i8* %304, i32 %305, i32 %306, i16 zeroext %307, i16 zeroext %308, %struct._IO_FILE* %311, i32 %314, i32 %317), !dbg !16884
  %319 = icmp ne i32 %318, 0, !dbg !16884
  br i1 %319, label %320, label %321, !dbg !16885

320:                                              ; preds = %302
  store i32 0, i32* %19, align 4, !dbg !16886
  br label %365, !dbg !16888

321:                                              ; preds = %302
  br label %365, !dbg !16889

322:                                              ; preds = %280
  %323 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !16890
  %324 = load i8*, i8** %36, align 8, !dbg !16892
  %325 = load i32, i32* %11, align 4, !dbg !16893
  %326 = load i32, i32* %28, align 4, !dbg !16894
  %327 = load i16, i16* %12, align 2, !dbg !16895
  %328 = load i16, i16* %21, align 2, !dbg !16896
  %329 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16897
  %330 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %329, i32 0, i32 6, !dbg !16898
  %331 = load %struct._IO_FILE*, %struct._IO_FILE** %330, align 8, !dbg !16898
  %332 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16899
  %333 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %332, i32 0, i32 1, !dbg !16900
  %334 = load i32, i32* %333, align 4, !dbg !16900
  %335 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16901
  %336 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %335, i32 0, i32 2, !dbg !16902
  %337 = load i32, i32* %336, align 8, !dbg !16902
  %338 = call i32 @combineSeparateSamples24bits(i8** %323, i8* %324, i32 %325, i32 %326, i16 zeroext %327, i16 zeroext %328, %struct._IO_FILE* %331, i32 %334, i32 %337), !dbg !16903
  %339 = icmp ne i32 %338, 0, !dbg !16903
  br i1 %339, label %340, label %341, !dbg !16904

340:                                              ; preds = %322
  store i32 0, i32* %19, align 4, !dbg !16905
  br label %365, !dbg !16907

341:                                              ; preds = %322
  br label %365, !dbg !16908

342:                                              ; preds = %280, %280, %280, %280, %280
  %343 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !16909
  %344 = load i8*, i8** %36, align 8, !dbg !16911
  %345 = load i32, i32* %11, align 4, !dbg !16912
  %346 = load i32, i32* %28, align 4, !dbg !16913
  %347 = load i16, i16* %12, align 2, !dbg !16914
  %348 = load i16, i16* %21, align 2, !dbg !16915
  %349 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16916
  %350 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %349, i32 0, i32 6, !dbg !16917
  %351 = load %struct._IO_FILE*, %struct._IO_FILE** %350, align 8, !dbg !16917
  %352 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16918
  %353 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %352, i32 0, i32 1, !dbg !16919
  %354 = load i32, i32* %353, align 4, !dbg !16919
  %355 = load %struct.dump_opts*, %struct.dump_opts** %13, align 8, !dbg !16920
  %356 = getelementptr inbounds %struct.dump_opts, %struct.dump_opts* %355, i32 0, i32 2, !dbg !16921
  %357 = load i32, i32* %356, align 8, !dbg !16921
  %358 = call i32 @combineSeparateSamples32bits(i8** %343, i8* %344, i32 %345, i32 %346, i16 zeroext %347, i16 zeroext %348, %struct._IO_FILE* %351, i32 %354, i32 %357), !dbg !16922
  %359 = icmp ne i32 %358, 0, !dbg !16922
  br i1 %359, label %360, label %361, !dbg !16923

360:                                              ; preds = %342
  store i32 0, i32* %19, align 4, !dbg !16924
  br label %365, !dbg !16926

361:                                              ; preds = %342
  br label %365, !dbg !16927

362:                                              ; preds = %280
  %363 = load i16, i16* %21, align 2, !dbg !16928
  %364 = zext i16 %363 to i32, !dbg !16928
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.261, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.267, i64 0, i64 0), i32 %364), !dbg !16929
  store i32 0, i32* %19, align 4, !dbg !16930
  br label %365, !dbg !16931

365:                                              ; preds = %362, %361, %360, %341, %340, %321, %320, %301, %300
  br label %366

366:                                              ; preds = %365, %279
  %367 = load i32, i32* %27, align 4, !dbg !16932
  %368 = load i32, i32* %28, align 4, !dbg !16934
  %369 = add i32 %367, %368, !dbg !16935
  %370 = load i32, i32* %10, align 4, !dbg !16936
  %371 = icmp ugt i32 %369, %370, !dbg !16937
  br i1 %371, label %372, label %377, !dbg !16938

372:                                              ; preds = %366
  %373 = load i32, i32* %10, align 4, !dbg !16939
  store i32 %373, i32* %27, align 4, !dbg !16941
  %374 = load i32, i32* %10, align 4, !dbg !16942
  %375 = load i32, i32* %27, align 4, !dbg !16943
  %376 = sub i32 %374, %375, !dbg !16944
  store i32 %376, i32* %28, align 4, !dbg !16945
  br label %381, !dbg !16946

377:                                              ; preds = %366
  %378 = load i32, i32* %28, align 4, !dbg !16947
  %379 = load i32, i32* %27, align 4, !dbg !16948
  %380 = add i32 %379, %378, !dbg !16948
  store i32 %380, i32* %27, align 4, !dbg !16948
  br label %381

381:                                              ; preds = %377, %372
  br label %382, !dbg !16949

382:                                              ; preds = %381
  %383 = load i32, i32* %15, align 4, !dbg !16950
  %384 = add nsw i32 %383, 1, !dbg !16950
  store i32 %384, i32* %15, align 4, !dbg !16950
  br label %182, !dbg !16951, !llvm.loop !16952

385:                                              ; preds = %278, %190
  store i16 0, i16* %30, align 2, !dbg !16954
  br label %386, !dbg !16956

386:                                              ; preds = %408, %385
  %387 = load i16, i16* %30, align 2, !dbg !16957
  %388 = zext i16 %387 to i32, !dbg !16957
  %389 = load i16, i16* %12, align 2, !dbg !16959
  %390 = zext i16 %389 to i32, !dbg !16959
  %391 = icmp slt i32 %388, %390, !dbg !16960
  br i1 %391, label %392, label %396, !dbg !16961

392:                                              ; preds = %386
  %393 = load i16, i16* %30, align 2, !dbg !16962
  %394 = zext i16 %393 to i32, !dbg !16962
  %395 = icmp slt i32 %394, 8, !dbg !16963
  br label %396

396:                                              ; preds = %392, %386
  %397 = phi i1 [ false, %386 ], [ %395, %392 ], !dbg !16964
  br i1 %397, label %398, label %411, !dbg !16965

398:                                              ; preds = %396
  %399 = load i16, i16* %30, align 2, !dbg !16966
  %400 = zext i16 %399 to i64, !dbg !16968
  %401 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %400, !dbg !16968
  %402 = load i8*, i8** %401, align 8, !dbg !16968
  store i8* %402, i8** %35, align 8, !dbg !16969
  %403 = load i8*, i8** %35, align 8, !dbg !16970
  %404 = icmp ne i8* %403, null, !dbg !16972
  br i1 %404, label %405, label %407, !dbg !16973

405:                                              ; preds = %398
  %406 = load i8*, i8** %35, align 8, !dbg !16974
  call void @_TIFFfree(i8* %406), !dbg !16975
  br label %407, !dbg !16975

407:                                              ; preds = %405, %398
  br label %408, !dbg !16976

408:                                              ; preds = %407
  %409 = load i16, i16* %30, align 2, !dbg !16977
  %410 = add i16 %409, 1, !dbg !16977
  store i16 %410, i16* %30, align 2, !dbg !16977
  br label %386, !dbg !16978, !llvm.loop !16979

411:                                              ; preds = %396
  %412 = load i32, i32* %19, align 4, !dbg !16981
  store i32 %412, i32* %7, align 4, !dbg !16982
  br label %413, !dbg !16982

413:                                              ; preds = %411, %172, %43
  %414 = load i32, i32* %7, align 4, !dbg !16983
  ret i32 %414, !dbg !16983
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @readContigTilesIntoBuffer(%struct.tiff*, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext) #0 !dbg !16984 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.tiff*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %10, metadata !16987, metadata !DIExpression()), !dbg !16988
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !16989, metadata !DIExpression()), !dbg !16990
  store i32 %2, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !16991, metadata !DIExpression()), !dbg !16992
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !16993, metadata !DIExpression()), !dbg !16994
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !16995, metadata !DIExpression()), !dbg !16996
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !16997, metadata !DIExpression()), !dbg !16998
  store i16 %6, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !16999, metadata !DIExpression()), !dbg !17000
  store i16 %7, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !17001, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.declare(metadata i32* %18, metadata !17003, metadata !DIExpression()), !dbg !17004
  store i32 1, i32* %18, align 4, !dbg !17004
  call void @llvm.dbg.declare(metadata i16* %19, metadata !17005, metadata !DIExpression()), !dbg !17006
  store i16 0, i16* %19, align 2, !dbg !17006
  call void @llvm.dbg.declare(metadata i16* %20, metadata !17007, metadata !DIExpression()), !dbg !17008
  %44 = load i16, i16* %16, align 2, !dbg !17009
  store i16 %44, i16* %20, align 2, !dbg !17008
  call void @llvm.dbg.declare(metadata i32* %21, metadata !17010, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.declare(metadata i32* %22, metadata !17012, metadata !DIExpression()), !dbg !17013
  call void @llvm.dbg.declare(metadata i32* %23, metadata !17014, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.declare(metadata i32* %24, metadata !17016, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.declare(metadata i32* %25, metadata !17018, metadata !DIExpression()), !dbg !17019
  call void @llvm.dbg.declare(metadata i32* %26, metadata !17020, metadata !DIExpression()), !dbg !17021
  call void @llvm.dbg.declare(metadata i32* %27, metadata !17022, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.declare(metadata i32* %28, metadata !17024, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.declare(metadata i32* %29, metadata !17026, metadata !DIExpression()), !dbg !17027
  call void @llvm.dbg.declare(metadata i32* %30, metadata !17028, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.declare(metadata i32* %31, metadata !17030, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.declare(metadata i32* %32, metadata !17032, metadata !DIExpression()), !dbg !17033
  %45 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17034
  %46 = call i64 @TIFFTileRowSize(%struct.tiff* %45), !dbg !17035
  %47 = trunc i64 %46 to i32, !dbg !17035
  store i32 %47, i32* %32, align 4, !dbg !17033
  call void @llvm.dbg.declare(metadata i32* %33, metadata !17036, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.declare(metadata i32* %34, metadata !17038, metadata !DIExpression()), !dbg !17039
  call void @llvm.dbg.declare(metadata i32* %35, metadata !17040, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.declare(metadata i32* %36, metadata !17042, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.declare(metadata i8** %37, metadata !17044, metadata !DIExpression()), !dbg !17045
  %48 = load i8*, i8** %11, align 8, !dbg !17046
  store i8* %48, i8** %37, align 8, !dbg !17045
  call void @llvm.dbg.declare(metadata i8** %38, metadata !17047, metadata !DIExpression()), !dbg !17048
  store i8* null, i8** %38, align 8, !dbg !17048
  call void @llvm.dbg.declare(metadata i8** %39, metadata !17049, metadata !DIExpression()), !dbg !17050
  store i8* null, i8** %39, align 8, !dbg !17050
  call void @llvm.dbg.declare(metadata i64* %40, metadata !17051, metadata !DIExpression()), !dbg !17052
  store i64 0, i64* %40, align 8, !dbg !17052
  call void @llvm.dbg.declare(metadata i64* %41, metadata !17053, metadata !DIExpression()), !dbg !17054
  store i64 0, i64* %41, align 8, !dbg !17054
  call void @llvm.dbg.declare(metadata i64* %42, metadata !17055, metadata !DIExpression()), !dbg !17056
  %49 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17057
  %50 = call i64 @TIFFTileSize(%struct.tiff* %49), !dbg !17058
  store i64 %50, i64* %42, align 8, !dbg !17056
  call void @llvm.dbg.declare(metadata i8** %43, metadata !17059, metadata !DIExpression()), !dbg !17060
  store i8* null, i8** %43, align 8, !dbg !17060
  %51 = load i16, i16* %17, align 2, !dbg !17061
  %52 = zext i16 %51 to i32, !dbg !17061
  %53 = add nsw i32 %52, 7, !dbg !17062
  %54 = sdiv i32 %53, 8, !dbg !17063
  store i32 %54, i32* %28, align 4, !dbg !17064
  %55 = load i16, i16* %17, align 2, !dbg !17065
  %56 = zext i16 %55 to i32, !dbg !17065
  %57 = load i16, i16* %16, align 2, !dbg !17066
  %58 = zext i16 %57 to i32, !dbg !17066
  %59 = mul nsw i32 %56, %58, !dbg !17067
  %60 = add nsw i32 %59, 7, !dbg !17068
  %61 = sdiv i32 %60, 8, !dbg !17069
  store i32 %61, i32* %29, align 4, !dbg !17070
  %62 = load i16, i16* %17, align 2, !dbg !17071
  %63 = zext i16 %62 to i32, !dbg !17071
  %64 = srem i32 %63, 8, !dbg !17073
  %65 = icmp eq i32 %64, 0, !dbg !17074
  br i1 %65, label %66, label %67, !dbg !17075

66:                                               ; preds = %8
  store i32 0, i32* %27, align 4, !dbg !17076
  br label %78, !dbg !17077

67:                                               ; preds = %8
  %68 = load i32, i32* %29, align 4, !dbg !17078
  %69 = load i32, i32* %28, align 4, !dbg !17081
  %70 = add i32 %69, 1, !dbg !17082
  %71 = icmp ult i32 %68, %70, !dbg !17083
  br i1 %71, label %72, label %74, !dbg !17084

72:                                               ; preds = %67
  %73 = load i32, i32* %29, align 4, !dbg !17085
  store i32 %73, i32* %27, align 4, !dbg !17086
  br label %77, !dbg !17087

74:                                               ; preds = %67
  %75 = load i32, i32* %28, align 4, !dbg !17088
  %76 = add i32 %75, 1, !dbg !17089
  store i32 %76, i32* %27, align 4, !dbg !17090
  br label %77

77:                                               ; preds = %74, %72
  br label %78

78:                                               ; preds = %77, %66
  %79 = load i64, i64* %42, align 8, !dbg !17091
  store i64 %79, i64* %41, align 8, !dbg !17092
  %80 = load i64, i64* %42, align 8, !dbg !17093
  %81 = load i32, i32* %15, align 4, !dbg !17095
  %82 = load i32, i32* %32, align 4, !dbg !17096
  %83 = mul i32 %81, %82, !dbg !17097
  %84 = zext i32 %83 to i64, !dbg !17098
  %85 = icmp slt i64 %80, %84, !dbg !17099
  br i1 %85, label %86, label %91, !dbg !17100

86:                                               ; preds = %78
  %87 = load i32, i32* %15, align 4, !dbg !17101
  %88 = load i32, i32* %32, align 4, !dbg !17103
  %89 = mul i32 %87, %88, !dbg !17104
  %90 = zext i32 %89 to i64, !dbg !17101
  store i64 %90, i64* %41, align 8, !dbg !17105
  br label %91, !dbg !17106

91:                                               ; preds = %86, %78
  %92 = load i64, i64* %41, align 8, !dbg !17107
  %93 = call i8* @_TIFFmalloc(i64 %92), !dbg !17108
  store i8* %93, i8** %43, align 8, !dbg !17109
  %94 = load i8*, i8** %43, align 8, !dbg !17110
  %95 = icmp eq i8* %94, null, !dbg !17112
  br i1 %95, label %96, label %97, !dbg !17113

96:                                               ; preds = %91
  store i32 0, i32* %9, align 4, !dbg !17114
  br label %390, !dbg !17114

97:                                               ; preds = %91
  %98 = load i32, i32* %13, align 4, !dbg !17115
  %99 = load i16, i16* %17, align 2, !dbg !17116
  %100 = zext i16 %99 to i32, !dbg !17116
  %101 = mul i32 %98, %100, !dbg !17117
  %102 = load i16, i16* %16, align 2, !dbg !17118
  %103 = zext i16 %102 to i32, !dbg !17118
  %104 = mul i32 %101, %103, !dbg !17119
  %105 = add i32 %104, 7, !dbg !17120
  %106 = udiv i32 %105, 8, !dbg !17121
  store i32 %106, i32* %26, align 4, !dbg !17122
  store i32 0, i32* %21, align 4, !dbg !17123
  br label %107, !dbg !17125

107:                                              ; preds = %383, %97
  %108 = load i32, i32* %21, align 4, !dbg !17126
  %109 = load i32, i32* %12, align 4, !dbg !17128
  %110 = icmp ult i32 %108, %109, !dbg !17129
  br i1 %110, label %111, label %387, !dbg !17130

111:                                              ; preds = %107
  %112 = load i32, i32* %21, align 4, !dbg !17131
  %113 = load i32, i32* %15, align 4, !dbg !17133
  %114 = add i32 %112, %113, !dbg !17134
  %115 = load i32, i32* %12, align 4, !dbg !17135
  %116 = icmp ugt i32 %114, %115, !dbg !17136
  br i1 %116, label %117, label %121, !dbg !17137

117:                                              ; preds = %111
  %118 = load i32, i32* %12, align 4, !dbg !17138
  %119 = load i32, i32* %21, align 4, !dbg !17139
  %120 = sub i32 %118, %119, !dbg !17140
  br label %123, !dbg !17137

121:                                              ; preds = %111
  %122 = load i32, i32* %15, align 4, !dbg !17141
  br label %123, !dbg !17137

123:                                              ; preds = %121, %117
  %124 = phi i32 [ %120, %117 ], [ %122, %121 ], !dbg !17137
  store i32 %124, i32* %24, align 4, !dbg !17142
  store i32 0, i32* %22, align 4, !dbg !17143
  br label %125, !dbg !17145

125:                                              ; preds = %378, %123
  %126 = load i32, i32* %22, align 4, !dbg !17146
  %127 = load i32, i32* %13, align 4, !dbg !17148
  %128 = icmp ult i32 %126, %127, !dbg !17149
  br i1 %128, label %129, label %382, !dbg !17150

129:                                              ; preds = %125
  %130 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17151
  %131 = load i8*, i8** %43, align 8, !dbg !17153
  %132 = load i32, i32* %22, align 4, !dbg !17154
  %133 = load i32, i32* %21, align 4, !dbg !17155
  %134 = call i64 @TIFFReadTile(%struct.tiff* %130, i8* %131, i32 %132, i32 %133, i32 0, i16 zeroext 0), !dbg !17156
  store i64 %134, i64* %40, align 8, !dbg !17157
  %135 = load i64, i64* %40, align 8, !dbg !17158
  %136 = load i64, i64* %42, align 8, !dbg !17160
  %137 = icmp slt i64 %135, %136, !dbg !17161
  br i1 %137, label %138, label %152, !dbg !17162

138:                                              ; preds = %129
  %139 = load i32, i32* @ignore, align 4, !dbg !17163
  %140 = icmp ne i32 %139, 0, !dbg !17163
  br i1 %140, label %152, label %141, !dbg !17164

141:                                              ; preds = %138
  %142 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17165
  %143 = call i8* @TIFFFileName(%struct.tiff* %142), !dbg !17167
  %144 = load i32, i32* %22, align 4, !dbg !17168
  %145 = zext i32 %144 to i64, !dbg !17169
  %146 = load i32, i32* %21, align 4, !dbg !17170
  %147 = zext i32 %146 to i64, !dbg !17171
  %148 = load i64, i64* %40, align 8, !dbg !17172
  %149 = load i64, i64* %42, align 8, !dbg !17173
  call void (i8*, i8*, ...) @TIFFError(i8* %143, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.305, i64 0, i64 0), i64 %145, i64 %147, i64 %148, i64 %149), !dbg !17174
  store i32 0, i32* %18, align 4, !dbg !17175
  %150 = load i8*, i8** %43, align 8, !dbg !17176
  call void @_TIFFfree(i8* %150), !dbg !17177
  %151 = load i32, i32* %18, align 4, !dbg !17178
  store i32 %151, i32* %9, align 4, !dbg !17179
  br label %390, !dbg !17179

152:                                              ; preds = %138, %129
  %153 = load i32, i32* %21, align 4, !dbg !17180
  %154 = load i32, i32* %26, align 4, !dbg !17181
  %155 = mul i32 %153, %154, !dbg !17182
  store i32 %155, i32* %35, align 4, !dbg !17183
  %156 = load i32, i32* %22, align 4, !dbg !17184
  %157 = load i16, i16* %17, align 2, !dbg !17185
  %158 = zext i16 %157 to i32, !dbg !17185
  %159 = mul i32 %156, %158, !dbg !17186
  %160 = load i16, i16* %16, align 2, !dbg !17187
  %161 = zext i16 %160 to i32, !dbg !17187
  %162 = mul i32 %159, %161, !dbg !17188
  %163 = add i32 %162, 7, !dbg !17189
  %164 = udiv i32 %163, 8, !dbg !17190
  store i32 %164, i32* %36, align 4, !dbg !17191
  %165 = load i8*, i8** %11, align 8, !dbg !17192
  %166 = load i32, i32* %35, align 4, !dbg !17193
  %167 = zext i32 %166 to i64, !dbg !17194
  %168 = getelementptr inbounds i8, i8* %165, i64 %167, !dbg !17194
  %169 = load i32, i32* %36, align 4, !dbg !17195
  %170 = zext i32 %169 to i64, !dbg !17196
  %171 = getelementptr inbounds i8, i8* %168, i64 %170, !dbg !17196
  store i8* %171, i8** %37, align 8, !dbg !17197
  %172 = load i32, i32* %22, align 4, !dbg !17198
  %173 = load i32, i32* %14, align 4, !dbg !17200
  %174 = add i32 %172, %173, !dbg !17201
  %175 = load i32, i32* %13, align 4, !dbg !17202
  %176 = icmp ugt i32 %174, %175, !dbg !17203
  br i1 %176, label %177, label %181, !dbg !17204

177:                                              ; preds = %152
  %178 = load i32, i32* %13, align 4, !dbg !17205
  %179 = load i32, i32* %22, align 4, !dbg !17206
  %180 = sub i32 %178, %179, !dbg !17207
  store i32 %180, i32* %25, align 4, !dbg !17208
  br label %183, !dbg !17209

181:                                              ; preds = %152
  %182 = load i32, i32* %14, align 4, !dbg !17210
  store i32 %182, i32* %25, align 4, !dbg !17211
  br label %183

183:                                              ; preds = %181, %177
  %184 = load i16, i16* %17, align 2, !dbg !17212
  %185 = zext i16 %184 to i32, !dbg !17212
  %186 = srem i32 %185, 8, !dbg !17214
  %187 = icmp eq i32 %186, 0, !dbg !17215
  br i1 %187, label %188, label %232, !dbg !17216

188:                                              ; preds = %183
  %189 = load i16, i16* %20, align 2, !dbg !17217
  %190 = zext i16 %189 to i32, !dbg !17217
  %191 = load i16, i16* %16, align 2, !dbg !17218
  %192 = zext i16 %191 to i32, !dbg !17218
  %193 = icmp eq i32 %190, %192, !dbg !17219
  br i1 %193, label %194, label %232, !dbg !17220

194:                                              ; preds = %188
  store i32 0, i32* %23, align 4, !dbg !17221
  br label %195, !dbg !17224

195:                                              ; preds = %228, %194
  %196 = load i32, i32* %23, align 4, !dbg !17225
  %197 = load i32, i32* %24, align 4, !dbg !17227
  %198 = icmp ult i32 %196, %197, !dbg !17228
  br i1 %198, label %199, label %231, !dbg !17229

199:                                              ; preds = %195
  %200 = load i32, i32* %23, align 4, !dbg !17230
  %201 = load i32, i32* %32, align 4, !dbg !17232
  %202 = mul i32 %200, %201, !dbg !17233
  store i32 %202, i32* %33, align 4, !dbg !17234
  %203 = load i8*, i8** %37, align 8, !dbg !17235
  %204 = load i8*, i8** %43, align 8, !dbg !17236
  %205 = load i32, i32* %33, align 4, !dbg !17237
  %206 = zext i32 %205 to i64, !dbg !17238
  %207 = getelementptr inbounds i8, i8* %204, i64 %206, !dbg !17238
  %208 = load i32, i32* %25, align 4, !dbg !17239
  %209 = load i16, i16* %16, align 2, !dbg !17240
  %210 = zext i16 %209 to i32, !dbg !17240
  %211 = mul i32 %208, %210, !dbg !17241
  %212 = load i16, i16* %17, align 2, !dbg !17242
  %213 = zext i16 %212 to i32, !dbg !17242
  %214 = mul i32 %211, %213, !dbg !17243
  %215 = udiv i32 %214, 8, !dbg !17244
  %216 = zext i32 %215 to i64, !dbg !17245
  call void @_TIFFmemcpy(i8* %203, i8* %207, i64 %216), !dbg !17246
  %217 = load i32, i32* %13, align 4, !dbg !17247
  %218 = load i16, i16* %17, align 2, !dbg !17248
  %219 = zext i16 %218 to i32, !dbg !17248
  %220 = mul i32 %217, %219, !dbg !17249
  %221 = load i16, i16* %16, align 2, !dbg !17250
  %222 = zext i16 %221 to i32, !dbg !17250
  %223 = mul i32 %220, %222, !dbg !17251
  %224 = udiv i32 %223, 8, !dbg !17252
  %225 = load i8*, i8** %37, align 8, !dbg !17253
  %226 = zext i32 %224 to i64, !dbg !17253
  %227 = getelementptr inbounds i8, i8* %225, i64 %226, !dbg !17253
  store i8* %227, i8** %37, align 8, !dbg !17253
  br label %228, !dbg !17254

228:                                              ; preds = %199
  %229 = load i32, i32* %23, align 4, !dbg !17255
  %230 = add i32 %229, 1, !dbg !17255
  store i32 %230, i32* %23, align 4, !dbg !17255
  br label %195, !dbg !17256, !llvm.loop !17257

231:                                              ; preds = %195
  br label %377, !dbg !17259

232:                                              ; preds = %188, %183
  store i32 0, i32* %30, align 4, !dbg !17260
  store i32 0, i32* %31, align 4, !dbg !17262
  %233 = load i32, i32* %25, align 4, !dbg !17263
  %234 = load i16, i16* %17, align 2, !dbg !17264
  %235 = zext i16 %234 to i32, !dbg !17264
  %236 = mul i32 %233, %235, !dbg !17265
  %237 = load i16, i16* %16, align 2, !dbg !17266
  %238 = zext i16 %237 to i32, !dbg !17266
  %239 = mul i32 %236, %238, !dbg !17267
  %240 = urem i32 %239, 8, !dbg !17268
  store i32 %240, i32* %30, align 4, !dbg !17269
  store i32 0, i32* %23, align 4, !dbg !17270
  br label %241, !dbg !17272

241:                                              ; preds = %364, %232
  %242 = load i32, i32* %23, align 4, !dbg !17273
  %243 = load i32, i32* %24, align 4, !dbg !17275
  %244 = icmp ult i32 %242, %243, !dbg !17276
  br i1 %244, label %245, label %367, !dbg !17277

245:                                              ; preds = %241
  %246 = load i32, i32* %23, align 4, !dbg !17278
  %247 = load i32, i32* %32, align 4, !dbg !17280
  %248 = mul i32 %246, %247, !dbg !17281
  store i32 %248, i32* %33, align 4, !dbg !17282
  %249 = load i8*, i8** %43, align 8, !dbg !17283
  %250 = load i32, i32* %33, align 4, !dbg !17284
  %251 = zext i32 %250 to i64, !dbg !17285
  %252 = getelementptr inbounds i8, i8* %249, i64 %251, !dbg !17285
  store i8* %252, i8** %38, align 8, !dbg !17286
  %253 = load i32, i32* %21, align 4, !dbg !17287
  %254 = load i32, i32* %23, align 4, !dbg !17288
  %255 = add i32 %253, %254, !dbg !17289
  %256 = load i32, i32* %26, align 4, !dbg !17290
  %257 = mul i32 %255, %256, !dbg !17291
  store i32 %257, i32* %34, align 4, !dbg !17292
  %258 = load i8*, i8** %11, align 8, !dbg !17293
  %259 = load i32, i32* %34, align 4, !dbg !17294
  %260 = zext i32 %259 to i64, !dbg !17295
  %261 = getelementptr inbounds i8, i8* %258, i64 %260, !dbg !17295
  %262 = load i32, i32* %36, align 4, !dbg !17296
  %263 = zext i32 %262 to i64, !dbg !17297
  %264 = getelementptr inbounds i8, i8* %261, i64 %263, !dbg !17297
  store i8* %264, i8** %39, align 8, !dbg !17298
  %265 = load i32, i32* %27, align 4, !dbg !17299
  switch i32 %265, label %360 [
    i32 0, label %266
    i32 1, label %283
    i32 2, label %324
    i32 3, label %342
    i32 4, label %342
    i32 5, label %342
  ], !dbg !17300

266:                                              ; preds = %245
  %267 = load i8*, i8** %38, align 8, !dbg !17301
  %268 = load i8*, i8** %39, align 8, !dbg !17304
  %269 = load i32, i32* %25, align 4, !dbg !17305
  %270 = load i16, i16* %19, align 2, !dbg !17306
  %271 = load i16, i16* %16, align 2, !dbg !17307
  %272 = load i16, i16* %17, align 2, !dbg !17308
  %273 = load i16, i16* %20, align 2, !dbg !17309
  %274 = load i32, i32* %25, align 4, !dbg !17310
  %275 = call i32 @extractContigSamplesBytes(i8* %267, i8* %268, i32 %269, i16 zeroext %270, i16 zeroext %271, i16 zeroext %272, i16 zeroext %273, i32 0, i32 %274), !dbg !17311
  %276 = icmp ne i32 %275, 0, !dbg !17311
  br i1 %276, label %277, label %282, !dbg !17312

277:                                              ; preds = %266
  %278 = load i32, i32* %21, align 4, !dbg !17313
  %279 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17315
  %280 = call i32 @TIFFCurrentTile(%struct.tiff* %279), !dbg !17316
  %281 = zext i32 %280 to i64, !dbg !17317
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.307, i64 0, i64 0), i32 %278, i64 %281), !dbg !17318
  store i32 1, i32* %9, align 4, !dbg !17319
  br label %390, !dbg !17319

282:                                              ; preds = %266
  br label %363, !dbg !17320

283:                                              ; preds = %245
  %284 = load i16, i16* %17, align 2, !dbg !17321
  %285 = zext i16 %284 to i32, !dbg !17321
  %286 = icmp eq i32 %285, 1, !dbg !17323
  br i1 %286, label %287, label %305, !dbg !17324

287:                                              ; preds = %283
  %288 = load i8*, i8** %38, align 8, !dbg !17325
  %289 = load i8*, i8** %39, align 8, !dbg !17328
  %290 = load i32, i32* %25, align 4, !dbg !17329
  %291 = load i16, i16* %19, align 2, !dbg !17330
  %292 = load i16, i16* %16, align 2, !dbg !17331
  %293 = load i16, i16* %17, align 2, !dbg !17332
  %294 = load i16, i16* %20, align 2, !dbg !17333
  %295 = load i32, i32* %25, align 4, !dbg !17334
  %296 = load i32, i32* %31, align 4, !dbg !17335
  %297 = call i32 @extractContigSamplesShifted8bits(i8* %288, i8* %289, i32 %290, i16 zeroext %291, i16 zeroext %292, i16 zeroext %293, i16 zeroext %294, i32 0, i32 %295, i32 %296), !dbg !17336
  %298 = icmp ne i32 %297, 0, !dbg !17336
  br i1 %298, label %299, label %304, !dbg !17337

299:                                              ; preds = %287
  %300 = load i32, i32* %21, align 4, !dbg !17338
  %301 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17340
  %302 = call i32 @TIFFCurrentTile(%struct.tiff* %301), !dbg !17341
  %303 = zext i32 %302 to i64, !dbg !17342
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.307, i64 0, i64 0), i32 %300, i64 %303), !dbg !17343
  store i32 1, i32* %9, align 4, !dbg !17344
  br label %390, !dbg !17344

304:                                              ; preds = %287
  br label %363, !dbg !17345

305:                                              ; preds = %283
  %306 = load i8*, i8** %38, align 8, !dbg !17346
  %307 = load i8*, i8** %39, align 8, !dbg !17348
  %308 = load i32, i32* %25, align 4, !dbg !17349
  %309 = load i16, i16* %19, align 2, !dbg !17350
  %310 = load i16, i16* %16, align 2, !dbg !17351
  %311 = load i16, i16* %17, align 2, !dbg !17352
  %312 = load i16, i16* %20, align 2, !dbg !17353
  %313 = load i32, i32* %25, align 4, !dbg !17354
  %314 = load i32, i32* %31, align 4, !dbg !17355
  %315 = call i32 @extractContigSamplesShifted16bits(i8* %306, i8* %307, i32 %308, i16 zeroext %309, i16 zeroext %310, i16 zeroext %311, i16 zeroext %312, i32 0, i32 %313, i32 %314), !dbg !17356
  %316 = icmp ne i32 %315, 0, !dbg !17356
  br i1 %316, label %317, label %322, !dbg !17357

317:                                              ; preds = %305
  %318 = load i32, i32* %21, align 4, !dbg !17358
  %319 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17360
  %320 = call i32 @TIFFCurrentTile(%struct.tiff* %319), !dbg !17361
  %321 = zext i32 %320 to i64, !dbg !17362
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.307, i64 0, i64 0), i32 %318, i64 %321), !dbg !17363
  store i32 1, i32* %9, align 4, !dbg !17364
  br label %390, !dbg !17364

322:                                              ; preds = %305
  br label %323

323:                                              ; preds = %322
  br label %363, !dbg !17365

324:                                              ; preds = %245
  %325 = load i8*, i8** %38, align 8, !dbg !17366
  %326 = load i8*, i8** %39, align 8, !dbg !17368
  %327 = load i32, i32* %25, align 4, !dbg !17369
  %328 = load i16, i16* %19, align 2, !dbg !17370
  %329 = load i16, i16* %16, align 2, !dbg !17371
  %330 = load i16, i16* %17, align 2, !dbg !17372
  %331 = load i16, i16* %20, align 2, !dbg !17373
  %332 = load i32, i32* %25, align 4, !dbg !17374
  %333 = load i32, i32* %31, align 4, !dbg !17375
  %334 = call i32 @extractContigSamplesShifted24bits(i8* %325, i8* %326, i32 %327, i16 zeroext %328, i16 zeroext %329, i16 zeroext %330, i16 zeroext %331, i32 0, i32 %332, i32 %333), !dbg !17376
  %335 = icmp ne i32 %334, 0, !dbg !17376
  br i1 %335, label %336, label %341, !dbg !17377

336:                                              ; preds = %324
  %337 = load i32, i32* %21, align 4, !dbg !17378
  %338 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17380
  %339 = call i32 @TIFFCurrentTile(%struct.tiff* %338), !dbg !17381
  %340 = zext i32 %339 to i64, !dbg !17382
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.307, i64 0, i64 0), i32 %337, i64 %340), !dbg !17383
  store i32 1, i32* %9, align 4, !dbg !17384
  br label %390, !dbg !17384

341:                                              ; preds = %324
  br label %363, !dbg !17385

342:                                              ; preds = %245, %245, %245
  %343 = load i8*, i8** %38, align 8, !dbg !17386
  %344 = load i8*, i8** %39, align 8, !dbg !17388
  %345 = load i32, i32* %25, align 4, !dbg !17389
  %346 = load i16, i16* %19, align 2, !dbg !17390
  %347 = load i16, i16* %16, align 2, !dbg !17391
  %348 = load i16, i16* %17, align 2, !dbg !17392
  %349 = load i16, i16* %20, align 2, !dbg !17393
  %350 = load i32, i32* %25, align 4, !dbg !17394
  %351 = load i32, i32* %31, align 4, !dbg !17395
  %352 = call i32 @extractContigSamplesShifted32bits(i8* %343, i8* %344, i32 %345, i16 zeroext %346, i16 zeroext %347, i16 zeroext %348, i16 zeroext %349, i32 0, i32 %350, i32 %351), !dbg !17396
  %353 = icmp ne i32 %352, 0, !dbg !17396
  br i1 %353, label %354, label %359, !dbg !17397

354:                                              ; preds = %342
  %355 = load i32, i32* %21, align 4, !dbg !17398
  %356 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17400
  %357 = call i32 @TIFFCurrentTile(%struct.tiff* %356), !dbg !17401
  %358 = zext i32 %357 to i64, !dbg !17402
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.307, i64 0, i64 0), i32 %355, i64 %358), !dbg !17403
  store i32 1, i32* %9, align 4, !dbg !17404
  br label %390, !dbg !17404

359:                                              ; preds = %342
  br label %363, !dbg !17405

360:                                              ; preds = %245
  %361 = load i16, i16* %17, align 2, !dbg !17406
  %362 = zext i16 %361 to i32, !dbg !17406
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.308, i64 0, i64 0), i32 %362), !dbg !17407
  store i32 1, i32* %9, align 4, !dbg !17408
  br label %390, !dbg !17408

363:                                              ; preds = %359, %341, %323, %304, %282
  br label %364, !dbg !17409

364:                                              ; preds = %363
  %365 = load i32, i32* %23, align 4, !dbg !17410
  %366 = add i32 %365, 1, !dbg !17410
  store i32 %366, i32* %23, align 4, !dbg !17410
  br label %241, !dbg !17411, !llvm.loop !17412

367:                                              ; preds = %241
  %368 = load i32, i32* %30, align 4, !dbg !17414
  %369 = load i32, i32* %31, align 4, !dbg !17415
  %370 = add i32 %369, %368, !dbg !17415
  store i32 %370, i32* %31, align 4, !dbg !17415
  %371 = load i32, i32* %31, align 4, !dbg !17416
  %372 = icmp ugt i32 %371, 7, !dbg !17418
  br i1 %372, label %373, label %376, !dbg !17419

373:                                              ; preds = %367
  %374 = load i32, i32* %31, align 4, !dbg !17420
  %375 = sub i32 %374, 8, !dbg !17420
  store i32 %375, i32* %31, align 4, !dbg !17420
  br label %376, !dbg !17421

376:                                              ; preds = %373, %367
  br label %377

377:                                              ; preds = %376, %231
  br label %378, !dbg !17422

378:                                              ; preds = %377
  %379 = load i32, i32* %14, align 4, !dbg !17423
  %380 = load i32, i32* %22, align 4, !dbg !17424
  %381 = add i32 %380, %379, !dbg !17424
  store i32 %381, i32* %22, align 4, !dbg !17424
  br label %125, !dbg !17425, !llvm.loop !17426

382:                                              ; preds = %125
  br label %383, !dbg !17428

383:                                              ; preds = %382
  %384 = load i32, i32* %15, align 4, !dbg !17429
  %385 = load i32, i32* %21, align 4, !dbg !17430
  %386 = add i32 %385, %384, !dbg !17430
  store i32 %386, i32* %21, align 4, !dbg !17430
  br label %107, !dbg !17431, !llvm.loop !17432

387:                                              ; preds = %107
  %388 = load i8*, i8** %43, align 8, !dbg !17434
  call void @_TIFFfree(i8* %388), !dbg !17435
  %389 = load i32, i32* %18, align 4, !dbg !17436
  store i32 %389, i32* %9, align 4, !dbg !17437
  br label %390, !dbg !17437

390:                                              ; preds = %387, %360, %354, %336, %317, %299, %277, %141, %96
  %391 = load i32, i32* %9, align 4, !dbg !17438
  ret i32 %391, !dbg !17438
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @readSeparateTilesIntoBuffer(%struct.tiff*, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext) #0 !dbg !17439 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.tiff*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i16, align 2
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i16, align 2
  %33 = alloca i8*, align 8
  %34 = alloca [8 x i8*], align 16
  %35 = alloca i8*, align 8
  store %struct.tiff* %0, %struct.tiff** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.tiff** %10, metadata !17442, metadata !DIExpression()), !dbg !17443
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !17444, metadata !DIExpression()), !dbg !17445
  store i32 %2, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !17446, metadata !DIExpression()), !dbg !17447
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !17448, metadata !DIExpression()), !dbg !17449
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !17450, metadata !DIExpression()), !dbg !17451
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !17452, metadata !DIExpression()), !dbg !17453
  store i16 %6, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !17454, metadata !DIExpression()), !dbg !17455
  store i16 %7, i16* %17, align 2
  call void @llvm.dbg.declare(metadata i16* %17, metadata !17456, metadata !DIExpression()), !dbg !17457
  call void @llvm.dbg.declare(metadata i32* %18, metadata !17458, metadata !DIExpression()), !dbg !17459
  call void @llvm.dbg.declare(metadata i32* %19, metadata !17460, metadata !DIExpression()), !dbg !17461
  store i32 1, i32* %19, align 4, !dbg !17461
  call void @llvm.dbg.declare(metadata i32* %20, metadata !17462, metadata !DIExpression()), !dbg !17463
  call void @llvm.dbg.declare(metadata i32* %21, metadata !17464, metadata !DIExpression()), !dbg !17465
  call void @llvm.dbg.declare(metadata i32* %22, metadata !17466, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.declare(metadata i16* %23, metadata !17468, metadata !DIExpression()), !dbg !17469
  call void @llvm.dbg.declare(metadata i32* %24, metadata !17470, metadata !DIExpression()), !dbg !17471
  call void @llvm.dbg.declare(metadata i32* %25, metadata !17472, metadata !DIExpression()), !dbg !17473
  call void @llvm.dbg.declare(metadata i32* %26, metadata !17474, metadata !DIExpression()), !dbg !17475
  call void @llvm.dbg.declare(metadata i32* %27, metadata !17476, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.declare(metadata i32* %28, metadata !17478, metadata !DIExpression()), !dbg !17479
  call void @llvm.dbg.declare(metadata i32* %29, metadata !17480, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.declare(metadata i64* %30, metadata !17482, metadata !DIExpression()), !dbg !17483
  store i64 0, i64* %30, align 8, !dbg !17483
  call void @llvm.dbg.declare(metadata i64* %31, metadata !17484, metadata !DIExpression()), !dbg !17485
  %36 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17486
  %37 = call i64 @TIFFTileSize(%struct.tiff* %36), !dbg !17487
  store i64 %37, i64* %31, align 8, !dbg !17485
  call void @llvm.dbg.declare(metadata i16* %32, metadata !17488, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.declare(metadata i8** %33, metadata !17490, metadata !DIExpression()), !dbg !17491
  %38 = load i8*, i8** %11, align 8, !dbg !17492
  store i8* %38, i8** %33, align 8, !dbg !17491
  call void @llvm.dbg.declare(metadata [8 x i8*]* %34, metadata !17493, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.declare(metadata i8** %35, metadata !17495, metadata !DIExpression()), !dbg !17496
  store i8* null, i8** %35, align 8, !dbg !17496
  %39 = load i16, i16* %17, align 2, !dbg !17497
  %40 = zext i16 %39 to i32, !dbg !17497
  %41 = add nsw i32 %40, 7, !dbg !17498
  %42 = sdiv i32 %41, 8, !dbg !17499
  %43 = trunc i32 %42 to i16, !dbg !17500
  store i16 %43, i16* %23, align 2, !dbg !17501
  store i32 0, i32* %20, align 4, !dbg !17502
  br label %44, !dbg !17504

44:                                               ; preds = %83, %8
  %45 = load i32, i32* %20, align 4, !dbg !17505
  %46 = load i16, i16* %16, align 2, !dbg !17507
  %47 = zext i16 %46 to i32, !dbg !17507
  %48 = icmp slt i32 %45, %47, !dbg !17508
  br i1 %48, label %49, label %52, !dbg !17509

49:                                               ; preds = %44
  %50 = load i32, i32* %20, align 4, !dbg !17510
  %51 = icmp slt i32 %50, 8, !dbg !17511
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i1 [ false, %44 ], [ %51, %49 ], !dbg !17512
  br i1 %53, label %54, label %86, !dbg !17513

54:                                               ; preds = %52
  %55 = load i32, i32* %20, align 4, !dbg !17514
  %56 = sext i32 %55 to i64, !dbg !17516
  %57 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %56, !dbg !17516
  store i8* null, i8** %57, align 8, !dbg !17517
  %58 = load i64, i64* %31, align 8, !dbg !17518
  %59 = add nsw i64 %58, 8, !dbg !17519
  %60 = call i8* @_TIFFmalloc(i64 %59), !dbg !17520
  store i8* %60, i8** %35, align 8, !dbg !17521
  %61 = load i8*, i8** %35, align 8, !dbg !17522
  %62 = icmp ne i8* %61, null, !dbg !17522
  br i1 %62, label %78, label %63, !dbg !17524

63:                                               ; preds = %54
  %64 = load i32, i32* %20, align 4, !dbg !17525
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.316, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.317, i64 0, i64 0), i32 %64), !dbg !17527
  store i32 0, i32* %18, align 4, !dbg !17528
  br label %65, !dbg !17530

65:                                               ; preds = %74, %63
  %66 = load i32, i32* %18, align 4, !dbg !17531
  %67 = load i32, i32* %20, align 4, !dbg !17533
  %68 = icmp slt i32 %66, %67, !dbg !17534
  br i1 %68, label %69, label %77, !dbg !17535

69:                                               ; preds = %65
  %70 = load i32, i32* %18, align 4, !dbg !17536
  %71 = sext i32 %70 to i64, !dbg !17537
  %72 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %71, !dbg !17537
  %73 = load i8*, i8** %72, align 8, !dbg !17537
  call void @_TIFFfree(i8* %73), !dbg !17538
  br label %74, !dbg !17538

74:                                               ; preds = %69
  %75 = load i32, i32* %18, align 4, !dbg !17539
  %76 = add nsw i32 %75, 1, !dbg !17539
  store i32 %76, i32* %18, align 4, !dbg !17539
  br label %65, !dbg !17540, !llvm.loop !17541

77:                                               ; preds = %65
  store i32 0, i32* %9, align 4, !dbg !17543
  br label %339, !dbg !17543

78:                                               ; preds = %54
  %79 = load i8*, i8** %35, align 8, !dbg !17544
  %80 = load i32, i32* %20, align 4, !dbg !17545
  %81 = sext i32 %80 to i64, !dbg !17546
  %82 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %81, !dbg !17546
  store i8* %79, i8** %82, align 8, !dbg !17547
  br label %83, !dbg !17548

83:                                               ; preds = %78
  %84 = load i32, i32* %20, align 4, !dbg !17549
  %85 = add nsw i32 %84, 1, !dbg !17549
  store i32 %85, i32* %20, align 4, !dbg !17549
  br label %44, !dbg !17550, !llvm.loop !17551

86:                                               ; preds = %52
  store i32 0, i32* %24, align 4, !dbg !17553
  br label %87, !dbg !17555

87:                                               ; preds = %309, %86
  %88 = load i32, i32* %24, align 4, !dbg !17556
  %89 = load i32, i32* %12, align 4, !dbg !17558
  %90 = icmp ult i32 %88, %89, !dbg !17559
  br i1 %90, label %91, label %313, !dbg !17560

91:                                               ; preds = %87
  %92 = load i32, i32* %24, align 4, !dbg !17561
  %93 = load i32, i32* %15, align 4, !dbg !17563
  %94 = add i32 %92, %93, !dbg !17564
  %95 = load i32, i32* %12, align 4, !dbg !17565
  %96 = icmp ugt i32 %94, %95, !dbg !17566
  br i1 %96, label %97, label %101, !dbg !17567

97:                                               ; preds = %91
  %98 = load i32, i32* %12, align 4, !dbg !17568
  %99 = load i32, i32* %24, align 4, !dbg !17569
  %100 = sub i32 %98, %99, !dbg !17570
  br label %103, !dbg !17567

101:                                              ; preds = %91
  %102 = load i32, i32* %15, align 4, !dbg !17571
  br label %103, !dbg !17567

103:                                              ; preds = %101, %97
  %104 = phi i32 [ %100, %97 ], [ %102, %101 ], !dbg !17567
  store i32 %104, i32* %26, align 4, !dbg !17572
  store i32 0, i32* %25, align 4, !dbg !17573
  br label %105, !dbg !17575

105:                                              ; preds = %304, %103
  %106 = load i32, i32* %25, align 4, !dbg !17576
  %107 = load i32, i32* %13, align 4, !dbg !17578
  %108 = icmp ult i32 %106, %107, !dbg !17579
  br i1 %108, label %109, label %308, !dbg !17580

109:                                              ; preds = %105
  store i16 0, i16* %32, align 2, !dbg !17581
  br label %110, !dbg !17584

110:                                              ; preds = %166, %109
  %111 = load i16, i16* %32, align 2, !dbg !17585
  %112 = zext i16 %111 to i32, !dbg !17585
  %113 = load i16, i16* %16, align 2, !dbg !17587
  %114 = zext i16 %113 to i32, !dbg !17587
  %115 = icmp slt i32 %112, %114, !dbg !17588
  br i1 %115, label %116, label %169, !dbg !17589

116:                                              ; preds = %110
  %117 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17590
  %118 = load i16, i16* %32, align 2, !dbg !17592
  %119 = zext i16 %118 to i64, !dbg !17593
  %120 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %119, !dbg !17593
  %121 = load i8*, i8** %120, align 8, !dbg !17593
  %122 = load i32, i32* %25, align 4, !dbg !17594
  %123 = load i32, i32* %24, align 4, !dbg !17595
  %124 = load i16, i16* %32, align 2, !dbg !17596
  %125 = call i64 @TIFFReadTile(%struct.tiff* %117, i8* %121, i32 %122, i32 %123, i32 0, i16 zeroext %124), !dbg !17597
  store i64 %125, i64* %30, align 8, !dbg !17598
  %126 = load i64, i64* %30, align 8, !dbg !17599
  %127 = icmp slt i64 %126, 0, !dbg !17601
  br i1 %127, label %128, label %165, !dbg !17602

128:                                              ; preds = %116
  %129 = load i32, i32* @ignore, align 4, !dbg !17603
  %130 = icmp ne i32 %129, 0, !dbg !17603
  br i1 %130, label %165, label %131, !dbg !17604

131:                                              ; preds = %128
  %132 = load %struct.tiff*, %struct.tiff** %10, align 8, !dbg !17605
  %133 = call i8* @TIFFFileName(%struct.tiff* %132), !dbg !17607
  %134 = load i32, i32* %25, align 4, !dbg !17608
  %135 = zext i32 %134 to i64, !dbg !17609
  %136 = load i32, i32* %24, align 4, !dbg !17610
  %137 = zext i32 %136 to i64, !dbg !17611
  %138 = load i16, i16* %32, align 2, !dbg !17612
  %139 = zext i16 %138 to i64, !dbg !17613
  call void (i8*, i8*, ...) @TIFFError(i8* %133, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.318, i64 0, i64 0), i64 %135, i64 %137, i64 %139), !dbg !17614
  store i32 0, i32* %19, align 4, !dbg !17615
  store i32 0, i32* %20, align 4, !dbg !17616
  br label %140, !dbg !17618

140:                                              ; preds = %160, %131
  %141 = load i32, i32* %20, align 4, !dbg !17619
  %142 = load i16, i16* %16, align 2, !dbg !17621
  %143 = zext i16 %142 to i32, !dbg !17621
  %144 = icmp slt i32 %141, %143, !dbg !17622
  br i1 %144, label %145, label %148, !dbg !17623

145:                                              ; preds = %140
  %146 = load i32, i32* %20, align 4, !dbg !17624
  %147 = icmp slt i32 %146, 8, !dbg !17625
  br label %148

148:                                              ; preds = %145, %140
  %149 = phi i1 [ false, %140 ], [ %147, %145 ], !dbg !17626
  br i1 %149, label %150, label %163, !dbg !17627

150:                                              ; preds = %148
  %151 = load i32, i32* %20, align 4, !dbg !17628
  %152 = sext i32 %151 to i64, !dbg !17630
  %153 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %152, !dbg !17630
  %154 = load i8*, i8** %153, align 8, !dbg !17630
  store i8* %154, i8** %35, align 8, !dbg !17631
  %155 = load i8*, i8** %35, align 8, !dbg !17632
  %156 = icmp ne i8* %155, null, !dbg !17634
  br i1 %156, label %157, label %159, !dbg !17635

157:                                              ; preds = %150
  %158 = load i8*, i8** %35, align 8, !dbg !17636
  call void @_TIFFfree(i8* %158), !dbg !17637
  br label %159, !dbg !17637

159:                                              ; preds = %157, %150
  br label %160, !dbg !17638

160:                                              ; preds = %159
  %161 = load i32, i32* %20, align 4, !dbg !17639
  %162 = add nsw i32 %161, 1, !dbg !17639
  store i32 %162, i32* %20, align 4, !dbg !17639
  br label %140, !dbg !17640, !llvm.loop !17641

163:                                              ; preds = %148
  %164 = load i32, i32* %19, align 4, !dbg !17643
  store i32 %164, i32* %9, align 4, !dbg !17644
  br label %339, !dbg !17644

165:                                              ; preds = %128, %116
  br label %166, !dbg !17645

166:                                              ; preds = %165
  %167 = load i16, i16* %32, align 2, !dbg !17646
  %168 = add i16 %167, 1, !dbg !17646
  store i16 %168, i16* %32, align 2, !dbg !17646
  br label %110, !dbg !17647, !llvm.loop !17648

169:                                              ; preds = %110
  %170 = load i32, i32* %25, align 4, !dbg !17650
  %171 = load i32, i32* %14, align 4, !dbg !17652
  %172 = add i32 %170, %171, !dbg !17653
  %173 = load i32, i32* %13, align 4, !dbg !17654
  %174 = icmp ugt i32 %172, %173, !dbg !17655
  br i1 %174, label %175, label %179, !dbg !17656

175:                                              ; preds = %169
  %176 = load i32, i32* %13, align 4, !dbg !17657
  %177 = load i32, i32* %25, align 4, !dbg !17658
  %178 = sub i32 %176, %177, !dbg !17659
  store i32 %178, i32* %27, align 4, !dbg !17660
  br label %181, !dbg !17661

179:                                              ; preds = %169
  %180 = load i32, i32* %14, align 4, !dbg !17662
  store i32 %180, i32* %27, align 4, !dbg !17663
  br label %181

181:                                              ; preds = %179, %175
  %182 = load i32, i32* %24, align 4, !dbg !17664
  %183 = load i32, i32* %13, align 4, !dbg !17665
  %184 = load i16, i16* %16, align 2, !dbg !17666
  %185 = zext i16 %184 to i32, !dbg !17666
  %186 = mul i32 %183, %185, !dbg !17667
  %187 = load i16, i16* %17, align 2, !dbg !17668
  %188 = zext i16 %187 to i32, !dbg !17668
  %189 = mul i32 %186, %188, !dbg !17669
  %190 = add i32 %189, 7, !dbg !17670
  %191 = udiv i32 %190, 8, !dbg !17671
  %192 = mul i32 %182, %191, !dbg !17672
  store i32 %192, i32* %28, align 4, !dbg !17673
  %193 = load i32, i32* %25, align 4, !dbg !17674
  %194 = load i16, i16* %16, align 2, !dbg !17675
  %195 = zext i16 %194 to i32, !dbg !17675
  %196 = mul i32 %193, %195, !dbg !17676
  %197 = load i16, i16* %17, align 2, !dbg !17677
  %198 = zext i16 %197 to i32, !dbg !17677
  %199 = mul i32 %196, %198, !dbg !17678
  %200 = add i32 %199, 7, !dbg !17679
  %201 = udiv i32 %200, 8, !dbg !17680
  store i32 %201, i32* %29, align 4, !dbg !17681
  %202 = load i8*, i8** %11, align 8, !dbg !17682
  %203 = load i32, i32* %28, align 4, !dbg !17683
  %204 = zext i32 %203 to i64, !dbg !17684
  %205 = getelementptr inbounds i8, i8* %202, i64 %204, !dbg !17684
  %206 = load i32, i32* %29, align 4, !dbg !17685
  %207 = zext i32 %206 to i64, !dbg !17686
  %208 = getelementptr inbounds i8, i8* %205, i64 %207, !dbg !17686
  store i8* %208, i8** %33, align 8, !dbg !17687
  %209 = load i16, i16* %17, align 2, !dbg !17688
  %210 = zext i16 %209 to i32, !dbg !17688
  %211 = srem i32 %210, 8, !dbg !17690
  %212 = icmp eq i32 %211, 0, !dbg !17691
  br i1 %212, label %213, label %226, !dbg !17692

213:                                              ; preds = %181
  %214 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !17693
  %215 = load i8*, i8** %33, align 8, !dbg !17696
  %216 = load i32, i32* %27, align 4, !dbg !17697
  %217 = load i32, i32* %26, align 4, !dbg !17698
  %218 = load i32, i32* %13, align 4, !dbg !17699
  %219 = load i32, i32* %14, align 4, !dbg !17700
  %220 = load i16, i16* %16, align 2, !dbg !17701
  %221 = load i16, i16* %17, align 2, !dbg !17702
  %222 = call i32 @combineSeparateTileSamplesBytes(i8** %214, i8* %215, i32 %216, i32 %217, i32 %218, i32 %219, i16 zeroext %220, i16 zeroext %221, %struct._IO_FILE* null, i32 0, i32 0), !dbg !17703
  %223 = icmp ne i32 %222, 0, !dbg !17703
  br i1 %223, label %224, label %225, !dbg !17704

224:                                              ; preds = %213
  store i32 0, i32* %19, align 4, !dbg !17705
  br label %308, !dbg !17707

225:                                              ; preds = %213
  br label %303, !dbg !17708

226:                                              ; preds = %181
  %227 = load i16, i16* %17, align 2, !dbg !17709
  %228 = zext i16 %227 to i32, !dbg !17709
  %229 = load i16, i16* %16, align 2, !dbg !17711
  %230 = zext i16 %229 to i32, !dbg !17711
  %231 = mul nsw i32 %228, %230, !dbg !17712
  %232 = add nsw i32 %231, 7, !dbg !17713
  %233 = sdiv i32 %232, 8, !dbg !17714
  store i32 %233, i32* %22, align 4, !dbg !17715
  %234 = load i32, i32* %22, align 4, !dbg !17716
  %235 = load i16, i16* %23, align 2, !dbg !17718
  %236 = zext i16 %235 to i32, !dbg !17718
  %237 = add nsw i32 %236, 1, !dbg !17719
  %238 = icmp slt i32 %234, %237, !dbg !17720
  br i1 %238, label %239, label %241, !dbg !17721

239:                                              ; preds = %226
  %240 = load i32, i32* %22, align 4, !dbg !17722
  store i32 %240, i32* %21, align 4, !dbg !17723
  br label %245, !dbg !17724

241:                                              ; preds = %226
  %242 = load i16, i16* %23, align 2, !dbg !17725
  %243 = zext i16 %242 to i32, !dbg !17725
  %244 = add nsw i32 %243, 1, !dbg !17726
  store i32 %244, i32* %21, align 4, !dbg !17727
  br label %245

245:                                              ; preds = %241, %239
  %246 = load i32, i32* %21, align 4, !dbg !17728
  switch i32 %246, label %299 [
    i32 1, label %247
    i32 2, label %260
    i32 3, label %273
    i32 4, label %286
    i32 5, label %286
    i32 6, label %286
    i32 7, label %286
    i32 8, label %286
  ], !dbg !17729

247:                                              ; preds = %245
  %248 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !17730
  %249 = load i8*, i8** %33, align 8, !dbg !17733
  %250 = load i32, i32* %27, align 4, !dbg !17734
  %251 = load i32, i32* %26, align 4, !dbg !17735
  %252 = load i32, i32* %13, align 4, !dbg !17736
  %253 = load i32, i32* %14, align 4, !dbg !17737
  %254 = load i16, i16* %16, align 2, !dbg !17738
  %255 = load i16, i16* %17, align 2, !dbg !17739
  %256 = call i32 @combineSeparateTileSamples8bits(i8** %248, i8* %249, i32 %250, i32 %251, i32 %252, i32 %253, i16 zeroext %254, i16 zeroext %255, %struct._IO_FILE* null, i32 0, i32 0), !dbg !17740
  %257 = icmp ne i32 %256, 0, !dbg !17740
  br i1 %257, label %258, label %259, !dbg !17741

258:                                              ; preds = %247
  store i32 0, i32* %19, align 4, !dbg !17742
  br label %302, !dbg !17744

259:                                              ; preds = %247
  br label %302, !dbg !17745

260:                                              ; preds = %245
  %261 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !17746
  %262 = load i8*, i8** %33, align 8, !dbg !17748
  %263 = load i32, i32* %27, align 4, !dbg !17749
  %264 = load i32, i32* %26, align 4, !dbg !17750
  %265 = load i32, i32* %13, align 4, !dbg !17751
  %266 = load i32, i32* %14, align 4, !dbg !17752
  %267 = load i16, i16* %16, align 2, !dbg !17753
  %268 = load i16, i16* %17, align 2, !dbg !17754
  %269 = call i32 @combineSeparateTileSamples16bits(i8** %261, i8* %262, i32 %263, i32 %264, i32 %265, i32 %266, i16 zeroext %267, i16 zeroext %268, %struct._IO_FILE* null, i32 0, i32 0), !dbg !17755
  %270 = icmp ne i32 %269, 0, !dbg !17755
  br i1 %270, label %271, label %272, !dbg !17756

271:                                              ; preds = %260
  store i32 0, i32* %19, align 4, !dbg !17757
  br label %302, !dbg !17759

272:                                              ; preds = %260
  br label %302, !dbg !17760

273:                                              ; preds = %245
  %274 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !17761
  %275 = load i8*, i8** %33, align 8, !dbg !17763
  %276 = load i32, i32* %27, align 4, !dbg !17764
  %277 = load i32, i32* %26, align 4, !dbg !17765
  %278 = load i32, i32* %13, align 4, !dbg !17766
  %279 = load i32, i32* %14, align 4, !dbg !17767
  %280 = load i16, i16* %16, align 2, !dbg !17768
  %281 = load i16, i16* %17, align 2, !dbg !17769
  %282 = call i32 @combineSeparateTileSamples24bits(i8** %274, i8* %275, i32 %276, i32 %277, i32 %278, i32 %279, i16 zeroext %280, i16 zeroext %281, %struct._IO_FILE* null, i32 0, i32 0), !dbg !17770
  %283 = icmp ne i32 %282, 0, !dbg !17770
  br i1 %283, label %284, label %285, !dbg !17771

284:                                              ; preds = %273
  store i32 0, i32* %19, align 4, !dbg !17772
  br label %302, !dbg !17774

285:                                              ; preds = %273
  br label %302, !dbg !17775

286:                                              ; preds = %245, %245, %245, %245, %245
  %287 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 0, !dbg !17776
  %288 = load i8*, i8** %33, align 8, !dbg !17778
  %289 = load i32, i32* %27, align 4, !dbg !17779
  %290 = load i32, i32* %26, align 4, !dbg !17780
  %291 = load i32, i32* %13, align 4, !dbg !17781
  %292 = load i32, i32* %14, align 4, !dbg !17782
  %293 = load i16, i16* %16, align 2, !dbg !17783
  %294 = load i16, i16* %17, align 2, !dbg !17784
  %295 = call i32 @combineSeparateTileSamples32bits(i8** %287, i8* %288, i32 %289, i32 %290, i32 %291, i32 %292, i16 zeroext %293, i16 zeroext %294, %struct._IO_FILE* null, i32 0, i32 0), !dbg !17785
  %296 = icmp ne i32 %295, 0, !dbg !17785
  br i1 %296, label %297, label %298, !dbg !17786

297:                                              ; preds = %286
  store i32 0, i32* %19, align 4, !dbg !17787
  br label %302, !dbg !17789

298:                                              ; preds = %286
  br label %302, !dbg !17790

299:                                              ; preds = %245
  %300 = load i16, i16* %17, align 2, !dbg !17791
  %301 = zext i16 %300 to i32, !dbg !17791
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.316, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.267, i64 0, i64 0), i32 %301), !dbg !17792
  store i32 0, i32* %19, align 4, !dbg !17793
  br label %302, !dbg !17794

302:                                              ; preds = %299, %298, %297, %285, %284, %272, %271, %259, %258
  br label %303

303:                                              ; preds = %302, %225
  br label %304, !dbg !17795

304:                                              ; preds = %303
  %305 = load i32, i32* %14, align 4, !dbg !17796
  %306 = load i32, i32* %25, align 4, !dbg !17797
  %307 = add i32 %306, %305, !dbg !17797
  store i32 %307, i32* %25, align 4, !dbg !17797
  br label %105, !dbg !17798, !llvm.loop !17799

308:                                              ; preds = %224, %105
  br label %309, !dbg !17801

309:                                              ; preds = %308
  %310 = load i32, i32* %15, align 4, !dbg !17802
  %311 = load i32, i32* %24, align 4, !dbg !17803
  %312 = add i32 %311, %310, !dbg !17803
  store i32 %312, i32* %24, align 4, !dbg !17803
  br label %87, !dbg !17804, !llvm.loop !17805

313:                                              ; preds = %87
  store i32 0, i32* %20, align 4, !dbg !17807
  br label %314, !dbg !17809

314:                                              ; preds = %334, %313
  %315 = load i32, i32* %20, align 4, !dbg !17810
  %316 = load i16, i16* %16, align 2, !dbg !17812
  %317 = zext i16 %316 to i32, !dbg !17812
  %318 = icmp slt i32 %315, %317, !dbg !17813
  br i1 %318, label %319, label %322, !dbg !17814

319:                                              ; preds = %314
  %320 = load i32, i32* %20, align 4, !dbg !17815
  %321 = icmp slt i32 %320, 8, !dbg !17816
  br label %322

322:                                              ; preds = %319, %314
  %323 = phi i1 [ false, %314 ], [ %321, %319 ], !dbg !17817
  br i1 %323, label %324, label %337, !dbg !17818

324:                                              ; preds = %322
  %325 = load i32, i32* %20, align 4, !dbg !17819
  %326 = sext i32 %325 to i64, !dbg !17821
  %327 = getelementptr inbounds [8 x i8*], [8 x i8*]* %34, i64 0, i64 %326, !dbg !17821
  %328 = load i8*, i8** %327, align 8, !dbg !17821
  store i8* %328, i8** %35, align 8, !dbg !17822
  %329 = load i8*, i8** %35, align 8, !dbg !17823
  %330 = icmp ne i8* %329, null, !dbg !17825
  br i1 %330, label %331, label %333, !dbg !17826

331:                                              ; preds = %324
  %332 = load i8*, i8** %35, align 8, !dbg !17827
  call void @_TIFFfree(i8* %332), !dbg !17828
  br label %333, !dbg !17828

333:                                              ; preds = %331, %324
  br label %334, !dbg !17829

334:                                              ; preds = %333
  %335 = load i32, i32* %20, align 4, !dbg !17830
  %336 = add nsw i32 %335, 1, !dbg !17830
  store i32 %336, i32* %20, align 4, !dbg !17830
  br label %314, !dbg !17831, !llvm.loop !17832

337:                                              ; preds = %322
  %338 = load i32, i32* %19, align 4, !dbg !17834
  store i32 %338, i32* %9, align 4, !dbg !17835
  br label %339, !dbg !17835

339:                                              ; preds = %337, %163, %77
  %340 = load i32, i32* %9, align 4, !dbg !17836
  ret i32 %340, !dbg !17836
}

declare i64 @TIFFReadTile(%struct.tiff*, i8*, i32, i32, i32, i16 zeroext) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateTileSamplesBytes(i8**, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !17837 {
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca %struct._IO_FILE*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i16, align 2
  store i8** %0, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !17840, metadata !DIExpression()), !dbg !17841
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !17842, metadata !DIExpression()), !dbg !17843
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !17844, metadata !DIExpression()), !dbg !17845
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !17846, metadata !DIExpression()), !dbg !17847
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !17848, metadata !DIExpression()), !dbg !17849
  store i32 %5, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !17850, metadata !DIExpression()), !dbg !17851
  store i16 %6, i16* %19, align 2
  call void @llvm.dbg.declare(metadata i16* %19, metadata !17852, metadata !DIExpression()), !dbg !17853
  store i16 %7, i16* %20, align 2
  call void @llvm.dbg.declare(metadata i16* %20, metadata !17854, metadata !DIExpression()), !dbg !17855
  store %struct._IO_FILE* %8, %struct._IO_FILE** %21, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %21, metadata !17856, metadata !DIExpression()), !dbg !17857
  store i32 %9, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !17858, metadata !DIExpression()), !dbg !17859
  store i32 %10, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !17860, metadata !DIExpression()), !dbg !17861
  call void @llvm.dbg.declare(metadata i32* %24, metadata !17862, metadata !DIExpression()), !dbg !17863
  call void @llvm.dbg.declare(metadata i32* %25, metadata !17864, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.declare(metadata i32* %26, metadata !17866, metadata !DIExpression()), !dbg !17867
  call void @llvm.dbg.declare(metadata i32* %27, metadata !17868, metadata !DIExpression()), !dbg !17869
  call void @llvm.dbg.declare(metadata i32* %28, metadata !17870, metadata !DIExpression()), !dbg !17871
  call void @llvm.dbg.declare(metadata i32* %29, metadata !17872, metadata !DIExpression()), !dbg !17873
  call void @llvm.dbg.declare(metadata i32* %30, metadata !17874, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.declare(metadata i32* %31, metadata !17876, metadata !DIExpression()), !dbg !17877
  call void @llvm.dbg.declare(metadata i8** %32, metadata !17878, metadata !DIExpression()), !dbg !17879
  call void @llvm.dbg.declare(metadata i8** %33, metadata !17880, metadata !DIExpression()), !dbg !17881
  call void @llvm.dbg.declare(metadata i16* %34, metadata !17882, metadata !DIExpression()), !dbg !17883
  %35 = load i8**, i8*** %13, align 8, !dbg !17884
  %36 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !17884
  %37 = load i8*, i8** %36, align 8, !dbg !17884
  store i8* %37, i8** %32, align 8, !dbg !17885
  %38 = load i8*, i8** %14, align 8, !dbg !17886
  store i8* %38, i8** %33, align 8, !dbg !17887
  %39 = load i8*, i8** %32, align 8, !dbg !17888
  %40 = icmp eq i8* %39, null, !dbg !17890
  br i1 %40, label %44, label %41, !dbg !17891

41:                                               ; preds = %11
  %42 = load i8*, i8** %33, align 8, !dbg !17892
  %43 = icmp eq i8* %42, null, !dbg !17893
  br i1 %43, label %44, label %45, !dbg !17894

44:                                               ; preds = %41, %11
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.319, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.269, i64 0, i64 0)), !dbg !17895
  store i32 1, i32* %12, align 4, !dbg !17897
  br label %200, !dbg !17897

45:                                               ; preds = %41
  %46 = load i16, i16* %20, align 2, !dbg !17898
  %47 = zext i16 %46 to i32, !dbg !17898
  %48 = add nsw i32 %47, 7, !dbg !17899
  %49 = sdiv i32 %48, 8, !dbg !17900
  store i32 %49, i32* %25, align 4, !dbg !17901
  %50 = load i16, i16* %20, align 2, !dbg !17902
  %51 = zext i16 %50 to i32, !dbg !17902
  %52 = load i32, i32* %18, align 4, !dbg !17903
  %53 = mul i32 %51, %52, !dbg !17904
  %54 = add i32 %53, 7, !dbg !17905
  %55 = udiv i32 %54, 8, !dbg !17906
  store i32 %55, i32* %29, align 4, !dbg !17907
  %56 = load i32, i32* %17, align 4, !dbg !17908
  %57 = load i32, i32* %25, align 4, !dbg !17909
  %58 = mul i32 %56, %57, !dbg !17910
  %59 = load i16, i16* %19, align 2, !dbg !17911
  %60 = zext i16 %59 to i32, !dbg !17911
  %61 = mul i32 %58, %60, !dbg !17912
  store i32 %61, i32* %30, align 4, !dbg !17913
  store i32 0, i32* %26, align 4, !dbg !17914
  br label %62, !dbg !17916

62:                                               ; preds = %196, %45
  %63 = load i32, i32* %26, align 4, !dbg !17917
  %64 = load i32, i32* %16, align 4, !dbg !17919
  %65 = icmp ult i32 %63, %64, !dbg !17920
  br i1 %65, label %66, label %199, !dbg !17921

66:                                               ; preds = %62
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !17922
  %68 = icmp ne %struct._IO_FILE* %67, null, !dbg !17925
  br i1 %68, label %69, label %103, !dbg !17926

69:                                               ; preds = %66
  %70 = load i32, i32* %23, align 4, !dbg !17927
  %71 = icmp eq i32 %70, 2, !dbg !17928
  br i1 %71, label %72, label %103, !dbg !17929

72:                                               ; preds = %69
  store i16 0, i16* %34, align 2, !dbg !17930
  br label %73, !dbg !17933

73:                                               ; preds = %99, %72
  %74 = load i16, i16* %34, align 2, !dbg !17934
  %75 = zext i16 %74 to i32, !dbg !17934
  %76 = load i16, i16* %19, align 2, !dbg !17936
  %77 = zext i16 %76 to i32, !dbg !17936
  %78 = icmp slt i32 %75, %77, !dbg !17937
  br i1 %78, label %79, label %102, !dbg !17938

79:                                               ; preds = %73
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !17939
  %81 = load i32, i32* %22, align 4, !dbg !17941
  %82 = load i16, i16* %34, align 2, !dbg !17942
  %83 = zext i16 %82 to i32, !dbg !17942
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %80, i32 %81, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.319, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.270, i64 0, i64 0), i32 %83), !dbg !17943
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !17944
  %85 = load i32, i32* %22, align 4, !dbg !17945
  %86 = load i32, i32* %15, align 4, !dbg !17946
  %87 = load i32, i32* %26, align 4, !dbg !17947
  %88 = load i8**, i8*** %13, align 8, !dbg !17948
  %89 = load i16, i16* %34, align 2, !dbg !17949
  %90 = zext i16 %89 to i64, !dbg !17948
  %91 = getelementptr inbounds i8*, i8** %88, i64 %90, !dbg !17948
  %92 = load i8*, i8** %91, align 8, !dbg !17948
  %93 = load i32, i32* %26, align 4, !dbg !17950
  %94 = load i32, i32* %29, align 4, !dbg !17951
  %95 = mul i32 %93, %94, !dbg !17952
  %96 = zext i32 %95 to i64, !dbg !17953
  %97 = getelementptr inbounds i8, i8* %92, i64 %96, !dbg !17953
  %98 = call i32 @dump_buffer(%struct._IO_FILE* %84, i32 %85, i32 1, i32 %86, i32 %87, i8* %97), !dbg !17954
  br label %99, !dbg !17955

99:                                               ; preds = %79
  %100 = load i16, i16* %34, align 2, !dbg !17956
  %101 = add i16 %100, 1, !dbg !17956
  store i16 %101, i16* %34, align 2, !dbg !17956
  br label %73, !dbg !17957, !llvm.loop !17958

102:                                              ; preds = %73
  br label %103, !dbg !17960

103:                                              ; preds = %102, %69, %66
  %104 = load i8*, i8** %14, align 8, !dbg !17961
  %105 = load i32, i32* %26, align 4, !dbg !17962
  %106 = load i32, i32* %30, align 4, !dbg !17963
  %107 = mul i32 %105, %106, !dbg !17964
  %108 = zext i32 %107 to i64, !dbg !17965
  %109 = getelementptr inbounds i8, i8* %104, i64 %108, !dbg !17965
  store i8* %109, i8** %33, align 8, !dbg !17966
  %110 = load i32, i32* %26, align 4, !dbg !17967
  %111 = load i32, i32* %29, align 4, !dbg !17968
  %112 = mul i32 %110, %111, !dbg !17969
  store i32 %112, i32* %31, align 4, !dbg !17970
  store i32 0, i32* %27, align 4, !dbg !17971
  br label %113, !dbg !17973

113:                                              ; preds = %172, %103
  %114 = load i32, i32* %27, align 4, !dbg !17974
  %115 = load i32, i32* %15, align 4, !dbg !17976
  %116 = icmp ult i32 %114, %115, !dbg !17977
  br i1 %116, label %117, label %175, !dbg !17978

117:                                              ; preds = %113
  %118 = load i32, i32* %31, align 4, !dbg !17979
  %119 = load i32, i32* %27, align 4, !dbg !17981
  %120 = load i16, i16* %20, align 2, !dbg !17982
  %121 = zext i16 %120 to i32, !dbg !17982
  %122 = sdiv i32 %121, 8, !dbg !17983
  %123 = mul i32 %119, %122, !dbg !17984
  %124 = add i32 %118, %123, !dbg !17985
  store i32 %124, i32* %28, align 4, !dbg !17986
  store i16 0, i16* %34, align 2, !dbg !17987
  br label %125, !dbg !17989

125:                                              ; preds = %168, %117
  %126 = load i16, i16* %34, align 2, !dbg !17990
  %127 = zext i16 %126 to i32, !dbg !17990
  %128 = load i16, i16* %19, align 2, !dbg !17992
  %129 = zext i16 %128 to i32, !dbg !17992
  %130 = icmp slt i32 %127, %129, !dbg !17993
  br i1 %130, label %131, label %135, !dbg !17994

131:                                              ; preds = %125
  %132 = load i16, i16* %34, align 2, !dbg !17995
  %133 = zext i16 %132 to i32, !dbg !17995
  %134 = icmp slt i32 %133, 8, !dbg !17996
  br label %135

135:                                              ; preds = %131, %125
  %136 = phi i1 [ false, %125 ], [ %134, %131 ], !dbg !17997
  br i1 %136, label %137, label %171, !dbg !17998

137:                                              ; preds = %135
  %138 = load i8**, i8*** %13, align 8, !dbg !17999
  %139 = load i16, i16* %34, align 2, !dbg !18001
  %140 = zext i16 %139 to i64, !dbg !17999
  %141 = getelementptr inbounds i8*, i8** %138, i64 %140, !dbg !17999
  %142 = load i8*, i8** %141, align 8, !dbg !17999
  %143 = load i32, i32* %28, align 4, !dbg !18002
  %144 = zext i32 %143 to i64, !dbg !18003
  %145 = getelementptr inbounds i8, i8* %142, i64 %144, !dbg !18003
  store i8* %145, i8** %32, align 8, !dbg !18004
  store i32 0, i32* %24, align 4, !dbg !18005
  br label %146, !dbg !18007

146:                                              ; preds = %160, %137
  %147 = load i32, i32* %24, align 4, !dbg !18008
  %148 = load i32, i32* %25, align 4, !dbg !18010
  %149 = icmp slt i32 %147, %148, !dbg !18011
  br i1 %149, label %150, label %163, !dbg !18012

150:                                              ; preds = %146
  %151 = load i8*, i8** %32, align 8, !dbg !18013
  %152 = load i32, i32* %24, align 4, !dbg !18014
  %153 = sext i32 %152 to i64, !dbg !18015
  %154 = getelementptr inbounds i8, i8* %151, i64 %153, !dbg !18015
  %155 = load i8, i8* %154, align 1, !dbg !18016
  %156 = load i8*, i8** %33, align 8, !dbg !18017
  %157 = load i32, i32* %24, align 4, !dbg !18018
  %158 = sext i32 %157 to i64, !dbg !18019
  %159 = getelementptr inbounds i8, i8* %156, i64 %158, !dbg !18019
  store i8 %155, i8* %159, align 1, !dbg !18020
  br label %160, !dbg !18021

160:                                              ; preds = %150
  %161 = load i32, i32* %24, align 4, !dbg !18022
  %162 = add nsw i32 %161, 1, !dbg !18022
  store i32 %162, i32* %24, align 4, !dbg !18022
  br label %146, !dbg !18023, !llvm.loop !18024

163:                                              ; preds = %146
  %164 = load i32, i32* %25, align 4, !dbg !18026
  %165 = load i8*, i8** %33, align 8, !dbg !18027
  %166 = sext i32 %164 to i64, !dbg !18027
  %167 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !18027
  store i8* %167, i8** %33, align 8, !dbg !18027
  br label %168, !dbg !18028

168:                                              ; preds = %163
  %169 = load i16, i16* %34, align 2, !dbg !18029
  %170 = add i16 %169, 1, !dbg !18029
  store i16 %170, i16* %34, align 2, !dbg !18029
  br label %125, !dbg !18030, !llvm.loop !18031

171:                                              ; preds = %135
  br label %172, !dbg !18033

172:                                              ; preds = %171
  %173 = load i32, i32* %27, align 4, !dbg !18034
  %174 = add i32 %173, 1, !dbg !18034
  store i32 %174, i32* %27, align 4, !dbg !18034
  br label %113, !dbg !18035, !llvm.loop !18036

175:                                              ; preds = %113
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18038
  %177 = icmp ne %struct._IO_FILE* %176, null, !dbg !18040
  br i1 %177, label %178, label %195, !dbg !18041

178:                                              ; preds = %175
  %179 = load i32, i32* %23, align 4, !dbg !18042
  %180 = icmp eq i32 %179, 2, !dbg !18043
  br i1 %180, label %181, label %195, !dbg !18044

181:                                              ; preds = %178
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18045
  %183 = load i32, i32* %22, align 4, !dbg !18047
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %182, i32 %183, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.319, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.271, i64 0, i64 0)), !dbg !18048
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18049
  %185 = load i32, i32* %22, align 4, !dbg !18050
  %186 = load i32, i32* %30, align 4, !dbg !18051
  %187 = load i32, i32* %26, align 4, !dbg !18052
  %188 = load i8*, i8** %14, align 8, !dbg !18053
  %189 = load i32, i32* %26, align 4, !dbg !18054
  %190 = load i32, i32* %30, align 4, !dbg !18055
  %191 = mul i32 %189, %190, !dbg !18056
  %192 = zext i32 %191 to i64, !dbg !18057
  %193 = getelementptr inbounds i8, i8* %188, i64 %192, !dbg !18057
  %194 = call i32 @dump_buffer(%struct._IO_FILE* %184, i32 %185, i32 1, i32 %186, i32 %187, i8* %193), !dbg !18058
  br label %195, !dbg !18059

195:                                              ; preds = %181, %178, %175
  br label %196, !dbg !18060

196:                                              ; preds = %195
  %197 = load i32, i32* %26, align 4, !dbg !18061
  %198 = add i32 %197, 1, !dbg !18061
  store i32 %198, i32* %26, align 4, !dbg !18061
  br label %62, !dbg !18062, !llvm.loop !18063

199:                                              ; preds = %62
  store i32 0, i32* %12, align 4, !dbg !18065
  br label %200, !dbg !18065

200:                                              ; preds = %199, %44
  %201 = load i32, i32* %12, align 4, !dbg !18066
  ret i32 %201, !dbg !18066
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateTileSamples8bits(i8**, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !18067 {
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca %struct._IO_FILE*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i16, align 2
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca [32 x i8], align 16
  store i8** %0, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !18071, metadata !DIExpression()), !dbg !18072
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !18073, metadata !DIExpression()), !dbg !18074
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !18075, metadata !DIExpression()), !dbg !18076
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !18077, metadata !DIExpression()), !dbg !18078
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !18079, metadata !DIExpression()), !dbg !18080
  store i32 %5, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !18081, metadata !DIExpression()), !dbg !18082
  store i16 %6, i16* %19, align 2
  call void @llvm.dbg.declare(metadata i16* %19, metadata !18083, metadata !DIExpression()), !dbg !18084
  store i16 %7, i16* %20, align 2
  call void @llvm.dbg.declare(metadata i16* %20, metadata !18085, metadata !DIExpression()), !dbg !18086
  store %struct._IO_FILE* %8, %struct._IO_FILE** %21, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %21, metadata !18087, metadata !DIExpression()), !dbg !18088
  store i32 %9, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !18089, metadata !DIExpression()), !dbg !18090
  store i32 %10, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !18091, metadata !DIExpression()), !dbg !18092
  call void @llvm.dbg.declare(metadata i32* %24, metadata !18093, metadata !DIExpression()), !dbg !18094
  store i32 0, i32* %24, align 4, !dbg !18094
  call void @llvm.dbg.declare(metadata i32* %25, metadata !18095, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.declare(metadata i32* %26, metadata !18097, metadata !DIExpression()), !dbg !18098
  call void @llvm.dbg.declare(metadata i32* %27, metadata !18099, metadata !DIExpression()), !dbg !18100
  call void @llvm.dbg.declare(metadata i32* %28, metadata !18101, metadata !DIExpression()), !dbg !18102
  call void @llvm.dbg.declare(metadata i32* %29, metadata !18103, metadata !DIExpression()), !dbg !18104
  call void @llvm.dbg.declare(metadata i32* %30, metadata !18105, metadata !DIExpression()), !dbg !18106
  call void @llvm.dbg.declare(metadata i32* %31, metadata !18107, metadata !DIExpression()), !dbg !18108
  store i32 0, i32* %31, align 4, !dbg !18108
  call void @llvm.dbg.declare(metadata i32* %32, metadata !18109, metadata !DIExpression()), !dbg !18110
  store i32 0, i32* %32, align 4, !dbg !18110
  call void @llvm.dbg.declare(metadata i8* %33, metadata !18111, metadata !DIExpression()), !dbg !18112
  store i8 0, i8* %33, align 1, !dbg !18112
  call void @llvm.dbg.declare(metadata i8* %34, metadata !18113, metadata !DIExpression()), !dbg !18114
  store i8 0, i8* %34, align 1, !dbg !18114
  call void @llvm.dbg.declare(metadata i8* %35, metadata !18115, metadata !DIExpression()), !dbg !18116
  store i8 0, i8* %35, align 1, !dbg !18116
  call void @llvm.dbg.declare(metadata i8* %36, metadata !18117, metadata !DIExpression()), !dbg !18118
  store i8 0, i8* %36, align 1, !dbg !18118
  call void @llvm.dbg.declare(metadata i16* %37, metadata !18119, metadata !DIExpression()), !dbg !18120
  call void @llvm.dbg.declare(metadata i8** %38, metadata !18121, metadata !DIExpression()), !dbg !18122
  %41 = load i8**, i8*** %13, align 8, !dbg !18123
  %42 = getelementptr inbounds i8*, i8** %41, i64 0, !dbg !18123
  %43 = load i8*, i8** %42, align 8, !dbg !18123
  store i8* %43, i8** %38, align 8, !dbg !18122
  call void @llvm.dbg.declare(metadata i8** %39, metadata !18124, metadata !DIExpression()), !dbg !18125
  %44 = load i8*, i8** %14, align 8, !dbg !18126
  store i8* %44, i8** %39, align 8, !dbg !18125
  call void @llvm.dbg.declare(metadata [32 x i8]* %40, metadata !18127, metadata !DIExpression()), !dbg !18129
  %45 = load i8*, i8** %38, align 8, !dbg !18130
  %46 = icmp eq i8* %45, null, !dbg !18132
  br i1 %46, label %50, label %47, !dbg !18133

47:                                               ; preds = %11
  %48 = load i8*, i8** %39, align 8, !dbg !18134
  %49 = icmp eq i8* %48, null, !dbg !18135
  br i1 %49, label %50, label %51, !dbg !18136

50:                                               ; preds = %47, %11
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.320, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !18137
  store i32 1, i32* %12, align 4, !dbg !18139
  br label %274, !dbg !18139

51:                                               ; preds = %47
  %52 = load i16, i16* %20, align 2, !dbg !18140
  %53 = zext i16 %52 to i32, !dbg !18140
  %54 = load i32, i32* %18, align 4, !dbg !18141
  %55 = mul i32 %53, %54, !dbg !18142
  %56 = add i32 %55, 7, !dbg !18143
  %57 = udiv i32 %56, 8, !dbg !18144
  store i32 %57, i32* %25, align 4, !dbg !18145
  %58 = load i32, i32* %17, align 4, !dbg !18146
  %59 = load i16, i16* %20, align 2, !dbg !18147
  %60 = zext i16 %59 to i32, !dbg !18147
  %61 = mul i32 %58, %60, !dbg !18148
  %62 = load i16, i16* %19, align 2, !dbg !18149
  %63 = zext i16 %62 to i32, !dbg !18149
  %64 = mul i32 %61, %63, !dbg !18150
  %65 = add i32 %64, 7, !dbg !18151
  %66 = udiv i32 %65, 8, !dbg !18152
  store i32 %66, i32* %26, align 4, !dbg !18153
  %67 = load i16, i16* %20, align 2, !dbg !18154
  %68 = zext i16 %67 to i32, !dbg !18154
  %69 = sub nsw i32 8, %68, !dbg !18155
  %70 = ashr i32 255, %69, !dbg !18156
  %71 = trunc i32 %70 to i8, !dbg !18157
  store i8 %71, i8* %33, align 1, !dbg !18158
  store i32 0, i32* %29, align 4, !dbg !18159
  br label %72, !dbg !18161

72:                                               ; preds = %270, %51
  %73 = load i32, i32* %29, align 4, !dbg !18162
  %74 = load i32, i32* %16, align 4, !dbg !18164
  %75 = icmp ult i32 %73, %74, !dbg !18165
  br i1 %75, label %76, label %273, !dbg !18166

76:                                               ; preds = %72
  store i32 0, i32* %24, align 4, !dbg !18167
  store i8 0, i8* %36, align 1, !dbg !18169
  store i8 0, i8* %35, align 1, !dbg !18170
  %77 = load i8*, i8** %14, align 8, !dbg !18171
  %78 = load i32, i32* %29, align 4, !dbg !18172
  %79 = load i32, i32* %26, align 4, !dbg !18173
  %80 = mul i32 %78, %79, !dbg !18174
  %81 = zext i32 %80 to i64, !dbg !18175
  %82 = getelementptr inbounds i8, i8* %77, i64 %81, !dbg !18175
  store i8* %82, i8** %39, align 8, !dbg !18176
  %83 = load i32, i32* %29, align 4, !dbg !18177
  %84 = load i32, i32* %25, align 4, !dbg !18178
  %85 = mul i32 %83, %84, !dbg !18179
  store i32 %85, i32* %27, align 4, !dbg !18180
  store i32 0, i32* %30, align 4, !dbg !18181
  br label %86, !dbg !18183

86:                                               ; preds = %208, %76
  %87 = load i32, i32* %30, align 4, !dbg !18184
  %88 = load i32, i32* %15, align 4, !dbg !18186
  %89 = icmp ult i32 %87, %88, !dbg !18187
  br i1 %89, label %90, label %211, !dbg !18188

90:                                               ; preds = %86
  %91 = load i32, i32* %30, align 4, !dbg !18189
  %92 = load i16, i16* %20, align 2, !dbg !18191
  %93 = zext i16 %92 to i32, !dbg !18191
  %94 = mul i32 %91, %93, !dbg !18192
  store i32 %94, i32* %28, align 4, !dbg !18193
  %95 = load i32, i32* %28, align 4, !dbg !18194
  %96 = udiv i32 %95, 8, !dbg !18195
  store i32 %96, i32* %31, align 4, !dbg !18196
  %97 = load i32, i32* %28, align 4, !dbg !18197
  %98 = urem i32 %97, 8, !dbg !18198
  store i32 %98, i32* %32, align 4, !dbg !18199
  %99 = load i8, i8* %33, align 1, !dbg !18200
  %100 = zext i8 %99 to i32, !dbg !18200
  %101 = load i32, i32* %32, align 4, !dbg !18201
  %102 = sub i32 8, %101, !dbg !18202
  %103 = load i16, i16* %20, align 2, !dbg !18203
  %104 = zext i16 %103 to i32, !dbg !18203
  %105 = sub i32 %102, %104, !dbg !18204
  %106 = shl i32 %100, %105, !dbg !18205
  %107 = trunc i32 %106 to i8, !dbg !18200
  store i8 %107, i8* %34, align 1, !dbg !18206
  store i16 0, i16* %37, align 2, !dbg !18207
  br label %108, !dbg !18209

108:                                              ; preds = %204, %90
  %109 = load i16, i16* %37, align 2, !dbg !18210
  %110 = zext i16 %109 to i32, !dbg !18210
  %111 = load i16, i16* %19, align 2, !dbg !18212
  %112 = zext i16 %111 to i32, !dbg !18212
  %113 = icmp slt i32 %110, %112, !dbg !18213
  br i1 %113, label %114, label %207, !dbg !18214

114:                                              ; preds = %108
  %115 = load i8**, i8*** %13, align 8, !dbg !18215
  %116 = load i16, i16* %37, align 2, !dbg !18217
  %117 = zext i16 %116 to i64, !dbg !18215
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117, !dbg !18215
  %119 = load i8*, i8** %118, align 8, !dbg !18215
  %120 = load i32, i32* %27, align 4, !dbg !18218
  %121 = zext i32 %120 to i64, !dbg !18219
  %122 = getelementptr inbounds i8, i8* %119, i64 %121, !dbg !18219
  %123 = load i32, i32* %31, align 4, !dbg !18220
  %124 = zext i32 %123 to i64, !dbg !18221
  %125 = getelementptr inbounds i8, i8* %122, i64 %124, !dbg !18221
  store i8* %125, i8** %38, align 8, !dbg !18222
  %126 = load i8*, i8** %38, align 8, !dbg !18223
  %127 = load i8, i8* %126, align 1, !dbg !18224
  %128 = zext i8 %127 to i32, !dbg !18225
  %129 = load i8, i8* %34, align 1, !dbg !18226
  %130 = zext i8 %129 to i32, !dbg !18226
  %131 = and i32 %128, %130, !dbg !18227
  %132 = load i32, i32* %32, align 4, !dbg !18228
  %133 = shl i32 %131, %132, !dbg !18229
  %134 = trunc i32 %133 to i8, !dbg !18230
  store i8 %134, i8* %35, align 1, !dbg !18231
  %135 = load i32, i32* %24, align 4, !dbg !18232
  %136 = icmp sge i32 %135, 8, !dbg !18234
  br i1 %136, label %137, label %146, !dbg !18235

137:                                              ; preds = %114
  %138 = load i8, i8* %36, align 1, !dbg !18236
  %139 = load i8*, i8** %39, align 8, !dbg !18238
  %140 = getelementptr inbounds i8, i8* %139, i32 1, !dbg !18238
  store i8* %140, i8** %39, align 8, !dbg !18238
  store i8 %138, i8* %139, align 1, !dbg !18239
  %141 = load i8, i8* %35, align 1, !dbg !18240
  store i8 %141, i8* %36, align 1, !dbg !18241
  %142 = load i32, i32* %24, align 4, !dbg !18242
  %143 = sub nsw i32 %142, 8, !dbg !18242
  store i32 %143, i32* %24, align 4, !dbg !18242
  %144 = getelementptr inbounds [32 x i8], [32 x i8]* %40, i64 0, i64 0, !dbg !18243
  %145 = call i8* @strcpy(i8* %144, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !18244
  br label %157, !dbg !18245

146:                                              ; preds = %114
  %147 = load i8, i8* %36, align 1, !dbg !18246
  %148 = zext i8 %147 to i32, !dbg !18246
  %149 = load i8, i8* %35, align 1, !dbg !18248
  %150 = zext i8 %149 to i32, !dbg !18248
  %151 = load i32, i32* %24, align 4, !dbg !18249
  %152 = ashr i32 %150, %151, !dbg !18250
  %153 = or i32 %148, %152, !dbg !18251
  %154 = trunc i32 %153 to i8, !dbg !18252
  store i8 %154, i8* %36, align 1, !dbg !18253
  %155 = getelementptr inbounds [32 x i8], [32 x i8]* %40, i64 0, i64 0, !dbg !18254
  %156 = call i8* @strcpy(i8* %155, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !18255
  br label %157

157:                                              ; preds = %146, %137
  %158 = load i16, i16* %20, align 2, !dbg !18256
  %159 = zext i16 %158 to i32, !dbg !18256
  %160 = load i32, i32* %24, align 4, !dbg !18257
  %161 = add nsw i32 %160, %159, !dbg !18257
  store i32 %161, i32* %24, align 4, !dbg !18257
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18258
  %163 = icmp ne %struct._IO_FILE* %162, null, !dbg !18260
  br i1 %163, label %164, label %203, !dbg !18261

164:                                              ; preds = %157
  %165 = load i32, i32* %23, align 4, !dbg !18262
  %166 = icmp eq i32 %165, 3, !dbg !18263
  br i1 %166, label %167, label %203, !dbg !18264

167:                                              ; preds = %164
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18265
  %169 = load i32, i32* %22, align 4, !dbg !18267
  %170 = load i32, i32* %29, align 4, !dbg !18268
  %171 = add i32 %170, 1, !dbg !18269
  %172 = load i32, i32* %30, align 4, !dbg !18270
  %173 = add i32 %172, 1, !dbg !18271
  %174 = load i16, i16* %37, align 2, !dbg !18272
  %175 = zext i16 %174 to i32, !dbg !18272
  %176 = load i32, i32* %31, align 4, !dbg !18273
  %177 = load i32, i32* %32, align 4, !dbg !18274
  %178 = load i8*, i8** %39, align 8, !dbg !18275
  %179 = load i8*, i8** %14, align 8, !dbg !18276
  %180 = ptrtoint i8* %178 to i64, !dbg !18277
  %181 = ptrtoint i8* %179 to i64, !dbg !18277
  %182 = sub i64 %180, %181, !dbg !18277
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %168, i32 %169, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.276, i64 0, i64 0), i32 %171, i32 %173, i32 %175, i32 %176, i32 %177, i64 %182), !dbg !18278
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18279
  %184 = load i32, i32* %22, align 4, !dbg !18280
  %185 = load i8, i8* %34, align 1, !dbg !18281
  %186 = call i32 @dump_byte(%struct._IO_FILE* %183, i32 %184, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.277, i64 0, i64 0), i8 zeroext %185), !dbg !18282
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18283
  %188 = load i32, i32* %22, align 4, !dbg !18284
  %189 = load i8*, i8** %38, align 8, !dbg !18285
  %190 = load i8, i8* %189, align 1, !dbg !18286
  %191 = call i32 @dump_byte(%struct._IO_FILE* %187, i32 %188, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i8 zeroext %190), !dbg !18287
  %192 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18288
  %193 = load i32, i32* %22, align 4, !dbg !18289
  %194 = load i8, i8* %35, align 1, !dbg !18290
  %195 = call i32 @dump_byte(%struct._IO_FILE* %192, i32 %193, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.279, i64 0, i64 0), i8 zeroext %194), !dbg !18291
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18292
  %197 = load i32, i32* %22, align 4, !dbg !18293
  %198 = load i8, i8* %36, align 1, !dbg !18294
  %199 = call i32 @dump_byte(%struct._IO_FILE* %196, i32 %197, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i64 0, i64 0), i8 zeroext %198), !dbg !18295
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18296
  %201 = load i32, i32* %22, align 4, !dbg !18297
  %202 = getelementptr inbounds [32 x i8], [32 x i8]* %40, i64 0, i64 0, !dbg !18298
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %200, i32 %201, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %202), !dbg !18299
  br label %203, !dbg !18300

203:                                              ; preds = %167, %164, %157
  br label %204, !dbg !18301

204:                                              ; preds = %203
  %205 = load i16, i16* %37, align 2, !dbg !18302
  %206 = add i16 %205, 1, !dbg !18302
  store i16 %206, i16* %37, align 2, !dbg !18302
  br label %108, !dbg !18303, !llvm.loop !18304

207:                                              ; preds = %108
  br label %208, !dbg !18306

208:                                              ; preds = %207
  %209 = load i32, i32* %30, align 4, !dbg !18307
  %210 = add i32 %209, 1, !dbg !18307
  store i32 %210, i32* %30, align 4, !dbg !18307
  br label %86, !dbg !18308, !llvm.loop !18309

211:                                              ; preds = %86
  %212 = load i32, i32* %24, align 4, !dbg !18311
  %213 = icmp sgt i32 %212, 0, !dbg !18313
  br i1 %213, label %214, label %249, !dbg !18314

214:                                              ; preds = %211
  %215 = load i8, i8* %36, align 1, !dbg !18315
  %216 = zext i8 %215 to i32, !dbg !18315
  %217 = load i32, i32* %24, align 4, !dbg !18317
  %218 = sub nsw i32 8, %217, !dbg !18318
  %219 = shl i32 255, %218, !dbg !18319
  %220 = and i32 %216, %219, !dbg !18320
  %221 = trunc i32 %220 to i8, !dbg !18321
  store i8 %221, i8* %35, align 1, !dbg !18322
  %222 = load i8, i8* %35, align 1, !dbg !18323
  %223 = load i8*, i8** %39, align 8, !dbg !18324
  %224 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !18324
  store i8* %224, i8** %39, align 8, !dbg !18324
  store i8 %222, i8* %223, align 1, !dbg !18325
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18326
  %226 = icmp ne %struct._IO_FILE* %225, null, !dbg !18328
  br i1 %226, label %227, label %248, !dbg !18329

227:                                              ; preds = %214
  %228 = load i32, i32* %23, align 4, !dbg !18330
  %229 = icmp eq i32 %228, 3, !dbg !18331
  br i1 %229, label %230, label %248, !dbg !18332

230:                                              ; preds = %227
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18333
  %232 = load i32, i32* %22, align 4, !dbg !18335
  %233 = load i32, i32* %29, align 4, !dbg !18336
  %234 = add i32 %233, 1, !dbg !18337
  %235 = load i32, i32* %30, align 4, !dbg !18338
  %236 = add i32 %235, 1, !dbg !18339
  %237 = load i32, i32* %31, align 4, !dbg !18340
  %238 = load i32, i32* %32, align 4, !dbg !18341
  %239 = load i8*, i8** %39, align 8, !dbg !18342
  %240 = load i8*, i8** %14, align 8, !dbg !18343
  %241 = ptrtoint i8* %239 to i64, !dbg !18344
  %242 = ptrtoint i8* %240 to i64, !dbg !18344
  %243 = sub i64 %241, %242, !dbg !18344
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %231, i32 %232, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %234, i32 %236, i32 %237, i32 %238, i64 %243), !dbg !18345
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18346
  %245 = load i32, i32* %22, align 4, !dbg !18347
  %246 = load i8, i8* %35, align 1, !dbg !18348
  %247 = call i32 @dump_byte(%struct._IO_FILE* %244, i32 %245, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.282, i64 0, i64 0), i8 zeroext %246), !dbg !18349
  br label %248, !dbg !18350

248:                                              ; preds = %230, %227, %214
  br label %249, !dbg !18351

249:                                              ; preds = %248, %211
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18352
  %251 = icmp ne %struct._IO_FILE* %250, null, !dbg !18354
  br i1 %251, label %252, label %269, !dbg !18355

252:                                              ; preds = %249
  %253 = load i32, i32* %23, align 4, !dbg !18356
  %254 = icmp sge i32 %253, 2, !dbg !18357
  br i1 %254, label %255, label %269, !dbg !18358

255:                                              ; preds = %252
  %256 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18359
  %257 = load i32, i32* %22, align 4, !dbg !18361
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %256, i32 %257, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.320, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !18362
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18363
  %259 = load i32, i32* %22, align 4, !dbg !18364
  %260 = load i32, i32* %26, align 4, !dbg !18365
  %261 = load i32, i32* %29, align 4, !dbg !18366
  %262 = load i8*, i8** %14, align 8, !dbg !18367
  %263 = load i32, i32* %29, align 4, !dbg !18368
  %264 = load i32, i32* %26, align 4, !dbg !18369
  %265 = mul i32 %263, %264, !dbg !18370
  %266 = zext i32 %265 to i64, !dbg !18371
  %267 = getelementptr inbounds i8, i8* %262, i64 %266, !dbg !18371
  %268 = call i32 @dump_buffer(%struct._IO_FILE* %258, i32 %259, i32 1, i32 %260, i32 %261, i8* %267), !dbg !18372
  br label %269, !dbg !18373

269:                                              ; preds = %255, %252, %249
  br label %270, !dbg !18374

270:                                              ; preds = %269
  %271 = load i32, i32* %29, align 4, !dbg !18375
  %272 = add i32 %271, 1, !dbg !18375
  store i32 %272, i32* %29, align 4, !dbg !18375
  br label %72, !dbg !18376, !llvm.loop !18377

273:                                              ; preds = %72
  store i32 0, i32* %12, align 4, !dbg !18379
  br label %274, !dbg !18379

274:                                              ; preds = %273, %50
  %275 = load i32, i32* %12, align 4, !dbg !18380
  ret i32 %275, !dbg !18380
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateTileSamples16bits(i8**, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !18381 {
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca %struct._IO_FILE*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i16, align 2
  %34 = alloca i16, align 2
  %35 = alloca i16, align 2
  %36 = alloca i16, align 2
  %37 = alloca i8, align 1
  %38 = alloca i16, align 2
  %39 = alloca i8*, align 8
  %40 = alloca i8*, align 8
  %41 = alloca [8 x i8], align 1
  store i8** %0, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !18382, metadata !DIExpression()), !dbg !18383
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !18384, metadata !DIExpression()), !dbg !18385
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !18386, metadata !DIExpression()), !dbg !18387
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !18388, metadata !DIExpression()), !dbg !18389
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !18390, metadata !DIExpression()), !dbg !18391
  store i32 %5, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !18392, metadata !DIExpression()), !dbg !18393
  store i16 %6, i16* %19, align 2
  call void @llvm.dbg.declare(metadata i16* %19, metadata !18394, metadata !DIExpression()), !dbg !18395
  store i16 %7, i16* %20, align 2
  call void @llvm.dbg.declare(metadata i16* %20, metadata !18396, metadata !DIExpression()), !dbg !18397
  store %struct._IO_FILE* %8, %struct._IO_FILE** %21, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %21, metadata !18398, metadata !DIExpression()), !dbg !18399
  store i32 %9, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !18400, metadata !DIExpression()), !dbg !18401
  store i32 %10, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !18402, metadata !DIExpression()), !dbg !18403
  call void @llvm.dbg.declare(metadata i32* %24, metadata !18404, metadata !DIExpression()), !dbg !18405
  store i32 0, i32* %24, align 4, !dbg !18405
  call void @llvm.dbg.declare(metadata i32* %25, metadata !18406, metadata !DIExpression()), !dbg !18407
  call void @llvm.dbg.declare(metadata i32* %26, metadata !18408, metadata !DIExpression()), !dbg !18409
  call void @llvm.dbg.declare(metadata i32* %27, metadata !18410, metadata !DIExpression()), !dbg !18411
  call void @llvm.dbg.declare(metadata i32* %28, metadata !18412, metadata !DIExpression()), !dbg !18413
  call void @llvm.dbg.declare(metadata i32* %29, metadata !18414, metadata !DIExpression()), !dbg !18415
  call void @llvm.dbg.declare(metadata i32* %30, metadata !18416, metadata !DIExpression()), !dbg !18417
  call void @llvm.dbg.declare(metadata i32* %31, metadata !18418, metadata !DIExpression()), !dbg !18419
  store i32 0, i32* %31, align 4, !dbg !18419
  call void @llvm.dbg.declare(metadata i32* %32, metadata !18420, metadata !DIExpression()), !dbg !18421
  store i32 0, i32* %32, align 4, !dbg !18421
  call void @llvm.dbg.declare(metadata i16* %33, metadata !18422, metadata !DIExpression()), !dbg !18423
  store i16 0, i16* %33, align 2, !dbg !18423
  call void @llvm.dbg.declare(metadata i16* %34, metadata !18424, metadata !DIExpression()), !dbg !18425
  store i16 0, i16* %34, align 2, !dbg !18425
  call void @llvm.dbg.declare(metadata i16* %35, metadata !18426, metadata !DIExpression()), !dbg !18427
  store i16 0, i16* %35, align 2, !dbg !18427
  call void @llvm.dbg.declare(metadata i16* %36, metadata !18428, metadata !DIExpression()), !dbg !18429
  store i16 0, i16* %36, align 2, !dbg !18429
  call void @llvm.dbg.declare(metadata i8* %37, metadata !18430, metadata !DIExpression()), !dbg !18431
  store i8 0, i8* %37, align 1, !dbg !18431
  call void @llvm.dbg.declare(metadata i16* %38, metadata !18432, metadata !DIExpression()), !dbg !18433
  call void @llvm.dbg.declare(metadata i8** %39, metadata !18434, metadata !DIExpression()), !dbg !18435
  %42 = load i8**, i8*** %13, align 8, !dbg !18436
  %43 = getelementptr inbounds i8*, i8** %42, i64 0, !dbg !18436
  %44 = load i8*, i8** %43, align 8, !dbg !18436
  store i8* %44, i8** %39, align 8, !dbg !18435
  call void @llvm.dbg.declare(metadata i8** %40, metadata !18437, metadata !DIExpression()), !dbg !18438
  %45 = load i8*, i8** %14, align 8, !dbg !18439
  store i8* %45, i8** %40, align 8, !dbg !18438
  call void @llvm.dbg.declare(metadata [8 x i8]* %41, metadata !18440, metadata !DIExpression()), !dbg !18442
  %46 = load i8*, i8** %39, align 8, !dbg !18443
  %47 = icmp eq i8* %46, null, !dbg !18445
  br i1 %47, label %51, label %48, !dbg !18446

48:                                               ; preds = %11
  %49 = load i8*, i8** %40, align 8, !dbg !18447
  %50 = icmp eq i8* %49, null, !dbg !18448
  br i1 %50, label %51, label %52, !dbg !18449

51:                                               ; preds = %48, %11
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.321, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !18450
  store i32 1, i32* %12, align 4, !dbg !18452
  br label %314, !dbg !18452

52:                                               ; preds = %48
  %53 = load i16, i16* %20, align 2, !dbg !18453
  %54 = zext i16 %53 to i32, !dbg !18453
  %55 = load i32, i32* %18, align 4, !dbg !18454
  %56 = mul i32 %54, %55, !dbg !18455
  %57 = add i32 %56, 7, !dbg !18456
  %58 = udiv i32 %57, 8, !dbg !18457
  store i32 %58, i32* %25, align 4, !dbg !18458
  %59 = load i32, i32* %17, align 4, !dbg !18459
  %60 = load i16, i16* %20, align 2, !dbg !18460
  %61 = zext i16 %60 to i32, !dbg !18460
  %62 = mul i32 %59, %61, !dbg !18461
  %63 = load i16, i16* %19, align 2, !dbg !18462
  %64 = zext i16 %63 to i32, !dbg !18462
  %65 = mul i32 %62, %64, !dbg !18463
  %66 = add i32 %65, 7, !dbg !18464
  %67 = udiv i32 %66, 8, !dbg !18465
  store i32 %67, i32* %26, align 4, !dbg !18466
  %68 = load i16, i16* %20, align 2, !dbg !18467
  %69 = zext i16 %68 to i32, !dbg !18467
  %70 = sub nsw i32 16, %69, !dbg !18468
  %71 = ashr i32 65535, %70, !dbg !18469
  %72 = trunc i32 %71 to i16, !dbg !18470
  store i16 %72, i16* %33, align 2, !dbg !18471
  store i32 0, i32* %29, align 4, !dbg !18472
  br label %73, !dbg !18474

73:                                               ; preds = %310, %52
  %74 = load i32, i32* %29, align 4, !dbg !18475
  %75 = load i32, i32* %16, align 4, !dbg !18477
  %76 = icmp ult i32 %74, %75, !dbg !18478
  br i1 %76, label %77, label %313, !dbg !18479

77:                                               ; preds = %73
  store i32 0, i32* %24, align 4, !dbg !18480
  store i16 0, i16* %36, align 2, !dbg !18482
  store i16 0, i16* %35, align 2, !dbg !18483
  %78 = load i8*, i8** %14, align 8, !dbg !18484
  %79 = load i32, i32* %29, align 4, !dbg !18485
  %80 = load i32, i32* %26, align 4, !dbg !18486
  %81 = mul i32 %79, %80, !dbg !18487
  %82 = zext i32 %81 to i64, !dbg !18488
  %83 = getelementptr inbounds i8, i8* %78, i64 %82, !dbg !18488
  store i8* %83, i8** %40, align 8, !dbg !18489
  %84 = load i32, i32* %29, align 4, !dbg !18490
  %85 = load i32, i32* %25, align 4, !dbg !18491
  %86 = mul i32 %84, %85, !dbg !18492
  store i32 %86, i32* %28, align 4, !dbg !18493
  store i32 0, i32* %30, align 4, !dbg !18494
  br label %87, !dbg !18496

87:                                               ; preds = %251, %77
  %88 = load i32, i32* %30, align 4, !dbg !18497
  %89 = load i32, i32* %15, align 4, !dbg !18499
  %90 = icmp ult i32 %88, %89, !dbg !18500
  br i1 %90, label %91, label %254, !dbg !18501

91:                                               ; preds = %87
  %92 = load i32, i32* %30, align 4, !dbg !18502
  %93 = load i16, i16* %20, align 2, !dbg !18504
  %94 = zext i16 %93 to i32, !dbg !18504
  %95 = mul i32 %92, %94, !dbg !18505
  store i32 %95, i32* %27, align 4, !dbg !18506
  %96 = load i32, i32* %27, align 4, !dbg !18507
  %97 = udiv i32 %96, 8, !dbg !18508
  store i32 %97, i32* %31, align 4, !dbg !18509
  %98 = load i32, i32* %27, align 4, !dbg !18510
  %99 = urem i32 %98, 8, !dbg !18511
  store i32 %99, i32* %32, align 4, !dbg !18512
  %100 = load i16, i16* %33, align 2, !dbg !18513
  %101 = zext i16 %100 to i32, !dbg !18513
  %102 = load i32, i32* %32, align 4, !dbg !18514
  %103 = sub i32 16, %102, !dbg !18515
  %104 = load i16, i16* %20, align 2, !dbg !18516
  %105 = zext i16 %104 to i32, !dbg !18516
  %106 = sub i32 %103, %105, !dbg !18517
  %107 = shl i32 %101, %106, !dbg !18518
  %108 = trunc i32 %107 to i16, !dbg !18513
  store i16 %108, i16* %34, align 2, !dbg !18519
  store i16 0, i16* %38, align 2, !dbg !18520
  br label %109, !dbg !18522

109:                                              ; preds = %247, %91
  %110 = load i16, i16* %38, align 2, !dbg !18523
  %111 = zext i16 %110 to i32, !dbg !18523
  %112 = load i16, i16* %19, align 2, !dbg !18525
  %113 = zext i16 %112 to i32, !dbg !18525
  %114 = icmp slt i32 %111, %113, !dbg !18526
  br i1 %114, label %115, label %250, !dbg !18527

115:                                              ; preds = %109
  %116 = load i8**, i8*** %13, align 8, !dbg !18528
  %117 = load i16, i16* %38, align 2, !dbg !18530
  %118 = zext i16 %117 to i64, !dbg !18528
  %119 = getelementptr inbounds i8*, i8** %116, i64 %118, !dbg !18528
  %120 = load i8*, i8** %119, align 8, !dbg !18528
  %121 = load i32, i32* %28, align 4, !dbg !18531
  %122 = zext i32 %121 to i64, !dbg !18532
  %123 = getelementptr inbounds i8, i8* %120, i64 %122, !dbg !18532
  %124 = load i32, i32* %31, align 4, !dbg !18533
  %125 = zext i32 %124 to i64, !dbg !18534
  %126 = getelementptr inbounds i8, i8* %123, i64 %125, !dbg !18534
  store i8* %126, i8** %39, align 8, !dbg !18535
  %127 = load i32, i32* @little_endian, align 4, !dbg !18536
  %128 = icmp ne i32 %127, 0, !dbg !18536
  br i1 %128, label %129, label %141, !dbg !18538

129:                                              ; preds = %115
  %130 = load i8*, i8** %39, align 8, !dbg !18539
  %131 = getelementptr inbounds i8, i8* %130, i64 0, !dbg !18539
  %132 = load i8, i8* %131, align 1, !dbg !18539
  %133 = zext i8 %132 to i32, !dbg !18539
  %134 = shl i32 %133, 8, !dbg !18540
  %135 = load i8*, i8** %39, align 8, !dbg !18541
  %136 = getelementptr inbounds i8, i8* %135, i64 1, !dbg !18541
  %137 = load i8, i8* %136, align 1, !dbg !18541
  %138 = zext i8 %137 to i32, !dbg !18541
  %139 = or i32 %134, %138, !dbg !18542
  %140 = trunc i32 %139 to i16, !dbg !18543
  store i16 %140, i16* %35, align 2, !dbg !18544
  br label %153, !dbg !18545

141:                                              ; preds = %115
  %142 = load i8*, i8** %39, align 8, !dbg !18546
  %143 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !18546
  %144 = load i8, i8* %143, align 1, !dbg !18546
  %145 = zext i8 %144 to i32, !dbg !18546
  %146 = shl i32 %145, 8, !dbg !18547
  %147 = load i8*, i8** %39, align 8, !dbg !18548
  %148 = getelementptr inbounds i8, i8* %147, i64 0, !dbg !18548
  %149 = load i8, i8* %148, align 1, !dbg !18548
  %150 = zext i8 %149 to i32, !dbg !18548
  %151 = or i32 %146, %150, !dbg !18549
  %152 = trunc i32 %151 to i16, !dbg !18550
  store i16 %152, i16* %35, align 2, !dbg !18551
  br label %153

153:                                              ; preds = %141, %129
  %154 = load i16, i16* %35, align 2, !dbg !18552
  %155 = zext i16 %154 to i32, !dbg !18552
  %156 = load i16, i16* %34, align 2, !dbg !18553
  %157 = zext i16 %156 to i32, !dbg !18553
  %158 = and i32 %155, %157, !dbg !18554
  %159 = load i32, i32* %32, align 4, !dbg !18555
  %160 = shl i32 %158, %159, !dbg !18556
  %161 = trunc i32 %160 to i16, !dbg !18557
  store i16 %161, i16* %35, align 2, !dbg !18558
  %162 = load i32, i32* %24, align 4, !dbg !18559
  %163 = icmp sge i32 %162, 8, !dbg !18561
  br i1 %163, label %164, label %185, !dbg !18562

164:                                              ; preds = %153
  %165 = load i16, i16* %36, align 2, !dbg !18563
  %166 = zext i16 %165 to i32, !dbg !18563
  %167 = ashr i32 %166, 8, !dbg !18565
  %168 = trunc i32 %167 to i8, !dbg !18566
  store i8 %168, i8* %37, align 1, !dbg !18567
  %169 = load i8, i8* %37, align 1, !dbg !18568
  %170 = load i8*, i8** %40, align 8, !dbg !18569
  %171 = getelementptr inbounds i8, i8* %170, i32 1, !dbg !18569
  store i8* %171, i8** %40, align 8, !dbg !18569
  store i8 %169, i8* %170, align 1, !dbg !18570
  %172 = load i32, i32* %24, align 4, !dbg !18571
  %173 = sub nsw i32 %172, 8, !dbg !18571
  store i32 %173, i32* %24, align 4, !dbg !18571
  %174 = load i16, i16* %36, align 2, !dbg !18572
  %175 = zext i16 %174 to i32, !dbg !18572
  %176 = shl i32 %175, 8, !dbg !18573
  %177 = load i16, i16* %35, align 2, !dbg !18574
  %178 = zext i16 %177 to i32, !dbg !18574
  %179 = load i32, i32* %24, align 4, !dbg !18575
  %180 = ashr i32 %178, %179, !dbg !18576
  %181 = or i32 %176, %180, !dbg !18577
  %182 = trunc i32 %181 to i16, !dbg !18578
  store i16 %182, i16* %36, align 2, !dbg !18579
  %183 = getelementptr inbounds [8 x i8], [8 x i8]* %41, i64 0, i64 0, !dbg !18580
  %184 = call i8* @strcpy(i8* %183, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !18581
  br label %196, !dbg !18582

185:                                              ; preds = %153
  store i8 0, i8* %37, align 1, !dbg !18583
  %186 = load i16, i16* %36, align 2, !dbg !18585
  %187 = zext i16 %186 to i32, !dbg !18585
  %188 = load i16, i16* %35, align 2, !dbg !18586
  %189 = zext i16 %188 to i32, !dbg !18586
  %190 = load i32, i32* %24, align 4, !dbg !18587
  %191 = ashr i32 %189, %190, !dbg !18588
  %192 = or i32 %187, %191, !dbg !18589
  %193 = trunc i32 %192 to i16, !dbg !18590
  store i16 %193, i16* %36, align 2, !dbg !18591
  %194 = getelementptr inbounds [8 x i8], [8 x i8]* %41, i64 0, i64 0, !dbg !18592
  %195 = call i8* @strcpy(i8* %194, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !18593
  br label %196

196:                                              ; preds = %185, %164
  %197 = load i16, i16* %20, align 2, !dbg !18594
  %198 = zext i16 %197 to i32, !dbg !18594
  %199 = load i32, i32* %24, align 4, !dbg !18595
  %200 = add nsw i32 %199, %198, !dbg !18595
  store i32 %200, i32* %24, align 4, !dbg !18595
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18596
  %202 = icmp ne %struct._IO_FILE* %201, null, !dbg !18598
  br i1 %202, label %203, label %246, !dbg !18599

203:                                              ; preds = %196
  %204 = load i32, i32* %23, align 4, !dbg !18600
  %205 = icmp eq i32 %204, 3, !dbg !18601
  br i1 %205, label %206, label %246, !dbg !18602

206:                                              ; preds = %203
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18603
  %208 = load i32, i32* %22, align 4, !dbg !18605
  %209 = load i32, i32* %29, align 4, !dbg !18606
  %210 = add i32 %209, 1, !dbg !18607
  %211 = load i32, i32* %30, align 4, !dbg !18608
  %212 = add i32 %211, 1, !dbg !18609
  %213 = load i16, i16* %38, align 2, !dbg !18610
  %214 = zext i16 %213 to i32, !dbg !18610
  %215 = load i32, i32* %31, align 4, !dbg !18611
  %216 = load i32, i32* %32, align 4, !dbg !18612
  %217 = load i8*, i8** %40, align 8, !dbg !18613
  %218 = load i8*, i8** %14, align 8, !dbg !18614
  %219 = ptrtoint i8* %217 to i64, !dbg !18615
  %220 = ptrtoint i8* %218 to i64, !dbg !18615
  %221 = sub i64 %219, %220, !dbg !18615
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %207, i32 %208, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.276, i64 0, i64 0), i32 %210, i32 %212, i32 %214, i32 %215, i32 %216, i64 %221), !dbg !18616
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18617
  %223 = load i32, i32* %22, align 4, !dbg !18618
  %224 = load i16, i16* %34, align 2, !dbg !18619
  %225 = call i32 @dump_short(%struct._IO_FILE* %222, i32 %223, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.277, i64 0, i64 0), i16 zeroext %224), !dbg !18620
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18621
  %227 = load i32, i32* %22, align 4, !dbg !18622
  %228 = load i8*, i8** %39, align 8, !dbg !18623
  %229 = call i32 @dump_data(%struct._IO_FILE* %226, i32 %227, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i8* %228, i32 2), !dbg !18624
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18625
  %231 = load i32, i32* %22, align 4, !dbg !18626
  %232 = load i16, i16* %35, align 2, !dbg !18627
  %233 = call i32 @dump_short(%struct._IO_FILE* %230, i32 %231, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.279, i64 0, i64 0), i16 zeroext %232), !dbg !18628
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18629
  %235 = load i32, i32* %22, align 4, !dbg !18630
  %236 = load i16, i16* %36, align 2, !dbg !18631
  %237 = call i32 @dump_short(%struct._IO_FILE* %234, i32 %235, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i64 0, i64 0), i16 zeroext %236), !dbg !18632
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18633
  %239 = load i32, i32* %22, align 4, !dbg !18634
  %240 = load i8, i8* %37, align 1, !dbg !18635
  %241 = call i32 @dump_byte(%struct._IO_FILE* %238, i32 %239, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.291, i64 0, i64 0), i8 zeroext %240), !dbg !18636
  %242 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18637
  %243 = load i32, i32* %22, align 4, !dbg !18638
  %244 = load i32, i32* %24, align 4, !dbg !18639
  %245 = getelementptr inbounds [8 x i8], [8 x i8]* %41, i64 0, i64 0, !dbg !18640
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %242, i32 %243, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.292, i64 0, i64 0), i32 %244, i8* %245), !dbg !18641
  br label %246, !dbg !18642

246:                                              ; preds = %206, %203, %196
  br label %247, !dbg !18643

247:                                              ; preds = %246
  %248 = load i16, i16* %38, align 2, !dbg !18644
  %249 = add i16 %248, 1, !dbg !18644
  store i16 %249, i16* %38, align 2, !dbg !18644
  br label %109, !dbg !18645, !llvm.loop !18646

250:                                              ; preds = %109
  br label %251, !dbg !18648

251:                                              ; preds = %250
  %252 = load i32, i32* %30, align 4, !dbg !18649
  %253 = add i32 %252, 1, !dbg !18649
  store i32 %253, i32* %30, align 4, !dbg !18649
  br label %87, !dbg !18650, !llvm.loop !18651

254:                                              ; preds = %87
  %255 = load i32, i32* %24, align 4, !dbg !18653
  %256 = icmp sgt i32 %255, 0, !dbg !18655
  br i1 %256, label %257, label %289, !dbg !18656

257:                                              ; preds = %254
  %258 = load i16, i16* %36, align 2, !dbg !18657
  %259 = zext i16 %258 to i32, !dbg !18657
  %260 = ashr i32 %259, 8, !dbg !18659
  %261 = trunc i32 %260 to i8, !dbg !18660
  store i8 %261, i8* %37, align 1, !dbg !18661
  %262 = load i8, i8* %37, align 1, !dbg !18662
  %263 = load i8*, i8** %40, align 8, !dbg !18663
  %264 = getelementptr inbounds i8, i8* %263, i32 1, !dbg !18663
  store i8* %264, i8** %40, align 8, !dbg !18663
  store i8 %262, i8* %263, align 1, !dbg !18664
  %265 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18665
  %266 = icmp ne %struct._IO_FILE* %265, null, !dbg !18667
  br i1 %266, label %267, label %288, !dbg !18668

267:                                              ; preds = %257
  %268 = load i32, i32* %23, align 4, !dbg !18669
  %269 = icmp eq i32 %268, 3, !dbg !18670
  br i1 %269, label %270, label %288, !dbg !18671

270:                                              ; preds = %267
  %271 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18672
  %272 = load i32, i32* %22, align 4, !dbg !18674
  %273 = load i32, i32* %29, align 4, !dbg !18675
  %274 = add i32 %273, 1, !dbg !18676
  %275 = load i32, i32* %30, align 4, !dbg !18677
  %276 = add i32 %275, 1, !dbg !18678
  %277 = load i32, i32* %31, align 4, !dbg !18679
  %278 = load i32, i32* %32, align 4, !dbg !18680
  %279 = load i8*, i8** %40, align 8, !dbg !18681
  %280 = load i8*, i8** %14, align 8, !dbg !18682
  %281 = ptrtoint i8* %279 to i64, !dbg !18683
  %282 = ptrtoint i8* %280 to i64, !dbg !18683
  %283 = sub i64 %281, %282, !dbg !18683
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %271, i32 %272, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %274, i32 %276, i32 %277, i32 %278, i64 %283), !dbg !18684
  %284 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18685
  %285 = load i32, i32* %22, align 4, !dbg !18686
  %286 = load i8, i8* %37, align 1, !dbg !18687
  %287 = call i32 @dump_byte(%struct._IO_FILE* %284, i32 %285, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.282, i64 0, i64 0), i8 zeroext %286), !dbg !18688
  br label %288, !dbg !18689

288:                                              ; preds = %270, %267, %257
  br label %289, !dbg !18690

289:                                              ; preds = %288, %254
  %290 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18691
  %291 = icmp ne %struct._IO_FILE* %290, null, !dbg !18693
  br i1 %291, label %292, label %309, !dbg !18694

292:                                              ; preds = %289
  %293 = load i32, i32* %23, align 4, !dbg !18695
  %294 = icmp eq i32 %293, 2, !dbg !18696
  br i1 %294, label %295, label %309, !dbg !18697

295:                                              ; preds = %292
  %296 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18698
  %297 = load i32, i32* %22, align 4, !dbg !18700
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %296, i32 %297, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.321, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !18701
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18702
  %299 = load i32, i32* %22, align 4, !dbg !18703
  %300 = load i32, i32* %26, align 4, !dbg !18704
  %301 = load i32, i32* %29, align 4, !dbg !18705
  %302 = load i8*, i8** %14, align 8, !dbg !18706
  %303 = load i32, i32* %29, align 4, !dbg !18707
  %304 = load i32, i32* %26, align 4, !dbg !18708
  %305 = mul i32 %303, %304, !dbg !18709
  %306 = zext i32 %305 to i64, !dbg !18710
  %307 = getelementptr inbounds i8, i8* %302, i64 %306, !dbg !18710
  %308 = call i32 @dump_buffer(%struct._IO_FILE* %298, i32 %299, i32 1, i32 %300, i32 %301, i8* %307), !dbg !18711
  br label %309, !dbg !18712

309:                                              ; preds = %295, %292, %289
  br label %310, !dbg !18713

310:                                              ; preds = %309
  %311 = load i32, i32* %29, align 4, !dbg !18714
  %312 = add i32 %311, 1, !dbg !18714
  store i32 %312, i32* %29, align 4, !dbg !18714
  br label %73, !dbg !18715, !llvm.loop !18716

313:                                              ; preds = %73
  store i32 0, i32* %12, align 4, !dbg !18718
  br label %314, !dbg !18718

314:                                              ; preds = %313, %51
  %315 = load i32, i32* %12, align 4, !dbg !18719
  ret i32 %315, !dbg !18719
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateTileSamples24bits(i8**, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !18720 {
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca %struct._IO_FILE*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i16, align 2
  %40 = alloca i8*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca [8 x i8], align 1
  store i8** %0, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !18721, metadata !DIExpression()), !dbg !18722
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !18723, metadata !DIExpression()), !dbg !18724
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !18725, metadata !DIExpression()), !dbg !18726
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !18727, metadata !DIExpression()), !dbg !18728
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !18729, metadata !DIExpression()), !dbg !18730
  store i32 %5, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !18731, metadata !DIExpression()), !dbg !18732
  store i16 %6, i16* %19, align 2
  call void @llvm.dbg.declare(metadata i16* %19, metadata !18733, metadata !DIExpression()), !dbg !18734
  store i16 %7, i16* %20, align 2
  call void @llvm.dbg.declare(metadata i16* %20, metadata !18735, metadata !DIExpression()), !dbg !18736
  store %struct._IO_FILE* %8, %struct._IO_FILE** %21, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %21, metadata !18737, metadata !DIExpression()), !dbg !18738
  store i32 %9, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !18739, metadata !DIExpression()), !dbg !18740
  store i32 %10, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !18741, metadata !DIExpression()), !dbg !18742
  call void @llvm.dbg.declare(metadata i32* %24, metadata !18743, metadata !DIExpression()), !dbg !18744
  store i32 0, i32* %24, align 4, !dbg !18744
  call void @llvm.dbg.declare(metadata i32* %25, metadata !18745, metadata !DIExpression()), !dbg !18746
  call void @llvm.dbg.declare(metadata i32* %26, metadata !18747, metadata !DIExpression()), !dbg !18748
  call void @llvm.dbg.declare(metadata i32* %27, metadata !18749, metadata !DIExpression()), !dbg !18750
  call void @llvm.dbg.declare(metadata i32* %28, metadata !18751, metadata !DIExpression()), !dbg !18752
  call void @llvm.dbg.declare(metadata i32* %29, metadata !18753, metadata !DIExpression()), !dbg !18754
  call void @llvm.dbg.declare(metadata i32* %30, metadata !18755, metadata !DIExpression()), !dbg !18756
  call void @llvm.dbg.declare(metadata i32* %31, metadata !18757, metadata !DIExpression()), !dbg !18758
  store i32 0, i32* %31, align 4, !dbg !18758
  call void @llvm.dbg.declare(metadata i32* %32, metadata !18759, metadata !DIExpression()), !dbg !18760
  store i32 0, i32* %32, align 4, !dbg !18760
  call void @llvm.dbg.declare(metadata i32* %33, metadata !18761, metadata !DIExpression()), !dbg !18762
  store i32 0, i32* %33, align 4, !dbg !18762
  call void @llvm.dbg.declare(metadata i32* %34, metadata !18763, metadata !DIExpression()), !dbg !18764
  store i32 0, i32* %34, align 4, !dbg !18764
  call void @llvm.dbg.declare(metadata i32* %35, metadata !18765, metadata !DIExpression()), !dbg !18766
  store i32 0, i32* %35, align 4, !dbg !18766
  call void @llvm.dbg.declare(metadata i32* %36, metadata !18767, metadata !DIExpression()), !dbg !18768
  store i32 0, i32* %36, align 4, !dbg !18768
  call void @llvm.dbg.declare(metadata i8* %37, metadata !18769, metadata !DIExpression()), !dbg !18770
  store i8 0, i8* %37, align 1, !dbg !18770
  call void @llvm.dbg.declare(metadata i8* %38, metadata !18771, metadata !DIExpression()), !dbg !18772
  store i8 0, i8* %38, align 1, !dbg !18772
  call void @llvm.dbg.declare(metadata i16* %39, metadata !18773, metadata !DIExpression()), !dbg !18774
  call void @llvm.dbg.declare(metadata i8** %40, metadata !18775, metadata !DIExpression()), !dbg !18776
  %43 = load i8**, i8*** %13, align 8, !dbg !18777
  %44 = getelementptr inbounds i8*, i8** %43, i64 0, !dbg !18777
  %45 = load i8*, i8** %44, align 8, !dbg !18777
  store i8* %45, i8** %40, align 8, !dbg !18776
  call void @llvm.dbg.declare(metadata i8** %41, metadata !18778, metadata !DIExpression()), !dbg !18779
  %46 = load i8*, i8** %14, align 8, !dbg !18780
  store i8* %46, i8** %41, align 8, !dbg !18779
  call void @llvm.dbg.declare(metadata [8 x i8]* %42, metadata !18781, metadata !DIExpression()), !dbg !18782
  %47 = load i8*, i8** %40, align 8, !dbg !18783
  %48 = icmp eq i8* %47, null, !dbg !18785
  br i1 %48, label %52, label %49, !dbg !18786

49:                                               ; preds = %11
  %50 = load i8*, i8** %41, align 8, !dbg !18787
  %51 = icmp eq i8* %50, null, !dbg !18788
  br i1 %51, label %52, label %53, !dbg !18789

52:                                               ; preds = %49, %11
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.322, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !18790
  store i32 1, i32* %12, align 4, !dbg !18792
  br label %362, !dbg !18792

53:                                               ; preds = %49
  %54 = load i16, i16* %20, align 2, !dbg !18793
  %55 = zext i16 %54 to i32, !dbg !18793
  %56 = load i32, i32* %18, align 4, !dbg !18794
  %57 = mul i32 %55, %56, !dbg !18795
  %58 = add i32 %57, 7, !dbg !18796
  %59 = udiv i32 %58, 8, !dbg !18797
  store i32 %59, i32* %25, align 4, !dbg !18798
  %60 = load i32, i32* %17, align 4, !dbg !18799
  %61 = load i16, i16* %20, align 2, !dbg !18800
  %62 = zext i16 %61 to i32, !dbg !18800
  %63 = mul i32 %60, %62, !dbg !18801
  %64 = load i16, i16* %19, align 2, !dbg !18802
  %65 = zext i16 %64 to i32, !dbg !18802
  %66 = mul i32 %63, %65, !dbg !18803
  %67 = add i32 %66, 7, !dbg !18804
  %68 = udiv i32 %67, 8, !dbg !18805
  store i32 %68, i32* %26, align 4, !dbg !18806
  %69 = load i16, i16* %20, align 2, !dbg !18807
  %70 = zext i16 %69 to i32, !dbg !18807
  %71 = sub nsw i32 32, %70, !dbg !18808
  %72 = lshr i32 -1, %71, !dbg !18809
  store i32 %72, i32* %33, align 4, !dbg !18810
  store i32 0, i32* %29, align 4, !dbg !18811
  br label %73, !dbg !18813

73:                                               ; preds = %358, %53
  %74 = load i32, i32* %29, align 4, !dbg !18814
  %75 = load i32, i32* %16, align 4, !dbg !18816
  %76 = icmp ult i32 %74, %75, !dbg !18817
  br i1 %76, label %77, label %361, !dbg !18818

77:                                               ; preds = %73
  store i32 0, i32* %24, align 4, !dbg !18819
  store i32 0, i32* %36, align 4, !dbg !18821
  store i32 0, i32* %35, align 4, !dbg !18822
  %78 = load i8*, i8** %14, align 8, !dbg !18823
  %79 = load i32, i32* %29, align 4, !dbg !18824
  %80 = load i32, i32* %26, align 4, !dbg !18825
  %81 = mul i32 %79, %80, !dbg !18826
  %82 = zext i32 %81 to i64, !dbg !18827
  %83 = getelementptr inbounds i8, i8* %78, i64 %82, !dbg !18827
  store i8* %83, i8** %41, align 8, !dbg !18828
  %84 = load i32, i32* %29, align 4, !dbg !18829
  %85 = load i32, i32* %25, align 4, !dbg !18830
  %86 = mul i32 %84, %85, !dbg !18831
  store i32 %86, i32* %28, align 4, !dbg !18832
  store i32 0, i32* %30, align 4, !dbg !18833
  br label %87, !dbg !18835

87:                                               ; preds = %271, %77
  %88 = load i32, i32* %30, align 4, !dbg !18836
  %89 = load i32, i32* %15, align 4, !dbg !18838
  %90 = icmp ult i32 %88, %89, !dbg !18839
  br i1 %90, label %91, label %274, !dbg !18840

91:                                               ; preds = %87
  %92 = load i32, i32* %30, align 4, !dbg !18841
  %93 = load i16, i16* %20, align 2, !dbg !18843
  %94 = zext i16 %93 to i32, !dbg !18843
  %95 = mul i32 %92, %94, !dbg !18844
  store i32 %95, i32* %27, align 4, !dbg !18845
  %96 = load i32, i32* %27, align 4, !dbg !18846
  %97 = udiv i32 %96, 8, !dbg !18847
  store i32 %97, i32* %31, align 4, !dbg !18848
  %98 = load i32, i32* %27, align 4, !dbg !18849
  %99 = urem i32 %98, 8, !dbg !18850
  store i32 %99, i32* %32, align 4, !dbg !18851
  %100 = load i32, i32* %33, align 4, !dbg !18852
  %101 = load i32, i32* %32, align 4, !dbg !18853
  %102 = sub i32 32, %101, !dbg !18854
  %103 = load i16, i16* %20, align 2, !dbg !18855
  %104 = zext i16 %103 to i32, !dbg !18855
  %105 = sub i32 %102, %104, !dbg !18856
  %106 = shl i32 %100, %105, !dbg !18857
  store i32 %106, i32* %34, align 4, !dbg !18858
  store i16 0, i16* %39, align 2, !dbg !18859
  br label %107, !dbg !18861

107:                                              ; preds = %267, %91
  %108 = load i16, i16* %39, align 2, !dbg !18862
  %109 = zext i16 %108 to i32, !dbg !18862
  %110 = load i16, i16* %19, align 2, !dbg !18864
  %111 = zext i16 %110 to i32, !dbg !18864
  %112 = icmp slt i32 %109, %111, !dbg !18865
  br i1 %112, label %113, label %270, !dbg !18866

113:                                              ; preds = %107
  %114 = load i8**, i8*** %13, align 8, !dbg !18867
  %115 = load i16, i16* %39, align 2, !dbg !18869
  %116 = zext i16 %115 to i64, !dbg !18867
  %117 = getelementptr inbounds i8*, i8** %114, i64 %116, !dbg !18867
  %118 = load i8*, i8** %117, align 8, !dbg !18867
  %119 = load i32, i32* %28, align 4, !dbg !18870
  %120 = zext i32 %119 to i64, !dbg !18871
  %121 = getelementptr inbounds i8, i8* %118, i64 %120, !dbg !18871
  %122 = load i32, i32* %31, align 4, !dbg !18872
  %123 = zext i32 %122 to i64, !dbg !18873
  %124 = getelementptr inbounds i8, i8* %121, i64 %123, !dbg !18873
  store i8* %124, i8** %40, align 8, !dbg !18874
  %125 = load i32, i32* @little_endian, align 4, !dbg !18875
  %126 = icmp ne i32 %125, 0, !dbg !18875
  br i1 %126, label %127, label %150, !dbg !18877

127:                                              ; preds = %113
  %128 = load i8*, i8** %40, align 8, !dbg !18878
  %129 = getelementptr inbounds i8, i8* %128, i64 0, !dbg !18878
  %130 = load i8, i8* %129, align 1, !dbg !18878
  %131 = zext i8 %130 to i32, !dbg !18878
  %132 = shl i32 %131, 24, !dbg !18879
  %133 = load i8*, i8** %40, align 8, !dbg !18880
  %134 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !18880
  %135 = load i8, i8* %134, align 1, !dbg !18880
  %136 = zext i8 %135 to i32, !dbg !18880
  %137 = shl i32 %136, 16, !dbg !18881
  %138 = or i32 %132, %137, !dbg !18882
  %139 = load i8*, i8** %40, align 8, !dbg !18883
  %140 = getelementptr inbounds i8, i8* %139, i64 2, !dbg !18883
  %141 = load i8, i8* %140, align 1, !dbg !18883
  %142 = zext i8 %141 to i32, !dbg !18883
  %143 = shl i32 %142, 8, !dbg !18884
  %144 = or i32 %138, %143, !dbg !18885
  %145 = load i8*, i8** %40, align 8, !dbg !18886
  %146 = getelementptr inbounds i8, i8* %145, i64 3, !dbg !18886
  %147 = load i8, i8* %146, align 1, !dbg !18886
  %148 = zext i8 %147 to i32, !dbg !18886
  %149 = or i32 %144, %148, !dbg !18887
  store i32 %149, i32* %35, align 4, !dbg !18888
  br label %173, !dbg !18889

150:                                              ; preds = %113
  %151 = load i8*, i8** %40, align 8, !dbg !18890
  %152 = getelementptr inbounds i8, i8* %151, i64 3, !dbg !18890
  %153 = load i8, i8* %152, align 1, !dbg !18890
  %154 = zext i8 %153 to i32, !dbg !18890
  %155 = shl i32 %154, 24, !dbg !18891
  %156 = load i8*, i8** %40, align 8, !dbg !18892
  %157 = getelementptr inbounds i8, i8* %156, i64 2, !dbg !18892
  %158 = load i8, i8* %157, align 1, !dbg !18892
  %159 = zext i8 %158 to i32, !dbg !18892
  %160 = shl i32 %159, 16, !dbg !18893
  %161 = or i32 %155, %160, !dbg !18894
  %162 = load i8*, i8** %40, align 8, !dbg !18895
  %163 = getelementptr inbounds i8, i8* %162, i64 1, !dbg !18895
  %164 = load i8, i8* %163, align 1, !dbg !18895
  %165 = zext i8 %164 to i32, !dbg !18895
  %166 = shl i32 %165, 8, !dbg !18896
  %167 = or i32 %161, %166, !dbg !18897
  %168 = load i8*, i8** %40, align 8, !dbg !18898
  %169 = getelementptr inbounds i8, i8* %168, i64 0, !dbg !18898
  %170 = load i8, i8* %169, align 1, !dbg !18898
  %171 = zext i8 %170 to i32, !dbg !18898
  %172 = or i32 %167, %171, !dbg !18899
  store i32 %172, i32* %35, align 4, !dbg !18900
  br label %173

173:                                              ; preds = %150, %127
  %174 = load i32, i32* %35, align 4, !dbg !18901
  %175 = load i32, i32* %34, align 4, !dbg !18902
  %176 = and i32 %174, %175, !dbg !18903
  %177 = load i32, i32* %32, align 4, !dbg !18904
  %178 = shl i32 %176, %177, !dbg !18905
  store i32 %178, i32* %35, align 4, !dbg !18906
  %179 = load i32, i32* %24, align 4, !dbg !18907
  %180 = icmp sge i32 %179, 16, !dbg !18909
  br i1 %180, label %181, label %204, !dbg !18910

181:                                              ; preds = %173
  %182 = load i32, i32* %36, align 4, !dbg !18911
  %183 = lshr i32 %182, 24, !dbg !18913
  %184 = trunc i32 %183 to i8, !dbg !18914
  store i8 %184, i8* %37, align 1, !dbg !18915
  %185 = load i8, i8* %37, align 1, !dbg !18916
  %186 = load i8*, i8** %41, align 8, !dbg !18917
  %187 = getelementptr inbounds i8, i8* %186, i32 1, !dbg !18917
  store i8* %187, i8** %41, align 8, !dbg !18917
  store i8 %185, i8* %186, align 1, !dbg !18918
  %188 = load i32, i32* %36, align 4, !dbg !18919
  %189 = lshr i32 %188, 16, !dbg !18920
  %190 = trunc i32 %189 to i8, !dbg !18921
  store i8 %190, i8* %38, align 1, !dbg !18922
  %191 = load i8, i8* %38, align 1, !dbg !18923
  %192 = load i8*, i8** %41, align 8, !dbg !18924
  %193 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !18924
  store i8* %193, i8** %41, align 8, !dbg !18924
  store i8 %191, i8* %192, align 1, !dbg !18925
  %194 = load i32, i32* %24, align 4, !dbg !18926
  %195 = sub nsw i32 %194, 16, !dbg !18926
  store i32 %195, i32* %24, align 4, !dbg !18926
  %196 = load i32, i32* %36, align 4, !dbg !18927
  %197 = shl i32 %196, 16, !dbg !18928
  %198 = load i32, i32* %35, align 4, !dbg !18929
  %199 = load i32, i32* %24, align 4, !dbg !18930
  %200 = lshr i32 %198, %199, !dbg !18931
  %201 = or i32 %197, %200, !dbg !18932
  store i32 %201, i32* %36, align 4, !dbg !18933
  %202 = getelementptr inbounds [8 x i8], [8 x i8]* %42, i64 0, i64 0, !dbg !18934
  %203 = call i8* @strcpy(i8* %202, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !18935
  br label %212, !dbg !18936

204:                                              ; preds = %173
  store i8 0, i8* %38, align 1, !dbg !18937
  store i8 0, i8* %37, align 1, !dbg !18939
  %205 = load i32, i32* %36, align 4, !dbg !18940
  %206 = load i32, i32* %35, align 4, !dbg !18941
  %207 = load i32, i32* %24, align 4, !dbg !18942
  %208 = lshr i32 %206, %207, !dbg !18943
  %209 = or i32 %205, %208, !dbg !18944
  store i32 %209, i32* %36, align 4, !dbg !18945
  %210 = getelementptr inbounds [8 x i8], [8 x i8]* %42, i64 0, i64 0, !dbg !18946
  %211 = call i8* @strcpy(i8* %210, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !18947
  br label %212

212:                                              ; preds = %204, %181
  %213 = load i16, i16* %20, align 2, !dbg !18948
  %214 = zext i16 %213 to i32, !dbg !18948
  %215 = load i32, i32* %24, align 4, !dbg !18949
  %216 = add nsw i32 %215, %214, !dbg !18949
  store i32 %216, i32* %24, align 4, !dbg !18949
  %217 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18950
  %218 = icmp ne %struct._IO_FILE* %217, null, !dbg !18952
  br i1 %218, label %219, label %266, !dbg !18953

219:                                              ; preds = %212
  %220 = load i32, i32* %23, align 4, !dbg !18954
  %221 = icmp eq i32 %220, 3, !dbg !18955
  br i1 %221, label %222, label %266, !dbg !18956

222:                                              ; preds = %219
  %223 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18957
  %224 = load i32, i32* %22, align 4, !dbg !18959
  %225 = load i32, i32* %29, align 4, !dbg !18960
  %226 = add i32 %225, 1, !dbg !18961
  %227 = load i32, i32* %30, align 4, !dbg !18962
  %228 = add i32 %227, 1, !dbg !18963
  %229 = load i16, i16* %39, align 2, !dbg !18964
  %230 = zext i16 %229 to i32, !dbg !18964
  %231 = load i32, i32* %31, align 4, !dbg !18965
  %232 = load i32, i32* %32, align 4, !dbg !18966
  %233 = load i8*, i8** %41, align 8, !dbg !18967
  %234 = load i8*, i8** %14, align 8, !dbg !18968
  %235 = ptrtoint i8* %233 to i64, !dbg !18969
  %236 = ptrtoint i8* %234 to i64, !dbg !18969
  %237 = sub i64 %235, %236, !dbg !18969
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %223, i32 %224, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.276, i64 0, i64 0), i32 %226, i32 %228, i32 %230, i32 %231, i32 %232, i64 %237), !dbg !18970
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18971
  %239 = load i32, i32* %22, align 4, !dbg !18972
  %240 = load i32, i32* %34, align 4, !dbg !18973
  %241 = call i32 @dump_long(%struct._IO_FILE* %238, i32 %239, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 %240), !dbg !18974
  %242 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18975
  %243 = load i32, i32* %22, align 4, !dbg !18976
  %244 = load i8*, i8** %40, align 8, !dbg !18977
  %245 = call i32 @dump_data(%struct._IO_FILE* %242, i32 %243, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %244, i32 4), !dbg !18978
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18979
  %247 = load i32, i32* %22, align 4, !dbg !18980
  %248 = load i32, i32* %35, align 4, !dbg !18981
  %249 = call i32 @dump_long(%struct._IO_FILE* %246, i32 %247, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i32 %248), !dbg !18982
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18983
  %251 = load i32, i32* %22, align 4, !dbg !18984
  %252 = load i32, i32* %36, align 4, !dbg !18985
  %253 = call i32 @dump_long(%struct._IO_FILE* %250, i32 %251, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i32 %252), !dbg !18986
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18987
  %255 = load i32, i32* %22, align 4, !dbg !18988
  %256 = load i8, i8* %37, align 1, !dbg !18989
  %257 = call i32 @dump_byte(%struct._IO_FILE* %254, i32 %255, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), i8 zeroext %256), !dbg !18990
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18991
  %259 = load i32, i32* %22, align 4, !dbg !18992
  %260 = load i8, i8* %38, align 1, !dbg !18993
  %261 = call i32 @dump_byte(%struct._IO_FILE* %258, i32 %259, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8 zeroext %260), !dbg !18994
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !18995
  %263 = load i32, i32* %22, align 4, !dbg !18996
  %264 = load i32, i32* %24, align 4, !dbg !18997
  %265 = getelementptr inbounds [8 x i8], [8 x i8]* %42, i64 0, i64 0, !dbg !18998
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %262, i32 %263, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.301, i64 0, i64 0), i32 %264, i8* %265), !dbg !18999
  br label %266, !dbg !19000

266:                                              ; preds = %222, %219, %212
  br label %267, !dbg !19001

267:                                              ; preds = %266
  %268 = load i16, i16* %39, align 2, !dbg !19002
  %269 = add i16 %268, 1, !dbg !19002
  store i16 %269, i16* %39, align 2, !dbg !19002
  br label %107, !dbg !19003, !llvm.loop !19004

270:                                              ; preds = %107
  br label %271, !dbg !19006

271:                                              ; preds = %270
  %272 = load i32, i32* %30, align 4, !dbg !19007
  %273 = add i32 %272, 1, !dbg !19007
  store i32 %273, i32* %30, align 4, !dbg !19007
  br label %87, !dbg !19008, !llvm.loop !19009

274:                                              ; preds = %87
  br label %275, !dbg !19011

275:                                              ; preds = %278, %274
  %276 = load i32, i32* %24, align 4, !dbg !19012
  %277 = icmp sgt i32 %276, 0, !dbg !19013
  br i1 %277, label %278, label %290, !dbg !19011

278:                                              ; preds = %275
  %279 = load i32, i32* %36, align 4, !dbg !19014
  %280 = lshr i32 %279, 24, !dbg !19016
  %281 = trunc i32 %280 to i8, !dbg !19017
  store i8 %281, i8* %37, align 1, !dbg !19018
  %282 = load i8, i8* %37, align 1, !dbg !19019
  %283 = load i8*, i8** %41, align 8, !dbg !19020
  %284 = getelementptr inbounds i8, i8* %283, i32 1, !dbg !19020
  store i8* %284, i8** %41, align 8, !dbg !19020
  store i8 %282, i8* %283, align 1, !dbg !19021
  %285 = load i32, i32* %36, align 4, !dbg !19022
  %286 = shl i32 %285, 8, !dbg !19023
  store i32 %286, i32* %36, align 4, !dbg !19024
  %287 = load i8, i8* %37, align 1, !dbg !19025
  store i8 %287, i8* %38, align 1, !dbg !19026
  %288 = load i32, i32* %24, align 4, !dbg !19027
  %289 = sub nsw i32 %288, 8, !dbg !19027
  store i32 %289, i32* %24, align 4, !dbg !19027
  br label %275, !dbg !19011, !llvm.loop !19028

290:                                              ; preds = %275
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19030
  %292 = icmp ne %struct._IO_FILE* %291, null, !dbg !19032
  br i1 %292, label %293, label %337, !dbg !19033

293:                                              ; preds = %290
  %294 = load i32, i32* %23, align 4, !dbg !19034
  %295 = icmp eq i32 %294, 3, !dbg !19035
  br i1 %295, label %296, label %337, !dbg !19036

296:                                              ; preds = %293
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19037
  %298 = load i32, i32* %22, align 4, !dbg !19039
  %299 = load i32, i32* %29, align 4, !dbg !19040
  %300 = add i32 %299, 1, !dbg !19041
  %301 = load i32, i32* %30, align 4, !dbg !19042
  %302 = add i32 %301, 1, !dbg !19043
  %303 = load i32, i32* %31, align 4, !dbg !19044
  %304 = load i32, i32* %32, align 4, !dbg !19045
  %305 = load i8*, i8** %41, align 8, !dbg !19046
  %306 = load i8*, i8** %14, align 8, !dbg !19047
  %307 = ptrtoint i8* %305 to i64, !dbg !19048
  %308 = ptrtoint i8* %306 to i64, !dbg !19048
  %309 = sub i64 %307, %308, !dbg !19048
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %297, i32 %298, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %300, i32 %302, i32 %303, i32 %304, i64 %309), !dbg !19049
  %310 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19050
  %311 = load i32, i32* %22, align 4, !dbg !19051
  %312 = load i32, i32* %34, align 4, !dbg !19052
  %313 = call i32 @dump_long(%struct._IO_FILE* %310, i32 %311, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 %312), !dbg !19053
  %314 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19054
  %315 = load i32, i32* %22, align 4, !dbg !19055
  %316 = load i8*, i8** %40, align 8, !dbg !19056
  %317 = call i32 @dump_data(%struct._IO_FILE* %314, i32 %315, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %316, i32 4), !dbg !19057
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19058
  %319 = load i32, i32* %22, align 4, !dbg !19059
  %320 = load i32, i32* %35, align 4, !dbg !19060
  %321 = call i32 @dump_long(%struct._IO_FILE* %318, i32 %319, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i32 %320), !dbg !19061
  %322 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19062
  %323 = load i32, i32* %22, align 4, !dbg !19063
  %324 = load i32, i32* %36, align 4, !dbg !19064
  %325 = call i32 @dump_long(%struct._IO_FILE* %322, i32 %323, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i32 %324), !dbg !19065
  %326 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19066
  %327 = load i32, i32* %22, align 4, !dbg !19067
  %328 = load i8, i8* %37, align 1, !dbg !19068
  %329 = call i32 @dump_byte(%struct._IO_FILE* %326, i32 %327, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), i8 zeroext %328), !dbg !19069
  %330 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19070
  %331 = load i32, i32* %22, align 4, !dbg !19071
  %332 = load i8, i8* %38, align 1, !dbg !19072
  %333 = call i32 @dump_byte(%struct._IO_FILE* %330, i32 %331, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8 zeroext %332), !dbg !19073
  %334 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19074
  %335 = load i32, i32* %22, align 4, !dbg !19075
  %336 = load i32, i32* %24, align 4, !dbg !19076
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %334, i32 %335, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.302, i64 0, i64 0), i32 %336), !dbg !19077
  br label %337, !dbg !19078

337:                                              ; preds = %296, %293, %290
  %338 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19079
  %339 = icmp ne %struct._IO_FILE* %338, null, !dbg !19081
  br i1 %339, label %340, label %357, !dbg !19082

340:                                              ; preds = %337
  %341 = load i32, i32* %23, align 4, !dbg !19083
  %342 = icmp eq i32 %341, 2, !dbg !19084
  br i1 %342, label %343, label %357, !dbg !19085

343:                                              ; preds = %340
  %344 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19086
  %345 = load i32, i32* %22, align 4, !dbg !19088
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %344, i32 %345, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.322, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !19089
  %346 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19090
  %347 = load i32, i32* %22, align 4, !dbg !19091
  %348 = load i32, i32* %26, align 4, !dbg !19092
  %349 = load i32, i32* %29, align 4, !dbg !19093
  %350 = load i8*, i8** %14, align 8, !dbg !19094
  %351 = load i32, i32* %29, align 4, !dbg !19095
  %352 = load i32, i32* %26, align 4, !dbg !19096
  %353 = mul i32 %351, %352, !dbg !19097
  %354 = zext i32 %353 to i64, !dbg !19098
  %355 = getelementptr inbounds i8, i8* %350, i64 %354, !dbg !19098
  %356 = call i32 @dump_buffer(%struct._IO_FILE* %346, i32 %347, i32 1, i32 %348, i32 %349, i8* %355), !dbg !19099
  br label %357, !dbg !19100

357:                                              ; preds = %343, %340, %337
  br label %358, !dbg !19101

358:                                              ; preds = %357
  %359 = load i32, i32* %29, align 4, !dbg !19102
  %360 = add i32 %359, 1, !dbg !19102
  store i32 %360, i32* %29, align 4, !dbg !19102
  br label %73, !dbg !19103, !llvm.loop !19104

361:                                              ; preds = %73
  store i32 0, i32* %12, align 4, !dbg !19106
  br label %362, !dbg !19106

362:                                              ; preds = %361, %52
  %363 = load i32, i32* %12, align 4, !dbg !19107
  ret i32 %363, !dbg !19107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateTileSamples32bits(i8**, i8*, i32, i32, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !19108 {
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca %struct._IO_FILE*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i8, align 1
  %45 = alloca i16, align 2
  %46 = alloca i8*, align 8
  %47 = alloca i8*, align 8
  %48 = alloca [8 x i8], align 1
  store i8** %0, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !19109, metadata !DIExpression()), !dbg !19110
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !19111, metadata !DIExpression()), !dbg !19112
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !19113, metadata !DIExpression()), !dbg !19114
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !19115, metadata !DIExpression()), !dbg !19116
  store i32 %4, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !19117, metadata !DIExpression()), !dbg !19118
  store i32 %5, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !19119, metadata !DIExpression()), !dbg !19120
  store i16 %6, i16* %19, align 2
  call void @llvm.dbg.declare(metadata i16* %19, metadata !19121, metadata !DIExpression()), !dbg !19122
  store i16 %7, i16* %20, align 2
  call void @llvm.dbg.declare(metadata i16* %20, metadata !19123, metadata !DIExpression()), !dbg !19124
  store %struct._IO_FILE* %8, %struct._IO_FILE** %21, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %21, metadata !19125, metadata !DIExpression()), !dbg !19126
  store i32 %9, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !19127, metadata !DIExpression()), !dbg !19128
  store i32 %10, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !19129, metadata !DIExpression()), !dbg !19130
  call void @llvm.dbg.declare(metadata i32* %24, metadata !19131, metadata !DIExpression()), !dbg !19132
  store i32 0, i32* %24, align 4, !dbg !19132
  call void @llvm.dbg.declare(metadata i32* %25, metadata !19133, metadata !DIExpression()), !dbg !19134
  store i32 0, i32* %25, align 4, !dbg !19134
  call void @llvm.dbg.declare(metadata i32* %26, metadata !19135, metadata !DIExpression()), !dbg !19136
  call void @llvm.dbg.declare(metadata i32* %27, metadata !19137, metadata !DIExpression()), !dbg !19138
  call void @llvm.dbg.declare(metadata i32* %28, metadata !19139, metadata !DIExpression()), !dbg !19140
  call void @llvm.dbg.declare(metadata i32* %29, metadata !19141, metadata !DIExpression()), !dbg !19142
  call void @llvm.dbg.declare(metadata i32* %30, metadata !19143, metadata !DIExpression()), !dbg !19144
  store i32 0, i32* %30, align 4, !dbg !19144
  call void @llvm.dbg.declare(metadata i32* %31, metadata !19145, metadata !DIExpression()), !dbg !19146
  store i32 0, i32* %31, align 4, !dbg !19146
  call void @llvm.dbg.declare(metadata i32* %32, metadata !19147, metadata !DIExpression()), !dbg !19148
  call void @llvm.dbg.declare(metadata i32* %33, metadata !19149, metadata !DIExpression()), !dbg !19150
  call void @llvm.dbg.declare(metadata i32* %34, metadata !19151, metadata !DIExpression()), !dbg !19152
  store i32 0, i32* %34, align 4, !dbg !19152
  call void @llvm.dbg.declare(metadata i32* %35, metadata !19153, metadata !DIExpression()), !dbg !19154
  store i32 0, i32* %35, align 4, !dbg !19154
  call void @llvm.dbg.declare(metadata i64* %36, metadata !19155, metadata !DIExpression()), !dbg !19156
  store i64 0, i64* %36, align 8, !dbg !19156
  call void @llvm.dbg.declare(metadata i64* %37, metadata !19157, metadata !DIExpression()), !dbg !19158
  store i64 0, i64* %37, align 8, !dbg !19158
  call void @llvm.dbg.declare(metadata i64* %38, metadata !19159, metadata !DIExpression()), !dbg !19160
  store i64 0, i64* %38, align 8, !dbg !19160
  call void @llvm.dbg.declare(metadata i64* %39, metadata !19161, metadata !DIExpression()), !dbg !19162
  store i64 0, i64* %39, align 8, !dbg !19162
  call void @llvm.dbg.declare(metadata i64* %40, metadata !19163, metadata !DIExpression()), !dbg !19164
  store i64 0, i64* %40, align 8, !dbg !19164
  call void @llvm.dbg.declare(metadata i8* %41, metadata !19165, metadata !DIExpression()), !dbg !19166
  store i8 0, i8* %41, align 1, !dbg !19166
  call void @llvm.dbg.declare(metadata i8* %42, metadata !19167, metadata !DIExpression()), !dbg !19168
  store i8 0, i8* %42, align 1, !dbg !19168
  call void @llvm.dbg.declare(metadata i8* %43, metadata !19169, metadata !DIExpression()), !dbg !19170
  store i8 0, i8* %43, align 1, !dbg !19170
  call void @llvm.dbg.declare(metadata i8* %44, metadata !19171, metadata !DIExpression()), !dbg !19172
  store i8 0, i8* %44, align 1, !dbg !19172
  call void @llvm.dbg.declare(metadata i16* %45, metadata !19173, metadata !DIExpression()), !dbg !19174
  call void @llvm.dbg.declare(metadata i8** %46, metadata !19175, metadata !DIExpression()), !dbg !19176
  %49 = load i8**, i8*** %13, align 8, !dbg !19177
  %50 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !19177
  %51 = load i8*, i8** %50, align 8, !dbg !19177
  store i8* %51, i8** %46, align 8, !dbg !19176
  call void @llvm.dbg.declare(metadata i8** %47, metadata !19178, metadata !DIExpression()), !dbg !19179
  %52 = load i8*, i8** %14, align 8, !dbg !19180
  store i8* %52, i8** %47, align 8, !dbg !19179
  call void @llvm.dbg.declare(metadata [8 x i8]* %48, metadata !19181, metadata !DIExpression()), !dbg !19182
  %53 = load i8*, i8** %46, align 8, !dbg !19183
  %54 = icmp eq i8* %53, null, !dbg !19185
  br i1 %54, label %58, label %55, !dbg !19186

55:                                               ; preds = %11
  %56 = load i8*, i8** %47, align 8, !dbg !19187
  %57 = icmp eq i8* %56, null, !dbg !19188
  br i1 %57, label %58, label %59, !dbg !19189

58:                                               ; preds = %55, %11
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.323, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !19190
  store i32 1, i32* %12, align 4, !dbg !19192
  br label %387, !dbg !19192

59:                                               ; preds = %55
  %60 = load i16, i16* %20, align 2, !dbg !19193
  %61 = zext i16 %60 to i32, !dbg !19193
  %62 = load i32, i32* %18, align 4, !dbg !19194
  %63 = mul i32 %61, %62, !dbg !19195
  %64 = add i32 %63, 7, !dbg !19196
  %65 = udiv i32 %64, 8, !dbg !19197
  store i32 %65, i32* %26, align 4, !dbg !19198
  %66 = load i32, i32* %17, align 4, !dbg !19199
  %67 = load i16, i16* %20, align 2, !dbg !19200
  %68 = zext i16 %67 to i32, !dbg !19200
  %69 = mul i32 %66, %68, !dbg !19201
  %70 = load i16, i16* %19, align 2, !dbg !19202
  %71 = zext i16 %70 to i32, !dbg !19202
  %72 = mul i32 %69, %71, !dbg !19203
  %73 = add i32 %72, 7, !dbg !19204
  %74 = udiv i32 %73, 8, !dbg !19205
  store i32 %74, i32* %27, align 4, !dbg !19206
  %75 = load i16, i16* %20, align 2, !dbg !19207
  %76 = zext i16 %75 to i32, !dbg !19207
  %77 = sub nsw i32 64, %76, !dbg !19208
  %78 = zext i32 %77 to i64, !dbg !19209
  %79 = lshr i64 -1, %78, !dbg !19209
  store i64 %79, i64* %36, align 8, !dbg !19210
  %80 = load i16, i16* %20, align 2, !dbg !19211
  %81 = zext i16 %80 to i32, !dbg !19211
  %82 = add nsw i32 %81, 7, !dbg !19212
  %83 = sdiv i32 %82, 8, !dbg !19213
  %84 = add nsw i32 %83, 1, !dbg !19214
  store i32 %84, i32* %25, align 4, !dbg !19215
  store i32 0, i32* %32, align 4, !dbg !19216
  br label %85, !dbg !19218

85:                                               ; preds = %383, %59
  %86 = load i32, i32* %32, align 4, !dbg !19219
  %87 = load i32, i32* %16, align 4, !dbg !19221
  %88 = icmp ult i32 %86, %87, !dbg !19222
  br i1 %88, label %89, label %386, !dbg !19223

89:                                               ; preds = %85
  store i32 0, i32* %24, align 4, !dbg !19224
  store i64 0, i64* %39, align 8, !dbg !19226
  store i64 0, i64* %38, align 8, !dbg !19227
  %90 = load i8*, i8** %14, align 8, !dbg !19228
  %91 = load i32, i32* %32, align 4, !dbg !19229
  %92 = load i32, i32* %27, align 4, !dbg !19230
  %93 = mul i32 %91, %92, !dbg !19231
  %94 = zext i32 %93 to i64, !dbg !19232
  %95 = getelementptr inbounds i8, i8* %90, i64 %94, !dbg !19232
  store i8* %95, i8** %47, align 8, !dbg !19233
  %96 = load i32, i32* %32, align 4, !dbg !19234
  %97 = load i32, i32* %26, align 4, !dbg !19235
  %98 = mul i32 %96, %97, !dbg !19236
  store i32 %98, i32* %29, align 4, !dbg !19237
  store i32 0, i32* %33, align 4, !dbg !19238
  br label %99, !dbg !19240

99:                                               ; preds = %299, %89
  %100 = load i32, i32* %33, align 4, !dbg !19241
  %101 = load i32, i32* %15, align 4, !dbg !19243
  %102 = icmp ult i32 %100, %101, !dbg !19244
  br i1 %102, label %103, label %302, !dbg !19245

103:                                              ; preds = %99
  %104 = load i32, i32* %33, align 4, !dbg !19246
  %105 = load i16, i16* %20, align 2, !dbg !19248
  %106 = zext i16 %105 to i32, !dbg !19248
  %107 = mul i32 %104, %106, !dbg !19249
  store i32 %107, i32* %28, align 4, !dbg !19250
  %108 = load i32, i32* %28, align 4, !dbg !19251
  %109 = udiv i32 %108, 8, !dbg !19252
  store i32 %109, i32* %30, align 4, !dbg !19253
  %110 = load i32, i32* %28, align 4, !dbg !19254
  %111 = urem i32 %110, 8, !dbg !19255
  store i32 %111, i32* %31, align 4, !dbg !19256
  %112 = load i64, i64* %36, align 8, !dbg !19257
  %113 = load i32, i32* %31, align 4, !dbg !19258
  %114 = sub i32 64, %113, !dbg !19259
  %115 = load i16, i16* %20, align 2, !dbg !19260
  %116 = zext i16 %115 to i32, !dbg !19260
  %117 = sub i32 %114, %116, !dbg !19261
  %118 = zext i32 %117 to i64, !dbg !19262
  %119 = shl i64 %112, %118, !dbg !19262
  store i64 %119, i64* %37, align 8, !dbg !19263
  store i16 0, i16* %45, align 2, !dbg !19264
  br label %120, !dbg !19266

120:                                              ; preds = %295, %103
  %121 = load i16, i16* %45, align 2, !dbg !19267
  %122 = zext i16 %121 to i32, !dbg !19267
  %123 = load i16, i16* %19, align 2, !dbg !19269
  %124 = zext i16 %123 to i32, !dbg !19269
  %125 = icmp slt i32 %122, %124, !dbg !19270
  br i1 %125, label %126, label %298, !dbg !19271

126:                                              ; preds = %120
  %127 = load i8**, i8*** %13, align 8, !dbg !19272
  %128 = load i16, i16* %45, align 2, !dbg !19274
  %129 = zext i16 %128 to i64, !dbg !19272
  %130 = getelementptr inbounds i8*, i8** %127, i64 %129, !dbg !19272
  %131 = load i8*, i8** %130, align 8, !dbg !19272
  %132 = load i32, i32* %29, align 4, !dbg !19275
  %133 = zext i32 %132 to i64, !dbg !19276
  %134 = getelementptr inbounds i8, i8* %131, i64 %133, !dbg !19276
  %135 = load i32, i32* %30, align 4, !dbg !19277
  %136 = zext i32 %135 to i64, !dbg !19278
  %137 = getelementptr inbounds i8, i8* %134, i64 %136, !dbg !19278
  store i8* %137, i8** %46, align 8, !dbg !19279
  %138 = load i32, i32* @little_endian, align 4, !dbg !19280
  %139 = icmp ne i32 %138, 0, !dbg !19280
  br i1 %139, label %140, label %164, !dbg !19282

140:                                              ; preds = %126
  %141 = load i8*, i8** %46, align 8, !dbg !19283
  %142 = getelementptr inbounds i8, i8* %141, i64 0, !dbg !19283
  %143 = load i8, i8* %142, align 1, !dbg !19283
  %144 = zext i8 %143 to i32, !dbg !19283
  %145 = shl i32 %144, 24, !dbg !19285
  %146 = load i8*, i8** %46, align 8, !dbg !19286
  %147 = getelementptr inbounds i8, i8* %146, i64 1, !dbg !19286
  %148 = load i8, i8* %147, align 1, !dbg !19286
  %149 = zext i8 %148 to i32, !dbg !19286
  %150 = shl i32 %149, 16, !dbg !19287
  %151 = or i32 %145, %150, !dbg !19288
  %152 = load i8*, i8** %46, align 8, !dbg !19289
  %153 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !19289
  %154 = load i8, i8* %153, align 1, !dbg !19289
  %155 = zext i8 %154 to i32, !dbg !19289
  %156 = shl i32 %155, 8, !dbg !19290
  %157 = or i32 %151, %156, !dbg !19291
  %158 = load i8*, i8** %46, align 8, !dbg !19292
  %159 = getelementptr inbounds i8, i8* %158, i64 3, !dbg !19292
  %160 = load i8, i8* %159, align 1, !dbg !19292
  %161 = zext i8 %160 to i32, !dbg !19292
  %162 = or i32 %157, %161, !dbg !19293
  store i32 %162, i32* %34, align 4, !dbg !19294
  %163 = load i32, i32* %34, align 4, !dbg !19295
  store i32 %163, i32* %35, align 4, !dbg !19296
  br label %188, !dbg !19297

164:                                              ; preds = %126
  %165 = load i8*, i8** %46, align 8, !dbg !19298
  %166 = getelementptr inbounds i8, i8* %165, i64 3, !dbg !19298
  %167 = load i8, i8* %166, align 1, !dbg !19298
  %168 = zext i8 %167 to i32, !dbg !19298
  %169 = shl i32 %168, 24, !dbg !19300
  %170 = load i8*, i8** %46, align 8, !dbg !19301
  %171 = getelementptr inbounds i8, i8* %170, i64 2, !dbg !19301
  %172 = load i8, i8* %171, align 1, !dbg !19301
  %173 = zext i8 %172 to i32, !dbg !19301
  %174 = shl i32 %173, 16, !dbg !19302
  %175 = or i32 %169, %174, !dbg !19303
  %176 = load i8*, i8** %46, align 8, !dbg !19304
  %177 = getelementptr inbounds i8, i8* %176, i64 1, !dbg !19304
  %178 = load i8, i8* %177, align 1, !dbg !19304
  %179 = zext i8 %178 to i32, !dbg !19304
  %180 = shl i32 %179, 8, !dbg !19305
  %181 = or i32 %175, %180, !dbg !19306
  %182 = load i8*, i8** %46, align 8, !dbg !19307
  %183 = getelementptr inbounds i8, i8* %182, i64 0, !dbg !19307
  %184 = load i8, i8* %183, align 1, !dbg !19307
  %185 = zext i8 %184 to i32, !dbg !19307
  %186 = or i32 %181, %185, !dbg !19308
  store i32 %186, i32* %34, align 4, !dbg !19309
  %187 = load i32, i32* %34, align 4, !dbg !19310
  store i32 %187, i32* %35, align 4, !dbg !19311
  br label %188

188:                                              ; preds = %164, %140
  %189 = load i32, i32* %34, align 4, !dbg !19312
  %190 = zext i32 %189 to i64, !dbg !19313
  %191 = shl i64 %190, 32, !dbg !19314
  %192 = load i32, i32* %35, align 4, !dbg !19315
  %193 = zext i32 %192 to i64, !dbg !19315
  %194 = or i64 %191, %193, !dbg !19316
  store i64 %194, i64* %40, align 8, !dbg !19317
  %195 = load i64, i64* %40, align 8, !dbg !19318
  %196 = load i64, i64* %37, align 8, !dbg !19319
  %197 = and i64 %195, %196, !dbg !19320
  %198 = load i32, i32* %31, align 4, !dbg !19321
  %199 = zext i32 %198 to i64, !dbg !19322
  %200 = shl i64 %197, %199, !dbg !19322
  store i64 %200, i64* %38, align 8, !dbg !19323
  %201 = load i32, i32* %24, align 4, !dbg !19324
  %202 = icmp sge i32 %201, 32, !dbg !19326
  br i1 %202, label %203, label %239, !dbg !19327

203:                                              ; preds = %188
  %204 = load i64, i64* %39, align 8, !dbg !19328
  %205 = lshr i64 %204, 56, !dbg !19330
  %206 = trunc i64 %205 to i8, !dbg !19331
  store i8 %206, i8* %41, align 1, !dbg !19332
  %207 = load i8, i8* %41, align 1, !dbg !19333
  %208 = load i8*, i8** %47, align 8, !dbg !19334
  %209 = getelementptr inbounds i8, i8* %208, i32 1, !dbg !19334
  store i8* %209, i8** %47, align 8, !dbg !19334
  store i8 %207, i8* %208, align 1, !dbg !19335
  %210 = load i64, i64* %39, align 8, !dbg !19336
  %211 = lshr i64 %210, 48, !dbg !19337
  %212 = trunc i64 %211 to i8, !dbg !19338
  store i8 %212, i8* %42, align 1, !dbg !19339
  %213 = load i8, i8* %42, align 1, !dbg !19340
  %214 = load i8*, i8** %47, align 8, !dbg !19341
  %215 = getelementptr inbounds i8, i8* %214, i32 1, !dbg !19341
  store i8* %215, i8** %47, align 8, !dbg !19341
  store i8 %213, i8* %214, align 1, !dbg !19342
  %216 = load i64, i64* %39, align 8, !dbg !19343
  %217 = lshr i64 %216, 40, !dbg !19344
  %218 = trunc i64 %217 to i8, !dbg !19345
  store i8 %218, i8* %43, align 1, !dbg !19346
  %219 = load i8, i8* %43, align 1, !dbg !19347
  %220 = load i8*, i8** %47, align 8, !dbg !19348
  %221 = getelementptr inbounds i8, i8* %220, i32 1, !dbg !19348
  store i8* %221, i8** %47, align 8, !dbg !19348
  store i8 %219, i8* %220, align 1, !dbg !19349
  %222 = load i64, i64* %39, align 8, !dbg !19350
  %223 = lshr i64 %222, 32, !dbg !19351
  %224 = trunc i64 %223 to i8, !dbg !19352
  store i8 %224, i8* %44, align 1, !dbg !19353
  %225 = load i8, i8* %44, align 1, !dbg !19354
  %226 = load i8*, i8** %47, align 8, !dbg !19355
  %227 = getelementptr inbounds i8, i8* %226, i32 1, !dbg !19355
  store i8* %227, i8** %47, align 8, !dbg !19355
  store i8 %225, i8* %226, align 1, !dbg !19356
  %228 = load i32, i32* %24, align 4, !dbg !19357
  %229 = sub nsw i32 %228, 32, !dbg !19357
  store i32 %229, i32* %24, align 4, !dbg !19357
  %230 = load i64, i64* %39, align 8, !dbg !19358
  %231 = shl i64 %230, 32, !dbg !19359
  %232 = load i64, i64* %38, align 8, !dbg !19360
  %233 = load i32, i32* %24, align 4, !dbg !19361
  %234 = zext i32 %233 to i64, !dbg !19362
  %235 = lshr i64 %232, %234, !dbg !19362
  %236 = or i64 %231, %235, !dbg !19363
  store i64 %236, i64* %39, align 8, !dbg !19364
  %237 = getelementptr inbounds [8 x i8], [8 x i8]* %48, i64 0, i64 0, !dbg !19365
  %238 = call i8* @strcpy(i8* %237, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !19366
  br label %248, !dbg !19367

239:                                              ; preds = %188
  store i8 0, i8* %44, align 1, !dbg !19368
  store i8 0, i8* %43, align 1, !dbg !19370
  store i8 0, i8* %42, align 1, !dbg !19371
  store i8 0, i8* %41, align 1, !dbg !19372
  %240 = load i64, i64* %39, align 8, !dbg !19373
  %241 = load i64, i64* %38, align 8, !dbg !19374
  %242 = load i32, i32* %24, align 4, !dbg !19375
  %243 = zext i32 %242 to i64, !dbg !19376
  %244 = lshr i64 %241, %243, !dbg !19376
  %245 = or i64 %240, %244, !dbg !19377
  store i64 %245, i64* %39, align 8, !dbg !19378
  %246 = getelementptr inbounds [8 x i8], [8 x i8]* %48, i64 0, i64 0, !dbg !19379
  %247 = call i8* @strcpy(i8* %246, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !19380
  br label %248

248:                                              ; preds = %239, %203
  %249 = load i16, i16* %20, align 2, !dbg !19381
  %250 = zext i16 %249 to i32, !dbg !19381
  %251 = load i32, i32* %24, align 4, !dbg !19382
  %252 = add nsw i32 %251, %250, !dbg !19382
  store i32 %252, i32* %24, align 4, !dbg !19382
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19383
  %254 = icmp ne %struct._IO_FILE* %253, null, !dbg !19385
  br i1 %254, label %255, label %294, !dbg !19386

255:                                              ; preds = %248
  %256 = load i32, i32* %23, align 4, !dbg !19387
  %257 = icmp eq i32 %256, 3, !dbg !19388
  br i1 %257, label %258, label %294, !dbg !19389

258:                                              ; preds = %255
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19390
  %260 = load i32, i32* %22, align 4, !dbg !19392
  %261 = load i32, i32* %32, align 4, !dbg !19393
  %262 = add i32 %261, 1, !dbg !19394
  %263 = load i32, i32* %33, align 4, !dbg !19395
  %264 = add i32 %263, 1, !dbg !19396
  %265 = load i16, i16* %45, align 2, !dbg !19397
  %266 = zext i16 %265 to i32, !dbg !19397
  %267 = load i32, i32* %30, align 4, !dbg !19398
  %268 = load i32, i32* %31, align 4, !dbg !19399
  %269 = load i8*, i8** %47, align 8, !dbg !19400
  %270 = load i8*, i8** %14, align 8, !dbg !19401
  %271 = ptrtoint i8* %269 to i64, !dbg !19402
  %272 = ptrtoint i8* %270 to i64, !dbg !19402
  %273 = sub i64 %271, %272, !dbg !19402
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %259, i32 %260, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.304, i64 0, i64 0), i32 %262, i32 %264, i32 %266, i32 %267, i32 %268, i64 %273), !dbg !19403
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19404
  %275 = load i32, i32* %22, align 4, !dbg !19405
  %276 = load i64, i64* %37, align 8, !dbg !19406
  %277 = call i32 @dump_wide(%struct._IO_FILE* %274, i32 %275, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i64 %276), !dbg !19407
  %278 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19408
  %279 = load i32, i32* %22, align 4, !dbg !19409
  %280 = load i8*, i8** %46, align 8, !dbg !19410
  %281 = call i32 @dump_data(%struct._IO_FILE* %278, i32 %279, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %280, i32 8), !dbg !19411
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19412
  %283 = load i32, i32* %22, align 4, !dbg !19413
  %284 = load i64, i64* %38, align 8, !dbg !19414
  %285 = call i32 @dump_wide(%struct._IO_FILE* %282, i32 %283, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i64 %284), !dbg !19415
  %286 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19416
  %287 = load i32, i32* %22, align 4, !dbg !19417
  %288 = load i64, i64* %39, align 8, !dbg !19418
  %289 = call i32 @dump_wide(%struct._IO_FILE* %286, i32 %287, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i64 %288), !dbg !19419
  %290 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19420
  %291 = load i32, i32* %22, align 4, !dbg !19421
  %292 = load i32, i32* %24, align 4, !dbg !19422
  %293 = getelementptr inbounds [8 x i8], [8 x i8]* %48, i64 0, i64 0, !dbg !19423
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %290, i32 %291, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.301, i64 0, i64 0), i32 %292, i8* %293), !dbg !19424
  br label %294, !dbg !19425

294:                                              ; preds = %258, %255, %248
  br label %295, !dbg !19426

295:                                              ; preds = %294
  %296 = load i16, i16* %45, align 2, !dbg !19427
  %297 = add i16 %296, 1, !dbg !19427
  store i16 %297, i16* %45, align 2, !dbg !19427
  br label %120, !dbg !19428, !llvm.loop !19429

298:                                              ; preds = %120
  br label %299, !dbg !19431

299:                                              ; preds = %298
  %300 = load i32, i32* %33, align 4, !dbg !19432
  %301 = add i32 %300, 1, !dbg !19432
  store i32 %301, i32* %33, align 4, !dbg !19432
  br label %99, !dbg !19433, !llvm.loop !19434

302:                                              ; preds = %99
  br label %303, !dbg !19436

303:                                              ; preds = %306, %302
  %304 = load i32, i32* %24, align 4, !dbg !19437
  %305 = icmp sgt i32 %304, 0, !dbg !19438
  br i1 %305, label %306, label %317, !dbg !19436

306:                                              ; preds = %303
  %307 = load i64, i64* %39, align 8, !dbg !19439
  %308 = lshr i64 %307, 56, !dbg !19441
  %309 = trunc i64 %308 to i8, !dbg !19442
  store i8 %309, i8* %41, align 1, !dbg !19443
  %310 = load i8, i8* %41, align 1, !dbg !19444
  %311 = load i8*, i8** %47, align 8, !dbg !19445
  %312 = getelementptr inbounds i8, i8* %311, i32 1, !dbg !19445
  store i8* %312, i8** %47, align 8, !dbg !19445
  store i8 %310, i8* %311, align 1, !dbg !19446
  %313 = load i64, i64* %39, align 8, !dbg !19447
  %314 = shl i64 %313, 8, !dbg !19448
  store i64 %314, i64* %39, align 8, !dbg !19449
  %315 = load i32, i32* %24, align 4, !dbg !19450
  %316 = sub nsw i32 %315, 8, !dbg !19450
  store i32 %316, i32* %24, align 4, !dbg !19450
  br label %303, !dbg !19436, !llvm.loop !19451

317:                                              ; preds = %303
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19453
  %319 = icmp ne %struct._IO_FILE* %318, null, !dbg !19455
  br i1 %319, label %320, label %367, !dbg !19456

320:                                              ; preds = %317
  %321 = load i32, i32* %23, align 4, !dbg !19457
  %322 = icmp eq i32 %321, 3, !dbg !19458
  br i1 %322, label %323, label %367, !dbg !19459

323:                                              ; preds = %320
  %324 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19460
  %325 = load i32, i32* %22, align 4, !dbg !19462
  %326 = load i32, i32* %32, align 4, !dbg !19463
  %327 = add i32 %326, 1, !dbg !19464
  %328 = load i32, i32* %33, align 4, !dbg !19465
  %329 = add i32 %328, 1, !dbg !19466
  %330 = load i32, i32* %30, align 4, !dbg !19467
  %331 = load i32, i32* %31, align 4, !dbg !19468
  %332 = load i8*, i8** %47, align 8, !dbg !19469
  %333 = load i8*, i8** %14, align 8, !dbg !19470
  %334 = ptrtoint i8* %332 to i64, !dbg !19471
  %335 = ptrtoint i8* %333 to i64, !dbg !19471
  %336 = sub i64 %334, %335, !dbg !19471
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %324, i32 %325, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %327, i32 %329, i32 %330, i32 %331, i64 %336), !dbg !19472
  %337 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19473
  %338 = load i32, i32* %22, align 4, !dbg !19474
  %339 = load i64, i64* %37, align 8, !dbg !19475
  %340 = trunc i64 %339 to i32, !dbg !19475
  %341 = call i32 @dump_long(%struct._IO_FILE* %337, i32 %338, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 %340), !dbg !19476
  %342 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19477
  %343 = load i32, i32* %22, align 4, !dbg !19478
  %344 = load i8*, i8** %46, align 8, !dbg !19479
  %345 = call i32 @dump_data(%struct._IO_FILE* %342, i32 %343, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %344, i32 4), !dbg !19480
  %346 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19481
  %347 = load i32, i32* %22, align 4, !dbg !19482
  %348 = load i64, i64* %38, align 8, !dbg !19483
  %349 = trunc i64 %348 to i32, !dbg !19483
  %350 = call i32 @dump_long(%struct._IO_FILE* %346, i32 %347, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i32 %349), !dbg !19484
  %351 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19485
  %352 = load i32, i32* %22, align 4, !dbg !19486
  %353 = load i64, i64* %39, align 8, !dbg !19487
  %354 = trunc i64 %353 to i32, !dbg !19487
  %355 = call i32 @dump_long(%struct._IO_FILE* %351, i32 %352, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i32 %354), !dbg !19488
  %356 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19489
  %357 = load i32, i32* %22, align 4, !dbg !19490
  %358 = load i8, i8* %41, align 1, !dbg !19491
  %359 = call i32 @dump_byte(%struct._IO_FILE* %356, i32 %357, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), i8 zeroext %358), !dbg !19492
  %360 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19493
  %361 = load i32, i32* %22, align 4, !dbg !19494
  %362 = load i8, i8* %42, align 1, !dbg !19495
  %363 = call i32 @dump_byte(%struct._IO_FILE* %360, i32 %361, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8 zeroext %362), !dbg !19496
  %364 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19497
  %365 = load i32, i32* %22, align 4, !dbg !19498
  %366 = load i32, i32* %24, align 4, !dbg !19499
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %364, i32 %365, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.302, i64 0, i64 0), i32 %366), !dbg !19500
  br label %367, !dbg !19501

367:                                              ; preds = %323, %320, %317
  %368 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19502
  %369 = icmp ne %struct._IO_FILE* %368, null, !dbg !19504
  br i1 %369, label %370, label %382, !dbg !19505

370:                                              ; preds = %367
  %371 = load i32, i32* %23, align 4, !dbg !19506
  %372 = icmp eq i32 %371, 2, !dbg !19507
  br i1 %372, label %373, label %382, !dbg !19508

373:                                              ; preds = %370
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19509
  %375 = load i32, i32* %22, align 4, !dbg !19511
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %374, i32 %375, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.323, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !19512
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !19513
  %377 = load i32, i32* %22, align 4, !dbg !19514
  %378 = load i32, i32* %27, align 4, !dbg !19515
  %379 = load i32, i32* %32, align 4, !dbg !19516
  %380 = load i8*, i8** %14, align 8, !dbg !19517
  %381 = call i32 @dump_buffer(%struct._IO_FILE* %376, i32 %377, i32 1, i32 %378, i32 %379, i8* %380), !dbg !19518
  br label %382, !dbg !19519

382:                                              ; preds = %373, %370, %367
  br label %383, !dbg !19520

383:                                              ; preds = %382
  %384 = load i32, i32* %32, align 4, !dbg !19521
  %385 = add i32 %384, 1, !dbg !19521
  store i32 %385, i32* %32, align 4, !dbg !19521
  br label %85, !dbg !19522, !llvm.loop !19523

386:                                              ; preds = %85
  store i32 0, i32* %12, align 4, !dbg !19525
  br label %387, !dbg !19525

387:                                              ; preds = %386, %58
  %388 = load i32, i32* %12, align 4, !dbg !19526
  ret i32 %388, !dbg !19526
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dump_wide(%struct._IO_FILE*, i32, i8*, i64) #0 !dbg !19527 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [80 x i8], align 16
  %13 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !19530, metadata !DIExpression()), !dbg !19531
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19532, metadata !DIExpression()), !dbg !19533
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !19534, metadata !DIExpression()), !dbg !19535
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !19536, metadata !DIExpression()), !dbg !19537
  call void @llvm.dbg.declare(metadata i32* %10, metadata !19538, metadata !DIExpression()), !dbg !19539
  call void @llvm.dbg.declare(metadata i32* %11, metadata !19540, metadata !DIExpression()), !dbg !19541
  call void @llvm.dbg.declare(metadata [80 x i8]* %12, metadata !19542, metadata !DIExpression()), !dbg !19546
  call void @llvm.dbg.declare(metadata i8* %13, metadata !19547, metadata !DIExpression()), !dbg !19548
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19549
  %15 = icmp eq %struct._IO_FILE* %14, null, !dbg !19551
  br i1 %15, label %16, label %17, !dbg !19552

16:                                               ; preds = %4
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)), !dbg !19553
  store i32 1, i32* %5, align 4, !dbg !19555
  br label %74, !dbg !19555

17:                                               ; preds = %4
  %18 = load i32, i32* %7, align 4, !dbg !19556
  %19 = icmp eq i32 %18, 1, !dbg !19558
  br i1 %19, label %20, label %66, !dbg !19559

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19560
  %22 = load i8*, i8** %8, align 8, !dbg !19562
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i64 0, i64 0), i8* %22), !dbg !19563
  store i32 0, i32* %10, align 4, !dbg !19564
  store i32 63, i32* %11, align 4, !dbg !19566
  br label %24, !dbg !19567

24:                                               ; preds = %56, %20
  %25 = load i32, i32* %11, align 4, !dbg !19568
  %26 = icmp sge i32 %25, 0, !dbg !19570
  br i1 %26, label %27, label %61, !dbg !19571

27:                                               ; preds = %24
  %28 = load i64, i64* %9, align 8, !dbg !19572
  %29 = load i32, i32* %11, align 4, !dbg !19574
  %30 = zext i32 %29 to i64, !dbg !19575
  %31 = shl i64 1, %30, !dbg !19575
  %32 = and i64 %28, %31, !dbg !19576
  %33 = icmp ne i64 %32, 0, !dbg !19572
  %34 = zext i1 %33 to i64, !dbg !19572
  %35 = select i1 %33, i32 1, i32 0, !dbg !19572
  %36 = trunc i32 %35 to i8, !dbg !19572
  store i8 %36, i8* %13, align 1, !dbg !19577
  %37 = load i32, i32* %10, align 4, !dbg !19578
  %38 = sext i32 %37 to i64, !dbg !19579
  %39 = getelementptr inbounds [80 x i8], [80 x i8]* %12, i64 0, i64 %38, !dbg !19579
  %40 = load i8, i8* %13, align 1, !dbg !19580
  %41 = zext i8 %40 to i32, !dbg !19581
  %42 = icmp ne i32 %41, 0, !dbg !19581
  %43 = zext i1 %42 to i64, !dbg !19581
  %44 = select i1 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0), !dbg !19581
  %45 = call i32 (i8*, i8*, ...) @sprintf(i8* %39, i8* %44) #8, !dbg !19582
  %46 = load i32, i32* %11, align 4, !dbg !19583
  %47 = srem i32 %46, 8, !dbg !19585
  %48 = icmp eq i32 %47, 0, !dbg !19586
  br i1 %48, label %49, label %55, !dbg !19587

49:                                               ; preds = %27
  %50 = load i32, i32* %10, align 4, !dbg !19588
  %51 = add nsw i32 %50, 1, !dbg !19588
  store i32 %51, i32* %10, align 4, !dbg !19588
  %52 = sext i32 %51 to i64, !dbg !19589
  %53 = getelementptr inbounds [80 x i8], [80 x i8]* %12, i64 0, i64 %52, !dbg !19589
  %54 = call i32 (i8*, i8*, ...) @sprintf(i8* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #8, !dbg !19590
  br label %55, !dbg !19590

55:                                               ; preds = %49, %27
  br label %56, !dbg !19591

56:                                               ; preds = %55
  %57 = load i32, i32* %10, align 4, !dbg !19592
  %58 = add nsw i32 %57, 1, !dbg !19592
  store i32 %58, i32* %10, align 4, !dbg !19592
  %59 = load i32, i32* %11, align 4, !dbg !19593
  %60 = add nsw i32 %59, -1, !dbg !19593
  store i32 %60, i32* %11, align 4, !dbg !19593
  br label %24, !dbg !19594, !llvm.loop !19595

61:                                               ; preds = %24
  %62 = getelementptr inbounds [80 x i8], [80 x i8]* %12, i64 0, i64 71, !dbg !19597
  store i8 0, i8* %62, align 1, !dbg !19598
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19599
  %64 = getelementptr inbounds [80 x i8], [80 x i8]* %12, i64 0, i64 0, !dbg !19600
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.288, i64 0, i64 0), i8* %64), !dbg !19601
  br label %73, !dbg !19602

66:                                               ; preds = %17
  %67 = bitcast i64* %9 to i8*, !dbg !19603
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19606
  %69 = call i64 @fwrite(i8* %67, i64 8, i64 1, %struct._IO_FILE* %68), !dbg !19607
  %70 = icmp ne i64 %69, 8, !dbg !19608
  br i1 %70, label %71, label %72, !dbg !19609

71:                                               ; preds = %66
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0)), !dbg !19610
  store i32 1, i32* %5, align 4, !dbg !19612
  br label %74, !dbg !19612

72:                                               ; preds = %66
  br label %73

73:                                               ; preds = %72, %61
  store i32 0, i32* %5, align 4, !dbg !19613
  br label %74, !dbg !19613

74:                                               ; preds = %73, %71, %16
  %75 = load i32, i32* %5, align 4, !dbg !19614
  ret i32 %75, !dbg !19614
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dump_long(%struct._IO_FILE*, i32, i8*, i32) #0 !dbg !19615 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [40 x i8], align 16
  %13 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !19618, metadata !DIExpression()), !dbg !19619
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19620, metadata !DIExpression()), !dbg !19621
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !19622, metadata !DIExpression()), !dbg !19623
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !19624, metadata !DIExpression()), !dbg !19625
  call void @llvm.dbg.declare(metadata i32* %10, metadata !19626, metadata !DIExpression()), !dbg !19627
  call void @llvm.dbg.declare(metadata i32* %11, metadata !19628, metadata !DIExpression()), !dbg !19629
  call void @llvm.dbg.declare(metadata [40 x i8]* %12, metadata !19630, metadata !DIExpression()), !dbg !19634
  call void @llvm.dbg.declare(metadata i8* %13, metadata !19635, metadata !DIExpression()), !dbg !19636
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19637
  %15 = icmp eq %struct._IO_FILE* %14, null, !dbg !19639
  br i1 %15, label %16, label %17, !dbg !19640

16:                                               ; preds = %4
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)), !dbg !19641
  store i32 1, i32* %5, align 4, !dbg !19643
  br label %73, !dbg !19643

17:                                               ; preds = %4
  %18 = load i32, i32* %7, align 4, !dbg !19644
  %19 = icmp eq i32 %18, 1, !dbg !19646
  br i1 %19, label %20, label %65, !dbg !19647

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19648
  %22 = load i8*, i8** %8, align 8, !dbg !19650
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i64 0, i64 0), i8* %22), !dbg !19651
  store i32 0, i32* %10, align 4, !dbg !19652
  store i32 31, i32* %11, align 4, !dbg !19654
  br label %24, !dbg !19655

24:                                               ; preds = %55, %20
  %25 = load i32, i32* %11, align 4, !dbg !19656
  %26 = icmp sge i32 %25, 0, !dbg !19658
  br i1 %26, label %27, label %60, !dbg !19659

27:                                               ; preds = %24
  %28 = load i32, i32* %9, align 4, !dbg !19660
  %29 = load i32, i32* %11, align 4, !dbg !19662
  %30 = shl i32 1, %29, !dbg !19663
  %31 = and i32 %28, %30, !dbg !19664
  %32 = icmp ne i32 %31, 0, !dbg !19660
  %33 = zext i1 %32 to i64, !dbg !19660
  %34 = select i1 %32, i32 1, i32 0, !dbg !19660
  %35 = trunc i32 %34 to i8, !dbg !19660
  store i8 %35, i8* %13, align 1, !dbg !19665
  %36 = load i32, i32* %10, align 4, !dbg !19666
  %37 = sext i32 %36 to i64, !dbg !19667
  %38 = getelementptr inbounds [40 x i8], [40 x i8]* %12, i64 0, i64 %37, !dbg !19667
  %39 = load i8, i8* %13, align 1, !dbg !19668
  %40 = zext i8 %39 to i32, !dbg !19669
  %41 = icmp ne i32 %40, 0, !dbg !19669
  %42 = zext i1 %41 to i64, !dbg !19669
  %43 = select i1 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0), !dbg !19669
  %44 = call i32 (i8*, i8*, ...) @sprintf(i8* %38, i8* %43) #8, !dbg !19670
  %45 = load i32, i32* %11, align 4, !dbg !19671
  %46 = srem i32 %45, 8, !dbg !19673
  %47 = icmp eq i32 %46, 0, !dbg !19674
  br i1 %47, label %48, label %54, !dbg !19675

48:                                               ; preds = %27
  %49 = load i32, i32* %10, align 4, !dbg !19676
  %50 = add nsw i32 %49, 1, !dbg !19676
  store i32 %50, i32* %10, align 4, !dbg !19676
  %51 = sext i32 %50 to i64, !dbg !19677
  %52 = getelementptr inbounds [40 x i8], [40 x i8]* %12, i64 0, i64 %51, !dbg !19677
  %53 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #8, !dbg !19678
  br label %54, !dbg !19678

54:                                               ; preds = %48, %27
  br label %55, !dbg !19679

55:                                               ; preds = %54
  %56 = load i32, i32* %10, align 4, !dbg !19680
  %57 = add nsw i32 %56, 1, !dbg !19680
  store i32 %57, i32* %10, align 4, !dbg !19680
  %58 = load i32, i32* %11, align 4, !dbg !19681
  %59 = add nsw i32 %58, -1, !dbg !19681
  store i32 %59, i32* %11, align 4, !dbg !19681
  br label %24, !dbg !19682, !llvm.loop !19683

60:                                               ; preds = %24
  %61 = getelementptr inbounds [40 x i8], [40 x i8]* %12, i64 0, i64 35, !dbg !19685
  store i8 0, i8* %61, align 1, !dbg !19686
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19687
  %63 = getelementptr inbounds [40 x i8], [40 x i8]* %12, i64 0, i64 0, !dbg !19688
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.288, i64 0, i64 0), i8* %63), !dbg !19689
  br label %72, !dbg !19690

65:                                               ; preds = %17
  %66 = bitcast i32* %9 to i8*, !dbg !19691
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19694
  %68 = call i64 @fwrite(i8* %66, i64 4, i64 1, %struct._IO_FILE* %67), !dbg !19695
  %69 = icmp ne i64 %68, 4, !dbg !19696
  br i1 %69, label %70, label %71, !dbg !19697

70:                                               ; preds = %65
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0)), !dbg !19698
  store i32 1, i32* %5, align 4, !dbg !19700
  br label %73, !dbg !19700

71:                                               ; preds = %65
  br label %72

72:                                               ; preds = %71, %60
  store i32 0, i32* %5, align 4, !dbg !19701
  br label %73, !dbg !19701

73:                                               ; preds = %72, %70, %16
  %74 = load i32, i32* %5, align 4, !dbg !19702
  ret i32 %74, !dbg !19702
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dump_byte(%struct._IO_FILE*, i32, i8*, i8 zeroext) #0 !dbg !19703 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [10 x i8], align 1
  %13 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !19706, metadata !DIExpression()), !dbg !19707
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19708, metadata !DIExpression()), !dbg !19709
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !19710, metadata !DIExpression()), !dbg !19711
  store i8 %3, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !19712, metadata !DIExpression()), !dbg !19713
  call void @llvm.dbg.declare(metadata i32* %10, metadata !19714, metadata !DIExpression()), !dbg !19715
  call void @llvm.dbg.declare(metadata i32* %11, metadata !19716, metadata !DIExpression()), !dbg !19717
  call void @llvm.dbg.declare(metadata [10 x i8]* %12, metadata !19718, metadata !DIExpression()), !dbg !19719
  call void @llvm.dbg.declare(metadata i8* %13, metadata !19720, metadata !DIExpression()), !dbg !19721
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19722
  %15 = icmp eq %struct._IO_FILE* %14, null, !dbg !19724
  br i1 %15, label %16, label %17, !dbg !19725

16:                                               ; preds = %4
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)), !dbg !19726
  store i32 1, i32* %5, align 4, !dbg !19728
  br label %63, !dbg !19728

17:                                               ; preds = %4
  %18 = load i32, i32* %7, align 4, !dbg !19729
  %19 = icmp eq i32 %18, 1, !dbg !19731
  br i1 %19, label %20, label %56, !dbg !19732

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19733
  %22 = load i8*, i8** %8, align 8, !dbg !19735
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i64 0, i64 0), i8* %22), !dbg !19736
  store i32 0, i32* %10, align 4, !dbg !19737
  store i32 7, i32* %11, align 4, !dbg !19739
  br label %24, !dbg !19740

24:                                               ; preds = %46, %20
  %25 = load i32, i32* %10, align 4, !dbg !19741
  %26 = icmp slt i32 %25, 8, !dbg !19743
  br i1 %26, label %27, label %51, !dbg !19744

27:                                               ; preds = %24
  %28 = load i8, i8* %9, align 1, !dbg !19745
  %29 = zext i8 %28 to i32, !dbg !19745
  %30 = load i32, i32* %11, align 4, !dbg !19747
  %31 = shl i32 1, %30, !dbg !19748
  %32 = and i32 %29, %31, !dbg !19749
  %33 = icmp ne i32 %32, 0, !dbg !19745
  %34 = zext i1 %33 to i64, !dbg !19745
  %35 = select i1 %33, i32 1, i32 0, !dbg !19745
  %36 = trunc i32 %35 to i8, !dbg !19745
  store i8 %36, i8* %13, align 1, !dbg !19750
  %37 = load i32, i32* %10, align 4, !dbg !19751
  %38 = sext i32 %37 to i64, !dbg !19752
  %39 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 %38, !dbg !19752
  %40 = load i8, i8* %13, align 1, !dbg !19753
  %41 = zext i8 %40 to i32, !dbg !19754
  %42 = icmp ne i32 %41, 0, !dbg !19754
  %43 = zext i1 %42 to i64, !dbg !19754
  %44 = select i1 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0), !dbg !19754
  %45 = call i32 (i8*, i8*, ...) @sprintf(i8* %39, i8* %44) #8, !dbg !19755
  br label %46, !dbg !19756

46:                                               ; preds = %27
  %47 = load i32, i32* %10, align 4, !dbg !19757
  %48 = add nsw i32 %47, 1, !dbg !19757
  store i32 %48, i32* %10, align 4, !dbg !19757
  %49 = load i32, i32* %11, align 4, !dbg !19758
  %50 = add nsw i32 %49, -1, !dbg !19758
  store i32 %50, i32* %11, align 4, !dbg !19758
  br label %24, !dbg !19759, !llvm.loop !19760

51:                                               ; preds = %24
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 8, !dbg !19762
  store i8 0, i8* %52, align 1, !dbg !19763
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19764
  %54 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 0, !dbg !19765
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.288, i64 0, i64 0), i8* %54), !dbg !19766
  br label %62, !dbg !19767

56:                                               ; preds = %17
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19768
  %58 = call i64 @fwrite(i8* %9, i64 1, i64 1, %struct._IO_FILE* %57), !dbg !19771
  %59 = icmp ne i64 %58, 1, !dbg !19772
  br i1 %59, label %60, label %61, !dbg !19773

60:                                               ; preds = %56
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0)), !dbg !19774
  store i32 1, i32* %5, align 4, !dbg !19776
  br label %63, !dbg !19776

61:                                               ; preds = %56
  br label %62

62:                                               ; preds = %61, %51
  store i32 0, i32* %5, align 4, !dbg !19777
  br label %63, !dbg !19777

63:                                               ; preds = %62, %60, %16
  %64 = load i32, i32* %5, align 4, !dbg !19778
  ret i32 %64, !dbg !19778
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dump_short(%struct._IO_FILE*, i32, i8*, i16 zeroext) #0 !dbg !19779 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [20 x i8], align 16
  %13 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !19782, metadata !DIExpression()), !dbg !19783
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !19784, metadata !DIExpression()), !dbg !19785
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !19786, metadata !DIExpression()), !dbg !19787
  store i16 %3, i16* %9, align 2
  call void @llvm.dbg.declare(metadata i16* %9, metadata !19788, metadata !DIExpression()), !dbg !19789
  call void @llvm.dbg.declare(metadata i32* %10, metadata !19790, metadata !DIExpression()), !dbg !19791
  call void @llvm.dbg.declare(metadata i32* %11, metadata !19792, metadata !DIExpression()), !dbg !19793
  call void @llvm.dbg.declare(metadata [20 x i8]* %12, metadata !19794, metadata !DIExpression()), !dbg !19795
  call void @llvm.dbg.declare(metadata i8* %13, metadata !19796, metadata !DIExpression()), !dbg !19797
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19798
  %15 = icmp eq %struct._IO_FILE* %14, null, !dbg !19800
  br i1 %15, label %16, label %17, !dbg !19801

16:                                               ; preds = %4
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i64 0, i64 0)), !dbg !19802
  store i32 1, i32* %5, align 4, !dbg !19804
  br label %74, !dbg !19804

17:                                               ; preds = %4
  %18 = load i32, i32* %7, align 4, !dbg !19805
  %19 = icmp eq i32 %18, 1, !dbg !19807
  br i1 %19, label %20, label %66, !dbg !19808

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19809
  %22 = load i8*, i8** %8, align 8, !dbg !19811
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i64 0, i64 0), i8* %22), !dbg !19812
  store i32 0, i32* %10, align 4, !dbg !19813
  store i32 15, i32* %11, align 4, !dbg !19815
  br label %24, !dbg !19816

24:                                               ; preds = %56, %20
  %25 = load i32, i32* %11, align 4, !dbg !19817
  %26 = icmp sge i32 %25, 0, !dbg !19819
  br i1 %26, label %27, label %61, !dbg !19820

27:                                               ; preds = %24
  %28 = load i16, i16* %9, align 2, !dbg !19821
  %29 = zext i16 %28 to i32, !dbg !19821
  %30 = load i32, i32* %11, align 4, !dbg !19823
  %31 = shl i32 1, %30, !dbg !19824
  %32 = and i32 %29, %31, !dbg !19825
  %33 = icmp ne i32 %32, 0, !dbg !19821
  %34 = zext i1 %33 to i64, !dbg !19821
  %35 = select i1 %33, i32 1, i32 0, !dbg !19821
  %36 = trunc i32 %35 to i8, !dbg !19821
  store i8 %36, i8* %13, align 1, !dbg !19826
  %37 = load i32, i32* %10, align 4, !dbg !19827
  %38 = sext i32 %37 to i64, !dbg !19828
  %39 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 %38, !dbg !19828
  %40 = load i8, i8* %13, align 1, !dbg !19829
  %41 = zext i8 %40 to i32, !dbg !19830
  %42 = icmp ne i32 %41, 0, !dbg !19830
  %43 = zext i1 %42 to i64, !dbg !19830
  %44 = select i1 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0), !dbg !19830
  %45 = call i32 (i8*, i8*, ...) @sprintf(i8* %39, i8* %44) #8, !dbg !19831
  %46 = load i32, i32* %11, align 4, !dbg !19832
  %47 = srem i32 %46, 8, !dbg !19834
  %48 = icmp eq i32 %47, 0, !dbg !19835
  br i1 %48, label %49, label %55, !dbg !19836

49:                                               ; preds = %27
  %50 = load i32, i32* %10, align 4, !dbg !19837
  %51 = add nsw i32 %50, 1, !dbg !19837
  store i32 %51, i32* %10, align 4, !dbg !19837
  %52 = sext i32 %51 to i64, !dbg !19838
  %53 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 %52, !dbg !19838
  %54 = call i32 (i8*, i8*, ...) @sprintf(i8* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i64 0, i64 0)) #8, !dbg !19839
  br label %55, !dbg !19839

55:                                               ; preds = %49, %27
  br label %56, !dbg !19840

56:                                               ; preds = %55
  %57 = load i32, i32* %10, align 4, !dbg !19841
  %58 = add nsw i32 %57, 1, !dbg !19841
  store i32 %58, i32* %10, align 4, !dbg !19841
  %59 = load i32, i32* %11, align 4, !dbg !19842
  %60 = add nsw i32 %59, -1, !dbg !19842
  store i32 %60, i32* %11, align 4, !dbg !19842
  br label %24, !dbg !19843, !llvm.loop !19844

61:                                               ; preds = %24
  %62 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 17, !dbg !19846
  store i8 0, i8* %62, align 1, !dbg !19847
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19848
  %64 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 0, !dbg !19849
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.288, i64 0, i64 0), i8* %64), !dbg !19850
  br label %73, !dbg !19851

66:                                               ; preds = %17
  %67 = bitcast i16* %9 to i8*, !dbg !19852
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !19855
  %69 = call i64 @fwrite(i8* %67, i64 2, i64 1, %struct._IO_FILE* %68), !dbg !19856
  %70 = icmp ne i64 %69, 2, !dbg !19857
  br i1 %70, label %71, label %72, !dbg !19858

71:                                               ; preds = %66
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0)), !dbg !19859
  store i32 1, i32* %5, align 4, !dbg !19861
  br label %74, !dbg !19861

72:                                               ; preds = %66
  br label %73

73:                                               ; preds = %72, %61
  store i32 0, i32* %5, align 4, !dbg !19862
  br label %74, !dbg !19862

74:                                               ; preds = %73, %71, %16
  %75 = load i32, i32* %5, align 4, !dbg !19863
  ret i32 %75, !dbg !19863
}

declare i32 @TIFFCurrentTile(%struct.tiff*) #3

declare i64 @TIFFReadEncodedStrip(%struct.tiff*, i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateSamplesBytes(i8**, i8*, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !19864 {
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca %struct._IO_FILE*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i16, align 2
  store i8** %0, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !19867, metadata !DIExpression()), !dbg !19868
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !19869, metadata !DIExpression()), !dbg !19870
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !19871, metadata !DIExpression()), !dbg !19872
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !19873, metadata !DIExpression()), !dbg !19874
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !19875, metadata !DIExpression()), !dbg !19876
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !19877, metadata !DIExpression()), !dbg !19878
  store %struct._IO_FILE* %6, %struct._IO_FILE** %17, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %17, metadata !19879, metadata !DIExpression()), !dbg !19880
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !19881, metadata !DIExpression()), !dbg !19882
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !19883, metadata !DIExpression()), !dbg !19884
  call void @llvm.dbg.declare(metadata i32* %20, metadata !19885, metadata !DIExpression()), !dbg !19886
  call void @llvm.dbg.declare(metadata i32* %21, metadata !19887, metadata !DIExpression()), !dbg !19888
  call void @llvm.dbg.declare(metadata i32* %22, metadata !19889, metadata !DIExpression()), !dbg !19890
  call void @llvm.dbg.declare(metadata i32* %23, metadata !19891, metadata !DIExpression()), !dbg !19892
  call void @llvm.dbg.declare(metadata i32* %24, metadata !19893, metadata !DIExpression()), !dbg !19894
  call void @llvm.dbg.declare(metadata i32* %25, metadata !19895, metadata !DIExpression()), !dbg !19896
  call void @llvm.dbg.declare(metadata i32* %26, metadata !19897, metadata !DIExpression()), !dbg !19898
  call void @llvm.dbg.declare(metadata i32* %27, metadata !19899, metadata !DIExpression()), !dbg !19900
  call void @llvm.dbg.declare(metadata i8** %28, metadata !19901, metadata !DIExpression()), !dbg !19902
  call void @llvm.dbg.declare(metadata i8** %29, metadata !19903, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.declare(metadata i16* %30, metadata !19905, metadata !DIExpression()), !dbg !19906
  %31 = load i8**, i8*** %11, align 8, !dbg !19907
  %32 = getelementptr inbounds i8*, i8** %31, i64 0, !dbg !19907
  %33 = load i8*, i8** %32, align 8, !dbg !19907
  store i8* %33, i8** %28, align 8, !dbg !19908
  %34 = load i8*, i8** %12, align 8, !dbg !19909
  store i8* %34, i8** %29, align 8, !dbg !19910
  %35 = load i8*, i8** %28, align 8, !dbg !19911
  %36 = icmp eq i8* %35, null, !dbg !19913
  br i1 %36, label %40, label %37, !dbg !19914

37:                                               ; preds = %9
  %38 = load i8*, i8** %29, align 8, !dbg !19915
  %39 = icmp eq i8* %38, null, !dbg !19916
  br i1 %39, label %40, label %41, !dbg !19917

40:                                               ; preds = %37, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.268, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.269, i64 0, i64 0)), !dbg !19918
  store i32 1, i32* %10, align 4, !dbg !19920
  br label %203, !dbg !19920

41:                                               ; preds = %37
  %42 = load i16, i16* %16, align 2, !dbg !19921
  %43 = zext i16 %42 to i32, !dbg !19921
  %44 = add nsw i32 %43, 7, !dbg !19922
  %45 = sdiv i32 %44, 8, !dbg !19923
  store i32 %45, i32* %21, align 4, !dbg !19924
  %46 = load i16, i16* %16, align 2, !dbg !19925
  %47 = zext i16 %46 to i32, !dbg !19925
  %48 = load i32, i32* %13, align 4, !dbg !19926
  %49 = mul i32 %47, %48, !dbg !19927
  %50 = add i32 %49, 7, !dbg !19928
  %51 = udiv i32 %50, 8, !dbg !19929
  store i32 %51, i32* %25, align 4, !dbg !19930
  %52 = load i16, i16* %16, align 2, !dbg !19931
  %53 = zext i16 %52 to i32, !dbg !19931
  %54 = load i16, i16* %15, align 2, !dbg !19932
  %55 = zext i16 %54 to i32, !dbg !19932
  %56 = mul nsw i32 %53, %55, !dbg !19933
  %57 = load i32, i32* %13, align 4, !dbg !19934
  %58 = mul i32 %56, %57, !dbg !19935
  %59 = add i32 %58, 7, !dbg !19936
  %60 = udiv i32 %59, 8, !dbg !19937
  store i32 %60, i32* %26, align 4, !dbg !19938
  store i32 0, i32* %22, align 4, !dbg !19939
  br label %61, !dbg !19941

61:                                               ; preds = %199, %41
  %62 = load i32, i32* %22, align 4, !dbg !19942
  %63 = load i32, i32* %14, align 4, !dbg !19944
  %64 = icmp ult i32 %62, %63, !dbg !19945
  br i1 %64, label %65, label %202, !dbg !19946

65:                                               ; preds = %61
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !19947
  %67 = icmp ne %struct._IO_FILE* %66, null, !dbg !19950
  br i1 %67, label %68, label %102, !dbg !19951

68:                                               ; preds = %65
  %69 = load i32, i32* %19, align 4, !dbg !19952
  %70 = icmp eq i32 %69, 2, !dbg !19953
  br i1 %70, label %71, label %102, !dbg !19954

71:                                               ; preds = %68
  store i16 0, i16* %30, align 2, !dbg !19955
  br label %72, !dbg !19958

72:                                               ; preds = %98, %71
  %73 = load i16, i16* %30, align 2, !dbg !19959
  %74 = zext i16 %73 to i32, !dbg !19959
  %75 = load i16, i16* %15, align 2, !dbg !19961
  %76 = zext i16 %75 to i32, !dbg !19961
  %77 = icmp slt i32 %74, %76, !dbg !19962
  br i1 %77, label %78, label %101, !dbg !19963

78:                                               ; preds = %72
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !19964
  %80 = load i32, i32* %18, align 4, !dbg !19966
  %81 = load i16, i16* %30, align 2, !dbg !19967
  %82 = zext i16 %81 to i32, !dbg !19967
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %79, i32 %80, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.268, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.270, i64 0, i64 0), i32 %82), !dbg !19968
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !19969
  %84 = load i32, i32* %18, align 4, !dbg !19970
  %85 = load i32, i32* %13, align 4, !dbg !19971
  %86 = load i32, i32* %22, align 4, !dbg !19972
  %87 = load i8**, i8*** %11, align 8, !dbg !19973
  %88 = load i16, i16* %30, align 2, !dbg !19974
  %89 = zext i16 %88 to i64, !dbg !19973
  %90 = getelementptr inbounds i8*, i8** %87, i64 %89, !dbg !19973
  %91 = load i8*, i8** %90, align 8, !dbg !19973
  %92 = load i32, i32* %22, align 4, !dbg !19975
  %93 = load i32, i32* %25, align 4, !dbg !19976
  %94 = mul i32 %92, %93, !dbg !19977
  %95 = zext i32 %94 to i64, !dbg !19978
  %96 = getelementptr inbounds i8, i8* %91, i64 %95, !dbg !19978
  %97 = call i32 @dump_buffer(%struct._IO_FILE* %83, i32 %84, i32 1, i32 %85, i32 %86, i8* %96), !dbg !19979
  br label %98, !dbg !19980

98:                                               ; preds = %78
  %99 = load i16, i16* %30, align 2, !dbg !19981
  %100 = add i16 %99, 1, !dbg !19981
  store i16 %100, i16* %30, align 2, !dbg !19981
  br label %72, !dbg !19982, !llvm.loop !19983

101:                                              ; preds = %72
  br label %102, !dbg !19985

102:                                              ; preds = %101, %68, %65
  %103 = load i8*, i8** %12, align 8, !dbg !19986
  %104 = load i32, i32* %22, align 4, !dbg !19987
  %105 = load i32, i32* %26, align 4, !dbg !19988
  %106 = mul i32 %104, %105, !dbg !19989
  %107 = zext i32 %106 to i64, !dbg !19990
  %108 = getelementptr inbounds i8, i8* %103, i64 %107, !dbg !19990
  store i8* %108, i8** %29, align 8, !dbg !19991
  %109 = load i32, i32* %22, align 4, !dbg !19992
  %110 = load i32, i32* %25, align 4, !dbg !19993
  %111 = mul i32 %109, %110, !dbg !19994
  store i32 %111, i32* %27, align 4, !dbg !19995
  store i32 0, i32* %23, align 4, !dbg !19996
  br label %112, !dbg !19998

112:                                              ; preds = %175, %102
  %113 = load i32, i32* %23, align 4, !dbg !19999
  %114 = load i32, i32* %13, align 4, !dbg !20001
  %115 = icmp ult i32 %113, %114, !dbg !20002
  br i1 %115, label %116, label %178, !dbg !20003

116:                                              ; preds = %112
  %117 = load i32, i32* %27, align 4, !dbg !20004
  %118 = load i32, i32* %23, align 4, !dbg !20006
  %119 = load i16, i16* %16, align 2, !dbg !20007
  %120 = zext i16 %119 to i32, !dbg !20007
  %121 = sdiv i32 %120, 8, !dbg !20008
  %122 = mul i32 %118, %121, !dbg !20009
  %123 = add i32 %117, %122, !dbg !20010
  store i32 %123, i32* %24, align 4, !dbg !20011
  store i16 0, i16* %30, align 2, !dbg !20012
  br label %124, !dbg !20014

124:                                              ; preds = %171, %116
  %125 = load i16, i16* %30, align 2, !dbg !20015
  %126 = zext i16 %125 to i32, !dbg !20015
  %127 = load i16, i16* %15, align 2, !dbg !20017
  %128 = zext i16 %127 to i32, !dbg !20017
  %129 = icmp slt i32 %126, %128, !dbg !20018
  br i1 %129, label %130, label %134, !dbg !20019

130:                                              ; preds = %124
  %131 = load i16, i16* %30, align 2, !dbg !20020
  %132 = zext i16 %131 to i32, !dbg !20020
  %133 = icmp slt i32 %132, 8, !dbg !20021
  br label %134

134:                                              ; preds = %130, %124
  %135 = phi i1 [ false, %124 ], [ %133, %130 ], !dbg !20022
  br i1 %135, label %136, label %174, !dbg !20023

136:                                              ; preds = %134
  %137 = load i8**, i8*** %11, align 8, !dbg !20024
  %138 = load i16, i16* %30, align 2, !dbg !20026
  %139 = zext i16 %138 to i64, !dbg !20024
  %140 = getelementptr inbounds i8*, i8** %137, i64 %139, !dbg !20024
  %141 = load i8*, i8** %140, align 8, !dbg !20024
  %142 = load i32, i32* %24, align 4, !dbg !20027
  %143 = zext i32 %142 to i64, !dbg !20028
  %144 = getelementptr inbounds i8, i8* %141, i64 %143, !dbg !20028
  store i8* %144, i8** %28, align 8, !dbg !20029
  store i32 0, i32* %20, align 4, !dbg !20030
  br label %145, !dbg !20032

145:                                              ; preds = %159, %136
  %146 = load i32, i32* %20, align 4, !dbg !20033
  %147 = load i32, i32* %21, align 4, !dbg !20035
  %148 = icmp slt i32 %146, %147, !dbg !20036
  br i1 %148, label %149, label %162, !dbg !20037

149:                                              ; preds = %145
  %150 = load i8*, i8** %28, align 8, !dbg !20038
  %151 = load i32, i32* %20, align 4, !dbg !20039
  %152 = sext i32 %151 to i64, !dbg !20040
  %153 = getelementptr inbounds i8, i8* %150, i64 %152, !dbg !20040
  %154 = load i8, i8* %153, align 1, !dbg !20041
  %155 = load i8*, i8** %29, align 8, !dbg !20042
  %156 = load i32, i32* %20, align 4, !dbg !20043
  %157 = sext i32 %156 to i64, !dbg !20044
  %158 = getelementptr inbounds i8, i8* %155, i64 %157, !dbg !20044
  store i8 %154, i8* %158, align 1, !dbg !20045
  br label %159, !dbg !20046

159:                                              ; preds = %149
  %160 = load i32, i32* %20, align 4, !dbg !20047
  %161 = add nsw i32 %160, 1, !dbg !20047
  store i32 %161, i32* %20, align 4, !dbg !20047
  br label %145, !dbg !20048, !llvm.loop !20049

162:                                              ; preds = %145
  %163 = load i32, i32* %21, align 4, !dbg !20051
  %164 = load i8*, i8** %28, align 8, !dbg !20052
  %165 = sext i32 %163 to i64, !dbg !20052
  %166 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !20052
  store i8* %166, i8** %28, align 8, !dbg !20052
  %167 = load i32, i32* %21, align 4, !dbg !20053
  %168 = load i8*, i8** %29, align 8, !dbg !20054
  %169 = sext i32 %167 to i64, !dbg !20054
  %170 = getelementptr inbounds i8, i8* %168, i64 %169, !dbg !20054
  store i8* %170, i8** %29, align 8, !dbg !20054
  br label %171, !dbg !20055

171:                                              ; preds = %162
  %172 = load i16, i16* %30, align 2, !dbg !20056
  %173 = add i16 %172, 1, !dbg !20056
  store i16 %173, i16* %30, align 2, !dbg !20056
  br label %124, !dbg !20057, !llvm.loop !20058

174:                                              ; preds = %134
  br label %175, !dbg !20060

175:                                              ; preds = %174
  %176 = load i32, i32* %23, align 4, !dbg !20061
  %177 = add i32 %176, 1, !dbg !20061
  store i32 %177, i32* %23, align 4, !dbg !20061
  br label %112, !dbg !20062, !llvm.loop !20063

178:                                              ; preds = %112
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20065
  %180 = icmp ne %struct._IO_FILE* %179, null, !dbg !20067
  br i1 %180, label %181, label %198, !dbg !20068

181:                                              ; preds = %178
  %182 = load i32, i32* %19, align 4, !dbg !20069
  %183 = icmp eq i32 %182, 2, !dbg !20070
  br i1 %183, label %184, label %198, !dbg !20071

184:                                              ; preds = %181
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20072
  %186 = load i32, i32* %18, align 4, !dbg !20074
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %185, i32 %186, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.268, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.271, i64 0, i64 0)), !dbg !20075
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20076
  %188 = load i32, i32* %18, align 4, !dbg !20077
  %189 = load i32, i32* %26, align 4, !dbg !20078
  %190 = load i32, i32* %22, align 4, !dbg !20079
  %191 = load i8*, i8** %12, align 8, !dbg !20080
  %192 = load i32, i32* %22, align 4, !dbg !20081
  %193 = load i32, i32* %26, align 4, !dbg !20082
  %194 = mul i32 %192, %193, !dbg !20083
  %195 = zext i32 %194 to i64, !dbg !20084
  %196 = getelementptr inbounds i8, i8* %191, i64 %195, !dbg !20084
  %197 = call i32 @dump_buffer(%struct._IO_FILE* %187, i32 %188, i32 1, i32 %189, i32 %190, i8* %196), !dbg !20085
  br label %198, !dbg !20086

198:                                              ; preds = %184, %181, %178
  br label %199, !dbg !20087

199:                                              ; preds = %198
  %200 = load i32, i32* %22, align 4, !dbg !20088
  %201 = add i32 %200, 1, !dbg !20088
  store i32 %201, i32* %22, align 4, !dbg !20088
  br label %61, !dbg !20089, !llvm.loop !20090

202:                                              ; preds = %61
  store i32 0, i32* %10, align 4, !dbg !20092
  br label %203, !dbg !20092

203:                                              ; preds = %202, %40
  %204 = load i32, i32* %10, align 4, !dbg !20093
  ret i32 %204, !dbg !20093
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateSamples8bits(i8**, i8*, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !20094 {
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca %struct._IO_FILE*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i16, align 2
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca [32 x i8], align 16
  store i8** %0, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !20097, metadata !DIExpression()), !dbg !20098
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !20099, metadata !DIExpression()), !dbg !20100
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20101, metadata !DIExpression()), !dbg !20102
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20103, metadata !DIExpression()), !dbg !20104
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !20105, metadata !DIExpression()), !dbg !20106
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !20107, metadata !DIExpression()), !dbg !20108
  store %struct._IO_FILE* %6, %struct._IO_FILE** %17, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %17, metadata !20109, metadata !DIExpression()), !dbg !20110
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !20111, metadata !DIExpression()), !dbg !20112
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !20113, metadata !DIExpression()), !dbg !20114
  call void @llvm.dbg.declare(metadata i32* %20, metadata !20115, metadata !DIExpression()), !dbg !20116
  store i32 0, i32* %20, align 4, !dbg !20116
  call void @llvm.dbg.declare(metadata i32* %21, metadata !20117, metadata !DIExpression()), !dbg !20118
  store i32 0, i32* %21, align 4, !dbg !20118
  call void @llvm.dbg.declare(metadata i32* %22, metadata !20119, metadata !DIExpression()), !dbg !20120
  call void @llvm.dbg.declare(metadata i32* %23, metadata !20121, metadata !DIExpression()), !dbg !20122
  call void @llvm.dbg.declare(metadata i32* %24, metadata !20123, metadata !DIExpression()), !dbg !20124
  call void @llvm.dbg.declare(metadata i32* %25, metadata !20125, metadata !DIExpression()), !dbg !20126
  call void @llvm.dbg.declare(metadata i32* %26, metadata !20127, metadata !DIExpression()), !dbg !20128
  call void @llvm.dbg.declare(metadata i32* %27, metadata !20129, metadata !DIExpression()), !dbg !20130
  call void @llvm.dbg.declare(metadata i32* %28, metadata !20131, metadata !DIExpression()), !dbg !20132
  store i32 0, i32* %28, align 4, !dbg !20132
  call void @llvm.dbg.declare(metadata i32* %29, metadata !20133, metadata !DIExpression()), !dbg !20134
  store i32 0, i32* %29, align 4, !dbg !20134
  call void @llvm.dbg.declare(metadata i8* %30, metadata !20135, metadata !DIExpression()), !dbg !20136
  store i8 0, i8* %30, align 1, !dbg !20136
  call void @llvm.dbg.declare(metadata i8* %31, metadata !20137, metadata !DIExpression()), !dbg !20138
  store i8 0, i8* %31, align 1, !dbg !20138
  call void @llvm.dbg.declare(metadata i8* %32, metadata !20139, metadata !DIExpression()), !dbg !20140
  store i8 0, i8* %32, align 1, !dbg !20140
  call void @llvm.dbg.declare(metadata i8* %33, metadata !20141, metadata !DIExpression()), !dbg !20142
  store i8 0, i8* %33, align 1, !dbg !20142
  call void @llvm.dbg.declare(metadata i16* %34, metadata !20143, metadata !DIExpression()), !dbg !20144
  call void @llvm.dbg.declare(metadata i8** %35, metadata !20145, metadata !DIExpression()), !dbg !20146
  %38 = load i8**, i8*** %11, align 8, !dbg !20147
  %39 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !20147
  %40 = load i8*, i8** %39, align 8, !dbg !20147
  store i8* %40, i8** %35, align 8, !dbg !20146
  call void @llvm.dbg.declare(metadata i8** %36, metadata !20148, metadata !DIExpression()), !dbg !20149
  %41 = load i8*, i8** %12, align 8, !dbg !20150
  store i8* %41, i8** %36, align 8, !dbg !20149
  call void @llvm.dbg.declare(metadata [32 x i8]* %37, metadata !20151, metadata !DIExpression()), !dbg !20152
  %42 = load i8*, i8** %35, align 8, !dbg !20153
  %43 = icmp eq i8* %42, null, !dbg !20155
  br i1 %43, label %47, label %44, !dbg !20156

44:                                               ; preds = %9
  %45 = load i8*, i8** %36, align 8, !dbg !20157
  %46 = icmp eq i8* %45, null, !dbg !20158
  br i1 %46, label %47, label %48, !dbg !20159

47:                                               ; preds = %44, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.272, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !20160
  store i32 1, i32* %10, align 4, !dbg !20162
  br label %275, !dbg !20162

48:                                               ; preds = %44
  %49 = load i16, i16* %16, align 2, !dbg !20163
  %50 = zext i16 %49 to i32, !dbg !20163
  %51 = add nsw i32 %50, 7, !dbg !20164
  %52 = sdiv i32 %51, 8, !dbg !20165
  store i32 %52, i32* %21, align 4, !dbg !20166
  %53 = load i16, i16* %16, align 2, !dbg !20167
  %54 = zext i16 %53 to i32, !dbg !20167
  %55 = load i32, i32* %13, align 4, !dbg !20168
  %56 = mul i32 %54, %55, !dbg !20169
  %57 = add i32 %56, 7, !dbg !20170
  %58 = udiv i32 %57, 8, !dbg !20171
  store i32 %58, i32* %22, align 4, !dbg !20172
  %59 = load i16, i16* %16, align 2, !dbg !20173
  %60 = zext i16 %59 to i32, !dbg !20173
  %61 = load i32, i32* %13, align 4, !dbg !20174
  %62 = mul i32 %60, %61, !dbg !20175
  %63 = load i16, i16* %15, align 2, !dbg !20176
  %64 = zext i16 %63 to i32, !dbg !20176
  %65 = mul i32 %62, %64, !dbg !20177
  %66 = add i32 %65, 7, !dbg !20178
  %67 = udiv i32 %66, 8, !dbg !20179
  store i32 %67, i32* %23, align 4, !dbg !20180
  %68 = load i16, i16* %16, align 2, !dbg !20181
  %69 = zext i16 %68 to i32, !dbg !20181
  %70 = sub nsw i32 8, %69, !dbg !20182
  %71 = ashr i32 255, %70, !dbg !20183
  %72 = trunc i32 %71 to i8, !dbg !20184
  store i8 %72, i8* %30, align 1, !dbg !20185
  store i32 0, i32* %26, align 4, !dbg !20186
  br label %73, !dbg !20188

73:                                               ; preds = %271, %48
  %74 = load i32, i32* %26, align 4, !dbg !20189
  %75 = load i32, i32* %14, align 4, !dbg !20191
  %76 = icmp ult i32 %74, %75, !dbg !20192
  br i1 %76, label %77, label %274, !dbg !20193

77:                                               ; preds = %73
  store i32 0, i32* %20, align 4, !dbg !20194
  store i8 0, i8* %33, align 1, !dbg !20196
  store i8 0, i8* %32, align 1, !dbg !20197
  %78 = load i8*, i8** %12, align 8, !dbg !20198
  %79 = load i32, i32* %26, align 4, !dbg !20199
  %80 = load i32, i32* %23, align 4, !dbg !20200
  %81 = mul i32 %79, %80, !dbg !20201
  %82 = zext i32 %81 to i64, !dbg !20202
  %83 = getelementptr inbounds i8, i8* %78, i64 %82, !dbg !20202
  store i8* %83, i8** %36, align 8, !dbg !20203
  %84 = load i32, i32* %26, align 4, !dbg !20204
  %85 = load i32, i32* %22, align 4, !dbg !20205
  %86 = mul i32 %84, %85, !dbg !20206
  store i32 %86, i32* %24, align 4, !dbg !20207
  store i32 0, i32* %27, align 4, !dbg !20208
  br label %87, !dbg !20210

87:                                               ; preds = %209, %77
  %88 = load i32, i32* %27, align 4, !dbg !20211
  %89 = load i32, i32* %13, align 4, !dbg !20213
  %90 = icmp ult i32 %88, %89, !dbg !20214
  br i1 %90, label %91, label %212, !dbg !20215

91:                                               ; preds = %87
  %92 = load i32, i32* %27, align 4, !dbg !20216
  %93 = load i16, i16* %16, align 2, !dbg !20218
  %94 = zext i16 %93 to i32, !dbg !20218
  %95 = mul i32 %92, %94, !dbg !20219
  store i32 %95, i32* %25, align 4, !dbg !20220
  %96 = load i32, i32* %25, align 4, !dbg !20221
  %97 = udiv i32 %96, 8, !dbg !20222
  store i32 %97, i32* %28, align 4, !dbg !20223
  %98 = load i32, i32* %25, align 4, !dbg !20224
  %99 = urem i32 %98, 8, !dbg !20225
  store i32 %99, i32* %29, align 4, !dbg !20226
  %100 = load i8, i8* %30, align 1, !dbg !20227
  %101 = zext i8 %100 to i32, !dbg !20227
  %102 = load i32, i32* %29, align 4, !dbg !20228
  %103 = sub i32 8, %102, !dbg !20229
  %104 = load i16, i16* %16, align 2, !dbg !20230
  %105 = zext i16 %104 to i32, !dbg !20230
  %106 = sub i32 %103, %105, !dbg !20231
  %107 = shl i32 %101, %106, !dbg !20232
  %108 = trunc i32 %107 to i8, !dbg !20227
  store i8 %108, i8* %31, align 1, !dbg !20233
  store i16 0, i16* %34, align 2, !dbg !20234
  br label %109, !dbg !20236

109:                                              ; preds = %205, %91
  %110 = load i16, i16* %34, align 2, !dbg !20237
  %111 = zext i16 %110 to i32, !dbg !20237
  %112 = load i16, i16* %15, align 2, !dbg !20239
  %113 = zext i16 %112 to i32, !dbg !20239
  %114 = icmp slt i32 %111, %113, !dbg !20240
  br i1 %114, label %115, label %208, !dbg !20241

115:                                              ; preds = %109
  %116 = load i8**, i8*** %11, align 8, !dbg !20242
  %117 = load i16, i16* %34, align 2, !dbg !20244
  %118 = zext i16 %117 to i64, !dbg !20242
  %119 = getelementptr inbounds i8*, i8** %116, i64 %118, !dbg !20242
  %120 = load i8*, i8** %119, align 8, !dbg !20242
  %121 = load i32, i32* %24, align 4, !dbg !20245
  %122 = zext i32 %121 to i64, !dbg !20246
  %123 = getelementptr inbounds i8, i8* %120, i64 %122, !dbg !20246
  %124 = load i32, i32* %28, align 4, !dbg !20247
  %125 = zext i32 %124 to i64, !dbg !20248
  %126 = getelementptr inbounds i8, i8* %123, i64 %125, !dbg !20248
  store i8* %126, i8** %35, align 8, !dbg !20249
  %127 = load i8*, i8** %35, align 8, !dbg !20250
  %128 = load i8, i8* %127, align 1, !dbg !20251
  %129 = zext i8 %128 to i32, !dbg !20252
  %130 = load i8, i8* %31, align 1, !dbg !20253
  %131 = zext i8 %130 to i32, !dbg !20253
  %132 = and i32 %129, %131, !dbg !20254
  %133 = load i32, i32* %29, align 4, !dbg !20255
  %134 = shl i32 %132, %133, !dbg !20256
  %135 = trunc i32 %134 to i8, !dbg !20257
  store i8 %135, i8* %32, align 1, !dbg !20258
  %136 = load i32, i32* %20, align 4, !dbg !20259
  %137 = icmp sge i32 %136, 8, !dbg !20261
  br i1 %137, label %138, label %147, !dbg !20262

138:                                              ; preds = %115
  %139 = load i8, i8* %33, align 1, !dbg !20263
  %140 = load i8*, i8** %36, align 8, !dbg !20265
  %141 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !20265
  store i8* %141, i8** %36, align 8, !dbg !20265
  store i8 %139, i8* %140, align 1, !dbg !20266
  %142 = load i8, i8* %32, align 1, !dbg !20267
  store i8 %142, i8* %33, align 1, !dbg !20268
  %143 = load i32, i32* %20, align 4, !dbg !20269
  %144 = sub nsw i32 %143, 8, !dbg !20269
  store i32 %144, i32* %20, align 4, !dbg !20269
  %145 = getelementptr inbounds [32 x i8], [32 x i8]* %37, i64 0, i64 0, !dbg !20270
  %146 = call i8* @strcpy(i8* %145, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !20271
  br label %158, !dbg !20272

147:                                              ; preds = %115
  %148 = load i8, i8* %33, align 1, !dbg !20273
  %149 = zext i8 %148 to i32, !dbg !20273
  %150 = load i8, i8* %32, align 1, !dbg !20275
  %151 = zext i8 %150 to i32, !dbg !20275
  %152 = load i32, i32* %20, align 4, !dbg !20276
  %153 = ashr i32 %151, %152, !dbg !20277
  %154 = or i32 %149, %153, !dbg !20278
  %155 = trunc i32 %154 to i8, !dbg !20279
  store i8 %155, i8* %33, align 1, !dbg !20280
  %156 = getelementptr inbounds [32 x i8], [32 x i8]* %37, i64 0, i64 0, !dbg !20281
  %157 = call i8* @strcpy(i8* %156, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !20282
  br label %158

158:                                              ; preds = %147, %138
  %159 = load i16, i16* %16, align 2, !dbg !20283
  %160 = zext i16 %159 to i32, !dbg !20283
  %161 = load i32, i32* %20, align 4, !dbg !20284
  %162 = add nsw i32 %161, %160, !dbg !20284
  store i32 %162, i32* %20, align 4, !dbg !20284
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20285
  %164 = icmp ne %struct._IO_FILE* %163, null, !dbg !20287
  br i1 %164, label %165, label %204, !dbg !20288

165:                                              ; preds = %158
  %166 = load i32, i32* %19, align 4, !dbg !20289
  %167 = icmp eq i32 %166, 3, !dbg !20290
  br i1 %167, label %168, label %204, !dbg !20291

168:                                              ; preds = %165
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20292
  %170 = load i32, i32* %18, align 4, !dbg !20294
  %171 = load i32, i32* %26, align 4, !dbg !20295
  %172 = add i32 %171, 1, !dbg !20296
  %173 = load i32, i32* %27, align 4, !dbg !20297
  %174 = add i32 %173, 1, !dbg !20298
  %175 = load i16, i16* %34, align 2, !dbg !20299
  %176 = zext i16 %175 to i32, !dbg !20299
  %177 = load i32, i32* %28, align 4, !dbg !20300
  %178 = load i32, i32* %29, align 4, !dbg !20301
  %179 = load i8*, i8** %36, align 8, !dbg !20302
  %180 = load i8*, i8** %12, align 8, !dbg !20303
  %181 = ptrtoint i8* %179 to i64, !dbg !20304
  %182 = ptrtoint i8* %180 to i64, !dbg !20304
  %183 = sub i64 %181, %182, !dbg !20304
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %169, i32 %170, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.276, i64 0, i64 0), i32 %172, i32 %174, i32 %176, i32 %177, i32 %178, i64 %183), !dbg !20305
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20306
  %185 = load i32, i32* %18, align 4, !dbg !20307
  %186 = load i8, i8* %31, align 1, !dbg !20308
  %187 = call i32 @dump_byte(%struct._IO_FILE* %184, i32 %185, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.277, i64 0, i64 0), i8 zeroext %186), !dbg !20309
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20310
  %189 = load i32, i32* %18, align 4, !dbg !20311
  %190 = load i8*, i8** %35, align 8, !dbg !20312
  %191 = load i8, i8* %190, align 1, !dbg !20313
  %192 = call i32 @dump_byte(%struct._IO_FILE* %188, i32 %189, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i8 zeroext %191), !dbg !20314
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20315
  %194 = load i32, i32* %18, align 4, !dbg !20316
  %195 = load i8, i8* %32, align 1, !dbg !20317
  %196 = call i32 @dump_byte(%struct._IO_FILE* %193, i32 %194, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.279, i64 0, i64 0), i8 zeroext %195), !dbg !20318
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20319
  %198 = load i32, i32* %18, align 4, !dbg !20320
  %199 = load i8, i8* %33, align 1, !dbg !20321
  %200 = call i32 @dump_byte(%struct._IO_FILE* %197, i32 %198, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i64 0, i64 0), i8 zeroext %199), !dbg !20322
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20323
  %202 = load i32, i32* %18, align 4, !dbg !20324
  %203 = getelementptr inbounds [32 x i8], [32 x i8]* %37, i64 0, i64 0, !dbg !20325
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %201, i32 %202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %203), !dbg !20326
  br label %204, !dbg !20327

204:                                              ; preds = %168, %165, %158
  br label %205, !dbg !20328

205:                                              ; preds = %204
  %206 = load i16, i16* %34, align 2, !dbg !20329
  %207 = add i16 %206, 1, !dbg !20329
  store i16 %207, i16* %34, align 2, !dbg !20329
  br label %109, !dbg !20330, !llvm.loop !20331

208:                                              ; preds = %109
  br label %209, !dbg !20333

209:                                              ; preds = %208
  %210 = load i32, i32* %27, align 4, !dbg !20334
  %211 = add i32 %210, 1, !dbg !20334
  store i32 %211, i32* %27, align 4, !dbg !20334
  br label %87, !dbg !20335, !llvm.loop !20336

212:                                              ; preds = %87
  %213 = load i32, i32* %20, align 4, !dbg !20338
  %214 = icmp sgt i32 %213, 0, !dbg !20340
  br i1 %214, label %215, label %250, !dbg !20341

215:                                              ; preds = %212
  %216 = load i8, i8* %33, align 1, !dbg !20342
  %217 = zext i8 %216 to i32, !dbg !20342
  %218 = load i32, i32* %20, align 4, !dbg !20344
  %219 = sub nsw i32 8, %218, !dbg !20345
  %220 = shl i32 255, %219, !dbg !20346
  %221 = and i32 %217, %220, !dbg !20347
  %222 = trunc i32 %221 to i8, !dbg !20348
  store i8 %222, i8* %32, align 1, !dbg !20349
  %223 = load i8, i8* %32, align 1, !dbg !20350
  %224 = load i8*, i8** %36, align 8, !dbg !20351
  %225 = getelementptr inbounds i8, i8* %224, i32 1, !dbg !20351
  store i8* %225, i8** %36, align 8, !dbg !20351
  store i8 %223, i8* %224, align 1, !dbg !20352
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20353
  %227 = icmp ne %struct._IO_FILE* %226, null, !dbg !20355
  br i1 %227, label %228, label %249, !dbg !20356

228:                                              ; preds = %215
  %229 = load i32, i32* %19, align 4, !dbg !20357
  %230 = icmp eq i32 %229, 3, !dbg !20358
  br i1 %230, label %231, label %249, !dbg !20359

231:                                              ; preds = %228
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20360
  %233 = load i32, i32* %18, align 4, !dbg !20362
  %234 = load i32, i32* %26, align 4, !dbg !20363
  %235 = add i32 %234, 1, !dbg !20364
  %236 = load i32, i32* %27, align 4, !dbg !20365
  %237 = add i32 %236, 1, !dbg !20366
  %238 = load i32, i32* %28, align 4, !dbg !20367
  %239 = load i32, i32* %29, align 4, !dbg !20368
  %240 = load i8*, i8** %36, align 8, !dbg !20369
  %241 = load i8*, i8** %12, align 8, !dbg !20370
  %242 = ptrtoint i8* %240 to i64, !dbg !20371
  %243 = ptrtoint i8* %241 to i64, !dbg !20371
  %244 = sub i64 %242, %243, !dbg !20371
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %232, i32 %233, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %235, i32 %237, i32 %238, i32 %239, i64 %244), !dbg !20372
  %245 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20373
  %246 = load i32, i32* %18, align 4, !dbg !20374
  %247 = load i8, i8* %32, align 1, !dbg !20375
  %248 = call i32 @dump_byte(%struct._IO_FILE* %245, i32 %246, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.282, i64 0, i64 0), i8 zeroext %247), !dbg !20376
  br label %249, !dbg !20377

249:                                              ; preds = %231, %228, %215
  br label %250, !dbg !20378

250:                                              ; preds = %249, %212
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20379
  %252 = icmp ne %struct._IO_FILE* %251, null, !dbg !20381
  br i1 %252, label %253, label %270, !dbg !20382

253:                                              ; preds = %250
  %254 = load i32, i32* %19, align 4, !dbg !20383
  %255 = icmp sge i32 %254, 2, !dbg !20384
  br i1 %255, label %256, label %270, !dbg !20385

256:                                              ; preds = %253
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20386
  %258 = load i32, i32* %18, align 4, !dbg !20388
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %257, i32 %258, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.272, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !20389
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20390
  %260 = load i32, i32* %18, align 4, !dbg !20391
  %261 = load i32, i32* %23, align 4, !dbg !20392
  %262 = load i32, i32* %26, align 4, !dbg !20393
  %263 = load i8*, i8** %12, align 8, !dbg !20394
  %264 = load i32, i32* %26, align 4, !dbg !20395
  %265 = load i32, i32* %23, align 4, !dbg !20396
  %266 = mul i32 %264, %265, !dbg !20397
  %267 = zext i32 %266 to i64, !dbg !20398
  %268 = getelementptr inbounds i8, i8* %263, i64 %267, !dbg !20398
  %269 = call i32 @dump_buffer(%struct._IO_FILE* %259, i32 %260, i32 1, i32 %261, i32 %262, i8* %268), !dbg !20399
  br label %270, !dbg !20400

270:                                              ; preds = %256, %253, %250
  br label %271, !dbg !20401

271:                                              ; preds = %270
  %272 = load i32, i32* %26, align 4, !dbg !20402
  %273 = add i32 %272, 1, !dbg !20402
  store i32 %273, i32* %26, align 4, !dbg !20402
  br label %73, !dbg !20403, !llvm.loop !20404

274:                                              ; preds = %73
  store i32 0, i32* %10, align 4, !dbg !20406
  br label %275, !dbg !20406

275:                                              ; preds = %274, %47
  %276 = load i32, i32* %10, align 4, !dbg !20407
  ret i32 %276, !dbg !20407
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateSamples16bits(i8**, i8*, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !20408 {
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca %struct._IO_FILE*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca i16, align 2
  %33 = alloca i16, align 2
  %34 = alloca i8, align 1
  %35 = alloca i16, align 2
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca [8 x i8], align 1
  store i8** %0, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !20409, metadata !DIExpression()), !dbg !20410
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !20411, metadata !DIExpression()), !dbg !20412
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20413, metadata !DIExpression()), !dbg !20414
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20415, metadata !DIExpression()), !dbg !20416
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !20417, metadata !DIExpression()), !dbg !20418
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !20419, metadata !DIExpression()), !dbg !20420
  store %struct._IO_FILE* %6, %struct._IO_FILE** %17, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %17, metadata !20421, metadata !DIExpression()), !dbg !20422
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !20423, metadata !DIExpression()), !dbg !20424
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !20425, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.declare(metadata i32* %20, metadata !20427, metadata !DIExpression()), !dbg !20428
  store i32 0, i32* %20, align 4, !dbg !20428
  call void @llvm.dbg.declare(metadata i32* %21, metadata !20429, metadata !DIExpression()), !dbg !20430
  store i32 0, i32* %21, align 4, !dbg !20430
  call void @llvm.dbg.declare(metadata i32* %22, metadata !20431, metadata !DIExpression()), !dbg !20432
  call void @llvm.dbg.declare(metadata i32* %23, metadata !20433, metadata !DIExpression()), !dbg !20434
  call void @llvm.dbg.declare(metadata i32* %24, metadata !20435, metadata !DIExpression()), !dbg !20436
  call void @llvm.dbg.declare(metadata i32* %25, metadata !20437, metadata !DIExpression()), !dbg !20438
  call void @llvm.dbg.declare(metadata i32* %26, metadata !20439, metadata !DIExpression()), !dbg !20440
  call void @llvm.dbg.declare(metadata i32* %27, metadata !20441, metadata !DIExpression()), !dbg !20442
  call void @llvm.dbg.declare(metadata i32* %28, metadata !20443, metadata !DIExpression()), !dbg !20444
  store i32 0, i32* %28, align 4, !dbg !20444
  call void @llvm.dbg.declare(metadata i32* %29, metadata !20445, metadata !DIExpression()), !dbg !20446
  store i32 0, i32* %29, align 4, !dbg !20446
  call void @llvm.dbg.declare(metadata i16* %30, metadata !20447, metadata !DIExpression()), !dbg !20448
  store i16 0, i16* %30, align 2, !dbg !20448
  call void @llvm.dbg.declare(metadata i16* %31, metadata !20449, metadata !DIExpression()), !dbg !20450
  store i16 0, i16* %31, align 2, !dbg !20450
  call void @llvm.dbg.declare(metadata i16* %32, metadata !20451, metadata !DIExpression()), !dbg !20452
  store i16 0, i16* %32, align 2, !dbg !20452
  call void @llvm.dbg.declare(metadata i16* %33, metadata !20453, metadata !DIExpression()), !dbg !20454
  store i16 0, i16* %33, align 2, !dbg !20454
  call void @llvm.dbg.declare(metadata i8* %34, metadata !20455, metadata !DIExpression()), !dbg !20456
  store i8 0, i8* %34, align 1, !dbg !20456
  call void @llvm.dbg.declare(metadata i16* %35, metadata !20457, metadata !DIExpression()), !dbg !20458
  call void @llvm.dbg.declare(metadata i8** %36, metadata !20459, metadata !DIExpression()), !dbg !20460
  %39 = load i8**, i8*** %11, align 8, !dbg !20461
  %40 = getelementptr inbounds i8*, i8** %39, i64 0, !dbg !20461
  %41 = load i8*, i8** %40, align 8, !dbg !20461
  store i8* %41, i8** %36, align 8, !dbg !20460
  call void @llvm.dbg.declare(metadata i8** %37, metadata !20462, metadata !DIExpression()), !dbg !20463
  %42 = load i8*, i8** %12, align 8, !dbg !20464
  store i8* %42, i8** %37, align 8, !dbg !20463
  call void @llvm.dbg.declare(metadata [8 x i8]* %38, metadata !20465, metadata !DIExpression()), !dbg !20466
  %43 = load i8*, i8** %36, align 8, !dbg !20467
  %44 = icmp eq i8* %43, null, !dbg !20469
  br i1 %44, label %48, label %45, !dbg !20470

45:                                               ; preds = %9
  %46 = load i8*, i8** %37, align 8, !dbg !20471
  %47 = icmp eq i8* %46, null, !dbg !20472
  br i1 %47, label %48, label %49, !dbg !20473

48:                                               ; preds = %45, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.290, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !20474
  store i32 1, i32* %10, align 4, !dbg !20476
  br label %315, !dbg !20476

49:                                               ; preds = %45
  %50 = load i16, i16* %16, align 2, !dbg !20477
  %51 = zext i16 %50 to i32, !dbg !20477
  %52 = add nsw i32 %51, 7, !dbg !20478
  %53 = sdiv i32 %52, 8, !dbg !20479
  store i32 %53, i32* %21, align 4, !dbg !20480
  %54 = load i16, i16* %16, align 2, !dbg !20481
  %55 = zext i16 %54 to i32, !dbg !20481
  %56 = load i32, i32* %13, align 4, !dbg !20482
  %57 = mul i32 %55, %56, !dbg !20483
  %58 = add i32 %57, 7, !dbg !20484
  %59 = udiv i32 %58, 8, !dbg !20485
  store i32 %59, i32* %22, align 4, !dbg !20486
  %60 = load i16, i16* %16, align 2, !dbg !20487
  %61 = zext i16 %60 to i32, !dbg !20487
  %62 = load i32, i32* %13, align 4, !dbg !20488
  %63 = mul i32 %61, %62, !dbg !20489
  %64 = load i16, i16* %15, align 2, !dbg !20490
  %65 = zext i16 %64 to i32, !dbg !20490
  %66 = mul i32 %63, %65, !dbg !20491
  %67 = add i32 %66, 7, !dbg !20492
  %68 = udiv i32 %67, 8, !dbg !20493
  store i32 %68, i32* %23, align 4, !dbg !20494
  %69 = load i16, i16* %16, align 2, !dbg !20495
  %70 = zext i16 %69 to i32, !dbg !20495
  %71 = sub nsw i32 16, %70, !dbg !20496
  %72 = ashr i32 65535, %71, !dbg !20497
  %73 = trunc i32 %72 to i16, !dbg !20498
  store i16 %73, i16* %30, align 2, !dbg !20499
  store i32 0, i32* %26, align 4, !dbg !20500
  br label %74, !dbg !20502

74:                                               ; preds = %311, %49
  %75 = load i32, i32* %26, align 4, !dbg !20503
  %76 = load i32, i32* %14, align 4, !dbg !20505
  %77 = icmp ult i32 %75, %76, !dbg !20506
  br i1 %77, label %78, label %314, !dbg !20507

78:                                               ; preds = %74
  store i32 0, i32* %20, align 4, !dbg !20508
  store i16 0, i16* %33, align 2, !dbg !20510
  store i16 0, i16* %32, align 2, !dbg !20511
  %79 = load i8*, i8** %12, align 8, !dbg !20512
  %80 = load i32, i32* %26, align 4, !dbg !20513
  %81 = load i32, i32* %23, align 4, !dbg !20514
  %82 = mul i32 %80, %81, !dbg !20515
  %83 = zext i32 %82 to i64, !dbg !20516
  %84 = getelementptr inbounds i8, i8* %79, i64 %83, !dbg !20516
  store i8* %84, i8** %37, align 8, !dbg !20517
  %85 = load i32, i32* %26, align 4, !dbg !20518
  %86 = load i32, i32* %22, align 4, !dbg !20519
  %87 = mul i32 %85, %86, !dbg !20520
  store i32 %87, i32* %25, align 4, !dbg !20521
  store i32 0, i32* %27, align 4, !dbg !20522
  br label %88, !dbg !20524

88:                                               ; preds = %252, %78
  %89 = load i32, i32* %27, align 4, !dbg !20525
  %90 = load i32, i32* %13, align 4, !dbg !20527
  %91 = icmp ult i32 %89, %90, !dbg !20528
  br i1 %91, label %92, label %255, !dbg !20529

92:                                               ; preds = %88
  %93 = load i32, i32* %27, align 4, !dbg !20530
  %94 = load i16, i16* %16, align 2, !dbg !20532
  %95 = zext i16 %94 to i32, !dbg !20532
  %96 = mul i32 %93, %95, !dbg !20533
  store i32 %96, i32* %24, align 4, !dbg !20534
  %97 = load i32, i32* %24, align 4, !dbg !20535
  %98 = udiv i32 %97, 8, !dbg !20536
  store i32 %98, i32* %28, align 4, !dbg !20537
  %99 = load i32, i32* %24, align 4, !dbg !20538
  %100 = urem i32 %99, 8, !dbg !20539
  store i32 %100, i32* %29, align 4, !dbg !20540
  %101 = load i16, i16* %30, align 2, !dbg !20541
  %102 = zext i16 %101 to i32, !dbg !20541
  %103 = load i32, i32* %29, align 4, !dbg !20542
  %104 = sub i32 16, %103, !dbg !20543
  %105 = load i16, i16* %16, align 2, !dbg !20544
  %106 = zext i16 %105 to i32, !dbg !20544
  %107 = sub i32 %104, %106, !dbg !20545
  %108 = shl i32 %102, %107, !dbg !20546
  %109 = trunc i32 %108 to i16, !dbg !20541
  store i16 %109, i16* %31, align 2, !dbg !20547
  store i16 0, i16* %35, align 2, !dbg !20548
  br label %110, !dbg !20550

110:                                              ; preds = %248, %92
  %111 = load i16, i16* %35, align 2, !dbg !20551
  %112 = zext i16 %111 to i32, !dbg !20551
  %113 = load i16, i16* %15, align 2, !dbg !20553
  %114 = zext i16 %113 to i32, !dbg !20553
  %115 = icmp slt i32 %112, %114, !dbg !20554
  br i1 %115, label %116, label %251, !dbg !20555

116:                                              ; preds = %110
  %117 = load i8**, i8*** %11, align 8, !dbg !20556
  %118 = load i16, i16* %35, align 2, !dbg !20558
  %119 = zext i16 %118 to i64, !dbg !20556
  %120 = getelementptr inbounds i8*, i8** %117, i64 %119, !dbg !20556
  %121 = load i8*, i8** %120, align 8, !dbg !20556
  %122 = load i32, i32* %25, align 4, !dbg !20559
  %123 = zext i32 %122 to i64, !dbg !20560
  %124 = getelementptr inbounds i8, i8* %121, i64 %123, !dbg !20560
  %125 = load i32, i32* %28, align 4, !dbg !20561
  %126 = zext i32 %125 to i64, !dbg !20562
  %127 = getelementptr inbounds i8, i8* %124, i64 %126, !dbg !20562
  store i8* %127, i8** %36, align 8, !dbg !20563
  %128 = load i32, i32* @little_endian, align 4, !dbg !20564
  %129 = icmp ne i32 %128, 0, !dbg !20564
  br i1 %129, label %130, label %142, !dbg !20566

130:                                              ; preds = %116
  %131 = load i8*, i8** %36, align 8, !dbg !20567
  %132 = getelementptr inbounds i8, i8* %131, i64 0, !dbg !20567
  %133 = load i8, i8* %132, align 1, !dbg !20567
  %134 = zext i8 %133 to i32, !dbg !20567
  %135 = shl i32 %134, 8, !dbg !20568
  %136 = load i8*, i8** %36, align 8, !dbg !20569
  %137 = getelementptr inbounds i8, i8* %136, i64 1, !dbg !20569
  %138 = load i8, i8* %137, align 1, !dbg !20569
  %139 = zext i8 %138 to i32, !dbg !20569
  %140 = or i32 %135, %139, !dbg !20570
  %141 = trunc i32 %140 to i16, !dbg !20571
  store i16 %141, i16* %32, align 2, !dbg !20572
  br label %154, !dbg !20573

142:                                              ; preds = %116
  %143 = load i8*, i8** %36, align 8, !dbg !20574
  %144 = getelementptr inbounds i8, i8* %143, i64 1, !dbg !20574
  %145 = load i8, i8* %144, align 1, !dbg !20574
  %146 = zext i8 %145 to i32, !dbg !20574
  %147 = shl i32 %146, 8, !dbg !20575
  %148 = load i8*, i8** %36, align 8, !dbg !20576
  %149 = getelementptr inbounds i8, i8* %148, i64 0, !dbg !20576
  %150 = load i8, i8* %149, align 1, !dbg !20576
  %151 = zext i8 %150 to i32, !dbg !20576
  %152 = or i32 %147, %151, !dbg !20577
  %153 = trunc i32 %152 to i16, !dbg !20578
  store i16 %153, i16* %32, align 2, !dbg !20579
  br label %154

154:                                              ; preds = %142, %130
  %155 = load i16, i16* %32, align 2, !dbg !20580
  %156 = zext i16 %155 to i32, !dbg !20580
  %157 = load i16, i16* %31, align 2, !dbg !20581
  %158 = zext i16 %157 to i32, !dbg !20581
  %159 = and i32 %156, %158, !dbg !20582
  %160 = load i32, i32* %29, align 4, !dbg !20583
  %161 = shl i32 %159, %160, !dbg !20584
  %162 = trunc i32 %161 to i16, !dbg !20585
  store i16 %162, i16* %32, align 2, !dbg !20586
  %163 = load i32, i32* %20, align 4, !dbg !20587
  %164 = icmp sge i32 %163, 8, !dbg !20589
  br i1 %164, label %165, label %186, !dbg !20590

165:                                              ; preds = %154
  %166 = load i16, i16* %33, align 2, !dbg !20591
  %167 = zext i16 %166 to i32, !dbg !20591
  %168 = ashr i32 %167, 8, !dbg !20593
  %169 = trunc i32 %168 to i8, !dbg !20594
  store i8 %169, i8* %34, align 1, !dbg !20595
  %170 = load i8, i8* %34, align 1, !dbg !20596
  %171 = load i8*, i8** %37, align 8, !dbg !20597
  %172 = getelementptr inbounds i8, i8* %171, i32 1, !dbg !20597
  store i8* %172, i8** %37, align 8, !dbg !20597
  store i8 %170, i8* %171, align 1, !dbg !20598
  %173 = load i32, i32* %20, align 4, !dbg !20599
  %174 = sub nsw i32 %173, 8, !dbg !20599
  store i32 %174, i32* %20, align 4, !dbg !20599
  %175 = load i16, i16* %33, align 2, !dbg !20600
  %176 = zext i16 %175 to i32, !dbg !20600
  %177 = shl i32 %176, 8, !dbg !20601
  %178 = load i16, i16* %32, align 2, !dbg !20602
  %179 = zext i16 %178 to i32, !dbg !20602
  %180 = load i32, i32* %20, align 4, !dbg !20603
  %181 = ashr i32 %179, %180, !dbg !20604
  %182 = or i32 %177, %181, !dbg !20605
  %183 = trunc i32 %182 to i16, !dbg !20606
  store i16 %183, i16* %33, align 2, !dbg !20607
  %184 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i64 0, i64 0, !dbg !20608
  %185 = call i8* @strcpy(i8* %184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !20609
  br label %197, !dbg !20610

186:                                              ; preds = %154
  store i8 0, i8* %34, align 1, !dbg !20611
  %187 = load i16, i16* %33, align 2, !dbg !20613
  %188 = zext i16 %187 to i32, !dbg !20613
  %189 = load i16, i16* %32, align 2, !dbg !20614
  %190 = zext i16 %189 to i32, !dbg !20614
  %191 = load i32, i32* %20, align 4, !dbg !20615
  %192 = ashr i32 %190, %191, !dbg !20616
  %193 = or i32 %188, %192, !dbg !20617
  %194 = trunc i32 %193 to i16, !dbg !20618
  store i16 %194, i16* %33, align 2, !dbg !20619
  %195 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i64 0, i64 0, !dbg !20620
  %196 = call i8* @strcpy(i8* %195, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !20621
  br label %197

197:                                              ; preds = %186, %165
  %198 = load i16, i16* %16, align 2, !dbg !20622
  %199 = zext i16 %198 to i32, !dbg !20622
  %200 = load i32, i32* %20, align 4, !dbg !20623
  %201 = add nsw i32 %200, %199, !dbg !20623
  store i32 %201, i32* %20, align 4, !dbg !20623
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20624
  %203 = icmp ne %struct._IO_FILE* %202, null, !dbg !20626
  br i1 %203, label %204, label %247, !dbg !20627

204:                                              ; preds = %197
  %205 = load i32, i32* %19, align 4, !dbg !20628
  %206 = icmp eq i32 %205, 3, !dbg !20629
  br i1 %206, label %207, label %247, !dbg !20630

207:                                              ; preds = %204
  %208 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20631
  %209 = load i32, i32* %18, align 4, !dbg !20633
  %210 = load i32, i32* %26, align 4, !dbg !20634
  %211 = add i32 %210, 1, !dbg !20635
  %212 = load i32, i32* %27, align 4, !dbg !20636
  %213 = add i32 %212, 1, !dbg !20637
  %214 = load i16, i16* %35, align 2, !dbg !20638
  %215 = zext i16 %214 to i32, !dbg !20638
  %216 = load i32, i32* %28, align 4, !dbg !20639
  %217 = load i32, i32* %29, align 4, !dbg !20640
  %218 = load i8*, i8** %37, align 8, !dbg !20641
  %219 = load i8*, i8** %12, align 8, !dbg !20642
  %220 = ptrtoint i8* %218 to i64, !dbg !20643
  %221 = ptrtoint i8* %219 to i64, !dbg !20643
  %222 = sub i64 %220, %221, !dbg !20643
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %208, i32 %209, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.276, i64 0, i64 0), i32 %211, i32 %213, i32 %215, i32 %216, i32 %217, i64 %222), !dbg !20644
  %223 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20645
  %224 = load i32, i32* %18, align 4, !dbg !20646
  %225 = load i16, i16* %31, align 2, !dbg !20647
  %226 = call i32 @dump_short(%struct._IO_FILE* %223, i32 %224, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.277, i64 0, i64 0), i16 zeroext %225), !dbg !20648
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20649
  %228 = load i32, i32* %18, align 4, !dbg !20650
  %229 = load i8*, i8** %36, align 8, !dbg !20651
  %230 = call i32 @dump_data(%struct._IO_FILE* %227, i32 %228, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i8* %229, i32 2), !dbg !20652
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20653
  %232 = load i32, i32* %18, align 4, !dbg !20654
  %233 = load i16, i16* %32, align 2, !dbg !20655
  %234 = call i32 @dump_short(%struct._IO_FILE* %231, i32 %232, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.279, i64 0, i64 0), i16 zeroext %233), !dbg !20656
  %235 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20657
  %236 = load i32, i32* %18, align 4, !dbg !20658
  %237 = load i16, i16* %33, align 2, !dbg !20659
  %238 = call i32 @dump_short(%struct._IO_FILE* %235, i32 %236, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i64 0, i64 0), i16 zeroext %237), !dbg !20660
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20661
  %240 = load i32, i32* %18, align 4, !dbg !20662
  %241 = load i8, i8* %34, align 1, !dbg !20663
  %242 = call i32 @dump_byte(%struct._IO_FILE* %239, i32 %240, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.291, i64 0, i64 0), i8 zeroext %241), !dbg !20664
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20665
  %244 = load i32, i32* %18, align 4, !dbg !20666
  %245 = load i32, i32* %20, align 4, !dbg !20667
  %246 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i64 0, i64 0, !dbg !20668
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %243, i32 %244, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.292, i64 0, i64 0), i32 %245, i8* %246), !dbg !20669
  br label %247, !dbg !20670

247:                                              ; preds = %207, %204, %197
  br label %248, !dbg !20671

248:                                              ; preds = %247
  %249 = load i16, i16* %35, align 2, !dbg !20672
  %250 = add i16 %249, 1, !dbg !20672
  store i16 %250, i16* %35, align 2, !dbg !20672
  br label %110, !dbg !20673, !llvm.loop !20674

251:                                              ; preds = %110
  br label %252, !dbg !20676

252:                                              ; preds = %251
  %253 = load i32, i32* %27, align 4, !dbg !20677
  %254 = add i32 %253, 1, !dbg !20677
  store i32 %254, i32* %27, align 4, !dbg !20677
  br label %88, !dbg !20678, !llvm.loop !20679

255:                                              ; preds = %88
  %256 = load i32, i32* %20, align 4, !dbg !20681
  %257 = icmp sgt i32 %256, 0, !dbg !20683
  br i1 %257, label %258, label %290, !dbg !20684

258:                                              ; preds = %255
  %259 = load i16, i16* %33, align 2, !dbg !20685
  %260 = zext i16 %259 to i32, !dbg !20685
  %261 = ashr i32 %260, 8, !dbg !20687
  %262 = trunc i32 %261 to i8, !dbg !20688
  store i8 %262, i8* %34, align 1, !dbg !20689
  %263 = load i8, i8* %34, align 1, !dbg !20690
  %264 = load i8*, i8** %37, align 8, !dbg !20691
  %265 = getelementptr inbounds i8, i8* %264, i32 1, !dbg !20691
  store i8* %265, i8** %37, align 8, !dbg !20691
  store i8 %263, i8* %264, align 1, !dbg !20692
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20693
  %267 = icmp ne %struct._IO_FILE* %266, null, !dbg !20695
  br i1 %267, label %268, label %289, !dbg !20696

268:                                              ; preds = %258
  %269 = load i32, i32* %19, align 4, !dbg !20697
  %270 = icmp eq i32 %269, 3, !dbg !20698
  br i1 %270, label %271, label %289, !dbg !20699

271:                                              ; preds = %268
  %272 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20700
  %273 = load i32, i32* %18, align 4, !dbg !20702
  %274 = load i32, i32* %26, align 4, !dbg !20703
  %275 = add i32 %274, 1, !dbg !20704
  %276 = load i32, i32* %27, align 4, !dbg !20705
  %277 = add i32 %276, 1, !dbg !20706
  %278 = load i32, i32* %28, align 4, !dbg !20707
  %279 = load i32, i32* %29, align 4, !dbg !20708
  %280 = load i8*, i8** %37, align 8, !dbg !20709
  %281 = load i8*, i8** %12, align 8, !dbg !20710
  %282 = ptrtoint i8* %280 to i64, !dbg !20711
  %283 = ptrtoint i8* %281 to i64, !dbg !20711
  %284 = sub i64 %282, %283, !dbg !20711
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %272, i32 %273, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %275, i32 %277, i32 %278, i32 %279, i64 %284), !dbg !20712
  %285 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20713
  %286 = load i32, i32* %18, align 4, !dbg !20714
  %287 = load i8, i8* %34, align 1, !dbg !20715
  %288 = call i32 @dump_byte(%struct._IO_FILE* %285, i32 %286, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.282, i64 0, i64 0), i8 zeroext %287), !dbg !20716
  br label %289, !dbg !20717

289:                                              ; preds = %271, %268, %258
  br label %290, !dbg !20718

290:                                              ; preds = %289, %255
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20719
  %292 = icmp ne %struct._IO_FILE* %291, null, !dbg !20721
  br i1 %292, label %293, label %310, !dbg !20722

293:                                              ; preds = %290
  %294 = load i32, i32* %19, align 4, !dbg !20723
  %295 = icmp eq i32 %294, 2, !dbg !20724
  br i1 %295, label %296, label %310, !dbg !20725

296:                                              ; preds = %293
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20726
  %298 = load i32, i32* %18, align 4, !dbg !20728
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %297, i32 %298, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.290, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !20729
  %299 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20730
  %300 = load i32, i32* %18, align 4, !dbg !20731
  %301 = load i32, i32* %23, align 4, !dbg !20732
  %302 = load i32, i32* %26, align 4, !dbg !20733
  %303 = load i8*, i8** %12, align 8, !dbg !20734
  %304 = load i32, i32* %26, align 4, !dbg !20735
  %305 = load i32, i32* %23, align 4, !dbg !20736
  %306 = mul i32 %304, %305, !dbg !20737
  %307 = zext i32 %306 to i64, !dbg !20738
  %308 = getelementptr inbounds i8, i8* %303, i64 %307, !dbg !20738
  %309 = call i32 @dump_buffer(%struct._IO_FILE* %299, i32 %300, i32 1, i32 %301, i32 %302, i8* %308), !dbg !20739
  br label %310, !dbg !20740

310:                                              ; preds = %296, %293, %290
  br label %311, !dbg !20741

311:                                              ; preds = %310
  %312 = load i32, i32* %26, align 4, !dbg !20742
  %313 = add i32 %312, 1, !dbg !20742
  store i32 %313, i32* %26, align 4, !dbg !20742
  br label %74, !dbg !20743, !llvm.loop !20744

314:                                              ; preds = %74
  store i32 0, i32* %10, align 4, !dbg !20746
  br label %315, !dbg !20746

315:                                              ; preds = %314, %48
  %316 = load i32, i32* %10, align 4, !dbg !20747
  ret i32 %316, !dbg !20747
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateSamples24bits(i8**, i8*, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !20748 {
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca %struct._IO_FILE*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i16, align 2
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [8 x i8], align 1
  store i8** %0, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !20749, metadata !DIExpression()), !dbg !20750
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !20751, metadata !DIExpression()), !dbg !20752
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !20753, metadata !DIExpression()), !dbg !20754
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !20755, metadata !DIExpression()), !dbg !20756
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !20757, metadata !DIExpression()), !dbg !20758
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !20759, metadata !DIExpression()), !dbg !20760
  store %struct._IO_FILE* %6, %struct._IO_FILE** %17, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %17, metadata !20761, metadata !DIExpression()), !dbg !20762
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !20763, metadata !DIExpression()), !dbg !20764
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !20765, metadata !DIExpression()), !dbg !20766
  call void @llvm.dbg.declare(metadata i32* %20, metadata !20767, metadata !DIExpression()), !dbg !20768
  store i32 0, i32* %20, align 4, !dbg !20768
  call void @llvm.dbg.declare(metadata i32* %21, metadata !20769, metadata !DIExpression()), !dbg !20770
  store i32 0, i32* %21, align 4, !dbg !20770
  call void @llvm.dbg.declare(metadata i32* %22, metadata !20771, metadata !DIExpression()), !dbg !20772
  call void @llvm.dbg.declare(metadata i32* %23, metadata !20773, metadata !DIExpression()), !dbg !20774
  call void @llvm.dbg.declare(metadata i32* %24, metadata !20775, metadata !DIExpression()), !dbg !20776
  call void @llvm.dbg.declare(metadata i32* %25, metadata !20777, metadata !DIExpression()), !dbg !20778
  call void @llvm.dbg.declare(metadata i32* %26, metadata !20779, metadata !DIExpression()), !dbg !20780
  call void @llvm.dbg.declare(metadata i32* %27, metadata !20781, metadata !DIExpression()), !dbg !20782
  call void @llvm.dbg.declare(metadata i32* %28, metadata !20783, metadata !DIExpression()), !dbg !20784
  store i32 0, i32* %28, align 4, !dbg !20784
  call void @llvm.dbg.declare(metadata i32* %29, metadata !20785, metadata !DIExpression()), !dbg !20786
  store i32 0, i32* %29, align 4, !dbg !20786
  call void @llvm.dbg.declare(metadata i32* %30, metadata !20787, metadata !DIExpression()), !dbg !20788
  store i32 0, i32* %30, align 4, !dbg !20788
  call void @llvm.dbg.declare(metadata i32* %31, metadata !20789, metadata !DIExpression()), !dbg !20790
  store i32 0, i32* %31, align 4, !dbg !20790
  call void @llvm.dbg.declare(metadata i32* %32, metadata !20791, metadata !DIExpression()), !dbg !20792
  store i32 0, i32* %32, align 4, !dbg !20792
  call void @llvm.dbg.declare(metadata i32* %33, metadata !20793, metadata !DIExpression()), !dbg !20794
  store i32 0, i32* %33, align 4, !dbg !20794
  call void @llvm.dbg.declare(metadata i8* %34, metadata !20795, metadata !DIExpression()), !dbg !20796
  store i8 0, i8* %34, align 1, !dbg !20796
  call void @llvm.dbg.declare(metadata i8* %35, metadata !20797, metadata !DIExpression()), !dbg !20798
  store i8 0, i8* %35, align 1, !dbg !20798
  call void @llvm.dbg.declare(metadata i16* %36, metadata !20799, metadata !DIExpression()), !dbg !20800
  call void @llvm.dbg.declare(metadata i8** %37, metadata !20801, metadata !DIExpression()), !dbg !20802
  %40 = load i8**, i8*** %11, align 8, !dbg !20803
  %41 = getelementptr inbounds i8*, i8** %40, i64 0, !dbg !20803
  %42 = load i8*, i8** %41, align 8, !dbg !20803
  store i8* %42, i8** %37, align 8, !dbg !20802
  call void @llvm.dbg.declare(metadata i8** %38, metadata !20804, metadata !DIExpression()), !dbg !20805
  %43 = load i8*, i8** %12, align 8, !dbg !20806
  store i8* %43, i8** %38, align 8, !dbg !20805
  call void @llvm.dbg.declare(metadata [8 x i8]* %39, metadata !20807, metadata !DIExpression()), !dbg !20808
  %44 = load i8*, i8** %37, align 8, !dbg !20809
  %45 = icmp eq i8* %44, null, !dbg !20811
  br i1 %45, label %49, label %46, !dbg !20812

46:                                               ; preds = %9
  %47 = load i8*, i8** %38, align 8, !dbg !20813
  %48 = icmp eq i8* %47, null, !dbg !20814
  br i1 %48, label %49, label %50, !dbg !20815

49:                                               ; preds = %46, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.294, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !20816
  store i32 1, i32* %10, align 4, !dbg !20818
  br label %363, !dbg !20818

50:                                               ; preds = %46
  %51 = load i16, i16* %16, align 2, !dbg !20819
  %52 = zext i16 %51 to i32, !dbg !20819
  %53 = add nsw i32 %52, 7, !dbg !20820
  %54 = sdiv i32 %53, 8, !dbg !20821
  store i32 %54, i32* %21, align 4, !dbg !20822
  %55 = load i16, i16* %16, align 2, !dbg !20823
  %56 = zext i16 %55 to i32, !dbg !20823
  %57 = load i32, i32* %13, align 4, !dbg !20824
  %58 = mul i32 %56, %57, !dbg !20825
  %59 = add i32 %58, 7, !dbg !20826
  %60 = udiv i32 %59, 8, !dbg !20827
  store i32 %60, i32* %22, align 4, !dbg !20828
  %61 = load i16, i16* %16, align 2, !dbg !20829
  %62 = zext i16 %61 to i32, !dbg !20829
  %63 = load i32, i32* %13, align 4, !dbg !20830
  %64 = mul i32 %62, %63, !dbg !20831
  %65 = load i16, i16* %15, align 2, !dbg !20832
  %66 = zext i16 %65 to i32, !dbg !20832
  %67 = mul i32 %64, %66, !dbg !20833
  %68 = add i32 %67, 7, !dbg !20834
  %69 = udiv i32 %68, 8, !dbg !20835
  store i32 %69, i32* %23, align 4, !dbg !20836
  %70 = load i16, i16* %16, align 2, !dbg !20837
  %71 = zext i16 %70 to i32, !dbg !20837
  %72 = sub nsw i32 32, %71, !dbg !20838
  %73 = lshr i32 -1, %72, !dbg !20839
  store i32 %73, i32* %30, align 4, !dbg !20840
  store i32 0, i32* %26, align 4, !dbg !20841
  br label %74, !dbg !20843

74:                                               ; preds = %359, %50
  %75 = load i32, i32* %26, align 4, !dbg !20844
  %76 = load i32, i32* %14, align 4, !dbg !20846
  %77 = icmp ult i32 %75, %76, !dbg !20847
  br i1 %77, label %78, label %362, !dbg !20848

78:                                               ; preds = %74
  store i32 0, i32* %20, align 4, !dbg !20849
  store i32 0, i32* %33, align 4, !dbg !20851
  store i32 0, i32* %32, align 4, !dbg !20852
  %79 = load i8*, i8** %12, align 8, !dbg !20853
  %80 = load i32, i32* %26, align 4, !dbg !20854
  %81 = load i32, i32* %23, align 4, !dbg !20855
  %82 = mul i32 %80, %81, !dbg !20856
  %83 = zext i32 %82 to i64, !dbg !20857
  %84 = getelementptr inbounds i8, i8* %79, i64 %83, !dbg !20857
  store i8* %84, i8** %38, align 8, !dbg !20858
  %85 = load i32, i32* %26, align 4, !dbg !20859
  %86 = load i32, i32* %22, align 4, !dbg !20860
  %87 = mul i32 %85, %86, !dbg !20861
  store i32 %87, i32* %25, align 4, !dbg !20862
  store i32 0, i32* %27, align 4, !dbg !20863
  br label %88, !dbg !20865

88:                                               ; preds = %272, %78
  %89 = load i32, i32* %27, align 4, !dbg !20866
  %90 = load i32, i32* %13, align 4, !dbg !20868
  %91 = icmp ult i32 %89, %90, !dbg !20869
  br i1 %91, label %92, label %275, !dbg !20870

92:                                               ; preds = %88
  %93 = load i32, i32* %27, align 4, !dbg !20871
  %94 = load i16, i16* %16, align 2, !dbg !20873
  %95 = zext i16 %94 to i32, !dbg !20873
  %96 = mul i32 %93, %95, !dbg !20874
  store i32 %96, i32* %24, align 4, !dbg !20875
  %97 = load i32, i32* %24, align 4, !dbg !20876
  %98 = udiv i32 %97, 8, !dbg !20877
  store i32 %98, i32* %28, align 4, !dbg !20878
  %99 = load i32, i32* %24, align 4, !dbg !20879
  %100 = urem i32 %99, 8, !dbg !20880
  store i32 %100, i32* %29, align 4, !dbg !20881
  %101 = load i32, i32* %30, align 4, !dbg !20882
  %102 = load i32, i32* %29, align 4, !dbg !20883
  %103 = sub i32 32, %102, !dbg !20884
  %104 = load i16, i16* %16, align 2, !dbg !20885
  %105 = zext i16 %104 to i32, !dbg !20885
  %106 = sub i32 %103, %105, !dbg !20886
  %107 = shl i32 %101, %106, !dbg !20887
  store i32 %107, i32* %31, align 4, !dbg !20888
  store i16 0, i16* %36, align 2, !dbg !20889
  br label %108, !dbg !20891

108:                                              ; preds = %268, %92
  %109 = load i16, i16* %36, align 2, !dbg !20892
  %110 = zext i16 %109 to i32, !dbg !20892
  %111 = load i16, i16* %15, align 2, !dbg !20894
  %112 = zext i16 %111 to i32, !dbg !20894
  %113 = icmp slt i32 %110, %112, !dbg !20895
  br i1 %113, label %114, label %271, !dbg !20896

114:                                              ; preds = %108
  %115 = load i8**, i8*** %11, align 8, !dbg !20897
  %116 = load i16, i16* %36, align 2, !dbg !20899
  %117 = zext i16 %116 to i64, !dbg !20897
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117, !dbg !20897
  %119 = load i8*, i8** %118, align 8, !dbg !20897
  %120 = load i32, i32* %25, align 4, !dbg !20900
  %121 = zext i32 %120 to i64, !dbg !20901
  %122 = getelementptr inbounds i8, i8* %119, i64 %121, !dbg !20901
  %123 = load i32, i32* %28, align 4, !dbg !20902
  %124 = zext i32 %123 to i64, !dbg !20903
  %125 = getelementptr inbounds i8, i8* %122, i64 %124, !dbg !20903
  store i8* %125, i8** %37, align 8, !dbg !20904
  %126 = load i32, i32* @little_endian, align 4, !dbg !20905
  %127 = icmp ne i32 %126, 0, !dbg !20905
  br i1 %127, label %128, label %151, !dbg !20907

128:                                              ; preds = %114
  %129 = load i8*, i8** %37, align 8, !dbg !20908
  %130 = getelementptr inbounds i8, i8* %129, i64 0, !dbg !20908
  %131 = load i8, i8* %130, align 1, !dbg !20908
  %132 = zext i8 %131 to i32, !dbg !20908
  %133 = shl i32 %132, 24, !dbg !20909
  %134 = load i8*, i8** %37, align 8, !dbg !20910
  %135 = getelementptr inbounds i8, i8* %134, i64 1, !dbg !20910
  %136 = load i8, i8* %135, align 1, !dbg !20910
  %137 = zext i8 %136 to i32, !dbg !20910
  %138 = shl i32 %137, 16, !dbg !20911
  %139 = or i32 %133, %138, !dbg !20912
  %140 = load i8*, i8** %37, align 8, !dbg !20913
  %141 = getelementptr inbounds i8, i8* %140, i64 2, !dbg !20913
  %142 = load i8, i8* %141, align 1, !dbg !20913
  %143 = zext i8 %142 to i32, !dbg !20913
  %144 = shl i32 %143, 8, !dbg !20914
  %145 = or i32 %139, %144, !dbg !20915
  %146 = load i8*, i8** %37, align 8, !dbg !20916
  %147 = getelementptr inbounds i8, i8* %146, i64 3, !dbg !20916
  %148 = load i8, i8* %147, align 1, !dbg !20916
  %149 = zext i8 %148 to i32, !dbg !20916
  %150 = or i32 %145, %149, !dbg !20917
  store i32 %150, i32* %32, align 4, !dbg !20918
  br label %174, !dbg !20919

151:                                              ; preds = %114
  %152 = load i8*, i8** %37, align 8, !dbg !20920
  %153 = getelementptr inbounds i8, i8* %152, i64 3, !dbg !20920
  %154 = load i8, i8* %153, align 1, !dbg !20920
  %155 = zext i8 %154 to i32, !dbg !20920
  %156 = shl i32 %155, 24, !dbg !20921
  %157 = load i8*, i8** %37, align 8, !dbg !20922
  %158 = getelementptr inbounds i8, i8* %157, i64 2, !dbg !20922
  %159 = load i8, i8* %158, align 1, !dbg !20922
  %160 = zext i8 %159 to i32, !dbg !20922
  %161 = shl i32 %160, 16, !dbg !20923
  %162 = or i32 %156, %161, !dbg !20924
  %163 = load i8*, i8** %37, align 8, !dbg !20925
  %164 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !20925
  %165 = load i8, i8* %164, align 1, !dbg !20925
  %166 = zext i8 %165 to i32, !dbg !20925
  %167 = shl i32 %166, 8, !dbg !20926
  %168 = or i32 %162, %167, !dbg !20927
  %169 = load i8*, i8** %37, align 8, !dbg !20928
  %170 = getelementptr inbounds i8, i8* %169, i64 0, !dbg !20928
  %171 = load i8, i8* %170, align 1, !dbg !20928
  %172 = zext i8 %171 to i32, !dbg !20928
  %173 = or i32 %168, %172, !dbg !20929
  store i32 %173, i32* %32, align 4, !dbg !20930
  br label %174

174:                                              ; preds = %151, %128
  %175 = load i32, i32* %32, align 4, !dbg !20931
  %176 = load i32, i32* %31, align 4, !dbg !20932
  %177 = and i32 %175, %176, !dbg !20933
  %178 = load i32, i32* %29, align 4, !dbg !20934
  %179 = shl i32 %177, %178, !dbg !20935
  store i32 %179, i32* %32, align 4, !dbg !20936
  %180 = load i32, i32* %20, align 4, !dbg !20937
  %181 = icmp sge i32 %180, 16, !dbg !20939
  br i1 %181, label %182, label %205, !dbg !20940

182:                                              ; preds = %174
  %183 = load i32, i32* %33, align 4, !dbg !20941
  %184 = lshr i32 %183, 24, !dbg !20943
  %185 = trunc i32 %184 to i8, !dbg !20944
  store i8 %185, i8* %34, align 1, !dbg !20945
  %186 = load i8, i8* %34, align 1, !dbg !20946
  %187 = load i8*, i8** %38, align 8, !dbg !20947
  %188 = getelementptr inbounds i8, i8* %187, i32 1, !dbg !20947
  store i8* %188, i8** %38, align 8, !dbg !20947
  store i8 %186, i8* %187, align 1, !dbg !20948
  %189 = load i32, i32* %33, align 4, !dbg !20949
  %190 = lshr i32 %189, 16, !dbg !20950
  %191 = trunc i32 %190 to i8, !dbg !20951
  store i8 %191, i8* %35, align 1, !dbg !20952
  %192 = load i8, i8* %35, align 1, !dbg !20953
  %193 = load i8*, i8** %38, align 8, !dbg !20954
  %194 = getelementptr inbounds i8, i8* %193, i32 1, !dbg !20954
  store i8* %194, i8** %38, align 8, !dbg !20954
  store i8 %192, i8* %193, align 1, !dbg !20955
  %195 = load i32, i32* %20, align 4, !dbg !20956
  %196 = sub nsw i32 %195, 16, !dbg !20956
  store i32 %196, i32* %20, align 4, !dbg !20956
  %197 = load i32, i32* %33, align 4, !dbg !20957
  %198 = shl i32 %197, 16, !dbg !20958
  %199 = load i32, i32* %32, align 4, !dbg !20959
  %200 = load i32, i32* %20, align 4, !dbg !20960
  %201 = lshr i32 %199, %200, !dbg !20961
  %202 = or i32 %198, %201, !dbg !20962
  store i32 %202, i32* %33, align 4, !dbg !20963
  %203 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 0, !dbg !20964
  %204 = call i8* @strcpy(i8* %203, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !20965
  br label %213, !dbg !20966

205:                                              ; preds = %174
  store i8 0, i8* %35, align 1, !dbg !20967
  store i8 0, i8* %34, align 1, !dbg !20969
  %206 = load i32, i32* %33, align 4, !dbg !20970
  %207 = load i32, i32* %32, align 4, !dbg !20971
  %208 = load i32, i32* %20, align 4, !dbg !20972
  %209 = lshr i32 %207, %208, !dbg !20973
  %210 = or i32 %206, %209, !dbg !20974
  store i32 %210, i32* %33, align 4, !dbg !20975
  %211 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 0, !dbg !20976
  %212 = call i8* @strcpy(i8* %211, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !20977
  br label %213

213:                                              ; preds = %205, %182
  %214 = load i16, i16* %16, align 2, !dbg !20978
  %215 = zext i16 %214 to i32, !dbg !20978
  %216 = load i32, i32* %20, align 4, !dbg !20979
  %217 = add nsw i32 %216, %215, !dbg !20979
  store i32 %217, i32* %20, align 4, !dbg !20979
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20980
  %219 = icmp ne %struct._IO_FILE* %218, null, !dbg !20982
  br i1 %219, label %220, label %267, !dbg !20983

220:                                              ; preds = %213
  %221 = load i32, i32* %19, align 4, !dbg !20984
  %222 = icmp eq i32 %221, 3, !dbg !20985
  br i1 %222, label %223, label %267, !dbg !20986

223:                                              ; preds = %220
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !20987
  %225 = load i32, i32* %18, align 4, !dbg !20989
  %226 = load i32, i32* %26, align 4, !dbg !20990
  %227 = add i32 %226, 1, !dbg !20991
  %228 = load i32, i32* %27, align 4, !dbg !20992
  %229 = add i32 %228, 1, !dbg !20993
  %230 = load i16, i16* %36, align 2, !dbg !20994
  %231 = zext i16 %230 to i32, !dbg !20994
  %232 = load i32, i32* %28, align 4, !dbg !20995
  %233 = load i32, i32* %29, align 4, !dbg !20996
  %234 = load i8*, i8** %38, align 8, !dbg !20997
  %235 = load i8*, i8** %12, align 8, !dbg !20998
  %236 = ptrtoint i8* %234 to i64, !dbg !20999
  %237 = ptrtoint i8* %235 to i64, !dbg !20999
  %238 = sub i64 %236, %237, !dbg !20999
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %224, i32 %225, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.276, i64 0, i64 0), i32 %227, i32 %229, i32 %231, i32 %232, i32 %233, i64 %238), !dbg !21000
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21001
  %240 = load i32, i32* %18, align 4, !dbg !21002
  %241 = load i32, i32* %31, align 4, !dbg !21003
  %242 = call i32 @dump_long(%struct._IO_FILE* %239, i32 %240, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 %241), !dbg !21004
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21005
  %244 = load i32, i32* %18, align 4, !dbg !21006
  %245 = load i8*, i8** %37, align 8, !dbg !21007
  %246 = call i32 @dump_data(%struct._IO_FILE* %243, i32 %244, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %245, i32 4), !dbg !21008
  %247 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21009
  %248 = load i32, i32* %18, align 4, !dbg !21010
  %249 = load i32, i32* %32, align 4, !dbg !21011
  %250 = call i32 @dump_long(%struct._IO_FILE* %247, i32 %248, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i32 %249), !dbg !21012
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21013
  %252 = load i32, i32* %18, align 4, !dbg !21014
  %253 = load i32, i32* %33, align 4, !dbg !21015
  %254 = call i32 @dump_long(%struct._IO_FILE* %251, i32 %252, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i32 %253), !dbg !21016
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21017
  %256 = load i32, i32* %18, align 4, !dbg !21018
  %257 = load i8, i8* %34, align 1, !dbg !21019
  %258 = call i32 @dump_byte(%struct._IO_FILE* %255, i32 %256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), i8 zeroext %257), !dbg !21020
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21021
  %260 = load i32, i32* %18, align 4, !dbg !21022
  %261 = load i8, i8* %35, align 1, !dbg !21023
  %262 = call i32 @dump_byte(%struct._IO_FILE* %259, i32 %260, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8 zeroext %261), !dbg !21024
  %263 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21025
  %264 = load i32, i32* %18, align 4, !dbg !21026
  %265 = load i32, i32* %20, align 4, !dbg !21027
  %266 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 0, !dbg !21028
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %263, i32 %264, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.301, i64 0, i64 0), i32 %265, i8* %266), !dbg !21029
  br label %267, !dbg !21030

267:                                              ; preds = %223, %220, %213
  br label %268, !dbg !21031

268:                                              ; preds = %267
  %269 = load i16, i16* %36, align 2, !dbg !21032
  %270 = add i16 %269, 1, !dbg !21032
  store i16 %270, i16* %36, align 2, !dbg !21032
  br label %108, !dbg !21033, !llvm.loop !21034

271:                                              ; preds = %108
  br label %272, !dbg !21036

272:                                              ; preds = %271
  %273 = load i32, i32* %27, align 4, !dbg !21037
  %274 = add i32 %273, 1, !dbg !21037
  store i32 %274, i32* %27, align 4, !dbg !21037
  br label %88, !dbg !21038, !llvm.loop !21039

275:                                              ; preds = %88
  br label %276, !dbg !21041

276:                                              ; preds = %279, %275
  %277 = load i32, i32* %20, align 4, !dbg !21042
  %278 = icmp sgt i32 %277, 0, !dbg !21043
  br i1 %278, label %279, label %291, !dbg !21041

279:                                              ; preds = %276
  %280 = load i32, i32* %33, align 4, !dbg !21044
  %281 = lshr i32 %280, 24, !dbg !21046
  %282 = trunc i32 %281 to i8, !dbg !21047
  store i8 %282, i8* %34, align 1, !dbg !21048
  %283 = load i8, i8* %34, align 1, !dbg !21049
  %284 = load i8*, i8** %38, align 8, !dbg !21050
  %285 = getelementptr inbounds i8, i8* %284, i32 1, !dbg !21050
  store i8* %285, i8** %38, align 8, !dbg !21050
  store i8 %283, i8* %284, align 1, !dbg !21051
  %286 = load i32, i32* %33, align 4, !dbg !21052
  %287 = shl i32 %286, 8, !dbg !21053
  store i32 %287, i32* %33, align 4, !dbg !21054
  %288 = load i8, i8* %34, align 1, !dbg !21055
  store i8 %288, i8* %35, align 1, !dbg !21056
  %289 = load i32, i32* %20, align 4, !dbg !21057
  %290 = sub nsw i32 %289, 8, !dbg !21057
  store i32 %290, i32* %20, align 4, !dbg !21057
  br label %276, !dbg !21041, !llvm.loop !21058

291:                                              ; preds = %276
  %292 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21060
  %293 = icmp ne %struct._IO_FILE* %292, null, !dbg !21062
  br i1 %293, label %294, label %338, !dbg !21063

294:                                              ; preds = %291
  %295 = load i32, i32* %19, align 4, !dbg !21064
  %296 = icmp eq i32 %295, 3, !dbg !21065
  br i1 %296, label %297, label %338, !dbg !21066

297:                                              ; preds = %294
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21067
  %299 = load i32, i32* %18, align 4, !dbg !21069
  %300 = load i32, i32* %26, align 4, !dbg !21070
  %301 = add i32 %300, 1, !dbg !21071
  %302 = load i32, i32* %27, align 4, !dbg !21072
  %303 = add i32 %302, 1, !dbg !21073
  %304 = load i32, i32* %28, align 4, !dbg !21074
  %305 = load i32, i32* %29, align 4, !dbg !21075
  %306 = load i8*, i8** %38, align 8, !dbg !21076
  %307 = load i8*, i8** %12, align 8, !dbg !21077
  %308 = ptrtoint i8* %306 to i64, !dbg !21078
  %309 = ptrtoint i8* %307 to i64, !dbg !21078
  %310 = sub i64 %308, %309, !dbg !21078
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %298, i32 %299, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %301, i32 %303, i32 %304, i32 %305, i64 %310), !dbg !21079
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21080
  %312 = load i32, i32* %18, align 4, !dbg !21081
  %313 = load i32, i32* %31, align 4, !dbg !21082
  %314 = call i32 @dump_long(%struct._IO_FILE* %311, i32 %312, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 %313), !dbg !21083
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21084
  %316 = load i32, i32* %18, align 4, !dbg !21085
  %317 = load i8*, i8** %37, align 8, !dbg !21086
  %318 = call i32 @dump_data(%struct._IO_FILE* %315, i32 %316, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %317, i32 4), !dbg !21087
  %319 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21088
  %320 = load i32, i32* %18, align 4, !dbg !21089
  %321 = load i32, i32* %32, align 4, !dbg !21090
  %322 = call i32 @dump_long(%struct._IO_FILE* %319, i32 %320, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i32 %321), !dbg !21091
  %323 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21092
  %324 = load i32, i32* %18, align 4, !dbg !21093
  %325 = load i32, i32* %33, align 4, !dbg !21094
  %326 = call i32 @dump_long(%struct._IO_FILE* %323, i32 %324, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i32 %325), !dbg !21095
  %327 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21096
  %328 = load i32, i32* %18, align 4, !dbg !21097
  %329 = load i8, i8* %34, align 1, !dbg !21098
  %330 = call i32 @dump_byte(%struct._IO_FILE* %327, i32 %328, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), i8 zeroext %329), !dbg !21099
  %331 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21100
  %332 = load i32, i32* %18, align 4, !dbg !21101
  %333 = load i8, i8* %35, align 1, !dbg !21102
  %334 = call i32 @dump_byte(%struct._IO_FILE* %331, i32 %332, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8 zeroext %333), !dbg !21103
  %335 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21104
  %336 = load i32, i32* %18, align 4, !dbg !21105
  %337 = load i32, i32* %20, align 4, !dbg !21106
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %335, i32 %336, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.302, i64 0, i64 0), i32 %337), !dbg !21107
  br label %338, !dbg !21108

338:                                              ; preds = %297, %294, %291
  %339 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21109
  %340 = icmp ne %struct._IO_FILE* %339, null, !dbg !21111
  br i1 %340, label %341, label %358, !dbg !21112

341:                                              ; preds = %338
  %342 = load i32, i32* %19, align 4, !dbg !21113
  %343 = icmp eq i32 %342, 2, !dbg !21114
  br i1 %343, label %344, label %358, !dbg !21115

344:                                              ; preds = %341
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21116
  %346 = load i32, i32* %18, align 4, !dbg !21118
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %345, i32 %346, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.294, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !21119
  %347 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21120
  %348 = load i32, i32* %18, align 4, !dbg !21121
  %349 = load i32, i32* %23, align 4, !dbg !21122
  %350 = load i32, i32* %26, align 4, !dbg !21123
  %351 = load i8*, i8** %12, align 8, !dbg !21124
  %352 = load i32, i32* %26, align 4, !dbg !21125
  %353 = load i32, i32* %23, align 4, !dbg !21126
  %354 = mul i32 %352, %353, !dbg !21127
  %355 = zext i32 %354 to i64, !dbg !21128
  %356 = getelementptr inbounds i8, i8* %351, i64 %355, !dbg !21128
  %357 = call i32 @dump_buffer(%struct._IO_FILE* %347, i32 %348, i32 1, i32 %349, i32 %350, i8* %356), !dbg !21129
  br label %358, !dbg !21130

358:                                              ; preds = %344, %341, %338
  br label %359, !dbg !21131

359:                                              ; preds = %358
  %360 = load i32, i32* %26, align 4, !dbg !21132
  %361 = add i32 %360, 1, !dbg !21132
  store i32 %361, i32* %26, align 4, !dbg !21132
  br label %74, !dbg !21133, !llvm.loop !21134

362:                                              ; preds = %74
  store i32 0, i32* %10, align 4, !dbg !21136
  br label %363, !dbg !21136

363:                                              ; preds = %362, %49
  %364 = load i32, i32* %10, align 4, !dbg !21137
  ret i32 %364, !dbg !21137
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @combineSeparateSamples32bits(i8**, i8*, i32, i32, i16 zeroext, i16 zeroext, %struct._IO_FILE*, i32, i32) #0 !dbg !21138 {
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca %struct._IO_FILE*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i16, align 2
  %43 = alloca i8*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca [8 x i8], align 1
  store i8** %0, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !21139, metadata !DIExpression()), !dbg !21140
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !21141, metadata !DIExpression()), !dbg !21142
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !21143, metadata !DIExpression()), !dbg !21144
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !21145, metadata !DIExpression()), !dbg !21146
  store i16 %4, i16* %15, align 2
  call void @llvm.dbg.declare(metadata i16* %15, metadata !21147, metadata !DIExpression()), !dbg !21148
  store i16 %5, i16* %16, align 2
  call void @llvm.dbg.declare(metadata i16* %16, metadata !21149, metadata !DIExpression()), !dbg !21150
  store %struct._IO_FILE* %6, %struct._IO_FILE** %17, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %17, metadata !21151, metadata !DIExpression()), !dbg !21152
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !21153, metadata !DIExpression()), !dbg !21154
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !21155, metadata !DIExpression()), !dbg !21156
  call void @llvm.dbg.declare(metadata i32* %20, metadata !21157, metadata !DIExpression()), !dbg !21158
  store i32 0, i32* %20, align 4, !dbg !21158
  call void @llvm.dbg.declare(metadata i32* %21, metadata !21159, metadata !DIExpression()), !dbg !21160
  store i32 0, i32* %21, align 4, !dbg !21160
  call void @llvm.dbg.declare(metadata i32* %22, metadata !21161, metadata !DIExpression()), !dbg !21162
  store i32 0, i32* %22, align 4, !dbg !21162
  call void @llvm.dbg.declare(metadata i32* %23, metadata !21163, metadata !DIExpression()), !dbg !21164
  call void @llvm.dbg.declare(metadata i32* %24, metadata !21165, metadata !DIExpression()), !dbg !21166
  call void @llvm.dbg.declare(metadata i32* %25, metadata !21167, metadata !DIExpression()), !dbg !21168
  call void @llvm.dbg.declare(metadata i32* %26, metadata !21169, metadata !DIExpression()), !dbg !21170
  call void @llvm.dbg.declare(metadata i32* %27, metadata !21171, metadata !DIExpression()), !dbg !21172
  store i32 0, i32* %27, align 4, !dbg !21172
  call void @llvm.dbg.declare(metadata i32* %28, metadata !21173, metadata !DIExpression()), !dbg !21174
  store i32 0, i32* %28, align 4, !dbg !21174
  call void @llvm.dbg.declare(metadata i32* %29, metadata !21175, metadata !DIExpression()), !dbg !21176
  call void @llvm.dbg.declare(metadata i32* %30, metadata !21177, metadata !DIExpression()), !dbg !21178
  call void @llvm.dbg.declare(metadata i32* %31, metadata !21179, metadata !DIExpression()), !dbg !21180
  store i32 0, i32* %31, align 4, !dbg !21180
  call void @llvm.dbg.declare(metadata i32* %32, metadata !21181, metadata !DIExpression()), !dbg !21182
  store i32 0, i32* %32, align 4, !dbg !21182
  call void @llvm.dbg.declare(metadata i64* %33, metadata !21183, metadata !DIExpression()), !dbg !21184
  store i64 0, i64* %33, align 8, !dbg !21184
  call void @llvm.dbg.declare(metadata i64* %34, metadata !21185, metadata !DIExpression()), !dbg !21186
  store i64 0, i64* %34, align 8, !dbg !21186
  call void @llvm.dbg.declare(metadata i64* %35, metadata !21187, metadata !DIExpression()), !dbg !21188
  store i64 0, i64* %35, align 8, !dbg !21188
  call void @llvm.dbg.declare(metadata i64* %36, metadata !21189, metadata !DIExpression()), !dbg !21190
  store i64 0, i64* %36, align 8, !dbg !21190
  call void @llvm.dbg.declare(metadata i64* %37, metadata !21191, metadata !DIExpression()), !dbg !21192
  store i64 0, i64* %37, align 8, !dbg !21192
  call void @llvm.dbg.declare(metadata i8* %38, metadata !21193, metadata !DIExpression()), !dbg !21194
  store i8 0, i8* %38, align 1, !dbg !21194
  call void @llvm.dbg.declare(metadata i8* %39, metadata !21195, metadata !DIExpression()), !dbg !21196
  store i8 0, i8* %39, align 1, !dbg !21196
  call void @llvm.dbg.declare(metadata i8* %40, metadata !21197, metadata !DIExpression()), !dbg !21198
  store i8 0, i8* %40, align 1, !dbg !21198
  call void @llvm.dbg.declare(metadata i8* %41, metadata !21199, metadata !DIExpression()), !dbg !21200
  store i8 0, i8* %41, align 1, !dbg !21200
  call void @llvm.dbg.declare(metadata i16* %42, metadata !21201, metadata !DIExpression()), !dbg !21202
  call void @llvm.dbg.declare(metadata i8** %43, metadata !21203, metadata !DIExpression()), !dbg !21204
  %46 = load i8**, i8*** %11, align 8, !dbg !21205
  %47 = getelementptr inbounds i8*, i8** %46, i64 0, !dbg !21205
  %48 = load i8*, i8** %47, align 8, !dbg !21205
  store i8* %48, i8** %43, align 8, !dbg !21204
  call void @llvm.dbg.declare(metadata i8** %44, metadata !21206, metadata !DIExpression()), !dbg !21207
  %49 = load i8*, i8** %12, align 8, !dbg !21208
  store i8* %49, i8** %44, align 8, !dbg !21207
  call void @llvm.dbg.declare(metadata [8 x i8]* %45, metadata !21209, metadata !DIExpression()), !dbg !21210
  %50 = load i8*, i8** %43, align 8, !dbg !21211
  %51 = icmp eq i8* %50, null, !dbg !21213
  br i1 %51, label %55, label %52, !dbg !21214

52:                                               ; preds = %9
  %53 = load i8*, i8** %44, align 8, !dbg !21215
  %54 = icmp eq i8* %53, null, !dbg !21216
  br i1 %54, label %55, label %56, !dbg !21217

55:                                               ; preds = %52, %9
  call void (i8*, i8*, ...) @TIFFError(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.303, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.273, i64 0, i64 0)), !dbg !21218
  store i32 1, i32* %10, align 4, !dbg !21220
  br label %388, !dbg !21220

56:                                               ; preds = %52
  %57 = load i16, i16* %16, align 2, !dbg !21221
  %58 = zext i16 %57 to i32, !dbg !21221
  %59 = add nsw i32 %58, 7, !dbg !21222
  %60 = sdiv i32 %59, 8, !dbg !21223
  store i32 %60, i32* %21, align 4, !dbg !21224
  %61 = load i16, i16* %16, align 2, !dbg !21225
  %62 = zext i16 %61 to i32, !dbg !21225
  %63 = load i32, i32* %13, align 4, !dbg !21226
  %64 = mul i32 %62, %63, !dbg !21227
  %65 = add i32 %64, 7, !dbg !21228
  %66 = udiv i32 %65, 8, !dbg !21229
  store i32 %66, i32* %23, align 4, !dbg !21230
  %67 = load i16, i16* %16, align 2, !dbg !21231
  %68 = zext i16 %67 to i32, !dbg !21231
  %69 = load i32, i32* %13, align 4, !dbg !21232
  %70 = mul i32 %68, %69, !dbg !21233
  %71 = load i16, i16* %15, align 2, !dbg !21234
  %72 = zext i16 %71 to i32, !dbg !21234
  %73 = mul i32 %70, %72, !dbg !21235
  %74 = add i32 %73, 7, !dbg !21236
  %75 = udiv i32 %74, 8, !dbg !21237
  store i32 %75, i32* %24, align 4, !dbg !21238
  %76 = load i16, i16* %16, align 2, !dbg !21239
  %77 = zext i16 %76 to i32, !dbg !21239
  %78 = sub nsw i32 64, %77, !dbg !21240
  %79 = zext i32 %78 to i64, !dbg !21241
  %80 = lshr i64 -1, %79, !dbg !21241
  store i64 %80, i64* %33, align 8, !dbg !21242
  %81 = load i16, i16* %16, align 2, !dbg !21243
  %82 = zext i16 %81 to i32, !dbg !21243
  %83 = add nsw i32 %82, 7, !dbg !21244
  %84 = sdiv i32 %83, 8, !dbg !21245
  %85 = add nsw i32 %84, 1, !dbg !21246
  store i32 %85, i32* %22, align 4, !dbg !21247
  store i32 0, i32* %29, align 4, !dbg !21248
  br label %86, !dbg !21250

86:                                               ; preds = %384, %56
  %87 = load i32, i32* %29, align 4, !dbg !21251
  %88 = load i32, i32* %14, align 4, !dbg !21253
  %89 = icmp ult i32 %87, %88, !dbg !21254
  br i1 %89, label %90, label %387, !dbg !21255

90:                                               ; preds = %86
  store i32 0, i32* %20, align 4, !dbg !21256
  store i64 0, i64* %36, align 8, !dbg !21258
  store i64 0, i64* %35, align 8, !dbg !21259
  %91 = load i8*, i8** %12, align 8, !dbg !21260
  %92 = load i32, i32* %29, align 4, !dbg !21261
  %93 = load i32, i32* %24, align 4, !dbg !21262
  %94 = mul i32 %92, %93, !dbg !21263
  %95 = zext i32 %94 to i64, !dbg !21264
  %96 = getelementptr inbounds i8, i8* %91, i64 %95, !dbg !21264
  store i8* %96, i8** %44, align 8, !dbg !21265
  %97 = load i32, i32* %29, align 4, !dbg !21266
  %98 = load i32, i32* %23, align 4, !dbg !21267
  %99 = mul i32 %97, %98, !dbg !21268
  store i32 %99, i32* %26, align 4, !dbg !21269
  store i32 0, i32* %30, align 4, !dbg !21270
  br label %100, !dbg !21272

100:                                              ; preds = %300, %90
  %101 = load i32, i32* %30, align 4, !dbg !21273
  %102 = load i32, i32* %13, align 4, !dbg !21275
  %103 = icmp ult i32 %101, %102, !dbg !21276
  br i1 %103, label %104, label %303, !dbg !21277

104:                                              ; preds = %100
  %105 = load i32, i32* %30, align 4, !dbg !21278
  %106 = load i16, i16* %16, align 2, !dbg !21280
  %107 = zext i16 %106 to i32, !dbg !21280
  %108 = mul i32 %105, %107, !dbg !21281
  store i32 %108, i32* %25, align 4, !dbg !21282
  %109 = load i32, i32* %25, align 4, !dbg !21283
  %110 = udiv i32 %109, 8, !dbg !21284
  store i32 %110, i32* %27, align 4, !dbg !21285
  %111 = load i32, i32* %25, align 4, !dbg !21286
  %112 = urem i32 %111, 8, !dbg !21287
  store i32 %112, i32* %28, align 4, !dbg !21288
  %113 = load i64, i64* %33, align 8, !dbg !21289
  %114 = load i32, i32* %28, align 4, !dbg !21290
  %115 = sub i32 64, %114, !dbg !21291
  %116 = load i16, i16* %16, align 2, !dbg !21292
  %117 = zext i16 %116 to i32, !dbg !21292
  %118 = sub i32 %115, %117, !dbg !21293
  %119 = zext i32 %118 to i64, !dbg !21294
  %120 = shl i64 %113, %119, !dbg !21294
  store i64 %120, i64* %34, align 8, !dbg !21295
  store i16 0, i16* %42, align 2, !dbg !21296
  br label %121, !dbg !21298

121:                                              ; preds = %296, %104
  %122 = load i16, i16* %42, align 2, !dbg !21299
  %123 = zext i16 %122 to i32, !dbg !21299
  %124 = load i16, i16* %15, align 2, !dbg !21301
  %125 = zext i16 %124 to i32, !dbg !21301
  %126 = icmp slt i32 %123, %125, !dbg !21302
  br i1 %126, label %127, label %299, !dbg !21303

127:                                              ; preds = %121
  %128 = load i8**, i8*** %11, align 8, !dbg !21304
  %129 = load i16, i16* %42, align 2, !dbg !21306
  %130 = zext i16 %129 to i64, !dbg !21304
  %131 = getelementptr inbounds i8*, i8** %128, i64 %130, !dbg !21304
  %132 = load i8*, i8** %131, align 8, !dbg !21304
  %133 = load i32, i32* %26, align 4, !dbg !21307
  %134 = zext i32 %133 to i64, !dbg !21308
  %135 = getelementptr inbounds i8, i8* %132, i64 %134, !dbg !21308
  %136 = load i32, i32* %27, align 4, !dbg !21309
  %137 = zext i32 %136 to i64, !dbg !21310
  %138 = getelementptr inbounds i8, i8* %135, i64 %137, !dbg !21310
  store i8* %138, i8** %43, align 8, !dbg !21311
  %139 = load i32, i32* @little_endian, align 4, !dbg !21312
  %140 = icmp ne i32 %139, 0, !dbg !21312
  br i1 %140, label %141, label %165, !dbg !21314

141:                                              ; preds = %127
  %142 = load i8*, i8** %43, align 8, !dbg !21315
  %143 = getelementptr inbounds i8, i8* %142, i64 0, !dbg !21315
  %144 = load i8, i8* %143, align 1, !dbg !21315
  %145 = zext i8 %144 to i32, !dbg !21315
  %146 = shl i32 %145, 24, !dbg !21317
  %147 = load i8*, i8** %43, align 8, !dbg !21318
  %148 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !21318
  %149 = load i8, i8* %148, align 1, !dbg !21318
  %150 = zext i8 %149 to i32, !dbg !21318
  %151 = shl i32 %150, 16, !dbg !21319
  %152 = or i32 %146, %151, !dbg !21320
  %153 = load i8*, i8** %43, align 8, !dbg !21321
  %154 = getelementptr inbounds i8, i8* %153, i64 2, !dbg !21321
  %155 = load i8, i8* %154, align 1, !dbg !21321
  %156 = zext i8 %155 to i32, !dbg !21321
  %157 = shl i32 %156, 8, !dbg !21322
  %158 = or i32 %152, %157, !dbg !21323
  %159 = load i8*, i8** %43, align 8, !dbg !21324
  %160 = getelementptr inbounds i8, i8* %159, i64 3, !dbg !21324
  %161 = load i8, i8* %160, align 1, !dbg !21324
  %162 = zext i8 %161 to i32, !dbg !21324
  %163 = or i32 %158, %162, !dbg !21325
  store i32 %163, i32* %31, align 4, !dbg !21326
  %164 = load i32, i32* %31, align 4, !dbg !21327
  store i32 %164, i32* %32, align 4, !dbg !21328
  br label %189, !dbg !21329

165:                                              ; preds = %127
  %166 = load i8*, i8** %43, align 8, !dbg !21330
  %167 = getelementptr inbounds i8, i8* %166, i64 3, !dbg !21330
  %168 = load i8, i8* %167, align 1, !dbg !21330
  %169 = zext i8 %168 to i32, !dbg !21330
  %170 = shl i32 %169, 24, !dbg !21332
  %171 = load i8*, i8** %43, align 8, !dbg !21333
  %172 = getelementptr inbounds i8, i8* %171, i64 2, !dbg !21333
  %173 = load i8, i8* %172, align 1, !dbg !21333
  %174 = zext i8 %173 to i32, !dbg !21333
  %175 = shl i32 %174, 16, !dbg !21334
  %176 = or i32 %170, %175, !dbg !21335
  %177 = load i8*, i8** %43, align 8, !dbg !21336
  %178 = getelementptr inbounds i8, i8* %177, i64 1, !dbg !21336
  %179 = load i8, i8* %178, align 1, !dbg !21336
  %180 = zext i8 %179 to i32, !dbg !21336
  %181 = shl i32 %180, 8, !dbg !21337
  %182 = or i32 %176, %181, !dbg !21338
  %183 = load i8*, i8** %43, align 8, !dbg !21339
  %184 = getelementptr inbounds i8, i8* %183, i64 0, !dbg !21339
  %185 = load i8, i8* %184, align 1, !dbg !21339
  %186 = zext i8 %185 to i32, !dbg !21339
  %187 = or i32 %182, %186, !dbg !21340
  store i32 %187, i32* %31, align 4, !dbg !21341
  %188 = load i32, i32* %31, align 4, !dbg !21342
  store i32 %188, i32* %32, align 4, !dbg !21343
  br label %189

189:                                              ; preds = %165, %141
  %190 = load i32, i32* %31, align 4, !dbg !21344
  %191 = zext i32 %190 to i64, !dbg !21345
  %192 = shl i64 %191, 32, !dbg !21346
  %193 = load i32, i32* %32, align 4, !dbg !21347
  %194 = zext i32 %193 to i64, !dbg !21347
  %195 = or i64 %192, %194, !dbg !21348
  store i64 %195, i64* %37, align 8, !dbg !21349
  %196 = load i64, i64* %37, align 8, !dbg !21350
  %197 = load i64, i64* %34, align 8, !dbg !21351
  %198 = and i64 %196, %197, !dbg !21352
  %199 = load i32, i32* %28, align 4, !dbg !21353
  %200 = zext i32 %199 to i64, !dbg !21354
  %201 = shl i64 %198, %200, !dbg !21354
  store i64 %201, i64* %35, align 8, !dbg !21355
  %202 = load i32, i32* %20, align 4, !dbg !21356
  %203 = icmp sge i32 %202, 32, !dbg !21358
  br i1 %203, label %204, label %240, !dbg !21359

204:                                              ; preds = %189
  %205 = load i64, i64* %36, align 8, !dbg !21360
  %206 = lshr i64 %205, 56, !dbg !21362
  %207 = trunc i64 %206 to i8, !dbg !21363
  store i8 %207, i8* %38, align 1, !dbg !21364
  %208 = load i8, i8* %38, align 1, !dbg !21365
  %209 = load i8*, i8** %44, align 8, !dbg !21366
  %210 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !21366
  store i8* %210, i8** %44, align 8, !dbg !21366
  store i8 %208, i8* %209, align 1, !dbg !21367
  %211 = load i64, i64* %36, align 8, !dbg !21368
  %212 = lshr i64 %211, 48, !dbg !21369
  %213 = trunc i64 %212 to i8, !dbg !21370
  store i8 %213, i8* %39, align 1, !dbg !21371
  %214 = load i8, i8* %39, align 1, !dbg !21372
  %215 = load i8*, i8** %44, align 8, !dbg !21373
  %216 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !21373
  store i8* %216, i8** %44, align 8, !dbg !21373
  store i8 %214, i8* %215, align 1, !dbg !21374
  %217 = load i64, i64* %36, align 8, !dbg !21375
  %218 = lshr i64 %217, 40, !dbg !21376
  %219 = trunc i64 %218 to i8, !dbg !21377
  store i8 %219, i8* %40, align 1, !dbg !21378
  %220 = load i8, i8* %40, align 1, !dbg !21379
  %221 = load i8*, i8** %44, align 8, !dbg !21380
  %222 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !21380
  store i8* %222, i8** %44, align 8, !dbg !21380
  store i8 %220, i8* %221, align 1, !dbg !21381
  %223 = load i64, i64* %36, align 8, !dbg !21382
  %224 = lshr i64 %223, 32, !dbg !21383
  %225 = trunc i64 %224 to i8, !dbg !21384
  store i8 %225, i8* %41, align 1, !dbg !21385
  %226 = load i8, i8* %41, align 1, !dbg !21386
  %227 = load i8*, i8** %44, align 8, !dbg !21387
  %228 = getelementptr inbounds i8, i8* %227, i32 1, !dbg !21387
  store i8* %228, i8** %44, align 8, !dbg !21387
  store i8 %226, i8* %227, align 1, !dbg !21388
  %229 = load i32, i32* %20, align 4, !dbg !21389
  %230 = sub nsw i32 %229, 32, !dbg !21389
  store i32 %230, i32* %20, align 4, !dbg !21389
  %231 = load i64, i64* %36, align 8, !dbg !21390
  %232 = shl i64 %231, 32, !dbg !21391
  %233 = load i64, i64* %35, align 8, !dbg !21392
  %234 = load i32, i32* %20, align 4, !dbg !21393
  %235 = zext i32 %234 to i64, !dbg !21394
  %236 = lshr i64 %233, %235, !dbg !21394
  %237 = or i64 %232, %236, !dbg !21395
  store i64 %237, i64* %36, align 8, !dbg !21396
  %238 = getelementptr inbounds [8 x i8], [8 x i8]* %45, i64 0, i64 0, !dbg !21397
  %239 = call i8* @strcpy(i8* %238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0)) #8, !dbg !21398
  br label %249, !dbg !21399

240:                                              ; preds = %189
  store i8 0, i8* %41, align 1, !dbg !21400
  store i8 0, i8* %40, align 1, !dbg !21402
  store i8 0, i8* %39, align 1, !dbg !21403
  store i8 0, i8* %38, align 1, !dbg !21404
  %241 = load i64, i64* %36, align 8, !dbg !21405
  %242 = load i64, i64* %35, align 8, !dbg !21406
  %243 = load i32, i32* %20, align 4, !dbg !21407
  %244 = zext i32 %243 to i64, !dbg !21408
  %245 = lshr i64 %242, %244, !dbg !21408
  %246 = or i64 %241, %245, !dbg !21409
  store i64 %246, i64* %36, align 8, !dbg !21410
  %247 = getelementptr inbounds [8 x i8], [8 x i8]* %45, i64 0, i64 0, !dbg !21411
  %248 = call i8* @strcpy(i8* %247, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.275, i64 0, i64 0)) #8, !dbg !21412
  br label %249

249:                                              ; preds = %240, %204
  %250 = load i16, i16* %16, align 2, !dbg !21413
  %251 = zext i16 %250 to i32, !dbg !21413
  %252 = load i32, i32* %20, align 4, !dbg !21414
  %253 = add nsw i32 %252, %251, !dbg !21414
  store i32 %253, i32* %20, align 4, !dbg !21414
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21415
  %255 = icmp ne %struct._IO_FILE* %254, null, !dbg !21417
  br i1 %255, label %256, label %295, !dbg !21418

256:                                              ; preds = %249
  %257 = load i32, i32* %19, align 4, !dbg !21419
  %258 = icmp eq i32 %257, 3, !dbg !21420
  br i1 %258, label %259, label %295, !dbg !21421

259:                                              ; preds = %256
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21422
  %261 = load i32, i32* %18, align 4, !dbg !21424
  %262 = load i32, i32* %29, align 4, !dbg !21425
  %263 = add i32 %262, 1, !dbg !21426
  %264 = load i32, i32* %30, align 4, !dbg !21427
  %265 = add i32 %264, 1, !dbg !21428
  %266 = load i16, i16* %42, align 2, !dbg !21429
  %267 = zext i16 %266 to i32, !dbg !21429
  %268 = load i32, i32* %27, align 4, !dbg !21430
  %269 = load i32, i32* %28, align 4, !dbg !21431
  %270 = load i8*, i8** %44, align 8, !dbg !21432
  %271 = load i8*, i8** %12, align 8, !dbg !21433
  %272 = ptrtoint i8* %270 to i64, !dbg !21434
  %273 = ptrtoint i8* %271 to i64, !dbg !21434
  %274 = sub i64 %272, %273, !dbg !21434
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %260, i32 %261, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.304, i64 0, i64 0), i32 %263, i32 %265, i32 %267, i32 %268, i32 %269, i64 %274), !dbg !21435
  %275 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21436
  %276 = load i32, i32* %18, align 4, !dbg !21437
  %277 = load i64, i64* %34, align 8, !dbg !21438
  %278 = call i32 @dump_wide(%struct._IO_FILE* %275, i32 %276, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i64 %277), !dbg !21439
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21440
  %280 = load i32, i32* %18, align 4, !dbg !21441
  %281 = load i8*, i8** %43, align 8, !dbg !21442
  %282 = call i32 @dump_data(%struct._IO_FILE* %279, i32 %280, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %281, i32 8), !dbg !21443
  %283 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21444
  %284 = load i32, i32* %18, align 4, !dbg !21445
  %285 = load i64, i64* %35, align 8, !dbg !21446
  %286 = call i32 @dump_wide(%struct._IO_FILE* %283, i32 %284, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i64 %285), !dbg !21447
  %287 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21448
  %288 = load i32, i32* %18, align 4, !dbg !21449
  %289 = load i64, i64* %36, align 8, !dbg !21450
  %290 = call i32 @dump_wide(%struct._IO_FILE* %287, i32 %288, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i64 %289), !dbg !21451
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21452
  %292 = load i32, i32* %18, align 4, !dbg !21453
  %293 = load i32, i32* %20, align 4, !dbg !21454
  %294 = getelementptr inbounds [8 x i8], [8 x i8]* %45, i64 0, i64 0, !dbg !21455
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %291, i32 %292, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.301, i64 0, i64 0), i32 %293, i8* %294), !dbg !21456
  br label %295, !dbg !21457

295:                                              ; preds = %259, %256, %249
  br label %296, !dbg !21458

296:                                              ; preds = %295
  %297 = load i16, i16* %42, align 2, !dbg !21459
  %298 = add i16 %297, 1, !dbg !21459
  store i16 %298, i16* %42, align 2, !dbg !21459
  br label %121, !dbg !21460, !llvm.loop !21461

299:                                              ; preds = %121
  br label %300, !dbg !21463

300:                                              ; preds = %299
  %301 = load i32, i32* %30, align 4, !dbg !21464
  %302 = add i32 %301, 1, !dbg !21464
  store i32 %302, i32* %30, align 4, !dbg !21464
  br label %100, !dbg !21465, !llvm.loop !21466

303:                                              ; preds = %100
  br label %304, !dbg !21468

304:                                              ; preds = %307, %303
  %305 = load i32, i32* %20, align 4, !dbg !21469
  %306 = icmp sgt i32 %305, 0, !dbg !21470
  br i1 %306, label %307, label %318, !dbg !21468

307:                                              ; preds = %304
  %308 = load i64, i64* %36, align 8, !dbg !21471
  %309 = lshr i64 %308, 56, !dbg !21473
  %310 = trunc i64 %309 to i8, !dbg !21474
  store i8 %310, i8* %38, align 1, !dbg !21475
  %311 = load i8, i8* %38, align 1, !dbg !21476
  %312 = load i8*, i8** %44, align 8, !dbg !21477
  %313 = getelementptr inbounds i8, i8* %312, i32 1, !dbg !21477
  store i8* %313, i8** %44, align 8, !dbg !21477
  store i8 %311, i8* %312, align 1, !dbg !21478
  %314 = load i64, i64* %36, align 8, !dbg !21479
  %315 = shl i64 %314, 8, !dbg !21480
  store i64 %315, i64* %36, align 8, !dbg !21481
  %316 = load i32, i32* %20, align 4, !dbg !21482
  %317 = sub nsw i32 %316, 8, !dbg !21482
  store i32 %317, i32* %20, align 4, !dbg !21482
  br label %304, !dbg !21468, !llvm.loop !21483

318:                                              ; preds = %304
  %319 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21485
  %320 = icmp ne %struct._IO_FILE* %319, null, !dbg !21487
  br i1 %320, label %321, label %368, !dbg !21488

321:                                              ; preds = %318
  %322 = load i32, i32* %19, align 4, !dbg !21489
  %323 = icmp eq i32 %322, 3, !dbg !21490
  br i1 %323, label %324, label %368, !dbg !21491

324:                                              ; preds = %321
  %325 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21492
  %326 = load i32, i32* %18, align 4, !dbg !21494
  %327 = load i32, i32* %29, align 4, !dbg !21495
  %328 = add i32 %327, 1, !dbg !21496
  %329 = load i32, i32* %30, align 4, !dbg !21497
  %330 = add i32 %329, 1, !dbg !21498
  %331 = load i32, i32* %27, align 4, !dbg !21499
  %332 = load i32, i32* %28, align 4, !dbg !21500
  %333 = load i8*, i8** %44, align 8, !dbg !21501
  %334 = load i8*, i8** %12, align 8, !dbg !21502
  %335 = ptrtoint i8* %333 to i64, !dbg !21503
  %336 = ptrtoint i8* %334 to i64, !dbg !21503
  %337 = sub i64 %335, %336, !dbg !21503
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %325, i32 %326, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.281, i64 0, i64 0), i32 %328, i32 %330, i32 %331, i32 %332, i64 %337), !dbg !21504
  %338 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21505
  %339 = load i32, i32* %18, align 4, !dbg !21506
  %340 = load i64, i64* %34, align 8, !dbg !21507
  %341 = trunc i64 %340 to i32, !dbg !21507
  %342 = call i32 @dump_long(%struct._IO_FILE* %338, i32 %339, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.295, i64 0, i64 0), i32 %341), !dbg !21508
  %343 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21509
  %344 = load i32, i32* %18, align 4, !dbg !21510
  %345 = load i8*, i8** %43, align 8, !dbg !21511
  %346 = call i32 @dump_data(%struct._IO_FILE* %343, i32 %344, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i64 0, i64 0), i8* %345, i32 4), !dbg !21512
  %347 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21513
  %348 = load i32, i32* %18, align 4, !dbg !21514
  %349 = load i64, i64* %35, align 8, !dbg !21515
  %350 = trunc i64 %349 to i32, !dbg !21515
  %351 = call i32 @dump_long(%struct._IO_FILE* %347, i32 %348, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i64 0, i64 0), i32 %350), !dbg !21516
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21517
  %353 = load i32, i32* %18, align 4, !dbg !21518
  %354 = load i64, i64* %36, align 8, !dbg !21519
  %355 = trunc i64 %354 to i32, !dbg !21519
  %356 = call i32 @dump_long(%struct._IO_FILE* %352, i32 %353, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.298, i64 0, i64 0), i32 %355), !dbg !21520
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21521
  %358 = load i32, i32* %18, align 4, !dbg !21522
  %359 = load i8, i8* %38, align 1, !dbg !21523
  %360 = call i32 @dump_byte(%struct._IO_FILE* %357, i32 %358, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), i8 zeroext %359), !dbg !21524
  %361 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21525
  %362 = load i32, i32* %18, align 4, !dbg !21526
  %363 = load i8, i8* %39, align 1, !dbg !21527
  %364 = call i32 @dump_byte(%struct._IO_FILE* %361, i32 %362, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8 zeroext %363), !dbg !21528
  %365 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21529
  %366 = load i32, i32* %18, align 4, !dbg !21530
  %367 = load i32, i32* %20, align 4, !dbg !21531
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %365, i32 %366, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.302, i64 0, i64 0), i32 %367), !dbg !21532
  br label %368, !dbg !21533

368:                                              ; preds = %324, %321, %318
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21534
  %370 = icmp ne %struct._IO_FILE* %369, null, !dbg !21536
  br i1 %370, label %371, label %383, !dbg !21537

371:                                              ; preds = %368
  %372 = load i32, i32* %19, align 4, !dbg !21538
  %373 = icmp eq i32 %372, 2, !dbg !21539
  br i1 %373, label %374, label %383, !dbg !21540

374:                                              ; preds = %371
  %375 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21541
  %376 = load i32, i32* %18, align 4, !dbg !21543
  call void (%struct._IO_FILE*, i32, i8*, i8*, ...) @dump_info(%struct._IO_FILE* %375, i32 %376, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.303, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)), !dbg !21544
  %377 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !21545
  %378 = load i32, i32* %18, align 4, !dbg !21546
  %379 = load i32, i32* %24, align 4, !dbg !21547
  %380 = load i32, i32* %29, align 4, !dbg !21548
  %381 = load i8*, i8** %12, align 8, !dbg !21549
  %382 = call i32 @dump_buffer(%struct._IO_FILE* %377, i32 %378, i32 1, i32 %379, i32 %380, i8* %381), !dbg !21550
  br label %383, !dbg !21551

383:                                              ; preds = %374, %371, %368
  br label %384, !dbg !21552

384:                                              ; preds = %383
  %385 = load i32, i32* %29, align 4, !dbg !21553
  %386 = add i32 %385, 1, !dbg !21553
  store i32 %386, i32* %29, align 4, !dbg !21553
  br label %86, !dbg !21554, !llvm.loop !21555

387:                                              ; preds = %86
  store i32 0, i32* %10, align 4, !dbg !21557
  br label %388, !dbg !21557

388:                                              ; preds = %387, %55
  %389 = load i32, i32* %10, align 4, !dbg !21558
  ret i32 %389, !dbg !21558
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.ident = !{!644}
!llvm.module.flags = !{!645, !646, !647, !648, !649, !650}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ignore", scope: !2, file: !3, line: 445, type: !110, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.0 (ssh://git@ruisrv:2341/home/git/gitrui/clang.git 2a2e29ecdebf00a4c9bcd9a5db013cd3c911b452) (ssh://git@ruisrv:2341/home/git/gitrui/llvm.git cc301f6696f39515397df004a9c09a3f2ab60254)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !101, globals: !124, nameTableKind: None)
!3 = !DIFile(filename: "tiffcrop.c", directory: "/root/llvm/codesample/real-effectiveness/tiff-4.0.1/tools")
!4 = !{!5, !26, !81, !86}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 125, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../libtiff/tiff.h", directory: "/root/llvm/codesample/real-effectiveness/tiff-4.0.1/tools")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!9 = !DIEnumerator(name: "TIFF_NOTYPE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "TIFF_BYTE", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "TIFF_ASCII", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "TIFF_SHORT", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "TIFF_LONG", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "TIFF_RATIONAL", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "TIFF_SBYTE", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "TIFF_UNDEFINED", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "TIFF_SSHORT", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "TIFF_SLONG", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "TIFF_SRATIONAL", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "TIFF_FLOAT", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "TIFF_DOUBLE", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "TIFF_IFD", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "TIFF_LONG8", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "TIFF_SLONG8", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "TIFF_IFD8", value: 18, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !27, line: 197, baseType: !7, size: 32, elements: !28)
!27 = !DIFile(filename: "../libtiff/tif_dir.h", directory: "/root/llvm/codesample/real-effectiveness/tiff-4.0.1/tools")
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80}
!29 = !DIEnumerator(name: "TIFF_SETGET_UNDEFINED", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "TIFF_SETGET_ASCII", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "TIFF_SETGET_UINT8", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "TIFF_SETGET_SINT8", value: 3, isUnsigned: true)
!33 = !DIEnumerator(name: "TIFF_SETGET_UINT16", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "TIFF_SETGET_SINT16", value: 5, isUnsigned: true)
!35 = !DIEnumerator(name: "TIFF_SETGET_UINT32", value: 6, isUnsigned: true)
!36 = !DIEnumerator(name: "TIFF_SETGET_SINT32", value: 7, isUnsigned: true)
!37 = !DIEnumerator(name: "TIFF_SETGET_UINT64", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "TIFF_SETGET_SINT64", value: 9, isUnsigned: true)
!39 = !DIEnumerator(name: "TIFF_SETGET_FLOAT", value: 10, isUnsigned: true)
!40 = !DIEnumerator(name: "TIFF_SETGET_DOUBLE", value: 11, isUnsigned: true)
!41 = !DIEnumerator(name: "TIFF_SETGET_IFD8", value: 12, isUnsigned: true)
!42 = !DIEnumerator(name: "TIFF_SETGET_INT", value: 13, isUnsigned: true)
!43 = !DIEnumerator(name: "TIFF_SETGET_UINT16_PAIR", value: 14, isUnsigned: true)
!44 = !DIEnumerator(name: "TIFF_SETGET_C0_ASCII", value: 15, isUnsigned: true)
!45 = !DIEnumerator(name: "TIFF_SETGET_C0_UINT8", value: 16, isUnsigned: true)
!46 = !DIEnumerator(name: "TIFF_SETGET_C0_SINT8", value: 17, isUnsigned: true)
!47 = !DIEnumerator(name: "TIFF_SETGET_C0_UINT16", value: 18, isUnsigned: true)
!48 = !DIEnumerator(name: "TIFF_SETGET_C0_SINT16", value: 19, isUnsigned: true)
!49 = !DIEnumerator(name: "TIFF_SETGET_C0_UINT32", value: 20, isUnsigned: true)
!50 = !DIEnumerator(name: "TIFF_SETGET_C0_SINT32", value: 21, isUnsigned: true)
!51 = !DIEnumerator(name: "TIFF_SETGET_C0_UINT64", value: 22, isUnsigned: true)
!52 = !DIEnumerator(name: "TIFF_SETGET_C0_SINT64", value: 23, isUnsigned: true)
!53 = !DIEnumerator(name: "TIFF_SETGET_C0_FLOAT", value: 24, isUnsigned: true)
!54 = !DIEnumerator(name: "TIFF_SETGET_C0_DOUBLE", value: 25, isUnsigned: true)
!55 = !DIEnumerator(name: "TIFF_SETGET_C0_IFD8", value: 26, isUnsigned: true)
!56 = !DIEnumerator(name: "TIFF_SETGET_C16_ASCII", value: 27, isUnsigned: true)
!57 = !DIEnumerator(name: "TIFF_SETGET_C16_UINT8", value: 28, isUnsigned: true)
!58 = !DIEnumerator(name: "TIFF_SETGET_C16_SINT8", value: 29, isUnsigned: true)
!59 = !DIEnumerator(name: "TIFF_SETGET_C16_UINT16", value: 30, isUnsigned: true)
!60 = !DIEnumerator(name: "TIFF_SETGET_C16_SINT16", value: 31, isUnsigned: true)
!61 = !DIEnumerator(name: "TIFF_SETGET_C16_UINT32", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "TIFF_SETGET_C16_SINT32", value: 33, isUnsigned: true)
!63 = !DIEnumerator(name: "TIFF_SETGET_C16_UINT64", value: 34, isUnsigned: true)
!64 = !DIEnumerator(name: "TIFF_SETGET_C16_SINT64", value: 35, isUnsigned: true)
!65 = !DIEnumerator(name: "TIFF_SETGET_C16_FLOAT", value: 36, isUnsigned: true)
!66 = !DIEnumerator(name: "TIFF_SETGET_C16_DOUBLE", value: 37, isUnsigned: true)
!67 = !DIEnumerator(name: "TIFF_SETGET_C16_IFD8", value: 38, isUnsigned: true)
!68 = !DIEnumerator(name: "TIFF_SETGET_C32_ASCII", value: 39, isUnsigned: true)
!69 = !DIEnumerator(name: "TIFF_SETGET_C32_UINT8", value: 40, isUnsigned: true)
!70 = !DIEnumerator(name: "TIFF_SETGET_C32_SINT8", value: 41, isUnsigned: true)
!71 = !DIEnumerator(name: "TIFF_SETGET_C32_UINT16", value: 42, isUnsigned: true)
!72 = !DIEnumerator(name: "TIFF_SETGET_C32_SINT16", value: 43, isUnsigned: true)
!73 = !DIEnumerator(name: "TIFF_SETGET_C32_UINT32", value: 44, isUnsigned: true)
!74 = !DIEnumerator(name: "TIFF_SETGET_C32_SINT32", value: 45, isUnsigned: true)
!75 = !DIEnumerator(name: "TIFF_SETGET_C32_UINT64", value: 46, isUnsigned: true)
!76 = !DIEnumerator(name: "TIFF_SETGET_C32_SINT64", value: 47, isUnsigned: true)
!77 = !DIEnumerator(name: "TIFF_SETGET_C32_FLOAT", value: 48, isUnsigned: true)
!78 = !DIEnumerator(name: "TIFF_SETGET_C32_DOUBLE", value: 49, isUnsigned: true)
!79 = !DIEnumerator(name: "TIFF_SETGET_C32_IFD8", value: 50, isUnsigned: true)
!80 = !DIEnumerator(name: "TIFF_SETGET_OTHER", value: 51, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !27, line: 263, baseType: !7, size: 32, elements: !82)
!82 = !{!83, !84, !85}
!83 = !DIEnumerator(name: "tfiatImage", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "tfiatExif", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "tfiatOther", value: 2, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 46, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!89 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!90 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!91 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!92 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!93 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!94 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!95 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!96 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!97 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!100 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!101 = !{!102, !103, !105, !106, !108, !110, !104, !111, !112, !113, !114, !7, !107, !115, !116, !117, !120, !121, !122, !123}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16", file: !6, line: 72, baseType: !104)
!104 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32", file: !6, line: 75, baseType: !7)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "tdir_t", file: !109, line: 72, baseType: !103)
!109 = !DIFile(filename: "../libtiff/tiffio.h", directory: "/root/llvm/codesample/real-effectiveness/tiff-4.0.1/tools")
!110 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32", file: !6, line: 74, baseType: !110)
!113 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8", file: !6, line: 69, baseType: !107)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64", file: !6, line: 78, baseType: !113)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "tsize_t", file: !109, line: 77, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "tmsize_t", file: !109, line: 67, baseType: !119)
!119 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!120 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!121 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!124 = !{!125, !139, !141, !143, !0, !149, !151, !156, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !537, !572, !577, !587}
!125 = !DIGlobalVariableExpression(var: !126, expr: !DIExpression())
!126 = distinct !DIGlobalVariable(name: "PaperTable", scope: !2, file: !3, line: 339, type: !127, isLocal: false, isDefinition: true)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 15680, elements: !137)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "paperdef", file: !3, line: 329, size: 320, elements: !129)
!129 = !{!130, !134, !135, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !128, file: !3, line: 330, baseType: !131, size: 120)
!131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 120, elements: !132)
!132 = !{!133}
!133 = !DISubrange(count: 15)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !128, file: !3, line: 331, baseType: !120, size: 64, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !128, file: !3, line: 332, baseType: !120, size: 64, offset: 192)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "asratio", scope: !128, file: !3, line: 333, baseType: !120, size: 64, offset: 256)
!137 = !{!138}
!138 = !DISubrange(count: 49)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "quality", scope: !2, file: !3, line: 447, type: !110, isLocal: true, isDefinition: true)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "jpegcolormode", scope: !2, file: !3, line: 449, type: !110, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "usage_info", scope: !2, file: !3, line: 623, type: !145, isLocal: true, isDefinition: true)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 8448, elements: !147)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!147 = !{!148}
!148 = !DISubrange(count: 132)
!149 = !DIGlobalVariableExpression(var: !150, expr: !DIExpression())
!150 = distinct !DIGlobalVariable(name: "outtiled", scope: !2, file: !3, line: 435, type: !110, isLocal: true, isDefinition: true)
!151 = !DIGlobalVariableExpression(var: !152, expr: !DIExpression())
!152 = distinct !DIGlobalVariable(name: "tiffcrop_version_id", scope: !2, file: !3, line: 110, type: !153, isLocal: true, isDefinition: true)
!153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !154)
!154 = !{!155}
!155 = !DISubrange(count: 4)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "tiffcrop_rev_date", scope: !2, file: !3, line: 111, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 88, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 11)
!161 = !DIGlobalVariableExpression(var: !162, expr: !DIExpression())
!162 = distinct !DIGlobalVariable(name: "little_endian", scope: !2, file: !3, line: 453, type: !110, isLocal: true, isDefinition: true)
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "pageNum", scope: !2, file: !3, line: 452, type: !110, isLocal: true, isDefinition: true)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "config", scope: !2, file: !3, line: 439, type: !103, isLocal: true, isDefinition: true)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(name: "defcompression", scope: !2, file: !3, line: 450, type: !103, isLocal: true, isDefinition: true)
!169 = !DIGlobalVariableExpression(var: !170, expr: !DIExpression())
!170 = distinct !DIGlobalVariable(name: "compression", scope: !2, file: !3, line: 440, type: !103, isLocal: true, isDefinition: true)
!171 = !DIGlobalVariableExpression(var: !172, expr: !DIExpression())
!172 = distinct !DIGlobalVariable(name: "defpredictor", scope: !2, file: !3, line: 451, type: !103, isLocal: true, isDefinition: true)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "predictor", scope: !2, file: !3, line: 441, type: !103, isLocal: true, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "fillorder", scope: !2, file: !3, line: 442, type: !103, isLocal: true, isDefinition: true)
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "rowsperstrip", scope: !2, file: !3, line: 443, type: !105, isLocal: true, isDefinition: true)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(name: "tilewidth", scope: !2, file: !3, line: 436, type: !105, isLocal: true, isDefinition: true)
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "tilelength", scope: !2, file: !3, line: 437, type: !105, isLocal: true, isDefinition: true)
!183 = !DIGlobalVariableExpression(var: !184, expr: !DIExpression())
!184 = distinct !DIGlobalVariable(name: "defg3opts", scope: !2, file: !3, line: 446, type: !105, isLocal: true, isDefinition: true)
!185 = !DIGlobalVariableExpression(var: !186, expr: !DIExpression())
!186 = distinct !DIGlobalVariable(name: "g3opts", scope: !2, file: !3, line: 444, type: !105, isLocal: true, isDefinition: true)
!187 = !DIGlobalVariableExpression(var: !188, expr: !DIExpression())
!188 = distinct !DIGlobalVariable(name: "findex", scope: !189, file: !3, line: 2041, type: !110, isLocal: true, isDefinition: true)
!189 = distinct !DISubprogram(name: "update_output_file", scope: !3, file: !3, line: 2038, type: !190, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!190 = !DISubroutineType(types: !191)
!191 = !{!110, !192, !146, !110, !146, !535}
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFF", file: !109, line: 40, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tiff", file: !196, line: 97, size: 8640, elements: !197)
!196 = !DIFile(filename: "../libtiff/tiffiop.h", directory: "/root/llvm/codesample/real-effectiveness/tiff-4.0.1/tools")
!197 = !{!198, !199, !200, !201, !202, !203, !204, !206, !207, !208, !305, !306, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !348, !349, !354, !355, !356, !357, !358, !363, !364, !365, !366, !367, !368, !373, !378, !379, !384, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !409, !414, !415, !420, !421, !426, !431, !436, !441, !443, !446, !447, !524, !533, !534}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "tif_name", scope: !195, file: !196, line: 98, baseType: !146, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "tif_fd", scope: !195, file: !196, line: 99, baseType: !110, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "tif_mode", scope: !195, file: !196, line: 100, baseType: !110, size: 32, offset: 96)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tif_flags", scope: !195, file: !196, line: 101, baseType: !105, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "tif_diroff", scope: !195, file: !196, line: 124, baseType: !115, size: 64, offset: 192)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "tif_nextdiroff", scope: !195, file: !196, line: 125, baseType: !115, size: 64, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "tif_dirlist", scope: !195, file: !196, line: 126, baseType: !205, size: 64, offset: 320)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "tif_dirlistsize", scope: !195, file: !196, line: 127, baseType: !103, size: 16, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "tif_dirnumber", scope: !195, file: !196, line: 128, baseType: !103, size: 16, offset: 400)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "tif_dir", scope: !195, file: !196, line: 129, baseType: !209, size: 2240, offset: 448)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFDirectory", file: !27, line: 119, baseType: !210)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !27, line: 64, size: 2240, elements: !211)
!211 = !{!212, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !234, !235, !236, !237, !238, !239, !240, !241, !245, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !264, !265, !266, !267}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "td_fieldsset", scope: !210, file: !27, line: 67, baseType: !213, size: 256)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 256, elements: !154)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "td_imagewidth", scope: !210, file: !27, line: 69, baseType: !105, size: 32, offset: 256)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "td_imagelength", scope: !210, file: !27, line: 69, baseType: !105, size: 32, offset: 288)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "td_imagedepth", scope: !210, file: !27, line: 69, baseType: !105, size: 32, offset: 320)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "td_tilewidth", scope: !210, file: !27, line: 70, baseType: !105, size: 32, offset: 352)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "td_tilelength", scope: !210, file: !27, line: 70, baseType: !105, size: 32, offset: 384)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "td_tiledepth", scope: !210, file: !27, line: 70, baseType: !105, size: 32, offset: 416)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "td_subfiletype", scope: !210, file: !27, line: 71, baseType: !105, size: 32, offset: 448)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "td_bitspersample", scope: !210, file: !27, line: 72, baseType: !103, size: 16, offset: 480)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "td_sampleformat", scope: !210, file: !27, line: 73, baseType: !103, size: 16, offset: 496)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "td_compression", scope: !210, file: !27, line: 74, baseType: !103, size: 16, offset: 512)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "td_photometric", scope: !210, file: !27, line: 75, baseType: !103, size: 16, offset: 528)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "td_threshholding", scope: !210, file: !27, line: 76, baseType: !103, size: 16, offset: 544)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "td_fillorder", scope: !210, file: !27, line: 77, baseType: !103, size: 16, offset: 560)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "td_orientation", scope: !210, file: !27, line: 78, baseType: !103, size: 16, offset: 576)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "td_samplesperpixel", scope: !210, file: !27, line: 79, baseType: !103, size: 16, offset: 592)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "td_rowsperstrip", scope: !210, file: !27, line: 80, baseType: !105, size: 32, offset: 608)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "td_minsamplevalue", scope: !210, file: !27, line: 81, baseType: !103, size: 16, offset: 640)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "td_maxsamplevalue", scope: !210, file: !27, line: 81, baseType: !103, size: 16, offset: 656)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "td_sminsamplevalue", scope: !210, file: !27, line: 82, baseType: !233, size: 64, offset: 704)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "td_smaxsamplevalue", scope: !210, file: !27, line: 83, baseType: !233, size: 64, offset: 768)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "td_xresolution", scope: !210, file: !27, line: 84, baseType: !121, size: 32, offset: 832)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "td_yresolution", scope: !210, file: !27, line: 84, baseType: !121, size: 32, offset: 864)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "td_resolutionunit", scope: !210, file: !27, line: 85, baseType: !103, size: 16, offset: 896)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "td_planarconfig", scope: !210, file: !27, line: 86, baseType: !103, size: 16, offset: 912)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "td_xposition", scope: !210, file: !27, line: 87, baseType: !121, size: 32, offset: 928)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "td_yposition", scope: !210, file: !27, line: 87, baseType: !121, size: 32, offset: 960)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "td_pagenumber", scope: !210, file: !27, line: 88, baseType: !242, size: 32, offset: 992)
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 32, elements: !243)
!243 = !{!244}
!244 = !DISubrange(count: 2)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "td_colormap", scope: !210, file: !27, line: 89, baseType: !246, size: 192, offset: 1024)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 192, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 3)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "td_halftonehints", scope: !210, file: !27, line: 90, baseType: !242, size: 32, offset: 1216)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "td_extrasamples", scope: !210, file: !27, line: 91, baseType: !103, size: 16, offset: 1248)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "td_sampleinfo", scope: !210, file: !27, line: 92, baseType: !123, size: 64, offset: 1280)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "td_stripsperimage", scope: !210, file: !27, line: 96, baseType: !105, size: 32, offset: 1344)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "td_nstrips", scope: !210, file: !27, line: 97, baseType: !105, size: 32, offset: 1376)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "td_stripoffset", scope: !210, file: !27, line: 98, baseType: !205, size: 64, offset: 1408)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "td_stripbytecount", scope: !210, file: !27, line: 99, baseType: !205, size: 64, offset: 1472)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "td_stripbytecountsorted", scope: !210, file: !27, line: 100, baseType: !110, size: 32, offset: 1536)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "td_nsubifd", scope: !210, file: !27, line: 105, baseType: !103, size: 16, offset: 1568)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "td_subifd", scope: !210, file: !27, line: 106, baseType: !205, size: 64, offset: 1600)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "td_ycbcrsubsampling", scope: !210, file: !27, line: 108, baseType: !242, size: 32, offset: 1664)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "td_ycbcrpositioning", scope: !210, file: !27, line: 109, baseType: !103, size: 16, offset: 1696)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "td_transferfunction", scope: !210, file: !27, line: 111, baseType: !246, size: 192, offset: 1728)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "td_refblackwhite", scope: !210, file: !27, line: 112, baseType: !263, size: 64, offset: 1920)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "td_inknameslen", scope: !210, file: !27, line: 114, baseType: !110, size: 32, offset: 1984)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "td_inknames", scope: !210, file: !27, line: 115, baseType: !146, size: 64, offset: 2048)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "td_customValueCount", scope: !210, file: !27, line: 117, baseType: !110, size: 32, offset: 2112)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "td_customValues", scope: !210, file: !27, line: 118, baseType: !268, size: 64, offset: 2176)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFTagValue", file: !27, line: 37, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !27, line: 33, size: 192, elements: !271)
!271 = !{!272, !303, !304}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !270, file: !27, line: 34, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFField", file: !109, line: 320, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TIFFField", file: !27, line: 276, size: 384, elements: !277)
!277 = !{!278, !279, !281, !282, !284, !285, !287, !288, !289, !290, !291, !292}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "field_tag", scope: !276, file: !27, line: 277, baseType: !105, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "field_readcount", scope: !276, file: !27, line: 278, baseType: !280, size: 16, offset: 32)
!280 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "field_writecount", scope: !276, file: !27, line: 279, baseType: !280, size: 16, offset: 48)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "field_type", scope: !276, file: !27, line: 280, baseType: !283, size: 32, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFDataType", file: !6, line: 143, baseType: !5)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !276, file: !27, line: 281, baseType: !105, size: 32, offset: 96)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "set_field_type", scope: !276, file: !27, line: 282, baseType: !286, size: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFSetGetFieldType", file: !27, line: 250, baseType: !26)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "get_field_type", scope: !276, file: !27, line: 283, baseType: !286, size: 32, offset: 160)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "field_bit", scope: !276, file: !27, line: 284, baseType: !104, size: 16, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "field_oktochange", scope: !276, file: !27, line: 285, baseType: !107, size: 8, offset: 208)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "field_passcount", scope: !276, file: !27, line: 286, baseType: !107, size: 8, offset: 216)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "field_name", scope: !276, file: !27, line: 287, baseType: !146, size: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "field_subfields", scope: !276, file: !27, line: 288, baseType: !293, size: 64, offset: 320)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFFieldArray", file: !109, line: 321, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TIFFFieldArray", file: !27, line: 269, size: 192, elements: !296)
!296 = !{!297, !299, !300, !301}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !295, file: !27, line: 270, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFFieldArrayType", file: !27, line: 267, baseType: !81)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_size", scope: !295, file: !27, line: 271, baseType: !105, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !295, file: !27, line: 272, baseType: !105, size: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !295, file: !27, line: 273, baseType: !302, size: 64, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !270, file: !27, line: 35, baseType: !110, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !270, file: !27, line: 36, baseType: !102, size: 64, offset: 128)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "tif_customdir", scope: !195, file: !196, line: 130, baseType: !209, size: 2240, offset: 2688)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "tif_header", scope: !195, file: !196, line: 135, baseType: !307, size: 128, offset: 4928)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !195, file: !196, line: 131, size: 128, elements: !308)
!308 = !{!309, !315, !322}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !307, file: !196, line: 132, baseType: !310, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFHeaderCommon", file: !6, line: 96, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 93, size: 32, elements: !312)
!312 = !{!313, !314}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_magic", scope: !311, file: !6, line: 94, baseType: !103, size: 16)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_version", scope: !311, file: !6, line: 95, baseType: !103, size: 16, offset: 16)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "classic", scope: !307, file: !196, line: 133, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFHeaderClassic", file: !6, line: 101, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 97, size: 64, elements: !318)
!318 = !{!319, !320, !321}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_magic", scope: !317, file: !6, line: 98, baseType: !103, size: 16)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_version", scope: !317, file: !6, line: 99, baseType: !103, size: 16, offset: 16)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_diroff", scope: !317, file: !6, line: 100, baseType: !105, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "big", scope: !307, file: !196, line: 134, baseType: !323, size: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFHeaderBig", file: !6, line: 108, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 102, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_magic", scope: !324, file: !6, line: 103, baseType: !103, size: 16)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_version", scope: !324, file: !6, line: 104, baseType: !103, size: 16, offset: 16)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_offsetsize", scope: !324, file: !6, line: 105, baseType: !103, size: 16, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_unused", scope: !324, file: !6, line: 106, baseType: !103, size: 16, offset: 48)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tiff_diroff", scope: !324, file: !6, line: 107, baseType: !115, size: 64, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tif_header_size", scope: !195, file: !196, line: 136, baseType: !103, size: 16, offset: 5056)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tif_row", scope: !195, file: !196, line: 137, baseType: !105, size: 32, offset: 5088)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tif_curdir", scope: !195, file: !196, line: 138, baseType: !103, size: 16, offset: 5120)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tif_curstrip", scope: !195, file: !196, line: 139, baseType: !105, size: 32, offset: 5152)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tif_curoff", scope: !195, file: !196, line: 140, baseType: !115, size: 64, offset: 5184)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tif_dataoff", scope: !195, file: !196, line: 141, baseType: !115, size: 64, offset: 5248)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tif_nsubifd", scope: !195, file: !196, line: 143, baseType: !103, size: 16, offset: 5312)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tif_subifdoff", scope: !195, file: !196, line: 144, baseType: !115, size: 64, offset: 5376)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tif_col", scope: !195, file: !196, line: 146, baseType: !105, size: 32, offset: 5440)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tif_curtile", scope: !195, file: !196, line: 147, baseType: !105, size: 32, offset: 5472)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "tif_tilesize", scope: !195, file: !196, line: 148, baseType: !118, size: 64, offset: 5504)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tif_decodestatus", scope: !195, file: !196, line: 150, baseType: !110, size: 32, offset: 5568)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tif_fixuptags", scope: !195, file: !196, line: 151, baseType: !344, size: 64, offset: 5632)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFBoolMethod", file: !196, line: 89, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!110, !193}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tif_setupdecode", scope: !195, file: !196, line: 152, baseType: !344, size: 64, offset: 5696)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tif_predecode", scope: !195, file: !196, line: 153, baseType: !350, size: 64, offset: 5760)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFPreMethod", file: !196, line: 90, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{!110, !193, !103}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tif_setupencode", scope: !195, file: !196, line: 154, baseType: !344, size: 64, offset: 5824)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tif_encodestatus", scope: !195, file: !196, line: 155, baseType: !110, size: 32, offset: 5888)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tif_preencode", scope: !195, file: !196, line: 156, baseType: !350, size: 64, offset: 5952)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tif_postencode", scope: !195, file: !196, line: 157, baseType: !344, size: 64, offset: 6016)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tif_decoderow", scope: !195, file: !196, line: 158, baseType: !359, size: 64, offset: 6080)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFCodeMethod", file: !196, line: 91, baseType: !360)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!110, !193, !116, !118, !103}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tif_encoderow", scope: !195, file: !196, line: 159, baseType: !359, size: 64, offset: 6144)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tif_decodestrip", scope: !195, file: !196, line: 160, baseType: !359, size: 64, offset: 6208)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tif_encodestrip", scope: !195, file: !196, line: 161, baseType: !359, size: 64, offset: 6272)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tif_decodetile", scope: !195, file: !196, line: 162, baseType: !359, size: 64, offset: 6336)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tif_encodetile", scope: !195, file: !196, line: 163, baseType: !359, size: 64, offset: 6400)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "tif_close", scope: !195, file: !196, line: 164, baseType: !369, size: 64, offset: 6464)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFVoidMethod", file: !196, line: 88, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !193}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "tif_seek", scope: !195, file: !196, line: 165, baseType: !374, size: 64, offset: 6528)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFSeekMethod", file: !196, line: 92, baseType: !375)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DISubroutineType(types: !377)
!377 = !{!110, !193, !105}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "tif_cleanup", scope: !195, file: !196, line: 166, baseType: !369, size: 64, offset: 6592)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tif_defstripsize", scope: !195, file: !196, line: 167, baseType: !380, size: 64, offset: 6656)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFStripMethod", file: !196, line: 94, baseType: !381)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{!105, !193, !105}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "tif_deftilesize", scope: !195, file: !196, line: 168, baseType: !385, size: 64, offset: 6720)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFTileMethod", file: !196, line: 95, baseType: !386)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{null, !193, !122, !122}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "tif_data", scope: !195, file: !196, line: 169, baseType: !116, size: 64, offset: 6784)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "tif_scanlinesize", scope: !195, file: !196, line: 171, baseType: !118, size: 64, offset: 6848)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tif_scanlineskew", scope: !195, file: !196, line: 172, baseType: !118, size: 64, offset: 6912)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "tif_rawdata", scope: !195, file: !196, line: 173, baseType: !116, size: 64, offset: 6976)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "tif_rawdatasize", scope: !195, file: !196, line: 174, baseType: !118, size: 64, offset: 7040)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "tif_rawdataoff", scope: !195, file: !196, line: 175, baseType: !118, size: 64, offset: 7104)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "tif_rawdataloaded", scope: !195, file: !196, line: 176, baseType: !118, size: 64, offset: 7168)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "tif_rawcp", scope: !195, file: !196, line: 177, baseType: !116, size: 64, offset: 7232)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "tif_rawcc", scope: !195, file: !196, line: 178, baseType: !118, size: 64, offset: 7296)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "tif_base", scope: !195, file: !196, line: 180, baseType: !116, size: 64, offset: 7360)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tif_size", scope: !195, file: !196, line: 181, baseType: !118, size: 64, offset: 7424)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tif_mapproc", scope: !195, file: !196, line: 182, baseType: !401, size: 64, offset: 7488)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFMapFileProc", file: !109, line: 279, baseType: !402)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DISubroutineType(types: !404)
!404 = !{!110, !405, !406, !407}
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "thandle_t", file: !109, line: 106, baseType: !102)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "toff_t", file: !109, line: 68, baseType: !115)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "tif_unmapproc", scope: !195, file: !196, line: 183, baseType: !410, size: 64, offset: 7552)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFUnmapFileProc", file: !109, line: 280, baseType: !411)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{null, !405, !102, !408}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "tif_clientdata", scope: !195, file: !196, line: 185, baseType: !405, size: 64, offset: 7616)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "tif_readproc", scope: !195, file: !196, line: 186, baseType: !416, size: 64, offset: 7680)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFReadWriteProc", file: !109, line: 275, baseType: !417)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{!118, !405, !102, !118}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "tif_writeproc", scope: !195, file: !196, line: 187, baseType: !416, size: 64, offset: 7744)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "tif_seekproc", scope: !195, file: !196, line: 188, baseType: !422, size: 64, offset: 7808)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFSeekProc", file: !109, line: 276, baseType: !423)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{!408, !405, !408, !110}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "tif_closeproc", scope: !195, file: !196, line: 189, baseType: !427, size: 64, offset: 7872)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFCloseProc", file: !109, line: 277, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{!110, !405}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "tif_sizeproc", scope: !195, file: !196, line: 190, baseType: !432, size: 64, offset: 7936)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFSizeProc", file: !109, line: 278, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!408, !405}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "tif_postdecode", scope: !195, file: !196, line: 192, baseType: !437, size: 64, offset: 8000)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFPostMethod", file: !196, line: 93, baseType: !438)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{null, !193, !116, !118}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "tif_fields", scope: !195, file: !196, line: 194, baseType: !442, size: 64, offset: 8064)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "tif_nfields", scope: !195, file: !196, line: 195, baseType: !444, size: 64, offset: 8128)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !445, line: 62, baseType: !113)
!445 = !DIFile(filename: "build-bufferoverflow-llvm90-lto/lib/clang/9.0.0/include/stddef.h", directory: "/root/llvm")
!446 = !DIDerivedType(tag: DW_TAG_member, name: "tif_foundfield", scope: !195, file: !196, line: 196, baseType: !273, size: 64, offset: 8192)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "tif_tagmethods", scope: !195, file: !196, line: 197, baseType: !448, size: 192, offset: 8256)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFTagMethods", file: !109, line: 335, baseType: !449)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !109, line: 331, size: 192, elements: !450)
!450 = !{!451, !463, !465}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "vsetfield", scope: !449, file: !109, line: 332, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFVSetMethod", file: !109, line: 327, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{!110, !193, !105, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 2114, size: 192, elements: !458)
!458 = !{!459, !460, !461, !462}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !457, file: !3, line: 2114, baseType: !7, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !457, file: !3, line: 2114, baseType: !7, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !457, file: !3, line: 2114, baseType: !102, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !457, file: !3, line: 2114, baseType: !102, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "vgetfield", scope: !449, file: !109, line: 333, baseType: !464, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFVGetMethod", file: !109, line: 328, baseType: !453)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "printdir", scope: !449, file: !109, line: 334, baseType: !466, size: 64, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFPrintMethod", file: !109, line: 329, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{null, !193, !470, !119}
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !472, line: 48, baseType: !473)
!472 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !474, line: 241, size: 1728, elements: !475)
!474 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !496, !497, !498, !499, !502, !503, !505, !509, !512, !514, !515, !516, !517, !518, !519, !520}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !473, file: !474, line: 242, baseType: !110, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !473, file: !474, line: 247, baseType: !146, size: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !473, file: !474, line: 248, baseType: !146, size: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !473, file: !474, line: 249, baseType: !146, size: 64, offset: 192)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !473, file: !474, line: 250, baseType: !146, size: 64, offset: 256)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !473, file: !474, line: 251, baseType: !146, size: 64, offset: 320)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !473, file: !474, line: 252, baseType: !146, size: 64, offset: 384)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !473, file: !474, line: 253, baseType: !146, size: 64, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !473, file: !474, line: 254, baseType: !146, size: 64, offset: 512)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !473, file: !474, line: 256, baseType: !146, size: 64, offset: 576)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !473, file: !474, line: 257, baseType: !146, size: 64, offset: 640)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !473, file: !474, line: 258, baseType: !146, size: 64, offset: 704)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !473, file: !474, line: 260, baseType: !489, size: 64, offset: 768)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !474, line: 156, size: 192, elements: !491)
!491 = !{!492, !493, !495}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !490, file: !474, line: 157, baseType: !489, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !490, file: !474, line: 158, baseType: !494, size: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !490, file: !474, line: 162, baseType: !110, size: 32, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !473, file: !474, line: 262, baseType: !494, size: 64, offset: 832)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !473, file: !474, line: 264, baseType: !110, size: 32, offset: 896)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !473, file: !474, line: 268, baseType: !110, size: 32, offset: 928)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !473, file: !474, line: 270, baseType: !500, size: 64, offset: 960)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !501, line: 131, baseType: !119)
!501 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !473, file: !474, line: 274, baseType: !104, size: 16, offset: 1024)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !473, file: !474, line: 275, baseType: !504, size: 8, offset: 1040)
!504 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !473, file: !474, line: 276, baseType: !506, size: 8, offset: 1048)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 8, elements: !507)
!507 = !{!508}
!508 = !DISubrange(count: 1)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !473, file: !474, line: 280, baseType: !510, size: 64, offset: 1088)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !474, line: 150, baseType: null)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !473, file: !474, line: 289, baseType: !513, size: 64, offset: 1152)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !501, line: 132, baseType: !119)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !473, file: !474, line: 297, baseType: !102, size: 64, offset: 1216)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !473, file: !474, line: 298, baseType: !102, size: 64, offset: 1280)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !473, file: !474, line: 299, baseType: !102, size: 64, offset: 1344)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !473, file: !474, line: 300, baseType: !102, size: 64, offset: 1408)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !473, file: !474, line: 302, baseType: !444, size: 64, offset: 1472)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !473, file: !474, line: 303, baseType: !110, size: 32, offset: 1536)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !473, file: !474, line: 305, baseType: !521, size: 160, offset: 1568)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 160, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 20)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "tif_clientinfo", scope: !195, file: !196, line: 198, baseType: !525, size: 64, offset: 8448)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIFFClientInfoLink", file: !196, line: 79, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client_info", file: !196, line: 75, size: 192, elements: !528)
!528 = !{!529, !531, !532}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !527, file: !196, line: 76, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !527, file: !196, line: 77, baseType: !102, size: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !527, file: !196, line: 78, baseType: !146, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tif_fieldscompat", scope: !195, file: !196, line: 201, baseType: !293, size: 64, offset: 8512)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "tif_nfieldscompat", scope: !195, file: !196, line: 202, baseType: !444, size: 64, offset: 8576)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!536 = !{}
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "prev_readsize", scope: !539, file: !3, line: 5737, type: !105, isLocal: true, isDefinition: true)
!539 = distinct !DISubprogram(name: "loadImage", scope: !3, file: !3, line: 5721, type: !540, scopeLine: 5722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!540 = !DISubroutineType(types: !541)
!541 = !{!110, !193, !542, !557, !571}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "image_data", file: !3, line: 392, size: 256, elements: !544)
!544 = !{!545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !543, file: !3, line: 393, baseType: !121, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !543, file: !3, line: 394, baseType: !121, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !543, file: !3, line: 395, baseType: !105, size: 32, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !543, file: !3, line: 396, baseType: !105, size: 32, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "res_unit", scope: !543, file: !3, line: 397, baseType: !103, size: 16, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !543, file: !3, line: 398, baseType: !103, size: 16, offset: 144)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "spp", scope: !543, file: !3, line: 399, baseType: !103, size: 16, offset: 160)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "planar", scope: !543, file: !3, line: 400, baseType: !103, size: 16, offset: 176)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "photometric", scope: !543, file: !3, line: 401, baseType: !103, size: 16, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !543, file: !3, line: 402, baseType: !103, size: 16, offset: 208)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !543, file: !3, line: 403, baseType: !103, size: 16, offset: 224)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "adjustments", scope: !543, file: !3, line: 404, baseType: !103, size: 16, offset: 240)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dump_opts", file: !3, line: 423, size: 65856, elements: !559)
!559 = !{!560, !561, !562, !563, !564, !568, !569, !570}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !558, file: !3, line: 424, baseType: !110, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !558, file: !3, line: 425, baseType: !110, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !558, file: !3, line: 426, baseType: !110, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !558, file: !3, line: 427, baseType: !153, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "infilename", scope: !558, file: !3, line: 428, baseType: !565, size: 32776, offset: 128)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32776, elements: !566)
!566 = !{!567}
!567 = !DISubrange(count: 4097)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "outfilename", scope: !558, file: !3, line: 429, baseType: !565, size: 32776, offset: 32904)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "infile", scope: !558, file: !3, line: 430, baseType: !470, size: 64, offset: 65728)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "outfile", scope: !558, file: !3, line: 431, baseType: !470, size: 64, offset: 65792)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "prev_sectsize", scope: !574, file: !3, line: 7167, type: !105, isLocal: true, isDefinition: true)
!574 = distinct !DISubprogram(name: "createImageSection", scope: !3, file: !3, line: 7163, type: !575, scopeLine: 7164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!575 = !DISubroutineType(types: !576)
!576 = !{!110, !105, !571}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "tags", scope: !2, file: !3, line: 1491, type: !579, isLocal: true, isDefinition: true)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 2112, elements: !585)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpTag", file: !3, line: 1487, size: 64, elements: !581)
!581 = !{!582, !583, !584}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !580, file: !3, line: 1488, baseType: !103, size: 16)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !580, file: !3, line: 1489, baseType: !103, size: 16, offset: 16)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !580, file: !3, line: 1490, baseType: !283, size: 32, offset: 32)
!585 = !{!586}
!586 = !DISubrange(count: 33)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "prev_cropsize", scope: !589, file: !3, line: 7450, type: !117, isLocal: true, isDefinition: true)
!589 = distinct !DISubprogram(name: "createCroppedImage", scope: !3, file: !3, line: 7443, type: !590, scopeLine: 7445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!590 = !DISubroutineType(types: !591)
!591 = !{!110, !542, !592, !571, !571}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crop_mask", file: !3, line: 280, size: 5952, elements: !594)
!594 = !{!595, !596, !597, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !629, !630, !636}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !593, file: !3, line: 281, baseType: !120, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !593, file: !3, line: 282, baseType: !120, size: 64, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !593, file: !3, line: 283, baseType: !598, size: 256, offset: 128)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !154)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !593, file: !3, line: 284, baseType: !121, size: 32, offset: 384)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !593, file: !3, line: 285, baseType: !121, size: 32, offset: 416)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "combined_width", scope: !593, file: !3, line: 286, baseType: !105, size: 32, offset: 448)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "combined_length", scope: !593, file: !3, line: 287, baseType: !105, size: 32, offset: 480)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "bufftotal", scope: !593, file: !3, line: 288, baseType: !105, size: 32, offset: 512)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "img_mode", scope: !593, file: !3, line: 289, baseType: !103, size: 16, offset: 544)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "exp_mode", scope: !593, file: !3, line: 290, baseType: !103, size: 16, offset: 560)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "crop_mode", scope: !593, file: !3, line: 291, baseType: !103, size: 16, offset: 576)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "res_unit", scope: !593, file: !3, line: 292, baseType: !103, size: 16, offset: 592)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "edge_ref", scope: !593, file: !3, line: 293, baseType: !103, size: 16, offset: 608)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !593, file: !3, line: 294, baseType: !103, size: 16, offset: 624)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "mirror", scope: !593, file: !3, line: 295, baseType: !103, size: 16, offset: 640)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !593, file: !3, line: 296, baseType: !103, size: 16, offset: 656)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "photometric", scope: !593, file: !3, line: 297, baseType: !103, size: 16, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "selections", scope: !593, file: !3, line: 298, baseType: !103, size: 16, offset: 688)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "regions", scope: !593, file: !3, line: 299, baseType: !103, size: 16, offset: 704)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "regionlist", scope: !593, file: !3, line: 300, baseType: !616, size: 2560, offset: 768)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !617, size: 2560, elements: !627)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "region", file: !3, line: 265, size: 320, elements: !618)
!618 = !{!619, !620, !621, !622, !623, !624, !625, !626}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !617, file: !3, line: 266, baseType: !105, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !617, file: !3, line: 267, baseType: !105, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !617, file: !3, line: 268, baseType: !105, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !617, file: !3, line: 269, baseType: !105, size: 32, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !617, file: !3, line: 270, baseType: !105, size: 32, offset: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !617, file: !3, line: 271, baseType: !105, size: 32, offset: 160)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "buffsize", scope: !617, file: !3, line: 272, baseType: !105, size: 32, offset: 192)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "buffptr", scope: !617, file: !3, line: 273, baseType: !106, size: 64, offset: 256)
!627 = !{!628}
!628 = !DISubrange(count: 8)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "zones", scope: !593, file: !3, line: 301, baseType: !103, size: 16, offset: 3328)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "zonelist", scope: !593, file: !3, line: 302, baseType: !631, size: 512, offset: 3360)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 512, elements: !627)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zone", file: !3, line: 243, size: 64, elements: !633)
!633 = !{!634, !635}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !632, file: !3, line: 244, baseType: !110, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !632, file: !3, line: 245, baseType: !110, size: 32, offset: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !593, file: !3, line: 303, baseType: !637, size: 2048, offset: 3904)
!637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 2048, elements: !627)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coordpairs", file: !3, line: 258, size: 256, elements: !639)
!639 = !{!640, !641, !642, !643}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "X1", scope: !638, file: !3, line: 259, baseType: !120, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "X2", scope: !638, file: !3, line: 260, baseType: !120, size: 64, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "Y1", scope: !638, file: !3, line: 261, baseType: !120, size: 64, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "Y2", scope: !638, file: !3, line: 262, baseType: !120, size: 64, offset: 192)
!644 = !{!"clang version 9.0.0 (ssh://git@ruisrv:2341/home/git/gitrui/clang.git 2a2e29ecdebf00a4c9bcd9a5db013cd3c911b452) (ssh://git@ruisrv:2341/home/git/gitrui/llvm.git cc301f6696f39515397df004a9c09a3f2ab60254)"}
!645 = !{i32 2, !"Dwarf Version", i32 4}
!646 = !{i32 2, !"Debug Info Version", i32 3}
!647 = !{i32 1, !"wchar_size", i32 4}
!648 = !{i32 7, !"PIC Level", i32 2}
!649 = !{i32 1, !"ThinLTO", i32 0}
!650 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!651 = distinct !DISubprogram(name: "process_command_opts", scope: !3, file: !3, line: 1531, type: !652, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !536)
!652 = !DISubroutineType(types: !653)
!653 = !{null, !110, !654, !146, !146, !122, !123, !123, !122, !122, !122, !592, !655, !557, !535, !535}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pagedef", file: !3, line: 408, size: 704, elements: !657)
!657 = !{!658, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !656, file: !3, line: 409, baseType: !659, size: 128)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 128, elements: !660)
!660 = !{!661}
!661 = !DISubrange(count: 16)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !656, file: !3, line: 410, baseType: !120, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !656, file: !3, line: 411, baseType: !120, size: 64, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "hmargin", scope: !656, file: !3, line: 412, baseType: !120, size: 64, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "vmargin", scope: !656, file: !3, line: 413, baseType: !120, size: 64, offset: 320)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "hres", scope: !656, file: !3, line: 414, baseType: !120, size: 64, offset: 384)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "vres", scope: !656, file: !3, line: 415, baseType: !120, size: 64, offset: 448)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !656, file: !3, line: 416, baseType: !105, size: 32, offset: 512)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "res_unit", scope: !656, file: !3, line: 417, baseType: !103, size: 16, offset: 544)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !656, file: !3, line: 418, baseType: !7, size: 32, offset: 576)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "cols", scope: !656, file: !3, line: 419, baseType: !7, size: 32, offset: 608)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "orient", scope: !656, file: !3, line: 420, baseType: !7, size: 32, offset: 640)
!673 = !DILocalVariable(name: "argc", arg: 1, scope: !651, file: !3, line: 1531, type: !110)
!674 = !DILocation(line: 1531, column: 33, scope: !651)
!675 = !DILocalVariable(name: "argv", arg: 2, scope: !651, file: !3, line: 1531, type: !654)
!676 = !DILocation(line: 1531, column: 45, scope: !651)
!677 = !DILocalVariable(name: "mp", arg: 3, scope: !651, file: !3, line: 1531, type: !146)
!678 = !DILocation(line: 1531, column: 59, scope: !651)
!679 = !DILocalVariable(name: "mode", arg: 4, scope: !651, file: !3, line: 1531, type: !146)
!680 = !DILocation(line: 1531, column: 69, scope: !651)
!681 = !DILocalVariable(name: "dirnum", arg: 5, scope: !651, file: !3, line: 1531, type: !122)
!682 = !DILocation(line: 1531, column: 83, scope: !651)
!683 = !DILocalVariable(name: "defconfig", arg: 6, scope: !651, file: !3, line: 1532, type: !123)
!684 = !DILocation(line: 1532, column: 30, scope: !651)
!685 = !DILocalVariable(name: "deffillorder", arg: 7, scope: !651, file: !3, line: 1532, type: !123)
!686 = !DILocation(line: 1532, column: 49, scope: !651)
!687 = !DILocalVariable(name: "deftilewidth", arg: 8, scope: !651, file: !3, line: 1532, type: !122)
!688 = !DILocation(line: 1532, column: 71, scope: !651)
!689 = !DILocalVariable(name: "deftilelength", arg: 9, scope: !651, file: !3, line: 1533, type: !122)
!690 = !DILocation(line: 1533, column: 37, scope: !651)
!691 = !DILocalVariable(name: "defrowsperstrip", arg: 10, scope: !651, file: !3, line: 1533, type: !122)
!692 = !DILocation(line: 1533, column: 60, scope: !651)
!693 = !DILocalVariable(name: "crop_data", arg: 11, scope: !651, file: !3, line: 1534, type: !592)
!694 = !DILocation(line: 1534, column: 33, scope: !651)
!695 = !DILocalVariable(name: "page", arg: 12, scope: !651, file: !3, line: 1534, type: !655)
!696 = !DILocation(line: 1534, column: 60, scope: !651)
!697 = !DILocalVariable(name: "dump", arg: 13, scope: !651, file: !3, line: 1535, type: !557)
!698 = !DILocation(line: 1535, column: 47, scope: !651)
!699 = !DILocalVariable(name: "imagelist", arg: 14, scope: !651, file: !3, line: 1536, type: !535)
!700 = !DILocation(line: 1536, column: 47, scope: !651)
!701 = !DILocalVariable(name: "image_count", arg: 15, scope: !651, file: !3, line: 1536, type: !535)
!702 = !DILocation(line: 1536, column: 74, scope: !651)
!703 = !DILocalVariable(name: "c", scope: !651, file: !3, line: 1538, type: !110)
!704 = !DILocation(line: 1538, column: 11, scope: !651)
!705 = !DILocalVariable(name: "good_args", scope: !651, file: !3, line: 1538, type: !110)
!706 = !DILocation(line: 1538, column: 14, scope: !651)
!707 = !DILocalVariable(name: "opt_offset", scope: !651, file: !3, line: 1539, type: !146)
!708 = !DILocation(line: 1539, column: 11, scope: !651)
!709 = !DILocalVariable(name: "opt_ptr", scope: !651, file: !3, line: 1540, type: !146)
!710 = !DILocation(line: 1540, column: 11, scope: !651)
!711 = !DILocalVariable(name: "sep", scope: !651, file: !3, line: 1541, type: !146)
!712 = !DILocation(line: 1541, column: 11, scope: !651)
!713 = !DILocalVariable(name: "i", scope: !651, file: !3, line: 1542, type: !7)
!714 = !DILocation(line: 1542, column: 19, scope: !651)
!715 = !DILocalVariable(name: "j", scope: !651, file: !3, line: 1542, type: !7)
!716 = !DILocation(line: 1542, column: 22, scope: !651)
!717 = !DILocalVariable(name: "start", scope: !651, file: !3, line: 1542, type: !7)
!718 = !DILocation(line: 1542, column: 25, scope: !651)
!719 = !DILocalVariable(name: "end", scope: !651, file: !3, line: 1542, type: !7)
!720 = !DILocation(line: 1542, column: 32, scope: !651)
!721 = !DILocation(line: 1546, column: 8, scope: !651)
!722 = !DILocation(line: 1546, column: 11, scope: !651)
!723 = !DILocation(line: 1547, column: 6, scope: !651)
!724 = !DILocation(line: 1547, column: 9, scope: !651)
!725 = !DILocation(line: 1548, column: 5, scope: !651)
!726 = !DILocation(line: 1548, column: 24, scope: !651)
!727 = !DILocation(line: 1548, column: 30, scope: !651)
!728 = !DILocation(line: 1548, column: 17, scope: !651)
!729 = !DILocation(line: 1548, column: 15, scope: !651)
!730 = !DILocation(line: 1549, column: 77, scope: !651)
!731 = !DILocation(line: 1551, column: 14, scope: !732)
!732 = distinct !DILexicalBlock(scope: !651, file: !3, line: 1550, column: 7)
!733 = !DILocation(line: 1552, column: 13, scope: !732)
!734 = !DILocation(line: 1552, column: 5, scope: !732)
!735 = !DILocation(line: 1553, column: 17, scope: !736)
!736 = distinct !DILexicalBlock(scope: !732, file: !3, line: 1552, column: 16)
!737 = !DILocation(line: 1553, column: 25, scope: !736)
!738 = !DILocation(line: 1554, column: 3, scope: !736)
!739 = !DILocation(line: 1555, column: 45, scope: !740)
!740 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1555, column: 21)
!741 = !DILocation(line: 1555, column: 22, scope: !740)
!742 = !DILocation(line: 1555, column: 21, scope: !736)
!743 = !DILocation(line: 1557, column: 52, scope: !744)
!744 = distinct !DILexicalBlock(scope: !740, file: !3, line: 1556, column: 5)
!745 = !DILocation(line: 1557, column: 5, scope: !744)
!746 = !DILocation(line: 1558, column: 19, scope: !744)
!747 = !DILocation(line: 1559, column: 19, scope: !744)
!748 = !DILocation(line: 1561, column: 3, scope: !736)
!749 = !DILocation(line: 1562, column: 33, scope: !736)
!750 = !DILocation(line: 1562, column: 25, scope: !736)
!751 = !DILocation(line: 1562, column: 23, scope: !736)
!752 = !DILocation(line: 1563, column: 14, scope: !753)
!753 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1563, column: 14)
!754 = !DILocation(line: 1563, column: 20, scope: !753)
!755 = !DILocation(line: 1563, column: 14, scope: !736)
!756 = !DILocation(line: 1565, column: 5, scope: !757)
!757 = distinct !DILexicalBlock(scope: !753, file: !3, line: 1564, column: 19)
!758 = !DILocation(line: 1566, column: 5, scope: !757)
!759 = !DILocation(line: 1567, column: 19, scope: !757)
!760 = !DILocation(line: 1569, column: 20, scope: !736)
!761 = !DILocation(line: 1569, column: 26, scope: !736)
!762 = !DILocation(line: 1569, column: 11, scope: !736)
!763 = !DILocation(line: 1569, column: 18, scope: !736)
!764 = !DILocation(line: 1570, column: 3, scope: !736)
!765 = !DILocation(line: 1571, column: 33, scope: !736)
!766 = !DILocation(line: 1571, column: 25, scope: !736)
!767 = !DILocation(line: 1571, column: 17, scope: !736)
!768 = !DILocation(line: 1573, column: 15, scope: !769)
!769 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1572, column: 19)
!770 = !DILocation(line: 1573, column: 26, scope: !769)
!771 = !DILocation(line: 1573, column: 35, scope: !769)
!772 = !DILocation(line: 1574, column: 16, scope: !769)
!773 = !DILocation(line: 1574, column: 27, scope: !769)
!774 = !DILocation(line: 1574, column: 36, scope: !769)
!775 = !DILocation(line: 1575, column: 15, scope: !769)
!776 = !DILocation(line: 1576, column: 15, scope: !769)
!777 = !DILocation(line: 1576, column: 26, scope: !769)
!778 = !DILocation(line: 1576, column: 35, scope: !769)
!779 = !DILocation(line: 1577, column: 16, scope: !769)
!780 = !DILocation(line: 1577, column: 27, scope: !769)
!781 = !DILocation(line: 1577, column: 36, scope: !769)
!782 = !DILocation(line: 1578, column: 15, scope: !769)
!783 = !DILocation(line: 1579, column: 15, scope: !769)
!784 = !DILocation(line: 1579, column: 26, scope: !769)
!785 = !DILocation(line: 1579, column: 35, scope: !769)
!786 = !DILocation(line: 1580, column: 16, scope: !769)
!787 = !DILocation(line: 1580, column: 27, scope: !769)
!788 = !DILocation(line: 1580, column: 36, scope: !769)
!789 = !DILocation(line: 1581, column: 15, scope: !769)
!790 = !DILocation(line: 1582, column: 15, scope: !769)
!791 = !DILocation(line: 1582, column: 26, scope: !769)
!792 = !DILocation(line: 1582, column: 35, scope: !769)
!793 = !DILocation(line: 1583, column: 16, scope: !769)
!794 = !DILocation(line: 1583, column: 27, scope: !769)
!795 = !DILocation(line: 1583, column: 36, scope: !769)
!796 = !DILocation(line: 1584, column: 15, scope: !769)
!797 = !DILocation(line: 1585, column: 15, scope: !769)
!798 = !DILocation(line: 1585, column: 26, scope: !769)
!799 = !DILocation(line: 1585, column: 35, scope: !769)
!800 = !DILocation(line: 1586, column: 16, scope: !769)
!801 = !DILocation(line: 1586, column: 27, scope: !769)
!802 = !DILocation(line: 1586, column: 36, scope: !769)
!803 = !DILocation(line: 1587, column: 15, scope: !769)
!804 = !DILocation(line: 1588, column: 54, scope: !769)
!805 = !DILocation(line: 1588, column: 15, scope: !769)
!806 = !DILocation(line: 1589, column: 29, scope: !769)
!807 = !DILocation(line: 1590, column: 29, scope: !769)
!808 = !DILocation(line: 1592, column: 10, scope: !736)
!809 = !DILocation(line: 1593, column: 21, scope: !810)
!810 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1593, column: 21)
!811 = !DILocation(line: 1593, column: 21, scope: !736)
!812 = !DILocation(line: 1594, column: 6, scope: !810)
!813 = !DILocation(line: 1594, column: 19, scope: !810)
!814 = !DILocation(line: 1594, column: 5, scope: !810)
!815 = !DILocation(line: 1595, column: 12, scope: !816)
!816 = distinct !DILexicalBlock(scope: !810, file: !3, line: 1595, column: 12)
!817 = !DILocation(line: 1595, column: 12, scope: !810)
!818 = !DILocation(line: 1596, column: 6, scope: !816)
!819 = !DILocation(line: 1596, column: 19, scope: !816)
!820 = !DILocation(line: 1596, column: 5, scope: !816)
!821 = !DILocation(line: 1599, column: 44, scope: !822)
!822 = distinct !DILexicalBlock(scope: !816, file: !3, line: 1598, column: 5)
!823 = !DILocation(line: 1599, column: 5, scope: !822)
!824 = !DILocation(line: 1600, column: 19, scope: !822)
!825 = !DILocation(line: 1601, column: 19, scope: !822)
!826 = !DILocation(line: 1603, column: 3, scope: !736)
!827 = !DILocation(line: 1604, column: 17, scope: !736)
!828 = !DILocation(line: 1605, column: 3, scope: !736)
!829 = !DILocation(line: 1606, column: 24, scope: !736)
!830 = !DILocation(line: 1607, column: 3, scope: !736)
!831 = !DILocation(line: 1608, column: 26, scope: !736)
!832 = !DILocation(line: 1609, column: 25, scope: !736)
!833 = !DILocation(line: 1609, column: 20, scope: !736)
!834 = !DILocation(line: 1609, column: 4, scope: !736)
!835 = !DILocation(line: 1609, column: 18, scope: !736)
!836 = !DILocation(line: 1610, column: 3, scope: !736)
!837 = !DILocation(line: 1612, column: 7, scope: !838)
!838 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1612, column: 7)
!839 = !DILocation(line: 1612, column: 7, scope: !736)
!840 = !DILocation(line: 1613, column: 6, scope: !838)
!841 = !DILocation(line: 1613, column: 16, scope: !838)
!842 = !DILocation(line: 1613, column: 5, scope: !838)
!843 = !DILocation(line: 1614, column: 12, scope: !844)
!844 = distinct !DILexicalBlock(scope: !838, file: !3, line: 1614, column: 12)
!845 = !DILocation(line: 1614, column: 12, scope: !838)
!846 = !DILocation(line: 1615, column: 6, scope: !844)
!847 = !DILocation(line: 1615, column: 16, scope: !844)
!848 = !DILocation(line: 1615, column: 5, scope: !844)
!849 = !DILocation(line: 1618, column: 53, scope: !850)
!850 = distinct !DILexicalBlock(scope: !844, file: !3, line: 1617, column: 5)
!851 = !DILocation(line: 1618, column: 5, scope: !850)
!852 = !DILocation(line: 1619, column: 19, scope: !850)
!853 = !DILocation(line: 1620, column: 19, scope: !850)
!854 = !DILocation(line: 1622, column: 3, scope: !736)
!855 = !DILocation(line: 1624, column: 27, scope: !736)
!856 = !DILocation(line: 1624, column: 22, scope: !736)
!857 = !DILocation(line: 1624, column: 4, scope: !736)
!858 = !DILocation(line: 1624, column: 20, scope: !736)
!859 = !DILocation(line: 1625, column: 3, scope: !736)
!860 = !DILocation(line: 1627, column: 12, scope: !736)
!861 = !DILocation(line: 1628, column: 3, scope: !736)
!862 = !DILocation(line: 1630, column: 12, scope: !736)
!863 = !DILocation(line: 1631, column: 3, scope: !736)
!864 = !DILocation(line: 1632, column: 52, scope: !736)
!865 = !DILocation(line: 1632, column: 17, scope: !736)
!866 = !DILocation(line: 1633, column: 17, scope: !736)
!867 = !DILocation(line: 1635, column: 11, scope: !736)
!868 = !DILocation(line: 1636, column: 3, scope: !736)
!869 = !DILocation(line: 1637, column: 17, scope: !736)
!870 = !DILocation(line: 1638, column: 10, scope: !736)
!871 = !DILocation(line: 1641, column: 12, scope: !736)
!872 = !DILocation(line: 1642, column: 24, scope: !736)
!873 = !DILocation(line: 1642, column: 19, scope: !736)
!874 = !DILocation(line: 1642, column: 4, scope: !736)
!875 = !DILocation(line: 1642, column: 17, scope: !736)
!876 = !DILocation(line: 1643, column: 3, scope: !736)
!877 = !DILocation(line: 1645, column: 10, scope: !736)
!878 = !DILocation(line: 1645, column: 21, scope: !736)
!879 = !DILocation(line: 1645, column: 31, scope: !736)
!880 = !DILocation(line: 1646, column: 10, scope: !881)
!881 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1646, column: 3)
!882 = !DILocation(line: 1646, column: 33, scope: !881)
!883 = !DILocation(line: 1646, column: 25, scope: !881)
!884 = !DILocation(line: 1646, column: 23, scope: !881)
!885 = !DILocation(line: 1646, column: 8, scope: !881)
!886 = !DILocation(line: 1647, column: 22, scope: !887)
!887 = distinct !DILexicalBlock(scope: !881, file: !3, line: 1646, column: 3)
!888 = !DILocation(line: 1647, column: 30, scope: !887)
!889 = !DILocation(line: 1647, column: 39, scope: !887)
!890 = !DILocation(line: 1647, column: 44, scope: !887)
!891 = !DILocation(line: 1647, column: 46, scope: !887)
!892 = !DILocation(line: 0, scope: !887)
!893 = !DILocation(line: 1646, column: 3, scope: !881)
!894 = !DILocation(line: 1650, column: 7, scope: !895)
!895 = distinct !DILexicalBlock(scope: !887, file: !3, line: 1649, column: 21)
!896 = !DILocation(line: 1650, column: 18, scope: !895)
!897 = !DILocation(line: 1650, column: 25, scope: !895)
!898 = !DILocation(line: 1651, column: 32, scope: !899)
!899 = distinct !DILexicalBlock(scope: !895, file: !3, line: 1651, column: 25)
!900 = !DILocation(line: 1652, column: 12, scope: !899)
!901 = !DILocation(line: 1652, column: 23, scope: !899)
!902 = !DILocation(line: 1652, column: 31, scope: !899)
!903 = !DILocation(line: 1652, column: 34, scope: !899)
!904 = !DILocation(line: 1652, column: 39, scope: !899)
!905 = !DILocation(line: 1652, column: 50, scope: !899)
!906 = !DILocation(line: 1652, column: 58, scope: !899)
!907 = !DILocation(line: 1652, column: 61, scope: !899)
!908 = !DILocation(line: 1653, column: 12, scope: !899)
!909 = !DILocation(line: 1653, column: 23, scope: !899)
!910 = !DILocation(line: 1653, column: 31, scope: !899)
!911 = !DILocation(line: 1653, column: 34, scope: !899)
!912 = !DILocation(line: 1653, column: 39, scope: !899)
!913 = !DILocation(line: 1653, column: 50, scope: !899)
!914 = !DILocation(line: 1653, column: 58, scope: !899)
!915 = !DILocation(line: 1653, column: 61, scope: !899)
!916 = !DILocation(line: 1651, column: 25, scope: !899)
!917 = !DILocation(line: 1653, column: 65, scope: !899)
!918 = !DILocation(line: 1651, column: 25, scope: !895)
!919 = !DILocation(line: 1655, column: 85, scope: !920)
!920 = distinct !DILexicalBlock(scope: !899, file: !3, line: 1654, column: 23)
!921 = !DILocation(line: 1655, column: 88, scope: !920)
!922 = !DILocation(line: 1655, column: 23, scope: !920)
!923 = !DILocation(line: 1656, column: 9, scope: !920)
!924 = !DILocation(line: 1657, column: 23, scope: !920)
!925 = !DILocation(line: 1659, column: 21, scope: !895)
!926 = !DILocation(line: 1648, column: 32, scope: !887)
!927 = !DILocation(line: 1648, column: 30, scope: !887)
!928 = !DILocation(line: 1648, column: 54, scope: !887)
!929 = !DILocation(line: 1646, column: 3, scope: !887)
!930 = distinct !{!930, !893, !931}
!931 = !DILocation(line: 1659, column: 21, scope: !881)
!932 = !DILocation(line: 1661, column: 22, scope: !933)
!933 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1661, column: 21)
!934 = !DILocation(line: 1661, column: 30, scope: !933)
!935 = !DILocation(line: 1661, column: 39, scope: !933)
!936 = !DILocation(line: 1661, column: 43, scope: !933)
!937 = !DILocation(line: 1661, column: 45, scope: !933)
!938 = !DILocation(line: 1661, column: 21, scope: !736)
!939 = !DILocation(line: 1663, column: 78, scope: !940)
!940 = distinct !DILexicalBlock(scope: !933, file: !3, line: 1662, column: 19)
!941 = !DILocation(line: 1663, column: 5, scope: !940)
!942 = !DILocation(line: 1664, column: 5, scope: !940)
!943 = !DILocation(line: 1665, column: 19, scope: !940)
!944 = !DILocation(line: 1667, column: 3, scope: !736)
!945 = !DILocation(line: 1669, column: 20, scope: !736)
!946 = !DILocation(line: 1669, column: 23, scope: !736)
!947 = !DILocation(line: 1669, column: 31, scope: !736)
!948 = !DILocation(line: 1669, column: 34, scope: !736)
!949 = !DILocation(line: 1670, column: 3, scope: !736)
!950 = !DILocation(line: 1671, column: 20, scope: !736)
!951 = !DILocation(line: 1671, column: 23, scope: !736)
!952 = !DILocation(line: 1671, column: 31, scope: !736)
!953 = !DILocation(line: 1671, column: 34, scope: !736)
!954 = !DILocation(line: 1672, column: 3, scope: !736)
!955 = !DILocation(line: 1673, column: 20, scope: !736)
!956 = !DILocation(line: 1673, column: 23, scope: !736)
!957 = !DILocation(line: 1673, column: 31, scope: !736)
!958 = !DILocation(line: 1673, column: 34, scope: !736)
!959 = !DILocation(line: 1674, column: 3, scope: !736)
!960 = !DILocation(line: 1675, column: 20, scope: !736)
!961 = !DILocation(line: 1675, column: 23, scope: !736)
!962 = !DILocation(line: 1675, column: 31, scope: !736)
!963 = !DILocation(line: 1675, column: 34, scope: !736)
!964 = !DILocation(line: 1676, column: 3, scope: !736)
!965 = !DILocation(line: 1678, column: 24, scope: !966)
!966 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1678, column: 17)
!967 = !DILocation(line: 1678, column: 47, scope: !966)
!968 = !DILocation(line: 1678, column: 39, scope: !966)
!969 = !DILocation(line: 1678, column: 37, scope: !966)
!970 = !DILocation(line: 1678, column: 22, scope: !966)
!971 = !DILocation(line: 1679, column: 22, scope: !972)
!972 = distinct !DILexicalBlock(scope: !966, file: !3, line: 1678, column: 17)
!973 = !DILocation(line: 1679, column: 30, scope: !972)
!974 = !DILocation(line: 1678, column: 17, scope: !966)
!975 = !DILocation(line: 1682, column: 28, scope: !976)
!976 = distinct !DILexicalBlock(scope: !972, file: !3, line: 1681, column: 21)
!977 = !DILocation(line: 1682, column: 20, scope: !976)
!978 = !DILocation(line: 1682, column: 18, scope: !976)
!979 = !DILocation(line: 1683, column: 25, scope: !980)
!980 = distinct !DILexicalBlock(scope: !976, file: !3, line: 1683, column: 25)
!981 = !DILocation(line: 1683, column: 36, scope: !980)
!982 = !DILocation(line: 1683, column: 25, scope: !976)
!983 = !DILocation(line: 1685, column: 62, scope: !984)
!984 = distinct !DILexicalBlock(scope: !980, file: !3, line: 1684, column: 23)
!985 = !DILocation(line: 1685, column: 23, scope: !984)
!986 = !DILocation(line: 1686, column: 23, scope: !984)
!987 = !DILocation(line: 1687, column: 23, scope: !984)
!988 = !DILocation(line: 1690, column: 22, scope: !976)
!989 = !DILocation(line: 1690, column: 33, scope: !976)
!990 = !DILocation(line: 1692, column: 35, scope: !976)
!991 = !DILocation(line: 1692, column: 27, scope: !976)
!992 = !DILocation(line: 1692, column: 25, scope: !976)
!993 = !DILocation(line: 1693, column: 28, scope: !994)
!994 = distinct !DILexicalBlock(scope: !976, file: !3, line: 1693, column: 21)
!995 = !DILocation(line: 1693, column: 26, scope: !994)
!996 = !DILocation(line: 1693, column: 33, scope: !997)
!997 = distinct !DILexicalBlock(scope: !994, file: !3, line: 1693, column: 21)
!998 = !DILocation(line: 1693, column: 37, scope: !997)
!999 = !DILocation(line: 1693, column: 35, scope: !997)
!1000 = !DILocation(line: 1693, column: 21, scope: !994)
!1001 = !DILocation(line: 1694, column: 50, scope: !997)
!1002 = !DILocation(line: 1694, column: 60, scope: !997)
!1003 = !DILocation(line: 1694, column: 58, scope: !997)
!1004 = !DILocation(line: 1694, column: 48, scope: !997)
!1005 = !DILocation(line: 1694, column: 40, scope: !997)
!1006 = !DILocation(line: 1694, column: 25, scope: !997)
!1007 = !DILocation(line: 1694, column: 35, scope: !997)
!1008 = !DILocation(line: 1694, column: 33, scope: !997)
!1009 = !DILocation(line: 1694, column: 38, scope: !997)
!1010 = !DILocation(line: 1694, column: 23, scope: !997)
!1011 = !DILocation(line: 1693, column: 43, scope: !997)
!1012 = !DILocation(line: 1693, column: 21, scope: !997)
!1013 = distinct !{!1013, !1000, !1014}
!1014 = !DILocation(line: 1694, column: 62, scope: !994)
!1015 = !DILocation(line: 1696, column: 33, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !976, file: !3, line: 1696, column: 25)
!1017 = !DILocation(line: 1696, column: 25, scope: !1016)
!1018 = !DILocation(line: 1696, column: 52, scope: !1016)
!1019 = !DILocation(line: 1696, column: 25, scope: !976)
!1020 = !DILocation(line: 1699, column: 37, scope: !1021)
!1021 = distinct !DILexicalBlock(scope: !1016, file: !3, line: 1697, column: 23)
!1022 = !DILocation(line: 1699, column: 48, scope: !1021)
!1023 = !DILocation(line: 1699, column: 29, scope: !1021)
!1024 = !DILocation(line: 1699, column: 27, scope: !1021)
!1025 = !DILocation(line: 1700, column: 30, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !1021, file: !3, line: 1700, column: 23)
!1027 = !DILocation(line: 1700, column: 28, scope: !1026)
!1028 = !DILocation(line: 1700, column: 35, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !1026, file: !3, line: 1700, column: 23)
!1030 = !DILocation(line: 1700, column: 40, scope: !1029)
!1031 = !DILocation(line: 1700, column: 37, scope: !1029)
!1032 = !DILocation(line: 1700, column: 23, scope: !1026)
!1033 = !DILocation(line: 1701, column: 55, scope: !1029)
!1034 = !DILocation(line: 1701, column: 68, scope: !1029)
!1035 = !DILocation(line: 1701, column: 66, scope: !1029)
!1036 = !DILocation(line: 1701, column: 53, scope: !1029)
!1037 = !DILocation(line: 1701, column: 45, scope: !1029)
!1038 = !DILocation(line: 1701, column: 27, scope: !1029)
!1039 = !DILocation(line: 1701, column: 40, scope: !1029)
!1040 = !DILocation(line: 1701, column: 38, scope: !1029)
!1041 = !DILocation(line: 1701, column: 43, scope: !1029)
!1042 = !DILocation(line: 1701, column: 25, scope: !1029)
!1043 = !DILocation(line: 1700, column: 46, scope: !1029)
!1044 = !DILocation(line: 1700, column: 23, scope: !1029)
!1045 = distinct !{!1045, !1032, !1046}
!1046 = !DILocation(line: 1701, column: 70, scope: !1026)
!1047 = !DILocation(line: 1703, column: 22, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1021, file: !3, line: 1703, column: 13)
!1049 = !DILocation(line: 1703, column: 33, scope: !1048)
!1050 = !DILocation(line: 1703, column: 13, scope: !1048)
!1051 = !DILocation(line: 1703, column: 48, scope: !1048)
!1052 = !DILocation(line: 1703, column: 13, scope: !1021)
!1053 = !DILocation(line: 1705, column: 25, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1048, file: !3, line: 1704, column: 25)
!1055 = !DILocation(line: 1705, column: 31, scope: !1054)
!1056 = !DILocation(line: 1705, column: 38, scope: !1054)
!1057 = !DILocation(line: 1706, column: 33, scope: !1054)
!1058 = !DILocation(line: 1706, column: 39, scope: !1054)
!1059 = !DILocation(line: 1706, column: 25, scope: !1054)
!1060 = !DILocation(line: 1707, column: 25, scope: !1054)
!1061 = !DILocation(line: 1710, column: 23, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !3, line: 1710, column: 15)
!1063 = distinct !DILexicalBlock(scope: !1048, file: !3, line: 1709, column: 25)
!1064 = !DILocation(line: 1710, column: 34, scope: !1062)
!1065 = !DILocation(line: 1710, column: 15, scope: !1062)
!1066 = !DILocation(line: 1710, column: 49, scope: !1062)
!1067 = !DILocation(line: 1710, column: 15, scope: !1063)
!1068 = !DILocation(line: 1712, column: 27, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 1711, column: 27)
!1070 = !DILocation(line: 1712, column: 33, scope: !1069)
!1071 = !DILocation(line: 1712, column: 40, scope: !1069)
!1072 = !DILocation(line: 1713, column: 35, scope: !1069)
!1073 = !DILocation(line: 1713, column: 41, scope: !1069)
!1074 = !DILocation(line: 1713, column: 27, scope: !1069)
!1075 = !DILocation(line: 1714, column: 27, scope: !1069)
!1076 = !DILocation(line: 1717, column: 85, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 1716, column: 27)
!1078 = !DILocation(line: 1717, column: 96, scope: !1077)
!1079 = !DILocation(line: 1717, column: 27, scope: !1077)
!1080 = !DILocation(line: 1718, column: 27, scope: !1077)
!1081 = !DILocation(line: 1719, column: 27, scope: !1077)
!1082 = !DILocation(line: 1722, column: 23, scope: !1021)
!1083 = !DILocation(line: 1725, column: 36, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 1725, column: 27)
!1085 = distinct !DILexicalBlock(scope: !1016, file: !3, line: 1724, column: 23)
!1086 = !DILocation(line: 1725, column: 27, scope: !1084)
!1087 = !DILocation(line: 1725, column: 55, scope: !1084)
!1088 = !DILocation(line: 1725, column: 27, scope: !1085)
!1089 = !DILocation(line: 1726, column: 44, scope: !1084)
!1090 = !DILocation(line: 1726, column: 55, scope: !1084)
!1091 = !DILocation(line: 1726, column: 39, scope: !1084)
!1092 = !DILocation(line: 1726, column: 25, scope: !1084)
!1093 = !DILocation(line: 1726, column: 31, scope: !1084)
!1094 = !DILocation(line: 1726, column: 37, scope: !1084)
!1095 = !DILocation(line: 1728, column: 36, scope: !1096)
!1096 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 1728, column: 27)
!1097 = !DILocation(line: 1728, column: 27, scope: !1096)
!1098 = !DILocation(line: 1728, column: 54, scope: !1096)
!1099 = !DILocation(line: 1728, column: 27, scope: !1085)
!1100 = !DILocation(line: 1730, column: 34, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1096, file: !3, line: 1729, column: 11)
!1102 = !DILocation(line: 1730, column: 40, scope: !1101)
!1103 = !DILocation(line: 1730, column: 52, scope: !1101)
!1104 = !DILocation(line: 1730, column: 63, scope: !1101)
!1105 = !DILocation(line: 1730, column: 25, scope: !1101)
!1106 = !DILocation(line: 1731, column: 25, scope: !1101)
!1107 = !DILocation(line: 1731, column: 31, scope: !1101)
!1108 = !DILocation(line: 1731, column: 57, scope: !1101)
!1109 = !DILocation(line: 1732, column: 25, scope: !1101)
!1110 = !DILocation(line: 1734, column: 36, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 1734, column: 27)
!1112 = !DILocation(line: 1734, column: 27, scope: !1111)
!1113 = !DILocation(line: 1734, column: 55, scope: !1111)
!1114 = !DILocation(line: 1734, column: 27, scope: !1085)
!1115 = !DILocation(line: 1736, column: 34, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 1735, column: 4)
!1117 = !DILocation(line: 1736, column: 40, scope: !1116)
!1118 = !DILocation(line: 1736, column: 53, scope: !1116)
!1119 = !DILocation(line: 1736, column: 64, scope: !1116)
!1120 = !DILocation(line: 1736, column: 25, scope: !1116)
!1121 = !DILocation(line: 1737, column: 25, scope: !1116)
!1122 = !DILocation(line: 1737, column: 31, scope: !1116)
!1123 = !DILocation(line: 1737, column: 58, scope: !1116)
!1124 = !DILocation(line: 1738, column: 25, scope: !1116)
!1125 = !DILocation(line: 1739, column: 36, scope: !1126)
!1126 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 1739, column: 27)
!1127 = !DILocation(line: 1739, column: 27, scope: !1126)
!1128 = !DILocation(line: 1739, column: 55, scope: !1126)
!1129 = !DILocation(line: 1739, column: 27, scope: !1085)
!1130 = !DILocation(line: 1740, column: 23, scope: !1126)
!1131 = !DILocation(line: 1740, column: 34, scope: !1126)
!1132 = !DILocation(line: 1740, column: 18, scope: !1126)
!1133 = !DILocation(line: 1740, column: 4, scope: !1126)
!1134 = !DILocation(line: 1740, column: 10, scope: !1126)
!1135 = !DILocation(line: 1740, column: 16, scope: !1126)
!1136 = !DILocation(line: 1742, column: 21, scope: !976)
!1137 = !DILocation(line: 1680, column: 32, scope: !972)
!1138 = !DILocation(line: 1680, column: 30, scope: !972)
!1139 = !DILocation(line: 1680, column: 54, scope: !972)
!1140 = !DILocation(line: 1678, column: 17, scope: !972)
!1141 = distinct !{!1141, !974, !1142}
!1142 = !DILocation(line: 1742, column: 21, scope: !966)
!1143 = !DILocation(line: 1743, column: 22, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1743, column: 14)
!1145 = !DILocation(line: 1743, column: 28, scope: !1144)
!1146 = !DILocation(line: 1743, column: 15, scope: !1144)
!1147 = !DILocation(line: 1743, column: 41, scope: !1144)
!1148 = !DILocation(line: 1743, column: 52, scope: !1144)
!1149 = !DILocation(line: 1743, column: 58, scope: !1144)
!1150 = !DILocation(line: 1743, column: 45, scope: !1144)
!1151 = !DILocation(line: 1743, column: 14, scope: !736)
!1152 = !DILocation(line: 1745, column: 9, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1154, file: !3, line: 1745, column: 9)
!1154 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 1744, column: 19)
!1155 = !DILocation(line: 1745, column: 15, scope: !1153)
!1156 = !DILocation(line: 1745, column: 21, scope: !1153)
!1157 = !DILocation(line: 1745, column: 9, scope: !1154)
!1158 = !DILocation(line: 1746, column: 21, scope: !1153)
!1159 = !DILocation(line: 1747, column: 16, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1154, file: !3, line: 1747, column: 16)
!1161 = !DILocation(line: 1747, column: 22, scope: !1160)
!1162 = !DILocation(line: 1747, column: 29, scope: !1160)
!1163 = !DILocation(line: 1747, column: 16, scope: !1154)
!1164 = !DILocation(line: 1749, column: 7, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1160, file: !3, line: 1748, column: 21)
!1166 = !DILocation(line: 1750, column: 7, scope: !1165)
!1167 = !DILocation(line: 1751, column: 7, scope: !1165)
!1168 = !DILocation(line: 1753, column: 19, scope: !1154)
!1169 = !DILocation(line: 1754, column: 10, scope: !736)
!1170 = !DILocation(line: 1759, column: 3, scope: !736)
!1171 = !DILocation(line: 1759, column: 14, scope: !736)
!1172 = !DILocation(line: 1759, column: 24, scope: !736)
!1173 = !DILocation(line: 1760, column: 24, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1760, column: 17)
!1175 = !DILocation(line: 1760, column: 47, scope: !1174)
!1176 = !DILocation(line: 1760, column: 39, scope: !1174)
!1177 = !DILocation(line: 1760, column: 37, scope: !1174)
!1178 = !DILocation(line: 1760, column: 22, scope: !1174)
!1179 = !DILocation(line: 1761, column: 23, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1174, file: !3, line: 1760, column: 17)
!1181 = !DILocation(line: 1761, column: 31, scope: !1180)
!1182 = !DILocation(line: 1761, column: 40, scope: !1180)
!1183 = !DILocation(line: 1761, column: 45, scope: !1180)
!1184 = !DILocation(line: 1761, column: 47, scope: !1180)
!1185 = !DILocation(line: 0, scope: !1180)
!1186 = !DILocation(line: 1760, column: 17, scope: !1174)
!1187 = !DILocation(line: 1764, column: 36, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1180, file: !3, line: 1763, column: 21)
!1189 = !DILocation(line: 1764, column: 31, scope: !1188)
!1190 = !DILocation(line: 1764, column: 7, scope: !1188)
!1191 = !DILocation(line: 1764, column: 18, scope: !1188)
!1192 = !DILocation(line: 1764, column: 26, scope: !1188)
!1193 = !DILocation(line: 1764, column: 29, scope: !1188)
!1194 = !DILocation(line: 1765, column: 21, scope: !1188)
!1195 = !DILocation(line: 1762, column: 33, scope: !1180)
!1196 = !DILocation(line: 1762, column: 31, scope: !1180)
!1197 = !DILocation(line: 1762, column: 56, scope: !1180)
!1198 = !DILocation(line: 1760, column: 17, scope: !1180)
!1199 = distinct !{!1199, !1186, !1200}
!1200 = !DILocation(line: 1765, column: 21, scope: !1174)
!1201 = !DILocation(line: 1766, column: 3, scope: !736)
!1202 = !DILocation(line: 1768, column: 19, scope: !736)
!1203 = !DILocation(line: 1768, column: 11, scope: !736)
!1204 = !DILocation(line: 1768, column: 3, scope: !736)
!1205 = !DILocation(line: 1770, column: 15, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1769, column: 19)
!1207 = !DILocation(line: 1770, column: 26, scope: !1206)
!1208 = !DILocation(line: 1770, column: 35, scope: !1206)
!1209 = !DILocation(line: 1771, column: 29, scope: !1206)
!1210 = !DILocation(line: 1772, column: 29, scope: !1206)
!1211 = !DILocation(line: 1772, column: 40, scope: !1206)
!1212 = !DILocation(line: 1772, column: 49, scope: !1206)
!1213 = !DILocation(line: 1773, column: 30, scope: !1206)
!1214 = !DILocation(line: 1774, column: 29, scope: !1206)
!1215 = !DILocation(line: 1774, column: 40, scope: !1206)
!1216 = !DILocation(line: 1774, column: 49, scope: !1206)
!1217 = !DILocation(line: 1775, column: 29, scope: !1206)
!1218 = !DILocation(line: 1776, column: 29, scope: !1206)
!1219 = !DILocation(line: 1776, column: 40, scope: !1206)
!1220 = !DILocation(line: 1776, column: 49, scope: !1206)
!1221 = !DILocation(line: 1777, column: 29, scope: !1206)
!1222 = !DILocation(line: 1778, column: 86, scope: !1206)
!1223 = !DILocation(line: 1778, column: 15, scope: !1206)
!1224 = !DILocation(line: 1779, column: 8, scope: !1206)
!1225 = !DILocation(line: 1780, column: 29, scope: !1206)
!1226 = !DILocation(line: 1782, column: 3, scope: !736)
!1227 = !DILocation(line: 1784, column: 3, scope: !736)
!1228 = !DILocation(line: 1784, column: 14, scope: !736)
!1229 = !DILocation(line: 1784, column: 24, scope: !736)
!1230 = !DILocation(line: 1785, column: 19, scope: !736)
!1231 = !DILocation(line: 1785, column: 11, scope: !736)
!1232 = !DILocation(line: 1785, column: 3, scope: !736)
!1233 = !DILocation(line: 1787, column: 16, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1786, column: 19)
!1235 = !DILocation(line: 1787, column: 27, scope: !1234)
!1236 = !DILocation(line: 1787, column: 34, scope: !1234)
!1237 = !DILocation(line: 1788, column: 30, scope: !1234)
!1238 = !DILocation(line: 1789, column: 30, scope: !1234)
!1239 = !DILocation(line: 1789, column: 41, scope: !1234)
!1240 = !DILocation(line: 1789, column: 48, scope: !1234)
!1241 = !DILocation(line: 1790, column: 30, scope: !1234)
!1242 = !DILocation(line: 1791, column: 30, scope: !1234)
!1243 = !DILocation(line: 1791, column: 41, scope: !1234)
!1244 = !DILocation(line: 1791, column: 48, scope: !1234)
!1245 = !DILocation(line: 1792, column: 30, scope: !1234)
!1246 = !DILocation(line: 1793, column: 75, scope: !1234)
!1247 = !DILocation(line: 1793, column: 16, scope: !1234)
!1248 = !DILocation(line: 1794, column: 9, scope: !1234)
!1249 = !DILocation(line: 1795, column: 30, scope: !1234)
!1250 = !DILocation(line: 1797, column: 3, scope: !736)
!1251 = !DILocation(line: 1799, column: 22, scope: !736)
!1252 = !DILocation(line: 1799, column: 16, scope: !736)
!1253 = !DILocation(line: 1799, column: 3, scope: !736)
!1254 = !DILocation(line: 1799, column: 9, scope: !736)
!1255 = !DILocation(line: 1799, column: 14, scope: !736)
!1256 = !DILocation(line: 1800, column: 17, scope: !736)
!1257 = !DILocation(line: 1800, column: 23, scope: !736)
!1258 = !DILocation(line: 1800, column: 28, scope: !736)
!1259 = !DILocation(line: 1801, column: 3, scope: !736)
!1260 = !DILocation(line: 1803, column: 3, scope: !736)
!1261 = !DILocation(line: 1803, column: 14, scope: !736)
!1262 = !DILocation(line: 1803, column: 24, scope: !736)
!1263 = !DILocation(line: 1805, column: 21, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1805, column: 21)
!1265 = !DILocation(line: 1805, column: 21, scope: !736)
!1266 = !DILocation(line: 1807, column: 5, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1264, file: !3, line: 1806, column: 19)
!1268 = !DILocation(line: 1807, column: 16, scope: !1267)
!1269 = !DILocation(line: 1807, column: 28, scope: !1267)
!1270 = !DILocation(line: 1808, column: 5, scope: !1267)
!1271 = distinct !{!1271, !725, !1272}
!1272 = !DILocation(line: 2030, column: 5, scope: !651)
!1273 = !DILocation(line: 1810, column: 21, scope: !1274)
!1274 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1810, column: 21)
!1275 = !DILocation(line: 1810, column: 21, scope: !736)
!1276 = !DILocation(line: 1812, column: 5, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1811, column: 19)
!1278 = !DILocation(line: 1812, column: 16, scope: !1277)
!1279 = !DILocation(line: 1812, column: 28, scope: !1277)
!1280 = !DILocation(line: 1813, column: 19, scope: !1277)
!1281 = !DILocation(line: 1815, column: 21, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1815, column: 21)
!1283 = !DILocation(line: 1815, column: 21, scope: !736)
!1284 = !DILocation(line: 1817, column: 5, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1282, file: !3, line: 1816, column: 19)
!1286 = !DILocation(line: 1817, column: 16, scope: !1285)
!1287 = !DILocation(line: 1817, column: 28, scope: !1285)
!1288 = !DILocation(line: 1818, column: 19, scope: !1285)
!1289 = !DILocation(line: 1820, column: 21, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1820, column: 21)
!1291 = !DILocation(line: 1820, column: 21, scope: !736)
!1292 = !DILocation(line: 1822, column: 5, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 1821, column: 19)
!1294 = !DILocation(line: 1822, column: 16, scope: !1293)
!1295 = !DILocation(line: 1822, column: 28, scope: !1293)
!1296 = !DILocation(line: 1823, column: 19, scope: !1293)
!1297 = !DILocation(line: 1826, column: 89, scope: !736)
!1298 = !DILocation(line: 1826, column: 3, scope: !736)
!1299 = !DILocation(line: 1827, column: 3, scope: !736)
!1300 = !DILocation(line: 1828, column: 17, scope: !736)
!1301 = !DILocation(line: 1831, column: 24, scope: !736)
!1302 = !DILocation(line: 1831, column: 19, scope: !736)
!1303 = !DILocation(line: 1831, column: 3, scope: !736)
!1304 = !DILocation(line: 1831, column: 9, scope: !736)
!1305 = !DILocation(line: 1831, column: 17, scope: !736)
!1306 = !DILocation(line: 1832, column: 17, scope: !736)
!1307 = !DILocation(line: 1832, column: 23, scope: !736)
!1308 = !DILocation(line: 1832, column: 28, scope: !736)
!1309 = !DILocation(line: 1833, column: 3, scope: !736)
!1310 = !DILocation(line: 1835, column: 38, scope: !736)
!1311 = !DILocation(line: 1835, column: 33, scope: !736)
!1312 = !DILocation(line: 1835, column: 17, scope: !736)
!1313 = !DILocation(line: 1835, column: 23, scope: !736)
!1314 = !DILocation(line: 1835, column: 31, scope: !736)
!1315 = !DILocation(line: 1836, column: 17, scope: !736)
!1316 = !DILocation(line: 1836, column: 23, scope: !736)
!1317 = !DILocation(line: 1836, column: 28, scope: !736)
!1318 = !DILocation(line: 1837, column: 3, scope: !736)
!1319 = !DILocation(line: 1839, column: 24, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1839, column: 17)
!1321 = !DILocation(line: 1839, column: 47, scope: !1320)
!1322 = !DILocation(line: 1839, column: 39, scope: !1320)
!1323 = !DILocation(line: 1839, column: 37, scope: !1320)
!1324 = !DILocation(line: 1839, column: 22, scope: !1320)
!1325 = !DILocation(line: 1840, column: 23, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1320, file: !3, line: 1839, column: 17)
!1327 = !DILocation(line: 1840, column: 31, scope: !1326)
!1328 = !DILocation(line: 1840, column: 40, scope: !1326)
!1329 = !DILocation(line: 1840, column: 45, scope: !1326)
!1330 = !DILocation(line: 1840, column: 47, scope: !1326)
!1331 = !DILocation(line: 0, scope: !1326)
!1332 = !DILocation(line: 1839, column: 17, scope: !1320)
!1333 = !DILocation(line: 1848, column: 12, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1335, file: !3, line: 1848, column: 12)
!1335 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 1842, column: 22)
!1336 = !DILocation(line: 1848, column: 12, scope: !1335)
!1337 = !DILocation(line: 1850, column: 17, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1339, file: !3, line: 1850, column: 10)
!1339 = distinct !DILexicalBlock(scope: !1334, file: !3, line: 1849, column: 24)
!1340 = !DILocation(line: 1850, column: 15, scope: !1338)
!1341 = !DILocation(line: 1850, column: 22, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1338, file: !3, line: 1850, column: 10)
!1343 = !DILocation(line: 1850, column: 24, scope: !1342)
!1344 = !DILocation(line: 1850, column: 10, scope: !1338)
!1345 = !DILocation(line: 1851, column: 22, scope: !1342)
!1346 = !DILocation(line: 1851, column: 5, scope: !1342)
!1347 = !DILocation(line: 1851, column: 16, scope: !1342)
!1348 = !DILocation(line: 1851, column: 20, scope: !1342)
!1349 = !DILocation(line: 1850, column: 41, scope: !1342)
!1350 = !DILocation(line: 1850, column: 10, scope: !1342)
!1351 = distinct !{!1351, !1344, !1352}
!1352 = !DILocation(line: 1851, column: 22, scope: !1338)
!1353 = !DILocation(line: 1852, column: 25, scope: !1339)
!1354 = !DILocation(line: 1852, column: 37, scope: !1339)
!1355 = !DILocation(line: 1853, column: 24, scope: !1339)
!1356 = !DILocation(line: 1857, column: 14, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !1358, file: !3, line: 1857, column: 14)
!1358 = distinct !DILexicalBlock(scope: !1334, file: !3, line: 1856, column: 24)
!1359 = !DILocation(line: 1857, column: 14, scope: !1358)
!1360 = !DILocation(line: 1859, column: 12, scope: !1361)
!1361 = distinct !DILexicalBlock(scope: !1362, file: !3, line: 1859, column: 5)
!1362 = distinct !DILexicalBlock(scope: !1357, file: !3, line: 1858, column: 26)
!1363 = !DILocation(line: 1859, column: 10, scope: !1361)
!1364 = !DILocation(line: 1859, column: 17, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1361, file: !3, line: 1859, column: 5)
!1366 = !DILocation(line: 1859, column: 19, scope: !1365)
!1367 = !DILocation(line: 1859, column: 5, scope: !1361)
!1368 = !DILocation(line: 1860, column: 24, scope: !1365)
!1369 = !DILocation(line: 1860, column: 7, scope: !1365)
!1370 = !DILocation(line: 1860, column: 18, scope: !1365)
!1371 = !DILocation(line: 1860, column: 22, scope: !1365)
!1372 = !DILocation(line: 1859, column: 36, scope: !1365)
!1373 = !DILocation(line: 1859, column: 5, scope: !1365)
!1374 = distinct !{!1374, !1367, !1375}
!1375 = !DILocation(line: 1860, column: 24, scope: !1361)
!1376 = !DILocation(line: 1861, column: 27, scope: !1362)
!1377 = !DILocation(line: 1861, column: 39, scope: !1362)
!1378 = !DILocation(line: 1862, column: 26, scope: !1362)
!1379 = !DILocation(line: 1866, column: 9, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 1866, column: 9)
!1381 = distinct !DILexicalBlock(scope: !1357, file: !3, line: 1865, column: 26)
!1382 = !DILocation(line: 1866, column: 9, scope: !1381)
!1383 = !DILocation(line: 1867, column: 7, scope: !1380)
!1384 = !DILocation(line: 1867, column: 18, scope: !1380)
!1385 = !DILocation(line: 1867, column: 22, scope: !1380)
!1386 = !DILocation(line: 1870, column: 21, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1380, file: !3, line: 1869, column: 7)
!1388 = !DILocation(line: 1870, column: 13, scope: !1387)
!1389 = !DILocation(line: 1870, column: 11, scope: !1387)
!1390 = !DILocation(line: 1871, column: 12, scope: !1391)
!1391 = distinct !DILexicalBlock(scope: !1387, file: !3, line: 1871, column: 11)
!1392 = !DILocation(line: 1871, column: 11, scope: !1387)
!1393 = !DILocation(line: 1872, column: 31, scope: !1391)
!1394 = !DILocation(line: 1872, column: 26, scope: !1391)
!1395 = !DILocation(line: 1872, column: 9, scope: !1391)
!1396 = !DILocation(line: 1872, column: 20, scope: !1391)
!1397 = !DILocation(line: 1872, column: 24, scope: !1391)
!1398 = !DILocation(line: 1875, column: 10, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1391, file: !3, line: 1874, column: 30)
!1400 = !DILocation(line: 1875, column: 14, scope: !1399)
!1401 = !DILocation(line: 1876, column: 44, scope: !1399)
!1402 = !DILocation(line: 1876, column: 38, scope: !1399)
!1403 = !DILocation(line: 1876, column: 36, scope: !1399)
!1404 = !DILocation(line: 1877, column: 43, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1399, file: !3, line: 1877, column: 34)
!1406 = !DILocation(line: 1877, column: 47, scope: !1405)
!1407 = !DILocation(line: 1877, column: 35, scope: !1405)
!1408 = !DILocation(line: 1877, column: 34, scope: !1399)
!1409 = !DILocation(line: 1878, column: 15, scope: !1405)
!1410 = !DILocation(line: 1878, column: 11, scope: !1405)
!1411 = !DILocation(line: 1880, column: 44, scope: !1405)
!1412 = !DILocation(line: 1880, column: 48, scope: !1405)
!1413 = !DILocation(line: 1880, column: 38, scope: !1405)
!1414 = !DILocation(line: 1880, column: 36, scope: !1405)
!1415 = !DILocation(line: 1881, column: 39, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1399, file: !3, line: 1881, column: 30)
!1417 = !DILocation(line: 1881, column: 37, scope: !1416)
!1418 = !DILocation(line: 1881, column: 35, scope: !1416)
!1419 = !DILocation(line: 1881, column: 46, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1416, file: !3, line: 1881, column: 30)
!1421 = !DILocation(line: 1881, column: 51, scope: !1420)
!1422 = !DILocation(line: 1881, column: 48, scope: !1420)
!1423 = !DILocation(line: 1881, column: 55, scope: !1420)
!1424 = !DILocation(line: 1881, column: 58, scope: !1420)
!1425 = !DILocation(line: 1881, column: 62, scope: !1420)
!1426 = !DILocation(line: 1881, column: 60, scope: !1420)
!1427 = !DILocation(line: 1881, column: 70, scope: !1420)
!1428 = !DILocation(line: 1881, column: 68, scope: !1420)
!1429 = !DILocation(line: 1881, column: 72, scope: !1420)
!1430 = !DILocation(line: 0, scope: !1420)
!1431 = !DILocation(line: 1881, column: 30, scope: !1416)
!1432 = !DILocation(line: 1882, column: 28, scope: !1420)
!1433 = !DILocation(line: 1882, column: 11, scope: !1420)
!1434 = !DILocation(line: 1882, column: 22, scope: !1420)
!1435 = !DILocation(line: 1882, column: 26, scope: !1420)
!1436 = !DILocation(line: 1881, column: 87, scope: !1420)
!1437 = !DILocation(line: 1881, column: 30, scope: !1420)
!1438 = distinct !{!1438, !1431, !1439}
!1439 = !DILocation(line: 1882, column: 28, scope: !1416)
!1440 = !DILocation(line: 1887, column: 7, scope: !1335)
!1441 = !DILocation(line: 1841, column: 33, scope: !1326)
!1442 = !DILocation(line: 1841, column: 31, scope: !1326)
!1443 = !DILocation(line: 1839, column: 17, scope: !1326)
!1444 = distinct !{!1444, !1332, !1445}
!1445 = !DILocation(line: 1887, column: 7, scope: !1320)
!1446 = !DILocation(line: 1888, column: 32, scope: !736)
!1447 = !DILocation(line: 1888, column: 18, scope: !736)
!1448 = !DILocation(line: 1888, column: 30, scope: !736)
!1449 = !DILocation(line: 1889, column: 3, scope: !736)
!1450 = !DILocation(line: 1891, column: 19, scope: !736)
!1451 = !DILocation(line: 1891, column: 11, scope: !736)
!1452 = !DILocation(line: 1891, column: 3, scope: !736)
!1453 = !DILocation(line: 1893, column: 16, scope: !1454)
!1454 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1892, column: 19)
!1455 = !DILocation(line: 1893, column: 22, scope: !1454)
!1456 = !DILocation(line: 1893, column: 29, scope: !1454)
!1457 = !DILocation(line: 1894, column: 30, scope: !1454)
!1458 = !DILocation(line: 1895, column: 16, scope: !1454)
!1459 = !DILocation(line: 1895, column: 22, scope: !1454)
!1460 = !DILocation(line: 1895, column: 29, scope: !1454)
!1461 = !DILocation(line: 1896, column: 30, scope: !1454)
!1462 = !DILocation(line: 1897, column: 16, scope: !1454)
!1463 = !DILocation(line: 1897, column: 22, scope: !1454)
!1464 = !DILocation(line: 1897, column: 29, scope: !1454)
!1465 = !DILocation(line: 1898, column: 30, scope: !1454)
!1466 = !DILocation(line: 1899, column: 85, scope: !1454)
!1467 = !DILocation(line: 1899, column: 15, scope: !1454)
!1468 = !DILocation(line: 1900, column: 8, scope: !1454)
!1469 = !DILocation(line: 1901, column: 29, scope: !1454)
!1470 = !DILocation(line: 1903, column: 3, scope: !736)
!1471 = !DILocation(line: 1905, column: 21, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1905, column: 14)
!1473 = !DILocation(line: 1905, column: 41, scope: !1472)
!1474 = !DILocation(line: 1905, column: 47, scope: !1472)
!1475 = !DILocation(line: 1905, column: 55, scope: !1472)
!1476 = !DILocation(line: 1905, column: 61, scope: !1472)
!1477 = !DILocation(line: 1905, column: 14, scope: !1472)
!1478 = !DILocation(line: 1905, column: 69, scope: !1472)
!1479 = !DILocation(line: 1905, column: 14, scope: !736)
!1480 = !DILocation(line: 1907, column: 27, scope: !1481)
!1481 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 1906, column: 19)
!1482 = !DILocation(line: 1907, column: 33, scope: !1481)
!1483 = !DILocation(line: 1907, column: 19, scope: !1481)
!1484 = !DILocation(line: 1908, column: 19, scope: !1481)
!1485 = !DILocation(line: 1908, column: 25, scope: !1481)
!1486 = !DILocation(line: 1908, column: 30, scope: !1481)
!1487 = !DILocation(line: 1909, column: 19, scope: !1481)
!1488 = !DILocation(line: 1911, column: 40, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1911, column: 21)
!1490 = !DILocation(line: 1911, column: 48, scope: !1489)
!1491 = !DILocation(line: 1911, column: 21, scope: !1489)
!1492 = !DILocation(line: 1911, column: 21, scope: !736)
!1493 = !DILocation(line: 1913, column: 17, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 1913, column: 9)
!1495 = distinct !DILexicalBlock(scope: !1489, file: !3, line: 1912, column: 19)
!1496 = !DILocation(line: 1913, column: 10, scope: !1494)
!1497 = !DILocation(line: 1913, column: 9, scope: !1495)
!1498 = !DILocation(line: 1915, column: 7, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1494, file: !3, line: 1914, column: 21)
!1500 = !DILocation(line: 1916, column: 28, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1916, column: 21)
!1502 = !DILocation(line: 1916, column: 26, scope: !1501)
!1503 = !DILocation(line: 1916, column: 33, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1501, file: !3, line: 1916, column: 21)
!1505 = !DILocation(line: 1916, column: 35, scope: !1504)
!1506 = !DILocation(line: 1916, column: 21, scope: !1501)
!1507 = !DILocation(line: 1918, column: 22, scope: !1504)
!1508 = !DILocation(line: 1918, column: 11, scope: !1504)
!1509 = !DILocation(line: 1918, column: 25, scope: !1504)
!1510 = !DILocation(line: 1918, column: 42, scope: !1504)
!1511 = !DILocation(line: 1918, column: 31, scope: !1504)
!1512 = !DILocation(line: 1918, column: 45, scope: !1504)
!1513 = !DILocation(line: 1919, column: 43, scope: !1504)
!1514 = !DILocation(line: 1919, column: 32, scope: !1504)
!1515 = !DILocation(line: 1919, column: 46, scope: !1504)
!1516 = !DILocation(line: 1917, column: 23, scope: !1504)
!1517 = !DILocation(line: 1916, column: 58, scope: !1504)
!1518 = !DILocation(line: 1916, column: 21, scope: !1504)
!1519 = distinct !{!1519, !1506, !1520}
!1520 = !DILocation(line: 1919, column: 52, scope: !1501)
!1521 = !DILocation(line: 1920, column: 7, scope: !1499)
!1522 = !DILocation(line: 1923, column: 44, scope: !1495)
!1523 = !DILocation(line: 1923, column: 5, scope: !1495)
!1524 = !DILocation(line: 1924, column: 19, scope: !1495)
!1525 = !DILocation(line: 1925, column: 5, scope: !1495)
!1526 = !DILocation(line: 1926, column: 26, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 1926, column: 19)
!1528 = !DILocation(line: 1926, column: 24, scope: !1527)
!1529 = !DILocation(line: 1926, column: 31, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 1926, column: 19)
!1531 = !DILocation(line: 1926, column: 33, scope: !1530)
!1532 = !DILocation(line: 1926, column: 19, scope: !1527)
!1533 = !DILocation(line: 1928, column: 22, scope: !1530)
!1534 = !DILocation(line: 1928, column: 11, scope: !1530)
!1535 = !DILocation(line: 1928, column: 25, scope: !1530)
!1536 = !DILocation(line: 1928, column: 42, scope: !1530)
!1537 = !DILocation(line: 1928, column: 31, scope: !1530)
!1538 = !DILocation(line: 1928, column: 45, scope: !1530)
!1539 = !DILocation(line: 1929, column: 43, scope: !1530)
!1540 = !DILocation(line: 1929, column: 32, scope: !1530)
!1541 = !DILocation(line: 1929, column: 46, scope: !1530)
!1542 = !DILocation(line: 1927, column: 21, scope: !1530)
!1543 = !DILocation(line: 1926, column: 56, scope: !1530)
!1544 = !DILocation(line: 1926, column: 19, scope: !1530)
!1545 = distinct !{!1545, !1532, !1546}
!1546 = !DILocation(line: 1929, column: 52, scope: !1527)
!1547 = !DILocation(line: 1930, column: 5, scope: !1495)
!1548 = !DILocation(line: 1934, column: 19, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1489, file: !3, line: 1933, column: 19)
!1550 = !DILocation(line: 1934, column: 25, scope: !1549)
!1551 = !DILocation(line: 1934, column: 30, scope: !1549)
!1552 = !DILocation(line: 1936, column: 3, scope: !736)
!1553 = !DILocation(line: 1938, column: 3, scope: !736)
!1554 = !DILocation(line: 1938, column: 14, scope: !736)
!1555 = !DILocation(line: 1938, column: 24, scope: !736)
!1556 = !DILocation(line: 1939, column: 19, scope: !736)
!1557 = !DILocation(line: 1939, column: 11, scope: !736)
!1558 = !DILocation(line: 1939, column: 3, scope: !736)
!1559 = !DILocation(line: 1941, column: 16, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1940, column: 19)
!1561 = !DILocation(line: 1941, column: 27, scope: !1560)
!1562 = !DILocation(line: 1941, column: 36, scope: !1560)
!1563 = !DILocation(line: 1942, column: 30, scope: !1560)
!1564 = !DILocation(line: 1943, column: 30, scope: !1560)
!1565 = !DILocation(line: 1943, column: 41, scope: !1560)
!1566 = !DILocation(line: 1943, column: 50, scope: !1560)
!1567 = !DILocation(line: 1944, column: 30, scope: !1560)
!1568 = !DILocation(line: 1945, column: 30, scope: !1560)
!1569 = !DILocation(line: 1945, column: 41, scope: !1560)
!1570 = !DILocation(line: 1945, column: 50, scope: !1560)
!1571 = !DILocation(line: 1946, column: 30, scope: !1560)
!1572 = !DILocation(line: 1947, column: 87, scope: !1560)
!1573 = !DILocation(line: 1947, column: 16, scope: !1560)
!1574 = !DILocation(line: 1948, column: 9, scope: !1560)
!1575 = !DILocation(line: 1949, column: 30, scope: !1560)
!1576 = !DILocation(line: 1951, column: 3, scope: !736)
!1577 = !DILocation(line: 1953, column: 17, scope: !736)
!1578 = !DILocation(line: 1953, column: 9, scope: !736)
!1579 = !DILocation(line: 1953, column: 7, scope: !736)
!1580 = !DILocation(line: 1954, column: 7, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1954, column: 7)
!1582 = !DILocation(line: 1954, column: 7, scope: !736)
!1583 = !DILocation(line: 1956, column: 20, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1581, file: !3, line: 1955, column: 19)
!1585 = !DILocation(line: 1956, column: 24, scope: !1584)
!1586 = !DILocation(line: 1957, column: 37, scope: !1584)
!1587 = !DILocation(line: 1957, column: 32, scope: !1584)
!1588 = !DILocation(line: 1957, column: 19, scope: !1584)
!1589 = !DILocation(line: 1957, column: 25, scope: !1584)
!1590 = !DILocation(line: 1957, column: 30, scope: !1584)
!1591 = !DILocation(line: 1958, column: 37, scope: !1584)
!1592 = !DILocation(line: 1958, column: 41, scope: !1584)
!1593 = !DILocation(line: 1958, column: 32, scope: !1584)
!1594 = !DILocation(line: 1958, column: 19, scope: !1584)
!1595 = !DILocation(line: 1958, column: 25, scope: !1584)
!1596 = !DILocation(line: 1958, column: 30, scope: !1584)
!1597 = !DILocation(line: 1959, column: 5, scope: !1584)
!1598 = !DILocation(line: 1962, column: 37, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1581, file: !3, line: 1961, column: 19)
!1600 = !DILocation(line: 1962, column: 32, scope: !1599)
!1601 = !DILocation(line: 1962, column: 19, scope: !1599)
!1602 = !DILocation(line: 1962, column: 25, scope: !1599)
!1603 = !DILocation(line: 1962, column: 30, scope: !1599)
!1604 = !DILocation(line: 1963, column: 37, scope: !1599)
!1605 = !DILocation(line: 1963, column: 32, scope: !1599)
!1606 = !DILocation(line: 1963, column: 19, scope: !1599)
!1607 = !DILocation(line: 1963, column: 25, scope: !1599)
!1608 = !DILocation(line: 1963, column: 30, scope: !1599)
!1609 = !DILocation(line: 1965, column: 22, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1965, column: 21)
!1611 = !DILocation(line: 1965, column: 28, scope: !1610)
!1612 = !DILocation(line: 1965, column: 35, scope: !1610)
!1613 = !DILocation(line: 1965, column: 41, scope: !1610)
!1614 = !DILocation(line: 1965, column: 33, scope: !1610)
!1615 = !DILocation(line: 1965, column: 47, scope: !1610)
!1616 = !DILocation(line: 1965, column: 21, scope: !736)
!1617 = !DILocation(line: 1967, column: 5, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1610, file: !3, line: 1966, column: 19)
!1619 = !DILocation(line: 1968, column: 5, scope: !1618)
!1620 = !DILocation(line: 1970, column: 17, scope: !736)
!1621 = !DILocation(line: 1970, column: 23, scope: !736)
!1622 = !DILocation(line: 1970, column: 28, scope: !736)
!1623 = !DILocation(line: 1971, column: 3, scope: !736)
!1624 = !DILocation(line: 1973, column: 7, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !736, file: !3, line: 1973, column: 7)
!1626 = !DILocation(line: 1973, column: 7, scope: !736)
!1627 = !DILocation(line: 1975, column: 5, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1625, file: !3, line: 1974, column: 19)
!1629 = !DILocation(line: 1975, column: 16, scope: !1628)
!1630 = !DILocation(line: 1975, column: 25, scope: !1628)
!1631 = !DILocation(line: 1976, column: 5, scope: !1628)
!1632 = !DILocation(line: 1976, column: 11, scope: !1628)
!1633 = !DILocation(line: 1976, column: 20, scope: !1628)
!1634 = !DILocation(line: 1977, column: 5, scope: !1628)
!1635 = !DILocation(line: 1978, column: 12, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1625, file: !3, line: 1978, column: 12)
!1637 = !DILocation(line: 1978, column: 12, scope: !1625)
!1638 = !DILocation(line: 1980, column: 5, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1636, file: !3, line: 1979, column: 5)
!1640 = !DILocation(line: 1980, column: 16, scope: !1639)
!1641 = !DILocation(line: 1980, column: 25, scope: !1639)
!1642 = !DILocation(line: 1981, column: 5, scope: !1639)
!1643 = !DILocation(line: 1981, column: 11, scope: !1639)
!1644 = !DILocation(line: 1981, column: 20, scope: !1639)
!1645 = !DILocation(line: 1982, column: 5, scope: !1639)
!1646 = !DILocation(line: 1983, column: 12, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1636, file: !3, line: 1983, column: 12)
!1648 = !DILocation(line: 1983, column: 12, scope: !1636)
!1649 = !DILocation(line: 1985, column: 5, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1647, file: !3, line: 1984, column: 5)
!1651 = !DILocation(line: 1985, column: 16, scope: !1650)
!1652 = !DILocation(line: 1985, column: 25, scope: !1650)
!1653 = !DILocation(line: 1986, column: 5, scope: !1650)
!1654 = !DILocation(line: 1986, column: 11, scope: !1650)
!1655 = !DILocation(line: 1986, column: 20, scope: !1650)
!1656 = !DILocation(line: 1987, column: 5, scope: !1650)
!1657 = !DILocation(line: 1990, column: 48, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1647, file: !3, line: 1989, column: 19)
!1659 = !DILocation(line: 1990, column: 5, scope: !1658)
!1660 = !DILocation(line: 1991, column: 5, scope: !1658)
!1661 = !DILocation(line: 1992, column: 19, scope: !1658)
!1662 = !DILocation(line: 1994, column: 3, scope: !736)
!1663 = !DILocation(line: 1996, column: 22, scope: !736)
!1664 = !DILocation(line: 1996, column: 16, scope: !736)
!1665 = !DILocation(line: 1996, column: 3, scope: !736)
!1666 = !DILocation(line: 1996, column: 9, scope: !736)
!1667 = !DILocation(line: 1996, column: 14, scope: !736)
!1668 = !DILocation(line: 1997, column: 17, scope: !736)
!1669 = !DILocation(line: 1997, column: 23, scope: !736)
!1670 = !DILocation(line: 1997, column: 28, scope: !736)
!1671 = !DILocation(line: 1998, column: 3, scope: !736)
!1672 = !DILocation(line: 2000, column: 3, scope: !736)
!1673 = !DILocation(line: 2000, column: 14, scope: !736)
!1674 = !DILocation(line: 2000, column: 24, scope: !736)
!1675 = !DILocation(line: 2001, column: 27, scope: !736)
!1676 = !DILocation(line: 2001, column: 22, scope: !736)
!1677 = !DILocation(line: 2001, column: 3, scope: !736)
!1678 = !DILocation(line: 2001, column: 14, scope: !736)
!1679 = !DILocation(line: 2001, column: 20, scope: !736)
!1680 = !DILocation(line: 2002, column: 3, scope: !736)
!1681 = !DILocation(line: 2004, column: 3, scope: !736)
!1682 = !DILocation(line: 2004, column: 14, scope: !736)
!1683 = !DILocation(line: 2004, column: 24, scope: !736)
!1684 = !DILocation(line: 2005, column: 28, scope: !736)
!1685 = !DILocation(line: 2005, column: 23, scope: !736)
!1686 = !DILocation(line: 2005, column: 3, scope: !736)
!1687 = !DILocation(line: 2005, column: 14, scope: !736)
!1688 = !DILocation(line: 2005, column: 21, scope: !736)
!1689 = !DILocation(line: 2006, column: 3, scope: !736)
!1690 = !DILocation(line: 2008, column: 3, scope: !736)
!1691 = !DILocation(line: 2008, column: 14, scope: !736)
!1692 = !DILocation(line: 2008, column: 24, scope: !736)
!1693 = !DILocation(line: 2009, column: 10, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2009, column: 3)
!1695 = !DILocation(line: 2009, column: 33, scope: !1694)
!1696 = !DILocation(line: 2009, column: 25, scope: !1694)
!1697 = !DILocation(line: 2009, column: 23, scope: !1694)
!1698 = !DILocation(line: 2009, column: 8, scope: !1694)
!1699 = !DILocation(line: 2010, column: 22, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1694, file: !3, line: 2009, column: 3)
!1701 = !DILocation(line: 2010, column: 30, scope: !1700)
!1702 = !DILocation(line: 2010, column: 39, scope: !1700)
!1703 = !DILocation(line: 2010, column: 44, scope: !1700)
!1704 = !DILocation(line: 2010, column: 46, scope: !1700)
!1705 = !DILocation(line: 0, scope: !1700)
!1706 = !DILocation(line: 2009, column: 3, scope: !1694)
!1707 = !DILocation(line: 2013, column: 7, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1700, file: !3, line: 2012, column: 21)
!1709 = !DILocation(line: 2013, column: 18, scope: !1708)
!1710 = !DILocation(line: 2013, column: 23, scope: !1708)
!1711 = !DILocation(line: 2014, column: 27, scope: !1708)
!1712 = !DILocation(line: 2014, column: 20, scope: !1708)
!1713 = !DILocation(line: 2014, column: 18, scope: !1708)
!1714 = !DILocation(line: 2015, column: 22, scope: !1708)
!1715 = !DILocation(line: 2015, column: 33, scope: !1708)
!1716 = !DILocation(line: 2016, column: 60, scope: !1708)
!1717 = !DILocation(line: 2016, column: 55, scope: !1708)
!1718 = !DILocation(line: 2016, column: 21, scope: !1708)
!1719 = !DILocation(line: 2016, column: 32, scope: !1708)
!1720 = !DILocation(line: 2016, column: 41, scope: !1708)
!1721 = !DILocation(line: 2016, column: 44, scope: !1708)
!1722 = !DILocation(line: 2016, column: 53, scope: !1708)
!1723 = !DILocation(line: 2017, column: 60, scope: !1708)
!1724 = !DILocation(line: 2017, column: 71, scope: !1708)
!1725 = !DILocation(line: 2017, column: 55, scope: !1708)
!1726 = !DILocation(line: 2017, column: 21, scope: !1708)
!1727 = !DILocation(line: 2017, column: 32, scope: !1708)
!1728 = !DILocation(line: 2017, column: 41, scope: !1708)
!1729 = !DILocation(line: 2017, column: 44, scope: !1708)
!1730 = !DILocation(line: 2017, column: 53, scope: !1708)
!1731 = !DILocation(line: 2018, column: 21, scope: !1708)
!1732 = !DILocation(line: 2011, column: 32, scope: !1700)
!1733 = !DILocation(line: 2011, column: 30, scope: !1700)
!1734 = !DILocation(line: 2011, column: 54, scope: !1700)
!1735 = !DILocation(line: 2009, column: 3, scope: !1700)
!1736 = distinct !{!1736, !1706, !1737}
!1737 = !DILocation(line: 2018, column: 21, scope: !1694)
!1738 = !DILocation(line: 2020, column: 22, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2020, column: 21)
!1740 = !DILocation(line: 2020, column: 30, scope: !1739)
!1741 = !DILocation(line: 2020, column: 39, scope: !1739)
!1742 = !DILocation(line: 2020, column: 43, scope: !1739)
!1743 = !DILocation(line: 2020, column: 45, scope: !1739)
!1744 = !DILocation(line: 2020, column: 21, scope: !736)
!1745 = !DILocation(line: 2022, column: 5, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1739, file: !3, line: 2021, column: 19)
!1747 = !DILocation(line: 2023, column: 5, scope: !1746)
!1748 = !DILocation(line: 2025, column: 3, scope: !736)
!1749 = !DILocation(line: 2026, column: 15, scope: !736)
!1750 = !DILocation(line: 2027, column: 17, scope: !736)
!1751 = !DILocation(line: 2031, column: 3, scope: !651)
!1752 = distinct !DISubprogram(name: "processCompressOptions", scope: !3, file: !3, line: 1353, type: !1753, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!110, !146}
!1755 = !DILocalVariable(name: "opt", arg: 1, scope: !1752, file: !3, line: 1353, type: !146)
!1756 = !DILocation(line: 1353, column: 30, scope: !1752)
!1757 = !DILocalVariable(name: "cp", scope: !1752, file: !3, line: 1355, type: !146)
!1758 = !DILocation(line: 1355, column: 9, scope: !1752)
!1759 = !DILocation(line: 1357, column: 7, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !1752, file: !3, line: 1357, column: 7)
!1761 = !DILocation(line: 1357, column: 7, scope: !1752)
!1762 = !DILocation(line: 1359, column: 20, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 1358, column: 5)
!1764 = !DILocation(line: 1360, column: 5, scope: !1763)
!1765 = !DILocation(line: 1361, column: 12, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 1361, column: 12)
!1767 = !DILocation(line: 1361, column: 12, scope: !1760)
!1768 = !DILocation(line: 1363, column: 20, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !1766, file: !3, line: 1362, column: 5)
!1770 = !DILocation(line: 1364, column: 5, scope: !1769)
!1771 = !DILocation(line: 1365, column: 12, scope: !1772)
!1772 = distinct !DILexicalBlock(scope: !1766, file: !3, line: 1365, column: 12)
!1773 = !DILocation(line: 1365, column: 12, scope: !1766)
!1774 = !DILocation(line: 1367, column: 17, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1772, file: !3, line: 1366, column: 5)
!1776 = !DILocation(line: 1367, column: 10, scope: !1775)
!1777 = !DILocation(line: 1367, column: 8, scope: !1775)
!1778 = !DILocation(line: 1368, column: 20, scope: !1775)
!1779 = !DILocation(line: 1370, column: 5, scope: !1775)
!1780 = !DILocation(line: 1370, column: 12, scope: !1775)
!1781 = !DILocation(line: 1372, column: 11, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !3, line: 1372, column: 11)
!1783 = distinct !DILexicalBlock(scope: !1775, file: !3, line: 1371, column: 7)
!1784 = !DILocation(line: 1372, column: 11, scope: !1783)
!1785 = !DILocation(line: 1373, column: 17, scope: !1782)
!1786 = !DILocation(line: 1373, column: 20, scope: !1782)
!1787 = !DILocation(line: 1373, column: 12, scope: !1782)
!1788 = !DILocation(line: 1373, column: 10, scope: !1782)
!1789 = !DILocation(line: 1373, column: 2, scope: !1782)
!1790 = !DILocation(line: 1374, column: 16, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 1374, column: 16)
!1792 = !DILocation(line: 1374, column: 16, scope: !1782)
!1793 = !DILocation(line: 1375, column: 16, scope: !1791)
!1794 = !DILocation(line: 1375, column: 2, scope: !1791)
!1795 = !DILocation(line: 1376, column: 16, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1791, file: !3, line: 1376, column: 16)
!1797 = !DILocation(line: 1376, column: 16, scope: !1791)
!1798 = !DILocation(line: 1377, column: 16, scope: !1796)
!1799 = !DILocation(line: 1377, column: 2, scope: !1796)
!1800 = !DILocation(line: 1379, column: 2, scope: !1796)
!1801 = !DILocation(line: 1380, column: 19, scope: !1783)
!1802 = !DILocation(line: 1380, column: 22, scope: !1783)
!1803 = !DILocation(line: 1380, column: 12, scope: !1783)
!1804 = !DILocation(line: 1380, column: 10, scope: !1783)
!1805 = distinct !{!1805, !1779, !1806}
!1806 = !DILocation(line: 1381, column: 7, scope: !1775)
!1807 = !DILocation(line: 1382, column: 5, scope: !1775)
!1808 = !DILocation(line: 1383, column: 12, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1772, file: !3, line: 1383, column: 12)
!1810 = !DILocation(line: 1383, column: 12, scope: !1772)
!1811 = !DILocation(line: 1385, column: 22, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1809, file: !3, line: 1384, column: 5)
!1813 = !DILocation(line: 1385, column: 5, scope: !1812)
!1814 = !DILocation(line: 1386, column: 20, scope: !1812)
!1815 = !DILocation(line: 1387, column: 5, scope: !1812)
!1816 = !DILocation(line: 1388, column: 12, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1809, file: !3, line: 1388, column: 12)
!1818 = !DILocation(line: 1388, column: 12, scope: !1809)
!1819 = !DILocation(line: 1390, column: 20, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 1389, column: 5)
!1821 = !DILocation(line: 1391, column: 5, scope: !1820)
!1822 = !DILocation(line: 1392, column: 12, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 1392, column: 12)
!1824 = !DILocation(line: 1392, column: 12, scope: !1817)
!1825 = !DILocation(line: 1394, column: 17, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 1393, column: 5)
!1827 = !DILocation(line: 1394, column: 10, scope: !1826)
!1828 = !DILocation(line: 1394, column: 8, scope: !1826)
!1829 = !DILocation(line: 1395, column: 9, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 1395, column: 9)
!1831 = !DILocation(line: 1395, column: 9, scope: !1826)
!1832 = !DILocation(line: 1396, column: 27, scope: !1830)
!1833 = !DILocation(line: 1396, column: 29, scope: !1830)
!1834 = !DILocation(line: 1396, column: 22, scope: !1830)
!1835 = !DILocation(line: 1396, column: 20, scope: !1830)
!1836 = !DILocation(line: 1396, column: 7, scope: !1830)
!1837 = !DILocation(line: 1397, column: 20, scope: !1826)
!1838 = !DILocation(line: 1398, column: 5, scope: !1826)
!1839 = !DILocation(line: 1399, column: 12, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 1399, column: 12)
!1841 = !DILocation(line: 1399, column: 12, scope: !1823)
!1842 = !DILocation(line: 1401, column: 17, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1840, file: !3, line: 1400, column: 5)
!1844 = !DILocation(line: 1401, column: 10, scope: !1843)
!1845 = !DILocation(line: 1401, column: 8, scope: !1843)
!1846 = !DILocation(line: 1402, column: 9, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 1402, column: 9)
!1848 = !DILocation(line: 1402, column: 9, scope: !1843)
!1849 = !DILocation(line: 1403, column: 27, scope: !1847)
!1850 = !DILocation(line: 1403, column: 29, scope: !1847)
!1851 = !DILocation(line: 1403, column: 22, scope: !1847)
!1852 = !DILocation(line: 1403, column: 20, scope: !1847)
!1853 = !DILocation(line: 1403, column: 7, scope: !1847)
!1854 = !DILocation(line: 1404, column: 20, scope: !1843)
!1855 = !DILocation(line: 1405, column: 4, scope: !1843)
!1856 = !DILocation(line: 1407, column: 5, scope: !1840)
!1857 = !DILocation(line: 1409, column: 3, scope: !1752)
!1858 = !DILocation(line: 1410, column: 3, scope: !1752)
!1859 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 1413, type: !1860, scopeLine: 1414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{null}
!1862 = !DILocalVariable(name: "i", scope: !1859, file: !3, line: 1415, type: !110)
!1863 = !DILocation(line: 1415, column: 7, scope: !1859)
!1864 = !DILocation(line: 1417, column: 11, scope: !1859)
!1865 = !DILocation(line: 1417, column: 29, scope: !1859)
!1866 = !DILocation(line: 1417, column: 3, scope: !1859)
!1867 = !DILocation(line: 1418, column: 10, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1859, file: !3, line: 1418, column: 3)
!1869 = !DILocation(line: 1418, column: 8, scope: !1868)
!1870 = !DILocation(line: 1418, column: 26, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1868, file: !3, line: 1418, column: 3)
!1872 = !DILocation(line: 1418, column: 15, scope: !1871)
!1873 = !DILocation(line: 1418, column: 29, scope: !1871)
!1874 = !DILocation(line: 1418, column: 3, scope: !1868)
!1875 = !DILocation(line: 1419, column: 13, scope: !1871)
!1876 = !DILocation(line: 1419, column: 40, scope: !1871)
!1877 = !DILocation(line: 1419, column: 29, scope: !1871)
!1878 = !DILocation(line: 1419, column: 5, scope: !1871)
!1879 = !DILocation(line: 1418, column: 39, scope: !1871)
!1880 = !DILocation(line: 1418, column: 3, scope: !1871)
!1881 = distinct !{!1881, !1874, !1882}
!1882 = !DILocation(line: 1419, column: 42, scope: !1868)
!1883 = !DILocation(line: 1420, column: 3, scope: !1859)
!1884 = !DILocation(line: 1421, column: 3, scope: !1859)
!1885 = distinct !DISubprogram(name: "get_page_geometry", scope: !3, file: !3, line: 4853, type: !1886, scopeLine: 4854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!110, !146, !655}
!1888 = !DILocalVariable(name: "name", arg: 1, scope: !1885, file: !3, line: 4853, type: !146)
!1889 = !DILocation(line: 4853, column: 26, scope: !1885)
!1890 = !DILocalVariable(name: "page", arg: 2, scope: !1885, file: !3, line: 4853, type: !655)
!1891 = !DILocation(line: 4853, column: 48, scope: !1885)
!1892 = !DILocalVariable(name: "ptr", scope: !1885, file: !3, line: 4855, type: !146)
!1893 = !DILocation(line: 4855, column: 11, scope: !1885)
!1894 = !DILocalVariable(name: "n", scope: !1885, file: !3, line: 4856, type: !110)
!1895 = !DILocation(line: 4856, column: 9, scope: !1885)
!1896 = !DILocation(line: 4858, column: 16, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 4858, column: 5)
!1898 = !DILocation(line: 4858, column: 14, scope: !1897)
!1899 = !DILocation(line: 4858, column: 10, scope: !1897)
!1900 = !DILocation(line: 4858, column: 23, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 4858, column: 5)
!1902 = !DILocation(line: 4858, column: 22, scope: !1901)
!1903 = !DILocation(line: 4858, column: 5, scope: !1897)
!1904 = !DILocation(line: 4859, column: 34, scope: !1901)
!1905 = !DILocation(line: 4859, column: 33, scope: !1901)
!1906 = !DILocation(line: 4859, column: 28, scope: !1901)
!1907 = !DILocation(line: 4859, column: 20, scope: !1901)
!1908 = !DILocation(line: 4859, column: 14, scope: !1901)
!1909 = !DILocation(line: 4859, column: 8, scope: !1901)
!1910 = !DILocation(line: 4859, column: 12, scope: !1901)
!1911 = !DILocation(line: 4859, column: 7, scope: !1901)
!1912 = !DILocation(line: 4858, column: 31, scope: !1901)
!1913 = !DILocation(line: 4858, column: 5, scope: !1901)
!1914 = distinct !{!1914, !1903, !1915}
!1915 = !DILocation(line: 4859, column: 37, scope: !1897)
!1916 = !DILocation(line: 4861, column: 12, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 4861, column: 5)
!1918 = !DILocation(line: 4861, column: 10, scope: !1917)
!1919 = !DILocation(line: 4861, column: 17, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1917, file: !3, line: 4861, column: 5)
!1921 = !DILocation(line: 4861, column: 19, scope: !1920)
!1922 = !DILocation(line: 4861, column: 5, scope: !1917)
!1923 = !DILocation(line: 4863, column: 18, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 4863, column: 11)
!1925 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 4862, column: 7)
!1926 = !DILocation(line: 4863, column: 35, scope: !1924)
!1927 = !DILocation(line: 4863, column: 24, scope: !1924)
!1928 = !DILocation(line: 4863, column: 38, scope: !1924)
!1929 = !DILocation(line: 4863, column: 11, scope: !1924)
!1930 = !DILocation(line: 4863, column: 44, scope: !1924)
!1931 = !DILocation(line: 4863, column: 11, scope: !1925)
!1932 = !DILocation(line: 4865, column: 27, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 4864, column: 9)
!1934 = !DILocation(line: 4865, column: 16, scope: !1933)
!1935 = !DILocation(line: 4865, column: 30, scope: !1933)
!1936 = !DILocation(line: 4865, column: 2, scope: !1933)
!1937 = !DILocation(line: 4865, column: 8, scope: !1933)
!1938 = !DILocation(line: 4865, column: 14, scope: !1933)
!1939 = !DILocation(line: 4866, column: 28, scope: !1933)
!1940 = !DILocation(line: 4866, column: 17, scope: !1933)
!1941 = !DILocation(line: 4866, column: 31, scope: !1933)
!1942 = !DILocation(line: 4866, column: 2, scope: !1933)
!1943 = !DILocation(line: 4866, column: 8, scope: !1933)
!1944 = !DILocation(line: 4866, column: 15, scope: !1933)
!1945 = !DILocation(line: 4867, column: 18, scope: !1933)
!1946 = !DILocation(line: 4867, column: 24, scope: !1933)
!1947 = !DILocation(line: 4867, column: 41, scope: !1933)
!1948 = !DILocation(line: 4867, column: 30, scope: !1933)
!1949 = !DILocation(line: 4867, column: 44, scope: !1933)
!1950 = !DILocation(line: 4867, column: 9, scope: !1933)
!1951 = !DILocation(line: 4868, column: 9, scope: !1933)
!1952 = !DILocation(line: 4868, column: 15, scope: !1933)
!1953 = !DILocation(line: 4868, column: 24, scope: !1933)
!1954 = !DILocation(line: 4869, column: 9, scope: !1933)
!1955 = !DILocation(line: 4871, column: 7, scope: !1925)
!1956 = !DILocation(line: 4861, column: 38, scope: !1920)
!1957 = !DILocation(line: 4861, column: 5, scope: !1920)
!1958 = distinct !{!1958, !1922, !1959}
!1959 = !DILocation(line: 4871, column: 7, scope: !1917)
!1960 = !DILocation(line: 4873, column: 3, scope: !1885)
!1961 = !DILocation(line: 4874, column: 3, scope: !1885)
!1962 = distinct !DISubprogram(name: "processG3Options", scope: !3, file: !3, line: 1333, type: !1963, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null, !146}
!1965 = !DILocalVariable(name: "cp", arg: 1, scope: !1962, file: !3, line: 1333, type: !146)
!1966 = !DILocation(line: 1333, column: 24, scope: !1962)
!1967 = !DILocation(line: 1335, column: 19, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1962, file: !3, line: 1335, column: 6)
!1969 = !DILocation(line: 1335, column: 12, scope: !1968)
!1970 = !DILocation(line: 1335, column: 10, scope: !1968)
!1971 = !DILocation(line: 1335, column: 6, scope: !1962)
!1972 = !DILocation(line: 1336, column: 7, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 1336, column: 7)
!1974 = distinct !DILexicalBlock(scope: !1968, file: !3, line: 1335, column: 31)
!1975 = !DILocation(line: 1336, column: 17, scope: !1973)
!1976 = !DILocation(line: 1336, column: 7, scope: !1974)
!1977 = !DILocation(line: 1337, column: 14, scope: !1973)
!1978 = !DILocation(line: 1337, column: 4, scope: !1973)
!1979 = !DILocation(line: 1338, column: 3, scope: !1974)
!1980 = !DILocation(line: 1339, column: 6, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 1338, column: 6)
!1982 = !DILocation(line: 1340, column: 8, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1340, column: 8)
!1984 = !DILocation(line: 1340, column: 8, scope: !1981)
!1985 = !DILocation(line: 1341, column: 15, scope: !1983)
!1986 = !DILocation(line: 1341, column: 5, scope: !1983)
!1987 = !DILocation(line: 1342, column: 13, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 1342, column: 13)
!1989 = !DILocation(line: 1342, column: 13, scope: !1983)
!1990 = !DILocation(line: 1343, column: 15, scope: !1988)
!1991 = !DILocation(line: 1343, column: 5, scope: !1988)
!1992 = !DILocation(line: 1344, column: 13, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 1344, column: 13)
!1994 = !DILocation(line: 1344, column: 13, scope: !1988)
!1995 = !DILocation(line: 1345, column: 15, scope: !1993)
!1996 = !DILocation(line: 1345, column: 5, scope: !1993)
!1997 = !DILocation(line: 1347, column: 5, scope: !1993)
!1998 = !DILocation(line: 1348, column: 3, scope: !1981)
!1999 = !DILocation(line: 1348, column: 25, scope: !1974)
!2000 = !DILocation(line: 1348, column: 18, scope: !1974)
!2001 = !DILocation(line: 1348, column: 16, scope: !1974)
!2002 = distinct !{!2002, !1979, !2003}
!2003 = !DILocation(line: 1348, column: 35, scope: !1974)
!2004 = !DILocation(line: 1349, column: 2, scope: !1974)
!2005 = !DILocation(line: 1350, column: 1, scope: !1962)
!2006 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 2104, type: !2007, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !536)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!110, !110, !654}
!2009 = !DILocalVariable(name: "argc", arg: 1, scope: !2006, file: !3, line: 2104, type: !110)
!2010 = !DILocation(line: 2104, column: 10, scope: !2006)
!2011 = !DILocalVariable(name: "argv", arg: 2, scope: !2006, file: !3, line: 2104, type: !654)
!2012 = !DILocation(line: 2104, column: 22, scope: !2006)
!2013 = !DILocalVariable(name: "defconfig", scope: !2006, file: !3, line: 2107, type: !103)
!2014 = !DILocation(line: 2107, column: 10, scope: !2006)
!2015 = !DILocalVariable(name: "deffillorder", scope: !2006, file: !3, line: 2108, type: !103)
!2016 = !DILocation(line: 2108, column: 10, scope: !2006)
!2017 = !DILocalVariable(name: "deftilewidth", scope: !2006, file: !3, line: 2109, type: !105)
!2018 = !DILocation(line: 2109, column: 10, scope: !2006)
!2019 = !DILocalVariable(name: "deftilelength", scope: !2006, file: !3, line: 2110, type: !105)
!2020 = !DILocation(line: 2110, column: 10, scope: !2006)
!2021 = !DILocalVariable(name: "defrowsperstrip", scope: !2006, file: !3, line: 2111, type: !105)
!2022 = !DILocation(line: 2111, column: 10, scope: !2006)
!2023 = !DILocalVariable(name: "dirnum", scope: !2006, file: !3, line: 2112, type: !105)
!2024 = !DILocation(line: 2112, column: 10, scope: !2006)
!2025 = !DILocalVariable(name: "in", scope: !2006, file: !3, line: 2114, type: !193)
!2026 = !DILocation(line: 2114, column: 9, scope: !2006)
!2027 = !DILocalVariable(name: "out", scope: !2006, file: !3, line: 2115, type: !193)
!2028 = !DILocation(line: 2115, column: 9, scope: !2006)
!2029 = !DILocalVariable(name: "mode", scope: !2006, file: !3, line: 2116, type: !2030)
!2030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 80, elements: !2031)
!2031 = !{!2032}
!2032 = !DISubrange(count: 10)
!2033 = !DILocation(line: 2116, column: 9, scope: !2006)
!2034 = !DILocalVariable(name: "mp", scope: !2006, file: !3, line: 2117, type: !146)
!2035 = !DILocation(line: 2117, column: 9, scope: !2006)
!2036 = !DILocation(line: 2117, column: 14, scope: !2006)
!2037 = !DILocalVariable(name: "image", scope: !2006, file: !3, line: 2120, type: !543)
!2038 = !DILocation(line: 2120, column: 21, scope: !2006)
!2039 = !DILocalVariable(name: "crop", scope: !2006, file: !3, line: 2121, type: !593)
!2040 = !DILocation(line: 2121, column: 21, scope: !2006)
!2041 = !DILocalVariable(name: "page", scope: !2006, file: !3, line: 2122, type: !656)
!2042 = !DILocation(line: 2122, column: 21, scope: !2006)
!2043 = !DILocalVariable(name: "sections", scope: !2006, file: !3, line: 2123, type: !2044)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 7168, elements: !2054)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pageseg", file: !3, line: 248, size: 224, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !2045, file: !3, line: 249, baseType: !105, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !2045, file: !3, line: 250, baseType: !105, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !2045, file: !3, line: 251, baseType: !105, size: 32, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !2045, file: !3, line: 252, baseType: !105, size: 32, offset: 96)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2045, file: !3, line: 253, baseType: !110, size: 32, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2045, file: !3, line: 254, baseType: !110, size: 32, offset: 160)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "buffsize", scope: !2045, file: !3, line: 255, baseType: !105, size: 32, offset: 192)
!2054 = !{!2055}
!2055 = !DISubrange(count: 32)
!2056 = !DILocation(line: 2123, column: 21, scope: !2006)
!2057 = !DILocalVariable(name: "seg_buffs", scope: !2006, file: !3, line: 2124, type: !2058)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 4096, elements: !2054)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buffinfo", file: !3, line: 238, size: 128, elements: !2060)
!2060 = !{!2061, !2062}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2059, file: !3, line: 239, baseType: !105, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2059, file: !3, line: 240, baseType: !106, size: 64, offset: 64)
!2063 = !DILocation(line: 2124, column: 21, scope: !2006)
!2064 = !DILocalVariable(name: "dump", scope: !2006, file: !3, line: 2125, type: !558)
!2065 = !DILocation(line: 2125, column: 21, scope: !2006)
!2066 = !DILocalVariable(name: "read_buff", scope: !2006, file: !3, line: 2126, type: !106)
!2067 = !DILocation(line: 2126, column: 18, scope: !2006)
!2068 = !DILocalVariable(name: "crop_buff", scope: !2006, file: !3, line: 2127, type: !106)
!2069 = !DILocation(line: 2127, column: 18, scope: !2006)
!2070 = !DILocalVariable(name: "sect_buff", scope: !2006, file: !3, line: 2128, type: !106)
!2071 = !DILocation(line: 2128, column: 18, scope: !2006)
!2072 = !DILocalVariable(name: "sect_src", scope: !2006, file: !3, line: 2129, type: !106)
!2073 = !DILocation(line: 2129, column: 18, scope: !2006)
!2074 = !DILocalVariable(name: "imagelist", scope: !2006, file: !3, line: 2130, type: !2075)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 65568, elements: !2076)
!2076 = !{!2077}
!2077 = !DISubrange(count: 2049)
!2078 = !DILocation(line: 2130, column: 17, scope: !2006)
!2079 = !DILocalVariable(name: "image_count", scope: !2006, file: !3, line: 2131, type: !7)
!2080 = !DILocation(line: 2131, column: 17, scope: !2006)
!2081 = !DILocalVariable(name: "dump_images", scope: !2006, file: !3, line: 2132, type: !7)
!2082 = !DILocation(line: 2132, column: 17, scope: !2006)
!2083 = !DILocalVariable(name: "next_image", scope: !2006, file: !3, line: 2133, type: !7)
!2084 = !DILocation(line: 2133, column: 17, scope: !2006)
!2085 = !DILocalVariable(name: "next_page", scope: !2006, file: !3, line: 2134, type: !7)
!2086 = !DILocation(line: 2134, column: 17, scope: !2006)
!2087 = !DILocalVariable(name: "total_pages", scope: !2006, file: !3, line: 2135, type: !7)
!2088 = !DILocation(line: 2135, column: 17, scope: !2006)
!2089 = !DILocalVariable(name: "total_images", scope: !2006, file: !3, line: 2136, type: !7)
!2090 = !DILocation(line: 2136, column: 17, scope: !2006)
!2091 = !DILocalVariable(name: "end_of_input", scope: !2006, file: !3, line: 2137, type: !7)
!2092 = !DILocation(line: 2137, column: 17, scope: !2006)
!2093 = !DILocalVariable(name: "seg", scope: !2006, file: !3, line: 2138, type: !110)
!2094 = !DILocation(line: 2138, column: 10, scope: !2006)
!2095 = !DILocalVariable(name: "length", scope: !2006, file: !3, line: 2138, type: !110)
!2096 = !DILocation(line: 2138, column: 15, scope: !2006)
!2097 = !DILocalVariable(name: "temp_filename", scope: !2006, file: !3, line: 2139, type: !565)
!2098 = !DILocation(line: 2139, column: 10, scope: !2006)
!2099 = !DILocation(line: 2141, column: 19, scope: !2006)
!2100 = !DILocation(line: 2141, column: 54, scope: !2006)
!2101 = !DILocation(line: 2141, column: 17, scope: !2006)
!2102 = !DILocation(line: 2143, column: 3, scope: !2006)
!2103 = !DILocation(line: 2144, column: 3, scope: !2006)
!2104 = !DILocation(line: 2145, column: 24, scope: !2006)
!2105 = !DILocation(line: 2145, column: 34, scope: !2006)
!2106 = !DILocation(line: 2145, column: 3, scope: !2006)
!2107 = !DILocation(line: 2146, column: 3, scope: !2006)
!2108 = !DILocation(line: 2148, column: 25, scope: !2006)
!2109 = !DILocation(line: 2148, column: 31, scope: !2006)
!2110 = !DILocation(line: 2148, column: 37, scope: !2006)
!2111 = !DILocation(line: 2148, column: 41, scope: !2006)
!2112 = !DILocation(line: 2150, column: 39, scope: !2006)
!2113 = !DILocation(line: 2148, column: 3, scope: !2006)
!2114 = !DILocation(line: 2152, column: 7, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2152, column: 7)
!2116 = !DILocation(line: 2152, column: 14, scope: !2115)
!2117 = !DILocation(line: 2152, column: 12, scope: !2115)
!2118 = !DILocation(line: 2152, column: 21, scope: !2115)
!2119 = !DILocation(line: 2152, column: 7, scope: !2006)
!2120 = !DILocation(line: 2153, column: 5, scope: !2115)
!2121 = !DILocation(line: 2155, column: 8, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2155, column: 7)
!2123 = !DILocation(line: 2155, column: 15, scope: !2122)
!2124 = !DILocation(line: 2155, column: 13, scope: !2122)
!2125 = !DILocation(line: 2155, column: 23, scope: !2122)
!2126 = !DILocation(line: 2155, column: 7, scope: !2006)
!2127 = !DILocation(line: 2156, column: 13, scope: !2122)
!2128 = !DILocation(line: 2156, column: 5, scope: !2122)
!2129 = !DILocation(line: 2158, column: 18, scope: !2122)
!2130 = !DILocation(line: 2160, column: 3, scope: !2006)
!2131 = !DILocation(line: 2160, column: 10, scope: !2006)
!2132 = !DILocation(line: 2160, column: 19, scope: !2006)
!2133 = !DILocation(line: 2160, column: 24, scope: !2006)
!2134 = !DILocation(line: 2160, column: 17, scope: !2006)
!2135 = !DILocation(line: 2162, column: 20, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2161, column: 5)
!2137 = !DILocation(line: 2162, column: 25, scope: !2136)
!2138 = !DILocation(line: 2162, column: 10, scope: !2136)
!2139 = !DILocation(line: 2162, column: 8, scope: !2136)
!2140 = !DILocation(line: 2163, column: 9, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 2163, column: 9)
!2142 = !DILocation(line: 2163, column: 12, scope: !2141)
!2143 = !DILocation(line: 2163, column: 9, scope: !2136)
!2144 = !DILocation(line: 2164, column: 7, scope: !2141)
!2145 = !DILocation(line: 2167, column: 44, scope: !2136)
!2146 = !DILocation(line: 2167, column: 20, scope: !2136)
!2147 = !DILocation(line: 2167, column: 18, scope: !2136)
!2148 = !DILocation(line: 2168, column: 9, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 2168, column: 9)
!2150 = !DILocation(line: 2168, column: 21, scope: !2149)
!2151 = !DILocation(line: 2168, column: 9, scope: !2136)
!2152 = !DILocation(line: 2170, column: 14, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 2169, column: 7)
!2154 = !DILocation(line: 2171, column: 21, scope: !2153)
!2155 = !DILocation(line: 2171, column: 19, scope: !2153)
!2156 = !DILocation(line: 2172, column: 7, scope: !2153)
!2157 = !DILocation(line: 2175, column: 35, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 2174, column: 7)
!2159 = !DILocation(line: 2175, column: 25, scope: !2158)
!2160 = !DILocation(line: 2175, column: 47, scope: !2158)
!2161 = !DILocation(line: 2175, column: 16, scope: !2158)
!2162 = !DILocation(line: 2175, column: 14, scope: !2158)
!2163 = !DILocation(line: 2176, column: 17, scope: !2158)
!2164 = !DILocation(line: 2181, column: 11, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 2181, column: 11)
!2166 = !DILocation(line: 2181, column: 26, scope: !2165)
!2167 = !DILocation(line: 2181, column: 23, scope: !2165)
!2168 = !DILocation(line: 2181, column: 11, scope: !2158)
!2169 = !DILocation(line: 2182, column: 16, scope: !2165)
!2170 = !DILocation(line: 2182, column: 14, scope: !2165)
!2171 = !DILocation(line: 2182, column: 2, scope: !2165)
!2172 = !DILocation(line: 2184, column: 21, scope: !2158)
!2173 = !DILocation(line: 2184, column: 19, scope: !2158)
!2174 = !DILocation(line: 2188, column: 9, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 2188, column: 9)
!2176 = !DILocation(line: 2188, column: 16, scope: !2175)
!2177 = !DILocation(line: 2188, column: 9, scope: !2136)
!2178 = !DILocation(line: 2189, column: 16, scope: !2175)
!2179 = !DILocation(line: 2189, column: 29, scope: !2175)
!2180 = !DILocation(line: 2189, column: 14, scope: !2175)
!2181 = !DILocation(line: 2189, column: 7, scope: !2175)
!2182 = !DILocation(line: 2191, column: 9, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 2191, column: 9)
!2184 = !DILocation(line: 2191, column: 19, scope: !2183)
!2185 = !DILocation(line: 2191, column: 16, scope: !2183)
!2186 = !DILocation(line: 2191, column: 9, scope: !2136)
!2187 = !DILocation(line: 2193, column: 31, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 2192, column: 7)
!2189 = !DILocation(line: 2193, column: 18, scope: !2188)
!2190 = !DILocation(line: 2195, column: 9, scope: !2188)
!2191 = !DILocation(line: 2195, column: 16, scope: !2188)
!2192 = !DILocation(line: 2195, column: 21, scope: !2188)
!2193 = !DILocation(line: 2193, column: 7, scope: !2188)
!2194 = !DILocation(line: 2196, column: 11, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2188, file: !3, line: 2196, column: 11)
!2196 = !DILocation(line: 2196, column: 15, scope: !2195)
!2197 = !DILocation(line: 2196, column: 11, scope: !2188)
!2198 = !DILocation(line: 2197, column: 26, scope: !2195)
!2199 = !DILocation(line: 2197, column: 16, scope: !2195)
!2200 = !DILocation(line: 2197, column: 9, scope: !2195)
!2201 = !DILocation(line: 2198, column: 7, scope: !2188)
!2202 = !DILocation(line: 2201, column: 9, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 2201, column: 9)
!2204 = !DILocation(line: 2201, column: 16, scope: !2203)
!2205 = !DILocation(line: 2201, column: 21, scope: !2203)
!2206 = !DILocation(line: 2201, column: 42, scope: !2203)
!2207 = !DILocation(line: 2201, column: 54, scope: !2203)
!2208 = !DILocation(line: 2201, column: 46, scope: !2203)
!2209 = !DILocation(line: 2201, column: 25, scope: !2203)
!2210 = !DILocation(line: 2201, column: 9, scope: !2136)
!2211 = !DILocation(line: 2203, column: 30, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 2202, column: 7)
!2213 = !DILocation(line: 2203, column: 17, scope: !2212)
!2214 = !DILocation(line: 2203, column: 71, scope: !2212)
!2215 = !DILocation(line: 2203, column: 7, scope: !2212)
!2216 = !DILocation(line: 2204, column: 11, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 2204, column: 11)
!2218 = !DILocation(line: 2204, column: 15, scope: !2217)
!2219 = !DILocation(line: 2204, column: 11, scope: !2212)
!2220 = !DILocation(line: 2205, column: 26, scope: !2217)
!2221 = !DILocation(line: 2205, column: 16, scope: !2217)
!2222 = !DILocation(line: 2205, column: 9, scope: !2217)
!2223 = !DILocation(line: 2206, column: 7, scope: !2212)
!2224 = !DILocation(line: 2209, column: 18, scope: !2136)
!2225 = !DILocation(line: 2210, column: 5, scope: !2136)
!2226 = !DILocation(line: 2210, column: 12, scope: !2136)
!2227 = !DILocation(line: 2210, column: 25, scope: !2136)
!2228 = !DILocation(line: 2212, column: 16, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 2211, column: 7)
!2230 = !DILocation(line: 2212, column: 14, scope: !2229)
!2231 = !DILocation(line: 2213, column: 21, scope: !2229)
!2232 = !DILocation(line: 2213, column: 19, scope: !2229)
!2233 = !DILocation(line: 2214, column: 19, scope: !2229)
!2234 = !DILocation(line: 2214, column: 17, scope: !2229)
!2235 = !DILocation(line: 2215, column: 19, scope: !2229)
!2236 = !DILocation(line: 2215, column: 17, scope: !2229)
!2237 = !DILocation(line: 2216, column: 22, scope: !2229)
!2238 = !DILocation(line: 2216, column: 20, scope: !2229)
!2239 = !DILocation(line: 2217, column: 19, scope: !2229)
!2240 = !DILocation(line: 2217, column: 17, scope: !2229)
!2241 = !DILocation(line: 2218, column: 20, scope: !2229)
!2242 = !DILocation(line: 2218, column: 18, scope: !2229)
!2243 = !DILocation(line: 2219, column: 16, scope: !2229)
!2244 = !DILocation(line: 2219, column: 14, scope: !2229)
!2245 = !DILocation(line: 2221, column: 16, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2221, column: 11)
!2247 = !DILocation(line: 2221, column: 23, scope: !2246)
!2248 = !DILocation(line: 2221, column: 11, scope: !2229)
!2249 = !DILocation(line: 2224, column: 13, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2246, file: !3, line: 2222, column: 9)
!2251 = !DILocation(line: 2225, column: 30, scope: !2250)
!2252 = !DILocation(line: 2225, column: 25, scope: !2250)
!2253 = !DILocation(line: 2225, column: 18, scope: !2250)
!2254 = !DILocation(line: 2225, column: 16, scope: !2250)
!2255 = !DILocation(line: 2226, column: 13, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 2226, column: 13)
!2257 = !DILocation(line: 2226, column: 20, scope: !2256)
!2258 = !DILocation(line: 2226, column: 13, scope: !2250)
!2259 = !DILocation(line: 2228, column: 20, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 2228, column: 15)
!2261 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 2227, column: 11)
!2262 = !DILocation(line: 2228, column: 27, scope: !2260)
!2263 = !DILocation(line: 2228, column: 15, scope: !2261)
!2264 = !DILocation(line: 2229, column: 26, scope: !2260)
!2265 = !DILocation(line: 2229, column: 13, scope: !2260)
!2266 = !DILocation(line: 2233, column: 11, scope: !2261)
!2267 = !DILocation(line: 2234, column: 20, scope: !2261)
!2268 = !DILocation(line: 2234, column: 59, scope: !2261)
!2269 = !DILocation(line: 2234, column: 54, scope: !2261)
!2270 = !DILocation(line: 2234, column: 71, scope: !2261)
!2271 = !DILocation(line: 2235, column: 25, scope: !2261)
!2272 = !DILocation(line: 2235, column: 32, scope: !2261)
!2273 = !DILocation(line: 2235, column: 19, scope: !2261)
!2274 = !DILocation(line: 2234, column: 11, scope: !2261)
!2275 = !DILocation(line: 2236, column: 36, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 2236, column: 15)
!2277 = !DILocation(line: 2236, column: 56, scope: !2276)
!2278 = !DILocation(line: 2236, column: 51, scope: !2276)
!2279 = !DILocation(line: 2236, column: 30, scope: !2276)
!2280 = !DILocation(line: 2236, column: 21, scope: !2276)
!2281 = !DILocation(line: 2236, column: 28, scope: !2276)
!2282 = !DILocation(line: 2236, column: 63, scope: !2276)
!2283 = !DILocation(line: 2236, column: 15, scope: !2261)
!2284 = !DILocation(line: 2238, column: 63, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 2237, column: 13)
!2286 = !DILocation(line: 2238, column: 6, scope: !2285)
!2287 = !DILocation(line: 2239, column: 6, scope: !2285)
!2288 = !DILocation(line: 2241, column: 26, scope: !2261)
!2289 = !DILocation(line: 2241, column: 39, scope: !2261)
!2290 = !DILocation(line: 2242, column: 21, scope: !2261)
!2291 = !DILocation(line: 2242, column: 47, scope: !2261)
!2292 = !DILocation(line: 2242, column: 34, scope: !2261)
!2293 = !DILocation(line: 2241, column: 11, scope: !2261)
!2294 = !DILocation(line: 2243, column: 11, scope: !2261)
!2295 = !DILocation(line: 2244, column: 30, scope: !2250)
!2296 = !DILocation(line: 2244, column: 25, scope: !2250)
!2297 = !DILocation(line: 2244, column: 18, scope: !2250)
!2298 = !DILocation(line: 2244, column: 16, scope: !2250)
!2299 = !DILocation(line: 2245, column: 13, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 2245, column: 13)
!2301 = !DILocation(line: 2245, column: 20, scope: !2300)
!2302 = !DILocation(line: 2245, column: 13, scope: !2250)
!2303 = !DILocation(line: 2247, column: 20, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 2247, column: 15)
!2305 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 2246, column: 11)
!2306 = !DILocation(line: 2247, column: 28, scope: !2304)
!2307 = !DILocation(line: 2247, column: 15, scope: !2305)
!2308 = !DILocation(line: 2248, column: 26, scope: !2304)
!2309 = !DILocation(line: 2248, column: 13, scope: !2304)
!2310 = !DILocation(line: 2252, column: 11, scope: !2305)
!2311 = !DILocation(line: 2253, column: 20, scope: !2305)
!2312 = !DILocation(line: 2253, column: 60, scope: !2305)
!2313 = !DILocation(line: 2253, column: 55, scope: !2305)
!2314 = !DILocation(line: 2253, column: 73, scope: !2305)
!2315 = !DILocation(line: 2254, column: 25, scope: !2305)
!2316 = !DILocation(line: 2254, column: 32, scope: !2305)
!2317 = !DILocation(line: 2254, column: 19, scope: !2305)
!2318 = !DILocation(line: 2253, column: 11, scope: !2305)
!2319 = !DILocation(line: 2255, column: 37, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 2255, column: 15)
!2321 = !DILocation(line: 2255, column: 57, scope: !2320)
!2322 = !DILocation(line: 2255, column: 52, scope: !2320)
!2323 = !DILocation(line: 2255, column: 31, scope: !2320)
!2324 = !DILocation(line: 2255, column: 21, scope: !2320)
!2325 = !DILocation(line: 2255, column: 29, scope: !2320)
!2326 = !DILocation(line: 2255, column: 64, scope: !2320)
!2327 = !DILocation(line: 2255, column: 15, scope: !2305)
!2328 = !DILocation(line: 2257, column: 65, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 2256, column: 13)
!2330 = !DILocation(line: 2257, column: 8, scope: !2329)
!2331 = !DILocation(line: 2258, column: 6, scope: !2329)
!2332 = !DILocation(line: 2260, column: 26, scope: !2305)
!2333 = !DILocation(line: 2260, column: 40, scope: !2305)
!2334 = !DILocation(line: 2261, column: 21, scope: !2305)
!2335 = !DILocation(line: 2261, column: 47, scope: !2305)
!2336 = !DILocation(line: 2261, column: 34, scope: !2305)
!2337 = !DILocation(line: 2260, column: 11, scope: !2305)
!2338 = !DILocation(line: 2262, column: 11, scope: !2305)
!2339 = !DILocation(line: 2263, column: 9, scope: !2250)
!2340 = !DILocation(line: 2265, column: 16, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2265, column: 11)
!2342 = !DILocation(line: 2265, column: 11, scope: !2341)
!2343 = !DILocation(line: 2265, column: 11, scope: !2229)
!2344 = !DILocation(line: 2266, column: 69, scope: !2341)
!2345 = !DILocation(line: 2266, column: 76, scope: !2341)
!2346 = !DILocation(line: 2266, column: 81, scope: !2341)
!2347 = !DILocation(line: 2266, column: 10, scope: !2341)
!2348 = !DILocation(line: 2268, column: 21, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2268, column: 11)
!2350 = !DILocation(line: 2268, column: 11, scope: !2349)
!2351 = !DILocation(line: 2268, column: 11, scope: !2229)
!2352 = !DILocation(line: 2270, column: 9, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 2269, column: 9)
!2354 = !DILocation(line: 2271, column: 9, scope: !2353)
!2355 = !DILocation(line: 2276, column: 17, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2276, column: 11)
!2357 = !DILocation(line: 2276, column: 11, scope: !2356)
!2358 = !DILocation(line: 2276, column: 29, scope: !2356)
!2359 = !DILocation(line: 2276, column: 11, scope: !2229)
!2360 = !DILocation(line: 2278, column: 6, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2362, file: !3, line: 2278, column: 6)
!2362 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 2277, column: 9)
!2363 = !DILocation(line: 2278, column: 6, scope: !2362)
!2364 = !DILocation(line: 2279, column: 6, scope: !2361)
!2365 = !DILocation(line: 2280, column: 9, scope: !2362)
!2366 = !DILocation(line: 2282, column: 11, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2282, column: 11)
!2368 = !DILocation(line: 2282, column: 11, scope: !2229)
!2369 = !DILocation(line: 2284, column: 9, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 2283, column: 9)
!2371 = !DILocation(line: 2285, column: 9, scope: !2370)
!2372 = !DILocation(line: 2288, column: 16, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2288, column: 11)
!2374 = !DILocation(line: 2288, column: 11, scope: !2373)
!2375 = !DILocation(line: 2288, column: 27, scope: !2373)
!2376 = !DILocation(line: 2288, column: 11, scope: !2229)
!2377 = !DILocation(line: 2290, column: 62, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 2290, column: 13)
!2379 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 2289, column: 9)
!2380 = !DILocation(line: 2290, column: 13, scope: !2378)
!2381 = !DILocation(line: 2290, column: 13, scope: !2379)
!2382 = !DILocation(line: 2292, column: 11, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 2291, column: 11)
!2384 = !DILocation(line: 2293, column: 11, scope: !2383)
!2385 = !DILocation(line: 2295, column: 2, scope: !2379)
!2386 = !DILocation(line: 2298, column: 13, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2388, file: !3, line: 2298, column: 13)
!2388 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 2297, column: 9)
!2389 = !DILocation(line: 2298, column: 13, scope: !2388)
!2390 = !DILocation(line: 2300, column: 11, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2387, file: !3, line: 2299, column: 11)
!2392 = !DILocation(line: 2301, column: 11, scope: !2391)
!2393 = !DILocation(line: 2304, column: 16, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2304, column: 11)
!2395 = !DILocation(line: 2304, column: 21, scope: !2394)
!2396 = !DILocation(line: 2304, column: 11, scope: !2229)
!2397 = !DILocation(line: 2306, column: 18, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 2306, column: 13)
!2399 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 2305, column: 9)
!2400 = !DILocation(line: 2306, column: 13, scope: !2398)
!2401 = !DILocation(line: 2306, column: 29, scope: !2398)
!2402 = !DILocation(line: 2306, column: 13, scope: !2399)
!2403 = !DILocation(line: 2308, column: 20, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 2307, column: 11)
!2405 = !DILocation(line: 2308, column: 52, scope: !2404)
!2406 = !DILocation(line: 2309, column: 27, scope: !2404)
!2407 = !DILocation(line: 2309, column: 31, scope: !2404)
!2408 = !DILocation(line: 2309, column: 36, scope: !2404)
!2409 = !DILocation(line: 2309, column: 41, scope: !2404)
!2410 = !DILocation(line: 2309, column: 59, scope: !2404)
!2411 = !DILocation(line: 2308, column: 4, scope: !2404)
!2412 = !DILocation(line: 2310, column: 11, scope: !2404)
!2413 = !DILocation(line: 2313, column: 34, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 2313, column: 8)
!2415 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 2312, column: 11)
!2416 = !DILocation(line: 2313, column: 43, scope: !2414)
!2417 = !DILocation(line: 2313, column: 38, scope: !2414)
!2418 = !DILocation(line: 2313, column: 53, scope: !2414)
!2419 = !DILocation(line: 2313, column: 58, scope: !2414)
!2420 = !DILocation(line: 2313, column: 63, scope: !2414)
!2421 = !DILocation(line: 2313, column: 8, scope: !2414)
!2422 = !DILocation(line: 2313, column: 8, scope: !2415)
!2423 = !DILocation(line: 2315, column: 14, scope: !2414)
!2424 = !DILocation(line: 2316, column: 33, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 2316, column: 15)
!2426 = !DILocation(line: 2316, column: 37, scope: !2425)
!2427 = !DILocation(line: 2316, column: 61, scope: !2425)
!2428 = !DILocation(line: 2317, column: 38, scope: !2425)
!2429 = !DILocation(line: 2317, column: 55, scope: !2425)
!2430 = !DILocation(line: 2317, column: 66, scope: !2425)
!2431 = !DILocation(line: 2317, column: 77, scope: !2425)
!2432 = !DILocation(line: 2316, column: 15, scope: !2425)
!2433 = !DILocation(line: 2316, column: 15, scope: !2415)
!2434 = !DILocation(line: 2319, column: 14, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2425, file: !3, line: 2318, column: 13)
!2436 = !DILocation(line: 2320, column: 14, scope: !2435)
!2437 = !DILocation(line: 2323, column: 2, scope: !2399)
!2438 = !DILocation(line: 2329, column: 6, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 2329, column: 6)
!2440 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 2325, column: 9)
!2441 = !DILocation(line: 2329, column: 16, scope: !2439)
!2442 = !DILocation(line: 2329, column: 6, scope: !2440)
!2443 = !DILocation(line: 2330, column: 15, scope: !2439)
!2444 = !DILocation(line: 2330, column: 13, scope: !2439)
!2445 = !DILocation(line: 2330, column: 4, scope: !2439)
!2446 = !DILocation(line: 2332, column: 22, scope: !2439)
!2447 = !DILocation(line: 2332, column: 20, scope: !2439)
!2448 = !DILocation(line: 2334, column: 61, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 2334, column: 13)
!2450 = !DILocation(line: 2334, column: 13, scope: !2449)
!2451 = !DILocation(line: 2334, column: 13, scope: !2440)
!2452 = !DILocation(line: 2336, column: 11, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 2335, column: 11)
!2454 = !DILocation(line: 2337, column: 11, scope: !2453)
!2455 = !DILocation(line: 2342, column: 32, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 2342, column: 6)
!2457 = !DILocation(line: 2342, column: 41, scope: !2456)
!2458 = !DILocation(line: 2342, column: 36, scope: !2456)
!2459 = !DILocation(line: 2342, column: 51, scope: !2456)
!2460 = !DILocation(line: 2342, column: 56, scope: !2456)
!2461 = !DILocation(line: 2342, column: 61, scope: !2456)
!2462 = !DILocation(line: 2342, column: 6, scope: !2456)
!2463 = !DILocation(line: 2342, column: 6, scope: !2440)
!2464 = !DILocation(line: 2343, column: 11, scope: !2456)
!2465 = !DILocation(line: 2345, column: 25, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 2345, column: 6)
!2467 = !DILocation(line: 2345, column: 29, scope: !2466)
!2468 = !DILocation(line: 2345, column: 49, scope: !2466)
!2469 = !DILocation(line: 2345, column: 66, scope: !2466)
!2470 = !DILocation(line: 2345, column: 6, scope: !2466)
!2471 = !DILocation(line: 2345, column: 6, scope: !2440)
!2472 = !DILocation(line: 2347, column: 11, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 2346, column: 11)
!2474 = !DILocation(line: 2348, column: 11, scope: !2473)
!2475 = !DILocation(line: 2353, column: 11, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2353, column: 11)
!2477 = !DILocation(line: 2353, column: 23, scope: !2476)
!2478 = !DILocation(line: 2353, column: 11, scope: !2229)
!2479 = !DILocation(line: 2354, column: 15, scope: !2476)
!2480 = !DILocation(line: 2354, column: 9, scope: !2476)
!2481 = !DILocation(line: 2357, column: 30, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2476, file: !3, line: 2356, column: 9)
!2483 = !DILocation(line: 2357, column: 20, scope: !2482)
!2484 = !DILocation(line: 2357, column: 42, scope: !2482)
!2485 = !DILocation(line: 2357, column: 11, scope: !2482)
!2486 = !DILocation(line: 2357, column: 9, scope: !2482)
!2487 = !DILocation(line: 2358, column: 19, scope: !2482)
!2488 = !DILocation(line: 2361, column: 11, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2361, column: 11)
!2490 = !DILocation(line: 2361, column: 18, scope: !2489)
!2491 = !DILocation(line: 2361, column: 11, scope: !2229)
!2492 = !DILocation(line: 2362, column: 42, scope: !2489)
!2493 = !DILocation(line: 2362, column: 18, scope: !2489)
!2494 = !DILocation(line: 2362, column: 46, scope: !2489)
!2495 = !DILocation(line: 2362, column: 16, scope: !2489)
!2496 = !DILocation(line: 2362, column: 9, scope: !2489)
!2497 = !DILocation(line: 2364, column: 29, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2364, column: 11)
!2499 = !DILocation(line: 2364, column: 41, scope: !2498)
!2500 = !DILocation(line: 2364, column: 33, scope: !2498)
!2501 = !DILocation(line: 2364, column: 12, scope: !2498)
!2502 = !DILocation(line: 2364, column: 11, scope: !2229)
!2503 = !DILocation(line: 2365, column: 22, scope: !2498)
!2504 = !DILocation(line: 2365, column: 9, scope: !2498)
!2505 = distinct !{!2505, !2225, !2506}
!2506 = !DILocation(line: 2366, column: 7, scope: !2136)
!2507 = !DILocation(line: 2367, column: 15, scope: !2136)
!2508 = !DILocation(line: 2367, column: 5, scope: !2136)
!2509 = !DILocation(line: 2368, column: 11, scope: !2136)
!2510 = distinct !{!2510, !2130, !2511}
!2511 = !DILocation(line: 2369, column: 5, scope: !2006)
!2512 = !DILocation(line: 2372, column: 7, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2372, column: 7)
!2514 = !DILocation(line: 2372, column: 7, scope: !2006)
!2515 = !DILocation(line: 2373, column: 15, scope: !2513)
!2516 = !DILocation(line: 2373, column: 5, scope: !2513)
!2517 = !DILocation(line: 2375, column: 7, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2375, column: 7)
!2519 = !DILocation(line: 2375, column: 7, scope: !2006)
!2520 = !DILocation(line: 2376, column: 15, scope: !2518)
!2521 = !DILocation(line: 2376, column: 5, scope: !2518)
!2522 = !DILocation(line: 2378, column: 7, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2378, column: 7)
!2524 = !DILocation(line: 2378, column: 7, scope: !2006)
!2525 = !DILocation(line: 2379, column: 15, scope: !2523)
!2526 = !DILocation(line: 2379, column: 5, scope: !2523)
!2527 = !DILocation(line: 2382, column: 12, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2382, column: 3)
!2529 = !DILocation(line: 2382, column: 8, scope: !2528)
!2530 = !DILocation(line: 2382, column: 17, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 2382, column: 3)
!2532 = !DILocation(line: 2382, column: 28, scope: !2531)
!2533 = !DILocation(line: 2382, column: 23, scope: !2531)
!2534 = !DILocation(line: 2382, column: 21, scope: !2531)
!2535 = !DILocation(line: 2382, column: 3, scope: !2528)
!2536 = !DILocation(line: 2383, column: 26, scope: !2531)
!2537 = !DILocation(line: 2383, column: 16, scope: !2531)
!2538 = !DILocation(line: 2383, column: 31, scope: !2531)
!2539 = !DILocation(line: 2383, column: 5, scope: !2531)
!2540 = !DILocation(line: 2382, column: 43, scope: !2531)
!2541 = !DILocation(line: 2382, column: 3, scope: !2531)
!2542 = distinct !{!2542, !2535, !2543}
!2543 = !DILocation(line: 2383, column: 37, scope: !2528)
!2544 = !DILocation(line: 2385, column: 12, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 2385, column: 7)
!2546 = !DILocation(line: 2385, column: 19, scope: !2545)
!2547 = !DILocation(line: 2385, column: 7, scope: !2006)
!2548 = !DILocation(line: 2387, column: 14, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 2387, column: 9)
!2550 = distinct !DILexicalBlock(scope: !2545, file: !3, line: 2386, column: 5)
!2551 = !DILocation(line: 2387, column: 21, scope: !2549)
!2552 = !DILocation(line: 2387, column: 9, scope: !2550)
!2553 = !DILocation(line: 2388, column: 19, scope: !2549)
!2554 = !DILocation(line: 2388, column: 6, scope: !2549)
!2555 = !DILocation(line: 2390, column: 14, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 2390, column: 9)
!2557 = !DILocation(line: 2390, column: 22, scope: !2556)
!2558 = !DILocation(line: 2390, column: 9, scope: !2550)
!2559 = !DILocation(line: 2392, column: 23, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2556, file: !3, line: 2391, column: 7)
!2561 = !DILocation(line: 2392, column: 37, scope: !2560)
!2562 = !DILocation(line: 2392, column: 86, scope: !2560)
!2563 = !DILocation(line: 2392, column: 73, scope: !2560)
!2564 = !DILocation(line: 2392, column: 7, scope: !2560)
!2565 = !DILocation(line: 2393, column: 20, scope: !2560)
!2566 = !DILocation(line: 2393, column: 7, scope: !2560)
!2567 = !DILocation(line: 2394, column: 7, scope: !2560)
!2568 = !DILocation(line: 2395, column: 5, scope: !2550)
!2569 = !DILocation(line: 2397, column: 13, scope: !2006)
!2570 = !DILocation(line: 2397, column: 3, scope: !2006)
!2571 = !DILocation(line: 2399, column: 3, scope: !2006)
!2572 = !DILocation(line: 2400, column: 3, scope: !2006)
!2573 = distinct !DISubprogram(name: "initImageData", scope: !3, file: !3, line: 4915, type: !2574, scopeLine: 4916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !542}
!2576 = !DILocalVariable(name: "image", arg: 1, scope: !2573, file: !3, line: 4915, type: !542)
!2577 = !DILocation(line: 4915, column: 35, scope: !2573)
!2578 = !DILocation(line: 4917, column: 3, scope: !2573)
!2579 = !DILocation(line: 4917, column: 10, scope: !2573)
!2580 = !DILocation(line: 4917, column: 15, scope: !2573)
!2581 = !DILocation(line: 4918, column: 3, scope: !2573)
!2582 = !DILocation(line: 4918, column: 10, scope: !2573)
!2583 = !DILocation(line: 4918, column: 15, scope: !2573)
!2584 = !DILocation(line: 4919, column: 3, scope: !2573)
!2585 = !DILocation(line: 4919, column: 10, scope: !2573)
!2586 = !DILocation(line: 4919, column: 16, scope: !2573)
!2587 = !DILocation(line: 4920, column: 3, scope: !2573)
!2588 = !DILocation(line: 4920, column: 10, scope: !2573)
!2589 = !DILocation(line: 4920, column: 17, scope: !2573)
!2590 = !DILocation(line: 4921, column: 3, scope: !2573)
!2591 = !DILocation(line: 4921, column: 10, scope: !2573)
!2592 = !DILocation(line: 4921, column: 19, scope: !2573)
!2593 = !DILocation(line: 4922, column: 3, scope: !2573)
!2594 = !DILocation(line: 4922, column: 10, scope: !2573)
!2595 = !DILocation(line: 4922, column: 14, scope: !2573)
!2596 = !DILocation(line: 4923, column: 3, scope: !2573)
!2597 = !DILocation(line: 4923, column: 10, scope: !2573)
!2598 = !DILocation(line: 4923, column: 14, scope: !2573)
!2599 = !DILocation(line: 4924, column: 3, scope: !2573)
!2600 = !DILocation(line: 4924, column: 10, scope: !2573)
!2601 = !DILocation(line: 4924, column: 17, scope: !2573)
!2602 = !DILocation(line: 4925, column: 3, scope: !2573)
!2603 = !DILocation(line: 4925, column: 10, scope: !2573)
!2604 = !DILocation(line: 4925, column: 22, scope: !2573)
!2605 = !DILocation(line: 4926, column: 3, scope: !2573)
!2606 = !DILocation(line: 4926, column: 10, scope: !2573)
!2607 = !DILocation(line: 4926, column: 22, scope: !2573)
!2608 = !DILocation(line: 4927, column: 3, scope: !2573)
!2609 = !DILocation(line: 4927, column: 10, scope: !2573)
!2610 = !DILocation(line: 4927, column: 22, scope: !2573)
!2611 = !DILocation(line: 4928, column: 3, scope: !2573)
!2612 = !DILocation(line: 4928, column: 10, scope: !2573)
!2613 = !DILocation(line: 4928, column: 22, scope: !2573)
!2614 = !DILocation(line: 4929, column: 3, scope: !2573)
!2615 = distinct !DISubprogram(name: "initCropMasks", scope: !3, file: !3, line: 4932, type: !2616, scopeLine: 4933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{null, !592}
!2618 = !DILocalVariable(name: "cps", arg: 1, scope: !2615, file: !3, line: 4932, type: !592)
!2619 = !DILocation(line: 4932, column: 34, scope: !2615)
!2620 = !DILocalVariable(name: "i", scope: !2615, file: !3, line: 4934, type: !110)
!2621 = !DILocation(line: 4934, column: 8, scope: !2615)
!2622 = !DILocation(line: 4936, column: 4, scope: !2615)
!2623 = !DILocation(line: 4936, column: 9, scope: !2615)
!2624 = !DILocation(line: 4936, column: 19, scope: !2615)
!2625 = !DILocation(line: 4937, column: 4, scope: !2615)
!2626 = !DILocation(line: 4937, column: 9, scope: !2615)
!2627 = !DILocation(line: 4937, column: 19, scope: !2615)
!2628 = !DILocation(line: 4938, column: 4, scope: !2615)
!2629 = !DILocation(line: 4938, column: 9, scope: !2615)
!2630 = !DILocation(line: 4938, column: 19, scope: !2615)
!2631 = !DILocation(line: 4939, column: 4, scope: !2615)
!2632 = !DILocation(line: 4939, column: 9, scope: !2615)
!2633 = !DILocation(line: 4939, column: 15, scope: !2615)
!2634 = !DILocation(line: 4940, column: 4, scope: !2615)
!2635 = !DILocation(line: 4940, column: 9, scope: !2615)
!2636 = !DILocation(line: 4940, column: 16, scope: !2615)
!2637 = !DILocation(line: 4941, column: 11, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 4941, column: 4)
!2639 = !DILocation(line: 4941, column: 9, scope: !2638)
!2640 = !DILocation(line: 4941, column: 16, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 4941, column: 4)
!2642 = !DILocation(line: 4941, column: 18, scope: !2641)
!2643 = !DILocation(line: 4941, column: 4, scope: !2638)
!2644 = !DILocation(line: 4942, column: 6, scope: !2641)
!2645 = !DILocation(line: 4942, column: 11, scope: !2641)
!2646 = !DILocation(line: 4942, column: 19, scope: !2641)
!2647 = !DILocation(line: 4942, column: 22, scope: !2641)
!2648 = !DILocation(line: 4941, column: 24, scope: !2641)
!2649 = !DILocation(line: 4941, column: 4, scope: !2641)
!2650 = distinct !{!2650, !2643, !2651}
!2651 = !DILocation(line: 4942, column: 24, scope: !2638)
!2652 = !DILocation(line: 4943, column: 4, scope: !2615)
!2653 = !DILocation(line: 4943, column: 9, scope: !2615)
!2654 = !DILocation(line: 4943, column: 19, scope: !2615)
!2655 = !DILocation(line: 4944, column: 4, scope: !2615)
!2656 = !DILocation(line: 4944, column: 9, scope: !2615)
!2657 = !DILocation(line: 4944, column: 24, scope: !2615)
!2658 = !DILocation(line: 4945, column: 4, scope: !2615)
!2659 = !DILocation(line: 4945, column: 9, scope: !2615)
!2660 = !DILocation(line: 4945, column: 25, scope: !2615)
!2661 = !DILocation(line: 4946, column: 4, scope: !2615)
!2662 = !DILocation(line: 4946, column: 9, scope: !2615)
!2663 = !DILocation(line: 4946, column: 18, scope: !2615)
!2664 = !DILocation(line: 4947, column: 4, scope: !2615)
!2665 = !DILocation(line: 4947, column: 9, scope: !2615)
!2666 = !DILocation(line: 4947, column: 21, scope: !2615)
!2667 = !DILocation(line: 4948, column: 4, scope: !2615)
!2668 = !DILocation(line: 4948, column: 9, scope: !2615)
!2669 = !DILocation(line: 4948, column: 18, scope: !2615)
!2670 = !DILocation(line: 4949, column: 4, scope: !2615)
!2671 = !DILocation(line: 4949, column: 9, scope: !2615)
!2672 = !DILocation(line: 4949, column: 18, scope: !2615)
!2673 = !DILocation(line: 4950, column: 4, scope: !2615)
!2674 = !DILocation(line: 4950, column: 9, scope: !2615)
!2675 = !DILocation(line: 4950, column: 18, scope: !2615)
!2676 = !DILocation(line: 4951, column: 4, scope: !2615)
!2677 = !DILocation(line: 4951, column: 9, scope: !2615)
!2678 = !DILocation(line: 4951, column: 18, scope: !2615)
!2679 = !DILocation(line: 4952, column: 11, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 4952, column: 4)
!2681 = !DILocation(line: 4952, column: 9, scope: !2680)
!2682 = !DILocation(line: 4952, column: 16, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 4952, column: 4)
!2684 = !DILocation(line: 4952, column: 18, scope: !2683)
!2685 = !DILocation(line: 4952, column: 4, scope: !2680)
!2686 = !DILocation(line: 4954, column: 6, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 4953, column: 6)
!2688 = !DILocation(line: 4954, column: 11, scope: !2687)
!2689 = !DILocation(line: 4954, column: 19, scope: !2687)
!2690 = !DILocation(line: 4954, column: 22, scope: !2687)
!2691 = !DILocation(line: 4954, column: 25, scope: !2687)
!2692 = !DILocation(line: 4955, column: 6, scope: !2687)
!2693 = !DILocation(line: 4955, column: 11, scope: !2687)
!2694 = !DILocation(line: 4955, column: 19, scope: !2687)
!2695 = !DILocation(line: 4955, column: 22, scope: !2687)
!2696 = !DILocation(line: 4955, column: 25, scope: !2687)
!2697 = !DILocation(line: 4956, column: 6, scope: !2687)
!2698 = !DILocation(line: 4956, column: 11, scope: !2687)
!2699 = !DILocation(line: 4956, column: 19, scope: !2687)
!2700 = !DILocation(line: 4956, column: 22, scope: !2687)
!2701 = !DILocation(line: 4956, column: 25, scope: !2687)
!2702 = !DILocation(line: 4957, column: 6, scope: !2687)
!2703 = !DILocation(line: 4957, column: 11, scope: !2687)
!2704 = !DILocation(line: 4957, column: 19, scope: !2687)
!2705 = !DILocation(line: 4957, column: 22, scope: !2687)
!2706 = !DILocation(line: 4957, column: 25, scope: !2687)
!2707 = !DILocation(line: 4958, column: 6, scope: !2687)
!2708 = !DILocation(line: 4958, column: 11, scope: !2687)
!2709 = !DILocation(line: 4958, column: 22, scope: !2687)
!2710 = !DILocation(line: 4958, column: 25, scope: !2687)
!2711 = !DILocation(line: 4958, column: 28, scope: !2687)
!2712 = !DILocation(line: 4959, column: 6, scope: !2687)
!2713 = !DILocation(line: 4959, column: 11, scope: !2687)
!2714 = !DILocation(line: 4959, column: 22, scope: !2687)
!2715 = !DILocation(line: 4959, column: 25, scope: !2687)
!2716 = !DILocation(line: 4959, column: 28, scope: !2687)
!2717 = !DILocation(line: 4960, column: 6, scope: !2687)
!2718 = !DILocation(line: 4960, column: 11, scope: !2687)
!2719 = !DILocation(line: 4960, column: 22, scope: !2687)
!2720 = !DILocation(line: 4960, column: 25, scope: !2687)
!2721 = !DILocation(line: 4960, column: 28, scope: !2687)
!2722 = !DILocation(line: 4961, column: 6, scope: !2687)
!2723 = !DILocation(line: 4961, column: 11, scope: !2687)
!2724 = !DILocation(line: 4961, column: 22, scope: !2687)
!2725 = !DILocation(line: 4961, column: 25, scope: !2687)
!2726 = !DILocation(line: 4961, column: 28, scope: !2687)
!2727 = !DILocation(line: 4962, column: 6, scope: !2687)
!2728 = !DILocation(line: 4962, column: 11, scope: !2687)
!2729 = !DILocation(line: 4962, column: 22, scope: !2687)
!2730 = !DILocation(line: 4962, column: 25, scope: !2687)
!2731 = !DILocation(line: 4962, column: 31, scope: !2687)
!2732 = !DILocation(line: 4963, column: 6, scope: !2687)
!2733 = !DILocation(line: 4963, column: 11, scope: !2687)
!2734 = !DILocation(line: 4963, column: 22, scope: !2687)
!2735 = !DILocation(line: 4963, column: 25, scope: !2687)
!2736 = !DILocation(line: 4963, column: 32, scope: !2687)
!2737 = !DILocation(line: 4964, column: 6, scope: !2687)
!2738 = !DILocation(line: 4964, column: 11, scope: !2687)
!2739 = !DILocation(line: 4964, column: 22, scope: !2687)
!2740 = !DILocation(line: 4964, column: 25, scope: !2687)
!2741 = !DILocation(line: 4964, column: 34, scope: !2687)
!2742 = !DILocation(line: 4965, column: 6, scope: !2687)
!2743 = !DILocation(line: 4965, column: 11, scope: !2687)
!2744 = !DILocation(line: 4965, column: 22, scope: !2687)
!2745 = !DILocation(line: 4965, column: 25, scope: !2687)
!2746 = !DILocation(line: 4965, column: 33, scope: !2687)
!2747 = !DILocation(line: 4966, column: 6, scope: !2687)
!2748 = !DILocation(line: 4966, column: 11, scope: !2687)
!2749 = !DILocation(line: 4966, column: 20, scope: !2687)
!2750 = !DILocation(line: 4966, column: 23, scope: !2687)
!2751 = !DILocation(line: 4966, column: 32, scope: !2687)
!2752 = !DILocation(line: 4967, column: 6, scope: !2687)
!2753 = !DILocation(line: 4967, column: 11, scope: !2687)
!2754 = !DILocation(line: 4967, column: 20, scope: !2687)
!2755 = !DILocation(line: 4967, column: 23, scope: !2687)
!2756 = !DILocation(line: 4967, column: 29, scope: !2687)
!2757 = !DILocation(line: 4968, column: 6, scope: !2687)
!2758 = !DILocation(line: 4952, column: 34, scope: !2683)
!2759 = !DILocation(line: 4952, column: 4, scope: !2683)
!2760 = distinct !{!2760, !2685, !2761}
!2761 = !DILocation(line: 4968, column: 6, scope: !2680)
!2762 = !DILocation(line: 4969, column: 4, scope: !2615)
!2763 = !DILocation(line: 4969, column: 9, scope: !2615)
!2764 = !DILocation(line: 4969, column: 18, scope: !2615)
!2765 = !DILocation(line: 4970, column: 4, scope: !2615)
!2766 = !DILocation(line: 4970, column: 9, scope: !2615)
!2767 = !DILocation(line: 4970, column: 18, scope: !2615)
!2768 = !DILocation(line: 4971, column: 4, scope: !2615)
!2769 = distinct !DISubprogram(name: "initPageSetup", scope: !3, file: !3, line: 4878, type: !2770, scopeLine: 4880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{null, !655, !2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2774 = !DILocalVariable(name: "page", arg: 1, scope: !2769, file: !3, line: 4878, type: !655)
!2775 = !DILocation(line: 4878, column: 32, scope: !2769)
!2776 = !DILocalVariable(name: "pagelist", arg: 2, scope: !2769, file: !3, line: 4878, type: !2772)
!2777 = !DILocation(line: 4878, column: 54, scope: !2769)
!2778 = !DILocalVariable(name: "seg_buffs", arg: 3, scope: !2769, file: !3, line: 4879, type: !2773)
!2779 = !DILocation(line: 4879, column: 32, scope: !2769)
!2780 = !DILocalVariable(name: "i", scope: !2769, file: !3, line: 4881, type: !110)
!2781 = !DILocation(line: 4881, column: 8, scope: !2769)
!2782 = !DILocation(line: 4883, column: 12, scope: !2769)
!2783 = !DILocation(line: 4883, column: 18, scope: !2769)
!2784 = !DILocation(line: 4883, column: 4, scope: !2769)
!2785 = !DILocation(line: 4884, column: 4, scope: !2769)
!2786 = !DILocation(line: 4884, column: 10, scope: !2769)
!2787 = !DILocation(line: 4884, column: 15, scope: !2769)
!2788 = !DILocation(line: 4885, column: 4, scope: !2769)
!2789 = !DILocation(line: 4885, column: 10, scope: !2769)
!2790 = !DILocation(line: 4885, column: 19, scope: !2769)
!2791 = !DILocation(line: 4886, column: 4, scope: !2769)
!2792 = !DILocation(line: 4886, column: 10, scope: !2769)
!2793 = !DILocation(line: 4886, column: 15, scope: !2769)
!2794 = !DILocation(line: 4887, column: 4, scope: !2769)
!2795 = !DILocation(line: 4887, column: 10, scope: !2769)
!2796 = !DILocation(line: 4887, column: 15, scope: !2769)
!2797 = !DILocation(line: 4888, column: 4, scope: !2769)
!2798 = !DILocation(line: 4888, column: 10, scope: !2769)
!2799 = !DILocation(line: 4888, column: 16, scope: !2769)
!2800 = !DILocation(line: 4889, column: 4, scope: !2769)
!2801 = !DILocation(line: 4889, column: 10, scope: !2769)
!2802 = !DILocation(line: 4889, column: 17, scope: !2769)
!2803 = !DILocation(line: 4890, column: 4, scope: !2769)
!2804 = !DILocation(line: 4890, column: 10, scope: !2769)
!2805 = !DILocation(line: 4890, column: 18, scope: !2769)
!2806 = !DILocation(line: 4891, column: 4, scope: !2769)
!2807 = !DILocation(line: 4891, column: 10, scope: !2769)
!2808 = !DILocation(line: 4891, column: 18, scope: !2769)
!2809 = !DILocation(line: 4892, column: 4, scope: !2769)
!2810 = !DILocation(line: 4892, column: 10, scope: !2769)
!2811 = !DILocation(line: 4892, column: 15, scope: !2769)
!2812 = !DILocation(line: 4893, column: 4, scope: !2769)
!2813 = !DILocation(line: 4893, column: 10, scope: !2769)
!2814 = !DILocation(line: 4893, column: 15, scope: !2769)
!2815 = !DILocation(line: 4894, column: 4, scope: !2769)
!2816 = !DILocation(line: 4894, column: 10, scope: !2769)
!2817 = !DILocation(line: 4894, column: 17, scope: !2769)
!2818 = !DILocation(line: 4896, column: 11, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 4896, column: 4)
!2820 = !DILocation(line: 4896, column: 9, scope: !2819)
!2821 = !DILocation(line: 4896, column: 16, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 4896, column: 4)
!2823 = !DILocation(line: 4896, column: 18, scope: !2822)
!2824 = !DILocation(line: 4896, column: 4, scope: !2819)
!2825 = !DILocation(line: 4898, column: 6, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 4897, column: 6)
!2827 = !DILocation(line: 4898, column: 15, scope: !2826)
!2828 = !DILocation(line: 4898, column: 18, scope: !2826)
!2829 = !DILocation(line: 4898, column: 21, scope: !2826)
!2830 = !DILocation(line: 4899, column: 6, scope: !2826)
!2831 = !DILocation(line: 4899, column: 15, scope: !2826)
!2832 = !DILocation(line: 4899, column: 18, scope: !2826)
!2833 = !DILocation(line: 4899, column: 21, scope: !2826)
!2834 = !DILocation(line: 4900, column: 6, scope: !2826)
!2835 = !DILocation(line: 4900, column: 15, scope: !2826)
!2836 = !DILocation(line: 4900, column: 18, scope: !2826)
!2837 = !DILocation(line: 4900, column: 21, scope: !2826)
!2838 = !DILocation(line: 4901, column: 6, scope: !2826)
!2839 = !DILocation(line: 4901, column: 15, scope: !2826)
!2840 = !DILocation(line: 4901, column: 18, scope: !2826)
!2841 = !DILocation(line: 4901, column: 21, scope: !2826)
!2842 = !DILocation(line: 4902, column: 6, scope: !2826)
!2843 = !DILocation(line: 4902, column: 15, scope: !2826)
!2844 = !DILocation(line: 4902, column: 18, scope: !2826)
!2845 = !DILocation(line: 4902, column: 27, scope: !2826)
!2846 = !DILocation(line: 4903, column: 6, scope: !2826)
!2847 = !DILocation(line: 4903, column: 15, scope: !2826)
!2848 = !DILocation(line: 4903, column: 18, scope: !2826)
!2849 = !DILocation(line: 4903, column: 27, scope: !2826)
!2850 = !DILocation(line: 4904, column: 6, scope: !2826)
!2851 = !DILocation(line: 4904, column: 15, scope: !2826)
!2852 = !DILocation(line: 4904, column: 18, scope: !2826)
!2853 = !DILocation(line: 4904, column: 24, scope: !2826)
!2854 = !DILocation(line: 4905, column: 6, scope: !2826)
!2855 = !DILocation(line: 4896, column: 35, scope: !2822)
!2856 = !DILocation(line: 4896, column: 4, scope: !2822)
!2857 = distinct !{!2857, !2824, !2858}
!2858 = !DILocation(line: 4905, column: 6, scope: !2819)
!2859 = !DILocation(line: 4907, column: 11, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 4907, column: 4)
!2861 = !DILocation(line: 4907, column: 9, scope: !2860)
!2862 = !DILocation(line: 4907, column: 16, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 4907, column: 4)
!2864 = !DILocation(line: 4907, column: 18, scope: !2863)
!2865 = !DILocation(line: 4907, column: 4, scope: !2860)
!2866 = !DILocation(line: 4909, column: 6, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 4908, column: 6)
!2868 = !DILocation(line: 4909, column: 16, scope: !2867)
!2869 = !DILocation(line: 4909, column: 19, scope: !2867)
!2870 = !DILocation(line: 4909, column: 24, scope: !2867)
!2871 = !DILocation(line: 4910, column: 6, scope: !2867)
!2872 = !DILocation(line: 4910, column: 16, scope: !2867)
!2873 = !DILocation(line: 4910, column: 19, scope: !2867)
!2874 = !DILocation(line: 4910, column: 26, scope: !2867)
!2875 = !DILocation(line: 4911, column: 6, scope: !2867)
!2876 = !DILocation(line: 4907, column: 35, scope: !2863)
!2877 = !DILocation(line: 4907, column: 4, scope: !2863)
!2878 = distinct !{!2878, !2865, !2879}
!2879 = !DILocation(line: 4911, column: 6, scope: !2860)
!2880 = !DILocation(line: 4912, column: 4, scope: !2769)
!2881 = distinct !DISubprogram(name: "initDumpOptions", scope: !3, file: !3, line: 4973, type: !2882, scopeLine: 4974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{null, !557}
!2884 = !DILocalVariable(name: "dump", arg: 1, scope: !2881, file: !3, line: 4973, type: !557)
!2885 = !DILocation(line: 4973, column: 47, scope: !2881)
!2886 = !DILocation(line: 4975, column: 3, scope: !2881)
!2887 = !DILocation(line: 4975, column: 9, scope: !2881)
!2888 = !DILocation(line: 4975, column: 16, scope: !2881)
!2889 = !DILocation(line: 4976, column: 3, scope: !2881)
!2890 = !DILocation(line: 4976, column: 9, scope: !2881)
!2891 = !DILocation(line: 4976, column: 16, scope: !2881)
!2892 = !DILocation(line: 4977, column: 3, scope: !2881)
!2893 = !DILocation(line: 4977, column: 9, scope: !2881)
!2894 = !DILocation(line: 4977, column: 16, scope: !2881)
!2895 = !DILocation(line: 4978, column: 12, scope: !2881)
!2896 = !DILocation(line: 4978, column: 18, scope: !2881)
!2897 = !DILocation(line: 4978, column: 3, scope: !2881)
!2898 = !DILocation(line: 4979, column: 11, scope: !2881)
!2899 = !DILocation(line: 4979, column: 17, scope: !2881)
!2900 = !DILocation(line: 4979, column: 3, scope: !2881)
!2901 = !DILocation(line: 4980, column: 11, scope: !2881)
!2902 = !DILocation(line: 4980, column: 17, scope: !2881)
!2903 = !DILocation(line: 4980, column: 3, scope: !2881)
!2904 = !DILocation(line: 4981, column: 3, scope: !2881)
!2905 = !DILocation(line: 4981, column: 9, scope: !2881)
!2906 = !DILocation(line: 4981, column: 16, scope: !2881)
!2907 = !DILocation(line: 4982, column: 3, scope: !2881)
!2908 = !DILocation(line: 4982, column: 9, scope: !2881)
!2909 = !DILocation(line: 4982, column: 17, scope: !2881)
!2910 = !DILocation(line: 4983, column: 3, scope: !2881)
!2911 = distinct !DISubprogram(name: "dump_info", scope: !3, file: !3, line: 2589, type: !2912, scopeLine: 2590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{null, !470, !110, !146, !146, null}
!2914 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !2911, file: !3, line: 2589, type: !470)
!2915 = !DILocation(line: 2589, column: 29, scope: !2911)
!2916 = !DILocalVariable(name: "format", arg: 2, scope: !2911, file: !3, line: 2589, type: !110)
!2917 = !DILocation(line: 2589, column: 43, scope: !2911)
!2918 = !DILocalVariable(name: "prefix", arg: 3, scope: !2911, file: !3, line: 2589, type: !146)
!2919 = !DILocation(line: 2589, column: 57, scope: !2911)
!2920 = !DILocalVariable(name: "msg", arg: 4, scope: !2911, file: !3, line: 2589, type: !146)
!2921 = !DILocation(line: 2589, column: 71, scope: !2911)
!2922 = !DILocation(line: 2591, column: 7, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 2591, column: 7)
!2924 = !DILocation(line: 2591, column: 14, scope: !2923)
!2925 = !DILocation(line: 2591, column: 7, scope: !2911)
!2926 = !DILocalVariable(name: "ap", scope: !2927, file: !3, line: 2593, type: !2928)
!2927 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2592, column: 5)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !472, line: 79, baseType: !2929)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2930, line: 48, baseType: !2931)
!2930 = !DIFile(filename: "build-bufferoverflow-llvm90-lto/lib/clang/9.0.0/include/stdarg.h", directory: "/root/llvm")
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 2593, baseType: !2932)
!2932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !457, size: 192, elements: !507)
!2933 = !DILocation(line: 2593, column: 13, scope: !2927)
!2934 = !DILocation(line: 2594, column: 5, scope: !2927)
!2935 = !DILocation(line: 2595, column: 13, scope: !2927)
!2936 = !DILocation(line: 2595, column: 30, scope: !2927)
!2937 = !DILocation(line: 2595, column: 5, scope: !2927)
!2938 = !DILocation(line: 2596, column: 14, scope: !2927)
!2939 = !DILocation(line: 2596, column: 24, scope: !2927)
!2940 = !DILocation(line: 2596, column: 29, scope: !2927)
!2941 = !DILocation(line: 2596, column: 5, scope: !2927)
!2942 = !DILocation(line: 2597, column: 13, scope: !2927)
!2943 = !DILocation(line: 2597, column: 5, scope: !2927)
!2944 = !DILocation(line: 2598, column: 5, scope: !2927)
!2945 = !DILocation(line: 2599, column: 3, scope: !2911)
!2946 = !DILocalVariable(name: "in", arg: 1, scope: !539, file: !3, line: 5721, type: !193)
!2947 = !DILocation(line: 5721, column: 17, scope: !539)
!2948 = !DILocalVariable(name: "image", arg: 2, scope: !539, file: !3, line: 5721, type: !542)
!2949 = !DILocation(line: 5721, column: 40, scope: !539)
!2950 = !DILocalVariable(name: "dump", arg: 3, scope: !539, file: !3, line: 5721, type: !557)
!2951 = !DILocation(line: 5721, column: 65, scope: !539)
!2952 = !DILocalVariable(name: "read_ptr", arg: 4, scope: !539, file: !3, line: 5721, type: !571)
!2953 = !DILocation(line: 5721, column: 87, scope: !539)
!2954 = !DILocalVariable(name: "i", scope: !539, file: !3, line: 5723, type: !105)
!2955 = !DILocation(line: 5723, column: 12, scope: !539)
!2956 = !DILocalVariable(name: "xres", scope: !539, file: !3, line: 5724, type: !121)
!2957 = !DILocation(line: 5724, column: 12, scope: !539)
!2958 = !DILocalVariable(name: "yres", scope: !539, file: !3, line: 5724, type: !121)
!2959 = !DILocation(line: 5724, column: 24, scope: !539)
!2960 = !DILocalVariable(name: "nstrips", scope: !539, file: !3, line: 5725, type: !103)
!2961 = !DILocation(line: 5725, column: 12, scope: !539)
!2962 = !DILocalVariable(name: "ntiles", scope: !539, file: !3, line: 5725, type: !103)
!2963 = !DILocation(line: 5725, column: 25, scope: !539)
!2964 = !DILocalVariable(name: "planar", scope: !539, file: !3, line: 5725, type: !103)
!2965 = !DILocation(line: 5725, column: 37, scope: !539)
!2966 = !DILocalVariable(name: "bps", scope: !539, file: !3, line: 5726, type: !103)
!2967 = !DILocation(line: 5726, column: 12, scope: !539)
!2968 = !DILocalVariable(name: "spp", scope: !539, file: !3, line: 5726, type: !103)
!2969 = !DILocation(line: 5726, column: 21, scope: !539)
!2970 = !DILocalVariable(name: "res_unit", scope: !539, file: !3, line: 5726, type: !103)
!2971 = !DILocation(line: 5726, column: 30, scope: !539)
!2972 = !DILocalVariable(name: "orientation", scope: !539, file: !3, line: 5727, type: !103)
!2973 = !DILocation(line: 5727, column: 12, scope: !539)
!2974 = !DILocalVariable(name: "input_compression", scope: !539, file: !3, line: 5728, type: !103)
!2975 = !DILocation(line: 5728, column: 12, scope: !539)
!2976 = !DILocalVariable(name: "input_photometric", scope: !539, file: !3, line: 5728, type: !103)
!2977 = !DILocation(line: 5728, column: 35, scope: !539)
!2978 = !DILocalVariable(name: "subsampling_horiz", scope: !539, file: !3, line: 5729, type: !103)
!2979 = !DILocation(line: 5729, column: 12, scope: !539)
!2980 = !DILocalVariable(name: "subsampling_vert", scope: !539, file: !3, line: 5729, type: !103)
!2981 = !DILocation(line: 5729, column: 31, scope: !539)
!2982 = !DILocalVariable(name: "width", scope: !539, file: !3, line: 5730, type: !105)
!2983 = !DILocation(line: 5730, column: 12, scope: !539)
!2984 = !DILocalVariable(name: "length", scope: !539, file: !3, line: 5730, type: !105)
!2985 = !DILocation(line: 5730, column: 23, scope: !539)
!2986 = !DILocalVariable(name: "stsize", scope: !539, file: !3, line: 5731, type: !105)
!2987 = !DILocation(line: 5731, column: 12, scope: !539)
!2988 = !DILocalVariable(name: "tlsize", scope: !539, file: !3, line: 5731, type: !105)
!2989 = !DILocation(line: 5731, column: 24, scope: !539)
!2990 = !DILocalVariable(name: "buffsize", scope: !539, file: !3, line: 5731, type: !105)
!2991 = !DILocation(line: 5731, column: 36, scope: !539)
!2992 = !DILocalVariable(name: "scanlinesize", scope: !539, file: !3, line: 5731, type: !105)
!2993 = !DILocation(line: 5731, column: 50, scope: !539)
!2994 = !DILocalVariable(name: "tw", scope: !539, file: !3, line: 5732, type: !105)
!2995 = !DILocation(line: 5732, column: 12, scope: !539)
!2996 = !DILocalVariable(name: "tl", scope: !539, file: !3, line: 5732, type: !105)
!2997 = !DILocation(line: 5732, column: 20, scope: !539)
!2998 = !DILocalVariable(name: "tile_rowsize", scope: !539, file: !3, line: 5733, type: !105)
!2999 = !DILocation(line: 5733, column: 12, scope: !539)
!3000 = !DILocalVariable(name: "read_buff", scope: !539, file: !3, line: 5734, type: !106)
!3001 = !DILocation(line: 5734, column: 18, scope: !539)
!3002 = !DILocalVariable(name: "new_buff", scope: !539, file: !3, line: 5735, type: !106)
!3003 = !DILocation(line: 5735, column: 18, scope: !539)
!3004 = !DILocalVariable(name: "readunit", scope: !539, file: !3, line: 5736, type: !110)
!3005 = !DILocation(line: 5736, column: 12, scope: !539)
!3006 = !DILocation(line: 5739, column: 25, scope: !539)
!3007 = !DILocation(line: 5739, column: 3, scope: !539)
!3008 = !DILocation(line: 5740, column: 25, scope: !539)
!3009 = !DILocation(line: 5740, column: 3, scope: !539)
!3010 = !DILocation(line: 5741, column: 25, scope: !539)
!3011 = !DILocation(line: 5741, column: 3, scope: !539)
!3012 = !DILocation(line: 5742, column: 25, scope: !539)
!3013 = !DILocation(line: 5742, column: 3, scope: !539)
!3014 = !DILocation(line: 5743, column: 31, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5743, column: 7)
!3016 = !DILocation(line: 5743, column: 9, scope: !3015)
!3017 = !DILocation(line: 5743, column: 7, scope: !539)
!3018 = !DILocation(line: 5744, column: 5, scope: !3015)
!3019 = !DILocation(line: 5745, column: 22, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5745, column: 7)
!3021 = !DILocation(line: 5745, column: 9, scope: !3020)
!3022 = !DILocation(line: 5745, column: 7, scope: !539)
!3023 = !DILocation(line: 5746, column: 5, scope: !3020)
!3024 = !DILocation(line: 5747, column: 21, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5747, column: 6)
!3026 = !DILocation(line: 5747, column: 8, scope: !3025)
!3027 = !DILocation(line: 5747, column: 6, scope: !539)
!3028 = !DILocation(line: 5748, column: 5, scope: !3025)
!3029 = !DILocation(line: 5749, column: 25, scope: !539)
!3030 = !DILocation(line: 5749, column: 3, scope: !539)
!3031 = !DILocation(line: 5750, column: 25, scope: !539)
!3032 = !DILocation(line: 5750, column: 3, scope: !539)
!3033 = !DILocation(line: 5751, column: 30, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5751, column: 7)
!3035 = !DILocation(line: 5751, column: 8, scope: !3034)
!3036 = !DILocation(line: 5751, column: 7, scope: !539)
!3037 = !DILocation(line: 5752, column: 14, scope: !3034)
!3038 = !DILocation(line: 5752, column: 5, scope: !3034)
!3039 = !DILocation(line: 5753, column: 21, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5753, column: 7)
!3041 = !DILocation(line: 5753, column: 8, scope: !3040)
!3042 = !DILocation(line: 5753, column: 7, scope: !539)
!3043 = !DILocation(line: 5754, column: 23, scope: !3040)
!3044 = !DILocation(line: 5754, column: 5, scope: !3040)
!3045 = !DILocation(line: 5825, column: 35, scope: !539)
!3046 = !DILocation(line: 5825, column: 18, scope: !539)
!3047 = !DILocation(line: 5825, column: 16, scope: !539)
!3048 = !DILocation(line: 5826, column: 16, scope: !539)
!3049 = !DILocation(line: 5826, column: 3, scope: !539)
!3050 = !DILocation(line: 5826, column: 10, scope: !539)
!3051 = !DILocation(line: 5826, column: 14, scope: !539)
!3052 = !DILocation(line: 5827, column: 16, scope: !539)
!3053 = !DILocation(line: 5827, column: 3, scope: !539)
!3054 = !DILocation(line: 5827, column: 10, scope: !539)
!3055 = !DILocation(line: 5827, column: 14, scope: !539)
!3056 = !DILocation(line: 5828, column: 19, scope: !539)
!3057 = !DILocation(line: 5828, column: 3, scope: !539)
!3058 = !DILocation(line: 5828, column: 10, scope: !539)
!3059 = !DILocation(line: 5828, column: 17, scope: !539)
!3060 = !DILocation(line: 5829, column: 18, scope: !539)
!3061 = !DILocation(line: 5829, column: 3, scope: !539)
!3062 = !DILocation(line: 5829, column: 10, scope: !539)
!3063 = !DILocation(line: 5829, column: 16, scope: !539)
!3064 = !DILocation(line: 5830, column: 19, scope: !539)
!3065 = !DILocation(line: 5830, column: 3, scope: !539)
!3066 = !DILocation(line: 5830, column: 10, scope: !539)
!3067 = !DILocation(line: 5830, column: 17, scope: !539)
!3068 = !DILocation(line: 5831, column: 17, scope: !539)
!3069 = !DILocation(line: 5831, column: 3, scope: !539)
!3070 = !DILocation(line: 5831, column: 10, scope: !539)
!3071 = !DILocation(line: 5831, column: 15, scope: !539)
!3072 = !DILocation(line: 5832, column: 17, scope: !539)
!3073 = !DILocation(line: 5832, column: 3, scope: !539)
!3074 = !DILocation(line: 5832, column: 10, scope: !539)
!3075 = !DILocation(line: 5832, column: 15, scope: !539)
!3076 = !DILocation(line: 5833, column: 21, scope: !539)
!3077 = !DILocation(line: 5833, column: 3, scope: !539)
!3078 = !DILocation(line: 5833, column: 10, scope: !539)
!3079 = !DILocation(line: 5833, column: 19, scope: !539)
!3080 = !DILocation(line: 5834, column: 24, scope: !539)
!3081 = !DILocation(line: 5834, column: 3, scope: !539)
!3082 = !DILocation(line: 5834, column: 10, scope: !539)
!3083 = !DILocation(line: 5834, column: 22, scope: !539)
!3084 = !DILocation(line: 5835, column: 24, scope: !539)
!3085 = !DILocation(line: 5835, column: 3, scope: !539)
!3086 = !DILocation(line: 5835, column: 10, scope: !539)
!3087 = !DILocation(line: 5835, column: 22, scope: !539)
!3088 = !DILocation(line: 5884, column: 24, scope: !539)
!3089 = !DILocation(line: 5884, column: 3, scope: !539)
!3090 = !DILocation(line: 5884, column: 10, scope: !539)
!3091 = !DILocation(line: 5884, column: 22, scope: !539)
!3092 = !DILocation(line: 5885, column: 11, scope: !539)
!3093 = !DILocation(line: 5885, column: 3, scope: !539)
!3094 = !DILocation(line: 5889, column: 10, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5886, column: 5)
!3096 = !DILocation(line: 5889, column: 17, scope: !3095)
!3097 = !DILocation(line: 5889, column: 29, scope: !3095)
!3098 = !DILocation(line: 5890, column: 3, scope: !3095)
!3099 = !DILocation(line: 5892, column: 10, scope: !3095)
!3100 = !DILocation(line: 5892, column: 17, scope: !3095)
!3101 = !DILocation(line: 5892, column: 29, scope: !3095)
!3102 = !DILocation(line: 5893, column: 3, scope: !3095)
!3103 = !DILocation(line: 5895, column: 10, scope: !3095)
!3104 = !DILocation(line: 5895, column: 17, scope: !3095)
!3105 = !DILocation(line: 5895, column: 29, scope: !3095)
!3106 = !DILocation(line: 5896, column: 3, scope: !3095)
!3107 = !DILocation(line: 5898, column: 10, scope: !3095)
!3108 = !DILocation(line: 5898, column: 17, scope: !3095)
!3109 = !DILocation(line: 5898, column: 29, scope: !3095)
!3110 = !DILocation(line: 5899, column: 3, scope: !3095)
!3111 = !DILocation(line: 5901, column: 10, scope: !3095)
!3112 = !DILocation(line: 5901, column: 17, scope: !3095)
!3113 = !DILocation(line: 5901, column: 29, scope: !3095)
!3114 = !DILocation(line: 5902, column: 3, scope: !3095)
!3115 = !DILocation(line: 5904, column: 10, scope: !3095)
!3116 = !DILocation(line: 5904, column: 17, scope: !3095)
!3117 = !DILocation(line: 5904, column: 29, scope: !3095)
!3118 = !DILocation(line: 5905, column: 3, scope: !3095)
!3119 = !DILocation(line: 5907, column: 10, scope: !3095)
!3120 = !DILocation(line: 5907, column: 17, scope: !3095)
!3121 = !DILocation(line: 5907, column: 29, scope: !3095)
!3122 = !DILocation(line: 5908, column: 3, scope: !3095)
!3123 = !DILocation(line: 5910, column: 10, scope: !3095)
!3124 = !DILocation(line: 5910, column: 17, scope: !3095)
!3125 = !DILocation(line: 5910, column: 29, scope: !3095)
!3126 = !DILocation(line: 5911, column: 3, scope: !3095)
!3127 = !DILocation(line: 5913, column: 10, scope: !3095)
!3128 = !DILocation(line: 5913, column: 17, scope: !3095)
!3129 = !DILocation(line: 5913, column: 29, scope: !3095)
!3130 = !DILocation(line: 5914, column: 10, scope: !3095)
!3131 = !DILocation(line: 5914, column: 17, scope: !3095)
!3132 = !DILocation(line: 5914, column: 29, scope: !3095)
!3133 = !DILocation(line: 5915, column: 4, scope: !3095)
!3134 = !DILocation(line: 5917, column: 8, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5917, column: 7)
!3136 = !DILocation(line: 5917, column: 12, scope: !3135)
!3137 = !DILocation(line: 5917, column: 18, scope: !3135)
!3138 = !DILocation(line: 5917, column: 22, scope: !3135)
!3139 = !DILocation(line: 5917, column: 26, scope: !3135)
!3140 = !DILocation(line: 5917, column: 7, scope: !539)
!3141 = !DILocation(line: 5920, column: 9, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 5918, column: 5)
!3143 = !DILocation(line: 5920, column: 14, scope: !3142)
!3144 = !DILocation(line: 5919, column: 5, scope: !3142)
!3145 = !DILocation(line: 5921, column: 5, scope: !3142)
!3146 = !DILocation(line: 5924, column: 19, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5924, column: 7)
!3148 = !DILocation(line: 5924, column: 7, scope: !3147)
!3149 = !DILocation(line: 5924, column: 7, scope: !539)
!3150 = !DILocation(line: 5926, column: 14, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 5925, column: 5)
!3152 = !DILocation(line: 5927, column: 27, scope: !3151)
!3153 = !DILocation(line: 5927, column: 14, scope: !3151)
!3154 = !DILocation(line: 5927, column: 12, scope: !3151)
!3155 = !DILocation(line: 5928, column: 32, scope: !3151)
!3156 = !DILocation(line: 5928, column: 14, scope: !3151)
!3157 = !DILocation(line: 5928, column: 12, scope: !3151)
!3158 = !DILocation(line: 5929, column: 18, scope: !3151)
!3159 = !DILocation(line: 5929, column: 5, scope: !3151)
!3160 = !DILocation(line: 5930, column: 18, scope: !3151)
!3161 = !DILocation(line: 5930, column: 5, scope: !3151)
!3162 = !DILocation(line: 5932, column: 37, scope: !3151)
!3163 = !DILocation(line: 5932, column: 21, scope: !3151)
!3164 = !DILocation(line: 5932, column: 19, scope: !3151)
!3165 = !DILocation(line: 5933, column: 16, scope: !3151)
!3166 = !DILocation(line: 5933, column: 25, scope: !3151)
!3167 = !DILocation(line: 5933, column: 23, scope: !3151)
!3168 = !DILocation(line: 5933, column: 14, scope: !3151)
!3169 = !DILocation(line: 5936, column: 9, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 5936, column: 9)
!3171 = !DILocation(line: 5936, column: 29, scope: !3170)
!3172 = !DILocation(line: 5936, column: 38, scope: !3170)
!3173 = !DILocation(line: 5936, column: 36, scope: !3170)
!3174 = !DILocation(line: 5936, column: 43, scope: !3170)
!3175 = !DILocation(line: 5936, column: 41, scope: !3170)
!3176 = !DILocation(line: 5936, column: 18, scope: !3170)
!3177 = !DILocation(line: 5936, column: 9, scope: !3151)
!3178 = !DILocation(line: 5938, column: 18, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 5937, column: 7)
!3180 = !DILocation(line: 5938, column: 27, scope: !3179)
!3181 = !DILocation(line: 5938, column: 25, scope: !3179)
!3182 = !DILocation(line: 5938, column: 32, scope: !3179)
!3183 = !DILocation(line: 5938, column: 30, scope: !3179)
!3184 = !DILocation(line: 5938, column: 16, scope: !3179)
!3185 = !DILocation(line: 5944, column: 7, scope: !3179)
!3186 = !DILocation(line: 5946, column: 9, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 5946, column: 9)
!3188 = !DILocation(line: 5946, column: 15, scope: !3187)
!3189 = !DILocation(line: 5946, column: 22, scope: !3187)
!3190 = !DILocation(line: 5946, column: 9, scope: !3151)
!3191 = !DILocation(line: 5947, column: 18, scope: !3187)
!3192 = !DILocation(line: 5947, column: 24, scope: !3187)
!3193 = !DILocation(line: 5947, column: 32, scope: !3187)
!3194 = !DILocation(line: 5947, column: 38, scope: !3187)
!3195 = !DILocation(line: 5949, column: 18, scope: !3187)
!3196 = !DILocation(line: 5949, column: 26, scope: !3187)
!3197 = !DILocation(line: 5949, column: 34, scope: !3187)
!3198 = !DILocation(line: 5947, column: 7, scope: !3187)
!3199 = !DILocation(line: 5950, column: 5, scope: !3151)
!3200 = !DILocation(line: 5953, column: 14, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 5952, column: 5)
!3202 = !DILocation(line: 5954, column: 27, scope: !3201)
!3203 = !DILocation(line: 5954, column: 5, scope: !3201)
!3204 = !DILocation(line: 5955, column: 28, scope: !3201)
!3205 = !DILocation(line: 5955, column: 14, scope: !3201)
!3206 = !DILocation(line: 5955, column: 12, scope: !3201)
!3207 = !DILocation(line: 5956, column: 34, scope: !3201)
!3208 = !DILocation(line: 5956, column: 15, scope: !3201)
!3209 = !DILocation(line: 5956, column: 13, scope: !3201)
!3210 = !DILocation(line: 5957, column: 16, scope: !3201)
!3211 = !DILocation(line: 5957, column: 25, scope: !3201)
!3212 = !DILocation(line: 5957, column: 23, scope: !3201)
!3213 = !DILocation(line: 5957, column: 14, scope: !3201)
!3214 = !DILocation(line: 5959, column: 9, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 5959, column: 9)
!3216 = !DILocation(line: 5959, column: 32, scope: !3215)
!3217 = !DILocation(line: 5959, column: 41, scope: !3215)
!3218 = !DILocation(line: 5959, column: 39, scope: !3215)
!3219 = !DILocation(line: 5959, column: 49, scope: !3215)
!3220 = !DILocation(line: 5959, column: 47, scope: !3215)
!3221 = !DILocation(line: 5959, column: 55, scope: !3215)
!3222 = !DILocation(line: 5959, column: 53, scope: !3215)
!3223 = !DILocation(line: 5959, column: 60, scope: !3215)
!3224 = !DILocation(line: 5959, column: 65, scope: !3215)
!3225 = !DILocation(line: 5959, column: 18, scope: !3215)
!3226 = !DILocation(line: 5959, column: 9, scope: !3201)
!3227 = !DILocation(line: 5961, column: 21, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 5960, column: 7)
!3229 = !DILocation(line: 5961, column: 30, scope: !3228)
!3230 = !DILocation(line: 5961, column: 28, scope: !3228)
!3231 = !DILocation(line: 5961, column: 38, scope: !3228)
!3232 = !DILocation(line: 5961, column: 36, scope: !3228)
!3233 = !DILocation(line: 5961, column: 44, scope: !3228)
!3234 = !DILocation(line: 5961, column: 42, scope: !3228)
!3235 = !DILocation(line: 5961, column: 49, scope: !3228)
!3236 = !DILocation(line: 5961, column: 54, scope: !3228)
!3237 = !DILocation(line: 5961, column: 16, scope: !3228)
!3238 = !DILocation(line: 5967, column: 7, scope: !3228)
!3239 = !DILocation(line: 5969, column: 9, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 5969, column: 9)
!3241 = !DILocation(line: 5969, column: 15, scope: !3240)
!3242 = !DILocation(line: 5969, column: 22, scope: !3240)
!3243 = !DILocation(line: 5969, column: 9, scope: !3201)
!3244 = !DILocation(line: 5970, column: 18, scope: !3240)
!3245 = !DILocation(line: 5970, column: 24, scope: !3240)
!3246 = !DILocation(line: 5970, column: 32, scope: !3240)
!3247 = !DILocation(line: 5970, column: 38, scope: !3240)
!3248 = !DILocation(line: 5972, column: 4, scope: !3240)
!3249 = !DILocation(line: 5972, column: 12, scope: !3240)
!3250 = !DILocation(line: 5972, column: 21, scope: !3240)
!3251 = !DILocation(line: 5972, column: 35, scope: !3240)
!3252 = !DILocation(line: 5970, column: 7, scope: !3240)
!3253 = !DILocation(line: 5975, column: 7, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5975, column: 7)
!3255 = !DILocation(line: 5975, column: 25, scope: !3254)
!3256 = !DILocation(line: 5975, column: 7, scope: !539)
!3257 = !DILocation(line: 5977, column: 19, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 5976, column: 5)
!3259 = !DILocation(line: 5978, column: 18, scope: !3258)
!3260 = !DILocation(line: 5978, column: 5, scope: !3258)
!3261 = !DILocation(line: 5979, column: 5, scope: !3258)
!3262 = !DILocation(line: 5983, column: 9, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 5983, column: 9)
!3264 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 5982, column: 5)
!3265 = !DILocation(line: 5983, column: 27, scope: !3263)
!3266 = !DILocation(line: 5983, column: 9, scope: !3264)
!3267 = !DILocation(line: 5985, column: 29, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 5984, column: 7)
!3269 = !DILocation(line: 5985, column: 7, scope: !3268)
!3270 = !DILocation(line: 5987, column: 11, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 5987, column: 11)
!3272 = !DILocation(line: 5987, column: 29, scope: !3271)
!3273 = !DILocation(line: 5987, column: 34, scope: !3271)
!3274 = !DILocation(line: 5987, column: 37, scope: !3271)
!3275 = !DILocation(line: 5987, column: 54, scope: !3271)
!3276 = !DILocation(line: 5987, column: 11, scope: !3268)
!3277 = !DILocation(line: 5991, column: 17, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 5988, column: 9)
!3279 = !DILocation(line: 5991, column: 36, scope: !3278)
!3280 = !DILocation(line: 5989, column: 2, scope: !3278)
!3281 = !DILocation(line: 5992, column: 9, scope: !3278)
!3282 = !DILocation(line: 5994, column: 2, scope: !3268)
!3283 = !DILocation(line: 5997, column: 16, scope: !539)
!3284 = !DILocation(line: 5997, column: 15, scope: !539)
!3285 = !DILocation(line: 5997, column: 13, scope: !539)
!3286 = !DILocation(line: 5998, column: 8, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !539, file: !3, line: 5998, column: 7)
!3288 = !DILocation(line: 5998, column: 7, scope: !539)
!3289 = !DILocation(line: 5999, column: 46, scope: !3287)
!3290 = !DILocation(line: 5999, column: 34, scope: !3287)
!3291 = !DILocation(line: 5999, column: 15, scope: !3287)
!3292 = !DILocation(line: 5999, column: 5, scope: !3287)
!3293 = !DILocation(line: 6002, column: 9, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 6002, column: 9)
!3295 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 6001, column: 5)
!3296 = !DILocation(line: 6002, column: 25, scope: !3294)
!3297 = !DILocation(line: 6002, column: 23, scope: !3294)
!3298 = !DILocation(line: 6002, column: 9, scope: !3295)
!3299 = !DILocation(line: 6004, column: 31, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 6003, column: 7)
!3301 = !DILocation(line: 6004, column: 42, scope: !3300)
!3302 = !DILocation(line: 6004, column: 18, scope: !3300)
!3303 = !DILocation(line: 6004, column: 16, scope: !3300)
!3304 = !DILocation(line: 6005, column: 12, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 6005, column: 11)
!3306 = !DILocation(line: 6005, column: 11, scope: !3300)
!3307 = !DILocation(line: 6007, column: 8, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 6006, column: 9)
!3309 = !DILocation(line: 6007, column: 2, scope: !3308)
!3310 = !DILocation(line: 6008, column: 50, scope: !3308)
!3311 = !DILocation(line: 6008, column: 38, scope: !3308)
!3312 = !DILocation(line: 6008, column: 19, scope: !3308)
!3313 = !DILocation(line: 6009, column: 9, scope: !3308)
!3314 = !DILocation(line: 6011, column: 21, scope: !3305)
!3315 = !DILocation(line: 6011, column: 19, scope: !3305)
!3316 = !DILocation(line: 6012, column: 7, scope: !3300)
!3317 = !DILocation(line: 6015, column: 8, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !539, file: !3, line: 6015, column: 7)
!3319 = !DILocation(line: 6015, column: 7, scope: !539)
!3320 = !DILocation(line: 6017, column: 5, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 6016, column: 5)
!3322 = !DILocation(line: 6018, column: 5, scope: !3321)
!3323 = !DILocation(line: 6021, column: 19, scope: !539)
!3324 = !DILocation(line: 6021, column: 17, scope: !539)
!3325 = !DILocation(line: 6022, column: 15, scope: !539)
!3326 = !DILocation(line: 6022, column: 4, scope: !539)
!3327 = !DILocation(line: 6022, column: 13, scope: !539)
!3328 = !DILocation(line: 6028, column: 11, scope: !539)
!3329 = !DILocation(line: 6028, column: 3, scope: !539)
!3330 = !DILocation(line: 6030, column: 14, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 6030, column: 14)
!3332 = distinct !DILexicalBlock(scope: !539, file: !3, line: 6028, column: 21)
!3333 = !DILocation(line: 6030, column: 21, scope: !3331)
!3334 = !DILocation(line: 6030, column: 14, scope: !3332)
!3335 = !DILocation(line: 6032, column: 40, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !3, line: 6032, column: 11)
!3337 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 6031, column: 12)
!3338 = !DILocation(line: 6032, column: 44, scope: !3336)
!3339 = !DILocation(line: 6032, column: 13, scope: !3336)
!3340 = !DILocation(line: 6032, column: 11, scope: !3337)
!3341 = !DILocation(line: 6034, column: 7, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 6033, column: 7)
!3343 = !DILocation(line: 6035, column: 7, scope: !3342)
!3344 = !DILocation(line: 6037, column: 12, scope: !3337)
!3345 = !DILocation(line: 6040, column: 40, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 6040, column: 9)
!3347 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 6039, column: 12)
!3348 = !DILocation(line: 6040, column: 44, scope: !3346)
!3349 = !DILocation(line: 6040, column: 55, scope: !3346)
!3350 = !DILocation(line: 6040, column: 63, scope: !3346)
!3351 = !DILocation(line: 6040, column: 70, scope: !3346)
!3352 = !DILocation(line: 6040, column: 75, scope: !3346)
!3353 = !DILocation(line: 6040, column: 11, scope: !3346)
!3354 = !DILocation(line: 6040, column: 9, scope: !3347)
!3355 = !DILocation(line: 6042, column: 7, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 6041, column: 7)
!3357 = !DILocation(line: 6043, column: 7, scope: !3356)
!3358 = !DILocation(line: 6046, column: 10, scope: !3332)
!3359 = !DILocation(line: 6049, column: 14, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 6049, column: 14)
!3361 = !DILocation(line: 6049, column: 21, scope: !3360)
!3362 = !DILocation(line: 6049, column: 14, scope: !3332)
!3363 = !DILocation(line: 6051, column: 37, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 6051, column: 9)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 6050, column: 12)
!3366 = !DILocation(line: 6051, column: 41, scope: !3364)
!3367 = !DILocation(line: 6051, column: 52, scope: !3364)
!3368 = !DILocation(line: 6051, column: 60, scope: !3364)
!3369 = !DILocation(line: 6051, column: 67, scope: !3364)
!3370 = !DILocation(line: 6051, column: 71, scope: !3364)
!3371 = !DILocation(line: 6051, column: 75, scope: !3364)
!3372 = !DILocation(line: 6051, column: 80, scope: !3364)
!3373 = !DILocation(line: 6051, column: 11, scope: !3364)
!3374 = !DILocation(line: 6051, column: 9, scope: !3365)
!3375 = !DILocation(line: 6053, column: 7, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 6052, column: 7)
!3377 = !DILocation(line: 6054, column: 7, scope: !3376)
!3378 = !DILocation(line: 6056, column: 12, scope: !3365)
!3379 = !DILocation(line: 6059, column: 39, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 6059, column: 9)
!3381 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 6058, column: 12)
!3382 = !DILocation(line: 6059, column: 43, scope: !3380)
!3383 = !DILocation(line: 6059, column: 54, scope: !3380)
!3384 = !DILocation(line: 6059, column: 62, scope: !3380)
!3385 = !DILocation(line: 6059, column: 69, scope: !3380)
!3386 = !DILocation(line: 6059, column: 73, scope: !3380)
!3387 = !DILocation(line: 6059, column: 77, scope: !3380)
!3388 = !DILocation(line: 6059, column: 82, scope: !3380)
!3389 = !DILocation(line: 6059, column: 11, scope: !3380)
!3390 = !DILocation(line: 6059, column: 9, scope: !3381)
!3391 = !DILocation(line: 6061, column: 7, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 6060, column: 7)
!3393 = !DILocation(line: 6062, column: 7, scope: !3392)
!3394 = !DILocation(line: 6065, column: 10, scope: !3332)
!3395 = !DILocation(line: 6066, column: 14, scope: !3332)
!3396 = !DILocation(line: 6067, column: 11, scope: !3332)
!3397 = !DILocation(line: 6070, column: 8, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !539, file: !3, line: 6070, column: 7)
!3399 = !DILocation(line: 6070, column: 14, scope: !3398)
!3400 = !DILocation(line: 6070, column: 21, scope: !3398)
!3401 = !DILocation(line: 6070, column: 30, scope: !3398)
!3402 = !DILocation(line: 6070, column: 34, scope: !3398)
!3403 = !DILocation(line: 6070, column: 40, scope: !3398)
!3404 = !DILocation(line: 6070, column: 46, scope: !3398)
!3405 = !DILocation(line: 6070, column: 7, scope: !539)
!3406 = !DILocation(line: 6072, column: 17, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 6071, column: 5)
!3408 = !DILocation(line: 6072, column: 23, scope: !3407)
!3409 = !DILocation(line: 6072, column: 31, scope: !3407)
!3410 = !DILocation(line: 6072, column: 37, scope: !3407)
!3411 = !DILocation(line: 6074, column: 17, scope: !3407)
!3412 = !DILocation(line: 6074, column: 24, scope: !3407)
!3413 = !DILocation(line: 6074, column: 33, scope: !3407)
!3414 = !DILocation(line: 6072, column: 5, scope: !3407)
!3415 = !DILocation(line: 6075, column: 17, scope: !3407)
!3416 = !DILocation(line: 6075, column: 23, scope: !3407)
!3417 = !DILocation(line: 6075, column: 31, scope: !3407)
!3418 = !DILocation(line: 6075, column: 37, scope: !3407)
!3419 = !DILocation(line: 6076, column: 61, scope: !3407)
!3420 = !DILocation(line: 6076, column: 66, scope: !3407)
!3421 = !DILocation(line: 6075, column: 5, scope: !3407)
!3422 = !DILocation(line: 6078, column: 12, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 6078, column: 5)
!3424 = !DILocation(line: 6078, column: 10, scope: !3423)
!3425 = !DILocation(line: 6078, column: 17, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 6078, column: 5)
!3427 = !DILocation(line: 6078, column: 21, scope: !3426)
!3428 = !DILocation(line: 6078, column: 19, scope: !3426)
!3429 = !DILocation(line: 6078, column: 5, scope: !3423)
!3430 = !DILocation(line: 6079, column: 19, scope: !3426)
!3431 = !DILocation(line: 6079, column: 25, scope: !3426)
!3432 = !DILocation(line: 6079, column: 33, scope: !3426)
!3433 = !DILocation(line: 6079, column: 39, scope: !3426)
!3434 = !DILocation(line: 6079, column: 50, scope: !3426)
!3435 = !DILocation(line: 6080, column: 19, scope: !3426)
!3436 = !DILocation(line: 6080, column: 22, scope: !3426)
!3437 = !DILocation(line: 6080, column: 35, scope: !3426)
!3438 = !DILocation(line: 6080, column: 39, scope: !3426)
!3439 = !DILocation(line: 6080, column: 37, scope: !3426)
!3440 = !DILocation(line: 6080, column: 32, scope: !3426)
!3441 = !DILocation(line: 6079, column: 7, scope: !3426)
!3442 = !DILocation(line: 6078, column: 30, scope: !3426)
!3443 = !DILocation(line: 6078, column: 5, scope: !3426)
!3444 = distinct !{!3444, !3429, !3445}
!3445 = !DILocation(line: 6080, column: 52, scope: !3423)
!3446 = !DILocation(line: 6081, column: 5, scope: !3407)
!3447 = !DILocation(line: 6082, column: 3, scope: !539)
!3448 = !DILocation(line: 6083, column: 3, scope: !539)
!3449 = distinct !DISubprogram(name: "correct_orientation", scope: !3, file: !3, line: 6085, type: !3450, scopeLine: 6086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!110, !542, !571}
!3452 = !DILocalVariable(name: "image", arg: 1, scope: !3449, file: !3, line: 6085, type: !542)
!3453 = !DILocation(line: 6085, column: 52, scope: !3449)
!3454 = !DILocalVariable(name: "work_buff_ptr", arg: 2, scope: !3449, file: !3, line: 6085, type: !571)
!3455 = !DILocation(line: 6085, column: 75, scope: !3449)
!3456 = !DILocalVariable(name: "mirror", scope: !3449, file: !3, line: 6087, type: !103)
!3457 = !DILocation(line: 6087, column: 10, scope: !3449)
!3458 = !DILocalVariable(name: "rotation", scope: !3449, file: !3, line: 6087, type: !103)
!3459 = !DILocation(line: 6087, column: 18, scope: !3449)
!3460 = !DILocalVariable(name: "work_buff", scope: !3449, file: !3, line: 6088, type: !106)
!3461 = !DILocation(line: 6088, column: 18, scope: !3449)
!3462 = !DILocation(line: 6090, column: 16, scope: !3449)
!3463 = !DILocation(line: 6090, column: 15, scope: !3449)
!3464 = !DILocation(line: 6090, column: 13, scope: !3449)
!3465 = !DILocation(line: 6091, column: 8, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 6091, column: 7)
!3467 = !DILocation(line: 6091, column: 14, scope: !3466)
!3468 = !DILocation(line: 6091, column: 23, scope: !3466)
!3469 = !DILocation(line: 6091, column: 27, scope: !3466)
!3470 = !DILocation(line: 6091, column: 37, scope: !3466)
!3471 = !DILocation(line: 6091, column: 7, scope: !3449)
!3472 = !DILocation(line: 6093, column: 5, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 6092, column: 5)
!3474 = !DILocation(line: 6094, column: 5, scope: !3473)
!3475 = !DILocation(line: 6097, column: 8, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 6097, column: 7)
!3477 = !DILocation(line: 6097, column: 15, scope: !3476)
!3478 = !DILocation(line: 6097, column: 27, scope: !3476)
!3479 = !DILocation(line: 6097, column: 43, scope: !3476)
!3480 = !DILocation(line: 6097, column: 47, scope: !3476)
!3481 = !DILocation(line: 6097, column: 54, scope: !3476)
!3482 = !DILocation(line: 6097, column: 66, scope: !3476)
!3483 = !DILocation(line: 6097, column: 7, scope: !3449)
!3484 = !DILocation(line: 6099, column: 23, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 6098, column: 5)
!3486 = !DILocation(line: 6099, column: 30, scope: !3485)
!3487 = !DILocation(line: 6099, column: 42, scope: !3485)
!3488 = !DILocation(line: 6099, column: 14, scope: !3485)
!3489 = !DILocation(line: 6099, column: 12, scope: !3485)
!3490 = !DILocation(line: 6100, column: 21, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 6100, column: 9)
!3492 = !DILocation(line: 6100, column: 28, scope: !3491)
!3493 = !DILocation(line: 6100, column: 33, scope: !3491)
!3494 = !DILocation(line: 6100, column: 40, scope: !3491)
!3495 = !DILocation(line: 6100, column: 45, scope: !3491)
!3496 = !DILocation(line: 6101, column: 9, scope: !3491)
!3497 = !DILocation(line: 6101, column: 16, scope: !3491)
!3498 = !DILocation(line: 6101, column: 23, scope: !3491)
!3499 = !DILocation(line: 6101, column: 30, scope: !3491)
!3500 = !DILocation(line: 6101, column: 38, scope: !3491)
!3501 = !DILocation(line: 6100, column: 9, scope: !3491)
!3502 = !DILocation(line: 6100, column: 9, scope: !3485)
!3503 = !DILocation(line: 6103, column: 7, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 6102, column: 7)
!3505 = !DILocation(line: 6104, column: 7, scope: !3504)
!3506 = !DILocation(line: 6106, column: 5, scope: !3485)
!3507 = !DILocation(line: 6108, column: 7, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 6108, column: 7)
!3509 = !DILocation(line: 6108, column: 14, scope: !3508)
!3510 = !DILocation(line: 6108, column: 26, scope: !3508)
!3511 = !DILocation(line: 6108, column: 28, scope: !3508)
!3512 = !DILocation(line: 6108, column: 7, scope: !3449)
!3513 = !DILocation(line: 6110, column: 9, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 6110, column: 9)
!3515 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 6109, column: 5)
!3516 = !DILocation(line: 6110, column: 16, scope: !3514)
!3517 = !DILocation(line: 6110, column: 28, scope: !3514)
!3518 = !DILocation(line: 6110, column: 9, scope: !3515)
!3519 = !DILocation(line: 6111, column: 16, scope: !3514)
!3520 = !DILocation(line: 6111, column: 7, scope: !3514)
!3521 = !DILocation(line: 6113, column: 9, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 6113, column: 9)
!3523 = !DILocation(line: 6113, column: 16, scope: !3522)
!3524 = !DILocation(line: 6113, column: 28, scope: !3522)
!3525 = !DILocation(line: 6113, column: 9, scope: !3514)
!3526 = !DILocation(line: 6114, column: 16, scope: !3522)
!3527 = !DILocation(line: 6114, column: 7, scope: !3522)
!3528 = !DILocation(line: 6116, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 6116, column: 9)
!3530 = !DILocation(line: 6116, column: 16, scope: !3529)
!3531 = !DILocation(line: 6116, column: 28, scope: !3529)
!3532 = !DILocation(line: 6116, column: 9, scope: !3522)
!3533 = !DILocation(line: 6117, column: 16, scope: !3529)
!3534 = !DILocation(line: 6117, column: 7, scope: !3529)
!3535 = !DILocation(line: 6121, column: 19, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 6119, column: 7)
!3537 = !DILocation(line: 6121, column: 26, scope: !3536)
!3538 = !DILocation(line: 6121, column: 38, scope: !3536)
!3539 = !DILocation(line: 6121, column: 40, scope: !3536)
!3540 = !DILocation(line: 6120, column: 7, scope: !3536)
!3541 = !DILocation(line: 6122, column: 7, scope: !3536)
!3542 = !DILocation(line: 6125, column: 21, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 6125, column: 9)
!3544 = !DILocation(line: 6125, column: 31, scope: !3543)
!3545 = !DILocation(line: 6125, column: 39, scope: !3543)
!3546 = !DILocation(line: 6125, column: 46, scope: !3543)
!3547 = !DILocation(line: 6125, column: 54, scope: !3543)
!3548 = !DILocation(line: 6125, column: 61, scope: !3543)
!3549 = !DILocation(line: 6125, column: 69, scope: !3543)
!3550 = !DILocation(line: 6125, column: 9, scope: !3543)
!3551 = !DILocation(line: 6125, column: 9, scope: !3515)
!3552 = !DILocation(line: 6127, column: 7, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3543, file: !3, line: 6126, column: 7)
!3554 = !DILocation(line: 6128, column: 7, scope: !3553)
!3555 = !DILocation(line: 6130, column: 5, scope: !3515)
!3556 = !DILocation(line: 6130, column: 12, scope: !3515)
!3557 = !DILocation(line: 6130, column: 24, scope: !3515)
!3558 = !DILocation(line: 6131, column: 5, scope: !3515)
!3559 = !DILocation(line: 6133, column: 3, scope: !3449)
!3560 = !DILocation(line: 6134, column: 3, scope: !3449)
!3561 = distinct !DISubprogram(name: "getCropOffsets", scope: !3, file: !3, line: 5274, type: !3562, scopeLine: 5275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!110, !542, !592, !557}
!3564 = !DILocalVariable(name: "image", arg: 1, scope: !3561, file: !3, line: 5274, type: !542)
!3565 = !DILocation(line: 5274, column: 35, scope: !3561)
!3566 = !DILocalVariable(name: "crop", arg: 2, scope: !3561, file: !3, line: 5274, type: !592)
!3567 = !DILocation(line: 5274, column: 60, scope: !3561)
!3568 = !DILocalVariable(name: "dump", arg: 3, scope: !3561, file: !3, line: 5274, type: !557)
!3569 = !DILocation(line: 5274, column: 84, scope: !3561)
!3570 = !DILocalVariable(name: "offsets", scope: !3561, file: !3, line: 5276, type: !3571)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "offset", file: !3, line: 219, size: 320, elements: !3572)
!3572 = !{!3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "tmargin", scope: !3571, file: !3, line: 220, baseType: !105, size: 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "lmargin", scope: !3571, file: !3, line: 221, baseType: !105, size: 32, offset: 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "bmargin", scope: !3571, file: !3, line: 222, baseType: !105, size: 32, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "rmargin", scope: !3571, file: !3, line: 223, baseType: !105, size: 32, offset: 96)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "crop_width", scope: !3571, file: !3, line: 224, baseType: !105, size: 32, offset: 128)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "crop_length", scope: !3571, file: !3, line: 225, baseType: !105, size: 32, offset: 160)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "startx", scope: !3571, file: !3, line: 226, baseType: !105, size: 32, offset: 192)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "endx", scope: !3571, file: !3, line: 227, baseType: !105, size: 32, offset: 224)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "starty", scope: !3571, file: !3, line: 228, baseType: !105, size: 32, offset: 256)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "endy", scope: !3571, file: !3, line: 229, baseType: !105, size: 32, offset: 288)
!3583 = !DILocation(line: 5276, column: 17, scope: !3561)
!3584 = !DILocalVariable(name: "i", scope: !3561, file: !3, line: 5277, type: !110)
!3585 = !DILocation(line: 5277, column: 10, scope: !3561)
!3586 = !DILocalVariable(name: "test", scope: !3561, file: !3, line: 5278, type: !112)
!3587 = !DILocation(line: 5278, column: 10, scope: !3561)
!3588 = !DILocalVariable(name: "seg", scope: !3561, file: !3, line: 5279, type: !105)
!3589 = !DILocation(line: 5279, column: 10, scope: !3561)
!3590 = !DILocalVariable(name: "total", scope: !3561, file: !3, line: 5279, type: !105)
!3591 = !DILocation(line: 5279, column: 15, scope: !3561)
!3592 = !DILocalVariable(name: "need_buff", scope: !3561, file: !3, line: 5279, type: !105)
!3593 = !DILocation(line: 5279, column: 22, scope: !3561)
!3594 = !DILocalVariable(name: "buffsize", scope: !3561, file: !3, line: 5280, type: !105)
!3595 = !DILocation(line: 5280, column: 10, scope: !3561)
!3596 = !DILocalVariable(name: "zwidth", scope: !3561, file: !3, line: 5281, type: !105)
!3597 = !DILocation(line: 5281, column: 10, scope: !3561)
!3598 = !DILocalVariable(name: "zlength", scope: !3561, file: !3, line: 5281, type: !105)
!3599 = !DILocation(line: 5281, column: 18, scope: !3561)
!3600 = !DILocation(line: 5283, column: 3, scope: !3561)
!3601 = !DILocation(line: 5284, column: 3, scope: !3561)
!3602 = !DILocation(line: 5284, column: 9, scope: !3561)
!3603 = !DILocation(line: 5284, column: 19, scope: !3561)
!3604 = !DILocation(line: 5285, column: 3, scope: !3561)
!3605 = !DILocation(line: 5285, column: 9, scope: !3561)
!3606 = !DILocation(line: 5285, column: 25, scope: !3561)
!3607 = !DILocation(line: 5286, column: 3, scope: !3561)
!3608 = !DILocation(line: 5286, column: 9, scope: !3561)
!3609 = !DILocation(line: 5286, column: 25, scope: !3561)
!3610 = !DILocation(line: 5287, column: 3, scope: !3561)
!3611 = !DILocation(line: 5287, column: 9, scope: !3561)
!3612 = !DILocation(line: 5287, column: 20, scope: !3561)
!3613 = !DILocation(line: 5290, column: 8, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 5290, column: 7)
!3615 = !DILocation(line: 5290, column: 14, scope: !3614)
!3616 = !DILocation(line: 5290, column: 24, scope: !3614)
!3617 = !DILocation(line: 5290, column: 40, scope: !3614)
!3618 = !DILocation(line: 5291, column: 8, scope: !3614)
!3619 = !DILocation(line: 5291, column: 14, scope: !3614)
!3620 = !DILocation(line: 5291, column: 24, scope: !3614)
!3621 = !DILocation(line: 5291, column: 40, scope: !3614)
!3622 = !DILocation(line: 5292, column: 8, scope: !3614)
!3623 = !DILocation(line: 5292, column: 14, scope: !3614)
!3624 = !DILocation(line: 5292, column: 24, scope: !3614)
!3625 = !DILocation(line: 5292, column: 40, scope: !3614)
!3626 = !DILocation(line: 5293, column: 8, scope: !3614)
!3627 = !DILocation(line: 5293, column: 14, scope: !3614)
!3628 = !DILocation(line: 5293, column: 24, scope: !3614)
!3629 = !DILocation(line: 5290, column: 7, scope: !3561)
!3630 = !DILocation(line: 5295, column: 34, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 5295, column: 9)
!3632 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 5294, column: 5)
!3633 = !DILocation(line: 5295, column: 40, scope: !3631)
!3634 = !DILocation(line: 5295, column: 9, scope: !3631)
!3635 = !DILocation(line: 5295, column: 9, scope: !3632)
!3636 = !DILocation(line: 5297, column: 7, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 5296, column: 7)
!3638 = !DILocation(line: 5298, column: 7, scope: !3637)
!3639 = !DILocation(line: 5300, column: 15, scope: !3632)
!3640 = !DILocation(line: 5301, column: 24, scope: !3632)
!3641 = !DILocation(line: 5301, column: 30, scope: !3632)
!3642 = !DILocation(line: 5301, column: 5, scope: !3632)
!3643 = !DILocation(line: 5301, column: 11, scope: !3632)
!3644 = !DILocation(line: 5301, column: 22, scope: !3632)
!3645 = !DILocation(line: 5303, column: 9, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 5303, column: 9)
!3647 = !DILocation(line: 5303, column: 15, scope: !3646)
!3648 = !DILocation(line: 5303, column: 25, scope: !3646)
!3649 = !DILocation(line: 5303, column: 9, scope: !3632)
!3650 = !DILocation(line: 5304, column: 7, scope: !3646)
!3651 = !DILocation(line: 5305, column: 5, scope: !3632)
!3652 = !DILocation(line: 5308, column: 13, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 5307, column: 5)
!3654 = !DILocation(line: 5308, column: 21, scope: !3653)
!3655 = !DILocation(line: 5309, column: 13, scope: !3653)
!3656 = !DILocation(line: 5309, column: 21, scope: !3653)
!3657 = !DILocation(line: 5310, column: 13, scope: !3653)
!3658 = !DILocation(line: 5310, column: 21, scope: !3653)
!3659 = !DILocation(line: 5311, column: 13, scope: !3653)
!3660 = !DILocation(line: 5311, column: 21, scope: !3653)
!3661 = !DILocation(line: 5312, column: 26, scope: !3653)
!3662 = !DILocation(line: 5312, column: 33, scope: !3653)
!3663 = !DILocation(line: 5312, column: 13, scope: !3653)
!3664 = !DILocation(line: 5312, column: 24, scope: !3653)
!3665 = !DILocation(line: 5313, column: 27, scope: !3653)
!3666 = !DILocation(line: 5313, column: 34, scope: !3653)
!3667 = !DILocation(line: 5313, column: 13, scope: !3653)
!3668 = !DILocation(line: 5313, column: 25, scope: !3653)
!3669 = !DILocation(line: 5314, column: 13, scope: !3653)
!3670 = !DILocation(line: 5314, column: 20, scope: !3653)
!3671 = !DILocation(line: 5315, column: 20, scope: !3653)
!3672 = !DILocation(line: 5315, column: 27, scope: !3653)
!3673 = !DILocation(line: 5315, column: 33, scope: !3653)
!3674 = !DILocation(line: 5315, column: 13, scope: !3653)
!3675 = !DILocation(line: 5315, column: 18, scope: !3653)
!3676 = !DILocation(line: 5316, column: 13, scope: !3653)
!3677 = !DILocation(line: 5316, column: 20, scope: !3653)
!3678 = !DILocation(line: 5317, column: 20, scope: !3653)
!3679 = !DILocation(line: 5317, column: 27, scope: !3653)
!3680 = !DILocation(line: 5317, column: 34, scope: !3653)
!3681 = !DILocation(line: 5317, column: 13, scope: !3653)
!3682 = !DILocation(line: 5317, column: 18, scope: !3653)
!3683 = !DILocation(line: 5318, column: 15, scope: !3653)
!3684 = !DILocation(line: 5321, column: 7, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 5321, column: 7)
!3686 = !DILocation(line: 5321, column: 13, scope: !3685)
!3687 = !DILocation(line: 5321, column: 21, scope: !3685)
!3688 = !DILocation(line: 5321, column: 7, scope: !3561)
!3689 = !DILocation(line: 5323, column: 16, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 5322, column: 5)
!3691 = !DILocation(line: 5323, column: 22, scope: !3690)
!3692 = !DILocation(line: 5323, column: 31, scope: !3690)
!3693 = !DILocation(line: 5323, column: 37, scope: !3690)
!3694 = !DILocation(line: 5324, column: 20, scope: !3690)
!3695 = !DILocation(line: 5324, column: 37, scope: !3690)
!3696 = !DILocation(line: 5324, column: 54, scope: !3690)
!3697 = !DILocation(line: 5324, column: 71, scope: !3690)
!3698 = !DILocation(line: 5323, column: 5, scope: !3690)
!3699 = !DILocation(line: 5325, column: 16, scope: !3690)
!3700 = !DILocation(line: 5325, column: 22, scope: !3690)
!3701 = !DILocation(line: 5325, column: 31, scope: !3690)
!3702 = !DILocation(line: 5325, column: 37, scope: !3690)
!3703 = !DILocation(line: 5326, column: 20, scope: !3690)
!3704 = !DILocation(line: 5326, column: 40, scope: !3690)
!3705 = !DILocation(line: 5325, column: 5, scope: !3690)
!3706 = !DILocation(line: 5327, column: 5, scope: !3690)
!3707 = !DILocation(line: 5329, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 5329, column: 7)
!3709 = !DILocation(line: 5329, column: 15, scope: !3708)
!3710 = !DILocation(line: 5329, column: 25, scope: !3708)
!3711 = !DILocation(line: 5329, column: 7, scope: !3561)
!3712 = !DILocation(line: 5331, column: 9, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 5331, column: 9)
!3714 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 5330, column: 5)
!3715 = !DILocation(line: 5331, column: 19, scope: !3713)
!3716 = !DILocation(line: 5331, column: 9, scope: !3714)
!3717 = !DILocation(line: 5333, column: 7, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 5332, column: 7)
!3719 = !DILocation(line: 5333, column: 13, scope: !3718)
!3720 = !DILocation(line: 5333, column: 24, scope: !3718)
!3721 = !DILocation(line: 5334, column: 31, scope: !3718)
!3722 = !DILocation(line: 5334, column: 38, scope: !3718)
!3723 = !DILocation(line: 5334, column: 7, scope: !3718)
!3724 = !DILocation(line: 5334, column: 13, scope: !3718)
!3725 = !DILocation(line: 5334, column: 29, scope: !3718)
!3726 = !DILocation(line: 5335, column: 31, scope: !3718)
!3727 = !DILocation(line: 5335, column: 38, scope: !3718)
!3728 = !DILocation(line: 5335, column: 7, scope: !3718)
!3729 = !DILocation(line: 5335, column: 13, scope: !3718)
!3730 = !DILocation(line: 5335, column: 29, scope: !3718)
!3731 = !DILocation(line: 5336, column: 7, scope: !3718)
!3732 = !DILocation(line: 5343, column: 7, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 5339, column: 7)
!3734 = !DILocation(line: 5343, column: 13, scope: !3733)
!3735 = !DILocation(line: 5343, column: 24, scope: !3733)
!3736 = !DILocation(line: 5344, column: 7, scope: !3733)
!3737 = !DILocation(line: 5344, column: 13, scope: !3733)
!3738 = !DILocation(line: 5344, column: 19, scope: !3733)
!3739 = !DILocation(line: 5345, column: 7, scope: !3733)
!3740 = !DILocation(line: 5345, column: 13, scope: !3733)
!3741 = !DILocation(line: 5345, column: 25, scope: !3733)
!3742 = !DILocation(line: 5345, column: 31, scope: !3733)
!3743 = !DILocation(line: 5346, column: 7, scope: !3733)
!3744 = !DILocation(line: 5346, column: 13, scope: !3733)
!3745 = !DILocation(line: 5346, column: 25, scope: !3733)
!3746 = !DILocation(line: 5346, column: 34, scope: !3733)
!3747 = !DILocation(line: 5348, column: 5, scope: !3714)
!3748 = !DILocation(line: 5350, column: 24, scope: !3708)
!3749 = !DILocation(line: 5350, column: 30, scope: !3708)
!3750 = !DILocation(line: 5350, column: 5, scope: !3708)
!3751 = !DILocation(line: 5350, column: 11, scope: !3708)
!3752 = !DILocation(line: 5350, column: 22, scope: !3708)
!3753 = !DILocation(line: 5352, column: 10, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 5352, column: 3)
!3755 = !DILocation(line: 5352, column: 8, scope: !3754)
!3756 = !DILocation(line: 5352, column: 15, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 5352, column: 3)
!3758 = !DILocation(line: 5352, column: 19, scope: !3757)
!3759 = !DILocation(line: 5352, column: 25, scope: !3757)
!3760 = !DILocation(line: 5352, column: 17, scope: !3757)
!3761 = !DILocation(line: 5352, column: 3, scope: !3754)
!3762 = !DILocation(line: 5354, column: 11, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 5353, column: 5)
!3764 = !DILocation(line: 5354, column: 17, scope: !3763)
!3765 = !DILocation(line: 5354, column: 26, scope: !3763)
!3766 = !DILocation(line: 5354, column: 29, scope: !3763)
!3767 = !DILocation(line: 5354, column: 9, scope: !3763)
!3768 = !DILocation(line: 5355, column: 13, scope: !3763)
!3769 = !DILocation(line: 5355, column: 19, scope: !3763)
!3770 = !DILocation(line: 5355, column: 28, scope: !3763)
!3771 = !DILocation(line: 5355, column: 31, scope: !3763)
!3772 = !DILocation(line: 5355, column: 11, scope: !3763)
!3773 = !DILocation(line: 5357, column: 13, scope: !3763)
!3774 = !DILocation(line: 5357, column: 19, scope: !3763)
!3775 = !DILocation(line: 5357, column: 5, scope: !3763)
!3776 = !DILocation(line: 5360, column: 30, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 5358, column: 7)
!3778 = !DILocation(line: 5360, column: 20, scope: !3777)
!3779 = !DILocation(line: 5361, column: 38, scope: !3777)
!3780 = !DILocation(line: 5361, column: 5, scope: !3777)
!3781 = !DILocation(line: 5361, column: 11, scope: !3777)
!3782 = !DILocation(line: 5361, column: 22, scope: !3777)
!3783 = !DILocation(line: 5361, column: 25, scope: !3777)
!3784 = !DILocation(line: 5361, column: 28, scope: !3777)
!3785 = !DILocation(line: 5362, column: 45, scope: !3777)
!3786 = !DILocation(line: 5362, column: 12, scope: !3777)
!3787 = !DILocation(line: 5362, column: 18, scope: !3777)
!3788 = !DILocation(line: 5362, column: 29, scope: !3777)
!3789 = !DILocation(line: 5362, column: 32, scope: !3777)
!3790 = !DILocation(line: 5362, column: 35, scope: !3777)
!3791 = !DILocation(line: 5364, column: 45, scope: !3777)
!3792 = !DILocation(line: 5365, column: 52, scope: !3777)
!3793 = !DILocation(line: 5365, column: 44, scope: !3777)
!3794 = !DILocation(line: 5365, column: 63, scope: !3777)
!3795 = !DILocation(line: 5365, column: 72, scope: !3777)
!3796 = !DILocation(line: 5365, column: 76, scope: !3777)
!3797 = !DILocation(line: 5365, column: 71, scope: !3777)
!3798 = !DILocation(line: 5365, column: 69, scope: !3777)
!3799 = !DILocation(line: 5365, column: 83, scope: !3777)
!3800 = !DILocation(line: 5365, column: 81, scope: !3777)
!3801 = !DILocation(line: 5365, column: 35, scope: !3777)
!3802 = !DILocation(line: 5364, column: 52, scope: !3777)
!3803 = !DILocation(line: 5364, column: 12, scope: !3777)
!3804 = !DILocation(line: 5364, column: 18, scope: !3777)
!3805 = !DILocation(line: 5364, column: 29, scope: !3777)
!3806 = !DILocation(line: 5364, column: 32, scope: !3777)
!3807 = !DILocation(line: 5364, column: 35, scope: !3777)
!3808 = !DILocation(line: 5366, column: 34, scope: !3777)
!3809 = !DILocation(line: 5367, column: 35, scope: !3777)
!3810 = !DILocation(line: 5367, column: 27, scope: !3777)
!3811 = !DILocation(line: 5367, column: 46, scope: !3777)
!3812 = !DILocation(line: 5367, column: 54, scope: !3777)
!3813 = !DILocation(line: 5367, column: 52, scope: !3777)
!3814 = !DILocation(line: 5367, column: 60, scope: !3777)
!3815 = !DILocation(line: 5367, column: 58, scope: !3777)
!3816 = !DILocation(line: 5367, column: 19, scope: !3777)
!3817 = !DILocation(line: 5366, column: 41, scope: !3777)
!3818 = !DILocation(line: 5366, column: 17, scope: !3777)
!3819 = !DILocation(line: 5368, column: 16, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5368, column: 16)
!3821 = !DILocation(line: 5368, column: 21, scope: !3820)
!3822 = !DILocation(line: 5368, column: 16, scope: !3777)
!3823 = !DILocation(line: 5369, column: 14, scope: !3820)
!3824 = !DILocation(line: 5369, column: 20, scope: !3820)
!3825 = !DILocation(line: 5369, column: 31, scope: !3820)
!3826 = !DILocation(line: 5369, column: 34, scope: !3820)
!3827 = !DILocation(line: 5369, column: 37, scope: !3820)
!3828 = !DILocation(line: 5372, column: 11, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 5372, column: 11)
!3830 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 5371, column: 7)
!3831 = !DILocation(line: 5372, column: 26, scope: !3829)
!3832 = !DILocation(line: 5372, column: 33, scope: !3829)
!3833 = !DILocation(line: 5372, column: 39, scope: !3829)
!3834 = !DILocation(line: 5372, column: 16, scope: !3829)
!3835 = !DILocation(line: 5372, column: 11, scope: !3830)
!3836 = !DILocation(line: 5373, column: 41, scope: !3829)
!3837 = !DILocation(line: 5373, column: 48, scope: !3829)
!3838 = !DILocation(line: 5373, column: 54, scope: !3829)
!3839 = !DILocation(line: 5373, column: 16, scope: !3829)
!3840 = !DILocation(line: 5373, column: 22, scope: !3829)
!3841 = !DILocation(line: 5373, column: 33, scope: !3829)
!3842 = !DILocation(line: 5373, column: 36, scope: !3829)
!3843 = !DILocation(line: 5373, column: 39, scope: !3829)
!3844 = !DILocation(line: 5375, column: 34, scope: !3829)
!3845 = !DILocation(line: 5375, column: 39, scope: !3829)
!3846 = !DILocation(line: 5375, column: 9, scope: !3829)
!3847 = !DILocation(line: 5375, column: 15, scope: !3829)
!3848 = !DILocation(line: 5375, column: 26, scope: !3829)
!3849 = !DILocation(line: 5375, column: 29, scope: !3829)
!3850 = !DILocation(line: 5375, column: 32, scope: !3829)
!3851 = !DILocation(line: 5377, column: 21, scope: !3777)
!3852 = !DILocation(line: 5377, column: 27, scope: !3777)
!3853 = !DILocation(line: 5377, column: 38, scope: !3777)
!3854 = !DILocation(line: 5377, column: 41, scope: !3777)
!3855 = !DILocation(line: 5377, column: 46, scope: !3777)
!3856 = !DILocation(line: 5377, column: 52, scope: !3777)
!3857 = !DILocation(line: 5377, column: 63, scope: !3777)
!3858 = !DILocation(line: 5377, column: 66, scope: !3777)
!3859 = !DILocation(line: 5377, column: 44, scope: !3777)
!3860 = !DILocation(line: 5377, column: 70, scope: !3777)
!3861 = !DILocation(line: 5377, column: 19, scope: !3777)
!3862 = !DILocation(line: 5380, column: 44, scope: !3777)
!3863 = !DILocation(line: 5380, column: 12, scope: !3777)
!3864 = !DILocation(line: 5380, column: 18, scope: !3777)
!3865 = !DILocation(line: 5380, column: 34, scope: !3777)
!3866 = !DILocation(line: 5381, column: 16, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5381, column: 16)
!3868 = !DILocation(line: 5381, column: 22, scope: !3867)
!3869 = !DILocation(line: 5381, column: 31, scope: !3867)
!3870 = !DILocation(line: 5381, column: 16, scope: !3777)
!3871 = !DILocation(line: 5382, column: 46, scope: !3867)
!3872 = !DILocation(line: 5382, column: 14, scope: !3867)
!3873 = !DILocation(line: 5382, column: 20, scope: !3867)
!3874 = !DILocation(line: 5382, column: 35, scope: !3867)
!3875 = !DILocation(line: 5384, column: 45, scope: !3867)
!3876 = !DILocation(line: 5384, column: 14, scope: !3867)
!3877 = !DILocation(line: 5384, column: 20, scope: !3867)
!3878 = !DILocation(line: 5384, column: 35, scope: !3867)
!3879 = !DILocation(line: 5385, column: 12, scope: !3777)
!3880 = !DILocation(line: 5387, column: 29, scope: !3777)
!3881 = !DILocation(line: 5387, column: 19, scope: !3777)
!3882 = !DILocation(line: 5388, column: 38, scope: !3777)
!3883 = !DILocation(line: 5388, column: 5, scope: !3777)
!3884 = !DILocation(line: 5388, column: 11, scope: !3777)
!3885 = !DILocation(line: 5388, column: 22, scope: !3777)
!3886 = !DILocation(line: 5388, column: 25, scope: !3777)
!3887 = !DILocation(line: 5388, column: 28, scope: !3777)
!3888 = !DILocation(line: 5389, column: 45, scope: !3777)
!3889 = !DILocation(line: 5389, column: 12, scope: !3777)
!3890 = !DILocation(line: 5389, column: 18, scope: !3777)
!3891 = !DILocation(line: 5389, column: 29, scope: !3777)
!3892 = !DILocation(line: 5389, column: 32, scope: !3777)
!3893 = !DILocation(line: 5389, column: 35, scope: !3777)
!3894 = !DILocation(line: 5391, column: 27, scope: !3777)
!3895 = !DILocation(line: 5391, column: 51, scope: !3777)
!3896 = !DILocation(line: 5391, column: 43, scope: !3777)
!3897 = !DILocation(line: 5391, column: 63, scope: !3777)
!3898 = !DILocation(line: 5391, column: 71, scope: !3777)
!3899 = !DILocation(line: 5391, column: 69, scope: !3777)
!3900 = !DILocation(line: 5391, column: 77, scope: !3777)
!3901 = !DILocation(line: 5391, column: 75, scope: !3777)
!3902 = !DILocation(line: 5391, column: 34, scope: !3777)
!3903 = !DILocation(line: 5391, column: 32, scope: !3777)
!3904 = !DILocation(line: 5391, column: 17, scope: !3777)
!3905 = !DILocation(line: 5392, column: 16, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5392, column: 16)
!3907 = !DILocation(line: 5392, column: 21, scope: !3906)
!3908 = !DILocation(line: 5392, column: 16, scope: !3777)
!3909 = !DILocation(line: 5393, column: 7, scope: !3906)
!3910 = !DILocation(line: 5393, column: 13, scope: !3906)
!3911 = !DILocation(line: 5393, column: 24, scope: !3906)
!3912 = !DILocation(line: 5393, column: 27, scope: !3906)
!3913 = !DILocation(line: 5393, column: 30, scope: !3906)
!3914 = !DILocation(line: 5395, column: 32, scope: !3906)
!3915 = !DILocation(line: 5395, column: 37, scope: !3906)
!3916 = !DILocation(line: 5395, column: 7, scope: !3906)
!3917 = !DILocation(line: 5395, column: 13, scope: !3906)
!3918 = !DILocation(line: 5395, column: 24, scope: !3906)
!3919 = !DILocation(line: 5395, column: 27, scope: !3906)
!3920 = !DILocation(line: 5395, column: 30, scope: !3906)
!3921 = !DILocation(line: 5397, column: 27, scope: !3777)
!3922 = !DILocation(line: 5397, column: 19, scope: !3777)
!3923 = !DILocation(line: 5397, column: 43, scope: !3777)
!3924 = !DILocation(line: 5397, column: 35, scope: !3777)
!3925 = !DILocation(line: 5397, column: 55, scope: !3777)
!3926 = !DILocation(line: 5397, column: 64, scope: !3777)
!3927 = !DILocation(line: 5397, column: 68, scope: !3777)
!3928 = !DILocation(line: 5397, column: 63, scope: !3777)
!3929 = !DILocation(line: 5397, column: 61, scope: !3777)
!3930 = !DILocation(line: 5397, column: 75, scope: !3777)
!3931 = !DILocation(line: 5397, column: 73, scope: !3777)
!3932 = !DILocation(line: 5397, column: 32, scope: !3777)
!3933 = !DILocation(line: 5397, column: 17, scope: !3777)
!3934 = !DILocation(line: 5398, column: 16, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5398, column: 16)
!3936 = !DILocation(line: 5398, column: 21, scope: !3935)
!3937 = !DILocation(line: 5398, column: 16, scope: !3777)
!3938 = !DILocation(line: 5399, column: 14, scope: !3935)
!3939 = !DILocation(line: 5399, column: 20, scope: !3935)
!3940 = !DILocation(line: 5399, column: 31, scope: !3935)
!3941 = !DILocation(line: 5399, column: 34, scope: !3935)
!3942 = !DILocation(line: 5399, column: 37, scope: !3935)
!3943 = !DILocation(line: 5402, column: 18, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 5402, column: 18)
!3945 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 5401, column: 7)
!3946 = !DILocation(line: 5402, column: 33, scope: !3944)
!3947 = !DILocation(line: 5402, column: 40, scope: !3944)
!3948 = !DILocation(line: 5402, column: 47, scope: !3944)
!3949 = !DILocation(line: 5402, column: 23, scope: !3944)
!3950 = !DILocation(line: 5402, column: 18, scope: !3945)
!3951 = !DILocation(line: 5403, column: 41, scope: !3944)
!3952 = !DILocation(line: 5403, column: 48, scope: !3944)
!3953 = !DILocation(line: 5403, column: 55, scope: !3944)
!3954 = !DILocation(line: 5403, column: 16, scope: !3944)
!3955 = !DILocation(line: 5403, column: 22, scope: !3944)
!3956 = !DILocation(line: 5403, column: 33, scope: !3944)
!3957 = !DILocation(line: 5403, column: 36, scope: !3944)
!3958 = !DILocation(line: 5403, column: 39, scope: !3944)
!3959 = !DILocation(line: 5405, column: 41, scope: !3944)
!3960 = !DILocation(line: 5405, column: 16, scope: !3944)
!3961 = !DILocation(line: 5405, column: 22, scope: !3944)
!3962 = !DILocation(line: 5405, column: 33, scope: !3944)
!3963 = !DILocation(line: 5405, column: 36, scope: !3944)
!3964 = !DILocation(line: 5405, column: 39, scope: !3944)
!3965 = !DILocation(line: 5407, column: 22, scope: !3777)
!3966 = !DILocation(line: 5407, column: 28, scope: !3777)
!3967 = !DILocation(line: 5407, column: 39, scope: !3777)
!3968 = !DILocation(line: 5407, column: 42, scope: !3777)
!3969 = !DILocation(line: 5407, column: 47, scope: !3777)
!3970 = !DILocation(line: 5407, column: 53, scope: !3777)
!3971 = !DILocation(line: 5407, column: 64, scope: !3777)
!3972 = !DILocation(line: 5407, column: 67, scope: !3777)
!3973 = !DILocation(line: 5407, column: 45, scope: !3777)
!3974 = !DILocation(line: 5407, column: 70, scope: !3777)
!3975 = !DILocation(line: 5407, column: 20, scope: !3777)
!3976 = !DILocation(line: 5410, column: 16, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5410, column: 16)
!3978 = !DILocation(line: 5410, column: 22, scope: !3977)
!3979 = !DILocation(line: 5410, column: 31, scope: !3977)
!3980 = !DILocation(line: 5410, column: 16, scope: !3777)
!3981 = !DILocation(line: 5411, column: 47, scope: !3977)
!3982 = !DILocation(line: 5411, column: 14, scope: !3977)
!3983 = !DILocation(line: 5411, column: 20, scope: !3977)
!3984 = !DILocation(line: 5411, column: 36, scope: !3977)
!3985 = !DILocation(line: 5413, column: 46, scope: !3977)
!3986 = !DILocation(line: 5413, column: 14, scope: !3977)
!3987 = !DILocation(line: 5413, column: 20, scope: !3977)
!3988 = !DILocation(line: 5413, column: 36, scope: !3977)
!3989 = !DILocation(line: 5414, column: 43, scope: !3777)
!3990 = !DILocation(line: 5414, column: 12, scope: !3777)
!3991 = !DILocation(line: 5414, column: 18, scope: !3777)
!3992 = !DILocation(line: 5414, column: 33, scope: !3777)
!3993 = !DILocation(line: 5415, column: 12, scope: !3777)
!3994 = !DILocation(line: 5417, column: 30, scope: !3777)
!3995 = !DILocation(line: 5417, column: 20, scope: !3777)
!3996 = !DILocation(line: 5418, column: 38, scope: !3777)
!3997 = !DILocation(line: 5418, column: 5, scope: !3777)
!3998 = !DILocation(line: 5418, column: 11, scope: !3777)
!3999 = !DILocation(line: 5418, column: 22, scope: !3777)
!4000 = !DILocation(line: 5418, column: 25, scope: !3777)
!4001 = !DILocation(line: 5418, column: 28, scope: !3777)
!4002 = !DILocation(line: 5419, column: 45, scope: !3777)
!4003 = !DILocation(line: 5419, column: 12, scope: !3777)
!4004 = !DILocation(line: 5419, column: 18, scope: !3777)
!4005 = !DILocation(line: 5419, column: 29, scope: !3777)
!4006 = !DILocation(line: 5419, column: 32, scope: !3777)
!4007 = !DILocation(line: 5419, column: 35, scope: !3777)
!4008 = !DILocation(line: 5421, column: 45, scope: !3777)
!4009 = !DILocation(line: 5422, column: 52, scope: !3777)
!4010 = !DILocation(line: 5422, column: 67, scope: !3777)
!4011 = !DILocation(line: 5422, column: 75, scope: !3777)
!4012 = !DILocation(line: 5422, column: 73, scope: !3777)
!4013 = !DILocation(line: 5422, column: 64, scope: !3777)
!4014 = !DILocation(line: 5422, column: 44, scope: !3777)
!4015 = !DILocation(line: 5422, column: 80, scope: !3777)
!4016 = !DILocation(line: 5422, column: 88, scope: !3777)
!4017 = !DILocation(line: 5422, column: 86, scope: !3777)
!4018 = !DILocation(line: 5422, column: 35, scope: !3777)
!4019 = !DILocation(line: 5421, column: 52, scope: !3777)
!4020 = !DILocation(line: 5421, column: 12, scope: !3777)
!4021 = !DILocation(line: 5421, column: 18, scope: !3777)
!4022 = !DILocation(line: 5421, column: 29, scope: !3777)
!4023 = !DILocation(line: 5421, column: 32, scope: !3777)
!4024 = !DILocation(line: 5421, column: 35, scope: !3777)
!4025 = !DILocation(line: 5423, column: 27, scope: !3777)
!4026 = !DILocation(line: 5423, column: 19, scope: !3777)
!4027 = !DILocation(line: 5424, column: 21, scope: !3777)
!4028 = !DILocation(line: 5424, column: 35, scope: !3777)
!4029 = !DILocation(line: 5424, column: 43, scope: !3777)
!4030 = !DILocation(line: 5424, column: 41, scope: !3777)
!4031 = !DILocation(line: 5424, column: 47, scope: !3777)
!4032 = !DILocation(line: 5424, column: 32, scope: !3777)
!4033 = !DILocation(line: 5424, column: 13, scope: !3777)
!4034 = !DILocation(line: 5424, column: 52, scope: !3777)
!4035 = !DILocation(line: 5424, column: 60, scope: !3777)
!4036 = !DILocation(line: 5424, column: 58, scope: !3777)
!4037 = !DILocation(line: 5423, column: 34, scope: !3777)
!4038 = !DILocation(line: 5423, column: 17, scope: !3777)
!4039 = !DILocation(line: 5425, column: 16, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5425, column: 16)
!4041 = !DILocation(line: 5425, column: 21, scope: !4040)
!4042 = !DILocation(line: 5425, column: 16, scope: !3777)
!4043 = !DILocation(line: 5426, column: 14, scope: !4040)
!4044 = !DILocation(line: 5426, column: 20, scope: !4040)
!4045 = !DILocation(line: 5426, column: 31, scope: !4040)
!4046 = !DILocation(line: 5426, column: 34, scope: !4040)
!4047 = !DILocation(line: 5426, column: 37, scope: !4040)
!4048 = !DILocation(line: 5429, column: 11, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 5429, column: 11)
!4050 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 5428, column: 7)
!4051 = !DILocation(line: 5429, column: 26, scope: !4049)
!4052 = !DILocation(line: 5429, column: 33, scope: !4049)
!4053 = !DILocation(line: 5429, column: 39, scope: !4049)
!4054 = !DILocation(line: 5429, column: 16, scope: !4049)
!4055 = !DILocation(line: 5429, column: 11, scope: !4050)
!4056 = !DILocation(line: 5430, column: 41, scope: !4049)
!4057 = !DILocation(line: 5430, column: 48, scope: !4049)
!4058 = !DILocation(line: 5430, column: 54, scope: !4049)
!4059 = !DILocation(line: 5430, column: 16, scope: !4049)
!4060 = !DILocation(line: 5430, column: 22, scope: !4049)
!4061 = !DILocation(line: 5430, column: 33, scope: !4049)
!4062 = !DILocation(line: 5430, column: 36, scope: !4049)
!4063 = !DILocation(line: 5430, column: 39, scope: !4049)
!4064 = !DILocation(line: 5432, column: 41, scope: !4049)
!4065 = !DILocation(line: 5432, column: 46, scope: !4049)
!4066 = !DILocation(line: 5432, column: 16, scope: !4049)
!4067 = !DILocation(line: 5432, column: 22, scope: !4049)
!4068 = !DILocation(line: 5432, column: 33, scope: !4049)
!4069 = !DILocation(line: 5432, column: 36, scope: !4049)
!4070 = !DILocation(line: 5432, column: 39, scope: !4049)
!4071 = !DILocation(line: 5434, column: 21, scope: !3777)
!4072 = !DILocation(line: 5434, column: 27, scope: !3777)
!4073 = !DILocation(line: 5434, column: 38, scope: !3777)
!4074 = !DILocation(line: 5434, column: 41, scope: !3777)
!4075 = !DILocation(line: 5434, column: 46, scope: !3777)
!4076 = !DILocation(line: 5434, column: 52, scope: !3777)
!4077 = !DILocation(line: 5434, column: 63, scope: !3777)
!4078 = !DILocation(line: 5434, column: 66, scope: !3777)
!4079 = !DILocation(line: 5434, column: 44, scope: !3777)
!4080 = !DILocation(line: 5434, column: 70, scope: !3777)
!4081 = !DILocation(line: 5434, column: 19, scope: !3777)
!4082 = !DILocation(line: 5437, column: 44, scope: !3777)
!4083 = !DILocation(line: 5437, column: 12, scope: !3777)
!4084 = !DILocation(line: 5437, column: 18, scope: !3777)
!4085 = !DILocation(line: 5437, column: 34, scope: !3777)
!4086 = !DILocation(line: 5438, column: 16, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5438, column: 16)
!4088 = !DILocation(line: 5438, column: 22, scope: !4087)
!4089 = !DILocation(line: 5438, column: 31, scope: !4087)
!4090 = !DILocation(line: 5438, column: 16, scope: !3777)
!4091 = !DILocation(line: 5439, column: 46, scope: !4087)
!4092 = !DILocation(line: 5439, column: 14, scope: !4087)
!4093 = !DILocation(line: 5439, column: 20, scope: !4087)
!4094 = !DILocation(line: 5439, column: 35, scope: !4087)
!4095 = !DILocation(line: 5441, column: 45, scope: !4087)
!4096 = !DILocation(line: 5441, column: 14, scope: !4087)
!4097 = !DILocation(line: 5441, column: 20, scope: !4087)
!4098 = !DILocation(line: 5441, column: 35, scope: !4087)
!4099 = !DILocation(line: 5442, column: 12, scope: !3777)
!4100 = !DILocation(line: 5445, column: 29, scope: !3777)
!4101 = !DILocation(line: 5445, column: 19, scope: !3777)
!4102 = !DILocation(line: 5446, column: 38, scope: !3777)
!4103 = !DILocation(line: 5446, column: 5, scope: !3777)
!4104 = !DILocation(line: 5446, column: 11, scope: !3777)
!4105 = !DILocation(line: 5446, column: 22, scope: !3777)
!4106 = !DILocation(line: 5446, column: 25, scope: !3777)
!4107 = !DILocation(line: 5446, column: 28, scope: !3777)
!4108 = !DILocation(line: 5447, column: 45, scope: !3777)
!4109 = !DILocation(line: 5447, column: 12, scope: !3777)
!4110 = !DILocation(line: 5447, column: 18, scope: !3777)
!4111 = !DILocation(line: 5447, column: 29, scope: !3777)
!4112 = !DILocation(line: 5447, column: 32, scope: !3777)
!4113 = !DILocation(line: 5447, column: 35, scope: !3777)
!4114 = !DILocation(line: 5449, column: 45, scope: !3777)
!4115 = !DILocation(line: 5449, column: 71, scope: !3777)
!4116 = !DILocation(line: 5449, column: 63, scope: !3777)
!4117 = !DILocation(line: 5449, column: 83, scope: !3777)
!4118 = !DILocation(line: 5449, column: 92, scope: !3777)
!4119 = !DILocation(line: 5449, column: 96, scope: !3777)
!4120 = !DILocation(line: 5449, column: 91, scope: !3777)
!4121 = !DILocation(line: 5449, column: 89, scope: !3777)
!4122 = !DILocation(line: 5449, column: 103, scope: !3777)
!4123 = !DILocation(line: 5449, column: 101, scope: !3777)
!4124 = !DILocation(line: 5449, column: 54, scope: !3777)
!4125 = !DILocation(line: 5449, column: 52, scope: !3777)
!4126 = !DILocation(line: 5449, column: 12, scope: !3777)
!4127 = !DILocation(line: 5449, column: 18, scope: !3777)
!4128 = !DILocation(line: 5449, column: 29, scope: !3777)
!4129 = !DILocation(line: 5449, column: 32, scope: !3777)
!4130 = !DILocation(line: 5449, column: 35, scope: !3777)
!4131 = !DILocation(line: 5450, column: 27, scope: !3777)
!4132 = !DILocation(line: 5450, column: 53, scope: !3777)
!4133 = !DILocation(line: 5450, column: 45, scope: !3777)
!4134 = !DILocation(line: 5450, column: 65, scope: !3777)
!4135 = !DILocation(line: 5450, column: 73, scope: !3777)
!4136 = !DILocation(line: 5450, column: 71, scope: !3777)
!4137 = !DILocation(line: 5450, column: 79, scope: !3777)
!4138 = !DILocation(line: 5450, column: 77, scope: !3777)
!4139 = !DILocation(line: 5450, column: 36, scope: !3777)
!4140 = !DILocation(line: 5450, column: 34, scope: !3777)
!4141 = !DILocation(line: 5450, column: 17, scope: !3777)
!4142 = !DILocation(line: 5451, column: 16, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5451, column: 16)
!4144 = !DILocation(line: 5451, column: 21, scope: !4143)
!4145 = !DILocation(line: 5451, column: 16, scope: !3777)
!4146 = !DILocation(line: 5452, column: 14, scope: !4143)
!4147 = !DILocation(line: 5452, column: 20, scope: !4143)
!4148 = !DILocation(line: 5452, column: 31, scope: !4143)
!4149 = !DILocation(line: 5452, column: 34, scope: !4143)
!4150 = !DILocation(line: 5452, column: 37, scope: !4143)
!4151 = !DILocation(line: 5455, column: 11, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 5455, column: 11)
!4153 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 5454, column: 7)
!4154 = !DILocation(line: 5455, column: 26, scope: !4152)
!4155 = !DILocation(line: 5455, column: 33, scope: !4152)
!4156 = !DILocation(line: 5455, column: 40, scope: !4152)
!4157 = !DILocation(line: 5455, column: 16, scope: !4152)
!4158 = !DILocation(line: 5455, column: 11, scope: !4153)
!4159 = !DILocation(line: 5456, column: 34, scope: !4152)
!4160 = !DILocation(line: 5456, column: 41, scope: !4152)
!4161 = !DILocation(line: 5456, column: 48, scope: !4152)
!4162 = !DILocation(line: 5456, column: 9, scope: !4152)
!4163 = !DILocation(line: 5456, column: 15, scope: !4152)
!4164 = !DILocation(line: 5456, column: 26, scope: !4152)
!4165 = !DILocation(line: 5456, column: 29, scope: !4152)
!4166 = !DILocation(line: 5456, column: 32, scope: !4152)
!4167 = !DILocation(line: 5458, column: 34, scope: !4152)
!4168 = !DILocation(line: 5458, column: 39, scope: !4152)
!4169 = !DILocation(line: 5458, column: 9, scope: !4152)
!4170 = !DILocation(line: 5458, column: 15, scope: !4152)
!4171 = !DILocation(line: 5458, column: 26, scope: !4152)
!4172 = !DILocation(line: 5458, column: 29, scope: !4152)
!4173 = !DILocation(line: 5458, column: 32, scope: !4152)
!4174 = !DILocation(line: 5460, column: 22, scope: !3777)
!4175 = !DILocation(line: 5460, column: 28, scope: !3777)
!4176 = !DILocation(line: 5460, column: 39, scope: !3777)
!4177 = !DILocation(line: 5460, column: 42, scope: !3777)
!4178 = !DILocation(line: 5460, column: 47, scope: !3777)
!4179 = !DILocation(line: 5460, column: 53, scope: !3777)
!4180 = !DILocation(line: 5460, column: 64, scope: !3777)
!4181 = !DILocation(line: 5460, column: 67, scope: !3777)
!4182 = !DILocation(line: 5460, column: 45, scope: !3777)
!4183 = !DILocation(line: 5460, column: 70, scope: !3777)
!4184 = !DILocation(line: 5460, column: 20, scope: !3777)
!4185 = !DILocation(line: 5463, column: 16, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 5463, column: 16)
!4187 = !DILocation(line: 5463, column: 22, scope: !4186)
!4188 = !DILocation(line: 5463, column: 31, scope: !4186)
!4189 = !DILocation(line: 5463, column: 16, scope: !3777)
!4190 = !DILocation(line: 5464, column: 47, scope: !4186)
!4191 = !DILocation(line: 5464, column: 14, scope: !4186)
!4192 = !DILocation(line: 5464, column: 20, scope: !4186)
!4193 = !DILocation(line: 5464, column: 36, scope: !4186)
!4194 = !DILocation(line: 5466, column: 46, scope: !4186)
!4195 = !DILocation(line: 5466, column: 14, scope: !4186)
!4196 = !DILocation(line: 5466, column: 20, scope: !4186)
!4197 = !DILocation(line: 5466, column: 36, scope: !4186)
!4198 = !DILocation(line: 5467, column: 43, scope: !3777)
!4199 = !DILocation(line: 5467, column: 12, scope: !3777)
!4200 = !DILocation(line: 5467, column: 18, scope: !3777)
!4201 = !DILocation(line: 5467, column: 33, scope: !3777)
!4202 = !DILocation(line: 5468, column: 12, scope: !3777)
!4203 = !DILocation(line: 5472, column: 15, scope: !3763)
!4204 = !DILocation(line: 5472, column: 24, scope: !3763)
!4205 = !DILocation(line: 5472, column: 31, scope: !3763)
!4206 = !DILocation(line: 5472, column: 22, scope: !3763)
!4207 = !DILocation(line: 5472, column: 37, scope: !3763)
!4208 = !DILocation(line: 5472, column: 44, scope: !3763)
!4209 = !DILocation(line: 5472, column: 35, scope: !3763)
!4210 = !DILocation(line: 5472, column: 49, scope: !3763)
!4211 = !DILocation(line: 5472, column: 55, scope: !3763)
!4212 = !DILocation(line: 5472, column: 63, scope: !3763)
!4213 = !DILocation(line: 5472, column: 71, scope: !3763)
!4214 = !DILocation(line: 5472, column: 60, scope: !3763)
!4215 = !DILocation(line: 5471, column: 14, scope: !3763)
!4216 = !DILocation(line: 5473, column: 42, scope: !3763)
!4217 = !DILocation(line: 5473, column: 5, scope: !3763)
!4218 = !DILocation(line: 5473, column: 11, scope: !3763)
!4219 = !DILocation(line: 5473, column: 22, scope: !3763)
!4220 = !DILocation(line: 5473, column: 25, scope: !3763)
!4221 = !DILocation(line: 5473, column: 31, scope: !3763)
!4222 = !DILocation(line: 5474, column: 43, scope: !3763)
!4223 = !DILocation(line: 5474, column: 5, scope: !3763)
!4224 = !DILocation(line: 5474, column: 11, scope: !3763)
!4225 = !DILocation(line: 5474, column: 22, scope: !3763)
!4226 = !DILocation(line: 5474, column: 25, scope: !3763)
!4227 = !DILocation(line: 5474, column: 32, scope: !3763)
!4228 = !DILocation(line: 5475, column: 36, scope: !3763)
!4229 = !DILocation(line: 5475, column: 5, scope: !3763)
!4230 = !DILocation(line: 5475, column: 11, scope: !3763)
!4231 = !DILocation(line: 5475, column: 22, scope: !3763)
!4232 = !DILocation(line: 5475, column: 25, scope: !3763)
!4233 = !DILocation(line: 5475, column: 34, scope: !3763)
!4234 = !DILocation(line: 5476, column: 24, scope: !3763)
!4235 = !DILocation(line: 5476, column: 5, scope: !3763)
!4236 = !DILocation(line: 5476, column: 11, scope: !3763)
!4237 = !DILocation(line: 5476, column: 21, scope: !3763)
!4238 = !DILocation(line: 5479, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 5479, column: 7)
!4240 = !DILocation(line: 5479, column: 13, scope: !4239)
!4241 = !DILocation(line: 5479, column: 21, scope: !4239)
!4242 = !DILocation(line: 5479, column: 7, scope: !3763)
!4243 = !DILocation(line: 5480, column: 16, scope: !4239)
!4244 = !DILocation(line: 5480, column: 22, scope: !4239)
!4245 = !DILocation(line: 5480, column: 31, scope: !4239)
!4246 = !DILocation(line: 5480, column: 37, scope: !4239)
!4247 = !DILocation(line: 5481, column: 21, scope: !4239)
!4248 = !DILocation(line: 5481, column: 23, scope: !4239)
!4249 = !DILocation(line: 5481, column: 36, scope: !4239)
!4250 = !DILocation(line: 5481, column: 52, scope: !4239)
!4251 = !DILocation(line: 5482, column: 7, scope: !4239)
!4252 = !DILocation(line: 5482, column: 13, scope: !4239)
!4253 = !DILocation(line: 5482, column: 24, scope: !4239)
!4254 = !DILocation(line: 5482, column: 27, scope: !4239)
!4255 = !DILocation(line: 5482, column: 31, scope: !4239)
!4256 = !DILocation(line: 5482, column: 37, scope: !4239)
!4257 = !DILocation(line: 5482, column: 48, scope: !4239)
!4258 = !DILocation(line: 5482, column: 51, scope: !4239)
!4259 = !DILocation(line: 5483, column: 21, scope: !4239)
!4260 = !DILocation(line: 5483, column: 27, scope: !4239)
!4261 = !DILocation(line: 5483, column: 38, scope: !4239)
!4262 = !DILocation(line: 5483, column: 41, scope: !4239)
!4263 = !DILocation(line: 5483, column: 45, scope: !4239)
!4264 = !DILocation(line: 5483, column: 51, scope: !4239)
!4265 = !DILocation(line: 5483, column: 62, scope: !4239)
!4266 = !DILocation(line: 5483, column: 65, scope: !4239)
!4267 = !DILocation(line: 5480, column: 5, scope: !4239)
!4268 = !DILocation(line: 5484, column: 5, scope: !3763)
!4269 = !DILocation(line: 5352, column: 33, scope: !3757)
!4270 = !DILocation(line: 5352, column: 3, scope: !3757)
!4271 = distinct !{!4271, !3761, !4272}
!4272 = !DILocation(line: 5484, column: 5, scope: !3754)
!4273 = !DILocation(line: 5486, column: 3, scope: !3561)
!4274 = !DILocation(line: 5487, column: 3, scope: !3561)
!4275 = distinct !DISubprogram(name: "processCropSelections", scope: !3, file: !3, line: 7208, type: !4276, scopeLine: 7210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!110, !542, !592, !571, !2773}
!4278 = !DILocalVariable(name: "image", arg: 1, scope: !4275, file: !3, line: 7208, type: !542)
!4279 = !DILocation(line: 7208, column: 42, scope: !4275)
!4280 = !DILocalVariable(name: "crop", arg: 2, scope: !4275, file: !3, line: 7208, type: !592)
!4281 = !DILocation(line: 7208, column: 67, scope: !4275)
!4282 = !DILocalVariable(name: "read_buff_ptr", arg: 3, scope: !4275, file: !3, line: 7209, type: !571)
!4283 = !DILocation(line: 7209, column: 39, scope: !4275)
!4284 = !DILocalVariable(name: "seg_buffs", arg: 4, scope: !4275, file: !3, line: 7209, type: !2773)
!4285 = !DILocation(line: 7209, column: 70, scope: !4275)
!4286 = !DILocalVariable(name: "i", scope: !4275, file: !3, line: 7211, type: !110)
!4287 = !DILocation(line: 7211, column: 13, scope: !4275)
!4288 = !DILocalVariable(name: "width", scope: !4275, file: !3, line: 7212, type: !105)
!4289 = !DILocation(line: 7212, column: 13, scope: !4275)
!4290 = !DILocalVariable(name: "length", scope: !4275, file: !3, line: 7212, type: !105)
!4291 = !DILocation(line: 7212, column: 20, scope: !4275)
!4292 = !DILocalVariable(name: "total_width", scope: !4275, file: !3, line: 7212, type: !105)
!4293 = !DILocation(line: 7212, column: 28, scope: !4275)
!4294 = !DILocalVariable(name: "total_length", scope: !4275, file: !3, line: 7212, type: !105)
!4295 = !DILocation(line: 7212, column: 41, scope: !4275)
!4296 = !DILocalVariable(name: "cropsize", scope: !4275, file: !3, line: 7213, type: !117)
!4297 = !DILocation(line: 7213, column: 13, scope: !4275)
!4298 = !DILocalVariable(name: "crop_buff", scope: !4275, file: !3, line: 7214, type: !106)
!4299 = !DILocation(line: 7214, column: 19, scope: !4275)
!4300 = !DILocalVariable(name: "read_buff", scope: !4275, file: !3, line: 7215, type: !106)
!4301 = !DILocation(line: 7215, column: 19, scope: !4275)
!4302 = !DILocalVariable(name: "next_buff", scope: !4275, file: !3, line: 7216, type: !106)
!4303 = !DILocation(line: 7216, column: 19, scope: !4275)
!4304 = !DILocalVariable(name: "prev_cropsize", scope: !4275, file: !3, line: 7217, type: !117)
!4305 = !DILocation(line: 7217, column: 13, scope: !4275)
!4306 = !DILocation(line: 7219, column: 16, scope: !4275)
!4307 = !DILocation(line: 7219, column: 15, scope: !4275)
!4308 = !DILocation(line: 7219, column: 13, scope: !4275)
!4309 = !DILocation(line: 7221, column: 7, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 7221, column: 7)
!4311 = !DILocation(line: 7221, column: 13, scope: !4310)
!4312 = !DILocation(line: 7221, column: 22, scope: !4310)
!4313 = !DILocation(line: 7221, column: 7, scope: !4275)
!4314 = !DILocation(line: 7223, column: 16, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 7222, column: 5)
!4316 = !DILocation(line: 7223, column: 22, scope: !4315)
!4317 = !DILocation(line: 7223, column: 14, scope: !4315)
!4318 = !DILocation(line: 7224, column: 17, scope: !4315)
!4319 = !DILocation(line: 7224, column: 30, scope: !4315)
!4320 = !DILocation(line: 7224, column: 15, scope: !4315)
!4321 = !DILocation(line: 7225, column: 10, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 7225, column: 9)
!4323 = !DILocation(line: 7225, column: 9, scope: !4315)
!4324 = !DILocation(line: 7226, column: 48, scope: !4322)
!4325 = !DILocation(line: 7226, column: 36, scope: !4322)
!4326 = !DILocation(line: 7226, column: 17, scope: !4322)
!4327 = !DILocation(line: 7226, column: 7, scope: !4322)
!4328 = !DILocation(line: 7229, column: 23, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 7228, column: 7)
!4330 = !DILocation(line: 7229, column: 36, scope: !4329)
!4331 = !DILocation(line: 7229, column: 21, scope: !4329)
!4332 = !DILocation(line: 7230, column: 11, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 7230, column: 11)
!4334 = !DILocation(line: 7230, column: 27, scope: !4333)
!4335 = !DILocation(line: 7230, column: 25, scope: !4333)
!4336 = !DILocation(line: 7230, column: 11, scope: !4329)
!4337 = !DILocation(line: 7232, column: 34, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 7231, column: 9)
!4339 = !DILocation(line: 7232, column: 45, scope: !4338)
!4340 = !DILocation(line: 7232, column: 21, scope: !4338)
!4341 = !DILocation(line: 7232, column: 19, scope: !4338)
!4342 = !DILocation(line: 7233, column: 15, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 7233, column: 13)
!4344 = !DILocation(line: 7233, column: 13, scope: !4338)
!4345 = !DILocation(line: 7235, column: 22, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 7234, column: 11)
!4347 = !DILocation(line: 7235, column: 11, scope: !4346)
!4348 = !DILocation(line: 7236, column: 52, scope: !4346)
!4349 = !DILocation(line: 7236, column: 40, scope: !4346)
!4350 = !DILocation(line: 7236, column: 21, scope: !4346)
!4351 = !DILocation(line: 7237, column: 11, scope: !4346)
!4352 = !DILocation(line: 7239, column: 23, scope: !4343)
!4353 = !DILocation(line: 7239, column: 21, scope: !4343)
!4354 = !DILocation(line: 7240, column: 9, scope: !4338)
!4355 = !DILocation(line: 7243, column: 10, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 7243, column: 9)
!4357 = !DILocation(line: 7243, column: 9, scope: !4315)
!4358 = !DILocation(line: 7245, column: 7, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 7244, column: 7)
!4360 = !DILocation(line: 7246, column: 7, scope: !4359)
!4361 = !DILocation(line: 7249, column: 17, scope: !4315)
!4362 = !DILocation(line: 7249, column: 31, scope: !4315)
!4363 = !DILocation(line: 7249, column: 5, scope: !4315)
!4364 = !DILocation(line: 7250, column: 27, scope: !4315)
!4365 = !DILocation(line: 7250, column: 5, scope: !4315)
!4366 = !DILocation(line: 7250, column: 18, scope: !4315)
!4367 = !DILocation(line: 7250, column: 25, scope: !4315)
!4368 = !DILocation(line: 7251, column: 25, scope: !4315)
!4369 = !DILocation(line: 7251, column: 5, scope: !4315)
!4370 = !DILocation(line: 7251, column: 18, scope: !4315)
!4371 = !DILocation(line: 7251, column: 23, scope: !4315)
!4372 = !DILocation(line: 7254, column: 33, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 7254, column: 9)
!4374 = !DILocation(line: 7254, column: 40, scope: !4373)
!4375 = !DILocation(line: 7254, column: 46, scope: !4373)
!4376 = !DILocation(line: 7254, column: 57, scope: !4373)
!4377 = !DILocation(line: 7254, column: 9, scope: !4373)
!4378 = !DILocation(line: 7254, column: 68, scope: !4373)
!4379 = !DILocation(line: 7254, column: 9, scope: !4315)
!4380 = !DILocation(line: 7255, column: 7, scope: !4373)
!4381 = !DILocation(line: 7257, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 7257, column: 9)
!4383 = !DILocation(line: 7257, column: 15, scope: !4382)
!4384 = !DILocation(line: 7257, column: 25, scope: !4382)
!4385 = !DILocation(line: 7257, column: 9, scope: !4315)
!4386 = !DILocation(line: 7259, column: 15, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 7258, column: 7)
!4388 = !DILocation(line: 7259, column: 21, scope: !4387)
!4389 = !DILocation(line: 7259, column: 7, scope: !4387)
!4390 = !DILocation(line: 7264, column: 28, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 7260, column: 9)
!4392 = !DILocation(line: 7264, column: 34, scope: !4391)
!4393 = !DILocation(line: 7264, column: 7, scope: !4391)
!4394 = !DILocation(line: 7264, column: 14, scope: !4391)
!4395 = !DILocation(line: 7264, column: 26, scope: !4391)
!4396 = !DILocation(line: 7265, column: 7, scope: !4391)
!4397 = !DILocation(line: 7268, column: 30, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 7268, column: 18)
!4399 = !DILocation(line: 7268, column: 37, scope: !4398)
!4400 = !DILocation(line: 7268, column: 50, scope: !4398)
!4401 = !DILocation(line: 7268, column: 57, scope: !4398)
!4402 = !DILocation(line: 7268, column: 62, scope: !4398)
!4403 = !DILocation(line: 7268, column: 69, scope: !4398)
!4404 = !DILocation(line: 7269, column: 30, scope: !4398)
!4405 = !DILocation(line: 7269, column: 36, scope: !4398)
!4406 = !DILocation(line: 7269, column: 52, scope: !4398)
!4407 = !DILocation(line: 7269, column: 58, scope: !4398)
!4408 = !DILocation(line: 7269, column: 75, scope: !4398)
!4409 = !DILocation(line: 7268, column: 18, scope: !4398)
!4410 = !DILocation(line: 7268, column: 18, scope: !4391)
!4411 = !DILocation(line: 7271, column: 16, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 7270, column: 16)
!4413 = !DILocation(line: 7273, column: 16, scope: !4412)
!4414 = !DILocation(line: 7275, column: 18, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 7275, column: 18)
!4416 = !DILocation(line: 7275, column: 24, scope: !4415)
!4417 = !DILocation(line: 7275, column: 36, scope: !4415)
!4418 = !DILocation(line: 7275, column: 18, scope: !4391)
!4419 = !DILocation(line: 7277, column: 24, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 7276, column: 16)
!4421 = !DILocation(line: 7277, column: 31, scope: !4420)
!4422 = !DILocation(line: 7277, column: 16, scope: !4420)
!4423 = !DILocation(line: 7280, column: 17, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 7278, column: 18)
!4425 = !DILocation(line: 7280, column: 24, scope: !4424)
!4426 = !DILocation(line: 7280, column: 36, scope: !4424)
!4427 = !DILocation(line: 7281, column: 16, scope: !4424)
!4428 = !DILocation(line: 7283, column: 17, scope: !4424)
!4429 = !DILocation(line: 7283, column: 24, scope: !4424)
!4430 = !DILocation(line: 7283, column: 36, scope: !4424)
!4431 = !DILocation(line: 7284, column: 16, scope: !4424)
!4432 = !DILocation(line: 7286, column: 16, scope: !4424)
!4433 = !DILocation(line: 7288, column: 9, scope: !4420)
!4434 = !DILocation(line: 7289, column: 14, scope: !4391)
!4435 = !DILocation(line: 7290, column: 18, scope: !4391)
!4436 = !DILocation(line: 7292, column: 7, scope: !4387)
!4437 = !DILocation(line: 7295, column: 9, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 7295, column: 9)
!4439 = !DILocation(line: 7295, column: 15, scope: !4438)
!4440 = !DILocation(line: 7295, column: 25, scope: !4438)
!4441 = !DILocation(line: 7295, column: 9, scope: !4315)
!4442 = !DILocation(line: 7297, column: 23, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 7297, column: 11)
!4444 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 7296, column: 7)
!4445 = !DILocation(line: 7297, column: 30, scope: !4443)
!4446 = !DILocation(line: 7297, column: 35, scope: !4443)
!4447 = !DILocation(line: 7297, column: 42, scope: !4443)
!4448 = !DILocation(line: 7297, column: 47, scope: !4443)
!4449 = !DILocation(line: 7297, column: 53, scope: !4443)
!4450 = !DILocation(line: 7298, column: 23, scope: !4443)
!4451 = !DILocation(line: 7298, column: 29, scope: !4443)
!4452 = !DILocation(line: 7298, column: 45, scope: !4443)
!4453 = !DILocation(line: 7298, column: 51, scope: !4443)
!4454 = !DILocation(line: 7298, column: 68, scope: !4443)
!4455 = !DILocation(line: 7297, column: 11, scope: !4443)
!4456 = !DILocation(line: 7297, column: 11, scope: !4444)
!4457 = !DILocation(line: 7301, column: 12, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 7299, column: 9)
!4459 = !DILocation(line: 7301, column: 18, scope: !4458)
!4460 = !DILocation(line: 7301, column: 27, scope: !4458)
!4461 = !DILocation(line: 7301, column: 11, scope: !4458)
!4462 = !DILocation(line: 7300, column: 9, scope: !4458)
!4463 = !DILocation(line: 7302, column: 9, scope: !4458)
!4464 = !DILocation(line: 7304, column: 7, scope: !4444)
!4465 = !DILocation(line: 7306, column: 9, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 7306, column: 9)
!4467 = !DILocation(line: 7306, column: 15, scope: !4466)
!4468 = !DILocation(line: 7306, column: 25, scope: !4466)
!4469 = !DILocation(line: 7306, column: 9, scope: !4315)
!4470 = !DILocation(line: 7308, column: 23, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 7308, column: 11)
!4472 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 7307, column: 7)
!4473 = !DILocation(line: 7308, column: 29, scope: !4471)
!4474 = !DILocation(line: 7308, column: 39, scope: !4471)
!4475 = !DILocation(line: 7308, column: 47, scope: !4471)
!4476 = !DILocation(line: 7308, column: 53, scope: !4471)
!4477 = !DILocation(line: 7309, column: 24, scope: !4471)
!4478 = !DILocation(line: 7309, column: 30, scope: !4471)
!4479 = !DILocation(line: 7308, column: 11, scope: !4471)
!4480 = !DILocation(line: 7308, column: 11, scope: !4472)
!4481 = !DILocation(line: 7312, column: 71, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 7310, column: 9)
!4483 = !DILocation(line: 7312, column: 77, scope: !4482)
!4484 = !DILocation(line: 7311, column: 9, scope: !4482)
!4485 = !DILocation(line: 7313, column: 9, scope: !4482)
!4486 = !DILocation(line: 7315, column: 29, scope: !4472)
!4487 = !DILocation(line: 7315, column: 7, scope: !4472)
!4488 = !DILocation(line: 7315, column: 20, scope: !4472)
!4489 = !DILocation(line: 7315, column: 27, scope: !4472)
!4490 = !DILocation(line: 7316, column: 30, scope: !4472)
!4491 = !DILocation(line: 7316, column: 36, scope: !4472)
!4492 = !DILocation(line: 7316, column: 53, scope: !4472)
!4493 = !DILocation(line: 7316, column: 60, scope: !4472)
!4494 = !DILocation(line: 7316, column: 51, scope: !4472)
!4495 = !DILocation(line: 7316, column: 64, scope: !4472)
!4496 = !DILocation(line: 7316, column: 70, scope: !4472)
!4497 = !DILocation(line: 7317, column: 31, scope: !4472)
!4498 = !DILocation(line: 7317, column: 38, scope: !4472)
!4499 = !DILocation(line: 7317, column: 29, scope: !4472)
!4500 = !DILocation(line: 7317, column: 45, scope: !4472)
!4501 = !DILocation(line: 7317, column: 51, scope: !4472)
!4502 = !DILocation(line: 7317, column: 43, scope: !4472)
!4503 = !DILocation(line: 7316, column: 7, scope: !4472)
!4504 = !DILocation(line: 7316, column: 20, scope: !4472)
!4505 = !DILocation(line: 7316, column: 25, scope: !4472)
!4506 = !DILocation(line: 7318, column: 7, scope: !4472)
!4507 = !DILocation(line: 7319, column: 5, scope: !4315)
!4508 = !DILocation(line: 7322, column: 32, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 7321, column: 5)
!4510 = !DILocation(line: 7322, column: 17, scope: !4509)
!4511 = !DILocation(line: 7323, column: 12, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 7323, column: 5)
!4513 = !DILocation(line: 7323, column: 10, scope: !4512)
!4514 = !DILocation(line: 7323, column: 17, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 7323, column: 5)
!4516 = !DILocation(line: 7323, column: 21, scope: !4515)
!4517 = !DILocation(line: 7323, column: 27, scope: !4515)
!4518 = !DILocation(line: 7323, column: 19, scope: !4515)
!4519 = !DILocation(line: 7323, column: 5, scope: !4512)
!4520 = !DILocation(line: 7325, column: 18, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 7324, column: 7)
!4522 = !DILocation(line: 7325, column: 24, scope: !4521)
!4523 = !DILocation(line: 7325, column: 16, scope: !4521)
!4524 = !DILocation(line: 7326, column: 19, scope: !4521)
!4525 = !DILocation(line: 7326, column: 29, scope: !4521)
!4526 = !DILocation(line: 7326, column: 32, scope: !4521)
!4527 = !DILocation(line: 7326, column: 17, scope: !4521)
!4528 = !DILocation(line: 7327, column: 12, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 7327, column: 11)
!4530 = !DILocation(line: 7327, column: 11, scope: !4521)
!4531 = !DILocation(line: 7328, column: 50, scope: !4529)
!4532 = !DILocation(line: 7328, column: 38, scope: !4529)
!4533 = !DILocation(line: 7328, column: 19, scope: !4529)
!4534 = !DILocation(line: 7328, column: 9, scope: !4529)
!4535 = !DILocation(line: 7331, column: 25, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 7330, column: 9)
!4537 = !DILocation(line: 7331, column: 38, scope: !4536)
!4538 = !DILocation(line: 7331, column: 23, scope: !4536)
!4539 = !DILocation(line: 7332, column: 13, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 7332, column: 13)
!4541 = !DILocation(line: 7332, column: 29, scope: !4540)
!4542 = !DILocation(line: 7332, column: 27, scope: !4540)
!4543 = !DILocation(line: 7332, column: 13, scope: !4536)
!4544 = !DILocation(line: 7334, column: 36, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 7333, column: 11)
!4546 = !DILocation(line: 7334, column: 47, scope: !4545)
!4547 = !DILocation(line: 7334, column: 23, scope: !4545)
!4548 = !DILocation(line: 7334, column: 21, scope: !4545)
!4549 = !DILocation(line: 7335, column: 17, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 7335, column: 15)
!4551 = !DILocation(line: 7335, column: 15, scope: !4545)
!4552 = !DILocation(line: 7337, column: 24, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 7336, column: 13)
!4554 = !DILocation(line: 7337, column: 13, scope: !4553)
!4555 = !DILocation(line: 7338, column: 54, scope: !4553)
!4556 = !DILocation(line: 7338, column: 42, scope: !4553)
!4557 = !DILocation(line: 7338, column: 23, scope: !4553)
!4558 = !DILocation(line: 7339, column: 13, scope: !4553)
!4559 = !DILocation(line: 7341, column: 25, scope: !4550)
!4560 = !DILocation(line: 7341, column: 23, scope: !4550)
!4561 = !DILocation(line: 7342, column: 11, scope: !4545)
!4562 = !DILocation(line: 7345, column: 12, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 7345, column: 11)
!4564 = !DILocation(line: 7345, column: 11, scope: !4521)
!4565 = !DILocation(line: 7347, column: 9, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 7346, column: 9)
!4567 = !DILocation(line: 7348, column: 9, scope: !4566)
!4568 = !DILocation(line: 7351, column: 19, scope: !4521)
!4569 = !DILocation(line: 7351, column: 33, scope: !4521)
!4570 = !DILocation(line: 7351, column: 7, scope: !4521)
!4571 = !DILocation(line: 7352, column: 29, scope: !4521)
!4572 = !DILocation(line: 7352, column: 7, scope: !4521)
!4573 = !DILocation(line: 7352, column: 17, scope: !4521)
!4574 = !DILocation(line: 7352, column: 20, scope: !4521)
!4575 = !DILocation(line: 7352, column: 27, scope: !4521)
!4576 = !DILocation(line: 7353, column: 27, scope: !4521)
!4577 = !DILocation(line: 7353, column: 7, scope: !4521)
!4578 = !DILocation(line: 7353, column: 17, scope: !4521)
!4579 = !DILocation(line: 7353, column: 20, scope: !4521)
!4580 = !DILocation(line: 7353, column: 25, scope: !4521)
!4581 = !DILocation(line: 7355, column: 33, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 7355, column: 11)
!4583 = !DILocation(line: 7355, column: 40, scope: !4582)
!4584 = !DILocation(line: 7355, column: 46, scope: !4582)
!4585 = !DILocation(line: 7355, column: 57, scope: !4582)
!4586 = !DILocation(line: 7355, column: 68, scope: !4582)
!4587 = !DILocation(line: 7355, column: 11, scope: !4582)
!4588 = !DILocation(line: 7355, column: 11, scope: !4521)
!4589 = !DILocation(line: 7357, column: 87, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 7356, column: 9)
!4591 = !DILocation(line: 7357, column: 2, scope: !4590)
!4592 = !DILocation(line: 7358, column: 9, scope: !4590)
!4593 = !DILocation(line: 7361, column: 16, scope: !4521)
!4594 = !DILocation(line: 7361, column: 22, scope: !4521)
!4595 = !DILocation(line: 7361, column: 33, scope: !4521)
!4596 = !DILocation(line: 7361, column: 36, scope: !4521)
!4597 = !DILocation(line: 7361, column: 14, scope: !4521)
!4598 = !DILocation(line: 7362, column: 16, scope: !4521)
!4599 = !DILocation(line: 7362, column: 22, scope: !4521)
!4600 = !DILocation(line: 7362, column: 33, scope: !4521)
!4601 = !DILocation(line: 7362, column: 36, scope: !4521)
!4602 = !DILocation(line: 7362, column: 14, scope: !4521)
!4603 = !DILocation(line: 7364, column: 11, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 7364, column: 11)
!4605 = !DILocation(line: 7364, column: 17, scope: !4604)
!4606 = !DILocation(line: 7364, column: 27, scope: !4604)
!4607 = !DILocation(line: 7364, column: 11, scope: !4521)
!4608 = !DILocation(line: 7366, column: 17, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 7365, column: 9)
!4610 = !DILocation(line: 7366, column: 23, scope: !4609)
!4611 = !DILocation(line: 7366, column: 9, scope: !4609)
!4612 = !DILocation(line: 7371, column: 30, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 7367, column: 11)
!4614 = !DILocation(line: 7371, column: 36, scope: !4613)
!4615 = !DILocation(line: 7371, column: 9, scope: !4613)
!4616 = !DILocation(line: 7371, column: 16, scope: !4613)
!4617 = !DILocation(line: 7371, column: 28, scope: !4613)
!4618 = !DILocation(line: 7372, column: 9, scope: !4613)
!4619 = !DILocation(line: 7375, column: 32, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 7375, column: 20)
!4621 = !DILocation(line: 7375, column: 39, scope: !4620)
!4622 = !DILocation(line: 7375, column: 52, scope: !4620)
!4623 = !DILocation(line: 7375, column: 59, scope: !4620)
!4624 = !DILocation(line: 7375, column: 64, scope: !4620)
!4625 = !DILocation(line: 7375, column: 71, scope: !4620)
!4626 = !DILocation(line: 7376, column: 32, scope: !4620)
!4627 = !DILocation(line: 7376, column: 39, scope: !4620)
!4628 = !DILocation(line: 7376, column: 47, scope: !4620)
!4629 = !DILocation(line: 7375, column: 20, scope: !4620)
!4630 = !DILocation(line: 7375, column: 20, scope: !4613)
!4631 = !DILocation(line: 7378, column: 18, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 7377, column: 18)
!4633 = !DILocation(line: 7380, column: 18, scope: !4632)
!4634 = !DILocation(line: 7382, column: 20, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 7382, column: 20)
!4636 = !DILocation(line: 7382, column: 26, scope: !4635)
!4637 = !DILocation(line: 7382, column: 38, scope: !4635)
!4638 = !DILocation(line: 7382, column: 20, scope: !4613)
!4639 = !DILocation(line: 7384, column: 26, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 7383, column: 18)
!4641 = !DILocation(line: 7384, column: 33, scope: !4640)
!4642 = !DILocation(line: 7384, column: 18, scope: !4640)
!4643 = !DILocation(line: 7387, column: 19, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 7385, column: 20)
!4645 = !DILocation(line: 7387, column: 26, scope: !4644)
!4646 = !DILocation(line: 7387, column: 38, scope: !4644)
!4647 = !DILocation(line: 7388, column: 18, scope: !4644)
!4648 = !DILocation(line: 7390, column: 19, scope: !4644)
!4649 = !DILocation(line: 7390, column: 26, scope: !4644)
!4650 = !DILocation(line: 7390, column: 38, scope: !4644)
!4651 = !DILocation(line: 7391, column: 18, scope: !4644)
!4652 = !DILocation(line: 7393, column: 18, scope: !4644)
!4653 = !DILocation(line: 7395, column: 11, scope: !4640)
!4654 = !DILocation(line: 7396, column: 16, scope: !4613)
!4655 = !DILocation(line: 7397, column: 20, scope: !4613)
!4656 = !DILocation(line: 7399, column: 9, scope: !4609)
!4657 = !DILocation(line: 7401, column: 11, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 7401, column: 11)
!4659 = !DILocation(line: 7401, column: 17, scope: !4658)
!4660 = !DILocation(line: 7401, column: 27, scope: !4658)
!4661 = !DILocation(line: 7401, column: 11, scope: !4521)
!4662 = !DILocation(line: 7403, column: 25, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 7403, column: 13)
!4664 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 7402, column: 9)
!4665 = !DILocation(line: 7403, column: 32, scope: !4663)
!4666 = !DILocation(line: 7403, column: 37, scope: !4663)
!4667 = !DILocation(line: 7403, column: 44, scope: !4663)
!4668 = !DILocation(line: 7403, column: 49, scope: !4663)
!4669 = !DILocation(line: 7403, column: 55, scope: !4663)
!4670 = !DILocation(line: 7404, column: 25, scope: !4663)
!4671 = !DILocation(line: 7404, column: 32, scope: !4663)
!4672 = !DILocation(line: 7404, column: 40, scope: !4663)
!4673 = !DILocation(line: 7403, column: 13, scope: !4663)
!4674 = !DILocation(line: 7403, column: 13, scope: !4664)
!4675 = !DILocation(line: 7407, column: 14, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 7405, column: 11)
!4677 = !DILocation(line: 7407, column: 20, scope: !4676)
!4678 = !DILocation(line: 7407, column: 29, scope: !4676)
!4679 = !DILocation(line: 7407, column: 13, scope: !4676)
!4680 = !DILocation(line: 7406, column: 11, scope: !4676)
!4681 = !DILocation(line: 7408, column: 11, scope: !4676)
!4682 = !DILocation(line: 7410, column: 9, scope: !4664)
!4683 = !DILocation(line: 7412, column: 11, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 7412, column: 11)
!4685 = !DILocation(line: 7412, column: 17, scope: !4684)
!4686 = !DILocation(line: 7412, column: 27, scope: !4684)
!4687 = !DILocation(line: 7412, column: 11, scope: !4521)
!4688 = !DILocation(line: 7414, column: 18, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 7414, column: 6)
!4690 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 7413, column: 9)
!4691 = !DILocation(line: 7414, column: 24, scope: !4689)
!4692 = !DILocation(line: 7414, column: 34, scope: !4689)
!4693 = !DILocation(line: 7414, column: 42, scope: !4689)
!4694 = !DILocation(line: 7414, column: 48, scope: !4689)
!4695 = !DILocation(line: 7414, column: 59, scope: !4689)
!4696 = !DILocation(line: 7414, column: 62, scope: !4689)
!4697 = !DILocation(line: 7415, column: 5, scope: !4689)
!4698 = !DILocation(line: 7415, column: 11, scope: !4689)
!4699 = !DILocation(line: 7415, column: 22, scope: !4689)
!4700 = !DILocation(line: 7415, column: 25, scope: !4689)
!4701 = !DILocation(line: 7414, column: 6, scope: !4689)
!4702 = !DILocation(line: 7414, column: 6, scope: !4690)
!4703 = !DILocation(line: 7418, column: 67, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 7416, column: 11)
!4705 = !DILocation(line: 7418, column: 73, scope: !4704)
!4706 = !DILocation(line: 7417, column: 11, scope: !4704)
!4707 = !DILocation(line: 7419, column: 11, scope: !4704)
!4708 = !DILocation(line: 7421, column: 25, scope: !4690)
!4709 = !DILocation(line: 7421, column: 31, scope: !4690)
!4710 = !DILocation(line: 7421, column: 42, scope: !4690)
!4711 = !DILocation(line: 7421, column: 45, scope: !4690)
!4712 = !DILocation(line: 7421, column: 22, scope: !4690)
!4713 = !DILocation(line: 7422, column: 25, scope: !4690)
!4714 = !DILocation(line: 7422, column: 31, scope: !4690)
!4715 = !DILocation(line: 7422, column: 42, scope: !4690)
!4716 = !DILocation(line: 7422, column: 45, scope: !4690)
!4717 = !DILocation(line: 7422, column: 22, scope: !4690)
!4718 = !DILocation(line: 7423, column: 32, scope: !4690)
!4719 = !DILocation(line: 7423, column: 9, scope: !4690)
!4720 = !DILocation(line: 7423, column: 15, scope: !4690)
!4721 = !DILocation(line: 7423, column: 30, scope: !4690)
!4722 = !DILocation(line: 7424, column: 33, scope: !4690)
!4723 = !DILocation(line: 7424, column: 9, scope: !4690)
!4724 = !DILocation(line: 7424, column: 15, scope: !4690)
!4725 = !DILocation(line: 7424, column: 31, scope: !4690)
!4726 = !DILocation(line: 7425, column: 31, scope: !4690)
!4727 = !DILocation(line: 7425, column: 9, scope: !4690)
!4728 = !DILocation(line: 7425, column: 19, scope: !4690)
!4729 = !DILocation(line: 7425, column: 22, scope: !4690)
!4730 = !DILocation(line: 7425, column: 29, scope: !4690)
!4731 = !DILocation(line: 7426, column: 32, scope: !4690)
!4732 = !DILocation(line: 7426, column: 38, scope: !4690)
!4733 = !DILocation(line: 7426, column: 49, scope: !4690)
!4734 = !DILocation(line: 7426, column: 52, scope: !4690)
!4735 = !DILocation(line: 7426, column: 60, scope: !4690)
!4736 = !DILocation(line: 7426, column: 67, scope: !4690)
!4737 = !DILocation(line: 7426, column: 58, scope: !4690)
!4738 = !DILocation(line: 7426, column: 71, scope: !4690)
!4739 = !DILocation(line: 7426, column: 77, scope: !4690)
!4740 = !DILocation(line: 7427, column: 34, scope: !4690)
!4741 = !DILocation(line: 7427, column: 41, scope: !4690)
!4742 = !DILocation(line: 7427, column: 32, scope: !4690)
!4743 = !DILocation(line: 7427, column: 48, scope: !4690)
!4744 = !DILocation(line: 7427, column: 54, scope: !4690)
!4745 = !DILocation(line: 7427, column: 65, scope: !4690)
!4746 = !DILocation(line: 7427, column: 68, scope: !4690)
!4747 = !DILocation(line: 7427, column: 46, scope: !4690)
!4748 = !DILocation(line: 7426, column: 9, scope: !4690)
!4749 = !DILocation(line: 7426, column: 19, scope: !4690)
!4750 = !DILocation(line: 7426, column: 22, scope: !4690)
!4751 = !DILocation(line: 7426, column: 27, scope: !4690)
!4752 = !DILocation(line: 7428, column: 9, scope: !4690)
!4753 = !DILocation(line: 7429, column: 7, scope: !4521)
!4754 = !DILocation(line: 7323, column: 40, scope: !4515)
!4755 = !DILocation(line: 7323, column: 5, scope: !4515)
!4756 = distinct !{!4756, !4519, !4757}
!4757 = !DILocation(line: 7429, column: 7, scope: !4512)
!4758 = !DILocation(line: 7431, column: 3, scope: !4275)
!4759 = !DILocation(line: 7432, column: 3, scope: !4275)
!4760 = !DILocalVariable(name: "image", arg: 1, scope: !589, file: !3, line: 7443, type: !542)
!4761 = !DILocation(line: 7443, column: 39, scope: !589)
!4762 = !DILocalVariable(name: "crop", arg: 2, scope: !589, file: !3, line: 7443, type: !592)
!4763 = !DILocation(line: 7443, column: 64, scope: !589)
!4764 = !DILocalVariable(name: "read_buff_ptr", arg: 3, scope: !589, file: !3, line: 7444, type: !571)
!4765 = !DILocation(line: 7444, column: 36, scope: !589)
!4766 = !DILocalVariable(name: "crop_buff_ptr", arg: 4, scope: !589, file: !3, line: 7444, type: !571)
!4767 = !DILocation(line: 7444, column: 67, scope: !589)
!4768 = !DILocalVariable(name: "cropsize", scope: !589, file: !3, line: 7446, type: !117)
!4769 = !DILocation(line: 7446, column: 13, scope: !589)
!4770 = !DILocalVariable(name: "read_buff", scope: !589, file: !3, line: 7447, type: !106)
!4771 = !DILocation(line: 7447, column: 19, scope: !589)
!4772 = !DILocalVariable(name: "crop_buff", scope: !589, file: !3, line: 7448, type: !106)
!4773 = !DILocation(line: 7448, column: 19, scope: !589)
!4774 = !DILocalVariable(name: "new_buff", scope: !589, file: !3, line: 7449, type: !106)
!4775 = !DILocation(line: 7449, column: 19, scope: !589)
!4776 = !DILocation(line: 7452, column: 16, scope: !589)
!4777 = !DILocation(line: 7452, column: 15, scope: !589)
!4778 = !DILocation(line: 7452, column: 13, scope: !589)
!4779 = !DILocation(line: 7455, column: 15, scope: !589)
!4780 = !DILocation(line: 7455, column: 13, scope: !589)
!4781 = !DILocation(line: 7456, column: 20, scope: !589)
!4782 = !DILocation(line: 7456, column: 4, scope: !589)
!4783 = !DILocation(line: 7456, column: 18, scope: !589)
!4784 = !DILocation(line: 7457, column: 26, scope: !589)
!4785 = !DILocation(line: 7457, column: 33, scope: !589)
!4786 = !DILocation(line: 7457, column: 3, scope: !589)
!4787 = !DILocation(line: 7457, column: 9, scope: !589)
!4788 = !DILocation(line: 7457, column: 24, scope: !589)
!4789 = !DILocation(line: 7458, column: 27, scope: !589)
!4790 = !DILocation(line: 7458, column: 34, scope: !589)
!4791 = !DILocation(line: 7458, column: 3, scope: !589)
!4792 = !DILocation(line: 7458, column: 9, scope: !589)
!4793 = !DILocation(line: 7458, column: 25, scope: !589)
!4794 = !DILocation(line: 7460, column: 14, scope: !589)
!4795 = !DILocation(line: 7460, column: 20, scope: !589)
!4796 = !DILocation(line: 7460, column: 12, scope: !589)
!4797 = !DILocation(line: 7461, column: 16, scope: !589)
!4798 = !DILocation(line: 7461, column: 15, scope: !589)
!4799 = !DILocation(line: 7461, column: 13, scope: !589)
!4800 = !DILocation(line: 7462, column: 8, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !589, file: !3, line: 7462, column: 7)
!4802 = !DILocation(line: 7462, column: 7, scope: !589)
!4803 = !DILocation(line: 7464, column: 46, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 7463, column: 5)
!4805 = !DILocation(line: 7464, column: 34, scope: !4804)
!4806 = !DILocation(line: 7464, column: 15, scope: !4804)
!4807 = !DILocation(line: 7465, column: 22, scope: !4804)
!4808 = !DILocation(line: 7465, column: 6, scope: !4804)
!4809 = !DILocation(line: 7465, column: 20, scope: !4804)
!4810 = !DILocation(line: 7466, column: 17, scope: !4804)
!4811 = !DILocation(line: 7466, column: 31, scope: !4804)
!4812 = !DILocation(line: 7466, column: 5, scope: !4804)
!4813 = !DILocation(line: 7467, column: 21, scope: !4804)
!4814 = !DILocation(line: 7467, column: 19, scope: !4804)
!4815 = !DILocation(line: 7468, column: 5, scope: !4804)
!4816 = !DILocation(line: 7471, column: 9, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 7471, column: 9)
!4818 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 7470, column: 5)
!4819 = !DILocation(line: 7471, column: 25, scope: !4817)
!4820 = !DILocation(line: 7471, column: 23, scope: !4817)
!4821 = !DILocation(line: 7471, column: 9, scope: !4818)
!4822 = !DILocation(line: 7473, column: 31, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 7472, column: 7)
!4824 = !DILocation(line: 7473, column: 42, scope: !4823)
!4825 = !DILocation(line: 7473, column: 18, scope: !4823)
!4826 = !DILocation(line: 7473, column: 16, scope: !4823)
!4827 = !DILocation(line: 7474, column: 12, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 7474, column: 11)
!4829 = !DILocation(line: 7474, column: 11, scope: !4823)
!4830 = !DILocation(line: 7476, column: 8, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 7475, column: 9)
!4832 = !DILocation(line: 7476, column: 2, scope: !4831)
!4833 = !DILocation(line: 7477, column: 50, scope: !4831)
!4834 = !DILocation(line: 7477, column: 38, scope: !4831)
!4835 = !DILocation(line: 7477, column: 19, scope: !4831)
!4836 = !DILocation(line: 7478, column: 9, scope: !4831)
!4837 = !DILocation(line: 7480, column: 21, scope: !4828)
!4838 = !DILocation(line: 7480, column: 19, scope: !4828)
!4839 = !DILocation(line: 7481, column: 19, scope: !4823)
!4840 = !DILocation(line: 7481, column: 33, scope: !4823)
!4841 = !DILocation(line: 7481, column: 7, scope: !4823)
!4842 = !DILocation(line: 7482, column: 7, scope: !4823)
!4843 = !DILocation(line: 7485, column: 8, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !589, file: !3, line: 7485, column: 7)
!4845 = !DILocation(line: 7485, column: 7, scope: !589)
!4846 = !DILocation(line: 7487, column: 5, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 7486, column: 5)
!4848 = !DILocation(line: 7488, column: 5, scope: !4847)
!4849 = !DILocation(line: 7490, column: 20, scope: !589)
!4850 = !DILocation(line: 7490, column: 4, scope: !589)
!4851 = !DILocation(line: 7490, column: 18, scope: !589)
!4852 = !DILocation(line: 7492, column: 7, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !589, file: !3, line: 7492, column: 7)
!4854 = !DILocation(line: 7492, column: 13, scope: !4853)
!4855 = !DILocation(line: 7492, column: 23, scope: !4853)
!4856 = !DILocation(line: 7492, column: 7, scope: !589)
!4857 = !DILocation(line: 7494, column: 13, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 7493, column: 5)
!4859 = !DILocation(line: 7494, column: 19, scope: !4858)
!4860 = !DILocation(line: 7494, column: 5, scope: !4858)
!4861 = !DILocation(line: 7499, column: 26, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 7495, column: 7)
!4863 = !DILocation(line: 7499, column: 32, scope: !4862)
!4864 = !DILocation(line: 7499, column: 5, scope: !4862)
!4865 = !DILocation(line: 7499, column: 12, scope: !4862)
!4866 = !DILocation(line: 7499, column: 24, scope: !4862)
!4867 = !DILocation(line: 7500, column: 5, scope: !4862)
!4868 = !DILocation(line: 7503, column: 28, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 7503, column: 16)
!4870 = !DILocation(line: 7503, column: 35, scope: !4869)
!4871 = !DILocation(line: 7503, column: 48, scope: !4869)
!4872 = !DILocation(line: 7503, column: 55, scope: !4869)
!4873 = !DILocation(line: 7503, column: 60, scope: !4869)
!4874 = !DILocation(line: 7503, column: 67, scope: !4869)
!4875 = !DILocation(line: 7504, column: 28, scope: !4869)
!4876 = !DILocation(line: 7504, column: 34, scope: !4869)
!4877 = !DILocation(line: 7504, column: 50, scope: !4869)
!4878 = !DILocation(line: 7504, column: 56, scope: !4869)
!4879 = !DILocation(line: 7504, column: 73, scope: !4869)
!4880 = !DILocation(line: 7503, column: 16, scope: !4869)
!4881 = !DILocation(line: 7503, column: 16, scope: !4862)
!4882 = !DILocation(line: 7506, column: 14, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 7505, column: 14)
!4884 = !DILocation(line: 7508, column: 14, scope: !4883)
!4885 = !DILocation(line: 7510, column: 16, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 7510, column: 16)
!4887 = !DILocation(line: 7510, column: 22, scope: !4886)
!4888 = !DILocation(line: 7510, column: 34, scope: !4886)
!4889 = !DILocation(line: 7510, column: 16, scope: !4862)
!4890 = !DILocation(line: 7512, column: 22, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 7511, column: 14)
!4892 = !DILocation(line: 7512, column: 29, scope: !4891)
!4893 = !DILocation(line: 7512, column: 14, scope: !4891)
!4894 = !DILocation(line: 7515, column: 15, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 7513, column: 16)
!4896 = !DILocation(line: 7515, column: 22, scope: !4895)
!4897 = !DILocation(line: 7515, column: 34, scope: !4895)
!4898 = !DILocation(line: 7516, column: 14, scope: !4895)
!4899 = !DILocation(line: 7518, column: 15, scope: !4895)
!4900 = !DILocation(line: 7518, column: 22, scope: !4895)
!4901 = !DILocation(line: 7518, column: 34, scope: !4895)
!4902 = !DILocation(line: 7519, column: 14, scope: !4895)
!4903 = !DILocation(line: 7521, column: 14, scope: !4895)
!4904 = !DILocation(line: 7523, column: 7, scope: !4891)
!4905 = !DILocation(line: 7524, column: 12, scope: !4862)
!4906 = !DILocation(line: 7525, column: 16, scope: !4862)
!4907 = !DILocation(line: 7527, column: 5, scope: !4858)
!4908 = !DILocation(line: 7529, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !589, file: !3, line: 7529, column: 7)
!4910 = !DILocation(line: 7529, column: 13, scope: !4909)
!4911 = !DILocation(line: 7529, column: 23, scope: !4909)
!4912 = !DILocation(line: 7529, column: 7, scope: !589)
!4913 = !DILocation(line: 7531, column: 21, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 7531, column: 9)
!4915 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 7530, column: 5)
!4916 = !DILocation(line: 7531, column: 28, scope: !4914)
!4917 = !DILocation(line: 7531, column: 33, scope: !4914)
!4918 = !DILocation(line: 7531, column: 40, scope: !4914)
!4919 = !DILocation(line: 7531, column: 45, scope: !4914)
!4920 = !DILocation(line: 7531, column: 51, scope: !4914)
!4921 = !DILocation(line: 7532, column: 21, scope: !4914)
!4922 = !DILocation(line: 7532, column: 27, scope: !4914)
!4923 = !DILocation(line: 7532, column: 43, scope: !4914)
!4924 = !DILocation(line: 7532, column: 49, scope: !4914)
!4925 = !DILocation(line: 7532, column: 66, scope: !4914)
!4926 = !DILocation(line: 7531, column: 9, scope: !4914)
!4927 = !DILocation(line: 7531, column: 9, scope: !4915)
!4928 = !DILocation(line: 7535, column: 10, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 7533, column: 7)
!4930 = !DILocation(line: 7535, column: 16, scope: !4929)
!4931 = !DILocation(line: 7535, column: 25, scope: !4929)
!4932 = !DILocation(line: 7535, column: 9, scope: !4929)
!4933 = !DILocation(line: 7534, column: 7, scope: !4929)
!4934 = !DILocation(line: 7536, column: 7, scope: !4929)
!4935 = !DILocation(line: 7538, column: 5, scope: !4915)
!4936 = !DILocation(line: 7540, column: 7, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !589, file: !3, line: 7540, column: 7)
!4938 = !DILocation(line: 7540, column: 13, scope: !4937)
!4939 = !DILocation(line: 7540, column: 23, scope: !4937)
!4940 = !DILocation(line: 7540, column: 7, scope: !589)
!4941 = !DILocation(line: 7542, column: 21, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 7542, column: 9)
!4943 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 7541, column: 5)
!4944 = !DILocation(line: 7542, column: 27, scope: !4942)
!4945 = !DILocation(line: 7542, column: 37, scope: !4942)
!4946 = !DILocation(line: 7542, column: 45, scope: !4942)
!4947 = !DILocation(line: 7542, column: 51, scope: !4942)
!4948 = !DILocation(line: 7543, column: 22, scope: !4942)
!4949 = !DILocation(line: 7543, column: 28, scope: !4942)
!4950 = !DILocation(line: 7543, column: 45, scope: !4942)
!4951 = !DILocation(line: 7542, column: 9, scope: !4942)
!4952 = !DILocation(line: 7542, column: 9, scope: !4943)
!4953 = !DILocation(line: 7546, column: 78, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 7544, column: 7)
!4955 = !DILocation(line: 7546, column: 84, scope: !4954)
!4956 = !DILocation(line: 7545, column: 7, scope: !4954)
!4957 = !DILocation(line: 7547, column: 7, scope: !4954)
!4958 = !DILocation(line: 7549, column: 5, scope: !4943)
!4959 = !DILocation(line: 7551, column: 7, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !589, file: !3, line: 7551, column: 7)
!4961 = !DILocation(line: 7551, column: 20, scope: !4960)
!4962 = !DILocation(line: 7551, column: 17, scope: !4960)
!4963 = !DILocation(line: 7551, column: 7, scope: !589)
!4964 = !DILocation(line: 7552, column: 6, scope: !4960)
!4965 = !DILocation(line: 7552, column: 20, scope: !4960)
!4966 = !DILocation(line: 7552, column: 5, scope: !4960)
!4967 = !DILocation(line: 7554, column: 3, scope: !589)
!4968 = !DILocation(line: 7555, column: 3, scope: !589)
!4969 = distinct !DISubprogram(name: "writeSelections", scope: !3, file: !3, line: 6728, type: !4970, scopeLine: 6732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!110, !193, !192, !592, !542, !557, !2773, !146, !146, !535, !7}
!4972 = !DILocalVariable(name: "in", arg: 1, scope: !4969, file: !3, line: 6728, type: !193)
!4973 = !DILocation(line: 6728, column: 23, scope: !4969)
!4974 = !DILocalVariable(name: "out", arg: 2, scope: !4969, file: !3, line: 6728, type: !192)
!4975 = !DILocation(line: 6728, column: 34, scope: !4969)
!4976 = !DILocalVariable(name: "crop", arg: 3, scope: !4969, file: !3, line: 6728, type: !592)
!4977 = !DILocation(line: 6728, column: 57, scope: !4969)
!4978 = !DILocalVariable(name: "image", arg: 4, scope: !4969, file: !3, line: 6729, type: !542)
!4979 = !DILocation(line: 6729, column: 36, scope: !4969)
!4980 = !DILocalVariable(name: "dump", arg: 5, scope: !4969, file: !3, line: 6729, type: !557)
!4981 = !DILocation(line: 6729, column: 61, scope: !4969)
!4982 = !DILocalVariable(name: "seg_buffs", arg: 6, scope: !4969, file: !3, line: 6730, type: !2773)
!4983 = !DILocation(line: 6730, column: 33, scope: !4969)
!4984 = !DILocalVariable(name: "mp", arg: 7, scope: !4969, file: !3, line: 6730, type: !146)
!4985 = !DILocation(line: 6730, column: 52, scope: !4969)
!4986 = !DILocalVariable(name: "filename", arg: 8, scope: !4969, file: !3, line: 6730, type: !146)
!4987 = !DILocation(line: 6730, column: 62, scope: !4969)
!4988 = !DILocalVariable(name: "page", arg: 9, scope: !4969, file: !3, line: 6731, type: !535)
!4989 = !DILocation(line: 6731, column: 31, scope: !4969)
!4990 = !DILocalVariable(name: "total_pages", arg: 10, scope: !4969, file: !3, line: 6731, type: !7)
!4991 = !DILocation(line: 6731, column: 50, scope: !4969)
!4992 = !DILocalVariable(name: "i", scope: !4969, file: !3, line: 6733, type: !110)
!4993 = !DILocation(line: 6733, column: 7, scope: !4969)
!4994 = !DILocalVariable(name: "page_count", scope: !4969, file: !3, line: 6733, type: !110)
!4995 = !DILocation(line: 6733, column: 10, scope: !4969)
!4996 = !DILocalVariable(name: "autoindex", scope: !4969, file: !3, line: 6734, type: !110)
!4997 = !DILocation(line: 6734, column: 7, scope: !4969)
!4998 = !DILocalVariable(name: "crop_buff", scope: !4969, file: !3, line: 6735, type: !106)
!4999 = !DILocation(line: 6735, column: 18, scope: !4969)
!5000 = !DILocation(line: 6738, column: 11, scope: !4969)
!5001 = !DILocation(line: 6738, column: 17, scope: !4969)
!5002 = !DILocation(line: 6738, column: 3, scope: !4969)
!5003 = !DILocation(line: 6741, column: 20, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 6739, column: 5)
!5005 = !DILocation(line: 6742, column: 22, scope: !5004)
!5006 = !DILocation(line: 6742, column: 35, scope: !5004)
!5007 = !DILocation(line: 6742, column: 20, scope: !5004)
!5008 = !DILocation(line: 6743, column: 34, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6743, column: 14)
!5010 = !DILocation(line: 6743, column: 39, scope: !5009)
!5011 = !DILocation(line: 6743, column: 43, scope: !5009)
!5012 = !DILocation(line: 6743, column: 54, scope: !5009)
!5013 = !DILocation(line: 6743, column: 64, scope: !5009)
!5014 = !DILocation(line: 6743, column: 14, scope: !5009)
!5015 = !DILocation(line: 6743, column: 14, scope: !5004)
!5016 = !DILocation(line: 6744, column: 12, scope: !5009)
!5017 = !DILocation(line: 6745, column: 23, scope: !5004)
!5018 = !DILocation(line: 6745, column: 21, scope: !5004)
!5019 = !DILocation(line: 6746, column: 32, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6746, column: 14)
!5021 = !DILocation(line: 6746, column: 37, scope: !5020)
!5022 = !DILocation(line: 6746, column: 36, scope: !5020)
!5023 = !DILocation(line: 6746, column: 42, scope: !5020)
!5024 = !DILocation(line: 6746, column: 49, scope: !5020)
!5025 = !DILocation(line: 6747, column: 32, scope: !5020)
!5026 = !DILocation(line: 6747, column: 38, scope: !5020)
!5027 = !DILocation(line: 6748, column: 32, scope: !5020)
!5028 = !DILocation(line: 6748, column: 38, scope: !5020)
!5029 = !DILocation(line: 6749, column: 32, scope: !5020)
!5030 = !DILocation(line: 6749, column: 44, scope: !5020)
!5031 = !DILocation(line: 6749, column: 43, scope: !5020)
!5032 = !DILocation(line: 6749, column: 50, scope: !5020)
!5033 = !DILocation(line: 6746, column: 14, scope: !5020)
!5034 = !DILocation(line: 6746, column: 14, scope: !5004)
!5035 = !DILocation(line: 6751, column: 14, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 6750, column: 13)
!5037 = !DILocation(line: 6752, column: 14, scope: !5036)
!5038 = !DILocation(line: 6754, column: 3, scope: !5004)
!5039 = !DILocation(line: 6756, column: 20, scope: !5004)
!5040 = !DILocation(line: 6757, column: 34, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6757, column: 14)
!5042 = !DILocation(line: 6757, column: 39, scope: !5041)
!5043 = !DILocation(line: 6757, column: 43, scope: !5041)
!5044 = !DILocation(line: 6757, column: 54, scope: !5041)
!5045 = !DILocation(line: 6757, column: 64, scope: !5041)
!5046 = !DILocation(line: 6757, column: 14, scope: !5041)
!5047 = !DILocation(line: 6757, column: 14, scope: !5004)
!5048 = !DILocation(line: 6758, column: 12, scope: !5041)
!5049 = !DILocation(line: 6759, column: 23, scope: !5004)
!5050 = !DILocation(line: 6759, column: 29, scope: !5004)
!5051 = !DILocation(line: 6759, column: 42, scope: !5004)
!5052 = !DILocation(line: 6759, column: 40, scope: !5004)
!5053 = !DILocation(line: 6759, column: 21, scope: !5004)
!5054 = !DILocation(line: 6760, column: 17, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6760, column: 10)
!5056 = !DILocation(line: 6760, column: 15, scope: !5055)
!5057 = !DILocation(line: 6760, column: 22, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 6760, column: 10)
!5059 = !DILocation(line: 6760, column: 26, scope: !5058)
!5060 = !DILocation(line: 6760, column: 32, scope: !5058)
!5061 = !DILocation(line: 6760, column: 24, scope: !5058)
!5062 = !DILocation(line: 6760, column: 10, scope: !5055)
!5063 = !DILocation(line: 6762, column: 24, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 6761, column: 12)
!5065 = !DILocation(line: 6762, column: 34, scope: !5064)
!5066 = !DILocation(line: 6762, column: 37, scope: !5064)
!5067 = !DILocation(line: 6762, column: 22, scope: !5064)
!5068 = !DILocation(line: 6763, column: 34, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 6763, column: 16)
!5070 = !DILocation(line: 6763, column: 39, scope: !5069)
!5071 = !DILocation(line: 6763, column: 38, scope: !5069)
!5072 = !DILocation(line: 6763, column: 44, scope: !5069)
!5073 = !DILocation(line: 6763, column: 51, scope: !5069)
!5074 = !DILocation(line: 6764, column: 34, scope: !5069)
!5075 = !DILocation(line: 6764, column: 40, scope: !5069)
!5076 = !DILocation(line: 6764, column: 51, scope: !5069)
!5077 = !DILocation(line: 6764, column: 54, scope: !5069)
!5078 = !DILocation(line: 6765, column: 34, scope: !5069)
!5079 = !DILocation(line: 6765, column: 40, scope: !5069)
!5080 = !DILocation(line: 6765, column: 51, scope: !5069)
!5081 = !DILocation(line: 6765, column: 54, scope: !5069)
!5082 = !DILocation(line: 6766, column: 34, scope: !5069)
!5083 = !DILocation(line: 6766, column: 46, scope: !5069)
!5084 = !DILocation(line: 6766, column: 45, scope: !5069)
!5085 = !DILocation(line: 6766, column: 52, scope: !5069)
!5086 = !DILocation(line: 6763, column: 16, scope: !5069)
!5087 = !DILocation(line: 6763, column: 16, scope: !5064)
!5088 = !DILocation(line: 6768, column: 14, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 6767, column: 14)
!5090 = !DILocation(line: 6769, column: 14, scope: !5089)
!5091 = !DILocation(line: 6771, column: 5, scope: !5064)
!5092 = !DILocation(line: 6760, column: 45, scope: !5058)
!5093 = !DILocation(line: 6760, column: 10, scope: !5058)
!5094 = distinct !{!5094, !5062, !5095}
!5095 = !DILocation(line: 6771, column: 5, scope: !5055)
!5096 = !DILocation(line: 6772, column: 10, scope: !5004)
!5097 = !DILocation(line: 6774, column: 20, scope: !5004)
!5098 = !DILocation(line: 6775, column: 34, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6775, column: 14)
!5100 = !DILocation(line: 6775, column: 39, scope: !5099)
!5101 = !DILocation(line: 6775, column: 43, scope: !5099)
!5102 = !DILocation(line: 6775, column: 54, scope: !5099)
!5103 = !DILocation(line: 6775, column: 64, scope: !5099)
!5104 = !DILocation(line: 6775, column: 14, scope: !5099)
!5105 = !DILocation(line: 6775, column: 14, scope: !5004)
!5106 = !DILocation(line: 6776, column: 12, scope: !5099)
!5107 = !DILocation(line: 6778, column: 22, scope: !5004)
!5108 = !DILocation(line: 6778, column: 35, scope: !5004)
!5109 = !DILocation(line: 6778, column: 20, scope: !5004)
!5110 = !DILocation(line: 6779, column: 32, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6779, column: 14)
!5112 = !DILocation(line: 6779, column: 37, scope: !5111)
!5113 = !DILocation(line: 6779, column: 36, scope: !5111)
!5114 = !DILocation(line: 6779, column: 42, scope: !5111)
!5115 = !DILocation(line: 6779, column: 49, scope: !5111)
!5116 = !DILocation(line: 6780, column: 32, scope: !5111)
!5117 = !DILocation(line: 6780, column: 38, scope: !5111)
!5118 = !DILocation(line: 6781, column: 32, scope: !5111)
!5119 = !DILocation(line: 6781, column: 38, scope: !5111)
!5120 = !DILocation(line: 6782, column: 32, scope: !5111)
!5121 = !DILocation(line: 6782, column: 44, scope: !5111)
!5122 = !DILocation(line: 6782, column: 43, scope: !5111)
!5123 = !DILocation(line: 6782, column: 50, scope: !5111)
!5124 = !DILocation(line: 6779, column: 14, scope: !5111)
!5125 = !DILocation(line: 6779, column: 14, scope: !5004)
!5126 = !DILocation(line: 6784, column: 12, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 6783, column: 12)
!5128 = !DILocation(line: 6785, column: 12, scope: !5127)
!5129 = !DILocation(line: 6787, column: 10, scope: !5004)
!5130 = !DILocation(line: 6789, column: 20, scope: !5004)
!5131 = !DILocation(line: 6790, column: 23, scope: !5004)
!5132 = !DILocation(line: 6790, column: 29, scope: !5004)
!5133 = !DILocation(line: 6790, column: 21, scope: !5004)
!5134 = !DILocation(line: 6791, column: 34, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6791, column: 14)
!5136 = !DILocation(line: 6791, column: 39, scope: !5135)
!5137 = !DILocation(line: 6791, column: 43, scope: !5135)
!5138 = !DILocation(line: 6791, column: 54, scope: !5135)
!5139 = !DILocation(line: 6791, column: 64, scope: !5135)
!5140 = !DILocation(line: 6791, column: 14, scope: !5135)
!5141 = !DILocation(line: 6791, column: 14, scope: !5004)
!5142 = !DILocation(line: 6792, column: 12, scope: !5135)
!5143 = !DILocation(line: 6794, column: 17, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6794, column: 10)
!5145 = !DILocation(line: 6794, column: 15, scope: !5144)
!5146 = !DILocation(line: 6794, column: 22, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 6794, column: 10)
!5148 = !DILocation(line: 6794, column: 26, scope: !5147)
!5149 = !DILocation(line: 6794, column: 32, scope: !5147)
!5150 = !DILocation(line: 6794, column: 24, scope: !5147)
!5151 = !DILocation(line: 6794, column: 10, scope: !5144)
!5152 = !DILocation(line: 6796, column: 24, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 6795, column: 12)
!5154 = !DILocation(line: 6796, column: 34, scope: !5153)
!5155 = !DILocation(line: 6796, column: 37, scope: !5153)
!5156 = !DILocation(line: 6796, column: 22, scope: !5153)
!5157 = !DILocation(line: 6798, column: 34, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 6798, column: 16)
!5159 = !DILocation(line: 6798, column: 39, scope: !5158)
!5160 = !DILocation(line: 6798, column: 38, scope: !5158)
!5161 = !DILocation(line: 6798, column: 44, scope: !5158)
!5162 = !DILocation(line: 6798, column: 51, scope: !5158)
!5163 = !DILocation(line: 6799, column: 34, scope: !5158)
!5164 = !DILocation(line: 6799, column: 40, scope: !5158)
!5165 = !DILocation(line: 6799, column: 51, scope: !5158)
!5166 = !DILocation(line: 6799, column: 54, scope: !5158)
!5167 = !DILocation(line: 6800, column: 34, scope: !5158)
!5168 = !DILocation(line: 6800, column: 40, scope: !5158)
!5169 = !DILocation(line: 6800, column: 51, scope: !5158)
!5170 = !DILocation(line: 6800, column: 54, scope: !5158)
!5171 = !DILocation(line: 6801, column: 34, scope: !5158)
!5172 = !DILocation(line: 6801, column: 46, scope: !5158)
!5173 = !DILocation(line: 6801, column: 45, scope: !5158)
!5174 = !DILocation(line: 6801, column: 52, scope: !5158)
!5175 = !DILocation(line: 6798, column: 16, scope: !5158)
!5176 = !DILocation(line: 6798, column: 16, scope: !5153)
!5177 = !DILocation(line: 6803, column: 14, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 6802, column: 14)
!5179 = !DILocation(line: 6804, column: 14, scope: !5178)
!5180 = !DILocation(line: 6806, column: 12, scope: !5153)
!5181 = !DILocation(line: 6794, column: 45, scope: !5147)
!5182 = !DILocation(line: 6794, column: 10, scope: !5147)
!5183 = distinct !{!5183, !5151, !5184}
!5184 = !DILocation(line: 6806, column: 12, scope: !5144)
!5185 = !DILocation(line: 6807, column: 10, scope: !5004)
!5186 = !DILocation(line: 6809, column: 20, scope: !5004)
!5187 = !DILocation(line: 6810, column: 14, scope: !5004)
!5188 = !DILocation(line: 6811, column: 17, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 6811, column: 10)
!5190 = !DILocation(line: 6811, column: 15, scope: !5189)
!5191 = !DILocation(line: 6811, column: 22, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 6811, column: 10)
!5193 = !DILocation(line: 6811, column: 26, scope: !5192)
!5194 = !DILocation(line: 6811, column: 32, scope: !5192)
!5195 = !DILocation(line: 6811, column: 24, scope: !5192)
!5196 = !DILocation(line: 6811, column: 10, scope: !5189)
!5197 = !DILocation(line: 6813, column: 36, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 6813, column: 16)
!5199 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 6812, column: 12)
!5200 = !DILocation(line: 6813, column: 41, scope: !5198)
!5201 = !DILocation(line: 6813, column: 45, scope: !5198)
!5202 = !DILocation(line: 6813, column: 56, scope: !5198)
!5203 = !DILocation(line: 6813, column: 66, scope: !5198)
!5204 = !DILocation(line: 6813, column: 16, scope: !5198)
!5205 = !DILocation(line: 6813, column: 16, scope: !5199)
!5206 = !DILocation(line: 6814, column: 14, scope: !5198)
!5207 = !DILocation(line: 6816, column: 24, scope: !5199)
!5208 = !DILocation(line: 6816, column: 34, scope: !5199)
!5209 = !DILocation(line: 6816, column: 37, scope: !5199)
!5210 = !DILocation(line: 6816, column: 22, scope: !5199)
!5211 = !DILocation(line: 6818, column: 34, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 6818, column: 16)
!5213 = !DILocation(line: 6818, column: 39, scope: !5212)
!5214 = !DILocation(line: 6818, column: 38, scope: !5212)
!5215 = !DILocation(line: 6818, column: 44, scope: !5212)
!5216 = !DILocation(line: 6818, column: 51, scope: !5212)
!5217 = !DILocation(line: 6819, column: 34, scope: !5212)
!5218 = !DILocation(line: 6819, column: 40, scope: !5212)
!5219 = !DILocation(line: 6819, column: 51, scope: !5212)
!5220 = !DILocation(line: 6819, column: 54, scope: !5212)
!5221 = !DILocation(line: 6820, column: 34, scope: !5212)
!5222 = !DILocation(line: 6820, column: 40, scope: !5212)
!5223 = !DILocation(line: 6820, column: 51, scope: !5212)
!5224 = !DILocation(line: 6820, column: 54, scope: !5212)
!5225 = !DILocation(line: 6821, column: 34, scope: !5212)
!5226 = !DILocation(line: 6821, column: 46, scope: !5212)
!5227 = !DILocation(line: 6821, column: 45, scope: !5212)
!5228 = !DILocation(line: 6821, column: 52, scope: !5212)
!5229 = !DILocation(line: 6818, column: 16, scope: !5212)
!5230 = !DILocation(line: 6818, column: 16, scope: !5199)
!5231 = !DILocation(line: 6823, column: 14, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 6822, column: 14)
!5233 = !DILocation(line: 6824, column: 14, scope: !5232)
!5234 = !DILocation(line: 6826, column: 12, scope: !5199)
!5235 = !DILocation(line: 6811, column: 45, scope: !5192)
!5236 = !DILocation(line: 6811, column: 10, scope: !5192)
!5237 = distinct !{!5237, !5196, !5238}
!5238 = !DILocation(line: 6826, column: 12, scope: !5189)
!5239 = !DILocation(line: 6827, column: 3, scope: !5004)
!5240 = !DILocation(line: 6828, column: 14, scope: !5004)
!5241 = !DILocation(line: 6831, column: 3, scope: !4969)
!5242 = !DILocation(line: 6832, column: 3, scope: !4969)
!5243 = !DILocalVariable(name: "tiffout", arg: 1, scope: !189, file: !3, line: 2038, type: !192)
!5244 = !DILocation(line: 2038, column: 28, scope: !189)
!5245 = !DILocalVariable(name: "mode", arg: 2, scope: !189, file: !3, line: 2038, type: !146)
!5246 = !DILocation(line: 2038, column: 43, scope: !189)
!5247 = !DILocalVariable(name: "autoindex", arg: 3, scope: !189, file: !3, line: 2038, type: !110)
!5248 = !DILocation(line: 2038, column: 53, scope: !189)
!5249 = !DILocalVariable(name: "outname", arg: 4, scope: !189, file: !3, line: 2039, type: !146)
!5250 = !DILocation(line: 2039, column: 27, scope: !189)
!5251 = !DILocalVariable(name: "page", arg: 5, scope: !189, file: !3, line: 2039, type: !535)
!5252 = !DILocation(line: 2039, column: 50, scope: !189)
!5253 = !DILocalVariable(name: "sep", scope: !189, file: !3, line: 2042, type: !146)
!5254 = !DILocation(line: 2042, column: 10, scope: !189)
!5255 = !DILocalVariable(name: "filenum", scope: !189, file: !3, line: 2043, type: !659)
!5256 = !DILocation(line: 2043, column: 10, scope: !189)
!5257 = !DILocalVariable(name: "export_ext", scope: !189, file: !3, line: 2044, type: !659)
!5258 = !DILocation(line: 2044, column: 10, scope: !189)
!5259 = !DILocalVariable(name: "exportname", scope: !189, file: !3, line: 2045, type: !5260)
!5260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32768, elements: !5261)
!5261 = !{!5262}
!5262 = !DISubrange(count: 4096)
!5263 = !DILocation(line: 2045, column: 10, scope: !189)
!5264 = !DILocation(line: 2047, column: 7, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !189, file: !3, line: 2047, column: 7)
!5266 = !DILocation(line: 2047, column: 17, scope: !5265)
!5267 = !DILocation(line: 2047, column: 22, scope: !5265)
!5268 = !DILocation(line: 2047, column: 21, scope: !5265)
!5269 = !DILocation(line: 2047, column: 30, scope: !5265)
!5270 = !DILocation(line: 2047, column: 7, scope: !189)
!5271 = !DILocation(line: 2050, column: 17, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2048, column: 5)
!5273 = !DILocation(line: 2050, column: 16, scope: !5272)
!5274 = !DILocation(line: 2050, column: 5, scope: !5272)
!5275 = !DILocation(line: 2051, column: 6, scope: !5272)
!5276 = !DILocation(line: 2051, column: 14, scope: !5272)
!5277 = !DILocation(line: 2052, column: 5, scope: !5272)
!5278 = !DILocation(line: 2054, column: 11, scope: !189)
!5279 = !DILocation(line: 2054, column: 3, scope: !189)
!5280 = !DILocation(line: 2055, column: 3, scope: !189)
!5281 = !DILocation(line: 2058, column: 12, scope: !189)
!5282 = !DILocation(line: 2058, column: 24, scope: !189)
!5283 = !DILocation(line: 2058, column: 3, scope: !189)
!5284 = !DILocation(line: 2059, column: 8, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !189, file: !3, line: 2059, column: 7)
!5286 = !DILocation(line: 2059, column: 7, scope: !5285)
!5287 = !DILocation(line: 2059, column: 16, scope: !5285)
!5288 = !DILocation(line: 2059, column: 7, scope: !189)
!5289 = !DILocation(line: 2061, column: 9, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 2061, column: 9)
!5291 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 2060, column: 5)
!5292 = !DILocation(line: 2061, column: 9, scope: !5291)
!5293 = !DILocation(line: 2063, column: 13, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 2062, column: 7)
!5295 = !DILocation(line: 2064, column: 25, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 2064, column: 11)
!5297 = !DILocation(line: 2064, column: 18, scope: !5296)
!5298 = !DILocation(line: 2064, column: 16, scope: !5296)
!5299 = !DILocation(line: 2064, column: 46, scope: !5296)
!5300 = !DILocation(line: 2064, column: 63, scope: !5296)
!5301 = !DILocation(line: 2064, column: 56, scope: !5296)
!5302 = !DILocation(line: 2064, column: 54, scope: !5296)
!5303 = !DILocation(line: 2064, column: 11, scope: !5294)
!5304 = !DILocation(line: 2066, column: 18, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 2065, column: 9)
!5306 = !DILocation(line: 2066, column: 30, scope: !5305)
!5307 = !DILocation(line: 2066, column: 9, scope: !5305)
!5308 = !DILocation(line: 2067, column: 10, scope: !5305)
!5309 = !DILocation(line: 2067, column: 14, scope: !5305)
!5310 = !DILocation(line: 2068, column: 9, scope: !5305)
!5311 = !DILocation(line: 2070, column: 18, scope: !5296)
!5312 = !DILocation(line: 2070, column: 9, scope: !5296)
!5313 = !DILocation(line: 2071, column: 7, scope: !5294)
!5314 = !DILocation(line: 2071, column: 21, scope: !5294)
!5315 = !DILocation(line: 2074, column: 11, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 2074, column: 11)
!5317 = !DILocation(line: 2074, column: 18, scope: !5316)
!5318 = !DILocation(line: 2074, column: 11, scope: !5294)
!5319 = !DILocation(line: 2076, column: 2, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 2075, column: 2)
!5321 = !DILocation(line: 2077, column: 9, scope: !5320)
!5322 = !DILocation(line: 2080, column: 16, scope: !5294)
!5323 = !DILocation(line: 2080, column: 36, scope: !5294)
!5324 = !DILocation(line: 2080, column: 44, scope: !5294)
!5325 = !DILocation(line: 2080, column: 7, scope: !5294)
!5326 = !DILocation(line: 2081, column: 7, scope: !5294)
!5327 = !DILocation(line: 2081, column: 19, scope: !5294)
!5328 = !DILocation(line: 2082, column: 16, scope: !5294)
!5329 = !DILocation(line: 2082, column: 28, scope: !5294)
!5330 = !DILocation(line: 2082, column: 7, scope: !5294)
!5331 = !DILocation(line: 2083, column: 7, scope: !5294)
!5332 = !DILocation(line: 2084, column: 5, scope: !5291)
!5333 = !DILocation(line: 2084, column: 30, scope: !5291)
!5334 = !DILocation(line: 2086, column: 25, scope: !5291)
!5335 = !DILocation(line: 2086, column: 37, scope: !5291)
!5336 = !DILocation(line: 2086, column: 16, scope: !5291)
!5337 = !DILocation(line: 2086, column: 6, scope: !5291)
!5338 = !DILocation(line: 2086, column: 14, scope: !5291)
!5339 = !DILocation(line: 2087, column: 10, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 2087, column: 9)
!5341 = !DILocation(line: 2087, column: 9, scope: !5340)
!5342 = !DILocation(line: 2087, column: 18, scope: !5340)
!5343 = !DILocation(line: 2087, column: 9, scope: !5291)
!5344 = !DILocation(line: 2089, column: 72, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 2088, column: 7)
!5346 = !DILocation(line: 2089, column: 7, scope: !5345)
!5347 = !DILocation(line: 2090, column: 7, scope: !5345)
!5348 = !DILocation(line: 2092, column: 6, scope: !5291)
!5349 = !DILocation(line: 2092, column: 11, scope: !5291)
!5350 = !DILocation(line: 2094, column: 5, scope: !5291)
!5351 = !DILocation(line: 2097, column: 7, scope: !5285)
!5352 = !DILocation(line: 2097, column: 12, scope: !5285)
!5353 = !DILocation(line: 2099, column: 3, scope: !189)
!5354 = !DILocation(line: 2100, column: 3, scope: !189)
!5355 = distinct !DISubprogram(name: "writeCroppedImage", scope: !3, file: !3, line: 7570, type: !5356, scopeLine: 7573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{!110, !193, !193, !542, !557, !105, !105, !106, !110, !110}
!5358 = !DILocalVariable(name: "in", arg: 1, scope: !5355, file: !3, line: 7570, type: !193)
!5359 = !DILocation(line: 7570, column: 25, scope: !5355)
!5360 = !DILocalVariable(name: "out", arg: 2, scope: !5355, file: !3, line: 7570, type: !193)
!5361 = !DILocation(line: 7570, column: 35, scope: !5355)
!5362 = !DILocalVariable(name: "image", arg: 3, scope: !5355, file: !3, line: 7570, type: !542)
!5363 = !DILocation(line: 7570, column: 59, scope: !5355)
!5364 = !DILocalVariable(name: "dump", arg: 4, scope: !5355, file: !3, line: 7571, type: !557)
!5365 = !DILocation(line: 7571, column: 37, scope: !5355)
!5366 = !DILocalVariable(name: "width", arg: 5, scope: !5355, file: !3, line: 7571, type: !105)
!5367 = !DILocation(line: 7571, column: 50, scope: !5355)
!5368 = !DILocalVariable(name: "length", arg: 6, scope: !5355, file: !3, line: 7571, type: !105)
!5369 = !DILocation(line: 7571, column: 64, scope: !5355)
!5370 = !DILocalVariable(name: "crop_buff", arg: 7, scope: !5355, file: !3, line: 7572, type: !106)
!5371 = !DILocation(line: 7572, column: 34, scope: !5355)
!5372 = !DILocalVariable(name: "pagenum", arg: 8, scope: !5355, file: !3, line: 7572, type: !110)
!5373 = !DILocation(line: 7572, column: 49, scope: !5355)
!5374 = !DILocalVariable(name: "total_pages", arg: 9, scope: !5355, file: !3, line: 7572, type: !110)
!5375 = !DILocation(line: 7572, column: 62, scope: !5355)
!5376 = !DILocalVariable(name: "bps", scope: !5355, file: !3, line: 7574, type: !103)
!5377 = !DILocation(line: 7574, column: 10, scope: !5355)
!5378 = !DILocalVariable(name: "spp", scope: !5355, file: !3, line: 7574, type: !103)
!5379 = !DILocation(line: 7574, column: 15, scope: !5355)
!5380 = !DILocalVariable(name: "input_compression", scope: !5355, file: !3, line: 7575, type: !103)
!5381 = !DILocation(line: 7575, column: 10, scope: !5355)
!5382 = !DILocalVariable(name: "input_photometric", scope: !5355, file: !3, line: 7575, type: !103)
!5383 = !DILocation(line: 7575, column: 29, scope: !5355)
!5384 = !DILocalVariable(name: "input_planar", scope: !5355, file: !3, line: 7576, type: !103)
!5385 = !DILocation(line: 7576, column: 10, scope: !5355)
!5386 = !DILocalVariable(name: "p", scope: !5355, file: !3, line: 7577, type: !5387)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!5388 = !DILocation(line: 7577, column: 17, scope: !5355)
!5389 = !DILocation(line: 7579, column: 23, scope: !5355)
!5390 = !DILocation(line: 7579, column: 30, scope: !5355)
!5391 = !DILocation(line: 7579, column: 21, scope: !5355)
!5392 = !DILocation(line: 7580, column: 23, scope: !5355)
!5393 = !DILocation(line: 7580, column: 30, scope: !5355)
!5394 = !DILocation(line: 7580, column: 21, scope: !5355)
!5395 = !DILocation(line: 7581, column: 9, scope: !5355)
!5396 = !DILocation(line: 7581, column: 16, scope: !5355)
!5397 = !DILocation(line: 7581, column: 7, scope: !5355)
!5398 = !DILocation(line: 7582, column: 9, scope: !5355)
!5399 = !DILocation(line: 7582, column: 16, scope: !5355)
!5400 = !DILocation(line: 7582, column: 7, scope: !5355)
!5401 = !DILocation(line: 7584, column: 16, scope: !5355)
!5402 = !DILocation(line: 7584, column: 41, scope: !5355)
!5403 = !DILocation(line: 7584, column: 3, scope: !5355)
!5404 = !DILocation(line: 7585, column: 16, scope: !5355)
!5405 = !DILocation(line: 7585, column: 42, scope: !5355)
!5406 = !DILocation(line: 7585, column: 3, scope: !5355)
!5407 = !DILocation(line: 7586, column: 16, scope: !5355)
!5408 = !DILocation(line: 7586, column: 44, scope: !5355)
!5409 = !DILocation(line: 7586, column: 3, scope: !5355)
!5410 = !DILocation(line: 7587, column: 16, scope: !5355)
!5411 = !DILocation(line: 7587, column: 46, scope: !5355)
!5412 = !DILocation(line: 7587, column: 3, scope: !5355)
!5413 = !DILocation(line: 7595, column: 7, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7595, column: 7)
!5415 = !DILocation(line: 7595, column: 19, scope: !5414)
!5416 = !DILocation(line: 7595, column: 7, scope: !5355)
!5417 = !DILocation(line: 7596, column: 18, scope: !5414)
!5418 = !DILocation(line: 7596, column: 44, scope: !5414)
!5419 = !DILocation(line: 7596, column: 5, scope: !5414)
!5420 = !DILocation(line: 7599, column: 9, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 7599, column: 9)
!5422 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 7598, column: 5)
!5423 = !DILocation(line: 7599, column: 27, scope: !5421)
!5424 = !DILocation(line: 7599, column: 9, scope: !5422)
!5425 = !DILocation(line: 7601, column: 19, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 7600, column: 7)
!5427 = !DILocation(line: 7602, column: 21, scope: !5426)
!5428 = !DILocation(line: 7603, column: 20, scope: !5426)
!5429 = !DILocation(line: 7603, column: 7, scope: !5426)
!5430 = !DILocation(line: 7604, column: 7, scope: !5426)
!5431 = !DILocation(line: 7606, column: 7, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 7606, column: 7)
!5433 = !DILocation(line: 7606, column: 7, scope: !5421)
!5434 = !DILocation(line: 7609, column: 7, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7609, column: 7)
!5436 = !DILocation(line: 7609, column: 19, scope: !5435)
!5437 = !DILocation(line: 7609, column: 7, scope: !5355)
!5438 = !DILocation(line: 7611, column: 10, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 7611, column: 9)
!5440 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 7610, column: 5)
!5441 = !DILocation(line: 7611, column: 28, scope: !5439)
!5442 = !DILocation(line: 7611, column: 52, scope: !5439)
!5443 = !DILocation(line: 7612, column: 10, scope: !5439)
!5444 = !DILocation(line: 7612, column: 28, scope: !5439)
!5445 = !DILocation(line: 7611, column: 9, scope: !5440)
!5446 = !DILocation(line: 7616, column: 17, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 7613, column: 7)
!5448 = !DILocation(line: 7616, column: 35, scope: !5447)
!5449 = !DILocation(line: 7616, column: 16, scope: !5447)
!5450 = !DILocation(line: 7614, column: 7, scope: !5447)
!5451 = !DILocation(line: 7618, column: 7, scope: !5447)
!5452 = !DILocation(line: 7620, column: 10, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 7620, column: 9)
!5454 = !DILocation(line: 7620, column: 28, scope: !5453)
!5455 = !DILocation(line: 7620, column: 48, scope: !5453)
!5456 = !DILocation(line: 7621, column: 3, scope: !5453)
!5457 = !DILocation(line: 7621, column: 17, scope: !5453)
!5458 = !DILocation(line: 7620, column: 9, scope: !5440)
!5459 = !DILocation(line: 7622, column: 20, scope: !5453)
!5460 = !DILocation(line: 7622, column: 7, scope: !5453)
!5461 = !DILocation(line: 7624, column: 15, scope: !5453)
!5462 = !DILocation(line: 7624, column: 41, scope: !5453)
!5463 = !DILocation(line: 7624, column: 2, scope: !5453)
!5464 = !DILocation(line: 7625, column: 5, scope: !5440)
!5465 = !DILocation(line: 7628, column: 9, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 7628, column: 9)
!5467 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 7627, column: 5)
!5468 = !DILocation(line: 7628, column: 21, scope: !5466)
!5469 = !DILocation(line: 7628, column: 43, scope: !5466)
!5470 = !DILocation(line: 7628, column: 46, scope: !5466)
!5471 = !DILocation(line: 7628, column: 58, scope: !5466)
!5472 = !DILocation(line: 7628, column: 9, scope: !5467)
!5473 = !DILocation(line: 7630, column: 20, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 7629, column: 7)
!5475 = !DILocation(line: 7630, column: 46, scope: !5474)
!5476 = !DILocation(line: 7630, column: 50, scope: !5474)
!5477 = !DILocation(line: 7630, column: 7, scope: !5474)
!5478 = !DILocation(line: 7632, column: 7, scope: !5474)
!5479 = !DILocation(line: 7635, column: 11, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 7635, column: 11)
!5481 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 7634, column: 7)
!5482 = !DILocation(line: 7635, column: 29, scope: !5480)
!5483 = !DILocation(line: 7635, column: 51, scope: !5480)
!5484 = !DILocation(line: 7636, column: 11, scope: !5480)
!5485 = !DILocation(line: 7636, column: 29, scope: !5480)
!5486 = !DILocation(line: 7635, column: 11, scope: !5481)
!5487 = !DILocation(line: 7638, column: 22, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 7637, column: 9)
!5489 = !DILocation(line: 7638, column: 48, scope: !5488)
!5490 = !DILocation(line: 7638, column: 52, scope: !5488)
!5491 = !DILocation(line: 7638, column: 9, scope: !5488)
!5492 = !DILocation(line: 7640, column: 9, scope: !5488)
!5493 = !DILocation(line: 7642, column: 22, scope: !5480)
!5494 = !DILocation(line: 7642, column: 48, scope: !5480)
!5495 = !DILocation(line: 7642, column: 55, scope: !5480)
!5496 = !DILocation(line: 7642, column: 9, scope: !5480)
!5497 = !DILocation(line: 7646, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7646, column: 7)
!5499 = !DILocation(line: 7646, column: 27, scope: !5498)
!5500 = !DILocation(line: 7646, column: 48, scope: !5498)
!5501 = !DILocation(line: 7647, column: 9, scope: !5498)
!5502 = !DILocation(line: 7647, column: 27, scope: !5498)
!5503 = !DILocation(line: 7647, column: 52, scope: !5498)
!5504 = !DILocation(line: 7648, column: 9, scope: !5498)
!5505 = !DILocation(line: 7648, column: 21, scope: !5498)
!5506 = !DILocation(line: 7648, column: 44, scope: !5498)
!5507 = !DILocation(line: 7649, column: 9, scope: !5498)
!5508 = !DILocation(line: 7649, column: 21, scope: !5498)
!5509 = !DILocation(line: 7646, column: 7, scope: !5355)
!5510 = !DILocation(line: 7651, column: 5, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 7650, column: 5)
!5512 = !DILocation(line: 7653, column: 5, scope: !5511)
!5513 = !DILocation(line: 7656, column: 7, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7656, column: 7)
!5515 = !DILocation(line: 7656, column: 17, scope: !5514)
!5516 = !DILocation(line: 7656, column: 7, scope: !5355)
!5517 = !DILocation(line: 7657, column: 18, scope: !5514)
!5518 = !DILocation(line: 7657, column: 42, scope: !5514)
!5519 = !DILocation(line: 7657, column: 5, scope: !5514)
!5520 = !DILocation(line: 7659, column: 5, scope: !5514)
!5521 = !DILocation(line: 7668, column: 16, scope: !5355)
!5522 = !DILocation(line: 7668, column: 42, scope: !5355)
!5523 = !DILocation(line: 7668, column: 49, scope: !5355)
!5524 = !DILocation(line: 7668, column: 3, scope: !5355)
!5525 = !DILocation(line: 7675, column: 7, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7675, column: 7)
!5527 = !DILocation(line: 7675, column: 16, scope: !5526)
!5528 = !DILocation(line: 7675, column: 7, scope: !5355)
!5529 = !DILocation(line: 7676, column: 28, scope: !5526)
!5530 = !DILocation(line: 7676, column: 16, scope: !5526)
!5531 = !DILocation(line: 7676, column: 14, scope: !5526)
!5532 = !DILocation(line: 7676, column: 5, scope: !5526)
!5533 = !DILocation(line: 7677, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7677, column: 7)
!5535 = !DILocation(line: 7677, column: 7, scope: !5355)
!5536 = !DILocation(line: 7684, column: 9, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 7684, column: 9)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 7677, column: 17)
!5539 = !DILocation(line: 7684, column: 19, scope: !5537)
!5540 = !DILocation(line: 7684, column: 9, scope: !5538)
!5541 = !DILocation(line: 7685, column: 20, scope: !5537)
!5542 = !DILocation(line: 7685, column: 7, scope: !5537)
!5543 = !DILocation(line: 7686, column: 9, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 7686, column: 9)
!5545 = !DILocation(line: 7686, column: 20, scope: !5544)
!5546 = !DILocation(line: 7686, column: 9, scope: !5538)
!5547 = !DILocation(line: 7687, column: 20, scope: !5544)
!5548 = !DILocation(line: 7687, column: 7, scope: !5544)
!5549 = !DILocation(line: 7689, column: 9, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 7689, column: 9)
!5551 = !DILocation(line: 7689, column: 19, scope: !5550)
!5552 = !DILocation(line: 7689, column: 24, scope: !5550)
!5553 = !DILocation(line: 7689, column: 27, scope: !5550)
!5554 = !DILocation(line: 7689, column: 38, scope: !5550)
!5555 = !DILocation(line: 7689, column: 9, scope: !5538)
!5556 = !DILocation(line: 7690, column: 27, scope: !5550)
!5557 = !DILocation(line: 7690, column: 7, scope: !5550)
!5558 = !DILocation(line: 7691, column: 18, scope: !5538)
!5559 = !DILocation(line: 7691, column: 42, scope: !5538)
!5560 = !DILocation(line: 7691, column: 5, scope: !5538)
!5561 = !DILocation(line: 7692, column: 18, scope: !5538)
!5562 = !DILocation(line: 7692, column: 43, scope: !5538)
!5563 = !DILocation(line: 7692, column: 5, scope: !5538)
!5564 = !DILocation(line: 7693, column: 5, scope: !5538)
!5565 = !DILocation(line: 7699, column: 6, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 7699, column: 6)
!5567 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 7693, column: 12)
!5568 = !DILocation(line: 7699, column: 19, scope: !5566)
!5569 = !DILocation(line: 7699, column: 6, scope: !5567)
!5570 = !DILocation(line: 7701, column: 22, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 7701, column: 8)
!5572 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 7700, column: 11)
!5573 = !DILocation(line: 7701, column: 9, scope: !5571)
!5574 = !DILocation(line: 7701, column: 8, scope: !5572)
!5575 = !DILocation(line: 7702, column: 42, scope: !5571)
!5576 = !DILocation(line: 7702, column: 47, scope: !5571)
!5577 = !DILocation(line: 7702, column: 21, scope: !5571)
!5578 = !DILocation(line: 7702, column: 19, scope: !5571)
!5579 = !DILocation(line: 7702, column: 6, scope: !5571)
!5580 = !DILocation(line: 7703, column: 15, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 7703, column: 15)
!5582 = !DILocation(line: 7703, column: 27, scope: !5581)
!5583 = !DILocation(line: 7703, column: 15, scope: !5572)
!5584 = !DILocation(line: 7705, column: 12, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 7705, column: 12)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 7704, column: 13)
!5587 = !DILocation(line: 7705, column: 27, scope: !5585)
!5588 = !DILocation(line: 7705, column: 25, scope: !5585)
!5589 = !DILocation(line: 7705, column: 12, scope: !5586)
!5590 = !DILocation(line: 7706, column: 23, scope: !5585)
!5591 = !DILocation(line: 7706, column: 21, scope: !5585)
!5592 = !DILocation(line: 7706, column: 8, scope: !5585)
!5593 = !DILocation(line: 7707, column: 6, scope: !5586)
!5594 = !DILocation(line: 7708, column: 4, scope: !5572)
!5595 = !DILocation(line: 7710, column: 15, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 7710, column: 15)
!5597 = !DILocation(line: 7710, column: 28, scope: !5596)
!5598 = !DILocation(line: 7710, column: 15, scope: !5566)
!5599 = !DILocation(line: 7711, column: 21, scope: !5596)
!5600 = !DILocation(line: 7711, column: 19, scope: !5596)
!5601 = !DILocation(line: 7711, column: 6, scope: !5596)
!5602 = !DILocation(line: 7712, column: 15, scope: !5567)
!5603 = !DILocation(line: 7712, column: 42, scope: !5567)
!5604 = !DILocation(line: 7712, column: 2, scope: !5567)
!5605 = !DILocation(line: 7715, column: 25, scope: !5355)
!5606 = !DILocation(line: 7715, column: 3, scope: !5355)
!5607 = !DILocation(line: 7716, column: 7, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7716, column: 7)
!5609 = !DILocation(line: 7716, column: 14, scope: !5608)
!5610 = !DILocation(line: 7716, column: 7, scope: !5355)
!5611 = !DILocation(line: 7717, column: 18, scope: !5608)
!5612 = !DILocation(line: 7717, column: 45, scope: !5608)
!5613 = !DILocation(line: 7717, column: 5, scope: !5608)
!5614 = !DILocation(line: 7719, column: 5, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 7719, column: 5)
!5616 = !DILocation(line: 7719, column: 5, scope: !5608)
!5617 = !DILocation(line: 7720, column: 7, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7720, column: 7)
!5619 = !DILocation(line: 7720, column: 11, scope: !5618)
!5620 = !DILocation(line: 7720, column: 7, scope: !5355)
!5621 = !DILocation(line: 7721, column: 5, scope: !5618)
!5622 = !DILocation(line: 7722, column: 3, scope: !5355)
!5623 = !DILocation(line: 7725, column: 11, scope: !5355)
!5624 = !DILocation(line: 7725, column: 3, scope: !5355)
!5625 = !DILocation(line: 7727, column: 16, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 7727, column: 14)
!5627 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7725, column: 24)
!5628 = !DILocation(line: 7727, column: 20, scope: !5626)
!5629 = !DILocation(line: 7727, column: 25, scope: !5626)
!5630 = !DILocation(line: 7727, column: 31, scope: !5626)
!5631 = !DILocation(line: 7727, column: 36, scope: !5626)
!5632 = !DILocation(line: 7727, column: 40, scope: !5626)
!5633 = !DILocation(line: 7727, column: 46, scope: !5626)
!5634 = !DILocation(line: 7727, column: 14, scope: !5627)
!5635 = !DILocation(line: 7729, column: 25, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 7728, column: 5)
!5637 = !DILocation(line: 7729, column: 51, scope: !5636)
!5638 = !DILocation(line: 7729, column: 12, scope: !5636)
!5639 = !DILocation(line: 7730, column: 18, scope: !5636)
!5640 = !DILocation(line: 7730, column: 5, scope: !5636)
!5641 = !DILocation(line: 7731, column: 12, scope: !5636)
!5642 = !DILocation(line: 7734, column: 5, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 7733, column: 12)
!5644 = !DILocation(line: 7736, column: 12, scope: !5643)
!5645 = !DILocation(line: 7738, column: 3, scope: !5627)
!5646 = !DILocation(line: 7742, column: 6, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 7742, column: 6)
!5648 = !DILocation(line: 7742, column: 16, scope: !5647)
!5649 = !DILocation(line: 7742, column: 6, scope: !5627)
!5650 = !DILocation(line: 7743, column: 24, scope: !5647)
!5651 = !DILocation(line: 7743, column: 48, scope: !5647)
!5652 = !DILocation(line: 7743, column: 11, scope: !5647)
!5653 = !DILocation(line: 7745, column: 4, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 7745, column: 4)
!5655 = !DILocation(line: 7745, column: 4, scope: !5647)
!5656 = !DILocation(line: 7746, column: 2, scope: !5627)
!5657 = !DILocation(line: 7749, column: 13, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 7749, column: 13)
!5659 = !DILocation(line: 7749, column: 17, scope: !5658)
!5660 = !DILocation(line: 7749, column: 13, scope: !5627)
!5661 = !DILocation(line: 7751, column: 4, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 7750, column: 11)
!5663 = !DILocation(line: 7753, column: 11, scope: !5662)
!5664 = !DILocation(line: 7755, column: 6, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 7755, column: 6)
!5666 = !DILocation(line: 7755, column: 18, scope: !5665)
!5667 = !DILocation(line: 7755, column: 6, scope: !5627)
!5668 = !DILocation(line: 7756, column: 15, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 7756, column: 15)
!5670 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 7755, column: 44)
!5671 = !DILocation(line: 7756, column: 22, scope: !5669)
!5672 = !DILocation(line: 7756, column: 15, scope: !5670)
!5673 = !DILocation(line: 7757, column: 19, scope: !5669)
!5674 = !DILocation(line: 7757, column: 47, scope: !5669)
!5675 = !DILocation(line: 7757, column: 6, scope: !5669)
!5676 = !DILocation(line: 7759, column: 6, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 7759, column: 6)
!5678 = !DILocation(line: 7759, column: 6, scope: !5669)
!5679 = !DILocation(line: 7760, column: 2, scope: !5670)
!5680 = !DILocation(line: 7761, column: 6, scope: !5665)
!5681 = !DILocation(line: 7762, column: 6, scope: !5627)
!5682 = !DILocation(line: 7763, column: 6, scope: !5627)
!5683 = !DILocation(line: 7764, column: 6, scope: !5627)
!5684 = !DILocation(line: 7765, column: 6, scope: !5627)
!5685 = !DILocation(line: 7766, column: 6, scope: !5627)
!5686 = !DILocation(line: 7767, column: 6, scope: !5627)
!5687 = !DILocation(line: 7768, column: 3, scope: !5627)
!5688 = !DILocation(line: 7770, column: 10, scope: !5627)
!5689 = !DILocation(line: 7771, column: 14, scope: !5627)
!5690 = !DILocalVariable(name: "len32", scope: !5691, file: !3, line: 7773, type: !105)
!5691 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7773, column: 4)
!5692 = !DILocation(line: 7773, column: 13, scope: !5691)
!5693 = !DILocalVariable(name: "data", scope: !5691, file: !3, line: 7774, type: !406)
!5694 = !DILocation(line: 7774, column: 13, scope: !5691)
!5695 = !DILocation(line: 7775, column: 23, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 7775, column: 10)
!5697 = !DILocation(line: 7775, column: 10, scope: !5696)
!5698 = !DILocation(line: 7775, column: 10, scope: !5691)
!5699 = !DILocation(line: 7776, column: 21, scope: !5696)
!5700 = !DILocation(line: 7776, column: 46, scope: !5696)
!5701 = !DILocation(line: 7776, column: 53, scope: !5696)
!5702 = !DILocation(line: 7776, column: 8, scope: !5696)
!5703 = !DILocalVariable(name: "ninks", scope: !5704, file: !3, line: 7778, type: !103)
!5704 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7778, column: 4)
!5705 = !DILocation(line: 7778, column: 13, scope: !5704)
!5706 = !DILocalVariable(name: "inknames", scope: !5704, file: !3, line: 7779, type: !5707)
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64)
!5708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!5709 = !DILocation(line: 7779, column: 18, scope: !5704)
!5710 = !DILocation(line: 7780, column: 23, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 7780, column: 10)
!5712 = !DILocation(line: 7780, column: 10, scope: !5711)
!5713 = !DILocation(line: 7780, column: 10, scope: !5704)
!5714 = !DILocation(line: 7781, column: 21, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 7780, column: 58)
!5716 = !DILocation(line: 7781, column: 48, scope: !5715)
!5717 = !DILocation(line: 7781, column: 8, scope: !5715)
!5718 = !DILocation(line: 7782, column: 25, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 7782, column: 12)
!5720 = !DILocation(line: 7782, column: 12, scope: !5719)
!5721 = !DILocation(line: 7782, column: 12, scope: !5715)
!5722 = !DILocalVariable(name: "inknameslen", scope: !5723, file: !3, line: 7783, type: !110)
!5723 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 7782, column: 59)
!5724 = !DILocation(line: 7783, column: 7, scope: !5723)
!5725 = !DILocation(line: 7783, column: 28, scope: !5723)
!5726 = !DILocation(line: 7783, column: 21, scope: !5723)
!5727 = !DILocation(line: 7783, column: 38, scope: !5723)
!5728 = !DILocalVariable(name: "cp", scope: !5723, file: !3, line: 7784, type: !5707)
!5729 = !DILocation(line: 7784, column: 15, scope: !5723)
!5730 = !DILocation(line: 7784, column: 20, scope: !5723)
!5731 = !DILocation(line: 7785, column: 3, scope: !5723)
!5732 = !DILocation(line: 7785, column: 10, scope: !5723)
!5733 = !DILocation(line: 7785, column: 16, scope: !5723)
!5734 = !DILocation(line: 7786, column: 17, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 7785, column: 21)
!5736 = !DILocation(line: 7786, column: 10, scope: !5735)
!5737 = !DILocation(line: 7786, column: 8, scope: !5735)
!5738 = !DILocation(line: 7787, column: 9, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 7787, column: 9)
!5740 = !DILocation(line: 7787, column: 9, scope: !5735)
!5741 = !DILocation(line: 7788, column: 9, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 7787, column: 13)
!5743 = !DILocation(line: 7789, column: 30, scope: !5742)
!5744 = !DILocation(line: 7789, column: 23, scope: !5742)
!5745 = !DILocation(line: 7789, column: 34, scope: !5742)
!5746 = !DILocation(line: 7789, column: 19, scope: !5742)
!5747 = !DILocation(line: 7790, column: 5, scope: !5742)
!5748 = !DILocation(line: 7791, column: 10, scope: !5735)
!5749 = distinct !{!5749, !5731, !5750}
!5750 = !DILocation(line: 7792, column: 10, scope: !5723)
!5751 = !DILocation(line: 7793, column: 16, scope: !5723)
!5752 = !DILocation(line: 7793, column: 39, scope: !5723)
!5753 = !DILocation(line: 7793, column: 52, scope: !5723)
!5754 = !DILocation(line: 7793, column: 3, scope: !5723)
!5755 = !DILocation(line: 7794, column: 8, scope: !5723)
!5756 = !DILocation(line: 7795, column: 6, scope: !5715)
!5757 = !DILocalVariable(name: "pg0", scope: !5758, file: !3, line: 7798, type: !104)
!5758 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7797, column: 4)
!5759 = !DILocation(line: 7798, column: 19, scope: !5758)
!5760 = !DILocalVariable(name: "pg1", scope: !5758, file: !3, line: 7798, type: !104)
!5761 = !DILocation(line: 7798, column: 24, scope: !5758)
!5762 = !DILocation(line: 7799, column: 21, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 7799, column: 8)
!5764 = !DILocation(line: 7799, column: 8, scope: !5763)
!5765 = !DILocation(line: 7799, column: 8, scope: !5758)
!5766 = !DILocation(line: 7800, column: 19, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 7799, column: 58)
!5768 = !DILocation(line: 7800, column: 44, scope: !5767)
!5769 = !DILocation(line: 7800, column: 53, scope: !5767)
!5770 = !DILocation(line: 7800, column: 6, scope: !5767)
!5771 = !DILocation(line: 7801, column: 6, scope: !5767)
!5772 = !DILocation(line: 7804, column: 10, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7804, column: 3)
!5774 = !DILocation(line: 7804, column: 8, scope: !5773)
!5775 = !DILocation(line: 7804, column: 18, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 7804, column: 3)
!5777 = !DILocation(line: 7804, column: 20, scope: !5776)
!5778 = !DILocation(line: 7804, column: 3, scope: !5773)
!5779 = !DILocation(line: 7805, column: 3, scope: !5776)
!5780 = !DILocation(line: 7804, column: 37, scope: !5776)
!5781 = !DILocation(line: 7804, column: 3, scope: !5776)
!5782 = distinct !{!5782, !5778, !5783}
!5783 = !DILocation(line: 7805, column: 3, scope: !5773)
!5784 = !DILocation(line: 7808, column: 7, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7808, column: 7)
!5786 = !DILocation(line: 7808, column: 7, scope: !5355)
!5787 = !DILocation(line: 7810, column: 9, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 7810, column: 9)
!5789 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 7809, column: 5)
!5790 = !DILocation(line: 7810, column: 16, scope: !5788)
!5791 = !DILocation(line: 7810, column: 9, scope: !5789)
!5792 = !DILocation(line: 7812, column: 37, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 7812, column: 11)
!5794 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 7811, column: 7)
!5795 = !DILocation(line: 7812, column: 42, scope: !5793)
!5796 = !DILocation(line: 7812, column: 53, scope: !5793)
!5797 = !DILocation(line: 7812, column: 61, scope: !5793)
!5798 = !DILocation(line: 7812, column: 68, scope: !5793)
!5799 = !DILocation(line: 7812, column: 73, scope: !5793)
!5800 = !DILocation(line: 7812, column: 11, scope: !5793)
!5801 = !DILocation(line: 7812, column: 11, scope: !5794)
!5802 = !DILocation(line: 7813, column: 74, scope: !5793)
!5803 = !DILocation(line: 7813, column: 9, scope: !5793)
!5804 = !DILocation(line: 7814, column: 7, scope: !5794)
!5805 = !DILocation(line: 7817, column: 39, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 7817, column: 11)
!5807 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 7816, column: 7)
!5808 = !DILocation(line: 7817, column: 44, scope: !5806)
!5809 = !DILocation(line: 7817, column: 55, scope: !5806)
!5810 = !DILocation(line: 7817, column: 63, scope: !5806)
!5811 = !DILocation(line: 7817, column: 70, scope: !5806)
!5812 = !DILocation(line: 7817, column: 75, scope: !5806)
!5813 = !DILocation(line: 7817, column: 11, scope: !5806)
!5814 = !DILocation(line: 7817, column: 11, scope: !5807)
!5815 = !DILocation(line: 7818, column: 72, scope: !5806)
!5816 = !DILocation(line: 7818, column: 9, scope: !5806)
!5817 = !DILocation(line: 7820, column: 5, scope: !5789)
!5818 = !DILocation(line: 7823, column: 9, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 7823, column: 9)
!5820 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 7822, column: 5)
!5821 = !DILocation(line: 7823, column: 16, scope: !5819)
!5822 = !DILocation(line: 7823, column: 9, scope: !5820)
!5823 = !DILocation(line: 7825, column: 38, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 7825, column: 11)
!5825 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 7824, column: 7)
!5826 = !DILocation(line: 7825, column: 43, scope: !5824)
!5827 = !DILocation(line: 7825, column: 54, scope: !5824)
!5828 = !DILocation(line: 7825, column: 11, scope: !5824)
!5829 = !DILocation(line: 7825, column: 11, scope: !5825)
!5830 = !DILocation(line: 7826, column: 75, scope: !5824)
!5831 = !DILocation(line: 7826, column: 9, scope: !5824)
!5832 = !DILocation(line: 7827, column: 7, scope: !5825)
!5833 = !DILocation(line: 7830, column: 39, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 7830, column: 11)
!5835 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 7829, column: 7)
!5836 = !DILocation(line: 7830, column: 44, scope: !5834)
!5837 = !DILocation(line: 7830, column: 55, scope: !5834)
!5838 = !DILocation(line: 7830, column: 63, scope: !5834)
!5839 = !DILocation(line: 7830, column: 70, scope: !5834)
!5840 = !DILocation(line: 7830, column: 75, scope: !5834)
!5841 = !DILocation(line: 7830, column: 11, scope: !5834)
!5842 = !DILocation(line: 7830, column: 11, scope: !5835)
!5843 = !DILocation(line: 7831, column: 73, scope: !5834)
!5844 = !DILocation(line: 7831, column: 9, scope: !5834)
!5845 = !DILocation(line: 7835, column: 27, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 7835, column: 7)
!5847 = !DILocation(line: 7835, column: 8, scope: !5846)
!5848 = !DILocation(line: 7835, column: 7, scope: !5355)
!5849 = !DILocation(line: 7837, column: 60, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 7836, column: 5)
!5851 = !DILocation(line: 7837, column: 5, scope: !5850)
!5852 = !DILocation(line: 7838, column: 15, scope: !5850)
!5853 = !DILocation(line: 7838, column: 5, scope: !5850)
!5854 = !DILocation(line: 7839, column: 5, scope: !5850)
!5855 = !DILocation(line: 7842, column: 3, scope: !5355)
!5856 = !DILocation(line: 7843, column: 3, scope: !5355)
!5857 = distinct !DISubprogram(name: "computeOutputPixelOffsets", scope: !3, file: !3, line: 5491, type: !5858, scopeLine: 5494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!110, !592, !542, !655, !2772, !557}
!5860 = !DILocalVariable(name: "crop", arg: 1, scope: !5857, file: !3, line: 5491, type: !592)
!5861 = !DILocation(line: 5491, column: 46, scope: !5857)
!5862 = !DILocalVariable(name: "image", arg: 2, scope: !5857, file: !3, line: 5491, type: !542)
!5863 = !DILocation(line: 5491, column: 71, scope: !5857)
!5864 = !DILocalVariable(name: "page", arg: 3, scope: !5857, file: !3, line: 5492, type: !655)
!5865 = !DILocation(line: 5492, column: 44, scope: !5857)
!5866 = !DILocalVariable(name: "sections", arg: 4, scope: !5857, file: !3, line: 5492, type: !2772)
!5867 = !DILocation(line: 5492, column: 66, scope: !5857)
!5868 = !DILocalVariable(name: "dump", arg: 5, scope: !5857, file: !3, line: 5493, type: !557)
!5869 = !DILocation(line: 5493, column: 46, scope: !5857)
!5870 = !DILocalVariable(name: "scale", scope: !5857, file: !3, line: 5495, type: !120)
!5871 = !DILocation(line: 5495, column: 10, scope: !5857)
!5872 = !DILocalVariable(name: "pwidth", scope: !5857, file: !3, line: 5496, type: !120)
!5873 = !DILocation(line: 5496, column: 10, scope: !5857)
!5874 = !DILocalVariable(name: "plength", scope: !5857, file: !3, line: 5496, type: !120)
!5875 = !DILocation(line: 5496, column: 18, scope: !5857)
!5876 = !DILocalVariable(name: "iwidth", scope: !5857, file: !3, line: 5497, type: !105)
!5877 = !DILocation(line: 5497, column: 10, scope: !5857)
!5878 = !DILocalVariable(name: "ilength", scope: !5857, file: !3, line: 5497, type: !105)
!5879 = !DILocation(line: 5497, column: 18, scope: !5857)
!5880 = !DILocalVariable(name: "owidth", scope: !5857, file: !3, line: 5498, type: !105)
!5881 = !DILocation(line: 5498, column: 10, scope: !5857)
!5882 = !DILocalVariable(name: "olength", scope: !5857, file: !3, line: 5498, type: !105)
!5883 = !DILocation(line: 5498, column: 18, scope: !5857)
!5884 = !DILocalVariable(name: "orows", scope: !5857, file: !3, line: 5499, type: !105)
!5885 = !DILocation(line: 5499, column: 10, scope: !5857)
!5886 = !DILocalVariable(name: "ocols", scope: !5857, file: !3, line: 5499, type: !105)
!5887 = !DILocation(line: 5499, column: 17, scope: !5857)
!5888 = !DILocalVariable(name: "hmargin", scope: !5857, file: !3, line: 5500, type: !105)
!5889 = !DILocation(line: 5500, column: 10, scope: !5857)
!5890 = !DILocalVariable(name: "vmargin", scope: !5857, file: !3, line: 5500, type: !105)
!5891 = !DILocation(line: 5500, column: 19, scope: !5857)
!5892 = !DILocalVariable(name: "x1", scope: !5857, file: !3, line: 5501, type: !105)
!5893 = !DILocation(line: 5501, column: 10, scope: !5857)
!5894 = !DILocalVariable(name: "x2", scope: !5857, file: !3, line: 5501, type: !105)
!5895 = !DILocation(line: 5501, column: 14, scope: !5857)
!5896 = !DILocalVariable(name: "y1", scope: !5857, file: !3, line: 5501, type: !105)
!5897 = !DILocation(line: 5501, column: 18, scope: !5857)
!5898 = !DILocalVariable(name: "y2", scope: !5857, file: !3, line: 5501, type: !105)
!5899 = !DILocation(line: 5501, column: 22, scope: !5857)
!5900 = !DILocalVariable(name: "line_bytes", scope: !5857, file: !3, line: 5501, type: !105)
!5901 = !DILocation(line: 5501, column: 26, scope: !5857)
!5902 = !DILocalVariable(name: "orientation", scope: !5857, file: !3, line: 5502, type: !7)
!5903 = !DILocation(line: 5502, column: 16, scope: !5857)
!5904 = !DILocalVariable(name: "i", scope: !5857, file: !3, line: 5503, type: !105)
!5905 = !DILocation(line: 5503, column: 10, scope: !5857)
!5906 = !DILocalVariable(name: "j", scope: !5857, file: !3, line: 5503, type: !105)
!5907 = !DILocation(line: 5503, column: 13, scope: !5857)
!5908 = !DILocalVariable(name: "k", scope: !5857, file: !3, line: 5503, type: !105)
!5909 = !DILocation(line: 5503, column: 16, scope: !5857)
!5910 = !DILocation(line: 5505, column: 9, scope: !5857)
!5911 = !DILocation(line: 5506, column: 7, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5506, column: 7)
!5913 = !DILocation(line: 5506, column: 13, scope: !5912)
!5914 = !DILocation(line: 5506, column: 22, scope: !5912)
!5915 = !DILocation(line: 5506, column: 7, scope: !5857)
!5916 = !DILocation(line: 5507, column: 22, scope: !5912)
!5917 = !DILocation(line: 5507, column: 29, scope: !5912)
!5918 = !DILocation(line: 5507, column: 5, scope: !5912)
!5919 = !DILocation(line: 5507, column: 11, scope: !5912)
!5920 = !DILocation(line: 5507, column: 20, scope: !5912)
!5921 = !DILocation(line: 5509, column: 11, scope: !5857)
!5922 = !DILocation(line: 5509, column: 18, scope: !5857)
!5923 = !DILocation(line: 5509, column: 3, scope: !5857)
!5924 = !DILocation(line: 5511, column: 14, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 5511, column: 14)
!5926 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5509, column: 28)
!5927 = !DILocation(line: 5511, column: 20, scope: !5925)
!5928 = !DILocation(line: 5511, column: 29, scope: !5925)
!5929 = !DILocation(line: 5511, column: 14, scope: !5926)
!5930 = !DILocation(line: 5512, column: 11, scope: !5925)
!5931 = !DILocation(line: 5512, column: 5, scope: !5925)
!5932 = !DILocation(line: 5513, column: 3, scope: !5926)
!5933 = !DILocation(line: 5515, column: 7, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 5515, column: 7)
!5935 = !DILocation(line: 5515, column: 13, scope: !5934)
!5936 = !DILocation(line: 5515, column: 22, scope: !5934)
!5937 = !DILocation(line: 5515, column: 7, scope: !5926)
!5938 = !DILocation(line: 5516, column: 13, scope: !5934)
!5939 = !DILocation(line: 5516, column: 7, scope: !5934)
!5940 = !DILocation(line: 5517, column: 3, scope: !5926)
!5941 = !DILocation(line: 5520, column: 5, scope: !5926)
!5942 = !DILocation(line: 5524, column: 7, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5524, column: 7)
!5944 = !DILocation(line: 5524, column: 13, scope: !5943)
!5945 = !DILocation(line: 5524, column: 28, scope: !5943)
!5946 = !DILocation(line: 5524, column: 7, scope: !5857)
!5947 = !DILocation(line: 5525, column: 14, scope: !5943)
!5948 = !DILocation(line: 5525, column: 20, scope: !5943)
!5949 = !DILocation(line: 5525, column: 12, scope: !5943)
!5950 = !DILocation(line: 5525, column: 5, scope: !5943)
!5951 = !DILocation(line: 5527, column: 14, scope: !5943)
!5952 = !DILocation(line: 5527, column: 21, scope: !5943)
!5953 = !DILocation(line: 5527, column: 12, scope: !5943)
!5954 = !DILocation(line: 5528, column: 7, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5528, column: 7)
!5956 = !DILocation(line: 5528, column: 13, scope: !5955)
!5957 = !DILocation(line: 5528, column: 29, scope: !5955)
!5958 = !DILocation(line: 5528, column: 7, scope: !5857)
!5959 = !DILocation(line: 5529, column: 15, scope: !5955)
!5960 = !DILocation(line: 5529, column: 21, scope: !5955)
!5961 = !DILocation(line: 5529, column: 13, scope: !5955)
!5962 = !DILocation(line: 5529, column: 5, scope: !5955)
!5963 = !DILocation(line: 5531, column: 15, scope: !5955)
!5964 = !DILocation(line: 5531, column: 22, scope: !5955)
!5965 = !DILocation(line: 5531, column: 13, scope: !5955)
!5966 = !DILocation(line: 5533, column: 7, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5533, column: 7)
!5968 = !DILocation(line: 5533, column: 13, scope: !5967)
!5969 = !DILocation(line: 5533, column: 18, scope: !5967)
!5970 = !DILocation(line: 5533, column: 7, scope: !5857)
!5971 = !DILocation(line: 5534, column: 18, scope: !5967)
!5972 = !DILocation(line: 5534, column: 25, scope: !5967)
!5973 = !DILocation(line: 5534, column: 5, scope: !5967)
!5974 = !DILocation(line: 5534, column: 11, scope: !5967)
!5975 = !DILocation(line: 5534, column: 16, scope: !5967)
!5976 = !DILocation(line: 5535, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5535, column: 7)
!5978 = !DILocation(line: 5535, column: 13, scope: !5977)
!5979 = !DILocation(line: 5535, column: 18, scope: !5977)
!5980 = !DILocation(line: 5535, column: 7, scope: !5857)
!5981 = !DILocation(line: 5536, column: 18, scope: !5977)
!5982 = !DILocation(line: 5536, column: 25, scope: !5977)
!5983 = !DILocation(line: 5536, column: 5, scope: !5977)
!5984 = !DILocation(line: 5536, column: 11, scope: !5977)
!5985 = !DILocation(line: 5536, column: 16, scope: !5977)
!5986 = !DILocation(line: 5538, column: 8, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5538, column: 7)
!5988 = !DILocation(line: 5538, column: 14, scope: !5987)
!5989 = !DILocation(line: 5538, column: 19, scope: !5987)
!5990 = !DILocation(line: 5538, column: 26, scope: !5987)
!5991 = !DILocation(line: 5538, column: 30, scope: !5987)
!5992 = !DILocation(line: 5538, column: 36, scope: !5987)
!5993 = !DILocation(line: 5538, column: 41, scope: !5987)
!5994 = !DILocation(line: 5538, column: 7, scope: !5857)
!5995 = !DILocation(line: 5540, column: 5, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 5539, column: 5)
!5997 = !DILocation(line: 5542, column: 5, scope: !5996)
!5998 = !DILocation(line: 5548, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5548, column: 7)
!6000 = !DILocation(line: 5548, column: 13, scope: !5999)
!6001 = !DILocation(line: 5548, column: 19, scope: !5999)
!6002 = !DILocation(line: 5548, column: 7, scope: !5857)
!6003 = !DILocation(line: 5549, column: 14, scope: !5999)
!6004 = !DILocation(line: 5549, column: 12, scope: !5999)
!6005 = !DILocation(line: 5549, column: 5, scope: !5999)
!6006 = !DILocation(line: 5551, column: 14, scope: !5999)
!6007 = !DILocation(line: 5551, column: 20, scope: !5999)
!6008 = !DILocation(line: 5551, column: 12, scope: !5999)
!6009 = !DILocation(line: 5553, column: 7, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5553, column: 7)
!6011 = !DILocation(line: 5553, column: 13, scope: !6010)
!6012 = !DILocation(line: 5553, column: 20, scope: !6010)
!6013 = !DILocation(line: 5553, column: 7, scope: !5857)
!6014 = !DILocation(line: 5554, column: 15, scope: !6010)
!6015 = !DILocation(line: 5554, column: 13, scope: !6010)
!6016 = !DILocation(line: 5554, column: 5, scope: !6010)
!6017 = !DILocation(line: 5556, column: 15, scope: !6010)
!6018 = !DILocation(line: 5556, column: 21, scope: !6010)
!6019 = !DILocation(line: 5556, column: 13, scope: !6010)
!6020 = !DILocation(line: 5558, column: 7, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5558, column: 7)
!6022 = !DILocation(line: 5558, column: 13, scope: !6021)
!6023 = !DILocation(line: 5558, column: 7, scope: !5857)
!6024 = !DILocation(line: 5562, column: 7, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 5559, column: 5)
!6026 = !DILocation(line: 5562, column: 13, scope: !6025)
!6027 = !DILocation(line: 5562, column: 19, scope: !6025)
!6028 = !DILocation(line: 5562, column: 25, scope: !6025)
!6029 = !DILocation(line: 5562, column: 31, scope: !6025)
!6030 = !DILocation(line: 5562, column: 37, scope: !6025)
!6031 = !DILocation(line: 5563, column: 14, scope: !6025)
!6032 = !DILocation(line: 5563, column: 20, scope: !6025)
!6033 = !DILocation(line: 5563, column: 29, scope: !6025)
!6034 = !DILocation(line: 5563, column: 35, scope: !6025)
!6035 = !DILocation(line: 5560, column: 5, scope: !6025)
!6036 = !DILocation(line: 5565, column: 12, scope: !6025)
!6037 = !DILocation(line: 5565, column: 18, scope: !6025)
!6038 = !DILocation(line: 5565, column: 28, scope: !6025)
!6039 = !DILocation(line: 5565, column: 35, scope: !6025)
!6040 = !DILocation(line: 5565, column: 43, scope: !6025)
!6041 = !DILocation(line: 5564, column: 5, scope: !6025)
!6042 = !DILocation(line: 5566, column: 5, scope: !6025)
!6043 = !DILocation(line: 5569, column: 7, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5569, column: 7)
!6045 = !DILocation(line: 5569, column: 13, scope: !6044)
!6046 = !DILocation(line: 5569, column: 18, scope: !6044)
!6047 = !DILocation(line: 5569, column: 7, scope: !5857)
!6048 = !DILocation(line: 5571, column: 9, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 5571, column: 9)
!6050 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 5570, column: 5)
!6051 = !DILocation(line: 5571, column: 15, scope: !6049)
!6052 = !DILocation(line: 5571, column: 24, scope: !6049)
!6053 = !DILocation(line: 5571, column: 40, scope: !6049)
!6054 = !DILocation(line: 5571, column: 43, scope: !6049)
!6055 = !DILocation(line: 5571, column: 49, scope: !6049)
!6056 = !DILocation(line: 5571, column: 58, scope: !6049)
!6057 = !DILocation(line: 5571, column: 9, scope: !6050)
!6058 = !DILocation(line: 5573, column: 26, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 5572, column: 7)
!6060 = !DILocation(line: 5573, column: 32, scope: !6059)
!6061 = !DILocation(line: 5573, column: 42, scope: !6059)
!6062 = !DILocation(line: 5573, column: 40, scope: !6059)
!6063 = !DILocation(line: 5573, column: 50, scope: !6059)
!6064 = !DILocation(line: 5573, column: 56, scope: !6059)
!6065 = !DILocation(line: 5573, column: 48, scope: !6059)
!6066 = !DILocation(line: 5573, column: 65, scope: !6059)
!6067 = !DILocation(line: 5573, column: 72, scope: !6059)
!6068 = !DILocation(line: 5573, column: 76, scope: !6059)
!6069 = !DILocation(line: 5573, column: 80, scope: !6059)
!6070 = !DILocation(line: 5573, column: 63, scope: !6059)
!6071 = !DILocation(line: 5573, column: 61, scope: !6059)
!6072 = !DILocation(line: 5573, column: 17, scope: !6059)
!6073 = !DILocation(line: 5573, column: 15, scope: !6059)
!6074 = !DILocation(line: 5574, column: 26, scope: !6059)
!6075 = !DILocation(line: 5574, column: 32, scope: !6059)
!6076 = !DILocation(line: 5574, column: 42, scope: !6059)
!6077 = !DILocation(line: 5574, column: 40, scope: !6059)
!6078 = !DILocation(line: 5574, column: 50, scope: !6059)
!6079 = !DILocation(line: 5574, column: 56, scope: !6059)
!6080 = !DILocation(line: 5574, column: 48, scope: !6059)
!6081 = !DILocation(line: 5574, column: 65, scope: !6059)
!6082 = !DILocation(line: 5574, column: 72, scope: !6059)
!6083 = !DILocation(line: 5574, column: 76, scope: !6059)
!6084 = !DILocation(line: 5574, column: 80, scope: !6059)
!6085 = !DILocation(line: 5574, column: 63, scope: !6059)
!6086 = !DILocation(line: 5574, column: 61, scope: !6059)
!6087 = !DILocation(line: 5574, column: 17, scope: !6059)
!6088 = !DILocation(line: 5574, column: 15, scope: !6059)
!6089 = !DILocation(line: 5575, column: 7, scope: !6059)
!6090 = !DILocation(line: 5578, column: 26, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 5577, column: 7)
!6092 = !DILocation(line: 5578, column: 32, scope: !6091)
!6093 = !DILocation(line: 5578, column: 42, scope: !6091)
!6094 = !DILocation(line: 5578, column: 40, scope: !6091)
!6095 = !DILocation(line: 5578, column: 52, scope: !6091)
!6096 = !DILocation(line: 5578, column: 59, scope: !6091)
!6097 = !DILocation(line: 5578, column: 63, scope: !6091)
!6098 = !DILocation(line: 5578, column: 67, scope: !6091)
!6099 = !DILocation(line: 5578, column: 50, scope: !6091)
!6100 = !DILocation(line: 5578, column: 48, scope: !6091)
!6101 = !DILocation(line: 5578, column: 17, scope: !6091)
!6102 = !DILocation(line: 5578, column: 15, scope: !6091)
!6103 = !DILocation(line: 5579, column: 26, scope: !6091)
!6104 = !DILocation(line: 5579, column: 32, scope: !6091)
!6105 = !DILocation(line: 5579, column: 42, scope: !6091)
!6106 = !DILocation(line: 5579, column: 40, scope: !6091)
!6107 = !DILocation(line: 5579, column: 52, scope: !6091)
!6108 = !DILocation(line: 5579, column: 59, scope: !6091)
!6109 = !DILocation(line: 5579, column: 63, scope: !6091)
!6110 = !DILocation(line: 5579, column: 67, scope: !6091)
!6111 = !DILocation(line: 5579, column: 50, scope: !6091)
!6112 = !DILocation(line: 5579, column: 48, scope: !6091)
!6113 = !DILocation(line: 5579, column: 17, scope: !6091)
!6114 = !DILocation(line: 5579, column: 15, scope: !6091)
!6115 = !DILocation(line: 5582, column: 10, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 5582, column: 9)
!6117 = !DILocation(line: 5582, column: 18, scope: !6116)
!6118 = !DILocation(line: 5582, column: 28, scope: !6116)
!6119 = !DILocation(line: 5582, column: 37, scope: !6116)
!6120 = !DILocation(line: 5582, column: 43, scope: !6116)
!6121 = !DILocation(line: 5582, column: 35, scope: !6116)
!6122 = !DILocation(line: 5582, column: 25, scope: !6116)
!6123 = !DILocation(line: 5582, column: 9, scope: !6050)
!6124 = !DILocation(line: 5584, column: 7, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 5583, column: 7)
!6126 = !DILocation(line: 5586, column: 15, scope: !6125)
!6127 = !DILocation(line: 5587, column: 7, scope: !6125)
!6128 = !DILocation(line: 5589, column: 10, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 5589, column: 9)
!6130 = !DILocation(line: 5589, column: 18, scope: !6129)
!6131 = !DILocation(line: 5589, column: 28, scope: !6129)
!6132 = !DILocation(line: 5589, column: 38, scope: !6129)
!6133 = !DILocation(line: 5589, column: 44, scope: !6129)
!6134 = !DILocation(line: 5589, column: 36, scope: !6129)
!6135 = !DILocation(line: 5589, column: 25, scope: !6129)
!6136 = !DILocation(line: 5589, column: 9, scope: !6050)
!6137 = !DILocation(line: 5591, column: 7, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 5590, column: 7)
!6139 = !DILocation(line: 5593, column: 15, scope: !6138)
!6140 = !DILocation(line: 5594, column: 7, scope: !6138)
!6141 = !DILocation(line: 5596, column: 5, scope: !6050)
!6142 = !DILocation(line: 5599, column: 13, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 5598, column: 5)
!6144 = !DILocation(line: 5600, column: 13, scope: !6143)
!6145 = !DILocation(line: 5603, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5603, column: 7)
!6147 = !DILocation(line: 5603, column: 13, scope: !6146)
!6148 = !DILocation(line: 5603, column: 18, scope: !6146)
!6149 = !DILocation(line: 5603, column: 7, scope: !5857)
!6150 = !DILocation(line: 5606, column: 9, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 5606, column: 9)
!6152 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 5604, column: 5)
!6153 = !DILocation(line: 5606, column: 15, scope: !6151)
!6154 = !DILocation(line: 5606, column: 20, scope: !6151)
!6155 = !DILocation(line: 5606, column: 9, scope: !6152)
!6156 = !DILocation(line: 5607, column: 7, scope: !6151)
!6157 = !DILocation(line: 5610, column: 15, scope: !6152)
!6158 = !DILocation(line: 5610, column: 13, scope: !6152)
!6159 = !DILocation(line: 5611, column: 15, scope: !6152)
!6160 = !DILocation(line: 5611, column: 13, scope: !6152)
!6161 = !DILocation(line: 5612, column: 5, scope: !6152)
!6162 = !DILocation(line: 5615, column: 9, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 5615, column: 9)
!6164 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 5614, column: 5)
!6165 = !DILocation(line: 5615, column: 15, scope: !6163)
!6166 = !DILocation(line: 5615, column: 20, scope: !6163)
!6167 = !DILocation(line: 5615, column: 9, scope: !6164)
!6168 = !DILocation(line: 5617, column: 27, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 5616, column: 7)
!6170 = !DILocation(line: 5617, column: 36, scope: !6169)
!6171 = !DILocation(line: 5617, column: 42, scope: !6169)
!6172 = !DILocation(line: 5617, column: 34, scope: !6169)
!6173 = !DILocation(line: 5617, column: 51, scope: !6169)
!6174 = !DILocation(line: 5617, column: 59, scope: !6169)
!6175 = !DILocation(line: 5617, column: 50, scope: !6169)
!6176 = !DILocation(line: 5617, column: 48, scope: !6169)
!6177 = !DILocation(line: 5617, column: 17, scope: !6169)
!6178 = !DILocation(line: 5617, column: 15, scope: !6169)
!6179 = !DILocation(line: 5618, column: 27, scope: !6169)
!6180 = !DILocation(line: 5618, column: 37, scope: !6169)
!6181 = !DILocation(line: 5618, column: 43, scope: !6169)
!6182 = !DILocation(line: 5618, column: 35, scope: !6169)
!6183 = !DILocation(line: 5618, column: 52, scope: !6169)
!6184 = !DILocation(line: 5618, column: 60, scope: !6169)
!6185 = !DILocation(line: 5618, column: 51, scope: !6169)
!6186 = !DILocation(line: 5618, column: 49, scope: !6169)
!6187 = !DILocation(line: 5618, column: 17, scope: !6169)
!6188 = !DILocation(line: 5618, column: 15, scope: !6169)
!6189 = !DILocation(line: 5619, column: 7, scope: !6169)
!6190 = !DILocation(line: 5622, column: 25, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 5621, column: 7)
!6192 = !DILocation(line: 5622, column: 35, scope: !6191)
!6193 = !DILocation(line: 5622, column: 43, scope: !6191)
!6194 = !DILocation(line: 5622, column: 49, scope: !6191)
!6195 = !DILocation(line: 5622, column: 55, scope: !6191)
!6196 = !DILocation(line: 5622, column: 47, scope: !6191)
!6197 = !DILocation(line: 5622, column: 32, scope: !6191)
!6198 = !DILocation(line: 5622, column: 16, scope: !6191)
!6199 = !DILocation(line: 5622, column: 14, scope: !6191)
!6200 = !DILocation(line: 5623, column: 26, scope: !6191)
!6201 = !DILocation(line: 5623, column: 37, scope: !6191)
!6202 = !DILocation(line: 5623, column: 45, scope: !6191)
!6203 = !DILocation(line: 5623, column: 51, scope: !6191)
!6204 = !DILocation(line: 5623, column: 57, scope: !6191)
!6205 = !DILocation(line: 5623, column: 49, scope: !6191)
!6206 = !DILocation(line: 5623, column: 34, scope: !6191)
!6207 = !DILocation(line: 5623, column: 17, scope: !6191)
!6208 = !DILocation(line: 5623, column: 15, scope: !6191)
!6209 = !DILocation(line: 5627, column: 7, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5627, column: 7)
!6211 = !DILocation(line: 5627, column: 16, scope: !6210)
!6212 = !DILocation(line: 5627, column: 14, scope: !6210)
!6213 = !DILocation(line: 5627, column: 7, scope: !5857)
!6214 = !DILocation(line: 5628, column: 14, scope: !6210)
!6215 = !DILocation(line: 5628, column: 12, scope: !6210)
!6216 = !DILocation(line: 5628, column: 5, scope: !6210)
!6217 = !DILocation(line: 5629, column: 7, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5629, column: 7)
!6219 = !DILocation(line: 5629, column: 17, scope: !6218)
!6220 = !DILocation(line: 5629, column: 15, scope: !6218)
!6221 = !DILocation(line: 5629, column: 7, scope: !5857)
!6222 = !DILocation(line: 5630, column: 15, scope: !6218)
!6223 = !DILocation(line: 5630, column: 13, scope: !6218)
!6224 = !DILocation(line: 5630, column: 5, scope: !6218)
!6225 = !DILocation(line: 5633, column: 11, scope: !5857)
!6226 = !DILocation(line: 5633, column: 17, scope: !5857)
!6227 = !DILocation(line: 5633, column: 3, scope: !5857)
!6228 = !DILocation(line: 5637, column: 18, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5634, column: 5)
!6230 = !DILocation(line: 5637, column: 16, scope: !6229)
!6231 = !DILocation(line: 5638, column: 18, scope: !6229)
!6232 = !DILocation(line: 5638, column: 16, scope: !6229)
!6233 = !DILocation(line: 5639, column: 22, scope: !6229)
!6234 = !DILocation(line: 5640, column: 10, scope: !6229)
!6235 = !DILocation(line: 5643, column: 18, scope: !6229)
!6236 = !DILocation(line: 5643, column: 16, scope: !6229)
!6237 = !DILocation(line: 5644, column: 18, scope: !6229)
!6238 = !DILocation(line: 5644, column: 16, scope: !6229)
!6239 = !DILocation(line: 5645, column: 15, scope: !6229)
!6240 = !DILocation(line: 5645, column: 13, scope: !6229)
!6241 = !DILocation(line: 5646, column: 20, scope: !6229)
!6242 = !DILocation(line: 5646, column: 18, scope: !6229)
!6243 = !DILocation(line: 5647, column: 19, scope: !6229)
!6244 = !DILocation(line: 5647, column: 17, scope: !6229)
!6245 = !DILocation(line: 5648, column: 22, scope: !6229)
!6246 = !DILocation(line: 5649, column: 10, scope: !6229)
!6247 = !DILocation(line: 5653, column: 15, scope: !6229)
!6248 = !DILocation(line: 5653, column: 13, scope: !6229)
!6249 = !DILocation(line: 5654, column: 15, scope: !6229)
!6250 = !DILocation(line: 5654, column: 13, scope: !6229)
!6251 = !DILocation(line: 5655, column: 15, scope: !6229)
!6252 = !DILocation(line: 5655, column: 13, scope: !6229)
!6253 = !DILocation(line: 5656, column: 15, scope: !6229)
!6254 = !DILocation(line: 5656, column: 13, scope: !6229)
!6255 = !DILocation(line: 5658, column: 16, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 5658, column: 15)
!6257 = !DILocation(line: 5658, column: 21, scope: !6256)
!6258 = !DILocation(line: 5658, column: 19, scope: !6256)
!6259 = !DILocation(line: 5658, column: 28, scope: !6256)
!6260 = !DILocation(line: 5658, column: 33, scope: !6256)
!6261 = !DILocation(line: 5658, column: 31, scope: !6256)
!6262 = !DILocation(line: 5658, column: 25, scope: !6256)
!6263 = !DILocation(line: 5658, column: 15, scope: !6229)
!6264 = !DILocation(line: 5660, column: 20, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 5659, column: 12)
!6266 = !DILocation(line: 5660, column: 18, scope: !6265)
!6267 = !DILocation(line: 5661, column: 20, scope: !6265)
!6268 = !DILocation(line: 5661, column: 18, scope: !6265)
!6269 = !DILocation(line: 5662, column: 24, scope: !6265)
!6270 = !DILocation(line: 5663, column: 5, scope: !6265)
!6271 = !DILocation(line: 5666, column: 20, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 5665, column: 12)
!6273 = !DILocation(line: 5666, column: 18, scope: !6272)
!6274 = !DILocation(line: 5667, column: 20, scope: !6272)
!6275 = !DILocation(line: 5667, column: 18, scope: !6272)
!6276 = !DILocation(line: 5668, column: 17, scope: !6272)
!6277 = !DILocation(line: 5668, column: 15, scope: !6272)
!6278 = !DILocation(line: 5669, column: 22, scope: !6272)
!6279 = !DILocation(line: 5669, column: 20, scope: !6272)
!6280 = !DILocation(line: 5670, column: 21, scope: !6272)
!6281 = !DILocation(line: 5670, column: 19, scope: !6272)
!6282 = !DILocation(line: 5671, column: 24, scope: !6272)
!6283 = !DILocation(line: 5673, column: 5, scope: !6229)
!6284 = !DILocation(line: 5675, column: 7, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5675, column: 7)
!6286 = !DILocation(line: 5675, column: 13, scope: !6285)
!6287 = !DILocation(line: 5675, column: 7, scope: !5857)
!6288 = !DILocation(line: 5676, column: 11, scope: !6285)
!6289 = !DILocation(line: 5676, column: 5, scope: !6285)
!6290 = !DILocation(line: 5677, column: 7, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5677, column: 7)
!6292 = !DILocation(line: 5677, column: 13, scope: !6291)
!6293 = !DILocation(line: 5677, column: 7, scope: !5857)
!6294 = !DILocation(line: 5678, column: 11, scope: !6291)
!6295 = !DILocation(line: 5678, column: 5, scope: !6291)
!6296 = !DILocation(line: 5681, column: 7, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5681, column: 7)
!6298 = !DILocation(line: 5681, column: 13, scope: !6297)
!6299 = !DILocation(line: 5681, column: 18, scope: !6297)
!6300 = !DILocation(line: 5681, column: 7, scope: !5857)
!6301 = !DILocation(line: 5682, column: 18, scope: !6297)
!6302 = !DILocation(line: 5682, column: 5, scope: !6297)
!6303 = !DILocation(line: 5682, column: 11, scope: !6297)
!6304 = !DILocation(line: 5682, column: 16, scope: !6297)
!6305 = !DILocation(line: 5683, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5683, column: 7)
!6307 = !DILocation(line: 5683, column: 13, scope: !6306)
!6308 = !DILocation(line: 5683, column: 18, scope: !6306)
!6309 = !DILocation(line: 5683, column: 7, scope: !5857)
!6310 = !DILocation(line: 5684, column: 18, scope: !6306)
!6311 = !DILocation(line: 5684, column: 5, scope: !6306)
!6312 = !DILocation(line: 5684, column: 11, scope: !6306)
!6313 = !DILocation(line: 5684, column: 16, scope: !6306)
!6314 = !DILocation(line: 5686, column: 16, scope: !5857)
!6315 = !DILocation(line: 5686, column: 52, scope: !5857)
!6316 = !DILocation(line: 5686, column: 59, scope: !5857)
!6317 = !DILocation(line: 5686, column: 50, scope: !5857)
!6318 = !DILocation(line: 5686, column: 14, scope: !5857)
!6319 = !DILocation(line: 5688, column: 8, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5688, column: 7)
!6321 = !DILocation(line: 5688, column: 14, scope: !6320)
!6322 = !DILocation(line: 5688, column: 21, scope: !6320)
!6323 = !DILocation(line: 5688, column: 27, scope: !6320)
!6324 = !DILocation(line: 5688, column: 19, scope: !6320)
!6325 = !DILocation(line: 5688, column: 33, scope: !6320)
!6326 = !DILocation(line: 5688, column: 7, scope: !5857)
!6327 = !DILocation(line: 5690, column: 4, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 5689, column: 4)
!6329 = !DILocation(line: 5692, column: 4, scope: !6328)
!6330 = !DILocation(line: 5696, column: 10, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5696, column: 3)
!6332 = !DILocation(line: 5696, column: 17, scope: !6331)
!6333 = !DILocation(line: 5696, column: 8, scope: !6331)
!6334 = !DILocation(line: 5696, column: 43, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 5696, column: 3)
!6336 = !DILocation(line: 5696, column: 47, scope: !6335)
!6337 = !DILocation(line: 5696, column: 45, scope: !6335)
!6338 = !DILocation(line: 5696, column: 3, scope: !6331)
!6339 = !DILocation(line: 5698, column: 19, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 5697, column: 5)
!6341 = !DILocation(line: 5698, column: 29, scope: !6340)
!6342 = !DILocation(line: 5698, column: 27, scope: !6340)
!6343 = !DILocation(line: 5698, column: 8, scope: !6340)
!6344 = !DILocation(line: 5699, column: 19, scope: !6340)
!6345 = !DILocation(line: 5699, column: 30, scope: !6340)
!6346 = !DILocation(line: 5699, column: 32, scope: !6340)
!6347 = !DILocation(line: 5699, column: 27, scope: !6340)
!6348 = !DILocation(line: 5699, column: 38, scope: !6340)
!6349 = !DILocation(line: 5699, column: 8, scope: !6340)
!6350 = !DILocation(line: 5700, column: 9, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 5700, column: 9)
!6352 = !DILocation(line: 5700, column: 15, scope: !6351)
!6353 = !DILocation(line: 5700, column: 12, scope: !6351)
!6354 = !DILocation(line: 5700, column: 9, scope: !6340)
!6355 = !DILocation(line: 5701, column: 12, scope: !6351)
!6356 = !DILocation(line: 5701, column: 20, scope: !6351)
!6357 = !DILocation(line: 5701, column: 10, scope: !6351)
!6358 = !DILocation(line: 5701, column: 7, scope: !6351)
!6359 = !DILocation(line: 5702, column: 12, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 5702, column: 5)
!6361 = !DILocation(line: 5702, column: 10, scope: !6360)
!6362 = !DILocation(line: 5702, column: 17, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 5702, column: 5)
!6364 = !DILocation(line: 5702, column: 21, scope: !6363)
!6365 = !DILocation(line: 5702, column: 19, scope: !6363)
!6366 = !DILocation(line: 5702, column: 5, scope: !6360)
!6367 = !DILocation(line: 5704, column: 21, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 5703, column: 7)
!6369 = !DILocation(line: 5704, column: 30, scope: !6368)
!6370 = !DILocation(line: 5704, column: 28, scope: !6368)
!6371 = !DILocation(line: 5704, column: 10, scope: !6368)
!6372 = !DILocation(line: 5705, column: 21, scope: !6368)
!6373 = !DILocation(line: 5705, column: 31, scope: !6368)
!6374 = !DILocation(line: 5705, column: 33, scope: !6368)
!6375 = !DILocation(line: 5705, column: 28, scope: !6368)
!6376 = !DILocation(line: 5705, column: 38, scope: !6368)
!6377 = !DILocation(line: 5705, column: 10, scope: !6368)
!6378 = !DILocation(line: 5706, column: 11, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 5706, column: 11)
!6380 = !DILocation(line: 5706, column: 17, scope: !6379)
!6381 = !DILocation(line: 5706, column: 14, scope: !6379)
!6382 = !DILocation(line: 5706, column: 11, scope: !6368)
!6383 = !DILocation(line: 5707, column: 14, scope: !6379)
!6384 = !DILocation(line: 5707, column: 21, scope: !6379)
!6385 = !DILocation(line: 5707, column: 12, scope: !6379)
!6386 = !DILocation(line: 5707, column: 9, scope: !6379)
!6387 = !DILocation(line: 5708, column: 24, scope: !6368)
!6388 = !DILocation(line: 5708, column: 7, scope: !6368)
!6389 = !DILocation(line: 5708, column: 16, scope: !6368)
!6390 = !DILocation(line: 5708, column: 19, scope: !6368)
!6391 = !DILocation(line: 5708, column: 22, scope: !6368)
!6392 = !DILocation(line: 5709, column: 24, scope: !6368)
!6393 = !DILocation(line: 5709, column: 7, scope: !6368)
!6394 = !DILocation(line: 5709, column: 16, scope: !6368)
!6395 = !DILocation(line: 5709, column: 19, scope: !6368)
!6396 = !DILocation(line: 5709, column: 22, scope: !6368)
!6397 = !DILocation(line: 5710, column: 24, scope: !6368)
!6398 = !DILocation(line: 5710, column: 7, scope: !6368)
!6399 = !DILocation(line: 5710, column: 16, scope: !6368)
!6400 = !DILocation(line: 5710, column: 19, scope: !6368)
!6401 = !DILocation(line: 5710, column: 22, scope: !6368)
!6402 = !DILocation(line: 5711, column: 24, scope: !6368)
!6403 = !DILocation(line: 5711, column: 7, scope: !6368)
!6404 = !DILocation(line: 5711, column: 16, scope: !6368)
!6405 = !DILocation(line: 5711, column: 19, scope: !6368)
!6406 = !DILocation(line: 5711, column: 22, scope: !6368)
!6407 = !DILocation(line: 5712, column: 30, scope: !6368)
!6408 = !DILocation(line: 5712, column: 43, scope: !6368)
!6409 = !DILocation(line: 5712, column: 41, scope: !6368)
!6410 = !DILocation(line: 5712, column: 7, scope: !6368)
!6411 = !DILocation(line: 5712, column: 16, scope: !6368)
!6412 = !DILocation(line: 5712, column: 19, scope: !6368)
!6413 = !DILocation(line: 5712, column: 28, scope: !6368)
!6414 = !DILocation(line: 5713, column: 30, scope: !6368)
!6415 = !DILocation(line: 5713, column: 32, scope: !6368)
!6416 = !DILocation(line: 5713, column: 7, scope: !6368)
!6417 = !DILocation(line: 5713, column: 16, scope: !6368)
!6418 = !DILocation(line: 5713, column: 19, scope: !6368)
!6419 = !DILocation(line: 5713, column: 28, scope: !6368)
!6420 = !DILocation(line: 5714, column: 27, scope: !6368)
!6421 = !DILocation(line: 5714, column: 35, scope: !6368)
!6422 = !DILocation(line: 5714, column: 33, scope: !6368)
!6423 = !DILocation(line: 5714, column: 7, scope: !6368)
!6424 = !DILocation(line: 5714, column: 16, scope: !6368)
!6425 = !DILocation(line: 5714, column: 19, scope: !6368)
!6426 = !DILocation(line: 5714, column: 25, scope: !6368)
!6427 = !DILocation(line: 5715, column: 7, scope: !6368)
!6428 = !DILocation(line: 5702, column: 29, scope: !6363)
!6429 = !DILocation(line: 5702, column: 34, scope: !6363)
!6430 = !DILocation(line: 5702, column: 5, scope: !6363)
!6431 = distinct !{!6431, !6366, !6432}
!6432 = !DILocation(line: 5715, column: 7, scope: !6360)
!6433 = !DILocation(line: 5716, column: 5, scope: !6340)
!6434 = !DILocation(line: 5696, column: 55, scope: !6335)
!6435 = !DILocation(line: 5696, column: 3, scope: !6335)
!6436 = distinct !{!6436, !6338, !6437}
!6437 = !DILocation(line: 5716, column: 5, scope: !6331)
!6438 = !DILocation(line: 5717, column: 3, scope: !5857)
!6439 = !DILocation(line: 5718, column: 3, scope: !5857)
!6440 = distinct !DISubprogram(name: "writeImageSections", scope: !3, file: !3, line: 6835, type: !6441, scopeLine: 6839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{!110, !193, !193, !542, !655, !2772, !557, !106, !571}
!6443 = !DILocalVariable(name: "in", arg: 1, scope: !6440, file: !3, line: 6835, type: !193)
!6444 = !DILocation(line: 6835, column: 26, scope: !6440)
!6445 = !DILocalVariable(name: "out", arg: 2, scope: !6440, file: !3, line: 6835, type: !193)
!6446 = !DILocation(line: 6835, column: 36, scope: !6440)
!6447 = !DILocalVariable(name: "image", arg: 3, scope: !6440, file: !3, line: 6835, type: !542)
!6448 = !DILocation(line: 6835, column: 60, scope: !6440)
!6449 = !DILocalVariable(name: "page", arg: 4, scope: !6440, file: !3, line: 6836, type: !655)
!6450 = !DILocation(line: 6836, column: 22, scope: !6440)
!6451 = !DILocalVariable(name: "sections", arg: 5, scope: !6440, file: !3, line: 6836, type: !2772)
!6452 = !DILocation(line: 6836, column: 44, scope: !6440)
!6453 = !DILocalVariable(name: "dump", arg: 6, scope: !6440, file: !3, line: 6837, type: !557)
!6454 = !DILocation(line: 6837, column: 25, scope: !6440)
!6455 = !DILocalVariable(name: "src_buff", arg: 7, scope: !6440, file: !3, line: 6837, type: !106)
!6456 = !DILocation(line: 6837, column: 46, scope: !6440)
!6457 = !DILocalVariable(name: "sect_buff_ptr", arg: 8, scope: !6440, file: !3, line: 6838, type: !571)
!6458 = !DILocation(line: 6838, column: 36, scope: !6440)
!6459 = !DILocalVariable(name: "hres", scope: !6440, file: !3, line: 6840, type: !120)
!6460 = !DILocation(line: 6840, column: 11, scope: !6440)
!6461 = !DILocalVariable(name: "vres", scope: !6440, file: !3, line: 6840, type: !120)
!6462 = !DILocation(line: 6840, column: 17, scope: !6440)
!6463 = !DILocalVariable(name: "i", scope: !6440, file: !3, line: 6841, type: !105)
!6464 = !DILocation(line: 6841, column: 11, scope: !6440)
!6465 = !DILocalVariable(name: "k", scope: !6440, file: !3, line: 6841, type: !105)
!6466 = !DILocation(line: 6841, column: 14, scope: !6440)
!6467 = !DILocalVariable(name: "width", scope: !6440, file: !3, line: 6841, type: !105)
!6468 = !DILocation(line: 6841, column: 17, scope: !6440)
!6469 = !DILocalVariable(name: "length", scope: !6440, file: !3, line: 6841, type: !105)
!6470 = !DILocation(line: 6841, column: 24, scope: !6440)
!6471 = !DILocalVariable(name: "sectsize", scope: !6440, file: !3, line: 6841, type: !105)
!6472 = !DILocation(line: 6841, column: 32, scope: !6440)
!6473 = !DILocalVariable(name: "sect_buff", scope: !6440, file: !3, line: 6842, type: !106)
!6474 = !DILocation(line: 6842, column: 18, scope: !6440)
!6475 = !DILocation(line: 6842, column: 31, scope: !6440)
!6476 = !DILocation(line: 6842, column: 30, scope: !6440)
!6477 = !DILocation(line: 6844, column: 10, scope: !6440)
!6478 = !DILocation(line: 6844, column: 16, scope: !6440)
!6479 = !DILocation(line: 6844, column: 8, scope: !6440)
!6480 = !DILocation(line: 6845, column: 10, scope: !6440)
!6481 = !DILocation(line: 6845, column: 16, scope: !6440)
!6482 = !DILocation(line: 6845, column: 8, scope: !6440)
!6483 = !DILocation(line: 6847, column: 7, scope: !6440)
!6484 = !DILocation(line: 6847, column: 13, scope: !6440)
!6485 = !DILocation(line: 6847, column: 20, scope: !6440)
!6486 = !DILocation(line: 6847, column: 26, scope: !6440)
!6487 = !DILocation(line: 6847, column: 18, scope: !6440)
!6488 = !DILocation(line: 6847, column: 5, scope: !6440)
!6489 = !DILocation(line: 6848, column: 8, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 6848, column: 7)
!6491 = !DILocation(line: 6848, column: 10, scope: !6490)
!6492 = !DILocation(line: 6848, column: 15, scope: !6490)
!6493 = !DILocation(line: 6848, column: 19, scope: !6490)
!6494 = !DILocation(line: 6848, column: 21, scope: !6490)
!6495 = !DILocation(line: 6848, column: 7, scope: !6440)
!6496 = !DILocation(line: 6851, column: 94, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 6849, column: 4)
!6498 = !DILocation(line: 6850, column: 4, scope: !6497)
!6499 = !DILocation(line: 6852, column: 4, scope: !6497)
!6500 = !DILocation(line: 6855, column: 10, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 6855, column: 3)
!6502 = !DILocation(line: 6855, column: 8, scope: !6501)
!6503 = !DILocation(line: 6855, column: 15, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 6855, column: 3)
!6505 = !DILocation(line: 6855, column: 19, scope: !6504)
!6506 = !DILocation(line: 6855, column: 17, scope: !6504)
!6507 = !DILocation(line: 6855, column: 3, scope: !6501)
!6508 = !DILocation(line: 6857, column: 14, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 6856, column: 5)
!6510 = !DILocation(line: 6857, column: 23, scope: !6509)
!6511 = !DILocation(line: 6857, column: 26, scope: !6509)
!6512 = !DILocation(line: 6857, column: 31, scope: !6509)
!6513 = !DILocation(line: 6857, column: 40, scope: !6509)
!6514 = !DILocation(line: 6857, column: 43, scope: !6509)
!6515 = !DILocation(line: 6857, column: 29, scope: !6509)
!6516 = !DILocation(line: 6857, column: 46, scope: !6509)
!6517 = !DILocation(line: 6857, column: 12, scope: !6509)
!6518 = !DILocation(line: 6858, column: 14, scope: !6509)
!6519 = !DILocation(line: 6858, column: 23, scope: !6509)
!6520 = !DILocation(line: 6858, column: 26, scope: !6509)
!6521 = !DILocation(line: 6858, column: 31, scope: !6509)
!6522 = !DILocation(line: 6858, column: 40, scope: !6509)
!6523 = !DILocation(line: 6858, column: 43, scope: !6509)
!6524 = !DILocation(line: 6858, column: 29, scope: !6509)
!6525 = !DILocation(line: 6858, column: 46, scope: !6509)
!6526 = !DILocation(line: 6858, column: 12, scope: !6509)
!6527 = !DILocation(line: 6860, column: 12, scope: !6509)
!6528 = !DILocation(line: 6860, column: 20, scope: !6509)
!6529 = !DILocation(line: 6860, column: 27, scope: !6509)
!6530 = !DILocation(line: 6860, column: 18, scope: !6509)
!6531 = !DILocation(line: 6860, column: 31, scope: !6509)
!6532 = !DILocation(line: 6860, column: 11, scope: !6509)
!6533 = !DILocation(line: 6860, column: 36, scope: !6509)
!6534 = !DILocation(line: 6860, column: 6, scope: !6509)
!6535 = !DILocation(line: 6859, column: 16, scope: !6509)
!6536 = !DILocation(line: 6860, column: 51, scope: !6509)
!6537 = !DILocation(line: 6860, column: 58, scope: !6509)
!6538 = !DILocation(line: 6860, column: 49, scope: !6509)
!6539 = !DILocation(line: 6860, column: 64, scope: !6509)
!6540 = !DILocation(line: 6860, column: 62, scope: !6509)
!6541 = !DILocation(line: 6859, column: 14, scope: !6509)
!6542 = !DILocation(line: 6862, column: 28, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 6862, column: 9)
!6544 = !DILocation(line: 6862, column: 38, scope: !6543)
!6545 = !DILocation(line: 6862, column: 9, scope: !6543)
!6546 = !DILocation(line: 6862, column: 9, scope: !6509)
!6547 = !DILocation(line: 6864, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 6863, column: 7)
!6549 = !DILocation(line: 6865, column: 7, scope: !6548)
!6550 = !DILocation(line: 6867, column: 18, scope: !6509)
!6551 = !DILocation(line: 6867, column: 17, scope: !6509)
!6552 = !DILocation(line: 6867, column: 15, scope: !6509)
!6553 = !DILocation(line: 6869, column: 30, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 6869, column: 9)
!6555 = !DILocation(line: 6869, column: 38, scope: !6554)
!6556 = !DILocation(line: 6869, column: 47, scope: !6554)
!6557 = !DILocation(line: 6869, column: 51, scope: !6554)
!6558 = !DILocation(line: 6869, column: 61, scope: !6554)
!6559 = !DILocation(line: 6869, column: 9, scope: !6554)
!6560 = !DILocation(line: 6869, column: 9, scope: !6509)
!6561 = !DILocation(line: 6871, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 6870, column: 7)
!6563 = !DILocation(line: 6872, column: 7, scope: !6562)
!6564 = !DILocation(line: 6876, column: 28, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 6876, column: 9)
!6566 = !DILocation(line: 6876, column: 32, scope: !6565)
!6567 = !DILocation(line: 6876, column: 37, scope: !6565)
!6568 = !DILocation(line: 6876, column: 44, scope: !6565)
!6569 = !DILocation(line: 6876, column: 50, scope: !6565)
!6570 = !DILocation(line: 6876, column: 57, scope: !6565)
!6571 = !DILocation(line: 6876, column: 65, scope: !6565)
!6572 = !DILocation(line: 6876, column: 71, scope: !6565)
!6573 = !DILocation(line: 6876, column: 77, scope: !6565)
!6574 = !DILocation(line: 6876, column: 9, scope: !6565)
!6575 = !DILocation(line: 6876, column: 9, scope: !6509)
!6576 = !DILocation(line: 6878, column: 7, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 6877, column: 7)
!6578 = !DILocation(line: 6879, column: 7, scope: !6577)
!6579 = !DILocation(line: 6881, column: 5, scope: !6509)
!6580 = !DILocation(line: 6855, column: 23, scope: !6504)
!6581 = !DILocation(line: 6855, column: 3, scope: !6504)
!6582 = distinct !{!6582, !6507, !6583}
!6583 = !DILocation(line: 6881, column: 5, scope: !6501)
!6584 = !DILocation(line: 6883, column: 3, scope: !6440)
!6585 = !DILocation(line: 6884, column: 3, scope: !6440)
!6586 = !DILocalVariable(name: "sectsize", arg: 1, scope: !574, file: !3, line: 7163, type: !105)
!6587 = !DILocation(line: 7163, column: 27, scope: !574)
!6588 = !DILocalVariable(name: "sect_buff_ptr", arg: 2, scope: !574, file: !3, line: 7163, type: !571)
!6589 = !DILocation(line: 7163, column: 53, scope: !574)
!6590 = !DILocalVariable(name: "sect_buff", scope: !574, file: !3, line: 7165, type: !106)
!6591 = !DILocation(line: 7165, column: 19, scope: !574)
!6592 = !DILocalVariable(name: "new_buff", scope: !574, file: !3, line: 7166, type: !106)
!6593 = !DILocation(line: 7166, column: 19, scope: !574)
!6594 = !DILocation(line: 7169, column: 16, scope: !574)
!6595 = !DILocation(line: 7169, column: 15, scope: !574)
!6596 = !DILocation(line: 7169, column: 13, scope: !574)
!6597 = !DILocation(line: 7171, column: 8, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !574, file: !3, line: 7171, column: 7)
!6599 = !DILocation(line: 7171, column: 7, scope: !574)
!6600 = !DILocation(line: 7173, column: 46, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 7172, column: 5)
!6602 = !DILocation(line: 7173, column: 34, scope: !6601)
!6603 = !DILocation(line: 7173, column: 15, scope: !6601)
!6604 = !DILocation(line: 7174, column: 22, scope: !6601)
!6605 = !DILocation(line: 7174, column: 6, scope: !6601)
!6606 = !DILocation(line: 7174, column: 20, scope: !6601)
!6607 = !DILocation(line: 7175, column: 17, scope: !6601)
!6608 = !DILocation(line: 7175, column: 31, scope: !6601)
!6609 = !DILocation(line: 7175, column: 5, scope: !6601)
!6610 = !DILocation(line: 7176, column: 5, scope: !6601)
!6611 = !DILocation(line: 7179, column: 9, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 7179, column: 9)
!6613 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 7178, column: 5)
!6614 = !DILocation(line: 7179, column: 25, scope: !6612)
!6615 = !DILocation(line: 7179, column: 23, scope: !6612)
!6616 = !DILocation(line: 7179, column: 9, scope: !6613)
!6617 = !DILocation(line: 7181, column: 31, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 7180, column: 7)
!6619 = !DILocation(line: 7181, column: 42, scope: !6618)
!6620 = !DILocation(line: 7181, column: 18, scope: !6618)
!6621 = !DILocation(line: 7181, column: 16, scope: !6618)
!6622 = !DILocation(line: 7182, column: 12, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 7182, column: 11)
!6624 = !DILocation(line: 7182, column: 11, scope: !6618)
!6625 = !DILocation(line: 7184, column: 8, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 7183, column: 9)
!6627 = !DILocation(line: 7184, column: 2, scope: !6626)
!6628 = !DILocation(line: 7185, column: 50, scope: !6626)
!6629 = !DILocation(line: 7185, column: 38, scope: !6626)
!6630 = !DILocation(line: 7185, column: 19, scope: !6626)
!6631 = !DILocation(line: 7186, column: 9, scope: !6626)
!6632 = !DILocation(line: 7188, column: 21, scope: !6623)
!6633 = !DILocation(line: 7188, column: 19, scope: !6623)
!6634 = !DILocation(line: 7190, column: 19, scope: !6618)
!6635 = !DILocation(line: 7190, column: 33, scope: !6618)
!6636 = !DILocation(line: 7190, column: 7, scope: !6618)
!6637 = !DILocation(line: 7191, column: 7, scope: !6618)
!6638 = !DILocation(line: 7194, column: 8, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !574, file: !3, line: 7194, column: 7)
!6640 = !DILocation(line: 7194, column: 7, scope: !574)
!6641 = !DILocation(line: 7196, column: 5, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 7195, column: 5)
!6643 = !DILocation(line: 7197, column: 5, scope: !6642)
!6644 = !DILocation(line: 7199, column: 19, scope: !574)
!6645 = !DILocation(line: 7199, column: 17, scope: !574)
!6646 = !DILocation(line: 7200, column: 20, scope: !574)
!6647 = !DILocation(line: 7200, column: 4, scope: !574)
!6648 = !DILocation(line: 7200, column: 18, scope: !574)
!6649 = !DILocation(line: 7202, column: 3, scope: !574)
!6650 = !DILocation(line: 7203, column: 3, scope: !574)
!6651 = distinct !DISubprogram(name: "extractImageSection", scope: !3, file: !3, line: 6510, type: !6652, scopeLine: 6512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{!110, !542, !2772, !106, !106}
!6654 = !DILocalVariable(name: "image", arg: 1, scope: !6651, file: !3, line: 6510, type: !542)
!6655 = !DILocation(line: 6510, column: 40, scope: !6651)
!6656 = !DILocalVariable(name: "section", arg: 2, scope: !6651, file: !3, line: 6510, type: !2772)
!6657 = !DILocation(line: 6510, column: 63, scope: !6651)
!6658 = !DILocalVariable(name: "src_buff", arg: 3, scope: !6651, file: !3, line: 6511, type: !106)
!6659 = !DILocation(line: 6511, column: 36, scope: !6651)
!6660 = !DILocalVariable(name: "sect_buff", arg: 4, scope: !6651, file: !3, line: 6511, type: !106)
!6661 = !DILocation(line: 6511, column: 61, scope: !6651)
!6662 = !DILocalVariable(name: "bytebuff1", scope: !6651, file: !3, line: 6513, type: !107)
!6663 = !DILocation(line: 6513, column: 19, scope: !6651)
!6664 = !DILocalVariable(name: "bytebuff2", scope: !6651, file: !3, line: 6513, type: !107)
!6665 = !DILocation(line: 6513, column: 30, scope: !6651)
!6666 = !DILocalVariable(name: "src", scope: !6651, file: !3, line: 6514, type: !106)
!6667 = !DILocation(line: 6514, column: 19, scope: !6651)
!6668 = !DILocalVariable(name: "dst", scope: !6651, file: !3, line: 6514, type: !106)
!6669 = !DILocation(line: 6514, column: 25, scope: !6651)
!6670 = !DILocalVariable(name: "img_width", scope: !6651, file: !3, line: 6516, type: !105)
!6671 = !DILocation(line: 6516, column: 13, scope: !6651)
!6672 = !DILocalVariable(name: "img_length", scope: !6651, file: !3, line: 6516, type: !105)
!6673 = !DILocation(line: 6516, column: 24, scope: !6651)
!6674 = !DILocalVariable(name: "img_rowsize", scope: !6651, file: !3, line: 6516, type: !105)
!6675 = !DILocation(line: 6516, column: 36, scope: !6651)
!6676 = !DILocalVariable(name: "j", scope: !6651, file: !3, line: 6517, type: !105)
!6677 = !DILocation(line: 6517, column: 13, scope: !6651)
!6678 = !DILocalVariable(name: "shift1", scope: !6651, file: !3, line: 6517, type: !105)
!6679 = !DILocation(line: 6517, column: 16, scope: !6651)
!6680 = !DILocalVariable(name: "shift2", scope: !6651, file: !3, line: 6517, type: !105)
!6681 = !DILocation(line: 6517, column: 24, scope: !6651)
!6682 = !DILocalVariable(name: "trailing_bits", scope: !6651, file: !3, line: 6517, type: !105)
!6683 = !DILocation(line: 6517, column: 32, scope: !6651)
!6684 = !DILocalVariable(name: "row", scope: !6651, file: !3, line: 6518, type: !105)
!6685 = !DILocation(line: 6518, column: 13, scope: !6651)
!6686 = !DILocalVariable(name: "first_row", scope: !6651, file: !3, line: 6518, type: !105)
!6687 = !DILocation(line: 6518, column: 18, scope: !6651)
!6688 = !DILocalVariable(name: "last_row", scope: !6651, file: !3, line: 6518, type: !105)
!6689 = !DILocation(line: 6518, column: 29, scope: !6651)
!6690 = !DILocalVariable(name: "first_col", scope: !6651, file: !3, line: 6518, type: !105)
!6691 = !DILocation(line: 6518, column: 39, scope: !6651)
!6692 = !DILocalVariable(name: "last_col", scope: !6651, file: !3, line: 6518, type: !105)
!6693 = !DILocation(line: 6518, column: 50, scope: !6651)
!6694 = !DILocalVariable(name: "src_offset", scope: !6651, file: !3, line: 6519, type: !105)
!6695 = !DILocation(line: 6519, column: 13, scope: !6651)
!6696 = !DILocalVariable(name: "dst_offset", scope: !6651, file: !3, line: 6519, type: !105)
!6697 = !DILocation(line: 6519, column: 25, scope: !6651)
!6698 = !DILocalVariable(name: "row_offset", scope: !6651, file: !3, line: 6519, type: !105)
!6699 = !DILocation(line: 6519, column: 37, scope: !6651)
!6700 = !DILocalVariable(name: "col_offset", scope: !6651, file: !3, line: 6519, type: !105)
!6701 = !DILocation(line: 6519, column: 49, scope: !6651)
!6702 = !DILocalVariable(name: "offset1", scope: !6651, file: !3, line: 6520, type: !105)
!6703 = !DILocation(line: 6520, column: 13, scope: !6651)
!6704 = !DILocalVariable(name: "offset2", scope: !6651, file: !3, line: 6520, type: !105)
!6705 = !DILocation(line: 6520, column: 22, scope: !6651)
!6706 = !DILocalVariable(name: "full_bytes", scope: !6651, file: !3, line: 6520, type: !105)
!6707 = !DILocation(line: 6520, column: 31, scope: !6651)
!6708 = !DILocalVariable(name: "sect_width", scope: !6651, file: !3, line: 6521, type: !105)
!6709 = !DILocation(line: 6521, column: 13, scope: !6651)
!6710 = !DILocalVariable(name: "sect_length", scope: !6651, file: !3, line: 6521, type: !105)
!6711 = !DILocation(line: 6521, column: 25, scope: !6651)
!6712 = !DILocalVariable(name: "bps", scope: !6651, file: !3, line: 6522, type: !103)
!6713 = !DILocation(line: 6522, column: 13, scope: !6651)
!6714 = !DILocalVariable(name: "spp", scope: !6651, file: !3, line: 6522, type: !103)
!6715 = !DILocation(line: 6522, column: 18, scope: !6651)
!6716 = !DILocation(line: 6530, column: 15, scope: !6651)
!6717 = !DILocation(line: 6530, column: 22, scope: !6651)
!6718 = !DILocation(line: 6530, column: 13, scope: !6651)
!6719 = !DILocation(line: 6531, column: 16, scope: !6651)
!6720 = !DILocation(line: 6531, column: 23, scope: !6651)
!6721 = !DILocation(line: 6531, column: 14, scope: !6651)
!6722 = !DILocation(line: 6532, column: 9, scope: !6651)
!6723 = !DILocation(line: 6532, column: 16, scope: !6651)
!6724 = !DILocation(line: 6532, column: 7, scope: !6651)
!6725 = !DILocation(line: 6533, column: 9, scope: !6651)
!6726 = !DILocation(line: 6533, column: 16, scope: !6651)
!6727 = !DILocation(line: 6533, column: 7, scope: !6651)
!6728 = !DILocation(line: 6535, column: 9, scope: !6651)
!6729 = !DILocation(line: 6535, column: 7, scope: !6651)
!6730 = !DILocation(line: 6536, column: 9, scope: !6651)
!6731 = !DILocation(line: 6536, column: 7, scope: !6651)
!6732 = !DILocation(line: 6537, column: 14, scope: !6651)
!6733 = !DILocation(line: 6538, column: 14, scope: !6651)
!6734 = !DILocation(line: 6552, column: 15, scope: !6651)
!6735 = !DILocation(line: 6552, column: 24, scope: !6651)
!6736 = !DILocation(line: 6552, column: 13, scope: !6651)
!6737 = !DILocation(line: 6553, column: 15, scope: !6651)
!6738 = !DILocation(line: 6553, column: 24, scope: !6651)
!6739 = !DILocation(line: 6553, column: 13, scope: !6651)
!6740 = !DILocation(line: 6554, column: 15, scope: !6651)
!6741 = !DILocation(line: 6554, column: 24, scope: !6651)
!6742 = !DILocation(line: 6554, column: 13, scope: !6651)
!6743 = !DILocation(line: 6555, column: 15, scope: !6651)
!6744 = !DILocation(line: 6555, column: 24, scope: !6651)
!6745 = !DILocation(line: 6555, column: 13, scope: !6651)
!6746 = !DILocation(line: 6557, column: 16, scope: !6651)
!6747 = !DILocation(line: 6557, column: 27, scope: !6651)
!6748 = !DILocation(line: 6557, column: 25, scope: !6651)
!6749 = !DILocation(line: 6557, column: 37, scope: !6651)
!6750 = !DILocation(line: 6557, column: 14, scope: !6651)
!6751 = !DILocation(line: 6558, column: 17, scope: !6651)
!6752 = !DILocation(line: 6558, column: 28, scope: !6651)
!6753 = !DILocation(line: 6558, column: 26, scope: !6651)
!6754 = !DILocation(line: 6558, column: 38, scope: !6651)
!6755 = !DILocation(line: 6558, column: 15, scope: !6651)
!6756 = !DILocation(line: 6559, column: 19, scope: !6651)
!6757 = !DILocation(line: 6559, column: 31, scope: !6651)
!6758 = !DILocation(line: 6559, column: 29, scope: !6651)
!6759 = !DILocation(line: 6559, column: 35, scope: !6651)
!6760 = !DILocation(line: 6559, column: 40, scope: !6651)
!6761 = !DILocation(line: 6559, column: 47, scope: !6651)
!6762 = !DILocation(line: 6559, column: 45, scope: !6651)
!6763 = !DILocation(line: 6559, column: 15, scope: !6651)
!6764 = !DILocation(line: 6560, column: 17, scope: !6651)
!6765 = !DILocation(line: 6560, column: 30, scope: !6651)
!6766 = !DILocation(line: 6560, column: 28, scope: !6651)
!6767 = !DILocation(line: 6560, column: 36, scope: !6651)
!6768 = !DILocation(line: 6560, column: 34, scope: !6651)
!6769 = !DILocation(line: 6560, column: 41, scope: !6651)
!6770 = !DILocation(line: 6560, column: 14, scope: !6651)
!6771 = !DILocation(line: 6561, column: 20, scope: !6651)
!6772 = !DILocation(line: 6561, column: 33, scope: !6651)
!6773 = !DILocation(line: 6561, column: 31, scope: !6651)
!6774 = !DILocation(line: 6561, column: 38, scope: !6651)
!6775 = !DILocation(line: 6561, column: 17, scope: !6651)
!6776 = !DILocation(line: 6572, column: 8, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 6572, column: 7)
!6778 = !DILocation(line: 6572, column: 12, scope: !6777)
!6779 = !DILocation(line: 6572, column: 17, scope: !6777)
!6780 = !DILocation(line: 6572, column: 7, scope: !6651)
!6781 = !DILocation(line: 6574, column: 18, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 6573, column: 5)
!6783 = !DILocation(line: 6574, column: 30, scope: !6782)
!6784 = !DILocation(line: 6574, column: 28, scope: !6782)
!6785 = !DILocation(line: 6574, column: 36, scope: !6782)
!6786 = !DILocation(line: 6574, column: 34, scope: !6782)
!6787 = !DILocation(line: 6574, column: 40, scope: !6782)
!6788 = !DILocation(line: 6574, column: 16, scope: !6782)
!6789 = !DILocation(line: 6575, column: 16, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 6575, column: 5)
!6791 = !DILocation(line: 6575, column: 14, scope: !6790)
!6792 = !DILocation(line: 6575, column: 10, scope: !6790)
!6793 = !DILocation(line: 6575, column: 27, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 6575, column: 5)
!6795 = !DILocation(line: 6575, column: 34, scope: !6794)
!6796 = !DILocation(line: 6575, column: 31, scope: !6794)
!6797 = !DILocation(line: 6575, column: 5, scope: !6790)
!6798 = !DILocation(line: 6578, column: 20, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 6576, column: 7)
!6800 = !DILocation(line: 6578, column: 26, scope: !6799)
!6801 = !DILocation(line: 6578, column: 24, scope: !6799)
!6802 = !DILocation(line: 6578, column: 18, scope: !6799)
!6803 = !DILocation(line: 6579, column: 20, scope: !6799)
!6804 = !DILocation(line: 6579, column: 33, scope: !6799)
!6805 = !DILocation(line: 6579, column: 31, scope: !6799)
!6806 = !DILocation(line: 6579, column: 18, scope: !6799)
!6807 = !DILocation(line: 6584, column: 20, scope: !6799)
!6808 = !DILocation(line: 6584, column: 32, scope: !6799)
!6809 = !DILocation(line: 6584, column: 30, scope: !6799)
!6810 = !DILocation(line: 6584, column: 44, scope: !6799)
!6811 = !DILocation(line: 6584, column: 55, scope: !6799)
!6812 = !DILocation(line: 6584, column: 53, scope: !6799)
!6813 = !DILocation(line: 6584, column: 67, scope: !6799)
!6814 = !DILocation(line: 6584, column: 7, scope: !6799)
!6815 = !DILocation(line: 6585, column: 21, scope: !6799)
!6816 = !DILocation(line: 6585, column: 18, scope: !6799)
!6817 = !DILocation(line: 6586, column: 7, scope: !6799)
!6818 = !DILocation(line: 6575, column: 47, scope: !6794)
!6819 = !DILocation(line: 6575, column: 5, scope: !6794)
!6820 = distinct !{!6820, !6797, !6821}
!6821 = !DILocation(line: 6586, column: 7, scope: !6790)
!6822 = !DILocation(line: 6587, column: 5, scope: !6782)
!6823 = !DILocation(line: 6590, column: 15, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 6589, column: 5)
!6825 = !DILocation(line: 6590, column: 23, scope: !6824)
!6826 = !DILocation(line: 6590, column: 35, scope: !6824)
!6827 = !DILocation(line: 6590, column: 33, scope: !6824)
!6828 = !DILocation(line: 6590, column: 40, scope: !6824)
!6829 = !DILocation(line: 6590, column: 19, scope: !6824)
!6830 = !DILocation(line: 6590, column: 13, scope: !6824)
!6831 = !DILocation(line: 6591, column: 15, scope: !6824)
!6832 = !DILocation(line: 6591, column: 23, scope: !6824)
!6833 = !DILocation(line: 6591, column: 34, scope: !6824)
!6834 = !DILocation(line: 6591, column: 32, scope: !6824)
!6835 = !DILocation(line: 6591, column: 39, scope: !6824)
!6836 = !DILocation(line: 6591, column: 19, scope: !6824)
!6837 = !DILocation(line: 6591, column: 13, scope: !6824)
!6838 = !DILocation(line: 6592, column: 16, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 6592, column: 5)
!6840 = !DILocation(line: 6592, column: 14, scope: !6839)
!6841 = !DILocation(line: 6592, column: 10, scope: !6839)
!6842 = !DILocation(line: 6592, column: 27, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 6592, column: 5)
!6844 = !DILocation(line: 6592, column: 34, scope: !6843)
!6845 = !DILocation(line: 6592, column: 31, scope: !6843)
!6846 = !DILocation(line: 6592, column: 5, scope: !6839)
!6847 = !DILocation(line: 6595, column: 20, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 6593, column: 7)
!6849 = !DILocation(line: 6595, column: 26, scope: !6848)
!6850 = !DILocation(line: 6595, column: 24, scope: !6848)
!6851 = !DILocation(line: 6595, column: 18, scope: !6848)
!6852 = !DILocation(line: 6596, column: 17, scope: !6848)
!6853 = !DILocation(line: 6596, column: 31, scope: !6848)
!6854 = !DILocation(line: 6596, column: 43, scope: !6848)
!6855 = !DILocation(line: 6596, column: 41, scope: !6848)
!6856 = !DILocation(line: 6596, column: 47, scope: !6848)
!6857 = !DILocation(line: 6596, column: 28, scope: !6848)
!6858 = !DILocation(line: 6596, column: 15, scope: !6848)
!6859 = !DILocation(line: 6597, column: 17, scope: !6848)
!6860 = !DILocation(line: 6597, column: 31, scope: !6848)
!6861 = !DILocation(line: 6597, column: 42, scope: !6848)
!6862 = !DILocation(line: 6597, column: 40, scope: !6848)
!6863 = !DILocation(line: 6597, column: 46, scope: !6848)
!6864 = !DILocation(line: 6597, column: 28, scope: !6848)
!6865 = !DILocation(line: 6597, column: 15, scope: !6848)
!6866 = !DILocation(line: 6617, column: 29, scope: !6848)
!6867 = !DILocation(line: 6617, column: 17, scope: !6848)
!6868 = !DILocation(line: 6618, column: 11, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 6618, column: 11)
!6870 = !DILocation(line: 6618, column: 18, scope: !6869)
!6871 = !DILocation(line: 6618, column: 11, scope: !6848)
!6872 = !DILocation(line: 6620, column: 15, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 6619, column: 9)
!6874 = !DILocation(line: 6620, column: 27, scope: !6873)
!6875 = !DILocation(line: 6620, column: 25, scope: !6873)
!6876 = !DILocation(line: 6620, column: 39, scope: !6873)
!6877 = !DILocation(line: 6620, column: 50, scope: !6873)
!6878 = !DILocation(line: 6620, column: 48, scope: !6873)
!6879 = !DILocation(line: 6620, column: 59, scope: !6873)
!6880 = !DILocation(line: 6620, column: 2, scope: !6873)
!6881 = !DILocation(line: 6634, column: 23, scope: !6873)
!6882 = !DILocation(line: 6634, column: 20, scope: !6873)
!6883 = !DILocation(line: 6636, column: 13, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 6636, column: 13)
!6885 = !DILocation(line: 6636, column: 27, scope: !6884)
!6886 = !DILocation(line: 6636, column: 13, scope: !6873)
!6887 = !DILocation(line: 6638, column: 16, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 6637, column: 11)
!6889 = !DILocation(line: 6638, column: 25, scope: !6888)
!6890 = !DILocation(line: 6638, column: 64, scope: !6888)
!6891 = !DILocation(line: 6638, column: 62, scope: !6888)
!6892 = !DILocation(line: 6638, column: 56, scope: !6888)
!6893 = !DILocation(line: 6638, column: 34, scope: !6888)
!6894 = !DILocation(line: 6638, column: 14, scope: !6888)
!6895 = !DILocation(line: 6639, column: 35, scope: !6888)
!6896 = !DILocation(line: 6639, column: 11, scope: !6888)
!6897 = !DILocation(line: 6639, column: 21, scope: !6888)
!6898 = !DILocation(line: 6639, column: 33, scope: !6888)
!6899 = !DILocation(line: 6651, column: 21, scope: !6888)
!6900 = !DILocation(line: 6652, column: 11, scope: !6888)
!6901 = !DILocation(line: 6653, column: 9, scope: !6873)
!6902 = !DILocation(line: 6659, column: 16, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 6659, column: 9)
!6904 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 6655, column: 9)
!6905 = !DILocation(line: 6659, column: 14, scope: !6903)
!6906 = !DILocation(line: 6659, column: 21, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 6659, column: 9)
!6908 = !DILocation(line: 6659, column: 26, scope: !6907)
!6909 = !DILocation(line: 6659, column: 23, scope: !6907)
!6910 = !DILocation(line: 6659, column: 9, scope: !6903)
!6911 = !DILocation(line: 6661, column: 16, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 6660, column: 11)
!6913 = !DILocation(line: 6661, column: 25, scope: !6912)
!6914 = !DILocation(line: 6661, column: 35, scope: !6912)
!6915 = !DILocation(line: 6661, column: 33, scope: !6912)
!6916 = !DILocation(line: 6661, column: 63, scope: !6912)
!6917 = !DILocation(line: 6661, column: 60, scope: !6912)
!6918 = !DILocation(line: 6661, column: 38, scope: !6912)
!6919 = !DILocation(line: 6661, column: 14, scope: !6912)
!6920 = !DILocation(line: 6662, column: 16, scope: !6912)
!6921 = !DILocation(line: 6662, column: 25, scope: !6912)
!6922 = !DILocation(line: 6662, column: 35, scope: !6912)
!6923 = !DILocation(line: 6662, column: 33, scope: !6912)
!6924 = !DILocation(line: 6662, column: 37, scope: !6912)
!6925 = !DILocation(line: 6662, column: 72, scope: !6912)
!6926 = !DILocation(line: 6662, column: 70, scope: !6912)
!6927 = !DILocation(line: 6662, column: 64, scope: !6912)
!6928 = !DILocation(line: 6662, column: 42, scope: !6912)
!6929 = !DILocation(line: 6662, column: 14, scope: !6912)
!6930 = !DILocation(line: 6663, column: 40, scope: !6912)
!6931 = !DILocation(line: 6663, column: 53, scope: !6912)
!6932 = !DILocation(line: 6663, column: 50, scope: !6912)
!6933 = !DILocation(line: 6663, column: 64, scope: !6912)
!6934 = !DILocation(line: 6663, column: 82, scope: !6912)
!6935 = !DILocation(line: 6663, column: 80, scope: !6912)
!6936 = !DILocation(line: 6663, column: 74, scope: !6912)
!6937 = !DILocation(line: 6663, column: 61, scope: !6912)
!6938 = !DILocation(line: 6663, column: 39, scope: !6912)
!6939 = !DILocation(line: 6663, column: 11, scope: !6912)
!6940 = !DILocation(line: 6663, column: 21, scope: !6912)
!6941 = !DILocation(line: 6663, column: 34, scope: !6912)
!6942 = !DILocation(line: 6663, column: 32, scope: !6912)
!6943 = !DILocation(line: 6663, column: 37, scope: !6912)
!6944 = !DILocation(line: 6664, column: 11, scope: !6912)
!6945 = !DILocation(line: 6659, column: 39, scope: !6907)
!6946 = !DILocation(line: 6659, column: 9, scope: !6907)
!6947 = distinct !{!6947, !6910, !6948}
!6948 = !DILocation(line: 6664, column: 11, scope: !6903)
!6949 = !DILocation(line: 6676, column: 23, scope: !6904)
!6950 = !DILocation(line: 6676, column: 20, scope: !6904)
!6951 = !DILocation(line: 6678, column: 13, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 6678, column: 13)
!6953 = !DILocation(line: 6678, column: 27, scope: !6952)
!6954 = !DILocation(line: 6678, column: 13, scope: !6904)
!6955 = !DILocation(line: 6683, column: 8, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 6683, column: 8)
!6957 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 6679, column: 11)
!6958 = !DILocation(line: 6683, column: 17, scope: !6956)
!6959 = !DILocation(line: 6683, column: 15, scope: !6956)
!6960 = !DILocation(line: 6683, column: 8, scope: !6957)
!6961 = !DILocation(line: 6685, column: 18, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 6684, column: 13)
!6963 = !DILocation(line: 6685, column: 27, scope: !6962)
!6964 = !DILocation(line: 6685, column: 37, scope: !6962)
!6965 = !DILocation(line: 6685, column: 35, scope: !6962)
!6966 = !DILocation(line: 6685, column: 79, scope: !6962)
!6967 = !DILocation(line: 6685, column: 77, scope: !6962)
!6968 = !DILocation(line: 6685, column: 71, scope: !6962)
!6969 = !DILocation(line: 6685, column: 49, scope: !6962)
!6970 = !DILocation(line: 6685, column: 16, scope: !6962)
!6971 = !DILocation(line: 6686, column: 25, scope: !6962)
!6972 = !DILocation(line: 6686, column: 60, scope: !6962)
!6973 = !DILocation(line: 6686, column: 57, scope: !6962)
!6974 = !DILocation(line: 6686, column: 35, scope: !6962)
!6975 = !DILocation(line: 6686, column: 23, scope: !6962)
!6976 = !DILocation(line: 6687, column: 37, scope: !6962)
!6977 = !DILocation(line: 6687, column: 13, scope: !6962)
!6978 = !DILocation(line: 6687, column: 23, scope: !6962)
!6979 = !DILocation(line: 6687, column: 35, scope: !6962)
!6980 = !DILocation(line: 6691, column: 13, scope: !6962)
!6981 = !DILocation(line: 6694, column: 10, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 6694, column: 10)
!6983 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 6693, column: 13)
!6984 = !DILocation(line: 6694, column: 19, scope: !6982)
!6985 = !DILocation(line: 6694, column: 17, scope: !6982)
!6986 = !DILocation(line: 6694, column: 10, scope: !6983)
!6987 = !DILocation(line: 6696, column: 51, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 6695, column: 15)
!6989 = !DILocation(line: 6696, column: 60, scope: !6988)
!6990 = !DILocation(line: 6696, column: 58, scope: !6988)
!6991 = !DILocation(line: 6696, column: 67, scope: !6988)
!6992 = !DILocation(line: 6696, column: 47, scope: !6988)
!6993 = !DILocation(line: 6696, column: 27, scope: !6988)
!6994 = !DILocation(line: 6696, column: 25, scope: !6988)
!6995 = !DILocation(line: 6697, column: 33, scope: !6988)
!6996 = !DILocation(line: 6697, column: 8, scope: !6988)
!6997 = !DILocation(line: 6697, column: 18, scope: !6988)
!6998 = !DILocation(line: 6697, column: 30, scope: !6988)
!6999 = !DILocation(line: 6701, column: 15, scope: !6988)
!7000 = !DILocation(line: 6707, column: 4, scope: !6957)
!7001 = !DILocation(line: 6719, column: 19, scope: !6904)
!7002 = !DILocation(line: 6721, column: 7, scope: !6848)
!7003 = !DILocation(line: 6592, column: 47, scope: !6843)
!7004 = !DILocation(line: 6592, column: 5, scope: !6843)
!7005 = distinct !{!7005, !6846, !7006}
!7006 = !DILocation(line: 6721, column: 7, scope: !6839)
!7007 = !DILocation(line: 6724, column: 3, scope: !6651)
!7008 = distinct !DISubprogram(name: "writeSingleSection", scope: !3, file: !3, line: 6893, type: !7009, scopeLine: 6897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{!110, !193, !193, !542, !557, !105, !105, !120, !120, !106}
!7011 = !DILocalVariable(name: "in", arg: 1, scope: !7008, file: !3, line: 6893, type: !193)
!7012 = !DILocation(line: 6893, column: 26, scope: !7008)
!7013 = !DILocalVariable(name: "out", arg: 2, scope: !7008, file: !3, line: 6893, type: !193)
!7014 = !DILocation(line: 6893, column: 36, scope: !7008)
!7015 = !DILocalVariable(name: "image", arg: 3, scope: !7008, file: !3, line: 6893, type: !542)
!7016 = !DILocation(line: 6893, column: 60, scope: !7008)
!7017 = !DILocalVariable(name: "dump", arg: 4, scope: !7008, file: !3, line: 6894, type: !557)
!7018 = !DILocation(line: 6894, column: 38, scope: !7008)
!7019 = !DILocalVariable(name: "width", arg: 5, scope: !7008, file: !3, line: 6894, type: !105)
!7020 = !DILocation(line: 6894, column: 51, scope: !7008)
!7021 = !DILocalVariable(name: "length", arg: 6, scope: !7008, file: !3, line: 6894, type: !105)
!7022 = !DILocation(line: 6894, column: 65, scope: !7008)
!7023 = !DILocalVariable(name: "hres", arg: 7, scope: !7008, file: !3, line: 6895, type: !120)
!7024 = !DILocation(line: 6895, column: 27, scope: !7008)
!7025 = !DILocalVariable(name: "vres", arg: 8, scope: !7008, file: !3, line: 6895, type: !120)
!7026 = !DILocation(line: 6895, column: 40, scope: !7008)
!7027 = !DILocalVariable(name: "sect_buff", arg: 9, scope: !7008, file: !3, line: 6896, type: !106)
!7028 = !DILocation(line: 6896, column: 35, scope: !7008)
!7029 = !DILocalVariable(name: "bps", scope: !7008, file: !3, line: 6898, type: !103)
!7030 = !DILocation(line: 6898, column: 10, scope: !7008)
!7031 = !DILocalVariable(name: "spp", scope: !7008, file: !3, line: 6898, type: !103)
!7032 = !DILocation(line: 6898, column: 15, scope: !7008)
!7033 = !DILocalVariable(name: "input_compression", scope: !7008, file: !3, line: 6899, type: !103)
!7034 = !DILocation(line: 6899, column: 10, scope: !7008)
!7035 = !DILocalVariable(name: "input_photometric", scope: !7008, file: !3, line: 6899, type: !103)
!7036 = !DILocation(line: 6899, column: 29, scope: !7008)
!7037 = !DILocalVariable(name: "input_planar", scope: !7008, file: !3, line: 6900, type: !103)
!7038 = !DILocation(line: 6900, column: 10, scope: !7008)
!7039 = !DILocalVariable(name: "p", scope: !7008, file: !3, line: 6901, type: !5387)
!7040 = !DILocation(line: 6901, column: 17, scope: !7008)
!7041 = !DILocation(line: 6906, column: 23, scope: !7008)
!7042 = !DILocation(line: 6906, column: 30, scope: !7008)
!7043 = !DILocation(line: 6906, column: 21, scope: !7008)
!7044 = !DILocation(line: 6907, column: 23, scope: !7008)
!7045 = !DILocation(line: 6907, column: 30, scope: !7008)
!7046 = !DILocation(line: 6907, column: 21, scope: !7008)
!7047 = !DILocation(line: 6909, column: 9, scope: !7008)
!7048 = !DILocation(line: 6909, column: 16, scope: !7008)
!7049 = !DILocation(line: 6909, column: 7, scope: !7008)
!7050 = !DILocation(line: 6910, column: 9, scope: !7008)
!7051 = !DILocation(line: 6910, column: 16, scope: !7008)
!7052 = !DILocation(line: 6910, column: 7, scope: !7008)
!7053 = !DILocation(line: 6911, column: 16, scope: !7008)
!7054 = !DILocation(line: 6911, column: 41, scope: !7008)
!7055 = !DILocation(line: 6911, column: 3, scope: !7008)
!7056 = !DILocation(line: 6912, column: 16, scope: !7008)
!7057 = !DILocation(line: 6912, column: 42, scope: !7008)
!7058 = !DILocation(line: 6912, column: 3, scope: !7008)
!7059 = !DILocation(line: 6913, column: 16, scope: !7008)
!7060 = !DILocation(line: 6913, column: 44, scope: !7008)
!7061 = !DILocation(line: 6913, column: 3, scope: !7008)
!7062 = !DILocation(line: 6914, column: 16, scope: !7008)
!7063 = !DILocation(line: 6914, column: 46, scope: !7008)
!7064 = !DILocation(line: 6914, column: 3, scope: !7008)
!7065 = !DILocation(line: 6926, column: 7, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 6926, column: 7)
!7067 = !DILocation(line: 6926, column: 19, scope: !7066)
!7068 = !DILocation(line: 6926, column: 7, scope: !7008)
!7069 = !DILocation(line: 6927, column: 18, scope: !7066)
!7070 = !DILocation(line: 6927, column: 44, scope: !7066)
!7071 = !DILocation(line: 6927, column: 5, scope: !7066)
!7072 = !DILocation(line: 6930, column: 9, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 6930, column: 9)
!7074 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 6929, column: 5)
!7075 = !DILocation(line: 6930, column: 27, scope: !7073)
!7076 = !DILocation(line: 6930, column: 9, scope: !7074)
!7077 = !DILocation(line: 6932, column: 19, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 6931, column: 7)
!7079 = !DILocation(line: 6933, column: 21, scope: !7078)
!7080 = !DILocation(line: 6934, column: 20, scope: !7078)
!7081 = !DILocation(line: 6934, column: 7, scope: !7078)
!7082 = !DILocation(line: 6935, column: 7, scope: !7078)
!7083 = !DILocation(line: 6937, column: 20, scope: !7073)
!7084 = !DILocation(line: 6937, column: 46, scope: !7073)
!7085 = !DILocation(line: 6937, column: 7, scope: !7073)
!7086 = !DILocation(line: 6940, column: 7, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 6940, column: 7)
!7088 = !DILocation(line: 6940, column: 19, scope: !7087)
!7089 = !DILocation(line: 6940, column: 7, scope: !7008)
!7090 = !DILocation(line: 6942, column: 10, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 6942, column: 9)
!7092 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 6941, column: 5)
!7093 = !DILocation(line: 6942, column: 28, scope: !7091)
!7094 = !DILocation(line: 6942, column: 52, scope: !7091)
!7095 = !DILocation(line: 6943, column: 10, scope: !7091)
!7096 = !DILocation(line: 6943, column: 28, scope: !7091)
!7097 = !DILocation(line: 6942, column: 9, scope: !7092)
!7098 = !DILocation(line: 6947, column: 5, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 6944, column: 7)
!7100 = !DILocation(line: 6947, column: 23, scope: !7099)
!7101 = !DILocation(line: 6947, column: 4, scope: !7099)
!7102 = !DILocation(line: 6945, column: 7, scope: !7099)
!7103 = !DILocation(line: 6949, column: 7, scope: !7099)
!7104 = !DILocation(line: 6951, column: 10, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 6951, column: 9)
!7106 = !DILocation(line: 6951, column: 28, scope: !7105)
!7107 = !DILocation(line: 6951, column: 48, scope: !7105)
!7108 = !DILocation(line: 6952, column: 3, scope: !7105)
!7109 = !DILocation(line: 6952, column: 17, scope: !7105)
!7110 = !DILocation(line: 6951, column: 9, scope: !7092)
!7111 = !DILocation(line: 6953, column: 20, scope: !7105)
!7112 = !DILocation(line: 6953, column: 7, scope: !7105)
!7113 = !DILocation(line: 6955, column: 15, scope: !7105)
!7114 = !DILocation(line: 6955, column: 41, scope: !7105)
!7115 = !DILocation(line: 6955, column: 2, scope: !7105)
!7116 = !DILocation(line: 6956, column: 5, scope: !7092)
!7117 = !DILocation(line: 6959, column: 9, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 6959, column: 9)
!7119 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 6958, column: 5)
!7120 = !DILocation(line: 6959, column: 21, scope: !7118)
!7121 = !DILocation(line: 6959, column: 43, scope: !7118)
!7122 = !DILocation(line: 6959, column: 46, scope: !7118)
!7123 = !DILocation(line: 6959, column: 58, scope: !7118)
!7124 = !DILocation(line: 6959, column: 9, scope: !7119)
!7125 = !DILocation(line: 6960, column: 20, scope: !7118)
!7126 = !DILocation(line: 6960, column: 46, scope: !7118)
!7127 = !DILocation(line: 6960, column: 50, scope: !7118)
!7128 = !DILocation(line: 6960, column: 7, scope: !7118)
!7129 = !DILocation(line: 6963, column: 20, scope: !7118)
!7130 = !DILocation(line: 6963, column: 46, scope: !7118)
!7131 = !DILocation(line: 6963, column: 53, scope: !7118)
!7132 = !DILocation(line: 6963, column: 7, scope: !7118)
!7133 = !DILocation(line: 6972, column: 9, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 6972, column: 7)
!7135 = !DILocation(line: 6972, column: 27, scope: !7134)
!7136 = !DILocation(line: 6972, column: 48, scope: !7134)
!7137 = !DILocation(line: 6973, column: 9, scope: !7134)
!7138 = !DILocation(line: 6973, column: 27, scope: !7134)
!7139 = !DILocation(line: 6973, column: 52, scope: !7134)
!7140 = !DILocation(line: 6974, column: 9, scope: !7134)
!7141 = !DILocation(line: 6974, column: 21, scope: !7134)
!7142 = !DILocation(line: 6974, column: 44, scope: !7134)
!7143 = !DILocation(line: 6975, column: 9, scope: !7134)
!7144 = !DILocation(line: 6975, column: 21, scope: !7134)
!7145 = !DILocation(line: 6972, column: 7, scope: !7008)
!7146 = !DILocation(line: 6977, column: 5, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 6976, column: 5)
!7148 = !DILocation(line: 6979, column: 5, scope: !7147)
!7149 = !DILocation(line: 6982, column: 7, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 6982, column: 7)
!7151 = !DILocation(line: 6982, column: 17, scope: !7150)
!7152 = !DILocation(line: 6982, column: 7, scope: !7008)
!7153 = !DILocation(line: 6983, column: 18, scope: !7150)
!7154 = !DILocation(line: 6983, column: 42, scope: !7150)
!7155 = !DILocation(line: 6983, column: 5, scope: !7150)
!7156 = !DILocation(line: 6985, column: 5, scope: !7150)
!7157 = !DILocation(line: 6994, column: 16, scope: !7008)
!7158 = !DILocation(line: 6994, column: 42, scope: !7008)
!7159 = !DILocation(line: 6994, column: 49, scope: !7008)
!7160 = !DILocation(line: 6994, column: 3, scope: !7008)
!7161 = !DILocation(line: 7001, column: 7, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7001, column: 7)
!7163 = !DILocation(line: 7001, column: 16, scope: !7162)
!7164 = !DILocation(line: 7001, column: 7, scope: !7008)
!7165 = !DILocation(line: 7002, column: 28, scope: !7162)
!7166 = !DILocation(line: 7002, column: 16, scope: !7162)
!7167 = !DILocation(line: 7002, column: 14, scope: !7162)
!7168 = !DILocation(line: 7002, column: 5, scope: !7162)
!7169 = !DILocation(line: 7003, column: 7, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7003, column: 7)
!7171 = !DILocation(line: 7003, column: 7, scope: !7008)
!7172 = !DILocation(line: 7010, column: 9, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 7010, column: 9)
!7174 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 7003, column: 17)
!7175 = !DILocation(line: 7010, column: 19, scope: !7173)
!7176 = !DILocation(line: 7010, column: 9, scope: !7174)
!7177 = !DILocation(line: 7011, column: 20, scope: !7173)
!7178 = !DILocation(line: 7011, column: 7, scope: !7173)
!7179 = !DILocation(line: 7012, column: 9, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 7012, column: 9)
!7181 = !DILocation(line: 7012, column: 20, scope: !7180)
!7182 = !DILocation(line: 7012, column: 9, scope: !7174)
!7183 = !DILocation(line: 7013, column: 20, scope: !7180)
!7184 = !DILocation(line: 7013, column: 7, scope: !7180)
!7185 = !DILocation(line: 7015, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 7015, column: 9)
!7187 = !DILocation(line: 7015, column: 19, scope: !7186)
!7188 = !DILocation(line: 7015, column: 24, scope: !7186)
!7189 = !DILocation(line: 7015, column: 27, scope: !7186)
!7190 = !DILocation(line: 7015, column: 38, scope: !7186)
!7191 = !DILocation(line: 7015, column: 9, scope: !7174)
!7192 = !DILocation(line: 7016, column: 27, scope: !7186)
!7193 = !DILocation(line: 7016, column: 7, scope: !7186)
!7194 = !DILocation(line: 7017, column: 25, scope: !7174)
!7195 = !DILocation(line: 7017, column: 5, scope: !7174)
!7196 = !DILocation(line: 7018, column: 18, scope: !7174)
!7197 = !DILocation(line: 7018, column: 42, scope: !7174)
!7198 = !DILocation(line: 7018, column: 5, scope: !7174)
!7199 = !DILocation(line: 7019, column: 18, scope: !7174)
!7200 = !DILocation(line: 7019, column: 43, scope: !7174)
!7201 = !DILocation(line: 7019, column: 5, scope: !7174)
!7202 = !DILocation(line: 7020, column: 5, scope: !7174)
!7203 = !DILocation(line: 7026, column: 6, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 7026, column: 6)
!7205 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 7020, column: 12)
!7206 = !DILocation(line: 7026, column: 19, scope: !7204)
!7207 = !DILocation(line: 7026, column: 6, scope: !7205)
!7208 = !DILocation(line: 7028, column: 22, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 7028, column: 8)
!7210 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 7027, column: 11)
!7211 = !DILocation(line: 7028, column: 9, scope: !7209)
!7212 = !DILocation(line: 7028, column: 8, scope: !7210)
!7213 = !DILocation(line: 7029, column: 42, scope: !7209)
!7214 = !DILocation(line: 7029, column: 47, scope: !7209)
!7215 = !DILocation(line: 7029, column: 21, scope: !7209)
!7216 = !DILocation(line: 7029, column: 19, scope: !7209)
!7217 = !DILocation(line: 7029, column: 6, scope: !7209)
!7218 = !DILocation(line: 7030, column: 15, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 7030, column: 15)
!7220 = !DILocation(line: 7030, column: 27, scope: !7219)
!7221 = !DILocation(line: 7030, column: 15, scope: !7210)
!7222 = !DILocation(line: 7032, column: 12, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 7032, column: 12)
!7224 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 7031, column: 13)
!7225 = !DILocation(line: 7032, column: 27, scope: !7223)
!7226 = !DILocation(line: 7032, column: 25, scope: !7223)
!7227 = !DILocation(line: 7032, column: 12, scope: !7224)
!7228 = !DILocation(line: 7033, column: 23, scope: !7223)
!7229 = !DILocation(line: 7033, column: 21, scope: !7223)
!7230 = !DILocation(line: 7033, column: 8, scope: !7223)
!7231 = !DILocation(line: 7034, column: 6, scope: !7224)
!7232 = !DILocation(line: 7035, column: 4, scope: !7210)
!7233 = !DILocation(line: 7037, column: 15, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 7037, column: 15)
!7235 = !DILocation(line: 7037, column: 28, scope: !7234)
!7236 = !DILocation(line: 7037, column: 15, scope: !7204)
!7237 = !DILocation(line: 7038, column: 21, scope: !7234)
!7238 = !DILocation(line: 7038, column: 19, scope: !7234)
!7239 = !DILocation(line: 7038, column: 6, scope: !7234)
!7240 = !DILocation(line: 7039, column: 15, scope: !7205)
!7241 = !DILocation(line: 7039, column: 42, scope: !7205)
!7242 = !DILocation(line: 7039, column: 2, scope: !7205)
!7243 = !DILocation(line: 7042, column: 25, scope: !7008)
!7244 = !DILocation(line: 7042, column: 3, scope: !7008)
!7245 = !DILocation(line: 7043, column: 7, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7043, column: 7)
!7247 = !DILocation(line: 7043, column: 14, scope: !7246)
!7248 = !DILocation(line: 7043, column: 7, scope: !7008)
!7249 = !DILocation(line: 7044, column: 18, scope: !7246)
!7250 = !DILocation(line: 7044, column: 45, scope: !7246)
!7251 = !DILocation(line: 7044, column: 5, scope: !7246)
!7252 = !DILocation(line: 7046, column: 5, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 7046, column: 5)
!7254 = !DILocation(line: 7046, column: 5, scope: !7246)
!7255 = !DILocation(line: 7047, column: 7, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7047, column: 7)
!7257 = !DILocation(line: 7047, column: 11, scope: !7256)
!7258 = !DILocation(line: 7047, column: 7, scope: !7008)
!7259 = !DILocation(line: 7048, column: 5, scope: !7256)
!7260 = !DILocation(line: 7049, column: 3, scope: !7008)
!7261 = !DILocation(line: 7052, column: 11, scope: !7008)
!7262 = !DILocation(line: 7052, column: 3, scope: !7008)
!7263 = !DILocation(line: 7057, column: 16, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 7057, column: 14)
!7265 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7052, column: 24)
!7266 = !DILocation(line: 7057, column: 20, scope: !7264)
!7267 = !DILocation(line: 7057, column: 25, scope: !7264)
!7268 = !DILocation(line: 7057, column: 31, scope: !7264)
!7269 = !DILocation(line: 7057, column: 36, scope: !7264)
!7270 = !DILocation(line: 7057, column: 40, scope: !7264)
!7271 = !DILocation(line: 7057, column: 46, scope: !7264)
!7272 = !DILocation(line: 7057, column: 14, scope: !7265)
!7273 = !DILocation(line: 7059, column: 25, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 7058, column: 5)
!7275 = !DILocation(line: 7059, column: 51, scope: !7274)
!7276 = !DILocation(line: 7059, column: 12, scope: !7274)
!7277 = !DILocation(line: 7060, column: 18, scope: !7274)
!7278 = !DILocation(line: 7060, column: 5, scope: !7274)
!7279 = !DILocation(line: 7061, column: 12, scope: !7274)
!7280 = !DILocation(line: 7064, column: 5, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 7063, column: 12)
!7282 = !DILocation(line: 7066, column: 12, scope: !7281)
!7283 = !DILocation(line: 7068, column: 3, scope: !7265)
!7284 = !DILocation(line: 7072, column: 6, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 7072, column: 6)
!7286 = !DILocation(line: 7072, column: 16, scope: !7285)
!7287 = !DILocation(line: 7072, column: 6, scope: !7265)
!7288 = !DILocation(line: 7073, column: 24, scope: !7285)
!7289 = !DILocation(line: 7073, column: 48, scope: !7285)
!7290 = !DILocation(line: 7073, column: 11, scope: !7285)
!7291 = !DILocation(line: 7075, column: 4, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 7075, column: 4)
!7293 = !DILocation(line: 7075, column: 4, scope: !7285)
!7294 = !DILocation(line: 7076, column: 2, scope: !7265)
!7295 = !DILocation(line: 7079, column: 6, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 7079, column: 6)
!7297 = !DILocation(line: 7079, column: 18, scope: !7296)
!7298 = !DILocation(line: 7079, column: 6, scope: !7265)
!7299 = !DILocation(line: 7080, column: 15, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 7080, column: 15)
!7301 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 7079, column: 44)
!7302 = !DILocation(line: 7080, column: 22, scope: !7300)
!7303 = !DILocation(line: 7080, column: 15, scope: !7301)
!7304 = !DILocation(line: 7081, column: 19, scope: !7300)
!7305 = !DILocation(line: 7081, column: 47, scope: !7300)
!7306 = !DILocation(line: 7081, column: 6, scope: !7300)
!7307 = !DILocation(line: 7083, column: 6, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 7083, column: 6)
!7309 = !DILocation(line: 7083, column: 6, scope: !7300)
!7310 = !DILocation(line: 7084, column: 2, scope: !7301)
!7311 = !DILocation(line: 7085, column: 6, scope: !7296)
!7312 = !DILocation(line: 7086, column: 6, scope: !7265)
!7313 = !DILocation(line: 7087, column: 6, scope: !7265)
!7314 = !DILocation(line: 7088, column: 6, scope: !7265)
!7315 = !DILocation(line: 7089, column: 6, scope: !7265)
!7316 = !DILocation(line: 7090, column: 6, scope: !7265)
!7317 = !DILocation(line: 7091, column: 6, scope: !7265)
!7318 = !DILocation(line: 7092, column: 2, scope: !7265)
!7319 = !DILocalVariable(name: "len32", scope: !7320, file: !3, line: 7094, type: !105)
!7320 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7094, column: 4)
!7321 = !DILocation(line: 7094, column: 13, scope: !7320)
!7322 = !DILocalVariable(name: "data", scope: !7320, file: !3, line: 7095, type: !406)
!7323 = !DILocation(line: 7095, column: 13, scope: !7320)
!7324 = !DILocation(line: 7096, column: 23, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 7096, column: 10)
!7326 = !DILocation(line: 7096, column: 10, scope: !7325)
!7327 = !DILocation(line: 7096, column: 10, scope: !7320)
!7328 = !DILocation(line: 7097, column: 21, scope: !7325)
!7329 = !DILocation(line: 7097, column: 46, scope: !7325)
!7330 = !DILocation(line: 7097, column: 53, scope: !7325)
!7331 = !DILocation(line: 7097, column: 8, scope: !7325)
!7332 = !DILocalVariable(name: "ninks", scope: !7333, file: !3, line: 7099, type: !103)
!7333 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7099, column: 4)
!7334 = !DILocation(line: 7099, column: 13, scope: !7333)
!7335 = !DILocalVariable(name: "inknames", scope: !7333, file: !3, line: 7100, type: !5707)
!7336 = !DILocation(line: 7100, column: 18, scope: !7333)
!7337 = !DILocation(line: 7101, column: 23, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 7101, column: 10)
!7339 = !DILocation(line: 7101, column: 10, scope: !7338)
!7340 = !DILocation(line: 7101, column: 10, scope: !7333)
!7341 = !DILocation(line: 7102, column: 21, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 7101, column: 58)
!7343 = !DILocation(line: 7102, column: 48, scope: !7342)
!7344 = !DILocation(line: 7102, column: 8, scope: !7342)
!7345 = !DILocation(line: 7103, column: 25, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 7103, column: 12)
!7347 = !DILocation(line: 7103, column: 12, scope: !7346)
!7348 = !DILocation(line: 7103, column: 12, scope: !7342)
!7349 = !DILocalVariable(name: "inknameslen", scope: !7350, file: !3, line: 7104, type: !110)
!7350 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 7103, column: 59)
!7351 = !DILocation(line: 7104, column: 7, scope: !7350)
!7352 = !DILocation(line: 7104, column: 28, scope: !7350)
!7353 = !DILocation(line: 7104, column: 21, scope: !7350)
!7354 = !DILocation(line: 7104, column: 38, scope: !7350)
!7355 = !DILocalVariable(name: "cp", scope: !7350, file: !3, line: 7105, type: !5707)
!7356 = !DILocation(line: 7105, column: 15, scope: !7350)
!7357 = !DILocation(line: 7105, column: 20, scope: !7350)
!7358 = !DILocation(line: 7106, column: 3, scope: !7350)
!7359 = !DILocation(line: 7106, column: 10, scope: !7350)
!7360 = !DILocation(line: 7106, column: 16, scope: !7350)
!7361 = !DILocation(line: 7107, column: 17, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 7106, column: 21)
!7363 = !DILocation(line: 7107, column: 10, scope: !7362)
!7364 = !DILocation(line: 7107, column: 8, scope: !7362)
!7365 = !DILocation(line: 7108, column: 9, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 7108, column: 9)
!7367 = !DILocation(line: 7108, column: 9, scope: !7362)
!7368 = !DILocation(line: 7109, column: 9, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 7108, column: 13)
!7370 = !DILocation(line: 7110, column: 30, scope: !7369)
!7371 = !DILocation(line: 7110, column: 23, scope: !7369)
!7372 = !DILocation(line: 7110, column: 34, scope: !7369)
!7373 = !DILocation(line: 7110, column: 19, scope: !7369)
!7374 = !DILocation(line: 7111, column: 5, scope: !7369)
!7375 = !DILocation(line: 7112, column: 10, scope: !7362)
!7376 = distinct !{!7376, !7358, !7377}
!7377 = !DILocation(line: 7113, column: 10, scope: !7350)
!7378 = !DILocation(line: 7114, column: 16, scope: !7350)
!7379 = !DILocation(line: 7114, column: 39, scope: !7350)
!7380 = !DILocation(line: 7114, column: 52, scope: !7350)
!7381 = !DILocation(line: 7114, column: 3, scope: !7350)
!7382 = !DILocation(line: 7115, column: 8, scope: !7350)
!7383 = !DILocation(line: 7116, column: 6, scope: !7342)
!7384 = !DILocalVariable(name: "pg0", scope: !7385, file: !3, line: 7119, type: !104)
!7385 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7118, column: 4)
!7386 = !DILocation(line: 7119, column: 19, scope: !7385)
!7387 = !DILocalVariable(name: "pg1", scope: !7385, file: !3, line: 7119, type: !104)
!7388 = !DILocation(line: 7119, column: 24, scope: !7385)
!7389 = !DILocation(line: 7120, column: 21, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 7120, column: 8)
!7391 = !DILocation(line: 7120, column: 8, scope: !7390)
!7392 = !DILocation(line: 7120, column: 8, scope: !7385)
!7393 = !DILocation(line: 7121, column: 10, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 7121, column: 10)
!7395 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 7120, column: 58)
!7396 = !DILocation(line: 7121, column: 18, scope: !7394)
!7397 = !DILocation(line: 7121, column: 10, scope: !7395)
!7398 = !DILocation(line: 7122, column: 15, scope: !7394)
!7399 = !DILocation(line: 7122, column: 40, scope: !7394)
!7400 = !DILocation(line: 7122, column: 45, scope: !7394)
!7401 = !DILocation(line: 7122, column: 2, scope: !7394)
!7402 = !DILocation(line: 7124, column: 15, scope: !7394)
!7403 = !DILocation(line: 7124, column: 47, scope: !7394)
!7404 = !DILocation(line: 7124, column: 2, scope: !7394)
!7405 = !DILocation(line: 7125, column: 6, scope: !7395)
!7406 = !DILocation(line: 7128, column: 10, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7128, column: 3)
!7408 = !DILocation(line: 7128, column: 8, scope: !7407)
!7409 = !DILocation(line: 7128, column: 18, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 7128, column: 3)
!7411 = !DILocation(line: 7128, column: 20, scope: !7410)
!7412 = !DILocation(line: 7128, column: 3, scope: !7407)
!7413 = !DILocation(line: 7129, column: 3, scope: !7410)
!7414 = !DILocation(line: 7128, column: 37, scope: !7410)
!7415 = !DILocation(line: 7128, column: 3, scope: !7410)
!7416 = distinct !{!7416, !7412, !7417}
!7417 = !DILocation(line: 7129, column: 3, scope: !7407)
!7418 = !DILocation(line: 7132, column: 16, scope: !7008)
!7419 = !DILocation(line: 7132, column: 49, scope: !7008)
!7420 = !DILocation(line: 7132, column: 42, scope: !7008)
!7421 = !DILocation(line: 7132, column: 3, scope: !7008)
!7422 = !DILocation(line: 7133, column: 16, scope: !7008)
!7423 = !DILocation(line: 7133, column: 49, scope: !7008)
!7424 = !DILocation(line: 7133, column: 42, scope: !7008)
!7425 = !DILocation(line: 7133, column: 3, scope: !7008)
!7426 = !DILocation(line: 7136, column: 7, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7136, column: 7)
!7428 = !DILocation(line: 7136, column: 7, scope: !7008)
!7429 = !DILocation(line: 7138, column: 9, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 7138, column: 9)
!7431 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 7137, column: 5)
!7432 = !DILocation(line: 7138, column: 16, scope: !7430)
!7433 = !DILocation(line: 7138, column: 9, scope: !7431)
!7434 = !DILocation(line: 7139, column: 33, scope: !7430)
!7435 = !DILocation(line: 7139, column: 38, scope: !7430)
!7436 = !DILocation(line: 7139, column: 49, scope: !7430)
!7437 = !DILocation(line: 7139, column: 57, scope: !7430)
!7438 = !DILocation(line: 7139, column: 64, scope: !7430)
!7439 = !DILocation(line: 7139, column: 69, scope: !7430)
!7440 = !DILocation(line: 7139, column: 7, scope: !7430)
!7441 = !DILocation(line: 7141, column: 35, scope: !7430)
!7442 = !DILocation(line: 7141, column: 40, scope: !7430)
!7443 = !DILocation(line: 7141, column: 51, scope: !7430)
!7444 = !DILocation(line: 7141, column: 59, scope: !7430)
!7445 = !DILocation(line: 7141, column: 66, scope: !7430)
!7446 = !DILocation(line: 7141, column: 71, scope: !7430)
!7447 = !DILocation(line: 7141, column: 7, scope: !7430)
!7448 = !DILocation(line: 7142, column: 5, scope: !7431)
!7449 = !DILocation(line: 7145, column: 9, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 7145, column: 9)
!7451 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 7144, column: 5)
!7452 = !DILocation(line: 7145, column: 16, scope: !7450)
!7453 = !DILocation(line: 7145, column: 9, scope: !7451)
!7454 = !DILocation(line: 7146, column: 34, scope: !7450)
!7455 = !DILocation(line: 7146, column: 39, scope: !7450)
!7456 = !DILocation(line: 7146, column: 50, scope: !7450)
!7457 = !DILocation(line: 7146, column: 7, scope: !7450)
!7458 = !DILocation(line: 7148, column: 35, scope: !7450)
!7459 = !DILocation(line: 7148, column: 40, scope: !7450)
!7460 = !DILocation(line: 7148, column: 51, scope: !7450)
!7461 = !DILocation(line: 7148, column: 59, scope: !7450)
!7462 = !DILocation(line: 7148, column: 66, scope: !7450)
!7463 = !DILocation(line: 7148, column: 71, scope: !7450)
!7464 = !DILocation(line: 7148, column: 7, scope: !7450)
!7465 = !DILocation(line: 7151, column: 27, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 7151, column: 7)
!7467 = !DILocation(line: 7151, column: 8, scope: !7466)
!7468 = !DILocation(line: 7151, column: 7, scope: !7008)
!7469 = !DILocation(line: 7153, column: 15, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 7152, column: 5)
!7471 = !DILocation(line: 7153, column: 5, scope: !7470)
!7472 = !DILocation(line: 7154, column: 5, scope: !7470)
!7473 = !DILocation(line: 7157, column: 3, scope: !7008)
!7474 = !DILocation(line: 7158, column: 3, scope: !7008)
!7475 = distinct !DISubprogram(name: "cpTag", scope: !3, file: !3, line: 1433, type: !7476, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{null, !193, !193, !103, !103, !283}
!7478 = !DILocalVariable(name: "in", arg: 1, scope: !7475, file: !3, line: 1433, type: !193)
!7479 = !DILocation(line: 1433, column: 13, scope: !7475)
!7480 = !DILocalVariable(name: "out", arg: 2, scope: !7475, file: !3, line: 1433, type: !193)
!7481 = !DILocation(line: 1433, column: 23, scope: !7475)
!7482 = !DILocalVariable(name: "tag", arg: 3, scope: !7475, file: !3, line: 1433, type: !103)
!7483 = !DILocation(line: 1433, column: 35, scope: !7475)
!7484 = !DILocalVariable(name: "count", arg: 4, scope: !7475, file: !3, line: 1433, type: !103)
!7485 = !DILocation(line: 1433, column: 47, scope: !7475)
!7486 = !DILocalVariable(name: "type", arg: 5, scope: !7475, file: !3, line: 1433, type: !283)
!7487 = !DILocation(line: 1433, column: 67, scope: !7475)
!7488 = !DILocation(line: 1435, column: 10, scope: !7475)
!7489 = !DILocation(line: 1435, column: 2, scope: !7475)
!7490 = !DILocation(line: 1437, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1437, column: 7)
!7492 = distinct !DILexicalBlock(scope: !7475, file: !3, line: 1435, column: 16)
!7493 = !DILocation(line: 1437, column: 13, scope: !7491)
!7494 = !DILocation(line: 1437, column: 7, scope: !7492)
!7495 = !DILocalVariable(name: "shortv", scope: !7496, file: !3, line: 1438, type: !103)
!7496 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 1437, column: 19)
!7497 = !DILocation(line: 1438, column: 11, scope: !7496)
!7498 = !DILocation(line: 1439, column: 4, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 1439, column: 4)
!7500 = !DILocation(line: 1439, column: 4, scope: !7496)
!7501 = !DILocation(line: 1440, column: 3, scope: !7496)
!7502 = !DILocation(line: 1440, column: 14, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 1440, column: 14)
!7504 = !DILocation(line: 1440, column: 20, scope: !7503)
!7505 = !DILocation(line: 1440, column: 14, scope: !7491)
!7506 = !DILocalVariable(name: "shortv1", scope: !7507, file: !3, line: 1441, type: !103)
!7507 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 1440, column: 26)
!7508 = !DILocation(line: 1441, column: 11, scope: !7507)
!7509 = !DILocalVariable(name: "shortv2", scope: !7507, file: !3, line: 1441, type: !103)
!7510 = !DILocation(line: 1441, column: 20, scope: !7507)
!7511 = !DILocation(line: 1442, column: 4, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 1442, column: 4)
!7513 = !DILocation(line: 1442, column: 4, scope: !7507)
!7514 = !DILocation(line: 1443, column: 3, scope: !7507)
!7515 = !DILocation(line: 1443, column: 14, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 1443, column: 14)
!7517 = !DILocation(line: 1443, column: 20, scope: !7516)
!7518 = !DILocation(line: 1443, column: 14, scope: !7503)
!7519 = !DILocalVariable(name: "tr", scope: !7520, file: !3, line: 1444, type: !123)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 1443, column: 26)
!7521 = !DILocation(line: 1444, column: 12, scope: !7520)
!7522 = !DILocalVariable(name: "tg", scope: !7520, file: !3, line: 1444, type: !123)
!7523 = !DILocation(line: 1444, column: 17, scope: !7520)
!7524 = !DILocalVariable(name: "tb", scope: !7520, file: !3, line: 1444, type: !123)
!7525 = !DILocation(line: 1444, column: 22, scope: !7520)
!7526 = !DILocalVariable(name: "ta", scope: !7520, file: !3, line: 1444, type: !123)
!7527 = !DILocation(line: 1444, column: 27, scope: !7520)
!7528 = !DILocation(line: 1445, column: 4, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 1445, column: 4)
!7530 = !DILocation(line: 1445, column: 4, scope: !7520)
!7531 = !DILocation(line: 1446, column: 3, scope: !7520)
!7532 = !DILocation(line: 1446, column: 14, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 1446, column: 14)
!7534 = !DILocation(line: 1446, column: 20, scope: !7533)
!7535 = !DILocation(line: 1446, column: 14, scope: !7516)
!7536 = !DILocalVariable(name: "shortv1", scope: !7537, file: !3, line: 1447, type: !103)
!7537 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 1446, column: 36)
!7538 = !DILocation(line: 1447, column: 11, scope: !7537)
!7539 = !DILocalVariable(name: "shortav", scope: !7537, file: !3, line: 1448, type: !123)
!7540 = !DILocation(line: 1448, column: 12, scope: !7537)
!7541 = !DILocation(line: 1449, column: 4, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1449, column: 4)
!7543 = !DILocation(line: 1449, column: 4, scope: !7537)
!7544 = !DILocation(line: 1450, column: 3, scope: !7537)
!7545 = !DILocation(line: 1451, column: 3, scope: !7492)
!7546 = !DILocalVariable(name: "longv", scope: !7547, file: !3, line: 1453, type: !105)
!7547 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1453, column: 3)
!7548 = !DILocation(line: 1453, column: 12, scope: !7547)
!7549 = !DILocation(line: 1454, column: 5, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1454, column: 5)
!7551 = !DILocation(line: 1454, column: 5, scope: !7547)
!7552 = !DILocation(line: 1456, column: 3, scope: !7492)
!7553 = !DILocation(line: 1458, column: 7, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1458, column: 7)
!7555 = !DILocation(line: 1458, column: 13, scope: !7554)
!7556 = !DILocation(line: 1458, column: 7, scope: !7492)
!7557 = !DILocalVariable(name: "floatv", scope: !7558, file: !3, line: 1459, type: !121)
!7558 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 1458, column: 19)
!7559 = !DILocation(line: 1459, column: 10, scope: !7558)
!7560 = !DILocation(line: 1460, column: 4, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 1460, column: 4)
!7562 = !DILocation(line: 1460, column: 4, scope: !7558)
!7563 = !DILocation(line: 1461, column: 3, scope: !7558)
!7564 = !DILocation(line: 1461, column: 14, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 1461, column: 14)
!7566 = !DILocation(line: 1461, column: 20, scope: !7565)
!7567 = !DILocation(line: 1461, column: 14, scope: !7554)
!7568 = !DILocalVariable(name: "floatav", scope: !7569, file: !3, line: 1462, type: !263)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1461, column: 36)
!7570 = !DILocation(line: 1462, column: 11, scope: !7569)
!7571 = !DILocation(line: 1463, column: 4, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 1463, column: 4)
!7573 = !DILocation(line: 1463, column: 4, scope: !7569)
!7574 = !DILocation(line: 1464, column: 3, scope: !7569)
!7575 = !DILocation(line: 1465, column: 3, scope: !7492)
!7576 = !DILocalVariable(name: "stringv", scope: !7577, file: !3, line: 1467, type: !146)
!7577 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1467, column: 3)
!7578 = !DILocation(line: 1467, column: 11, scope: !7577)
!7579 = !DILocation(line: 1468, column: 5, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 1468, column: 5)
!7581 = !DILocation(line: 1468, column: 5, scope: !7577)
!7582 = !DILocation(line: 1470, column: 3, scope: !7492)
!7583 = !DILocation(line: 1472, column: 7, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1472, column: 7)
!7585 = !DILocation(line: 1472, column: 13, scope: !7584)
!7586 = !DILocation(line: 1472, column: 7, scope: !7492)
!7587 = !DILocalVariable(name: "doublev", scope: !7588, file: !3, line: 1473, type: !120)
!7588 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 1472, column: 19)
!7589 = !DILocation(line: 1473, column: 11, scope: !7588)
!7590 = !DILocation(line: 1474, column: 4, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1474, column: 4)
!7592 = !DILocation(line: 1474, column: 4, scope: !7588)
!7593 = !DILocation(line: 1475, column: 3, scope: !7588)
!7594 = !DILocation(line: 1475, column: 14, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 1475, column: 14)
!7596 = !DILocation(line: 1475, column: 20, scope: !7595)
!7597 = !DILocation(line: 1475, column: 14, scope: !7584)
!7598 = !DILocalVariable(name: "doubleav", scope: !7599, file: !3, line: 1476, type: !233)
!7599 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 1475, column: 36)
!7600 = !DILocation(line: 1476, column: 12, scope: !7599)
!7601 = !DILocation(line: 1477, column: 4, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 1477, column: 4)
!7603 = !DILocation(line: 1477, column: 4, scope: !7599)
!7604 = !DILocation(line: 1478, column: 3, scope: !7599)
!7605 = !DILocation(line: 1479, column: 3, scope: !7492)
!7606 = !DILocation(line: 1481, column: 40, scope: !7492)
!7607 = !DILocation(line: 1481, column: 27, scope: !7492)
!7608 = !DILocation(line: 1483, column: 27, scope: !7492)
!7609 = !DILocation(line: 1483, column: 32, scope: !7492)
!7610 = !DILocation(line: 1481, column: 17, scope: !7492)
!7611 = !DILocation(line: 1484, column: 2, scope: !7492)
!7612 = !DILocation(line: 1485, column: 1, scope: !7475)
!7613 = distinct !DISubprogram(name: "writeBufferToContigTiles", scope: !3, file: !3, line: 1194, type: !7614, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!7614 = !DISubroutineType(types: !7615)
!7615 = !{!110, !193, !116, !105, !105, !7616, !557}
!7616 = !DIDerivedType(tag: DW_TAG_typedef, name: "tsample_t", file: !109, line: 73, baseType: !103)
!7617 = !DILocalVariable(name: "out", arg: 1, scope: !7613, file: !3, line: 1194, type: !193)
!7618 = !DILocation(line: 1194, column: 44, scope: !7613)
!7619 = !DILocalVariable(name: "buf", arg: 2, scope: !7613, file: !3, line: 1194, type: !116)
!7620 = !DILocation(line: 1194, column: 56, scope: !7613)
!7621 = !DILocalVariable(name: "imagelength", arg: 3, scope: !7613, file: !3, line: 1194, type: !105)
!7622 = !DILocation(line: 1194, column: 68, scope: !7613)
!7623 = !DILocalVariable(name: "imagewidth", arg: 4, scope: !7613, file: !3, line: 1195, type: !105)
!7624 = !DILocation(line: 1195, column: 19, scope: !7613)
!7625 = !DILocalVariable(name: "spp", arg: 5, scope: !7613, file: !3, line: 1195, type: !7616)
!7626 = !DILocation(line: 1195, column: 41, scope: !7613)
!7627 = !DILocalVariable(name: "dump", arg: 6, scope: !7613, file: !3, line: 1196, type: !557)
!7628 = !DILocation(line: 1196, column: 58, scope: !7613)
!7629 = !DILocalVariable(name: "bps", scope: !7613, file: !3, line: 1198, type: !103)
!7630 = !DILocation(line: 1198, column: 10, scope: !7613)
!7631 = !DILocalVariable(name: "tl", scope: !7613, file: !3, line: 1199, type: !105)
!7632 = !DILocation(line: 1199, column: 10, scope: !7613)
!7633 = !DILocalVariable(name: "tw", scope: !7613, file: !3, line: 1199, type: !105)
!7634 = !DILocation(line: 1199, column: 14, scope: !7613)
!7635 = !DILocalVariable(name: "row", scope: !7613, file: !3, line: 1200, type: !105)
!7636 = !DILocation(line: 1200, column: 10, scope: !7613)
!7637 = !DILocalVariable(name: "col", scope: !7613, file: !3, line: 1200, type: !105)
!7638 = !DILocation(line: 1200, column: 15, scope: !7613)
!7639 = !DILocalVariable(name: "nrow", scope: !7613, file: !3, line: 1200, type: !105)
!7640 = !DILocation(line: 1200, column: 20, scope: !7613)
!7641 = !DILocalVariable(name: "ncol", scope: !7613, file: !3, line: 1200, type: !105)
!7642 = !DILocation(line: 1200, column: 26, scope: !7613)
!7643 = !DILocalVariable(name: "src_rowsize", scope: !7613, file: !3, line: 1201, type: !105)
!7644 = !DILocation(line: 1201, column: 10, scope: !7613)
!7645 = !DILocalVariable(name: "col_offset", scope: !7613, file: !3, line: 1201, type: !105)
!7646 = !DILocation(line: 1201, column: 23, scope: !7613)
!7647 = !DILocalVariable(name: "tile_rowsize", scope: !7613, file: !3, line: 1202, type: !105)
!7648 = !DILocation(line: 1202, column: 10, scope: !7613)
!7649 = !DILocation(line: 1202, column: 42, scope: !7613)
!7650 = !DILocation(line: 1202, column: 26, scope: !7613)
!7651 = !DILocalVariable(name: "bufp", scope: !7613, file: !3, line: 1203, type: !116)
!7652 = !DILocation(line: 1203, column: 10, scope: !7613)
!7653 = !DILocation(line: 1203, column: 26, scope: !7613)
!7654 = !DILocalVariable(name: "tile_buffsize", scope: !7613, file: !3, line: 1204, type: !117)
!7655 = !DILocation(line: 1204, column: 11, scope: !7613)
!7656 = !DILocalVariable(name: "tilesize", scope: !7613, file: !3, line: 1205, type: !117)
!7657 = !DILocation(line: 1205, column: 11, scope: !7613)
!7658 = !DILocation(line: 1205, column: 35, scope: !7613)
!7659 = !DILocation(line: 1205, column: 22, scope: !7613)
!7660 = !DILocalVariable(name: "tilebuf", scope: !7613, file: !3, line: 1206, type: !106)
!7661 = !DILocation(line: 1206, column: 18, scope: !7613)
!7662 = !DILocation(line: 1208, column: 16, scope: !7613)
!7663 = !DILocation(line: 1208, column: 3, scope: !7613)
!7664 = !DILocation(line: 1209, column: 16, scope: !7613)
!7665 = !DILocation(line: 1209, column: 3, scope: !7613)
!7666 = !DILocation(line: 1210, column: 16, scope: !7613)
!7667 = !DILocation(line: 1210, column: 3, scope: !7613)
!7668 = !DILocation(line: 1212, column: 19, scope: !7613)
!7669 = !DILocation(line: 1212, column: 17, scope: !7613)
!7670 = !DILocation(line: 1213, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1213, column: 7)
!7672 = !DILocation(line: 1213, column: 28, scope: !7671)
!7673 = !DILocation(line: 1213, column: 33, scope: !7671)
!7674 = !DILocation(line: 1213, column: 31, scope: !7671)
!7675 = !DILocation(line: 1213, column: 18, scope: !7671)
!7676 = !DILocation(line: 1213, column: 16, scope: !7671)
!7677 = !DILocation(line: 1213, column: 7, scope: !7613)
!7678 = !DILocation(line: 1220, column: 21, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 1214, column: 5)
!7680 = !DILocation(line: 1220, column: 26, scope: !7679)
!7681 = !DILocation(line: 1220, column: 24, scope: !7679)
!7682 = !DILocation(line: 1220, column: 19, scope: !7679)
!7683 = !DILocation(line: 1221, column: 5, scope: !7679)
!7684 = !DILocation(line: 1223, column: 25, scope: !7613)
!7685 = !DILocation(line: 1223, column: 13, scope: !7613)
!7686 = !DILocation(line: 1223, column: 11, scope: !7613)
!7687 = !DILocation(line: 1224, column: 7, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1224, column: 7)
!7689 = !DILocation(line: 1224, column: 15, scope: !7688)
!7690 = !DILocation(line: 1224, column: 7, scope: !7613)
!7691 = !DILocation(line: 1225, column: 5, scope: !7688)
!7692 = !DILocation(line: 1227, column: 19, scope: !7613)
!7693 = !DILocation(line: 1227, column: 32, scope: !7613)
!7694 = !DILocation(line: 1227, column: 30, scope: !7613)
!7695 = !DILocation(line: 1227, column: 38, scope: !7613)
!7696 = !DILocation(line: 1227, column: 36, scope: !7613)
!7697 = !DILocation(line: 1227, column: 43, scope: !7613)
!7698 = !DILocation(line: 1227, column: 48, scope: !7613)
!7699 = !DILocation(line: 1227, column: 15, scope: !7613)
!7700 = !DILocation(line: 1228, column: 12, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1228, column: 3)
!7702 = !DILocation(line: 1228, column: 8, scope: !7701)
!7703 = !DILocation(line: 1228, column: 17, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 1228, column: 3)
!7705 = !DILocation(line: 1228, column: 23, scope: !7704)
!7706 = !DILocation(line: 1228, column: 21, scope: !7704)
!7707 = !DILocation(line: 1228, column: 3, scope: !7701)
!7708 = !DILocation(line: 1230, column: 13, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 1229, column: 5)
!7710 = !DILocation(line: 1230, column: 19, scope: !7709)
!7711 = !DILocation(line: 1230, column: 17, scope: !7709)
!7712 = !DILocation(line: 1230, column: 24, scope: !7709)
!7713 = !DILocation(line: 1230, column: 22, scope: !7709)
!7714 = !DILocation(line: 1230, column: 12, scope: !7709)
!7715 = !DILocation(line: 1230, column: 39, scope: !7709)
!7716 = !DILocation(line: 1230, column: 53, scope: !7709)
!7717 = !DILocation(line: 1230, column: 51, scope: !7709)
!7718 = !DILocation(line: 1230, column: 59, scope: !7709)
!7719 = !DILocation(line: 1230, column: 10, scope: !7709)
!7720 = !DILocation(line: 1231, column: 14, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 1231, column: 5)
!7722 = !DILocation(line: 1231, column: 10, scope: !7721)
!7723 = !DILocation(line: 1231, column: 19, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 1231, column: 5)
!7725 = !DILocation(line: 1231, column: 25, scope: !7724)
!7726 = !DILocation(line: 1231, column: 23, scope: !7724)
!7727 = !DILocation(line: 1231, column: 5, scope: !7721)
!7728 = !DILocation(line: 1234, column: 11, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1234, column: 11)
!7730 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1232, column: 7)
!7731 = !DILocation(line: 1234, column: 17, scope: !7729)
!7732 = !DILocation(line: 1234, column: 15, scope: !7729)
!7733 = !DILocation(line: 1234, column: 22, scope: !7729)
!7734 = !DILocation(line: 1234, column: 20, scope: !7729)
!7735 = !DILocation(line: 1234, column: 11, scope: !7730)
!7736 = !DILocation(line: 1235, column: 9, scope: !7729)
!7737 = !DILocation(line: 1235, column: 22, scope: !7729)
!7738 = !DILocation(line: 1235, column: 20, scope: !7729)
!7739 = !DILocation(line: 1235, column: 7, scope: !7729)
!7740 = !DILocation(line: 1235, column: 2, scope: !7729)
!7741 = !DILocation(line: 1237, column: 16, scope: !7729)
!7742 = !DILocation(line: 1237, column: 14, scope: !7729)
!7743 = !DILocation(line: 1239, column: 23, scope: !7730)
!7744 = !DILocation(line: 1239, column: 29, scope: !7730)
!7745 = !DILocation(line: 1239, column: 27, scope: !7730)
!7746 = !DILocation(line: 1239, column: 35, scope: !7730)
!7747 = !DILocation(line: 1239, column: 33, scope: !7730)
!7748 = !DILocation(line: 1239, column: 40, scope: !7730)
!7749 = !DILocation(line: 1239, column: 45, scope: !7730)
!7750 = !DILocation(line: 1239, column: 18, scope: !7730)
!7751 = !DILocation(line: 1240, column: 14, scope: !7730)
!7752 = !DILocation(line: 1240, column: 21, scope: !7730)
!7753 = !DILocation(line: 1240, column: 27, scope: !7730)
!7754 = !DILocation(line: 1240, column: 25, scope: !7730)
!7755 = !DILocation(line: 1240, column: 18, scope: !7730)
!7756 = !DILocation(line: 1240, column: 42, scope: !7730)
!7757 = !DILocation(line: 1240, column: 40, scope: !7730)
!7758 = !DILocation(line: 1240, column: 12, scope: !7730)
!7759 = !DILocation(line: 1241, column: 44, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1241, column: 11)
!7761 = !DILocation(line: 1241, column: 53, scope: !7760)
!7762 = !DILocation(line: 1241, column: 59, scope: !7760)
!7763 = !DILocation(line: 1241, column: 65, scope: !7760)
!7764 = !DILocation(line: 1241, column: 71, scope: !7760)
!7765 = !DILocation(line: 1242, column: 9, scope: !7760)
!7766 = !DILocation(line: 1242, column: 16, scope: !7760)
!7767 = !DILocation(line: 1242, column: 21, scope: !7760)
!7768 = !DILocation(line: 1242, column: 26, scope: !7760)
!7769 = !DILocation(line: 1242, column: 31, scope: !7760)
!7770 = !DILocation(line: 1241, column: 11, scope: !7760)
!7771 = !DILocation(line: 1242, column: 37, scope: !7760)
!7772 = !DILocation(line: 1241, column: 11, scope: !7730)
!7773 = !DILocation(line: 1246, column: 35, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1243, column: 9)
!7775 = !DILocation(line: 1246, column: 19, scope: !7774)
!7776 = !DILocation(line: 1246, column: 55, scope: !7774)
!7777 = !DILocation(line: 1246, column: 40, scope: !7774)
!7778 = !DILocation(line: 1244, column: 2, scope: !7774)
!7779 = !DILocation(line: 1247, column: 12, scope: !7774)
!7780 = !DILocation(line: 1247, column: 2, scope: !7774)
!7781 = !DILocation(line: 1248, column: 2, scope: !7774)
!7782 = !DILocation(line: 1251, column: 25, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1251, column: 11)
!7784 = !DILocation(line: 1251, column: 30, scope: !7783)
!7785 = !DILocation(line: 1251, column: 39, scope: !7783)
!7786 = !DILocation(line: 1251, column: 44, scope: !7783)
!7787 = !DILocation(line: 1251, column: 11, scope: !7783)
!7788 = !DILocation(line: 1251, column: 55, scope: !7783)
!7789 = !DILocation(line: 1251, column: 11, scope: !7730)
!7790 = !DILocation(line: 1255, column: 28, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 1252, column: 9)
!7792 = !DILocation(line: 1255, column: 12, scope: !7791)
!7793 = !DILocation(line: 1255, column: 49, scope: !7791)
!7794 = !DILocation(line: 1255, column: 33, scope: !7791)
!7795 = !DILocation(line: 1253, column: 2, scope: !7791)
!7796 = !DILocation(line: 1256, column: 13, scope: !7791)
!7797 = !DILocation(line: 1256, column: 3, scope: !7791)
!7798 = !DILocation(line: 1257, column: 2, scope: !7791)
!7799 = !DILocation(line: 1259, column: 7, scope: !7730)
!7800 = !DILocation(line: 1231, column: 44, scope: !7724)
!7801 = !DILocation(line: 1231, column: 41, scope: !7724)
!7802 = !DILocation(line: 1231, column: 5, scope: !7724)
!7803 = distinct !{!7803, !7727, !7804}
!7804 = !DILocation(line: 1259, column: 7, scope: !7721)
!7805 = !DILocation(line: 1260, column: 5, scope: !7709)
!7806 = !DILocation(line: 1228, column: 43, scope: !7704)
!7807 = !DILocation(line: 1228, column: 40, scope: !7704)
!7808 = !DILocation(line: 1228, column: 3, scope: !7704)
!7809 = distinct !{!7809, !7707, !7810}
!7810 = !DILocation(line: 1260, column: 5, scope: !7701)
!7811 = !DILocation(line: 1261, column: 13, scope: !7613)
!7812 = !DILocation(line: 1261, column: 3, scope: !7613)
!7813 = !DILocation(line: 1263, column: 3, scope: !7613)
!7814 = !DILocation(line: 1264, column: 3, scope: !7613)
!7815 = distinct !DISubprogram(name: "writeBufferToSeparateTiles", scope: !3, file: !3, line: 1269, type: !7614, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!7816 = !DILocalVariable(name: "out", arg: 1, scope: !7815, file: !3, line: 1269, type: !193)
!7817 = !DILocation(line: 1269, column: 46, scope: !7815)
!7818 = !DILocalVariable(name: "buf", arg: 2, scope: !7815, file: !3, line: 1269, type: !116)
!7819 = !DILocation(line: 1269, column: 58, scope: !7815)
!7820 = !DILocalVariable(name: "imagelength", arg: 3, scope: !7815, file: !3, line: 1269, type: !105)
!7821 = !DILocation(line: 1269, column: 70, scope: !7815)
!7822 = !DILocalVariable(name: "imagewidth", arg: 4, scope: !7815, file: !3, line: 1270, type: !105)
!7823 = !DILocation(line: 1270, column: 19, scope: !7815)
!7824 = !DILocalVariable(name: "spp", arg: 5, scope: !7815, file: !3, line: 1270, type: !7616)
!7825 = !DILocation(line: 1270, column: 41, scope: !7815)
!7826 = !DILocalVariable(name: "dump", arg: 6, scope: !7815, file: !3, line: 1271, type: !557)
!7827 = !DILocation(line: 1271, column: 59, scope: !7815)
!7828 = !DILocalVariable(name: "obuf", scope: !7815, file: !3, line: 1273, type: !7829)
!7829 = !DIDerivedType(tag: DW_TAG_typedef, name: "tdata_t", file: !109, line: 78, baseType: !102)
!7830 = !DILocation(line: 1273, column: 11, scope: !7815)
!7831 = !DILocation(line: 1273, column: 43, scope: !7815)
!7832 = !DILocation(line: 1273, column: 30, scope: !7815)
!7833 = !DILocation(line: 1273, column: 18, scope: !7815)
!7834 = !DILocalVariable(name: "tl", scope: !7815, file: !3, line: 1274, type: !105)
!7835 = !DILocation(line: 1274, column: 10, scope: !7815)
!7836 = !DILocalVariable(name: "tw", scope: !7815, file: !3, line: 1274, type: !105)
!7837 = !DILocation(line: 1274, column: 14, scope: !7815)
!7838 = !DILocalVariable(name: "row", scope: !7815, file: !3, line: 1275, type: !105)
!7839 = !DILocation(line: 1275, column: 10, scope: !7815)
!7840 = !DILocalVariable(name: "col", scope: !7815, file: !3, line: 1275, type: !105)
!7841 = !DILocation(line: 1275, column: 15, scope: !7815)
!7842 = !DILocalVariable(name: "nrow", scope: !7815, file: !3, line: 1275, type: !105)
!7843 = !DILocation(line: 1275, column: 20, scope: !7815)
!7844 = !DILocalVariable(name: "ncol", scope: !7815, file: !3, line: 1275, type: !105)
!7845 = !DILocation(line: 1275, column: 26, scope: !7815)
!7846 = !DILocalVariable(name: "src_rowsize", scope: !7815, file: !3, line: 1276, type: !105)
!7847 = !DILocation(line: 1276, column: 10, scope: !7815)
!7848 = !DILocalVariable(name: "col_offset", scope: !7815, file: !3, line: 1276, type: !105)
!7849 = !DILocation(line: 1276, column: 23, scope: !7815)
!7850 = !DILocalVariable(name: "bps", scope: !7815, file: !3, line: 1277, type: !103)
!7851 = !DILocation(line: 1277, column: 10, scope: !7815)
!7852 = !DILocalVariable(name: "s", scope: !7815, file: !3, line: 1278, type: !7616)
!7853 = !DILocation(line: 1278, column: 13, scope: !7815)
!7854 = !DILocalVariable(name: "bufp", scope: !7815, file: !3, line: 1279, type: !116)
!7855 = !DILocation(line: 1279, column: 10, scope: !7815)
!7856 = !DILocation(line: 1279, column: 26, scope: !7815)
!7857 = !DILocation(line: 1281, column: 7, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1281, column: 7)
!7859 = !DILocation(line: 1281, column: 12, scope: !7858)
!7860 = !DILocation(line: 1281, column: 7, scope: !7815)
!7861 = !DILocation(line: 1282, column: 5, scope: !7858)
!7862 = !DILocation(line: 1284, column: 16, scope: !7815)
!7863 = !DILocation(line: 1284, column: 3, scope: !7815)
!7864 = !DILocation(line: 1285, column: 16, scope: !7815)
!7865 = !DILocation(line: 1285, column: 3, scope: !7815)
!7866 = !DILocation(line: 1286, column: 16, scope: !7815)
!7867 = !DILocation(line: 1286, column: 3, scope: !7815)
!7868 = !DILocation(line: 1287, column: 19, scope: !7815)
!7869 = !DILocation(line: 1287, column: 32, scope: !7815)
!7870 = !DILocation(line: 1287, column: 30, scope: !7815)
!7871 = !DILocation(line: 1287, column: 38, scope: !7815)
!7872 = !DILocation(line: 1287, column: 36, scope: !7815)
!7873 = !DILocation(line: 1287, column: 43, scope: !7815)
!7874 = !DILocation(line: 1287, column: 48, scope: !7815)
!7875 = !DILocation(line: 1287, column: 15, scope: !7815)
!7876 = !DILocation(line: 1289, column: 12, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1289, column: 3)
!7878 = !DILocation(line: 1289, column: 8, scope: !7877)
!7879 = !DILocation(line: 1289, column: 17, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 1289, column: 3)
!7881 = !DILocation(line: 1289, column: 23, scope: !7880)
!7882 = !DILocation(line: 1289, column: 21, scope: !7880)
!7883 = !DILocation(line: 1289, column: 3, scope: !7877)
!7884 = !DILocation(line: 1291, column: 13, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 1290, column: 5)
!7886 = !DILocation(line: 1291, column: 19, scope: !7885)
!7887 = !DILocation(line: 1291, column: 17, scope: !7885)
!7888 = !DILocation(line: 1291, column: 24, scope: !7885)
!7889 = !DILocation(line: 1291, column: 22, scope: !7885)
!7890 = !DILocation(line: 1291, column: 12, scope: !7885)
!7891 = !DILocation(line: 1291, column: 39, scope: !7885)
!7892 = !DILocation(line: 1291, column: 53, scope: !7885)
!7893 = !DILocation(line: 1291, column: 51, scope: !7885)
!7894 = !DILocation(line: 1291, column: 59, scope: !7885)
!7895 = !DILocation(line: 1291, column: 10, scope: !7885)
!7896 = !DILocation(line: 1292, column: 14, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 1292, column: 5)
!7898 = !DILocation(line: 1292, column: 10, scope: !7897)
!7899 = !DILocation(line: 1292, column: 19, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 1292, column: 5)
!7901 = !DILocation(line: 1292, column: 25, scope: !7900)
!7902 = !DILocation(line: 1292, column: 23, scope: !7900)
!7903 = !DILocation(line: 1292, column: 5, scope: !7897)
!7904 = !DILocation(line: 1295, column: 11, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1295, column: 11)
!7906 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 1293, column: 7)
!7907 = !DILocation(line: 1295, column: 17, scope: !7905)
!7908 = !DILocation(line: 1295, column: 15, scope: !7905)
!7909 = !DILocation(line: 1295, column: 22, scope: !7905)
!7910 = !DILocation(line: 1295, column: 20, scope: !7905)
!7911 = !DILocation(line: 1295, column: 11, scope: !7906)
!7912 = !DILocation(line: 1296, column: 9, scope: !7905)
!7913 = !DILocation(line: 1296, column: 22, scope: !7905)
!7914 = !DILocation(line: 1296, column: 20, scope: !7905)
!7915 = !DILocation(line: 1296, column: 7, scope: !7905)
!7916 = !DILocation(line: 1296, column: 2, scope: !7905)
!7917 = !DILocation(line: 1298, column: 16, scope: !7905)
!7918 = !DILocation(line: 1298, column: 14, scope: !7905)
!7919 = !DILocation(line: 1300, column: 23, scope: !7906)
!7920 = !DILocation(line: 1300, column: 29, scope: !7906)
!7921 = !DILocation(line: 1300, column: 27, scope: !7906)
!7922 = !DILocation(line: 1300, column: 35, scope: !7906)
!7923 = !DILocation(line: 1300, column: 33, scope: !7906)
!7924 = !DILocation(line: 1300, column: 40, scope: !7906)
!7925 = !DILocation(line: 1300, column: 45, scope: !7906)
!7926 = !DILocation(line: 1300, column: 18, scope: !7906)
!7927 = !DILocation(line: 1301, column: 14, scope: !7906)
!7928 = !DILocation(line: 1301, column: 21, scope: !7906)
!7929 = !DILocation(line: 1301, column: 27, scope: !7906)
!7930 = !DILocation(line: 1301, column: 25, scope: !7906)
!7931 = !DILocation(line: 1301, column: 18, scope: !7906)
!7932 = !DILocation(line: 1301, column: 42, scope: !7906)
!7933 = !DILocation(line: 1301, column: 40, scope: !7906)
!7934 = !DILocation(line: 1301, column: 12, scope: !7906)
!7935 = !DILocation(line: 1303, column: 14, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1303, column: 7)
!7937 = !DILocation(line: 1303, column: 12, scope: !7936)
!7938 = !DILocation(line: 1303, column: 19, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 1303, column: 7)
!7940 = !DILocation(line: 1303, column: 23, scope: !7939)
!7941 = !DILocation(line: 1303, column: 21, scope: !7939)
!7942 = !DILocation(line: 1303, column: 7, scope: !7936)
!7943 = !DILocation(line: 1305, column: 39, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1305, column: 6)
!7945 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1304, column: 9)
!7946 = !DILocation(line: 1305, column: 45, scope: !7944)
!7947 = !DILocation(line: 1305, column: 51, scope: !7944)
!7948 = !DILocation(line: 1305, column: 57, scope: !7944)
!7949 = !DILocation(line: 1305, column: 63, scope: !7944)
!7950 = !DILocation(line: 1306, column: 11, scope: !7944)
!7951 = !DILocation(line: 1306, column: 15, scope: !7944)
!7952 = !DILocation(line: 1306, column: 21, scope: !7944)
!7953 = !DILocation(line: 1306, column: 26, scope: !7944)
!7954 = !DILocation(line: 1306, column: 31, scope: !7944)
!7955 = !DILocation(line: 1305, column: 6, scope: !7944)
!7956 = !DILocation(line: 1306, column: 37, scope: !7944)
!7957 = !DILocation(line: 1305, column: 6, scope: !7945)
!7958 = !DILocation(line: 1310, column: 37, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 1307, column: 11)
!7960 = !DILocation(line: 1310, column: 21, scope: !7959)
!7961 = !DILocation(line: 1310, column: 57, scope: !7959)
!7962 = !DILocation(line: 1310, column: 42, scope: !7959)
!7963 = !DILocation(line: 1310, column: 67, scope: !7959)
!7964 = !DILocation(line: 1310, column: 62, scope: !7959)
!7965 = !DILocation(line: 1308, column: 4, scope: !7959)
!7966 = !DILocation(line: 1311, column: 14, scope: !7959)
!7967 = !DILocation(line: 1311, column: 4, scope: !7959)
!7968 = !DILocation(line: 1312, column: 4, scope: !7959)
!7969 = !DILocation(line: 1315, column: 20, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1315, column: 6)
!7971 = !DILocation(line: 1315, column: 25, scope: !7970)
!7972 = !DILocation(line: 1315, column: 31, scope: !7970)
!7973 = !DILocation(line: 1315, column: 36, scope: !7970)
!7974 = !DILocation(line: 1315, column: 44, scope: !7970)
!7975 = !DILocation(line: 1315, column: 6, scope: !7970)
!7976 = !DILocation(line: 1315, column: 47, scope: !7970)
!7977 = !DILocation(line: 1315, column: 6, scope: !7945)
!7978 = !DILocation(line: 1319, column: 31, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 1316, column: 11)
!7980 = !DILocation(line: 1319, column: 15, scope: !7979)
!7981 = !DILocation(line: 1319, column: 52, scope: !7979)
!7982 = !DILocation(line: 1319, column: 36, scope: !7979)
!7983 = !DILocation(line: 1320, column: 31, scope: !7979)
!7984 = !DILocation(line: 1320, column: 15, scope: !7979)
!7985 = !DILocation(line: 1317, column: 5, scope: !7979)
!7986 = !DILocation(line: 1321, column: 15, scope: !7979)
!7987 = !DILocation(line: 1321, column: 5, scope: !7979)
!7988 = !DILocation(line: 1322, column: 5, scope: !7979)
!7989 = !DILocation(line: 1324, column: 2, scope: !7945)
!7990 = !DILocation(line: 1303, column: 29, scope: !7939)
!7991 = !DILocation(line: 1303, column: 7, scope: !7939)
!7992 = distinct !{!7992, !7942, !7993}
!7993 = !DILocation(line: 1324, column: 2, scope: !7936)
!7994 = !DILocation(line: 1325, column: 7, scope: !7906)
!7995 = !DILocation(line: 1292, column: 44, scope: !7900)
!7996 = !DILocation(line: 1292, column: 41, scope: !7900)
!7997 = !DILocation(line: 1292, column: 5, scope: !7900)
!7998 = distinct !{!7998, !7903, !7999}
!7999 = !DILocation(line: 1325, column: 7, scope: !7897)
!8000 = !DILocation(line: 1326, column: 5, scope: !7885)
!8001 = !DILocation(line: 1289, column: 43, scope: !7880)
!8002 = !DILocation(line: 1289, column: 40, scope: !7880)
!8003 = !DILocation(line: 1289, column: 3, scope: !7880)
!8004 = distinct !{!8004, !7883, !8005}
!8005 = !DILocation(line: 1326, column: 5, scope: !7877)
!8006 = !DILocation(line: 1327, column: 13, scope: !7815)
!8007 = !DILocation(line: 1327, column: 3, scope: !7815)
!8008 = !DILocation(line: 1329, column: 3, scope: !7815)
!8009 = !DILocation(line: 1330, column: 3, scope: !7815)
!8010 = distinct !DISubprogram(name: "writeBufferToContigStrips", scope: !3, file: !3, line: 1098, type: !8011, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{!110, !193, !116, !105}
!8013 = !DILocalVariable(name: "out", arg: 1, scope: !8010, file: !3, line: 1098, type: !193)
!8014 = !DILocation(line: 1098, column: 44, scope: !8010)
!8015 = !DILocalVariable(name: "buf", arg: 2, scope: !8010, file: !3, line: 1098, type: !116)
!8016 = !DILocation(line: 1098, column: 56, scope: !8010)
!8017 = !DILocalVariable(name: "imagelength", arg: 3, scope: !8010, file: !3, line: 1098, type: !105)
!8018 = !DILocation(line: 1098, column: 68, scope: !8010)
!8019 = !DILocalVariable(name: "row", scope: !8010, file: !3, line: 1100, type: !105)
!8020 = !DILocation(line: 1100, column: 10, scope: !8010)
!8021 = !DILocalVariable(name: "nrows", scope: !8010, file: !3, line: 1100, type: !105)
!8022 = !DILocation(line: 1100, column: 15, scope: !8010)
!8023 = !DILocalVariable(name: "rowsperstrip", scope: !8010, file: !3, line: 1100, type: !105)
!8024 = !DILocation(line: 1100, column: 22, scope: !8010)
!8025 = !DILocalVariable(name: "strip", scope: !8010, file: !3, line: 1101, type: !8026)
!8026 = !DIDerivedType(tag: DW_TAG_typedef, name: "tstrip_t", file: !109, line: 75, baseType: !8027)
!8027 = !DIDerivedType(tag: DW_TAG_typedef, name: "tstrile_t", file: !109, line: 74, baseType: !105)
!8028 = !DILocation(line: 1101, column: 12, scope: !8010)
!8029 = !DILocalVariable(name: "stripsize", scope: !8010, file: !3, line: 1102, type: !117)
!8030 = !DILocation(line: 1102, column: 11, scope: !8010)
!8031 = !DILocation(line: 1104, column: 25, scope: !8010)
!8032 = !DILocation(line: 1104, column: 3, scope: !8010)
!8033 = !DILocation(line: 1105, column: 12, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 1105, column: 3)
!8035 = !DILocation(line: 1105, column: 8, scope: !8034)
!8036 = !DILocation(line: 1105, column: 17, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 1105, column: 3)
!8038 = !DILocation(line: 1105, column: 23, scope: !8037)
!8039 = !DILocation(line: 1105, column: 21, scope: !8037)
!8040 = !DILocation(line: 1105, column: 3, scope: !8034)
!8041 = !DILocation(line: 1107, column: 14, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 1106, column: 5)
!8043 = !DILocation(line: 1107, column: 20, scope: !8042)
!8044 = !DILocation(line: 1107, column: 18, scope: !8042)
!8045 = !DILocation(line: 1107, column: 35, scope: !8042)
!8046 = !DILocation(line: 1107, column: 33, scope: !8042)
!8047 = !DILocation(line: 1107, column: 13, scope: !8042)
!8048 = !DILocation(line: 1108, column: 7, scope: !8042)
!8049 = !DILocation(line: 1108, column: 21, scope: !8042)
!8050 = !DILocation(line: 1108, column: 19, scope: !8042)
!8051 = !DILocation(line: 1108, column: 27, scope: !8042)
!8052 = !DILocation(line: 1107, column: 11, scope: !8042)
!8053 = !DILocation(line: 1109, column: 32, scope: !8042)
!8054 = !DILocation(line: 1109, column: 37, scope: !8042)
!8055 = !DILocation(line: 1109, column: 17, scope: !8042)
!8056 = !DILocation(line: 1109, column: 15, scope: !8042)
!8057 = !DILocation(line: 1110, column: 31, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1110, column: 9)
!8059 = !DILocation(line: 1110, column: 41, scope: !8058)
!8060 = !DILocation(line: 1110, column: 45, scope: !8058)
!8061 = !DILocation(line: 1110, column: 50, scope: !8058)
!8062 = !DILocation(line: 1110, column: 9, scope: !8058)
!8063 = !DILocation(line: 1110, column: 61, scope: !8058)
!8064 = !DILocation(line: 1110, column: 9, scope: !8042)
!8065 = !DILocation(line: 1112, column: 30, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 1111, column: 7)
!8067 = !DILocation(line: 1112, column: 17, scope: !8066)
!8068 = !DILocation(line: 1112, column: 67, scope: !8066)
!8069 = !DILocation(line: 1112, column: 73, scope: !8066)
!8070 = !DILocation(line: 1112, column: 7, scope: !8066)
!8071 = !DILocation(line: 1113, column: 7, scope: !8066)
!8072 = !DILocation(line: 1115, column: 12, scope: !8042)
!8073 = !DILocation(line: 1115, column: 9, scope: !8042)
!8074 = !DILocation(line: 1116, column: 5, scope: !8042)
!8075 = !DILocation(line: 1105, column: 43, scope: !8037)
!8076 = !DILocation(line: 1105, column: 40, scope: !8037)
!8077 = !DILocation(line: 1105, column: 3, scope: !8037)
!8078 = distinct !{!8078, !8040, !8079}
!8079 = !DILocation(line: 1116, column: 5, scope: !8034)
!8080 = !DILocation(line: 1118, column: 3, scope: !8010)
!8081 = !DILocation(line: 1119, column: 3, scope: !8010)
!8082 = distinct !DISubprogram(name: "writeBufferToSeparateStrips", scope: !3, file: !3, line: 1130, type: !8083, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!110, !193, !116, !105, !105, !103, !557}
!8085 = !DILocalVariable(name: "out", arg: 1, scope: !8082, file: !3, line: 1130, type: !193)
!8086 = !DILocation(line: 1130, column: 36, scope: !8082)
!8087 = !DILocalVariable(name: "buf", arg: 2, scope: !8082, file: !3, line: 1130, type: !116)
!8088 = !DILocation(line: 1130, column: 48, scope: !8082)
!8089 = !DILocalVariable(name: "length", arg: 3, scope: !8082, file: !3, line: 1131, type: !105)
!8090 = !DILocation(line: 1131, column: 16, scope: !8082)
!8091 = !DILocalVariable(name: "width", arg: 4, scope: !8082, file: !3, line: 1131, type: !105)
!8092 = !DILocation(line: 1131, column: 31, scope: !8082)
!8093 = !DILocalVariable(name: "spp", arg: 5, scope: !8082, file: !3, line: 1131, type: !103)
!8094 = !DILocation(line: 1131, column: 45, scope: !8082)
!8095 = !DILocalVariable(name: "dump", arg: 6, scope: !8082, file: !3, line: 1132, type: !557)
!8096 = !DILocation(line: 1132, column: 27, scope: !8082)
!8097 = !DILocalVariable(name: "src", scope: !8082, file: !3, line: 1134, type: !116)
!8098 = !DILocation(line: 1134, column: 12, scope: !8082)
!8099 = !DILocalVariable(name: "bps", scope: !8082, file: !3, line: 1135, type: !103)
!8100 = !DILocation(line: 1135, column: 12, scope: !8082)
!8101 = !DILocalVariable(name: "row", scope: !8082, file: !3, line: 1136, type: !105)
!8102 = !DILocation(line: 1136, column: 12, scope: !8082)
!8103 = !DILocalVariable(name: "nrows", scope: !8082, file: !3, line: 1136, type: !105)
!8104 = !DILocation(line: 1136, column: 17, scope: !8082)
!8105 = !DILocalVariable(name: "rowsize", scope: !8082, file: !3, line: 1136, type: !105)
!8106 = !DILocation(line: 1136, column: 24, scope: !8082)
!8107 = !DILocalVariable(name: "rowsperstrip", scope: !8082, file: !3, line: 1136, type: !105)
!8108 = !DILocation(line: 1136, column: 33, scope: !8082)
!8109 = !DILocalVariable(name: "bytes_per_sample", scope: !8082, file: !3, line: 1137, type: !105)
!8110 = !DILocation(line: 1137, column: 12, scope: !8082)
!8111 = !DILocalVariable(name: "s", scope: !8082, file: !3, line: 1138, type: !7616)
!8112 = !DILocation(line: 1138, column: 13, scope: !8082)
!8113 = !DILocalVariable(name: "strip", scope: !8082, file: !3, line: 1139, type: !8026)
!8114 = !DILocation(line: 1139, column: 12, scope: !8082)
!8115 = !DILocalVariable(name: "stripsize", scope: !8082, file: !3, line: 1140, type: !117)
!8116 = !DILocation(line: 1140, column: 12, scope: !8082)
!8117 = !DILocation(line: 1140, column: 38, scope: !8082)
!8118 = !DILocation(line: 1140, column: 24, scope: !8082)
!8119 = !DILocalVariable(name: "rowstripsize", scope: !8082, file: !3, line: 1141, type: !117)
!8120 = !DILocation(line: 1141, column: 12, scope: !8082)
!8121 = !DILocalVariable(name: "scanlinesize", scope: !8082, file: !3, line: 1141, type: !117)
!8122 = !DILocation(line: 1141, column: 27, scope: !8082)
!8123 = !DILocation(line: 1141, column: 59, scope: !8082)
!8124 = !DILocation(line: 1141, column: 42, scope: !8082)
!8125 = !DILocalVariable(name: "total_bytes", scope: !8082, file: !3, line: 1142, type: !117)
!8126 = !DILocation(line: 1142, column: 12, scope: !8082)
!8127 = !DILocalVariable(name: "obuf", scope: !8082, file: !3, line: 1143, type: !7829)
!8128 = !DILocation(line: 1143, column: 12, scope: !8082)
!8129 = !DILocation(line: 1145, column: 32, scope: !8082)
!8130 = !DILocation(line: 1145, column: 10, scope: !8082)
!8131 = !DILocation(line: 1146, column: 23, scope: !8082)
!8132 = !DILocation(line: 1146, column: 10, scope: !8082)
!8133 = !DILocation(line: 1147, column: 23, scope: !8082)
!8134 = !DILocation(line: 1147, column: 27, scope: !8082)
!8135 = !DILocation(line: 1147, column: 32, scope: !8082)
!8136 = !DILocation(line: 1147, column: 20, scope: !8082)
!8137 = !DILocation(line: 1148, column: 15, scope: !8082)
!8138 = !DILocation(line: 1148, column: 21, scope: !8082)
!8139 = !DILocation(line: 1148, column: 19, scope: !8082)
!8140 = !DILocation(line: 1148, column: 27, scope: !8082)
!8141 = !DILocation(line: 1148, column: 25, scope: !8082)
!8142 = !DILocation(line: 1148, column: 34, scope: !8082)
!8143 = !DILocation(line: 1148, column: 39, scope: !8082)
!8144 = !DILocation(line: 1148, column: 11, scope: !8082)
!8145 = !DILocation(line: 1149, column: 18, scope: !8082)
!8146 = !DILocation(line: 1149, column: 33, scope: !8082)
!8147 = !DILocation(line: 1149, column: 31, scope: !8082)
!8148 = !DILocation(line: 1149, column: 53, scope: !8082)
!8149 = !DILocation(line: 1149, column: 59, scope: !8082)
!8150 = !DILocation(line: 1149, column: 50, scope: !8082)
!8151 = !DILocation(line: 1149, column: 16, scope: !8082)
!8152 = !DILocation(line: 1151, column: 23, scope: !8082)
!8153 = !DILocation(line: 1151, column: 10, scope: !8082)
!8154 = !DILocation(line: 1151, column: 8, scope: !8082)
!8155 = !DILocation(line: 1152, column: 7, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 1152, column: 7)
!8157 = !DILocation(line: 1152, column: 12, scope: !8156)
!8158 = !DILocation(line: 1152, column: 7, scope: !8082)
!8159 = !DILocation(line: 1153, column: 5, scope: !8156)
!8160 = !DILocation(line: 1155, column: 10, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 1155, column: 3)
!8162 = !DILocation(line: 1155, column: 8, scope: !8161)
!8163 = !DILocation(line: 1155, column: 15, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 1155, column: 3)
!8165 = !DILocation(line: 1155, column: 19, scope: !8164)
!8166 = !DILocation(line: 1155, column: 17, scope: !8164)
!8167 = !DILocation(line: 1155, column: 3, scope: !8161)
!8168 = !DILocation(line: 1157, column: 14, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 1157, column: 5)
!8170 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 1156, column: 5)
!8171 = !DILocation(line: 1157, column: 10, scope: !8169)
!8172 = !DILocation(line: 1157, column: 19, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 1157, column: 5)
!8174 = !DILocation(line: 1157, column: 25, scope: !8173)
!8175 = !DILocation(line: 1157, column: 23, scope: !8173)
!8176 = !DILocation(line: 1157, column: 5, scope: !8169)
!8177 = !DILocation(line: 1159, column: 16, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 1158, column: 7)
!8179 = !DILocation(line: 1159, column: 22, scope: !8178)
!8180 = !DILocation(line: 1159, column: 20, scope: !8178)
!8181 = !DILocation(line: 1159, column: 37, scope: !8178)
!8182 = !DILocation(line: 1159, column: 35, scope: !8178)
!8183 = !DILocation(line: 1159, column: 15, scope: !8178)
!8184 = !DILocation(line: 1159, column: 47, scope: !8178)
!8185 = !DILocation(line: 1159, column: 56, scope: !8178)
!8186 = !DILocation(line: 1159, column: 54, scope: !8178)
!8187 = !DILocation(line: 1159, column: 62, scope: !8178)
!8188 = !DILocation(line: 1159, column: 13, scope: !8178)
!8189 = !DILocation(line: 1161, column: 34, scope: !8178)
!8190 = !DILocation(line: 1161, column: 39, scope: !8178)
!8191 = !DILocation(line: 1161, column: 19, scope: !8178)
!8192 = !DILocation(line: 1161, column: 17, scope: !8178)
!8193 = !DILocation(line: 1162, column: 13, scope: !8178)
!8194 = !DILocation(line: 1162, column: 20, scope: !8178)
!8195 = !DILocation(line: 1162, column: 26, scope: !8178)
!8196 = !DILocation(line: 1162, column: 24, scope: !8178)
!8197 = !DILocation(line: 1162, column: 17, scope: !8178)
!8198 = !DILocation(line: 1162, column: 11, scope: !8178)
!8199 = !DILocation(line: 1163, column: 22, scope: !8178)
!8200 = !DILocation(line: 1163, column: 19, scope: !8178)
!8201 = !DILocation(line: 1164, column: 15, scope: !8178)
!8202 = !DILocation(line: 1164, column: 27, scope: !8178)
!8203 = !DILocation(line: 1164, column: 7, scope: !8178)
!8204 = !DILocation(line: 1165, column: 40, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 1165, column: 11)
!8206 = !DILocation(line: 1165, column: 46, scope: !8205)
!8207 = !DILocation(line: 1165, column: 51, scope: !8205)
!8208 = !DILocation(line: 1165, column: 58, scope: !8205)
!8209 = !DILocation(line: 1165, column: 65, scope: !8205)
!8210 = !DILocation(line: 1165, column: 68, scope: !8205)
!8211 = !DILocation(line: 1165, column: 73, scope: !8205)
!8212 = !DILocation(line: 1165, column: 78, scope: !8205)
!8213 = !DILocation(line: 1165, column: 11, scope: !8205)
!8214 = !DILocation(line: 1165, column: 11, scope: !8178)
!8215 = !DILocation(line: 1167, column: 19, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 1166, column: 9)
!8217 = !DILocation(line: 1167, column: 9, scope: !8216)
!8218 = !DILocation(line: 1168, column: 9, scope: !8216)
!8219 = !DILocation(line: 1170, column: 12, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 1170, column: 11)
!8221 = !DILocation(line: 1170, column: 18, scope: !8220)
!8222 = !DILocation(line: 1170, column: 26, scope: !8220)
!8223 = !DILocation(line: 1170, column: 35, scope: !8220)
!8224 = !DILocation(line: 1170, column: 39, scope: !8220)
!8225 = !DILocation(line: 1170, column: 45, scope: !8220)
!8226 = !DILocation(line: 1170, column: 51, scope: !8220)
!8227 = !DILocation(line: 1170, column: 11, scope: !8178)
!8228 = !DILocation(line: 1172, column: 19, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1171, column: 9)
!8230 = !DILocation(line: 1172, column: 25, scope: !8229)
!8231 = !DILocation(line: 1172, column: 34, scope: !8229)
!8232 = !DILocation(line: 1172, column: 40, scope: !8229)
!8233 = !DILocation(line: 1174, column: 19, scope: !8229)
!8234 = !DILocation(line: 1174, column: 21, scope: !8229)
!8235 = !DILocation(line: 1174, column: 26, scope: !8229)
!8236 = !DILocation(line: 1174, column: 32, scope: !8229)
!8237 = !DILocation(line: 1174, column: 37, scope: !8229)
!8238 = !DILocation(line: 1174, column: 48, scope: !8229)
!8239 = !DILocation(line: 1174, column: 52, scope: !8229)
!8240 = !DILocation(line: 1174, column: 57, scope: !8229)
!8241 = !DILocation(line: 1174, column: 71, scope: !8229)
!8242 = !DILocation(line: 1174, column: 77, scope: !8229)
!8243 = !DILocation(line: 1174, column: 75, scope: !8229)
!8244 = !DILocation(line: 1172, column: 9, scope: !8229)
!8245 = !DILocation(line: 1175, column: 21, scope: !8229)
!8246 = !DILocation(line: 1175, column: 27, scope: !8229)
!8247 = !DILocation(line: 1175, column: 36, scope: !8229)
!8248 = !DILocation(line: 1175, column: 42, scope: !8229)
!8249 = !DILocation(line: 1175, column: 50, scope: !8229)
!8250 = !DILocation(line: 1175, column: 57, scope: !8229)
!8251 = !DILocation(line: 1175, column: 71, scope: !8229)
!8252 = !DILocation(line: 1175, column: 76, scope: !8229)
!8253 = !DILocation(line: 1175, column: 9, scope: !8229)
!8254 = !DILocation(line: 1176, column: 2, scope: !8229)
!8255 = !DILocation(line: 1178, column: 33, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 1178, column: 11)
!8257 = !DILocation(line: 1178, column: 43, scope: !8256)
!8258 = !DILocation(line: 1178, column: 47, scope: !8256)
!8259 = !DILocation(line: 1178, column: 53, scope: !8256)
!8260 = !DILocation(line: 1178, column: 11, scope: !8256)
!8261 = !DILocation(line: 1178, column: 64, scope: !8256)
!8262 = !DILocation(line: 1178, column: 11, scope: !8178)
!8263 = !DILocation(line: 1180, column: 25, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 1179, column: 9)
!8265 = !DILocation(line: 1180, column: 12, scope: !8264)
!8266 = !DILocation(line: 1180, column: 62, scope: !8264)
!8267 = !DILocation(line: 1180, column: 68, scope: !8264)
!8268 = !DILocation(line: 1180, column: 2, scope: !8264)
!8269 = !DILocation(line: 1181, column: 12, scope: !8264)
!8270 = !DILocation(line: 1181, column: 2, scope: !8264)
!8271 = !DILocation(line: 1182, column: 2, scope: !8264)
!8272 = !DILocation(line: 1184, column: 7, scope: !8178)
!8273 = !DILocation(line: 1157, column: 40, scope: !8173)
!8274 = !DILocation(line: 1157, column: 37, scope: !8173)
!8275 = !DILocation(line: 1157, column: 5, scope: !8173)
!8276 = distinct !{!8276, !8176, !8277}
!8277 = !DILocation(line: 1184, column: 7, scope: !8169)
!8278 = !DILocation(line: 1185, column: 5, scope: !8170)
!8279 = !DILocation(line: 1155, column: 25, scope: !8164)
!8280 = !DILocation(line: 1155, column: 3, scope: !8164)
!8281 = distinct !{!8281, !8167, !8282}
!8282 = !DILocation(line: 1185, column: 5, scope: !8161)
!8283 = !DILocation(line: 1187, column: 13, scope: !8082)
!8284 = !DILocation(line: 1187, column: 3, scope: !8082)
!8285 = !DILocation(line: 1188, column: 3, scope: !8082)
!8286 = !DILocation(line: 1189, column: 1, scope: !8082)
!8287 = distinct !DISubprogram(name: "extractContigSamplesToBuffer", scope: !3, file: !3, line: 3443, type: !8288, scopeLine: 3446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!110, !116, !116, !105, !105, !7616, !103, !103, !557}
!8290 = !DILocalVariable(name: "out", arg: 1, scope: !8287, file: !3, line: 3443, type: !116)
!8291 = !DILocation(line: 3443, column: 37, scope: !8287)
!8292 = !DILocalVariable(name: "in", arg: 2, scope: !8287, file: !3, line: 3443, type: !116)
!8293 = !DILocation(line: 3443, column: 49, scope: !8287)
!8294 = !DILocalVariable(name: "rows", arg: 3, scope: !8287, file: !3, line: 3443, type: !105)
!8295 = !DILocation(line: 3443, column: 60, scope: !8287)
!8296 = !DILocalVariable(name: "cols", arg: 4, scope: !8287, file: !3, line: 3443, type: !105)
!8297 = !DILocation(line: 3443, column: 73, scope: !8287)
!8298 = !DILocalVariable(name: "sample", arg: 5, scope: !8287, file: !3, line: 3444, type: !7616)
!8299 = !DILocation(line: 3444, column: 35, scope: !8287)
!8300 = !DILocalVariable(name: "spp", arg: 6, scope: !8287, file: !3, line: 3444, type: !103)
!8301 = !DILocation(line: 3444, column: 50, scope: !8287)
!8302 = !DILocalVariable(name: "bps", arg: 7, scope: !8287, file: !3, line: 3444, type: !103)
!8303 = !DILocation(line: 3444, column: 62, scope: !8287)
!8304 = !DILocalVariable(name: "dump", arg: 8, scope: !8287, file: !3, line: 3445, type: !557)
!8305 = !DILocation(line: 3445, column: 48, scope: !8287)
!8306 = !DILocalVariable(name: "shift_width", scope: !8287, file: !3, line: 3447, type: !110)
!8307 = !DILocation(line: 3447, column: 10, scope: !8287)
!8308 = !DILocalVariable(name: "bytes_per_sample", scope: !8287, file: !3, line: 3447, type: !110)
!8309 = !DILocation(line: 3447, column: 23, scope: !8287)
!8310 = !DILocalVariable(name: "bytes_per_pixel", scope: !8287, file: !3, line: 3447, type: !110)
!8311 = !DILocation(line: 3447, column: 41, scope: !8287)
!8312 = !DILocalVariable(name: "src_rowsize", scope: !8287, file: !3, line: 3448, type: !105)
!8313 = !DILocation(line: 3448, column: 10, scope: !8287)
!8314 = !DILocalVariable(name: "src_offset", scope: !8287, file: !3, line: 3448, type: !105)
!8315 = !DILocation(line: 3448, column: 23, scope: !8287)
!8316 = !DILocalVariable(name: "row", scope: !8287, file: !3, line: 3448, type: !105)
!8317 = !DILocation(line: 3448, column: 35, scope: !8287)
!8318 = !DILocalVariable(name: "first_col", scope: !8287, file: !3, line: 3448, type: !105)
!8319 = !DILocation(line: 3448, column: 40, scope: !8287)
!8320 = !DILocalVariable(name: "dst_rowsize", scope: !8287, file: !3, line: 3449, type: !105)
!8321 = !DILocation(line: 3449, column: 10, scope: !8287)
!8322 = !DILocalVariable(name: "dst_offset", scope: !8287, file: !3, line: 3449, type: !105)
!8323 = !DILocation(line: 3449, column: 23, scope: !8287)
!8324 = !DILocalVariable(name: "count", scope: !8287, file: !3, line: 3450, type: !7616)
!8325 = !DILocation(line: 3450, column: 13, scope: !8287)
!8326 = !DILocalVariable(name: "src", scope: !8287, file: !3, line: 3451, type: !116)
!8327 = !DILocation(line: 3451, column: 10, scope: !8287)
!8328 = !DILocalVariable(name: "dst", scope: !8287, file: !3, line: 3451, type: !116)
!8329 = !DILocation(line: 3451, column: 16, scope: !8287)
!8330 = !DILocation(line: 3453, column: 23, scope: !8287)
!8331 = !DILocation(line: 3453, column: 27, scope: !8287)
!8332 = !DILocation(line: 3453, column: 32, scope: !8287)
!8333 = !DILocation(line: 3453, column: 20, scope: !8287)
!8334 = !DILocation(line: 3454, column: 24, scope: !8287)
!8335 = !DILocation(line: 3454, column: 30, scope: !8287)
!8336 = !DILocation(line: 3454, column: 28, scope: !8287)
!8337 = !DILocation(line: 3454, column: 35, scope: !8287)
!8338 = !DILocation(line: 3454, column: 40, scope: !8287)
!8339 = !DILocation(line: 3454, column: 20, scope: !8287)
!8340 = !DILocation(line: 3455, column: 8, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3455, column: 7)
!8342 = !DILocation(line: 3455, column: 12, scope: !8341)
!8343 = !DILocation(line: 3455, column: 17, scope: !8341)
!8344 = !DILocation(line: 3455, column: 7, scope: !8287)
!8345 = !DILocation(line: 3456, column: 17, scope: !8341)
!8346 = !DILocation(line: 3456, column: 5, scope: !8341)
!8347 = !DILocation(line: 3459, column: 9, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 3459, column: 9)
!8349 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 3458, column: 5)
!8350 = !DILocation(line: 3459, column: 28, scope: !8348)
!8351 = !DILocation(line: 3459, column: 45, scope: !8348)
!8352 = !DILocation(line: 3459, column: 25, scope: !8348)
!8353 = !DILocation(line: 3459, column: 9, scope: !8349)
!8354 = !DILocation(line: 3460, column: 21, scope: !8348)
!8355 = !DILocation(line: 3460, column: 19, scope: !8348)
!8356 = !DILocation(line: 3460, column: 7, scope: !8348)
!8357 = !DILocation(line: 3462, column: 21, scope: !8348)
!8358 = !DILocation(line: 3462, column: 38, scope: !8348)
!8359 = !DILocation(line: 3462, column: 19, scope: !8348)
!8360 = !DILocation(line: 3464, column: 19, scope: !8287)
!8361 = !DILocation(line: 3464, column: 25, scope: !8287)
!8362 = !DILocation(line: 3464, column: 23, scope: !8287)
!8363 = !DILocation(line: 3464, column: 31, scope: !8287)
!8364 = !DILocation(line: 3464, column: 29, scope: !8287)
!8365 = !DILocation(line: 3464, column: 37, scope: !8287)
!8366 = !DILocation(line: 3464, column: 42, scope: !8287)
!8367 = !DILocation(line: 3464, column: 15, scope: !8287)
!8368 = !DILocation(line: 3465, column: 19, scope: !8287)
!8369 = !DILocation(line: 3465, column: 25, scope: !8287)
!8370 = !DILocation(line: 3465, column: 23, scope: !8287)
!8371 = !DILocation(line: 3465, column: 31, scope: !8287)
!8372 = !DILocation(line: 3465, column: 36, scope: !8287)
!8373 = !DILocation(line: 3465, column: 15, scope: !8287)
!8374 = !DILocation(line: 3467, column: 8, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3467, column: 7)
!8376 = !DILocation(line: 3467, column: 14, scope: !8375)
!8377 = !DILocation(line: 3467, column: 22, scope: !8375)
!8378 = !DILocation(line: 3467, column: 31, scope: !8375)
!8379 = !DILocation(line: 3467, column: 35, scope: !8375)
!8380 = !DILocation(line: 3467, column: 41, scope: !8375)
!8381 = !DILocation(line: 3467, column: 47, scope: !8375)
!8382 = !DILocation(line: 3467, column: 7, scope: !8287)
!8383 = !DILocation(line: 3469, column: 17, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 3468, column: 5)
!8385 = !DILocation(line: 3469, column: 23, scope: !8384)
!8386 = !DILocation(line: 3469, column: 32, scope: !8384)
!8387 = !DILocation(line: 3469, column: 38, scope: !8384)
!8388 = !DILocation(line: 3470, column: 39, scope: !8384)
!8389 = !DILocation(line: 3470, column: 46, scope: !8384)
!8390 = !DILocation(line: 3470, column: 51, scope: !8384)
!8391 = !DILocation(line: 3470, column: 56, scope: !8384)
!8392 = !DILocation(line: 3469, column: 5, scope: !8384)
!8393 = !DILocation(line: 3471, column: 5, scope: !8384)
!8394 = !DILocation(line: 3472, column: 12, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3472, column: 3)
!8396 = !DILocation(line: 3472, column: 8, scope: !8395)
!8397 = !DILocation(line: 3472, column: 17, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3472, column: 3)
!8399 = !DILocation(line: 3472, column: 23, scope: !8398)
!8400 = !DILocation(line: 3472, column: 21, scope: !8398)
!8401 = !DILocation(line: 3472, column: 3, scope: !8395)
!8402 = !DILocation(line: 3474, column: 18, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3473, column: 5)
!8404 = !DILocation(line: 3474, column: 24, scope: !8403)
!8405 = !DILocation(line: 3474, column: 22, scope: !8403)
!8406 = !DILocation(line: 3474, column: 16, scope: !8403)
!8407 = !DILocation(line: 3475, column: 18, scope: !8403)
!8408 = !DILocation(line: 3475, column: 24, scope: !8403)
!8409 = !DILocation(line: 3475, column: 22, scope: !8403)
!8410 = !DILocation(line: 3475, column: 16, scope: !8403)
!8411 = !DILocation(line: 3476, column: 11, scope: !8403)
!8412 = !DILocation(line: 3476, column: 16, scope: !8403)
!8413 = !DILocation(line: 3476, column: 14, scope: !8403)
!8414 = !DILocation(line: 3476, column: 9, scope: !8403)
!8415 = !DILocation(line: 3477, column: 11, scope: !8403)
!8416 = !DILocation(line: 3477, column: 17, scope: !8403)
!8417 = !DILocation(line: 3477, column: 15, scope: !8403)
!8418 = !DILocation(line: 3477, column: 9, scope: !8403)
!8419 = !DILocation(line: 3480, column: 13, scope: !8403)
!8420 = !DILocation(line: 3480, column: 5, scope: !8403)
!8421 = !DILocation(line: 3482, column: 46, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 3482, column: 19)
!8423 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3481, column: 7)
!8424 = !DILocation(line: 3482, column: 51, scope: !8422)
!8425 = !DILocation(line: 3482, column: 56, scope: !8422)
!8426 = !DILocation(line: 3482, column: 62, scope: !8422)
!8427 = !DILocation(line: 3483, column: 46, scope: !8422)
!8428 = !DILocation(line: 3483, column: 51, scope: !8422)
!8429 = !DILocation(line: 3483, column: 57, scope: !8422)
!8430 = !DILocation(line: 3483, column: 64, scope: !8422)
!8431 = !DILocation(line: 3483, column: 75, scope: !8422)
!8432 = !DILocation(line: 3482, column: 19, scope: !8422)
!8433 = !DILocation(line: 3482, column: 19, scope: !8423)
!8434 = !DILocation(line: 3484, column: 17, scope: !8422)
!8435 = !DILocation(line: 3485, column: 9, scope: !8423)
!8436 = !DILocation(line: 3486, column: 19, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 3486, column: 19)
!8438 = !DILocation(line: 3486, column: 23, scope: !8437)
!8439 = !DILocation(line: 3486, column: 19, scope: !8423)
!8440 = !DILocation(line: 3488, column: 48, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 3488, column: 21)
!8442 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 3487, column: 17)
!8443 = !DILocation(line: 3488, column: 53, scope: !8441)
!8444 = !DILocation(line: 3488, column: 58, scope: !8441)
!8445 = !DILocation(line: 3488, column: 64, scope: !8441)
!8446 = !DILocation(line: 3489, column: 48, scope: !8441)
!8447 = !DILocation(line: 3489, column: 53, scope: !8441)
!8448 = !DILocation(line: 3489, column: 58, scope: !8441)
!8449 = !DILocation(line: 3489, column: 65, scope: !8441)
!8450 = !DILocation(line: 3489, column: 76, scope: !8441)
!8451 = !DILocation(line: 3488, column: 21, scope: !8441)
!8452 = !DILocation(line: 3488, column: 21, scope: !8442)
!8453 = !DILocation(line: 3490, column: 12, scope: !8441)
!8454 = !DILocation(line: 3491, column: 10, scope: !8442)
!8455 = !DILocation(line: 3494, column: 50, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 3494, column: 22)
!8457 = !DILocation(line: 3494, column: 55, scope: !8456)
!8458 = !DILocation(line: 3494, column: 60, scope: !8456)
!8459 = !DILocation(line: 3494, column: 66, scope: !8456)
!8460 = !DILocation(line: 3495, column: 50, scope: !8456)
!8461 = !DILocation(line: 3495, column: 55, scope: !8456)
!8462 = !DILocation(line: 3495, column: 60, scope: !8456)
!8463 = !DILocation(line: 3495, column: 67, scope: !8456)
!8464 = !DILocation(line: 3495, column: 78, scope: !8456)
!8465 = !DILocation(line: 3494, column: 22, scope: !8456)
!8466 = !DILocation(line: 3494, column: 22, scope: !8437)
!8467 = !DILocation(line: 3496, column: 11, scope: !8456)
!8468 = !DILocation(line: 3497, column: 8, scope: !8423)
!8469 = !DILocation(line: 3498, column: 47, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 3498, column: 19)
!8471 = !DILocation(line: 3498, column: 52, scope: !8470)
!8472 = !DILocation(line: 3498, column: 57, scope: !8470)
!8473 = !DILocation(line: 3498, column: 63, scope: !8470)
!8474 = !DILocation(line: 3499, column: 47, scope: !8470)
!8475 = !DILocation(line: 3499, column: 52, scope: !8470)
!8476 = !DILocation(line: 3499, column: 58, scope: !8470)
!8477 = !DILocation(line: 3499, column: 65, scope: !8470)
!8478 = !DILocation(line: 3499, column: 76, scope: !8470)
!8479 = !DILocation(line: 3498, column: 19, scope: !8470)
!8480 = !DILocation(line: 3498, column: 19, scope: !8423)
!8481 = !DILocation(line: 3500, column: 11, scope: !8470)
!8482 = !DILocation(line: 3501, column: 8, scope: !8423)
!8483 = !DILocation(line: 3504, column: 47, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 3504, column: 19)
!8485 = !DILocation(line: 3504, column: 52, scope: !8484)
!8486 = !DILocation(line: 3504, column: 57, scope: !8484)
!8487 = !DILocation(line: 3504, column: 63, scope: !8484)
!8488 = !DILocation(line: 3505, column: 47, scope: !8484)
!8489 = !DILocation(line: 3505, column: 52, scope: !8484)
!8490 = !DILocation(line: 3505, column: 58, scope: !8484)
!8491 = !DILocation(line: 3505, column: 65, scope: !8484)
!8492 = !DILocation(line: 3505, column: 76, scope: !8484)
!8493 = !DILocation(line: 3504, column: 19, scope: !8484)
!8494 = !DILocation(line: 3504, column: 19, scope: !8423)
!8495 = !DILocation(line: 3506, column: 11, scope: !8484)
!8496 = !DILocation(line: 3507, column: 8, scope: !8423)
!8497 = !DILocation(line: 3508, column: 88, scope: !8423)
!8498 = !DILocation(line: 3508, column: 16, scope: !8423)
!8499 = !DILocation(line: 3509, column: 9, scope: !8423)
!8500 = !DILocation(line: 3511, column: 10, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3511, column: 9)
!8502 = !DILocation(line: 3511, column: 16, scope: !8501)
!8503 = !DILocation(line: 3511, column: 24, scope: !8501)
!8504 = !DILocation(line: 3511, column: 33, scope: !8501)
!8505 = !DILocation(line: 3511, column: 37, scope: !8501)
!8506 = !DILocation(line: 3511, column: 43, scope: !8501)
!8507 = !DILocation(line: 3511, column: 49, scope: !8501)
!8508 = !DILocation(line: 3511, column: 9, scope: !8403)
!8509 = !DILocation(line: 3512, column: 19, scope: !8501)
!8510 = !DILocation(line: 3512, column: 25, scope: !8501)
!8511 = !DILocation(line: 3512, column: 34, scope: !8501)
!8512 = !DILocation(line: 3512, column: 40, scope: !8501)
!8513 = !DILocation(line: 3512, column: 51, scope: !8501)
!8514 = !DILocation(line: 3512, column: 64, scope: !8501)
!8515 = !DILocation(line: 3512, column: 69, scope: !8501)
!8516 = !DILocation(line: 3512, column: 7, scope: !8501)
!8517 = !DILocation(line: 3513, column: 5, scope: !8403)
!8518 = !DILocation(line: 3472, column: 32, scope: !8398)
!8519 = !DILocation(line: 3472, column: 3, scope: !8398)
!8520 = distinct !{!8520, !8401, !8521}
!8521 = !DILocation(line: 3513, column: 5, scope: !8395)
!8522 = !DILocation(line: 3515, column: 3, scope: !8287)
!8523 = !DILocation(line: 3516, column: 3, scope: !8287)
!8524 = distinct !DISubprogram(name: "dump_buffer", scope: !3, file: !3, line: 2601, type: !8525, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{!110, !470, !110, !105, !105, !105, !106}
!8527 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !8524, file: !3, line: 2601, type: !470)
!8528 = !DILocation(line: 2601, column: 31, scope: !8524)
!8529 = !DILocalVariable(name: "format", arg: 2, scope: !8524, file: !3, line: 2601, type: !110)
!8530 = !DILocation(line: 2601, column: 45, scope: !8524)
!8531 = !DILocalVariable(name: "rows", arg: 3, scope: !8524, file: !3, line: 2601, type: !105)
!8532 = !DILocation(line: 2601, column: 60, scope: !8524)
!8533 = !DILocalVariable(name: "width", arg: 4, scope: !8524, file: !3, line: 2601, type: !105)
!8534 = !DILocation(line: 2601, column: 73, scope: !8524)
!8535 = !DILocalVariable(name: "row", arg: 5, scope: !8524, file: !3, line: 2602, type: !105)
!8536 = !DILocation(line: 2602, column: 25, scope: !8524)
!8537 = !DILocalVariable(name: "buff", arg: 6, scope: !8524, file: !3, line: 2602, type: !106)
!8538 = !DILocation(line: 2602, column: 45, scope: !8524)
!8539 = !DILocalVariable(name: "j", scope: !8524, file: !3, line: 2604, type: !110)
!8540 = !DILocation(line: 2604, column: 7, scope: !8524)
!8541 = !DILocalVariable(name: "k", scope: !8524, file: !3, line: 2604, type: !110)
!8542 = !DILocation(line: 2604, column: 10, scope: !8524)
!8543 = !DILocalVariable(name: "i", scope: !8524, file: !3, line: 2605, type: !105)
!8544 = !DILocation(line: 2605, column: 10, scope: !8524)
!8545 = !DILocalVariable(name: "dump_ptr", scope: !8524, file: !3, line: 2606, type: !106)
!8546 = !DILocation(line: 2606, column: 19, scope: !8524)
!8547 = !DILocation(line: 2608, column: 7, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2608, column: 7)
!8549 = !DILocation(line: 2608, column: 16, scope: !8548)
!8550 = !DILocation(line: 2608, column: 7, scope: !8524)
!8551 = !DILocation(line: 2610, column: 5, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 2609, column: 5)
!8553 = !DILocation(line: 2611, column: 5, scope: !8552)
!8554 = !DILocation(line: 2614, column: 10, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2614, column: 3)
!8556 = !DILocation(line: 2614, column: 8, scope: !8555)
!8557 = !DILocation(line: 2614, column: 15, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 2614, column: 3)
!8559 = !DILocation(line: 2614, column: 19, scope: !8558)
!8560 = !DILocation(line: 2614, column: 17, scope: !8558)
!8561 = !DILocation(line: 2614, column: 3, scope: !8555)
!8562 = !DILocation(line: 2616, column: 16, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 2615, column: 5)
!8564 = !DILocation(line: 2616, column: 24, scope: !8563)
!8565 = !DILocation(line: 2616, column: 28, scope: !8563)
!8566 = !DILocation(line: 2616, column: 26, scope: !8563)
!8567 = !DILocation(line: 2616, column: 21, scope: !8563)
!8568 = !DILocation(line: 2616, column: 14, scope: !8563)
!8569 = !DILocation(line: 2617, column: 9, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 2617, column: 9)
!8571 = !DILocation(line: 2617, column: 16, scope: !8570)
!8572 = !DILocation(line: 2617, column: 9, scope: !8563)
!8573 = !DILocation(line: 2618, column: 18, scope: !8570)
!8574 = !DILocation(line: 2618, column: 28, scope: !8570)
!8575 = !DILocation(line: 2620, column: 11, scope: !8570)
!8576 = !DILocation(line: 2620, column: 17, scope: !8570)
!8577 = !DILocation(line: 2620, column: 15, scope: !8570)
!8578 = !DILocation(line: 2620, column: 19, scope: !8570)
!8579 = !DILocation(line: 2620, column: 24, scope: !8570)
!8580 = !DILocation(line: 2620, column: 31, scope: !8570)
!8581 = !DILocation(line: 2620, column: 37, scope: !8570)
!8582 = !DILocation(line: 2620, column: 35, scope: !8570)
!8583 = !DILocation(line: 2618, column: 7, scope: !8570)
!8584 = !DILocation(line: 2622, column: 12, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 2622, column: 5)
!8586 = !DILocation(line: 2622, column: 21, scope: !8585)
!8587 = !DILocation(line: 2622, column: 19, scope: !8585)
!8588 = !DILocation(line: 2622, column: 10, scope: !8585)
!8589 = !DILocation(line: 2622, column: 28, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2622, column: 5)
!8591 = !DILocation(line: 2622, column: 30, scope: !8590)
!8592 = !DILocation(line: 2622, column: 5, scope: !8585)
!8593 = !DILocation(line: 2623, column: 18, scope: !8590)
!8594 = !DILocation(line: 2623, column: 28, scope: !8590)
!8595 = !DILocation(line: 2623, column: 40, scope: !8590)
!8596 = !DILocation(line: 2623, column: 7, scope: !8590)
!8597 = !DILocation(line: 2622, column: 39, scope: !8590)
!8598 = !DILocation(line: 2622, column: 48, scope: !8590)
!8599 = !DILocation(line: 2622, column: 64, scope: !8590)
!8600 = !DILocation(line: 2622, column: 5, scope: !8590)
!8601 = distinct !{!8601, !8592, !8602}
!8602 = !DILocation(line: 2623, column: 52, scope: !8585)
!8603 = !DILocation(line: 2624, column: 9, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 2624, column: 9)
!8605 = !DILocation(line: 2624, column: 11, scope: !8604)
!8606 = !DILocation(line: 2624, column: 9, scope: !8563)
!8607 = !DILocation(line: 2625, column: 18, scope: !8604)
!8608 = !DILocation(line: 2625, column: 28, scope: !8604)
!8609 = !DILocation(line: 2625, column: 40, scope: !8604)
!8610 = !DILocation(line: 2625, column: 50, scope: !8604)
!8611 = !DILocation(line: 2625, column: 7, scope: !8604)
!8612 = !DILocation(line: 2626, column: 5, scope: !8563)
!8613 = !DILocation(line: 2614, column: 26, scope: !8558)
!8614 = !DILocation(line: 2614, column: 3, scope: !8558)
!8615 = distinct !{!8615, !8561, !8616}
!8616 = !DILocation(line: 2626, column: 5, scope: !8555)
!8617 = !DILocation(line: 2627, column: 3, scope: !8524)
!8618 = !DILocation(line: 2628, column: 3, scope: !8524)
!8619 = distinct !DISubprogram(name: "dump_data", scope: !3, file: !3, line: 2404, type: !8620, scopeLine: 2405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{!110, !470, !110, !146, !106, !105}
!8622 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !8619, file: !3, line: 2404, type: !470)
!8623 = !DILocation(line: 2404, column: 29, scope: !8619)
!8624 = !DILocalVariable(name: "format", arg: 2, scope: !8619, file: !3, line: 2404, type: !110)
!8625 = !DILocation(line: 2404, column: 43, scope: !8619)
!8626 = !DILocalVariable(name: "dump_tag", arg: 3, scope: !8619, file: !3, line: 2404, type: !146)
!8627 = !DILocation(line: 2404, column: 57, scope: !8619)
!8628 = !DILocalVariable(name: "data", arg: 4, scope: !8619, file: !3, line: 2404, type: !106)
!8629 = !DILocation(line: 2404, column: 82, scope: !8619)
!8630 = !DILocalVariable(name: "count", arg: 5, scope: !8619, file: !3, line: 2404, type: !105)
!8631 = !DILocation(line: 2404, column: 95, scope: !8619)
!8632 = !DILocalVariable(name: "j", scope: !8619, file: !3, line: 2406, type: !110)
!8633 = !DILocation(line: 2406, column: 7, scope: !8619)
!8634 = !DILocalVariable(name: "k", scope: !8619, file: !3, line: 2406, type: !110)
!8635 = !DILocation(line: 2406, column: 10, scope: !8619)
!8636 = !DILocalVariable(name: "i", scope: !8619, file: !3, line: 2407, type: !105)
!8637 = !DILocation(line: 2407, column: 10, scope: !8619)
!8638 = !DILocalVariable(name: "dump_array", scope: !8619, file: !3, line: 2408, type: !2030)
!8639 = !DILocation(line: 2408, column: 9, scope: !8619)
!8640 = !DILocalVariable(name: "bitset", scope: !8619, file: !3, line: 2409, type: !107)
!8641 = !DILocation(line: 2409, column: 17, scope: !8619)
!8642 = !DILocation(line: 2411, column: 7, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 2411, column: 7)
!8644 = !DILocation(line: 2411, column: 16, scope: !8643)
!8645 = !DILocation(line: 2411, column: 7, scope: !8619)
!8646 = !DILocation(line: 2413, column: 5, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 2412, column: 5)
!8648 = !DILocation(line: 2414, column: 5, scope: !8647)
!8649 = !DILocation(line: 2417, column: 7, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 2417, column: 7)
!8651 = !DILocation(line: 2417, column: 14, scope: !8650)
!8652 = !DILocation(line: 2417, column: 7, scope: !8619)
!8653 = !DILocation(line: 2419, column: 14, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2418, column: 5)
!8655 = !DILocation(line: 2419, column: 32, scope: !8654)
!8656 = !DILocation(line: 2419, column: 5, scope: !8654)
!8657 = !DILocation(line: 2420, column: 12, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8654, file: !3, line: 2420, column: 5)
!8659 = !DILocation(line: 2420, column: 10, scope: !8658)
!8660 = !DILocation(line: 2420, column: 17, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 2420, column: 5)
!8662 = !DILocation(line: 2420, column: 21, scope: !8661)
!8663 = !DILocation(line: 2420, column: 19, scope: !8661)
!8664 = !DILocation(line: 2420, column: 5, scope: !8658)
!8665 = !DILocation(line: 2422, column: 14, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 2422, column: 7)
!8667 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 2421, column: 7)
!8668 = !DILocation(line: 2422, column: 21, scope: !8666)
!8669 = !DILocation(line: 2422, column: 12, scope: !8666)
!8670 = !DILocation(line: 2422, column: 26, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 2422, column: 7)
!8672 = !DILocation(line: 2422, column: 28, scope: !8671)
!8673 = !DILocation(line: 2422, column: 7, scope: !8666)
!8674 = !DILocation(line: 2424, column: 14, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 2423, column: 9)
!8676 = !DILocation(line: 2424, column: 21, scope: !8675)
!8677 = !DILocation(line: 2424, column: 19, scope: !8675)
!8678 = !DILocation(line: 2424, column: 12, scope: !8675)
!8679 = !DILocation(line: 2424, column: 11, scope: !8675)
!8680 = !DILocation(line: 2424, column: 49, scope: !8675)
!8681 = !DILocation(line: 2424, column: 46, scope: !8675)
!8682 = !DILocation(line: 2424, column: 25, scope: !8675)
!8683 = !DILocation(line: 2424, column: 9, scope: !8675)
!8684 = !DILocation(line: 2425, column: 29, scope: !8675)
!8685 = !DILocation(line: 2425, column: 18, scope: !8675)
!8686 = !DILocation(line: 2425, column: 34, scope: !8675)
!8687 = !DILocation(line: 2425, column: 33, scope: !8675)
!8688 = !DILocation(line: 2425, column: 9, scope: !8675)
!8689 = !DILocation(line: 2426, column: 9, scope: !8675)
!8690 = !DILocation(line: 2422, column: 34, scope: !8671)
!8691 = !DILocation(line: 2422, column: 39, scope: !8671)
!8692 = !DILocation(line: 2422, column: 7, scope: !8671)
!8693 = distinct !{!8693, !8673, !8694}
!8694 = !DILocation(line: 2426, column: 9, scope: !8666)
!8695 = !DILocation(line: 2427, column: 7, scope: !8667)
!8696 = !DILocation(line: 2427, column: 21, scope: !8667)
!8697 = !DILocation(line: 2428, column: 16, scope: !8667)
!8698 = !DILocation(line: 2428, column: 32, scope: !8667)
!8699 = !DILocation(line: 2428, column: 7, scope: !8667)
!8700 = !DILocation(line: 2429, column: 7, scope: !8667)
!8701 = !DILocation(line: 2420, column: 29, scope: !8661)
!8702 = !DILocation(line: 2420, column: 5, scope: !8661)
!8703 = distinct !{!8703, !8664, !8704}
!8704 = !DILocation(line: 2429, column: 7, scope: !8658)
!8705 = !DILocation(line: 2430, column: 14, scope: !8654)
!8706 = !DILocation(line: 2430, column: 5, scope: !8654)
!8707 = !DILocation(line: 2431, column: 5, scope: !8654)
!8708 = !DILocation(line: 2434, column: 18, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 2434, column: 9)
!8710 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2433, column: 5)
!8711 = !DILocation(line: 2434, column: 27, scope: !8709)
!8712 = !DILocation(line: 2434, column: 34, scope: !8709)
!8713 = !DILocation(line: 2434, column: 10, scope: !8709)
!8714 = !DILocation(line: 2434, column: 48, scope: !8709)
!8715 = !DILocation(line: 2434, column: 45, scope: !8709)
!8716 = !DILocation(line: 2434, column: 9, scope: !8710)
!8717 = !DILocation(line: 2436, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 2435, column: 7)
!8719 = !DILocation(line: 2437, column: 7, scope: !8718)
!8720 = !DILocation(line: 2441, column: 3, scope: !8619)
!8721 = !DILocation(line: 2442, column: 3, scope: !8619)
!8722 = distinct !DISubprogram(name: "extractContigSamplesBytes", scope: !3, file: !3, line: 2637, type: !8723, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8723 = !DISubroutineType(types: !8724)
!8724 = !{!110, !116, !116, !105, !7616, !103, !103, !7616, !105, !105}
!8725 = !DILocalVariable(name: "in", arg: 1, scope: !8722, file: !3, line: 2637, type: !116)
!8726 = !DILocation(line: 2637, column: 35, scope: !8722)
!8727 = !DILocalVariable(name: "out", arg: 2, scope: !8722, file: !3, line: 2637, type: !116)
!8728 = !DILocation(line: 2637, column: 46, scope: !8722)
!8729 = !DILocalVariable(name: "cols", arg: 3, scope: !8722, file: !3, line: 2637, type: !105)
!8730 = !DILocation(line: 2637, column: 58, scope: !8722)
!8731 = !DILocalVariable(name: "sample", arg: 4, scope: !8722, file: !3, line: 2638, type: !7616)
!8732 = !DILocation(line: 2638, column: 38, scope: !8722)
!8733 = !DILocalVariable(name: "spp", arg: 5, scope: !8722, file: !3, line: 2638, type: !103)
!8734 = !DILocation(line: 2638, column: 53, scope: !8722)
!8735 = !DILocalVariable(name: "bps", arg: 6, scope: !8722, file: !3, line: 2638, type: !103)
!8736 = !DILocation(line: 2638, column: 65, scope: !8722)
!8737 = !DILocalVariable(name: "count", arg: 7, scope: !8722, file: !3, line: 2639, type: !7616)
!8738 = !DILocation(line: 2639, column: 38, scope: !8722)
!8739 = !DILocalVariable(name: "start", arg: 8, scope: !8722, file: !3, line: 2639, type: !105)
!8740 = !DILocation(line: 2639, column: 52, scope: !8722)
!8741 = !DILocalVariable(name: "end", arg: 9, scope: !8722, file: !3, line: 2639, type: !105)
!8742 = !DILocation(line: 2639, column: 66, scope: !8722)
!8743 = !DILocalVariable(name: "i", scope: !8722, file: !3, line: 2641, type: !110)
!8744 = !DILocation(line: 2641, column: 7, scope: !8722)
!8745 = !DILocalVariable(name: "bytes_per_sample", scope: !8722, file: !3, line: 2641, type: !110)
!8746 = !DILocation(line: 2641, column: 10, scope: !8722)
!8747 = !DILocalVariable(name: "sindex", scope: !8722, file: !3, line: 2641, type: !110)
!8748 = !DILocation(line: 2641, column: 28, scope: !8722)
!8749 = !DILocalVariable(name: "col", scope: !8722, file: !3, line: 2642, type: !105)
!8750 = !DILocation(line: 2642, column: 10, scope: !8722)
!8751 = !DILocalVariable(name: "dst_rowsize", scope: !8722, file: !3, line: 2642, type: !105)
!8752 = !DILocation(line: 2642, column: 15, scope: !8722)
!8753 = !DILocalVariable(name: "bit_offset", scope: !8722, file: !3, line: 2642, type: !105)
!8754 = !DILocation(line: 2642, column: 28, scope: !8722)
!8755 = !DILocalVariable(name: "src_byte", scope: !8722, file: !3, line: 2643, type: !105)
!8756 = !DILocation(line: 2643, column: 10, scope: !8722)
!8757 = !DILocalVariable(name: "src_bit", scope: !8722, file: !3, line: 2643, type: !105)
!8758 = !DILocation(line: 2643, column: 20, scope: !8722)
!8759 = !DILocalVariable(name: "src", scope: !8722, file: !3, line: 2644, type: !116)
!8760 = !DILocation(line: 2644, column: 10, scope: !8722)
!8761 = !DILocation(line: 2644, column: 16, scope: !8722)
!8762 = !DILocalVariable(name: "dst", scope: !8722, file: !3, line: 2645, type: !116)
!8763 = !DILocation(line: 2645, column: 10, scope: !8722)
!8764 = !DILocation(line: 2645, column: 16, scope: !8722)
!8765 = !DILocation(line: 2647, column: 8, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 2647, column: 7)
!8767 = !DILocation(line: 2647, column: 12, scope: !8766)
!8768 = !DILocation(line: 2647, column: 21, scope: !8766)
!8769 = !DILocation(line: 2647, column: 25, scope: !8766)
!8770 = !DILocation(line: 2647, column: 29, scope: !8766)
!8771 = !DILocation(line: 2647, column: 7, scope: !8722)
!8772 = !DILocation(line: 2649, column: 5, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 2648, column: 5)
!8774 = !DILocation(line: 2650, column: 5, scope: !8773)
!8775 = !DILocation(line: 2653, column: 8, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 2653, column: 7)
!8777 = !DILocation(line: 2653, column: 16, scope: !8776)
!8778 = !DILocation(line: 2653, column: 14, scope: !8776)
!8779 = !DILocation(line: 2653, column: 21, scope: !8776)
!8780 = !DILocation(line: 2653, column: 25, scope: !8776)
!8781 = !DILocation(line: 2653, column: 33, scope: !8776)
!8782 = !DILocation(line: 2653, column: 31, scope: !8776)
!8783 = !DILocation(line: 2653, column: 7, scope: !8722)
!8784 = !DILocation(line: 2656, column: 57, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 2654, column: 5)
!8786 = !DILocation(line: 2655, column: 5, scope: !8785)
!8787 = !DILocation(line: 2657, column: 11, scope: !8785)
!8788 = !DILocation(line: 2658, column: 5, scope: !8785)
!8789 = !DILocation(line: 2659, column: 8, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 2659, column: 7)
!8791 = !DILocation(line: 2659, column: 12, scope: !8790)
!8792 = !DILocation(line: 2659, column: 18, scope: !8790)
!8793 = !DILocation(line: 2659, column: 22, scope: !8790)
!8794 = !DILocation(line: 2659, column: 28, scope: !8790)
!8795 = !DILocation(line: 2659, column: 26, scope: !8790)
!8796 = !DILocation(line: 2659, column: 7, scope: !8722)
!8797 = !DILocation(line: 2662, column: 55, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 2660, column: 5)
!8799 = !DILocation(line: 2661, column: 5, scope: !8798)
!8800 = !DILocation(line: 2663, column: 11, scope: !8798)
!8801 = !DILocation(line: 2663, column: 9, scope: !8798)
!8802 = !DILocation(line: 2664, column: 5, scope: !8798)
!8803 = !DILocation(line: 2666, column: 18, scope: !8722)
!8804 = !DILocation(line: 2666, column: 25, scope: !8722)
!8805 = !DILocation(line: 2666, column: 31, scope: !8722)
!8806 = !DILocation(line: 2666, column: 29, scope: !8722)
!8807 = !DILocation(line: 2666, column: 22, scope: !8722)
!8808 = !DILocation(line: 2666, column: 40, scope: !8722)
!8809 = !DILocation(line: 2666, column: 38, scope: !8722)
!8810 = !DILocation(line: 2666, column: 47, scope: !8722)
!8811 = !DILocation(line: 2666, column: 15, scope: !8722)
!8812 = !DILocation(line: 2668, column: 23, scope: !8722)
!8813 = !DILocation(line: 2668, column: 27, scope: !8722)
!8814 = !DILocation(line: 2668, column: 32, scope: !8722)
!8815 = !DILocation(line: 2668, column: 20, scope: !8722)
!8816 = !DILocation(line: 2670, column: 7, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 2670, column: 7)
!8818 = !DILocation(line: 2670, column: 16, scope: !8817)
!8819 = !DILocation(line: 2670, column: 13, scope: !8817)
!8820 = !DILocation(line: 2670, column: 7, scope: !8722)
!8821 = !DILocation(line: 2672, column: 11, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 2671, column: 5)
!8823 = !DILocation(line: 2672, column: 17, scope: !8822)
!8824 = !DILocation(line: 2672, column: 25, scope: !8822)
!8825 = !DILocation(line: 2672, column: 23, scope: !8822)
!8826 = !DILocation(line: 2672, column: 31, scope: !8822)
!8827 = !DILocation(line: 2672, column: 29, scope: !8822)
!8828 = !DILocation(line: 2672, column: 14, scope: !8822)
!8829 = !DILocation(line: 2672, column: 9, scope: !8822)
!8830 = !DILocation(line: 2673, column: 18, scope: !8822)
!8831 = !DILocation(line: 2673, column: 23, scope: !8822)
!8832 = !DILocation(line: 2673, column: 28, scope: !8822)
!8833 = !DILocation(line: 2673, column: 5, scope: !8822)
!8834 = !DILocation(line: 2674, column: 5, scope: !8822)
!8835 = !DILocation(line: 2677, column: 16, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2677, column: 5)
!8837 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 2676, column: 5)
!8838 = !DILocation(line: 2677, column: 14, scope: !8836)
!8839 = !DILocation(line: 2677, column: 10, scope: !8836)
!8840 = !DILocation(line: 2677, column: 23, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2677, column: 5)
!8842 = !DILocation(line: 2677, column: 29, scope: !8841)
!8843 = !DILocation(line: 2677, column: 27, scope: !8841)
!8844 = !DILocation(line: 2677, column: 5, scope: !8836)
!8845 = !DILocation(line: 2679, column: 21, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 2679, column: 7)
!8847 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 2678, column: 7)
!8848 = !DILocation(line: 2679, column: 19, scope: !8846)
!8849 = !DILocation(line: 2679, column: 12, scope: !8846)
!8850 = !DILocation(line: 2679, column: 30, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 2679, column: 7)
!8852 = !DILocation(line: 2679, column: 39, scope: !8851)
!8853 = !DILocation(line: 2679, column: 37, scope: !8851)
!8854 = !DILocation(line: 2679, column: 44, scope: !8851)
!8855 = !DILocation(line: 2679, column: 48, scope: !8851)
!8856 = !DILocation(line: 2679, column: 58, scope: !8851)
!8857 = !DILocation(line: 2679, column: 67, scope: !8851)
!8858 = !DILocation(line: 2679, column: 65, scope: !8851)
!8859 = !DILocation(line: 2679, column: 55, scope: !8851)
!8860 = !DILocation(line: 0, scope: !8851)
!8861 = !DILocation(line: 2679, column: 7, scope: !8846)
!8862 = !DILocation(line: 2681, column: 22, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 2680, column: 9)
!8864 = !DILocation(line: 2681, column: 28, scope: !8863)
!8865 = !DILocation(line: 2681, column: 26, scope: !8863)
!8866 = !DILocation(line: 2681, column: 34, scope: !8863)
!8867 = !DILocation(line: 2681, column: 32, scope: !8863)
!8868 = !DILocation(line: 2681, column: 20, scope: !8863)
!8869 = !DILocation(line: 2682, column: 13, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2682, column: 13)
!8871 = !DILocation(line: 2682, column: 20, scope: !8870)
!8872 = !DILocation(line: 2682, column: 13, scope: !8863)
!8873 = !DILocation(line: 2684, column: 22, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 2683, column: 11)
!8875 = !DILocation(line: 2684, column: 33, scope: !8874)
!8876 = !DILocation(line: 2684, column: 20, scope: !8874)
!8877 = !DILocation(line: 2685, column: 22, scope: !8874)
!8878 = !DILocation(line: 2685, column: 33, scope: !8874)
!8879 = !DILocation(line: 2685, column: 20, scope: !8874)
!8880 = !DILocation(line: 2686, column: 11, scope: !8874)
!8881 = !DILocation(line: 2689, column: 23, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 2688, column: 11)
!8883 = !DILocation(line: 2689, column: 37, scope: !8882)
!8884 = !DILocation(line: 2689, column: 46, scope: !8882)
!8885 = !DILocation(line: 2689, column: 44, scope: !8882)
!8886 = !DILocation(line: 2689, column: 34, scope: !8882)
!8887 = !DILocation(line: 2689, column: 52, scope: !8882)
!8888 = !DILocation(line: 2689, column: 20, scope: !8882)
!8889 = !DILocation(line: 2690, column: 23, scope: !8882)
!8890 = !DILocation(line: 2690, column: 37, scope: !8882)
!8891 = !DILocation(line: 2690, column: 46, scope: !8882)
!8892 = !DILocation(line: 2690, column: 44, scope: !8882)
!8893 = !DILocation(line: 2690, column: 34, scope: !8882)
!8894 = !DILocation(line: 2690, column: 52, scope: !8882)
!8895 = !DILocation(line: 2690, column: 20, scope: !8882)
!8896 = !DILocation(line: 2692, column: 15, scope: !8863)
!8897 = !DILocation(line: 2692, column: 20, scope: !8863)
!8898 = !DILocation(line: 2692, column: 18, scope: !8863)
!8899 = !DILocation(line: 2692, column: 13, scope: !8863)
!8900 = !DILocation(line: 2693, column: 16, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2693, column: 9)
!8902 = !DILocation(line: 2693, column: 14, scope: !8901)
!8903 = !DILocation(line: 2693, column: 21, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 2693, column: 9)
!8905 = !DILocation(line: 2693, column: 25, scope: !8904)
!8906 = !DILocation(line: 2693, column: 23, scope: !8904)
!8907 = !DILocation(line: 2693, column: 9, scope: !8901)
!8908 = !DILocation(line: 2694, column: 26, scope: !8904)
!8909 = !DILocation(line: 2694, column: 22, scope: !8904)
!8910 = !DILocation(line: 2694, column: 17, scope: !8904)
!8911 = !DILocation(line: 2694, column: 20, scope: !8904)
!8912 = !DILocation(line: 2694, column: 13, scope: !8904)
!8913 = !DILocation(line: 2693, column: 44, scope: !8904)
!8914 = !DILocation(line: 2693, column: 9, scope: !8904)
!8915 = distinct !{!8915, !8907, !8916}
!8916 = !DILocation(line: 2694, column: 26, scope: !8901)
!8917 = !DILocation(line: 2695, column: 9, scope: !8863)
!8918 = !DILocation(line: 2679, column: 82, scope: !8851)
!8919 = !DILocation(line: 2679, column: 7, scope: !8851)
!8920 = distinct !{!8920, !8861, !8921}
!8921 = !DILocation(line: 2695, column: 9, scope: !8846)
!8922 = !DILocation(line: 2696, column: 7, scope: !8847)
!8923 = !DILocation(line: 2677, column: 37, scope: !8841)
!8924 = !DILocation(line: 2677, column: 5, scope: !8841)
!8925 = distinct !{!8925, !8844, !8926}
!8926 = !DILocation(line: 2696, column: 7, scope: !8836)
!8927 = !DILocation(line: 2699, column: 3, scope: !8722)
!8928 = !DILocation(line: 2700, column: 3, scope: !8722)
!8929 = distinct !DISubprogram(name: "extractContigSamples8bits", scope: !3, file: !3, line: 2703, type: !8723, scopeLine: 2706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!8930 = !DILocalVariable(name: "in", arg: 1, scope: !8929, file: !3, line: 2703, type: !116)
!8931 = !DILocation(line: 2703, column: 35, scope: !8929)
!8932 = !DILocalVariable(name: "out", arg: 2, scope: !8929, file: !3, line: 2703, type: !116)
!8933 = !DILocation(line: 2703, column: 46, scope: !8929)
!8934 = !DILocalVariable(name: "cols", arg: 3, scope: !8929, file: !3, line: 2703, type: !105)
!8935 = !DILocation(line: 2703, column: 58, scope: !8929)
!8936 = !DILocalVariable(name: "sample", arg: 4, scope: !8929, file: !3, line: 2704, type: !7616)
!8937 = !DILocation(line: 2704, column: 38, scope: !8929)
!8938 = !DILocalVariable(name: "spp", arg: 5, scope: !8929, file: !3, line: 2704, type: !103)
!8939 = !DILocation(line: 2704, column: 53, scope: !8929)
!8940 = !DILocalVariable(name: "bps", arg: 6, scope: !8929, file: !3, line: 2704, type: !103)
!8941 = !DILocation(line: 2704, column: 65, scope: !8929)
!8942 = !DILocalVariable(name: "count", arg: 7, scope: !8929, file: !3, line: 2705, type: !7616)
!8943 = !DILocation(line: 2705, column: 38, scope: !8929)
!8944 = !DILocalVariable(name: "start", arg: 8, scope: !8929, file: !3, line: 2705, type: !105)
!8945 = !DILocation(line: 2705, column: 52, scope: !8929)
!8946 = !DILocalVariable(name: "end", arg: 9, scope: !8929, file: !3, line: 2705, type: !105)
!8947 = !DILocation(line: 2705, column: 66, scope: !8929)
!8948 = !DILocalVariable(name: "ready_bits", scope: !8929, file: !3, line: 2707, type: !110)
!8949 = !DILocation(line: 2707, column: 10, scope: !8929)
!8950 = !DILocalVariable(name: "sindex", scope: !8929, file: !3, line: 2707, type: !110)
!8951 = !DILocation(line: 2707, column: 26, scope: !8929)
!8952 = !DILocalVariable(name: "col", scope: !8929, file: !3, line: 2708, type: !105)
!8953 = !DILocation(line: 2708, column: 10, scope: !8929)
!8954 = !DILocalVariable(name: "src_byte", scope: !8929, file: !3, line: 2708, type: !105)
!8955 = !DILocation(line: 2708, column: 15, scope: !8929)
!8956 = !DILocalVariable(name: "src_bit", scope: !8929, file: !3, line: 2708, type: !105)
!8957 = !DILocation(line: 2708, column: 25, scope: !8929)
!8958 = !DILocalVariable(name: "bit_offset", scope: !8929, file: !3, line: 2708, type: !105)
!8959 = !DILocation(line: 2708, column: 34, scope: !8929)
!8960 = !DILocalVariable(name: "maskbits", scope: !8929, file: !3, line: 2709, type: !114)
!8961 = !DILocation(line: 2709, column: 10, scope: !8929)
!8962 = !DILocalVariable(name: "matchbits", scope: !8929, file: !3, line: 2709, type: !114)
!8963 = !DILocation(line: 2709, column: 24, scope: !8929)
!8964 = !DILocalVariable(name: "buff1", scope: !8929, file: !3, line: 2710, type: !114)
!8965 = !DILocation(line: 2710, column: 10, scope: !8929)
!8966 = !DILocalVariable(name: "buff2", scope: !8929, file: !3, line: 2710, type: !114)
!8967 = !DILocation(line: 2710, column: 21, scope: !8929)
!8968 = !DILocalVariable(name: "src", scope: !8929, file: !3, line: 2711, type: !116)
!8969 = !DILocation(line: 2711, column: 10, scope: !8929)
!8970 = !DILocation(line: 2711, column: 16, scope: !8929)
!8971 = !DILocalVariable(name: "dst", scope: !8929, file: !3, line: 2712, type: !116)
!8972 = !DILocation(line: 2712, column: 10, scope: !8929)
!8973 = !DILocation(line: 2712, column: 16, scope: !8929)
!8974 = !DILocation(line: 2714, column: 8, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2714, column: 7)
!8976 = !DILocation(line: 2714, column: 12, scope: !8975)
!8977 = !DILocation(line: 2714, column: 21, scope: !8975)
!8978 = !DILocation(line: 2714, column: 25, scope: !8975)
!8979 = !DILocation(line: 2714, column: 29, scope: !8975)
!8980 = !DILocation(line: 2714, column: 7, scope: !8929)
!8981 = !DILocation(line: 2716, column: 5, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 2715, column: 5)
!8983 = !DILocation(line: 2717, column: 5, scope: !8982)
!8984 = !DILocation(line: 2720, column: 8, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2720, column: 7)
!8986 = !DILocation(line: 2720, column: 16, scope: !8985)
!8987 = !DILocation(line: 2720, column: 14, scope: !8985)
!8988 = !DILocation(line: 2720, column: 21, scope: !8985)
!8989 = !DILocation(line: 2720, column: 25, scope: !8985)
!8990 = !DILocation(line: 2720, column: 33, scope: !8985)
!8991 = !DILocation(line: 2720, column: 31, scope: !8985)
!8992 = !DILocation(line: 2720, column: 7, scope: !8929)
!8993 = !DILocation(line: 2723, column: 57, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 2721, column: 5)
!8995 = !DILocation(line: 2722, column: 5, scope: !8994)
!8996 = !DILocation(line: 2724, column: 11, scope: !8994)
!8997 = !DILocation(line: 2725, column: 5, scope: !8994)
!8998 = !DILocation(line: 2726, column: 8, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2726, column: 7)
!9000 = !DILocation(line: 2726, column: 12, scope: !8999)
!9001 = !DILocation(line: 2726, column: 18, scope: !8999)
!9002 = !DILocation(line: 2726, column: 22, scope: !8999)
!9003 = !DILocation(line: 2726, column: 28, scope: !8999)
!9004 = !DILocation(line: 2726, column: 26, scope: !8999)
!9005 = !DILocation(line: 2726, column: 7, scope: !8929)
!9006 = !DILocation(line: 2729, column: 55, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 2727, column: 5)
!9008 = !DILocation(line: 2728, column: 5, scope: !9007)
!9009 = !DILocation(line: 2730, column: 11, scope: !9007)
!9010 = !DILocation(line: 2730, column: 9, scope: !9007)
!9011 = !DILocation(line: 2731, column: 5, scope: !9007)
!9012 = !DILocation(line: 2733, column: 14, scope: !8929)
!9013 = !DILocation(line: 2734, column: 34, scope: !8929)
!9014 = !DILocation(line: 2734, column: 32, scope: !8929)
!9015 = !DILocation(line: 2734, column: 25, scope: !8929)
!9016 = !DILocation(line: 2734, column: 15, scope: !8929)
!9017 = !DILocation(line: 2734, column: 12, scope: !8929)
!9018 = !DILocation(line: 2735, column: 17, scope: !8929)
!9019 = !DILocation(line: 2735, column: 9, scope: !8929)
!9020 = !DILocation(line: 2736, column: 14, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2736, column: 3)
!9022 = !DILocation(line: 2736, column: 12, scope: !9021)
!9023 = !DILocation(line: 2736, column: 8, scope: !9021)
!9024 = !DILocation(line: 2736, column: 21, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 2736, column: 3)
!9026 = !DILocation(line: 2736, column: 27, scope: !9025)
!9027 = !DILocation(line: 2736, column: 25, scope: !9025)
!9028 = !DILocation(line: 2736, column: 3, scope: !9021)
!9029 = !DILocation(line: 2738, column: 18, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 2737, column: 5)
!9031 = !DILocation(line: 2738, column: 24, scope: !9030)
!9032 = !DILocation(line: 2738, column: 22, scope: !9030)
!9033 = !DILocation(line: 2738, column: 30, scope: !9030)
!9034 = !DILocation(line: 2738, column: 28, scope: !9030)
!9035 = !DILocation(line: 2738, column: 16, scope: !9030)
!9036 = !DILocation(line: 2739, column: 19, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 2739, column: 5)
!9038 = !DILocation(line: 2739, column: 17, scope: !9037)
!9039 = !DILocation(line: 2739, column: 10, scope: !9037)
!9040 = !DILocation(line: 2739, column: 28, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 2739, column: 5)
!9042 = !DILocation(line: 2739, column: 37, scope: !9041)
!9043 = !DILocation(line: 2739, column: 35, scope: !9041)
!9044 = !DILocation(line: 2739, column: 42, scope: !9041)
!9045 = !DILocation(line: 2739, column: 46, scope: !9041)
!9046 = !DILocation(line: 2739, column: 56, scope: !9041)
!9047 = !DILocation(line: 2739, column: 65, scope: !9041)
!9048 = !DILocation(line: 2739, column: 63, scope: !9041)
!9049 = !DILocation(line: 2739, column: 53, scope: !9041)
!9050 = !DILocation(line: 0, scope: !9041)
!9051 = !DILocation(line: 2739, column: 5, scope: !9037)
!9052 = !DILocation(line: 2741, column: 11, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 2741, column: 11)
!9054 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 2740, column: 7)
!9055 = !DILocation(line: 2741, column: 18, scope: !9053)
!9056 = !DILocation(line: 2741, column: 11, scope: !9054)
!9057 = !DILocation(line: 2743, column: 20, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 2742, column: 9)
!9059 = !DILocation(line: 2743, column: 31, scope: !9058)
!9060 = !DILocation(line: 2743, column: 18, scope: !9058)
!9061 = !DILocation(line: 2744, column: 20, scope: !9058)
!9062 = !DILocation(line: 2744, column: 31, scope: !9058)
!9063 = !DILocation(line: 2744, column: 18, scope: !9058)
!9064 = !DILocation(line: 2745, column: 9, scope: !9058)
!9065 = !DILocation(line: 2748, column: 21, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 2747, column: 9)
!9067 = !DILocation(line: 2748, column: 35, scope: !9066)
!9068 = !DILocation(line: 2748, column: 44, scope: !9066)
!9069 = !DILocation(line: 2748, column: 42, scope: !9066)
!9070 = !DILocation(line: 2748, column: 32, scope: !9066)
!9071 = !DILocation(line: 2748, column: 50, scope: !9066)
!9072 = !DILocation(line: 2748, column: 18, scope: !9066)
!9073 = !DILocation(line: 2749, column: 21, scope: !9066)
!9074 = !DILocation(line: 2749, column: 35, scope: !9066)
!9075 = !DILocation(line: 2749, column: 44, scope: !9066)
!9076 = !DILocation(line: 2749, column: 42, scope: !9066)
!9077 = !DILocation(line: 2749, column: 32, scope: !9066)
!9078 = !DILocation(line: 2749, column: 50, scope: !9066)
!9079 = !DILocation(line: 2749, column: 18, scope: !9066)
!9080 = !DILocation(line: 2752, column: 13, scope: !9054)
!9081 = !DILocation(line: 2752, column: 18, scope: !9054)
!9082 = !DILocation(line: 2752, column: 16, scope: !9054)
!9083 = !DILocation(line: 2752, column: 11, scope: !9054)
!9084 = !DILocation(line: 2753, column: 19, scope: !9054)
!9085 = !DILocation(line: 2753, column: 36, scope: !9054)
!9086 = !DILocation(line: 2753, column: 34, scope: !9054)
!9087 = !DILocation(line: 2753, column: 46, scope: !9054)
!9088 = !DILocation(line: 2753, column: 44, scope: !9054)
!9089 = !DILocation(line: 2753, column: 28, scope: !9054)
!9090 = !DILocation(line: 2753, column: 17, scope: !9054)
!9091 = !DILocation(line: 2754, column: 18, scope: !9054)
!9092 = !DILocation(line: 2754, column: 17, scope: !9054)
!9093 = !DILocation(line: 2754, column: 16, scope: !9054)
!9094 = !DILocation(line: 2754, column: 25, scope: !9054)
!9095 = !DILocation(line: 2754, column: 23, scope: !9054)
!9096 = !DILocation(line: 2754, column: 40, scope: !9054)
!9097 = !DILocation(line: 2754, column: 36, scope: !9054)
!9098 = !DILocation(line: 2754, column: 15, scope: !9054)
!9099 = !DILocation(line: 2754, column: 13, scope: !9054)
!9100 = !DILocation(line: 2757, column: 11, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 2757, column: 11)
!9102 = !DILocation(line: 2757, column: 22, scope: !9101)
!9103 = !DILocation(line: 2757, column: 11, scope: !9054)
!9104 = !DILocation(line: 2759, column: 18, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 2758, column: 9)
!9106 = !DILocation(line: 2759, column: 13, scope: !9105)
!9107 = !DILocation(line: 2759, column: 16, scope: !9105)
!9108 = !DILocation(line: 2760, column: 17, scope: !9105)
!9109 = !DILocation(line: 2760, column: 15, scope: !9105)
!9110 = !DILocation(line: 2761, column: 20, scope: !9105)
!9111 = !DILocation(line: 2762, column: 9, scope: !9105)
!9112 = !DILocation(line: 2764, column: 18, scope: !9101)
!9113 = !DILocation(line: 2764, column: 27, scope: !9101)
!9114 = !DILocation(line: 2764, column: 36, scope: !9101)
!9115 = !DILocation(line: 2764, column: 33, scope: !9101)
!9116 = !DILocation(line: 2764, column: 24, scope: !9101)
!9117 = !DILocation(line: 2764, column: 17, scope: !9101)
!9118 = !DILocation(line: 2764, column: 15, scope: !9101)
!9119 = !DILocation(line: 2765, column: 21, scope: !9054)
!9120 = !DILocation(line: 2765, column: 18, scope: !9054)
!9121 = !DILocation(line: 2766, column: 7, scope: !9054)
!9122 = !DILocation(line: 2739, column: 80, scope: !9041)
!9123 = !DILocation(line: 2739, column: 5, scope: !9041)
!9124 = distinct !{!9124, !9051, !9125}
!9125 = !DILocation(line: 2766, column: 7, scope: !9037)
!9126 = !DILocation(line: 2767, column: 5, scope: !9030)
!9127 = !DILocation(line: 2736, column: 35, scope: !9025)
!9128 = !DILocation(line: 2736, column: 3, scope: !9025)
!9129 = distinct !{!9129, !9028, !9130}
!9130 = !DILocation(line: 2767, column: 5, scope: !9021)
!9131 = !DILocation(line: 2769, column: 3, scope: !8929)
!9132 = !DILocation(line: 2769, column: 10, scope: !8929)
!9133 = !DILocation(line: 2769, column: 21, scope: !8929)
!9134 = !DILocation(line: 2771, column: 14, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2770, column: 5)
!9136 = !DILocation(line: 2771, column: 49, scope: !9135)
!9137 = !DILocation(line: 2771, column: 47, scope: !9135)
!9138 = !DILocation(line: 2771, column: 41, scope: !9135)
!9139 = !DILocation(line: 2771, column: 20, scope: !9135)
!9140 = !DILocation(line: 2771, column: 13, scope: !9135)
!9141 = !DILocation(line: 2771, column: 11, scope: !9135)
!9142 = !DILocation(line: 2772, column: 14, scope: !9135)
!9143 = !DILocation(line: 2772, column: 9, scope: !9135)
!9144 = !DILocation(line: 2772, column: 12, scope: !9135)
!9145 = !DILocation(line: 2773, column: 16, scope: !9135)
!9146 = distinct !{!9146, !9131, !9147}
!9147 = !DILocation(line: 2774, column: 5, scope: !8929)
!9148 = !DILocation(line: 2776, column: 3, scope: !8929)
!9149 = !DILocation(line: 2777, column: 3, scope: !8929)
!9150 = distinct !DISubprogram(name: "extractContigSamples16bits", scope: !3, file: !3, line: 2780, type: !8723, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!9151 = !DILocalVariable(name: "in", arg: 1, scope: !9150, file: !3, line: 2780, type: !116)
!9152 = !DILocation(line: 2780, column: 36, scope: !9150)
!9153 = !DILocalVariable(name: "out", arg: 2, scope: !9150, file: !3, line: 2780, type: !116)
!9154 = !DILocation(line: 2780, column: 47, scope: !9150)
!9155 = !DILocalVariable(name: "cols", arg: 3, scope: !9150, file: !3, line: 2780, type: !105)
!9156 = !DILocation(line: 2780, column: 59, scope: !9150)
!9157 = !DILocalVariable(name: "sample", arg: 4, scope: !9150, file: !3, line: 2781, type: !7616)
!9158 = !DILocation(line: 2781, column: 39, scope: !9150)
!9159 = !DILocalVariable(name: "spp", arg: 5, scope: !9150, file: !3, line: 2781, type: !103)
!9160 = !DILocation(line: 2781, column: 54, scope: !9150)
!9161 = !DILocalVariable(name: "bps", arg: 6, scope: !9150, file: !3, line: 2781, type: !103)
!9162 = !DILocation(line: 2781, column: 66, scope: !9150)
!9163 = !DILocalVariable(name: "count", arg: 7, scope: !9150, file: !3, line: 2782, type: !7616)
!9164 = !DILocation(line: 2782, column: 39, scope: !9150)
!9165 = !DILocalVariable(name: "start", arg: 8, scope: !9150, file: !3, line: 2782, type: !105)
!9166 = !DILocation(line: 2782, column: 53, scope: !9150)
!9167 = !DILocalVariable(name: "end", arg: 9, scope: !9150, file: !3, line: 2782, type: !105)
!9168 = !DILocation(line: 2782, column: 67, scope: !9150)
!9169 = !DILocalVariable(name: "ready_bits", scope: !9150, file: !3, line: 2784, type: !110)
!9170 = !DILocation(line: 2784, column: 10, scope: !9150)
!9171 = !DILocalVariable(name: "sindex", scope: !9150, file: !3, line: 2784, type: !110)
!9172 = !DILocation(line: 2784, column: 26, scope: !9150)
!9173 = !DILocalVariable(name: "col", scope: !9150, file: !3, line: 2785, type: !105)
!9174 = !DILocation(line: 2785, column: 10, scope: !9150)
!9175 = !DILocalVariable(name: "src_byte", scope: !9150, file: !3, line: 2785, type: !105)
!9176 = !DILocation(line: 2785, column: 15, scope: !9150)
!9177 = !DILocalVariable(name: "src_bit", scope: !9150, file: !3, line: 2785, type: !105)
!9178 = !DILocation(line: 2785, column: 25, scope: !9150)
!9179 = !DILocalVariable(name: "bit_offset", scope: !9150, file: !3, line: 2785, type: !105)
!9180 = !DILocation(line: 2785, column: 34, scope: !9150)
!9181 = !DILocalVariable(name: "maskbits", scope: !9150, file: !3, line: 2786, type: !103)
!9182 = !DILocation(line: 2786, column: 10, scope: !9150)
!9183 = !DILocalVariable(name: "matchbits", scope: !9150, file: !3, line: 2786, type: !103)
!9184 = !DILocation(line: 2786, column: 24, scope: !9150)
!9185 = !DILocalVariable(name: "buff1", scope: !9150, file: !3, line: 2787, type: !103)
!9186 = !DILocation(line: 2787, column: 10, scope: !9150)
!9187 = !DILocalVariable(name: "buff2", scope: !9150, file: !3, line: 2787, type: !103)
!9188 = !DILocation(line: 2787, column: 21, scope: !9150)
!9189 = !DILocalVariable(name: "bytebuff", scope: !9150, file: !3, line: 2788, type: !114)
!9190 = !DILocation(line: 2788, column: 10, scope: !9150)
!9191 = !DILocalVariable(name: "src", scope: !9150, file: !3, line: 2789, type: !116)
!9192 = !DILocation(line: 2789, column: 10, scope: !9150)
!9193 = !DILocation(line: 2789, column: 16, scope: !9150)
!9194 = !DILocalVariable(name: "dst", scope: !9150, file: !3, line: 2790, type: !116)
!9195 = !DILocation(line: 2790, column: 10, scope: !9150)
!9196 = !DILocation(line: 2790, column: 16, scope: !9150)
!9197 = !DILocation(line: 2792, column: 8, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2792, column: 7)
!9199 = !DILocation(line: 2792, column: 12, scope: !9198)
!9200 = !DILocation(line: 2792, column: 21, scope: !9198)
!9201 = !DILocation(line: 2792, column: 25, scope: !9198)
!9202 = !DILocation(line: 2792, column: 29, scope: !9198)
!9203 = !DILocation(line: 2792, column: 7, scope: !9150)
!9204 = !DILocation(line: 2794, column: 5, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2793, column: 5)
!9206 = !DILocation(line: 2795, column: 5, scope: !9205)
!9207 = !DILocation(line: 2798, column: 8, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2798, column: 7)
!9209 = !DILocation(line: 2798, column: 16, scope: !9208)
!9210 = !DILocation(line: 2798, column: 14, scope: !9208)
!9211 = !DILocation(line: 2798, column: 21, scope: !9208)
!9212 = !DILocation(line: 2798, column: 25, scope: !9208)
!9213 = !DILocation(line: 2798, column: 33, scope: !9208)
!9214 = !DILocation(line: 2798, column: 31, scope: !9208)
!9215 = !DILocation(line: 2798, column: 7, scope: !9150)
!9216 = !DILocation(line: 2801, column: 57, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 2799, column: 5)
!9218 = !DILocation(line: 2800, column: 5, scope: !9217)
!9219 = !DILocation(line: 2802, column: 11, scope: !9217)
!9220 = !DILocation(line: 2803, column: 5, scope: !9217)
!9221 = !DILocation(line: 2804, column: 8, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2804, column: 7)
!9223 = !DILocation(line: 2804, column: 12, scope: !9222)
!9224 = !DILocation(line: 2804, column: 18, scope: !9222)
!9225 = !DILocation(line: 2804, column: 22, scope: !9222)
!9226 = !DILocation(line: 2804, column: 28, scope: !9222)
!9227 = !DILocation(line: 2804, column: 26, scope: !9222)
!9228 = !DILocation(line: 2804, column: 7, scope: !9150)
!9229 = !DILocation(line: 2807, column: 55, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 2805, column: 5)
!9231 = !DILocation(line: 2806, column: 5, scope: !9230)
!9232 = !DILocation(line: 2808, column: 11, scope: !9230)
!9233 = !DILocation(line: 2808, column: 9, scope: !9230)
!9234 = !DILocation(line: 2809, column: 5, scope: !9230)
!9235 = !DILocation(line: 2811, column: 14, scope: !9150)
!9236 = !DILocation(line: 2812, column: 34, scope: !9150)
!9237 = !DILocation(line: 2812, column: 32, scope: !9150)
!9238 = !DILocation(line: 2812, column: 25, scope: !9150)
!9239 = !DILocation(line: 2812, column: 14, scope: !9150)
!9240 = !DILocation(line: 2812, column: 12, scope: !9150)
!9241 = !DILocation(line: 2814, column: 14, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2814, column: 3)
!9243 = !DILocation(line: 2814, column: 12, scope: !9242)
!9244 = !DILocation(line: 2814, column: 8, scope: !9242)
!9245 = !DILocation(line: 2814, column: 21, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 2814, column: 3)
!9247 = !DILocation(line: 2814, column: 27, scope: !9246)
!9248 = !DILocation(line: 2814, column: 25, scope: !9246)
!9249 = !DILocation(line: 2814, column: 3, scope: !9242)
!9250 = !DILocation(line: 2816, column: 18, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 2815, column: 5)
!9252 = !DILocation(line: 2816, column: 24, scope: !9251)
!9253 = !DILocation(line: 2816, column: 22, scope: !9251)
!9254 = !DILocation(line: 2816, column: 30, scope: !9251)
!9255 = !DILocation(line: 2816, column: 28, scope: !9251)
!9256 = !DILocation(line: 2816, column: 16, scope: !9251)
!9257 = !DILocation(line: 2817, column: 19, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 2817, column: 5)
!9259 = !DILocation(line: 2817, column: 17, scope: !9258)
!9260 = !DILocation(line: 2817, column: 10, scope: !9258)
!9261 = !DILocation(line: 2817, column: 28, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 2817, column: 5)
!9263 = !DILocation(line: 2817, column: 37, scope: !9262)
!9264 = !DILocation(line: 2817, column: 35, scope: !9262)
!9265 = !DILocation(line: 2817, column: 42, scope: !9262)
!9266 = !DILocation(line: 2817, column: 46, scope: !9262)
!9267 = !DILocation(line: 2817, column: 56, scope: !9262)
!9268 = !DILocation(line: 2817, column: 65, scope: !9262)
!9269 = !DILocation(line: 2817, column: 63, scope: !9262)
!9270 = !DILocation(line: 2817, column: 53, scope: !9262)
!9271 = !DILocation(line: 0, scope: !9262)
!9272 = !DILocation(line: 2817, column: 5, scope: !9258)
!9273 = !DILocation(line: 2819, column: 11, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 2819, column: 11)
!9275 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 2818, column: 7)
!9276 = !DILocation(line: 2819, column: 18, scope: !9274)
!9277 = !DILocation(line: 2819, column: 11, scope: !9275)
!9278 = !DILocation(line: 2821, column: 20, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 2820, column: 9)
!9280 = !DILocation(line: 2821, column: 31, scope: !9279)
!9281 = !DILocation(line: 2821, column: 18, scope: !9279)
!9282 = !DILocation(line: 2822, column: 20, scope: !9279)
!9283 = !DILocation(line: 2822, column: 31, scope: !9279)
!9284 = !DILocation(line: 2822, column: 18, scope: !9279)
!9285 = !DILocation(line: 2823, column: 9, scope: !9279)
!9286 = !DILocation(line: 2826, column: 21, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 2825, column: 9)
!9288 = !DILocation(line: 2826, column: 35, scope: !9287)
!9289 = !DILocation(line: 2826, column: 44, scope: !9287)
!9290 = !DILocation(line: 2826, column: 42, scope: !9287)
!9291 = !DILocation(line: 2826, column: 32, scope: !9287)
!9292 = !DILocation(line: 2826, column: 50, scope: !9287)
!9293 = !DILocation(line: 2826, column: 18, scope: !9287)
!9294 = !DILocation(line: 2827, column: 21, scope: !9287)
!9295 = !DILocation(line: 2827, column: 35, scope: !9287)
!9296 = !DILocation(line: 2827, column: 44, scope: !9287)
!9297 = !DILocation(line: 2827, column: 42, scope: !9287)
!9298 = !DILocation(line: 2827, column: 32, scope: !9287)
!9299 = !DILocation(line: 2827, column: 50, scope: !9287)
!9300 = !DILocation(line: 2827, column: 18, scope: !9287)
!9301 = !DILocation(line: 2830, column: 13, scope: !9275)
!9302 = !DILocation(line: 2830, column: 18, scope: !9275)
!9303 = !DILocation(line: 2830, column: 16, scope: !9275)
!9304 = !DILocation(line: 2830, column: 11, scope: !9275)
!9305 = !DILocation(line: 2831, column: 19, scope: !9275)
!9306 = !DILocation(line: 2831, column: 37, scope: !9275)
!9307 = !DILocation(line: 2831, column: 35, scope: !9275)
!9308 = !DILocation(line: 2831, column: 47, scope: !9275)
!9309 = !DILocation(line: 2831, column: 45, scope: !9275)
!9310 = !DILocation(line: 2831, column: 28, scope: !9275)
!9311 = !DILocation(line: 2831, column: 17, scope: !9275)
!9312 = !DILocation(line: 2833, column: 11, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 2833, column: 11)
!9314 = !DILocation(line: 2833, column: 11, scope: !9275)
!9315 = !DILocation(line: 2834, column: 18, scope: !9313)
!9316 = !DILocation(line: 2834, column: 25, scope: !9313)
!9317 = !DILocation(line: 2834, column: 33, scope: !9313)
!9318 = !DILocation(line: 2834, column: 31, scope: !9313)
!9319 = !DILocation(line: 2834, column: 17, scope: !9313)
!9320 = !DILocation(line: 2834, column: 15, scope: !9313)
!9321 = !DILocation(line: 2834, column: 9, scope: !9313)
!9322 = !DILocation(line: 2836, column: 18, scope: !9313)
!9323 = !DILocation(line: 2836, column: 25, scope: !9313)
!9324 = !DILocation(line: 2836, column: 33, scope: !9313)
!9325 = !DILocation(line: 2836, column: 31, scope: !9313)
!9326 = !DILocation(line: 2836, column: 17, scope: !9313)
!9327 = !DILocation(line: 2836, column: 15, scope: !9313)
!9328 = !DILocation(line: 2838, column: 16, scope: !9275)
!9329 = !DILocation(line: 2838, column: 24, scope: !9275)
!9330 = !DILocation(line: 2838, column: 22, scope: !9275)
!9331 = !DILocation(line: 2838, column: 39, scope: !9275)
!9332 = !DILocation(line: 2838, column: 35, scope: !9275)
!9333 = !DILocation(line: 2838, column: 15, scope: !9275)
!9334 = !DILocation(line: 2838, column: 13, scope: !9275)
!9335 = !DILocation(line: 2839, column: 11, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 2839, column: 11)
!9337 = !DILocation(line: 2839, column: 22, scope: !9336)
!9338 = !DILocation(line: 2839, column: 11, scope: !9275)
!9339 = !DILocation(line: 2841, column: 18, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 2840, column: 9)
!9341 = !DILocation(line: 2842, column: 18, scope: !9340)
!9342 = !DILocation(line: 2842, column: 27, scope: !9340)
!9343 = !DILocation(line: 2842, column: 36, scope: !9340)
!9344 = !DILocation(line: 2842, column: 33, scope: !9340)
!9345 = !DILocation(line: 2842, column: 24, scope: !9340)
!9346 = !DILocation(line: 2842, column: 17, scope: !9340)
!9347 = !DILocation(line: 2842, column: 15, scope: !9340)
!9348 = !DILocation(line: 2843, column: 9, scope: !9340)
!9349 = !DILocation(line: 2846, column: 21, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 2845, column: 9)
!9351 = !DILocation(line: 2846, column: 27, scope: !9350)
!9352 = !DILocation(line: 2846, column: 20, scope: !9350)
!9353 = !DILocation(line: 2846, column: 18, scope: !9350)
!9354 = !DILocation(line: 2847, column: 18, scope: !9350)
!9355 = !DILocation(line: 2847, column: 13, scope: !9350)
!9356 = !DILocation(line: 2847, column: 16, scope: !9350)
!9357 = !DILocation(line: 2848, column: 20, scope: !9350)
!9358 = !DILocation(line: 2850, column: 19, scope: !9350)
!9359 = !DILocation(line: 2850, column: 25, scope: !9350)
!9360 = !DILocation(line: 2850, column: 34, scope: !9350)
!9361 = !DILocation(line: 2850, column: 43, scope: !9350)
!9362 = !DILocation(line: 2850, column: 40, scope: !9350)
!9363 = !DILocation(line: 2850, column: 31, scope: !9350)
!9364 = !DILocation(line: 2850, column: 17, scope: !9350)
!9365 = !DILocation(line: 2850, column: 15, scope: !9350)
!9366 = !DILocation(line: 2852, column: 21, scope: !9275)
!9367 = !DILocation(line: 2852, column: 18, scope: !9275)
!9368 = !DILocation(line: 2853, column: 7, scope: !9275)
!9369 = !DILocation(line: 2817, column: 80, scope: !9262)
!9370 = !DILocation(line: 2817, column: 5, scope: !9262)
!9371 = distinct !{!9371, !9272, !9372}
!9372 = !DILocation(line: 2853, column: 7, scope: !9258)
!9373 = !DILocation(line: 2854, column: 5, scope: !9251)
!9374 = !DILocation(line: 2814, column: 35, scope: !9246)
!9375 = !DILocation(line: 2814, column: 3, scope: !9246)
!9376 = distinct !{!9376, !9249, !9377}
!9377 = !DILocation(line: 2854, column: 5, scope: !9242)
!9378 = !DILocation(line: 2857, column: 3, scope: !9150)
!9379 = !DILocation(line: 2857, column: 10, scope: !9150)
!9380 = !DILocation(line: 2857, column: 21, scope: !9150)
!9381 = !DILocation(line: 2859, column: 17, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 2858, column: 5)
!9383 = !DILocation(line: 2859, column: 23, scope: !9382)
!9384 = !DILocation(line: 2859, column: 16, scope: !9382)
!9385 = !DILocation(line: 2859, column: 14, scope: !9382)
!9386 = !DILocation(line: 2860, column: 14, scope: !9382)
!9387 = !DILocation(line: 2860, column: 9, scope: !9382)
!9388 = !DILocation(line: 2860, column: 12, scope: !9382)
!9389 = !DILocation(line: 2861, column: 16, scope: !9382)
!9390 = distinct !{!9390, !9378, !9391}
!9391 = !DILocation(line: 2862, column: 5, scope: !9150)
!9392 = !DILocation(line: 2864, column: 3, scope: !9150)
!9393 = !DILocation(line: 2865, column: 3, scope: !9150)
!9394 = distinct !DISubprogram(name: "extractContigSamples24bits", scope: !3, file: !3, line: 2869, type: !8723, scopeLine: 2872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!9395 = !DILocalVariable(name: "in", arg: 1, scope: !9394, file: !3, line: 2869, type: !116)
!9396 = !DILocation(line: 2869, column: 36, scope: !9394)
!9397 = !DILocalVariable(name: "out", arg: 2, scope: !9394, file: !3, line: 2869, type: !116)
!9398 = !DILocation(line: 2869, column: 47, scope: !9394)
!9399 = !DILocalVariable(name: "cols", arg: 3, scope: !9394, file: !3, line: 2869, type: !105)
!9400 = !DILocation(line: 2869, column: 59, scope: !9394)
!9401 = !DILocalVariable(name: "sample", arg: 4, scope: !9394, file: !3, line: 2870, type: !7616)
!9402 = !DILocation(line: 2870, column: 33, scope: !9394)
!9403 = !DILocalVariable(name: "spp", arg: 5, scope: !9394, file: !3, line: 2870, type: !103)
!9404 = !DILocation(line: 2870, column: 48, scope: !9394)
!9405 = !DILocalVariable(name: "bps", arg: 6, scope: !9394, file: !3, line: 2870, type: !103)
!9406 = !DILocation(line: 2870, column: 60, scope: !9394)
!9407 = !DILocalVariable(name: "count", arg: 7, scope: !9394, file: !3, line: 2871, type: !7616)
!9408 = !DILocation(line: 2871, column: 39, scope: !9394)
!9409 = !DILocalVariable(name: "start", arg: 8, scope: !9394, file: !3, line: 2871, type: !105)
!9410 = !DILocation(line: 2871, column: 53, scope: !9394)
!9411 = !DILocalVariable(name: "end", arg: 9, scope: !9394, file: !3, line: 2871, type: !105)
!9412 = !DILocation(line: 2871, column: 67, scope: !9394)
!9413 = !DILocalVariable(name: "ready_bits", scope: !9394, file: !3, line: 2873, type: !110)
!9414 = !DILocation(line: 2873, column: 10, scope: !9394)
!9415 = !DILocalVariable(name: "sindex", scope: !9394, file: !3, line: 2873, type: !110)
!9416 = !DILocation(line: 2873, column: 26, scope: !9394)
!9417 = !DILocalVariable(name: "col", scope: !9394, file: !3, line: 2874, type: !105)
!9418 = !DILocation(line: 2874, column: 10, scope: !9394)
!9419 = !DILocalVariable(name: "src_byte", scope: !9394, file: !3, line: 2874, type: !105)
!9420 = !DILocation(line: 2874, column: 15, scope: !9394)
!9421 = !DILocalVariable(name: "src_bit", scope: !9394, file: !3, line: 2874, type: !105)
!9422 = !DILocation(line: 2874, column: 25, scope: !9394)
!9423 = !DILocalVariable(name: "bit_offset", scope: !9394, file: !3, line: 2874, type: !105)
!9424 = !DILocation(line: 2874, column: 34, scope: !9394)
!9425 = !DILocalVariable(name: "maskbits", scope: !9394, file: !3, line: 2875, type: !105)
!9426 = !DILocation(line: 2875, column: 10, scope: !9394)
!9427 = !DILocalVariable(name: "matchbits", scope: !9394, file: !3, line: 2875, type: !105)
!9428 = !DILocation(line: 2875, column: 24, scope: !9394)
!9429 = !DILocalVariable(name: "buff1", scope: !9394, file: !3, line: 2876, type: !105)
!9430 = !DILocation(line: 2876, column: 10, scope: !9394)
!9431 = !DILocalVariable(name: "buff2", scope: !9394, file: !3, line: 2876, type: !105)
!9432 = !DILocation(line: 2876, column: 21, scope: !9394)
!9433 = !DILocalVariable(name: "bytebuff1", scope: !9394, file: !3, line: 2877, type: !114)
!9434 = !DILocation(line: 2877, column: 10, scope: !9394)
!9435 = !DILocalVariable(name: "bytebuff2", scope: !9394, file: !3, line: 2877, type: !114)
!9436 = !DILocation(line: 2877, column: 25, scope: !9394)
!9437 = !DILocalVariable(name: "src", scope: !9394, file: !3, line: 2878, type: !116)
!9438 = !DILocation(line: 2878, column: 10, scope: !9394)
!9439 = !DILocation(line: 2878, column: 16, scope: !9394)
!9440 = !DILocalVariable(name: "dst", scope: !9394, file: !3, line: 2879, type: !116)
!9441 = !DILocation(line: 2879, column: 10, scope: !9394)
!9442 = !DILocation(line: 2879, column: 16, scope: !9394)
!9443 = !DILocation(line: 2881, column: 8, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2881, column: 7)
!9445 = !DILocation(line: 2881, column: 11, scope: !9444)
!9446 = !DILocation(line: 2881, column: 20, scope: !9444)
!9447 = !DILocation(line: 2881, column: 24, scope: !9444)
!9448 = !DILocation(line: 2881, column: 28, scope: !9444)
!9449 = !DILocation(line: 2881, column: 7, scope: !9394)
!9450 = !DILocation(line: 2883, column: 5, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2882, column: 5)
!9452 = !DILocation(line: 2884, column: 5, scope: !9451)
!9453 = !DILocation(line: 2887, column: 8, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2887, column: 7)
!9455 = !DILocation(line: 2887, column: 16, scope: !9454)
!9456 = !DILocation(line: 2887, column: 14, scope: !9454)
!9457 = !DILocation(line: 2887, column: 21, scope: !9454)
!9458 = !DILocation(line: 2887, column: 25, scope: !9454)
!9459 = !DILocation(line: 2887, column: 33, scope: !9454)
!9460 = !DILocation(line: 2887, column: 31, scope: !9454)
!9461 = !DILocation(line: 2887, column: 7, scope: !9394)
!9462 = !DILocation(line: 2890, column: 57, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 2888, column: 5)
!9464 = !DILocation(line: 2889, column: 5, scope: !9463)
!9465 = !DILocation(line: 2891, column: 11, scope: !9463)
!9466 = !DILocation(line: 2892, column: 5, scope: !9463)
!9467 = !DILocation(line: 2893, column: 8, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2893, column: 7)
!9469 = !DILocation(line: 2893, column: 12, scope: !9468)
!9470 = !DILocation(line: 2893, column: 18, scope: !9468)
!9471 = !DILocation(line: 2893, column: 22, scope: !9468)
!9472 = !DILocation(line: 2893, column: 28, scope: !9468)
!9473 = !DILocation(line: 2893, column: 26, scope: !9468)
!9474 = !DILocation(line: 2893, column: 7, scope: !9394)
!9475 = !DILocation(line: 2896, column: 55, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 2894, column: 5)
!9477 = !DILocation(line: 2895, column: 5, scope: !9476)
!9478 = !DILocation(line: 2897, column: 11, scope: !9476)
!9479 = !DILocation(line: 2897, column: 9, scope: !9476)
!9480 = !DILocation(line: 2898, column: 5, scope: !9476)
!9481 = !DILocation(line: 2900, column: 14, scope: !9394)
!9482 = !DILocation(line: 2901, column: 36, scope: !9394)
!9483 = !DILocation(line: 2901, column: 34, scope: !9394)
!9484 = !DILocation(line: 2901, column: 26, scope: !9394)
!9485 = !DILocation(line: 2901, column: 12, scope: !9394)
!9486 = !DILocation(line: 2902, column: 14, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2902, column: 3)
!9488 = !DILocation(line: 2902, column: 12, scope: !9487)
!9489 = !DILocation(line: 2902, column: 8, scope: !9487)
!9490 = !DILocation(line: 2902, column: 21, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 2902, column: 3)
!9492 = !DILocation(line: 2902, column: 27, scope: !9491)
!9493 = !DILocation(line: 2902, column: 25, scope: !9491)
!9494 = !DILocation(line: 2902, column: 3, scope: !9487)
!9495 = !DILocation(line: 2905, column: 18, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 2903, column: 5)
!9497 = !DILocation(line: 2905, column: 24, scope: !9496)
!9498 = !DILocation(line: 2905, column: 22, scope: !9496)
!9499 = !DILocation(line: 2905, column: 30, scope: !9496)
!9500 = !DILocation(line: 2905, column: 28, scope: !9496)
!9501 = !DILocation(line: 2905, column: 16, scope: !9496)
!9502 = !DILocation(line: 2906, column: 19, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 2906, column: 5)
!9504 = !DILocation(line: 2906, column: 17, scope: !9503)
!9505 = !DILocation(line: 2906, column: 10, scope: !9503)
!9506 = !DILocation(line: 2906, column: 28, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 2906, column: 5)
!9508 = !DILocation(line: 2906, column: 37, scope: !9507)
!9509 = !DILocation(line: 2906, column: 35, scope: !9507)
!9510 = !DILocation(line: 2906, column: 42, scope: !9507)
!9511 = !DILocation(line: 2906, column: 46, scope: !9507)
!9512 = !DILocation(line: 2906, column: 56, scope: !9507)
!9513 = !DILocation(line: 2906, column: 65, scope: !9507)
!9514 = !DILocation(line: 2906, column: 63, scope: !9507)
!9515 = !DILocation(line: 2906, column: 53, scope: !9507)
!9516 = !DILocation(line: 0, scope: !9507)
!9517 = !DILocation(line: 2906, column: 5, scope: !9503)
!9518 = !DILocation(line: 2908, column: 11, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 2908, column: 11)
!9520 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 2907, column: 7)
!9521 = !DILocation(line: 2908, column: 18, scope: !9519)
!9522 = !DILocation(line: 2908, column: 11, scope: !9520)
!9523 = !DILocation(line: 2910, column: 20, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 2909, column: 9)
!9525 = !DILocation(line: 2910, column: 31, scope: !9524)
!9526 = !DILocation(line: 2910, column: 18, scope: !9524)
!9527 = !DILocation(line: 2911, column: 20, scope: !9524)
!9528 = !DILocation(line: 2911, column: 31, scope: !9524)
!9529 = !DILocation(line: 2911, column: 18, scope: !9524)
!9530 = !DILocation(line: 2912, column: 9, scope: !9524)
!9531 = !DILocation(line: 2915, column: 21, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 2914, column: 9)
!9533 = !DILocation(line: 2915, column: 35, scope: !9532)
!9534 = !DILocation(line: 2915, column: 44, scope: !9532)
!9535 = !DILocation(line: 2915, column: 42, scope: !9532)
!9536 = !DILocation(line: 2915, column: 32, scope: !9532)
!9537 = !DILocation(line: 2915, column: 50, scope: !9532)
!9538 = !DILocation(line: 2915, column: 18, scope: !9532)
!9539 = !DILocation(line: 2916, column: 21, scope: !9532)
!9540 = !DILocation(line: 2916, column: 35, scope: !9532)
!9541 = !DILocation(line: 2916, column: 44, scope: !9532)
!9542 = !DILocation(line: 2916, column: 42, scope: !9532)
!9543 = !DILocation(line: 2916, column: 32, scope: !9532)
!9544 = !DILocation(line: 2916, column: 50, scope: !9532)
!9545 = !DILocation(line: 2916, column: 18, scope: !9532)
!9546 = !DILocation(line: 2919, column: 13, scope: !9520)
!9547 = !DILocation(line: 2919, column: 18, scope: !9520)
!9548 = !DILocation(line: 2919, column: 16, scope: !9520)
!9549 = !DILocation(line: 2919, column: 11, scope: !9520)
!9550 = !DILocation(line: 2920, column: 19, scope: !9520)
!9551 = !DILocation(line: 2920, column: 37, scope: !9520)
!9552 = !DILocation(line: 2920, column: 35, scope: !9520)
!9553 = !DILocation(line: 2920, column: 47, scope: !9520)
!9554 = !DILocation(line: 2920, column: 45, scope: !9520)
!9555 = !DILocation(line: 2920, column: 28, scope: !9520)
!9556 = !DILocation(line: 2920, column: 17, scope: !9520)
!9557 = !DILocation(line: 2921, column: 11, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 2921, column: 11)
!9559 = !DILocation(line: 2921, column: 11, scope: !9520)
!9560 = !DILocation(line: 2922, column: 11, scope: !9558)
!9561 = !DILocation(line: 2922, column: 18, scope: !9558)
!9562 = !DILocation(line: 2922, column: 28, scope: !9558)
!9563 = !DILocation(line: 2922, column: 35, scope: !9558)
!9564 = !DILocation(line: 2922, column: 25, scope: !9558)
!9565 = !DILocation(line: 2922, column: 45, scope: !9558)
!9566 = !DILocation(line: 2922, column: 52, scope: !9558)
!9567 = !DILocation(line: 2922, column: 42, scope: !9558)
!9568 = !DILocation(line: 2922, column: 60, scope: !9558)
!9569 = !DILocation(line: 2922, column: 58, scope: !9558)
!9570 = !DILocation(line: 2922, column: 8, scope: !9558)
!9571 = !DILocation(line: 2922, column: 2, scope: !9558)
!9572 = !DILocation(line: 2924, column: 11, scope: !9558)
!9573 = !DILocation(line: 2924, column: 18, scope: !9558)
!9574 = !DILocation(line: 2924, column: 28, scope: !9558)
!9575 = !DILocation(line: 2924, column: 35, scope: !9558)
!9576 = !DILocation(line: 2924, column: 25, scope: !9558)
!9577 = !DILocation(line: 2924, column: 45, scope: !9558)
!9578 = !DILocation(line: 2924, column: 52, scope: !9558)
!9579 = !DILocation(line: 2924, column: 42, scope: !9558)
!9580 = !DILocation(line: 2924, column: 60, scope: !9558)
!9581 = !DILocation(line: 2924, column: 58, scope: !9558)
!9582 = !DILocation(line: 2924, column: 8, scope: !9558)
!9583 = !DILocation(line: 2925, column: 16, scope: !9520)
!9584 = !DILocation(line: 2925, column: 24, scope: !9520)
!9585 = !DILocation(line: 2925, column: 22, scope: !9520)
!9586 = !DILocation(line: 2925, column: 39, scope: !9520)
!9587 = !DILocation(line: 2925, column: 35, scope: !9520)
!9588 = !DILocation(line: 2925, column: 13, scope: !9520)
!9589 = !DILocation(line: 2927, column: 11, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 2927, column: 11)
!9591 = !DILocation(line: 2927, column: 22, scope: !9590)
!9592 = !DILocation(line: 2927, column: 11, scope: !9520)
!9593 = !DILocation(line: 2929, column: 31, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 2928, column: 9)
!9595 = !DILocation(line: 2929, column: 19, scope: !9594)
!9596 = !DILocation(line: 2930, column: 18, scope: !9594)
!9597 = !DILocation(line: 2930, column: 27, scope: !9594)
!9598 = !DILocation(line: 2930, column: 36, scope: !9594)
!9599 = !DILocation(line: 2930, column: 33, scope: !9594)
!9600 = !DILocation(line: 2930, column: 24, scope: !9594)
!9601 = !DILocation(line: 2930, column: 15, scope: !9594)
!9602 = !DILocation(line: 2931, column: 9, scope: !9594)
!9603 = !DILocation(line: 2934, column: 22, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 2933, column: 9)
!9605 = !DILocation(line: 2934, column: 28, scope: !9604)
!9606 = !DILocation(line: 2934, column: 21, scope: !9604)
!9607 = !DILocation(line: 2934, column: 19, scope: !9604)
!9608 = !DILocation(line: 2935, column: 18, scope: !9604)
!9609 = !DILocation(line: 2935, column: 13, scope: !9604)
!9610 = !DILocation(line: 2935, column: 16, scope: !9604)
!9611 = !DILocation(line: 2936, column: 22, scope: !9604)
!9612 = !DILocation(line: 2936, column: 28, scope: !9604)
!9613 = !DILocation(line: 2936, column: 21, scope: !9604)
!9614 = !DILocation(line: 2936, column: 19, scope: !9604)
!9615 = !DILocation(line: 2937, column: 18, scope: !9604)
!9616 = !DILocation(line: 2937, column: 13, scope: !9604)
!9617 = !DILocation(line: 2937, column: 16, scope: !9604)
!9618 = !DILocation(line: 2938, column: 20, scope: !9604)
!9619 = !DILocation(line: 2941, column: 19, scope: !9604)
!9620 = !DILocation(line: 2941, column: 25, scope: !9604)
!9621 = !DILocation(line: 2941, column: 35, scope: !9604)
!9622 = !DILocation(line: 2941, column: 44, scope: !9604)
!9623 = !DILocation(line: 2941, column: 41, scope: !9604)
!9624 = !DILocation(line: 2941, column: 32, scope: !9604)
!9625 = !DILocation(line: 2941, column: 15, scope: !9604)
!9626 = !DILocation(line: 2943, column: 21, scope: !9520)
!9627 = !DILocation(line: 2943, column: 18, scope: !9520)
!9628 = !DILocation(line: 2944, column: 7, scope: !9520)
!9629 = !DILocation(line: 2906, column: 80, scope: !9507)
!9630 = !DILocation(line: 2906, column: 5, scope: !9507)
!9631 = distinct !{!9631, !9517, !9632}
!9632 = !DILocation(line: 2944, column: 7, scope: !9503)
!9633 = !DILocation(line: 2945, column: 5, scope: !9496)
!9634 = !DILocation(line: 2902, column: 35, scope: !9491)
!9635 = !DILocation(line: 2902, column: 3, scope: !9491)
!9636 = distinct !{!9636, !9494, !9637}
!9637 = !DILocation(line: 2945, column: 5, scope: !9487)
!9638 = !DILocation(line: 2948, column: 3, scope: !9394)
!9639 = !DILocation(line: 2948, column: 10, scope: !9394)
!9640 = !DILocation(line: 2948, column: 21, scope: !9394)
!9641 = !DILocation(line: 2950, column: 18, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 2949, column: 5)
!9643 = !DILocation(line: 2950, column: 24, scope: !9642)
!9644 = !DILocation(line: 2950, column: 17, scope: !9642)
!9645 = !DILocation(line: 2950, column: 15, scope: !9642)
!9646 = !DILocation(line: 2951, column: 14, scope: !9642)
!9647 = !DILocation(line: 2951, column: 9, scope: !9642)
!9648 = !DILocation(line: 2951, column: 12, scope: !9642)
!9649 = !DILocation(line: 2953, column: 14, scope: !9642)
!9650 = !DILocation(line: 2953, column: 20, scope: !9642)
!9651 = !DILocation(line: 2953, column: 11, scope: !9642)
!9652 = !DILocation(line: 2954, column: 17, scope: !9642)
!9653 = !DILocation(line: 2954, column: 15, scope: !9642)
!9654 = !DILocation(line: 2955, column: 16, scope: !9642)
!9655 = distinct !{!9655, !9638, !9656}
!9656 = !DILocation(line: 2956, column: 5, scope: !9394)
!9657 = !DILocation(line: 2958, column: 3, scope: !9394)
!9658 = !DILocation(line: 2959, column: 3, scope: !9394)
!9659 = distinct !DISubprogram(name: "extractContigSamples32bits", scope: !3, file: !3, line: 2962, type: !8723, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!9660 = !DILocalVariable(name: "in", arg: 1, scope: !9659, file: !3, line: 2962, type: !116)
!9661 = !DILocation(line: 2962, column: 36, scope: !9659)
!9662 = !DILocalVariable(name: "out", arg: 2, scope: !9659, file: !3, line: 2962, type: !116)
!9663 = !DILocation(line: 2962, column: 47, scope: !9659)
!9664 = !DILocalVariable(name: "cols", arg: 3, scope: !9659, file: !3, line: 2962, type: !105)
!9665 = !DILocation(line: 2962, column: 59, scope: !9659)
!9666 = !DILocalVariable(name: "sample", arg: 4, scope: !9659, file: !3, line: 2963, type: !7616)
!9667 = !DILocation(line: 2963, column: 39, scope: !9659)
!9668 = !DILocalVariable(name: "spp", arg: 5, scope: !9659, file: !3, line: 2963, type: !103)
!9669 = !DILocation(line: 2963, column: 54, scope: !9659)
!9670 = !DILocalVariable(name: "bps", arg: 6, scope: !9659, file: !3, line: 2963, type: !103)
!9671 = !DILocation(line: 2963, column: 66, scope: !9659)
!9672 = !DILocalVariable(name: "count", arg: 7, scope: !9659, file: !3, line: 2964, type: !7616)
!9673 = !DILocation(line: 2964, column: 19, scope: !9659)
!9674 = !DILocalVariable(name: "start", arg: 8, scope: !9659, file: !3, line: 2964, type: !105)
!9675 = !DILocation(line: 2964, column: 33, scope: !9659)
!9676 = !DILocalVariable(name: "end", arg: 9, scope: !9659, file: !3, line: 2964, type: !105)
!9677 = !DILocation(line: 2964, column: 47, scope: !9659)
!9678 = !DILocalVariable(name: "ready_bits", scope: !9659, file: !3, line: 2966, type: !110)
!9679 = !DILocation(line: 2966, column: 10, scope: !9659)
!9680 = !DILocalVariable(name: "sindex", scope: !9659, file: !3, line: 2966, type: !110)
!9681 = !DILocation(line: 2966, column: 26, scope: !9659)
!9682 = !DILocalVariable(name: "shift_width", scope: !9659, file: !3, line: 2966, type: !110)
!9683 = !DILocation(line: 2966, column: 38, scope: !9659)
!9684 = !DILocalVariable(name: "col", scope: !9659, file: !3, line: 2967, type: !105)
!9685 = !DILocation(line: 2967, column: 10, scope: !9659)
!9686 = !DILocalVariable(name: "src_byte", scope: !9659, file: !3, line: 2967, type: !105)
!9687 = !DILocation(line: 2967, column: 15, scope: !9659)
!9688 = !DILocalVariable(name: "src_bit", scope: !9659, file: !3, line: 2967, type: !105)
!9689 = !DILocation(line: 2967, column: 25, scope: !9659)
!9690 = !DILocalVariable(name: "bit_offset", scope: !9659, file: !3, line: 2967, type: !105)
!9691 = !DILocation(line: 2967, column: 34, scope: !9659)
!9692 = !DILocalVariable(name: "longbuff1", scope: !9659, file: !3, line: 2968, type: !105)
!9693 = !DILocation(line: 2968, column: 10, scope: !9659)
!9694 = !DILocalVariable(name: "longbuff2", scope: !9659, file: !3, line: 2968, type: !105)
!9695 = !DILocation(line: 2968, column: 25, scope: !9659)
!9696 = !DILocalVariable(name: "maskbits", scope: !9659, file: !3, line: 2969, type: !115)
!9697 = !DILocation(line: 2969, column: 10, scope: !9659)
!9698 = !DILocalVariable(name: "matchbits", scope: !9659, file: !3, line: 2969, type: !115)
!9699 = !DILocation(line: 2969, column: 24, scope: !9659)
!9700 = !DILocalVariable(name: "buff1", scope: !9659, file: !3, line: 2970, type: !115)
!9701 = !DILocation(line: 2970, column: 10, scope: !9659)
!9702 = !DILocalVariable(name: "buff2", scope: !9659, file: !3, line: 2970, type: !115)
!9703 = !DILocation(line: 2970, column: 21, scope: !9659)
!9704 = !DILocalVariable(name: "buff3", scope: !9659, file: !3, line: 2970, type: !115)
!9705 = !DILocation(line: 2970, column: 32, scope: !9659)
!9706 = !DILocalVariable(name: "bytebuff1", scope: !9659, file: !3, line: 2971, type: !114)
!9707 = !DILocation(line: 2971, column: 10, scope: !9659)
!9708 = !DILocalVariable(name: "bytebuff2", scope: !9659, file: !3, line: 2971, type: !114)
!9709 = !DILocation(line: 2971, column: 25, scope: !9659)
!9710 = !DILocalVariable(name: "bytebuff3", scope: !9659, file: !3, line: 2971, type: !114)
!9711 = !DILocation(line: 2971, column: 40, scope: !9659)
!9712 = !DILocalVariable(name: "bytebuff4", scope: !9659, file: !3, line: 2971, type: !114)
!9713 = !DILocation(line: 2971, column: 55, scope: !9659)
!9714 = !DILocalVariable(name: "src", scope: !9659, file: !3, line: 2972, type: !116)
!9715 = !DILocation(line: 2972, column: 10, scope: !9659)
!9716 = !DILocation(line: 2972, column: 16, scope: !9659)
!9717 = !DILocalVariable(name: "dst", scope: !9659, file: !3, line: 2973, type: !116)
!9718 = !DILocation(line: 2973, column: 10, scope: !9659)
!9719 = !DILocation(line: 2973, column: 16, scope: !9659)
!9720 = !DILocation(line: 2975, column: 8, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2975, column: 7)
!9722 = !DILocation(line: 2975, column: 11, scope: !9721)
!9723 = !DILocation(line: 2975, column: 20, scope: !9721)
!9724 = !DILocation(line: 2975, column: 24, scope: !9721)
!9725 = !DILocation(line: 2975, column: 28, scope: !9721)
!9726 = !DILocation(line: 2975, column: 7, scope: !9659)
!9727 = !DILocation(line: 2977, column: 5, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 2976, column: 5)
!9729 = !DILocation(line: 2978, column: 5, scope: !9728)
!9730 = !DILocation(line: 2982, column: 8, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2982, column: 7)
!9732 = !DILocation(line: 2982, column: 16, scope: !9731)
!9733 = !DILocation(line: 2982, column: 14, scope: !9731)
!9734 = !DILocation(line: 2982, column: 21, scope: !9731)
!9735 = !DILocation(line: 2982, column: 25, scope: !9731)
!9736 = !DILocation(line: 2982, column: 33, scope: !9731)
!9737 = !DILocation(line: 2982, column: 31, scope: !9731)
!9738 = !DILocation(line: 2982, column: 7, scope: !9659)
!9739 = !DILocation(line: 2985, column: 57, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 2983, column: 5)
!9741 = !DILocation(line: 2984, column: 5, scope: !9740)
!9742 = !DILocation(line: 2986, column: 11, scope: !9740)
!9743 = !DILocation(line: 2987, column: 5, scope: !9740)
!9744 = !DILocation(line: 2988, column: 8, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2988, column: 7)
!9746 = !DILocation(line: 2988, column: 12, scope: !9745)
!9747 = !DILocation(line: 2988, column: 18, scope: !9745)
!9748 = !DILocation(line: 2988, column: 22, scope: !9745)
!9749 = !DILocation(line: 2988, column: 28, scope: !9745)
!9750 = !DILocation(line: 2988, column: 26, scope: !9745)
!9751 = !DILocation(line: 2988, column: 7, scope: !9659)
!9752 = !DILocation(line: 2991, column: 55, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 2989, column: 5)
!9754 = !DILocation(line: 2990, column: 5, scope: !9753)
!9755 = !DILocation(line: 2992, column: 11, scope: !9753)
!9756 = !DILocation(line: 2992, column: 9, scope: !9753)
!9757 = !DILocation(line: 2993, column: 5, scope: !9753)
!9758 = !DILocation(line: 2995, column: 19, scope: !9659)
!9759 = !DILocation(line: 2995, column: 23, scope: !9659)
!9760 = !DILocation(line: 2995, column: 28, scope: !9659)
!9761 = !DILocation(line: 2995, column: 33, scope: !9659)
!9762 = !DILocation(line: 2995, column: 15, scope: !9659)
!9763 = !DILocation(line: 2996, column: 14, scope: !9659)
!9764 = !DILocation(line: 2997, column: 36, scope: !9659)
!9765 = !DILocation(line: 2997, column: 34, scope: !9659)
!9766 = !DILocation(line: 2997, column: 26, scope: !9659)
!9767 = !DILocation(line: 2997, column: 12, scope: !9659)
!9768 = !DILocation(line: 2998, column: 14, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2998, column: 3)
!9770 = !DILocation(line: 2998, column: 12, scope: !9769)
!9771 = !DILocation(line: 2998, column: 8, scope: !9769)
!9772 = !DILocation(line: 2998, column: 21, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 2998, column: 3)
!9774 = !DILocation(line: 2998, column: 27, scope: !9773)
!9775 = !DILocation(line: 2998, column: 25, scope: !9773)
!9776 = !DILocation(line: 2998, column: 3, scope: !9769)
!9777 = !DILocation(line: 3001, column: 18, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 2999, column: 5)
!9779 = !DILocation(line: 3001, column: 24, scope: !9778)
!9780 = !DILocation(line: 3001, column: 22, scope: !9778)
!9781 = !DILocation(line: 3001, column: 30, scope: !9778)
!9782 = !DILocation(line: 3001, column: 28, scope: !9778)
!9783 = !DILocation(line: 3001, column: 16, scope: !9778)
!9784 = !DILocation(line: 3002, column: 19, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 3002, column: 5)
!9786 = !DILocation(line: 3002, column: 17, scope: !9785)
!9787 = !DILocation(line: 3002, column: 10, scope: !9785)
!9788 = !DILocation(line: 3002, column: 28, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 3002, column: 5)
!9790 = !DILocation(line: 3002, column: 37, scope: !9789)
!9791 = !DILocation(line: 3002, column: 35, scope: !9789)
!9792 = !DILocation(line: 3002, column: 42, scope: !9789)
!9793 = !DILocation(line: 3002, column: 46, scope: !9789)
!9794 = !DILocation(line: 3002, column: 56, scope: !9789)
!9795 = !DILocation(line: 3002, column: 65, scope: !9789)
!9796 = !DILocation(line: 3002, column: 63, scope: !9789)
!9797 = !DILocation(line: 3002, column: 53, scope: !9789)
!9798 = !DILocation(line: 0, scope: !9789)
!9799 = !DILocation(line: 3002, column: 5, scope: !9785)
!9800 = !DILocation(line: 3004, column: 11, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 3004, column: 11)
!9802 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 3003, column: 7)
!9803 = !DILocation(line: 3004, column: 18, scope: !9801)
!9804 = !DILocation(line: 3004, column: 11, scope: !9802)
!9805 = !DILocation(line: 3006, column: 20, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 3005, column: 9)
!9807 = !DILocation(line: 3006, column: 31, scope: !9806)
!9808 = !DILocation(line: 3006, column: 18, scope: !9806)
!9809 = !DILocation(line: 3007, column: 20, scope: !9806)
!9810 = !DILocation(line: 3007, column: 31, scope: !9806)
!9811 = !DILocation(line: 3007, column: 18, scope: !9806)
!9812 = !DILocation(line: 3008, column: 9, scope: !9806)
!9813 = !DILocation(line: 3011, column: 21, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 3010, column: 9)
!9815 = !DILocation(line: 3011, column: 35, scope: !9814)
!9816 = !DILocation(line: 3011, column: 44, scope: !9814)
!9817 = !DILocation(line: 3011, column: 42, scope: !9814)
!9818 = !DILocation(line: 3011, column: 32, scope: !9814)
!9819 = !DILocation(line: 3011, column: 50, scope: !9814)
!9820 = !DILocation(line: 3011, column: 18, scope: !9814)
!9821 = !DILocation(line: 3012, column: 21, scope: !9814)
!9822 = !DILocation(line: 3012, column: 35, scope: !9814)
!9823 = !DILocation(line: 3012, column: 44, scope: !9814)
!9824 = !DILocation(line: 3012, column: 42, scope: !9814)
!9825 = !DILocation(line: 3012, column: 32, scope: !9814)
!9826 = !DILocation(line: 3012, column: 50, scope: !9814)
!9827 = !DILocation(line: 3012, column: 18, scope: !9814)
!9828 = !DILocation(line: 3015, column: 13, scope: !9802)
!9829 = !DILocation(line: 3015, column: 18, scope: !9802)
!9830 = !DILocation(line: 3015, column: 16, scope: !9802)
!9831 = !DILocation(line: 3015, column: 11, scope: !9802)
!9832 = !DILocation(line: 3016, column: 19, scope: !9802)
!9833 = !DILocation(line: 3016, column: 37, scope: !9802)
!9834 = !DILocation(line: 3016, column: 35, scope: !9802)
!9835 = !DILocation(line: 3016, column: 47, scope: !9802)
!9836 = !DILocation(line: 3016, column: 45, scope: !9802)
!9837 = !DILocation(line: 3016, column: 28, scope: !9802)
!9838 = !DILocation(line: 3016, column: 17, scope: !9802)
!9839 = !DILocation(line: 3017, column: 11, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 3017, column: 11)
!9841 = !DILocation(line: 3017, column: 11, scope: !9802)
!9842 = !DILocation(line: 3019, column: 15, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 3018, column: 9)
!9844 = !DILocation(line: 3019, column: 22, scope: !9843)
!9845 = !DILocation(line: 3019, column: 32, scope: !9843)
!9846 = !DILocation(line: 3019, column: 39, scope: !9843)
!9847 = !DILocation(line: 3019, column: 29, scope: !9843)
!9848 = !DILocation(line: 3019, column: 50, scope: !9843)
!9849 = !DILocation(line: 3019, column: 57, scope: !9843)
!9850 = !DILocation(line: 3019, column: 47, scope: !9843)
!9851 = !DILocation(line: 3019, column: 65, scope: !9843)
!9852 = !DILocation(line: 3019, column: 63, scope: !9843)
!9853 = !DILocation(line: 3019, column: 12, scope: !9843)
!9854 = !DILocation(line: 3020, column: 14, scope: !9843)
!9855 = !DILocation(line: 3020, column: 12, scope: !9843)
!9856 = !DILocation(line: 3021, column: 9, scope: !9843)
!9857 = !DILocation(line: 3024, column: 15, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 3023, column: 9)
!9859 = !DILocation(line: 3024, column: 22, scope: !9858)
!9860 = !DILocation(line: 3024, column: 32, scope: !9858)
!9861 = !DILocation(line: 3024, column: 39, scope: !9858)
!9862 = !DILocation(line: 3024, column: 29, scope: !9858)
!9863 = !DILocation(line: 3024, column: 49, scope: !9858)
!9864 = !DILocation(line: 3024, column: 56, scope: !9858)
!9865 = !DILocation(line: 3024, column: 46, scope: !9858)
!9866 = !DILocation(line: 3024, column: 64, scope: !9858)
!9867 = !DILocation(line: 3024, column: 62, scope: !9858)
!9868 = !DILocation(line: 3024, column: 12, scope: !9858)
!9869 = !DILocation(line: 3025, column: 14, scope: !9858)
!9870 = !DILocation(line: 3025, column: 12, scope: !9858)
!9871 = !DILocation(line: 3028, column: 24, scope: !9802)
!9872 = !DILocation(line: 3028, column: 16, scope: !9802)
!9873 = !DILocation(line: 3028, column: 34, scope: !9802)
!9874 = !DILocation(line: 3028, column: 43, scope: !9802)
!9875 = !DILocation(line: 3028, column: 41, scope: !9802)
!9876 = !DILocation(line: 3028, column: 13, scope: !9802)
!9877 = !DILocation(line: 3029, column: 16, scope: !9802)
!9878 = !DILocation(line: 3029, column: 24, scope: !9802)
!9879 = !DILocation(line: 3029, column: 22, scope: !9802)
!9880 = !DILocation(line: 3029, column: 39, scope: !9802)
!9881 = !DILocation(line: 3029, column: 35, scope: !9802)
!9882 = !DILocation(line: 3029, column: 13, scope: !9802)
!9883 = !DILocation(line: 3032, column: 11, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 3032, column: 11)
!9885 = !DILocation(line: 3032, column: 22, scope: !9884)
!9886 = !DILocation(line: 3032, column: 11, scope: !9802)
!9887 = !DILocation(line: 3034, column: 22, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 3033, column: 9)
!9889 = !DILocation(line: 3034, column: 28, scope: !9888)
!9890 = !DILocation(line: 3034, column: 21, scope: !9888)
!9891 = !DILocation(line: 3034, column: 19, scope: !9888)
!9892 = !DILocation(line: 3035, column: 18, scope: !9888)
!9893 = !DILocation(line: 3035, column: 13, scope: !9888)
!9894 = !DILocation(line: 3035, column: 16, scope: !9888)
!9895 = !DILocation(line: 3036, column: 22, scope: !9888)
!9896 = !DILocation(line: 3036, column: 28, scope: !9888)
!9897 = !DILocation(line: 3036, column: 21, scope: !9888)
!9898 = !DILocation(line: 3036, column: 19, scope: !9888)
!9899 = !DILocation(line: 3037, column: 18, scope: !9888)
!9900 = !DILocation(line: 3037, column: 13, scope: !9888)
!9901 = !DILocation(line: 3037, column: 16, scope: !9888)
!9902 = !DILocation(line: 3038, column: 22, scope: !9888)
!9903 = !DILocation(line: 3038, column: 28, scope: !9888)
!9904 = !DILocation(line: 3038, column: 21, scope: !9888)
!9905 = !DILocation(line: 3038, column: 19, scope: !9888)
!9906 = !DILocation(line: 3039, column: 18, scope: !9888)
!9907 = !DILocation(line: 3039, column: 13, scope: !9888)
!9908 = !DILocation(line: 3039, column: 16, scope: !9888)
!9909 = !DILocation(line: 3040, column: 22, scope: !9888)
!9910 = !DILocation(line: 3040, column: 28, scope: !9888)
!9911 = !DILocation(line: 3040, column: 21, scope: !9888)
!9912 = !DILocation(line: 3040, column: 19, scope: !9888)
!9913 = !DILocation(line: 3041, column: 18, scope: !9888)
!9914 = !DILocation(line: 3041, column: 13, scope: !9888)
!9915 = !DILocation(line: 3041, column: 16, scope: !9888)
!9916 = !DILocation(line: 3042, column: 20, scope: !9888)
!9917 = !DILocation(line: 3045, column: 19, scope: !9888)
!9918 = !DILocation(line: 3045, column: 25, scope: !9888)
!9919 = !DILocation(line: 3045, column: 35, scope: !9888)
!9920 = !DILocation(line: 3045, column: 44, scope: !9888)
!9921 = !DILocation(line: 3045, column: 41, scope: !9888)
!9922 = !DILocation(line: 3045, column: 32, scope: !9888)
!9923 = !DILocation(line: 3045, column: 15, scope: !9888)
!9924 = !DILocation(line: 3046, column: 9, scope: !9888)
!9925 = !DILocation(line: 3049, column: 55, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 3048, column: 9)
!9927 = !DILocation(line: 3049, column: 43, scope: !9926)
!9928 = !DILocation(line: 3049, column: 31, scope: !9926)
!9929 = !DILocation(line: 3049, column: 19, scope: !9926)
!9930 = !DILocation(line: 3050, column: 18, scope: !9926)
!9931 = !DILocation(line: 3050, column: 27, scope: !9926)
!9932 = !DILocation(line: 3050, column: 36, scope: !9926)
!9933 = !DILocation(line: 3050, column: 33, scope: !9926)
!9934 = !DILocation(line: 3050, column: 24, scope: !9926)
!9935 = !DILocation(line: 3050, column: 15, scope: !9926)
!9936 = !DILocation(line: 3052, column: 21, scope: !9802)
!9937 = !DILocation(line: 3052, column: 18, scope: !9802)
!9938 = !DILocation(line: 3053, column: 7, scope: !9802)
!9939 = !DILocation(line: 3002, column: 80, scope: !9789)
!9940 = !DILocation(line: 3002, column: 5, scope: !9789)
!9941 = distinct !{!9941, !9799, !9942}
!9942 = !DILocation(line: 3053, column: 7, scope: !9785)
!9943 = !DILocation(line: 3054, column: 5, scope: !9778)
!9944 = !DILocation(line: 2998, column: 35, scope: !9773)
!9945 = !DILocation(line: 2998, column: 3, scope: !9773)
!9946 = distinct !{!9946, !9776, !9947}
!9947 = !DILocation(line: 3054, column: 5, scope: !9769)
!9948 = !DILocation(line: 3055, column: 3, scope: !9659)
!9949 = !DILocation(line: 3055, column: 10, scope: !9659)
!9950 = !DILocation(line: 3055, column: 21, scope: !9659)
!9951 = !DILocation(line: 3057, column: 18, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 3056, column: 5)
!9953 = !DILocation(line: 3057, column: 24, scope: !9952)
!9954 = !DILocation(line: 3057, column: 17, scope: !9952)
!9955 = !DILocation(line: 3057, column: 15, scope: !9952)
!9956 = !DILocation(line: 3058, column: 14, scope: !9952)
!9957 = !DILocation(line: 3058, column: 9, scope: !9952)
!9958 = !DILocation(line: 3058, column: 12, scope: !9952)
!9959 = !DILocation(line: 3059, column: 14, scope: !9952)
!9960 = !DILocation(line: 3059, column: 20, scope: !9952)
!9961 = !DILocation(line: 3059, column: 11, scope: !9952)
!9962 = !DILocation(line: 3060, column: 16, scope: !9952)
!9963 = distinct !{!9963, !9948, !9964}
!9964 = !DILocation(line: 3061, column: 5, scope: !9659)
!9965 = !DILocation(line: 3063, column: 3, scope: !9659)
!9966 = !DILocation(line: 3064, column: 3, scope: !9659)
!9967 = distinct !DISubprogram(name: "extractContigSamplesToTileBuffer", scope: !3, file: !3, line: 3519, type: !9968, scopeLine: 3522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!110, !116, !116, !105, !105, !105, !105, !7616, !103, !103, !103, !557}
!9970 = !DILocalVariable(name: "out", arg: 1, scope: !9967, file: !3, line: 3519, type: !116)
!9971 = !DILocation(line: 3519, column: 41, scope: !9967)
!9972 = !DILocalVariable(name: "in", arg: 2, scope: !9967, file: !3, line: 3519, type: !116)
!9973 = !DILocation(line: 3519, column: 53, scope: !9967)
!9974 = !DILocalVariable(name: "rows", arg: 3, scope: !9967, file: !3, line: 3519, type: !105)
!9975 = !DILocation(line: 3519, column: 64, scope: !9967)
!9976 = !DILocalVariable(name: "cols", arg: 4, scope: !9967, file: !3, line: 3519, type: !105)
!9977 = !DILocation(line: 3519, column: 77, scope: !9967)
!9978 = !DILocalVariable(name: "imagewidth", arg: 5, scope: !9967, file: !3, line: 3520, type: !105)
!9979 = !DILocation(line: 3520, column: 36, scope: !9967)
!9980 = !DILocalVariable(name: "tilewidth", arg: 6, scope: !9967, file: !3, line: 3520, type: !105)
!9981 = !DILocation(line: 3520, column: 55, scope: !9967)
!9982 = !DILocalVariable(name: "sample", arg: 7, scope: !9967, file: !3, line: 3520, type: !7616)
!9983 = !DILocation(line: 3520, column: 76, scope: !9967)
!9984 = !DILocalVariable(name: "count", arg: 8, scope: !9967, file: !3, line: 3521, type: !103)
!9985 = !DILocation(line: 3521, column: 13, scope: !9967)
!9986 = !DILocalVariable(name: "spp", arg: 9, scope: !9967, file: !3, line: 3521, type: !103)
!9987 = !DILocation(line: 3521, column: 27, scope: !9967)
!9988 = !DILocalVariable(name: "bps", arg: 10, scope: !9967, file: !3, line: 3521, type: !103)
!9989 = !DILocation(line: 3521, column: 39, scope: !9967)
!9990 = !DILocalVariable(name: "dump", arg: 11, scope: !9967, file: !3, line: 3521, type: !557)
!9991 = !DILocation(line: 3521, column: 62, scope: !9967)
!9992 = !DILocalVariable(name: "shift_width", scope: !9967, file: !3, line: 3523, type: !110)
!9993 = !DILocation(line: 3523, column: 10, scope: !9967)
!9994 = !DILocalVariable(name: "bytes_per_sample", scope: !9967, file: !3, line: 3523, type: !110)
!9995 = !DILocation(line: 3523, column: 23, scope: !9967)
!9996 = !DILocalVariable(name: "bytes_per_pixel", scope: !9967, file: !3, line: 3523, type: !110)
!9997 = !DILocation(line: 3523, column: 41, scope: !9967)
!9998 = !DILocalVariable(name: "src_rowsize", scope: !9967, file: !3, line: 3524, type: !105)
!9999 = !DILocation(line: 3524, column: 10, scope: !9967)
!10000 = !DILocalVariable(name: "src_offset", scope: !9967, file: !3, line: 3524, type: !105)
!10001 = !DILocation(line: 3524, column: 23, scope: !9967)
!10002 = !DILocalVariable(name: "row", scope: !9967, file: !3, line: 3524, type: !105)
!10003 = !DILocation(line: 3524, column: 35, scope: !9967)
!10004 = !DILocalVariable(name: "dst_rowsize", scope: !9967, file: !3, line: 3525, type: !105)
!10005 = !DILocation(line: 3525, column: 10, scope: !9967)
!10006 = !DILocalVariable(name: "dst_offset", scope: !9967, file: !3, line: 3525, type: !105)
!10007 = !DILocation(line: 3525, column: 23, scope: !9967)
!10008 = !DILocalVariable(name: "src", scope: !9967, file: !3, line: 3526, type: !116)
!10009 = !DILocation(line: 3526, column: 10, scope: !9967)
!10010 = !DILocalVariable(name: "dst", scope: !9967, file: !3, line: 3526, type: !116)
!10011 = !DILocation(line: 3526, column: 16, scope: !9967)
!10012 = !DILocation(line: 3528, column: 23, scope: !9967)
!10013 = !DILocation(line: 3528, column: 27, scope: !9967)
!10014 = !DILocation(line: 3528, column: 32, scope: !9967)
!10015 = !DILocation(line: 3528, column: 20, scope: !9967)
!10016 = !DILocation(line: 3529, column: 24, scope: !9967)
!10017 = !DILocation(line: 3529, column: 30, scope: !9967)
!10018 = !DILocation(line: 3529, column: 28, scope: !9967)
!10019 = !DILocation(line: 3529, column: 35, scope: !9967)
!10020 = !DILocation(line: 3529, column: 40, scope: !9967)
!10021 = !DILocation(line: 3529, column: 20, scope: !9967)
!10022 = !DILocation(line: 3530, column: 8, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3530, column: 7)
!10024 = !DILocation(line: 3530, column: 12, scope: !10023)
!10025 = !DILocation(line: 3530, column: 17, scope: !10023)
!10026 = !DILocation(line: 3530, column: 7, scope: !9967)
!10027 = !DILocation(line: 3531, column: 17, scope: !10023)
!10028 = !DILocation(line: 3531, column: 5, scope: !10023)
!10029 = !DILocation(line: 3534, column: 9, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 3534, column: 9)
!10031 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 3533, column: 5)
!10032 = !DILocation(line: 3534, column: 28, scope: !10030)
!10033 = !DILocation(line: 3534, column: 45, scope: !10030)
!10034 = !DILocation(line: 3534, column: 25, scope: !10030)
!10035 = !DILocation(line: 3534, column: 9, scope: !10031)
!10036 = !DILocation(line: 3535, column: 21, scope: !10030)
!10037 = !DILocation(line: 3535, column: 19, scope: !10030)
!10038 = !DILocation(line: 3535, column: 7, scope: !10030)
!10039 = !DILocation(line: 3537, column: 21, scope: !10030)
!10040 = !DILocation(line: 3537, column: 38, scope: !10030)
!10041 = !DILocation(line: 3537, column: 19, scope: !10030)
!10042 = !DILocation(line: 3540, column: 8, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3540, column: 7)
!10044 = !DILocation(line: 3540, column: 14, scope: !10043)
!10045 = !DILocation(line: 3540, column: 22, scope: !10043)
!10046 = !DILocation(line: 3540, column: 31, scope: !10043)
!10047 = !DILocation(line: 3540, column: 35, scope: !10043)
!10048 = !DILocation(line: 3540, column: 41, scope: !10043)
!10049 = !DILocation(line: 3540, column: 47, scope: !10043)
!10050 = !DILocation(line: 3540, column: 7, scope: !9967)
!10051 = !DILocation(line: 3542, column: 17, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 3541, column: 5)
!10053 = !DILocation(line: 3542, column: 23, scope: !10052)
!10054 = !DILocation(line: 3542, column: 32, scope: !10052)
!10055 = !DILocation(line: 3542, column: 38, scope: !10052)
!10056 = !DILocation(line: 3543, column: 39, scope: !10052)
!10057 = !DILocation(line: 3543, column: 46, scope: !10052)
!10058 = !DILocation(line: 3543, column: 51, scope: !10052)
!10059 = !DILocation(line: 3543, column: 56, scope: !10052)
!10060 = !DILocation(line: 3542, column: 5, scope: !10052)
!10061 = !DILocation(line: 3544, column: 5, scope: !10052)
!10062 = !DILocation(line: 3546, column: 19, scope: !9967)
!10063 = !DILocation(line: 3546, column: 25, scope: !9967)
!10064 = !DILocation(line: 3546, column: 23, scope: !9967)
!10065 = !DILocation(line: 3546, column: 31, scope: !9967)
!10066 = !DILocation(line: 3546, column: 29, scope: !9967)
!10067 = !DILocation(line: 3546, column: 43, scope: !9967)
!10068 = !DILocation(line: 3546, column: 48, scope: !9967)
!10069 = !DILocation(line: 3546, column: 15, scope: !9967)
!10070 = !DILocation(line: 3547, column: 19, scope: !9967)
!10071 = !DILocation(line: 3547, column: 25, scope: !9967)
!10072 = !DILocation(line: 3547, column: 23, scope: !9967)
!10073 = !DILocation(line: 3547, column: 37, scope: !9967)
!10074 = !DILocation(line: 3547, column: 35, scope: !9967)
!10075 = !DILocation(line: 3547, column: 44, scope: !9967)
!10076 = !DILocation(line: 3547, column: 49, scope: !9967)
!10077 = !DILocation(line: 3547, column: 15, scope: !9967)
!10078 = !DILocation(line: 3549, column: 12, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3549, column: 3)
!10080 = !DILocation(line: 3549, column: 8, scope: !10079)
!10081 = !DILocation(line: 3549, column: 17, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 3549, column: 3)
!10083 = !DILocation(line: 3549, column: 23, scope: !10082)
!10084 = !DILocation(line: 3549, column: 21, scope: !10082)
!10085 = !DILocation(line: 3549, column: 3, scope: !10079)
!10086 = !DILocation(line: 3551, column: 18, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 3550, column: 5)
!10088 = !DILocation(line: 3551, column: 24, scope: !10087)
!10089 = !DILocation(line: 3551, column: 22, scope: !10087)
!10090 = !DILocation(line: 3551, column: 16, scope: !10087)
!10091 = !DILocation(line: 3552, column: 18, scope: !10087)
!10092 = !DILocation(line: 3552, column: 24, scope: !10087)
!10093 = !DILocation(line: 3552, column: 22, scope: !10087)
!10094 = !DILocation(line: 3552, column: 16, scope: !10087)
!10095 = !DILocation(line: 3553, column: 11, scope: !10087)
!10096 = !DILocation(line: 3553, column: 16, scope: !10087)
!10097 = !DILocation(line: 3553, column: 14, scope: !10087)
!10098 = !DILocation(line: 3553, column: 9, scope: !10087)
!10099 = !DILocation(line: 3554, column: 11, scope: !10087)
!10100 = !DILocation(line: 3554, column: 17, scope: !10087)
!10101 = !DILocation(line: 3554, column: 15, scope: !10087)
!10102 = !DILocation(line: 3554, column: 9, scope: !10087)
!10103 = !DILocation(line: 3557, column: 13, scope: !10087)
!10104 = !DILocation(line: 3557, column: 5, scope: !10087)
!10105 = !DILocation(line: 3559, column: 46, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 3559, column: 19)
!10107 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 3558, column: 7)
!10108 = !DILocation(line: 3559, column: 51, scope: !10106)
!10109 = !DILocation(line: 3559, column: 56, scope: !10106)
!10110 = !DILocation(line: 3559, column: 62, scope: !10106)
!10111 = !DILocation(line: 3560, column: 46, scope: !10106)
!10112 = !DILocation(line: 3560, column: 51, scope: !10106)
!10113 = !DILocation(line: 3560, column: 57, scope: !10106)
!10114 = !DILocation(line: 3560, column: 67, scope: !10106)
!10115 = !DILocation(line: 3559, column: 19, scope: !10106)
!10116 = !DILocation(line: 3559, column: 19, scope: !10107)
!10117 = !DILocation(line: 3561, column: 17, scope: !10106)
!10118 = !DILocation(line: 3562, column: 9, scope: !10107)
!10119 = !DILocation(line: 3563, column: 19, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 3563, column: 19)
!10121 = !DILocation(line: 3563, column: 23, scope: !10120)
!10122 = !DILocation(line: 3563, column: 19, scope: !10107)
!10123 = !DILocation(line: 3565, column: 48, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 3565, column: 21)
!10125 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 3564, column: 17)
!10126 = !DILocation(line: 3565, column: 53, scope: !10124)
!10127 = !DILocation(line: 3565, column: 58, scope: !10124)
!10128 = !DILocation(line: 3565, column: 64, scope: !10124)
!10129 = !DILocation(line: 3566, column: 48, scope: !10124)
!10130 = !DILocation(line: 3566, column: 53, scope: !10124)
!10131 = !DILocation(line: 3566, column: 58, scope: !10124)
!10132 = !DILocation(line: 3566, column: 68, scope: !10124)
!10133 = !DILocation(line: 3565, column: 21, scope: !10124)
!10134 = !DILocation(line: 3565, column: 21, scope: !10125)
!10135 = !DILocation(line: 3567, column: 12, scope: !10124)
!10136 = !DILocation(line: 3568, column: 10, scope: !10125)
!10137 = !DILocation(line: 3571, column: 50, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 3571, column: 22)
!10139 = !DILocation(line: 3571, column: 55, scope: !10138)
!10140 = !DILocation(line: 3571, column: 60, scope: !10138)
!10141 = !DILocation(line: 3571, column: 66, scope: !10138)
!10142 = !DILocation(line: 3572, column: 50, scope: !10138)
!10143 = !DILocation(line: 3572, column: 55, scope: !10138)
!10144 = !DILocation(line: 3572, column: 60, scope: !10138)
!10145 = !DILocation(line: 3572, column: 70, scope: !10138)
!10146 = !DILocation(line: 3571, column: 22, scope: !10138)
!10147 = !DILocation(line: 3571, column: 22, scope: !10120)
!10148 = !DILocation(line: 3573, column: 11, scope: !10138)
!10149 = !DILocation(line: 3574, column: 8, scope: !10107)
!10150 = !DILocation(line: 3575, column: 47, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 3575, column: 19)
!10152 = !DILocation(line: 3575, column: 52, scope: !10151)
!10153 = !DILocation(line: 3575, column: 57, scope: !10151)
!10154 = !DILocation(line: 3575, column: 63, scope: !10151)
!10155 = !DILocation(line: 3576, column: 47, scope: !10151)
!10156 = !DILocation(line: 3576, column: 52, scope: !10151)
!10157 = !DILocation(line: 3576, column: 58, scope: !10151)
!10158 = !DILocation(line: 3576, column: 68, scope: !10151)
!10159 = !DILocation(line: 3575, column: 19, scope: !10151)
!10160 = !DILocation(line: 3575, column: 19, scope: !10107)
!10161 = !DILocation(line: 3577, column: 11, scope: !10151)
!10162 = !DILocation(line: 3578, column: 8, scope: !10107)
!10163 = !DILocation(line: 3581, column: 47, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 3581, column: 19)
!10165 = !DILocation(line: 3581, column: 52, scope: !10164)
!10166 = !DILocation(line: 3581, column: 57, scope: !10164)
!10167 = !DILocation(line: 3581, column: 63, scope: !10164)
!10168 = !DILocation(line: 3582, column: 47, scope: !10164)
!10169 = !DILocation(line: 3582, column: 52, scope: !10164)
!10170 = !DILocation(line: 3582, column: 58, scope: !10164)
!10171 = !DILocation(line: 3582, column: 68, scope: !10164)
!10172 = !DILocation(line: 3581, column: 19, scope: !10164)
!10173 = !DILocation(line: 3581, column: 19, scope: !10107)
!10174 = !DILocation(line: 3583, column: 11, scope: !10164)
!10175 = !DILocation(line: 3584, column: 8, scope: !10107)
!10176 = !DILocation(line: 3585, column: 92, scope: !10107)
!10177 = !DILocation(line: 3585, column: 16, scope: !10107)
!10178 = !DILocation(line: 3586, column: 9, scope: !10107)
!10179 = !DILocation(line: 3588, column: 10, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 3588, column: 9)
!10181 = !DILocation(line: 3588, column: 16, scope: !10180)
!10182 = !DILocation(line: 3588, column: 24, scope: !10180)
!10183 = !DILocation(line: 3588, column: 33, scope: !10180)
!10184 = !DILocation(line: 3588, column: 37, scope: !10180)
!10185 = !DILocation(line: 3588, column: 43, scope: !10180)
!10186 = !DILocation(line: 3588, column: 49, scope: !10180)
!10187 = !DILocation(line: 3588, column: 9, scope: !10087)
!10188 = !DILocation(line: 3589, column: 19, scope: !10180)
!10189 = !DILocation(line: 3589, column: 25, scope: !10180)
!10190 = !DILocation(line: 3589, column: 34, scope: !10180)
!10191 = !DILocation(line: 3589, column: 40, scope: !10180)
!10192 = !DILocation(line: 3589, column: 51, scope: !10180)
!10193 = !DILocation(line: 3589, column: 64, scope: !10180)
!10194 = !DILocation(line: 3589, column: 69, scope: !10180)
!10195 = !DILocation(line: 3589, column: 7, scope: !10180)
!10196 = !DILocation(line: 3590, column: 5, scope: !10087)
!10197 = !DILocation(line: 3549, column: 32, scope: !10082)
!10198 = !DILocation(line: 3549, column: 3, scope: !10082)
!10199 = distinct !{!10199, !10085, !10200}
!10200 = !DILocation(line: 3590, column: 5, scope: !10079)
!10201 = !DILocation(line: 3592, column: 3, scope: !9967)
!10202 = !DILocation(line: 3593, column: 3, scope: !9967)
!10203 = distinct !DISubprogram(name: "invertImage", scope: !3, file: !3, line: 8973, type: !10204, scopeLine: 8974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!10204 = !DISubroutineType(types: !10205)
!10205 = !{!110, !103, !103, !103, !105, !105, !106}
!10206 = !DILocalVariable(name: "photometric", arg: 1, scope: !10203, file: !3, line: 8973, type: !103)
!10207 = !DILocation(line: 8973, column: 20, scope: !10203)
!10208 = !DILocalVariable(name: "spp", arg: 2, scope: !10203, file: !3, line: 8973, type: !103)
!10209 = !DILocation(line: 8973, column: 40, scope: !10203)
!10210 = !DILocalVariable(name: "bps", arg: 3, scope: !10203, file: !3, line: 8973, type: !103)
!10211 = !DILocation(line: 8973, column: 52, scope: !10203)
!10212 = !DILocalVariable(name: "width", arg: 4, scope: !10203, file: !3, line: 8973, type: !105)
!10213 = !DILocation(line: 8973, column: 64, scope: !10203)
!10214 = !DILocalVariable(name: "length", arg: 5, scope: !10203, file: !3, line: 8973, type: !105)
!10215 = !DILocation(line: 8973, column: 78, scope: !10203)
!10216 = !DILocalVariable(name: "work_buff", arg: 6, scope: !10203, file: !3, line: 8973, type: !106)
!10217 = !DILocation(line: 8973, column: 101, scope: !10203)
!10218 = !DILocalVariable(name: "row", scope: !10203, file: !3, line: 8975, type: !105)
!10219 = !DILocation(line: 8975, column: 12, scope: !10203)
!10220 = !DILocalVariable(name: "col", scope: !10203, file: !3, line: 8975, type: !105)
!10221 = !DILocation(line: 8975, column: 17, scope: !10203)
!10222 = !DILocalVariable(name: "bytebuff1", scope: !10203, file: !3, line: 8976, type: !107)
!10223 = !DILocation(line: 8976, column: 18, scope: !10203)
!10224 = !DILocalVariable(name: "bytebuff2", scope: !10203, file: !3, line: 8976, type: !107)
!10225 = !DILocation(line: 8976, column: 29, scope: !10203)
!10226 = !DILocalVariable(name: "bytebuff3", scope: !10203, file: !3, line: 8976, type: !107)
!10227 = !DILocation(line: 8976, column: 40, scope: !10203)
!10228 = !DILocalVariable(name: "bytebuff4", scope: !10203, file: !3, line: 8976, type: !107)
!10229 = !DILocation(line: 8976, column: 51, scope: !10203)
!10230 = !DILocalVariable(name: "src", scope: !10203, file: !3, line: 8977, type: !106)
!10231 = !DILocation(line: 8977, column: 18, scope: !10203)
!10232 = !DILocalVariable(name: "src_uint16", scope: !10203, file: !3, line: 8978, type: !123)
!10233 = !DILocation(line: 8978, column: 18, scope: !10203)
!10234 = !DILocalVariable(name: "src_uint32", scope: !10203, file: !3, line: 8979, type: !122)
!10235 = !DILocation(line: 8979, column: 18, scope: !10203)
!10236 = !DILocation(line: 8981, column: 7, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 8981, column: 7)
!10238 = !DILocation(line: 8981, column: 11, scope: !10237)
!10239 = !DILocation(line: 8981, column: 7, scope: !10203)
!10240 = !DILocation(line: 8983, column: 5, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 8982, column: 5)
!10242 = !DILocation(line: 8984, column: 5, scope: !10241)
!10243 = !DILocation(line: 8987, column: 7, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 8987, column: 7)
!10245 = !DILocation(line: 8987, column: 19, scope: !10244)
!10246 = !DILocation(line: 8987, column: 46, scope: !10244)
!10247 = !DILocation(line: 8987, column: 49, scope: !10244)
!10248 = !DILocation(line: 8987, column: 61, scope: !10244)
!10249 = !DILocation(line: 8987, column: 7, scope: !10203)
!10250 = !DILocation(line: 8989, column: 5, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 8988, column: 5)
!10252 = !DILocation(line: 8990, column: 5, scope: !10251)
!10253 = !DILocation(line: 8993, column: 9, scope: !10203)
!10254 = !DILocation(line: 8993, column: 7, scope: !10203)
!10255 = !DILocation(line: 8994, column: 7, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 8994, column: 7)
!10257 = !DILocation(line: 8994, column: 11, scope: !10256)
!10258 = !DILocation(line: 8994, column: 7, scope: !10203)
!10259 = !DILocation(line: 8996, column: 5, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 8995, column: 5)
!10261 = !DILocation(line: 8997, column: 5, scope: !10260)
!10262 = !DILocation(line: 9000, column: 11, scope: !10203)
!10263 = !DILocation(line: 9000, column: 3, scope: !10203)
!10264 = !DILocation(line: 9002, column: 37, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 9001, column: 5)
!10266 = !DILocation(line: 9002, column: 27, scope: !10265)
!10267 = !DILocation(line: 9002, column: 25, scope: !10265)
!10268 = !DILocation(line: 9003, column: 23, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 9003, column: 14)
!10270 = !DILocation(line: 9003, column: 19, scope: !10269)
!10271 = !DILocation(line: 9003, column: 28, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 9003, column: 14)
!10273 = !DILocation(line: 9003, column: 34, scope: !10272)
!10274 = !DILocation(line: 9003, column: 32, scope: !10272)
!10275 = !DILocation(line: 9003, column: 14, scope: !10269)
!10276 = !DILocation(line: 9004, column: 25, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10272, file: !3, line: 9004, column: 16)
!10278 = !DILocation(line: 9004, column: 21, scope: !10277)
!10279 = !DILocation(line: 9004, column: 30, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 9004, column: 16)
!10281 = !DILocation(line: 9004, column: 36, scope: !10280)
!10282 = !DILocation(line: 9004, column: 34, scope: !10280)
!10283 = !DILocation(line: 9004, column: 16, scope: !10277)
!10284 = !DILocation(line: 9006, column: 40, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 9005, column: 18)
!10286 = !DILocation(line: 9006, column: 39, scope: !10285)
!10287 = !DILocation(line: 9006, column: 37, scope: !10285)
!10288 = !DILocation(line: 9006, column: 5, scope: !10285)
!10289 = !DILocation(line: 9006, column: 16, scope: !10285)
!10290 = !DILocation(line: 9007, column: 29, scope: !10285)
!10291 = !DILocation(line: 9008, column: 18, scope: !10285)
!10292 = !DILocation(line: 9004, column: 46, scope: !10280)
!10293 = !DILocation(line: 9004, column: 16, scope: !10280)
!10294 = distinct !{!10294, !10283, !10295}
!10295 = !DILocation(line: 9008, column: 18, scope: !10277)
!10296 = !DILocation(line: 9003, column: 45, scope: !10272)
!10297 = !DILocation(line: 9003, column: 14, scope: !10272)
!10298 = distinct !{!10298, !10275, !10299}
!10299 = !DILocation(line: 9008, column: 18, scope: !10269)
!10300 = !DILocation(line: 9009, column: 13, scope: !10265)
!10301 = !DILocation(line: 9010, column: 37, scope: !10265)
!10302 = !DILocation(line: 9010, column: 27, scope: !10265)
!10303 = !DILocation(line: 9010, column: 25, scope: !10265)
!10304 = !DILocation(line: 9011, column: 23, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 9011, column: 14)
!10306 = !DILocation(line: 9011, column: 19, scope: !10305)
!10307 = !DILocation(line: 9011, column: 28, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 9011, column: 14)
!10309 = !DILocation(line: 9011, column: 34, scope: !10308)
!10310 = !DILocation(line: 9011, column: 32, scope: !10308)
!10311 = !DILocation(line: 9011, column: 14, scope: !10305)
!10312 = !DILocation(line: 9012, column: 25, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 9012, column: 16)
!10314 = !DILocation(line: 9012, column: 21, scope: !10313)
!10315 = !DILocation(line: 9012, column: 30, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 9012, column: 16)
!10317 = !DILocation(line: 9012, column: 36, scope: !10316)
!10318 = !DILocation(line: 9012, column: 34, scope: !10316)
!10319 = !DILocation(line: 9012, column: 16, scope: !10313)
!10320 = !DILocation(line: 9014, column: 36, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 9013, column: 18)
!10322 = !DILocation(line: 9014, column: 35, scope: !10321)
!10323 = !DILocation(line: 9014, column: 33, scope: !10321)
!10324 = !DILocation(line: 9014, column: 18, scope: !10321)
!10325 = !DILocation(line: 9014, column: 5, scope: !10321)
!10326 = !DILocation(line: 9014, column: 16, scope: !10321)
!10327 = !DILocation(line: 9015, column: 29, scope: !10321)
!10328 = !DILocation(line: 9016, column: 18, scope: !10321)
!10329 = !DILocation(line: 9012, column: 46, scope: !10316)
!10330 = !DILocation(line: 9012, column: 16, scope: !10316)
!10331 = distinct !{!10331, !10319, !10332}
!10332 = !DILocation(line: 9016, column: 18, scope: !10313)
!10333 = !DILocation(line: 9011, column: 45, scope: !10308)
!10334 = !DILocation(line: 9011, column: 14, scope: !10308)
!10335 = distinct !{!10335, !10311, !10336}
!10336 = !DILocation(line: 9016, column: 18, scope: !10305)
!10337 = !DILocation(line: 9017, column: 13, scope: !10265)
!10338 = !DILocation(line: 9018, column: 22, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 9018, column: 13)
!10340 = !DILocation(line: 9018, column: 18, scope: !10339)
!10341 = !DILocation(line: 9018, column: 27, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 9018, column: 13)
!10343 = !DILocation(line: 9018, column: 33, scope: !10342)
!10344 = !DILocation(line: 9018, column: 31, scope: !10342)
!10345 = !DILocation(line: 9018, column: 13, scope: !10339)
!10346 = !DILocation(line: 9019, column: 24, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 9019, column: 15)
!10348 = !DILocation(line: 9019, column: 20, scope: !10347)
!10349 = !DILocation(line: 9019, column: 29, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 9019, column: 15)
!10351 = !DILocation(line: 9019, column: 35, scope: !10350)
!10352 = !DILocation(line: 9019, column: 33, scope: !10350)
!10353 = !DILocation(line: 9019, column: 15, scope: !10347)
!10354 = !DILocation(line: 9021, column: 24, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 9020, column: 17)
!10356 = !DILocation(line: 9021, column: 23, scope: !10355)
!10357 = !DILocation(line: 9021, column: 21, scope: !10355)
!10358 = !DILocation(line: 9021, column: 10, scope: !10355)
!10359 = !DILocation(line: 9021, column: 4, scope: !10355)
!10360 = !DILocation(line: 9021, column: 8, scope: !10355)
!10361 = !DILocation(line: 9022, column: 21, scope: !10355)
!10362 = !DILocation(line: 9023, column: 17, scope: !10355)
!10363 = !DILocation(line: 9019, column: 45, scope: !10350)
!10364 = !DILocation(line: 9019, column: 15, scope: !10350)
!10365 = distinct !{!10365, !10353, !10366}
!10366 = !DILocation(line: 9023, column: 17, scope: !10347)
!10367 = !DILocation(line: 9018, column: 44, scope: !10342)
!10368 = !DILocation(line: 9018, column: 13, scope: !10342)
!10369 = distinct !{!10369, !10345, !10370}
!10370 = !DILocation(line: 9023, column: 17, scope: !10339)
!10371 = !DILocation(line: 9024, column: 13, scope: !10265)
!10372 = !DILocation(line: 9025, column: 22, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 9025, column: 13)
!10374 = !DILocation(line: 9025, column: 18, scope: !10373)
!10375 = !DILocation(line: 9025, column: 27, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 9025, column: 13)
!10377 = !DILocation(line: 9025, column: 33, scope: !10376)
!10378 = !DILocation(line: 9025, column: 31, scope: !10376)
!10379 = !DILocation(line: 9025, column: 13, scope: !10373)
!10380 = !DILocation(line: 9026, column: 24, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 9026, column: 15)
!10382 = !DILocation(line: 9026, column: 20, scope: !10381)
!10383 = !DILocation(line: 9026, column: 29, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 9026, column: 15)
!10385 = !DILocation(line: 9026, column: 35, scope: !10384)
!10386 = !DILocation(line: 9026, column: 33, scope: !10384)
!10387 = !DILocation(line: 9026, column: 15, scope: !10381)
!10388 = !DILocation(line: 9028, column: 29, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 9027, column: 17)
!10390 = !DILocation(line: 9028, column: 28, scope: !10389)
!10391 = !DILocation(line: 9028, column: 33, scope: !10389)
!10392 = !DILocation(line: 9028, column: 20, scope: !10389)
!10393 = !DILocation(line: 9028, column: 18, scope: !10389)
!10394 = !DILocation(line: 9028, column: 15, scope: !10389)
!10395 = !DILocation(line: 9028, column: 13, scope: !10389)
!10396 = !DILocation(line: 9029, column: 22, scope: !10389)
!10397 = !DILocation(line: 9029, column: 21, scope: !10389)
!10398 = !DILocation(line: 9029, column: 26, scope: !10389)
!10399 = !DILocation(line: 9029, column: 18, scope: !10389)
!10400 = !DILocation(line: 9029, column: 15, scope: !10389)
!10401 = !DILocation(line: 9029, column: 13, scope: !10389)
!10402 = !DILocation(line: 9030, column: 10, scope: !10389)
!10403 = !DILocation(line: 9030, column: 20, scope: !10389)
!10404 = !DILocation(line: 9030, column: 27, scope: !10389)
!10405 = !DILocation(line: 9030, column: 25, scope: !10389)
!10406 = !DILocation(line: 9030, column: 4, scope: !10389)
!10407 = !DILocation(line: 9030, column: 8, scope: !10389)
!10408 = !DILocation(line: 9031, column: 20, scope: !10389)
!10409 = !DILocation(line: 9032, column: 17, scope: !10389)
!10410 = !DILocation(line: 9026, column: 45, scope: !10384)
!10411 = !DILocation(line: 9026, column: 15, scope: !10384)
!10412 = distinct !{!10412, !10387, !10413}
!10413 = !DILocation(line: 9032, column: 17, scope: !10381)
!10414 = !DILocation(line: 9025, column: 44, scope: !10376)
!10415 = !DILocation(line: 9025, column: 13, scope: !10376)
!10416 = distinct !{!10416, !10379, !10417}
!10417 = !DILocation(line: 9032, column: 17, scope: !10373)
!10418 = !DILocation(line: 9033, column: 13, scope: !10265)
!10419 = !DILocation(line: 9034, column: 22, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 9034, column: 13)
!10421 = !DILocation(line: 9034, column: 18, scope: !10420)
!10422 = !DILocation(line: 9034, column: 27, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 9034, column: 13)
!10424 = !DILocation(line: 9034, column: 33, scope: !10423)
!10425 = !DILocation(line: 9034, column: 31, scope: !10423)
!10426 = !DILocation(line: 9034, column: 13, scope: !10420)
!10427 = !DILocation(line: 9035, column: 24, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 9035, column: 15)
!10429 = !DILocation(line: 9035, column: 20, scope: !10428)
!10430 = !DILocation(line: 9035, column: 29, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 9035, column: 15)
!10432 = !DILocation(line: 9035, column: 35, scope: !10431)
!10433 = !DILocation(line: 9035, column: 33, scope: !10431)
!10434 = !DILocation(line: 9035, column: 15, scope: !10428)
!10435 = !DILocation(line: 9037, column: 28, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 9036, column: 17)
!10437 = !DILocation(line: 9037, column: 27, scope: !10436)
!10438 = !DILocation(line: 9037, column: 32, scope: !10436)
!10439 = !DILocation(line: 9037, column: 19, scope: !10436)
!10440 = !DILocation(line: 9037, column: 17, scope: !10436)
!10441 = !DILocation(line: 9037, column: 15, scope: !10436)
!10442 = !DILocation(line: 9037, column: 13, scope: !10436)
!10443 = !DILocation(line: 9038, column: 28, scope: !10436)
!10444 = !DILocation(line: 9038, column: 27, scope: !10436)
!10445 = !DILocation(line: 9038, column: 32, scope: !10436)
!10446 = !DILocation(line: 9038, column: 19, scope: !10436)
!10447 = !DILocation(line: 9038, column: 17, scope: !10436)
!10448 = !DILocation(line: 9038, column: 15, scope: !10436)
!10449 = !DILocation(line: 9038, column: 13, scope: !10436)
!10450 = !DILocation(line: 9039, column: 28, scope: !10436)
!10451 = !DILocation(line: 9039, column: 27, scope: !10436)
!10452 = !DILocation(line: 9039, column: 32, scope: !10436)
!10453 = !DILocation(line: 9039, column: 19, scope: !10436)
!10454 = !DILocation(line: 9039, column: 17, scope: !10436)
!10455 = !DILocation(line: 9039, column: 15, scope: !10436)
!10456 = !DILocation(line: 9039, column: 13, scope: !10436)
!10457 = !DILocation(line: 9040, column: 28, scope: !10436)
!10458 = !DILocation(line: 9040, column: 27, scope: !10436)
!10459 = !DILocation(line: 9040, column: 32, scope: !10436)
!10460 = !DILocation(line: 9040, column: 19, scope: !10436)
!10461 = !DILocation(line: 9040, column: 17, scope: !10436)
!10462 = !DILocation(line: 9040, column: 15, scope: !10436)
!10463 = !DILocation(line: 9040, column: 13, scope: !10436)
!10464 = !DILocation(line: 9041, column: 11, scope: !10436)
!10465 = !DILocation(line: 9041, column: 21, scope: !10436)
!10466 = !DILocation(line: 9041, column: 27, scope: !10436)
!10467 = !DILocation(line: 9041, column: 31, scope: !10436)
!10468 = !DILocation(line: 9041, column: 41, scope: !10436)
!10469 = !DILocation(line: 9041, column: 47, scope: !10436)
!10470 = !DILocation(line: 9041, column: 51, scope: !10436)
!10471 = !DILocation(line: 9041, column: 61, scope: !10436)
!10472 = !DILocation(line: 9041, column: 67, scope: !10436)
!10473 = !DILocation(line: 9041, column: 70, scope: !10436)
!10474 = !DILocation(line: 9041, column: 10, scope: !10436)
!10475 = !DILocation(line: 9041, column: 4, scope: !10436)
!10476 = !DILocation(line: 9041, column: 8, scope: !10436)
!10477 = !DILocation(line: 9042, column: 20, scope: !10436)
!10478 = !DILocation(line: 9043, column: 17, scope: !10436)
!10479 = !DILocation(line: 9035, column: 45, scope: !10431)
!10480 = !DILocation(line: 9035, column: 15, scope: !10431)
!10481 = distinct !{!10481, !10434, !10482}
!10482 = !DILocation(line: 9043, column: 17, scope: !10428)
!10483 = !DILocation(line: 9034, column: 44, scope: !10423)
!10484 = !DILocation(line: 9034, column: 13, scope: !10423)
!10485 = distinct !{!10485, !10426, !10486}
!10486 = !DILocation(line: 9043, column: 17, scope: !10420)
!10487 = !DILocation(line: 9044, column: 13, scope: !10265)
!10488 = !DILocation(line: 9045, column: 22, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 9045, column: 13)
!10490 = !DILocation(line: 9045, column: 18, scope: !10489)
!10491 = !DILocation(line: 9045, column: 27, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 9045, column: 13)
!10493 = !DILocation(line: 9045, column: 33, scope: !10492)
!10494 = !DILocation(line: 9045, column: 31, scope: !10492)
!10495 = !DILocation(line: 9045, column: 13, scope: !10489)
!10496 = !DILocation(line: 9046, column: 24, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 9046, column: 15)
!10498 = !DILocation(line: 9046, column: 20, scope: !10497)
!10499 = !DILocation(line: 9046, column: 29, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 9046, column: 15)
!10501 = !DILocation(line: 9046, column: 35, scope: !10500)
!10502 = !DILocation(line: 9046, column: 33, scope: !10500)
!10503 = !DILocation(line: 9046, column: 15, scope: !10497)
!10504 = !DILocation(line: 9048, column: 27, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 9047, column: 17)
!10506 = !DILocation(line: 9048, column: 26, scope: !10505)
!10507 = !DILocation(line: 9048, column: 25, scope: !10505)
!10508 = !DILocation(line: 9048, column: 24, scope: !10505)
!10509 = !DILocation(line: 9048, column: 18, scope: !10505)
!10510 = !DILocation(line: 9048, column: 22, scope: !10505)
!10511 = !DILocation(line: 9049, column: 20, scope: !10505)
!10512 = !DILocation(line: 9050, column: 17, scope: !10505)
!10513 = !DILocation(line: 9046, column: 53, scope: !10500)
!10514 = !DILocation(line: 9046, column: 59, scope: !10500)
!10515 = !DILocation(line: 9046, column: 57, scope: !10500)
!10516 = !DILocation(line: 9046, column: 51, scope: !10500)
!10517 = !DILocation(line: 9046, column: 46, scope: !10500)
!10518 = !DILocation(line: 9046, column: 15, scope: !10500)
!10519 = distinct !{!10519, !10503, !10520}
!10520 = !DILocation(line: 9050, column: 17, scope: !10497)
!10521 = !DILocation(line: 9045, column: 44, scope: !10492)
!10522 = !DILocation(line: 9045, column: 13, scope: !10492)
!10523 = distinct !{!10523, !10495, !10524}
!10524 = !DILocation(line: 9050, column: 17, scope: !10489)
!10525 = !DILocation(line: 9051, column: 13, scope: !10265)
!10526 = !DILocation(line: 9052, column: 67, scope: !10265)
!10527 = !DILocation(line: 9052, column: 14, scope: !10265)
!10528 = !DILocation(line: 9053, column: 7, scope: !10265)
!10529 = !DILocation(line: 9056, column: 3, scope: !10203)
!10530 = !DILocation(line: 9057, column: 3, scope: !10203)
!10531 = distinct !DISubprogram(name: "mirrorImage", scope: !3, file: !3, line: 8860, type: !10204, scopeLine: 8861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!10532 = !DILocalVariable(name: "spp", arg: 1, scope: !10531, file: !3, line: 8860, type: !103)
!10533 = !DILocation(line: 8860, column: 20, scope: !10531)
!10534 = !DILocalVariable(name: "bps", arg: 2, scope: !10531, file: !3, line: 8860, type: !103)
!10535 = !DILocation(line: 8860, column: 32, scope: !10531)
!10536 = !DILocalVariable(name: "mirror", arg: 3, scope: !10531, file: !3, line: 8860, type: !103)
!10537 = !DILocation(line: 8860, column: 44, scope: !10531)
!10538 = !DILocalVariable(name: "width", arg: 4, scope: !10531, file: !3, line: 8860, type: !105)
!10539 = !DILocation(line: 8860, column: 59, scope: !10531)
!10540 = !DILocalVariable(name: "length", arg: 5, scope: !10531, file: !3, line: 8860, type: !105)
!10541 = !DILocation(line: 8860, column: 73, scope: !10531)
!10542 = !DILocalVariable(name: "ibuff", arg: 6, scope: !10531, file: !3, line: 8860, type: !106)
!10543 = !DILocation(line: 8860, column: 96, scope: !10531)
!10544 = !DILocalVariable(name: "shift_width", scope: !10531, file: !3, line: 8862, type: !110)
!10545 = !DILocation(line: 8862, column: 12, scope: !10531)
!10546 = !DILocalVariable(name: "bytes_per_pixel", scope: !10531, file: !3, line: 8863, type: !105)
!10547 = !DILocation(line: 8863, column: 12, scope: !10531)
!10548 = !DILocalVariable(name: "bytes_per_sample", scope: !10531, file: !3, line: 8863, type: !105)
!10549 = !DILocation(line: 8863, column: 29, scope: !10531)
!10550 = !DILocalVariable(name: "row", scope: !10531, file: !3, line: 8864, type: !105)
!10551 = !DILocation(line: 8864, column: 12, scope: !10531)
!10552 = !DILocalVariable(name: "rowsize", scope: !10531, file: !3, line: 8864, type: !105)
!10553 = !DILocation(line: 8864, column: 17, scope: !10531)
!10554 = !DILocalVariable(name: "row_offset", scope: !10531, file: !3, line: 8864, type: !105)
!10555 = !DILocation(line: 8864, column: 26, scope: !10531)
!10556 = !DILocalVariable(name: "line_buff", scope: !10531, file: !3, line: 8865, type: !106)
!10557 = !DILocation(line: 8865, column: 18, scope: !10531)
!10558 = !DILocalVariable(name: "src", scope: !10531, file: !3, line: 8866, type: !106)
!10559 = !DILocation(line: 8866, column: 18, scope: !10531)
!10560 = !DILocalVariable(name: "dst", scope: !10531, file: !3, line: 8867, type: !106)
!10561 = !DILocation(line: 8867, column: 18, scope: !10531)
!10562 = !DILocation(line: 8869, column: 9, scope: !10531)
!10563 = !DILocation(line: 8869, column: 7, scope: !10531)
!10564 = !DILocation(line: 8870, column: 15, scope: !10531)
!10565 = !DILocation(line: 8870, column: 23, scope: !10531)
!10566 = !DILocation(line: 8870, column: 21, scope: !10531)
!10567 = !DILocation(line: 8870, column: 29, scope: !10531)
!10568 = !DILocation(line: 8870, column: 27, scope: !10531)
!10569 = !DILocation(line: 8870, column: 34, scope: !10531)
!10570 = !DILocation(line: 8870, column: 39, scope: !10531)
!10571 = !DILocation(line: 8870, column: 11, scope: !10531)
!10572 = !DILocation(line: 8871, column: 11, scope: !10531)
!10573 = !DILocation(line: 8871, column: 3, scope: !10531)
!10574 = !DILocation(line: 8875, column: 55, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 8872, column: 5)
!10576 = !DILocation(line: 8875, column: 43, scope: !10575)
!10577 = !DILocation(line: 8875, column: 24, scope: !10575)
!10578 = !DILocation(line: 8876, column: 18, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 8876, column: 18)
!10580 = !DILocation(line: 8876, column: 28, scope: !10579)
!10581 = !DILocation(line: 8876, column: 18, scope: !10575)
!10582 = !DILocation(line: 8878, column: 89, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 8877, column: 16)
!10584 = !DILocation(line: 8878, column: 9, scope: !10583)
!10585 = !DILocation(line: 8879, column: 16, scope: !10583)
!10586 = !DILocation(line: 8882, column: 20, scope: !10575)
!10587 = !DILocation(line: 8882, column: 29, scope: !10575)
!10588 = !DILocation(line: 8882, column: 40, scope: !10575)
!10589 = !DILocation(line: 8882, column: 47, scope: !10575)
!10590 = !DILocation(line: 8882, column: 37, scope: !10575)
!10591 = !DILocation(line: 8882, column: 26, scope: !10575)
!10592 = !DILocation(line: 8882, column: 18, scope: !10575)
!10593 = !DILocation(line: 8883, column: 23, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 8883, column: 14)
!10595 = !DILocation(line: 8883, column: 19, scope: !10594)
!10596 = !DILocation(line: 8883, column: 28, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 8883, column: 14)
!10598 = !DILocation(line: 8883, column: 34, scope: !10597)
!10599 = !DILocation(line: 8883, column: 41, scope: !10597)
!10600 = !DILocation(line: 8883, column: 32, scope: !10597)
!10601 = !DILocation(line: 8883, column: 14, scope: !10594)
!10602 = !DILocation(line: 8885, column: 20, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10597, file: !3, line: 8884, column: 16)
!10604 = !DILocation(line: 8885, column: 31, scope: !10603)
!10605 = !DILocation(line: 8885, column: 36, scope: !10603)
!10606 = !DILocation(line: 8885, column: 8, scope: !10603)
!10607 = !DILocation(line: 8886, column: 20, scope: !10603)
!10608 = !DILocation(line: 8886, column: 25, scope: !10603)
!10609 = !DILocation(line: 8886, column: 31, scope: !10603)
!10610 = !DILocation(line: 8886, column: 8, scope: !10603)
!10611 = !DILocation(line: 8887, column: 20, scope: !10603)
!10612 = !DILocation(line: 8887, column: 25, scope: !10603)
!10613 = !DILocation(line: 8887, column: 36, scope: !10603)
!10614 = !DILocation(line: 8887, column: 8, scope: !10603)
!10615 = !DILocation(line: 8888, column: 24, scope: !10603)
!10616 = !DILocation(line: 8888, column: 20, scope: !10603)
!10617 = !DILocation(line: 8889, column: 24, scope: !10603)
!10618 = !DILocation(line: 8889, column: 20, scope: !10603)
!10619 = !DILocation(line: 8890, column: 16, scope: !10603)
!10620 = !DILocation(line: 8883, column: 49, scope: !10597)
!10621 = !DILocation(line: 8883, column: 14, scope: !10597)
!10622 = distinct !{!10622, !10601, !10623}
!10623 = !DILocation(line: 8890, column: 16, scope: !10594)
!10624 = !DILocation(line: 8891, column: 18, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 8891, column: 18)
!10626 = !DILocation(line: 8891, column: 18, scope: !10575)
!10627 = !DILocation(line: 8892, column: 26, scope: !10625)
!10628 = !DILocation(line: 8892, column: 16, scope: !10625)
!10629 = !DILocation(line: 8893, column: 18, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 8893, column: 18)
!10631 = !DILocation(line: 8893, column: 25, scope: !10630)
!10632 = !DILocation(line: 8893, column: 18, scope: !10575)
!10633 = !DILocation(line: 8894, column: 16, scope: !10630)
!10634 = !DILocation(line: 8893, column: 28, scope: !10630)
!10635 = !DILocation(line: 8896, column: 20, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 8896, column: 19)
!10637 = !DILocation(line: 8896, column: 24, scope: !10636)
!10638 = !DILocation(line: 8896, column: 29, scope: !10636)
!10639 = !DILocation(line: 8896, column: 19, scope: !10575)
!10640 = !DILocation(line: 8898, column: 26, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 8898, column: 17)
!10642 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 8897, column: 17)
!10643 = !DILocation(line: 8898, column: 22, scope: !10641)
!10644 = !DILocation(line: 8898, column: 31, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 8898, column: 17)
!10646 = !DILocation(line: 8898, column: 37, scope: !10645)
!10647 = !DILocation(line: 8898, column: 35, scope: !10645)
!10648 = !DILocation(line: 8898, column: 17, scope: !10641)
!10649 = !DILocation(line: 8900, column: 18, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 8899, column: 19)
!10651 = !DILocation(line: 8900, column: 24, scope: !10650)
!10652 = !DILocation(line: 8900, column: 22, scope: !10650)
!10653 = !DILocation(line: 8900, column: 16, scope: !10650)
!10654 = !DILocation(line: 8901, column: 25, scope: !10650)
!10655 = !DILocation(line: 8901, column: 33, scope: !10650)
!10656 = !DILocation(line: 8901, column: 31, scope: !10650)
!10657 = !DILocation(line: 8901, column: 23, scope: !10650)
!10658 = !DILocation(line: 8902, column: 25, scope: !10650)
!10659 = !DILocation(line: 8902, column: 33, scope: !10650)
!10660 = !DILocation(line: 8902, column: 31, scope: !10650)
!10661 = !DILocation(line: 8902, column: 46, scope: !10650)
!10662 = !DILocation(line: 8902, column: 44, scope: !10650)
!10663 = !DILocation(line: 8902, column: 23, scope: !10650)
!10664 = !DILocation(line: 8903, column: 43, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 8903, column: 23)
!10666 = !DILocation(line: 8903, column: 48, scope: !10665)
!10667 = !DILocation(line: 8903, column: 53, scope: !10665)
!10668 = !DILocation(line: 8903, column: 60, scope: !10665)
!10669 = !DILocation(line: 8903, column: 65, scope: !10665)
!10670 = !DILocation(line: 8903, column: 23, scope: !10665)
!10671 = !DILocation(line: 8903, column: 23, scope: !10650)
!10672 = !DILocation(line: 8905, column: 7, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 8904, column: 21)
!10674 = !DILocation(line: 8907, column: 5, scope: !10650)
!10675 = !DILocation(line: 8898, column: 48, scope: !10645)
!10676 = !DILocation(line: 8898, column: 17, scope: !10645)
!10677 = distinct !{!10677, !10648, !10678}
!10678 = !DILocation(line: 8907, column: 5, scope: !10641)
!10679 = !DILocation(line: 8908, column: 3, scope: !10642)
!10680 = !DILocation(line: 8911, column: 64, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 8911, column: 21)
!10682 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 8910, column: 17)
!10683 = !DILocation(line: 8911, column: 72, scope: !10681)
!10684 = !DILocation(line: 8911, column: 52, scope: !10681)
!10685 = !DILocation(line: 8911, column: 33, scope: !10681)
!10686 = !DILocation(line: 8911, column: 21, scope: !10682)
!10687 = !DILocation(line: 8913, column: 19, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 8912, column: 19)
!10689 = !DILocation(line: 8914, column: 19, scope: !10688)
!10690 = !DILocation(line: 8916, column: 37, scope: !10682)
!10691 = !DILocation(line: 8916, column: 41, scope: !10682)
!10692 = !DILocation(line: 8916, column: 46, scope: !10682)
!10693 = !DILocation(line: 8916, column: 34, scope: !10682)
!10694 = !DILocation(line: 8917, column: 38, scope: !10682)
!10695 = !DILocation(line: 8917, column: 44, scope: !10682)
!10696 = !DILocation(line: 8917, column: 42, scope: !10682)
!10697 = !DILocation(line: 8917, column: 49, scope: !10682)
!10698 = !DILocation(line: 8917, column: 54, scope: !10682)
!10699 = !DILocation(line: 8917, column: 34, scope: !10682)
!10700 = !DILocation(line: 8918, column: 21, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 8918, column: 21)
!10702 = !DILocation(line: 8918, column: 40, scope: !10701)
!10703 = !DILocation(line: 8918, column: 57, scope: !10701)
!10704 = !DILocation(line: 8918, column: 37, scope: !10701)
!10705 = !DILocation(line: 8918, column: 21, scope: !10682)
!10706 = !DILocation(line: 8919, column: 33, scope: !10701)
!10707 = !DILocation(line: 8919, column: 31, scope: !10701)
!10708 = !DILocation(line: 8919, column: 19, scope: !10701)
!10709 = !DILocation(line: 8921, column: 33, scope: !10701)
!10710 = !DILocation(line: 8921, column: 50, scope: !10701)
!10711 = !DILocation(line: 8921, column: 31, scope: !10701)
!10712 = !DILocation(line: 8923, column: 26, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 8923, column: 17)
!10714 = !DILocation(line: 8923, column: 22, scope: !10713)
!10715 = !DILocation(line: 8923, column: 31, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 8923, column: 17)
!10717 = !DILocation(line: 8923, column: 37, scope: !10716)
!10718 = !DILocation(line: 8923, column: 35, scope: !10716)
!10719 = !DILocation(line: 8923, column: 17, scope: !10713)
!10720 = !DILocation(line: 8925, column: 18, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 8924, column: 19)
!10722 = !DILocation(line: 8925, column: 24, scope: !10721)
!10723 = !DILocation(line: 8925, column: 22, scope: !10721)
!10724 = !DILocation(line: 8925, column: 16, scope: !10721)
!10725 = !DILocation(line: 8926, column: 25, scope: !10721)
!10726 = !DILocation(line: 8926, column: 33, scope: !10721)
!10727 = !DILocation(line: 8926, column: 31, scope: !10721)
!10728 = !DILocation(line: 8926, column: 23, scope: !10721)
!10729 = !DILocation(line: 8927, column: 32, scope: !10721)
!10730 = !DILocation(line: 8927, column: 49, scope: !10721)
!10731 = !DILocation(line: 8927, column: 19, scope: !10721)
!10732 = !DILocation(line: 8928, column: 27, scope: !10721)
!10733 = !DILocation(line: 8928, column: 19, scope: !10721)
!10734 = !DILocation(line: 8930, column: 54, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 8930, column: 33)
!10736 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 8929, column: 21)
!10737 = !DILocation(line: 8930, column: 59, scope: !10735)
!10738 = !DILocation(line: 8930, column: 64, scope: !10735)
!10739 = !DILocation(line: 8930, column: 71, scope: !10735)
!10740 = !DILocation(line: 8930, column: 76, scope: !10735)
!10741 = !DILocation(line: 8930, column: 33, scope: !10735)
!10742 = !DILocation(line: 8930, column: 33, scope: !10736)
!10743 = !DILocation(line: 8932, column: 27, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 8931, column: 31)
!10745 = !DILocation(line: 8932, column: 17, scope: !10744)
!10746 = !DILocation(line: 8933, column: 31, scope: !10744)
!10747 = !DILocation(line: 8935, column: 43, scope: !10736)
!10748 = !DILocation(line: 8935, column: 48, scope: !10736)
!10749 = !DILocation(line: 8935, column: 59, scope: !10736)
!10750 = !DILocation(line: 8935, column: 30, scope: !10736)
!10751 = !DILocation(line: 8936, column: 30, scope: !10736)
!10752 = !DILocation(line: 8937, column: 54, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 8937, column: 33)
!10754 = !DILocation(line: 8937, column: 59, scope: !10753)
!10755 = !DILocation(line: 8937, column: 64, scope: !10753)
!10756 = !DILocation(line: 8937, column: 71, scope: !10753)
!10757 = !DILocation(line: 8937, column: 76, scope: !10753)
!10758 = !DILocation(line: 8937, column: 33, scope: !10753)
!10759 = !DILocation(line: 8937, column: 33, scope: !10736)
!10760 = !DILocation(line: 8939, column: 27, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 8938, column: 31)
!10762 = !DILocation(line: 8939, column: 17, scope: !10761)
!10763 = !DILocation(line: 8940, column: 31, scope: !10761)
!10764 = !DILocation(line: 8942, column: 43, scope: !10736)
!10765 = !DILocation(line: 8942, column: 48, scope: !10736)
!10766 = !DILocation(line: 8942, column: 59, scope: !10736)
!10767 = !DILocation(line: 8942, column: 30, scope: !10736)
!10768 = !DILocation(line: 8943, column: 30, scope: !10736)
!10769 = !DILocation(line: 8946, column: 54, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 8946, column: 33)
!10771 = !DILocation(line: 8946, column: 59, scope: !10770)
!10772 = !DILocation(line: 8946, column: 64, scope: !10770)
!10773 = !DILocation(line: 8946, column: 71, scope: !10770)
!10774 = !DILocation(line: 8946, column: 76, scope: !10770)
!10775 = !DILocation(line: 8946, column: 33, scope: !10770)
!10776 = !DILocation(line: 8946, column: 33, scope: !10736)
!10777 = !DILocation(line: 8948, column: 27, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 8947, column: 31)
!10779 = !DILocation(line: 8948, column: 17, scope: !10778)
!10780 = !DILocation(line: 8949, column: 31, scope: !10778)
!10781 = !DILocation(line: 8951, column: 43, scope: !10736)
!10782 = !DILocation(line: 8951, column: 48, scope: !10736)
!10783 = !DILocation(line: 8951, column: 59, scope: !10736)
!10784 = !DILocation(line: 8951, column: 30, scope: !10736)
!10785 = !DILocation(line: 8952, column: 30, scope: !10736)
!10786 = !DILocation(line: 8953, column: 82, scope: !10736)
!10787 = !DILocation(line: 8953, column: 30, scope: !10736)
!10788 = !DILocation(line: 8954, column: 26, scope: !10736)
!10789 = !DILocation(line: 8954, column: 16, scope: !10736)
!10790 = !DILocation(line: 8955, column: 30, scope: !10736)
!10791 = !DILocation(line: 8957, column: 5, scope: !10721)
!10792 = !DILocation(line: 8923, column: 48, scope: !10716)
!10793 = !DILocation(line: 8923, column: 17, scope: !10716)
!10794 = distinct !{!10794, !10719, !10795}
!10795 = !DILocation(line: 8957, column: 5, scope: !10713)
!10796 = !DILocation(line: 8958, column: 21, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 8958, column: 21)
!10798 = !DILocation(line: 8958, column: 21, scope: !10682)
!10799 = !DILocation(line: 8959, column: 29, scope: !10797)
!10800 = !DILocation(line: 8959, column: 19, scope: !10797)
!10801 = !DILocation(line: 8961, column: 14, scope: !10575)
!10802 = !DILocation(line: 8963, column: 66, scope: !10575)
!10803 = !DILocation(line: 8963, column: 14, scope: !10575)
!10804 = !DILocation(line: 8964, column: 14, scope: !10575)
!10805 = !DILocation(line: 8968, column: 3, scope: !10531)
!10806 = !DILocation(line: 8969, column: 3, scope: !10531)
!10807 = distinct !DISubprogram(name: "rotateImage", scope: !3, file: !3, line: 8205, type: !10808, scopeLine: 8207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{!110, !103, !542, !122, !122, !571}
!10810 = !DILocalVariable(name: "rotation", arg: 1, scope: !10807, file: !3, line: 8205, type: !103)
!10811 = !DILocation(line: 8205, column: 20, scope: !10807)
!10812 = !DILocalVariable(name: "image", arg: 2, scope: !10807, file: !3, line: 8205, type: !542)
!10813 = !DILocation(line: 8205, column: 49, scope: !10807)
!10814 = !DILocalVariable(name: "img_width", arg: 3, scope: !10807, file: !3, line: 8205, type: !122)
!10815 = !DILocation(line: 8205, column: 64, scope: !10807)
!10816 = !DILocalVariable(name: "img_length", arg: 4, scope: !10807, file: !3, line: 8206, type: !122)
!10817 = !DILocation(line: 8206, column: 21, scope: !10807)
!10818 = !DILocalVariable(name: "ibuff_ptr", arg: 5, scope: !10807, file: !3, line: 8206, type: !571)
!10819 = !DILocation(line: 8206, column: 49, scope: !10807)
!10820 = !DILocalVariable(name: "shift_width", scope: !10807, file: !3, line: 8208, type: !110)
!10821 = !DILocation(line: 8208, column: 12, scope: !10807)
!10822 = !DILocalVariable(name: "bytes_per_pixel", scope: !10807, file: !3, line: 8209, type: !105)
!10823 = !DILocation(line: 8209, column: 12, scope: !10807)
!10824 = !DILocalVariable(name: "bytes_per_sample", scope: !10807, file: !3, line: 8209, type: !105)
!10825 = !DILocation(line: 8209, column: 29, scope: !10807)
!10826 = !DILocalVariable(name: "row", scope: !10807, file: !3, line: 8210, type: !105)
!10827 = !DILocation(line: 8210, column: 12, scope: !10807)
!10828 = !DILocalVariable(name: "rowsize", scope: !10807, file: !3, line: 8210, type: !105)
!10829 = !DILocation(line: 8210, column: 17, scope: !10807)
!10830 = !DILocalVariable(name: "src_offset", scope: !10807, file: !3, line: 8210, type: !105)
!10831 = !DILocation(line: 8210, column: 26, scope: !10807)
!10832 = !DILocalVariable(name: "dst_offset", scope: !10807, file: !3, line: 8210, type: !105)
!10833 = !DILocation(line: 8210, column: 38, scope: !10807)
!10834 = !DILocalVariable(name: "i", scope: !10807, file: !3, line: 8211, type: !105)
!10835 = !DILocation(line: 8211, column: 12, scope: !10807)
!10836 = !DILocalVariable(name: "col", scope: !10807, file: !3, line: 8211, type: !105)
!10837 = !DILocation(line: 8211, column: 15, scope: !10807)
!10838 = !DILocalVariable(name: "width", scope: !10807, file: !3, line: 8211, type: !105)
!10839 = !DILocation(line: 8211, column: 20, scope: !10807)
!10840 = !DILocalVariable(name: "length", scope: !10807, file: !3, line: 8211, type: !105)
!10841 = !DILocation(line: 8211, column: 27, scope: !10807)
!10842 = !DILocalVariable(name: "colsize", scope: !10807, file: !3, line: 8212, type: !105)
!10843 = !DILocation(line: 8212, column: 12, scope: !10807)
!10844 = !DILocalVariable(name: "buffsize", scope: !10807, file: !3, line: 8212, type: !105)
!10845 = !DILocation(line: 8212, column: 21, scope: !10807)
!10846 = !DILocalVariable(name: "col_offset", scope: !10807, file: !3, line: 8212, type: !105)
!10847 = !DILocation(line: 8212, column: 31, scope: !10807)
!10848 = !DILocalVariable(name: "pix_offset", scope: !10807, file: !3, line: 8212, type: !105)
!10849 = !DILocation(line: 8212, column: 43, scope: !10807)
!10850 = !DILocalVariable(name: "ibuff", scope: !10807, file: !3, line: 8213, type: !106)
!10851 = !DILocation(line: 8213, column: 18, scope: !10807)
!10852 = !DILocalVariable(name: "src", scope: !10807, file: !3, line: 8214, type: !106)
!10853 = !DILocation(line: 8214, column: 18, scope: !10807)
!10854 = !DILocalVariable(name: "dst", scope: !10807, file: !3, line: 8215, type: !106)
!10855 = !DILocation(line: 8215, column: 18, scope: !10807)
!10856 = !DILocalVariable(name: "spp", scope: !10807, file: !3, line: 8216, type: !103)
!10857 = !DILocation(line: 8216, column: 12, scope: !10807)
!10858 = !DILocalVariable(name: "bps", scope: !10807, file: !3, line: 8216, type: !103)
!10859 = !DILocation(line: 8216, column: 17, scope: !10807)
!10860 = !DILocalVariable(name: "res_temp", scope: !10807, file: !3, line: 8217, type: !121)
!10861 = !DILocation(line: 8217, column: 12, scope: !10807)
!10862 = !DILocalVariable(name: "rbuff", scope: !10807, file: !3, line: 8218, type: !106)
!10863 = !DILocation(line: 8218, column: 18, scope: !10807)
!10864 = !DILocation(line: 8220, column: 13, scope: !10807)
!10865 = !DILocation(line: 8220, column: 12, scope: !10807)
!10866 = !DILocation(line: 8220, column: 10, scope: !10807)
!10867 = !DILocation(line: 8221, column: 13, scope: !10807)
!10868 = !DILocation(line: 8221, column: 12, scope: !10807)
!10869 = !DILocation(line: 8221, column: 10, scope: !10807)
!10870 = !DILocation(line: 8222, column: 9, scope: !10807)
!10871 = !DILocation(line: 8222, column: 16, scope: !10807)
!10872 = !DILocation(line: 8222, column: 7, scope: !10807)
!10873 = !DILocation(line: 8223, column: 9, scope: !10807)
!10874 = !DILocation(line: 8223, column: 16, scope: !10807)
!10875 = !DILocation(line: 8223, column: 7, scope: !10807)
!10876 = !DILocation(line: 8225, column: 15, scope: !10807)
!10877 = !DILocation(line: 8225, column: 21, scope: !10807)
!10878 = !DILocation(line: 8225, column: 19, scope: !10807)
!10879 = !DILocation(line: 8225, column: 27, scope: !10807)
!10880 = !DILocation(line: 8225, column: 25, scope: !10807)
!10881 = !DILocation(line: 8225, column: 34, scope: !10807)
!10882 = !DILocation(line: 8225, column: 39, scope: !10807)
!10883 = !DILocation(line: 8225, column: 11, scope: !10807)
!10884 = !DILocation(line: 8226, column: 15, scope: !10807)
!10885 = !DILocation(line: 8226, column: 21, scope: !10807)
!10886 = !DILocation(line: 8226, column: 19, scope: !10807)
!10887 = !DILocation(line: 8226, column: 27, scope: !10807)
!10888 = !DILocation(line: 8226, column: 25, scope: !10807)
!10889 = !DILocation(line: 8226, column: 35, scope: !10807)
!10890 = !DILocation(line: 8226, column: 40, scope: !10807)
!10891 = !DILocation(line: 8226, column: 11, scope: !10807)
!10892 = !DILocation(line: 8227, column: 8, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 8227, column: 7)
!10894 = !DILocation(line: 8227, column: 18, scope: !10893)
!10895 = !DILocation(line: 8227, column: 16, scope: !10893)
!10896 = !DILocation(line: 8227, column: 28, scope: !10893)
!10897 = !DILocation(line: 8227, column: 38, scope: !10893)
!10898 = !DILocation(line: 8227, column: 36, scope: !10893)
!10899 = !DILocation(line: 8227, column: 25, scope: !10893)
!10900 = !DILocation(line: 8227, column: 7, scope: !10807)
!10901 = !DILocation(line: 8228, column: 17, scope: !10893)
!10902 = !DILocation(line: 8228, column: 25, scope: !10893)
!10903 = !DILocation(line: 8228, column: 32, scope: !10893)
!10904 = !DILocation(line: 8228, column: 30, scope: !10893)
!10905 = !DILocation(line: 8228, column: 14, scope: !10893)
!10906 = !DILocation(line: 8228, column: 5, scope: !10893)
!10907 = !DILocation(line: 8230, column: 17, scope: !10893)
!10908 = !DILocation(line: 8230, column: 25, scope: !10893)
!10909 = !DILocation(line: 8230, column: 32, scope: !10893)
!10910 = !DILocation(line: 8230, column: 30, scope: !10893)
!10911 = !DILocation(line: 8230, column: 14, scope: !10893)
!10912 = !DILocation(line: 8232, column: 23, scope: !10807)
!10913 = !DILocation(line: 8232, column: 27, scope: !10807)
!10914 = !DILocation(line: 8232, column: 32, scope: !10807)
!10915 = !DILocation(line: 8232, column: 20, scope: !10807)
!10916 = !DILocation(line: 8233, column: 24, scope: !10807)
!10917 = !DILocation(line: 8233, column: 30, scope: !10807)
!10918 = !DILocation(line: 8233, column: 28, scope: !10807)
!10919 = !DILocation(line: 8233, column: 35, scope: !10807)
!10920 = !DILocation(line: 8233, column: 40, scope: !10807)
!10921 = !DILocation(line: 8233, column: 20, scope: !10807)
!10922 = !DILocation(line: 8234, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 8234, column: 7)
!10924 = !DILocation(line: 8234, column: 26, scope: !10923)
!10925 = !DILocation(line: 8234, column: 43, scope: !10923)
!10926 = !DILocation(line: 8234, column: 23, scope: !10923)
!10927 = !DILocation(line: 8234, column: 7, scope: !10807)
!10928 = !DILocation(line: 8235, column: 19, scope: !10923)
!10929 = !DILocation(line: 8235, column: 17, scope: !10923)
!10930 = !DILocation(line: 8235, column: 5, scope: !10923)
!10931 = !DILocation(line: 8237, column: 19, scope: !10923)
!10932 = !DILocation(line: 8237, column: 36, scope: !10923)
!10933 = !DILocation(line: 8237, column: 17, scope: !10923)
!10934 = !DILocation(line: 8239, column: 11, scope: !10807)
!10935 = !DILocation(line: 8239, column: 3, scope: !10807)
!10936 = !DILocation(line: 8242, column: 15, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 8240, column: 5)
!10938 = !DILocation(line: 8245, column: 15, scope: !10937)
!10939 = !DILocation(line: 8246, column: 69, scope: !10937)
!10940 = !DILocation(line: 8246, column: 15, scope: !10937)
!10941 = !DILocation(line: 8247, column: 15, scope: !10937)
!10942 = !DILocation(line: 8250, column: 46, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 8250, column: 7)
!10944 = !DILocation(line: 8250, column: 34, scope: !10943)
!10945 = !DILocation(line: 8250, column: 15, scope: !10943)
!10946 = !DILocation(line: 8250, column: 7, scope: !10807)
!10947 = !DILocation(line: 8252, column: 81, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 8251, column: 5)
!10949 = !DILocation(line: 8252, column: 5, scope: !10948)
!10950 = !DILocation(line: 8253, column: 5, scope: !10948)
!10951 = !DILocation(line: 8255, column: 15, scope: !10807)
!10952 = !DILocation(line: 8255, column: 28, scope: !10807)
!10953 = !DILocation(line: 8255, column: 3, scope: !10807)
!10954 = !DILocation(line: 8257, column: 12, scope: !10807)
!10955 = !DILocation(line: 8257, column: 11, scope: !10807)
!10956 = !DILocation(line: 8257, column: 9, scope: !10807)
!10957 = !DILocation(line: 8258, column: 11, scope: !10807)
!10958 = !DILocation(line: 8258, column: 3, scope: !10807)
!10959 = !DILocation(line: 8260, column: 20, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 8260, column: 19)
!10961 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 8259, column: 5)
!10962 = !DILocation(line: 8260, column: 24, scope: !10960)
!10963 = !DILocation(line: 8260, column: 29, scope: !10960)
!10964 = !DILocation(line: 8260, column: 19, scope: !10961)
!10965 = !DILocation(line: 8262, column: 23, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 8261, column: 17)
!10967 = !DILocation(line: 8262, column: 21, scope: !10966)
!10968 = !DILocation(line: 8263, column: 31, scope: !10966)
!10969 = !DILocation(line: 8263, column: 37, scope: !10966)
!10970 = !DILocation(line: 8263, column: 35, scope: !10966)
!10971 = !DILocation(line: 8263, column: 42, scope: !10966)
!10972 = !DILocation(line: 8263, column: 28, scope: !10966)
!10973 = !DILocation(line: 8264, column: 26, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 8264, column: 17)
!10975 = !DILocation(line: 8264, column: 22, scope: !10974)
!10976 = !DILocation(line: 8264, column: 31, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 8264, column: 17)
!10978 = !DILocation(line: 8264, column: 37, scope: !10977)
!10979 = !DILocation(line: 8264, column: 35, scope: !10977)
!10980 = !DILocation(line: 8264, column: 17, scope: !10974)
!10981 = !DILocation(line: 8266, column: 20, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 8265, column: 20)
!10983 = !DILocation(line: 8266, column: 29, scope: !10982)
!10984 = !DILocation(line: 8266, column: 27, scope: !10982)
!10985 = !DILocation(line: 8266, column: 33, scope: !10982)
!10986 = !DILocation(line: 8266, column: 40, scope: !10982)
!10987 = !DILocation(line: 8266, column: 38, scope: !10982)
!10988 = !DILocation(line: 8266, column: 17, scope: !10982)
!10989 = !DILocation(line: 8267, column: 29, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10982, file: !3, line: 8267, column: 20)
!10991 = !DILocation(line: 8267, column: 25, scope: !10990)
!10992 = !DILocation(line: 8267, column: 34, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 8267, column: 20)
!10994 = !DILocation(line: 8267, column: 40, scope: !10993)
!10995 = !DILocation(line: 8267, column: 38, scope: !10993)
!10996 = !DILocation(line: 8267, column: 20, scope: !10990)
!10997 = !DILocation(line: 8269, column: 22, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 8268, column: 22)
!10999 = !DILocation(line: 8269, column: 30, scope: !10998)
!11000 = !DILocation(line: 8269, column: 28, scope: !10998)
!11001 = !DILocation(line: 8269, column: 34, scope: !10998)
!11002 = !DILocation(line: 8269, column: 41, scope: !10998)
!11003 = !DILocation(line: 8269, column: 39, scope: !10998)
!11004 = !DILocation(line: 8269, column: 19, scope: !10998)
!11005 = !DILocation(line: 8270, column: 28, scope: !10998)
!11006 = !DILocation(line: 8270, column: 36, scope: !10998)
!11007 = !DILocation(line: 8270, column: 34, scope: !10998)
!11008 = !DILocation(line: 8270, column: 49, scope: !10998)
!11009 = !DILocation(line: 8270, column: 47, scope: !10998)
!11010 = !DILocation(line: 8270, column: 26, scope: !10998)
!11011 = !DILocation(line: 8272, column: 15, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 8272, column: 8)
!11013 = !DILocation(line: 8272, column: 13, scope: !11012)
!11014 = !DILocation(line: 8272, column: 20, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 8272, column: 8)
!11016 = !DILocation(line: 8272, column: 25, scope: !11015)
!11017 = !DILocation(line: 8272, column: 23, scope: !11015)
!11018 = !DILocation(line: 8272, column: 8, scope: !11012)
!11019 = !DILocation(line: 8273, column: 23, scope: !11015)
!11020 = !DILocation(line: 8273, column: 19, scope: !11015)
!11021 = !DILocation(line: 8273, column: 14, scope: !11015)
!11022 = !DILocation(line: 8273, column: 17, scope: !11015)
!11023 = !DILocation(line: 8273, column: 10, scope: !11015)
!11024 = !DILocation(line: 8272, column: 43, scope: !11015)
!11025 = !DILocation(line: 8272, column: 8, scope: !11015)
!11026 = distinct !{!11026, !11018, !11027}
!11027 = !DILocation(line: 8273, column: 23, scope: !11012)
!11028 = !DILocation(line: 8274, column: 22, scope: !10998)
!11029 = !DILocation(line: 8267, column: 50, scope: !10993)
!11030 = !DILocation(line: 8267, column: 20, scope: !10993)
!11031 = distinct !{!11031, !10996, !11032}
!11032 = !DILocation(line: 8274, column: 22, scope: !10990)
!11033 = !DILocation(line: 8275, column: 20, scope: !10982)
!11034 = !DILocation(line: 8264, column: 48, scope: !10977)
!11035 = !DILocation(line: 8264, column: 17, scope: !10977)
!11036 = distinct !{!11036, !10980, !11037}
!11037 = !DILocation(line: 8275, column: 20, scope: !10974)
!11038 = !DILocation(line: 8276, column: 17, scope: !10966)
!11039 = !DILocation(line: 8279, column: 26, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 8279, column: 17)
!11041 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 8278, column: 17)
!11042 = !DILocation(line: 8279, column: 22, scope: !11040)
!11043 = !DILocation(line: 8279, column: 31, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 8279, column: 17)
!11045 = !DILocation(line: 8279, column: 37, scope: !11044)
!11046 = !DILocation(line: 8279, column: 35, scope: !11044)
!11047 = !DILocation(line: 8279, column: 17, scope: !11040)
!11048 = !DILocation(line: 8281, column: 18, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 8280, column: 19)
!11050 = !DILocation(line: 8281, column: 24, scope: !11049)
!11051 = !DILocation(line: 8281, column: 22, scope: !11049)
!11052 = !DILocation(line: 8281, column: 16, scope: !11049)
!11053 = !DILocation(line: 8282, column: 19, scope: !11049)
!11054 = !DILocation(line: 8282, column: 28, scope: !11049)
!11055 = !DILocation(line: 8282, column: 26, scope: !11049)
!11056 = !DILocation(line: 8282, column: 32, scope: !11049)
!11057 = !DILocation(line: 8282, column: 39, scope: !11049)
!11058 = !DILocation(line: 8282, column: 37, scope: !11049)
!11059 = !DILocation(line: 8282, column: 16, scope: !11049)
!11060 = !DILocation(line: 8283, column: 11, scope: !11049)
!11061 = !DILocation(line: 8283, column: 19, scope: !11049)
!11062 = !DILocation(line: 8283, column: 17, scope: !11049)
!11063 = !DILocation(line: 8283, column: 9, scope: !11049)
!11064 = !DILocation(line: 8284, column: 25, scope: !11049)
!11065 = !DILocation(line: 8284, column: 33, scope: !11049)
!11066 = !DILocation(line: 8284, column: 31, scope: !11049)
!11067 = !DILocation(line: 8284, column: 23, scope: !11049)
!11068 = !DILocation(line: 8285, column: 27, scope: !11049)
!11069 = !DILocation(line: 8285, column: 19, scope: !11049)
!11070 = !DILocation(line: 8287, column: 33, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 8287, column: 33)
!11072 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 8286, column: 21)
!11073 = !DILocation(line: 8287, column: 37, scope: !11071)
!11074 = !DILocation(line: 8287, column: 33, scope: !11072)
!11075 = !DILocation(line: 8289, column: 55, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 8289, column: 35)
!11077 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 8288, column: 10)
!11078 = !DILocation(line: 8289, column: 60, scope: !11076)
!11079 = !DILocation(line: 8289, column: 65, scope: !11076)
!11080 = !DILocation(line: 8289, column: 72, scope: !11076)
!11081 = !DILocation(line: 8289, column: 77, scope: !11076)
!11082 = !DILocation(line: 8289, column: 35, scope: !11076)
!11083 = !DILocation(line: 8289, column: 35, scope: !11077)
!11084 = !DILocation(line: 8291, column: 29, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 8290, column: 33)
!11086 = !DILocation(line: 8291, column: 19, scope: !11085)
!11087 = !DILocation(line: 8292, column: 33, scope: !11085)
!11088 = !DILocation(line: 8294, column: 31, scope: !11077)
!11089 = !DILocation(line: 8296, column: 54, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 8296, column: 33)
!11091 = !DILocation(line: 8296, column: 59, scope: !11090)
!11092 = !DILocation(line: 8296, column: 64, scope: !11090)
!11093 = !DILocation(line: 8296, column: 71, scope: !11090)
!11094 = !DILocation(line: 8296, column: 76, scope: !11090)
!11095 = !DILocation(line: 8296, column: 33, scope: !11090)
!11096 = !DILocation(line: 8296, column: 33, scope: !11072)
!11097 = !DILocation(line: 8298, column: 27, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 8297, column: 31)
!11099 = !DILocation(line: 8298, column: 17, scope: !11098)
!11100 = !DILocation(line: 8299, column: 31, scope: !11098)
!11101 = !DILocation(line: 8301, column: 30, scope: !11072)
!11102 = !DILocation(line: 8302, column: 54, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 8302, column: 33)
!11104 = !DILocation(line: 8302, column: 59, scope: !11103)
!11105 = !DILocation(line: 8302, column: 64, scope: !11103)
!11106 = !DILocation(line: 8302, column: 71, scope: !11103)
!11107 = !DILocation(line: 8302, column: 76, scope: !11103)
!11108 = !DILocation(line: 8302, column: 33, scope: !11103)
!11109 = !DILocation(line: 8302, column: 33, scope: !11072)
!11110 = !DILocation(line: 8304, column: 27, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 8303, column: 31)
!11112 = !DILocation(line: 8304, column: 17, scope: !11111)
!11113 = !DILocation(line: 8305, column: 31, scope: !11111)
!11114 = !DILocation(line: 8307, column: 30, scope: !11072)
!11115 = !DILocation(line: 8310, column: 54, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 8310, column: 33)
!11117 = !DILocation(line: 8310, column: 59, scope: !11116)
!11118 = !DILocation(line: 8310, column: 64, scope: !11116)
!11119 = !DILocation(line: 8310, column: 71, scope: !11116)
!11120 = !DILocation(line: 8310, column: 76, scope: !11116)
!11121 = !DILocation(line: 8310, column: 33, scope: !11116)
!11122 = !DILocation(line: 8310, column: 33, scope: !11072)
!11123 = !DILocation(line: 8312, column: 27, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 8311, column: 31)
!11125 = !DILocation(line: 8312, column: 17, scope: !11124)
!11126 = !DILocation(line: 8313, column: 31, scope: !11124)
!11127 = !DILocation(line: 8315, column: 30, scope: !11072)
!11128 = !DILocation(line: 8316, column: 82, scope: !11072)
!11129 = !DILocation(line: 8316, column: 30, scope: !11072)
!11130 = !DILocation(line: 8317, column: 26, scope: !11072)
!11131 = !DILocation(line: 8317, column: 16, scope: !11072)
!11132 = !DILocation(line: 8318, column: 30, scope: !11072)
!11133 = !DILocation(line: 8320, column: 5, scope: !11049)
!11134 = !DILocation(line: 8279, column: 48, scope: !11044)
!11135 = !DILocation(line: 8279, column: 17, scope: !11044)
!11136 = distinct !{!11136, !11047, !11137}
!11137 = !DILocation(line: 8320, column: 5, scope: !11040)
!11138 = !DILocation(line: 8322, column: 25, scope: !10961)
!11139 = !DILocation(line: 8322, column: 15, scope: !10961)
!11140 = !DILocation(line: 8323, column: 30, scope: !10961)
!11141 = !DILocation(line: 8323, column: 17, scope: !10961)
!11142 = !DILocation(line: 8323, column: 28, scope: !10961)
!11143 = !DILocation(line: 8324, column: 15, scope: !10961)
!11144 = !DILocation(line: 8326, column: 20, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 8326, column: 19)
!11146 = !DILocation(line: 8326, column: 24, scope: !11145)
!11147 = !DILocation(line: 8326, column: 29, scope: !11145)
!11148 = !DILocation(line: 8326, column: 19, scope: !10961)
!11149 = !DILocation(line: 8328, column: 26, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 8328, column: 17)
!11151 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 8327, column: 17)
!11152 = !DILocation(line: 8328, column: 22, scope: !11150)
!11153 = !DILocation(line: 8328, column: 31, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 8328, column: 17)
!11155 = !DILocation(line: 8328, column: 37, scope: !11154)
!11156 = !DILocation(line: 8328, column: 35, scope: !11154)
!11157 = !DILocation(line: 8328, column: 17, scope: !11150)
!11158 = !DILocation(line: 8330, column: 20, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 8329, column: 19)
!11160 = !DILocation(line: 8330, column: 27, scope: !11159)
!11161 = !DILocation(line: 8330, column: 34, scope: !11159)
!11162 = !DILocation(line: 8330, column: 32, scope: !11159)
!11163 = !DILocation(line: 8330, column: 46, scope: !11159)
!11164 = !DILocation(line: 8330, column: 52, scope: !11159)
!11165 = !DILocation(line: 8330, column: 50, scope: !11159)
!11166 = !DILocation(line: 8330, column: 43, scope: !11159)
!11167 = !DILocation(line: 8330, column: 16, scope: !11159)
!11168 = !DILocation(line: 8331, column: 32, scope: !11159)
!11169 = !DILocation(line: 8331, column: 38, scope: !11159)
!11170 = !DILocation(line: 8331, column: 36, scope: !11159)
!11171 = !DILocation(line: 8331, column: 30, scope: !11159)
!11172 = !DILocation(line: 8332, column: 11, scope: !11159)
!11173 = !DILocation(line: 8332, column: 19, scope: !11159)
!11174 = !DILocation(line: 8332, column: 17, scope: !11159)
!11175 = !DILocation(line: 8332, column: 9, scope: !11159)
!11176 = !DILocation(line: 8333, column: 11, scope: !11159)
!11177 = !DILocation(line: 8333, column: 19, scope: !11159)
!11178 = !DILocation(line: 8333, column: 17, scope: !11159)
!11179 = !DILocation(line: 8333, column: 9, scope: !11159)
!11180 = !DILocation(line: 8334, column: 30, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 8334, column: 19)
!11182 = !DILocation(line: 8334, column: 28, scope: !11181)
!11183 = !DILocation(line: 8334, column: 24, scope: !11181)
!11184 = !DILocation(line: 8334, column: 38, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 8334, column: 19)
!11186 = !DILocation(line: 8334, column: 42, scope: !11185)
!11187 = !DILocation(line: 8334, column: 19, scope: !11181)
!11188 = !DILocation(line: 8336, column: 28, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 8336, column: 21)
!11190 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 8335, column: 21)
!11191 = !DILocation(line: 8336, column: 26, scope: !11189)
!11192 = !DILocation(line: 8336, column: 33, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 8336, column: 21)
!11194 = !DILocation(line: 8336, column: 37, scope: !11193)
!11195 = !DILocation(line: 8336, column: 35, scope: !11193)
!11196 = !DILocation(line: 8336, column: 21, scope: !11189)
!11197 = !DILocation(line: 8337, column: 34, scope: !11193)
!11198 = !DILocation(line: 8337, column: 40, scope: !11193)
!11199 = !DILocation(line: 8337, column: 38, scope: !11193)
!11200 = !DILocation(line: 8337, column: 32, scope: !11193)
!11201 = !DILocation(line: 8337, column: 27, scope: !11193)
!11202 = !DILocation(line: 8337, column: 30, scope: !11193)
!11203 = !DILocation(line: 8337, column: 23, scope: !11193)
!11204 = !DILocation(line: 8336, column: 55, scope: !11193)
!11205 = !DILocation(line: 8336, column: 21, scope: !11193)
!11206 = distinct !{!11206, !11196, !11207}
!11207 = !DILocation(line: 8337, column: 41, scope: !11189)
!11208 = !DILocation(line: 8338, column: 14, scope: !11190)
!11209 = !DILocation(line: 8338, column: 11, scope: !11190)
!11210 = !DILocation(line: 8339, column: 21, scope: !11190)
!11211 = !DILocation(line: 8334, column: 50, scope: !11185)
!11212 = !DILocation(line: 8334, column: 19, scope: !11185)
!11213 = distinct !{!11213, !11187, !11214}
!11214 = !DILocation(line: 8339, column: 21, scope: !11181)
!11215 = !DILocation(line: 8340, column: 5, scope: !11159)
!11216 = !DILocation(line: 8328, column: 47, scope: !11154)
!11217 = !DILocation(line: 8328, column: 17, scope: !11154)
!11218 = distinct !{!11218, !11157, !11219}
!11219 = !DILocation(line: 8340, column: 5, scope: !11150)
!11220 = !DILocation(line: 8341, column: 3, scope: !11151)
!11221 = !DILocation(line: 8344, column: 26, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 8344, column: 17)
!11223 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 8343, column: 17)
!11224 = !DILocation(line: 8344, column: 22, scope: !11222)
!11225 = !DILocation(line: 8344, column: 31, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11222, file: !3, line: 8344, column: 17)
!11227 = !DILocation(line: 8344, column: 37, scope: !11226)
!11228 = !DILocation(line: 8344, column: 35, scope: !11226)
!11229 = !DILocation(line: 8344, column: 17, scope: !11222)
!11230 = !DILocation(line: 8346, column: 19, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 8345, column: 19)
!11232 = !DILocation(line: 8346, column: 26, scope: !11231)
!11233 = !DILocation(line: 8346, column: 33, scope: !11231)
!11234 = !DILocation(line: 8346, column: 31, scope: !11231)
!11235 = !DILocation(line: 8346, column: 16, scope: !11231)
!11236 = !DILocation(line: 8347, column: 32, scope: !11231)
!11237 = !DILocation(line: 8347, column: 38, scope: !11231)
!11238 = !DILocation(line: 8347, column: 36, scope: !11231)
!11239 = !DILocation(line: 8347, column: 30, scope: !11231)
!11240 = !DILocation(line: 8348, column: 11, scope: !11231)
!11241 = !DILocation(line: 8348, column: 19, scope: !11231)
!11242 = !DILocation(line: 8348, column: 17, scope: !11231)
!11243 = !DILocation(line: 8348, column: 9, scope: !11231)
!11244 = !DILocation(line: 8349, column: 11, scope: !11231)
!11245 = !DILocation(line: 8349, column: 19, scope: !11231)
!11246 = !DILocation(line: 8349, column: 17, scope: !11231)
!11247 = !DILocation(line: 8349, column: 9, scope: !11231)
!11248 = !DILocation(line: 8350, column: 27, scope: !11231)
!11249 = !DILocation(line: 8350, column: 19, scope: !11231)
!11250 = !DILocation(line: 8352, column: 33, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 8352, column: 33)
!11252 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 8351, column: 21)
!11253 = !DILocation(line: 8352, column: 37, scope: !11251)
!11254 = !DILocation(line: 8352, column: 33, scope: !11252)
!11255 = !DILocation(line: 8354, column: 60, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 8354, column: 35)
!11257 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 8353, column: 10)
!11258 = !DILocation(line: 8354, column: 70, scope: !11256)
!11259 = !DILocation(line: 8354, column: 75, scope: !11256)
!11260 = !DILocation(line: 8354, column: 80, scope: !11256)
!11261 = !DILocation(line: 8355, column: 26, scope: !11256)
!11262 = !DILocation(line: 8355, column: 34, scope: !11256)
!11263 = !DILocation(line: 8355, column: 39, scope: !11256)
!11264 = !DILocation(line: 8355, column: 44, scope: !11256)
!11265 = !DILocation(line: 8354, column: 35, scope: !11256)
!11266 = !DILocation(line: 8354, column: 35, scope: !11257)
!11267 = !DILocation(line: 8357, column: 29, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 8356, column: 33)
!11269 = !DILocation(line: 8357, column: 19, scope: !11268)
!11270 = !DILocation(line: 8358, column: 33, scope: !11268)
!11271 = !DILocation(line: 8360, column: 31, scope: !11257)
!11272 = !DILocation(line: 8362, column: 59, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 8362, column: 33)
!11274 = !DILocation(line: 8362, column: 69, scope: !11273)
!11275 = !DILocation(line: 8362, column: 74, scope: !11273)
!11276 = !DILocation(line: 8362, column: 79, scope: !11273)
!11277 = !DILocation(line: 8363, column: 26, scope: !11273)
!11278 = !DILocation(line: 8363, column: 34, scope: !11273)
!11279 = !DILocation(line: 8363, column: 39, scope: !11273)
!11280 = !DILocation(line: 8363, column: 44, scope: !11273)
!11281 = !DILocation(line: 8362, column: 33, scope: !11273)
!11282 = !DILocation(line: 8362, column: 33, scope: !11252)
!11283 = !DILocation(line: 8365, column: 34, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 8364, column: 31)
!11285 = !DILocation(line: 8365, column: 24, scope: !11284)
!11286 = !DILocation(line: 8366, column: 31, scope: !11284)
!11287 = !DILocation(line: 8368, column: 15, scope: !11252)
!11288 = !DILocation(line: 8369, column: 59, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 8369, column: 33)
!11290 = !DILocation(line: 8369, column: 69, scope: !11289)
!11291 = !DILocation(line: 8369, column: 74, scope: !11289)
!11292 = !DILocation(line: 8369, column: 79, scope: !11289)
!11293 = !DILocation(line: 8370, column: 24, scope: !11289)
!11294 = !DILocation(line: 8370, column: 32, scope: !11289)
!11295 = !DILocation(line: 8370, column: 37, scope: !11289)
!11296 = !DILocation(line: 8370, column: 42, scope: !11289)
!11297 = !DILocation(line: 8369, column: 33, scope: !11289)
!11298 = !DILocation(line: 8369, column: 33, scope: !11252)
!11299 = !DILocation(line: 8372, column: 27, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 8371, column: 31)
!11301 = !DILocation(line: 8372, column: 17, scope: !11300)
!11302 = !DILocation(line: 8373, column: 31, scope: !11300)
!11303 = !DILocation(line: 8375, column: 30, scope: !11252)
!11304 = !DILocation(line: 8378, column: 59, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 8378, column: 33)
!11306 = !DILocation(line: 8378, column: 69, scope: !11305)
!11307 = !DILocation(line: 8378, column: 74, scope: !11305)
!11308 = !DILocation(line: 8378, column: 79, scope: !11305)
!11309 = !DILocation(line: 8379, column: 24, scope: !11305)
!11310 = !DILocation(line: 8379, column: 32, scope: !11305)
!11311 = !DILocation(line: 8379, column: 37, scope: !11305)
!11312 = !DILocation(line: 8379, column: 42, scope: !11305)
!11313 = !DILocation(line: 8378, column: 33, scope: !11305)
!11314 = !DILocation(line: 8378, column: 33, scope: !11252)
!11315 = !DILocation(line: 8381, column: 27, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 8380, column: 31)
!11317 = !DILocation(line: 8381, column: 17, scope: !11316)
!11318 = !DILocation(line: 8382, column: 31, scope: !11316)
!11319 = !DILocation(line: 8384, column: 30, scope: !11252)
!11320 = !DILocation(line: 8385, column: 82, scope: !11252)
!11321 = !DILocation(line: 8385, column: 30, scope: !11252)
!11322 = !DILocation(line: 8386, column: 26, scope: !11252)
!11323 = !DILocation(line: 8386, column: 16, scope: !11252)
!11324 = !DILocation(line: 8387, column: 30, scope: !11252)
!11325 = !DILocation(line: 8389, column: 5, scope: !11231)
!11326 = !DILocation(line: 8344, column: 47, scope: !11226)
!11327 = !DILocation(line: 8344, column: 17, scope: !11226)
!11328 = distinct !{!11328, !11229, !11329}
!11329 = !DILocation(line: 8389, column: 5, scope: !11222)
!11330 = !DILocation(line: 8391, column: 25, scope: !10961)
!11331 = !DILocation(line: 8391, column: 15, scope: !10961)
!11332 = !DILocation(line: 8392, column: 30, scope: !10961)
!11333 = !DILocation(line: 8392, column: 17, scope: !10961)
!11334 = !DILocation(line: 8392, column: 28, scope: !10961)
!11335 = !DILocation(line: 8394, column: 28, scope: !10961)
!11336 = !DILocation(line: 8394, column: 16, scope: !10961)
!11337 = !DILocation(line: 8394, column: 26, scope: !10961)
!11338 = !DILocation(line: 8395, column: 29, scope: !10961)
!11339 = !DILocation(line: 8395, column: 16, scope: !10961)
!11340 = !DILocation(line: 8395, column: 27, scope: !10961)
!11341 = !DILocation(line: 8396, column: 30, scope: !10961)
!11342 = !DILocation(line: 8396, column: 15, scope: !10961)
!11343 = !DILocation(line: 8396, column: 22, scope: !10961)
!11344 = !DILocation(line: 8396, column: 28, scope: !10961)
!11345 = !DILocation(line: 8397, column: 31, scope: !10961)
!11346 = !DILocation(line: 8397, column: 15, scope: !10961)
!11347 = !DILocation(line: 8397, column: 22, scope: !10961)
!11348 = !DILocation(line: 8397, column: 29, scope: !10961)
!11349 = !DILocation(line: 8398, column: 26, scope: !10961)
!11350 = !DILocation(line: 8398, column: 33, scope: !10961)
!11351 = !DILocation(line: 8398, column: 24, scope: !10961)
!11352 = !DILocation(line: 8399, column: 29, scope: !10961)
!11353 = !DILocation(line: 8399, column: 36, scope: !10961)
!11354 = !DILocation(line: 8399, column: 15, scope: !10961)
!11355 = !DILocation(line: 8399, column: 22, scope: !10961)
!11356 = !DILocation(line: 8399, column: 27, scope: !10961)
!11357 = !DILocation(line: 8400, column: 29, scope: !10961)
!11358 = !DILocation(line: 8400, column: 15, scope: !10961)
!11359 = !DILocation(line: 8400, column: 22, scope: !10961)
!11360 = !DILocation(line: 8400, column: 27, scope: !10961)
!11361 = !DILocation(line: 8401, column: 8, scope: !10961)
!11362 = !DILocation(line: 8403, column: 20, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 8403, column: 19)
!11364 = !DILocation(line: 8403, column: 24, scope: !11363)
!11365 = !DILocation(line: 8403, column: 29, scope: !11363)
!11366 = !DILocation(line: 8403, column: 19, scope: !10961)
!11367 = !DILocation(line: 8405, column: 26, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 8405, column: 17)
!11369 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 8404, column: 17)
!11370 = !DILocation(line: 8405, column: 22, scope: !11368)
!11371 = !DILocation(line: 8405, column: 31, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 8405, column: 17)
!11373 = !DILocation(line: 8405, column: 37, scope: !11372)
!11374 = !DILocation(line: 8405, column: 35, scope: !11372)
!11375 = !DILocation(line: 8405, column: 17, scope: !11368)
!11376 = !DILocation(line: 8407, column: 18, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 8406, column: 19)
!11378 = !DILocation(line: 8407, column: 24, scope: !11377)
!11379 = !DILocation(line: 8407, column: 22, scope: !11377)
!11380 = !DILocation(line: 8407, column: 16, scope: !11377)
!11381 = !DILocation(line: 8408, column: 33, scope: !11377)
!11382 = !DILocation(line: 8408, column: 41, scope: !11377)
!11383 = !DILocation(line: 8408, column: 39, scope: !11377)
!11384 = !DILocation(line: 8408, column: 45, scope: !11377)
!11385 = !DILocation(line: 8408, column: 52, scope: !11377)
!11386 = !DILocation(line: 8408, column: 50, scope: !11377)
!11387 = !DILocation(line: 8408, column: 30, scope: !11377)
!11388 = !DILocation(line: 8409, column: 11, scope: !11377)
!11389 = !DILocation(line: 8409, column: 19, scope: !11377)
!11390 = !DILocation(line: 8409, column: 17, scope: !11377)
!11391 = !DILocation(line: 8409, column: 9, scope: !11377)
!11392 = !DILocation(line: 8410, column: 11, scope: !11377)
!11393 = !DILocation(line: 8410, column: 19, scope: !11377)
!11394 = !DILocation(line: 8410, column: 17, scope: !11377)
!11395 = !DILocation(line: 8410, column: 9, scope: !11377)
!11396 = !DILocation(line: 8411, column: 30, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 8411, column: 19)
!11398 = !DILocation(line: 8411, column: 28, scope: !11397)
!11399 = !DILocation(line: 8411, column: 24, scope: !11397)
!11400 = !DILocation(line: 8411, column: 38, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 8411, column: 19)
!11402 = !DILocation(line: 8411, column: 42, scope: !11401)
!11403 = !DILocation(line: 8411, column: 19, scope: !11397)
!11404 = !DILocation(line: 8413, column: 28, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 8413, column: 21)
!11406 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 8412, column: 21)
!11407 = !DILocation(line: 8413, column: 26, scope: !11405)
!11408 = !DILocation(line: 8413, column: 33, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 8413, column: 21)
!11410 = !DILocation(line: 8413, column: 37, scope: !11409)
!11411 = !DILocation(line: 8413, column: 35, scope: !11409)
!11412 = !DILocation(line: 8413, column: 21, scope: !11405)
!11413 = !DILocation(line: 8414, column: 34, scope: !11409)
!11414 = !DILocation(line: 8414, column: 40, scope: !11409)
!11415 = !DILocation(line: 8414, column: 38, scope: !11409)
!11416 = !DILocation(line: 8414, column: 32, scope: !11409)
!11417 = !DILocation(line: 8414, column: 27, scope: !11409)
!11418 = !DILocation(line: 8414, column: 30, scope: !11409)
!11419 = !DILocation(line: 8414, column: 23, scope: !11409)
!11420 = !DILocation(line: 8413, column: 55, scope: !11409)
!11421 = !DILocation(line: 8413, column: 21, scope: !11409)
!11422 = distinct !{!11422, !11412, !11423}
!11423 = !DILocation(line: 8414, column: 41, scope: !11405)
!11424 = !DILocation(line: 8415, column: 14, scope: !11406)
!11425 = !DILocation(line: 8415, column: 11, scope: !11406)
!11426 = !DILocation(line: 8416, column: 21, scope: !11406)
!11427 = !DILocation(line: 8411, column: 50, scope: !11401)
!11428 = !DILocation(line: 8411, column: 19, scope: !11401)
!11429 = distinct !{!11429, !11403, !11430}
!11430 = !DILocation(line: 8416, column: 21, scope: !11397)
!11431 = !DILocation(line: 8417, column: 5, scope: !11377)
!11432 = !DILocation(line: 8405, column: 47, scope: !11372)
!11433 = !DILocation(line: 8405, column: 17, scope: !11372)
!11434 = distinct !{!11434, !11375, !11435}
!11435 = !DILocation(line: 8417, column: 5, scope: !11368)
!11436 = !DILocation(line: 8418, column: 3, scope: !11369)
!11437 = !DILocation(line: 8421, column: 26, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 8421, column: 17)
!11439 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 8420, column: 17)
!11440 = !DILocation(line: 8421, column: 22, scope: !11438)
!11441 = !DILocation(line: 8421, column: 31, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 8421, column: 17)
!11443 = !DILocation(line: 8421, column: 37, scope: !11442)
!11444 = !DILocation(line: 8421, column: 35, scope: !11442)
!11445 = !DILocation(line: 8421, column: 17, scope: !11438)
!11446 = !DILocation(line: 8423, column: 16, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 8422, column: 19)
!11448 = !DILocation(line: 8424, column: 33, scope: !11447)
!11449 = !DILocation(line: 8424, column: 41, scope: !11447)
!11450 = !DILocation(line: 8424, column: 39, scope: !11447)
!11451 = !DILocation(line: 8424, column: 45, scope: !11447)
!11452 = !DILocation(line: 8424, column: 52, scope: !11447)
!11453 = !DILocation(line: 8424, column: 50, scope: !11447)
!11454 = !DILocation(line: 8424, column: 30, scope: !11447)
!11455 = !DILocation(line: 8425, column: 11, scope: !11447)
!11456 = !DILocation(line: 8425, column: 19, scope: !11447)
!11457 = !DILocation(line: 8425, column: 17, scope: !11447)
!11458 = !DILocation(line: 8425, column: 9, scope: !11447)
!11459 = !DILocation(line: 8426, column: 11, scope: !11447)
!11460 = !DILocation(line: 8426, column: 19, scope: !11447)
!11461 = !DILocation(line: 8426, column: 17, scope: !11447)
!11462 = !DILocation(line: 8426, column: 9, scope: !11447)
!11463 = !DILocation(line: 8427, column: 27, scope: !11447)
!11464 = !DILocation(line: 8427, column: 19, scope: !11447)
!11465 = !DILocation(line: 8429, column: 33, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 8429, column: 33)
!11467 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 8428, column: 21)
!11468 = !DILocation(line: 8429, column: 37, scope: !11466)
!11469 = !DILocation(line: 8429, column: 33, scope: !11467)
!11470 = !DILocation(line: 8431, column: 60, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 8431, column: 35)
!11472 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 8430, column: 10)
!11473 = !DILocation(line: 8431, column: 70, scope: !11471)
!11474 = !DILocation(line: 8431, column: 75, scope: !11471)
!11475 = !DILocation(line: 8431, column: 80, scope: !11471)
!11476 = !DILocation(line: 8432, column: 26, scope: !11471)
!11477 = !DILocation(line: 8432, column: 34, scope: !11471)
!11478 = !DILocation(line: 8432, column: 39, scope: !11471)
!11479 = !DILocation(line: 8432, column: 44, scope: !11471)
!11480 = !DILocation(line: 8431, column: 35, scope: !11471)
!11481 = !DILocation(line: 8431, column: 35, scope: !11472)
!11482 = !DILocation(line: 8434, column: 29, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 8433, column: 33)
!11484 = !DILocation(line: 8434, column: 19, scope: !11483)
!11485 = !DILocation(line: 8435, column: 33, scope: !11483)
!11486 = !DILocation(line: 8437, column: 31, scope: !11472)
!11487 = !DILocation(line: 8439, column: 59, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 8439, column: 33)
!11489 = !DILocation(line: 8439, column: 69, scope: !11488)
!11490 = !DILocation(line: 8439, column: 74, scope: !11488)
!11491 = !DILocation(line: 8439, column: 79, scope: !11488)
!11492 = !DILocation(line: 8440, column: 26, scope: !11488)
!11493 = !DILocation(line: 8440, column: 34, scope: !11488)
!11494 = !DILocation(line: 8440, column: 39, scope: !11488)
!11495 = !DILocation(line: 8440, column: 44, scope: !11488)
!11496 = !DILocation(line: 8439, column: 33, scope: !11488)
!11497 = !DILocation(line: 8439, column: 33, scope: !11467)
!11498 = !DILocation(line: 8442, column: 34, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 8441, column: 31)
!11500 = !DILocation(line: 8442, column: 24, scope: !11499)
!11501 = !DILocation(line: 8443, column: 31, scope: !11499)
!11502 = !DILocation(line: 8445, column: 15, scope: !11467)
!11503 = !DILocation(line: 8446, column: 59, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 8446, column: 33)
!11505 = !DILocation(line: 8446, column: 69, scope: !11504)
!11506 = !DILocation(line: 8446, column: 74, scope: !11504)
!11507 = !DILocation(line: 8446, column: 79, scope: !11504)
!11508 = !DILocation(line: 8447, column: 24, scope: !11504)
!11509 = !DILocation(line: 8447, column: 32, scope: !11504)
!11510 = !DILocation(line: 8447, column: 37, scope: !11504)
!11511 = !DILocation(line: 8447, column: 42, scope: !11504)
!11512 = !DILocation(line: 8446, column: 33, scope: !11504)
!11513 = !DILocation(line: 8446, column: 33, scope: !11467)
!11514 = !DILocation(line: 8449, column: 27, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 8448, column: 31)
!11516 = !DILocation(line: 8449, column: 17, scope: !11515)
!11517 = !DILocation(line: 8450, column: 31, scope: !11515)
!11518 = !DILocation(line: 8452, column: 30, scope: !11467)
!11519 = !DILocation(line: 8455, column: 59, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 8455, column: 33)
!11521 = !DILocation(line: 8455, column: 69, scope: !11520)
!11522 = !DILocation(line: 8455, column: 74, scope: !11520)
!11523 = !DILocation(line: 8455, column: 79, scope: !11520)
!11524 = !DILocation(line: 8456, column: 24, scope: !11520)
!11525 = !DILocation(line: 8456, column: 32, scope: !11520)
!11526 = !DILocation(line: 8456, column: 37, scope: !11520)
!11527 = !DILocation(line: 8456, column: 42, scope: !11520)
!11528 = !DILocation(line: 8455, column: 33, scope: !11520)
!11529 = !DILocation(line: 8455, column: 33, scope: !11467)
!11530 = !DILocation(line: 8458, column: 27, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 8457, column: 31)
!11532 = !DILocation(line: 8458, column: 17, scope: !11531)
!11533 = !DILocation(line: 8459, column: 31, scope: !11531)
!11534 = !DILocation(line: 8461, column: 30, scope: !11467)
!11535 = !DILocation(line: 8462, column: 82, scope: !11467)
!11536 = !DILocation(line: 8462, column: 30, scope: !11467)
!11537 = !DILocation(line: 8463, column: 26, scope: !11467)
!11538 = !DILocation(line: 8463, column: 16, scope: !11467)
!11539 = !DILocation(line: 8464, column: 30, scope: !11467)
!11540 = !DILocation(line: 8466, column: 5, scope: !11447)
!11541 = !DILocation(line: 8421, column: 47, scope: !11442)
!11542 = !DILocation(line: 8421, column: 17, scope: !11442)
!11543 = distinct !{!11543, !11445, !11544}
!11544 = !DILocation(line: 8466, column: 5, scope: !11438)
!11545 = !DILocation(line: 8468, column: 25, scope: !10961)
!11546 = !DILocation(line: 8468, column: 15, scope: !10961)
!11547 = !DILocation(line: 8469, column: 30, scope: !10961)
!11548 = !DILocation(line: 8469, column: 17, scope: !10961)
!11549 = !DILocation(line: 8469, column: 28, scope: !10961)
!11550 = !DILocation(line: 8471, column: 28, scope: !10961)
!11551 = !DILocation(line: 8471, column: 16, scope: !10961)
!11552 = !DILocation(line: 8471, column: 26, scope: !10961)
!11553 = !DILocation(line: 8472, column: 29, scope: !10961)
!11554 = !DILocation(line: 8472, column: 16, scope: !10961)
!11555 = !DILocation(line: 8472, column: 27, scope: !10961)
!11556 = !DILocation(line: 8473, column: 30, scope: !10961)
!11557 = !DILocation(line: 8473, column: 15, scope: !10961)
!11558 = !DILocation(line: 8473, column: 22, scope: !10961)
!11559 = !DILocation(line: 8473, column: 28, scope: !10961)
!11560 = !DILocation(line: 8474, column: 31, scope: !10961)
!11561 = !DILocation(line: 8474, column: 15, scope: !10961)
!11562 = !DILocation(line: 8474, column: 22, scope: !10961)
!11563 = !DILocation(line: 8474, column: 29, scope: !10961)
!11564 = !DILocation(line: 8475, column: 26, scope: !10961)
!11565 = !DILocation(line: 8475, column: 33, scope: !10961)
!11566 = !DILocation(line: 8475, column: 24, scope: !10961)
!11567 = !DILocation(line: 8476, column: 29, scope: !10961)
!11568 = !DILocation(line: 8476, column: 36, scope: !10961)
!11569 = !DILocation(line: 8476, column: 15, scope: !10961)
!11570 = !DILocation(line: 8476, column: 22, scope: !10961)
!11571 = !DILocation(line: 8476, column: 27, scope: !10961)
!11572 = !DILocation(line: 8477, column: 29, scope: !10961)
!11573 = !DILocation(line: 8477, column: 15, scope: !10961)
!11574 = !DILocation(line: 8477, column: 22, scope: !10961)
!11575 = !DILocation(line: 8477, column: 27, scope: !10961)
!11576 = !DILocation(line: 8478, column: 15, scope: !10961)
!11577 = !DILocation(line: 8480, column: 15, scope: !10961)
!11578 = !DILocation(line: 8483, column: 3, scope: !10807)
!11579 = !DILocation(line: 8484, column: 3, scope: !10807)
!11580 = distinct !DISubprogram(name: "reverseSamples8bits", scope: !3, file: !3, line: 8487, type: !11581, scopeLine: 8489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!11581 = !DISubroutineType(types: !11582)
!11582 = !{!110, !103, !103, !105, !116, !116}
!11583 = !DILocalVariable(name: "spp", arg: 1, scope: !11580, file: !3, line: 8487, type: !103)
!11584 = !DILocation(line: 8487, column: 29, scope: !11580)
!11585 = !DILocalVariable(name: "bps", arg: 2, scope: !11580, file: !3, line: 8487, type: !103)
!11586 = !DILocation(line: 8487, column: 41, scope: !11580)
!11587 = !DILocalVariable(name: "width", arg: 3, scope: !11580, file: !3, line: 8487, type: !105)
!11588 = !DILocation(line: 8487, column: 53, scope: !11580)
!11589 = !DILocalVariable(name: "ibuff", arg: 4, scope: !11580, file: !3, line: 8488, type: !116)
!11590 = !DILocation(line: 8488, column: 29, scope: !11580)
!11591 = !DILocalVariable(name: "obuff", arg: 5, scope: !11580, file: !3, line: 8488, type: !116)
!11592 = !DILocation(line: 8488, column: 43, scope: !11580)
!11593 = !DILocalVariable(name: "ready_bits", scope: !11580, file: !3, line: 8490, type: !110)
!11594 = !DILocation(line: 8490, column: 12, scope: !11580)
!11595 = !DILocalVariable(name: "col", scope: !11580, file: !3, line: 8491, type: !105)
!11596 = !DILocation(line: 8491, column: 12, scope: !11580)
!11597 = !DILocalVariable(name: "src_byte", scope: !11580, file: !3, line: 8492, type: !105)
!11598 = !DILocation(line: 8492, column: 12, scope: !11580)
!11599 = !DILocalVariable(name: "src_bit", scope: !11580, file: !3, line: 8492, type: !105)
!11600 = !DILocation(line: 8492, column: 22, scope: !11580)
!11601 = !DILocalVariable(name: "bit_offset", scope: !11580, file: !3, line: 8493, type: !105)
!11602 = !DILocation(line: 8493, column: 12, scope: !11580)
!11603 = !DILocalVariable(name: "match_bits", scope: !11580, file: !3, line: 8494, type: !114)
!11604 = !DILocation(line: 8494, column: 12, scope: !11580)
!11605 = !DILocalVariable(name: "mask_bits", scope: !11580, file: !3, line: 8494, type: !114)
!11606 = !DILocation(line: 8494, column: 28, scope: !11580)
!11607 = !DILocalVariable(name: "buff1", scope: !11580, file: !3, line: 8495, type: !114)
!11608 = !DILocation(line: 8495, column: 12, scope: !11580)
!11609 = !DILocalVariable(name: "buff2", scope: !11580, file: !3, line: 8495, type: !114)
!11610 = !DILocation(line: 8495, column: 23, scope: !11580)
!11611 = !DILocalVariable(name: "src", scope: !11580, file: !3, line: 8496, type: !106)
!11612 = !DILocation(line: 8496, column: 18, scope: !11580)
!11613 = !DILocalVariable(name: "dst", scope: !11580, file: !3, line: 8497, type: !106)
!11614 = !DILocation(line: 8497, column: 18, scope: !11580)
!11615 = !DILocalVariable(name: "sample", scope: !11580, file: !3, line: 8498, type: !7616)
!11616 = !DILocation(line: 8498, column: 13, scope: !11580)
!11617 = !DILocation(line: 8500, column: 8, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 8500, column: 7)
!11619 = !DILocation(line: 8500, column: 14, scope: !11618)
!11620 = !DILocation(line: 8500, column: 23, scope: !11618)
!11621 = !DILocation(line: 8500, column: 27, scope: !11618)
!11622 = !DILocation(line: 8500, column: 33, scope: !11618)
!11623 = !DILocation(line: 8500, column: 7, scope: !11580)
!11624 = !DILocation(line: 8502, column: 5, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 8501, column: 5)
!11626 = !DILocation(line: 8503, column: 5, scope: !11625)
!11627 = !DILocation(line: 8506, column: 14, scope: !11580)
!11628 = !DILocation(line: 8507, column: 35, scope: !11580)
!11629 = !DILocation(line: 8507, column: 33, scope: !11580)
!11630 = !DILocation(line: 8507, column: 26, scope: !11580)
!11631 = !DILocation(line: 8507, column: 16, scope: !11580)
!11632 = !DILocation(line: 8507, column: 13, scope: !11580)
!11633 = !DILocation(line: 8508, column: 9, scope: !11580)
!11634 = !DILocation(line: 8508, column: 7, scope: !11580)
!11635 = !DILocation(line: 8509, column: 14, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 8509, column: 3)
!11637 = !DILocation(line: 8509, column: 12, scope: !11636)
!11638 = !DILocation(line: 8509, column: 8, scope: !11636)
!11639 = !DILocation(line: 8509, column: 21, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 8509, column: 3)
!11641 = !DILocation(line: 8509, column: 25, scope: !11640)
!11642 = !DILocation(line: 8509, column: 3, scope: !11636)
!11643 = !DILocation(line: 8512, column: 19, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 8510, column: 5)
!11645 = !DILocation(line: 8512, column: 23, scope: !11644)
!11646 = !DILocation(line: 8512, column: 30, scope: !11644)
!11647 = !DILocation(line: 8512, column: 28, scope: !11644)
!11648 = !DILocation(line: 8512, column: 36, scope: !11644)
!11649 = !DILocation(line: 8512, column: 34, scope: !11644)
!11650 = !DILocation(line: 8512, column: 16, scope: !11644)
!11651 = !DILocation(line: 8513, column: 17, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 8513, column: 5)
!11653 = !DILocation(line: 8513, column: 10, scope: !11652)
!11654 = !DILocation(line: 8513, column: 22, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 8513, column: 5)
!11656 = !DILocation(line: 8513, column: 31, scope: !11655)
!11657 = !DILocation(line: 8513, column: 29, scope: !11655)
!11658 = !DILocation(line: 8513, column: 5, scope: !11652)
!11659 = !DILocation(line: 8515, column: 11, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 8515, column: 11)
!11661 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 8514, column: 7)
!11662 = !DILocation(line: 8515, column: 18, scope: !11660)
!11663 = !DILocation(line: 8515, column: 11, scope: !11661)
!11664 = !DILocation(line: 8517, column: 20, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 8516, column: 9)
!11666 = !DILocation(line: 8517, column: 31, scope: !11665)
!11667 = !DILocation(line: 8517, column: 18, scope: !11665)
!11668 = !DILocation(line: 8518, column: 20, scope: !11665)
!11669 = !DILocation(line: 8518, column: 31, scope: !11665)
!11670 = !DILocation(line: 8518, column: 18, scope: !11665)
!11671 = !DILocation(line: 8519, column: 9, scope: !11665)
!11672 = !DILocation(line: 8522, column: 21, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 8521, column: 9)
!11674 = !DILocation(line: 8522, column: 35, scope: !11673)
!11675 = !DILocation(line: 8522, column: 44, scope: !11673)
!11676 = !DILocation(line: 8522, column: 42, scope: !11673)
!11677 = !DILocation(line: 8522, column: 32, scope: !11673)
!11678 = !DILocation(line: 8522, column: 50, scope: !11673)
!11679 = !DILocation(line: 8522, column: 18, scope: !11673)
!11680 = !DILocation(line: 8523, column: 21, scope: !11673)
!11681 = !DILocation(line: 8523, column: 35, scope: !11673)
!11682 = !DILocation(line: 8523, column: 44, scope: !11673)
!11683 = !DILocation(line: 8523, column: 42, scope: !11673)
!11684 = !DILocation(line: 8523, column: 32, scope: !11673)
!11685 = !DILocation(line: 8523, column: 50, scope: !11673)
!11686 = !DILocation(line: 8523, column: 18, scope: !11673)
!11687 = !DILocation(line: 8526, column: 13, scope: !11661)
!11688 = !DILocation(line: 8526, column: 21, scope: !11661)
!11689 = !DILocation(line: 8526, column: 19, scope: !11661)
!11690 = !DILocation(line: 8526, column: 11, scope: !11661)
!11691 = !DILocation(line: 8527, column: 20, scope: !11661)
!11692 = !DILocation(line: 8527, column: 38, scope: !11661)
!11693 = !DILocation(line: 8527, column: 36, scope: !11661)
!11694 = !DILocation(line: 8527, column: 48, scope: !11661)
!11695 = !DILocation(line: 8527, column: 46, scope: !11661)
!11696 = !DILocation(line: 8527, column: 30, scope: !11661)
!11697 = !DILocation(line: 8527, column: 18, scope: !11661)
!11698 = !DILocation(line: 8528, column: 18, scope: !11661)
!11699 = !DILocation(line: 8528, column: 17, scope: !11661)
!11700 = !DILocation(line: 8528, column: 16, scope: !11661)
!11701 = !DILocation(line: 8528, column: 25, scope: !11661)
!11702 = !DILocation(line: 8528, column: 23, scope: !11661)
!11703 = !DILocation(line: 8528, column: 41, scope: !11661)
!11704 = !DILocation(line: 8528, column: 37, scope: !11661)
!11705 = !DILocation(line: 8528, column: 15, scope: !11661)
!11706 = !DILocation(line: 8528, column: 13, scope: !11661)
!11707 = !DILocation(line: 8530, column: 11, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 8530, column: 11)
!11709 = !DILocation(line: 8530, column: 22, scope: !11708)
!11710 = !DILocation(line: 8530, column: 11, scope: !11661)
!11711 = !DILocation(line: 8531, column: 18, scope: !11708)
!11712 = !DILocation(line: 8531, column: 27, scope: !11708)
!11713 = !DILocation(line: 8531, column: 36, scope: !11708)
!11714 = !DILocation(line: 8531, column: 33, scope: !11708)
!11715 = !DILocation(line: 8531, column: 24, scope: !11708)
!11716 = !DILocation(line: 8531, column: 17, scope: !11708)
!11717 = !DILocation(line: 8531, column: 15, scope: !11708)
!11718 = !DILocation(line: 8531, column: 9, scope: !11708)
!11719 = !DILocation(line: 8534, column: 18, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 8533, column: 9)
!11721 = !DILocation(line: 8534, column: 13, scope: !11720)
!11722 = !DILocation(line: 8534, column: 16, scope: !11720)
!11723 = !DILocation(line: 8535, column: 17, scope: !11720)
!11724 = !DILocation(line: 8535, column: 15, scope: !11720)
!11725 = !DILocation(line: 8536, column: 20, scope: !11720)
!11726 = !DILocation(line: 8538, column: 21, scope: !11661)
!11727 = !DILocation(line: 8538, column: 18, scope: !11661)
!11728 = !DILocation(line: 8539, column: 7, scope: !11661)
!11729 = !DILocation(line: 8513, column: 42, scope: !11655)
!11730 = !DILocation(line: 8513, column: 5, scope: !11655)
!11731 = distinct !{!11731, !11658, !11732}
!11732 = !DILocation(line: 8539, column: 7, scope: !11652)
!11733 = !DILocation(line: 8540, column: 5, scope: !11644)
!11734 = !DILocation(line: 8509, column: 33, scope: !11640)
!11735 = !DILocation(line: 8509, column: 3, scope: !11640)
!11736 = distinct !{!11736, !11642, !11737}
!11737 = !DILocation(line: 8540, column: 5, scope: !11636)
!11738 = !DILocation(line: 8541, column: 7, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 8541, column: 7)
!11740 = !DILocation(line: 8541, column: 18, scope: !11739)
!11741 = !DILocation(line: 8541, column: 7, scope: !11580)
!11742 = !DILocation(line: 8543, column: 14, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 8542, column: 5)
!11744 = !DILocation(line: 8543, column: 49, scope: !11743)
!11745 = !DILocation(line: 8543, column: 47, scope: !11743)
!11746 = !DILocation(line: 8543, column: 41, scope: !11743)
!11747 = !DILocation(line: 8543, column: 20, scope: !11743)
!11748 = !DILocation(line: 8543, column: 13, scope: !11743)
!11749 = !DILocation(line: 8543, column: 11, scope: !11743)
!11750 = !DILocation(line: 8544, column: 14, scope: !11743)
!11751 = !DILocation(line: 8544, column: 9, scope: !11743)
!11752 = !DILocation(line: 8544, column: 12, scope: !11743)
!11753 = !DILocation(line: 8545, column: 5, scope: !11743)
!11754 = !DILocation(line: 8547, column: 3, scope: !11580)
!11755 = !DILocation(line: 8548, column: 3, scope: !11580)
!11756 = distinct !DISubprogram(name: "reverseSamples16bits", scope: !3, file: !3, line: 8552, type: !11581, scopeLine: 8554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!11757 = !DILocalVariable(name: "spp", arg: 1, scope: !11756, file: !3, line: 8552, type: !103)
!11758 = !DILocation(line: 8552, column: 30, scope: !11756)
!11759 = !DILocalVariable(name: "bps", arg: 2, scope: !11756, file: !3, line: 8552, type: !103)
!11760 = !DILocation(line: 8552, column: 42, scope: !11756)
!11761 = !DILocalVariable(name: "width", arg: 3, scope: !11756, file: !3, line: 8552, type: !105)
!11762 = !DILocation(line: 8552, column: 54, scope: !11756)
!11763 = !DILocalVariable(name: "ibuff", arg: 4, scope: !11756, file: !3, line: 8553, type: !116)
!11764 = !DILocation(line: 8553, column: 30, scope: !11756)
!11765 = !DILocalVariable(name: "obuff", arg: 5, scope: !11756, file: !3, line: 8553, type: !116)
!11766 = !DILocation(line: 8553, column: 44, scope: !11756)
!11767 = !DILocalVariable(name: "ready_bits", scope: !11756, file: !3, line: 8555, type: !110)
!11768 = !DILocation(line: 8555, column: 12, scope: !11756)
!11769 = !DILocalVariable(name: "col", scope: !11756, file: !3, line: 8556, type: !105)
!11770 = !DILocation(line: 8556, column: 12, scope: !11756)
!11771 = !DILocalVariable(name: "src_byte", scope: !11756, file: !3, line: 8557, type: !105)
!11772 = !DILocation(line: 8557, column: 12, scope: !11756)
!11773 = !DILocalVariable(name: "high_bit", scope: !11756, file: !3, line: 8557, type: !105)
!11774 = !DILocation(line: 8557, column: 26, scope: !11756)
!11775 = !DILocalVariable(name: "bit_offset", scope: !11756, file: !3, line: 8558, type: !105)
!11776 = !DILocation(line: 8558, column: 12, scope: !11756)
!11777 = !DILocalVariable(name: "match_bits", scope: !11756, file: !3, line: 8559, type: !103)
!11778 = !DILocation(line: 8559, column: 12, scope: !11756)
!11779 = !DILocalVariable(name: "mask_bits", scope: !11756, file: !3, line: 8559, type: !103)
!11780 = !DILocation(line: 8559, column: 28, scope: !11756)
!11781 = !DILocalVariable(name: "buff1", scope: !11756, file: !3, line: 8560, type: !103)
!11782 = !DILocation(line: 8560, column: 12, scope: !11756)
!11783 = !DILocalVariable(name: "buff2", scope: !11756, file: !3, line: 8560, type: !103)
!11784 = !DILocation(line: 8560, column: 23, scope: !11756)
!11785 = !DILocalVariable(name: "bytebuff", scope: !11756, file: !3, line: 8561, type: !114)
!11786 = !DILocation(line: 8561, column: 12, scope: !11756)
!11787 = !DILocalVariable(name: "src", scope: !11756, file: !3, line: 8562, type: !106)
!11788 = !DILocation(line: 8562, column: 18, scope: !11756)
!11789 = !DILocalVariable(name: "dst", scope: !11756, file: !3, line: 8563, type: !106)
!11790 = !DILocation(line: 8563, column: 18, scope: !11756)
!11791 = !DILocalVariable(name: "sample", scope: !11756, file: !3, line: 8564, type: !7616)
!11792 = !DILocation(line: 8564, column: 13, scope: !11756)
!11793 = !DILocation(line: 8566, column: 8, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 8566, column: 7)
!11795 = !DILocation(line: 8566, column: 14, scope: !11794)
!11796 = !DILocation(line: 8566, column: 23, scope: !11794)
!11797 = !DILocation(line: 8566, column: 27, scope: !11794)
!11798 = !DILocation(line: 8566, column: 33, scope: !11794)
!11799 = !DILocation(line: 8566, column: 7, scope: !11756)
!11800 = !DILocation(line: 8568, column: 5, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 8567, column: 5)
!11802 = !DILocation(line: 8569, column: 5, scope: !11801)
!11803 = !DILocation(line: 8572, column: 14, scope: !11756)
!11804 = !DILocation(line: 8573, column: 36, scope: !11756)
!11805 = !DILocation(line: 8573, column: 34, scope: !11756)
!11806 = !DILocation(line: 8573, column: 27, scope: !11756)
!11807 = !DILocation(line: 8573, column: 16, scope: !11756)
!11808 = !DILocation(line: 8573, column: 13, scope: !11756)
!11809 = !DILocation(line: 8574, column: 9, scope: !11756)
!11810 = !DILocation(line: 8574, column: 7, scope: !11756)
!11811 = !DILocation(line: 8575, column: 14, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 8575, column: 3)
!11813 = !DILocation(line: 8575, column: 12, scope: !11812)
!11814 = !DILocation(line: 8575, column: 8, scope: !11812)
!11815 = !DILocation(line: 8575, column: 21, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 8575, column: 3)
!11817 = !DILocation(line: 8575, column: 25, scope: !11816)
!11818 = !DILocation(line: 8575, column: 3, scope: !11812)
!11819 = !DILocation(line: 8578, column: 19, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 8576, column: 5)
!11821 = !DILocation(line: 8578, column: 23, scope: !11820)
!11822 = !DILocation(line: 8578, column: 30, scope: !11820)
!11823 = !DILocation(line: 8578, column: 28, scope: !11820)
!11824 = !DILocation(line: 8578, column: 36, scope: !11820)
!11825 = !DILocation(line: 8578, column: 34, scope: !11820)
!11826 = !DILocation(line: 8578, column: 16, scope: !11820)
!11827 = !DILocation(line: 8579, column: 17, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 8579, column: 5)
!11829 = !DILocation(line: 8579, column: 10, scope: !11828)
!11830 = !DILocation(line: 8579, column: 22, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !3, line: 8579, column: 5)
!11832 = !DILocation(line: 8579, column: 31, scope: !11831)
!11833 = !DILocation(line: 8579, column: 29, scope: !11831)
!11834 = !DILocation(line: 8579, column: 5, scope: !11828)
!11835 = !DILocation(line: 8581, column: 11, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 8581, column: 11)
!11837 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 8580, column: 7)
!11838 = !DILocation(line: 8581, column: 18, scope: !11836)
!11839 = !DILocation(line: 8581, column: 11, scope: !11837)
!11840 = !DILocation(line: 8583, column: 20, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 8582, column: 9)
!11842 = !DILocation(line: 8583, column: 31, scope: !11841)
!11843 = !DILocation(line: 8583, column: 18, scope: !11841)
!11844 = !DILocation(line: 8584, column: 21, scope: !11841)
!11845 = !DILocation(line: 8584, column: 32, scope: !11841)
!11846 = !DILocation(line: 8584, column: 19, scope: !11841)
!11847 = !DILocation(line: 8585, column: 9, scope: !11841)
!11848 = !DILocation(line: 8588, column: 21, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 8587, column: 9)
!11850 = !DILocation(line: 8588, column: 35, scope: !11849)
!11851 = !DILocation(line: 8588, column: 44, scope: !11849)
!11852 = !DILocation(line: 8588, column: 42, scope: !11849)
!11853 = !DILocation(line: 8588, column: 32, scope: !11849)
!11854 = !DILocation(line: 8588, column: 50, scope: !11849)
!11855 = !DILocation(line: 8588, column: 18, scope: !11849)
!11856 = !DILocation(line: 8589, column: 22, scope: !11849)
!11857 = !DILocation(line: 8589, column: 36, scope: !11849)
!11858 = !DILocation(line: 8589, column: 45, scope: !11849)
!11859 = !DILocation(line: 8589, column: 43, scope: !11849)
!11860 = !DILocation(line: 8589, column: 33, scope: !11849)
!11861 = !DILocation(line: 8589, column: 51, scope: !11849)
!11862 = !DILocation(line: 8589, column: 19, scope: !11849)
!11863 = !DILocation(line: 8592, column: 13, scope: !11837)
!11864 = !DILocation(line: 8592, column: 21, scope: !11837)
!11865 = !DILocation(line: 8592, column: 19, scope: !11837)
!11866 = !DILocation(line: 8592, column: 11, scope: !11837)
!11867 = !DILocation(line: 8593, column: 20, scope: !11837)
!11868 = !DILocation(line: 8593, column: 39, scope: !11837)
!11869 = !DILocation(line: 8593, column: 37, scope: !11837)
!11870 = !DILocation(line: 8593, column: 50, scope: !11837)
!11871 = !DILocation(line: 8593, column: 48, scope: !11837)
!11872 = !DILocation(line: 8593, column: 30, scope: !11837)
!11873 = !DILocation(line: 8593, column: 18, scope: !11837)
!11874 = !DILocation(line: 8594, column: 11, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 8594, column: 11)
!11876 = !DILocation(line: 8594, column: 11, scope: !11837)
!11877 = !DILocation(line: 8595, column: 18, scope: !11875)
!11878 = !DILocation(line: 8595, column: 25, scope: !11875)
!11879 = !DILocation(line: 8595, column: 33, scope: !11875)
!11880 = !DILocation(line: 8595, column: 31, scope: !11875)
!11881 = !DILocation(line: 8595, column: 17, scope: !11875)
!11882 = !DILocation(line: 8595, column: 15, scope: !11875)
!11883 = !DILocation(line: 8595, column: 9, scope: !11875)
!11884 = !DILocation(line: 8597, column: 18, scope: !11875)
!11885 = !DILocation(line: 8597, column: 25, scope: !11875)
!11886 = !DILocation(line: 8597, column: 33, scope: !11875)
!11887 = !DILocation(line: 8597, column: 31, scope: !11875)
!11888 = !DILocation(line: 8597, column: 17, scope: !11875)
!11889 = !DILocation(line: 8597, column: 15, scope: !11875)
!11890 = !DILocation(line: 8598, column: 16, scope: !11837)
!11891 = !DILocation(line: 8598, column: 24, scope: !11837)
!11892 = !DILocation(line: 8598, column: 22, scope: !11837)
!11893 = !DILocation(line: 8598, column: 40, scope: !11837)
!11894 = !DILocation(line: 8598, column: 36, scope: !11837)
!11895 = !DILocation(line: 8598, column: 15, scope: !11837)
!11896 = !DILocation(line: 8598, column: 13, scope: !11837)
!11897 = !DILocation(line: 8600, column: 11, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 8600, column: 11)
!11899 = !DILocation(line: 8600, column: 22, scope: !11898)
!11900 = !DILocation(line: 8600, column: 11, scope: !11837)
!11901 = !DILocation(line: 8602, column: 18, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 8601, column: 9)
!11903 = !DILocation(line: 8603, column: 18, scope: !11902)
!11904 = !DILocation(line: 8603, column: 27, scope: !11902)
!11905 = !DILocation(line: 8603, column: 36, scope: !11902)
!11906 = !DILocation(line: 8603, column: 33, scope: !11902)
!11907 = !DILocation(line: 8603, column: 24, scope: !11902)
!11908 = !DILocation(line: 8603, column: 17, scope: !11902)
!11909 = !DILocation(line: 8603, column: 15, scope: !11902)
!11910 = !DILocation(line: 8604, column: 9, scope: !11902)
!11911 = !DILocation(line: 8607, column: 21, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 8606, column: 9)
!11913 = !DILocation(line: 8607, column: 27, scope: !11912)
!11914 = !DILocation(line: 8607, column: 20, scope: !11912)
!11915 = !DILocation(line: 8607, column: 18, scope: !11912)
!11916 = !DILocation(line: 8608, column: 18, scope: !11912)
!11917 = !DILocation(line: 8608, column: 13, scope: !11912)
!11918 = !DILocation(line: 8608, column: 16, scope: !11912)
!11919 = !DILocation(line: 8609, column: 20, scope: !11912)
!11920 = !DILocation(line: 8611, column: 19, scope: !11912)
!11921 = !DILocation(line: 8611, column: 25, scope: !11912)
!11922 = !DILocation(line: 8611, column: 34, scope: !11912)
!11923 = !DILocation(line: 8611, column: 43, scope: !11912)
!11924 = !DILocation(line: 8611, column: 40, scope: !11912)
!11925 = !DILocation(line: 8611, column: 31, scope: !11912)
!11926 = !DILocation(line: 8611, column: 17, scope: !11912)
!11927 = !DILocation(line: 8611, column: 15, scope: !11912)
!11928 = !DILocation(line: 8613, column: 21, scope: !11837)
!11929 = !DILocation(line: 8613, column: 18, scope: !11837)
!11930 = !DILocation(line: 8614, column: 7, scope: !11837)
!11931 = !DILocation(line: 8579, column: 42, scope: !11831)
!11932 = !DILocation(line: 8579, column: 5, scope: !11831)
!11933 = distinct !{!11933, !11834, !11934}
!11934 = !DILocation(line: 8614, column: 7, scope: !11828)
!11935 = !DILocation(line: 8615, column: 5, scope: !11820)
!11936 = !DILocation(line: 8575, column: 33, scope: !11816)
!11937 = !DILocation(line: 8575, column: 3, scope: !11816)
!11938 = distinct !{!11938, !11818, !11939}
!11939 = !DILocation(line: 8615, column: 5, scope: !11812)
!11940 = !DILocation(line: 8617, column: 7, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 8617, column: 7)
!11942 = !DILocation(line: 8617, column: 18, scope: !11941)
!11943 = !DILocation(line: 8617, column: 7, scope: !11756)
!11944 = !DILocation(line: 8619, column: 17, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 8618, column: 5)
!11946 = !DILocation(line: 8619, column: 23, scope: !11945)
!11947 = !DILocation(line: 8619, column: 16, scope: !11945)
!11948 = !DILocation(line: 8619, column: 14, scope: !11945)
!11949 = !DILocation(line: 8620, column: 14, scope: !11945)
!11950 = !DILocation(line: 8620, column: 9, scope: !11945)
!11951 = !DILocation(line: 8620, column: 12, scope: !11945)
!11952 = !DILocation(line: 8621, column: 5, scope: !11945)
!11953 = !DILocation(line: 8623, column: 3, scope: !11756)
!11954 = !DILocation(line: 8624, column: 3, scope: !11756)
!11955 = distinct !DISubprogram(name: "reverseSamples24bits", scope: !3, file: !3, line: 8627, type: !11581, scopeLine: 8629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!11956 = !DILocalVariable(name: "spp", arg: 1, scope: !11955, file: !3, line: 8627, type: !103)
!11957 = !DILocation(line: 8627, column: 30, scope: !11955)
!11958 = !DILocalVariable(name: "bps", arg: 2, scope: !11955, file: !3, line: 8627, type: !103)
!11959 = !DILocation(line: 8627, column: 42, scope: !11955)
!11960 = !DILocalVariable(name: "width", arg: 3, scope: !11955, file: !3, line: 8627, type: !105)
!11961 = !DILocation(line: 8627, column: 54, scope: !11955)
!11962 = !DILocalVariable(name: "ibuff", arg: 4, scope: !11955, file: !3, line: 8628, type: !116)
!11963 = !DILocation(line: 8628, column: 30, scope: !11955)
!11964 = !DILocalVariable(name: "obuff", arg: 5, scope: !11955, file: !3, line: 8628, type: !116)
!11965 = !DILocation(line: 8628, column: 44, scope: !11955)
!11966 = !DILocalVariable(name: "ready_bits", scope: !11955, file: !3, line: 8630, type: !110)
!11967 = !DILocation(line: 8630, column: 12, scope: !11955)
!11968 = !DILocalVariable(name: "col", scope: !11955, file: !3, line: 8631, type: !105)
!11969 = !DILocation(line: 8631, column: 12, scope: !11955)
!11970 = !DILocalVariable(name: "src_byte", scope: !11955, file: !3, line: 8632, type: !105)
!11971 = !DILocation(line: 8632, column: 12, scope: !11955)
!11972 = !DILocalVariable(name: "high_bit", scope: !11955, file: !3, line: 8632, type: !105)
!11973 = !DILocation(line: 8632, column: 26, scope: !11955)
!11974 = !DILocalVariable(name: "bit_offset", scope: !11955, file: !3, line: 8633, type: !105)
!11975 = !DILocation(line: 8633, column: 12, scope: !11955)
!11976 = !DILocalVariable(name: "match_bits", scope: !11955, file: !3, line: 8634, type: !105)
!11977 = !DILocation(line: 8634, column: 12, scope: !11955)
!11978 = !DILocalVariable(name: "mask_bits", scope: !11955, file: !3, line: 8634, type: !105)
!11979 = !DILocation(line: 8634, column: 28, scope: !11955)
!11980 = !DILocalVariable(name: "buff1", scope: !11955, file: !3, line: 8635, type: !105)
!11981 = !DILocation(line: 8635, column: 12, scope: !11955)
!11982 = !DILocalVariable(name: "buff2", scope: !11955, file: !3, line: 8635, type: !105)
!11983 = !DILocation(line: 8635, column: 23, scope: !11955)
!11984 = !DILocalVariable(name: "bytebuff1", scope: !11955, file: !3, line: 8636, type: !114)
!11985 = !DILocation(line: 8636, column: 12, scope: !11955)
!11986 = !DILocalVariable(name: "bytebuff2", scope: !11955, file: !3, line: 8636, type: !114)
!11987 = !DILocation(line: 8636, column: 27, scope: !11955)
!11988 = !DILocalVariable(name: "src", scope: !11955, file: !3, line: 8637, type: !106)
!11989 = !DILocation(line: 8637, column: 18, scope: !11955)
!11990 = !DILocalVariable(name: "dst", scope: !11955, file: !3, line: 8638, type: !106)
!11991 = !DILocation(line: 8638, column: 18, scope: !11955)
!11992 = !DILocalVariable(name: "sample", scope: !11955, file: !3, line: 8639, type: !7616)
!11993 = !DILocation(line: 8639, column: 13, scope: !11955)
!11994 = !DILocation(line: 8641, column: 8, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 8641, column: 7)
!11996 = !DILocation(line: 8641, column: 14, scope: !11995)
!11997 = !DILocation(line: 8641, column: 23, scope: !11995)
!11998 = !DILocation(line: 8641, column: 27, scope: !11995)
!11999 = !DILocation(line: 8641, column: 33, scope: !11995)
!12000 = !DILocation(line: 8641, column: 7, scope: !11955)
!12001 = !DILocation(line: 8643, column: 5, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 8642, column: 5)
!12003 = !DILocation(line: 8644, column: 5, scope: !12002)
!12004 = !DILocation(line: 8647, column: 14, scope: !11955)
!12005 = !DILocation(line: 8648, column: 36, scope: !11955)
!12006 = !DILocation(line: 8648, column: 34, scope: !11955)
!12007 = !DILocation(line: 8648, column: 27, scope: !11955)
!12008 = !DILocation(line: 8648, column: 13, scope: !11955)
!12009 = !DILocation(line: 8649, column: 9, scope: !11955)
!12010 = !DILocation(line: 8649, column: 7, scope: !11955)
!12011 = !DILocation(line: 8650, column: 14, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 8650, column: 3)
!12013 = !DILocation(line: 8650, column: 12, scope: !12012)
!12014 = !DILocation(line: 8650, column: 8, scope: !12012)
!12015 = !DILocation(line: 8650, column: 21, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 8650, column: 3)
!12017 = !DILocation(line: 8650, column: 25, scope: !12016)
!12018 = !DILocation(line: 8650, column: 3, scope: !12012)
!12019 = !DILocation(line: 8653, column: 19, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12016, file: !3, line: 8651, column: 5)
!12021 = !DILocation(line: 8653, column: 23, scope: !12020)
!12022 = !DILocation(line: 8653, column: 30, scope: !12020)
!12023 = !DILocation(line: 8653, column: 28, scope: !12020)
!12024 = !DILocation(line: 8653, column: 36, scope: !12020)
!12025 = !DILocation(line: 8653, column: 34, scope: !12020)
!12026 = !DILocation(line: 8653, column: 16, scope: !12020)
!12027 = !DILocation(line: 8654, column: 17, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 8654, column: 5)
!12029 = !DILocation(line: 8654, column: 10, scope: !12028)
!12030 = !DILocation(line: 8654, column: 22, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 8654, column: 5)
!12032 = !DILocation(line: 8654, column: 31, scope: !12031)
!12033 = !DILocation(line: 8654, column: 29, scope: !12031)
!12034 = !DILocation(line: 8654, column: 5, scope: !12028)
!12035 = !DILocation(line: 8656, column: 11, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 8656, column: 11)
!12037 = distinct !DILexicalBlock(scope: !12031, file: !3, line: 8655, column: 7)
!12038 = !DILocation(line: 8656, column: 18, scope: !12036)
!12039 = !DILocation(line: 8656, column: 11, scope: !12037)
!12040 = !DILocation(line: 8658, column: 20, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 8657, column: 9)
!12042 = !DILocation(line: 8658, column: 31, scope: !12041)
!12043 = !DILocation(line: 8658, column: 18, scope: !12041)
!12044 = !DILocation(line: 8659, column: 21, scope: !12041)
!12045 = !DILocation(line: 8659, column: 32, scope: !12041)
!12046 = !DILocation(line: 8659, column: 19, scope: !12041)
!12047 = !DILocation(line: 8660, column: 9, scope: !12041)
!12048 = !DILocation(line: 8663, column: 21, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 8662, column: 9)
!12050 = !DILocation(line: 8663, column: 35, scope: !12049)
!12051 = !DILocation(line: 8663, column: 44, scope: !12049)
!12052 = !DILocation(line: 8663, column: 42, scope: !12049)
!12053 = !DILocation(line: 8663, column: 32, scope: !12049)
!12054 = !DILocation(line: 8663, column: 50, scope: !12049)
!12055 = !DILocation(line: 8663, column: 18, scope: !12049)
!12056 = !DILocation(line: 8664, column: 22, scope: !12049)
!12057 = !DILocation(line: 8664, column: 36, scope: !12049)
!12058 = !DILocation(line: 8664, column: 45, scope: !12049)
!12059 = !DILocation(line: 8664, column: 43, scope: !12049)
!12060 = !DILocation(line: 8664, column: 33, scope: !12049)
!12061 = !DILocation(line: 8664, column: 51, scope: !12049)
!12062 = !DILocation(line: 8664, column: 19, scope: !12049)
!12063 = !DILocation(line: 8667, column: 13, scope: !12037)
!12064 = !DILocation(line: 8667, column: 21, scope: !12037)
!12065 = !DILocation(line: 8667, column: 19, scope: !12037)
!12066 = !DILocation(line: 8667, column: 11, scope: !12037)
!12067 = !DILocation(line: 8668, column: 20, scope: !12037)
!12068 = !DILocation(line: 8668, column: 39, scope: !12037)
!12069 = !DILocation(line: 8668, column: 37, scope: !12037)
!12070 = !DILocation(line: 8668, column: 50, scope: !12037)
!12071 = !DILocation(line: 8668, column: 48, scope: !12037)
!12072 = !DILocation(line: 8668, column: 30, scope: !12037)
!12073 = !DILocation(line: 8668, column: 18, scope: !12037)
!12074 = !DILocation(line: 8669, column: 11, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 8669, column: 11)
!12076 = !DILocation(line: 8669, column: 11, scope: !12037)
!12077 = !DILocation(line: 8670, column: 11, scope: !12075)
!12078 = !DILocation(line: 8670, column: 18, scope: !12075)
!12079 = !DILocation(line: 8670, column: 28, scope: !12075)
!12080 = !DILocation(line: 8670, column: 35, scope: !12075)
!12081 = !DILocation(line: 8670, column: 25, scope: !12075)
!12082 = !DILocation(line: 8670, column: 45, scope: !12075)
!12083 = !DILocation(line: 8670, column: 52, scope: !12075)
!12084 = !DILocation(line: 8670, column: 42, scope: !12075)
!12085 = !DILocation(line: 8670, column: 60, scope: !12075)
!12086 = !DILocation(line: 8670, column: 58, scope: !12075)
!12087 = !DILocation(line: 8670, column: 8, scope: !12075)
!12088 = !DILocation(line: 8670, column: 2, scope: !12075)
!12089 = !DILocation(line: 8672, column: 11, scope: !12075)
!12090 = !DILocation(line: 8672, column: 18, scope: !12075)
!12091 = !DILocation(line: 8672, column: 28, scope: !12075)
!12092 = !DILocation(line: 8672, column: 35, scope: !12075)
!12093 = !DILocation(line: 8672, column: 25, scope: !12075)
!12094 = !DILocation(line: 8672, column: 45, scope: !12075)
!12095 = !DILocation(line: 8672, column: 52, scope: !12075)
!12096 = !DILocation(line: 8672, column: 42, scope: !12075)
!12097 = !DILocation(line: 8672, column: 60, scope: !12075)
!12098 = !DILocation(line: 8672, column: 58, scope: !12075)
!12099 = !DILocation(line: 8672, column: 8, scope: !12075)
!12100 = !DILocation(line: 8673, column: 16, scope: !12037)
!12101 = !DILocation(line: 8673, column: 24, scope: !12037)
!12102 = !DILocation(line: 8673, column: 22, scope: !12037)
!12103 = !DILocation(line: 8673, column: 40, scope: !12037)
!12104 = !DILocation(line: 8673, column: 36, scope: !12037)
!12105 = !DILocation(line: 8673, column: 13, scope: !12037)
!12106 = !DILocation(line: 8675, column: 11, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 8675, column: 11)
!12108 = !DILocation(line: 8675, column: 22, scope: !12107)
!12109 = !DILocation(line: 8675, column: 11, scope: !12037)
!12110 = !DILocation(line: 8677, column: 31, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12107, file: !3, line: 8676, column: 9)
!12112 = !DILocation(line: 8677, column: 19, scope: !12111)
!12113 = !DILocation(line: 8678, column: 18, scope: !12111)
!12114 = !DILocation(line: 8678, column: 27, scope: !12111)
!12115 = !DILocation(line: 8678, column: 36, scope: !12111)
!12116 = !DILocation(line: 8678, column: 33, scope: !12111)
!12117 = !DILocation(line: 8678, column: 24, scope: !12111)
!12118 = !DILocation(line: 8678, column: 15, scope: !12111)
!12119 = !DILocation(line: 8679, column: 9, scope: !12111)
!12120 = !DILocation(line: 8682, column: 22, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12107, file: !3, line: 8681, column: 9)
!12122 = !DILocation(line: 8682, column: 28, scope: !12121)
!12123 = !DILocation(line: 8682, column: 21, scope: !12121)
!12124 = !DILocation(line: 8682, column: 19, scope: !12121)
!12125 = !DILocation(line: 8683, column: 18, scope: !12121)
!12126 = !DILocation(line: 8683, column: 13, scope: !12121)
!12127 = !DILocation(line: 8683, column: 16, scope: !12121)
!12128 = !DILocation(line: 8684, column: 22, scope: !12121)
!12129 = !DILocation(line: 8684, column: 28, scope: !12121)
!12130 = !DILocation(line: 8684, column: 21, scope: !12121)
!12131 = !DILocation(line: 8684, column: 19, scope: !12121)
!12132 = !DILocation(line: 8685, column: 18, scope: !12121)
!12133 = !DILocation(line: 8685, column: 13, scope: !12121)
!12134 = !DILocation(line: 8685, column: 16, scope: !12121)
!12135 = !DILocation(line: 8686, column: 20, scope: !12121)
!12136 = !DILocation(line: 8689, column: 19, scope: !12121)
!12137 = !DILocation(line: 8689, column: 25, scope: !12121)
!12138 = !DILocation(line: 8689, column: 35, scope: !12121)
!12139 = !DILocation(line: 8689, column: 44, scope: !12121)
!12140 = !DILocation(line: 8689, column: 41, scope: !12121)
!12141 = !DILocation(line: 8689, column: 32, scope: !12121)
!12142 = !DILocation(line: 8689, column: 15, scope: !12121)
!12143 = !DILocation(line: 8691, column: 21, scope: !12037)
!12144 = !DILocation(line: 8691, column: 18, scope: !12037)
!12145 = !DILocation(line: 8692, column: 7, scope: !12037)
!12146 = !DILocation(line: 8654, column: 42, scope: !12031)
!12147 = !DILocation(line: 8654, column: 5, scope: !12031)
!12148 = distinct !{!12148, !12034, !12149}
!12149 = !DILocation(line: 8692, column: 7, scope: !12028)
!12150 = !DILocation(line: 8693, column: 5, scope: !12020)
!12151 = !DILocation(line: 8650, column: 33, scope: !12016)
!12152 = !DILocation(line: 8650, column: 3, scope: !12016)
!12153 = distinct !{!12153, !12018, !12154}
!12154 = !DILocation(line: 8693, column: 5, scope: !12012)
!12155 = !DILocation(line: 8696, column: 3, scope: !11955)
!12156 = !DILocation(line: 8696, column: 10, scope: !11955)
!12157 = !DILocation(line: 8696, column: 21, scope: !11955)
!12158 = !DILocation(line: 8698, column: 18, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 8697, column: 5)
!12160 = !DILocation(line: 8698, column: 24, scope: !12159)
!12161 = !DILocation(line: 8698, column: 17, scope: !12159)
!12162 = !DILocation(line: 8698, column: 15, scope: !12159)
!12163 = !DILocation(line: 8699, column: 14, scope: !12159)
!12164 = !DILocation(line: 8699, column: 9, scope: !12159)
!12165 = !DILocation(line: 8699, column: 12, scope: !12159)
!12166 = !DILocation(line: 8701, column: 14, scope: !12159)
!12167 = !DILocation(line: 8701, column: 20, scope: !12159)
!12168 = !DILocation(line: 8701, column: 11, scope: !12159)
!12169 = !DILocation(line: 8702, column: 17, scope: !12159)
!12170 = !DILocation(line: 8702, column: 15, scope: !12159)
!12171 = !DILocation(line: 8703, column: 16, scope: !12159)
!12172 = distinct !{!12172, !12155, !12173}
!12173 = !DILocation(line: 8704, column: 5, scope: !11955)
!12174 = !DILocation(line: 8706, column: 3, scope: !11955)
!12175 = !DILocation(line: 8707, column: 3, scope: !11955)
!12176 = distinct !DISubprogram(name: "reverseSamples32bits", scope: !3, file: !3, line: 8711, type: !11581, scopeLine: 8713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!12177 = !DILocalVariable(name: "spp", arg: 1, scope: !12176, file: !3, line: 8711, type: !103)
!12178 = !DILocation(line: 8711, column: 30, scope: !12176)
!12179 = !DILocalVariable(name: "bps", arg: 2, scope: !12176, file: !3, line: 8711, type: !103)
!12180 = !DILocation(line: 8711, column: 42, scope: !12176)
!12181 = !DILocalVariable(name: "width", arg: 3, scope: !12176, file: !3, line: 8711, type: !105)
!12182 = !DILocation(line: 8711, column: 54, scope: !12176)
!12183 = !DILocalVariable(name: "ibuff", arg: 4, scope: !12176, file: !3, line: 8712, type: !116)
!12184 = !DILocation(line: 8712, column: 30, scope: !12176)
!12185 = !DILocalVariable(name: "obuff", arg: 5, scope: !12176, file: !3, line: 8712, type: !116)
!12186 = !DILocation(line: 8712, column: 44, scope: !12176)
!12187 = !DILocalVariable(name: "ready_bits", scope: !12176, file: !3, line: 8714, type: !110)
!12188 = !DILocation(line: 8714, column: 10, scope: !12176)
!12189 = !DILocalVariable(name: "shift_width", scope: !12176, file: !3, line: 8714, type: !110)
!12190 = !DILocation(line: 8714, column: 26, scope: !12176)
!12191 = !DILocalVariable(name: "bytes_per_sample", scope: !12176, file: !3, line: 8715, type: !110)
!12192 = !DILocation(line: 8715, column: 10, scope: !12176)
!12193 = !DILocalVariable(name: "bytes_per_pixel", scope: !12176, file: !3, line: 8715, type: !110)
!12194 = !DILocation(line: 8715, column: 28, scope: !12176)
!12195 = !DILocalVariable(name: "bit_offset", scope: !12176, file: !3, line: 8716, type: !105)
!12196 = !DILocation(line: 8716, column: 10, scope: !12176)
!12197 = !DILocalVariable(name: "src_byte", scope: !12176, file: !3, line: 8717, type: !105)
!12198 = !DILocation(line: 8717, column: 10, scope: !12176)
!12199 = !DILocalVariable(name: "high_bit", scope: !12176, file: !3, line: 8717, type: !105)
!12200 = !DILocation(line: 8717, column: 24, scope: !12176)
!12201 = !DILocalVariable(name: "col", scope: !12176, file: !3, line: 8718, type: !105)
!12202 = !DILocation(line: 8718, column: 10, scope: !12176)
!12203 = !DILocalVariable(name: "longbuff1", scope: !12176, file: !3, line: 8719, type: !105)
!12204 = !DILocation(line: 8719, column: 10, scope: !12176)
!12205 = !DILocalVariable(name: "longbuff2", scope: !12176, file: !3, line: 8719, type: !105)
!12206 = !DILocation(line: 8719, column: 25, scope: !12176)
!12207 = !DILocalVariable(name: "mask_bits", scope: !12176, file: !3, line: 8720, type: !115)
!12208 = !DILocation(line: 8720, column: 10, scope: !12176)
!12209 = !DILocalVariable(name: "match_bits", scope: !12176, file: !3, line: 8720, type: !115)
!12210 = !DILocation(line: 8720, column: 25, scope: !12176)
!12211 = !DILocalVariable(name: "buff1", scope: !12176, file: !3, line: 8721, type: !115)
!12212 = !DILocation(line: 8721, column: 10, scope: !12176)
!12213 = !DILocalVariable(name: "buff2", scope: !12176, file: !3, line: 8721, type: !115)
!12214 = !DILocation(line: 8721, column: 21, scope: !12176)
!12215 = !DILocalVariable(name: "buff3", scope: !12176, file: !3, line: 8721, type: !115)
!12216 = !DILocation(line: 8721, column: 32, scope: !12176)
!12217 = !DILocalVariable(name: "bytebuff1", scope: !12176, file: !3, line: 8722, type: !114)
!12218 = !DILocation(line: 8722, column: 10, scope: !12176)
!12219 = !DILocalVariable(name: "bytebuff2", scope: !12176, file: !3, line: 8722, type: !114)
!12220 = !DILocation(line: 8722, column: 25, scope: !12176)
!12221 = !DILocalVariable(name: "bytebuff3", scope: !12176, file: !3, line: 8722, type: !114)
!12222 = !DILocation(line: 8722, column: 40, scope: !12176)
!12223 = !DILocalVariable(name: "bytebuff4", scope: !12176, file: !3, line: 8722, type: !114)
!12224 = !DILocation(line: 8722, column: 55, scope: !12176)
!12225 = !DILocalVariable(name: "src", scope: !12176, file: !3, line: 8723, type: !106)
!12226 = !DILocation(line: 8723, column: 18, scope: !12176)
!12227 = !DILocalVariable(name: "dst", scope: !12176, file: !3, line: 8724, type: !106)
!12228 = !DILocation(line: 8724, column: 18, scope: !12176)
!12229 = !DILocalVariable(name: "sample", scope: !12176, file: !3, line: 8725, type: !7616)
!12230 = !DILocation(line: 8725, column: 13, scope: !12176)
!12231 = !DILocation(line: 8727, column: 8, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 8727, column: 7)
!12233 = !DILocation(line: 8727, column: 14, scope: !12232)
!12234 = !DILocation(line: 8727, column: 23, scope: !12232)
!12235 = !DILocation(line: 8727, column: 27, scope: !12232)
!12236 = !DILocation(line: 8727, column: 33, scope: !12232)
!12237 = !DILocation(line: 8727, column: 7, scope: !12176)
!12238 = !DILocation(line: 8729, column: 5, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 8728, column: 5)
!12240 = !DILocation(line: 8730, column: 5, scope: !12239)
!12241 = !DILocation(line: 8733, column: 14, scope: !12176)
!12242 = !DILocation(line: 8734, column: 36, scope: !12176)
!12243 = !DILocation(line: 8734, column: 34, scope: !12176)
!12244 = !DILocation(line: 8734, column: 27, scope: !12176)
!12245 = !DILocation(line: 8734, column: 13, scope: !12176)
!12246 = !DILocation(line: 8735, column: 9, scope: !12176)
!12247 = !DILocation(line: 8735, column: 7, scope: !12176)
!12248 = !DILocation(line: 8737, column: 23, scope: !12176)
!12249 = !DILocation(line: 8737, column: 27, scope: !12176)
!12250 = !DILocation(line: 8737, column: 32, scope: !12176)
!12251 = !DILocation(line: 8737, column: 20, scope: !12176)
!12252 = !DILocation(line: 8738, column: 24, scope: !12176)
!12253 = !DILocation(line: 8738, column: 30, scope: !12176)
!12254 = !DILocation(line: 8738, column: 28, scope: !12176)
!12255 = !DILocation(line: 8738, column: 35, scope: !12176)
!12256 = !DILocation(line: 8738, column: 40, scope: !12176)
!12257 = !DILocation(line: 8738, column: 20, scope: !12176)
!12258 = !DILocation(line: 8739, column: 7, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 8739, column: 7)
!12260 = !DILocation(line: 8739, column: 26, scope: !12259)
!12261 = !DILocation(line: 8739, column: 43, scope: !12259)
!12262 = !DILocation(line: 8739, column: 23, scope: !12259)
!12263 = !DILocation(line: 8739, column: 7, scope: !12176)
!12264 = !DILocation(line: 8740, column: 19, scope: !12259)
!12265 = !DILocation(line: 8740, column: 17, scope: !12259)
!12266 = !DILocation(line: 8740, column: 5, scope: !12259)
!12267 = !DILocation(line: 8742, column: 19, scope: !12259)
!12268 = !DILocation(line: 8742, column: 36, scope: !12259)
!12269 = !DILocation(line: 8742, column: 17, scope: !12259)
!12270 = !DILocation(line: 8744, column: 14, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 8744, column: 3)
!12272 = !DILocation(line: 8744, column: 12, scope: !12271)
!12273 = !DILocation(line: 8744, column: 8, scope: !12271)
!12274 = !DILocation(line: 8744, column: 21, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 8744, column: 3)
!12276 = !DILocation(line: 8744, column: 25, scope: !12275)
!12277 = !DILocation(line: 8744, column: 3, scope: !12271)
!12278 = !DILocation(line: 8747, column: 19, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 8745, column: 5)
!12280 = !DILocation(line: 8747, column: 23, scope: !12279)
!12281 = !DILocation(line: 8747, column: 30, scope: !12279)
!12282 = !DILocation(line: 8747, column: 28, scope: !12279)
!12283 = !DILocation(line: 8747, column: 36, scope: !12279)
!12284 = !DILocation(line: 8747, column: 34, scope: !12279)
!12285 = !DILocation(line: 8747, column: 16, scope: !12279)
!12286 = !DILocation(line: 8748, column: 17, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 8748, column: 5)
!12288 = !DILocation(line: 8748, column: 10, scope: !12287)
!12289 = !DILocation(line: 8748, column: 22, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 8748, column: 5)
!12291 = !DILocation(line: 8748, column: 31, scope: !12290)
!12292 = !DILocation(line: 8748, column: 29, scope: !12290)
!12293 = !DILocation(line: 8748, column: 5, scope: !12287)
!12294 = !DILocation(line: 8750, column: 11, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 8750, column: 11)
!12296 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 8749, column: 7)
!12297 = !DILocation(line: 8750, column: 18, scope: !12295)
!12298 = !DILocation(line: 8750, column: 11, scope: !12296)
!12299 = !DILocation(line: 8752, column: 20, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 8751, column: 9)
!12301 = !DILocation(line: 8752, column: 31, scope: !12300)
!12302 = !DILocation(line: 8752, column: 18, scope: !12300)
!12303 = !DILocation(line: 8753, column: 21, scope: !12300)
!12304 = !DILocation(line: 8753, column: 32, scope: !12300)
!12305 = !DILocation(line: 8753, column: 19, scope: !12300)
!12306 = !DILocation(line: 8754, column: 9, scope: !12300)
!12307 = !DILocation(line: 8757, column: 21, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 8756, column: 9)
!12309 = !DILocation(line: 8757, column: 35, scope: !12308)
!12310 = !DILocation(line: 8757, column: 44, scope: !12308)
!12311 = !DILocation(line: 8757, column: 42, scope: !12308)
!12312 = !DILocation(line: 8757, column: 32, scope: !12308)
!12313 = !DILocation(line: 8757, column: 50, scope: !12308)
!12314 = !DILocation(line: 8757, column: 18, scope: !12308)
!12315 = !DILocation(line: 8758, column: 22, scope: !12308)
!12316 = !DILocation(line: 8758, column: 36, scope: !12308)
!12317 = !DILocation(line: 8758, column: 45, scope: !12308)
!12318 = !DILocation(line: 8758, column: 43, scope: !12308)
!12319 = !DILocation(line: 8758, column: 33, scope: !12308)
!12320 = !DILocation(line: 8758, column: 51, scope: !12308)
!12321 = !DILocation(line: 8758, column: 19, scope: !12308)
!12322 = !DILocation(line: 8761, column: 13, scope: !12296)
!12323 = !DILocation(line: 8761, column: 21, scope: !12296)
!12324 = !DILocation(line: 8761, column: 19, scope: !12296)
!12325 = !DILocation(line: 8761, column: 11, scope: !12296)
!12326 = !DILocation(line: 8762, column: 20, scope: !12296)
!12327 = !DILocation(line: 8762, column: 39, scope: !12296)
!12328 = !DILocation(line: 8762, column: 37, scope: !12296)
!12329 = !DILocation(line: 8762, column: 50, scope: !12296)
!12330 = !DILocation(line: 8762, column: 48, scope: !12296)
!12331 = !DILocation(line: 8762, column: 30, scope: !12296)
!12332 = !DILocation(line: 8762, column: 18, scope: !12296)
!12333 = !DILocation(line: 8763, column: 11, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 8763, column: 11)
!12335 = !DILocation(line: 8763, column: 11, scope: !12296)
!12336 = !DILocation(line: 8765, column: 15, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 8764, column: 9)
!12338 = !DILocation(line: 8765, column: 22, scope: !12337)
!12339 = !DILocation(line: 8765, column: 32, scope: !12337)
!12340 = !DILocation(line: 8765, column: 39, scope: !12337)
!12341 = !DILocation(line: 8765, column: 29, scope: !12337)
!12342 = !DILocation(line: 8765, column: 49, scope: !12337)
!12343 = !DILocation(line: 8765, column: 56, scope: !12337)
!12344 = !DILocation(line: 8765, column: 46, scope: !12337)
!12345 = !DILocation(line: 8765, column: 64, scope: !12337)
!12346 = !DILocation(line: 8765, column: 62, scope: !12337)
!12347 = !DILocation(line: 8765, column: 12, scope: !12337)
!12348 = !DILocation(line: 8766, column: 21, scope: !12337)
!12349 = !DILocation(line: 8766, column: 19, scope: !12337)
!12350 = !DILocation(line: 8767, column: 9, scope: !12337)
!12351 = !DILocation(line: 8770, column: 15, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 8769, column: 9)
!12353 = !DILocation(line: 8770, column: 22, scope: !12352)
!12354 = !DILocation(line: 8770, column: 32, scope: !12352)
!12355 = !DILocation(line: 8770, column: 39, scope: !12352)
!12356 = !DILocation(line: 8770, column: 29, scope: !12352)
!12357 = !DILocation(line: 8770, column: 49, scope: !12352)
!12358 = !DILocation(line: 8770, column: 56, scope: !12352)
!12359 = !DILocation(line: 8770, column: 46, scope: !12352)
!12360 = !DILocation(line: 8770, column: 64, scope: !12352)
!12361 = !DILocation(line: 8770, column: 62, scope: !12352)
!12362 = !DILocation(line: 8770, column: 12, scope: !12352)
!12363 = !DILocation(line: 8771, column: 21, scope: !12352)
!12364 = !DILocation(line: 8771, column: 19, scope: !12352)
!12365 = !DILocation(line: 8773, column: 24, scope: !12296)
!12366 = !DILocation(line: 8773, column: 16, scope: !12296)
!12367 = !DILocation(line: 8773, column: 34, scope: !12296)
!12368 = !DILocation(line: 8773, column: 43, scope: !12296)
!12369 = !DILocation(line: 8773, column: 41, scope: !12296)
!12370 = !DILocation(line: 8773, column: 13, scope: !12296)
!12371 = !DILocation(line: 8774, column: 16, scope: !12296)
!12372 = !DILocation(line: 8774, column: 24, scope: !12296)
!12373 = !DILocation(line: 8774, column: 22, scope: !12296)
!12374 = !DILocation(line: 8774, column: 40, scope: !12296)
!12375 = !DILocation(line: 8774, column: 36, scope: !12296)
!12376 = !DILocation(line: 8774, column: 13, scope: !12296)
!12377 = !DILocation(line: 8776, column: 11, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 8776, column: 11)
!12379 = !DILocation(line: 8776, column: 22, scope: !12378)
!12380 = !DILocation(line: 8776, column: 11, scope: !12296)
!12381 = !DILocation(line: 8778, column: 55, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 8777, column: 9)
!12383 = !DILocation(line: 8778, column: 43, scope: !12382)
!12384 = !DILocation(line: 8778, column: 31, scope: !12382)
!12385 = !DILocation(line: 8778, column: 19, scope: !12382)
!12386 = !DILocation(line: 8779, column: 18, scope: !12382)
!12387 = !DILocation(line: 8779, column: 27, scope: !12382)
!12388 = !DILocation(line: 8779, column: 36, scope: !12382)
!12389 = !DILocation(line: 8779, column: 33, scope: !12382)
!12390 = !DILocation(line: 8779, column: 24, scope: !12382)
!12391 = !DILocation(line: 8779, column: 15, scope: !12382)
!12392 = !DILocation(line: 8780, column: 9, scope: !12382)
!12393 = !DILocation(line: 8783, column: 22, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 8782, column: 9)
!12395 = !DILocation(line: 8783, column: 28, scope: !12394)
!12396 = !DILocation(line: 8783, column: 21, scope: !12394)
!12397 = !DILocation(line: 8783, column: 19, scope: !12394)
!12398 = !DILocation(line: 8784, column: 18, scope: !12394)
!12399 = !DILocation(line: 8784, column: 13, scope: !12394)
!12400 = !DILocation(line: 8784, column: 16, scope: !12394)
!12401 = !DILocation(line: 8785, column: 22, scope: !12394)
!12402 = !DILocation(line: 8785, column: 28, scope: !12394)
!12403 = !DILocation(line: 8785, column: 21, scope: !12394)
!12404 = !DILocation(line: 8785, column: 19, scope: !12394)
!12405 = !DILocation(line: 8786, column: 18, scope: !12394)
!12406 = !DILocation(line: 8786, column: 13, scope: !12394)
!12407 = !DILocation(line: 8786, column: 16, scope: !12394)
!12408 = !DILocation(line: 8787, column: 22, scope: !12394)
!12409 = !DILocation(line: 8787, column: 28, scope: !12394)
!12410 = !DILocation(line: 8787, column: 21, scope: !12394)
!12411 = !DILocation(line: 8787, column: 19, scope: !12394)
!12412 = !DILocation(line: 8788, column: 18, scope: !12394)
!12413 = !DILocation(line: 8788, column: 13, scope: !12394)
!12414 = !DILocation(line: 8788, column: 16, scope: !12394)
!12415 = !DILocation(line: 8789, column: 22, scope: !12394)
!12416 = !DILocation(line: 8789, column: 28, scope: !12394)
!12417 = !DILocation(line: 8789, column: 21, scope: !12394)
!12418 = !DILocation(line: 8789, column: 19, scope: !12394)
!12419 = !DILocation(line: 8790, column: 18, scope: !12394)
!12420 = !DILocation(line: 8790, column: 13, scope: !12394)
!12421 = !DILocation(line: 8790, column: 16, scope: !12394)
!12422 = !DILocation(line: 8791, column: 20, scope: !12394)
!12423 = !DILocation(line: 8794, column: 19, scope: !12394)
!12424 = !DILocation(line: 8794, column: 25, scope: !12394)
!12425 = !DILocation(line: 8794, column: 35, scope: !12394)
!12426 = !DILocation(line: 8794, column: 44, scope: !12394)
!12427 = !DILocation(line: 8794, column: 41, scope: !12394)
!12428 = !DILocation(line: 8794, column: 32, scope: !12394)
!12429 = !DILocation(line: 8794, column: 15, scope: !12394)
!12430 = !DILocation(line: 8796, column: 21, scope: !12296)
!12431 = !DILocation(line: 8796, column: 18, scope: !12296)
!12432 = !DILocation(line: 8797, column: 7, scope: !12296)
!12433 = !DILocation(line: 8748, column: 42, scope: !12290)
!12434 = !DILocation(line: 8748, column: 5, scope: !12290)
!12435 = distinct !{!12435, !12293, !12436}
!12436 = !DILocation(line: 8797, column: 7, scope: !12287)
!12437 = !DILocation(line: 8798, column: 5, scope: !12279)
!12438 = !DILocation(line: 8744, column: 33, scope: !12275)
!12439 = !DILocation(line: 8744, column: 3, scope: !12275)
!12440 = distinct !{!12440, !12277, !12441}
!12441 = !DILocation(line: 8798, column: 5, scope: !12271)
!12442 = !DILocation(line: 8799, column: 3, scope: !12176)
!12443 = !DILocation(line: 8799, column: 10, scope: !12176)
!12444 = !DILocation(line: 8799, column: 21, scope: !12176)
!12445 = !DILocation(line: 8801, column: 18, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 8800, column: 5)
!12447 = !DILocation(line: 8801, column: 24, scope: !12446)
!12448 = !DILocation(line: 8801, column: 17, scope: !12446)
!12449 = !DILocation(line: 8801, column: 15, scope: !12446)
!12450 = !DILocation(line: 8802, column: 14, scope: !12446)
!12451 = !DILocation(line: 8802, column: 9, scope: !12446)
!12452 = !DILocation(line: 8802, column: 12, scope: !12446)
!12453 = !DILocation(line: 8803, column: 14, scope: !12446)
!12454 = !DILocation(line: 8803, column: 20, scope: !12446)
!12455 = !DILocation(line: 8803, column: 11, scope: !12446)
!12456 = !DILocation(line: 8804, column: 16, scope: !12446)
!12457 = distinct !{!12457, !12442, !12458}
!12458 = !DILocation(line: 8805, column: 5, scope: !12176)
!12459 = !DILocation(line: 8807, column: 3, scope: !12176)
!12460 = !DILocation(line: 8808, column: 3, scope: !12176)
!12461 = distinct !DISubprogram(name: "rotateContigSamples8bits", scope: !3, file: !3, line: 7846, type: !12462, scopeLine: 7848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!12462 = !DISubroutineType(types: !12463)
!12463 = !{!110, !103, !103, !103, !105, !105, !105, !116, !116}
!12464 = !DILocalVariable(name: "rotation", arg: 1, scope: !12461, file: !3, line: 7846, type: !103)
!12465 = !DILocation(line: 7846, column: 33, scope: !12461)
!12466 = !DILocalVariable(name: "spp", arg: 2, scope: !12461, file: !3, line: 7846, type: !103)
!12467 = !DILocation(line: 7846, column: 50, scope: !12461)
!12468 = !DILocalVariable(name: "bps", arg: 3, scope: !12461, file: !3, line: 7846, type: !103)
!12469 = !DILocation(line: 7846, column: 62, scope: !12461)
!12470 = !DILocalVariable(name: "width", arg: 4, scope: !12461, file: !3, line: 7846, type: !105)
!12471 = !DILocation(line: 7846, column: 74, scope: !12461)
!12472 = !DILocalVariable(name: "length", arg: 5, scope: !12461, file: !3, line: 7847, type: !105)
!12473 = !DILocation(line: 7847, column: 33, scope: !12461)
!12474 = !DILocalVariable(name: "col", arg: 6, scope: !12461, file: !3, line: 7847, type: !105)
!12475 = !DILocation(line: 7847, column: 50, scope: !12461)
!12476 = !DILocalVariable(name: "src", arg: 7, scope: !12461, file: !3, line: 7847, type: !116)
!12477 = !DILocation(line: 7847, column: 62, scope: !12461)
!12478 = !DILocalVariable(name: "dst", arg: 8, scope: !12461, file: !3, line: 7847, type: !116)
!12479 = !DILocation(line: 7847, column: 74, scope: !12461)
!12480 = !DILocalVariable(name: "ready_bits", scope: !12461, file: !3, line: 7849, type: !110)
!12481 = !DILocation(line: 7849, column: 12, scope: !12461)
!12482 = !DILocalVariable(name: "src_byte", scope: !12461, file: !3, line: 7850, type: !105)
!12483 = !DILocation(line: 7850, column: 12, scope: !12461)
!12484 = !DILocalVariable(name: "src_bit", scope: !12461, file: !3, line: 7850, type: !105)
!12485 = !DILocation(line: 7850, column: 26, scope: !12461)
!12486 = !DILocalVariable(name: "row", scope: !12461, file: !3, line: 7851, type: !105)
!12487 = !DILocation(line: 7851, column: 12, scope: !12461)
!12488 = !DILocalVariable(name: "rowsize", scope: !12461, file: !3, line: 7851, type: !105)
!12489 = !DILocation(line: 7851, column: 17, scope: !12461)
!12490 = !DILocalVariable(name: "bit_offset", scope: !12461, file: !3, line: 7851, type: !105)
!12491 = !DILocation(line: 7851, column: 30, scope: !12461)
!12492 = !DILocalVariable(name: "matchbits", scope: !12461, file: !3, line: 7852, type: !114)
!12493 = !DILocation(line: 7852, column: 12, scope: !12461)
!12494 = !DILocalVariable(name: "maskbits", scope: !12461, file: !3, line: 7852, type: !114)
!12495 = !DILocation(line: 7852, column: 27, scope: !12461)
!12496 = !DILocalVariable(name: "buff1", scope: !12461, file: !3, line: 7853, type: !114)
!12497 = !DILocation(line: 7853, column: 12, scope: !12461)
!12498 = !DILocalVariable(name: "buff2", scope: !12461, file: !3, line: 7853, type: !114)
!12499 = !DILocation(line: 7853, column: 23, scope: !12461)
!12500 = !DILocalVariable(name: "next", scope: !12461, file: !3, line: 7854, type: !116)
!12501 = !DILocation(line: 7854, column: 12, scope: !12461)
!12502 = !DILocalVariable(name: "sample", scope: !12461, file: !3, line: 7855, type: !7616)
!12503 = !DILocation(line: 7855, column: 13, scope: !12461)
!12504 = !DILocation(line: 7857, column: 8, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 7857, column: 7)
!12506 = !DILocation(line: 7857, column: 12, scope: !12505)
!12507 = !DILocation(line: 7857, column: 21, scope: !12505)
!12508 = !DILocation(line: 7857, column: 25, scope: !12505)
!12509 = !DILocation(line: 7857, column: 29, scope: !12505)
!12510 = !DILocation(line: 7857, column: 7, scope: !12461)
!12511 = !DILocation(line: 7859, column: 5, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 7858, column: 5)
!12513 = !DILocation(line: 7860, column: 5, scope: !12512)
!12514 = !DILocation(line: 7863, column: 15, scope: !12461)
!12515 = !DILocation(line: 7863, column: 21, scope: !12461)
!12516 = !DILocation(line: 7863, column: 19, scope: !12461)
!12517 = !DILocation(line: 7863, column: 27, scope: !12461)
!12518 = !DILocation(line: 7863, column: 25, scope: !12461)
!12519 = !DILocation(line: 7863, column: 34, scope: !12461)
!12520 = !DILocation(line: 7863, column: 39, scope: !12461)
!12521 = !DILocation(line: 7863, column: 11, scope: !12461)
!12522 = !DILocation(line: 7864, column: 14, scope: !12461)
!12523 = !DILocation(line: 7865, column: 34, scope: !12461)
!12524 = !DILocation(line: 7865, column: 32, scope: !12461)
!12525 = !DILocation(line: 7865, column: 25, scope: !12461)
!12526 = !DILocation(line: 7865, column: 15, scope: !12461)
!12527 = !DILocation(line: 7865, column: 12, scope: !12461)
!12528 = !DILocation(line: 7866, column: 17, scope: !12461)
!12529 = !DILocation(line: 7866, column: 9, scope: !12461)
!12530 = !DILocation(line: 7868, column: 12, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 7868, column: 3)
!12532 = !DILocation(line: 7868, column: 8, scope: !12531)
!12533 = !DILocation(line: 7868, column: 17, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12531, file: !3, line: 7868, column: 3)
!12535 = !DILocation(line: 7868, column: 23, scope: !12534)
!12536 = !DILocation(line: 7868, column: 21, scope: !12534)
!12537 = !DILocation(line: 7868, column: 3, scope: !12531)
!12538 = !DILocation(line: 7870, column: 18, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 7869, column: 5)
!12540 = !DILocation(line: 7870, column: 24, scope: !12539)
!12541 = !DILocation(line: 7870, column: 22, scope: !12539)
!12542 = !DILocation(line: 7870, column: 30, scope: !12539)
!12543 = !DILocation(line: 7870, column: 28, scope: !12539)
!12544 = !DILocation(line: 7870, column: 16, scope: !12539)
!12545 = !DILocation(line: 7871, column: 17, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12539, file: !3, line: 7871, column: 5)
!12547 = !DILocation(line: 7871, column: 10, scope: !12546)
!12548 = !DILocation(line: 7871, column: 22, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 7871, column: 5)
!12550 = !DILocation(line: 7871, column: 31, scope: !12549)
!12551 = !DILocation(line: 7871, column: 29, scope: !12549)
!12552 = !DILocation(line: 7871, column: 5, scope: !12546)
!12553 = !DILocation(line: 7873, column: 11, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 7873, column: 11)
!12555 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 7872, column: 7)
!12556 = !DILocation(line: 7873, column: 18, scope: !12554)
!12557 = !DILocation(line: 7873, column: 11, scope: !12555)
!12558 = !DILocation(line: 7875, column: 20, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12554, file: !3, line: 7874, column: 9)
!12560 = !DILocation(line: 7875, column: 31, scope: !12559)
!12561 = !DILocation(line: 7875, column: 18, scope: !12559)
!12562 = !DILocation(line: 7876, column: 20, scope: !12559)
!12563 = !DILocation(line: 7876, column: 31, scope: !12559)
!12564 = !DILocation(line: 7876, column: 18, scope: !12559)
!12565 = !DILocation(line: 7877, column: 9, scope: !12559)
!12566 = !DILocation(line: 7880, column: 21, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12554, file: !3, line: 7879, column: 9)
!12568 = !DILocation(line: 7880, column: 35, scope: !12567)
!12569 = !DILocation(line: 7880, column: 44, scope: !12567)
!12570 = !DILocation(line: 7880, column: 42, scope: !12567)
!12571 = !DILocation(line: 7880, column: 32, scope: !12567)
!12572 = !DILocation(line: 7880, column: 50, scope: !12567)
!12573 = !DILocation(line: 7880, column: 18, scope: !12567)
!12574 = !DILocation(line: 7881, column: 21, scope: !12567)
!12575 = !DILocation(line: 7881, column: 35, scope: !12567)
!12576 = !DILocation(line: 7881, column: 44, scope: !12567)
!12577 = !DILocation(line: 7881, column: 42, scope: !12567)
!12578 = !DILocation(line: 7881, column: 32, scope: !12567)
!12579 = !DILocation(line: 7881, column: 50, scope: !12567)
!12580 = !DILocation(line: 7881, column: 18, scope: !12567)
!12581 = !DILocation(line: 7884, column: 15, scope: !12555)
!12582 = !DILocation(line: 7884, column: 7, scope: !12555)
!12583 = !DILocation(line: 7886, column: 26, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 7885, column: 2)
!12585 = !DILocation(line: 7886, column: 32, scope: !12584)
!12586 = !DILocation(line: 7886, column: 30, scope: !12584)
!12587 = !DILocation(line: 7886, column: 44, scope: !12584)
!12588 = !DILocation(line: 7886, column: 50, scope: !12584)
!12589 = !DILocation(line: 7886, column: 48, scope: !12584)
!12590 = !DILocation(line: 7886, column: 41, scope: !12584)
!12591 = !DILocation(line: 7886, column: 24, scope: !12584)
!12592 = !DILocation(line: 7887, column: 19, scope: !12584)
!12593 = !DILocation(line: 7888, column: 26, scope: !12584)
!12594 = !DILocation(line: 7888, column: 32, scope: !12584)
!12595 = !DILocation(line: 7888, column: 30, scope: !12584)
!12596 = !DILocation(line: 7888, column: 44, scope: !12584)
!12597 = !DILocation(line: 7888, column: 50, scope: !12584)
!12598 = !DILocation(line: 7888, column: 48, scope: !12584)
!12599 = !DILocation(line: 7888, column: 41, scope: !12584)
!12600 = !DILocation(line: 7888, column: 24, scope: !12584)
!12601 = !DILocation(line: 7889, column: 12, scope: !12584)
!12602 = !DILocation(line: 7890, column: 73, scope: !12584)
!12603 = !DILocation(line: 7890, column: 12, scope: !12584)
!12604 = !DILocation(line: 7891, column: 19, scope: !12584)
!12605 = !DILocation(line: 7893, column: 19, scope: !12555)
!12606 = !DILocation(line: 7893, column: 36, scope: !12555)
!12607 = !DILocation(line: 7893, column: 34, scope: !12555)
!12608 = !DILocation(line: 7893, column: 46, scope: !12555)
!12609 = !DILocation(line: 7893, column: 44, scope: !12555)
!12610 = !DILocation(line: 7893, column: 28, scope: !12555)
!12611 = !DILocation(line: 7893, column: 17, scope: !12555)
!12612 = !DILocation(line: 7894, column: 18, scope: !12555)
!12613 = !DILocation(line: 7894, column: 17, scope: !12555)
!12614 = !DILocation(line: 7894, column: 16, scope: !12555)
!12615 = !DILocation(line: 7894, column: 26, scope: !12555)
!12616 = !DILocation(line: 7894, column: 24, scope: !12555)
!12617 = !DILocation(line: 7894, column: 41, scope: !12555)
!12618 = !DILocation(line: 7894, column: 37, scope: !12555)
!12619 = !DILocation(line: 7894, column: 15, scope: !12555)
!12620 = !DILocation(line: 7894, column: 13, scope: !12555)
!12621 = !DILocation(line: 7897, column: 11, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 7897, column: 11)
!12623 = !DILocation(line: 7897, column: 22, scope: !12622)
!12624 = !DILocation(line: 7897, column: 11, scope: !12555)
!12625 = !DILocation(line: 7899, column: 18, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12622, file: !3, line: 7898, column: 9)
!12627 = !DILocation(line: 7899, column: 13, scope: !12626)
!12628 = !DILocation(line: 7899, column: 16, scope: !12626)
!12629 = !DILocation(line: 7900, column: 17, scope: !12626)
!12630 = !DILocation(line: 7900, column: 15, scope: !12626)
!12631 = !DILocation(line: 7901, column: 20, scope: !12626)
!12632 = !DILocation(line: 7902, column: 9, scope: !12626)
!12633 = !DILocation(line: 7905, column: 18, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12622, file: !3, line: 7904, column: 9)
!12635 = !DILocation(line: 7905, column: 27, scope: !12634)
!12636 = !DILocation(line: 7905, column: 36, scope: !12634)
!12637 = !DILocation(line: 7905, column: 33, scope: !12634)
!12638 = !DILocation(line: 7905, column: 24, scope: !12634)
!12639 = !DILocation(line: 7905, column: 17, scope: !12634)
!12640 = !DILocation(line: 7905, column: 15, scope: !12634)
!12641 = !DILocation(line: 7907, column: 21, scope: !12555)
!12642 = !DILocation(line: 7907, column: 18, scope: !12555)
!12643 = !DILocation(line: 7908, column: 7, scope: !12555)
!12644 = !DILocation(line: 7871, column: 42, scope: !12549)
!12645 = !DILocation(line: 7871, column: 5, scope: !12549)
!12646 = distinct !{!12646, !12552, !12647}
!12647 = !DILocation(line: 7908, column: 7, scope: !12546)
!12648 = !DILocation(line: 7909, column: 5, scope: !12539)
!12649 = !DILocation(line: 7868, column: 35, scope: !12534)
!12650 = !DILocation(line: 7868, column: 3, scope: !12534)
!12651 = distinct !{!12651, !12537, !12652}
!12652 = !DILocation(line: 7909, column: 5, scope: !12531)
!12653 = !DILocation(line: 7911, column: 7, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 7911, column: 7)
!12655 = !DILocation(line: 7911, column: 18, scope: !12654)
!12656 = !DILocation(line: 7911, column: 7, scope: !12461)
!12657 = !DILocation(line: 7913, column: 14, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 7912, column: 5)
!12659 = !DILocation(line: 7913, column: 49, scope: !12658)
!12660 = !DILocation(line: 7913, column: 47, scope: !12658)
!12661 = !DILocation(line: 7913, column: 41, scope: !12658)
!12662 = !DILocation(line: 7913, column: 20, scope: !12658)
!12663 = !DILocation(line: 7913, column: 13, scope: !12658)
!12664 = !DILocation(line: 7913, column: 11, scope: !12658)
!12665 = !DILocation(line: 7914, column: 14, scope: !12658)
!12666 = !DILocation(line: 7914, column: 9, scope: !12658)
!12667 = !DILocation(line: 7914, column: 12, scope: !12658)
!12668 = !DILocation(line: 7915, column: 5, scope: !12658)
!12669 = !DILocation(line: 7917, column: 3, scope: !12461)
!12670 = !DILocation(line: 7918, column: 3, scope: !12461)
!12671 = distinct !DISubprogram(name: "rotateContigSamples16bits", scope: !3, file: !3, line: 7922, type: !12462, scopeLine: 7924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!12672 = !DILocalVariable(name: "rotation", arg: 1, scope: !12671, file: !3, line: 7922, type: !103)
!12673 = !DILocation(line: 7922, column: 34, scope: !12671)
!12674 = !DILocalVariable(name: "spp", arg: 2, scope: !12671, file: !3, line: 7922, type: !103)
!12675 = !DILocation(line: 7922, column: 51, scope: !12671)
!12676 = !DILocalVariable(name: "bps", arg: 3, scope: !12671, file: !3, line: 7922, type: !103)
!12677 = !DILocation(line: 7922, column: 63, scope: !12671)
!12678 = !DILocalVariable(name: "width", arg: 4, scope: !12671, file: !3, line: 7922, type: !105)
!12679 = !DILocation(line: 7922, column: 75, scope: !12671)
!12680 = !DILocalVariable(name: "length", arg: 5, scope: !12671, file: !3, line: 7923, type: !105)
!12681 = !DILocation(line: 7923, column: 33, scope: !12671)
!12682 = !DILocalVariable(name: "col", arg: 6, scope: !12671, file: !3, line: 7923, type: !105)
!12683 = !DILocation(line: 7923, column: 50, scope: !12671)
!12684 = !DILocalVariable(name: "src", arg: 7, scope: !12671, file: !3, line: 7923, type: !116)
!12685 = !DILocation(line: 7923, column: 62, scope: !12671)
!12686 = !DILocalVariable(name: "dst", arg: 8, scope: !12671, file: !3, line: 7923, type: !116)
!12687 = !DILocation(line: 7923, column: 74, scope: !12671)
!12688 = !DILocalVariable(name: "ready_bits", scope: !12671, file: !3, line: 7925, type: !110)
!12689 = !DILocation(line: 7925, column: 12, scope: !12671)
!12690 = !DILocalVariable(name: "row", scope: !12671, file: !3, line: 7926, type: !105)
!12691 = !DILocation(line: 7926, column: 12, scope: !12671)
!12692 = !DILocalVariable(name: "rowsize", scope: !12671, file: !3, line: 7926, type: !105)
!12693 = !DILocation(line: 7926, column: 17, scope: !12671)
!12694 = !DILocalVariable(name: "bit_offset", scope: !12671, file: !3, line: 7926, type: !105)
!12695 = !DILocation(line: 7926, column: 26, scope: !12671)
!12696 = !DILocalVariable(name: "src_byte", scope: !12671, file: !3, line: 7927, type: !105)
!12697 = !DILocation(line: 7927, column: 12, scope: !12671)
!12698 = !DILocalVariable(name: "src_bit", scope: !12671, file: !3, line: 7927, type: !105)
!12699 = !DILocation(line: 7927, column: 26, scope: !12671)
!12700 = !DILocalVariable(name: "matchbits", scope: !12671, file: !3, line: 7928, type: !103)
!12701 = !DILocation(line: 7928, column: 12, scope: !12671)
!12702 = !DILocalVariable(name: "maskbits", scope: !12671, file: !3, line: 7928, type: !103)
!12703 = !DILocation(line: 7928, column: 27, scope: !12671)
!12704 = !DILocalVariable(name: "buff1", scope: !12671, file: !3, line: 7929, type: !103)
!12705 = !DILocation(line: 7929, column: 12, scope: !12671)
!12706 = !DILocalVariable(name: "buff2", scope: !12671, file: !3, line: 7929, type: !103)
!12707 = !DILocation(line: 7929, column: 23, scope: !12671)
!12708 = !DILocalVariable(name: "bytebuff", scope: !12671, file: !3, line: 7930, type: !114)
!12709 = !DILocation(line: 7930, column: 12, scope: !12671)
!12710 = !DILocalVariable(name: "next", scope: !12671, file: !3, line: 7931, type: !116)
!12711 = !DILocation(line: 7931, column: 12, scope: !12671)
!12712 = !DILocalVariable(name: "sample", scope: !12671, file: !3, line: 7932, type: !7616)
!12713 = !DILocation(line: 7932, column: 13, scope: !12671)
!12714 = !DILocation(line: 7934, column: 8, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 7934, column: 7)
!12716 = !DILocation(line: 7934, column: 12, scope: !12715)
!12717 = !DILocation(line: 7934, column: 21, scope: !12715)
!12718 = !DILocation(line: 7934, column: 25, scope: !12715)
!12719 = !DILocation(line: 7934, column: 29, scope: !12715)
!12720 = !DILocation(line: 7934, column: 7, scope: !12671)
!12721 = !DILocation(line: 7936, column: 5, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 7935, column: 5)
!12723 = !DILocation(line: 7937, column: 5, scope: !12722)
!12724 = !DILocation(line: 7940, column: 15, scope: !12671)
!12725 = !DILocation(line: 7940, column: 21, scope: !12671)
!12726 = !DILocation(line: 7940, column: 19, scope: !12671)
!12727 = !DILocation(line: 7940, column: 27, scope: !12671)
!12728 = !DILocation(line: 7940, column: 25, scope: !12671)
!12729 = !DILocation(line: 7940, column: 34, scope: !12671)
!12730 = !DILocation(line: 7940, column: 39, scope: !12671)
!12731 = !DILocation(line: 7940, column: 11, scope: !12671)
!12732 = !DILocation(line: 7941, column: 14, scope: !12671)
!12733 = !DILocation(line: 7942, column: 35, scope: !12671)
!12734 = !DILocation(line: 7942, column: 33, scope: !12671)
!12735 = !DILocation(line: 7942, column: 26, scope: !12671)
!12736 = !DILocation(line: 7942, column: 15, scope: !12671)
!12737 = !DILocation(line: 7942, column: 12, scope: !12671)
!12738 = !DILocation(line: 7943, column: 17, scope: !12671)
!12739 = !DILocation(line: 7943, column: 9, scope: !12671)
!12740 = !DILocation(line: 7944, column: 12, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 7944, column: 3)
!12742 = !DILocation(line: 7944, column: 8, scope: !12741)
!12743 = !DILocation(line: 7944, column: 17, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12741, file: !3, line: 7944, column: 3)
!12745 = !DILocation(line: 7944, column: 23, scope: !12744)
!12746 = !DILocation(line: 7944, column: 21, scope: !12744)
!12747 = !DILocation(line: 7944, column: 3, scope: !12741)
!12748 = !DILocation(line: 7946, column: 18, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 7945, column: 5)
!12750 = !DILocation(line: 7946, column: 24, scope: !12749)
!12751 = !DILocation(line: 7946, column: 22, scope: !12749)
!12752 = !DILocation(line: 7946, column: 30, scope: !12749)
!12753 = !DILocation(line: 7946, column: 28, scope: !12749)
!12754 = !DILocation(line: 7946, column: 16, scope: !12749)
!12755 = !DILocation(line: 7947, column: 17, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 7947, column: 5)
!12757 = !DILocation(line: 7947, column: 10, scope: !12756)
!12758 = !DILocation(line: 7947, column: 22, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12756, file: !3, line: 7947, column: 5)
!12760 = !DILocation(line: 7947, column: 31, scope: !12759)
!12761 = !DILocation(line: 7947, column: 29, scope: !12759)
!12762 = !DILocation(line: 7947, column: 5, scope: !12756)
!12763 = !DILocation(line: 7949, column: 11, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 7949, column: 11)
!12765 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 7948, column: 7)
!12766 = !DILocation(line: 7949, column: 18, scope: !12764)
!12767 = !DILocation(line: 7949, column: 11, scope: !12765)
!12768 = !DILocation(line: 7951, column: 20, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 7950, column: 9)
!12770 = !DILocation(line: 7951, column: 31, scope: !12769)
!12771 = !DILocation(line: 7951, column: 18, scope: !12769)
!12772 = !DILocation(line: 7952, column: 20, scope: !12769)
!12773 = !DILocation(line: 7952, column: 31, scope: !12769)
!12774 = !DILocation(line: 7952, column: 18, scope: !12769)
!12775 = !DILocation(line: 7953, column: 9, scope: !12769)
!12776 = !DILocation(line: 7956, column: 21, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 7955, column: 9)
!12778 = !DILocation(line: 7956, column: 35, scope: !12777)
!12779 = !DILocation(line: 7956, column: 44, scope: !12777)
!12780 = !DILocation(line: 7956, column: 42, scope: !12777)
!12781 = !DILocation(line: 7956, column: 32, scope: !12777)
!12782 = !DILocation(line: 7956, column: 50, scope: !12777)
!12783 = !DILocation(line: 7956, column: 18, scope: !12777)
!12784 = !DILocation(line: 7957, column: 21, scope: !12777)
!12785 = !DILocation(line: 7957, column: 35, scope: !12777)
!12786 = !DILocation(line: 7957, column: 44, scope: !12777)
!12787 = !DILocation(line: 7957, column: 42, scope: !12777)
!12788 = !DILocation(line: 7957, column: 32, scope: !12777)
!12789 = !DILocation(line: 7957, column: 50, scope: !12777)
!12790 = !DILocation(line: 7957, column: 18, scope: !12777)
!12791 = !DILocation(line: 7960, column: 15, scope: !12765)
!12792 = !DILocation(line: 7960, column: 7, scope: !12765)
!12793 = !DILocation(line: 7962, column: 26, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 7961, column: 2)
!12795 = !DILocation(line: 7962, column: 32, scope: !12794)
!12796 = !DILocation(line: 7962, column: 30, scope: !12794)
!12797 = !DILocation(line: 7962, column: 44, scope: !12794)
!12798 = !DILocation(line: 7962, column: 50, scope: !12794)
!12799 = !DILocation(line: 7962, column: 48, scope: !12794)
!12800 = !DILocation(line: 7962, column: 41, scope: !12794)
!12801 = !DILocation(line: 7962, column: 24, scope: !12794)
!12802 = !DILocation(line: 7963, column: 19, scope: !12794)
!12803 = !DILocation(line: 7964, column: 26, scope: !12794)
!12804 = !DILocation(line: 7964, column: 32, scope: !12794)
!12805 = !DILocation(line: 7964, column: 30, scope: !12794)
!12806 = !DILocation(line: 7964, column: 44, scope: !12794)
!12807 = !DILocation(line: 7964, column: 50, scope: !12794)
!12808 = !DILocation(line: 7964, column: 48, scope: !12794)
!12809 = !DILocation(line: 7964, column: 41, scope: !12794)
!12810 = !DILocation(line: 7964, column: 24, scope: !12794)
!12811 = !DILocation(line: 7965, column: 12, scope: !12794)
!12812 = !DILocation(line: 7966, column: 73, scope: !12794)
!12813 = !DILocation(line: 7966, column: 12, scope: !12794)
!12814 = !DILocation(line: 7967, column: 19, scope: !12794)
!12815 = !DILocation(line: 7969, column: 19, scope: !12765)
!12816 = !DILocation(line: 7969, column: 37, scope: !12765)
!12817 = !DILocation(line: 7969, column: 35, scope: !12765)
!12818 = !DILocation(line: 7969, column: 47, scope: !12765)
!12819 = !DILocation(line: 7969, column: 45, scope: !12765)
!12820 = !DILocation(line: 7969, column: 28, scope: !12765)
!12821 = !DILocation(line: 7969, column: 17, scope: !12765)
!12822 = !DILocation(line: 7970, column: 11, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 7970, column: 11)
!12824 = !DILocation(line: 7970, column: 11, scope: !12765)
!12825 = !DILocation(line: 7971, column: 18, scope: !12823)
!12826 = !DILocation(line: 7971, column: 26, scope: !12823)
!12827 = !DILocation(line: 7971, column: 34, scope: !12823)
!12828 = !DILocation(line: 7971, column: 32, scope: !12823)
!12829 = !DILocation(line: 7971, column: 17, scope: !12823)
!12830 = !DILocation(line: 7971, column: 15, scope: !12823)
!12831 = !DILocation(line: 7971, column: 9, scope: !12823)
!12832 = !DILocation(line: 7973, column: 18, scope: !12823)
!12833 = !DILocation(line: 7973, column: 26, scope: !12823)
!12834 = !DILocation(line: 7973, column: 34, scope: !12823)
!12835 = !DILocation(line: 7973, column: 32, scope: !12823)
!12836 = !DILocation(line: 7973, column: 17, scope: !12823)
!12837 = !DILocation(line: 7973, column: 15, scope: !12823)
!12838 = !DILocation(line: 7975, column: 16, scope: !12765)
!12839 = !DILocation(line: 7975, column: 24, scope: !12765)
!12840 = !DILocation(line: 7975, column: 22, scope: !12765)
!12841 = !DILocation(line: 7975, column: 39, scope: !12765)
!12842 = !DILocation(line: 7975, column: 35, scope: !12765)
!12843 = !DILocation(line: 7975, column: 15, scope: !12765)
!12844 = !DILocation(line: 7975, column: 13, scope: !12765)
!12845 = !DILocation(line: 7978, column: 11, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 7978, column: 11)
!12847 = !DILocation(line: 7978, column: 22, scope: !12846)
!12848 = !DILocation(line: 7978, column: 11, scope: !12765)
!12849 = !DILocation(line: 7980, column: 21, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 7979, column: 9)
!12851 = !DILocation(line: 7980, column: 27, scope: !12850)
!12852 = !DILocation(line: 7980, column: 20, scope: !12850)
!12853 = !DILocation(line: 7980, column: 18, scope: !12850)
!12854 = !DILocation(line: 7981, column: 18, scope: !12850)
!12855 = !DILocation(line: 7981, column: 13, scope: !12850)
!12856 = !DILocation(line: 7981, column: 16, scope: !12850)
!12857 = !DILocation(line: 7982, column: 20, scope: !12850)
!12858 = !DILocation(line: 7984, column: 19, scope: !12850)
!12859 = !DILocation(line: 7984, column: 25, scope: !12850)
!12860 = !DILocation(line: 7984, column: 34, scope: !12850)
!12861 = !DILocation(line: 7984, column: 43, scope: !12850)
!12862 = !DILocation(line: 7984, column: 40, scope: !12850)
!12863 = !DILocation(line: 7984, column: 31, scope: !12850)
!12864 = !DILocation(line: 7984, column: 17, scope: !12850)
!12865 = !DILocation(line: 7984, column: 15, scope: !12850)
!12866 = !DILocation(line: 7985, column: 9, scope: !12850)
!12867 = !DILocation(line: 7988, column: 18, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 7987, column: 9)
!12869 = !DILocation(line: 7989, column: 18, scope: !12868)
!12870 = !DILocation(line: 7989, column: 27, scope: !12868)
!12871 = !DILocation(line: 7989, column: 36, scope: !12868)
!12872 = !DILocation(line: 7989, column: 33, scope: !12868)
!12873 = !DILocation(line: 7989, column: 24, scope: !12868)
!12874 = !DILocation(line: 7989, column: 17, scope: !12868)
!12875 = !DILocation(line: 7989, column: 15, scope: !12868)
!12876 = !DILocation(line: 7991, column: 21, scope: !12765)
!12877 = !DILocation(line: 7991, column: 18, scope: !12765)
!12878 = !DILocation(line: 7992, column: 7, scope: !12765)
!12879 = !DILocation(line: 7947, column: 42, scope: !12759)
!12880 = !DILocation(line: 7947, column: 5, scope: !12759)
!12881 = distinct !{!12881, !12762, !12882}
!12882 = !DILocation(line: 7992, column: 7, scope: !12756)
!12883 = !DILocation(line: 7993, column: 5, scope: !12749)
!12884 = !DILocation(line: 7944, column: 34, scope: !12744)
!12885 = !DILocation(line: 7944, column: 3, scope: !12744)
!12886 = distinct !{!12886, !12747, !12887}
!12887 = !DILocation(line: 7993, column: 5, scope: !12741)
!12888 = !DILocation(line: 7995, column: 7, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 7995, column: 7)
!12890 = !DILocation(line: 7995, column: 18, scope: !12889)
!12891 = !DILocation(line: 7995, column: 7, scope: !12671)
!12892 = !DILocation(line: 7997, column: 17, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 7996, column: 5)
!12894 = !DILocation(line: 7997, column: 23, scope: !12893)
!12895 = !DILocation(line: 7997, column: 16, scope: !12893)
!12896 = !DILocation(line: 7997, column: 14, scope: !12893)
!12897 = !DILocation(line: 7998, column: 14, scope: !12893)
!12898 = !DILocation(line: 7998, column: 9, scope: !12893)
!12899 = !DILocation(line: 7998, column: 12, scope: !12893)
!12900 = !DILocation(line: 7999, column: 5, scope: !12893)
!12901 = !DILocation(line: 8001, column: 3, scope: !12671)
!12902 = !DILocation(line: 8002, column: 3, scope: !12671)
!12903 = distinct !DISubprogram(name: "rotateContigSamples24bits", scope: !3, file: !3, line: 8005, type: !12462, scopeLine: 8007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!12904 = !DILocalVariable(name: "rotation", arg: 1, scope: !12903, file: !3, line: 8005, type: !103)
!12905 = !DILocation(line: 8005, column: 34, scope: !12903)
!12906 = !DILocalVariable(name: "spp", arg: 2, scope: !12903, file: !3, line: 8005, type: !103)
!12907 = !DILocation(line: 8005, column: 51, scope: !12903)
!12908 = !DILocalVariable(name: "bps", arg: 3, scope: !12903, file: !3, line: 8005, type: !103)
!12909 = !DILocation(line: 8005, column: 63, scope: !12903)
!12910 = !DILocalVariable(name: "width", arg: 4, scope: !12903, file: !3, line: 8005, type: !105)
!12911 = !DILocation(line: 8005, column: 75, scope: !12903)
!12912 = !DILocalVariable(name: "length", arg: 5, scope: !12903, file: !3, line: 8006, type: !105)
!12913 = !DILocation(line: 8006, column: 34, scope: !12903)
!12914 = !DILocalVariable(name: "col", arg: 6, scope: !12903, file: !3, line: 8006, type: !105)
!12915 = !DILocation(line: 8006, column: 51, scope: !12903)
!12916 = !DILocalVariable(name: "src", arg: 7, scope: !12903, file: !3, line: 8006, type: !116)
!12917 = !DILocation(line: 8006, column: 63, scope: !12903)
!12918 = !DILocalVariable(name: "dst", arg: 8, scope: !12903, file: !3, line: 8006, type: !116)
!12919 = !DILocation(line: 8006, column: 75, scope: !12903)
!12920 = !DILocalVariable(name: "ready_bits", scope: !12903, file: !3, line: 8008, type: !110)
!12921 = !DILocation(line: 8008, column: 12, scope: !12903)
!12922 = !DILocalVariable(name: "row", scope: !12903, file: !3, line: 8009, type: !105)
!12923 = !DILocation(line: 8009, column: 12, scope: !12903)
!12924 = !DILocalVariable(name: "rowsize", scope: !12903, file: !3, line: 8009, type: !105)
!12925 = !DILocation(line: 8009, column: 17, scope: !12903)
!12926 = !DILocalVariable(name: "bit_offset", scope: !12903, file: !3, line: 8009, type: !105)
!12927 = !DILocation(line: 8009, column: 26, scope: !12903)
!12928 = !DILocalVariable(name: "src_byte", scope: !12903, file: !3, line: 8010, type: !105)
!12929 = !DILocation(line: 8010, column: 12, scope: !12903)
!12930 = !DILocalVariable(name: "src_bit", scope: !12903, file: !3, line: 8010, type: !105)
!12931 = !DILocation(line: 8010, column: 26, scope: !12903)
!12932 = !DILocalVariable(name: "matchbits", scope: !12903, file: !3, line: 8011, type: !105)
!12933 = !DILocation(line: 8011, column: 12, scope: !12903)
!12934 = !DILocalVariable(name: "maskbits", scope: !12903, file: !3, line: 8011, type: !105)
!12935 = !DILocation(line: 8011, column: 27, scope: !12903)
!12936 = !DILocalVariable(name: "buff1", scope: !12903, file: !3, line: 8012, type: !105)
!12937 = !DILocation(line: 8012, column: 12, scope: !12903)
!12938 = !DILocalVariable(name: "buff2", scope: !12903, file: !3, line: 8012, type: !105)
!12939 = !DILocation(line: 8012, column: 23, scope: !12903)
!12940 = !DILocalVariable(name: "bytebuff1", scope: !12903, file: !3, line: 8013, type: !114)
!12941 = !DILocation(line: 8013, column: 12, scope: !12903)
!12942 = !DILocalVariable(name: "bytebuff2", scope: !12903, file: !3, line: 8013, type: !114)
!12943 = !DILocation(line: 8013, column: 27, scope: !12903)
!12944 = !DILocalVariable(name: "next", scope: !12903, file: !3, line: 8014, type: !116)
!12945 = !DILocation(line: 8014, column: 12, scope: !12903)
!12946 = !DILocalVariable(name: "sample", scope: !12903, file: !3, line: 8015, type: !7616)
!12947 = !DILocation(line: 8015, column: 13, scope: !12903)
!12948 = !DILocation(line: 8018, column: 8, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 8018, column: 7)
!12950 = !DILocation(line: 8018, column: 12, scope: !12949)
!12951 = !DILocation(line: 8018, column: 21, scope: !12949)
!12952 = !DILocation(line: 8018, column: 25, scope: !12949)
!12953 = !DILocation(line: 8018, column: 29, scope: !12949)
!12954 = !DILocation(line: 8018, column: 7, scope: !12903)
!12955 = !DILocation(line: 8020, column: 5, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12949, file: !3, line: 8019, column: 5)
!12957 = !DILocation(line: 8021, column: 5, scope: !12956)
!12958 = !DILocation(line: 8024, column: 15, scope: !12903)
!12959 = !DILocation(line: 8024, column: 21, scope: !12903)
!12960 = !DILocation(line: 8024, column: 19, scope: !12903)
!12961 = !DILocation(line: 8024, column: 27, scope: !12903)
!12962 = !DILocation(line: 8024, column: 25, scope: !12903)
!12963 = !DILocation(line: 8024, column: 34, scope: !12903)
!12964 = !DILocation(line: 8024, column: 39, scope: !12903)
!12965 = !DILocation(line: 8024, column: 11, scope: !12903)
!12966 = !DILocation(line: 8025, column: 14, scope: !12903)
!12967 = !DILocation(line: 8026, column: 35, scope: !12903)
!12968 = !DILocation(line: 8026, column: 33, scope: !12903)
!12969 = !DILocation(line: 8026, column: 26, scope: !12903)
!12970 = !DILocation(line: 8026, column: 12, scope: !12903)
!12971 = !DILocation(line: 8027, column: 17, scope: !12903)
!12972 = !DILocation(line: 8027, column: 9, scope: !12903)
!12973 = !DILocation(line: 8028, column: 12, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 8028, column: 3)
!12975 = !DILocation(line: 8028, column: 8, scope: !12974)
!12976 = !DILocation(line: 8028, column: 17, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 8028, column: 3)
!12978 = !DILocation(line: 8028, column: 23, scope: !12977)
!12979 = !DILocation(line: 8028, column: 21, scope: !12977)
!12980 = !DILocation(line: 8028, column: 3, scope: !12974)
!12981 = !DILocation(line: 8030, column: 18, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 8029, column: 5)
!12983 = !DILocation(line: 8030, column: 24, scope: !12982)
!12984 = !DILocation(line: 8030, column: 22, scope: !12982)
!12985 = !DILocation(line: 8030, column: 30, scope: !12982)
!12986 = !DILocation(line: 8030, column: 28, scope: !12982)
!12987 = !DILocation(line: 8030, column: 16, scope: !12982)
!12988 = !DILocation(line: 8031, column: 17, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 8031, column: 5)
!12990 = !DILocation(line: 8031, column: 10, scope: !12989)
!12991 = !DILocation(line: 8031, column: 22, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 8031, column: 5)
!12993 = !DILocation(line: 8031, column: 31, scope: !12992)
!12994 = !DILocation(line: 8031, column: 29, scope: !12992)
!12995 = !DILocation(line: 8031, column: 5, scope: !12989)
!12996 = !DILocation(line: 8033, column: 11, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 8033, column: 11)
!12998 = distinct !DILexicalBlock(scope: !12992, file: !3, line: 8032, column: 7)
!12999 = !DILocation(line: 8033, column: 18, scope: !12997)
!13000 = !DILocation(line: 8033, column: 11, scope: !12998)
!13001 = !DILocation(line: 8035, column: 20, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 8034, column: 9)
!13003 = !DILocation(line: 8035, column: 31, scope: !13002)
!13004 = !DILocation(line: 8035, column: 18, scope: !13002)
!13005 = !DILocation(line: 8036, column: 20, scope: !13002)
!13006 = !DILocation(line: 8036, column: 31, scope: !13002)
!13007 = !DILocation(line: 8036, column: 18, scope: !13002)
!13008 = !DILocation(line: 8037, column: 9, scope: !13002)
!13009 = !DILocation(line: 8040, column: 21, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 8039, column: 9)
!13011 = !DILocation(line: 8040, column: 35, scope: !13010)
!13012 = !DILocation(line: 8040, column: 44, scope: !13010)
!13013 = !DILocation(line: 8040, column: 42, scope: !13010)
!13014 = !DILocation(line: 8040, column: 32, scope: !13010)
!13015 = !DILocation(line: 8040, column: 50, scope: !13010)
!13016 = !DILocation(line: 8040, column: 18, scope: !13010)
!13017 = !DILocation(line: 8041, column: 21, scope: !13010)
!13018 = !DILocation(line: 8041, column: 35, scope: !13010)
!13019 = !DILocation(line: 8041, column: 44, scope: !13010)
!13020 = !DILocation(line: 8041, column: 42, scope: !13010)
!13021 = !DILocation(line: 8041, column: 32, scope: !13010)
!13022 = !DILocation(line: 8041, column: 50, scope: !13010)
!13023 = !DILocation(line: 8041, column: 18, scope: !13010)
!13024 = !DILocation(line: 8044, column: 15, scope: !12998)
!13025 = !DILocation(line: 8044, column: 7, scope: !12998)
!13026 = !DILocation(line: 8046, column: 26, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 8045, column: 2)
!13028 = !DILocation(line: 8046, column: 32, scope: !13027)
!13029 = !DILocation(line: 8046, column: 30, scope: !13027)
!13030 = !DILocation(line: 8046, column: 44, scope: !13027)
!13031 = !DILocation(line: 8046, column: 50, scope: !13027)
!13032 = !DILocation(line: 8046, column: 48, scope: !13027)
!13033 = !DILocation(line: 8046, column: 41, scope: !13027)
!13034 = !DILocation(line: 8046, column: 24, scope: !13027)
!13035 = !DILocation(line: 8047, column: 19, scope: !13027)
!13036 = !DILocation(line: 8048, column: 26, scope: !13027)
!13037 = !DILocation(line: 8048, column: 32, scope: !13027)
!13038 = !DILocation(line: 8048, column: 30, scope: !13027)
!13039 = !DILocation(line: 8048, column: 44, scope: !13027)
!13040 = !DILocation(line: 8048, column: 50, scope: !13027)
!13041 = !DILocation(line: 8048, column: 48, scope: !13027)
!13042 = !DILocation(line: 8048, column: 41, scope: !13027)
!13043 = !DILocation(line: 8048, column: 24, scope: !13027)
!13044 = !DILocation(line: 8049, column: 12, scope: !13027)
!13045 = !DILocation(line: 8050, column: 73, scope: !13027)
!13046 = !DILocation(line: 8050, column: 12, scope: !13027)
!13047 = !DILocation(line: 8051, column: 19, scope: !13027)
!13048 = !DILocation(line: 8053, column: 19, scope: !12998)
!13049 = !DILocation(line: 8053, column: 37, scope: !12998)
!13050 = !DILocation(line: 8053, column: 35, scope: !12998)
!13051 = !DILocation(line: 8053, column: 47, scope: !12998)
!13052 = !DILocation(line: 8053, column: 45, scope: !12998)
!13053 = !DILocation(line: 8053, column: 28, scope: !12998)
!13054 = !DILocation(line: 8053, column: 17, scope: !12998)
!13055 = !DILocation(line: 8054, column: 11, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 8054, column: 11)
!13057 = !DILocation(line: 8054, column: 11, scope: !12998)
!13058 = !DILocation(line: 8055, column: 11, scope: !13056)
!13059 = !DILocation(line: 8055, column: 19, scope: !13056)
!13060 = !DILocation(line: 8055, column: 29, scope: !13056)
!13061 = !DILocation(line: 8055, column: 37, scope: !13056)
!13062 = !DILocation(line: 8055, column: 26, scope: !13056)
!13063 = !DILocation(line: 8055, column: 47, scope: !13056)
!13064 = !DILocation(line: 8055, column: 55, scope: !13056)
!13065 = !DILocation(line: 8055, column: 44, scope: !13056)
!13066 = !DILocation(line: 8055, column: 63, scope: !13056)
!13067 = !DILocation(line: 8055, column: 61, scope: !13056)
!13068 = !DILocation(line: 8055, column: 8, scope: !13056)
!13069 = !DILocation(line: 8055, column: 2, scope: !13056)
!13070 = !DILocation(line: 8057, column: 11, scope: !13056)
!13071 = !DILocation(line: 8057, column: 19, scope: !13056)
!13072 = !DILocation(line: 8057, column: 29, scope: !13056)
!13073 = !DILocation(line: 8057, column: 37, scope: !13056)
!13074 = !DILocation(line: 8057, column: 26, scope: !13056)
!13075 = !DILocation(line: 8057, column: 47, scope: !13056)
!13076 = !DILocation(line: 8057, column: 55, scope: !13056)
!13077 = !DILocation(line: 8057, column: 44, scope: !13056)
!13078 = !DILocation(line: 8057, column: 63, scope: !13056)
!13079 = !DILocation(line: 8057, column: 61, scope: !13056)
!13080 = !DILocation(line: 8057, column: 8, scope: !13056)
!13081 = !DILocation(line: 8058, column: 16, scope: !12998)
!13082 = !DILocation(line: 8058, column: 24, scope: !12998)
!13083 = !DILocation(line: 8058, column: 22, scope: !12998)
!13084 = !DILocation(line: 8058, column: 39, scope: !12998)
!13085 = !DILocation(line: 8058, column: 35, scope: !12998)
!13086 = !DILocation(line: 8058, column: 13, scope: !12998)
!13087 = !DILocation(line: 8061, column: 11, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 8061, column: 11)
!13089 = !DILocation(line: 8061, column: 22, scope: !13088)
!13090 = !DILocation(line: 8061, column: 11, scope: !12998)
!13091 = !DILocation(line: 8063, column: 22, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 8062, column: 9)
!13093 = !DILocation(line: 8063, column: 28, scope: !13092)
!13094 = !DILocation(line: 8063, column: 21, scope: !13092)
!13095 = !DILocation(line: 8063, column: 19, scope: !13092)
!13096 = !DILocation(line: 8064, column: 18, scope: !13092)
!13097 = !DILocation(line: 8064, column: 13, scope: !13092)
!13098 = !DILocation(line: 8064, column: 16, scope: !13092)
!13099 = !DILocation(line: 8065, column: 22, scope: !13092)
!13100 = !DILocation(line: 8065, column: 28, scope: !13092)
!13101 = !DILocation(line: 8065, column: 21, scope: !13092)
!13102 = !DILocation(line: 8065, column: 19, scope: !13092)
!13103 = !DILocation(line: 8066, column: 18, scope: !13092)
!13104 = !DILocation(line: 8066, column: 13, scope: !13092)
!13105 = !DILocation(line: 8066, column: 16, scope: !13092)
!13106 = !DILocation(line: 8067, column: 20, scope: !13092)
!13107 = !DILocation(line: 8070, column: 19, scope: !13092)
!13108 = !DILocation(line: 8070, column: 25, scope: !13092)
!13109 = !DILocation(line: 8070, column: 35, scope: !13092)
!13110 = !DILocation(line: 8070, column: 44, scope: !13092)
!13111 = !DILocation(line: 8070, column: 41, scope: !13092)
!13112 = !DILocation(line: 8070, column: 32, scope: !13092)
!13113 = !DILocation(line: 8070, column: 15, scope: !13092)
!13114 = !DILocation(line: 8071, column: 9, scope: !13092)
!13115 = !DILocation(line: 8074, column: 31, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 8073, column: 9)
!13117 = !DILocation(line: 8074, column: 19, scope: !13116)
!13118 = !DILocation(line: 8075, column: 18, scope: !13116)
!13119 = !DILocation(line: 8075, column: 27, scope: !13116)
!13120 = !DILocation(line: 8075, column: 36, scope: !13116)
!13121 = !DILocation(line: 8075, column: 33, scope: !13116)
!13122 = !DILocation(line: 8075, column: 24, scope: !13116)
!13123 = !DILocation(line: 8075, column: 15, scope: !13116)
!13124 = !DILocation(line: 8077, column: 21, scope: !12998)
!13125 = !DILocation(line: 8077, column: 18, scope: !12998)
!13126 = !DILocation(line: 8078, column: 7, scope: !12998)
!13127 = !DILocation(line: 8031, column: 42, scope: !12992)
!13128 = !DILocation(line: 8031, column: 5, scope: !12992)
!13129 = distinct !{!13129, !12995, !13130}
!13130 = !DILocation(line: 8078, column: 7, scope: !12989)
!13131 = !DILocation(line: 8079, column: 5, scope: !12982)
!13132 = !DILocation(line: 8028, column: 34, scope: !12977)
!13133 = !DILocation(line: 8028, column: 3, scope: !12977)
!13134 = distinct !{!13134, !12980, !13135}
!13135 = !DILocation(line: 8079, column: 5, scope: !12974)
!13136 = !DILocation(line: 8082, column: 3, scope: !12903)
!13137 = !DILocation(line: 8082, column: 10, scope: !12903)
!13138 = !DILocation(line: 8082, column: 21, scope: !12903)
!13139 = !DILocation(line: 8084, column: 18, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 8083, column: 5)
!13141 = !DILocation(line: 8084, column: 24, scope: !13140)
!13142 = !DILocation(line: 8084, column: 17, scope: !13140)
!13143 = !DILocation(line: 8084, column: 15, scope: !13140)
!13144 = !DILocation(line: 8085, column: 14, scope: !13140)
!13145 = !DILocation(line: 8085, column: 9, scope: !13140)
!13146 = !DILocation(line: 8085, column: 12, scope: !13140)
!13147 = !DILocation(line: 8087, column: 14, scope: !13140)
!13148 = !DILocation(line: 8087, column: 20, scope: !13140)
!13149 = !DILocation(line: 8087, column: 11, scope: !13140)
!13150 = !DILocation(line: 8088, column: 17, scope: !13140)
!13151 = !DILocation(line: 8088, column: 15, scope: !13140)
!13152 = !DILocation(line: 8089, column: 16, scope: !13140)
!13153 = distinct !{!13153, !13136, !13154}
!13154 = !DILocation(line: 8090, column: 5, scope: !12903)
!13155 = !DILocation(line: 8092, column: 3, scope: !12903)
!13156 = !DILocation(line: 8093, column: 3, scope: !12903)
!13157 = distinct !DISubprogram(name: "rotateContigSamples32bits", scope: !3, file: !3, line: 8096, type: !12462, scopeLine: 8098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!13158 = !DILocalVariable(name: "rotation", arg: 1, scope: !13157, file: !3, line: 8096, type: !103)
!13159 = !DILocation(line: 8096, column: 34, scope: !13157)
!13160 = !DILocalVariable(name: "spp", arg: 2, scope: !13157, file: !3, line: 8096, type: !103)
!13161 = !DILocation(line: 8096, column: 51, scope: !13157)
!13162 = !DILocalVariable(name: "bps", arg: 3, scope: !13157, file: !3, line: 8096, type: !103)
!13163 = !DILocation(line: 8096, column: 63, scope: !13157)
!13164 = !DILocalVariable(name: "width", arg: 4, scope: !13157, file: !3, line: 8096, type: !105)
!13165 = !DILocation(line: 8096, column: 75, scope: !13157)
!13166 = !DILocalVariable(name: "length", arg: 5, scope: !13157, file: !3, line: 8097, type: !105)
!13167 = !DILocation(line: 8097, column: 34, scope: !13157)
!13168 = !DILocalVariable(name: "col", arg: 6, scope: !13157, file: !3, line: 8097, type: !105)
!13169 = !DILocation(line: 8097, column: 51, scope: !13157)
!13170 = !DILocalVariable(name: "src", arg: 7, scope: !13157, file: !3, line: 8097, type: !116)
!13171 = !DILocation(line: 8097, column: 63, scope: !13157)
!13172 = !DILocalVariable(name: "dst", arg: 8, scope: !13157, file: !3, line: 8097, type: !116)
!13173 = !DILocation(line: 8097, column: 75, scope: !13157)
!13174 = !DILocalVariable(name: "ready_bits", scope: !13157, file: !3, line: 8099, type: !110)
!13175 = !DILocation(line: 8099, column: 10, scope: !13157)
!13176 = !DILocalVariable(name: "shift_width", scope: !13157, file: !3, line: 8099, type: !110)
!13177 = !DILocation(line: 8099, column: 26, scope: !13157)
!13178 = !DILocalVariable(name: "bytes_per_sample", scope: !13157, file: !3, line: 8100, type: !110)
!13179 = !DILocation(line: 8100, column: 10, scope: !13157)
!13180 = !DILocalVariable(name: "bytes_per_pixel", scope: !13157, file: !3, line: 8100, type: !110)
!13181 = !DILocation(line: 8100, column: 28, scope: !13157)
!13182 = !DILocalVariable(name: "row", scope: !13157, file: !3, line: 8101, type: !105)
!13183 = !DILocation(line: 8101, column: 10, scope: !13157)
!13184 = !DILocalVariable(name: "rowsize", scope: !13157, file: !3, line: 8101, type: !105)
!13185 = !DILocation(line: 8101, column: 15, scope: !13157)
!13186 = !DILocalVariable(name: "bit_offset", scope: !13157, file: !3, line: 8101, type: !105)
!13187 = !DILocation(line: 8101, column: 24, scope: !13157)
!13188 = !DILocalVariable(name: "src_byte", scope: !13157, file: !3, line: 8102, type: !105)
!13189 = !DILocation(line: 8102, column: 10, scope: !13157)
!13190 = !DILocalVariable(name: "src_bit", scope: !13157, file: !3, line: 8102, type: !105)
!13191 = !DILocation(line: 8102, column: 20, scope: !13157)
!13192 = !DILocalVariable(name: "longbuff1", scope: !13157, file: !3, line: 8103, type: !105)
!13193 = !DILocation(line: 8103, column: 10, scope: !13157)
!13194 = !DILocalVariable(name: "longbuff2", scope: !13157, file: !3, line: 8103, type: !105)
!13195 = !DILocation(line: 8103, column: 25, scope: !13157)
!13196 = !DILocalVariable(name: "maskbits", scope: !13157, file: !3, line: 8104, type: !115)
!13197 = !DILocation(line: 8104, column: 10, scope: !13157)
!13198 = !DILocalVariable(name: "matchbits", scope: !13157, file: !3, line: 8104, type: !115)
!13199 = !DILocation(line: 8104, column: 24, scope: !13157)
!13200 = !DILocalVariable(name: "buff1", scope: !13157, file: !3, line: 8105, type: !115)
!13201 = !DILocation(line: 8105, column: 10, scope: !13157)
!13202 = !DILocalVariable(name: "buff2", scope: !13157, file: !3, line: 8105, type: !115)
!13203 = !DILocation(line: 8105, column: 21, scope: !13157)
!13204 = !DILocalVariable(name: "buff3", scope: !13157, file: !3, line: 8105, type: !115)
!13205 = !DILocation(line: 8105, column: 32, scope: !13157)
!13206 = !DILocalVariable(name: "bytebuff1", scope: !13157, file: !3, line: 8106, type: !114)
!13207 = !DILocation(line: 8106, column: 10, scope: !13157)
!13208 = !DILocalVariable(name: "bytebuff2", scope: !13157, file: !3, line: 8106, type: !114)
!13209 = !DILocation(line: 8106, column: 25, scope: !13157)
!13210 = !DILocalVariable(name: "bytebuff3", scope: !13157, file: !3, line: 8106, type: !114)
!13211 = !DILocation(line: 8106, column: 40, scope: !13157)
!13212 = !DILocalVariable(name: "bytebuff4", scope: !13157, file: !3, line: 8106, type: !114)
!13213 = !DILocation(line: 8106, column: 55, scope: !13157)
!13214 = !DILocalVariable(name: "next", scope: !13157, file: !3, line: 8107, type: !116)
!13215 = !DILocation(line: 8107, column: 12, scope: !13157)
!13216 = !DILocalVariable(name: "sample", scope: !13157, file: !3, line: 8108, type: !7616)
!13217 = !DILocation(line: 8108, column: 13, scope: !13157)
!13218 = !DILocation(line: 8111, column: 8, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 8111, column: 7)
!13220 = !DILocation(line: 8111, column: 12, scope: !13219)
!13221 = !DILocation(line: 8111, column: 21, scope: !13219)
!13222 = !DILocation(line: 8111, column: 25, scope: !13219)
!13223 = !DILocation(line: 8111, column: 29, scope: !13219)
!13224 = !DILocation(line: 8111, column: 7, scope: !13157)
!13225 = !DILocation(line: 8113, column: 5, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13219, file: !3, line: 8112, column: 5)
!13227 = !DILocation(line: 8114, column: 5, scope: !13226)
!13228 = !DILocation(line: 8117, column: 23, scope: !13157)
!13229 = !DILocation(line: 8117, column: 27, scope: !13157)
!13230 = !DILocation(line: 8117, column: 32, scope: !13157)
!13231 = !DILocation(line: 8117, column: 20, scope: !13157)
!13232 = !DILocation(line: 8118, column: 24, scope: !13157)
!13233 = !DILocation(line: 8118, column: 30, scope: !13157)
!13234 = !DILocation(line: 8118, column: 28, scope: !13157)
!13235 = !DILocation(line: 8118, column: 35, scope: !13157)
!13236 = !DILocation(line: 8118, column: 40, scope: !13157)
!13237 = !DILocation(line: 8118, column: 20, scope: !13157)
!13238 = !DILocation(line: 8119, column: 7, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 8119, column: 7)
!13240 = !DILocation(line: 8119, column: 26, scope: !13239)
!13241 = !DILocation(line: 8119, column: 43, scope: !13239)
!13242 = !DILocation(line: 8119, column: 23, scope: !13239)
!13243 = !DILocation(line: 8119, column: 7, scope: !13157)
!13244 = !DILocation(line: 8120, column: 19, scope: !13239)
!13245 = !DILocation(line: 8120, column: 17, scope: !13239)
!13246 = !DILocation(line: 8120, column: 5, scope: !13239)
!13247 = !DILocation(line: 8122, column: 19, scope: !13239)
!13248 = !DILocation(line: 8122, column: 36, scope: !13239)
!13249 = !DILocation(line: 8122, column: 17, scope: !13239)
!13250 = !DILocation(line: 8124, column: 15, scope: !13157)
!13251 = !DILocation(line: 8124, column: 21, scope: !13157)
!13252 = !DILocation(line: 8124, column: 19, scope: !13157)
!13253 = !DILocation(line: 8124, column: 27, scope: !13157)
!13254 = !DILocation(line: 8124, column: 25, scope: !13157)
!13255 = !DILocation(line: 8124, column: 34, scope: !13157)
!13256 = !DILocation(line: 8124, column: 39, scope: !13157)
!13257 = !DILocation(line: 8124, column: 11, scope: !13157)
!13258 = !DILocation(line: 8125, column: 14, scope: !13157)
!13259 = !DILocation(line: 8126, column: 35, scope: !13157)
!13260 = !DILocation(line: 8126, column: 33, scope: !13157)
!13261 = !DILocation(line: 8126, column: 26, scope: !13157)
!13262 = !DILocation(line: 8126, column: 12, scope: !13157)
!13263 = !DILocation(line: 8127, column: 17, scope: !13157)
!13264 = !DILocation(line: 8127, column: 9, scope: !13157)
!13265 = !DILocation(line: 8128, column: 12, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 8128, column: 3)
!13267 = !DILocation(line: 8128, column: 8, scope: !13266)
!13268 = !DILocation(line: 8128, column: 17, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 8128, column: 3)
!13270 = !DILocation(line: 8128, column: 23, scope: !13269)
!13271 = !DILocation(line: 8128, column: 21, scope: !13269)
!13272 = !DILocation(line: 8128, column: 3, scope: !13266)
!13273 = !DILocation(line: 8130, column: 18, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 8129, column: 5)
!13275 = !DILocation(line: 8130, column: 24, scope: !13274)
!13276 = !DILocation(line: 8130, column: 22, scope: !13274)
!13277 = !DILocation(line: 8130, column: 30, scope: !13274)
!13278 = !DILocation(line: 8130, column: 28, scope: !13274)
!13279 = !DILocation(line: 8130, column: 16, scope: !13274)
!13280 = !DILocation(line: 8131, column: 17, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13274, file: !3, line: 8131, column: 5)
!13282 = !DILocation(line: 8131, column: 10, scope: !13281)
!13283 = !DILocation(line: 8131, column: 22, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13281, file: !3, line: 8131, column: 5)
!13285 = !DILocation(line: 8131, column: 31, scope: !13284)
!13286 = !DILocation(line: 8131, column: 29, scope: !13284)
!13287 = !DILocation(line: 8131, column: 5, scope: !13281)
!13288 = !DILocation(line: 8133, column: 11, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 8133, column: 11)
!13290 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 8132, column: 7)
!13291 = !DILocation(line: 8133, column: 18, scope: !13289)
!13292 = !DILocation(line: 8133, column: 11, scope: !13290)
!13293 = !DILocation(line: 8135, column: 20, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 8134, column: 9)
!13295 = !DILocation(line: 8135, column: 31, scope: !13294)
!13296 = !DILocation(line: 8135, column: 18, scope: !13294)
!13297 = !DILocation(line: 8136, column: 20, scope: !13294)
!13298 = !DILocation(line: 8136, column: 31, scope: !13294)
!13299 = !DILocation(line: 8136, column: 18, scope: !13294)
!13300 = !DILocation(line: 8137, column: 9, scope: !13294)
!13301 = !DILocation(line: 8140, column: 21, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 8139, column: 9)
!13303 = !DILocation(line: 8140, column: 35, scope: !13302)
!13304 = !DILocation(line: 8140, column: 44, scope: !13302)
!13305 = !DILocation(line: 8140, column: 42, scope: !13302)
!13306 = !DILocation(line: 8140, column: 32, scope: !13302)
!13307 = !DILocation(line: 8140, column: 50, scope: !13302)
!13308 = !DILocation(line: 8140, column: 18, scope: !13302)
!13309 = !DILocation(line: 8141, column: 21, scope: !13302)
!13310 = !DILocation(line: 8141, column: 35, scope: !13302)
!13311 = !DILocation(line: 8141, column: 44, scope: !13302)
!13312 = !DILocation(line: 8141, column: 42, scope: !13302)
!13313 = !DILocation(line: 8141, column: 32, scope: !13302)
!13314 = !DILocation(line: 8141, column: 50, scope: !13302)
!13315 = !DILocation(line: 8141, column: 18, scope: !13302)
!13316 = !DILocation(line: 8144, column: 15, scope: !13290)
!13317 = !DILocation(line: 8144, column: 7, scope: !13290)
!13318 = !DILocation(line: 8146, column: 26, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 8145, column: 2)
!13320 = !DILocation(line: 8146, column: 32, scope: !13319)
!13321 = !DILocation(line: 8146, column: 30, scope: !13319)
!13322 = !DILocation(line: 8146, column: 44, scope: !13319)
!13323 = !DILocation(line: 8146, column: 50, scope: !13319)
!13324 = !DILocation(line: 8146, column: 48, scope: !13319)
!13325 = !DILocation(line: 8146, column: 41, scope: !13319)
!13326 = !DILocation(line: 8146, column: 24, scope: !13319)
!13327 = !DILocation(line: 8147, column: 19, scope: !13319)
!13328 = !DILocation(line: 8148, column: 26, scope: !13319)
!13329 = !DILocation(line: 8148, column: 32, scope: !13319)
!13330 = !DILocation(line: 8148, column: 30, scope: !13319)
!13331 = !DILocation(line: 8148, column: 44, scope: !13319)
!13332 = !DILocation(line: 8148, column: 50, scope: !13319)
!13333 = !DILocation(line: 8148, column: 48, scope: !13319)
!13334 = !DILocation(line: 8148, column: 41, scope: !13319)
!13335 = !DILocation(line: 8148, column: 24, scope: !13319)
!13336 = !DILocation(line: 8149, column: 12, scope: !13319)
!13337 = !DILocation(line: 8150, column: 73, scope: !13319)
!13338 = !DILocation(line: 8150, column: 12, scope: !13319)
!13339 = !DILocation(line: 8151, column: 19, scope: !13319)
!13340 = !DILocation(line: 8153, column: 19, scope: !13290)
!13341 = !DILocation(line: 8153, column: 37, scope: !13290)
!13342 = !DILocation(line: 8153, column: 35, scope: !13290)
!13343 = !DILocation(line: 8153, column: 47, scope: !13290)
!13344 = !DILocation(line: 8153, column: 45, scope: !13290)
!13345 = !DILocation(line: 8153, column: 28, scope: !13290)
!13346 = !DILocation(line: 8153, column: 17, scope: !13290)
!13347 = !DILocation(line: 8154, column: 11, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 8154, column: 11)
!13349 = !DILocation(line: 8154, column: 11, scope: !13290)
!13350 = !DILocation(line: 8156, column: 15, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13348, file: !3, line: 8155, column: 9)
!13352 = !DILocation(line: 8156, column: 23, scope: !13351)
!13353 = !DILocation(line: 8156, column: 33, scope: !13351)
!13354 = !DILocation(line: 8156, column: 41, scope: !13351)
!13355 = !DILocation(line: 8156, column: 30, scope: !13351)
!13356 = !DILocation(line: 8156, column: 51, scope: !13351)
!13357 = !DILocation(line: 8156, column: 59, scope: !13351)
!13358 = !DILocation(line: 8156, column: 48, scope: !13351)
!13359 = !DILocation(line: 8156, column: 67, scope: !13351)
!13360 = !DILocation(line: 8156, column: 65, scope: !13351)
!13361 = !DILocation(line: 8156, column: 12, scope: !13351)
!13362 = !DILocation(line: 8157, column: 21, scope: !13351)
!13363 = !DILocation(line: 8157, column: 19, scope: !13351)
!13364 = !DILocation(line: 8158, column: 9, scope: !13351)
!13365 = !DILocation(line: 8161, column: 15, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13348, file: !3, line: 8160, column: 9)
!13367 = !DILocation(line: 8161, column: 23, scope: !13366)
!13368 = !DILocation(line: 8161, column: 33, scope: !13366)
!13369 = !DILocation(line: 8161, column: 41, scope: !13366)
!13370 = !DILocation(line: 8161, column: 30, scope: !13366)
!13371 = !DILocation(line: 8161, column: 51, scope: !13366)
!13372 = !DILocation(line: 8161, column: 59, scope: !13366)
!13373 = !DILocation(line: 8161, column: 48, scope: !13366)
!13374 = !DILocation(line: 8161, column: 67, scope: !13366)
!13375 = !DILocation(line: 8161, column: 65, scope: !13366)
!13376 = !DILocation(line: 8161, column: 12, scope: !13366)
!13377 = !DILocation(line: 8162, column: 21, scope: !13366)
!13378 = !DILocation(line: 8162, column: 19, scope: !13366)
!13379 = !DILocation(line: 8165, column: 24, scope: !13290)
!13380 = !DILocation(line: 8165, column: 16, scope: !13290)
!13381 = !DILocation(line: 8165, column: 34, scope: !13290)
!13382 = !DILocation(line: 8165, column: 43, scope: !13290)
!13383 = !DILocation(line: 8165, column: 41, scope: !13290)
!13384 = !DILocation(line: 8165, column: 13, scope: !13290)
!13385 = !DILocation(line: 8166, column: 16, scope: !13290)
!13386 = !DILocation(line: 8166, column: 24, scope: !13290)
!13387 = !DILocation(line: 8166, column: 22, scope: !13290)
!13388 = !DILocation(line: 8166, column: 39, scope: !13290)
!13389 = !DILocation(line: 8166, column: 35, scope: !13290)
!13390 = !DILocation(line: 8166, column: 13, scope: !13290)
!13391 = !DILocation(line: 8168, column: 11, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 8168, column: 11)
!13393 = !DILocation(line: 8168, column: 22, scope: !13392)
!13394 = !DILocation(line: 8168, column: 11, scope: !13290)
!13395 = !DILocation(line: 8170, column: 55, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 8169, column: 9)
!13397 = !DILocation(line: 8170, column: 43, scope: !13396)
!13398 = !DILocation(line: 8170, column: 31, scope: !13396)
!13399 = !DILocation(line: 8170, column: 19, scope: !13396)
!13400 = !DILocation(line: 8171, column: 18, scope: !13396)
!13401 = !DILocation(line: 8171, column: 27, scope: !13396)
!13402 = !DILocation(line: 8171, column: 36, scope: !13396)
!13403 = !DILocation(line: 8171, column: 33, scope: !13396)
!13404 = !DILocation(line: 8171, column: 24, scope: !13396)
!13405 = !DILocation(line: 8171, column: 15, scope: !13396)
!13406 = !DILocation(line: 8172, column: 9, scope: !13396)
!13407 = !DILocation(line: 8175, column: 22, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 8174, column: 9)
!13409 = !DILocation(line: 8175, column: 28, scope: !13408)
!13410 = !DILocation(line: 8175, column: 21, scope: !13408)
!13411 = !DILocation(line: 8175, column: 19, scope: !13408)
!13412 = !DILocation(line: 8176, column: 18, scope: !13408)
!13413 = !DILocation(line: 8176, column: 13, scope: !13408)
!13414 = !DILocation(line: 8176, column: 16, scope: !13408)
!13415 = !DILocation(line: 8177, column: 22, scope: !13408)
!13416 = !DILocation(line: 8177, column: 28, scope: !13408)
!13417 = !DILocation(line: 8177, column: 21, scope: !13408)
!13418 = !DILocation(line: 8177, column: 19, scope: !13408)
!13419 = !DILocation(line: 8178, column: 18, scope: !13408)
!13420 = !DILocation(line: 8178, column: 13, scope: !13408)
!13421 = !DILocation(line: 8178, column: 16, scope: !13408)
!13422 = !DILocation(line: 8179, column: 22, scope: !13408)
!13423 = !DILocation(line: 8179, column: 28, scope: !13408)
!13424 = !DILocation(line: 8179, column: 21, scope: !13408)
!13425 = !DILocation(line: 8179, column: 19, scope: !13408)
!13426 = !DILocation(line: 8180, column: 18, scope: !13408)
!13427 = !DILocation(line: 8180, column: 13, scope: !13408)
!13428 = !DILocation(line: 8180, column: 16, scope: !13408)
!13429 = !DILocation(line: 8181, column: 22, scope: !13408)
!13430 = !DILocation(line: 8181, column: 28, scope: !13408)
!13431 = !DILocation(line: 8181, column: 21, scope: !13408)
!13432 = !DILocation(line: 8181, column: 19, scope: !13408)
!13433 = !DILocation(line: 8182, column: 18, scope: !13408)
!13434 = !DILocation(line: 8182, column: 13, scope: !13408)
!13435 = !DILocation(line: 8182, column: 16, scope: !13408)
!13436 = !DILocation(line: 8183, column: 20, scope: !13408)
!13437 = !DILocation(line: 8186, column: 19, scope: !13408)
!13438 = !DILocation(line: 8186, column: 25, scope: !13408)
!13439 = !DILocation(line: 8186, column: 35, scope: !13408)
!13440 = !DILocation(line: 8186, column: 44, scope: !13408)
!13441 = !DILocation(line: 8186, column: 41, scope: !13408)
!13442 = !DILocation(line: 8186, column: 32, scope: !13408)
!13443 = !DILocation(line: 8186, column: 15, scope: !13408)
!13444 = !DILocation(line: 8188, column: 21, scope: !13290)
!13445 = !DILocation(line: 8188, column: 18, scope: !13290)
!13446 = !DILocation(line: 8189, column: 7, scope: !13290)
!13447 = !DILocation(line: 8131, column: 42, scope: !13284)
!13448 = !DILocation(line: 8131, column: 5, scope: !13284)
!13449 = distinct !{!13449, !13287, !13450}
!13450 = !DILocation(line: 8189, column: 7, scope: !13281)
!13451 = !DILocation(line: 8190, column: 5, scope: !13274)
!13452 = !DILocation(line: 8128, column: 34, scope: !13269)
!13453 = !DILocation(line: 8128, column: 3, scope: !13269)
!13454 = distinct !{!13454, !13272, !13455}
!13455 = !DILocation(line: 8190, column: 5, scope: !13266)
!13456 = !DILocation(line: 8191, column: 3, scope: !13157)
!13457 = !DILocation(line: 8191, column: 10, scope: !13157)
!13458 = !DILocation(line: 8191, column: 21, scope: !13157)
!13459 = !DILocation(line: 8193, column: 18, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 8192, column: 5)
!13461 = !DILocation(line: 8193, column: 24, scope: !13460)
!13462 = !DILocation(line: 8193, column: 17, scope: !13460)
!13463 = !DILocation(line: 8193, column: 15, scope: !13460)
!13464 = !DILocation(line: 8194, column: 14, scope: !13460)
!13465 = !DILocation(line: 8194, column: 9, scope: !13460)
!13466 = !DILocation(line: 8194, column: 12, scope: !13460)
!13467 = !DILocation(line: 8195, column: 14, scope: !13460)
!13468 = !DILocation(line: 8195, column: 20, scope: !13460)
!13469 = !DILocation(line: 8195, column: 11, scope: !13460)
!13470 = !DILocation(line: 8196, column: 16, scope: !13460)
!13471 = distinct !{!13471, !13456, !13472}
!13472 = !DILocation(line: 8197, column: 5, scope: !13157)
!13473 = !DILocation(line: 8199, column: 3, scope: !13157)
!13474 = !DILocation(line: 8200, column: 3, scope: !13157)
!13475 = distinct !DISubprogram(name: "reverseSamplesBytes", scope: !3, file: !3, line: 8811, type: !11581, scopeLine: 8813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!13476 = !DILocalVariable(name: "spp", arg: 1, scope: !13475, file: !3, line: 8811, type: !103)
!13477 = !DILocation(line: 8811, column: 29, scope: !13475)
!13478 = !DILocalVariable(name: "bps", arg: 2, scope: !13475, file: !3, line: 8811, type: !103)
!13479 = !DILocation(line: 8811, column: 41, scope: !13475)
!13480 = !DILocalVariable(name: "width", arg: 3, scope: !13475, file: !3, line: 8811, type: !105)
!13481 = !DILocation(line: 8811, column: 53, scope: !13475)
!13482 = !DILocalVariable(name: "src", arg: 4, scope: !13475, file: !3, line: 8812, type: !116)
!13483 = !DILocation(line: 8812, column: 29, scope: !13475)
!13484 = !DILocalVariable(name: "dst", arg: 5, scope: !13475, file: !3, line: 8812, type: !116)
!13485 = !DILocation(line: 8812, column: 41, scope: !13475)
!13486 = !DILocalVariable(name: "i", scope: !13475, file: !3, line: 8814, type: !110)
!13487 = !DILocation(line: 8814, column: 7, scope: !13475)
!13488 = !DILocalVariable(name: "col", scope: !13475, file: !3, line: 8815, type: !105)
!13489 = !DILocation(line: 8815, column: 11, scope: !13475)
!13490 = !DILocalVariable(name: "bytes_per_pixel", scope: !13475, file: !3, line: 8815, type: !105)
!13491 = !DILocation(line: 8815, column: 16, scope: !13475)
!13492 = !DILocalVariable(name: "col_offset", scope: !13475, file: !3, line: 8815, type: !105)
!13493 = !DILocation(line: 8815, column: 33, scope: !13475)
!13494 = !DILocalVariable(name: "bytebuff1", scope: !13475, file: !3, line: 8816, type: !114)
!13495 = !DILocation(line: 8816, column: 11, scope: !13475)
!13496 = !DILocalVariable(name: "swapbuff", scope: !13475, file: !3, line: 8817, type: !13497)
!13497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !2054)
!13498 = !DILocation(line: 8817, column: 17, scope: !13475)
!13499 = !DILocation(line: 8819, column: 8, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13475, file: !3, line: 8819, column: 7)
!13501 = !DILocation(line: 8819, column: 12, scope: !13500)
!13502 = !DILocation(line: 8819, column: 21, scope: !13500)
!13503 = !DILocation(line: 8819, column: 25, scope: !13500)
!13504 = !DILocation(line: 8819, column: 29, scope: !13500)
!13505 = !DILocation(line: 8819, column: 7, scope: !13475)
!13506 = !DILocation(line: 8821, column: 5, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13500, file: !3, line: 8820, column: 5)
!13508 = !DILocation(line: 8822, column: 5, scope: !13507)
!13509 = !DILocation(line: 8825, column: 24, scope: !13475)
!13510 = !DILocation(line: 8825, column: 30, scope: !13475)
!13511 = !DILocation(line: 8825, column: 28, scope: !13475)
!13512 = !DILocation(line: 8825, column: 35, scope: !13475)
!13513 = !DILocation(line: 8825, column: 40, scope: !13475)
!13514 = !DILocation(line: 8825, column: 20, scope: !13475)
!13515 = !DILocation(line: 8826, column: 11, scope: !13475)
!13516 = !DILocation(line: 8826, column: 15, scope: !13475)
!13517 = !DILocation(line: 8826, column: 3, scope: !13475)
!13518 = !DILocation(line: 8831, column: 23, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 8831, column: 14)
!13520 = distinct !DILexicalBlock(scope: !13475, file: !3, line: 8827, column: 6)
!13521 = !DILocation(line: 8831, column: 19, scope: !13519)
!13522 = !DILocation(line: 8831, column: 28, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 8831, column: 14)
!13524 = !DILocation(line: 8831, column: 35, scope: !13523)
!13525 = !DILocation(line: 8831, column: 41, scope: !13523)
!13526 = !DILocation(line: 8831, column: 32, scope: !13523)
!13527 = !DILocation(line: 8831, column: 14, scope: !13519)
!13528 = !DILocation(line: 8833, column: 22, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13523, file: !3, line: 8832, column: 16)
!13530 = !DILocation(line: 8833, column: 28, scope: !13529)
!13531 = !DILocation(line: 8833, column: 26, scope: !13529)
!13532 = !DILocation(line: 8833, column: 20, scope: !13529)
!13533 = !DILocation(line: 8834, column: 22, scope: !13529)
!13534 = !DILocation(line: 8834, column: 32, scope: !13529)
!13535 = !DILocation(line: 8834, column: 38, scope: !13529)
!13536 = !DILocation(line: 8834, column: 36, scope: !13529)
!13537 = !DILocation(line: 8834, column: 50, scope: !13529)
!13538 = !DILocation(line: 8834, column: 9, scope: !13529)
!13539 = !DILocation(line: 8835, column: 22, scope: !13529)
!13540 = !DILocation(line: 8835, column: 28, scope: !13529)
!13541 = !DILocation(line: 8835, column: 26, scope: !13529)
!13542 = !DILocation(line: 8835, column: 40, scope: !13529)
!13543 = !DILocation(line: 8835, column: 46, scope: !13529)
!13544 = !DILocation(line: 8835, column: 44, scope: !13529)
!13545 = !DILocation(line: 8835, column: 59, scope: !13529)
!13546 = !DILocation(line: 8835, column: 57, scope: !13529)
!13547 = !DILocation(line: 8835, column: 76, scope: !13529)
!13548 = !DILocation(line: 8835, column: 9, scope: !13529)
!13549 = !DILocation(line: 8836, column: 22, scope: !13529)
!13550 = !DILocation(line: 8836, column: 28, scope: !13529)
!13551 = !DILocation(line: 8836, column: 26, scope: !13529)
!13552 = !DILocation(line: 8836, column: 41, scope: !13529)
!13553 = !DILocation(line: 8836, column: 39, scope: !13529)
!13554 = !DILocation(line: 8836, column: 58, scope: !13529)
!13555 = !DILocation(line: 8836, column: 68, scope: !13529)
!13556 = !DILocation(line: 8836, column: 9, scope: !13529)
!13557 = !DILocation(line: 8837, column: 16, scope: !13529)
!13558 = !DILocation(line: 8831, column: 50, scope: !13523)
!13559 = !DILocation(line: 8831, column: 14, scope: !13523)
!13560 = distinct !{!13560, !13527, !13561}
!13561 = !DILocation(line: 8837, column: 16, scope: !13519)
!13562 = !DILocation(line: 8838, column: 7, scope: !13520)
!13563 = !DILocation(line: 8840, column: 23, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 8840, column: 14)
!13565 = !DILocation(line: 8840, column: 19, scope: !13564)
!13566 = !DILocation(line: 8840, column: 28, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13564, file: !3, line: 8840, column: 14)
!13568 = !DILocation(line: 8840, column: 35, scope: !13567)
!13569 = !DILocation(line: 8840, column: 41, scope: !13567)
!13570 = !DILocation(line: 8840, column: 32, scope: !13567)
!13571 = !DILocation(line: 8840, column: 14, scope: !13564)
!13572 = !DILocation(line: 8842, column: 16, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13574, file: !3, line: 8842, column: 9)
!13574 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 8841, column: 16)
!13575 = !DILocation(line: 8842, column: 14, scope: !13573)
!13576 = !DILocation(line: 8842, column: 21, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 8842, column: 9)
!13578 = !DILocation(line: 8842, column: 25, scope: !13577)
!13579 = !DILocation(line: 8842, column: 23, scope: !13577)
!13580 = !DILocation(line: 8842, column: 9, scope: !13573)
!13581 = !DILocation(line: 8844, column: 18, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 8843, column: 19)
!13583 = !DILocation(line: 8844, column: 17, scope: !13582)
!13584 = !DILocation(line: 8844, column: 15, scope: !13582)
!13585 = !DILocation(line: 8845, column: 16, scope: !13582)
!13586 = !DILocation(line: 8845, column: 22, scope: !13582)
!13587 = !DILocation(line: 8845, column: 20, scope: !13582)
!13588 = !DILocation(line: 8845, column: 28, scope: !13582)
!13589 = !DILocation(line: 8845, column: 26, scope: !13582)
!13590 = !DILocation(line: 8845, column: 14, scope: !13582)
!13591 = !DILocation(line: 8845, column: 9, scope: !13582)
!13592 = !DILocation(line: 8845, column: 12, scope: !13582)
!13593 = !DILocation(line: 8846, column: 38, scope: !13582)
!13594 = !DILocation(line: 8846, column: 21, scope: !13582)
!13595 = !DILocation(line: 8846, column: 27, scope: !13582)
!13596 = !DILocation(line: 8846, column: 25, scope: !13582)
!13597 = !DILocation(line: 8846, column: 33, scope: !13582)
!13598 = !DILocation(line: 8846, column: 31, scope: !13582)
!13599 = !DILocation(line: 8846, column: 36, scope: !13582)
!13600 = !DILocation(line: 8847, column: 5, scope: !13582)
!13601 = !DILocation(line: 8842, column: 31, scope: !13577)
!13602 = !DILocation(line: 8842, column: 9, scope: !13577)
!13603 = distinct !{!13603, !13580, !13604}
!13604 = !DILocation(line: 8847, column: 5, scope: !13573)
!13605 = !DILocation(line: 8848, column: 10, scope: !13574)
!13606 = !DILocation(line: 8848, column: 7, scope: !13574)
!13607 = !DILocation(line: 8849, column: 17, scope: !13574)
!13608 = !DILocation(line: 8840, column: 50, scope: !13567)
!13609 = !DILocation(line: 8840, column: 14, scope: !13567)
!13610 = distinct !{!13610, !13571, !13611}
!13611 = !DILocation(line: 8849, column: 17, scope: !13564)
!13612 = !DILocation(line: 8850, column: 7, scope: !13520)
!13613 = !DILocation(line: 8851, column: 75, scope: !13520)
!13614 = !DILocation(line: 8851, column: 15, scope: !13520)
!13615 = !DILocation(line: 8852, column: 8, scope: !13520)
!13616 = !DILocation(line: 8854, column: 3, scope: !13475)
!13617 = !DILocation(line: 8855, column: 3, scope: !13475)
!13618 = distinct !DISubprogram(name: "extractCompositeRegions", scope: !3, file: !3, line: 6139, type: !13619, scopeLine: 6141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{!110, !542, !592, !106, !106}
!13621 = !DILocalVariable(name: "image", arg: 1, scope: !13618, file: !3, line: 6139, type: !542)
!13622 = !DILocation(line: 6139, column: 44, scope: !13618)
!13623 = !DILocalVariable(name: "crop", arg: 2, scope: !13618, file: !3, line: 6139, type: !592)
!13624 = !DILocation(line: 6139, column: 70, scope: !13618)
!13625 = !DILocalVariable(name: "read_buff", arg: 3, scope: !13618, file: !3, line: 6140, type: !106)
!13626 = !DILocation(line: 6140, column: 40, scope: !13618)
!13627 = !DILocalVariable(name: "crop_buff", arg: 4, scope: !13618, file: !3, line: 6140, type: !106)
!13628 = !DILocation(line: 6140, column: 66, scope: !13618)
!13629 = !DILocalVariable(name: "shift_width", scope: !13618, file: !3, line: 6142, type: !110)
!13630 = !DILocation(line: 6142, column: 13, scope: !13618)
!13631 = !DILocalVariable(name: "bytes_per_sample", scope: !13618, file: !3, line: 6142, type: !110)
!13632 = !DILocation(line: 6142, column: 26, scope: !13618)
!13633 = !DILocalVariable(name: "bytes_per_pixel", scope: !13618, file: !3, line: 6142, type: !110)
!13634 = !DILocation(line: 6142, column: 44, scope: !13618)
!13635 = !DILocalVariable(name: "i", scope: !13618, file: !3, line: 6143, type: !105)
!13636 = !DILocation(line: 6143, column: 13, scope: !13618)
!13637 = !DILocalVariable(name: "trailing_bits", scope: !13618, file: !3, line: 6143, type: !105)
!13638 = !DILocation(line: 6143, column: 16, scope: !13618)
!13639 = !DILocalVariable(name: "prev_trailing_bits", scope: !13618, file: !3, line: 6143, type: !105)
!13640 = !DILocation(line: 6143, column: 31, scope: !13618)
!13641 = !DILocalVariable(name: "row", scope: !13618, file: !3, line: 6144, type: !105)
!13642 = !DILocation(line: 6144, column: 13, scope: !13618)
!13643 = !DILocalVariable(name: "first_row", scope: !13618, file: !3, line: 6144, type: !105)
!13644 = !DILocation(line: 6144, column: 18, scope: !13618)
!13645 = !DILocalVariable(name: "last_row", scope: !13618, file: !3, line: 6144, type: !105)
!13646 = !DILocation(line: 6144, column: 29, scope: !13618)
!13647 = !DILocalVariable(name: "first_col", scope: !13618, file: !3, line: 6144, type: !105)
!13648 = !DILocation(line: 6144, column: 39, scope: !13618)
!13649 = !DILocalVariable(name: "last_col", scope: !13618, file: !3, line: 6144, type: !105)
!13650 = !DILocation(line: 6144, column: 50, scope: !13618)
!13651 = !DILocalVariable(name: "src_rowsize", scope: !13618, file: !3, line: 6145, type: !105)
!13652 = !DILocation(line: 6145, column: 13, scope: !13618)
!13653 = !DILocalVariable(name: "dst_rowsize", scope: !13618, file: !3, line: 6145, type: !105)
!13654 = !DILocation(line: 6145, column: 26, scope: !13618)
!13655 = !DILocalVariable(name: "src_offset", scope: !13618, file: !3, line: 6145, type: !105)
!13656 = !DILocation(line: 6145, column: 39, scope: !13618)
!13657 = !DILocalVariable(name: "dst_offset", scope: !13618, file: !3, line: 6145, type: !105)
!13658 = !DILocation(line: 6145, column: 51, scope: !13618)
!13659 = !DILocalVariable(name: "crop_width", scope: !13618, file: !3, line: 6146, type: !105)
!13660 = !DILocation(line: 6146, column: 13, scope: !13618)
!13661 = !DILocalVariable(name: "crop_length", scope: !13618, file: !3, line: 6146, type: !105)
!13662 = !DILocation(line: 6146, column: 25, scope: !13618)
!13663 = !DILocalVariable(name: "img_width", scope: !13618, file: !3, line: 6146, type: !105)
!13664 = !DILocation(line: 6146, column: 38, scope: !13618)
!13665 = !DILocalVariable(name: "img_length", scope: !13618, file: !3, line: 6146, type: !105)
!13666 = !DILocation(line: 6146, column: 49, scope: !13618)
!13667 = !DILocalVariable(name: "prev_length", scope: !13618, file: !3, line: 6147, type: !105)
!13668 = !DILocation(line: 6147, column: 13, scope: !13618)
!13669 = !DILocalVariable(name: "prev_width", scope: !13618, file: !3, line: 6147, type: !105)
!13670 = !DILocation(line: 6147, column: 26, scope: !13618)
!13671 = !DILocalVariable(name: "composite_width", scope: !13618, file: !3, line: 6147, type: !105)
!13672 = !DILocation(line: 6147, column: 38, scope: !13618)
!13673 = !DILocalVariable(name: "bps", scope: !13618, file: !3, line: 6148, type: !103)
!13674 = !DILocation(line: 6148, column: 13, scope: !13618)
!13675 = !DILocalVariable(name: "spp", scope: !13618, file: !3, line: 6148, type: !103)
!13676 = !DILocation(line: 6148, column: 18, scope: !13618)
!13677 = !DILocalVariable(name: "src", scope: !13618, file: !3, line: 6149, type: !116)
!13678 = !DILocation(line: 6149, column: 13, scope: !13618)
!13679 = !DILocalVariable(name: "dst", scope: !13618, file: !3, line: 6149, type: !116)
!13680 = !DILocation(line: 6149, column: 19, scope: !13618)
!13681 = !DILocalVariable(name: "count", scope: !13618, file: !3, line: 6150, type: !7616)
!13682 = !DILocation(line: 6150, column: 13, scope: !13618)
!13683 = !DILocalVariable(name: "sample", scope: !13618, file: !3, line: 6150, type: !7616)
!13684 = !DILocation(line: 6150, column: 20, scope: !13618)
!13685 = !DILocation(line: 6152, column: 15, scope: !13618)
!13686 = !DILocation(line: 6152, column: 22, scope: !13618)
!13687 = !DILocation(line: 6152, column: 13, scope: !13618)
!13688 = !DILocation(line: 6153, column: 16, scope: !13618)
!13689 = !DILocation(line: 6153, column: 23, scope: !13618)
!13690 = !DILocation(line: 6153, column: 14, scope: !13618)
!13691 = !DILocation(line: 6154, column: 9, scope: !13618)
!13692 = !DILocation(line: 6154, column: 16, scope: !13618)
!13693 = !DILocation(line: 6154, column: 7, scope: !13618)
!13694 = !DILocation(line: 6155, column: 9, scope: !13618)
!13695 = !DILocation(line: 6155, column: 16, scope: !13618)
!13696 = !DILocation(line: 6155, column: 7, scope: !13618)
!13697 = !DILocation(line: 6156, column: 11, scope: !13618)
!13698 = !DILocation(line: 6156, column: 9, scope: !13618)
!13699 = !DILocation(line: 6158, column: 23, scope: !13618)
!13700 = !DILocation(line: 6158, column: 27, scope: !13618)
!13701 = !DILocation(line: 6158, column: 32, scope: !13618)
!13702 = !DILocation(line: 6158, column: 20, scope: !13618)
!13703 = !DILocation(line: 6159, column: 24, scope: !13618)
!13704 = !DILocation(line: 6159, column: 30, scope: !13618)
!13705 = !DILocation(line: 6159, column: 28, scope: !13618)
!13706 = !DILocation(line: 6159, column: 35, scope: !13618)
!13707 = !DILocation(line: 6159, column: 40, scope: !13618)
!13708 = !DILocation(line: 6159, column: 20, scope: !13618)
!13709 = !DILocation(line: 6160, column: 8, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 6160, column: 7)
!13711 = !DILocation(line: 6160, column: 12, scope: !13710)
!13712 = !DILocation(line: 6160, column: 17, scope: !13710)
!13713 = !DILocation(line: 6160, column: 7, scope: !13618)
!13714 = !DILocation(line: 6161, column: 17, scope: !13710)
!13715 = !DILocation(line: 6161, column: 5, scope: !13710)
!13716 = !DILocation(line: 6164, column: 9, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !3, line: 6164, column: 9)
!13718 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 6163, column: 5)
!13719 = !DILocation(line: 6164, column: 28, scope: !13717)
!13720 = !DILocation(line: 6164, column: 45, scope: !13717)
!13721 = !DILocation(line: 6164, column: 25, scope: !13717)
!13722 = !DILocation(line: 6164, column: 9, scope: !13718)
!13723 = !DILocation(line: 6165, column: 21, scope: !13717)
!13724 = !DILocation(line: 6165, column: 19, scope: !13717)
!13725 = !DILocation(line: 6165, column: 7, scope: !13717)
!13726 = !DILocation(line: 6167, column: 21, scope: !13717)
!13727 = !DILocation(line: 6167, column: 38, scope: !13717)
!13728 = !DILocation(line: 6167, column: 19, scope: !13717)
!13729 = !DILocation(line: 6169, column: 9, scope: !13618)
!13730 = !DILocation(line: 6169, column: 7, scope: !13618)
!13731 = !DILocation(line: 6170, column: 9, scope: !13618)
!13732 = !DILocation(line: 6170, column: 7, scope: !13618)
!13733 = !DILocation(line: 6173, column: 28, scope: !13618)
!13734 = !DILocation(line: 6173, column: 14, scope: !13618)
!13735 = !DILocation(line: 6174, column: 38, scope: !13618)
!13736 = !DILocation(line: 6174, column: 22, scope: !13618)
!13737 = !DILocation(line: 6175, column: 21, scope: !13618)
!13738 = !DILocation(line: 6175, column: 27, scope: !13618)
!13739 = !DILocation(line: 6175, column: 19, scope: !13618)
!13740 = !DILocation(line: 6176, column: 3, scope: !13618)
!13741 = !DILocation(line: 6176, column: 9, scope: !13618)
!13742 = !DILocation(line: 6176, column: 24, scope: !13618)
!13743 = !DILocation(line: 6177, column: 3, scope: !13618)
!13744 = !DILocation(line: 6177, column: 9, scope: !13618)
!13745 = !DILocation(line: 6177, column: 25, scope: !13618)
!13746 = !DILocation(line: 6179, column: 10, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 6179, column: 3)
!13748 = !DILocation(line: 6179, column: 8, scope: !13747)
!13749 = !DILocation(line: 6179, column: 15, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13747, file: !3, line: 6179, column: 3)
!13751 = !DILocation(line: 6179, column: 19, scope: !13750)
!13752 = !DILocation(line: 6179, column: 25, scope: !13750)
!13753 = !DILocation(line: 6179, column: 17, scope: !13750)
!13754 = !DILocation(line: 6179, column: 3, scope: !13747)
!13755 = !DILocation(line: 6182, column: 17, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13750, file: !3, line: 6180, column: 5)
!13757 = !DILocation(line: 6182, column: 23, scope: !13756)
!13758 = !DILocation(line: 6182, column: 34, scope: !13756)
!13759 = !DILocation(line: 6182, column: 37, scope: !13756)
!13760 = !DILocation(line: 6182, column: 15, scope: !13756)
!13761 = !DILocation(line: 6183, column: 17, scope: !13756)
!13762 = !DILocation(line: 6183, column: 23, scope: !13756)
!13763 = !DILocation(line: 6183, column: 34, scope: !13756)
!13764 = !DILocation(line: 6183, column: 37, scope: !13756)
!13765 = !DILocation(line: 6183, column: 15, scope: !13756)
!13766 = !DILocation(line: 6184, column: 17, scope: !13756)
!13767 = !DILocation(line: 6184, column: 23, scope: !13756)
!13768 = !DILocation(line: 6184, column: 34, scope: !13756)
!13769 = !DILocation(line: 6184, column: 37, scope: !13756)
!13770 = !DILocation(line: 6184, column: 15, scope: !13756)
!13771 = !DILocation(line: 6185, column: 17, scope: !13756)
!13772 = !DILocation(line: 6185, column: 23, scope: !13756)
!13773 = !DILocation(line: 6185, column: 34, scope: !13756)
!13774 = !DILocation(line: 6185, column: 37, scope: !13756)
!13775 = !DILocation(line: 6185, column: 15, scope: !13756)
!13776 = !DILocation(line: 6187, column: 18, scope: !13756)
!13777 = !DILocation(line: 6187, column: 29, scope: !13756)
!13778 = !DILocation(line: 6187, column: 27, scope: !13756)
!13779 = !DILocation(line: 6187, column: 39, scope: !13756)
!13780 = !DILocation(line: 6187, column: 16, scope: !13756)
!13781 = !DILocation(line: 6188, column: 19, scope: !13756)
!13782 = !DILocation(line: 6188, column: 30, scope: !13756)
!13783 = !DILocation(line: 6188, column: 28, scope: !13756)
!13784 = !DILocation(line: 6188, column: 40, scope: !13756)
!13785 = !DILocation(line: 6188, column: 17, scope: !13756)
!13786 = !DILocation(line: 6191, column: 33, scope: !13756)
!13787 = !DILocation(line: 6191, column: 5, scope: !13756)
!13788 = !DILocation(line: 6191, column: 11, scope: !13756)
!13789 = !DILocation(line: 6191, column: 22, scope: !13756)
!13790 = !DILocation(line: 6191, column: 25, scope: !13756)
!13791 = !DILocation(line: 6191, column: 31, scope: !13756)
!13792 = !DILocation(line: 6192, column: 34, scope: !13756)
!13793 = !DILocation(line: 6192, column: 5, scope: !13756)
!13794 = !DILocation(line: 6192, column: 11, scope: !13756)
!13795 = !DILocation(line: 6192, column: 22, scope: !13756)
!13796 = !DILocation(line: 6192, column: 25, scope: !13756)
!13797 = !DILocation(line: 6192, column: 32, scope: !13756)
!13798 = !DILocation(line: 6193, column: 35, scope: !13756)
!13799 = !DILocation(line: 6193, column: 5, scope: !13756)
!13800 = !DILocation(line: 6193, column: 11, scope: !13756)
!13801 = !DILocation(line: 6193, column: 22, scope: !13756)
!13802 = !DILocation(line: 6193, column: 25, scope: !13756)
!13803 = !DILocation(line: 6193, column: 33, scope: !13756)
!13804 = !DILocation(line: 6195, column: 21, scope: !13756)
!13805 = !DILocation(line: 6195, column: 33, scope: !13756)
!13806 = !DILocation(line: 6195, column: 31, scope: !13756)
!13807 = !DILocation(line: 6195, column: 39, scope: !13756)
!13808 = !DILocation(line: 6195, column: 37, scope: !13756)
!13809 = !DILocation(line: 6195, column: 44, scope: !13756)
!13810 = !DILocation(line: 6195, column: 49, scope: !13756)
!13811 = !DILocation(line: 6195, column: 17, scope: !13756)
!13812 = !DILocation(line: 6196, column: 22, scope: !13756)
!13813 = !DILocation(line: 6196, column: 35, scope: !13756)
!13814 = !DILocation(line: 6196, column: 33, scope: !13756)
!13815 = !DILocation(line: 6196, column: 41, scope: !13756)
!13816 = !DILocation(line: 6196, column: 39, scope: !13756)
!13817 = !DILocation(line: 6196, column: 48, scope: !13756)
!13818 = !DILocation(line: 6196, column: 53, scope: !13756)
!13819 = !DILocation(line: 6196, column: 17, scope: !13756)
!13820 = !DILocation(line: 6198, column: 13, scope: !13756)
!13821 = !DILocation(line: 6198, column: 19, scope: !13756)
!13822 = !DILocation(line: 6198, column: 5, scope: !13756)
!13823 = !DILocation(line: 6199, column: 7, scope: !13756)
!13824 = !DILocation(line: 6203, column: 10, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 6203, column: 9)
!13826 = distinct !DILexicalBlock(scope: !13756, file: !3, line: 6199, column: 7)
!13827 = !DILocation(line: 6203, column: 12, scope: !13825)
!13828 = !DILocation(line: 6203, column: 17, scope: !13825)
!13829 = !DILocation(line: 6203, column: 21, scope: !13825)
!13830 = !DILocation(line: 6203, column: 35, scope: !13825)
!13831 = !DILocation(line: 6203, column: 41, scope: !13825)
!13832 = !DILocation(line: 6203, column: 52, scope: !13825)
!13833 = !DILocation(line: 6203, column: 54, scope: !13825)
!13834 = !DILocation(line: 6203, column: 59, scope: !13825)
!13835 = !DILocation(line: 6203, column: 32, scope: !13825)
!13836 = !DILocation(line: 6203, column: 9, scope: !13826)
!13837 = !DILocation(line: 6205, column: 7, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13825, file: !3, line: 6204, column: 14)
!13839 = !DILocation(line: 6207, column: 7, scope: !13838)
!13840 = !DILocation(line: 6210, column: 35, scope: !13826)
!13841 = !DILocation(line: 6210, column: 12, scope: !13826)
!13842 = !DILocation(line: 6210, column: 18, scope: !13826)
!13843 = !DILocation(line: 6210, column: 33, scope: !13826)
!13844 = !DILocation(line: 6211, column: 37, scope: !13826)
!13845 = !DILocation(line: 6211, column: 12, scope: !13826)
!13846 = !DILocation(line: 6211, column: 18, scope: !13826)
!13847 = !DILocation(line: 6211, column: 34, scope: !13826)
!13848 = !DILocation(line: 6213, column: 23, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 6213, column: 12)
!13850 = !DILocation(line: 6213, column: 21, scope: !13849)
!13851 = !DILocation(line: 6213, column: 17, scope: !13849)
!13852 = !DILocation(line: 6213, column: 34, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 6213, column: 12)
!13854 = !DILocation(line: 6213, column: 41, scope: !13853)
!13855 = !DILocation(line: 6213, column: 38, scope: !13853)
!13856 = !DILocation(line: 6213, column: 12, scope: !13849)
!13857 = !DILocation(line: 6215, column: 20, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13853, file: !3, line: 6214, column: 14)
!13859 = !DILocation(line: 6215, column: 26, scope: !13858)
!13860 = !DILocation(line: 6215, column: 24, scope: !13858)
!13861 = !DILocation(line: 6215, column: 18, scope: !13858)
!13862 = !DILocation(line: 6216, column: 21, scope: !13858)
!13863 = !DILocation(line: 6216, column: 27, scope: !13858)
!13864 = !DILocation(line: 6216, column: 25, scope: !13858)
!13865 = !DILocation(line: 6216, column: 40, scope: !13858)
!13866 = !DILocation(line: 6216, column: 38, scope: !13858)
!13867 = !DILocation(line: 6216, column: 18, scope: !13858)
!13868 = !DILocation(line: 6217, column: 20, scope: !13858)
!13869 = !DILocation(line: 6217, column: 32, scope: !13858)
!13870 = !DILocation(line: 6217, column: 30, scope: !13858)
!13871 = !DILocation(line: 6217, column: 18, scope: !13858)
!13872 = !DILocation(line: 6218, column: 20, scope: !13858)
!13873 = !DILocation(line: 6218, column: 32, scope: !13858)
!13874 = !DILocation(line: 6218, column: 30, scope: !13858)
!13875 = !DILocation(line: 6218, column: 46, scope: !13858)
!13876 = !DILocation(line: 6218, column: 60, scope: !13858)
!13877 = !DILocation(line: 6218, column: 58, scope: !13858)
!13878 = !DILocation(line: 6218, column: 43, scope: !13858)
!13879 = !DILocation(line: 6218, column: 18, scope: !13858)
!13880 = !DILocation(line: 6219, column: 22, scope: !13858)
!13881 = !DILocation(line: 6219, column: 14, scope: !13858)
!13882 = !DILocation(line: 6221, column: 55, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 6221, column: 28)
!13884 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 6220, column: 16)
!13885 = !DILocation(line: 6221, column: 60, scope: !13883)
!13886 = !DILocation(line: 6221, column: 65, scope: !13883)
!13887 = !DILocation(line: 6221, column: 76, scope: !13883)
!13888 = !DILocation(line: 6222, column: 55, scope: !13883)
!13889 = !DILocation(line: 6222, column: 60, scope: !13883)
!13890 = !DILocation(line: 6222, column: 65, scope: !13883)
!13891 = !DILocation(line: 6222, column: 72, scope: !13883)
!13892 = !DILocation(line: 6223, column: 55, scope: !13883)
!13893 = !DILocation(line: 6223, column: 64, scope: !13883)
!13894 = !DILocation(line: 6221, column: 28, scope: !13883)
!13895 = !DILocation(line: 6221, column: 28, scope: !13884)
!13896 = !DILocation(line: 6226, column: 64, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13883, file: !3, line: 6224, column: 26)
!13898 = !DILocation(line: 6225, column: 12, scope: !13897)
!13899 = !DILocation(line: 6227, column: 12, scope: !13897)
!13900 = !DILocation(line: 6229, column: 10, scope: !13884)
!13901 = !DILocation(line: 6230, column: 28, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 6230, column: 28)
!13903 = !DILocation(line: 6230, column: 32, scope: !13902)
!13904 = !DILocation(line: 6230, column: 28, scope: !13884)
!13905 = !DILocation(line: 6232, column: 64, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 6232, column: 30)
!13907 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 6231, column: 26)
!13908 = !DILocation(line: 6232, column: 69, scope: !13906)
!13909 = !DILocation(line: 6232, column: 74, scope: !13906)
!13910 = !DILocation(line: 6233, column: 64, scope: !13906)
!13911 = !DILocation(line: 6233, column: 72, scope: !13906)
!13912 = !DILocation(line: 6233, column: 77, scope: !13906)
!13913 = !DILocation(line: 6233, column: 82, scope: !13906)
!13914 = !DILocation(line: 6234, column: 64, scope: !13906)
!13915 = !DILocation(line: 6234, column: 75, scope: !13906)
!13916 = !DILocation(line: 6234, column: 84, scope: !13906)
!13917 = !DILocation(line: 6235, column: 64, scope: !13906)
!13918 = !DILocation(line: 6232, column: 30, scope: !13906)
!13919 = !DILocation(line: 6232, column: 30, scope: !13907)
!13920 = !DILocation(line: 6238, column: 66, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13906, file: !3, line: 6236, column: 28)
!13922 = !DILocation(line: 6237, column: 14, scope: !13921)
!13923 = !DILocation(line: 6239, column: 14, scope: !13921)
!13924 = !DILocation(line: 6241, column: 12, scope: !13907)
!13925 = !DILocation(line: 6244, column: 65, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 6244, column: 30)
!13927 = !DILocation(line: 6244, column: 70, scope: !13926)
!13928 = !DILocation(line: 6244, column: 75, scope: !13926)
!13929 = !DILocation(line: 6245, column: 65, scope: !13926)
!13930 = !DILocation(line: 6245, column: 73, scope: !13926)
!13931 = !DILocation(line: 6245, column: 78, scope: !13926)
!13932 = !DILocation(line: 6245, column: 83, scope: !13926)
!13933 = !DILocation(line: 6246, column: 65, scope: !13926)
!13934 = !DILocation(line: 6246, column: 76, scope: !13926)
!13935 = !DILocation(line: 6246, column: 85, scope: !13926)
!13936 = !DILocation(line: 6247, column: 65, scope: !13926)
!13937 = !DILocation(line: 6244, column: 30, scope: !13926)
!13938 = !DILocation(line: 6244, column: 30, scope: !13902)
!13939 = !DILocation(line: 6250, column: 66, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 6248, column: 28)
!13941 = !DILocation(line: 6249, column: 14, scope: !13940)
!13942 = !DILocation(line: 6251, column: 14, scope: !13940)
!13943 = !DILocation(line: 6253, column: 11, scope: !13884)
!13944 = !DILocation(line: 6254, column: 64, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 6254, column: 29)
!13946 = !DILocation(line: 6254, column: 69, scope: !13945)
!13947 = !DILocation(line: 6254, column: 74, scope: !13945)
!13948 = !DILocation(line: 6255, column: 64, scope: !13945)
!13949 = !DILocation(line: 6255, column: 72, scope: !13945)
!13950 = !DILocation(line: 6255, column: 77, scope: !13945)
!13951 = !DILocation(line: 6255, column: 82, scope: !13945)
!13952 = !DILocation(line: 6256, column: 64, scope: !13945)
!13953 = !DILocation(line: 6256, column: 75, scope: !13945)
!13954 = !DILocation(line: 6256, column: 84, scope: !13945)
!13955 = !DILocation(line: 6257, column: 64, scope: !13945)
!13956 = !DILocation(line: 6254, column: 29, scope: !13945)
!13957 = !DILocation(line: 6254, column: 29, scope: !13884)
!13958 = !DILocation(line: 6260, column: 65, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13945, file: !3, line: 6258, column: 27)
!13960 = !DILocation(line: 6259, column: 13, scope: !13959)
!13961 = !DILocation(line: 6261, column: 13, scope: !13959)
!13962 = !DILocation(line: 6263, column: 11, scope: !13884)
!13963 = !DILocation(line: 6266, column: 64, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 6266, column: 29)
!13965 = !DILocation(line: 6266, column: 69, scope: !13964)
!13966 = !DILocation(line: 6266, column: 74, scope: !13964)
!13967 = !DILocation(line: 6267, column: 64, scope: !13964)
!13968 = !DILocation(line: 6267, column: 72, scope: !13964)
!13969 = !DILocation(line: 6267, column: 77, scope: !13964)
!13970 = !DILocation(line: 6267, column: 82, scope: !13964)
!13971 = !DILocation(line: 6268, column: 64, scope: !13964)
!13972 = !DILocation(line: 6268, column: 75, scope: !13964)
!13973 = !DILocation(line: 6268, column: 84, scope: !13964)
!13974 = !DILocation(line: 6269, column: 64, scope: !13964)
!13975 = !DILocation(line: 6266, column: 29, scope: !13964)
!13976 = !DILocation(line: 6266, column: 29, scope: !13884)
!13977 = !DILocation(line: 6272, column: 65, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13964, file: !3, line: 6270, column: 27)
!13979 = !DILocation(line: 6271, column: 13, scope: !13978)
!13980 = !DILocation(line: 6273, column: 13, scope: !13978)
!13981 = !DILocation(line: 6275, column: 11, scope: !13884)
!13982 = !DILocation(line: 6276, column: 90, scope: !13884)
!13983 = !DILocation(line: 6276, column: 25, scope: !13884)
!13984 = !DILocation(line: 6277, column: 11, scope: !13884)
!13985 = !DILocation(line: 6279, column: 14, scope: !13858)
!13986 = !DILocation(line: 6213, column: 54, scope: !13853)
!13987 = !DILocation(line: 6213, column: 12, scope: !13853)
!13988 = distinct !{!13988, !13856, !13989}
!13989 = !DILocation(line: 6279, column: 14, scope: !13849)
!13990 = !DILocation(line: 6280, column: 27, scope: !13826)
!13991 = !DILocation(line: 6280, column: 24, scope: !13826)
!13992 = !DILocation(line: 6281, column: 5, scope: !13826)
!13993 = !DILocation(line: 6284, column: 10, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 6284, column: 9)
!13995 = !DILocation(line: 6284, column: 12, scope: !13994)
!13996 = !DILocation(line: 6284, column: 17, scope: !13994)
!13997 = !DILocation(line: 6284, column: 21, scope: !13994)
!13998 = !DILocation(line: 6284, column: 36, scope: !13994)
!13999 = !DILocation(line: 6284, column: 42, scope: !13994)
!14000 = !DILocation(line: 6284, column: 53, scope: !13994)
!14001 = !DILocation(line: 6284, column: 55, scope: !13994)
!14002 = !DILocation(line: 6284, column: 60, scope: !13994)
!14003 = !DILocation(line: 6284, column: 33, scope: !13994)
!14004 = !DILocation(line: 6284, column: 9, scope: !13826)
!14005 = !DILocation(line: 6286, column: 7, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 6285, column: 14)
!14007 = !DILocation(line: 6288, column: 7, scope: !14006)
!14008 = !DILocation(line: 6290, column: 36, scope: !13826)
!14009 = !DILocation(line: 6290, column: 12, scope: !13826)
!14010 = !DILocation(line: 6290, column: 18, scope: !13826)
!14011 = !DILocation(line: 6290, column: 33, scope: !13826)
!14012 = !DILocation(line: 6291, column: 36, scope: !13826)
!14013 = !DILocation(line: 6291, column: 12, scope: !13826)
!14014 = !DILocation(line: 6291, column: 18, scope: !13826)
!14015 = !DILocation(line: 6291, column: 34, scope: !13826)
!14016 = !DILocation(line: 6292, column: 29, scope: !13826)
!14017 = !DILocation(line: 6292, column: 47, scope: !13826)
!14018 = !DILocation(line: 6292, column: 45, scope: !13826)
!14019 = !DILocation(line: 6292, column: 53, scope: !13826)
!14020 = !DILocation(line: 6292, column: 51, scope: !13826)
!14021 = !DILocation(line: 6292, column: 60, scope: !13826)
!14022 = !DILocation(line: 6292, column: 65, scope: !13826)
!14023 = !DILocation(line: 6292, column: 24, scope: !13826)
!14024 = !DILocation(line: 6293, column: 29, scope: !13826)
!14025 = !DILocation(line: 6293, column: 42, scope: !13826)
!14026 = !DILocation(line: 6293, column: 40, scope: !13826)
!14027 = !DILocation(line: 6293, column: 48, scope: !13826)
!14028 = !DILocation(line: 6293, column: 46, scope: !13826)
!14029 = !DILocation(line: 6293, column: 55, scope: !13826)
!14030 = !DILocation(line: 6293, column: 26, scope: !13826)
!14031 = !DILocation(line: 6294, column: 23, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 6294, column: 12)
!14033 = !DILocation(line: 6294, column: 21, scope: !14032)
!14034 = !DILocation(line: 6294, column: 17, scope: !14032)
!14035 = !DILocation(line: 6294, column: 34, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14032, file: !3, line: 6294, column: 12)
!14037 = !DILocation(line: 6294, column: 41, scope: !14036)
!14038 = !DILocation(line: 6294, column: 38, scope: !14036)
!14039 = !DILocation(line: 6294, column: 12, scope: !14032)
!14040 = !DILocation(line: 6296, column: 20, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 6295, column: 14)
!14042 = !DILocation(line: 6296, column: 26, scope: !14041)
!14043 = !DILocation(line: 6296, column: 24, scope: !14041)
!14044 = !DILocation(line: 6296, column: 18, scope: !14041)
!14045 = !DILocation(line: 6297, column: 21, scope: !14041)
!14046 = !DILocation(line: 6297, column: 27, scope: !14041)
!14047 = !DILocation(line: 6297, column: 25, scope: !14041)
!14048 = !DILocation(line: 6297, column: 40, scope: !14041)
!14049 = !DILocation(line: 6297, column: 38, scope: !14041)
!14050 = !DILocation(line: 6297, column: 18, scope: !14041)
!14051 = !DILocation(line: 6298, column: 20, scope: !14041)
!14052 = !DILocation(line: 6298, column: 32, scope: !14041)
!14053 = !DILocation(line: 6298, column: 30, scope: !14041)
!14054 = !DILocation(line: 6298, column: 18, scope: !14041)
!14055 = !DILocation(line: 6299, column: 20, scope: !14041)
!14056 = !DILocation(line: 6299, column: 32, scope: !14041)
!14057 = !DILocation(line: 6299, column: 30, scope: !14041)
!14058 = !DILocation(line: 6299, column: 45, scope: !14041)
!14059 = !DILocation(line: 6299, column: 43, scope: !14041)
!14060 = !DILocation(line: 6299, column: 18, scope: !14041)
!14061 = !DILocation(line: 6301, column: 22, scope: !14041)
!14062 = !DILocation(line: 6301, column: 14, scope: !14041)
!14063 = !DILocation(line: 6303, column: 55, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14065, file: !3, line: 6303, column: 28)
!14065 = distinct !DILexicalBlock(scope: !14041, file: !3, line: 6302, column: 16)
!14066 = !DILocation(line: 6303, column: 60, scope: !14064)
!14067 = !DILocation(line: 6303, column: 65, scope: !14064)
!14068 = !DILocation(line: 6304, column: 55, scope: !14064)
!14069 = !DILocation(line: 6304, column: 63, scope: !14064)
!14070 = !DILocation(line: 6304, column: 68, scope: !14064)
!14071 = !DILocation(line: 6304, column: 73, scope: !14064)
!14072 = !DILocation(line: 6305, column: 55, scope: !14064)
!14073 = !DILocation(line: 6305, column: 66, scope: !14064)
!14074 = !DILocation(line: 6305, column: 75, scope: !14064)
!14075 = !DILocation(line: 6303, column: 28, scope: !14064)
!14076 = !DILocation(line: 6303, column: 28, scope: !14065)
!14077 = !DILocation(line: 6308, column: 64, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14064, file: !3, line: 6306, column: 26)
!14079 = !DILocation(line: 6307, column: 12, scope: !14078)
!14080 = !DILocation(line: 6309, column: 12, scope: !14078)
!14081 = !DILocation(line: 6311, column: 10, scope: !14065)
!14082 = !DILocation(line: 6312, column: 28, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14065, file: !3, line: 6312, column: 28)
!14084 = !DILocation(line: 6312, column: 32, scope: !14083)
!14085 = !DILocation(line: 6312, column: 28, scope: !14065)
!14086 = !DILocation(line: 6314, column: 64, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14088, file: !3, line: 6314, column: 30)
!14088 = distinct !DILexicalBlock(scope: !14083, file: !3, line: 6313, column: 26)
!14089 = !DILocation(line: 6314, column: 69, scope: !14087)
!14090 = !DILocation(line: 6314, column: 74, scope: !14087)
!14091 = !DILocation(line: 6315, column: 64, scope: !14087)
!14092 = !DILocation(line: 6315, column: 72, scope: !14087)
!14093 = !DILocation(line: 6315, column: 77, scope: !14087)
!14094 = !DILocation(line: 6315, column: 82, scope: !14087)
!14095 = !DILocation(line: 6316, column: 64, scope: !14087)
!14096 = !DILocation(line: 6316, column: 75, scope: !14087)
!14097 = !DILocation(line: 6316, column: 84, scope: !14087)
!14098 = !DILocation(line: 6317, column: 64, scope: !14087)
!14099 = !DILocation(line: 6314, column: 30, scope: !14087)
!14100 = !DILocation(line: 6314, column: 30, scope: !14088)
!14101 = !DILocation(line: 6320, column: 66, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14087, file: !3, line: 6318, column: 28)
!14103 = !DILocation(line: 6319, column: 14, scope: !14102)
!14104 = !DILocation(line: 6321, column: 14, scope: !14102)
!14105 = !DILocation(line: 6323, column: 12, scope: !14088)
!14106 = !DILocation(line: 6326, column: 65, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14083, file: !3, line: 6326, column: 30)
!14108 = !DILocation(line: 6326, column: 70, scope: !14107)
!14109 = !DILocation(line: 6326, column: 75, scope: !14107)
!14110 = !DILocation(line: 6327, column: 65, scope: !14107)
!14111 = !DILocation(line: 6327, column: 73, scope: !14107)
!14112 = !DILocation(line: 6327, column: 78, scope: !14107)
!14113 = !DILocation(line: 6327, column: 83, scope: !14107)
!14114 = !DILocation(line: 6328, column: 65, scope: !14107)
!14115 = !DILocation(line: 6328, column: 76, scope: !14107)
!14116 = !DILocation(line: 6328, column: 85, scope: !14107)
!14117 = !DILocation(line: 6329, column: 65, scope: !14107)
!14118 = !DILocation(line: 6326, column: 30, scope: !14107)
!14119 = !DILocation(line: 6326, column: 30, scope: !14083)
!14120 = !DILocation(line: 6332, column: 66, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14107, file: !3, line: 6330, column: 28)
!14122 = !DILocation(line: 6331, column: 14, scope: !14121)
!14123 = !DILocation(line: 6333, column: 14, scope: !14121)
!14124 = !DILocation(line: 6335, column: 11, scope: !14065)
!14125 = !DILocation(line: 6336, column: 63, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14065, file: !3, line: 6336, column: 28)
!14127 = !DILocation(line: 6336, column: 68, scope: !14126)
!14128 = !DILocation(line: 6336, column: 73, scope: !14126)
!14129 = !DILocation(line: 6337, column: 64, scope: !14126)
!14130 = !DILocation(line: 6337, column: 72, scope: !14126)
!14131 = !DILocation(line: 6337, column: 77, scope: !14126)
!14132 = !DILocation(line: 6337, column: 82, scope: !14126)
!14133 = !DILocation(line: 6338, column: 64, scope: !14126)
!14134 = !DILocation(line: 6338, column: 75, scope: !14126)
!14135 = !DILocation(line: 6338, column: 84, scope: !14126)
!14136 = !DILocation(line: 6339, column: 64, scope: !14126)
!14137 = !DILocation(line: 6336, column: 28, scope: !14126)
!14138 = !DILocation(line: 6336, column: 28, scope: !14065)
!14139 = !DILocation(line: 6342, column: 65, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14126, file: !3, line: 6340, column: 27)
!14141 = !DILocation(line: 6341, column: 13, scope: !14140)
!14142 = !DILocation(line: 6343, column: 13, scope: !14140)
!14143 = !DILocation(line: 6345, column: 11, scope: !14065)
!14144 = !DILocation(line: 6348, column: 64, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14065, file: !3, line: 6348, column: 29)
!14146 = !DILocation(line: 6348, column: 69, scope: !14145)
!14147 = !DILocation(line: 6348, column: 74, scope: !14145)
!14148 = !DILocation(line: 6349, column: 64, scope: !14145)
!14149 = !DILocation(line: 6349, column: 72, scope: !14145)
!14150 = !DILocation(line: 6349, column: 77, scope: !14145)
!14151 = !DILocation(line: 6349, column: 82, scope: !14145)
!14152 = !DILocation(line: 6350, column: 64, scope: !14145)
!14153 = !DILocation(line: 6350, column: 75, scope: !14145)
!14154 = !DILocation(line: 6350, column: 84, scope: !14145)
!14155 = !DILocation(line: 6351, column: 64, scope: !14145)
!14156 = !DILocation(line: 6348, column: 29, scope: !14145)
!14157 = !DILocation(line: 6348, column: 29, scope: !14065)
!14158 = !DILocation(line: 6354, column: 65, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 6352, column: 27)
!14160 = !DILocation(line: 6353, column: 13, scope: !14159)
!14161 = !DILocation(line: 6355, column: 13, scope: !14159)
!14162 = !DILocation(line: 6357, column: 11, scope: !14065)
!14163 = !DILocation(line: 6358, column: 90, scope: !14065)
!14164 = !DILocation(line: 6358, column: 25, scope: !14065)
!14165 = !DILocation(line: 6359, column: 11, scope: !14065)
!14166 = !DILocation(line: 6361, column: 7, scope: !14041)
!14167 = !DILocation(line: 6294, column: 54, scope: !14036)
!14168 = !DILocation(line: 6294, column: 12, scope: !14036)
!14169 = distinct !{!14169, !14039, !14170}
!14170 = !DILocation(line: 6361, column: 7, scope: !14032)
!14171 = !DILocation(line: 6362, column: 20, scope: !13826)
!14172 = !DILocation(line: 6362, column: 33, scope: !13826)
!14173 = !DILocation(line: 6362, column: 31, scope: !13826)
!14174 = !DILocation(line: 6362, column: 39, scope: !13826)
!14175 = !DILocation(line: 6362, column: 37, scope: !13826)
!14176 = !DILocation(line: 6362, column: 46, scope: !13826)
!14177 = !DILocation(line: 6362, column: 16, scope: !13826)
!14178 = !DILocation(line: 6363, column: 34, scope: !13826)
!14179 = !DILocation(line: 6363, column: 31, scope: !13826)
!14180 = !DILocation(line: 6364, column: 16, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 6364, column: 16)
!14182 = !DILocation(line: 6364, column: 35, scope: !14181)
!14183 = !DILocation(line: 6364, column: 16, scope: !13826)
!14184 = !DILocation(line: 6365, column: 25, scope: !14181)
!14185 = !DILocation(line: 6365, column: 7, scope: !14181)
!14186 = !DILocation(line: 6366, column: 5, scope: !13826)
!14187 = !DILocation(line: 6368, column: 5, scope: !13756)
!14188 = !DILocation(line: 6179, column: 38, scope: !13750)
!14189 = !DILocation(line: 6179, column: 3, scope: !13750)
!14190 = distinct !{!14190, !13754, !14191}
!14191 = !DILocation(line: 6368, column: 5, scope: !13747)
!14192 = !DILocation(line: 6369, column: 7, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 6369, column: 7)
!14194 = !DILocation(line: 6369, column: 13, scope: !14193)
!14195 = !DILocation(line: 6369, column: 31, scope: !14193)
!14196 = !DILocation(line: 6369, column: 28, scope: !14193)
!14197 = !DILocation(line: 6369, column: 7, scope: !13618)
!14198 = !DILocation(line: 6370, column: 5, scope: !14193)
!14199 = !DILocation(line: 6372, column: 3, scope: !13618)
!14200 = !DILocation(line: 6373, column: 3, scope: !13618)
!14201 = distinct !DISubprogram(name: "extractSeparateRegion", scope: !3, file: !3, line: 6387, type: !14202, scopeLine: 6390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!14202 = !DISubroutineType(types: !14203)
!14203 = !{!110, !542, !592, !106, !106, !110}
!14204 = !DILocalVariable(name: "image", arg: 1, scope: !14201, file: !3, line: 6387, type: !542)
!14205 = !DILocation(line: 6387, column: 42, scope: !14201)
!14206 = !DILocalVariable(name: "crop", arg: 2, scope: !14201, file: !3, line: 6387, type: !592)
!14207 = !DILocation(line: 6387, column: 68, scope: !14201)
!14208 = !DILocalVariable(name: "read_buff", arg: 3, scope: !14201, file: !3, line: 6388, type: !106)
!14209 = !DILocation(line: 6388, column: 38, scope: !14201)
!14210 = !DILocalVariable(name: "crop_buff", arg: 4, scope: !14201, file: !3, line: 6388, type: !106)
!14211 = !DILocation(line: 6388, column: 64, scope: !14201)
!14212 = !DILocalVariable(name: "region", arg: 5, scope: !14201, file: !3, line: 6389, type: !110)
!14213 = !DILocation(line: 6389, column: 27, scope: !14201)
!14214 = !DILocalVariable(name: "shift_width", scope: !14201, file: !3, line: 6391, type: !110)
!14215 = !DILocation(line: 6391, column: 11, scope: !14201)
!14216 = !DILocalVariable(name: "prev_trailing_bits", scope: !14201, file: !3, line: 6391, type: !110)
!14217 = !DILocation(line: 6391, column: 24, scope: !14201)
!14218 = !DILocalVariable(name: "bytes_per_sample", scope: !14201, file: !3, line: 6392, type: !105)
!14219 = !DILocation(line: 6392, column: 11, scope: !14201)
!14220 = !DILocalVariable(name: "bytes_per_pixel", scope: !14201, file: !3, line: 6392, type: !105)
!14221 = !DILocation(line: 6392, column: 29, scope: !14201)
!14222 = !DILocalVariable(name: "src_rowsize", scope: !14201, file: !3, line: 6393, type: !105)
!14223 = !DILocation(line: 6393, column: 11, scope: !14201)
!14224 = !DILocalVariable(name: "dst_rowsize", scope: !14201, file: !3, line: 6393, type: !105)
!14225 = !DILocation(line: 6393, column: 24, scope: !14201)
!14226 = !DILocalVariable(name: "row", scope: !14201, file: !3, line: 6394, type: !105)
!14227 = !DILocation(line: 6394, column: 11, scope: !14201)
!14228 = !DILocalVariable(name: "first_row", scope: !14201, file: !3, line: 6394, type: !105)
!14229 = !DILocation(line: 6394, column: 16, scope: !14201)
!14230 = !DILocalVariable(name: "last_row", scope: !14201, file: !3, line: 6394, type: !105)
!14231 = !DILocation(line: 6394, column: 27, scope: !14201)
!14232 = !DILocalVariable(name: "first_col", scope: !14201, file: !3, line: 6394, type: !105)
!14233 = !DILocation(line: 6394, column: 37, scope: !14201)
!14234 = !DILocalVariable(name: "last_col", scope: !14201, file: !3, line: 6394, type: !105)
!14235 = !DILocation(line: 6394, column: 48, scope: !14201)
!14236 = !DILocalVariable(name: "src_offset", scope: !14201, file: !3, line: 6395, type: !105)
!14237 = !DILocation(line: 6395, column: 11, scope: !14201)
!14238 = !DILocalVariable(name: "dst_offset", scope: !14201, file: !3, line: 6395, type: !105)
!14239 = !DILocation(line: 6395, column: 23, scope: !14201)
!14240 = !DILocalVariable(name: "crop_width", scope: !14201, file: !3, line: 6396, type: !105)
!14241 = !DILocation(line: 6396, column: 11, scope: !14201)
!14242 = !DILocalVariable(name: "crop_length", scope: !14201, file: !3, line: 6396, type: !105)
!14243 = !DILocation(line: 6396, column: 23, scope: !14201)
!14244 = !DILocalVariable(name: "img_width", scope: !14201, file: !3, line: 6396, type: !105)
!14245 = !DILocation(line: 6396, column: 36, scope: !14201)
!14246 = !DILocalVariable(name: "img_length", scope: !14201, file: !3, line: 6396, type: !105)
!14247 = !DILocation(line: 6396, column: 47, scope: !14201)
!14248 = !DILocalVariable(name: "bps", scope: !14201, file: !3, line: 6397, type: !103)
!14249 = !DILocation(line: 6397, column: 11, scope: !14201)
!14250 = !DILocalVariable(name: "spp", scope: !14201, file: !3, line: 6397, type: !103)
!14251 = !DILocation(line: 6397, column: 16, scope: !14201)
!14252 = !DILocalVariable(name: "src", scope: !14201, file: !3, line: 6398, type: !116)
!14253 = !DILocation(line: 6398, column: 11, scope: !14201)
!14254 = !DILocalVariable(name: "dst", scope: !14201, file: !3, line: 6398, type: !116)
!14255 = !DILocation(line: 6398, column: 17, scope: !14201)
!14256 = !DILocalVariable(name: "count", scope: !14201, file: !3, line: 6399, type: !7616)
!14257 = !DILocation(line: 6399, column: 13, scope: !14201)
!14258 = !DILocalVariable(name: "sample", scope: !14201, file: !3, line: 6399, type: !7616)
!14259 = !DILocation(line: 6399, column: 20, scope: !14201)
!14260 = !DILocation(line: 6401, column: 15, scope: !14201)
!14261 = !DILocation(line: 6401, column: 22, scope: !14201)
!14262 = !DILocation(line: 6401, column: 13, scope: !14201)
!14263 = !DILocation(line: 6402, column: 16, scope: !14201)
!14264 = !DILocation(line: 6402, column: 23, scope: !14201)
!14265 = !DILocation(line: 6402, column: 14, scope: !14201)
!14266 = !DILocation(line: 6403, column: 9, scope: !14201)
!14267 = !DILocation(line: 6403, column: 16, scope: !14201)
!14268 = !DILocation(line: 6403, column: 7, scope: !14201)
!14269 = !DILocation(line: 6404, column: 9, scope: !14201)
!14270 = !DILocation(line: 6404, column: 16, scope: !14201)
!14271 = !DILocation(line: 6404, column: 7, scope: !14201)
!14272 = !DILocation(line: 6405, column: 11, scope: !14201)
!14273 = !DILocation(line: 6405, column: 9, scope: !14201)
!14274 = !DILocation(line: 6407, column: 23, scope: !14201)
!14275 = !DILocation(line: 6407, column: 27, scope: !14201)
!14276 = !DILocation(line: 6407, column: 32, scope: !14201)
!14277 = !DILocation(line: 6407, column: 20, scope: !14201)
!14278 = !DILocation(line: 6408, column: 24, scope: !14201)
!14279 = !DILocation(line: 6408, column: 30, scope: !14201)
!14280 = !DILocation(line: 6408, column: 28, scope: !14201)
!14281 = !DILocation(line: 6408, column: 35, scope: !14201)
!14282 = !DILocation(line: 6408, column: 40, scope: !14201)
!14283 = !DILocation(line: 6408, column: 20, scope: !14201)
!14284 = !DILocation(line: 6409, column: 8, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 6409, column: 7)
!14286 = !DILocation(line: 6409, column: 12, scope: !14285)
!14287 = !DILocation(line: 6409, column: 17, scope: !14285)
!14288 = !DILocation(line: 6409, column: 7, scope: !14201)
!14289 = !DILocation(line: 6410, column: 17, scope: !14285)
!14290 = !DILocation(line: 6410, column: 5, scope: !14285)
!14291 = !DILocation(line: 6413, column: 9, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !3, line: 6413, column: 9)
!14293 = distinct !DILexicalBlock(scope: !14285, file: !3, line: 6412, column: 5)
!14294 = !DILocation(line: 6413, column: 28, scope: !14292)
!14295 = !DILocation(line: 6413, column: 45, scope: !14292)
!14296 = !DILocation(line: 6413, column: 25, scope: !14292)
!14297 = !DILocation(line: 6413, column: 9, scope: !14293)
!14298 = !DILocation(line: 6414, column: 21, scope: !14292)
!14299 = !DILocation(line: 6414, column: 19, scope: !14292)
!14300 = !DILocation(line: 6414, column: 7, scope: !14292)
!14301 = !DILocation(line: 6416, column: 21, scope: !14292)
!14302 = !DILocation(line: 6416, column: 38, scope: !14292)
!14303 = !DILocation(line: 6416, column: 19, scope: !14292)
!14304 = !DILocation(line: 6420, column: 15, scope: !14201)
!14305 = !DILocation(line: 6420, column: 21, scope: !14201)
!14306 = !DILocation(line: 6420, column: 32, scope: !14201)
!14307 = !DILocation(line: 6420, column: 40, scope: !14201)
!14308 = !DILocation(line: 6420, column: 13, scope: !14201)
!14309 = !DILocation(line: 6421, column: 15, scope: !14201)
!14310 = !DILocation(line: 6421, column: 21, scope: !14201)
!14311 = !DILocation(line: 6421, column: 32, scope: !14201)
!14312 = !DILocation(line: 6421, column: 40, scope: !14201)
!14313 = !DILocation(line: 6421, column: 13, scope: !14201)
!14314 = !DILocation(line: 6422, column: 15, scope: !14201)
!14315 = !DILocation(line: 6422, column: 21, scope: !14201)
!14316 = !DILocation(line: 6422, column: 32, scope: !14201)
!14317 = !DILocation(line: 6422, column: 40, scope: !14201)
!14318 = !DILocation(line: 6422, column: 13, scope: !14201)
!14319 = !DILocation(line: 6423, column: 15, scope: !14201)
!14320 = !DILocation(line: 6423, column: 21, scope: !14201)
!14321 = !DILocation(line: 6423, column: 32, scope: !14201)
!14322 = !DILocation(line: 6423, column: 40, scope: !14201)
!14323 = !DILocation(line: 6423, column: 13, scope: !14201)
!14324 = !DILocation(line: 6425, column: 16, scope: !14201)
!14325 = !DILocation(line: 6425, column: 27, scope: !14201)
!14326 = !DILocation(line: 6425, column: 25, scope: !14201)
!14327 = !DILocation(line: 6425, column: 37, scope: !14201)
!14328 = !DILocation(line: 6425, column: 14, scope: !14201)
!14329 = !DILocation(line: 6426, column: 17, scope: !14201)
!14330 = !DILocation(line: 6426, column: 28, scope: !14201)
!14331 = !DILocation(line: 6426, column: 26, scope: !14201)
!14332 = !DILocation(line: 6426, column: 38, scope: !14201)
!14333 = !DILocation(line: 6426, column: 15, scope: !14201)
!14334 = !DILocation(line: 6428, column: 36, scope: !14201)
!14335 = !DILocation(line: 6428, column: 3, scope: !14201)
!14336 = !DILocation(line: 6428, column: 9, scope: !14201)
!14337 = !DILocation(line: 6428, column: 20, scope: !14201)
!14338 = !DILocation(line: 6428, column: 28, scope: !14201)
!14339 = !DILocation(line: 6428, column: 34, scope: !14201)
!14340 = !DILocation(line: 6429, column: 37, scope: !14201)
!14341 = !DILocation(line: 6429, column: 3, scope: !14201)
!14342 = !DILocation(line: 6429, column: 9, scope: !14201)
!14343 = !DILocation(line: 6429, column: 20, scope: !14201)
!14344 = !DILocation(line: 6429, column: 28, scope: !14201)
!14345 = !DILocation(line: 6429, column: 35, scope: !14201)
!14346 = !DILocation(line: 6430, column: 38, scope: !14201)
!14347 = !DILocation(line: 6430, column: 3, scope: !14201)
!14348 = !DILocation(line: 6430, column: 9, scope: !14201)
!14349 = !DILocation(line: 6430, column: 20, scope: !14201)
!14350 = !DILocation(line: 6430, column: 28, scope: !14201)
!14351 = !DILocation(line: 6430, column: 36, scope: !14201)
!14352 = !DILocation(line: 6432, column: 9, scope: !14201)
!14353 = !DILocation(line: 6432, column: 7, scope: !14201)
!14354 = !DILocation(line: 6433, column: 9, scope: !14201)
!14355 = !DILocation(line: 6433, column: 7, scope: !14201)
!14356 = !DILocation(line: 6434, column: 19, scope: !14201)
!14357 = !DILocation(line: 6434, column: 31, scope: !14201)
!14358 = !DILocation(line: 6434, column: 29, scope: !14201)
!14359 = !DILocation(line: 6434, column: 37, scope: !14201)
!14360 = !DILocation(line: 6434, column: 35, scope: !14201)
!14361 = !DILocation(line: 6434, column: 42, scope: !14201)
!14362 = !DILocation(line: 6434, column: 47, scope: !14201)
!14363 = !DILocation(line: 6434, column: 15, scope: !14201)
!14364 = !DILocation(line: 6435, column: 20, scope: !14201)
!14365 = !DILocation(line: 6435, column: 33, scope: !14201)
!14366 = !DILocation(line: 6435, column: 31, scope: !14201)
!14367 = !DILocation(line: 6435, column: 39, scope: !14201)
!14368 = !DILocation(line: 6435, column: 37, scope: !14201)
!14369 = !DILocation(line: 6435, column: 44, scope: !14201)
!14370 = !DILocation(line: 6435, column: 49, scope: !14201)
!14371 = !DILocation(line: 6435, column: 15, scope: !14201)
!14372 = !DILocation(line: 6437, column: 14, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 6437, column: 3)
!14374 = !DILocation(line: 6437, column: 12, scope: !14373)
!14375 = !DILocation(line: 6437, column: 8, scope: !14373)
!14376 = !DILocation(line: 6437, column: 25, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 6437, column: 3)
!14378 = !DILocation(line: 6437, column: 32, scope: !14377)
!14379 = !DILocation(line: 6437, column: 29, scope: !14377)
!14380 = !DILocation(line: 6437, column: 3, scope: !14373)
!14381 = !DILocation(line: 6439, column: 18, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 6438, column: 5)
!14383 = !DILocation(line: 6439, column: 24, scope: !14382)
!14384 = !DILocation(line: 6439, column: 22, scope: !14382)
!14385 = !DILocation(line: 6439, column: 16, scope: !14382)
!14386 = !DILocation(line: 6440, column: 19, scope: !14382)
!14387 = !DILocation(line: 6440, column: 26, scope: !14382)
!14388 = !DILocation(line: 6440, column: 24, scope: !14382)
!14389 = !DILocation(line: 6440, column: 39, scope: !14382)
!14390 = !DILocation(line: 6440, column: 37, scope: !14382)
!14391 = !DILocation(line: 6440, column: 16, scope: !14382)
!14392 = !DILocation(line: 6441, column: 11, scope: !14382)
!14393 = !DILocation(line: 6441, column: 23, scope: !14382)
!14394 = !DILocation(line: 6441, column: 21, scope: !14382)
!14395 = !DILocation(line: 6441, column: 9, scope: !14382)
!14396 = !DILocation(line: 6442, column: 11, scope: !14382)
!14397 = !DILocation(line: 6442, column: 23, scope: !14382)
!14398 = !DILocation(line: 6442, column: 21, scope: !14382)
!14399 = !DILocation(line: 6442, column: 9, scope: !14382)
!14400 = !DILocation(line: 6444, column: 13, scope: !14382)
!14401 = !DILocation(line: 6444, column: 5, scope: !14382)
!14402 = !DILocation(line: 6446, column: 46, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 6446, column: 19)
!14404 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 6445, column: 7)
!14405 = !DILocation(line: 6446, column: 51, scope: !14403)
!14406 = !DILocation(line: 6446, column: 56, scope: !14403)
!14407 = !DILocation(line: 6446, column: 67, scope: !14403)
!14408 = !DILocation(line: 6447, column: 46, scope: !14403)
!14409 = !DILocation(line: 6447, column: 51, scope: !14403)
!14410 = !DILocation(line: 6447, column: 56, scope: !14403)
!14411 = !DILocation(line: 6447, column: 63, scope: !14403)
!14412 = !DILocation(line: 6448, column: 46, scope: !14403)
!14413 = !DILocation(line: 6448, column: 55, scope: !14403)
!14414 = !DILocation(line: 6446, column: 19, scope: !14403)
!14415 = !DILocation(line: 6446, column: 19, scope: !14404)
!14416 = !DILocation(line: 6451, column: 55, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14403, file: !3, line: 6449, column: 17)
!14418 = !DILocation(line: 6450, column: 10, scope: !14417)
!14419 = !DILocation(line: 6452, column: 10, scope: !14417)
!14420 = !DILocation(line: 6454, column: 8, scope: !14404)
!14421 = !DILocation(line: 6455, column: 19, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 6455, column: 19)
!14423 = !DILocation(line: 6455, column: 23, scope: !14422)
!14424 = !DILocation(line: 6455, column: 19, scope: !14404)
!14425 = !DILocation(line: 6457, column: 55, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 6457, column: 21)
!14427 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 6456, column: 17)
!14428 = !DILocation(line: 6457, column: 60, scope: !14426)
!14429 = !DILocation(line: 6457, column: 65, scope: !14426)
!14430 = !DILocation(line: 6458, column: 55, scope: !14426)
!14431 = !DILocation(line: 6458, column: 63, scope: !14426)
!14432 = !DILocation(line: 6458, column: 68, scope: !14426)
!14433 = !DILocation(line: 6458, column: 73, scope: !14426)
!14434 = !DILocation(line: 6459, column: 55, scope: !14426)
!14435 = !DILocation(line: 6459, column: 66, scope: !14426)
!14436 = !DILocation(line: 6459, column: 75, scope: !14426)
!14437 = !DILocation(line: 6460, column: 55, scope: !14426)
!14438 = !DILocation(line: 6457, column: 21, scope: !14426)
!14439 = !DILocation(line: 6457, column: 21, scope: !14427)
!14440 = !DILocation(line: 6463, column: 57, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14426, file: !3, line: 6461, column: 19)
!14442 = !DILocation(line: 6462, column: 5, scope: !14441)
!14443 = !DILocation(line: 6464, column: 5, scope: !14441)
!14444 = !DILocation(line: 6466, column: 5, scope: !14427)
!14445 = !DILocation(line: 6469, column: 56, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 6469, column: 21)
!14447 = !DILocation(line: 6469, column: 61, scope: !14446)
!14448 = !DILocation(line: 6469, column: 66, scope: !14446)
!14449 = !DILocation(line: 6470, column: 56, scope: !14446)
!14450 = !DILocation(line: 6470, column: 64, scope: !14446)
!14451 = !DILocation(line: 6470, column: 69, scope: !14446)
!14452 = !DILocation(line: 6470, column: 74, scope: !14446)
!14453 = !DILocation(line: 6471, column: 56, scope: !14446)
!14454 = !DILocation(line: 6471, column: 67, scope: !14446)
!14455 = !DILocation(line: 6471, column: 76, scope: !14446)
!14456 = !DILocation(line: 6472, column: 56, scope: !14446)
!14457 = !DILocation(line: 6469, column: 21, scope: !14446)
!14458 = !DILocation(line: 6469, column: 21, scope: !14422)
!14459 = !DILocation(line: 6475, column: 57, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 6473, column: 19)
!14461 = !DILocation(line: 6474, column: 5, scope: !14460)
!14462 = !DILocation(line: 6476, column: 5, scope: !14460)
!14463 = !DILocation(line: 6478, column: 8, scope: !14404)
!14464 = !DILocation(line: 6479, column: 55, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 6479, column: 20)
!14466 = !DILocation(line: 6479, column: 60, scope: !14465)
!14467 = !DILocation(line: 6479, column: 65, scope: !14465)
!14468 = !DILocation(line: 6480, column: 54, scope: !14465)
!14469 = !DILocation(line: 6480, column: 62, scope: !14465)
!14470 = !DILocation(line: 6480, column: 67, scope: !14465)
!14471 = !DILocation(line: 6480, column: 72, scope: !14465)
!14472 = !DILocation(line: 6481, column: 54, scope: !14465)
!14473 = !DILocation(line: 6481, column: 65, scope: !14465)
!14474 = !DILocation(line: 6481, column: 74, scope: !14465)
!14475 = !DILocation(line: 6482, column: 54, scope: !14465)
!14476 = !DILocation(line: 6479, column: 20, scope: !14465)
!14477 = !DILocation(line: 6479, column: 20, scope: !14404)
!14478 = !DILocation(line: 6485, column: 55, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 6483, column: 17)
!14480 = !DILocation(line: 6484, column: 3, scope: !14479)
!14481 = !DILocation(line: 6486, column: 3, scope: !14479)
!14482 = !DILocation(line: 6488, column: 8, scope: !14404)
!14483 = !DILocation(line: 6491, column: 55, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 6491, column: 20)
!14485 = !DILocation(line: 6491, column: 60, scope: !14484)
!14486 = !DILocation(line: 6491, column: 65, scope: !14484)
!14487 = !DILocation(line: 6492, column: 54, scope: !14484)
!14488 = !DILocation(line: 6492, column: 62, scope: !14484)
!14489 = !DILocation(line: 6492, column: 67, scope: !14484)
!14490 = !DILocation(line: 6492, column: 72, scope: !14484)
!14491 = !DILocation(line: 6493, column: 54, scope: !14484)
!14492 = !DILocation(line: 6493, column: 65, scope: !14484)
!14493 = !DILocation(line: 6493, column: 74, scope: !14484)
!14494 = !DILocation(line: 6494, column: 54, scope: !14484)
!14495 = !DILocation(line: 6491, column: 20, scope: !14484)
!14496 = !DILocation(line: 6491, column: 20, scope: !14404)
!14497 = !DILocation(line: 6497, column: 55, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14484, file: !3, line: 6495, column: 17)
!14499 = !DILocation(line: 6496, column: 3, scope: !14498)
!14500 = !DILocation(line: 6498, column: 3, scope: !14498)
!14501 = !DILocation(line: 6500, column: 8, scope: !14404)
!14502 = !DILocation(line: 6501, column: 79, scope: !14404)
!14503 = !DILocation(line: 6501, column: 16, scope: !14404)
!14504 = !DILocation(line: 6502, column: 9, scope: !14404)
!14505 = !DILocation(line: 6504, column: 5, scope: !14382)
!14506 = !DILocation(line: 6437, column: 45, scope: !14377)
!14507 = !DILocation(line: 6437, column: 3, scope: !14377)
!14508 = distinct !{!14508, !14380, !14509}
!14509 = !DILocation(line: 6504, column: 5, scope: !14373)
!14510 = !DILocation(line: 6506, column: 3, scope: !14201)
!14511 = !DILocation(line: 6507, column: 3, scope: !14201)
!14512 = distinct !DISubprogram(name: "extractContigSamplesShifted8bits", scope: !3, file: !3, line: 3067, type: !14513, scopeLine: 3071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!14513 = !DISubroutineType(types: !14514)
!14514 = !{!110, !116, !116, !105, !7616, !103, !103, !7616, !105, !105, !110}
!14515 = !DILocalVariable(name: "in", arg: 1, scope: !14512, file: !3, line: 3067, type: !116)
!14516 = !DILocation(line: 3067, column: 42, scope: !14512)
!14517 = !DILocalVariable(name: "out", arg: 2, scope: !14512, file: !3, line: 3067, type: !116)
!14518 = !DILocation(line: 3067, column: 53, scope: !14512)
!14519 = !DILocalVariable(name: "cols", arg: 3, scope: !14512, file: !3, line: 3067, type: !105)
!14520 = !DILocation(line: 3067, column: 65, scope: !14512)
!14521 = !DILocalVariable(name: "sample", arg: 4, scope: !14512, file: !3, line: 3068, type: !7616)
!14522 = !DILocation(line: 3068, column: 45, scope: !14512)
!14523 = !DILocalVariable(name: "spp", arg: 5, scope: !14512, file: !3, line: 3068, type: !103)
!14524 = !DILocation(line: 3068, column: 60, scope: !14512)
!14525 = !DILocalVariable(name: "bps", arg: 6, scope: !14512, file: !3, line: 3068, type: !103)
!14526 = !DILocation(line: 3068, column: 72, scope: !14512)
!14527 = !DILocalVariable(name: "count", arg: 7, scope: !14512, file: !3, line: 3069, type: !7616)
!14528 = !DILocation(line: 3069, column: 24, scope: !14512)
!14529 = !DILocalVariable(name: "start", arg: 8, scope: !14512, file: !3, line: 3069, type: !105)
!14530 = !DILocation(line: 3069, column: 38, scope: !14512)
!14531 = !DILocalVariable(name: "end", arg: 9, scope: !14512, file: !3, line: 3069, type: !105)
!14532 = !DILocation(line: 3069, column: 52, scope: !14512)
!14533 = !DILocalVariable(name: "shift", arg: 10, scope: !14512, file: !3, line: 3070, type: !110)
!14534 = !DILocation(line: 3070, column: 33, scope: !14512)
!14535 = !DILocalVariable(name: "ready_bits", scope: !14512, file: !3, line: 3072, type: !110)
!14536 = !DILocation(line: 3072, column: 10, scope: !14512)
!14537 = !DILocalVariable(name: "sindex", scope: !14512, file: !3, line: 3072, type: !110)
!14538 = !DILocation(line: 3072, column: 26, scope: !14512)
!14539 = !DILocalVariable(name: "col", scope: !14512, file: !3, line: 3073, type: !105)
!14540 = !DILocation(line: 3073, column: 10, scope: !14512)
!14541 = !DILocalVariable(name: "src_byte", scope: !14512, file: !3, line: 3073, type: !105)
!14542 = !DILocation(line: 3073, column: 15, scope: !14512)
!14543 = !DILocalVariable(name: "src_bit", scope: !14512, file: !3, line: 3073, type: !105)
!14544 = !DILocation(line: 3073, column: 25, scope: !14512)
!14545 = !DILocalVariable(name: "bit_offset", scope: !14512, file: !3, line: 3073, type: !105)
!14546 = !DILocation(line: 3073, column: 34, scope: !14512)
!14547 = !DILocalVariable(name: "maskbits", scope: !14512, file: !3, line: 3074, type: !114)
!14548 = !DILocation(line: 3074, column: 10, scope: !14512)
!14549 = !DILocalVariable(name: "matchbits", scope: !14512, file: !3, line: 3074, type: !114)
!14550 = !DILocation(line: 3074, column: 24, scope: !14512)
!14551 = !DILocalVariable(name: "buff1", scope: !14512, file: !3, line: 3075, type: !114)
!14552 = !DILocation(line: 3075, column: 10, scope: !14512)
!14553 = !DILocalVariable(name: "buff2", scope: !14512, file: !3, line: 3075, type: !114)
!14554 = !DILocation(line: 3075, column: 21, scope: !14512)
!14555 = !DILocalVariable(name: "src", scope: !14512, file: !3, line: 3076, type: !116)
!14556 = !DILocation(line: 3076, column: 10, scope: !14512)
!14557 = !DILocation(line: 3076, column: 16, scope: !14512)
!14558 = !DILocalVariable(name: "dst", scope: !14512, file: !3, line: 3077, type: !116)
!14559 = !DILocation(line: 3077, column: 10, scope: !14512)
!14560 = !DILocation(line: 3077, column: 16, scope: !14512)
!14561 = !DILocation(line: 3079, column: 8, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14512, file: !3, line: 3079, column: 7)
!14563 = !DILocation(line: 3079, column: 12, scope: !14562)
!14564 = !DILocation(line: 3079, column: 21, scope: !14562)
!14565 = !DILocation(line: 3079, column: 25, scope: !14562)
!14566 = !DILocation(line: 3079, column: 29, scope: !14562)
!14567 = !DILocation(line: 3079, column: 7, scope: !14512)
!14568 = !DILocation(line: 3081, column: 5, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14562, file: !3, line: 3080, column: 5)
!14570 = !DILocation(line: 3082, column: 5, scope: !14569)
!14571 = !DILocation(line: 3085, column: 8, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14512, file: !3, line: 3085, column: 7)
!14573 = !DILocation(line: 3085, column: 16, scope: !14572)
!14574 = !DILocation(line: 3085, column: 14, scope: !14572)
!14575 = !DILocation(line: 3085, column: 21, scope: !14572)
!14576 = !DILocation(line: 3085, column: 25, scope: !14572)
!14577 = !DILocation(line: 3085, column: 33, scope: !14572)
!14578 = !DILocation(line: 3085, column: 31, scope: !14572)
!14579 = !DILocation(line: 3085, column: 7, scope: !14512)
!14580 = !DILocation(line: 3088, column: 57, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 3086, column: 5)
!14582 = !DILocation(line: 3087, column: 5, scope: !14581)
!14583 = !DILocation(line: 3089, column: 11, scope: !14581)
!14584 = !DILocation(line: 3090, column: 5, scope: !14581)
!14585 = !DILocation(line: 3091, column: 8, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14512, file: !3, line: 3091, column: 7)
!14587 = !DILocation(line: 3091, column: 12, scope: !14586)
!14588 = !DILocation(line: 3091, column: 18, scope: !14586)
!14589 = !DILocation(line: 3091, column: 22, scope: !14586)
!14590 = !DILocation(line: 3091, column: 28, scope: !14586)
!14591 = !DILocation(line: 3091, column: 26, scope: !14586)
!14592 = !DILocation(line: 3091, column: 7, scope: !14512)
!14593 = !DILocation(line: 3094, column: 55, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 3092, column: 5)
!14595 = !DILocation(line: 3093, column: 5, scope: !14594)
!14596 = !DILocation(line: 3095, column: 11, scope: !14594)
!14597 = !DILocation(line: 3095, column: 9, scope: !14594)
!14598 = !DILocation(line: 3096, column: 5, scope: !14594)
!14599 = !DILocation(line: 3098, column: 16, scope: !14512)
!14600 = !DILocation(line: 3098, column: 14, scope: !14512)
!14601 = !DILocation(line: 3099, column: 34, scope: !14512)
!14602 = !DILocation(line: 3099, column: 32, scope: !14512)
!14603 = !DILocation(line: 3099, column: 25, scope: !14512)
!14604 = !DILocation(line: 3099, column: 15, scope: !14512)
!14605 = !DILocation(line: 3099, column: 12, scope: !14512)
!14606 = !DILocation(line: 3100, column: 17, scope: !14512)
!14607 = !DILocation(line: 3100, column: 9, scope: !14512)
!14608 = !DILocation(line: 3101, column: 14, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14512, file: !3, line: 3101, column: 3)
!14610 = !DILocation(line: 3101, column: 12, scope: !14609)
!14611 = !DILocation(line: 3101, column: 8, scope: !14609)
!14612 = !DILocation(line: 3101, column: 21, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14609, file: !3, line: 3101, column: 3)
!14614 = !DILocation(line: 3101, column: 27, scope: !14613)
!14615 = !DILocation(line: 3101, column: 25, scope: !14613)
!14616 = !DILocation(line: 3101, column: 3, scope: !14609)
!14617 = !DILocation(line: 3103, column: 18, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 3102, column: 5)
!14619 = !DILocation(line: 3103, column: 24, scope: !14618)
!14620 = !DILocation(line: 3103, column: 22, scope: !14618)
!14621 = !DILocation(line: 3103, column: 30, scope: !14618)
!14622 = !DILocation(line: 3103, column: 28, scope: !14618)
!14623 = !DILocation(line: 3103, column: 16, scope: !14618)
!14624 = !DILocation(line: 3104, column: 19, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 3104, column: 5)
!14626 = !DILocation(line: 3104, column: 17, scope: !14625)
!14627 = !DILocation(line: 3104, column: 10, scope: !14625)
!14628 = !DILocation(line: 3104, column: 28, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14625, file: !3, line: 3104, column: 5)
!14630 = !DILocation(line: 3104, column: 37, scope: !14629)
!14631 = !DILocation(line: 3104, column: 35, scope: !14629)
!14632 = !DILocation(line: 3104, column: 42, scope: !14629)
!14633 = !DILocation(line: 3104, column: 46, scope: !14629)
!14634 = !DILocation(line: 3104, column: 56, scope: !14629)
!14635 = !DILocation(line: 3104, column: 65, scope: !14629)
!14636 = !DILocation(line: 3104, column: 63, scope: !14629)
!14637 = !DILocation(line: 3104, column: 53, scope: !14629)
!14638 = !DILocation(line: 0, scope: !14629)
!14639 = !DILocation(line: 3104, column: 5, scope: !14625)
!14640 = !DILocation(line: 3106, column: 11, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 3106, column: 11)
!14642 = distinct !DILexicalBlock(scope: !14629, file: !3, line: 3105, column: 7)
!14643 = !DILocation(line: 3106, column: 18, scope: !14641)
!14644 = !DILocation(line: 3106, column: 11, scope: !14642)
!14645 = !DILocation(line: 3108, column: 20, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 3107, column: 9)
!14647 = !DILocation(line: 3108, column: 31, scope: !14646)
!14648 = !DILocation(line: 3108, column: 18, scope: !14646)
!14649 = !DILocation(line: 3109, column: 20, scope: !14646)
!14650 = !DILocation(line: 3109, column: 31, scope: !14646)
!14651 = !DILocation(line: 3109, column: 18, scope: !14646)
!14652 = !DILocation(line: 3110, column: 9, scope: !14646)
!14653 = !DILocation(line: 3113, column: 21, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 3112, column: 9)
!14655 = !DILocation(line: 3113, column: 35, scope: !14654)
!14656 = !DILocation(line: 3113, column: 44, scope: !14654)
!14657 = !DILocation(line: 3113, column: 42, scope: !14654)
!14658 = !DILocation(line: 3113, column: 32, scope: !14654)
!14659 = !DILocation(line: 3113, column: 50, scope: !14654)
!14660 = !DILocation(line: 3113, column: 18, scope: !14654)
!14661 = !DILocation(line: 3114, column: 21, scope: !14654)
!14662 = !DILocation(line: 3114, column: 35, scope: !14654)
!14663 = !DILocation(line: 3114, column: 44, scope: !14654)
!14664 = !DILocation(line: 3114, column: 42, scope: !14654)
!14665 = !DILocation(line: 3114, column: 32, scope: !14654)
!14666 = !DILocation(line: 3114, column: 50, scope: !14654)
!14667 = !DILocation(line: 3114, column: 18, scope: !14654)
!14668 = !DILocation(line: 3117, column: 13, scope: !14642)
!14669 = !DILocation(line: 3117, column: 18, scope: !14642)
!14670 = !DILocation(line: 3117, column: 16, scope: !14642)
!14671 = !DILocation(line: 3117, column: 11, scope: !14642)
!14672 = !DILocation(line: 3118, column: 19, scope: !14642)
!14673 = !DILocation(line: 3118, column: 36, scope: !14642)
!14674 = !DILocation(line: 3118, column: 34, scope: !14642)
!14675 = !DILocation(line: 3118, column: 46, scope: !14642)
!14676 = !DILocation(line: 3118, column: 44, scope: !14642)
!14677 = !DILocation(line: 3118, column: 28, scope: !14642)
!14678 = !DILocation(line: 3118, column: 17, scope: !14642)
!14679 = !DILocation(line: 3119, column: 18, scope: !14642)
!14680 = !DILocation(line: 3119, column: 17, scope: !14642)
!14681 = !DILocation(line: 3119, column: 16, scope: !14642)
!14682 = !DILocation(line: 3119, column: 25, scope: !14642)
!14683 = !DILocation(line: 3119, column: 23, scope: !14642)
!14684 = !DILocation(line: 3119, column: 40, scope: !14642)
!14685 = !DILocation(line: 3119, column: 36, scope: !14642)
!14686 = !DILocation(line: 3119, column: 15, scope: !14642)
!14687 = !DILocation(line: 3119, column: 13, scope: !14642)
!14688 = !DILocation(line: 3120, column: 12, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 3120, column: 11)
!14690 = !DILocation(line: 3120, column: 19, scope: !14689)
!14691 = !DILocation(line: 3120, column: 16, scope: !14689)
!14692 = !DILocation(line: 3120, column: 26, scope: !14689)
!14693 = !DILocation(line: 3120, column: 30, scope: !14689)
!14694 = !DILocation(line: 3120, column: 40, scope: !14689)
!14695 = !DILocation(line: 3120, column: 37, scope: !14689)
!14696 = !DILocation(line: 3120, column: 11, scope: !14642)
!14697 = !DILocation(line: 3121, column: 18, scope: !14689)
!14698 = !DILocation(line: 3121, column: 17, scope: !14689)
!14699 = !DILocation(line: 3121, column: 40, scope: !14689)
!14700 = !DILocation(line: 3121, column: 36, scope: !14689)
!14701 = !DILocation(line: 3121, column: 22, scope: !14689)
!14702 = !DILocation(line: 3121, column: 15, scope: !14689)
!14703 = !DILocation(line: 3121, column: 9, scope: !14689)
!14704 = !DILocation(line: 3124, column: 11, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 3124, column: 11)
!14706 = !DILocation(line: 3124, column: 22, scope: !14705)
!14707 = !DILocation(line: 3124, column: 11, scope: !14642)
!14708 = !DILocation(line: 3126, column: 19, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14705, file: !3, line: 3125, column: 9)
!14710 = !DILocation(line: 3126, column: 13, scope: !14709)
!14711 = !DILocation(line: 3126, column: 16, scope: !14709)
!14712 = !DILocation(line: 3127, column: 17, scope: !14709)
!14713 = !DILocation(line: 3127, column: 15, scope: !14709)
!14714 = !DILocation(line: 3128, column: 20, scope: !14709)
!14715 = !DILocation(line: 3129, column: 9, scope: !14709)
!14716 = !DILocation(line: 3131, column: 10, scope: !14705)
!14717 = !DILocation(line: 3131, column: 19, scope: !14705)
!14718 = !DILocation(line: 3131, column: 28, scope: !14705)
!14719 = !DILocation(line: 3131, column: 25, scope: !14705)
!14720 = !DILocation(line: 3131, column: 16, scope: !14705)
!14721 = !DILocation(line: 3131, column: 8, scope: !14705)
!14722 = !DILocation(line: 3132, column: 21, scope: !14642)
!14723 = !DILocation(line: 3132, column: 18, scope: !14642)
!14724 = !DILocation(line: 3133, column: 7, scope: !14642)
!14725 = !DILocation(line: 3104, column: 80, scope: !14629)
!14726 = !DILocation(line: 3104, column: 5, scope: !14629)
!14727 = distinct !{!14727, !14639, !14728}
!14728 = !DILocation(line: 3133, column: 7, scope: !14625)
!14729 = !DILocation(line: 3134, column: 5, scope: !14618)
!14730 = !DILocation(line: 3101, column: 35, scope: !14613)
!14731 = !DILocation(line: 3101, column: 3, scope: !14613)
!14732 = distinct !{!14732, !14616, !14733}
!14733 = !DILocation(line: 3134, column: 5, scope: !14609)
!14734 = !DILocation(line: 3136, column: 3, scope: !14512)
!14735 = !DILocation(line: 3136, column: 10, scope: !14512)
!14736 = !DILocation(line: 3136, column: 21, scope: !14512)
!14737 = !DILocation(line: 3138, column: 14, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14512, file: !3, line: 3137, column: 5)
!14739 = !DILocation(line: 3138, column: 49, scope: !14738)
!14740 = !DILocation(line: 3138, column: 47, scope: !14738)
!14741 = !DILocation(line: 3138, column: 41, scope: !14738)
!14742 = !DILocation(line: 3138, column: 20, scope: !14738)
!14743 = !DILocation(line: 3138, column: 13, scope: !14738)
!14744 = !DILocation(line: 3138, column: 11, scope: !14738)
!14745 = !DILocation(line: 3139, column: 14, scope: !14738)
!14746 = !DILocation(line: 3139, column: 9, scope: !14738)
!14747 = !DILocation(line: 3139, column: 12, scope: !14738)
!14748 = !DILocation(line: 3140, column: 16, scope: !14738)
!14749 = distinct !{!14749, !14734, !14750}
!14750 = !DILocation(line: 3141, column: 5, scope: !14512)
!14751 = !DILocation(line: 3143, column: 3, scope: !14512)
!14752 = !DILocation(line: 3144, column: 3, scope: !14512)
!14753 = distinct !DISubprogram(name: "extractContigSamplesShifted16bits", scope: !3, file: !3, line: 3147, type: !14513, scopeLine: 3151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!14754 = !DILocalVariable(name: "in", arg: 1, scope: !14753, file: !3, line: 3147, type: !116)
!14755 = !DILocation(line: 3147, column: 43, scope: !14753)
!14756 = !DILocalVariable(name: "out", arg: 2, scope: !14753, file: !3, line: 3147, type: !116)
!14757 = !DILocation(line: 3147, column: 54, scope: !14753)
!14758 = !DILocalVariable(name: "cols", arg: 3, scope: !14753, file: !3, line: 3147, type: !105)
!14759 = !DILocation(line: 3147, column: 66, scope: !14753)
!14760 = !DILocalVariable(name: "sample", arg: 4, scope: !14753, file: !3, line: 3148, type: !7616)
!14761 = !DILocation(line: 3148, column: 46, scope: !14753)
!14762 = !DILocalVariable(name: "spp", arg: 5, scope: !14753, file: !3, line: 3148, type: !103)
!14763 = !DILocation(line: 3148, column: 61, scope: !14753)
!14764 = !DILocalVariable(name: "bps", arg: 6, scope: !14753, file: !3, line: 3148, type: !103)
!14765 = !DILocation(line: 3148, column: 73, scope: !14753)
!14766 = !DILocalVariable(name: "count", arg: 7, scope: !14753, file: !3, line: 3149, type: !7616)
!14767 = !DILocation(line: 3149, column: 27, scope: !14753)
!14768 = !DILocalVariable(name: "start", arg: 8, scope: !14753, file: !3, line: 3149, type: !105)
!14769 = !DILocation(line: 3149, column: 41, scope: !14753)
!14770 = !DILocalVariable(name: "end", arg: 9, scope: !14753, file: !3, line: 3149, type: !105)
!14771 = !DILocation(line: 3149, column: 55, scope: !14753)
!14772 = !DILocalVariable(name: "shift", arg: 10, scope: !14753, file: !3, line: 3150, type: !110)
!14773 = !DILocation(line: 3150, column: 34, scope: !14753)
!14774 = !DILocalVariable(name: "ready_bits", scope: !14753, file: !3, line: 3152, type: !110)
!14775 = !DILocation(line: 3152, column: 10, scope: !14753)
!14776 = !DILocalVariable(name: "sindex", scope: !14753, file: !3, line: 3152, type: !110)
!14777 = !DILocation(line: 3152, column: 26, scope: !14753)
!14778 = !DILocalVariable(name: "col", scope: !14753, file: !3, line: 3153, type: !105)
!14779 = !DILocation(line: 3153, column: 10, scope: !14753)
!14780 = !DILocalVariable(name: "src_byte", scope: !14753, file: !3, line: 3153, type: !105)
!14781 = !DILocation(line: 3153, column: 15, scope: !14753)
!14782 = !DILocalVariable(name: "src_bit", scope: !14753, file: !3, line: 3153, type: !105)
!14783 = !DILocation(line: 3153, column: 25, scope: !14753)
!14784 = !DILocalVariable(name: "bit_offset", scope: !14753, file: !3, line: 3153, type: !105)
!14785 = !DILocation(line: 3153, column: 34, scope: !14753)
!14786 = !DILocalVariable(name: "maskbits", scope: !14753, file: !3, line: 3154, type: !103)
!14787 = !DILocation(line: 3154, column: 10, scope: !14753)
!14788 = !DILocalVariable(name: "matchbits", scope: !14753, file: !3, line: 3154, type: !103)
!14789 = !DILocation(line: 3154, column: 24, scope: !14753)
!14790 = !DILocalVariable(name: "buff1", scope: !14753, file: !3, line: 3155, type: !103)
!14791 = !DILocation(line: 3155, column: 10, scope: !14753)
!14792 = !DILocalVariable(name: "buff2", scope: !14753, file: !3, line: 3155, type: !103)
!14793 = !DILocation(line: 3155, column: 21, scope: !14753)
!14794 = !DILocalVariable(name: "bytebuff", scope: !14753, file: !3, line: 3156, type: !114)
!14795 = !DILocation(line: 3156, column: 10, scope: !14753)
!14796 = !DILocalVariable(name: "src", scope: !14753, file: !3, line: 3157, type: !116)
!14797 = !DILocation(line: 3157, column: 10, scope: !14753)
!14798 = !DILocation(line: 3157, column: 16, scope: !14753)
!14799 = !DILocalVariable(name: "dst", scope: !14753, file: !3, line: 3158, type: !116)
!14800 = !DILocation(line: 3158, column: 10, scope: !14753)
!14801 = !DILocation(line: 3158, column: 16, scope: !14753)
!14802 = !DILocation(line: 3160, column: 8, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 3160, column: 7)
!14804 = !DILocation(line: 3160, column: 12, scope: !14803)
!14805 = !DILocation(line: 3160, column: 21, scope: !14803)
!14806 = !DILocation(line: 3160, column: 25, scope: !14803)
!14807 = !DILocation(line: 3160, column: 29, scope: !14803)
!14808 = !DILocation(line: 3160, column: 7, scope: !14753)
!14809 = !DILocation(line: 3162, column: 5, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 3161, column: 5)
!14811 = !DILocation(line: 3163, column: 5, scope: !14810)
!14812 = !DILocation(line: 3166, column: 8, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 3166, column: 7)
!14814 = !DILocation(line: 3166, column: 16, scope: !14813)
!14815 = !DILocation(line: 3166, column: 14, scope: !14813)
!14816 = !DILocation(line: 3166, column: 21, scope: !14813)
!14817 = !DILocation(line: 3166, column: 25, scope: !14813)
!14818 = !DILocation(line: 3166, column: 33, scope: !14813)
!14819 = !DILocation(line: 3166, column: 31, scope: !14813)
!14820 = !DILocation(line: 3166, column: 7, scope: !14753)
!14821 = !DILocation(line: 3169, column: 57, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 3167, column: 5)
!14823 = !DILocation(line: 3168, column: 5, scope: !14822)
!14824 = !DILocation(line: 3170, column: 11, scope: !14822)
!14825 = !DILocation(line: 3171, column: 5, scope: !14822)
!14826 = !DILocation(line: 3172, column: 8, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 3172, column: 7)
!14828 = !DILocation(line: 3172, column: 12, scope: !14827)
!14829 = !DILocation(line: 3172, column: 18, scope: !14827)
!14830 = !DILocation(line: 3172, column: 22, scope: !14827)
!14831 = !DILocation(line: 3172, column: 28, scope: !14827)
!14832 = !DILocation(line: 3172, column: 26, scope: !14827)
!14833 = !DILocation(line: 3172, column: 7, scope: !14753)
!14834 = !DILocation(line: 3175, column: 55, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14827, file: !3, line: 3173, column: 5)
!14836 = !DILocation(line: 3174, column: 5, scope: !14835)
!14837 = !DILocation(line: 3176, column: 11, scope: !14835)
!14838 = !DILocation(line: 3176, column: 9, scope: !14835)
!14839 = !DILocation(line: 3177, column: 5, scope: !14835)
!14840 = !DILocation(line: 3179, column: 16, scope: !14753)
!14841 = !DILocation(line: 3179, column: 14, scope: !14753)
!14842 = !DILocation(line: 3180, column: 34, scope: !14753)
!14843 = !DILocation(line: 3180, column: 32, scope: !14753)
!14844 = !DILocation(line: 3180, column: 25, scope: !14753)
!14845 = !DILocation(line: 3180, column: 14, scope: !14753)
!14846 = !DILocation(line: 3180, column: 12, scope: !14753)
!14847 = !DILocation(line: 3181, column: 14, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 3181, column: 3)
!14849 = !DILocation(line: 3181, column: 12, scope: !14848)
!14850 = !DILocation(line: 3181, column: 8, scope: !14848)
!14851 = !DILocation(line: 3181, column: 21, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14848, file: !3, line: 3181, column: 3)
!14853 = !DILocation(line: 3181, column: 27, scope: !14852)
!14854 = !DILocation(line: 3181, column: 25, scope: !14852)
!14855 = !DILocation(line: 3181, column: 3, scope: !14848)
!14856 = !DILocation(line: 3183, column: 18, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 3182, column: 5)
!14858 = !DILocation(line: 3183, column: 24, scope: !14857)
!14859 = !DILocation(line: 3183, column: 22, scope: !14857)
!14860 = !DILocation(line: 3183, column: 30, scope: !14857)
!14861 = !DILocation(line: 3183, column: 28, scope: !14857)
!14862 = !DILocation(line: 3183, column: 16, scope: !14857)
!14863 = !DILocation(line: 3184, column: 19, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14857, file: !3, line: 3184, column: 5)
!14865 = !DILocation(line: 3184, column: 17, scope: !14864)
!14866 = !DILocation(line: 3184, column: 10, scope: !14864)
!14867 = !DILocation(line: 3184, column: 28, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 3184, column: 5)
!14869 = !DILocation(line: 3184, column: 37, scope: !14868)
!14870 = !DILocation(line: 3184, column: 35, scope: !14868)
!14871 = !DILocation(line: 3184, column: 42, scope: !14868)
!14872 = !DILocation(line: 3184, column: 46, scope: !14868)
!14873 = !DILocation(line: 3184, column: 56, scope: !14868)
!14874 = !DILocation(line: 3184, column: 65, scope: !14868)
!14875 = !DILocation(line: 3184, column: 63, scope: !14868)
!14876 = !DILocation(line: 3184, column: 53, scope: !14868)
!14877 = !DILocation(line: 0, scope: !14868)
!14878 = !DILocation(line: 3184, column: 5, scope: !14864)
!14879 = !DILocation(line: 3186, column: 11, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !3, line: 3186, column: 11)
!14881 = distinct !DILexicalBlock(scope: !14868, file: !3, line: 3185, column: 7)
!14882 = !DILocation(line: 3186, column: 18, scope: !14880)
!14883 = !DILocation(line: 3186, column: 11, scope: !14881)
!14884 = !DILocation(line: 3188, column: 20, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14880, file: !3, line: 3187, column: 9)
!14886 = !DILocation(line: 3188, column: 31, scope: !14885)
!14887 = !DILocation(line: 3188, column: 18, scope: !14885)
!14888 = !DILocation(line: 3189, column: 20, scope: !14885)
!14889 = !DILocation(line: 3189, column: 31, scope: !14885)
!14890 = !DILocation(line: 3189, column: 18, scope: !14885)
!14891 = !DILocation(line: 3190, column: 9, scope: !14885)
!14892 = !DILocation(line: 3193, column: 21, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14880, file: !3, line: 3192, column: 9)
!14894 = !DILocation(line: 3193, column: 35, scope: !14893)
!14895 = !DILocation(line: 3193, column: 44, scope: !14893)
!14896 = !DILocation(line: 3193, column: 42, scope: !14893)
!14897 = !DILocation(line: 3193, column: 32, scope: !14893)
!14898 = !DILocation(line: 3193, column: 50, scope: !14893)
!14899 = !DILocation(line: 3193, column: 18, scope: !14893)
!14900 = !DILocation(line: 3194, column: 21, scope: !14893)
!14901 = !DILocation(line: 3194, column: 35, scope: !14893)
!14902 = !DILocation(line: 3194, column: 44, scope: !14893)
!14903 = !DILocation(line: 3194, column: 42, scope: !14893)
!14904 = !DILocation(line: 3194, column: 32, scope: !14893)
!14905 = !DILocation(line: 3194, column: 50, scope: !14893)
!14906 = !DILocation(line: 3194, column: 18, scope: !14893)
!14907 = !DILocation(line: 3197, column: 13, scope: !14881)
!14908 = !DILocation(line: 3197, column: 18, scope: !14881)
!14909 = !DILocation(line: 3197, column: 16, scope: !14881)
!14910 = !DILocation(line: 3197, column: 11, scope: !14881)
!14911 = !DILocation(line: 3198, column: 19, scope: !14881)
!14912 = !DILocation(line: 3198, column: 37, scope: !14881)
!14913 = !DILocation(line: 3198, column: 35, scope: !14881)
!14914 = !DILocation(line: 3198, column: 47, scope: !14881)
!14915 = !DILocation(line: 3198, column: 45, scope: !14881)
!14916 = !DILocation(line: 3198, column: 28, scope: !14881)
!14917 = !DILocation(line: 3198, column: 17, scope: !14881)
!14918 = !DILocation(line: 3199, column: 11, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14881, file: !3, line: 3199, column: 11)
!14920 = !DILocation(line: 3199, column: 11, scope: !14881)
!14921 = !DILocation(line: 3200, column: 18, scope: !14919)
!14922 = !DILocation(line: 3200, column: 25, scope: !14919)
!14923 = !DILocation(line: 3200, column: 33, scope: !14919)
!14924 = !DILocation(line: 3200, column: 31, scope: !14919)
!14925 = !DILocation(line: 3200, column: 17, scope: !14919)
!14926 = !DILocation(line: 3200, column: 15, scope: !14919)
!14927 = !DILocation(line: 3200, column: 9, scope: !14919)
!14928 = !DILocation(line: 3202, column: 18, scope: !14919)
!14929 = !DILocation(line: 3202, column: 25, scope: !14919)
!14930 = !DILocation(line: 3202, column: 33, scope: !14919)
!14931 = !DILocation(line: 3202, column: 31, scope: !14919)
!14932 = !DILocation(line: 3202, column: 17, scope: !14919)
!14933 = !DILocation(line: 3202, column: 15, scope: !14919)
!14934 = !DILocation(line: 3204, column: 12, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14881, file: !3, line: 3204, column: 11)
!14936 = !DILocation(line: 3204, column: 19, scope: !14935)
!14937 = !DILocation(line: 3204, column: 16, scope: !14935)
!14938 = !DILocation(line: 3204, column: 26, scope: !14935)
!14939 = !DILocation(line: 3204, column: 30, scope: !14935)
!14940 = !DILocation(line: 3204, column: 40, scope: !14935)
!14941 = !DILocation(line: 3204, column: 37, scope: !14935)
!14942 = !DILocation(line: 3204, column: 11, scope: !14881)
!14943 = !DILocation(line: 3205, column: 17, scope: !14935)
!14944 = !DILocation(line: 3205, column: 46, scope: !14935)
!14945 = !DILocation(line: 3205, column: 44, scope: !14935)
!14946 = !DILocation(line: 3205, column: 38, scope: !14935)
!14947 = !DILocation(line: 3205, column: 23, scope: !14935)
!14948 = !DILocation(line: 3205, column: 15, scope: !14935)
!14949 = !DILocation(line: 3205, column: 9, scope: !14935)
!14950 = !DILocation(line: 3207, column: 16, scope: !14881)
!14951 = !DILocation(line: 3207, column: 24, scope: !14881)
!14952 = !DILocation(line: 3207, column: 22, scope: !14881)
!14953 = !DILocation(line: 3207, column: 39, scope: !14881)
!14954 = !DILocation(line: 3207, column: 35, scope: !14881)
!14955 = !DILocation(line: 3207, column: 15, scope: !14881)
!14956 = !DILocation(line: 3207, column: 13, scope: !14881)
!14957 = !DILocation(line: 3209, column: 11, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14881, file: !3, line: 3209, column: 11)
!14959 = !DILocation(line: 3209, column: 22, scope: !14958)
!14960 = !DILocation(line: 3209, column: 11, scope: !14881)
!14961 = !DILocation(line: 3210, column: 17, scope: !14958)
!14962 = !DILocation(line: 3210, column: 26, scope: !14958)
!14963 = !DILocation(line: 3210, column: 35, scope: !14958)
!14964 = !DILocation(line: 3210, column: 32, scope: !14958)
!14965 = !DILocation(line: 3210, column: 23, scope: !14958)
!14966 = !DILocation(line: 3210, column: 15, scope: !14958)
!14967 = !DILocation(line: 3210, column: 9, scope: !14958)
!14968 = !DILocation(line: 3213, column: 21, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14958, file: !3, line: 3212, column: 9)
!14970 = !DILocation(line: 3213, column: 27, scope: !14969)
!14971 = !DILocation(line: 3213, column: 20, scope: !14969)
!14972 = !DILocation(line: 3213, column: 18, scope: !14969)
!14973 = !DILocation(line: 3214, column: 18, scope: !14969)
!14974 = !DILocation(line: 3214, column: 13, scope: !14969)
!14975 = !DILocation(line: 3214, column: 16, scope: !14969)
!14976 = !DILocation(line: 3215, column: 20, scope: !14969)
!14977 = !DILocation(line: 3217, column: 19, scope: !14969)
!14978 = !DILocation(line: 3217, column: 25, scope: !14969)
!14979 = !DILocation(line: 3217, column: 34, scope: !14969)
!14980 = !DILocation(line: 3217, column: 43, scope: !14969)
!14981 = !DILocation(line: 3217, column: 40, scope: !14969)
!14982 = !DILocation(line: 3217, column: 31, scope: !14969)
!14983 = !DILocation(line: 3217, column: 17, scope: !14969)
!14984 = !DILocation(line: 3217, column: 15, scope: !14969)
!14985 = !DILocation(line: 3220, column: 21, scope: !14881)
!14986 = !DILocation(line: 3220, column: 18, scope: !14881)
!14987 = !DILocation(line: 3221, column: 7, scope: !14881)
!14988 = !DILocation(line: 3184, column: 80, scope: !14868)
!14989 = !DILocation(line: 3184, column: 5, scope: !14868)
!14990 = distinct !{!14990, !14878, !14991}
!14991 = !DILocation(line: 3221, column: 7, scope: !14864)
!14992 = !DILocation(line: 3222, column: 5, scope: !14857)
!14993 = !DILocation(line: 3181, column: 35, scope: !14852)
!14994 = !DILocation(line: 3181, column: 3, scope: !14852)
!14995 = distinct !{!14995, !14855, !14996}
!14996 = !DILocation(line: 3222, column: 5, scope: !14848)
!14997 = !DILocation(line: 3225, column: 3, scope: !14753)
!14998 = !DILocation(line: 3225, column: 10, scope: !14753)
!14999 = !DILocation(line: 3225, column: 21, scope: !14753)
!15000 = !DILocation(line: 3227, column: 17, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 3226, column: 5)
!15002 = !DILocation(line: 3227, column: 23, scope: !15001)
!15003 = !DILocation(line: 3227, column: 16, scope: !15001)
!15004 = !DILocation(line: 3227, column: 14, scope: !15001)
!15005 = !DILocation(line: 3228, column: 14, scope: !15001)
!15006 = !DILocation(line: 3228, column: 9, scope: !15001)
!15007 = !DILocation(line: 3228, column: 12, scope: !15001)
!15008 = !DILocation(line: 3229, column: 16, scope: !15001)
!15009 = distinct !{!15009, !14997, !15010}
!15010 = !DILocation(line: 3230, column: 5, scope: !14753)
!15011 = !DILocation(line: 3232, column: 3, scope: !14753)
!15012 = !DILocation(line: 3233, column: 3, scope: !14753)
!15013 = distinct !DISubprogram(name: "extractContigSamplesShifted24bits", scope: !3, file: !3, line: 3237, type: !14513, scopeLine: 3241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!15014 = !DILocalVariable(name: "in", arg: 1, scope: !15013, file: !3, line: 3237, type: !116)
!15015 = !DILocation(line: 3237, column: 43, scope: !15013)
!15016 = !DILocalVariable(name: "out", arg: 2, scope: !15013, file: !3, line: 3237, type: !116)
!15017 = !DILocation(line: 3237, column: 54, scope: !15013)
!15018 = !DILocalVariable(name: "cols", arg: 3, scope: !15013, file: !3, line: 3237, type: !105)
!15019 = !DILocation(line: 3237, column: 66, scope: !15013)
!15020 = !DILocalVariable(name: "sample", arg: 4, scope: !15013, file: !3, line: 3238, type: !7616)
!15021 = !DILocation(line: 3238, column: 40, scope: !15013)
!15022 = !DILocalVariable(name: "spp", arg: 5, scope: !15013, file: !3, line: 3238, type: !103)
!15023 = !DILocation(line: 3238, column: 55, scope: !15013)
!15024 = !DILocalVariable(name: "bps", arg: 6, scope: !15013, file: !3, line: 3238, type: !103)
!15025 = !DILocation(line: 3238, column: 67, scope: !15013)
!15026 = !DILocalVariable(name: "count", arg: 7, scope: !15013, file: !3, line: 3239, type: !7616)
!15027 = !DILocation(line: 3239, column: 46, scope: !15013)
!15028 = !DILocalVariable(name: "start", arg: 8, scope: !15013, file: !3, line: 3239, type: !105)
!15029 = !DILocation(line: 3239, column: 60, scope: !15013)
!15030 = !DILocalVariable(name: "end", arg: 9, scope: !15013, file: !3, line: 3239, type: !105)
!15031 = !DILocation(line: 3239, column: 74, scope: !15013)
!15032 = !DILocalVariable(name: "shift", arg: 10, scope: !15013, file: !3, line: 3240, type: !110)
!15033 = !DILocation(line: 3240, column: 33, scope: !15013)
!15034 = !DILocalVariable(name: "ready_bits", scope: !15013, file: !3, line: 3242, type: !110)
!15035 = !DILocation(line: 3242, column: 10, scope: !15013)
!15036 = !DILocalVariable(name: "sindex", scope: !15013, file: !3, line: 3242, type: !110)
!15037 = !DILocation(line: 3242, column: 26, scope: !15013)
!15038 = !DILocalVariable(name: "col", scope: !15013, file: !3, line: 3243, type: !105)
!15039 = !DILocation(line: 3243, column: 10, scope: !15013)
!15040 = !DILocalVariable(name: "src_byte", scope: !15013, file: !3, line: 3243, type: !105)
!15041 = !DILocation(line: 3243, column: 15, scope: !15013)
!15042 = !DILocalVariable(name: "src_bit", scope: !15013, file: !3, line: 3243, type: !105)
!15043 = !DILocation(line: 3243, column: 25, scope: !15013)
!15044 = !DILocalVariable(name: "bit_offset", scope: !15013, file: !3, line: 3243, type: !105)
!15045 = !DILocation(line: 3243, column: 34, scope: !15013)
!15046 = !DILocalVariable(name: "maskbits", scope: !15013, file: !3, line: 3244, type: !105)
!15047 = !DILocation(line: 3244, column: 10, scope: !15013)
!15048 = !DILocalVariable(name: "matchbits", scope: !15013, file: !3, line: 3244, type: !105)
!15049 = !DILocation(line: 3244, column: 24, scope: !15013)
!15050 = !DILocalVariable(name: "buff1", scope: !15013, file: !3, line: 3245, type: !105)
!15051 = !DILocation(line: 3245, column: 10, scope: !15013)
!15052 = !DILocalVariable(name: "buff2", scope: !15013, file: !3, line: 3245, type: !105)
!15053 = !DILocation(line: 3245, column: 21, scope: !15013)
!15054 = !DILocalVariable(name: "bytebuff1", scope: !15013, file: !3, line: 3246, type: !114)
!15055 = !DILocation(line: 3246, column: 10, scope: !15013)
!15056 = !DILocalVariable(name: "bytebuff2", scope: !15013, file: !3, line: 3246, type: !114)
!15057 = !DILocation(line: 3246, column: 25, scope: !15013)
!15058 = !DILocalVariable(name: "src", scope: !15013, file: !3, line: 3247, type: !116)
!15059 = !DILocation(line: 3247, column: 10, scope: !15013)
!15060 = !DILocation(line: 3247, column: 16, scope: !15013)
!15061 = !DILocalVariable(name: "dst", scope: !15013, file: !3, line: 3248, type: !116)
!15062 = !DILocation(line: 3248, column: 10, scope: !15013)
!15063 = !DILocation(line: 3248, column: 16, scope: !15013)
!15064 = !DILocation(line: 3250, column: 8, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 3250, column: 7)
!15066 = !DILocation(line: 3250, column: 11, scope: !15065)
!15067 = !DILocation(line: 3250, column: 20, scope: !15065)
!15068 = !DILocation(line: 3250, column: 24, scope: !15065)
!15069 = !DILocation(line: 3250, column: 28, scope: !15065)
!15070 = !DILocation(line: 3250, column: 7, scope: !15013)
!15071 = !DILocation(line: 3252, column: 5, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15065, file: !3, line: 3251, column: 5)
!15073 = !DILocation(line: 3253, column: 5, scope: !15072)
!15074 = !DILocation(line: 3256, column: 8, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 3256, column: 7)
!15076 = !DILocation(line: 3256, column: 16, scope: !15075)
!15077 = !DILocation(line: 3256, column: 14, scope: !15075)
!15078 = !DILocation(line: 3256, column: 21, scope: !15075)
!15079 = !DILocation(line: 3256, column: 25, scope: !15075)
!15080 = !DILocation(line: 3256, column: 33, scope: !15075)
!15081 = !DILocation(line: 3256, column: 31, scope: !15075)
!15082 = !DILocation(line: 3256, column: 7, scope: !15013)
!15083 = !DILocation(line: 3259, column: 57, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 3257, column: 5)
!15085 = !DILocation(line: 3258, column: 5, scope: !15084)
!15086 = !DILocation(line: 3260, column: 11, scope: !15084)
!15087 = !DILocation(line: 3261, column: 5, scope: !15084)
!15088 = !DILocation(line: 3262, column: 8, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 3262, column: 7)
!15090 = !DILocation(line: 3262, column: 12, scope: !15089)
!15091 = !DILocation(line: 3262, column: 18, scope: !15089)
!15092 = !DILocation(line: 3262, column: 22, scope: !15089)
!15093 = !DILocation(line: 3262, column: 28, scope: !15089)
!15094 = !DILocation(line: 3262, column: 26, scope: !15089)
!15095 = !DILocation(line: 3262, column: 7, scope: !15013)
!15096 = !DILocation(line: 3265, column: 55, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 3263, column: 5)
!15098 = !DILocation(line: 3264, column: 5, scope: !15097)
!15099 = !DILocation(line: 3266, column: 11, scope: !15097)
!15100 = !DILocation(line: 3266, column: 9, scope: !15097)
!15101 = !DILocation(line: 3267, column: 5, scope: !15097)
!15102 = !DILocation(line: 3269, column: 16, scope: !15013)
!15103 = !DILocation(line: 3269, column: 14, scope: !15013)
!15104 = !DILocation(line: 3270, column: 36, scope: !15013)
!15105 = !DILocation(line: 3270, column: 34, scope: !15013)
!15106 = !DILocation(line: 3270, column: 26, scope: !15013)
!15107 = !DILocation(line: 3270, column: 12, scope: !15013)
!15108 = !DILocation(line: 3271, column: 14, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 3271, column: 3)
!15110 = !DILocation(line: 3271, column: 12, scope: !15109)
!15111 = !DILocation(line: 3271, column: 8, scope: !15109)
!15112 = !DILocation(line: 3271, column: 21, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 3271, column: 3)
!15114 = !DILocation(line: 3271, column: 27, scope: !15113)
!15115 = !DILocation(line: 3271, column: 25, scope: !15113)
!15116 = !DILocation(line: 3271, column: 3, scope: !15109)
!15117 = !DILocation(line: 3274, column: 18, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15113, file: !3, line: 3272, column: 5)
!15119 = !DILocation(line: 3274, column: 24, scope: !15118)
!15120 = !DILocation(line: 3274, column: 22, scope: !15118)
!15121 = !DILocation(line: 3274, column: 30, scope: !15118)
!15122 = !DILocation(line: 3274, column: 28, scope: !15118)
!15123 = !DILocation(line: 3274, column: 16, scope: !15118)
!15124 = !DILocation(line: 3275, column: 19, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15118, file: !3, line: 3275, column: 5)
!15126 = !DILocation(line: 3275, column: 17, scope: !15125)
!15127 = !DILocation(line: 3275, column: 10, scope: !15125)
!15128 = !DILocation(line: 3275, column: 28, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 3275, column: 5)
!15130 = !DILocation(line: 3275, column: 37, scope: !15129)
!15131 = !DILocation(line: 3275, column: 35, scope: !15129)
!15132 = !DILocation(line: 3275, column: 42, scope: !15129)
!15133 = !DILocation(line: 3275, column: 46, scope: !15129)
!15134 = !DILocation(line: 3275, column: 56, scope: !15129)
!15135 = !DILocation(line: 3275, column: 65, scope: !15129)
!15136 = !DILocation(line: 3275, column: 63, scope: !15129)
!15137 = !DILocation(line: 3275, column: 53, scope: !15129)
!15138 = !DILocation(line: 0, scope: !15129)
!15139 = !DILocation(line: 3275, column: 5, scope: !15125)
!15140 = !DILocation(line: 3277, column: 11, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 3277, column: 11)
!15142 = distinct !DILexicalBlock(scope: !15129, file: !3, line: 3276, column: 7)
!15143 = !DILocation(line: 3277, column: 18, scope: !15141)
!15144 = !DILocation(line: 3277, column: 11, scope: !15142)
!15145 = !DILocation(line: 3279, column: 20, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15141, file: !3, line: 3278, column: 9)
!15147 = !DILocation(line: 3279, column: 31, scope: !15146)
!15148 = !DILocation(line: 3279, column: 18, scope: !15146)
!15149 = !DILocation(line: 3280, column: 20, scope: !15146)
!15150 = !DILocation(line: 3280, column: 31, scope: !15146)
!15151 = !DILocation(line: 3280, column: 18, scope: !15146)
!15152 = !DILocation(line: 3281, column: 9, scope: !15146)
!15153 = !DILocation(line: 3284, column: 21, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15141, file: !3, line: 3283, column: 9)
!15155 = !DILocation(line: 3284, column: 35, scope: !15154)
!15156 = !DILocation(line: 3284, column: 44, scope: !15154)
!15157 = !DILocation(line: 3284, column: 42, scope: !15154)
!15158 = !DILocation(line: 3284, column: 32, scope: !15154)
!15159 = !DILocation(line: 3284, column: 50, scope: !15154)
!15160 = !DILocation(line: 3284, column: 18, scope: !15154)
!15161 = !DILocation(line: 3285, column: 21, scope: !15154)
!15162 = !DILocation(line: 3285, column: 35, scope: !15154)
!15163 = !DILocation(line: 3285, column: 44, scope: !15154)
!15164 = !DILocation(line: 3285, column: 42, scope: !15154)
!15165 = !DILocation(line: 3285, column: 32, scope: !15154)
!15166 = !DILocation(line: 3285, column: 50, scope: !15154)
!15167 = !DILocation(line: 3285, column: 18, scope: !15154)
!15168 = !DILocation(line: 3288, column: 13, scope: !15142)
!15169 = !DILocation(line: 3288, column: 18, scope: !15142)
!15170 = !DILocation(line: 3288, column: 16, scope: !15142)
!15171 = !DILocation(line: 3288, column: 11, scope: !15142)
!15172 = !DILocation(line: 3289, column: 19, scope: !15142)
!15173 = !DILocation(line: 3289, column: 37, scope: !15142)
!15174 = !DILocation(line: 3289, column: 35, scope: !15142)
!15175 = !DILocation(line: 3289, column: 47, scope: !15142)
!15176 = !DILocation(line: 3289, column: 45, scope: !15142)
!15177 = !DILocation(line: 3289, column: 28, scope: !15142)
!15178 = !DILocation(line: 3289, column: 17, scope: !15142)
!15179 = !DILocation(line: 3290, column: 11, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 3290, column: 11)
!15181 = !DILocation(line: 3290, column: 11, scope: !15142)
!15182 = !DILocation(line: 3291, column: 11, scope: !15180)
!15183 = !DILocation(line: 3291, column: 18, scope: !15180)
!15184 = !DILocation(line: 3291, column: 28, scope: !15180)
!15185 = !DILocation(line: 3291, column: 35, scope: !15180)
!15186 = !DILocation(line: 3291, column: 25, scope: !15180)
!15187 = !DILocation(line: 3291, column: 45, scope: !15180)
!15188 = !DILocation(line: 3291, column: 52, scope: !15180)
!15189 = !DILocation(line: 3291, column: 42, scope: !15180)
!15190 = !DILocation(line: 3291, column: 60, scope: !15180)
!15191 = !DILocation(line: 3291, column: 58, scope: !15180)
!15192 = !DILocation(line: 3291, column: 8, scope: !15180)
!15193 = !DILocation(line: 3291, column: 2, scope: !15180)
!15194 = !DILocation(line: 3293, column: 11, scope: !15180)
!15195 = !DILocation(line: 3293, column: 18, scope: !15180)
!15196 = !DILocation(line: 3293, column: 28, scope: !15180)
!15197 = !DILocation(line: 3293, column: 35, scope: !15180)
!15198 = !DILocation(line: 3293, column: 25, scope: !15180)
!15199 = !DILocation(line: 3293, column: 45, scope: !15180)
!15200 = !DILocation(line: 3293, column: 52, scope: !15180)
!15201 = !DILocation(line: 3293, column: 42, scope: !15180)
!15202 = !DILocation(line: 3293, column: 60, scope: !15180)
!15203 = !DILocation(line: 3293, column: 58, scope: !15180)
!15204 = !DILocation(line: 3293, column: 8, scope: !15180)
!15205 = !DILocation(line: 3295, column: 12, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 3295, column: 11)
!15207 = !DILocation(line: 3295, column: 19, scope: !15206)
!15208 = !DILocation(line: 3295, column: 16, scope: !15206)
!15209 = !DILocation(line: 3295, column: 26, scope: !15206)
!15210 = !DILocation(line: 3295, column: 30, scope: !15206)
!15211 = !DILocation(line: 3295, column: 40, scope: !15206)
!15212 = !DILocation(line: 3295, column: 37, scope: !15206)
!15213 = !DILocation(line: 3295, column: 11, scope: !15142)
!15214 = !DILocation(line: 3296, column: 17, scope: !15206)
!15215 = !DILocation(line: 3296, column: 47, scope: !15206)
!15216 = !DILocation(line: 3296, column: 45, scope: !15206)
!15217 = !DILocation(line: 3296, column: 38, scope: !15206)
!15218 = !DILocation(line: 3296, column: 23, scope: !15206)
!15219 = !DILocation(line: 3296, column: 15, scope: !15206)
!15220 = !DILocation(line: 3296, column: 9, scope: !15206)
!15221 = !DILocation(line: 3298, column: 16, scope: !15142)
!15222 = !DILocation(line: 3298, column: 24, scope: !15142)
!15223 = !DILocation(line: 3298, column: 22, scope: !15142)
!15224 = !DILocation(line: 3298, column: 39, scope: !15142)
!15225 = !DILocation(line: 3298, column: 35, scope: !15142)
!15226 = !DILocation(line: 3298, column: 13, scope: !15142)
!15227 = !DILocation(line: 3300, column: 11, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 3300, column: 11)
!15229 = !DILocation(line: 3300, column: 22, scope: !15228)
!15230 = !DILocation(line: 3300, column: 11, scope: !15142)
!15231 = !DILocation(line: 3302, column: 31, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 3301, column: 9)
!15233 = !DILocation(line: 3302, column: 19, scope: !15232)
!15234 = !DILocation(line: 3303, column: 18, scope: !15232)
!15235 = !DILocation(line: 3303, column: 27, scope: !15232)
!15236 = !DILocation(line: 3303, column: 36, scope: !15232)
!15237 = !DILocation(line: 3303, column: 33, scope: !15232)
!15238 = !DILocation(line: 3303, column: 24, scope: !15232)
!15239 = !DILocation(line: 3303, column: 15, scope: !15232)
!15240 = !DILocation(line: 3304, column: 9, scope: !15232)
!15241 = !DILocation(line: 3307, column: 22, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 3306, column: 9)
!15243 = !DILocation(line: 3307, column: 28, scope: !15242)
!15244 = !DILocation(line: 3307, column: 21, scope: !15242)
!15245 = !DILocation(line: 3307, column: 19, scope: !15242)
!15246 = !DILocation(line: 3308, column: 18, scope: !15242)
!15247 = !DILocation(line: 3308, column: 13, scope: !15242)
!15248 = !DILocation(line: 3308, column: 16, scope: !15242)
!15249 = !DILocation(line: 3309, column: 22, scope: !15242)
!15250 = !DILocation(line: 3309, column: 28, scope: !15242)
!15251 = !DILocation(line: 3309, column: 21, scope: !15242)
!15252 = !DILocation(line: 3309, column: 19, scope: !15242)
!15253 = !DILocation(line: 3310, column: 18, scope: !15242)
!15254 = !DILocation(line: 3310, column: 13, scope: !15242)
!15255 = !DILocation(line: 3310, column: 16, scope: !15242)
!15256 = !DILocation(line: 3311, column: 20, scope: !15242)
!15257 = !DILocation(line: 3314, column: 19, scope: !15242)
!15258 = !DILocation(line: 3314, column: 25, scope: !15242)
!15259 = !DILocation(line: 3314, column: 35, scope: !15242)
!15260 = !DILocation(line: 3314, column: 44, scope: !15242)
!15261 = !DILocation(line: 3314, column: 41, scope: !15242)
!15262 = !DILocation(line: 3314, column: 32, scope: !15242)
!15263 = !DILocation(line: 3314, column: 15, scope: !15242)
!15264 = !DILocation(line: 3316, column: 21, scope: !15142)
!15265 = !DILocation(line: 3316, column: 18, scope: !15142)
!15266 = !DILocation(line: 3317, column: 7, scope: !15142)
!15267 = !DILocation(line: 3275, column: 80, scope: !15129)
!15268 = !DILocation(line: 3275, column: 5, scope: !15129)
!15269 = distinct !{!15269, !15139, !15270}
!15270 = !DILocation(line: 3317, column: 7, scope: !15125)
!15271 = !DILocation(line: 3318, column: 5, scope: !15118)
!15272 = !DILocation(line: 3271, column: 35, scope: !15113)
!15273 = !DILocation(line: 3271, column: 3, scope: !15113)
!15274 = distinct !{!15274, !15116, !15275}
!15275 = !DILocation(line: 3318, column: 5, scope: !15109)
!15276 = !DILocation(line: 3321, column: 3, scope: !15013)
!15277 = !DILocation(line: 3321, column: 10, scope: !15013)
!15278 = !DILocation(line: 3321, column: 21, scope: !15013)
!15279 = !DILocation(line: 3323, column: 18, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 3322, column: 5)
!15281 = !DILocation(line: 3323, column: 24, scope: !15280)
!15282 = !DILocation(line: 3323, column: 17, scope: !15280)
!15283 = !DILocation(line: 3323, column: 15, scope: !15280)
!15284 = !DILocation(line: 3324, column: 14, scope: !15280)
!15285 = !DILocation(line: 3324, column: 9, scope: !15280)
!15286 = !DILocation(line: 3324, column: 12, scope: !15280)
!15287 = !DILocation(line: 3326, column: 14, scope: !15280)
!15288 = !DILocation(line: 3326, column: 20, scope: !15280)
!15289 = !DILocation(line: 3326, column: 11, scope: !15280)
!15290 = !DILocation(line: 3327, column: 17, scope: !15280)
!15291 = !DILocation(line: 3327, column: 15, scope: !15280)
!15292 = !DILocation(line: 3328, column: 16, scope: !15280)
!15293 = distinct !{!15293, !15276, !15294}
!15294 = !DILocation(line: 3329, column: 5, scope: !15013)
!15295 = !DILocation(line: 3331, column: 3, scope: !15013)
!15296 = !DILocation(line: 3332, column: 3, scope: !15013)
!15297 = distinct !DISubprogram(name: "extractContigSamplesShifted32bits", scope: !3, file: !3, line: 3335, type: !14513, scopeLine: 3339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!15298 = !DILocalVariable(name: "in", arg: 1, scope: !15297, file: !3, line: 3335, type: !116)
!15299 = !DILocation(line: 3335, column: 43, scope: !15297)
!15300 = !DILocalVariable(name: "out", arg: 2, scope: !15297, file: !3, line: 3335, type: !116)
!15301 = !DILocation(line: 3335, column: 54, scope: !15297)
!15302 = !DILocalVariable(name: "cols", arg: 3, scope: !15297, file: !3, line: 3335, type: !105)
!15303 = !DILocation(line: 3335, column: 66, scope: !15297)
!15304 = !DILocalVariable(name: "sample", arg: 4, scope: !15297, file: !3, line: 3336, type: !7616)
!15305 = !DILocation(line: 3336, column: 46, scope: !15297)
!15306 = !DILocalVariable(name: "spp", arg: 5, scope: !15297, file: !3, line: 3336, type: !103)
!15307 = !DILocation(line: 3336, column: 61, scope: !15297)
!15308 = !DILocalVariable(name: "bps", arg: 6, scope: !15297, file: !3, line: 3336, type: !103)
!15309 = !DILocation(line: 3336, column: 73, scope: !15297)
!15310 = !DILocalVariable(name: "count", arg: 7, scope: !15297, file: !3, line: 3337, type: !7616)
!15311 = !DILocation(line: 3337, column: 26, scope: !15297)
!15312 = !DILocalVariable(name: "start", arg: 8, scope: !15297, file: !3, line: 3337, type: !105)
!15313 = !DILocation(line: 3337, column: 40, scope: !15297)
!15314 = !DILocalVariable(name: "end", arg: 9, scope: !15297, file: !3, line: 3337, type: !105)
!15315 = !DILocation(line: 3337, column: 54, scope: !15297)
!15316 = !DILocalVariable(name: "shift", arg: 10, scope: !15297, file: !3, line: 3338, type: !110)
!15317 = !DILocation(line: 3338, column: 33, scope: !15297)
!15318 = !DILocalVariable(name: "ready_bits", scope: !15297, file: !3, line: 3340, type: !110)
!15319 = !DILocation(line: 3340, column: 10, scope: !15297)
!15320 = !DILocalVariable(name: "sindex", scope: !15297, file: !3, line: 3340, type: !110)
!15321 = !DILocation(line: 3340, column: 26, scope: !15297)
!15322 = !DILocalVariable(name: "shift_width", scope: !15297, file: !3, line: 3340, type: !110)
!15323 = !DILocation(line: 3340, column: 38, scope: !15297)
!15324 = !DILocalVariable(name: "col", scope: !15297, file: !3, line: 3341, type: !105)
!15325 = !DILocation(line: 3341, column: 10, scope: !15297)
!15326 = !DILocalVariable(name: "src_byte", scope: !15297, file: !3, line: 3341, type: !105)
!15327 = !DILocation(line: 3341, column: 15, scope: !15297)
!15328 = !DILocalVariable(name: "src_bit", scope: !15297, file: !3, line: 3341, type: !105)
!15329 = !DILocation(line: 3341, column: 25, scope: !15297)
!15330 = !DILocalVariable(name: "bit_offset", scope: !15297, file: !3, line: 3341, type: !105)
!15331 = !DILocation(line: 3341, column: 34, scope: !15297)
!15332 = !DILocalVariable(name: "longbuff1", scope: !15297, file: !3, line: 3342, type: !105)
!15333 = !DILocation(line: 3342, column: 10, scope: !15297)
!15334 = !DILocalVariable(name: "longbuff2", scope: !15297, file: !3, line: 3342, type: !105)
!15335 = !DILocation(line: 3342, column: 25, scope: !15297)
!15336 = !DILocalVariable(name: "maskbits", scope: !15297, file: !3, line: 3343, type: !115)
!15337 = !DILocation(line: 3343, column: 10, scope: !15297)
!15338 = !DILocalVariable(name: "matchbits", scope: !15297, file: !3, line: 3343, type: !115)
!15339 = !DILocation(line: 3343, column: 24, scope: !15297)
!15340 = !DILocalVariable(name: "buff1", scope: !15297, file: !3, line: 3344, type: !115)
!15341 = !DILocation(line: 3344, column: 10, scope: !15297)
!15342 = !DILocalVariable(name: "buff2", scope: !15297, file: !3, line: 3344, type: !115)
!15343 = !DILocation(line: 3344, column: 21, scope: !15297)
!15344 = !DILocalVariable(name: "buff3", scope: !15297, file: !3, line: 3344, type: !115)
!15345 = !DILocation(line: 3344, column: 32, scope: !15297)
!15346 = !DILocalVariable(name: "bytebuff1", scope: !15297, file: !3, line: 3345, type: !114)
!15347 = !DILocation(line: 3345, column: 10, scope: !15297)
!15348 = !DILocalVariable(name: "bytebuff2", scope: !15297, file: !3, line: 3345, type: !114)
!15349 = !DILocation(line: 3345, column: 25, scope: !15297)
!15350 = !DILocalVariable(name: "bytebuff3", scope: !15297, file: !3, line: 3345, type: !114)
!15351 = !DILocation(line: 3345, column: 40, scope: !15297)
!15352 = !DILocalVariable(name: "bytebuff4", scope: !15297, file: !3, line: 3345, type: !114)
!15353 = !DILocation(line: 3345, column: 55, scope: !15297)
!15354 = !DILocalVariable(name: "src", scope: !15297, file: !3, line: 3346, type: !116)
!15355 = !DILocation(line: 3346, column: 10, scope: !15297)
!15356 = !DILocation(line: 3346, column: 16, scope: !15297)
!15357 = !DILocalVariable(name: "dst", scope: !15297, file: !3, line: 3347, type: !116)
!15358 = !DILocation(line: 3347, column: 10, scope: !15297)
!15359 = !DILocation(line: 3347, column: 16, scope: !15297)
!15360 = !DILocation(line: 3349, column: 8, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15297, file: !3, line: 3349, column: 7)
!15362 = !DILocation(line: 3349, column: 11, scope: !15361)
!15363 = !DILocation(line: 3349, column: 20, scope: !15361)
!15364 = !DILocation(line: 3349, column: 24, scope: !15361)
!15365 = !DILocation(line: 3349, column: 28, scope: !15361)
!15366 = !DILocation(line: 3349, column: 7, scope: !15297)
!15367 = !DILocation(line: 3351, column: 5, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15361, file: !3, line: 3350, column: 5)
!15369 = !DILocation(line: 3352, column: 5, scope: !15368)
!15370 = !DILocation(line: 3356, column: 8, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15297, file: !3, line: 3356, column: 7)
!15372 = !DILocation(line: 3356, column: 16, scope: !15371)
!15373 = !DILocation(line: 3356, column: 14, scope: !15371)
!15374 = !DILocation(line: 3356, column: 21, scope: !15371)
!15375 = !DILocation(line: 3356, column: 25, scope: !15371)
!15376 = !DILocation(line: 3356, column: 33, scope: !15371)
!15377 = !DILocation(line: 3356, column: 31, scope: !15371)
!15378 = !DILocation(line: 3356, column: 7, scope: !15297)
!15379 = !DILocation(line: 3359, column: 57, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 3357, column: 5)
!15381 = !DILocation(line: 3358, column: 5, scope: !15380)
!15382 = !DILocation(line: 3360, column: 11, scope: !15380)
!15383 = !DILocation(line: 3361, column: 5, scope: !15380)
!15384 = !DILocation(line: 3362, column: 8, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15297, file: !3, line: 3362, column: 7)
!15386 = !DILocation(line: 3362, column: 12, scope: !15385)
!15387 = !DILocation(line: 3362, column: 18, scope: !15385)
!15388 = !DILocation(line: 3362, column: 22, scope: !15385)
!15389 = !DILocation(line: 3362, column: 28, scope: !15385)
!15390 = !DILocation(line: 3362, column: 26, scope: !15385)
!15391 = !DILocation(line: 3362, column: 7, scope: !15297)
!15392 = !DILocation(line: 3365, column: 55, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15385, file: !3, line: 3363, column: 5)
!15394 = !DILocation(line: 3364, column: 5, scope: !15393)
!15395 = !DILocation(line: 3366, column: 11, scope: !15393)
!15396 = !DILocation(line: 3366, column: 9, scope: !15393)
!15397 = !DILocation(line: 3367, column: 5, scope: !15393)
!15398 = !DILocation(line: 3369, column: 19, scope: !15297)
!15399 = !DILocation(line: 3369, column: 23, scope: !15297)
!15400 = !DILocation(line: 3369, column: 28, scope: !15297)
!15401 = !DILocation(line: 3369, column: 33, scope: !15297)
!15402 = !DILocation(line: 3369, column: 15, scope: !15297)
!15403 = !DILocation(line: 3370, column: 16, scope: !15297)
!15404 = !DILocation(line: 3370, column: 14, scope: !15297)
!15405 = !DILocation(line: 3371, column: 36, scope: !15297)
!15406 = !DILocation(line: 3371, column: 34, scope: !15297)
!15407 = !DILocation(line: 3371, column: 26, scope: !15297)
!15408 = !DILocation(line: 3371, column: 12, scope: !15297)
!15409 = !DILocation(line: 3372, column: 14, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15297, file: !3, line: 3372, column: 3)
!15411 = !DILocation(line: 3372, column: 12, scope: !15410)
!15412 = !DILocation(line: 3372, column: 8, scope: !15410)
!15413 = !DILocation(line: 3372, column: 21, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15410, file: !3, line: 3372, column: 3)
!15415 = !DILocation(line: 3372, column: 27, scope: !15414)
!15416 = !DILocation(line: 3372, column: 25, scope: !15414)
!15417 = !DILocation(line: 3372, column: 3, scope: !15410)
!15418 = !DILocation(line: 3375, column: 18, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15414, file: !3, line: 3373, column: 5)
!15420 = !DILocation(line: 3375, column: 24, scope: !15419)
!15421 = !DILocation(line: 3375, column: 22, scope: !15419)
!15422 = !DILocation(line: 3375, column: 30, scope: !15419)
!15423 = !DILocation(line: 3375, column: 28, scope: !15419)
!15424 = !DILocation(line: 3375, column: 16, scope: !15419)
!15425 = !DILocation(line: 3376, column: 19, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15419, file: !3, line: 3376, column: 5)
!15427 = !DILocation(line: 3376, column: 17, scope: !15426)
!15428 = !DILocation(line: 3376, column: 10, scope: !15426)
!15429 = !DILocation(line: 3376, column: 28, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 3376, column: 5)
!15431 = !DILocation(line: 3376, column: 37, scope: !15430)
!15432 = !DILocation(line: 3376, column: 35, scope: !15430)
!15433 = !DILocation(line: 3376, column: 42, scope: !15430)
!15434 = !DILocation(line: 3376, column: 46, scope: !15430)
!15435 = !DILocation(line: 3376, column: 56, scope: !15430)
!15436 = !DILocation(line: 3376, column: 65, scope: !15430)
!15437 = !DILocation(line: 3376, column: 63, scope: !15430)
!15438 = !DILocation(line: 3376, column: 53, scope: !15430)
!15439 = !DILocation(line: 0, scope: !15430)
!15440 = !DILocation(line: 3376, column: 5, scope: !15426)
!15441 = !DILocation(line: 3378, column: 11, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3378, column: 11)
!15443 = distinct !DILexicalBlock(scope: !15430, file: !3, line: 3377, column: 7)
!15444 = !DILocation(line: 3378, column: 18, scope: !15442)
!15445 = !DILocation(line: 3378, column: 11, scope: !15443)
!15446 = !DILocation(line: 3380, column: 20, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15442, file: !3, line: 3379, column: 9)
!15448 = !DILocation(line: 3380, column: 31, scope: !15447)
!15449 = !DILocation(line: 3380, column: 18, scope: !15447)
!15450 = !DILocation(line: 3381, column: 20, scope: !15447)
!15451 = !DILocation(line: 3381, column: 31, scope: !15447)
!15452 = !DILocation(line: 3381, column: 18, scope: !15447)
!15453 = !DILocation(line: 3382, column: 9, scope: !15447)
!15454 = !DILocation(line: 3385, column: 21, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15442, file: !3, line: 3384, column: 9)
!15456 = !DILocation(line: 3385, column: 35, scope: !15455)
!15457 = !DILocation(line: 3385, column: 44, scope: !15455)
!15458 = !DILocation(line: 3385, column: 42, scope: !15455)
!15459 = !DILocation(line: 3385, column: 32, scope: !15455)
!15460 = !DILocation(line: 3385, column: 50, scope: !15455)
!15461 = !DILocation(line: 3385, column: 18, scope: !15455)
!15462 = !DILocation(line: 3386, column: 21, scope: !15455)
!15463 = !DILocation(line: 3386, column: 35, scope: !15455)
!15464 = !DILocation(line: 3386, column: 44, scope: !15455)
!15465 = !DILocation(line: 3386, column: 42, scope: !15455)
!15466 = !DILocation(line: 3386, column: 32, scope: !15455)
!15467 = !DILocation(line: 3386, column: 50, scope: !15455)
!15468 = !DILocation(line: 3386, column: 18, scope: !15455)
!15469 = !DILocation(line: 3389, column: 13, scope: !15443)
!15470 = !DILocation(line: 3389, column: 18, scope: !15443)
!15471 = !DILocation(line: 3389, column: 16, scope: !15443)
!15472 = !DILocation(line: 3389, column: 11, scope: !15443)
!15473 = !DILocation(line: 3390, column: 19, scope: !15443)
!15474 = !DILocation(line: 3390, column: 37, scope: !15443)
!15475 = !DILocation(line: 3390, column: 35, scope: !15443)
!15476 = !DILocation(line: 3390, column: 47, scope: !15443)
!15477 = !DILocation(line: 3390, column: 45, scope: !15443)
!15478 = !DILocation(line: 3390, column: 28, scope: !15443)
!15479 = !DILocation(line: 3390, column: 17, scope: !15443)
!15480 = !DILocation(line: 3391, column: 11, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3391, column: 11)
!15482 = !DILocation(line: 3391, column: 11, scope: !15443)
!15483 = !DILocation(line: 3393, column: 15, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15481, file: !3, line: 3392, column: 9)
!15485 = !DILocation(line: 3393, column: 22, scope: !15484)
!15486 = !DILocation(line: 3393, column: 32, scope: !15484)
!15487 = !DILocation(line: 3393, column: 39, scope: !15484)
!15488 = !DILocation(line: 3393, column: 29, scope: !15484)
!15489 = !DILocation(line: 3393, column: 49, scope: !15484)
!15490 = !DILocation(line: 3393, column: 56, scope: !15484)
!15491 = !DILocation(line: 3393, column: 46, scope: !15484)
!15492 = !DILocation(line: 3393, column: 64, scope: !15484)
!15493 = !DILocation(line: 3393, column: 62, scope: !15484)
!15494 = !DILocation(line: 3393, column: 12, scope: !15484)
!15495 = !DILocation(line: 3394, column: 14, scope: !15484)
!15496 = !DILocation(line: 3394, column: 12, scope: !15484)
!15497 = !DILocation(line: 3395, column: 9, scope: !15484)
!15498 = !DILocation(line: 3398, column: 15, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15481, file: !3, line: 3397, column: 9)
!15500 = !DILocation(line: 3398, column: 22, scope: !15499)
!15501 = !DILocation(line: 3398, column: 32, scope: !15499)
!15502 = !DILocation(line: 3398, column: 39, scope: !15499)
!15503 = !DILocation(line: 3398, column: 29, scope: !15499)
!15504 = !DILocation(line: 3398, column: 49, scope: !15499)
!15505 = !DILocation(line: 3398, column: 56, scope: !15499)
!15506 = !DILocation(line: 3398, column: 46, scope: !15499)
!15507 = !DILocation(line: 3398, column: 64, scope: !15499)
!15508 = !DILocation(line: 3398, column: 62, scope: !15499)
!15509 = !DILocation(line: 3398, column: 12, scope: !15499)
!15510 = !DILocation(line: 3399, column: 14, scope: !15499)
!15511 = !DILocation(line: 3399, column: 12, scope: !15499)
!15512 = !DILocation(line: 3402, column: 24, scope: !15443)
!15513 = !DILocation(line: 3402, column: 16, scope: !15443)
!15514 = !DILocation(line: 3402, column: 34, scope: !15443)
!15515 = !DILocation(line: 3402, column: 43, scope: !15443)
!15516 = !DILocation(line: 3402, column: 41, scope: !15443)
!15517 = !DILocation(line: 3402, column: 13, scope: !15443)
!15518 = !DILocation(line: 3403, column: 12, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3403, column: 11)
!15520 = !DILocation(line: 3403, column: 19, scope: !15519)
!15521 = !DILocation(line: 3403, column: 16, scope: !15519)
!15522 = !DILocation(line: 3403, column: 26, scope: !15519)
!15523 = !DILocation(line: 3403, column: 30, scope: !15519)
!15524 = !DILocation(line: 3403, column: 40, scope: !15519)
!15525 = !DILocation(line: 3403, column: 37, scope: !15519)
!15526 = !DILocation(line: 3403, column: 11, scope: !15443)
!15527 = !DILocation(line: 3404, column: 17, scope: !15519)
!15528 = !DILocation(line: 3404, column: 47, scope: !15519)
!15529 = !DILocation(line: 3404, column: 45, scope: !15519)
!15530 = !DILocation(line: 3404, column: 38, scope: !15519)
!15531 = !DILocation(line: 3404, column: 23, scope: !15519)
!15532 = !DILocation(line: 3404, column: 15, scope: !15519)
!15533 = !DILocation(line: 3404, column: 9, scope: !15519)
!15534 = !DILocation(line: 3406, column: 16, scope: !15443)
!15535 = !DILocation(line: 3406, column: 24, scope: !15443)
!15536 = !DILocation(line: 3406, column: 22, scope: !15443)
!15537 = !DILocation(line: 3406, column: 39, scope: !15443)
!15538 = !DILocation(line: 3406, column: 35, scope: !15443)
!15539 = !DILocation(line: 3406, column: 13, scope: !15443)
!15540 = !DILocation(line: 3408, column: 11, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3408, column: 11)
!15542 = !DILocation(line: 3408, column: 22, scope: !15541)
!15543 = !DILocation(line: 3408, column: 11, scope: !15443)
!15544 = !DILocation(line: 3410, column: 55, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15541, file: !3, line: 3409, column: 9)
!15546 = !DILocation(line: 3410, column: 43, scope: !15545)
!15547 = !DILocation(line: 3410, column: 31, scope: !15545)
!15548 = !DILocation(line: 3410, column: 19, scope: !15545)
!15549 = !DILocation(line: 3411, column: 18, scope: !15545)
!15550 = !DILocation(line: 3411, column: 27, scope: !15545)
!15551 = !DILocation(line: 3411, column: 36, scope: !15545)
!15552 = !DILocation(line: 3411, column: 33, scope: !15545)
!15553 = !DILocation(line: 3411, column: 24, scope: !15545)
!15554 = !DILocation(line: 3411, column: 15, scope: !15545)
!15555 = !DILocation(line: 3412, column: 9, scope: !15545)
!15556 = !DILocation(line: 3415, column: 22, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15541, file: !3, line: 3414, column: 9)
!15558 = !DILocation(line: 3415, column: 28, scope: !15557)
!15559 = !DILocation(line: 3415, column: 21, scope: !15557)
!15560 = !DILocation(line: 3415, column: 19, scope: !15557)
!15561 = !DILocation(line: 3416, column: 18, scope: !15557)
!15562 = !DILocation(line: 3416, column: 13, scope: !15557)
!15563 = !DILocation(line: 3416, column: 16, scope: !15557)
!15564 = !DILocation(line: 3417, column: 22, scope: !15557)
!15565 = !DILocation(line: 3417, column: 28, scope: !15557)
!15566 = !DILocation(line: 3417, column: 21, scope: !15557)
!15567 = !DILocation(line: 3417, column: 19, scope: !15557)
!15568 = !DILocation(line: 3418, column: 18, scope: !15557)
!15569 = !DILocation(line: 3418, column: 13, scope: !15557)
!15570 = !DILocation(line: 3418, column: 16, scope: !15557)
!15571 = !DILocation(line: 3419, column: 22, scope: !15557)
!15572 = !DILocation(line: 3419, column: 28, scope: !15557)
!15573 = !DILocation(line: 3419, column: 21, scope: !15557)
!15574 = !DILocation(line: 3419, column: 19, scope: !15557)
!15575 = !DILocation(line: 3420, column: 18, scope: !15557)
!15576 = !DILocation(line: 3420, column: 13, scope: !15557)
!15577 = !DILocation(line: 3420, column: 16, scope: !15557)
!15578 = !DILocation(line: 3421, column: 22, scope: !15557)
!15579 = !DILocation(line: 3421, column: 28, scope: !15557)
!15580 = !DILocation(line: 3421, column: 21, scope: !15557)
!15581 = !DILocation(line: 3421, column: 19, scope: !15557)
!15582 = !DILocation(line: 3422, column: 18, scope: !15557)
!15583 = !DILocation(line: 3422, column: 13, scope: !15557)
!15584 = !DILocation(line: 3422, column: 16, scope: !15557)
!15585 = !DILocation(line: 3423, column: 20, scope: !15557)
!15586 = !DILocation(line: 3426, column: 19, scope: !15557)
!15587 = !DILocation(line: 3426, column: 25, scope: !15557)
!15588 = !DILocation(line: 3426, column: 35, scope: !15557)
!15589 = !DILocation(line: 3426, column: 44, scope: !15557)
!15590 = !DILocation(line: 3426, column: 41, scope: !15557)
!15591 = !DILocation(line: 3426, column: 32, scope: !15557)
!15592 = !DILocation(line: 3426, column: 15, scope: !15557)
!15593 = !DILocation(line: 3428, column: 21, scope: !15443)
!15594 = !DILocation(line: 3428, column: 18, scope: !15443)
!15595 = !DILocation(line: 3429, column: 7, scope: !15443)
!15596 = !DILocation(line: 3376, column: 80, scope: !15430)
!15597 = !DILocation(line: 3376, column: 5, scope: !15430)
!15598 = distinct !{!15598, !15440, !15599}
!15599 = !DILocation(line: 3429, column: 7, scope: !15426)
!15600 = !DILocation(line: 3430, column: 5, scope: !15419)
!15601 = !DILocation(line: 3372, column: 35, scope: !15414)
!15602 = !DILocation(line: 3372, column: 3, scope: !15414)
!15603 = distinct !{!15603, !15417, !15604}
!15604 = !DILocation(line: 3430, column: 5, scope: !15410)
!15605 = !DILocation(line: 3431, column: 3, scope: !15297)
!15606 = !DILocation(line: 3431, column: 10, scope: !15297)
!15607 = !DILocation(line: 3431, column: 21, scope: !15297)
!15608 = !DILocation(line: 3433, column: 18, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15297, file: !3, line: 3432, column: 5)
!15610 = !DILocation(line: 3433, column: 24, scope: !15609)
!15611 = !DILocation(line: 3433, column: 17, scope: !15609)
!15612 = !DILocation(line: 3433, column: 15, scope: !15609)
!15613 = !DILocation(line: 3434, column: 14, scope: !15609)
!15614 = !DILocation(line: 3434, column: 9, scope: !15609)
!15615 = !DILocation(line: 3434, column: 12, scope: !15609)
!15616 = !DILocation(line: 3435, column: 14, scope: !15609)
!15617 = !DILocation(line: 3435, column: 20, scope: !15609)
!15618 = !DILocation(line: 3435, column: 11, scope: !15609)
!15619 = !DILocation(line: 3436, column: 16, scope: !15609)
!15620 = distinct !{!15620, !15605, !15621}
!15621 = !DILocation(line: 3437, column: 5, scope: !15297)
!15622 = !DILocation(line: 3439, column: 3, scope: !15297)
!15623 = !DILocation(line: 3440, column: 3, scope: !15297)
!15624 = distinct !DISubprogram(name: "computeInputPixelOffsets", scope: !3, file: !3, line: 4987, type: !15625, scopeLine: 4989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{!110, !592, !542, !15627}
!15627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!15628 = !DILocalVariable(name: "crop", arg: 1, scope: !15624, file: !3, line: 4987, type: !592)
!15629 = !DILocation(line: 4987, column: 44, scope: !15624)
!15630 = !DILocalVariable(name: "image", arg: 2, scope: !15624, file: !3, line: 4987, type: !542)
!15631 = !DILocation(line: 4987, column: 69, scope: !15624)
!15632 = !DILocalVariable(name: "off", arg: 3, scope: !15624, file: !3, line: 4988, type: !15627)
!15633 = !DILocation(line: 4988, column: 41, scope: !15624)
!15634 = !DILocalVariable(name: "scale", scope: !15624, file: !3, line: 4990, type: !120)
!15635 = !DILocation(line: 4990, column: 10, scope: !15624)
!15636 = !DILocalVariable(name: "xres", scope: !15624, file: !3, line: 4991, type: !121)
!15637 = !DILocation(line: 4991, column: 9, scope: !15624)
!15638 = !DILocalVariable(name: "yres", scope: !15624, file: !3, line: 4991, type: !121)
!15639 = !DILocation(line: 4991, column: 15, scope: !15624)
!15640 = !DILocalVariable(name: "tmargin", scope: !15624, file: !3, line: 4994, type: !105)
!15641 = !DILocation(line: 4994, column: 10, scope: !15624)
!15642 = !DILocalVariable(name: "bmargin", scope: !15624, file: !3, line: 4994, type: !105)
!15643 = !DILocation(line: 4994, column: 19, scope: !15624)
!15644 = !DILocalVariable(name: "lmargin", scope: !15624, file: !3, line: 4994, type: !105)
!15645 = !DILocation(line: 4994, column: 28, scope: !15624)
!15646 = !DILocalVariable(name: "rmargin", scope: !15624, file: !3, line: 4994, type: !105)
!15647 = !DILocation(line: 4994, column: 37, scope: !15624)
!15648 = !DILocalVariable(name: "startx", scope: !15624, file: !3, line: 4995, type: !105)
!15649 = !DILocation(line: 4995, column: 10, scope: !15624)
!15650 = !DILocalVariable(name: "endx", scope: !15624, file: !3, line: 4995, type: !105)
!15651 = !DILocation(line: 4995, column: 18, scope: !15624)
!15652 = !DILocalVariable(name: "starty", scope: !15624, file: !3, line: 4996, type: !105)
!15653 = !DILocation(line: 4996, column: 10, scope: !15624)
!15654 = !DILocalVariable(name: "endy", scope: !15624, file: !3, line: 4996, type: !105)
!15655 = !DILocation(line: 4996, column: 18, scope: !15624)
!15656 = !DILocalVariable(name: "width", scope: !15624, file: !3, line: 4997, type: !105)
!15657 = !DILocation(line: 4997, column: 10, scope: !15624)
!15658 = !DILocalVariable(name: "length", scope: !15624, file: !3, line: 4997, type: !105)
!15659 = !DILocation(line: 4997, column: 17, scope: !15624)
!15660 = !DILocalVariable(name: "crop_width", scope: !15624, file: !3, line: 4997, type: !105)
!15661 = !DILocation(line: 4997, column: 25, scope: !15624)
!15662 = !DILocalVariable(name: "crop_length", scope: !15624, file: !3, line: 4997, type: !105)
!15663 = !DILocation(line: 4997, column: 37, scope: !15624)
!15664 = !DILocalVariable(name: "i", scope: !15624, file: !3, line: 4998, type: !105)
!15665 = !DILocation(line: 4998, column: 10, scope: !15624)
!15666 = !DILocalVariable(name: "max_width", scope: !15624, file: !3, line: 4998, type: !105)
!15667 = !DILocation(line: 4998, column: 13, scope: !15624)
!15668 = !DILocalVariable(name: "max_length", scope: !15624, file: !3, line: 4998, type: !105)
!15669 = !DILocation(line: 4998, column: 24, scope: !15624)
!15670 = !DILocalVariable(name: "zwidth", scope: !15624, file: !3, line: 4998, type: !105)
!15671 = !DILocation(line: 4998, column: 36, scope: !15624)
!15672 = !DILocalVariable(name: "zlength", scope: !15624, file: !3, line: 4998, type: !105)
!15673 = !DILocation(line: 4998, column: 44, scope: !15624)
!15674 = !DILocalVariable(name: "buffsize", scope: !15624, file: !3, line: 4998, type: !105)
!15675 = !DILocation(line: 4998, column: 53, scope: !15624)
!15676 = !DILocalVariable(name: "x1", scope: !15624, file: !3, line: 4999, type: !105)
!15677 = !DILocation(line: 4999, column: 10, scope: !15624)
!15678 = !DILocalVariable(name: "x2", scope: !15624, file: !3, line: 4999, type: !105)
!15679 = !DILocation(line: 4999, column: 14, scope: !15624)
!15680 = !DILocalVariable(name: "y1", scope: !15624, file: !3, line: 4999, type: !105)
!15681 = !DILocation(line: 4999, column: 18, scope: !15624)
!15682 = !DILocalVariable(name: "y2", scope: !15624, file: !3, line: 4999, type: !105)
!15683 = !DILocation(line: 4999, column: 22, scope: !15624)
!15684 = !DILocation(line: 5001, column: 7, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5001, column: 7)
!15686 = !DILocation(line: 5001, column: 14, scope: !15685)
!15687 = !DILocation(line: 5001, column: 23, scope: !15685)
!15688 = !DILocation(line: 5001, column: 39, scope: !15685)
!15689 = !DILocation(line: 5001, column: 42, scope: !15685)
!15690 = !DILocation(line: 5001, column: 49, scope: !15685)
!15691 = !DILocation(line: 5001, column: 58, scope: !15685)
!15692 = !DILocation(line: 5001, column: 7, scope: !15624)
!15693 = !DILocation(line: 5003, column: 10, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15685, file: !3, line: 5002, column: 5)
!15695 = !DILocation(line: 5004, column: 10, scope: !15694)
!15696 = !DILocation(line: 5005, column: 5, scope: !15694)
!15697 = !DILocation(line: 5008, column: 11, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15699, file: !3, line: 5008, column: 9)
!15699 = distinct !DILexicalBlock(scope: !15685, file: !3, line: 5007, column: 5)
!15700 = !DILocation(line: 5008, column: 18, scope: !15698)
!15701 = !DILocation(line: 5008, column: 23, scope: !15698)
!15702 = !DILocation(line: 5008, column: 29, scope: !15698)
!15703 = !DILocation(line: 5008, column: 33, scope: !15698)
!15704 = !DILocation(line: 5008, column: 40, scope: !15698)
!15705 = !DILocation(line: 5008, column: 45, scope: !15698)
!15706 = !DILocation(line: 5008, column: 52, scope: !15698)
!15707 = !DILocation(line: 5009, column: 11, scope: !15698)
!15708 = !DILocation(line: 5009, column: 17, scope: !15698)
!15709 = !DILocation(line: 5009, column: 26, scope: !15698)
!15710 = !DILocation(line: 5009, column: 43, scope: !15698)
!15711 = !DILocation(line: 5010, column: 4, scope: !15698)
!15712 = !DILocation(line: 5010, column: 10, scope: !15698)
!15713 = !DILocation(line: 5010, column: 20, scope: !15698)
!15714 = !DILocation(line: 5010, column: 36, scope: !15698)
!15715 = !DILocation(line: 5010, column: 40, scope: !15698)
!15716 = !DILocation(line: 5010, column: 46, scope: !15698)
!15717 = !DILocation(line: 5010, column: 56, scope: !15698)
!15718 = !DILocation(line: 5010, column: 72, scope: !15698)
!15719 = !DILocation(line: 5011, column: 5, scope: !15698)
!15720 = !DILocation(line: 5011, column: 11, scope: !15698)
!15721 = !DILocation(line: 5011, column: 21, scope: !15698)
!15722 = !DILocation(line: 5011, column: 37, scope: !15698)
!15723 = !DILocation(line: 5011, column: 41, scope: !15698)
!15724 = !DILocation(line: 5011, column: 47, scope: !15698)
!15725 = !DILocation(line: 5011, column: 57, scope: !15698)
!15726 = !DILocation(line: 5008, column: 9, scope: !15699)
!15727 = !DILocation(line: 5013, column: 7, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15698, file: !3, line: 5012, column: 7)
!15729 = !DILocation(line: 5014, column: 7, scope: !15728)
!15730 = !DILocation(line: 5015, column: 7, scope: !15728)
!15731 = !DILocation(line: 5017, column: 12, scope: !15699)
!15732 = !DILocation(line: 5017, column: 19, scope: !15699)
!15733 = !DILocation(line: 5017, column: 10, scope: !15699)
!15734 = !DILocation(line: 5018, column: 12, scope: !15699)
!15735 = !DILocation(line: 5018, column: 19, scope: !15699)
!15736 = !DILocation(line: 5018, column: 10, scope: !15699)
!15737 = !DILocation(line: 5022, column: 9, scope: !15624)
!15738 = !DILocation(line: 5023, column: 11, scope: !15624)
!15739 = !DILocation(line: 5023, column: 17, scope: !15624)
!15740 = !DILocation(line: 5023, column: 3, scope: !15624)
!15741 = !DILocation(line: 5025, column: 14, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 5025, column: 14)
!15743 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5023, column: 27)
!15744 = !DILocation(line: 5025, column: 21, scope: !15742)
!15745 = !DILocation(line: 5025, column: 30, scope: !15742)
!15746 = !DILocation(line: 5025, column: 14, scope: !15743)
!15747 = !DILocation(line: 5026, column: 11, scope: !15742)
!15748 = !DILocation(line: 5026, column: 5, scope: !15742)
!15749 = !DILocation(line: 5027, column: 3, scope: !15743)
!15750 = !DILocation(line: 5029, column: 7, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 5029, column: 7)
!15752 = !DILocation(line: 5029, column: 14, scope: !15751)
!15753 = !DILocation(line: 5029, column: 23, scope: !15751)
!15754 = !DILocation(line: 5029, column: 7, scope: !15743)
!15755 = !DILocation(line: 5030, column: 13, scope: !15751)
!15756 = !DILocation(line: 5030, column: 7, scope: !15751)
!15757 = !DILocation(line: 5031, column: 3, scope: !15743)
!15758 = !DILocation(line: 5034, column: 5, scope: !15743)
!15759 = !DILocation(line: 5037, column: 7, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5037, column: 7)
!15761 = !DILocation(line: 5037, column: 13, scope: !15760)
!15762 = !DILocation(line: 5037, column: 23, scope: !15760)
!15763 = !DILocation(line: 5037, column: 7, scope: !15624)
!15764 = !DILocation(line: 5039, column: 28, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 5038, column: 5)
!15766 = !DILocation(line: 5039, column: 15, scope: !15765)
!15767 = !DILocation(line: 5040, column: 12, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 5040, column: 5)
!15769 = !DILocation(line: 5040, column: 10, scope: !15768)
!15770 = !DILocation(line: 5040, column: 17, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15768, file: !3, line: 5040, column: 5)
!15772 = !DILocation(line: 5040, column: 21, scope: !15771)
!15773 = !DILocation(line: 5040, column: 27, scope: !15771)
!15774 = !DILocation(line: 5040, column: 19, scope: !15771)
!15775 = !DILocation(line: 5040, column: 5, scope: !15768)
!15776 = !DILocation(line: 5042, column: 12, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5042, column: 11)
!15778 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 5041, column: 7)
!15779 = !DILocation(line: 5042, column: 18, scope: !15777)
!15780 = !DILocation(line: 5042, column: 27, scope: !15777)
!15781 = !DILocation(line: 5042, column: 44, scope: !15777)
!15782 = !DILocation(line: 5042, column: 48, scope: !15777)
!15783 = !DILocation(line: 5042, column: 54, scope: !15777)
!15784 = !DILocation(line: 5042, column: 63, scope: !15777)
!15785 = !DILocation(line: 5042, column: 11, scope: !15778)
!15786 = !DILocation(line: 5044, column: 17, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15777, file: !3, line: 5043, column: 9)
!15788 = !DILocation(line: 5044, column: 23, scope: !15787)
!15789 = !DILocation(line: 5044, column: 31, scope: !15787)
!15790 = !DILocation(line: 5044, column: 34, scope: !15787)
!15791 = !DILocation(line: 5044, column: 39, scope: !15787)
!15792 = !DILocation(line: 5044, column: 37, scope: !15787)
!15793 = !DILocation(line: 5044, column: 47, scope: !15787)
!15794 = !DILocation(line: 5044, column: 45, scope: !15787)
!15795 = !DILocation(line: 5044, column: 7, scope: !15787)
!15796 = !DILocation(line: 5044, column: 5, scope: !15787)
!15797 = !DILocation(line: 5045, column: 17, scope: !15787)
!15798 = !DILocation(line: 5045, column: 23, scope: !15787)
!15799 = !DILocation(line: 5045, column: 31, scope: !15787)
!15800 = !DILocation(line: 5045, column: 34, scope: !15787)
!15801 = !DILocation(line: 5045, column: 39, scope: !15787)
!15802 = !DILocation(line: 5045, column: 37, scope: !15787)
!15803 = !DILocation(line: 5045, column: 47, scope: !15787)
!15804 = !DILocation(line: 5045, column: 45, scope: !15787)
!15805 = !DILocation(line: 5045, column: 7, scope: !15787)
!15806 = !DILocation(line: 5045, column: 5, scope: !15787)
!15807 = !DILocation(line: 5046, column: 17, scope: !15787)
!15808 = !DILocation(line: 5046, column: 23, scope: !15787)
!15809 = !DILocation(line: 5046, column: 31, scope: !15787)
!15810 = !DILocation(line: 5046, column: 34, scope: !15787)
!15811 = !DILocation(line: 5046, column: 39, scope: !15787)
!15812 = !DILocation(line: 5046, column: 37, scope: !15787)
!15813 = !DILocation(line: 5046, column: 47, scope: !15787)
!15814 = !DILocation(line: 5046, column: 45, scope: !15787)
!15815 = !DILocation(line: 5046, column: 7, scope: !15787)
!15816 = !DILocation(line: 5046, column: 5, scope: !15787)
!15817 = !DILocation(line: 5047, column: 17, scope: !15787)
!15818 = !DILocation(line: 5047, column: 23, scope: !15787)
!15819 = !DILocation(line: 5047, column: 31, scope: !15787)
!15820 = !DILocation(line: 5047, column: 34, scope: !15787)
!15821 = !DILocation(line: 5047, column: 39, scope: !15787)
!15822 = !DILocation(line: 5047, column: 37, scope: !15787)
!15823 = !DILocation(line: 5047, column: 47, scope: !15787)
!15824 = !DILocation(line: 5047, column: 45, scope: !15787)
!15825 = !DILocation(line: 5047, column: 7, scope: !15787)
!15826 = !DILocation(line: 5047, column: 5, scope: !15787)
!15827 = !DILocation(line: 5048, column: 9, scope: !15787)
!15828 = !DILocation(line: 5051, column: 17, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15777, file: !3, line: 5050, column: 9)
!15830 = !DILocation(line: 5051, column: 23, scope: !15829)
!15831 = !DILocation(line: 5051, column: 31, scope: !15829)
!15832 = !DILocation(line: 5051, column: 34, scope: !15829)
!15833 = !DILocation(line: 5051, column: 7, scope: !15829)
!15834 = !DILocation(line: 5051, column: 5, scope: !15829)
!15835 = !DILocation(line: 5052, column: 17, scope: !15829)
!15836 = !DILocation(line: 5052, column: 23, scope: !15829)
!15837 = !DILocation(line: 5052, column: 31, scope: !15829)
!15838 = !DILocation(line: 5052, column: 34, scope: !15829)
!15839 = !DILocation(line: 5052, column: 7, scope: !15829)
!15840 = !DILocation(line: 5052, column: 5, scope: !15829)
!15841 = !DILocation(line: 5053, column: 17, scope: !15829)
!15842 = !DILocation(line: 5053, column: 23, scope: !15829)
!15843 = !DILocation(line: 5053, column: 31, scope: !15829)
!15844 = !DILocation(line: 5053, column: 34, scope: !15829)
!15845 = !DILocation(line: 5053, column: 7, scope: !15829)
!15846 = !DILocation(line: 5053, column: 5, scope: !15829)
!15847 = !DILocation(line: 5054, column: 17, scope: !15829)
!15848 = !DILocation(line: 5054, column: 23, scope: !15829)
!15849 = !DILocation(line: 5054, column: 31, scope: !15829)
!15850 = !DILocation(line: 5054, column: 34, scope: !15829)
!15851 = !DILocation(line: 5054, column: 7, scope: !15829)
!15852 = !DILocation(line: 5054, column: 5, scope: !15829)
!15853 = !DILocation(line: 5056, column: 11, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5056, column: 11)
!15855 = !DILocation(line: 5056, column: 14, scope: !15854)
!15856 = !DILocation(line: 5056, column: 11, scope: !15778)
!15857 = !DILocation(line: 5057, column: 9, scope: !15854)
!15858 = !DILocation(line: 5057, column: 15, scope: !15854)
!15859 = !DILocation(line: 5057, column: 26, scope: !15854)
!15860 = !DILocation(line: 5057, column: 29, scope: !15854)
!15861 = !DILocation(line: 5057, column: 32, scope: !15854)
!15862 = !DILocation(line: 5059, column: 44, scope: !15854)
!15863 = !DILocation(line: 5059, column: 47, scope: !15854)
!15864 = !DILocation(line: 5059, column: 9, scope: !15854)
!15865 = !DILocation(line: 5059, column: 15, scope: !15854)
!15866 = !DILocation(line: 5059, column: 26, scope: !15854)
!15867 = !DILocation(line: 5059, column: 29, scope: !15854)
!15868 = !DILocation(line: 5059, column: 32, scope: !15854)
!15869 = !DILocation(line: 5061, column: 11, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5061, column: 11)
!15871 = !DILocation(line: 5061, column: 16, scope: !15870)
!15872 = !DILocation(line: 5061, column: 23, scope: !15870)
!15873 = !DILocation(line: 5061, column: 29, scope: !15870)
!15874 = !DILocation(line: 5061, column: 14, scope: !15870)
!15875 = !DILocation(line: 5061, column: 11, scope: !15778)
!15876 = !DILocation(line: 5062, column: 34, scope: !15870)
!15877 = !DILocation(line: 5062, column: 41, scope: !15870)
!15878 = !DILocation(line: 5062, column: 47, scope: !15870)
!15879 = !DILocation(line: 5062, column: 9, scope: !15870)
!15880 = !DILocation(line: 5062, column: 15, scope: !15870)
!15881 = !DILocation(line: 5062, column: 26, scope: !15870)
!15882 = !DILocation(line: 5062, column: 29, scope: !15870)
!15883 = !DILocation(line: 5062, column: 32, scope: !15870)
!15884 = !DILocation(line: 5064, column: 44, scope: !15870)
!15885 = !DILocation(line: 5064, column: 47, scope: !15870)
!15886 = !DILocation(line: 5064, column: 9, scope: !15870)
!15887 = !DILocation(line: 5064, column: 15, scope: !15870)
!15888 = !DILocation(line: 5064, column: 26, scope: !15870)
!15889 = !DILocation(line: 5064, column: 29, scope: !15870)
!15890 = !DILocation(line: 5064, column: 32, scope: !15870)
!15891 = !DILocation(line: 5065, column: 17, scope: !15778)
!15892 = !DILocation(line: 5065, column: 23, scope: !15778)
!15893 = !DILocation(line: 5065, column: 34, scope: !15778)
!15894 = !DILocation(line: 5065, column: 37, scope: !15778)
!15895 = !DILocation(line: 5065, column: 42, scope: !15778)
!15896 = !DILocation(line: 5065, column: 48, scope: !15778)
!15897 = !DILocation(line: 5065, column: 59, scope: !15778)
!15898 = !DILocation(line: 5065, column: 62, scope: !15778)
!15899 = !DILocation(line: 5065, column: 40, scope: !15778)
!15900 = !DILocation(line: 5065, column: 65, scope: !15778)
!15901 = !DILocation(line: 5065, column: 15, scope: !15778)
!15902 = !DILocation(line: 5067, column: 11, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5067, column: 11)
!15904 = !DILocation(line: 5067, column: 14, scope: !15903)
!15905 = !DILocation(line: 5067, column: 11, scope: !15778)
!15906 = !DILocation(line: 5068, column: 9, scope: !15903)
!15907 = !DILocation(line: 5068, column: 15, scope: !15903)
!15908 = !DILocation(line: 5068, column: 26, scope: !15903)
!15909 = !DILocation(line: 5068, column: 29, scope: !15903)
!15910 = !DILocation(line: 5068, column: 32, scope: !15903)
!15911 = !DILocation(line: 5070, column: 44, scope: !15903)
!15912 = !DILocation(line: 5070, column: 47, scope: !15903)
!15913 = !DILocation(line: 5070, column: 9, scope: !15903)
!15914 = !DILocation(line: 5070, column: 15, scope: !15903)
!15915 = !DILocation(line: 5070, column: 26, scope: !15903)
!15916 = !DILocation(line: 5070, column: 29, scope: !15903)
!15917 = !DILocation(line: 5070, column: 32, scope: !15903)
!15918 = !DILocation(line: 5072, column: 11, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5072, column: 11)
!15920 = !DILocation(line: 5072, column: 16, scope: !15919)
!15921 = !DILocation(line: 5072, column: 23, scope: !15919)
!15922 = !DILocation(line: 5072, column: 30, scope: !15919)
!15923 = !DILocation(line: 5072, column: 14, scope: !15919)
!15924 = !DILocation(line: 5072, column: 11, scope: !15778)
!15925 = !DILocation(line: 5073, column: 34, scope: !15919)
!15926 = !DILocation(line: 5073, column: 41, scope: !15919)
!15927 = !DILocation(line: 5073, column: 48, scope: !15919)
!15928 = !DILocation(line: 5073, column: 9, scope: !15919)
!15929 = !DILocation(line: 5073, column: 15, scope: !15919)
!15930 = !DILocation(line: 5073, column: 26, scope: !15919)
!15931 = !DILocation(line: 5073, column: 29, scope: !15919)
!15932 = !DILocation(line: 5073, column: 32, scope: !15919)
!15933 = !DILocation(line: 5075, column: 44, scope: !15919)
!15934 = !DILocation(line: 5075, column: 47, scope: !15919)
!15935 = !DILocation(line: 5075, column: 9, scope: !15919)
!15936 = !DILocation(line: 5075, column: 15, scope: !15919)
!15937 = !DILocation(line: 5075, column: 26, scope: !15919)
!15938 = !DILocation(line: 5075, column: 29, scope: !15919)
!15939 = !DILocation(line: 5075, column: 32, scope: !15919)
!15940 = !DILocation(line: 5077, column: 17, scope: !15778)
!15941 = !DILocation(line: 5077, column: 23, scope: !15778)
!15942 = !DILocation(line: 5077, column: 34, scope: !15778)
!15943 = !DILocation(line: 5077, column: 37, scope: !15778)
!15944 = !DILocation(line: 5077, column: 42, scope: !15778)
!15945 = !DILocation(line: 5077, column: 48, scope: !15778)
!15946 = !DILocation(line: 5077, column: 59, scope: !15778)
!15947 = !DILocation(line: 5077, column: 62, scope: !15778)
!15948 = !DILocation(line: 5077, column: 40, scope: !15778)
!15949 = !DILocation(line: 5077, column: 65, scope: !15778)
!15950 = !DILocation(line: 5077, column: 15, scope: !15778)
!15951 = !DILocation(line: 5079, column: 11, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5079, column: 11)
!15953 = !DILocation(line: 5079, column: 20, scope: !15952)
!15954 = !DILocation(line: 5079, column: 18, scope: !15952)
!15955 = !DILocation(line: 5079, column: 11, scope: !15778)
!15956 = !DILocation(line: 5080, column: 21, scope: !15952)
!15957 = !DILocation(line: 5080, column: 19, scope: !15952)
!15958 = !DILocation(line: 5080, column: 9, scope: !15952)
!15959 = !DILocation(line: 5081, column: 11, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5081, column: 11)
!15961 = !DILocation(line: 5081, column: 21, scope: !15960)
!15962 = !DILocation(line: 5081, column: 19, scope: !15960)
!15963 = !DILocation(line: 5081, column: 11, scope: !15778)
!15964 = !DILocation(line: 5082, column: 22, scope: !15960)
!15965 = !DILocation(line: 5082, column: 20, scope: !15960)
!15966 = !DILocation(line: 5082, column: 9, scope: !15960)
!15967 = !DILocation(line: 5085, column: 14, scope: !15778)
!15968 = !DILocation(line: 5085, column: 23, scope: !15778)
!15969 = !DILocation(line: 5085, column: 30, scope: !15778)
!15970 = !DILocation(line: 5085, column: 21, scope: !15778)
!15971 = !DILocation(line: 5085, column: 36, scope: !15778)
!15972 = !DILocation(line: 5085, column: 43, scope: !15778)
!15973 = !DILocation(line: 5085, column: 34, scope: !15778)
!15974 = !DILocation(line: 5085, column: 47, scope: !15778)
!15975 = !DILocation(line: 5085, column: 53, scope: !15778)
!15976 = !DILocation(line: 5085, column: 61, scope: !15778)
!15977 = !DILocation(line: 5085, column: 69, scope: !15778)
!15978 = !DILocation(line: 5085, column: 58, scope: !15778)
!15979 = !DILocation(line: 5084, column: 16, scope: !15778)
!15980 = !DILocation(line: 5087, column: 38, scope: !15778)
!15981 = !DILocation(line: 5087, column: 7, scope: !15778)
!15982 = !DILocation(line: 5087, column: 13, scope: !15778)
!15983 = !DILocation(line: 5087, column: 24, scope: !15778)
!15984 = !DILocation(line: 5087, column: 27, scope: !15778)
!15985 = !DILocation(line: 5087, column: 36, scope: !15778)
!15986 = !DILocation(line: 5088, column: 26, scope: !15778)
!15987 = !DILocation(line: 5088, column: 7, scope: !15778)
!15988 = !DILocation(line: 5088, column: 13, scope: !15778)
!15989 = !DILocation(line: 5088, column: 23, scope: !15778)
!15990 = !DILocation(line: 5089, column: 11, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5089, column: 11)
!15992 = !DILocation(line: 5089, column: 17, scope: !15991)
!15993 = !DILocation(line: 5089, column: 26, scope: !15991)
!15994 = !DILocation(line: 5089, column: 11, scope: !15778)
!15995 = !DILocation(line: 5091, column: 17, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15991, file: !3, line: 5090, column: 9)
!15997 = !DILocation(line: 5091, column: 23, scope: !15996)
!15998 = !DILocation(line: 5091, column: 9, scope: !15996)
!15999 = !DILocation(line: 5095, column: 40, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15996, file: !3, line: 5092, column: 11)
!16001 = !DILocation(line: 5095, column: 16, scope: !16000)
!16002 = !DILocation(line: 5095, column: 22, scope: !16000)
!16003 = !DILocation(line: 5095, column: 38, scope: !16000)
!16004 = !DILocation(line: 5096, column: 40, scope: !16000)
!16005 = !DILocation(line: 5096, column: 16, scope: !16000)
!16006 = !DILocation(line: 5096, column: 22, scope: !16000)
!16007 = !DILocation(line: 5096, column: 37, scope: !16000)
!16008 = !DILocation(line: 5097, column: 16, scope: !16000)
!16009 = !DILocation(line: 5101, column: 39, scope: !16000)
!16010 = !DILocation(line: 5101, column: 16, scope: !16000)
!16011 = !DILocation(line: 5101, column: 22, scope: !16000)
!16012 = !DILocation(line: 5101, column: 37, scope: !16000)
!16013 = !DILocation(line: 5102, column: 41, scope: !16000)
!16014 = !DILocation(line: 5102, column: 16, scope: !16000)
!16015 = !DILocation(line: 5102, column: 22, scope: !16000)
!16016 = !DILocation(line: 5102, column: 38, scope: !16000)
!16017 = !DILocation(line: 5103, column: 9, scope: !16000)
!16018 = !DILocation(line: 5105, column: 2, scope: !15996)
!16019 = !DILocation(line: 5106, column: 7, scope: !15778)
!16020 = !DILocation(line: 5040, column: 37, scope: !15771)
!16021 = !DILocation(line: 5040, column: 5, scope: !15771)
!16022 = distinct !{!16022, !15775, !16023}
!16023 = !DILocation(line: 5106, column: 7, scope: !15768)
!16024 = !DILocation(line: 5107, column: 5, scope: !15765)
!16025 = !DILocation(line: 5113, column: 7, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5113, column: 7)
!16027 = !DILocation(line: 5113, column: 13, scope: !16026)
!16028 = !DILocation(line: 5113, column: 23, scope: !16026)
!16029 = !DILocation(line: 5113, column: 7, scope: !15624)
!16030 = !DILocation(line: 5115, column: 9, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !3, line: 5115, column: 9)
!16032 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 5114, column: 5)
!16033 = !DILocation(line: 5115, column: 15, scope: !16031)
!16034 = !DILocation(line: 5115, column: 24, scope: !16031)
!16035 = !DILocation(line: 5115, column: 40, scope: !16031)
!16036 = !DILocation(line: 5115, column: 43, scope: !16031)
!16037 = !DILocation(line: 5115, column: 49, scope: !16031)
!16038 = !DILocation(line: 5115, column: 58, scope: !16031)
!16039 = !DILocation(line: 5115, column: 9, scope: !16032)
!16040 = !DILocation(line: 5117, column: 26, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16031, file: !3, line: 5116, column: 7)
!16042 = !DILocation(line: 5117, column: 32, scope: !16041)
!16043 = !DILocation(line: 5117, column: 17, scope: !16041)
!16044 = !DILocation(line: 5117, column: 15, scope: !16041)
!16045 = !DILocation(line: 5118, column: 26, scope: !16041)
!16046 = !DILocation(line: 5118, column: 32, scope: !16041)
!16047 = !DILocation(line: 5118, column: 17, scope: !16041)
!16048 = !DILocation(line: 5118, column: 15, scope: !16041)
!16049 = !DILocation(line: 5119, column: 26, scope: !16041)
!16050 = !DILocation(line: 5119, column: 32, scope: !16041)
!16051 = !DILocation(line: 5119, column: 17, scope: !16041)
!16052 = !DILocation(line: 5119, column: 15, scope: !16041)
!16053 = !DILocation(line: 5120, column: 26, scope: !16041)
!16054 = !DILocation(line: 5120, column: 32, scope: !16041)
!16055 = !DILocation(line: 5120, column: 17, scope: !16041)
!16056 = !DILocation(line: 5120, column: 15, scope: !16041)
!16057 = !DILocation(line: 5121, column: 7, scope: !16041)
!16058 = !DILocation(line: 5124, column: 26, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16031, file: !3, line: 5123, column: 7)
!16060 = !DILocation(line: 5124, column: 32, scope: !16059)
!16061 = !DILocation(line: 5124, column: 45, scope: !16059)
!16062 = !DILocation(line: 5124, column: 43, scope: !16059)
!16063 = !DILocation(line: 5124, column: 53, scope: !16059)
!16064 = !DILocation(line: 5124, column: 51, scope: !16059)
!16065 = !DILocation(line: 5124, column: 17, scope: !16059)
!16066 = !DILocation(line: 5124, column: 15, scope: !16059)
!16067 = !DILocation(line: 5125, column: 26, scope: !16059)
!16068 = !DILocation(line: 5125, column: 32, scope: !16059)
!16069 = !DILocation(line: 5125, column: 45, scope: !16059)
!16070 = !DILocation(line: 5125, column: 43, scope: !16059)
!16071 = !DILocation(line: 5125, column: 53, scope: !16059)
!16072 = !DILocation(line: 5125, column: 51, scope: !16059)
!16073 = !DILocation(line: 5125, column: 17, scope: !16059)
!16074 = !DILocation(line: 5125, column: 15, scope: !16059)
!16075 = !DILocation(line: 5126, column: 26, scope: !16059)
!16076 = !DILocation(line: 5126, column: 32, scope: !16059)
!16077 = !DILocation(line: 5126, column: 45, scope: !16059)
!16078 = !DILocation(line: 5126, column: 43, scope: !16059)
!16079 = !DILocation(line: 5126, column: 53, scope: !16059)
!16080 = !DILocation(line: 5126, column: 51, scope: !16059)
!16081 = !DILocation(line: 5126, column: 17, scope: !16059)
!16082 = !DILocation(line: 5126, column: 15, scope: !16059)
!16083 = !DILocation(line: 5127, column: 26, scope: !16059)
!16084 = !DILocation(line: 5127, column: 32, scope: !16059)
!16085 = !DILocation(line: 5127, column: 45, scope: !16059)
!16086 = !DILocation(line: 5127, column: 43, scope: !16059)
!16087 = !DILocation(line: 5127, column: 53, scope: !16059)
!16088 = !DILocation(line: 5127, column: 51, scope: !16059)
!16089 = !DILocation(line: 5127, column: 17, scope: !16059)
!16090 = !DILocation(line: 5127, column: 15, scope: !16059)
!16091 = !DILocation(line: 5130, column: 10, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16032, file: !3, line: 5130, column: 9)
!16093 = !DILocation(line: 5130, column: 20, scope: !16092)
!16094 = !DILocation(line: 5130, column: 18, scope: !16092)
!16095 = !DILocation(line: 5130, column: 31, scope: !16092)
!16096 = !DILocation(line: 5130, column: 38, scope: !16092)
!16097 = !DILocation(line: 5130, column: 29, scope: !16092)
!16098 = !DILocation(line: 5130, column: 9, scope: !16032)
!16099 = !DILocation(line: 5132, column: 7, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16092, file: !3, line: 5131, column: 7)
!16101 = !DILocation(line: 5133, column: 15, scope: !16100)
!16102 = !DILocation(line: 5134, column: 15, scope: !16100)
!16103 = !DILocation(line: 5135, column: 7, scope: !16100)
!16104 = !DILocation(line: 5137, column: 10, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16032, file: !3, line: 5137, column: 9)
!16106 = !DILocation(line: 5137, column: 20, scope: !16105)
!16107 = !DILocation(line: 5137, column: 18, scope: !16105)
!16108 = !DILocation(line: 5137, column: 31, scope: !16105)
!16109 = !DILocation(line: 5137, column: 38, scope: !16105)
!16110 = !DILocation(line: 5137, column: 29, scope: !16105)
!16111 = !DILocation(line: 5137, column: 9, scope: !16032)
!16112 = !DILocation(line: 5139, column: 7, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16105, file: !3, line: 5138, column: 7)
!16114 = !DILocation(line: 5140, column: 15, scope: !16113)
!16115 = !DILocation(line: 5141, column: 15, scope: !16113)
!16116 = !DILocation(line: 5142, column: 7, scope: !16113)
!16117 = !DILocation(line: 5144, column: 5, scope: !16032)
!16118 = !DILocation(line: 5147, column: 13, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 5146, column: 5)
!16120 = !DILocation(line: 5148, column: 13, scope: !16119)
!16121 = !DILocation(line: 5149, column: 13, scope: !16119)
!16122 = !DILocation(line: 5150, column: 13, scope: !16119)
!16123 = !DILocation(line: 5154, column: 7, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5154, column: 7)
!16125 = !DILocation(line: 5154, column: 13, scope: !16124)
!16126 = !DILocation(line: 5154, column: 22, scope: !16124)
!16127 = !DILocation(line: 5154, column: 38, scope: !16124)
!16128 = !DILocation(line: 5154, column: 41, scope: !16124)
!16129 = !DILocation(line: 5154, column: 47, scope: !16124)
!16130 = !DILocation(line: 5154, column: 56, scope: !16124)
!16131 = !DILocation(line: 5154, column: 7, scope: !15624)
!16132 = !DILocation(line: 5156, column: 9, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16134, file: !3, line: 5156, column: 9)
!16134 = distinct !DILexicalBlock(scope: !16124, file: !3, line: 5155, column: 5)
!16135 = !DILocation(line: 5156, column: 15, scope: !16133)
!16136 = !DILocation(line: 5156, column: 25, scope: !16133)
!16137 = !DILocation(line: 5156, column: 9, scope: !16134)
!16138 = !DILocation(line: 5157, column: 23, scope: !16133)
!16139 = !DILocation(line: 5157, column: 29, scope: !16133)
!16140 = !DILocation(line: 5157, column: 15, scope: !16133)
!16141 = !DILocation(line: 5157, column: 13, scope: !16133)
!16142 = !DILocation(line: 5157, column: 7, scope: !16133)
!16143 = !DILocation(line: 5159, column: 15, scope: !16133)
!16144 = !DILocation(line: 5159, column: 22, scope: !16133)
!16145 = !DILocation(line: 5159, column: 30, scope: !16133)
!16146 = !DILocation(line: 5159, column: 28, scope: !16133)
!16147 = !DILocation(line: 5159, column: 40, scope: !16133)
!16148 = !DILocation(line: 5159, column: 38, scope: !16133)
!16149 = !DILocation(line: 5159, column: 13, scope: !16133)
!16150 = !DILocation(line: 5161, column: 9, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16134, file: !3, line: 5161, column: 9)
!16152 = !DILocation(line: 5161, column: 15, scope: !16151)
!16153 = !DILocation(line: 5161, column: 25, scope: !16151)
!16154 = !DILocation(line: 5161, column: 9, scope: !16134)
!16155 = !DILocation(line: 5162, column: 25, scope: !16151)
!16156 = !DILocation(line: 5162, column: 31, scope: !16151)
!16157 = !DILocation(line: 5162, column: 17, scope: !16151)
!16158 = !DILocation(line: 5162, column: 15, scope: !16151)
!16159 = !DILocation(line: 5162, column: 7, scope: !16151)
!16160 = !DILocation(line: 5164, column: 16, scope: !16151)
!16161 = !DILocation(line: 5164, column: 23, scope: !16151)
!16162 = !DILocation(line: 5164, column: 32, scope: !16151)
!16163 = !DILocation(line: 5164, column: 30, scope: !16151)
!16164 = !DILocation(line: 5164, column: 42, scope: !16151)
!16165 = !DILocation(line: 5164, column: 40, scope: !16151)
!16166 = !DILocation(line: 5164, column: 14, scope: !16151)
!16167 = !DILocation(line: 5165, column: 5, scope: !16134)
!16168 = !DILocation(line: 5168, column: 9, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 5168, column: 9)
!16170 = distinct !DILexicalBlock(scope: !16124, file: !3, line: 5167, column: 5)
!16171 = !DILocation(line: 5168, column: 15, scope: !16169)
!16172 = !DILocation(line: 5168, column: 25, scope: !16169)
!16173 = !DILocation(line: 5168, column: 9, scope: !16170)
!16174 = !DILocation(line: 5169, column: 24, scope: !16169)
!16175 = !DILocation(line: 5169, column: 30, scope: !16169)
!16176 = !DILocation(line: 5169, column: 38, scope: !16169)
!16177 = !DILocation(line: 5169, column: 36, scope: !16169)
!16178 = !DILocation(line: 5169, column: 46, scope: !16169)
!16179 = !DILocation(line: 5169, column: 53, scope: !16169)
!16180 = !DILocation(line: 5169, column: 44, scope: !16169)
!16181 = !DILocation(line: 5169, column: 15, scope: !16169)
!16182 = !DILocation(line: 5169, column: 13, scope: !16169)
!16183 = !DILocation(line: 5169, column: 7, scope: !16169)
!16184 = !DILocation(line: 5171, column: 15, scope: !16169)
!16185 = !DILocation(line: 5171, column: 22, scope: !16169)
!16186 = !DILocation(line: 5171, column: 30, scope: !16169)
!16187 = !DILocation(line: 5171, column: 28, scope: !16169)
!16188 = !DILocation(line: 5171, column: 40, scope: !16169)
!16189 = !DILocation(line: 5171, column: 38, scope: !16169)
!16190 = !DILocation(line: 5171, column: 13, scope: !16169)
!16191 = !DILocation(line: 5173, column: 9, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 5173, column: 9)
!16193 = !DILocation(line: 5173, column: 15, scope: !16192)
!16194 = !DILocation(line: 5173, column: 25, scope: !16192)
!16195 = !DILocation(line: 5173, column: 9, scope: !16170)
!16196 = !DILocation(line: 5174, column: 26, scope: !16192)
!16197 = !DILocation(line: 5174, column: 32, scope: !16192)
!16198 = !DILocation(line: 5174, column: 41, scope: !16192)
!16199 = !DILocation(line: 5174, column: 39, scope: !16192)
!16200 = !DILocation(line: 5174, column: 49, scope: !16192)
!16201 = !DILocation(line: 5174, column: 56, scope: !16192)
!16202 = !DILocation(line: 5174, column: 47, scope: !16192)
!16203 = !DILocation(line: 5174, column: 17, scope: !16192)
!16204 = !DILocation(line: 5174, column: 15, scope: !16192)
!16205 = !DILocation(line: 5174, column: 7, scope: !16192)
!16206 = !DILocation(line: 5176, column: 16, scope: !16192)
!16207 = !DILocation(line: 5176, column: 23, scope: !16192)
!16208 = !DILocation(line: 5176, column: 32, scope: !16192)
!16209 = !DILocation(line: 5176, column: 30, scope: !16192)
!16210 = !DILocation(line: 5176, column: 42, scope: !16192)
!16211 = !DILocation(line: 5176, column: 40, scope: !16192)
!16212 = !DILocation(line: 5176, column: 14, scope: !16192)
!16213 = !DILocation(line: 5179, column: 18, scope: !15624)
!16214 = !DILocation(line: 5179, column: 3, scope: !15624)
!16215 = !DILocation(line: 5179, column: 8, scope: !15624)
!16216 = !DILocation(line: 5179, column: 16, scope: !15624)
!16217 = !DILocation(line: 5180, column: 18, scope: !15624)
!16218 = !DILocation(line: 5180, column: 3, scope: !15624)
!16219 = !DILocation(line: 5180, column: 8, scope: !15624)
!16220 = !DILocation(line: 5180, column: 16, scope: !15624)
!16221 = !DILocation(line: 5181, column: 18, scope: !15624)
!16222 = !DILocation(line: 5181, column: 3, scope: !15624)
!16223 = !DILocation(line: 5181, column: 8, scope: !15624)
!16224 = !DILocation(line: 5181, column: 16, scope: !15624)
!16225 = !DILocation(line: 5182, column: 18, scope: !15624)
!16226 = !DILocation(line: 5182, column: 3, scope: !15624)
!16227 = !DILocation(line: 5182, column: 8, scope: !15624)
!16228 = !DILocation(line: 5182, column: 16, scope: !15624)
!16229 = !DILocation(line: 5187, column: 11, scope: !15624)
!16230 = !DILocation(line: 5187, column: 17, scope: !15624)
!16231 = !DILocation(line: 5187, column: 3, scope: !15624)
!16232 = !DILocation(line: 5189, column: 19, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5187, column: 27)
!16234 = !DILocation(line: 5189, column: 17, scope: !16233)
!16235 = !DILocation(line: 5190, column: 15, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16233, file: !3, line: 5190, column: 14)
!16237 = !DILocation(line: 5190, column: 24, scope: !16236)
!16238 = !DILocation(line: 5190, column: 22, scope: !16236)
!16239 = !DILocation(line: 5190, column: 35, scope: !16236)
!16240 = !DILocation(line: 5190, column: 42, scope: !16236)
!16241 = !DILocation(line: 5190, column: 50, scope: !16236)
!16242 = !DILocation(line: 5190, column: 48, scope: !16236)
!16243 = !DILocation(line: 5190, column: 31, scope: !16236)
!16244 = !DILocation(line: 5190, column: 14, scope: !16233)
!16245 = !DILocation(line: 5191, column: 19, scope: !16236)
!16246 = !DILocation(line: 5191, column: 26, scope: !16236)
!16247 = !DILocation(line: 5191, column: 34, scope: !16236)
!16248 = !DILocation(line: 5191, column: 32, scope: !16236)
!16249 = !DILocation(line: 5191, column: 42, scope: !16236)
!16250 = !DILocation(line: 5191, column: 17, scope: !16236)
!16251 = !DILocation(line: 5191, column: 12, scope: !16236)
!16252 = !DILocation(line: 5193, column: 19, scope: !16236)
!16253 = !DILocation(line: 5193, column: 28, scope: !16236)
!16254 = !DILocation(line: 5193, column: 26, scope: !16236)
!16255 = !DILocation(line: 5193, column: 34, scope: !16236)
!16256 = !DILocation(line: 5193, column: 17, scope: !16236)
!16257 = !DILocation(line: 5195, column: 17, scope: !16233)
!16258 = !DILocation(line: 5195, column: 24, scope: !16233)
!16259 = !DILocation(line: 5195, column: 33, scope: !16233)
!16260 = !DILocation(line: 5195, column: 31, scope: !16233)
!16261 = !DILocation(line: 5195, column: 41, scope: !16233)
!16262 = !DILocation(line: 5195, column: 15, scope: !16233)
!16263 = !DILocation(line: 5196, column: 15, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16233, file: !3, line: 5196, column: 14)
!16265 = !DILocation(line: 5196, column: 22, scope: !16264)
!16266 = !DILocation(line: 5196, column: 20, scope: !16264)
!16267 = !DILocation(line: 5196, column: 33, scope: !16264)
!16268 = !DILocation(line: 5196, column: 30, scope: !16264)
!16269 = !DILocation(line: 5196, column: 14, scope: !16233)
!16270 = !DILocation(line: 5197, column: 21, scope: !16264)
!16271 = !DILocation(line: 5197, column: 19, scope: !16264)
!16272 = !DILocation(line: 5197, column: 12, scope: !16264)
!16273 = !DILocation(line: 5199, column: 21, scope: !16264)
!16274 = !DILocation(line: 5199, column: 28, scope: !16264)
!16275 = !DILocation(line: 5199, column: 26, scope: !16264)
!16276 = !DILocation(line: 5199, column: 35, scope: !16264)
!16277 = !DILocation(line: 5199, column: 19, scope: !16264)
!16278 = !DILocation(line: 5200, column: 10, scope: !16233)
!16279 = !DILocation(line: 5202, column: 17, scope: !16233)
!16280 = !DILocation(line: 5202, column: 24, scope: !16233)
!16281 = !DILocation(line: 5202, column: 32, scope: !16233)
!16282 = !DILocation(line: 5202, column: 30, scope: !16233)
!16283 = !DILocation(line: 5202, column: 40, scope: !16233)
!16284 = !DILocation(line: 5202, column: 15, scope: !16233)
!16285 = !DILocation(line: 5203, column: 15, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16233, file: !3, line: 5203, column: 14)
!16287 = !DILocation(line: 5203, column: 22, scope: !16286)
!16288 = !DILocation(line: 5203, column: 20, scope: !16286)
!16289 = !DILocation(line: 5203, column: 32, scope: !16286)
!16290 = !DILocation(line: 5203, column: 29, scope: !16286)
!16291 = !DILocation(line: 5203, column: 14, scope: !16233)
!16292 = !DILocation(line: 5204, column: 21, scope: !16286)
!16293 = !DILocation(line: 5204, column: 19, scope: !16286)
!16294 = !DILocation(line: 5204, column: 12, scope: !16286)
!16295 = !DILocation(line: 5206, column: 21, scope: !16286)
!16296 = !DILocation(line: 5206, column: 28, scope: !16286)
!16297 = !DILocation(line: 5206, column: 26, scope: !16286)
!16298 = !DILocation(line: 5206, column: 34, scope: !16286)
!16299 = !DILocation(line: 5206, column: 19, scope: !16286)
!16300 = !DILocation(line: 5208, column: 19, scope: !16233)
!16301 = !DILocation(line: 5208, column: 17, scope: !16233)
!16302 = !DILocation(line: 5209, column: 15, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16233, file: !3, line: 5209, column: 14)
!16304 = !DILocation(line: 5209, column: 24, scope: !16303)
!16305 = !DILocation(line: 5209, column: 22, scope: !16303)
!16306 = !DILocation(line: 5209, column: 36, scope: !16303)
!16307 = !DILocation(line: 5209, column: 43, scope: !16303)
!16308 = !DILocation(line: 5209, column: 52, scope: !16303)
!16309 = !DILocation(line: 5209, column: 50, scope: !16303)
!16310 = !DILocation(line: 5209, column: 32, scope: !16303)
!16311 = !DILocation(line: 5209, column: 14, scope: !16233)
!16312 = !DILocation(line: 5210, column: 19, scope: !16303)
!16313 = !DILocation(line: 5210, column: 26, scope: !16303)
!16314 = !DILocation(line: 5210, column: 35, scope: !16303)
!16315 = !DILocation(line: 5210, column: 33, scope: !16303)
!16316 = !DILocation(line: 5210, column: 43, scope: !16303)
!16317 = !DILocation(line: 5210, column: 17, scope: !16303)
!16318 = !DILocation(line: 5210, column: 12, scope: !16303)
!16319 = !DILocation(line: 5212, column: 19, scope: !16303)
!16320 = !DILocation(line: 5212, column: 28, scope: !16303)
!16321 = !DILocation(line: 5212, column: 26, scope: !16303)
!16322 = !DILocation(line: 5212, column: 35, scope: !16303)
!16323 = !DILocation(line: 5212, column: 17, scope: !16303)
!16324 = !DILocation(line: 5213, column: 10, scope: !16233)
!16325 = !DILocation(line: 5217, column: 19, scope: !16233)
!16326 = !DILocation(line: 5217, column: 17, scope: !16233)
!16327 = !DILocation(line: 5218, column: 15, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16233, file: !3, line: 5218, column: 14)
!16329 = !DILocation(line: 5218, column: 24, scope: !16328)
!16330 = !DILocation(line: 5218, column: 22, scope: !16328)
!16331 = !DILocation(line: 5218, column: 35, scope: !16328)
!16332 = !DILocation(line: 5218, column: 42, scope: !16328)
!16333 = !DILocation(line: 5218, column: 50, scope: !16328)
!16334 = !DILocation(line: 5218, column: 48, scope: !16328)
!16335 = !DILocation(line: 5218, column: 31, scope: !16328)
!16336 = !DILocation(line: 5218, column: 14, scope: !16233)
!16337 = !DILocation(line: 5219, column: 19, scope: !16328)
!16338 = !DILocation(line: 5219, column: 26, scope: !16328)
!16339 = !DILocation(line: 5219, column: 34, scope: !16328)
!16340 = !DILocation(line: 5219, column: 32, scope: !16328)
!16341 = !DILocation(line: 5219, column: 42, scope: !16328)
!16342 = !DILocation(line: 5219, column: 17, scope: !16328)
!16343 = !DILocation(line: 5219, column: 12, scope: !16328)
!16344 = !DILocation(line: 5221, column: 19, scope: !16328)
!16345 = !DILocation(line: 5221, column: 28, scope: !16328)
!16346 = !DILocation(line: 5221, column: 26, scope: !16328)
!16347 = !DILocation(line: 5221, column: 34, scope: !16328)
!16348 = !DILocation(line: 5221, column: 17, scope: !16328)
!16349 = !DILocation(line: 5223, column: 19, scope: !16233)
!16350 = !DILocation(line: 5223, column: 17, scope: !16233)
!16351 = !DILocation(line: 5224, column: 15, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16233, file: !3, line: 5224, column: 14)
!16353 = !DILocation(line: 5224, column: 24, scope: !16352)
!16354 = !DILocation(line: 5224, column: 22, scope: !16352)
!16355 = !DILocation(line: 5224, column: 36, scope: !16352)
!16356 = !DILocation(line: 5224, column: 43, scope: !16352)
!16357 = !DILocation(line: 5224, column: 52, scope: !16352)
!16358 = !DILocation(line: 5224, column: 50, scope: !16352)
!16359 = !DILocation(line: 5224, column: 32, scope: !16352)
!16360 = !DILocation(line: 5224, column: 14, scope: !16233)
!16361 = !DILocation(line: 5225, column: 19, scope: !16352)
!16362 = !DILocation(line: 5225, column: 26, scope: !16352)
!16363 = !DILocation(line: 5225, column: 35, scope: !16352)
!16364 = !DILocation(line: 5225, column: 33, scope: !16352)
!16365 = !DILocation(line: 5225, column: 43, scope: !16352)
!16366 = !DILocation(line: 5225, column: 17, scope: !16352)
!16367 = !DILocation(line: 5225, column: 12, scope: !16352)
!16368 = !DILocation(line: 5227, column: 19, scope: !16352)
!16369 = !DILocation(line: 5227, column: 28, scope: !16352)
!16370 = !DILocation(line: 5227, column: 26, scope: !16352)
!16371 = !DILocation(line: 5227, column: 35, scope: !16352)
!16372 = !DILocation(line: 5227, column: 17, scope: !16352)
!16373 = !DILocation(line: 5228, column: 10, scope: !16233)
!16374 = !DILocation(line: 5230, column: 17, scope: !15624)
!16375 = !DILocation(line: 5230, column: 3, scope: !15624)
!16376 = !DILocation(line: 5230, column: 8, scope: !15624)
!16377 = !DILocation(line: 5230, column: 15, scope: !15624)
!16378 = !DILocation(line: 5231, column: 17, scope: !15624)
!16379 = !DILocation(line: 5231, column: 3, scope: !15624)
!16380 = !DILocation(line: 5231, column: 8, scope: !15624)
!16381 = !DILocation(line: 5231, column: 15, scope: !15624)
!16382 = !DILocation(line: 5232, column: 17, scope: !15624)
!16383 = !DILocation(line: 5232, column: 3, scope: !15624)
!16384 = !DILocation(line: 5232, column: 8, scope: !15624)
!16385 = !DILocation(line: 5232, column: 15, scope: !15624)
!16386 = !DILocation(line: 5233, column: 17, scope: !15624)
!16387 = !DILocation(line: 5233, column: 3, scope: !15624)
!16388 = !DILocation(line: 5233, column: 8, scope: !15624)
!16389 = !DILocation(line: 5233, column: 15, scope: !15624)
!16390 = !DILocation(line: 5235, column: 17, scope: !15624)
!16391 = !DILocation(line: 5235, column: 24, scope: !15624)
!16392 = !DILocation(line: 5235, column: 22, scope: !15624)
!16393 = !DILocation(line: 5235, column: 31, scope: !15624)
!16394 = !DILocation(line: 5235, column: 15, scope: !15624)
!16395 = !DILocation(line: 5236, column: 17, scope: !15624)
!16396 = !DILocation(line: 5236, column: 24, scope: !15624)
!16397 = !DILocation(line: 5236, column: 22, scope: !15624)
!16398 = !DILocation(line: 5236, column: 31, scope: !15624)
!16399 = !DILocation(line: 5236, column: 15, scope: !15624)
!16400 = !DILocation(line: 5238, column: 7, scope: !16401)
!16401 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5238, column: 7)
!16402 = !DILocation(line: 5238, column: 18, scope: !16401)
!16403 = !DILocation(line: 5238, column: 7, scope: !15624)
!16404 = !DILocation(line: 5240, column: 5, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16401, file: !3, line: 5239, column: 5)
!16406 = !DILocation(line: 5242, column: 5, scope: !16405)
!16407 = !DILocation(line: 5244, column: 7, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5244, column: 7)
!16409 = !DILocation(line: 5244, column: 20, scope: !16408)
!16410 = !DILocation(line: 5244, column: 27, scope: !16408)
!16411 = !DILocation(line: 5244, column: 18, scope: !16408)
!16412 = !DILocation(line: 5244, column: 7, scope: !15624)
!16413 = !DILocation(line: 5245, column: 18, scope: !16408)
!16414 = !DILocation(line: 5245, column: 25, scope: !16408)
!16415 = !DILocation(line: 5245, column: 16, scope: !16408)
!16416 = !DILocation(line: 5245, column: 5, scope: !16408)
!16417 = !DILocation(line: 5247, column: 7, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5247, column: 7)
!16419 = !DILocation(line: 5247, column: 19, scope: !16418)
!16420 = !DILocation(line: 5247, column: 7, scope: !15624)
!16421 = !DILocation(line: 5249, column: 5, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16418, file: !3, line: 5248, column: 5)
!16423 = !DILocation(line: 5251, column: 5, scope: !16422)
!16424 = !DILocation(line: 5253, column: 7, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 5253, column: 7)
!16426 = !DILocation(line: 5253, column: 21, scope: !16425)
!16427 = !DILocation(line: 5253, column: 28, scope: !16425)
!16428 = !DILocation(line: 5253, column: 19, scope: !16425)
!16429 = !DILocation(line: 5253, column: 7, scope: !15624)
!16430 = !DILocation(line: 5254, column: 19, scope: !16425)
!16431 = !DILocation(line: 5254, column: 26, scope: !16425)
!16432 = !DILocation(line: 5254, column: 17, scope: !16425)
!16433 = !DILocation(line: 5254, column: 5, scope: !16425)
!16434 = !DILocation(line: 5256, column: 21, scope: !15624)
!16435 = !DILocation(line: 5256, column: 3, scope: !15624)
!16436 = !DILocation(line: 5256, column: 8, scope: !15624)
!16437 = !DILocation(line: 5256, column: 19, scope: !15624)
!16438 = !DILocation(line: 5257, column: 22, scope: !15624)
!16439 = !DILocation(line: 5257, column: 3, scope: !15624)
!16440 = !DILocation(line: 5257, column: 8, scope: !15624)
!16441 = !DILocation(line: 5257, column: 20, scope: !15624)
!16442 = !DILocation(line: 5259, column: 3, scope: !15624)
!16443 = !DILocation(line: 5260, column: 3, scope: !15624)
!16444 = distinct !DISubprogram(name: "readContigStripsIntoBuffer", scope: !3, file: !3, line: 3595, type: !16445, scopeLine: 3596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!16445 = !DISubroutineType(types: !16446)
!16446 = !{!110, !193, !116}
!16447 = !DILocalVariable(name: "in", arg: 1, scope: !16444, file: !3, line: 3595, type: !193)
!16448 = !DILocation(line: 3595, column: 46, scope: !16444)
!16449 = !DILocalVariable(name: "buf", arg: 2, scope: !16444, file: !3, line: 3595, type: !116)
!16450 = !DILocation(line: 3595, column: 57, scope: !16444)
!16451 = !DILocalVariable(name: "bufp", scope: !16444, file: !3, line: 3597, type: !116)
!16452 = !DILocation(line: 3597, column: 10, scope: !16444)
!16453 = !DILocation(line: 3597, column: 17, scope: !16444)
!16454 = !DILocalVariable(name: "bytes_read", scope: !16444, file: !3, line: 3598, type: !112)
!16455 = !DILocation(line: 3598, column: 10, scope: !16444)
!16456 = !DILocalVariable(name: "strip", scope: !16444, file: !3, line: 3599, type: !103)
!16457 = !DILocation(line: 3599, column: 10, scope: !16444)
!16458 = !DILocalVariable(name: "nstrips", scope: !16444, file: !3, line: 3599, type: !103)
!16459 = !DILocation(line: 3599, column: 17, scope: !16444)
!16460 = !DILocation(line: 3599, column: 48, scope: !16444)
!16461 = !DILocation(line: 3599, column: 29, scope: !16444)
!16462 = !DILocalVariable(name: "stripsize", scope: !16444, file: !3, line: 3600, type: !105)
!16463 = !DILocation(line: 3600, column: 10, scope: !16444)
!16464 = !DILocation(line: 3600, column: 36, scope: !16444)
!16465 = !DILocation(line: 3600, column: 22, scope: !16444)
!16466 = !DILocalVariable(name: "rows", scope: !16444, file: !3, line: 3601, type: !105)
!16467 = !DILocation(line: 3601, column: 10, scope: !16444)
!16468 = !DILocalVariable(name: "rps", scope: !16444, file: !3, line: 3602, type: !105)
!16469 = !DILocation(line: 3602, column: 10, scope: !16444)
!16470 = !DILocation(line: 3602, column: 38, scope: !16444)
!16471 = !DILocation(line: 3602, column: 16, scope: !16444)
!16472 = !DILocalVariable(name: "scanline_size", scope: !16444, file: !3, line: 3603, type: !117)
!16473 = !DILocation(line: 3603, column: 11, scope: !16444)
!16474 = !DILocation(line: 3603, column: 44, scope: !16444)
!16475 = !DILocation(line: 3603, column: 27, scope: !16444)
!16476 = !DILocation(line: 3605, column: 14, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16444, file: !3, line: 3605, column: 3)
!16478 = !DILocation(line: 3605, column: 8, scope: !16477)
!16479 = !DILocation(line: 3605, column: 19, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16477, file: !3, line: 3605, column: 3)
!16481 = !DILocation(line: 3605, column: 27, scope: !16480)
!16482 = !DILocation(line: 3605, column: 25, scope: !16480)
!16483 = !DILocation(line: 3605, column: 3, scope: !16477)
!16484 = !DILocation(line: 3607, column: 40, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16480, file: !3, line: 3606, column: 5)
!16486 = !DILocation(line: 3607, column: 44, scope: !16485)
!16487 = !DILocation(line: 3607, column: 51, scope: !16485)
!16488 = !DILocation(line: 3607, column: 18, scope: !16485)
!16489 = !DILocation(line: 3607, column: 16, scope: !16485)
!16490 = !DILocation(line: 3608, column: 12, scope: !16485)
!16491 = !DILocation(line: 3608, column: 25, scope: !16485)
!16492 = !DILocation(line: 3608, column: 23, scope: !16485)
!16493 = !DILocation(line: 3608, column: 10, scope: !16485)
!16494 = !DILocation(line: 3609, column: 10, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16485, file: !3, line: 3609, column: 9)
!16496 = !DILocation(line: 3609, column: 19, scope: !16495)
!16497 = !DILocation(line: 3609, column: 27, scope: !16495)
!16498 = !DILocation(line: 3609, column: 16, scope: !16495)
!16499 = !DILocation(line: 3609, column: 33, scope: !16495)
!16500 = !DILocation(line: 3609, column: 37, scope: !16495)
!16501 = !DILocation(line: 3609, column: 58, scope: !16495)
!16502 = !DILocation(line: 3609, column: 48, scope: !16495)
!16503 = !DILocation(line: 3609, column: 9, scope: !16485)
!16504 = !DILocation(line: 3611, column: 8, scope: !16495)
!16505 = !DILocation(line: 3611, column: 3, scope: !16495)
!16506 = !DILocation(line: 3611, column: 14, scope: !16495)
!16507 = !DILocation(line: 3611, column: 35, scope: !16495)
!16508 = !DILocation(line: 3611, column: 19, scope: !16495)
!16509 = !DILocation(line: 3611, column: 62, scope: !16495)
!16510 = !DILocation(line: 3611, column: 47, scope: !16495)
!16511 = !DILocation(line: 3610, column: 7, scope: !16495)
!16512 = !DILocation(line: 3613, column: 9, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16485, file: !3, line: 3613, column: 9)
!16514 = !DILocation(line: 3613, column: 20, scope: !16513)
!16515 = !DILocation(line: 3613, column: 24, scope: !16513)
!16516 = !DILocation(line: 3613, column: 28, scope: !16513)
!16517 = !DILocation(line: 3613, column: 9, scope: !16485)
!16518 = !DILocation(line: 3616, column: 19, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 3614, column: 7)
!16520 = !DILocation(line: 3616, column: 3, scope: !16519)
!16521 = !DILocation(line: 3616, column: 41, scope: !16519)
!16522 = !DILocation(line: 3616, column: 26, scope: !16519)
!16523 = !DILocation(line: 3615, column: 7, scope: !16519)
!16524 = !DILocation(line: 3617, column: 7, scope: !16519)
!16525 = !DILocation(line: 3619, column: 13, scope: !16485)
!16526 = !DILocation(line: 3619, column: 10, scope: !16485)
!16527 = !DILocation(line: 3620, column: 5, scope: !16485)
!16528 = !DILocation(line: 3605, column: 41, scope: !16480)
!16529 = !DILocation(line: 3605, column: 3, scope: !16480)
!16530 = distinct !{!16530, !16483, !16531}
!16531 = !DILocation(line: 3620, column: 5, scope: !16477)
!16532 = !DILocation(line: 3622, column: 2, scope: !16444)
!16533 = !DILocation(line: 3623, column: 3, scope: !16444)
!16534 = distinct !DISubprogram(name: "readSeparateStripsIntoBuffer", scope: !3, file: !3, line: 4674, type: !8083, scopeLine: 4677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!16535 = !DILocalVariable(name: "in", arg: 1, scope: !16534, file: !3, line: 4674, type: !193)
!16536 = !DILocation(line: 4674, column: 48, scope: !16534)
!16537 = !DILocalVariable(name: "obuf", arg: 2, scope: !16534, file: !3, line: 4674, type: !116)
!16538 = !DILocation(line: 4674, column: 59, scope: !16534)
!16539 = !DILocalVariable(name: "length", arg: 3, scope: !16534, file: !3, line: 4674, type: !105)
!16540 = !DILocation(line: 4674, column: 72, scope: !16534)
!16541 = !DILocalVariable(name: "width", arg: 4, scope: !16534, file: !3, line: 4675, type: !105)
!16542 = !DILocation(line: 4675, column: 49, scope: !16534)
!16543 = !DILocalVariable(name: "spp", arg: 5, scope: !16534, file: !3, line: 4675, type: !103)
!16544 = !DILocation(line: 4675, column: 63, scope: !16534)
!16545 = !DILocalVariable(name: "dump", arg: 6, scope: !16534, file: !3, line: 4676, type: !557)
!16546 = !DILocation(line: 4676, column: 60, scope: !16534)
!16547 = !DILocalVariable(name: "i", scope: !16534, file: !3, line: 4678, type: !110)
!16548 = !DILocation(line: 4678, column: 7, scope: !16534)
!16549 = !DILocalVariable(name: "j", scope: !16534, file: !3, line: 4678, type: !110)
!16550 = !DILocation(line: 4678, column: 10, scope: !16534)
!16551 = !DILocalVariable(name: "bytes_per_sample", scope: !16534, file: !3, line: 4678, type: !110)
!16552 = !DILocation(line: 4678, column: 13, scope: !16534)
!16553 = !DILocalVariable(name: "bytes_per_pixel", scope: !16534, file: !3, line: 4678, type: !110)
!16554 = !DILocation(line: 4678, column: 31, scope: !16534)
!16555 = !DILocalVariable(name: "shift_width", scope: !16534, file: !3, line: 4678, type: !110)
!16556 = !DILocation(line: 4678, column: 48, scope: !16534)
!16557 = !DILocalVariable(name: "result", scope: !16534, file: !3, line: 4678, type: !110)
!16558 = !DILocation(line: 4678, column: 61, scope: !16534)
!16559 = !DILocalVariable(name: "bytes_read", scope: !16534, file: !3, line: 4679, type: !112)
!16560 = !DILocation(line: 4679, column: 10, scope: !16534)
!16561 = !DILocalVariable(name: "bps", scope: !16534, file: !3, line: 4680, type: !103)
!16562 = !DILocation(line: 4680, column: 10, scope: !16534)
!16563 = !DILocalVariable(name: "nstrips", scope: !16534, file: !3, line: 4680, type: !103)
!16564 = !DILocation(line: 4680, column: 15, scope: !16534)
!16565 = !DILocalVariable(name: "planar", scope: !16534, file: !3, line: 4680, type: !103)
!16566 = !DILocation(line: 4680, column: 24, scope: !16534)
!16567 = !DILocalVariable(name: "strips_per_sample", scope: !16534, file: !3, line: 4680, type: !103)
!16568 = !DILocation(line: 4680, column: 32, scope: !16534)
!16569 = !DILocalVariable(name: "src_rowsize", scope: !16534, file: !3, line: 4681, type: !105)
!16570 = !DILocation(line: 4681, column: 10, scope: !16534)
!16571 = !DILocalVariable(name: "dst_rowsize", scope: !16534, file: !3, line: 4681, type: !105)
!16572 = !DILocation(line: 4681, column: 23, scope: !16534)
!16573 = !DILocalVariable(name: "rows_processed", scope: !16534, file: !3, line: 4681, type: !105)
!16574 = !DILocation(line: 4681, column: 36, scope: !16534)
!16575 = !DILocalVariable(name: "rps", scope: !16534, file: !3, line: 4681, type: !105)
!16576 = !DILocation(line: 4681, column: 52, scope: !16534)
!16577 = !DILocalVariable(name: "rows_this_strip", scope: !16534, file: !3, line: 4682, type: !105)
!16578 = !DILocation(line: 4682, column: 10, scope: !16534)
!16579 = !DILocalVariable(name: "s", scope: !16534, file: !3, line: 4683, type: !7616)
!16580 = !DILocation(line: 4683, column: 13, scope: !16534)
!16581 = !DILocalVariable(name: "strip", scope: !16534, file: !3, line: 4684, type: !8026)
!16582 = !DILocation(line: 4684, column: 13, scope: !16534)
!16583 = !DILocalVariable(name: "scanlinesize", scope: !16534, file: !3, line: 4685, type: !117)
!16584 = !DILocation(line: 4685, column: 11, scope: !16534)
!16585 = !DILocation(line: 4685, column: 43, scope: !16534)
!16586 = !DILocation(line: 4685, column: 26, scope: !16534)
!16587 = !DILocalVariable(name: "stripsize", scope: !16534, file: !3, line: 4686, type: !117)
!16588 = !DILocation(line: 4686, column: 11, scope: !16534)
!16589 = !DILocation(line: 4686, column: 40, scope: !16534)
!16590 = !DILocation(line: 4686, column: 26, scope: !16534)
!16591 = !DILocalVariable(name: "srcbuffs", scope: !16534, file: !3, line: 4687, type: !16592)
!16592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 512, elements: !627)
!16593 = !DILocation(line: 4687, column: 18, scope: !16534)
!16594 = !DILocalVariable(name: "buff", scope: !16534, file: !3, line: 4688, type: !106)
!16595 = !DILocation(line: 4688, column: 18, scope: !16534)
!16596 = !DILocalVariable(name: "dst", scope: !16534, file: !3, line: 4689, type: !106)
!16597 = !DILocation(line: 4689, column: 18, scope: !16534)
!16598 = !DILocation(line: 4691, column: 7, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4691, column: 7)
!16600 = !DILocation(line: 4691, column: 12, scope: !16599)
!16601 = !DILocation(line: 4691, column: 7, scope: !16534)
!16602 = !DILocation(line: 4693, column: 5, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16599, file: !3, line: 4692, column: 5)
!16604 = !DILocation(line: 4694, column: 5, scope: !16603)
!16605 = !DILocation(line: 4697, column: 3, scope: !16534)
!16606 = !DILocation(line: 4698, column: 16, scope: !16534)
!16607 = !DILocation(line: 4698, column: 3, scope: !16534)
!16608 = !DILocation(line: 4699, column: 25, scope: !16534)
!16609 = !DILocation(line: 4699, column: 3, scope: !16534)
!16610 = !DILocation(line: 4700, column: 25, scope: !16534)
!16611 = !DILocation(line: 4700, column: 3, scope: !16534)
!16612 = !DILocation(line: 4701, column: 7, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4701, column: 7)
!16614 = !DILocation(line: 4701, column: 13, scope: !16613)
!16615 = !DILocation(line: 4701, column: 11, scope: !16613)
!16616 = !DILocation(line: 4701, column: 7, scope: !16534)
!16617 = !DILocation(line: 4702, column: 11, scope: !16613)
!16618 = !DILocation(line: 4702, column: 9, scope: !16613)
!16619 = !DILocation(line: 4702, column: 5, scope: !16613)
!16620 = !DILocation(line: 4704, column: 23, scope: !16534)
!16621 = !DILocation(line: 4704, column: 27, scope: !16534)
!16622 = !DILocation(line: 4704, column: 32, scope: !16534)
!16623 = !DILocation(line: 4704, column: 20, scope: !16534)
!16624 = !DILocation(line: 4705, column: 24, scope: !16534)
!16625 = !DILocation(line: 4705, column: 30, scope: !16534)
!16626 = !DILocation(line: 4705, column: 28, scope: !16534)
!16627 = !DILocation(line: 4705, column: 35, scope: !16534)
!16628 = !DILocation(line: 4705, column: 40, scope: !16534)
!16629 = !DILocation(line: 4705, column: 20, scope: !16534)
!16630 = !DILocation(line: 4706, column: 7, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4706, column: 7)
!16632 = !DILocation(line: 4706, column: 26, scope: !16631)
!16633 = !DILocation(line: 4706, column: 43, scope: !16631)
!16634 = !DILocation(line: 4706, column: 23, scope: !16631)
!16635 = !DILocation(line: 4706, column: 7, scope: !16534)
!16636 = !DILocation(line: 4707, column: 19, scope: !16631)
!16637 = !DILocation(line: 4707, column: 17, scope: !16631)
!16638 = !DILocation(line: 4707, column: 5, scope: !16631)
!16639 = !DILocation(line: 4709, column: 19, scope: !16631)
!16640 = !DILocation(line: 4709, column: 36, scope: !16631)
!16641 = !DILocation(line: 4709, column: 17, scope: !16631)
!16642 = !DILocation(line: 4711, column: 19, scope: !16534)
!16643 = !DILocation(line: 4711, column: 25, scope: !16534)
!16644 = !DILocation(line: 4711, column: 23, scope: !16534)
!16645 = !DILocation(line: 4711, column: 32, scope: !16534)
!16646 = !DILocation(line: 4711, column: 37, scope: !16534)
!16647 = !DILocation(line: 4711, column: 15, scope: !16534)
!16648 = !DILocation(line: 4712, column: 19, scope: !16534)
!16649 = !DILocation(line: 4712, column: 25, scope: !16534)
!16650 = !DILocation(line: 4712, column: 23, scope: !16534)
!16651 = !DILocation(line: 4712, column: 33, scope: !16534)
!16652 = !DILocation(line: 4712, column: 31, scope: !16534)
!16653 = !DILocation(line: 4712, column: 38, scope: !16534)
!16654 = !DILocation(line: 4712, column: 43, scope: !16534)
!16655 = !DILocation(line: 4712, column: 15, scope: !16534)
!16656 = !DILocation(line: 4713, column: 9, scope: !16534)
!16657 = !DILocation(line: 4713, column: 7, scope: !16534)
!16658 = !DILocation(line: 4715, column: 8, scope: !16659)
!16659 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4715, column: 7)
!16660 = !DILocation(line: 4715, column: 14, scope: !16659)
!16661 = !DILocation(line: 4715, column: 21, scope: !16659)
!16662 = !DILocation(line: 4715, column: 30, scope: !16659)
!16663 = !DILocation(line: 4715, column: 34, scope: !16659)
!16664 = !DILocation(line: 4715, column: 40, scope: !16659)
!16665 = !DILocation(line: 4715, column: 46, scope: !16659)
!16666 = !DILocation(line: 4715, column: 7, scope: !16534)
!16667 = !DILocation(line: 4717, column: 17, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 4716, column: 5)
!16669 = !DILocation(line: 4717, column: 23, scope: !16668)
!16670 = !DILocation(line: 4717, column: 31, scope: !16668)
!16671 = !DILocation(line: 4717, column: 37, scope: !16668)
!16672 = !DILocation(line: 4719, column: 17, scope: !16668)
!16673 = !DILocation(line: 4719, column: 24, scope: !16668)
!16674 = !DILocation(line: 4719, column: 33, scope: !16668)
!16675 = !DILocation(line: 4717, column: 5, scope: !16668)
!16676 = !DILocation(line: 4720, column: 17, scope: !16668)
!16677 = !DILocation(line: 4720, column: 23, scope: !16668)
!16678 = !DILocation(line: 4720, column: 31, scope: !16668)
!16679 = !DILocation(line: 4720, column: 37, scope: !16668)
!16680 = !DILocation(line: 4722, column: 3, scope: !16668)
!16681 = !DILocation(line: 4722, column: 8, scope: !16668)
!16682 = !DILocation(line: 4722, column: 13, scope: !16668)
!16683 = !DILocation(line: 4720, column: 5, scope: !16668)
!16684 = !DILocation(line: 4723, column: 5, scope: !16668)
!16685 = !DILocation(line: 4730, column: 32, scope: !16534)
!16686 = !DILocation(line: 4730, column: 13, scope: !16534)
!16687 = !DILocation(line: 4730, column: 11, scope: !16534)
!16688 = !DILocation(line: 4731, column: 23, scope: !16534)
!16689 = !DILocation(line: 4731, column: 32, scope: !16534)
!16690 = !DILocation(line: 4731, column: 31, scope: !16534)
!16691 = !DILocation(line: 4731, column: 21, scope: !16534)
!16692 = !DILocation(line: 4733, column: 10, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4733, column: 3)
!16694 = !DILocation(line: 4733, column: 8, scope: !16693)
!16695 = !DILocation(line: 4733, column: 16, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16693, file: !3, line: 4733, column: 3)
!16697 = !DILocation(line: 4733, column: 20, scope: !16696)
!16698 = !DILocation(line: 4733, column: 18, scope: !16696)
!16699 = !DILocation(line: 4733, column: 25, scope: !16696)
!16700 = !DILocation(line: 4733, column: 29, scope: !16696)
!16701 = !DILocation(line: 4733, column: 31, scope: !16696)
!16702 = !DILocation(line: 0, scope: !16696)
!16703 = !DILocation(line: 4733, column: 3, scope: !16693)
!16704 = !DILocation(line: 4735, column: 14, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16696, file: !3, line: 4734, column: 5)
!16706 = !DILocation(line: 4735, column: 5, scope: !16705)
!16707 = !DILocation(line: 4735, column: 17, scope: !16705)
!16708 = !DILocation(line: 4736, column: 24, scope: !16705)
!16709 = !DILocation(line: 4736, column: 12, scope: !16705)
!16710 = !DILocation(line: 4736, column: 10, scope: !16705)
!16711 = !DILocation(line: 4737, column: 10, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16705, file: !3, line: 4737, column: 9)
!16713 = !DILocation(line: 4737, column: 9, scope: !16705)
!16714 = !DILocation(line: 4740, column: 72, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16712, file: !3, line: 4738, column: 7)
!16716 = !DILocation(line: 4739, column: 7, scope: !16715)
!16717 = !DILocation(line: 4741, column: 14, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16715, file: !3, line: 4741, column: 7)
!16719 = !DILocation(line: 4741, column: 12, scope: !16718)
!16720 = !DILocation(line: 4741, column: 19, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16718, file: !3, line: 4741, column: 7)
!16722 = !DILocation(line: 4741, column: 23, scope: !16721)
!16723 = !DILocation(line: 4741, column: 21, scope: !16721)
!16724 = !DILocation(line: 4741, column: 7, scope: !16718)
!16725 = !DILocation(line: 4742, column: 29, scope: !16721)
!16726 = !DILocation(line: 4742, column: 20, scope: !16721)
!16727 = !DILocation(line: 4742, column: 9, scope: !16721)
!16728 = !DILocation(line: 4741, column: 27, scope: !16721)
!16729 = !DILocation(line: 4741, column: 7, scope: !16721)
!16730 = distinct !{!16730, !16724, !16731}
!16731 = !DILocation(line: 4742, column: 31, scope: !16718)
!16732 = !DILocation(line: 4743, column: 7, scope: !16715)
!16733 = !DILocation(line: 4745, column: 19, scope: !16705)
!16734 = !DILocation(line: 4745, column: 14, scope: !16705)
!16735 = !DILocation(line: 4745, column: 5, scope: !16705)
!16736 = !DILocation(line: 4745, column: 17, scope: !16705)
!16737 = !DILocation(line: 4746, column: 5, scope: !16705)
!16738 = !DILocation(line: 4733, column: 48, scope: !16696)
!16739 = !DILocation(line: 4733, column: 3, scope: !16696)
!16740 = distinct !{!16740, !16703, !16741}
!16741 = !DILocation(line: 4746, column: 5, scope: !16693)
!16742 = !DILocation(line: 4748, column: 18, scope: !16534)
!16743 = !DILocation(line: 4749, column: 10, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4749, column: 3)
!16745 = !DILocation(line: 4749, column: 8, scope: !16744)
!16746 = !DILocation(line: 4749, column: 16, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 4749, column: 3)
!16748 = !DILocation(line: 4749, column: 20, scope: !16747)
!16749 = !DILocation(line: 4749, column: 18, scope: !16747)
!16750 = !DILocation(line: 4749, column: 39, scope: !16747)
!16751 = !DILocation(line: 4749, column: 43, scope: !16747)
!16752 = !DILocation(line: 4749, column: 50, scope: !16747)
!16753 = !DILocation(line: 0, scope: !16747)
!16754 = !DILocation(line: 4749, column: 3, scope: !16744)
!16755 = !DILocation(line: 4751, column: 12, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !3, line: 4751, column: 5)
!16757 = distinct !DILexicalBlock(scope: !16747, file: !3, line: 4750, column: 5)
!16758 = !DILocation(line: 4751, column: 10, scope: !16756)
!16759 = !DILocation(line: 4751, column: 18, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16756, file: !3, line: 4751, column: 5)
!16761 = !DILocation(line: 4751, column: 22, scope: !16760)
!16762 = !DILocation(line: 4751, column: 20, scope: !16760)
!16763 = !DILocation(line: 4751, column: 27, scope: !16760)
!16764 = !DILocation(line: 4751, column: 31, scope: !16760)
!16765 = !DILocation(line: 4751, column: 33, scope: !16760)
!16766 = !DILocation(line: 0, scope: !16760)
!16767 = !DILocation(line: 4751, column: 5, scope: !16756)
!16768 = !DILocation(line: 4753, column: 23, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 4752, column: 7)
!16770 = !DILocation(line: 4753, column: 14, scope: !16769)
!16771 = !DILocation(line: 4753, column: 12, scope: !16769)
!16772 = !DILocation(line: 4754, column: 16, scope: !16769)
!16773 = !DILocation(line: 4754, column: 20, scope: !16769)
!16774 = !DILocation(line: 4754, column: 18, scope: !16769)
!16775 = !DILocation(line: 4754, column: 41, scope: !16769)
!16776 = !DILocation(line: 4754, column: 39, scope: !16769)
!16777 = !DILocation(line: 4754, column: 13, scope: !16769)
!16778 = !DILocation(line: 4755, column: 42, scope: !16769)
!16779 = !DILocation(line: 4755, column: 46, scope: !16769)
!16780 = !DILocation(line: 4755, column: 53, scope: !16769)
!16781 = !DILocation(line: 4755, column: 59, scope: !16769)
!16782 = !DILocation(line: 4755, column: 20, scope: !16769)
!16783 = !DILocation(line: 4755, column: 18, scope: !16769)
!16784 = !DILocation(line: 4756, column: 25, scope: !16769)
!16785 = !DILocation(line: 4756, column: 38, scope: !16769)
!16786 = !DILocation(line: 4756, column: 36, scope: !16769)
!16787 = !DILocation(line: 4756, column: 23, scope: !16769)
!16788 = !DILocation(line: 4757, column: 11, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16769, file: !3, line: 4757, column: 11)
!16790 = !DILocation(line: 4757, column: 22, scope: !16789)
!16791 = !DILocation(line: 4757, column: 26, scope: !16789)
!16792 = !DILocation(line: 4757, column: 30, scope: !16789)
!16793 = !DILocation(line: 4757, column: 11, scope: !16769)
!16794 = !DILocation(line: 4759, column: 32, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 4758, column: 9)
!16796 = !DILocation(line: 4759, column: 19, scope: !16795)
!16797 = !DILocation(line: 4761, column: 30, scope: !16795)
!16798 = !DILocation(line: 4761, column: 14, scope: !16795)
!16799 = !DILocation(line: 4761, column: 37, scope: !16795)
!16800 = !DILocation(line: 4761, column: 39, scope: !16795)
!16801 = !DILocation(line: 4759, column: 9, scope: !16795)
!16802 = !DILocation(line: 4762, column: 16, scope: !16795)
!16803 = !DILocation(line: 4763, column: 9, scope: !16795)
!16804 = !DILocation(line: 4769, column: 7, scope: !16769)
!16805 = !DILocation(line: 4751, column: 50, scope: !16760)
!16806 = !DILocation(line: 4751, column: 5, scope: !16760)
!16807 = distinct !{!16807, !16767, !16808}
!16808 = !DILocation(line: 4769, column: 7, scope: !16756)
!16809 = !DILocation(line: 4771, column: 9, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16757, file: !3, line: 4771, column: 9)
!16811 = !DILocation(line: 4771, column: 15, scope: !16810)
!16812 = !DILocation(line: 4771, column: 13, scope: !16810)
!16813 = !DILocation(line: 4771, column: 9, scope: !16757)
!16814 = !DILocation(line: 4772, column: 13, scope: !16810)
!16815 = !DILocation(line: 4772, column: 11, scope: !16810)
!16816 = !DILocation(line: 4772, column: 7, scope: !16810)
!16817 = !DILocation(line: 4773, column: 11, scope: !16757)
!16818 = !DILocation(line: 4773, column: 19, scope: !16757)
!16819 = !DILocation(line: 4773, column: 33, scope: !16757)
!16820 = !DILocation(line: 4773, column: 31, scope: !16757)
!16821 = !DILocation(line: 4773, column: 16, scope: !16757)
!16822 = !DILocation(line: 4773, column: 9, scope: !16757)
!16823 = !DILocation(line: 4774, column: 10, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16757, file: !3, line: 4774, column: 9)
!16825 = !DILocation(line: 4774, column: 14, scope: !16824)
!16826 = !DILocation(line: 4774, column: 19, scope: !16824)
!16827 = !DILocation(line: 4774, column: 9, scope: !16757)
!16828 = !DILocation(line: 4776, column: 40, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16830, file: !3, line: 4776, column: 11)
!16830 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 4775, column: 7)
!16831 = !DILocation(line: 4776, column: 50, scope: !16829)
!16832 = !DILocation(line: 4776, column: 55, scope: !16829)
!16833 = !DILocation(line: 4776, column: 62, scope: !16829)
!16834 = !DILocation(line: 4777, column: 40, scope: !16829)
!16835 = !DILocation(line: 4777, column: 45, scope: !16829)
!16836 = !DILocation(line: 4777, column: 50, scope: !16829)
!16837 = !DILocation(line: 4777, column: 56, scope: !16829)
!16838 = !DILocation(line: 4778, column: 40, scope: !16829)
!16839 = !DILocation(line: 4778, column: 46, scope: !16829)
!16840 = !DILocation(line: 4778, column: 54, scope: !16829)
!16841 = !DILocation(line: 4778, column: 60, scope: !16829)
!16842 = !DILocation(line: 4776, column: 11, scope: !16829)
!16843 = !DILocation(line: 4776, column: 11, scope: !16830)
!16844 = !DILocation(line: 4780, column: 16, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16829, file: !3, line: 4779, column: 9)
!16846 = !DILocation(line: 4781, column: 9, scope: !16845)
!16847 = !DILocation(line: 4783, column: 7, scope: !16830)
!16848 = !DILocation(line: 4786, column: 15, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 4785, column: 7)
!16850 = !DILocation(line: 4786, column: 7, scope: !16849)
!16851 = !DILocation(line: 4788, column: 50, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16853, file: !3, line: 4788, column: 21)
!16853 = distinct !DILexicalBlock(scope: !16849, file: !3, line: 4787, column: 9)
!16854 = !DILocation(line: 4788, column: 60, scope: !16852)
!16855 = !DILocation(line: 4788, column: 65, scope: !16852)
!16856 = !DILocation(line: 4788, column: 72, scope: !16852)
!16857 = !DILocation(line: 4789, column: 50, scope: !16852)
!16858 = !DILocation(line: 4789, column: 55, scope: !16852)
!16859 = !DILocation(line: 4789, column: 60, scope: !16852)
!16860 = !DILocation(line: 4789, column: 66, scope: !16852)
!16861 = !DILocation(line: 4790, column: 50, scope: !16852)
!16862 = !DILocation(line: 4790, column: 56, scope: !16852)
!16863 = !DILocation(line: 4790, column: 64, scope: !16852)
!16864 = !DILocation(line: 4790, column: 70, scope: !16852)
!16865 = !DILocation(line: 4788, column: 21, scope: !16852)
!16866 = !DILocation(line: 4788, column: 21, scope: !16853)
!16867 = !DILocation(line: 4792, column: 26, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16852, file: !3, line: 4791, column: 12)
!16869 = !DILocation(line: 4793, column: 19, scope: !16868)
!16870 = !DILocation(line: 4795, column: 10, scope: !16853)
!16871 = !DILocation(line: 4796, column: 51, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16853, file: !3, line: 4796, column: 21)
!16873 = !DILocation(line: 4796, column: 61, scope: !16872)
!16874 = !DILocation(line: 4796, column: 66, scope: !16872)
!16875 = !DILocation(line: 4796, column: 73, scope: !16872)
!16876 = !DILocation(line: 4797, column: 51, scope: !16872)
!16877 = !DILocation(line: 4797, column: 56, scope: !16872)
!16878 = !DILocation(line: 4797, column: 61, scope: !16872)
!16879 = !DILocation(line: 4797, column: 67, scope: !16872)
!16880 = !DILocation(line: 4798, column: 51, scope: !16872)
!16881 = !DILocation(line: 4798, column: 57, scope: !16872)
!16882 = !DILocation(line: 4798, column: 65, scope: !16872)
!16883 = !DILocation(line: 4798, column: 71, scope: !16872)
!16884 = !DILocation(line: 4796, column: 21, scope: !16872)
!16885 = !DILocation(line: 4796, column: 21, scope: !16853)
!16886 = !DILocation(line: 4800, column: 26, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16872, file: !3, line: 4799, column: 12)
!16888 = !DILocation(line: 4801, column: 19, scope: !16887)
!16889 = !DILocation(line: 4803, column: 10, scope: !16853)
!16890 = !DILocation(line: 4804, column: 51, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16853, file: !3, line: 4804, column: 21)
!16892 = !DILocation(line: 4804, column: 61, scope: !16891)
!16893 = !DILocation(line: 4804, column: 66, scope: !16891)
!16894 = !DILocation(line: 4804, column: 73, scope: !16891)
!16895 = !DILocation(line: 4805, column: 51, scope: !16891)
!16896 = !DILocation(line: 4805, column: 56, scope: !16891)
!16897 = !DILocation(line: 4805, column: 61, scope: !16891)
!16898 = !DILocation(line: 4805, column: 67, scope: !16891)
!16899 = !DILocation(line: 4806, column: 51, scope: !16891)
!16900 = !DILocation(line: 4806, column: 57, scope: !16891)
!16901 = !DILocation(line: 4806, column: 65, scope: !16891)
!16902 = !DILocation(line: 4806, column: 71, scope: !16891)
!16903 = !DILocation(line: 4804, column: 21, scope: !16891)
!16904 = !DILocation(line: 4804, column: 21, scope: !16853)
!16905 = !DILocation(line: 4808, column: 26, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16891, file: !3, line: 4807, column: 12)
!16907 = !DILocation(line: 4809, column: 19, scope: !16906)
!16908 = !DILocation(line: 4811, column: 17, scope: !16853)
!16909 = !DILocation(line: 4816, column: 51, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16853, file: !3, line: 4816, column: 21)
!16911 = !DILocation(line: 4816, column: 61, scope: !16910)
!16912 = !DILocation(line: 4816, column: 66, scope: !16910)
!16913 = !DILocation(line: 4816, column: 73, scope: !16910)
!16914 = !DILocation(line: 4817, column: 51, scope: !16910)
!16915 = !DILocation(line: 4817, column: 56, scope: !16910)
!16916 = !DILocation(line: 4817, column: 61, scope: !16910)
!16917 = !DILocation(line: 4817, column: 67, scope: !16910)
!16918 = !DILocation(line: 4818, column: 51, scope: !16910)
!16919 = !DILocation(line: 4818, column: 57, scope: !16910)
!16920 = !DILocation(line: 4818, column: 65, scope: !16910)
!16921 = !DILocation(line: 4818, column: 71, scope: !16910)
!16922 = !DILocation(line: 4816, column: 21, scope: !16910)
!16923 = !DILocation(line: 4816, column: 21, scope: !16853)
!16924 = !DILocation(line: 4820, column: 26, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16910, file: !3, line: 4819, column: 12)
!16926 = !DILocation(line: 4821, column: 19, scope: !16925)
!16927 = !DILocation(line: 4823, column: 10, scope: !16853)
!16928 = !DILocation(line: 4824, column: 90, scope: !16853)
!16929 = !DILocation(line: 4824, column: 18, scope: !16853)
!16930 = !DILocation(line: 4825, column: 26, scope: !16853)
!16931 = !DILocation(line: 4826, column: 19, scope: !16853)
!16932 = !DILocation(line: 4830, column: 10, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16757, file: !3, line: 4830, column: 9)
!16934 = !DILocation(line: 4830, column: 27, scope: !16933)
!16935 = !DILocation(line: 4830, column: 25, scope: !16933)
!16936 = !DILocation(line: 4830, column: 34, scope: !16933)
!16937 = !DILocation(line: 4830, column: 32, scope: !16933)
!16938 = !DILocation(line: 4830, column: 9, scope: !16757)
!16939 = !DILocation(line: 4832, column: 24, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 4831, column: 7)
!16941 = !DILocation(line: 4832, column: 22, scope: !16940)
!16942 = !DILocation(line: 4833, column: 13, scope: !16940)
!16943 = !DILocation(line: 4833, column: 22, scope: !16940)
!16944 = !DILocation(line: 4833, column: 20, scope: !16940)
!16945 = !DILocation(line: 4833, column: 11, scope: !16940)
!16946 = !DILocation(line: 4834, column: 7, scope: !16940)
!16947 = !DILocation(line: 4836, column: 25, scope: !16933)
!16948 = !DILocation(line: 4836, column: 22, scope: !16933)
!16949 = !DILocation(line: 4837, column: 5, scope: !16757)
!16950 = !DILocation(line: 4749, column: 58, scope: !16747)
!16951 = !DILocation(line: 4749, column: 3, scope: !16747)
!16952 = distinct !{!16952, !16754, !16953}
!16953 = !DILocation(line: 4837, column: 5, scope: !16744)
!16954 = !DILocation(line: 4842, column: 10, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 4842, column: 3)
!16956 = !DILocation(line: 4842, column: 8, scope: !16955)
!16957 = !DILocation(line: 4842, column: 16, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16955, file: !3, line: 4842, column: 3)
!16959 = !DILocation(line: 4842, column: 20, scope: !16958)
!16960 = !DILocation(line: 4842, column: 18, scope: !16958)
!16961 = !DILocation(line: 4842, column: 25, scope: !16958)
!16962 = !DILocation(line: 4842, column: 29, scope: !16958)
!16963 = !DILocation(line: 4842, column: 31, scope: !16958)
!16964 = !DILocation(line: 0, scope: !16958)
!16965 = !DILocation(line: 4842, column: 3, scope: !16955)
!16966 = !DILocation(line: 4844, column: 21, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16958, file: !3, line: 4843, column: 5)
!16968 = !DILocation(line: 4844, column: 12, scope: !16967)
!16969 = !DILocation(line: 4844, column: 10, scope: !16967)
!16970 = !DILocation(line: 4845, column: 9, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16967, file: !3, line: 4845, column: 9)
!16972 = !DILocation(line: 4845, column: 14, scope: !16971)
!16973 = !DILocation(line: 4845, column: 9, scope: !16967)
!16974 = !DILocation(line: 4846, column: 17, scope: !16971)
!16975 = !DILocation(line: 4846, column: 7, scope: !16971)
!16976 = !DILocation(line: 4847, column: 5, scope: !16967)
!16977 = !DILocation(line: 4842, column: 48, scope: !16958)
!16978 = !DILocation(line: 4842, column: 3, scope: !16958)
!16979 = distinct !{!16979, !16965, !16980}
!16980 = !DILocation(line: 4847, column: 5, scope: !16955)
!16981 = !DILocation(line: 4849, column: 11, scope: !16534)
!16982 = !DILocation(line: 4849, column: 3, scope: !16534)
!16983 = !DILocation(line: 4850, column: 3, scope: !16534)
!16984 = distinct !DISubprogram(name: "readContigTilesIntoBuffer", scope: !3, file: !3, line: 763, type: !16985, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!16985 = !DISubroutineType(types: !16986)
!16986 = !{!110, !193, !116, !105, !105, !105, !105, !7616, !103}
!16987 = !DILocalVariable(name: "in", arg: 1, scope: !16984, file: !3, line: 763, type: !193)
!16988 = !DILocation(line: 763, column: 45, scope: !16984)
!16989 = !DILocalVariable(name: "buf", arg: 2, scope: !16984, file: !3, line: 763, type: !116)
!16990 = !DILocation(line: 763, column: 56, scope: !16984)
!16991 = !DILocalVariable(name: "imagelength", arg: 3, scope: !16984, file: !3, line: 764, type: !105)
!16992 = !DILocation(line: 764, column: 46, scope: !16984)
!16993 = !DILocalVariable(name: "imagewidth", arg: 4, scope: !16984, file: !3, line: 765, type: !105)
!16994 = !DILocation(line: 765, column: 46, scope: !16984)
!16995 = !DILocalVariable(name: "tw", arg: 5, scope: !16984, file: !3, line: 766, type: !105)
!16996 = !DILocation(line: 766, column: 46, scope: !16984)
!16997 = !DILocalVariable(name: "tl", arg: 6, scope: !16984, file: !3, line: 766, type: !105)
!16998 = !DILocation(line: 766, column: 57, scope: !16984)
!16999 = !DILocalVariable(name: "spp", arg: 7, scope: !16984, file: !3, line: 767, type: !7616)
!17000 = !DILocation(line: 767, column: 49, scope: !16984)
!17001 = !DILocalVariable(name: "bps", arg: 8, scope: !16984, file: !3, line: 767, type: !103)
!17002 = !DILocation(line: 767, column: 61, scope: !16984)
!17003 = !DILocalVariable(name: "status", scope: !16984, file: !3, line: 769, type: !110)
!17004 = !DILocation(line: 769, column: 7, scope: !16984)
!17005 = !DILocalVariable(name: "sample", scope: !16984, file: !3, line: 770, type: !7616)
!17006 = !DILocation(line: 770, column: 13, scope: !16984)
!17007 = !DILocalVariable(name: "count", scope: !16984, file: !3, line: 771, type: !7616)
!17008 = !DILocation(line: 771, column: 13, scope: !16984)
!17009 = !DILocation(line: 771, column: 21, scope: !16984)
!17010 = !DILocalVariable(name: "row", scope: !16984, file: !3, line: 772, type: !105)
!17011 = !DILocation(line: 772, column: 10, scope: !16984)
!17012 = !DILocalVariable(name: "col", scope: !16984, file: !3, line: 772, type: !105)
!17013 = !DILocation(line: 772, column: 15, scope: !16984)
!17014 = !DILocalVariable(name: "trow", scope: !16984, file: !3, line: 772, type: !105)
!17015 = !DILocation(line: 772, column: 20, scope: !16984)
!17016 = !DILocalVariable(name: "nrow", scope: !16984, file: !3, line: 773, type: !105)
!17017 = !DILocation(line: 773, column: 10, scope: !16984)
!17018 = !DILocalVariable(name: "ncol", scope: !16984, file: !3, line: 773, type: !105)
!17019 = !DILocation(line: 773, column: 16, scope: !16984)
!17020 = !DILocalVariable(name: "dst_rowsize", scope: !16984, file: !3, line: 774, type: !105)
!17021 = !DILocation(line: 774, column: 10, scope: !16984)
!17022 = !DILocalVariable(name: "shift_width", scope: !16984, file: !3, line: 774, type: !105)
!17023 = !DILocation(line: 774, column: 23, scope: !16984)
!17024 = !DILocalVariable(name: "bytes_per_sample", scope: !16984, file: !3, line: 775, type: !105)
!17025 = !DILocation(line: 775, column: 10, scope: !16984)
!17026 = !DILocalVariable(name: "bytes_per_pixel", scope: !16984, file: !3, line: 775, type: !105)
!17027 = !DILocation(line: 775, column: 28, scope: !16984)
!17028 = !DILocalVariable(name: "trailing_bits", scope: !16984, file: !3, line: 776, type: !105)
!17029 = !DILocation(line: 776, column: 10, scope: !16984)
!17030 = !DILocalVariable(name: "prev_trailing_bits", scope: !16984, file: !3, line: 776, type: !105)
!17031 = !DILocation(line: 776, column: 25, scope: !16984)
!17032 = !DILocalVariable(name: "tile_rowsize", scope: !16984, file: !3, line: 777, type: !105)
!17033 = !DILocation(line: 777, column: 10, scope: !16984)
!17034 = !DILocation(line: 777, column: 42, scope: !16984)
!17035 = !DILocation(line: 777, column: 26, scope: !16984)
!17036 = !DILocalVariable(name: "src_offset", scope: !16984, file: !3, line: 778, type: !105)
!17037 = !DILocation(line: 778, column: 10, scope: !16984)
!17038 = !DILocalVariable(name: "dst_offset", scope: !16984, file: !3, line: 778, type: !105)
!17039 = !DILocation(line: 778, column: 22, scope: !16984)
!17040 = !DILocalVariable(name: "row_offset", scope: !16984, file: !3, line: 779, type: !105)
!17041 = !DILocation(line: 779, column: 10, scope: !16984)
!17042 = !DILocalVariable(name: "col_offset", scope: !16984, file: !3, line: 779, type: !105)
!17043 = !DILocation(line: 779, column: 22, scope: !16984)
!17044 = !DILocalVariable(name: "bufp", scope: !16984, file: !3, line: 780, type: !116)
!17045 = !DILocation(line: 780, column: 10, scope: !16984)
!17046 = !DILocation(line: 780, column: 26, scope: !16984)
!17047 = !DILocalVariable(name: "src", scope: !16984, file: !3, line: 781, type: !106)
!17048 = !DILocation(line: 781, column: 18, scope: !16984)
!17049 = !DILocalVariable(name: "dst", scope: !16984, file: !3, line: 782, type: !106)
!17050 = !DILocation(line: 782, column: 18, scope: !16984)
!17051 = !DILocalVariable(name: "tbytes", scope: !16984, file: !3, line: 783, type: !117)
!17052 = !DILocation(line: 783, column: 11, scope: !16984)
!17053 = !DILocalVariable(name: "tile_buffsize", scope: !16984, file: !3, line: 783, type: !117)
!17054 = !DILocation(line: 783, column: 23, scope: !16984)
!17055 = !DILocalVariable(name: "tilesize", scope: !16984, file: !3, line: 784, type: !117)
!17056 = !DILocation(line: 784, column: 11, scope: !16984)
!17057 = !DILocation(line: 784, column: 35, scope: !16984)
!17058 = !DILocation(line: 784, column: 22, scope: !16984)
!17059 = !DILocalVariable(name: "tilebuf", scope: !16984, file: !3, line: 785, type: !106)
!17060 = !DILocation(line: 785, column: 18, scope: !16984)
!17061 = !DILocation(line: 787, column: 23, scope: !16984)
!17062 = !DILocation(line: 787, column: 27, scope: !16984)
!17063 = !DILocation(line: 787, column: 32, scope: !16984)
!17064 = !DILocation(line: 787, column: 20, scope: !16984)
!17065 = !DILocation(line: 788, column: 24, scope: !16984)
!17066 = !DILocation(line: 788, column: 30, scope: !16984)
!17067 = !DILocation(line: 788, column: 28, scope: !16984)
!17068 = !DILocation(line: 788, column: 35, scope: !16984)
!17069 = !DILocation(line: 788, column: 40, scope: !16984)
!17070 = !DILocation(line: 788, column: 20, scope: !16984)
!17071 = !DILocation(line: 790, column: 8, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 790, column: 7)
!17073 = !DILocation(line: 790, column: 12, scope: !17072)
!17074 = !DILocation(line: 790, column: 17, scope: !17072)
!17075 = !DILocation(line: 790, column: 7, scope: !16984)
!17076 = !DILocation(line: 791, column: 17, scope: !17072)
!17077 = !DILocation(line: 791, column: 5, scope: !17072)
!17078 = !DILocation(line: 794, column: 9, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17080, file: !3, line: 794, column: 9)
!17080 = distinct !DILexicalBlock(scope: !17072, file: !3, line: 793, column: 5)
!17081 = !DILocation(line: 794, column: 28, scope: !17079)
!17082 = !DILocation(line: 794, column: 45, scope: !17079)
!17083 = !DILocation(line: 794, column: 25, scope: !17079)
!17084 = !DILocation(line: 794, column: 9, scope: !17080)
!17085 = !DILocation(line: 795, column: 21, scope: !17079)
!17086 = !DILocation(line: 795, column: 19, scope: !17079)
!17087 = !DILocation(line: 795, column: 7, scope: !17079)
!17088 = !DILocation(line: 797, column: 21, scope: !17079)
!17089 = !DILocation(line: 797, column: 38, scope: !17079)
!17090 = !DILocation(line: 797, column: 19, scope: !17079)
!17091 = !DILocation(line: 800, column: 19, scope: !16984)
!17092 = !DILocation(line: 800, column: 17, scope: !16984)
!17093 = !DILocation(line: 802, column: 7, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 802, column: 7)
!17095 = !DILocation(line: 802, column: 28, scope: !17094)
!17096 = !DILocation(line: 802, column: 33, scope: !17094)
!17097 = !DILocation(line: 802, column: 31, scope: !17094)
!17098 = !DILocation(line: 802, column: 18, scope: !17094)
!17099 = !DILocation(line: 802, column: 16, scope: !17094)
!17100 = !DILocation(line: 802, column: 7, scope: !16984)
!17101 = !DILocation(line: 809, column: 21, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 803, column: 5)
!17103 = !DILocation(line: 809, column: 26, scope: !17102)
!17104 = !DILocation(line: 809, column: 24, scope: !17102)
!17105 = !DILocation(line: 809, column: 19, scope: !17102)
!17106 = !DILocation(line: 810, column: 5, scope: !17102)
!17107 = !DILocation(line: 812, column: 25, scope: !16984)
!17108 = !DILocation(line: 812, column: 13, scope: !16984)
!17109 = !DILocation(line: 812, column: 11, scope: !16984)
!17110 = !DILocation(line: 813, column: 7, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 813, column: 7)
!17112 = !DILocation(line: 813, column: 15, scope: !17111)
!17113 = !DILocation(line: 813, column: 7, scope: !16984)
!17114 = !DILocation(line: 814, column: 5, scope: !17111)
!17115 = !DILocation(line: 816, column: 19, scope: !16984)
!17116 = !DILocation(line: 816, column: 32, scope: !16984)
!17117 = !DILocation(line: 816, column: 30, scope: !16984)
!17118 = !DILocation(line: 816, column: 38, scope: !16984)
!17119 = !DILocation(line: 816, column: 36, scope: !16984)
!17120 = !DILocation(line: 816, column: 43, scope: !16984)
!17121 = !DILocation(line: 816, column: 48, scope: !16984)
!17122 = !DILocation(line: 816, column: 15, scope: !16984)
!17123 = !DILocation(line: 817, column: 12, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 817, column: 3)
!17125 = !DILocation(line: 817, column: 8, scope: !17124)
!17126 = !DILocation(line: 817, column: 17, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17124, file: !3, line: 817, column: 3)
!17128 = !DILocation(line: 817, column: 23, scope: !17127)
!17129 = !DILocation(line: 817, column: 21, scope: !17127)
!17130 = !DILocation(line: 817, column: 3, scope: !17124)
!17131 = !DILocation(line: 819, column: 13, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17127, file: !3, line: 818, column: 5)
!17133 = !DILocation(line: 819, column: 19, scope: !17132)
!17134 = !DILocation(line: 819, column: 17, scope: !17132)
!17135 = !DILocation(line: 819, column: 24, scope: !17132)
!17136 = !DILocation(line: 819, column: 22, scope: !17132)
!17137 = !DILocation(line: 819, column: 12, scope: !17132)
!17138 = !DILocation(line: 819, column: 39, scope: !17132)
!17139 = !DILocation(line: 819, column: 53, scope: !17132)
!17140 = !DILocation(line: 819, column: 51, scope: !17132)
!17141 = !DILocation(line: 819, column: 59, scope: !17132)
!17142 = !DILocation(line: 819, column: 10, scope: !17132)
!17143 = !DILocation(line: 820, column: 14, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17132, file: !3, line: 820, column: 5)
!17145 = !DILocation(line: 820, column: 10, scope: !17144)
!17146 = !DILocation(line: 820, column: 19, scope: !17147)
!17147 = distinct !DILexicalBlock(scope: !17144, file: !3, line: 820, column: 5)
!17148 = !DILocation(line: 820, column: 25, scope: !17147)
!17149 = !DILocation(line: 820, column: 23, scope: !17147)
!17150 = !DILocation(line: 820, column: 5, scope: !17144)
!17151 = !DILocation(line: 822, column: 29, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17147, file: !3, line: 821, column: 7)
!17153 = !DILocation(line: 822, column: 33, scope: !17152)
!17154 = !DILocation(line: 822, column: 42, scope: !17152)
!17155 = !DILocation(line: 822, column: 47, scope: !17152)
!17156 = !DILocation(line: 822, column: 16, scope: !17152)
!17157 = !DILocation(line: 822, column: 14, scope: !17152)
!17158 = !DILocation(line: 823, column: 11, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17152, file: !3, line: 823, column: 11)
!17160 = !DILocation(line: 823, column: 20, scope: !17159)
!17161 = !DILocation(line: 823, column: 18, scope: !17159)
!17162 = !DILocation(line: 823, column: 30, scope: !17159)
!17163 = !DILocation(line: 823, column: 34, scope: !17159)
!17164 = !DILocation(line: 823, column: 11, scope: !17152)
!17165 = !DILocation(line: 825, column: 25, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17159, file: !3, line: 824, column: 9)
!17167 = !DILocation(line: 825, column: 12, scope: !17166)
!17168 = !DILocation(line: 827, column: 21, scope: !17166)
!17169 = !DILocation(line: 827, column: 5, scope: !17166)
!17170 = !DILocation(line: 827, column: 42, scope: !17166)
!17171 = !DILocation(line: 827, column: 26, scope: !17166)
!17172 = !DILocation(line: 827, column: 62, scope: !17166)
!17173 = !DILocation(line: 828, column: 34, scope: !17166)
!17174 = !DILocation(line: 825, column: 2, scope: !17166)
!17175 = !DILocation(line: 829, column: 12, scope: !17166)
!17176 = !DILocation(line: 830, column: 29, scope: !17166)
!17177 = !DILocation(line: 830, column: 19, scope: !17166)
!17178 = !DILocation(line: 831, column: 12, scope: !17166)
!17179 = !DILocation(line: 831, column: 5, scope: !17166)
!17180 = !DILocation(line: 834, column: 20, scope: !17152)
!17181 = !DILocation(line: 834, column: 26, scope: !17152)
!17182 = !DILocation(line: 834, column: 24, scope: !17152)
!17183 = !DILocation(line: 834, column: 18, scope: !17152)
!17184 = !DILocation(line: 835, column: 22, scope: !17152)
!17185 = !DILocation(line: 835, column: 28, scope: !17152)
!17186 = !DILocation(line: 835, column: 26, scope: !17152)
!17187 = !DILocation(line: 835, column: 34, scope: !17152)
!17188 = !DILocation(line: 835, column: 32, scope: !17152)
!17189 = !DILocation(line: 835, column: 39, scope: !17152)
!17190 = !DILocation(line: 835, column: 43, scope: !17152)
!17191 = !DILocation(line: 835, column: 18, scope: !17152)
!17192 = !DILocation(line: 836, column: 14, scope: !17152)
!17193 = !DILocation(line: 836, column: 20, scope: !17152)
!17194 = !DILocation(line: 836, column: 18, scope: !17152)
!17195 = !DILocation(line: 836, column: 33, scope: !17152)
!17196 = !DILocation(line: 836, column: 31, scope: !17152)
!17197 = !DILocation(line: 836, column: 12, scope: !17152)
!17198 = !DILocation(line: 838, column: 11, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17152, file: !3, line: 838, column: 11)
!17200 = !DILocation(line: 838, column: 17, scope: !17199)
!17201 = !DILocation(line: 838, column: 15, scope: !17199)
!17202 = !DILocation(line: 838, column: 22, scope: !17199)
!17203 = !DILocation(line: 838, column: 20, scope: !17199)
!17204 = !DILocation(line: 838, column: 11, scope: !17152)
!17205 = !DILocation(line: 839, column: 9, scope: !17199)
!17206 = !DILocation(line: 839, column: 22, scope: !17199)
!17207 = !DILocation(line: 839, column: 20, scope: !17199)
!17208 = !DILocation(line: 839, column: 7, scope: !17199)
!17209 = !DILocation(line: 839, column: 2, scope: !17199)
!17210 = !DILocation(line: 841, column: 16, scope: !17199)
!17211 = !DILocation(line: 841, column: 14, scope: !17199)
!17212 = !DILocation(line: 849, column: 13, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17152, file: !3, line: 849, column: 11)
!17214 = !DILocation(line: 849, column: 17, scope: !17213)
!17215 = !DILocation(line: 849, column: 22, scope: !17213)
!17216 = !DILocation(line: 849, column: 28, scope: !17213)
!17217 = !DILocation(line: 849, column: 32, scope: !17213)
!17218 = !DILocation(line: 849, column: 41, scope: !17213)
!17219 = !DILocation(line: 849, column: 38, scope: !17213)
!17220 = !DILocation(line: 849, column: 11, scope: !17152)
!17221 = !DILocation(line: 851, column: 12, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17223, file: !3, line: 851, column: 2)
!17223 = distinct !DILexicalBlock(scope: !17213, file: !3, line: 850, column: 9)
!17224 = !DILocation(line: 851, column: 7, scope: !17222)
!17225 = !DILocation(line: 851, column: 17, scope: !17226)
!17226 = distinct !DILexicalBlock(scope: !17222, file: !3, line: 851, column: 2)
!17227 = !DILocation(line: 851, column: 24, scope: !17226)
!17228 = !DILocation(line: 851, column: 22, scope: !17226)
!17229 = !DILocation(line: 851, column: 2, scope: !17222)
!17230 = !DILocation(line: 853, column: 17, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17226, file: !3, line: 852, column: 11)
!17232 = !DILocation(line: 853, column: 24, scope: !17231)
!17233 = !DILocation(line: 853, column: 22, scope: !17231)
!17234 = !DILocation(line: 853, column: 15, scope: !17231)
!17235 = !DILocation(line: 854, column: 17, scope: !17231)
!17236 = !DILocation(line: 854, column: 23, scope: !17231)
!17237 = !DILocation(line: 854, column: 33, scope: !17231)
!17238 = !DILocation(line: 854, column: 31, scope: !17231)
!17239 = !DILocation(line: 854, column: 46, scope: !17231)
!17240 = !DILocation(line: 854, column: 53, scope: !17231)
!17241 = !DILocation(line: 854, column: 51, scope: !17231)
!17242 = !DILocation(line: 854, column: 59, scope: !17231)
!17243 = !DILocation(line: 854, column: 57, scope: !17231)
!17244 = !DILocation(line: 854, column: 64, scope: !17231)
!17245 = !DILocation(line: 854, column: 45, scope: !17231)
!17246 = !DILocation(line: 854, column: 4, scope: !17231)
!17247 = !DILocation(line: 855, column: 20, scope: !17231)
!17248 = !DILocation(line: 855, column: 33, scope: !17231)
!17249 = !DILocation(line: 855, column: 31, scope: !17231)
!17250 = !DILocation(line: 855, column: 39, scope: !17231)
!17251 = !DILocation(line: 855, column: 37, scope: !17231)
!17252 = !DILocation(line: 855, column: 44, scope: !17231)
!17253 = !DILocation(line: 855, column: 16, scope: !17231)
!17254 = !DILocation(line: 856, column: 4, scope: !17231)
!17255 = !DILocation(line: 851, column: 34, scope: !17226)
!17256 = !DILocation(line: 851, column: 2, scope: !17226)
!17257 = distinct !{!17257, !17229, !17258}
!17258 = !DILocation(line: 856, column: 4, scope: !17222)
!17259 = !DILocation(line: 857, column: 9, scope: !17223)
!17260 = !DILocation(line: 861, column: 44, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17213, file: !3, line: 859, column: 9)
!17262 = !DILocation(line: 861, column: 28, scope: !17261)
!17263 = !DILocation(line: 862, column: 26, scope: !17261)
!17264 = !DILocation(line: 862, column: 33, scope: !17261)
!17265 = !DILocation(line: 862, column: 31, scope: !17261)
!17266 = !DILocation(line: 862, column: 39, scope: !17261)
!17267 = !DILocation(line: 862, column: 37, scope: !17261)
!17268 = !DILocation(line: 862, column: 44, scope: !17261)
!17269 = !DILocation(line: 862, column: 23, scope: !17261)
!17270 = !DILocation(line: 865, column: 12, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17261, file: !3, line: 865, column: 2)
!17272 = !DILocation(line: 865, column: 7, scope: !17271)
!17273 = !DILocation(line: 865, column: 17, scope: !17274)
!17274 = distinct !DILexicalBlock(scope: !17271, file: !3, line: 865, column: 2)
!17275 = !DILocation(line: 865, column: 24, scope: !17274)
!17276 = !DILocation(line: 865, column: 22, scope: !17274)
!17277 = !DILocation(line: 865, column: 2, scope: !17271)
!17278 = !DILocation(line: 867, column: 17, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17274, file: !3, line: 866, column: 11)
!17280 = !DILocation(line: 867, column: 24, scope: !17279)
!17281 = !DILocation(line: 867, column: 22, scope: !17279)
!17282 = !DILocation(line: 867, column: 15, scope: !17279)
!17283 = !DILocation(line: 868, column: 17, scope: !17279)
!17284 = !DILocation(line: 868, column: 27, scope: !17279)
!17285 = !DILocation(line: 868, column: 25, scope: !17279)
!17286 = !DILocation(line: 868, column: 15, scope: !17279)
!17287 = !DILocation(line: 869, column: 18, scope: !17279)
!17288 = !DILocation(line: 869, column: 24, scope: !17279)
!17289 = !DILocation(line: 869, column: 22, scope: !17279)
!17290 = !DILocation(line: 869, column: 32, scope: !17279)
!17291 = !DILocation(line: 869, column: 30, scope: !17279)
!17292 = !DILocation(line: 869, column: 15, scope: !17279)
!17293 = !DILocation(line: 870, column: 17, scope: !17279)
!17294 = !DILocation(line: 870, column: 23, scope: !17279)
!17295 = !DILocation(line: 870, column: 21, scope: !17279)
!17296 = !DILocation(line: 870, column: 36, scope: !17279)
!17297 = !DILocation(line: 870, column: 34, scope: !17279)
!17298 = !DILocation(line: 870, column: 15, scope: !17279)
!17299 = !DILocation(line: 871, column: 19, scope: !17279)
!17300 = !DILocation(line: 871, column: 11, scope: !17279)
!17301 = !DILocation(line: 873, column: 52, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 873, column: 25)
!17303 = distinct !DILexicalBlock(scope: !17279, file: !3, line: 872, column: 13)
!17304 = !DILocation(line: 873, column: 57, scope: !17302)
!17305 = !DILocation(line: 873, column: 62, scope: !17302)
!17306 = !DILocation(line: 873, column: 68, scope: !17302)
!17307 = !DILocation(line: 874, column: 52, scope: !17302)
!17308 = !DILocation(line: 874, column: 57, scope: !17302)
!17309 = !DILocation(line: 874, column: 62, scope: !17302)
!17310 = !DILocation(line: 874, column: 72, scope: !17302)
!17311 = !DILocation(line: 873, column: 25, scope: !17302)
!17312 = !DILocation(line: 873, column: 25, scope: !17303)
!17313 = !DILocation(line: 878, column: 5, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17302, file: !3, line: 875, column: 23)
!17315 = !DILocation(line: 878, column: 41, scope: !17314)
!17316 = !DILocation(line: 878, column: 25, scope: !17314)
!17317 = !DILocation(line: 878, column: 10, scope: !17314)
!17318 = !DILocation(line: 876, column: 9, scope: !17314)
!17319 = !DILocation(line: 879, column: 9, scope: !17314)
!17320 = !DILocation(line: 881, column: 7, scope: !17303)
!17321 = !DILocation(line: 882, column: 25, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 882, column: 25)
!17323 = !DILocation(line: 882, column: 29, scope: !17322)
!17324 = !DILocation(line: 882, column: 25, scope: !17303)
!17325 = !DILocation(line: 884, column: 61, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17327, file: !3, line: 884, column: 27)
!17327 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 883, column: 23)
!17328 = !DILocation(line: 884, column: 66, scope: !17326)
!17329 = !DILocation(line: 884, column: 71, scope: !17326)
!17330 = !DILocation(line: 885, column: 61, scope: !17326)
!17331 = !DILocation(line: 885, column: 69, scope: !17326)
!17332 = !DILocation(line: 886, column: 61, scope: !17326)
!17333 = !DILocation(line: 886, column: 66, scope: !17326)
!17334 = !DILocation(line: 887, column: 64, scope: !17326)
!17335 = !DILocation(line: 888, column: 61, scope: !17326)
!17336 = !DILocation(line: 884, column: 27, scope: !17326)
!17337 = !DILocation(line: 884, column: 27, scope: !17327)
!17338 = !DILocation(line: 892, column: 7, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17326, file: !3, line: 889, column: 25)
!17340 = !DILocation(line: 892, column: 43, scope: !17339)
!17341 = !DILocation(line: 892, column: 27, scope: !17339)
!17342 = !DILocation(line: 892, column: 12, scope: !17339)
!17343 = !DILocation(line: 890, column: 11, scope: !17339)
!17344 = !DILocation(line: 893, column: 11, scope: !17339)
!17345 = !DILocation(line: 895, column: 9, scope: !17327)
!17346 = !DILocation(line: 898, column: 62, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 898, column: 27)
!17348 = !DILocation(line: 898, column: 67, scope: !17347)
!17349 = !DILocation(line: 898, column: 72, scope: !17347)
!17350 = !DILocation(line: 899, column: 62, scope: !17347)
!17351 = !DILocation(line: 899, column: 70, scope: !17347)
!17352 = !DILocation(line: 900, column: 62, scope: !17347)
!17353 = !DILocation(line: 900, column: 67, scope: !17347)
!17354 = !DILocation(line: 901, column: 65, scope: !17347)
!17355 = !DILocation(line: 902, column: 62, scope: !17347)
!17356 = !DILocation(line: 898, column: 27, scope: !17347)
!17357 = !DILocation(line: 898, column: 27, scope: !17322)
!17358 = !DILocation(line: 906, column: 9, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 903, column: 25)
!17360 = !DILocation(line: 906, column: 45, scope: !17359)
!17361 = !DILocation(line: 906, column: 29, scope: !17359)
!17362 = !DILocation(line: 906, column: 14, scope: !17359)
!17363 = !DILocation(line: 904, column: 11, scope: !17359)
!17364 = !DILocation(line: 907, column: 11, scope: !17359)
!17365 = !DILocation(line: 909, column: 14, scope: !17303)
!17366 = !DILocation(line: 910, column: 60, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 910, column: 25)
!17368 = !DILocation(line: 910, column: 65, scope: !17367)
!17369 = !DILocation(line: 910, column: 70, scope: !17367)
!17370 = !DILocation(line: 911, column: 60, scope: !17367)
!17371 = !DILocation(line: 911, column: 68, scope: !17367)
!17372 = !DILocation(line: 912, column: 60, scope: !17367)
!17373 = !DILocation(line: 912, column: 65, scope: !17367)
!17374 = !DILocation(line: 913, column: 63, scope: !17367)
!17375 = !DILocation(line: 914, column: 60, scope: !17367)
!17376 = !DILocation(line: 910, column: 25, scope: !17367)
!17377 = !DILocation(line: 910, column: 25, scope: !17303)
!17378 = !DILocation(line: 918, column: 14, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17367, file: !3, line: 915, column: 23)
!17380 = !DILocation(line: 918, column: 50, scope: !17379)
!17381 = !DILocation(line: 918, column: 34, scope: !17379)
!17382 = !DILocation(line: 918, column: 19, scope: !17379)
!17383 = !DILocation(line: 916, column: 9, scope: !17379)
!17384 = !DILocation(line: 919, column: 9, scope: !17379)
!17385 = !DILocation(line: 921, column: 7, scope: !17303)
!17386 = !DILocation(line: 924, column: 60, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 924, column: 25)
!17388 = !DILocation(line: 924, column: 65, scope: !17387)
!17389 = !DILocation(line: 924, column: 70, scope: !17387)
!17390 = !DILocation(line: 925, column: 60, scope: !17387)
!17391 = !DILocation(line: 925, column: 68, scope: !17387)
!17392 = !DILocation(line: 926, column: 60, scope: !17387)
!17393 = !DILocation(line: 926, column: 65, scope: !17387)
!17394 = !DILocation(line: 927, column: 63, scope: !17387)
!17395 = !DILocation(line: 928, column: 60, scope: !17387)
!17396 = !DILocation(line: 924, column: 25, scope: !17387)
!17397 = !DILocation(line: 924, column: 25, scope: !17303)
!17398 = !DILocation(line: 932, column: 12, scope: !17399)
!17399 = distinct !DILexicalBlock(scope: !17387, file: !3, line: 929, column: 23)
!17400 = !DILocation(line: 932, column: 48, scope: !17399)
!17401 = !DILocation(line: 932, column: 32, scope: !17399)
!17402 = !DILocation(line: 932, column: 17, scope: !17399)
!17403 = !DILocation(line: 930, column: 9, scope: !17399)
!17404 = !DILocation(line: 933, column: 9, scope: !17399)
!17405 = !DILocation(line: 935, column: 7, scope: !17303)
!17406 = !DILocation(line: 936, column: 89, scope: !17303)
!17407 = !DILocation(line: 936, column: 22, scope: !17303)
!17408 = !DILocation(line: 937, column: 8, scope: !17303)
!17409 = !DILocation(line: 939, column: 11, scope: !17279)
!17410 = !DILocation(line: 865, column: 34, scope: !17274)
!17411 = !DILocation(line: 865, column: 2, scope: !17274)
!17412 = distinct !{!17412, !17277, !17413}
!17413 = !DILocation(line: 939, column: 11, scope: !17271)
!17414 = !DILocation(line: 940, column: 31, scope: !17261)
!17415 = !DILocation(line: 940, column: 28, scope: !17261)
!17416 = !DILocation(line: 941, column: 13, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17261, file: !3, line: 941, column: 13)
!17418 = !DILocation(line: 941, column: 32, scope: !17417)
!17419 = !DILocation(line: 941, column: 13, scope: !17261)
!17420 = !DILocation(line: 942, column: 22, scope: !17417)
!17421 = !DILocation(line: 942, column: 4, scope: !17417)
!17422 = !DILocation(line: 944, column: 7, scope: !17152)
!17423 = !DILocation(line: 820, column: 44, scope: !17147)
!17424 = !DILocation(line: 820, column: 41, scope: !17147)
!17425 = !DILocation(line: 820, column: 5, scope: !17147)
!17426 = distinct !{!17426, !17150, !17427}
!17427 = !DILocation(line: 944, column: 7, scope: !17144)
!17428 = !DILocation(line: 945, column: 5, scope: !17132)
!17429 = !DILocation(line: 817, column: 43, scope: !17127)
!17430 = !DILocation(line: 817, column: 40, scope: !17127)
!17431 = !DILocation(line: 817, column: 3, scope: !17127)
!17432 = distinct !{!17432, !17130, !17433}
!17433 = !DILocation(line: 945, column: 5, scope: !17124)
!17434 = !DILocation(line: 947, column: 13, scope: !16984)
!17435 = !DILocation(line: 947, column: 3, scope: !16984)
!17436 = !DILocation(line: 948, column: 10, scope: !16984)
!17437 = !DILocation(line: 948, column: 3, scope: !16984)
!17438 = !DILocation(line: 949, column: 3, scope: !16984)
!17439 = distinct !DISubprogram(name: "readSeparateTilesIntoBuffer", scope: !3, file: !3, line: 951, type: !17440, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!17440 = !DISubroutineType(types: !17441)
!17441 = !{!110, !193, !116, !105, !105, !105, !105, !103, !103}
!17442 = !DILocalVariable(name: "in", arg: 1, scope: !17439, file: !3, line: 951, type: !193)
!17443 = !DILocation(line: 951, column: 48, scope: !17439)
!17444 = !DILocalVariable(name: "obuf", arg: 2, scope: !17439, file: !3, line: 951, type: !116)
!17445 = !DILocation(line: 951, column: 59, scope: !17439)
!17446 = !DILocalVariable(name: "imagelength", arg: 3, scope: !17439, file: !3, line: 952, type: !105)
!17447 = !DILocation(line: 952, column: 14, scope: !17439)
!17448 = !DILocalVariable(name: "imagewidth", arg: 4, scope: !17439, file: !3, line: 952, type: !105)
!17449 = !DILocation(line: 952, column: 34, scope: !17439)
!17450 = !DILocalVariable(name: "tw", arg: 5, scope: !17439, file: !3, line: 953, type: !105)
!17451 = !DILocation(line: 953, column: 49, scope: !17439)
!17452 = !DILocalVariable(name: "tl", arg: 6, scope: !17439, file: !3, line: 953, type: !105)
!17453 = !DILocation(line: 953, column: 60, scope: !17439)
!17454 = !DILocalVariable(name: "spp", arg: 7, scope: !17439, file: !3, line: 954, type: !103)
!17455 = !DILocation(line: 954, column: 49, scope: !17439)
!17456 = !DILocalVariable(name: "bps", arg: 8, scope: !17439, file: !3, line: 954, type: !103)
!17457 = !DILocation(line: 954, column: 61, scope: !17439)
!17458 = !DILocalVariable(name: "i", scope: !17439, file: !3, line: 956, type: !110)
!17459 = !DILocation(line: 956, column: 11, scope: !17439)
!17460 = !DILocalVariable(name: "status", scope: !17439, file: !3, line: 956, type: !110)
!17461 = !DILocation(line: 956, column: 14, scope: !17439)
!17462 = !DILocalVariable(name: "sample", scope: !17439, file: !3, line: 956, type: !110)
!17463 = !DILocation(line: 956, column: 26, scope: !17439)
!17464 = !DILocalVariable(name: "shift_width", scope: !17439, file: !3, line: 957, type: !110)
!17465 = !DILocation(line: 957, column: 11, scope: !17439)
!17466 = !DILocalVariable(name: "bytes_per_pixel", scope: !17439, file: !3, line: 957, type: !110)
!17467 = !DILocation(line: 957, column: 24, scope: !17439)
!17468 = !DILocalVariable(name: "bytes_per_sample", scope: !17439, file: !3, line: 958, type: !103)
!17469 = !DILocation(line: 958, column: 11, scope: !17439)
!17470 = !DILocalVariable(name: "row", scope: !17439, file: !3, line: 959, type: !105)
!17471 = !DILocation(line: 959, column: 11, scope: !17439)
!17472 = !DILocalVariable(name: "col", scope: !17439, file: !3, line: 959, type: !105)
!17473 = !DILocation(line: 959, column: 16, scope: !17439)
!17474 = !DILocalVariable(name: "nrow", scope: !17439, file: !3, line: 960, type: !105)
!17475 = !DILocation(line: 960, column: 11, scope: !17439)
!17476 = !DILocalVariable(name: "ncol", scope: !17439, file: !3, line: 960, type: !105)
!17477 = !DILocation(line: 960, column: 17, scope: !17439)
!17478 = !DILocalVariable(name: "row_offset", scope: !17439, file: !3, line: 961, type: !105)
!17479 = !DILocation(line: 961, column: 11, scope: !17439)
!17480 = !DILocalVariable(name: "col_offset", scope: !17439, file: !3, line: 961, type: !105)
!17481 = !DILocation(line: 961, column: 23, scope: !17439)
!17482 = !DILocalVariable(name: "tbytes", scope: !17439, file: !3, line: 962, type: !117)
!17483 = !DILocation(line: 962, column: 11, scope: !17439)
!17484 = !DILocalVariable(name: "tilesize", scope: !17439, file: !3, line: 962, type: !117)
!17485 = !DILocation(line: 962, column: 23, scope: !17439)
!17486 = !DILocation(line: 962, column: 47, scope: !17439)
!17487 = !DILocation(line: 962, column: 34, scope: !17439)
!17488 = !DILocalVariable(name: "s", scope: !17439, file: !3, line: 963, type: !7616)
!17489 = !DILocation(line: 963, column: 13, scope: !17439)
!17490 = !DILocalVariable(name: "bufp", scope: !17439, file: !3, line: 964, type: !116)
!17491 = !DILocation(line: 964, column: 11, scope: !17439)
!17492 = !DILocation(line: 964, column: 26, scope: !17439)
!17493 = !DILocalVariable(name: "srcbuffs", scope: !17439, file: !3, line: 965, type: !16592)
!17494 = !DILocation(line: 965, column: 18, scope: !17439)
!17495 = !DILocalVariable(name: "tbuff", scope: !17439, file: !3, line: 966, type: !106)
!17496 = !DILocation(line: 966, column: 18, scope: !17439)
!17497 = !DILocation(line: 968, column: 23, scope: !17439)
!17498 = !DILocation(line: 968, column: 27, scope: !17439)
!17499 = !DILocation(line: 968, column: 32, scope: !17439)
!17500 = !DILocation(line: 968, column: 22, scope: !17439)
!17501 = !DILocation(line: 968, column: 20, scope: !17439)
!17502 = !DILocation(line: 970, column: 15, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17439, file: !3, line: 970, column: 3)
!17504 = !DILocation(line: 970, column: 8, scope: !17503)
!17505 = !DILocation(line: 970, column: 21, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17503, file: !3, line: 970, column: 3)
!17507 = !DILocation(line: 970, column: 30, scope: !17506)
!17508 = !DILocation(line: 970, column: 28, scope: !17506)
!17509 = !DILocation(line: 970, column: 35, scope: !17506)
!17510 = !DILocation(line: 970, column: 39, scope: !17506)
!17511 = !DILocation(line: 970, column: 46, scope: !17506)
!17512 = !DILocation(line: 0, scope: !17506)
!17513 = !DILocation(line: 970, column: 3, scope: !17503)
!17514 = !DILocation(line: 972, column: 14, scope: !17515)
!17515 = distinct !DILexicalBlock(scope: !17506, file: !3, line: 971, column: 5)
!17516 = !DILocation(line: 972, column: 5, scope: !17515)
!17517 = !DILocation(line: 972, column: 22, scope: !17515)
!17518 = !DILocation(line: 973, column: 42, scope: !17515)
!17519 = !DILocation(line: 973, column: 51, scope: !17515)
!17520 = !DILocation(line: 973, column: 30, scope: !17515)
!17521 = !DILocation(line: 973, column: 11, scope: !17515)
!17522 = !DILocation(line: 974, column: 10, scope: !17523)
!17523 = distinct !DILexicalBlock(scope: !17515, file: !3, line: 974, column: 9)
!17524 = !DILocation(line: 974, column: 9, scope: !17515)
!17525 = !DILocation(line: 977, column: 71, scope: !17526)
!17526 = distinct !DILexicalBlock(scope: !17523, file: !3, line: 975, column: 7)
!17527 = !DILocation(line: 976, column: 7, scope: !17526)
!17528 = !DILocation(line: 978, column: 14, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17526, file: !3, line: 978, column: 7)
!17530 = !DILocation(line: 978, column: 12, scope: !17529)
!17531 = !DILocation(line: 978, column: 19, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17529, file: !3, line: 978, column: 7)
!17533 = !DILocation(line: 978, column: 23, scope: !17532)
!17534 = !DILocation(line: 978, column: 21, scope: !17532)
!17535 = !DILocation(line: 978, column: 7, scope: !17529)
!17536 = !DILocation(line: 979, column: 29, scope: !17532)
!17537 = !DILocation(line: 979, column: 20, scope: !17532)
!17538 = !DILocation(line: 979, column: 9, scope: !17532)
!17539 = !DILocation(line: 978, column: 32, scope: !17532)
!17540 = !DILocation(line: 978, column: 7, scope: !17532)
!17541 = distinct !{!17541, !17535, !17542}
!17542 = !DILocation(line: 979, column: 31, scope: !17529)
!17543 = !DILocation(line: 980, column: 7, scope: !17526)
!17544 = !DILocation(line: 982, column: 24, scope: !17515)
!17545 = !DILocation(line: 982, column: 14, scope: !17515)
!17546 = !DILocation(line: 982, column: 5, scope: !17515)
!17547 = !DILocation(line: 982, column: 22, scope: !17515)
!17548 = !DILocation(line: 983, column: 5, scope: !17515)
!17549 = !DILocation(line: 970, column: 68, scope: !17506)
!17550 = !DILocation(line: 970, column: 3, scope: !17506)
!17551 = distinct !{!17551, !17513, !17552}
!17552 = !DILocation(line: 983, column: 5, scope: !17503)
!17553 = !DILocation(line: 987, column: 12, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17439, file: !3, line: 987, column: 3)
!17555 = !DILocation(line: 987, column: 8, scope: !17554)
!17556 = !DILocation(line: 987, column: 17, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17554, file: !3, line: 987, column: 3)
!17558 = !DILocation(line: 987, column: 23, scope: !17557)
!17559 = !DILocation(line: 987, column: 21, scope: !17557)
!17560 = !DILocation(line: 987, column: 3, scope: !17554)
!17561 = !DILocation(line: 989, column: 13, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17557, file: !3, line: 988, column: 5)
!17563 = !DILocation(line: 989, column: 19, scope: !17562)
!17564 = !DILocation(line: 989, column: 17, scope: !17562)
!17565 = !DILocation(line: 989, column: 24, scope: !17562)
!17566 = !DILocation(line: 989, column: 22, scope: !17562)
!17567 = !DILocation(line: 989, column: 12, scope: !17562)
!17568 = !DILocation(line: 989, column: 39, scope: !17562)
!17569 = !DILocation(line: 989, column: 53, scope: !17562)
!17570 = !DILocation(line: 989, column: 51, scope: !17562)
!17571 = !DILocation(line: 989, column: 59, scope: !17562)
!17572 = !DILocation(line: 989, column: 10, scope: !17562)
!17573 = !DILocation(line: 990, column: 14, scope: !17574)
!17574 = distinct !DILexicalBlock(scope: !17562, file: !3, line: 990, column: 5)
!17575 = !DILocation(line: 990, column: 10, scope: !17574)
!17576 = !DILocation(line: 990, column: 19, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17574, file: !3, line: 990, column: 5)
!17578 = !DILocation(line: 990, column: 25, scope: !17577)
!17579 = !DILocation(line: 990, column: 23, scope: !17577)
!17580 = !DILocation(line: 990, column: 5, scope: !17574)
!17581 = !DILocation(line: 992, column: 14, scope: !17582)
!17582 = distinct !DILexicalBlock(scope: !17583, file: !3, line: 992, column: 7)
!17583 = distinct !DILexicalBlock(scope: !17577, file: !3, line: 991, column: 7)
!17584 = !DILocation(line: 992, column: 12, scope: !17582)
!17585 = !DILocation(line: 992, column: 19, scope: !17586)
!17586 = distinct !DILexicalBlock(scope: !17582, file: !3, line: 992, column: 7)
!17587 = !DILocation(line: 992, column: 23, scope: !17586)
!17588 = !DILocation(line: 992, column: 21, scope: !17586)
!17589 = !DILocation(line: 992, column: 7, scope: !17582)
!17590 = !DILocation(line: 994, column: 24, scope: !17591)
!17591 = distinct !DILexicalBlock(scope: !17586, file: !3, line: 993, column: 9)
!17592 = !DILocation(line: 994, column: 37, scope: !17591)
!17593 = !DILocation(line: 994, column: 28, scope: !17591)
!17594 = !DILocation(line: 994, column: 41, scope: !17591)
!17595 = !DILocation(line: 994, column: 46, scope: !17591)
!17596 = !DILocation(line: 994, column: 54, scope: !17591)
!17597 = !DILocation(line: 994, column: 11, scope: !17591)
!17598 = !DILocation(line: 994, column: 9, scope: !17591)
!17599 = !DILocation(line: 995, column: 13, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17591, file: !3, line: 995, column: 13)
!17601 = !DILocation(line: 995, column: 20, scope: !17600)
!17602 = !DILocation(line: 995, column: 25, scope: !17600)
!17603 = !DILocation(line: 995, column: 29, scope: !17600)
!17604 = !DILocation(line: 995, column: 13, scope: !17591)
!17605 = !DILocation(line: 997, column: 27, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17600, file: !3, line: 996, column: 11)
!17607 = !DILocation(line: 997, column: 14, scope: !17606)
!17608 = !DILocation(line: 1000, column: 20, scope: !17606)
!17609 = !DILocation(line: 1000, column: 4, scope: !17606)
!17610 = !DILocation(line: 1000, column: 41, scope: !17606)
!17611 = !DILocation(line: 1000, column: 25, scope: !17606)
!17612 = !DILocation(line: 1001, column: 20, scope: !17606)
!17613 = !DILocation(line: 1001, column: 4, scope: !17606)
!17614 = !DILocation(line: 997, column: 4, scope: !17606)
!17615 = !DILocation(line: 1002, column: 11, scope: !17606)
!17616 = !DILocation(line: 1003, column: 23, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17606, file: !3, line: 1003, column: 11)
!17618 = !DILocation(line: 1003, column: 16, scope: !17617)
!17619 = !DILocation(line: 1003, column: 29, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17617, file: !3, line: 1003, column: 11)
!17621 = !DILocation(line: 1003, column: 38, scope: !17620)
!17622 = !DILocation(line: 1003, column: 36, scope: !17620)
!17623 = !DILocation(line: 1003, column: 43, scope: !17620)
!17624 = !DILocation(line: 1003, column: 47, scope: !17620)
!17625 = !DILocation(line: 1003, column: 54, scope: !17620)
!17626 = !DILocation(line: 0, scope: !17620)
!17627 = !DILocation(line: 1003, column: 11, scope: !17617)
!17628 = !DILocation(line: 1005, column: 30, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17620, file: !3, line: 1004, column: 13)
!17630 = !DILocation(line: 1005, column: 21, scope: !17629)
!17631 = !DILocation(line: 1005, column: 19, scope: !17629)
!17632 = !DILocation(line: 1006, column: 17, scope: !17633)
!17633 = distinct !DILexicalBlock(scope: !17629, file: !3, line: 1006, column: 17)
!17634 = !DILocation(line: 1006, column: 23, scope: !17633)
!17635 = !DILocation(line: 1006, column: 17, scope: !17629)
!17636 = !DILocation(line: 1007, column: 25, scope: !17633)
!17637 = !DILocation(line: 1007, column: 15, scope: !17633)
!17638 = !DILocation(line: 1008, column: 13, scope: !17629)
!17639 = !DILocation(line: 1003, column: 76, scope: !17620)
!17640 = !DILocation(line: 1003, column: 11, scope: !17620)
!17641 = distinct !{!17641, !17627, !17642}
!17642 = !DILocation(line: 1008, column: 13, scope: !17617)
!17643 = !DILocation(line: 1009, column: 18, scope: !17606)
!17644 = !DILocation(line: 1009, column: 11, scope: !17606)
!17645 = !DILocation(line: 1011, column: 2, scope: !17591)
!17646 = !DILocation(line: 992, column: 29, scope: !17586)
!17647 = !DILocation(line: 992, column: 7, scope: !17586)
!17648 = distinct !{!17648, !17589, !17649}
!17649 = !DILocation(line: 1011, column: 2, scope: !17582)
!17650 = !DILocation(line: 1016, column: 11, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17583, file: !3, line: 1016, column: 11)
!17652 = !DILocation(line: 1016, column: 17, scope: !17651)
!17653 = !DILocation(line: 1016, column: 15, scope: !17651)
!17654 = !DILocation(line: 1016, column: 22, scope: !17651)
!17655 = !DILocation(line: 1016, column: 20, scope: !17651)
!17656 = !DILocation(line: 1016, column: 11, scope: !17583)
!17657 = !DILocation(line: 1017, column: 16, scope: !17651)
!17658 = !DILocation(line: 1017, column: 29, scope: !17651)
!17659 = !DILocation(line: 1017, column: 27, scope: !17651)
!17660 = !DILocation(line: 1017, column: 14, scope: !17651)
!17661 = !DILocation(line: 1017, column: 9, scope: !17651)
!17662 = !DILocation(line: 1019, column: 16, scope: !17651)
!17663 = !DILocation(line: 1019, column: 14, scope: !17651)
!17664 = !DILocation(line: 1021, column: 20, scope: !17583)
!17665 = !DILocation(line: 1021, column: 29, scope: !17583)
!17666 = !DILocation(line: 1021, column: 42, scope: !17583)
!17667 = !DILocation(line: 1021, column: 40, scope: !17583)
!17668 = !DILocation(line: 1021, column: 48, scope: !17583)
!17669 = !DILocation(line: 1021, column: 46, scope: !17583)
!17670 = !DILocation(line: 1021, column: 53, scope: !17583)
!17671 = !DILocation(line: 1021, column: 58, scope: !17583)
!17672 = !DILocation(line: 1021, column: 24, scope: !17583)
!17673 = !DILocation(line: 1021, column: 18, scope: !17583)
!17674 = !DILocation(line: 1022, column: 22, scope: !17583)
!17675 = !DILocation(line: 1022, column: 28, scope: !17583)
!17676 = !DILocation(line: 1022, column: 26, scope: !17583)
!17677 = !DILocation(line: 1022, column: 34, scope: !17583)
!17678 = !DILocation(line: 1022, column: 32, scope: !17583)
!17679 = !DILocation(line: 1022, column: 39, scope: !17583)
!17680 = !DILocation(line: 1022, column: 44, scope: !17583)
!17681 = !DILocation(line: 1022, column: 18, scope: !17583)
!17682 = !DILocation(line: 1023, column: 14, scope: !17583)
!17683 = !DILocation(line: 1023, column: 21, scope: !17583)
!17684 = !DILocation(line: 1023, column: 19, scope: !17583)
!17685 = !DILocation(line: 1023, column: 34, scope: !17583)
!17686 = !DILocation(line: 1023, column: 32, scope: !17583)
!17687 = !DILocation(line: 1023, column: 12, scope: !17583)
!17688 = !DILocation(line: 1025, column: 12, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17583, file: !3, line: 1025, column: 11)
!17690 = !DILocation(line: 1025, column: 16, scope: !17689)
!17691 = !DILocation(line: 1025, column: 21, scope: !17689)
!17692 = !DILocation(line: 1025, column: 11, scope: !17583)
!17693 = !DILocation(line: 1027, column: 45, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17695, file: !3, line: 1027, column: 13)
!17695 = distinct !DILexicalBlock(scope: !17689, file: !3, line: 1026, column: 9)
!17696 = !DILocation(line: 1027, column: 55, scope: !17694)
!17697 = !DILocation(line: 1027, column: 61, scope: !17694)
!17698 = !DILocation(line: 1027, column: 67, scope: !17694)
!17699 = !DILocation(line: 1027, column: 73, scope: !17694)
!17700 = !DILocation(line: 1028, column: 10, scope: !17694)
!17701 = !DILocation(line: 1028, column: 14, scope: !17694)
!17702 = !DILocation(line: 1028, column: 19, scope: !17694)
!17703 = !DILocation(line: 1027, column: 13, scope: !17694)
!17704 = !DILocation(line: 1027, column: 13, scope: !17695)
!17705 = !DILocation(line: 1030, column: 18, scope: !17706)
!17706 = distinct !DILexicalBlock(scope: !17694, file: !3, line: 1029, column: 4)
!17707 = !DILocation(line: 1031, column: 11, scope: !17706)
!17708 = !DILocation(line: 1033, column: 2, scope: !17695)
!17709 = !DILocation(line: 1036, column: 30, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17689, file: !3, line: 1035, column: 9)
!17711 = !DILocation(line: 1036, column: 36, scope: !17710)
!17712 = !DILocation(line: 1036, column: 34, scope: !17710)
!17713 = !DILocation(line: 1036, column: 41, scope: !17710)
!17714 = !DILocation(line: 1036, column: 46, scope: !17710)
!17715 = !DILocation(line: 1036, column: 26, scope: !17710)
!17716 = !DILocation(line: 1037, column: 13, scope: !17717)
!17717 = distinct !DILexicalBlock(scope: !17710, file: !3, line: 1037, column: 13)
!17718 = !DILocation(line: 1037, column: 32, scope: !17717)
!17719 = !DILocation(line: 1037, column: 49, scope: !17717)
!17720 = !DILocation(line: 1037, column: 29, scope: !17717)
!17721 = !DILocation(line: 1037, column: 13, scope: !17710)
!17722 = !DILocation(line: 1038, column: 25, scope: !17717)
!17723 = !DILocation(line: 1038, column: 23, scope: !17717)
!17724 = !DILocation(line: 1038, column: 11, scope: !17717)
!17725 = !DILocation(line: 1040, column: 25, scope: !17717)
!17726 = !DILocation(line: 1040, column: 42, scope: !17717)
!17727 = !DILocation(line: 1040, column: 23, scope: !17717)
!17728 = !DILocation(line: 1042, column: 17, scope: !17710)
!17729 = !DILocation(line: 1042, column: 9, scope: !17710)
!17730 = !DILocation(line: 1044, column: 56, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 1044, column: 23)
!17732 = distinct !DILexicalBlock(scope: !17710, file: !3, line: 1043, column: 11)
!17733 = !DILocation(line: 1044, column: 66, scope: !17731)
!17734 = !DILocation(line: 1044, column: 72, scope: !17731)
!17735 = !DILocation(line: 1044, column: 78, scope: !17731)
!17736 = !DILocation(line: 1045, column: 56, scope: !17731)
!17737 = !DILocation(line: 1045, column: 68, scope: !17731)
!17738 = !DILocation(line: 1045, column: 72, scope: !17731)
!17739 = !DILocation(line: 1045, column: 77, scope: !17731)
!17740 = !DILocation(line: 1044, column: 23, scope: !17731)
!17741 = !DILocation(line: 1044, column: 23, scope: !17732)
!17742 = !DILocation(line: 1048, column: 28, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17731, file: !3, line: 1047, column: 14)
!17744 = !DILocation(line: 1049, column: 21, scope: !17743)
!17745 = !DILocation(line: 1051, column: 12, scope: !17732)
!17746 = !DILocation(line: 1052, column: 57, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 1052, column: 23)
!17748 = !DILocation(line: 1052, column: 67, scope: !17747)
!17749 = !DILocation(line: 1052, column: 73, scope: !17747)
!17750 = !DILocation(line: 1052, column: 79, scope: !17747)
!17751 = !DILocation(line: 1053, column: 56, scope: !17747)
!17752 = !DILocation(line: 1053, column: 68, scope: !17747)
!17753 = !DILocation(line: 1053, column: 72, scope: !17747)
!17754 = !DILocation(line: 1053, column: 77, scope: !17747)
!17755 = !DILocation(line: 1052, column: 23, scope: !17747)
!17756 = !DILocation(line: 1052, column: 23, scope: !17732)
!17757 = !DILocation(line: 1056, column: 28, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17747, file: !3, line: 1055, column: 14)
!17759 = !DILocation(line: 1057, column: 21, scope: !17758)
!17760 = !DILocation(line: 1059, column: 12, scope: !17732)
!17761 = !DILocation(line: 1060, column: 57, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 1060, column: 23)
!17763 = !DILocation(line: 1060, column: 67, scope: !17762)
!17764 = !DILocation(line: 1060, column: 73, scope: !17762)
!17765 = !DILocation(line: 1060, column: 79, scope: !17762)
!17766 = !DILocation(line: 1061, column: 56, scope: !17762)
!17767 = !DILocation(line: 1061, column: 68, scope: !17762)
!17768 = !DILocation(line: 1061, column: 72, scope: !17762)
!17769 = !DILocation(line: 1061, column: 77, scope: !17762)
!17770 = !DILocation(line: 1060, column: 23, scope: !17762)
!17771 = !DILocation(line: 1060, column: 23, scope: !17732)
!17772 = !DILocation(line: 1064, column: 28, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17762, file: !3, line: 1063, column: 14)
!17774 = !DILocation(line: 1065, column: 21, scope: !17773)
!17775 = !DILocation(line: 1067, column: 19, scope: !17732)
!17776 = !DILocation(line: 1072, column: 57, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 1072, column: 23)
!17778 = !DILocation(line: 1072, column: 67, scope: !17777)
!17779 = !DILocation(line: 1072, column: 73, scope: !17777)
!17780 = !DILocation(line: 1072, column: 79, scope: !17777)
!17781 = !DILocation(line: 1073, column: 56, scope: !17777)
!17782 = !DILocation(line: 1073, column: 68, scope: !17777)
!17783 = !DILocation(line: 1073, column: 72, scope: !17777)
!17784 = !DILocation(line: 1073, column: 77, scope: !17777)
!17785 = !DILocation(line: 1072, column: 23, scope: !17777)
!17786 = !DILocation(line: 1072, column: 23, scope: !17732)
!17787 = !DILocation(line: 1076, column: 28, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17777, file: !3, line: 1075, column: 14)
!17789 = !DILocation(line: 1077, column: 21, scope: !17788)
!17790 = !DILocation(line: 1079, column: 12, scope: !17732)
!17791 = !DILocation(line: 1080, column: 91, scope: !17732)
!17792 = !DILocation(line: 1080, column: 20, scope: !17732)
!17793 = !DILocation(line: 1081, column: 26, scope: !17732)
!17794 = !DILocation(line: 1082, column: 19, scope: !17732)
!17795 = !DILocation(line: 1085, column: 7, scope: !17583)
!17796 = !DILocation(line: 990, column: 44, scope: !17577)
!17797 = !DILocation(line: 990, column: 41, scope: !17577)
!17798 = !DILocation(line: 990, column: 5, scope: !17577)
!17799 = distinct !{!17799, !17580, !17800}
!17800 = !DILocation(line: 1085, column: 7, scope: !17574)
!17801 = !DILocation(line: 1086, column: 5, scope: !17562)
!17802 = !DILocation(line: 987, column: 43, scope: !17557)
!17803 = !DILocation(line: 987, column: 40, scope: !17557)
!17804 = !DILocation(line: 987, column: 3, scope: !17557)
!17805 = distinct !{!17805, !17560, !17806}
!17806 = !DILocation(line: 1086, column: 5, scope: !17554)
!17807 = !DILocation(line: 1088, column: 15, scope: !17808)
!17808 = distinct !DILexicalBlock(scope: !17439, file: !3, line: 1088, column: 3)
!17809 = !DILocation(line: 1088, column: 8, scope: !17808)
!17810 = !DILocation(line: 1088, column: 21, scope: !17811)
!17811 = distinct !DILexicalBlock(scope: !17808, file: !3, line: 1088, column: 3)
!17812 = !DILocation(line: 1088, column: 30, scope: !17811)
!17813 = !DILocation(line: 1088, column: 28, scope: !17811)
!17814 = !DILocation(line: 1088, column: 35, scope: !17811)
!17815 = !DILocation(line: 1088, column: 39, scope: !17811)
!17816 = !DILocation(line: 1088, column: 46, scope: !17811)
!17817 = !DILocation(line: 0, scope: !17811)
!17818 = !DILocation(line: 1088, column: 3, scope: !17808)
!17819 = !DILocation(line: 1090, column: 22, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17811, file: !3, line: 1089, column: 5)
!17821 = !DILocation(line: 1090, column: 13, scope: !17820)
!17822 = !DILocation(line: 1090, column: 11, scope: !17820)
!17823 = !DILocation(line: 1091, column: 9, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17820, file: !3, line: 1091, column: 9)
!17825 = !DILocation(line: 1091, column: 15, scope: !17824)
!17826 = !DILocation(line: 1091, column: 9, scope: !17820)
!17827 = !DILocation(line: 1092, column: 17, scope: !17824)
!17828 = !DILocation(line: 1092, column: 7, scope: !17824)
!17829 = !DILocation(line: 1093, column: 5, scope: !17820)
!17830 = !DILocation(line: 1088, column: 68, scope: !17811)
!17831 = !DILocation(line: 1088, column: 3, scope: !17811)
!17832 = distinct !{!17832, !17818, !17833}
!17833 = !DILocation(line: 1093, column: 5, scope: !17808)
!17834 = !DILocation(line: 1095, column: 10, scope: !17439)
!17835 = !DILocation(line: 1095, column: 3, scope: !17439)
!17836 = !DILocation(line: 1096, column: 3, scope: !17439)
!17837 = distinct !DISubprogram(name: "combineSeparateTileSamplesBytes", scope: !3, file: !3, line: 4149, type: !17838, scopeLine: 4153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!17838 = !DISubroutineType(types: !17839)
!17839 = !{!110, !571, !106, !105, !105, !105, !105, !103, !103, !470, !110, !110}
!17840 = !DILocalVariable(name: "srcbuffs", arg: 1, scope: !17837, file: !3, line: 4149, type: !571)
!17841 = !DILocation(line: 4149, column: 49, scope: !17837)
!17842 = !DILocalVariable(name: "out", arg: 2, scope: !17837, file: !3, line: 4149, type: !106)
!17843 = !DILocation(line: 4149, column: 76, scope: !17837)
!17844 = !DILocalVariable(name: "cols", arg: 3, scope: !17837, file: !3, line: 4150, type: !105)
!17845 = !DILocation(line: 4150, column: 41, scope: !17837)
!17846 = !DILocalVariable(name: "rows", arg: 4, scope: !17837, file: !3, line: 4150, type: !105)
!17847 = !DILocation(line: 4150, column: 54, scope: !17837)
!17848 = !DILocalVariable(name: "imagewidth", arg: 5, scope: !17837, file: !3, line: 4150, type: !105)
!17849 = !DILocation(line: 4150, column: 67, scope: !17837)
!17850 = !DILocalVariable(name: "tw", arg: 6, scope: !17837, file: !3, line: 4151, type: !105)
!17851 = !DILocation(line: 4151, column: 41, scope: !17837)
!17852 = !DILocalVariable(name: "spp", arg: 7, scope: !17837, file: !3, line: 4151, type: !103)
!17853 = !DILocation(line: 4151, column: 52, scope: !17837)
!17854 = !DILocalVariable(name: "bps", arg: 8, scope: !17837, file: !3, line: 4151, type: !103)
!17855 = !DILocation(line: 4151, column: 64, scope: !17837)
!17856 = !DILocalVariable(name: "dumpfile", arg: 9, scope: !17837, file: !3, line: 4152, type: !470)
!17857 = !DILocation(line: 4152, column: 40, scope: !17837)
!17858 = !DILocalVariable(name: "format", arg: 10, scope: !17837, file: !3, line: 4152, type: !110)
!17859 = !DILocation(line: 4152, column: 54, scope: !17837)
!17860 = !DILocalVariable(name: "level", arg: 11, scope: !17837, file: !3, line: 4152, type: !110)
!17861 = !DILocation(line: 4152, column: 66, scope: !17837)
!17862 = !DILocalVariable(name: "i", scope: !17837, file: !3, line: 4154, type: !110)
!17863 = !DILocation(line: 4154, column: 7, scope: !17837)
!17864 = !DILocalVariable(name: "bytes_per_sample", scope: !17837, file: !3, line: 4154, type: !110)
!17865 = !DILocation(line: 4154, column: 10, scope: !17837)
!17866 = !DILocalVariable(name: "row", scope: !17837, file: !3, line: 4155, type: !105)
!17867 = !DILocation(line: 4155, column: 10, scope: !17837)
!17868 = !DILocalVariable(name: "col", scope: !17837, file: !3, line: 4155, type: !105)
!17869 = !DILocation(line: 4155, column: 15, scope: !17837)
!17870 = !DILocalVariable(name: "col_offset", scope: !17837, file: !3, line: 4155, type: !105)
!17871 = !DILocation(line: 4155, column: 20, scope: !17837)
!17872 = !DILocalVariable(name: "src_rowsize", scope: !17837, file: !3, line: 4155, type: !105)
!17873 = !DILocation(line: 4155, column: 32, scope: !17837)
!17874 = !DILocalVariable(name: "dst_rowsize", scope: !17837, file: !3, line: 4155, type: !105)
!17875 = !DILocation(line: 4155, column: 45, scope: !17837)
!17876 = !DILocalVariable(name: "src_offset", scope: !17837, file: !3, line: 4155, type: !105)
!17877 = !DILocation(line: 4155, column: 58, scope: !17837)
!17878 = !DILocalVariable(name: "src", scope: !17837, file: !3, line: 4156, type: !106)
!17879 = !DILocation(line: 4156, column: 18, scope: !17837)
!17880 = !DILocalVariable(name: "dst", scope: !17837, file: !3, line: 4157, type: !106)
!17881 = !DILocation(line: 4157, column: 18, scope: !17837)
!17882 = !DILocalVariable(name: "s", scope: !17837, file: !3, line: 4158, type: !7616)
!17883 = !DILocation(line: 4158, column: 13, scope: !17837)
!17884 = !DILocation(line: 4160, column: 9, scope: !17837)
!17885 = !DILocation(line: 4160, column: 7, scope: !17837)
!17886 = !DILocation(line: 4161, column: 9, scope: !17837)
!17887 = !DILocation(line: 4161, column: 7, scope: !17837)
!17888 = !DILocation(line: 4162, column: 8, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17837, file: !3, line: 4162, column: 7)
!17890 = !DILocation(line: 4162, column: 12, scope: !17889)
!17891 = !DILocation(line: 4162, column: 21, scope: !17889)
!17892 = !DILocation(line: 4162, column: 25, scope: !17889)
!17893 = !DILocation(line: 4162, column: 29, scope: !17889)
!17894 = !DILocation(line: 4162, column: 7, scope: !17837)
!17895 = !DILocation(line: 4164, column: 5, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17889, file: !3, line: 4163, column: 5)
!17897 = !DILocation(line: 4165, column: 5, scope: !17896)
!17898 = !DILocation(line: 4168, column: 23, scope: !17837)
!17899 = !DILocation(line: 4168, column: 27, scope: !17837)
!17900 = !DILocation(line: 4168, column: 32, scope: !17837)
!17901 = !DILocation(line: 4168, column: 20, scope: !17837)
!17902 = !DILocation(line: 4169, column: 19, scope: !17837)
!17903 = !DILocation(line: 4169, column: 25, scope: !17837)
!17904 = !DILocation(line: 4169, column: 23, scope: !17837)
!17905 = !DILocation(line: 4169, column: 29, scope: !17837)
!17906 = !DILocation(line: 4169, column: 34, scope: !17837)
!17907 = !DILocation(line: 4169, column: 15, scope: !17837)
!17908 = !DILocation(line: 4170, column: 17, scope: !17837)
!17909 = !DILocation(line: 4170, column: 30, scope: !17837)
!17910 = !DILocation(line: 4170, column: 28, scope: !17837)
!17911 = !DILocation(line: 4170, column: 49, scope: !17837)
!17912 = !DILocation(line: 4170, column: 47, scope: !17837)
!17913 = !DILocation(line: 4170, column: 15, scope: !17837)
!17914 = !DILocation(line: 4171, column: 12, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17837, file: !3, line: 4171, column: 3)
!17916 = !DILocation(line: 4171, column: 8, scope: !17915)
!17917 = !DILocation(line: 4171, column: 17, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 4171, column: 3)
!17919 = !DILocation(line: 4171, column: 23, scope: !17918)
!17920 = !DILocation(line: 4171, column: 21, scope: !17918)
!17921 = !DILocation(line: 4171, column: 3, scope: !17915)
!17922 = !DILocation(line: 4173, column: 10, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 4173, column: 9)
!17924 = distinct !DILexicalBlock(scope: !17918, file: !3, line: 4172, column: 5)
!17925 = !DILocation(line: 4173, column: 19, scope: !17923)
!17926 = !DILocation(line: 4173, column: 28, scope: !17923)
!17927 = !DILocation(line: 4173, column: 32, scope: !17923)
!17928 = !DILocation(line: 4173, column: 38, scope: !17923)
!17929 = !DILocation(line: 4173, column: 9, scope: !17924)
!17930 = !DILocation(line: 4175, column: 14, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !17932, file: !3, line: 4175, column: 7)
!17932 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 4174, column: 7)
!17933 = !DILocation(line: 4175, column: 12, scope: !17931)
!17934 = !DILocation(line: 4175, column: 19, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17931, file: !3, line: 4175, column: 7)
!17936 = !DILocation(line: 4175, column: 23, scope: !17935)
!17937 = !DILocation(line: 4175, column: 21, scope: !17935)
!17938 = !DILocation(line: 4175, column: 7, scope: !17931)
!17939 = !DILocation(line: 4177, column: 20, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 4176, column: 9)
!17941 = !DILocation(line: 4177, column: 30, scope: !17940)
!17942 = !DILocation(line: 4177, column: 97, scope: !17940)
!17943 = !DILocation(line: 4177, column: 9, scope: !17940)
!17944 = !DILocation(line: 4178, column: 21, scope: !17940)
!17945 = !DILocation(line: 4178, column: 31, scope: !17940)
!17946 = !DILocation(line: 4178, column: 42, scope: !17940)
!17947 = !DILocation(line: 4178, column: 48, scope: !17940)
!17948 = !DILocation(line: 4178, column: 53, scope: !17940)
!17949 = !DILocation(line: 4178, column: 62, scope: !17940)
!17950 = !DILocation(line: 4178, column: 68, scope: !17940)
!17951 = !DILocation(line: 4178, column: 74, scope: !17940)
!17952 = !DILocation(line: 4178, column: 72, scope: !17940)
!17953 = !DILocation(line: 4178, column: 65, scope: !17940)
!17954 = !DILocation(line: 4178, column: 9, scope: !17940)
!17955 = !DILocation(line: 4179, column: 9, scope: !17940)
!17956 = !DILocation(line: 4175, column: 29, scope: !17935)
!17957 = !DILocation(line: 4175, column: 7, scope: !17935)
!17958 = distinct !{!17958, !17938, !17959}
!17959 = !DILocation(line: 4179, column: 9, scope: !17931)
!17960 = !DILocation(line: 4180, column: 7, scope: !17932)
!17961 = !DILocation(line: 4181, column: 11, scope: !17924)
!17962 = !DILocation(line: 4181, column: 18, scope: !17924)
!17963 = !DILocation(line: 4181, column: 24, scope: !17924)
!17964 = !DILocation(line: 4181, column: 22, scope: !17924)
!17965 = !DILocation(line: 4181, column: 15, scope: !17924)
!17966 = !DILocation(line: 4181, column: 9, scope: !17924)
!17967 = !DILocation(line: 4182, column: 18, scope: !17924)
!17968 = !DILocation(line: 4182, column: 24, scope: !17924)
!17969 = !DILocation(line: 4182, column: 22, scope: !17924)
!17970 = !DILocation(line: 4182, column: 16, scope: !17924)
!17971 = !DILocation(line: 4187, column: 14, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 4187, column: 5)
!17973 = !DILocation(line: 4187, column: 10, scope: !17972)
!17974 = !DILocation(line: 4187, column: 19, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17972, file: !3, line: 4187, column: 5)
!17976 = !DILocation(line: 4187, column: 25, scope: !17975)
!17977 = !DILocation(line: 4187, column: 23, scope: !17975)
!17978 = !DILocation(line: 4187, column: 5, scope: !17972)
!17979 = !DILocation(line: 4189, column: 20, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17975, file: !3, line: 4188, column: 7)
!17981 = !DILocation(line: 4189, column: 34, scope: !17980)
!17982 = !DILocation(line: 4189, column: 41, scope: !17980)
!17983 = !DILocation(line: 4189, column: 45, scope: !17980)
!17984 = !DILocation(line: 4189, column: 38, scope: !17980)
!17985 = !DILocation(line: 4189, column: 31, scope: !17980)
!17986 = !DILocation(line: 4189, column: 18, scope: !17980)
!17987 = !DILocation(line: 4190, column: 14, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17980, file: !3, line: 4190, column: 7)
!17989 = !DILocation(line: 4190, column: 12, scope: !17988)
!17990 = !DILocation(line: 4190, column: 20, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !17988, file: !3, line: 4190, column: 7)
!17992 = !DILocation(line: 4190, column: 24, scope: !17991)
!17993 = !DILocation(line: 4190, column: 22, scope: !17991)
!17994 = !DILocation(line: 4190, column: 29, scope: !17991)
!17995 = !DILocation(line: 4190, column: 33, scope: !17991)
!17996 = !DILocation(line: 4190, column: 35, scope: !17991)
!17997 = !DILocation(line: 0, scope: !17991)
!17998 = !DILocation(line: 4190, column: 7, scope: !17988)
!17999 = !DILocation(line: 4192, column: 15, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17991, file: !3, line: 4191, column: 9)
!18001 = !DILocation(line: 4192, column: 24, scope: !18000)
!18002 = !DILocation(line: 4192, column: 29, scope: !18000)
!18003 = !DILocation(line: 4192, column: 27, scope: !18000)
!18004 = !DILocation(line: 4192, column: 13, scope: !18000)
!18005 = !DILocation(line: 4193, column: 16, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !18000, file: !3, line: 4193, column: 9)
!18007 = !DILocation(line: 4193, column: 14, scope: !18006)
!18008 = !DILocation(line: 4193, column: 21, scope: !18009)
!18009 = distinct !DILexicalBlock(scope: !18006, file: !3, line: 4193, column: 9)
!18010 = !DILocation(line: 4193, column: 25, scope: !18009)
!18011 = !DILocation(line: 4193, column: 23, scope: !18009)
!18012 = !DILocation(line: 4193, column: 9, scope: !18006)
!18013 = !DILocation(line: 4194, column: 26, scope: !18009)
!18014 = !DILocation(line: 4194, column: 32, scope: !18009)
!18015 = !DILocation(line: 4194, column: 30, scope: !18009)
!18016 = !DILocation(line: 4194, column: 24, scope: !18009)
!18017 = !DILocation(line: 4194, column: 13, scope: !18009)
!18018 = !DILocation(line: 4194, column: 19, scope: !18009)
!18019 = !DILocation(line: 4194, column: 17, scope: !18009)
!18020 = !DILocation(line: 4194, column: 22, scope: !18009)
!18021 = !DILocation(line: 4194, column: 11, scope: !18009)
!18022 = !DILocation(line: 4193, column: 44, scope: !18009)
!18023 = !DILocation(line: 4193, column: 9, scope: !18009)
!18024 = distinct !{!18024, !18012, !18025}
!18025 = !DILocation(line: 4194, column: 33, scope: !18006)
!18026 = !DILocation(line: 4195, column: 16, scope: !18000)
!18027 = !DILocation(line: 4195, column: 13, scope: !18000)
!18028 = !DILocation(line: 4196, column: 9, scope: !18000)
!18029 = !DILocation(line: 4190, column: 52, scope: !17991)
!18030 = !DILocation(line: 4190, column: 7, scope: !17991)
!18031 = distinct !{!18031, !17998, !18032}
!18032 = !DILocation(line: 4196, column: 9, scope: !17988)
!18033 = !DILocation(line: 4197, column: 7, scope: !17980)
!18034 = !DILocation(line: 4187, column: 34, scope: !17975)
!18035 = !DILocation(line: 4187, column: 5, scope: !17975)
!18036 = distinct !{!18036, !17978, !18037}
!18037 = !DILocation(line: 4197, column: 7, scope: !17972)
!18038 = !DILocation(line: 4199, column: 10, scope: !18039)
!18039 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 4199, column: 9)
!18040 = !DILocation(line: 4199, column: 19, scope: !18039)
!18041 = !DILocation(line: 4199, column: 28, scope: !18039)
!18042 = !DILocation(line: 4199, column: 32, scope: !18039)
!18043 = !DILocation(line: 4199, column: 38, scope: !18039)
!18044 = !DILocation(line: 4199, column: 9, scope: !17924)
!18045 = !DILocation(line: 4201, column: 18, scope: !18046)
!18046 = distinct !DILexicalBlock(scope: !18039, file: !3, line: 4200, column: 7)
!18047 = !DILocation(line: 4201, column: 28, scope: !18046)
!18048 = !DILocation(line: 4201, column: 7, scope: !18046)
!18049 = !DILocation(line: 4202, column: 19, scope: !18046)
!18050 = !DILocation(line: 4202, column: 29, scope: !18046)
!18051 = !DILocation(line: 4202, column: 40, scope: !18046)
!18052 = !DILocation(line: 4202, column: 53, scope: !18046)
!18053 = !DILocation(line: 4202, column: 58, scope: !18046)
!18054 = !DILocation(line: 4202, column: 65, scope: !18046)
!18055 = !DILocation(line: 4202, column: 71, scope: !18046)
!18056 = !DILocation(line: 4202, column: 69, scope: !18046)
!18057 = !DILocation(line: 4202, column: 62, scope: !18046)
!18058 = !DILocation(line: 4202, column: 7, scope: !18046)
!18059 = !DILocation(line: 4203, column: 7, scope: !18046)
!18060 = !DILocation(line: 4204, column: 5, scope: !17924)
!18061 = !DILocation(line: 4171, column: 32, scope: !17918)
!18062 = !DILocation(line: 4171, column: 3, scope: !17918)
!18063 = distinct !{!18063, !17921, !18064}
!18064 = !DILocation(line: 4204, column: 5, scope: !17915)
!18065 = !DILocation(line: 4206, column: 3, scope: !17837)
!18066 = !DILocation(line: 4207, column: 3, scope: !17837)
!18067 = distinct !DISubprogram(name: "combineSeparateTileSamples8bits", scope: !3, file: !3, line: 4210, type: !18068, scopeLine: 4214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!18068 = !DISubroutineType(types: !18069)
!18069 = !{!110, !18070, !116, !105, !105, !105, !105, !103, !103, !470, !110, !110}
!18070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!18071 = !DILocalVariable(name: "in", arg: 1, scope: !18067, file: !3, line: 4210, type: !18070)
!18072 = !DILocation(line: 4210, column: 41, scope: !18067)
!18073 = !DILocalVariable(name: "out", arg: 2, scope: !18067, file: !3, line: 4210, type: !116)
!18074 = !DILocation(line: 4210, column: 54, scope: !18067)
!18075 = !DILocalVariable(name: "cols", arg: 3, scope: !18067, file: !3, line: 4210, type: !105)
!18076 = !DILocation(line: 4210, column: 66, scope: !18067)
!18077 = !DILocalVariable(name: "rows", arg: 4, scope: !18067, file: !3, line: 4211, type: !105)
!18078 = !DILocation(line: 4211, column: 41, scope: !18067)
!18079 = !DILocalVariable(name: "imagewidth", arg: 5, scope: !18067, file: !3, line: 4211, type: !105)
!18080 = !DILocation(line: 4211, column: 54, scope: !18067)
!18081 = !DILocalVariable(name: "tw", arg: 6, scope: !18067, file: !3, line: 4212, type: !105)
!18082 = !DILocation(line: 4212, column: 41, scope: !18067)
!18083 = !DILocalVariable(name: "spp", arg: 7, scope: !18067, file: !3, line: 4212, type: !103)
!18084 = !DILocation(line: 4212, column: 52, scope: !18067)
!18085 = !DILocalVariable(name: "bps", arg: 8, scope: !18067, file: !3, line: 4212, type: !103)
!18086 = !DILocation(line: 4212, column: 64, scope: !18067)
!18087 = !DILocalVariable(name: "dumpfile", arg: 9, scope: !18067, file: !3, line: 4213, type: !470)
!18088 = !DILocation(line: 4213, column: 34, scope: !18067)
!18089 = !DILocalVariable(name: "format", arg: 10, scope: !18067, file: !3, line: 4213, type: !110)
!18090 = !DILocation(line: 4213, column: 48, scope: !18067)
!18091 = !DILocalVariable(name: "level", arg: 11, scope: !18067, file: !3, line: 4213, type: !110)
!18092 = !DILocation(line: 4213, column: 60, scope: !18067)
!18093 = !DILocalVariable(name: "ready_bits", scope: !18067, file: !3, line: 4215, type: !110)
!18094 = !DILocation(line: 4215, column: 10, scope: !18067)
!18095 = !DILocalVariable(name: "src_rowsize", scope: !18067, file: !3, line: 4216, type: !105)
!18096 = !DILocation(line: 4216, column: 10, scope: !18067)
!18097 = !DILocalVariable(name: "dst_rowsize", scope: !18067, file: !3, line: 4216, type: !105)
!18098 = !DILocation(line: 4216, column: 23, scope: !18067)
!18099 = !DILocalVariable(name: "src_offset", scope: !18067, file: !3, line: 4216, type: !105)
!18100 = !DILocation(line: 4216, column: 36, scope: !18067)
!18101 = !DILocalVariable(name: "bit_offset", scope: !18067, file: !3, line: 4217, type: !105)
!18102 = !DILocation(line: 4217, column: 10, scope: !18067)
!18103 = !DILocalVariable(name: "row", scope: !18067, file: !3, line: 4218, type: !105)
!18104 = !DILocation(line: 4218, column: 10, scope: !18067)
!18105 = !DILocalVariable(name: "col", scope: !18067, file: !3, line: 4218, type: !105)
!18106 = !DILocation(line: 4218, column: 15, scope: !18067)
!18107 = !DILocalVariable(name: "src_byte", scope: !18067, file: !3, line: 4218, type: !105)
!18108 = !DILocation(line: 4218, column: 20, scope: !18067)
!18109 = !DILocalVariable(name: "src_bit", scope: !18067, file: !3, line: 4218, type: !105)
!18110 = !DILocation(line: 4218, column: 34, scope: !18067)
!18111 = !DILocalVariable(name: "maskbits", scope: !18067, file: !3, line: 4219, type: !114)
!18112 = !DILocation(line: 4219, column: 10, scope: !18067)
!18113 = !DILocalVariable(name: "matchbits", scope: !18067, file: !3, line: 4219, type: !114)
!18114 = !DILocation(line: 4219, column: 24, scope: !18067)
!18115 = !DILocalVariable(name: "buff1", scope: !18067, file: !3, line: 4220, type: !114)
!18116 = !DILocation(line: 4220, column: 10, scope: !18067)
!18117 = !DILocalVariable(name: "buff2", scope: !18067, file: !3, line: 4220, type: !114)
!18118 = !DILocation(line: 4220, column: 21, scope: !18067)
!18119 = !DILocalVariable(name: "s", scope: !18067, file: !3, line: 4221, type: !7616)
!18120 = !DILocation(line: 4221, column: 13, scope: !18067)
!18121 = !DILocalVariable(name: "src", scope: !18067, file: !3, line: 4222, type: !106)
!18122 = !DILocation(line: 4222, column: 18, scope: !18067)
!18123 = !DILocation(line: 4222, column: 24, scope: !18067)
!18124 = !DILocalVariable(name: "dst", scope: !18067, file: !3, line: 4223, type: !106)
!18125 = !DILocation(line: 4223, column: 18, scope: !18067)
!18126 = !DILocation(line: 4223, column: 24, scope: !18067)
!18127 = !DILocalVariable(name: "action", scope: !18067, file: !3, line: 4224, type: !18128)
!18128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 256, elements: !2054)
!18129 = !DILocation(line: 4224, column: 18, scope: !18067)
!18130 = !DILocation(line: 4226, column: 8, scope: !18131)
!18131 = distinct !DILexicalBlock(scope: !18067, file: !3, line: 4226, column: 7)
!18132 = !DILocation(line: 4226, column: 12, scope: !18131)
!18133 = !DILocation(line: 4226, column: 21, scope: !18131)
!18134 = !DILocation(line: 4226, column: 25, scope: !18131)
!18135 = !DILocation(line: 4226, column: 29, scope: !18131)
!18136 = !DILocation(line: 4226, column: 7, scope: !18067)
!18137 = !DILocation(line: 4228, column: 5, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18131, file: !3, line: 4227, column: 5)
!18139 = !DILocation(line: 4229, column: 5, scope: !18138)
!18140 = !DILocation(line: 4232, column: 19, scope: !18067)
!18141 = !DILocation(line: 4232, column: 25, scope: !18067)
!18142 = !DILocation(line: 4232, column: 23, scope: !18067)
!18143 = !DILocation(line: 4232, column: 29, scope: !18067)
!18144 = !DILocation(line: 4232, column: 34, scope: !18067)
!18145 = !DILocation(line: 4232, column: 15, scope: !18067)
!18146 = !DILocation(line: 4233, column: 19, scope: !18067)
!18147 = !DILocation(line: 4233, column: 32, scope: !18067)
!18148 = !DILocation(line: 4233, column: 30, scope: !18067)
!18149 = !DILocation(line: 4233, column: 38, scope: !18067)
!18150 = !DILocation(line: 4233, column: 36, scope: !18067)
!18151 = !DILocation(line: 4233, column: 43, scope: !18067)
!18152 = !DILocation(line: 4233, column: 48, scope: !18067)
!18153 = !DILocation(line: 4233, column: 15, scope: !18067)
!18154 = !DILocation(line: 4234, column: 34, scope: !18067)
!18155 = !DILocation(line: 4234, column: 32, scope: !18067)
!18156 = !DILocation(line: 4234, column: 25, scope: !18067)
!18157 = !DILocation(line: 4234, column: 15, scope: !18067)
!18158 = !DILocation(line: 4234, column: 12, scope: !18067)
!18159 = !DILocation(line: 4236, column: 12, scope: !18160)
!18160 = distinct !DILexicalBlock(scope: !18067, file: !3, line: 4236, column: 3)
!18161 = !DILocation(line: 4236, column: 8, scope: !18160)
!18162 = !DILocation(line: 4236, column: 17, scope: !18163)
!18163 = distinct !DILexicalBlock(scope: !18160, file: !3, line: 4236, column: 3)
!18164 = !DILocation(line: 4236, column: 23, scope: !18163)
!18165 = !DILocation(line: 4236, column: 21, scope: !18163)
!18166 = !DILocation(line: 4236, column: 3, scope: !18160)
!18167 = !DILocation(line: 4238, column: 16, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18163, file: !3, line: 4237, column: 5)
!18169 = !DILocation(line: 4239, column: 19, scope: !18168)
!18170 = !DILocation(line: 4239, column: 11, scope: !18168)
!18171 = !DILocation(line: 4240, column: 11, scope: !18168)
!18172 = !DILocation(line: 4240, column: 18, scope: !18168)
!18173 = !DILocation(line: 4240, column: 24, scope: !18168)
!18174 = !DILocation(line: 4240, column: 22, scope: !18168)
!18175 = !DILocation(line: 4240, column: 15, scope: !18168)
!18176 = !DILocation(line: 4240, column: 9, scope: !18168)
!18177 = !DILocation(line: 4241, column: 18, scope: !18168)
!18178 = !DILocation(line: 4241, column: 24, scope: !18168)
!18179 = !DILocation(line: 4241, column: 22, scope: !18168)
!18180 = !DILocation(line: 4241, column: 16, scope: !18168)
!18181 = !DILocation(line: 4242, column: 14, scope: !18182)
!18182 = distinct !DILexicalBlock(scope: !18168, file: !3, line: 4242, column: 5)
!18183 = !DILocation(line: 4242, column: 10, scope: !18182)
!18184 = !DILocation(line: 4242, column: 19, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18182, file: !3, line: 4242, column: 5)
!18186 = !DILocation(line: 4242, column: 25, scope: !18185)
!18187 = !DILocation(line: 4242, column: 23, scope: !18185)
!18188 = !DILocation(line: 4242, column: 5, scope: !18182)
!18189 = !DILocation(line: 4245, column: 20, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18185, file: !3, line: 4243, column: 7)
!18191 = !DILocation(line: 4245, column: 26, scope: !18190)
!18192 = !DILocation(line: 4245, column: 24, scope: !18190)
!18193 = !DILocation(line: 4245, column: 18, scope: !18190)
!18194 = !DILocation(line: 4246, column: 18, scope: !18190)
!18195 = !DILocation(line: 4246, column: 29, scope: !18190)
!18196 = !DILocation(line: 4246, column: 16, scope: !18190)
!18197 = !DILocation(line: 4247, column: 18, scope: !18190)
!18198 = !DILocation(line: 4247, column: 29, scope: !18190)
!18199 = !DILocation(line: 4247, column: 16, scope: !18190)
!18200 = !DILocation(line: 4249, column: 19, scope: !18190)
!18201 = !DILocation(line: 4249, column: 36, scope: !18190)
!18202 = !DILocation(line: 4249, column: 34, scope: !18190)
!18203 = !DILocation(line: 4249, column: 46, scope: !18190)
!18204 = !DILocation(line: 4249, column: 44, scope: !18190)
!18205 = !DILocation(line: 4249, column: 28, scope: !18190)
!18206 = !DILocation(line: 4249, column: 17, scope: !18190)
!18207 = !DILocation(line: 4251, column: 14, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18190, file: !3, line: 4251, column: 7)
!18209 = !DILocation(line: 4251, column: 12, scope: !18208)
!18210 = !DILocation(line: 4251, column: 19, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18208, file: !3, line: 4251, column: 7)
!18212 = !DILocation(line: 4251, column: 23, scope: !18211)
!18213 = !DILocation(line: 4251, column: 21, scope: !18211)
!18214 = !DILocation(line: 4251, column: 7, scope: !18208)
!18215 = !DILocation(line: 4253, column: 8, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18211, file: !3, line: 4252, column: 9)
!18217 = !DILocation(line: 4253, column: 11, scope: !18216)
!18218 = !DILocation(line: 4253, column: 16, scope: !18216)
!18219 = !DILocation(line: 4253, column: 14, scope: !18216)
!18220 = !DILocation(line: 4253, column: 29, scope: !18216)
!18221 = !DILocation(line: 4253, column: 27, scope: !18216)
!18222 = !DILocation(line: 4253, column: 6, scope: !18216)
!18223 = !DILocation(line: 4254, column: 20, scope: !18216)
!18224 = !DILocation(line: 4254, column: 19, scope: !18216)
!18225 = !DILocation(line: 4254, column: 18, scope: !18216)
!18226 = !DILocation(line: 4254, column: 27, scope: !18216)
!18227 = !DILocation(line: 4254, column: 25, scope: !18216)
!18228 = !DILocation(line: 4254, column: 42, scope: !18216)
!18229 = !DILocation(line: 4254, column: 38, scope: !18216)
!18230 = !DILocation(line: 4254, column: 17, scope: !18216)
!18231 = !DILocation(line: 4254, column: 15, scope: !18216)
!18232 = !DILocation(line: 4257, column: 13, scope: !18233)
!18233 = distinct !DILexicalBlock(scope: !18216, file: !3, line: 4257, column: 13)
!18234 = !DILocation(line: 4257, column: 24, scope: !18233)
!18235 = !DILocation(line: 4257, column: 13, scope: !18216)
!18236 = !DILocation(line: 4259, column: 20, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 4258, column: 11)
!18238 = !DILocation(line: 4259, column: 15, scope: !18237)
!18239 = !DILocation(line: 4259, column: 18, scope: !18237)
!18240 = !DILocation(line: 4260, column: 19, scope: !18237)
!18241 = !DILocation(line: 4260, column: 17, scope: !18237)
!18242 = !DILocation(line: 4261, column: 22, scope: !18237)
!18243 = !DILocation(line: 4262, column: 19, scope: !18237)
!18244 = !DILocation(line: 4262, column: 11, scope: !18237)
!18245 = !DILocation(line: 4263, column: 11, scope: !18237)
!18246 = !DILocation(line: 4266, column: 20, scope: !18247)
!18247 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 4265, column: 11)
!18248 = !DILocation(line: 4266, column: 29, scope: !18247)
!18249 = !DILocation(line: 4266, column: 38, scope: !18247)
!18250 = !DILocation(line: 4266, column: 35, scope: !18247)
!18251 = !DILocation(line: 4266, column: 26, scope: !18247)
!18252 = !DILocation(line: 4266, column: 19, scope: !18247)
!18253 = !DILocation(line: 4266, column: 17, scope: !18247)
!18254 = !DILocation(line: 4267, column: 19, scope: !18247)
!18255 = !DILocation(line: 4267, column: 11, scope: !18247)
!18256 = !DILocation(line: 4269, column: 23, scope: !18216)
!18257 = !DILocation(line: 4269, column: 20, scope: !18216)
!18258 = !DILocation(line: 4271, column: 14, scope: !18259)
!18259 = distinct !DILexicalBlock(scope: !18216, file: !3, line: 4271, column: 13)
!18260 = !DILocation(line: 4271, column: 23, scope: !18259)
!18261 = !DILocation(line: 4271, column: 32, scope: !18259)
!18262 = !DILocation(line: 4271, column: 36, scope: !18259)
!18263 = !DILocation(line: 4271, column: 42, scope: !18259)
!18264 = !DILocation(line: 4271, column: 13, scope: !18216)
!18265 = !DILocation(line: 4273, column: 22, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18259, file: !3, line: 4272, column: 11)
!18267 = !DILocation(line: 4273, column: 32, scope: !18266)
!18268 = !DILocation(line: 4275, column: 6, scope: !18266)
!18269 = !DILocation(line: 4275, column: 10, scope: !18266)
!18270 = !DILocation(line: 4275, column: 15, scope: !18266)
!18271 = !DILocation(line: 4275, column: 19, scope: !18266)
!18272 = !DILocation(line: 4275, column: 24, scope: !18266)
!18273 = !DILocation(line: 4275, column: 27, scope: !18266)
!18274 = !DILocation(line: 4275, column: 37, scope: !18266)
!18275 = !DILocation(line: 4275, column: 46, scope: !18266)
!18276 = !DILocation(line: 4275, column: 52, scope: !18266)
!18277 = !DILocation(line: 4275, column: 50, scope: !18266)
!18278 = !DILocation(line: 4273, column: 11, scope: !18266)
!18279 = !DILocation(line: 4276, column: 22, scope: !18266)
!18280 = !DILocation(line: 4276, column: 32, scope: !18266)
!18281 = !DILocation(line: 4276, column: 54, scope: !18266)
!18282 = !DILocation(line: 4276, column: 11, scope: !18266)
!18283 = !DILocation(line: 4277, column: 22, scope: !18266)
!18284 = !DILocation(line: 4277, column: 32, scope: !18266)
!18285 = !DILocation(line: 4277, column: 55, scope: !18266)
!18286 = !DILocation(line: 4277, column: 54, scope: !18266)
!18287 = !DILocation(line: 4277, column: 11, scope: !18266)
!18288 = !DILocation(line: 4278, column: 22, scope: !18266)
!18289 = !DILocation(line: 4278, column: 32, scope: !18266)
!18290 = !DILocation(line: 4278, column: 54, scope: !18266)
!18291 = !DILocation(line: 4278, column: 11, scope: !18266)
!18292 = !DILocation(line: 4279, column: 22, scope: !18266)
!18293 = !DILocation(line: 4279, column: 32, scope: !18266)
!18294 = !DILocation(line: 4279, column: 54, scope: !18266)
!18295 = !DILocation(line: 4279, column: 11, scope: !18266)
!18296 = !DILocation(line: 4280, column: 22, scope: !18266)
!18297 = !DILocation(line: 4280, column: 32, scope: !18266)
!18298 = !DILocation(line: 4280, column: 49, scope: !18266)
!18299 = !DILocation(line: 4280, column: 11, scope: !18266)
!18300 = !DILocation(line: 4281, column: 4, scope: !18266)
!18301 = !DILocation(line: 4282, column: 9, scope: !18216)
!18302 = !DILocation(line: 4251, column: 29, scope: !18211)
!18303 = !DILocation(line: 4251, column: 7, scope: !18211)
!18304 = distinct !{!18304, !18214, !18305}
!18305 = !DILocation(line: 4282, column: 9, scope: !18208)
!18306 = !DILocation(line: 4283, column: 7, scope: !18190)
!18307 = !DILocation(line: 4242, column: 34, scope: !18185)
!18308 = !DILocation(line: 4242, column: 5, scope: !18185)
!18309 = distinct !{!18309, !18188, !18310}
!18310 = !DILocation(line: 4283, column: 7, scope: !18182)
!18311 = !DILocation(line: 4285, column: 9, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18168, file: !3, line: 4285, column: 9)
!18313 = !DILocation(line: 4285, column: 20, scope: !18312)
!18314 = !DILocation(line: 4285, column: 9, scope: !18168)
!18315 = !DILocation(line: 4287, column: 16, scope: !18316)
!18316 = distinct !DILexicalBlock(scope: !18312, file: !3, line: 4286, column: 7)
!18317 = !DILocation(line: 4287, column: 51, scope: !18316)
!18318 = !DILocation(line: 4287, column: 49, scope: !18316)
!18319 = !DILocation(line: 4287, column: 43, scope: !18316)
!18320 = !DILocation(line: 4287, column: 22, scope: !18316)
!18321 = !DILocation(line: 4287, column: 15, scope: !18316)
!18322 = !DILocation(line: 4287, column: 13, scope: !18316)
!18323 = !DILocation(line: 4288, column: 16, scope: !18316)
!18324 = !DILocation(line: 4288, column: 11, scope: !18316)
!18325 = !DILocation(line: 4288, column: 14, scope: !18316)
!18326 = !DILocation(line: 4289, column: 12, scope: !18327)
!18327 = distinct !DILexicalBlock(scope: !18316, file: !3, line: 4289, column: 11)
!18328 = !DILocation(line: 4289, column: 21, scope: !18327)
!18329 = !DILocation(line: 4289, column: 30, scope: !18327)
!18330 = !DILocation(line: 4289, column: 34, scope: !18327)
!18331 = !DILocation(line: 4289, column: 40, scope: !18327)
!18332 = !DILocation(line: 4289, column: 11, scope: !18316)
!18333 = !DILocation(line: 4291, column: 20, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18327, file: !3, line: 4290, column: 9)
!18335 = !DILocation(line: 4291, column: 30, scope: !18334)
!18336 = !DILocation(line: 4293, column: 11, scope: !18334)
!18337 = !DILocation(line: 4293, column: 15, scope: !18334)
!18338 = !DILocation(line: 4293, column: 20, scope: !18334)
!18339 = !DILocation(line: 4293, column: 24, scope: !18334)
!18340 = !DILocation(line: 4293, column: 29, scope: !18334)
!18341 = !DILocation(line: 4293, column: 39, scope: !18334)
!18342 = !DILocation(line: 4293, column: 48, scope: !18334)
!18343 = !DILocation(line: 4293, column: 54, scope: !18334)
!18344 = !DILocation(line: 4293, column: 52, scope: !18334)
!18345 = !DILocation(line: 4291, column: 9, scope: !18334)
!18346 = !DILocation(line: 4294, column: 29, scope: !18334)
!18347 = !DILocation(line: 4294, column: 39, scope: !18334)
!18348 = !DILocation(line: 4294, column: 61, scope: !18334)
!18349 = !DILocation(line: 4294, column: 18, scope: !18334)
!18350 = !DILocation(line: 4295, column: 9, scope: !18334)
!18351 = !DILocation(line: 4296, column: 7, scope: !18316)
!18352 = !DILocation(line: 4298, column: 10, scope: !18353)
!18353 = distinct !DILexicalBlock(scope: !18168, file: !3, line: 4298, column: 9)
!18354 = !DILocation(line: 4298, column: 19, scope: !18353)
!18355 = !DILocation(line: 4298, column: 28, scope: !18353)
!18356 = !DILocation(line: 4298, column: 32, scope: !18353)
!18357 = !DILocation(line: 4298, column: 38, scope: !18353)
!18358 = !DILocation(line: 4298, column: 9, scope: !18168)
!18359 = !DILocation(line: 4300, column: 18, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18353, file: !3, line: 4299, column: 7)
!18361 = !DILocation(line: 4300, column: 28, scope: !18360)
!18362 = !DILocation(line: 4300, column: 7, scope: !18360)
!18363 = !DILocation(line: 4301, column: 19, scope: !18360)
!18364 = !DILocation(line: 4301, column: 29, scope: !18360)
!18365 = !DILocation(line: 4301, column: 40, scope: !18360)
!18366 = !DILocation(line: 4301, column: 53, scope: !18360)
!18367 = !DILocation(line: 4301, column: 58, scope: !18360)
!18368 = !DILocation(line: 4301, column: 65, scope: !18360)
!18369 = !DILocation(line: 4301, column: 71, scope: !18360)
!18370 = !DILocation(line: 4301, column: 69, scope: !18360)
!18371 = !DILocation(line: 4301, column: 62, scope: !18360)
!18372 = !DILocation(line: 4301, column: 7, scope: !18360)
!18373 = !DILocation(line: 4302, column: 7, scope: !18360)
!18374 = !DILocation(line: 4303, column: 5, scope: !18168)
!18375 = !DILocation(line: 4236, column: 32, scope: !18163)
!18376 = !DILocation(line: 4236, column: 3, scope: !18163)
!18377 = distinct !{!18377, !18166, !18378}
!18378 = !DILocation(line: 4303, column: 5, scope: !18160)
!18379 = !DILocation(line: 4305, column: 3, scope: !18067)
!18380 = !DILocation(line: 4306, column: 3, scope: !18067)
!18381 = distinct !DISubprogram(name: "combineSeparateTileSamples16bits", scope: !3, file: !3, line: 4309, type: !18068, scopeLine: 4313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!18382 = !DILocalVariable(name: "in", arg: 1, scope: !18381, file: !3, line: 4309, type: !18070)
!18383 = !DILocation(line: 4309, column: 42, scope: !18381)
!18384 = !DILocalVariable(name: "out", arg: 2, scope: !18381, file: !3, line: 4309, type: !116)
!18385 = !DILocation(line: 4309, column: 55, scope: !18381)
!18386 = !DILocalVariable(name: "cols", arg: 3, scope: !18381, file: !3, line: 4309, type: !105)
!18387 = !DILocation(line: 4309, column: 67, scope: !18381)
!18388 = !DILocalVariable(name: "rows", arg: 4, scope: !18381, file: !3, line: 4310, type: !105)
!18389 = !DILocation(line: 4310, column: 42, scope: !18381)
!18390 = !DILocalVariable(name: "imagewidth", arg: 5, scope: !18381, file: !3, line: 4310, type: !105)
!18391 = !DILocation(line: 4310, column: 55, scope: !18381)
!18392 = !DILocalVariable(name: "tw", arg: 6, scope: !18381, file: !3, line: 4311, type: !105)
!18393 = !DILocation(line: 4311, column: 42, scope: !18381)
!18394 = !DILocalVariable(name: "spp", arg: 7, scope: !18381, file: !3, line: 4311, type: !103)
!18395 = !DILocation(line: 4311, column: 53, scope: !18381)
!18396 = !DILocalVariable(name: "bps", arg: 8, scope: !18381, file: !3, line: 4311, type: !103)
!18397 = !DILocation(line: 4311, column: 65, scope: !18381)
!18398 = !DILocalVariable(name: "dumpfile", arg: 9, scope: !18381, file: !3, line: 4312, type: !470)
!18399 = !DILocation(line: 4312, column: 35, scope: !18381)
!18400 = !DILocalVariable(name: "format", arg: 10, scope: !18381, file: !3, line: 4312, type: !110)
!18401 = !DILocation(line: 4312, column: 49, scope: !18381)
!18402 = !DILocalVariable(name: "level", arg: 11, scope: !18381, file: !3, line: 4312, type: !110)
!18403 = !DILocation(line: 4312, column: 61, scope: !18381)
!18404 = !DILocalVariable(name: "ready_bits", scope: !18381, file: !3, line: 4314, type: !110)
!18405 = !DILocation(line: 4314, column: 10, scope: !18381)
!18406 = !DILocalVariable(name: "src_rowsize", scope: !18381, file: !3, line: 4315, type: !105)
!18407 = !DILocation(line: 4315, column: 10, scope: !18381)
!18408 = !DILocalVariable(name: "dst_rowsize", scope: !18381, file: !3, line: 4315, type: !105)
!18409 = !DILocation(line: 4315, column: 23, scope: !18381)
!18410 = !DILocalVariable(name: "bit_offset", scope: !18381, file: !3, line: 4316, type: !105)
!18411 = !DILocation(line: 4316, column: 10, scope: !18381)
!18412 = !DILocalVariable(name: "src_offset", scope: !18381, file: !3, line: 4316, type: !105)
!18413 = !DILocation(line: 4316, column: 22, scope: !18381)
!18414 = !DILocalVariable(name: "row", scope: !18381, file: !3, line: 4317, type: !105)
!18415 = !DILocation(line: 4317, column: 10, scope: !18381)
!18416 = !DILocalVariable(name: "col", scope: !18381, file: !3, line: 4317, type: !105)
!18417 = !DILocation(line: 4317, column: 15, scope: !18381)
!18418 = !DILocalVariable(name: "src_byte", scope: !18381, file: !3, line: 4317, type: !105)
!18419 = !DILocation(line: 4317, column: 20, scope: !18381)
!18420 = !DILocalVariable(name: "src_bit", scope: !18381, file: !3, line: 4317, type: !105)
!18421 = !DILocation(line: 4317, column: 34, scope: !18381)
!18422 = !DILocalVariable(name: "maskbits", scope: !18381, file: !3, line: 4318, type: !103)
!18423 = !DILocation(line: 4318, column: 10, scope: !18381)
!18424 = !DILocalVariable(name: "matchbits", scope: !18381, file: !3, line: 4318, type: !103)
!18425 = !DILocation(line: 4318, column: 24, scope: !18381)
!18426 = !DILocalVariable(name: "buff1", scope: !18381, file: !3, line: 4319, type: !103)
!18427 = !DILocation(line: 4319, column: 10, scope: !18381)
!18428 = !DILocalVariable(name: "buff2", scope: !18381, file: !3, line: 4319, type: !103)
!18429 = !DILocation(line: 4319, column: 21, scope: !18381)
!18430 = !DILocalVariable(name: "bytebuff", scope: !18381, file: !3, line: 4320, type: !114)
!18431 = !DILocation(line: 4320, column: 10, scope: !18381)
!18432 = !DILocalVariable(name: "s", scope: !18381, file: !3, line: 4321, type: !7616)
!18433 = !DILocation(line: 4321, column: 13, scope: !18381)
!18434 = !DILocalVariable(name: "src", scope: !18381, file: !3, line: 4322, type: !106)
!18435 = !DILocation(line: 4322, column: 18, scope: !18381)
!18436 = !DILocation(line: 4322, column: 24, scope: !18381)
!18437 = !DILocalVariable(name: "dst", scope: !18381, file: !3, line: 4323, type: !106)
!18438 = !DILocation(line: 4323, column: 18, scope: !18381)
!18439 = !DILocation(line: 4323, column: 24, scope: !18381)
!18440 = !DILocalVariable(name: "action", scope: !18381, file: !3, line: 4324, type: !18441)
!18441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 64, elements: !627)
!18442 = !DILocation(line: 4324, column: 18, scope: !18381)
!18443 = !DILocation(line: 4326, column: 8, scope: !18444)
!18444 = distinct !DILexicalBlock(scope: !18381, file: !3, line: 4326, column: 7)
!18445 = !DILocation(line: 4326, column: 12, scope: !18444)
!18446 = !DILocation(line: 4326, column: 21, scope: !18444)
!18447 = !DILocation(line: 4326, column: 25, scope: !18444)
!18448 = !DILocation(line: 4326, column: 29, scope: !18444)
!18449 = !DILocation(line: 4326, column: 7, scope: !18381)
!18450 = !DILocation(line: 4328, column: 5, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18444, file: !3, line: 4327, column: 5)
!18452 = !DILocation(line: 4329, column: 5, scope: !18451)
!18453 = !DILocation(line: 4332, column: 19, scope: !18381)
!18454 = !DILocation(line: 4332, column: 25, scope: !18381)
!18455 = !DILocation(line: 4332, column: 23, scope: !18381)
!18456 = !DILocation(line: 4332, column: 29, scope: !18381)
!18457 = !DILocation(line: 4332, column: 34, scope: !18381)
!18458 = !DILocation(line: 4332, column: 15, scope: !18381)
!18459 = !DILocation(line: 4333, column: 19, scope: !18381)
!18460 = !DILocation(line: 4333, column: 32, scope: !18381)
!18461 = !DILocation(line: 4333, column: 30, scope: !18381)
!18462 = !DILocation(line: 4333, column: 38, scope: !18381)
!18463 = !DILocation(line: 4333, column: 36, scope: !18381)
!18464 = !DILocation(line: 4333, column: 43, scope: !18381)
!18465 = !DILocation(line: 4333, column: 48, scope: !18381)
!18466 = !DILocation(line: 4333, column: 15, scope: !18381)
!18467 = !DILocation(line: 4334, column: 34, scope: !18381)
!18468 = !DILocation(line: 4334, column: 32, scope: !18381)
!18469 = !DILocation(line: 4334, column: 25, scope: !18381)
!18470 = !DILocation(line: 4334, column: 14, scope: !18381)
!18471 = !DILocation(line: 4334, column: 12, scope: !18381)
!18472 = !DILocation(line: 4336, column: 12, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18381, file: !3, line: 4336, column: 3)
!18474 = !DILocation(line: 4336, column: 8, scope: !18473)
!18475 = !DILocation(line: 4336, column: 17, scope: !18476)
!18476 = distinct !DILexicalBlock(scope: !18473, file: !3, line: 4336, column: 3)
!18477 = !DILocation(line: 4336, column: 23, scope: !18476)
!18478 = !DILocation(line: 4336, column: 21, scope: !18476)
!18479 = !DILocation(line: 4336, column: 3, scope: !18473)
!18480 = !DILocation(line: 4338, column: 16, scope: !18481)
!18481 = distinct !DILexicalBlock(scope: !18476, file: !3, line: 4337, column: 5)
!18482 = !DILocation(line: 4339, column: 19, scope: !18481)
!18483 = !DILocation(line: 4339, column: 11, scope: !18481)
!18484 = !DILocation(line: 4340, column: 11, scope: !18481)
!18485 = !DILocation(line: 4340, column: 18, scope: !18481)
!18486 = !DILocation(line: 4340, column: 24, scope: !18481)
!18487 = !DILocation(line: 4340, column: 22, scope: !18481)
!18488 = !DILocation(line: 4340, column: 15, scope: !18481)
!18489 = !DILocation(line: 4340, column: 9, scope: !18481)
!18490 = !DILocation(line: 4341, column: 18, scope: !18481)
!18491 = !DILocation(line: 4341, column: 24, scope: !18481)
!18492 = !DILocation(line: 4341, column: 22, scope: !18481)
!18493 = !DILocation(line: 4341, column: 16, scope: !18481)
!18494 = !DILocation(line: 4342, column: 14, scope: !18495)
!18495 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 4342, column: 5)
!18496 = !DILocation(line: 4342, column: 10, scope: !18495)
!18497 = !DILocation(line: 4342, column: 19, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18495, file: !3, line: 4342, column: 5)
!18499 = !DILocation(line: 4342, column: 25, scope: !18498)
!18500 = !DILocation(line: 4342, column: 23, scope: !18498)
!18501 = !DILocation(line: 4342, column: 5, scope: !18495)
!18502 = !DILocation(line: 4345, column: 20, scope: !18503)
!18503 = distinct !DILexicalBlock(scope: !18498, file: !3, line: 4343, column: 7)
!18504 = !DILocation(line: 4345, column: 26, scope: !18503)
!18505 = !DILocation(line: 4345, column: 24, scope: !18503)
!18506 = !DILocation(line: 4345, column: 18, scope: !18503)
!18507 = !DILocation(line: 4346, column: 18, scope: !18503)
!18508 = !DILocation(line: 4346, column: 29, scope: !18503)
!18509 = !DILocation(line: 4346, column: 16, scope: !18503)
!18510 = !DILocation(line: 4347, column: 18, scope: !18503)
!18511 = !DILocation(line: 4347, column: 29, scope: !18503)
!18512 = !DILocation(line: 4347, column: 16, scope: !18503)
!18513 = !DILocation(line: 4349, column: 19, scope: !18503)
!18514 = !DILocation(line: 4349, column: 37, scope: !18503)
!18515 = !DILocation(line: 4349, column: 35, scope: !18503)
!18516 = !DILocation(line: 4349, column: 47, scope: !18503)
!18517 = !DILocation(line: 4349, column: 45, scope: !18503)
!18518 = !DILocation(line: 4349, column: 28, scope: !18503)
!18519 = !DILocation(line: 4349, column: 17, scope: !18503)
!18520 = !DILocation(line: 4350, column: 14, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18503, file: !3, line: 4350, column: 7)
!18522 = !DILocation(line: 4350, column: 12, scope: !18521)
!18523 = !DILocation(line: 4350, column: 19, scope: !18524)
!18524 = distinct !DILexicalBlock(scope: !18521, file: !3, line: 4350, column: 7)
!18525 = !DILocation(line: 4350, column: 23, scope: !18524)
!18526 = !DILocation(line: 4350, column: 21, scope: !18524)
!18527 = !DILocation(line: 4350, column: 7, scope: !18521)
!18528 = !DILocation(line: 4352, column: 8, scope: !18529)
!18529 = distinct !DILexicalBlock(scope: !18524, file: !3, line: 4351, column: 9)
!18530 = !DILocation(line: 4352, column: 11, scope: !18529)
!18531 = !DILocation(line: 4352, column: 16, scope: !18529)
!18532 = !DILocation(line: 4352, column: 14, scope: !18529)
!18533 = !DILocation(line: 4352, column: 29, scope: !18529)
!18534 = !DILocation(line: 4352, column: 27, scope: !18529)
!18535 = !DILocation(line: 4352, column: 6, scope: !18529)
!18536 = !DILocation(line: 4353, column: 13, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18529, file: !3, line: 4353, column: 13)
!18538 = !DILocation(line: 4353, column: 13, scope: !18529)
!18539 = !DILocation(line: 4354, column: 20, scope: !18537)
!18540 = !DILocation(line: 4354, column: 27, scope: !18537)
!18541 = !DILocation(line: 4354, column: 35, scope: !18537)
!18542 = !DILocation(line: 4354, column: 33, scope: !18537)
!18543 = !DILocation(line: 4354, column: 19, scope: !18537)
!18544 = !DILocation(line: 4354, column: 17, scope: !18537)
!18545 = !DILocation(line: 4354, column: 11, scope: !18537)
!18546 = !DILocation(line: 4356, column: 20, scope: !18537)
!18547 = !DILocation(line: 4356, column: 27, scope: !18537)
!18548 = !DILocation(line: 4356, column: 35, scope: !18537)
!18549 = !DILocation(line: 4356, column: 33, scope: !18537)
!18550 = !DILocation(line: 4356, column: 19, scope: !18537)
!18551 = !DILocation(line: 4356, column: 17, scope: !18537)
!18552 = !DILocation(line: 4357, column: 11, scope: !18529)
!18553 = !DILocation(line: 4357, column: 19, scope: !18529)
!18554 = !DILocation(line: 4357, column: 17, scope: !18529)
!18555 = !DILocation(line: 4357, column: 34, scope: !18529)
!18556 = !DILocation(line: 4357, column: 30, scope: !18529)
!18557 = !DILocation(line: 4357, column: 10, scope: !18529)
!18558 = !DILocation(line: 4357, column: 8, scope: !18529)
!18559 = !DILocation(line: 4360, column: 6, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18529, file: !3, line: 4360, column: 6)
!18561 = !DILocation(line: 4360, column: 17, scope: !18560)
!18562 = !DILocation(line: 4360, column: 6, scope: !18529)
!18563 = !DILocation(line: 4362, column: 18, scope: !18564)
!18564 = distinct !DILexicalBlock(scope: !18560, file: !3, line: 4361, column: 4)
!18565 = !DILocation(line: 4362, column: 24, scope: !18564)
!18566 = !DILocation(line: 4362, column: 17, scope: !18564)
!18567 = !DILocation(line: 4362, column: 15, scope: !18564)
!18568 = !DILocation(line: 4363, column: 15, scope: !18564)
!18569 = !DILocation(line: 4363, column: 10, scope: !18564)
!18570 = !DILocation(line: 4363, column: 13, scope: !18564)
!18571 = !DILocation(line: 4364, column: 17, scope: !18564)
!18572 = !DILocation(line: 4366, column: 16, scope: !18564)
!18573 = !DILocation(line: 4366, column: 22, scope: !18564)
!18574 = !DILocation(line: 4366, column: 31, scope: !18564)
!18575 = !DILocation(line: 4366, column: 40, scope: !18564)
!18576 = !DILocation(line: 4366, column: 37, scope: !18564)
!18577 = !DILocation(line: 4366, column: 28, scope: !18564)
!18578 = !DILocation(line: 4366, column: 14, scope: !18564)
!18579 = !DILocation(line: 4366, column: 12, scope: !18564)
!18580 = !DILocation(line: 4367, column: 14, scope: !18564)
!18581 = !DILocation(line: 4367, column: 6, scope: !18564)
!18582 = !DILocation(line: 4368, column: 4, scope: !18564)
!18583 = !DILocation(line: 4371, column: 15, scope: !18584)
!18584 = distinct !DILexicalBlock(scope: !18560, file: !3, line: 4370, column: 4)
!18585 = !DILocation(line: 4372, column: 15, scope: !18584)
!18586 = !DILocation(line: 4372, column: 24, scope: !18584)
!18587 = !DILocation(line: 4372, column: 33, scope: !18584)
!18588 = !DILocation(line: 4372, column: 30, scope: !18584)
!18589 = !DILocation(line: 4372, column: 21, scope: !18584)
!18590 = !DILocation(line: 4372, column: 14, scope: !18584)
!18591 = !DILocation(line: 4372, column: 12, scope: !18584)
!18592 = !DILocation(line: 4373, column: 14, scope: !18584)
!18593 = !DILocation(line: 4373, column: 6, scope: !18584)
!18594 = !DILocation(line: 4375, column: 16, scope: !18529)
!18595 = !DILocation(line: 4375, column: 13, scope: !18529)
!18596 = !DILocation(line: 4377, column: 7, scope: !18597)
!18597 = distinct !DILexicalBlock(scope: !18529, file: !3, line: 4377, column: 6)
!18598 = !DILocation(line: 4377, column: 16, scope: !18597)
!18599 = !DILocation(line: 4377, column: 25, scope: !18597)
!18600 = !DILocation(line: 4377, column: 29, scope: !18597)
!18601 = !DILocation(line: 4377, column: 35, scope: !18597)
!18602 = !DILocation(line: 4377, column: 6, scope: !18529)
!18603 = !DILocation(line: 4379, column: 15, scope: !18604)
!18604 = distinct !DILexicalBlock(scope: !18597, file: !3, line: 4378, column: 4)
!18605 = !DILocation(line: 4379, column: 25, scope: !18604)
!18606 = !DILocation(line: 4381, column: 10, scope: !18604)
!18607 = !DILocation(line: 4381, column: 14, scope: !18604)
!18608 = !DILocation(line: 4381, column: 19, scope: !18604)
!18609 = !DILocation(line: 4381, column: 23, scope: !18604)
!18610 = !DILocation(line: 4381, column: 28, scope: !18604)
!18611 = !DILocation(line: 4381, column: 31, scope: !18604)
!18612 = !DILocation(line: 4381, column: 41, scope: !18604)
!18613 = !DILocation(line: 4381, column: 50, scope: !18604)
!18614 = !DILocation(line: 4381, column: 56, scope: !18604)
!18615 = !DILocation(line: 4381, column: 54, scope: !18604)
!18616 = !DILocation(line: 4379, column: 4, scope: !18604)
!18617 = !DILocation(line: 4383, column: 16, scope: !18604)
!18618 = !DILocation(line: 4383, column: 26, scope: !18604)
!18619 = !DILocation(line: 4383, column: 48, scope: !18604)
!18620 = !DILocation(line: 4383, column: 4, scope: !18604)
!18621 = !DILocation(line: 4384, column: 16, scope: !18604)
!18622 = !DILocation(line: 4384, column: 26, scope: !18604)
!18623 = !DILocation(line: 4384, column: 48, scope: !18604)
!18624 = !DILocation(line: 4384, column: 4, scope: !18604)
!18625 = !DILocation(line: 4385, column: 16, scope: !18604)
!18626 = !DILocation(line: 4385, column: 26, scope: !18604)
!18627 = !DILocation(line: 4385, column: 48, scope: !18604)
!18628 = !DILocation(line: 4385, column: 4, scope: !18604)
!18629 = !DILocation(line: 4386, column: 16, scope: !18604)
!18630 = !DILocation(line: 4386, column: 26, scope: !18604)
!18631 = !DILocation(line: 4386, column: 48, scope: !18604)
!18632 = !DILocation(line: 4386, column: 4, scope: !18604)
!18633 = !DILocation(line: 4387, column: 16, scope: !18604)
!18634 = !DILocation(line: 4387, column: 26, scope: !18604)
!18635 = !DILocation(line: 4387, column: 48, scope: !18604)
!18636 = !DILocation(line: 4387, column: 4, scope: !18604)
!18637 = !DILocation(line: 4388, column: 16, scope: !18604)
!18638 = !DILocation(line: 4388, column: 26, scope: !18604)
!18639 = !DILocation(line: 4388, column: 60, scope: !18604)
!18640 = !DILocation(line: 4388, column: 72, scope: !18604)
!18641 = !DILocation(line: 4388, column: 4, scope: !18604)
!18642 = !DILocation(line: 4389, column: 4, scope: !18604)
!18643 = !DILocation(line: 4390, column: 2, scope: !18529)
!18644 = !DILocation(line: 4350, column: 29, scope: !18524)
!18645 = !DILocation(line: 4350, column: 7, scope: !18524)
!18646 = distinct !{!18646, !18527, !18647}
!18647 = !DILocation(line: 4390, column: 2, scope: !18521)
!18648 = !DILocation(line: 4391, column: 7, scope: !18503)
!18649 = !DILocation(line: 4342, column: 34, scope: !18498)
!18650 = !DILocation(line: 4342, column: 5, scope: !18498)
!18651 = distinct !{!18651, !18501, !18652}
!18652 = !DILocation(line: 4391, column: 7, scope: !18495)
!18653 = !DILocation(line: 4394, column: 9, scope: !18654)
!18654 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 4394, column: 9)
!18655 = !DILocation(line: 4394, column: 20, scope: !18654)
!18656 = !DILocation(line: 4394, column: 9, scope: !18481)
!18657 = !DILocation(line: 4396, column: 19, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18654, file: !3, line: 4395, column: 7)
!18659 = !DILocation(line: 4396, column: 25, scope: !18658)
!18660 = !DILocation(line: 4396, column: 18, scope: !18658)
!18661 = !DILocation(line: 4396, column: 16, scope: !18658)
!18662 = !DILocation(line: 4397, column: 16, scope: !18658)
!18663 = !DILocation(line: 4397, column: 11, scope: !18658)
!18664 = !DILocation(line: 4397, column: 14, scope: !18658)
!18665 = !DILocation(line: 4398, column: 12, scope: !18666)
!18666 = distinct !DILexicalBlock(scope: !18658, file: !3, line: 4398, column: 11)
!18667 = !DILocation(line: 4398, column: 21, scope: !18666)
!18668 = !DILocation(line: 4398, column: 30, scope: !18666)
!18669 = !DILocation(line: 4398, column: 34, scope: !18666)
!18670 = !DILocation(line: 4398, column: 40, scope: !18666)
!18671 = !DILocation(line: 4398, column: 11, scope: !18658)
!18672 = !DILocation(line: 4400, column: 13, scope: !18673)
!18673 = distinct !DILexicalBlock(scope: !18666, file: !3, line: 4399, column: 2)
!18674 = !DILocation(line: 4400, column: 23, scope: !18673)
!18675 = !DILocation(line: 4402, column: 10, scope: !18673)
!18676 = !DILocation(line: 4402, column: 14, scope: !18673)
!18677 = !DILocation(line: 4402, column: 19, scope: !18673)
!18678 = !DILocation(line: 4402, column: 23, scope: !18673)
!18679 = !DILocation(line: 4402, column: 28, scope: !18673)
!18680 = !DILocation(line: 4402, column: 38, scope: !18673)
!18681 = !DILocation(line: 4402, column: 47, scope: !18673)
!18682 = !DILocation(line: 4402, column: 53, scope: !18673)
!18683 = !DILocation(line: 4402, column: 51, scope: !18673)
!18684 = !DILocation(line: 4400, column: 2, scope: !18673)
!18685 = !DILocation(line: 4403, column: 13, scope: !18673)
!18686 = !DILocation(line: 4403, column: 23, scope: !18673)
!18687 = !DILocation(line: 4403, column: 45, scope: !18673)
!18688 = !DILocation(line: 4403, column: 2, scope: !18673)
!18689 = !DILocation(line: 4404, column: 2, scope: !18673)
!18690 = !DILocation(line: 4405, column: 7, scope: !18658)
!18691 = !DILocation(line: 4407, column: 10, scope: !18692)
!18692 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 4407, column: 9)
!18693 = !DILocation(line: 4407, column: 19, scope: !18692)
!18694 = !DILocation(line: 4407, column: 28, scope: !18692)
!18695 = !DILocation(line: 4407, column: 32, scope: !18692)
!18696 = !DILocation(line: 4407, column: 38, scope: !18692)
!18697 = !DILocation(line: 4407, column: 9, scope: !18481)
!18698 = !DILocation(line: 4409, column: 18, scope: !18699)
!18699 = distinct !DILexicalBlock(scope: !18692, file: !3, line: 4408, column: 7)
!18700 = !DILocation(line: 4409, column: 28, scope: !18699)
!18701 = !DILocation(line: 4409, column: 7, scope: !18699)
!18702 = !DILocation(line: 4410, column: 19, scope: !18699)
!18703 = !DILocation(line: 4410, column: 29, scope: !18699)
!18704 = !DILocation(line: 4410, column: 40, scope: !18699)
!18705 = !DILocation(line: 4410, column: 53, scope: !18699)
!18706 = !DILocation(line: 4410, column: 58, scope: !18699)
!18707 = !DILocation(line: 4410, column: 65, scope: !18699)
!18708 = !DILocation(line: 4410, column: 71, scope: !18699)
!18709 = !DILocation(line: 4410, column: 69, scope: !18699)
!18710 = !DILocation(line: 4410, column: 62, scope: !18699)
!18711 = !DILocation(line: 4410, column: 7, scope: !18699)
!18712 = !DILocation(line: 4411, column: 7, scope: !18699)
!18713 = !DILocation(line: 4412, column: 5, scope: !18481)
!18714 = !DILocation(line: 4336, column: 32, scope: !18476)
!18715 = !DILocation(line: 4336, column: 3, scope: !18476)
!18716 = distinct !{!18716, !18479, !18717}
!18717 = !DILocation(line: 4412, column: 5, scope: !18473)
!18718 = !DILocation(line: 4414, column: 3, scope: !18381)
!18719 = !DILocation(line: 4415, column: 3, scope: !18381)
!18720 = distinct !DISubprogram(name: "combineSeparateTileSamples24bits", scope: !3, file: !3, line: 4418, type: !18068, scopeLine: 4422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!18721 = !DILocalVariable(name: "in", arg: 1, scope: !18720, file: !3, line: 4418, type: !18070)
!18722 = !DILocation(line: 4418, column: 42, scope: !18720)
!18723 = !DILocalVariable(name: "out", arg: 2, scope: !18720, file: !3, line: 4418, type: !116)
!18724 = !DILocation(line: 4418, column: 55, scope: !18720)
!18725 = !DILocalVariable(name: "cols", arg: 3, scope: !18720, file: !3, line: 4418, type: !105)
!18726 = !DILocation(line: 4418, column: 67, scope: !18720)
!18727 = !DILocalVariable(name: "rows", arg: 4, scope: !18720, file: !3, line: 4419, type: !105)
!18728 = !DILocation(line: 4419, column: 42, scope: !18720)
!18729 = !DILocalVariable(name: "imagewidth", arg: 5, scope: !18720, file: !3, line: 4419, type: !105)
!18730 = !DILocation(line: 4419, column: 55, scope: !18720)
!18731 = !DILocalVariable(name: "tw", arg: 6, scope: !18720, file: !3, line: 4420, type: !105)
!18732 = !DILocation(line: 4420, column: 42, scope: !18720)
!18733 = !DILocalVariable(name: "spp", arg: 7, scope: !18720, file: !3, line: 4420, type: !103)
!18734 = !DILocation(line: 4420, column: 53, scope: !18720)
!18735 = !DILocalVariable(name: "bps", arg: 8, scope: !18720, file: !3, line: 4420, type: !103)
!18736 = !DILocation(line: 4420, column: 65, scope: !18720)
!18737 = !DILocalVariable(name: "dumpfile", arg: 9, scope: !18720, file: !3, line: 4421, type: !470)
!18738 = !DILocation(line: 4421, column: 35, scope: !18720)
!18739 = !DILocalVariable(name: "format", arg: 10, scope: !18720, file: !3, line: 4421, type: !110)
!18740 = !DILocation(line: 4421, column: 49, scope: !18720)
!18741 = !DILocalVariable(name: "level", arg: 11, scope: !18720, file: !3, line: 4421, type: !110)
!18742 = !DILocation(line: 4421, column: 61, scope: !18720)
!18743 = !DILocalVariable(name: "ready_bits", scope: !18720, file: !3, line: 4423, type: !110)
!18744 = !DILocation(line: 4423, column: 10, scope: !18720)
!18745 = !DILocalVariable(name: "src_rowsize", scope: !18720, file: !3, line: 4424, type: !105)
!18746 = !DILocation(line: 4424, column: 10, scope: !18720)
!18747 = !DILocalVariable(name: "dst_rowsize", scope: !18720, file: !3, line: 4424, type: !105)
!18748 = !DILocation(line: 4424, column: 23, scope: !18720)
!18749 = !DILocalVariable(name: "bit_offset", scope: !18720, file: !3, line: 4425, type: !105)
!18750 = !DILocation(line: 4425, column: 10, scope: !18720)
!18751 = !DILocalVariable(name: "src_offset", scope: !18720, file: !3, line: 4425, type: !105)
!18752 = !DILocation(line: 4425, column: 22, scope: !18720)
!18753 = !DILocalVariable(name: "row", scope: !18720, file: !3, line: 4426, type: !105)
!18754 = !DILocation(line: 4426, column: 10, scope: !18720)
!18755 = !DILocalVariable(name: "col", scope: !18720, file: !3, line: 4426, type: !105)
!18756 = !DILocation(line: 4426, column: 15, scope: !18720)
!18757 = !DILocalVariable(name: "src_byte", scope: !18720, file: !3, line: 4426, type: !105)
!18758 = !DILocation(line: 4426, column: 20, scope: !18720)
!18759 = !DILocalVariable(name: "src_bit", scope: !18720, file: !3, line: 4426, type: !105)
!18760 = !DILocation(line: 4426, column: 34, scope: !18720)
!18761 = !DILocalVariable(name: "maskbits", scope: !18720, file: !3, line: 4427, type: !105)
!18762 = !DILocation(line: 4427, column: 10, scope: !18720)
!18763 = !DILocalVariable(name: "matchbits", scope: !18720, file: !3, line: 4427, type: !105)
!18764 = !DILocation(line: 4427, column: 24, scope: !18720)
!18765 = !DILocalVariable(name: "buff1", scope: !18720, file: !3, line: 4428, type: !105)
!18766 = !DILocation(line: 4428, column: 10, scope: !18720)
!18767 = !DILocalVariable(name: "buff2", scope: !18720, file: !3, line: 4428, type: !105)
!18768 = !DILocation(line: 4428, column: 21, scope: !18720)
!18769 = !DILocalVariable(name: "bytebuff1", scope: !18720, file: !3, line: 4429, type: !114)
!18770 = !DILocation(line: 4429, column: 10, scope: !18720)
!18771 = !DILocalVariable(name: "bytebuff2", scope: !18720, file: !3, line: 4429, type: !114)
!18772 = !DILocation(line: 4429, column: 25, scope: !18720)
!18773 = !DILocalVariable(name: "s", scope: !18720, file: !3, line: 4430, type: !7616)
!18774 = !DILocation(line: 4430, column: 13, scope: !18720)
!18775 = !DILocalVariable(name: "src", scope: !18720, file: !3, line: 4431, type: !106)
!18776 = !DILocation(line: 4431, column: 18, scope: !18720)
!18777 = !DILocation(line: 4431, column: 24, scope: !18720)
!18778 = !DILocalVariable(name: "dst", scope: !18720, file: !3, line: 4432, type: !106)
!18779 = !DILocation(line: 4432, column: 18, scope: !18720)
!18780 = !DILocation(line: 4432, column: 24, scope: !18720)
!18781 = !DILocalVariable(name: "action", scope: !18720, file: !3, line: 4433, type: !18441)
!18782 = !DILocation(line: 4433, column: 18, scope: !18720)
!18783 = !DILocation(line: 4435, column: 8, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18720, file: !3, line: 4435, column: 7)
!18785 = !DILocation(line: 4435, column: 12, scope: !18784)
!18786 = !DILocation(line: 4435, column: 21, scope: !18784)
!18787 = !DILocation(line: 4435, column: 25, scope: !18784)
!18788 = !DILocation(line: 4435, column: 29, scope: !18784)
!18789 = !DILocation(line: 4435, column: 7, scope: !18720)
!18790 = !DILocation(line: 4437, column: 5, scope: !18791)
!18791 = distinct !DILexicalBlock(scope: !18784, file: !3, line: 4436, column: 5)
!18792 = !DILocation(line: 4438, column: 5, scope: !18791)
!18793 = !DILocation(line: 4441, column: 19, scope: !18720)
!18794 = !DILocation(line: 4441, column: 25, scope: !18720)
!18795 = !DILocation(line: 4441, column: 23, scope: !18720)
!18796 = !DILocation(line: 4441, column: 29, scope: !18720)
!18797 = !DILocation(line: 4441, column: 34, scope: !18720)
!18798 = !DILocation(line: 4441, column: 15, scope: !18720)
!18799 = !DILocation(line: 4442, column: 19, scope: !18720)
!18800 = !DILocation(line: 4442, column: 32, scope: !18720)
!18801 = !DILocation(line: 4442, column: 30, scope: !18720)
!18802 = !DILocation(line: 4442, column: 38, scope: !18720)
!18803 = !DILocation(line: 4442, column: 36, scope: !18720)
!18804 = !DILocation(line: 4442, column: 43, scope: !18720)
!18805 = !DILocation(line: 4442, column: 48, scope: !18720)
!18806 = !DILocation(line: 4442, column: 15, scope: !18720)
!18807 = !DILocation(line: 4443, column: 36, scope: !18720)
!18808 = !DILocation(line: 4443, column: 34, scope: !18720)
!18809 = !DILocation(line: 4443, column: 26, scope: !18720)
!18810 = !DILocation(line: 4443, column: 12, scope: !18720)
!18811 = !DILocation(line: 4445, column: 12, scope: !18812)
!18812 = distinct !DILexicalBlock(scope: !18720, file: !3, line: 4445, column: 3)
!18813 = !DILocation(line: 4445, column: 8, scope: !18812)
!18814 = !DILocation(line: 4445, column: 17, scope: !18815)
!18815 = distinct !DILexicalBlock(scope: !18812, file: !3, line: 4445, column: 3)
!18816 = !DILocation(line: 4445, column: 23, scope: !18815)
!18817 = !DILocation(line: 4445, column: 21, scope: !18815)
!18818 = !DILocation(line: 4445, column: 3, scope: !18812)
!18819 = !DILocation(line: 4447, column: 16, scope: !18820)
!18820 = distinct !DILexicalBlock(scope: !18815, file: !3, line: 4446, column: 5)
!18821 = !DILocation(line: 4448, column: 19, scope: !18820)
!18822 = !DILocation(line: 4448, column: 11, scope: !18820)
!18823 = !DILocation(line: 4449, column: 11, scope: !18820)
!18824 = !DILocation(line: 4449, column: 18, scope: !18820)
!18825 = !DILocation(line: 4449, column: 24, scope: !18820)
!18826 = !DILocation(line: 4449, column: 22, scope: !18820)
!18827 = !DILocation(line: 4449, column: 15, scope: !18820)
!18828 = !DILocation(line: 4449, column: 9, scope: !18820)
!18829 = !DILocation(line: 4450, column: 18, scope: !18820)
!18830 = !DILocation(line: 4450, column: 24, scope: !18820)
!18831 = !DILocation(line: 4450, column: 22, scope: !18820)
!18832 = !DILocation(line: 4450, column: 16, scope: !18820)
!18833 = !DILocation(line: 4451, column: 14, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18820, file: !3, line: 4451, column: 5)
!18835 = !DILocation(line: 4451, column: 10, scope: !18834)
!18836 = !DILocation(line: 4451, column: 19, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18834, file: !3, line: 4451, column: 5)
!18838 = !DILocation(line: 4451, column: 25, scope: !18837)
!18839 = !DILocation(line: 4451, column: 23, scope: !18837)
!18840 = !DILocation(line: 4451, column: 5, scope: !18834)
!18841 = !DILocation(line: 4454, column: 20, scope: !18842)
!18842 = distinct !DILexicalBlock(scope: !18837, file: !3, line: 4452, column: 7)
!18843 = !DILocation(line: 4454, column: 26, scope: !18842)
!18844 = !DILocation(line: 4454, column: 24, scope: !18842)
!18845 = !DILocation(line: 4454, column: 18, scope: !18842)
!18846 = !DILocation(line: 4455, column: 18, scope: !18842)
!18847 = !DILocation(line: 4455, column: 29, scope: !18842)
!18848 = !DILocation(line: 4455, column: 16, scope: !18842)
!18849 = !DILocation(line: 4456, column: 18, scope: !18842)
!18850 = !DILocation(line: 4456, column: 29, scope: !18842)
!18851 = !DILocation(line: 4456, column: 16, scope: !18842)
!18852 = !DILocation(line: 4458, column: 19, scope: !18842)
!18853 = !DILocation(line: 4458, column: 37, scope: !18842)
!18854 = !DILocation(line: 4458, column: 35, scope: !18842)
!18855 = !DILocation(line: 4458, column: 47, scope: !18842)
!18856 = !DILocation(line: 4458, column: 45, scope: !18842)
!18857 = !DILocation(line: 4458, column: 28, scope: !18842)
!18858 = !DILocation(line: 4458, column: 17, scope: !18842)
!18859 = !DILocation(line: 4459, column: 14, scope: !18860)
!18860 = distinct !DILexicalBlock(scope: !18842, file: !3, line: 4459, column: 7)
!18861 = !DILocation(line: 4459, column: 12, scope: !18860)
!18862 = !DILocation(line: 4459, column: 19, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18860, file: !3, line: 4459, column: 7)
!18864 = !DILocation(line: 4459, column: 23, scope: !18863)
!18865 = !DILocation(line: 4459, column: 21, scope: !18863)
!18866 = !DILocation(line: 4459, column: 7, scope: !18860)
!18867 = !DILocation(line: 4461, column: 8, scope: !18868)
!18868 = distinct !DILexicalBlock(scope: !18863, file: !3, line: 4460, column: 9)
!18869 = !DILocation(line: 4461, column: 11, scope: !18868)
!18870 = !DILocation(line: 4461, column: 16, scope: !18868)
!18871 = !DILocation(line: 4461, column: 14, scope: !18868)
!18872 = !DILocation(line: 4461, column: 29, scope: !18868)
!18873 = !DILocation(line: 4461, column: 27, scope: !18868)
!18874 = !DILocation(line: 4461, column: 6, scope: !18868)
!18875 = !DILocation(line: 4462, column: 13, scope: !18876)
!18876 = distinct !DILexicalBlock(scope: !18868, file: !3, line: 4462, column: 13)
!18877 = !DILocation(line: 4462, column: 13, scope: !18868)
!18878 = !DILocation(line: 4463, column: 13, scope: !18876)
!18879 = !DILocation(line: 4463, column: 20, scope: !18876)
!18880 = !DILocation(line: 4463, column: 30, scope: !18876)
!18881 = !DILocation(line: 4463, column: 37, scope: !18876)
!18882 = !DILocation(line: 4463, column: 27, scope: !18876)
!18883 = !DILocation(line: 4463, column: 47, scope: !18876)
!18884 = !DILocation(line: 4463, column: 54, scope: !18876)
!18885 = !DILocation(line: 4463, column: 44, scope: !18876)
!18886 = !DILocation(line: 4463, column: 62, scope: !18876)
!18887 = !DILocation(line: 4463, column: 60, scope: !18876)
!18888 = !DILocation(line: 4463, column: 10, scope: !18876)
!18889 = !DILocation(line: 4463, column: 4, scope: !18876)
!18890 = !DILocation(line: 4465, column: 13, scope: !18876)
!18891 = !DILocation(line: 4465, column: 20, scope: !18876)
!18892 = !DILocation(line: 4465, column: 30, scope: !18876)
!18893 = !DILocation(line: 4465, column: 37, scope: !18876)
!18894 = !DILocation(line: 4465, column: 27, scope: !18876)
!18895 = !DILocation(line: 4465, column: 47, scope: !18876)
!18896 = !DILocation(line: 4465, column: 54, scope: !18876)
!18897 = !DILocation(line: 4465, column: 44, scope: !18876)
!18898 = !DILocation(line: 4465, column: 62, scope: !18876)
!18899 = !DILocation(line: 4465, column: 60, scope: !18876)
!18900 = !DILocation(line: 4465, column: 10, scope: !18876)
!18901 = !DILocation(line: 4466, column: 11, scope: !18868)
!18902 = !DILocation(line: 4466, column: 19, scope: !18868)
!18903 = !DILocation(line: 4466, column: 17, scope: !18868)
!18904 = !DILocation(line: 4466, column: 34, scope: !18868)
!18905 = !DILocation(line: 4466, column: 30, scope: !18868)
!18906 = !DILocation(line: 4466, column: 8, scope: !18868)
!18907 = !DILocation(line: 4469, column: 6, scope: !18908)
!18908 = distinct !DILexicalBlock(scope: !18868, file: !3, line: 4469, column: 6)
!18909 = !DILocation(line: 4469, column: 17, scope: !18908)
!18910 = !DILocation(line: 4469, column: 6, scope: !18868)
!18911 = !DILocation(line: 4471, column: 19, scope: !18912)
!18912 = distinct !DILexicalBlock(scope: !18908, file: !3, line: 4470, column: 4)
!18913 = !DILocation(line: 4471, column: 25, scope: !18912)
!18914 = !DILocation(line: 4471, column: 18, scope: !18912)
!18915 = !DILocation(line: 4471, column: 16, scope: !18912)
!18916 = !DILocation(line: 4472, column: 15, scope: !18912)
!18917 = !DILocation(line: 4472, column: 10, scope: !18912)
!18918 = !DILocation(line: 4472, column: 13, scope: !18912)
!18919 = !DILocation(line: 4473, column: 19, scope: !18912)
!18920 = !DILocation(line: 4473, column: 25, scope: !18912)
!18921 = !DILocation(line: 4473, column: 18, scope: !18912)
!18922 = !DILocation(line: 4473, column: 16, scope: !18912)
!18923 = !DILocation(line: 4474, column: 15, scope: !18912)
!18924 = !DILocation(line: 4474, column: 10, scope: !18912)
!18925 = !DILocation(line: 4474, column: 13, scope: !18912)
!18926 = !DILocation(line: 4475, column: 17, scope: !18912)
!18927 = !DILocation(line: 4478, column: 16, scope: !18912)
!18928 = !DILocation(line: 4478, column: 22, scope: !18912)
!18929 = !DILocation(line: 4478, column: 32, scope: !18912)
!18930 = !DILocation(line: 4478, column: 41, scope: !18912)
!18931 = !DILocation(line: 4478, column: 38, scope: !18912)
!18932 = !DILocation(line: 4478, column: 29, scope: !18912)
!18933 = !DILocation(line: 4478, column: 12, scope: !18912)
!18934 = !DILocation(line: 4479, column: 14, scope: !18912)
!18935 = !DILocation(line: 4479, column: 6, scope: !18912)
!18936 = !DILocation(line: 4480, column: 4, scope: !18912)
!18937 = !DILocation(line: 4483, column: 28, scope: !18938)
!18938 = distinct !DILexicalBlock(scope: !18908, file: !3, line: 4482, column: 4)
!18939 = !DILocation(line: 4483, column: 16, scope: !18938)
!18940 = !DILocation(line: 4484, column: 15, scope: !18938)
!18941 = !DILocation(line: 4484, column: 24, scope: !18938)
!18942 = !DILocation(line: 4484, column: 33, scope: !18938)
!18943 = !DILocation(line: 4484, column: 30, scope: !18938)
!18944 = !DILocation(line: 4484, column: 21, scope: !18938)
!18945 = !DILocation(line: 4484, column: 12, scope: !18938)
!18946 = !DILocation(line: 4485, column: 14, scope: !18938)
!18947 = !DILocation(line: 4485, column: 6, scope: !18938)
!18948 = !DILocation(line: 4487, column: 16, scope: !18868)
!18949 = !DILocation(line: 4487, column: 13, scope: !18868)
!18950 = !DILocation(line: 4489, column: 7, scope: !18951)
!18951 = distinct !DILexicalBlock(scope: !18868, file: !3, line: 4489, column: 6)
!18952 = !DILocation(line: 4489, column: 16, scope: !18951)
!18953 = !DILocation(line: 4489, column: 25, scope: !18951)
!18954 = !DILocation(line: 4489, column: 29, scope: !18951)
!18955 = !DILocation(line: 4489, column: 35, scope: !18951)
!18956 = !DILocation(line: 4489, column: 6, scope: !18868)
!18957 = !DILocation(line: 4491, column: 15, scope: !18958)
!18958 = distinct !DILexicalBlock(scope: !18951, file: !3, line: 4490, column: 4)
!18959 = !DILocation(line: 4491, column: 25, scope: !18958)
!18960 = !DILocation(line: 4493, column: 10, scope: !18958)
!18961 = !DILocation(line: 4493, column: 14, scope: !18958)
!18962 = !DILocation(line: 4493, column: 19, scope: !18958)
!18963 = !DILocation(line: 4493, column: 23, scope: !18958)
!18964 = !DILocation(line: 4493, column: 28, scope: !18958)
!18965 = !DILocation(line: 4493, column: 31, scope: !18958)
!18966 = !DILocation(line: 4493, column: 41, scope: !18958)
!18967 = !DILocation(line: 4493, column: 50, scope: !18958)
!18968 = !DILocation(line: 4493, column: 56, scope: !18958)
!18969 = !DILocation(line: 4493, column: 54, scope: !18958)
!18970 = !DILocation(line: 4491, column: 4, scope: !18958)
!18971 = !DILocation(line: 4494, column: 15, scope: !18958)
!18972 = !DILocation(line: 4494, column: 25, scope: !18958)
!18973 = !DILocation(line: 4494, column: 48, scope: !18958)
!18974 = !DILocation(line: 4494, column: 4, scope: !18958)
!18975 = !DILocation(line: 4495, column: 15, scope: !18958)
!18976 = !DILocation(line: 4495, column: 25, scope: !18958)
!18977 = !DILocation(line: 4495, column: 48, scope: !18958)
!18978 = !DILocation(line: 4495, column: 4, scope: !18958)
!18979 = !DILocation(line: 4496, column: 15, scope: !18958)
!18980 = !DILocation(line: 4496, column: 25, scope: !18958)
!18981 = !DILocation(line: 4496, column: 48, scope: !18958)
!18982 = !DILocation(line: 4496, column: 4, scope: !18958)
!18983 = !DILocation(line: 4497, column: 15, scope: !18958)
!18984 = !DILocation(line: 4497, column: 25, scope: !18958)
!18985 = !DILocation(line: 4497, column: 48, scope: !18958)
!18986 = !DILocation(line: 4497, column: 4, scope: !18958)
!18987 = !DILocation(line: 4498, column: 15, scope: !18958)
!18988 = !DILocation(line: 4498, column: 25, scope: !18958)
!18989 = !DILocation(line: 4498, column: 48, scope: !18958)
!18990 = !DILocation(line: 4498, column: 4, scope: !18958)
!18991 = !DILocation(line: 4499, column: 15, scope: !18958)
!18992 = !DILocation(line: 4499, column: 25, scope: !18958)
!18993 = !DILocation(line: 4499, column: 48, scope: !18958)
!18994 = !DILocation(line: 4499, column: 4, scope: !18958)
!18995 = !DILocation(line: 4500, column: 15, scope: !18958)
!18996 = !DILocation(line: 4500, column: 25, scope: !18958)
!18997 = !DILocation(line: 4500, column: 60, scope: !18958)
!18998 = !DILocation(line: 4500, column: 72, scope: !18958)
!18999 = !DILocation(line: 4500, column: 4, scope: !18958)
!19000 = !DILocation(line: 4501, column: 4, scope: !18958)
!19001 = !DILocation(line: 4502, column: 2, scope: !18868)
!19002 = !DILocation(line: 4459, column: 29, scope: !18863)
!19003 = !DILocation(line: 4459, column: 7, scope: !18863)
!19004 = distinct !{!19004, !18866, !19005}
!19005 = !DILocation(line: 4502, column: 2, scope: !18860)
!19006 = !DILocation(line: 4503, column: 7, scope: !18842)
!19007 = !DILocation(line: 4451, column: 34, scope: !18837)
!19008 = !DILocation(line: 4451, column: 5, scope: !18837)
!19009 = distinct !{!19009, !18840, !19010}
!19010 = !DILocation(line: 4503, column: 7, scope: !18834)
!19011 = !DILocation(line: 4506, column: 5, scope: !18820)
!19012 = !DILocation(line: 4506, column: 12, scope: !18820)
!19013 = !DILocation(line: 4506, column: 23, scope: !18820)
!19014 = !DILocation(line: 4508, column: 15, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !18820, file: !3, line: 4507, column: 7)
!19016 = !DILocation(line: 4508, column: 21, scope: !19015)
!19017 = !DILocation(line: 4508, column: 14, scope: !19015)
!19018 = !DILocation(line: 4508, column: 12, scope: !19015)
!19019 = !DILocation(line: 4509, column: 11, scope: !19015)
!19020 = !DILocation(line: 4509, column: 6, scope: !19015)
!19021 = !DILocation(line: 4509, column: 9, scope: !19015)
!19022 = !DILocation(line: 4511, column: 11, scope: !19015)
!19023 = !DILocation(line: 4511, column: 17, scope: !19015)
!19024 = !DILocation(line: 4511, column: 8, scope: !19015)
!19025 = !DILocation(line: 4512, column: 14, scope: !19015)
!19026 = !DILocation(line: 4512, column: 12, scope: !19015)
!19027 = !DILocation(line: 4513, column: 13, scope: !19015)
!19028 = distinct !{!19028, !19011, !19029}
!19029 = !DILocation(line: 4514, column: 7, scope: !18820)
!19030 = !DILocation(line: 4516, column: 10, scope: !19031)
!19031 = distinct !DILexicalBlock(scope: !18820, file: !3, line: 4516, column: 9)
!19032 = !DILocation(line: 4516, column: 19, scope: !19031)
!19033 = !DILocation(line: 4516, column: 28, scope: !19031)
!19034 = !DILocation(line: 4516, column: 32, scope: !19031)
!19035 = !DILocation(line: 4516, column: 38, scope: !19031)
!19036 = !DILocation(line: 4516, column: 9, scope: !18820)
!19037 = !DILocation(line: 4518, column: 18, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19031, file: !3, line: 4517, column: 7)
!19039 = !DILocation(line: 4518, column: 28, scope: !19038)
!19040 = !DILocation(line: 4520, column: 6, scope: !19038)
!19041 = !DILocation(line: 4520, column: 10, scope: !19038)
!19042 = !DILocation(line: 4520, column: 15, scope: !19038)
!19043 = !DILocation(line: 4520, column: 19, scope: !19038)
!19044 = !DILocation(line: 4520, column: 24, scope: !19038)
!19045 = !DILocation(line: 4520, column: 34, scope: !19038)
!19046 = !DILocation(line: 4520, column: 43, scope: !19038)
!19047 = !DILocation(line: 4520, column: 49, scope: !19038)
!19048 = !DILocation(line: 4520, column: 47, scope: !19038)
!19049 = !DILocation(line: 4518, column: 7, scope: !19038)
!19050 = !DILocation(line: 4522, column: 18, scope: !19038)
!19051 = !DILocation(line: 4522, column: 28, scope: !19038)
!19052 = !DILocation(line: 4522, column: 51, scope: !19038)
!19053 = !DILocation(line: 4522, column: 7, scope: !19038)
!19054 = !DILocation(line: 4523, column: 18, scope: !19038)
!19055 = !DILocation(line: 4523, column: 28, scope: !19038)
!19056 = !DILocation(line: 4523, column: 51, scope: !19038)
!19057 = !DILocation(line: 4523, column: 7, scope: !19038)
!19058 = !DILocation(line: 4524, column: 18, scope: !19038)
!19059 = !DILocation(line: 4524, column: 28, scope: !19038)
!19060 = !DILocation(line: 4524, column: 51, scope: !19038)
!19061 = !DILocation(line: 4524, column: 7, scope: !19038)
!19062 = !DILocation(line: 4525, column: 18, scope: !19038)
!19063 = !DILocation(line: 4525, column: 28, scope: !19038)
!19064 = !DILocation(line: 4525, column: 51, scope: !19038)
!19065 = !DILocation(line: 4525, column: 7, scope: !19038)
!19066 = !DILocation(line: 4526, column: 18, scope: !19038)
!19067 = !DILocation(line: 4526, column: 28, scope: !19038)
!19068 = !DILocation(line: 4526, column: 51, scope: !19038)
!19069 = !DILocation(line: 4526, column: 7, scope: !19038)
!19070 = !DILocation(line: 4527, column: 18, scope: !19038)
!19071 = !DILocation(line: 4527, column: 28, scope: !19038)
!19072 = !DILocation(line: 4527, column: 51, scope: !19038)
!19073 = !DILocation(line: 4527, column: 7, scope: !19038)
!19074 = !DILocation(line: 4528, column: 18, scope: !19038)
!19075 = !DILocation(line: 4528, column: 28, scope: !19038)
!19076 = !DILocation(line: 4528, column: 60, scope: !19038)
!19077 = !DILocation(line: 4528, column: 7, scope: !19038)
!19078 = !DILocation(line: 4529, column: 7, scope: !19038)
!19079 = !DILocation(line: 4531, column: 10, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !18820, file: !3, line: 4531, column: 9)
!19081 = !DILocation(line: 4531, column: 19, scope: !19080)
!19082 = !DILocation(line: 4531, column: 28, scope: !19080)
!19083 = !DILocation(line: 4531, column: 32, scope: !19080)
!19084 = !DILocation(line: 4531, column: 38, scope: !19080)
!19085 = !DILocation(line: 4531, column: 9, scope: !18820)
!19086 = !DILocation(line: 4533, column: 18, scope: !19087)
!19087 = distinct !DILexicalBlock(scope: !19080, file: !3, line: 4532, column: 7)
!19088 = !DILocation(line: 4533, column: 28, scope: !19087)
!19089 = !DILocation(line: 4533, column: 7, scope: !19087)
!19090 = !DILocation(line: 4534, column: 19, scope: !19087)
!19091 = !DILocation(line: 4534, column: 29, scope: !19087)
!19092 = !DILocation(line: 4534, column: 40, scope: !19087)
!19093 = !DILocation(line: 4534, column: 53, scope: !19087)
!19094 = !DILocation(line: 4534, column: 58, scope: !19087)
!19095 = !DILocation(line: 4534, column: 65, scope: !19087)
!19096 = !DILocation(line: 4534, column: 71, scope: !19087)
!19097 = !DILocation(line: 4534, column: 69, scope: !19087)
!19098 = !DILocation(line: 4534, column: 62, scope: !19087)
!19099 = !DILocation(line: 4534, column: 7, scope: !19087)
!19100 = !DILocation(line: 4535, column: 7, scope: !19087)
!19101 = !DILocation(line: 4536, column: 5, scope: !18820)
!19102 = !DILocation(line: 4445, column: 32, scope: !18815)
!19103 = !DILocation(line: 4445, column: 3, scope: !18815)
!19104 = distinct !{!19104, !18818, !19105}
!19105 = !DILocation(line: 4536, column: 5, scope: !18812)
!19106 = !DILocation(line: 4538, column: 3, scope: !18720)
!19107 = !DILocation(line: 4539, column: 3, scope: !18720)
!19108 = distinct !DISubprogram(name: "combineSeparateTileSamples32bits", scope: !3, file: !3, line: 4542, type: !18068, scopeLine: 4546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!19109 = !DILocalVariable(name: "in", arg: 1, scope: !19108, file: !3, line: 4542, type: !18070)
!19110 = !DILocation(line: 4542, column: 42, scope: !19108)
!19111 = !DILocalVariable(name: "out", arg: 2, scope: !19108, file: !3, line: 4542, type: !116)
!19112 = !DILocation(line: 4542, column: 55, scope: !19108)
!19113 = !DILocalVariable(name: "cols", arg: 3, scope: !19108, file: !3, line: 4542, type: !105)
!19114 = !DILocation(line: 4542, column: 67, scope: !19108)
!19115 = !DILocalVariable(name: "rows", arg: 4, scope: !19108, file: !3, line: 4543, type: !105)
!19116 = !DILocation(line: 4543, column: 42, scope: !19108)
!19117 = !DILocalVariable(name: "imagewidth", arg: 5, scope: !19108, file: !3, line: 4543, type: !105)
!19118 = !DILocation(line: 4543, column: 55, scope: !19108)
!19119 = !DILocalVariable(name: "tw", arg: 6, scope: !19108, file: !3, line: 4544, type: !105)
!19120 = !DILocation(line: 4544, column: 42, scope: !19108)
!19121 = !DILocalVariable(name: "spp", arg: 7, scope: !19108, file: !3, line: 4544, type: !103)
!19122 = !DILocation(line: 4544, column: 53, scope: !19108)
!19123 = !DILocalVariable(name: "bps", arg: 8, scope: !19108, file: !3, line: 4544, type: !103)
!19124 = !DILocation(line: 4544, column: 65, scope: !19108)
!19125 = !DILocalVariable(name: "dumpfile", arg: 9, scope: !19108, file: !3, line: 4545, type: !470)
!19126 = !DILocation(line: 4545, column: 35, scope: !19108)
!19127 = !DILocalVariable(name: "format", arg: 10, scope: !19108, file: !3, line: 4545, type: !110)
!19128 = !DILocation(line: 4545, column: 49, scope: !19108)
!19129 = !DILocalVariable(name: "level", arg: 11, scope: !19108, file: !3, line: 4545, type: !110)
!19130 = !DILocation(line: 4545, column: 61, scope: !19108)
!19131 = !DILocalVariable(name: "ready_bits", scope: !19108, file: !3, line: 4547, type: !110)
!19132 = !DILocation(line: 4547, column: 10, scope: !19108)
!19133 = !DILocalVariable(name: "shift_width", scope: !19108, file: !3, line: 4547, type: !110)
!19134 = !DILocation(line: 4547, column: 26, scope: !19108)
!19135 = !DILocalVariable(name: "src_rowsize", scope: !19108, file: !3, line: 4548, type: !105)
!19136 = !DILocation(line: 4548, column: 10, scope: !19108)
!19137 = !DILocalVariable(name: "dst_rowsize", scope: !19108, file: !3, line: 4548, type: !105)
!19138 = !DILocation(line: 4548, column: 23, scope: !19108)
!19139 = !DILocalVariable(name: "bit_offset", scope: !19108, file: !3, line: 4548, type: !105)
!19140 = !DILocation(line: 4548, column: 36, scope: !19108)
!19141 = !DILocalVariable(name: "src_offset", scope: !19108, file: !3, line: 4548, type: !105)
!19142 = !DILocation(line: 4548, column: 48, scope: !19108)
!19143 = !DILocalVariable(name: "src_byte", scope: !19108, file: !3, line: 4549, type: !105)
!19144 = !DILocation(line: 4549, column: 10, scope: !19108)
!19145 = !DILocalVariable(name: "src_bit", scope: !19108, file: !3, line: 4549, type: !105)
!19146 = !DILocation(line: 4549, column: 24, scope: !19108)
!19147 = !DILocalVariable(name: "row", scope: !19108, file: !3, line: 4550, type: !105)
!19148 = !DILocation(line: 4550, column: 10, scope: !19108)
!19149 = !DILocalVariable(name: "col", scope: !19108, file: !3, line: 4550, type: !105)
!19150 = !DILocation(line: 4550, column: 15, scope: !19108)
!19151 = !DILocalVariable(name: "longbuff1", scope: !19108, file: !3, line: 4551, type: !105)
!19152 = !DILocation(line: 4551, column: 10, scope: !19108)
!19153 = !DILocalVariable(name: "longbuff2", scope: !19108, file: !3, line: 4551, type: !105)
!19154 = !DILocation(line: 4551, column: 25, scope: !19108)
!19155 = !DILocalVariable(name: "maskbits", scope: !19108, file: !3, line: 4552, type: !115)
!19156 = !DILocation(line: 4552, column: 10, scope: !19108)
!19157 = !DILocalVariable(name: "matchbits", scope: !19108, file: !3, line: 4552, type: !115)
!19158 = !DILocation(line: 4552, column: 24, scope: !19108)
!19159 = !DILocalVariable(name: "buff1", scope: !19108, file: !3, line: 4553, type: !115)
!19160 = !DILocation(line: 4553, column: 10, scope: !19108)
!19161 = !DILocalVariable(name: "buff2", scope: !19108, file: !3, line: 4553, type: !115)
!19162 = !DILocation(line: 4553, column: 21, scope: !19108)
!19163 = !DILocalVariable(name: "buff3", scope: !19108, file: !3, line: 4553, type: !115)
!19164 = !DILocation(line: 4553, column: 32, scope: !19108)
!19165 = !DILocalVariable(name: "bytebuff1", scope: !19108, file: !3, line: 4554, type: !114)
!19166 = !DILocation(line: 4554, column: 10, scope: !19108)
!19167 = !DILocalVariable(name: "bytebuff2", scope: !19108, file: !3, line: 4554, type: !114)
!19168 = !DILocation(line: 4554, column: 25, scope: !19108)
!19169 = !DILocalVariable(name: "bytebuff3", scope: !19108, file: !3, line: 4554, type: !114)
!19170 = !DILocation(line: 4554, column: 40, scope: !19108)
!19171 = !DILocalVariable(name: "bytebuff4", scope: !19108, file: !3, line: 4554, type: !114)
!19172 = !DILocation(line: 4554, column: 55, scope: !19108)
!19173 = !DILocalVariable(name: "s", scope: !19108, file: !3, line: 4555, type: !7616)
!19174 = !DILocation(line: 4555, column: 13, scope: !19108)
!19175 = !DILocalVariable(name: "src", scope: !19108, file: !3, line: 4556, type: !106)
!19176 = !DILocation(line: 4556, column: 18, scope: !19108)
!19177 = !DILocation(line: 4556, column: 24, scope: !19108)
!19178 = !DILocalVariable(name: "dst", scope: !19108, file: !3, line: 4557, type: !106)
!19179 = !DILocation(line: 4557, column: 18, scope: !19108)
!19180 = !DILocation(line: 4557, column: 24, scope: !19108)
!19181 = !DILocalVariable(name: "action", scope: !19108, file: !3, line: 4558, type: !18441)
!19182 = !DILocation(line: 4558, column: 18, scope: !19108)
!19183 = !DILocation(line: 4560, column: 8, scope: !19184)
!19184 = distinct !DILexicalBlock(scope: !19108, file: !3, line: 4560, column: 7)
!19185 = !DILocation(line: 4560, column: 12, scope: !19184)
!19186 = !DILocation(line: 4560, column: 21, scope: !19184)
!19187 = !DILocation(line: 4560, column: 25, scope: !19184)
!19188 = !DILocation(line: 4560, column: 29, scope: !19184)
!19189 = !DILocation(line: 4560, column: 7, scope: !19108)
!19190 = !DILocation(line: 4562, column: 5, scope: !19191)
!19191 = distinct !DILexicalBlock(scope: !19184, file: !3, line: 4561, column: 5)
!19192 = !DILocation(line: 4563, column: 5, scope: !19191)
!19193 = !DILocation(line: 4566, column: 19, scope: !19108)
!19194 = !DILocation(line: 4566, column: 25, scope: !19108)
!19195 = !DILocation(line: 4566, column: 23, scope: !19108)
!19196 = !DILocation(line: 4566, column: 29, scope: !19108)
!19197 = !DILocation(line: 4566, column: 34, scope: !19108)
!19198 = !DILocation(line: 4566, column: 15, scope: !19108)
!19199 = !DILocation(line: 4567, column: 19, scope: !19108)
!19200 = !DILocation(line: 4567, column: 32, scope: !19108)
!19201 = !DILocation(line: 4567, column: 30, scope: !19108)
!19202 = !DILocation(line: 4567, column: 38, scope: !19108)
!19203 = !DILocation(line: 4567, column: 36, scope: !19108)
!19204 = !DILocation(line: 4567, column: 43, scope: !19108)
!19205 = !DILocation(line: 4567, column: 48, scope: !19108)
!19206 = !DILocation(line: 4567, column: 15, scope: !19108)
!19207 = !DILocation(line: 4568, column: 36, scope: !19108)
!19208 = !DILocation(line: 4568, column: 34, scope: !19108)
!19209 = !DILocation(line: 4568, column: 26, scope: !19108)
!19210 = !DILocation(line: 4568, column: 12, scope: !19108)
!19211 = !DILocation(line: 4569, column: 19, scope: !19108)
!19212 = !DILocation(line: 4569, column: 23, scope: !19108)
!19213 = !DILocation(line: 4569, column: 28, scope: !19108)
!19214 = !DILocation(line: 4569, column: 33, scope: !19108)
!19215 = !DILocation(line: 4569, column: 15, scope: !19108)
!19216 = !DILocation(line: 4571, column: 12, scope: !19217)
!19217 = distinct !DILexicalBlock(scope: !19108, file: !3, line: 4571, column: 3)
!19218 = !DILocation(line: 4571, column: 8, scope: !19217)
!19219 = !DILocation(line: 4571, column: 17, scope: !19220)
!19220 = distinct !DILexicalBlock(scope: !19217, file: !3, line: 4571, column: 3)
!19221 = !DILocation(line: 4571, column: 23, scope: !19220)
!19222 = !DILocation(line: 4571, column: 21, scope: !19220)
!19223 = !DILocation(line: 4571, column: 3, scope: !19217)
!19224 = !DILocation(line: 4573, column: 16, scope: !19225)
!19225 = distinct !DILexicalBlock(scope: !19220, file: !3, line: 4572, column: 5)
!19226 = !DILocation(line: 4574, column: 19, scope: !19225)
!19227 = !DILocation(line: 4574, column: 11, scope: !19225)
!19228 = !DILocation(line: 4575, column: 11, scope: !19225)
!19229 = !DILocation(line: 4575, column: 18, scope: !19225)
!19230 = !DILocation(line: 4575, column: 24, scope: !19225)
!19231 = !DILocation(line: 4575, column: 22, scope: !19225)
!19232 = !DILocation(line: 4575, column: 15, scope: !19225)
!19233 = !DILocation(line: 4575, column: 9, scope: !19225)
!19234 = !DILocation(line: 4576, column: 18, scope: !19225)
!19235 = !DILocation(line: 4576, column: 24, scope: !19225)
!19236 = !DILocation(line: 4576, column: 22, scope: !19225)
!19237 = !DILocation(line: 4576, column: 16, scope: !19225)
!19238 = !DILocation(line: 4577, column: 14, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19225, file: !3, line: 4577, column: 5)
!19240 = !DILocation(line: 4577, column: 10, scope: !19239)
!19241 = !DILocation(line: 4577, column: 19, scope: !19242)
!19242 = distinct !DILexicalBlock(scope: !19239, file: !3, line: 4577, column: 5)
!19243 = !DILocation(line: 4577, column: 25, scope: !19242)
!19244 = !DILocation(line: 4577, column: 23, scope: !19242)
!19245 = !DILocation(line: 4577, column: 5, scope: !19239)
!19246 = !DILocation(line: 4580, column: 20, scope: !19247)
!19247 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 4578, column: 7)
!19248 = !DILocation(line: 4580, column: 26, scope: !19247)
!19249 = !DILocation(line: 4580, column: 24, scope: !19247)
!19250 = !DILocation(line: 4580, column: 18, scope: !19247)
!19251 = !DILocation(line: 4581, column: 18, scope: !19247)
!19252 = !DILocation(line: 4581, column: 29, scope: !19247)
!19253 = !DILocation(line: 4581, column: 16, scope: !19247)
!19254 = !DILocation(line: 4582, column: 18, scope: !19247)
!19255 = !DILocation(line: 4582, column: 29, scope: !19247)
!19256 = !DILocation(line: 4582, column: 16, scope: !19247)
!19257 = !DILocation(line: 4584, column: 19, scope: !19247)
!19258 = !DILocation(line: 4584, column: 37, scope: !19247)
!19259 = !DILocation(line: 4584, column: 35, scope: !19247)
!19260 = !DILocation(line: 4584, column: 47, scope: !19247)
!19261 = !DILocation(line: 4584, column: 45, scope: !19247)
!19262 = !DILocation(line: 4584, column: 28, scope: !19247)
!19263 = !DILocation(line: 4584, column: 17, scope: !19247)
!19264 = !DILocation(line: 4585, column: 14, scope: !19265)
!19265 = distinct !DILexicalBlock(scope: !19247, file: !3, line: 4585, column: 7)
!19266 = !DILocation(line: 4585, column: 12, scope: !19265)
!19267 = !DILocation(line: 4585, column: 19, scope: !19268)
!19268 = distinct !DILexicalBlock(scope: !19265, file: !3, line: 4585, column: 7)
!19269 = !DILocation(line: 4585, column: 23, scope: !19268)
!19270 = !DILocation(line: 4585, column: 21, scope: !19268)
!19271 = !DILocation(line: 4585, column: 7, scope: !19265)
!19272 = !DILocation(line: 4587, column: 8, scope: !19273)
!19273 = distinct !DILexicalBlock(scope: !19268, file: !3, line: 4586, column: 2)
!19274 = !DILocation(line: 4587, column: 11, scope: !19273)
!19275 = !DILocation(line: 4587, column: 16, scope: !19273)
!19276 = !DILocation(line: 4587, column: 14, scope: !19273)
!19277 = !DILocation(line: 4587, column: 29, scope: !19273)
!19278 = !DILocation(line: 4587, column: 27, scope: !19273)
!19279 = !DILocation(line: 4587, column: 6, scope: !19273)
!19280 = !DILocation(line: 4588, column: 6, scope: !19281)
!19281 = distinct !DILexicalBlock(scope: !19273, file: !3, line: 4588, column: 6)
!19282 = !DILocation(line: 4588, column: 6, scope: !19273)
!19283 = !DILocation(line: 4590, column: 17, scope: !19284)
!19284 = distinct !DILexicalBlock(scope: !19281, file: !3, line: 4589, column: 4)
!19285 = !DILocation(line: 4590, column: 24, scope: !19284)
!19286 = !DILocation(line: 4590, column: 34, scope: !19284)
!19287 = !DILocation(line: 4590, column: 41, scope: !19284)
!19288 = !DILocation(line: 4590, column: 31, scope: !19284)
!19289 = !DILocation(line: 4590, column: 51, scope: !19284)
!19290 = !DILocation(line: 4590, column: 58, scope: !19284)
!19291 = !DILocation(line: 4590, column: 48, scope: !19284)
!19292 = !DILocation(line: 4590, column: 66, scope: !19284)
!19293 = !DILocation(line: 4590, column: 64, scope: !19284)
!19294 = !DILocation(line: 4590, column: 14, scope: !19284)
!19295 = !DILocation(line: 4591, column: 16, scope: !19284)
!19296 = !DILocation(line: 4591, column: 14, scope: !19284)
!19297 = !DILocation(line: 4592, column: 4, scope: !19284)
!19298 = !DILocation(line: 4595, column: 17, scope: !19299)
!19299 = distinct !DILexicalBlock(scope: !19281, file: !3, line: 4594, column: 4)
!19300 = !DILocation(line: 4595, column: 24, scope: !19299)
!19301 = !DILocation(line: 4595, column: 34, scope: !19299)
!19302 = !DILocation(line: 4595, column: 41, scope: !19299)
!19303 = !DILocation(line: 4595, column: 31, scope: !19299)
!19304 = !DILocation(line: 4595, column: 51, scope: !19299)
!19305 = !DILocation(line: 4595, column: 58, scope: !19299)
!19306 = !DILocation(line: 4595, column: 48, scope: !19299)
!19307 = !DILocation(line: 4595, column: 66, scope: !19299)
!19308 = !DILocation(line: 4595, column: 64, scope: !19299)
!19309 = !DILocation(line: 4595, column: 14, scope: !19299)
!19310 = !DILocation(line: 4596, column: 23, scope: !19299)
!19311 = !DILocation(line: 4596, column: 21, scope: !19299)
!19312 = !DILocation(line: 4599, column: 19, scope: !19273)
!19313 = !DILocation(line: 4599, column: 11, scope: !19273)
!19314 = !DILocation(line: 4599, column: 29, scope: !19273)
!19315 = !DILocation(line: 4599, column: 38, scope: !19273)
!19316 = !DILocation(line: 4599, column: 36, scope: !19273)
!19317 = !DILocation(line: 4599, column: 8, scope: !19273)
!19318 = !DILocation(line: 4600, column: 11, scope: !19273)
!19319 = !DILocation(line: 4600, column: 19, scope: !19273)
!19320 = !DILocation(line: 4600, column: 17, scope: !19273)
!19321 = !DILocation(line: 4600, column: 34, scope: !19273)
!19322 = !DILocation(line: 4600, column: 30, scope: !19273)
!19323 = !DILocation(line: 4600, column: 8, scope: !19273)
!19324 = !DILocation(line: 4603, column: 6, scope: !19325)
!19325 = distinct !DILexicalBlock(scope: !19273, file: !3, line: 4603, column: 6)
!19326 = !DILocation(line: 4603, column: 17, scope: !19325)
!19327 = !DILocation(line: 4603, column: 6, scope: !19273)
!19328 = !DILocation(line: 4605, column: 17, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19325, file: !3, line: 4604, column: 4)
!19330 = !DILocation(line: 4605, column: 23, scope: !19329)
!19331 = !DILocation(line: 4605, column: 16, scope: !19329)
!19332 = !DILocation(line: 4605, column: 14, scope: !19329)
!19333 = !DILocation(line: 4606, column: 13, scope: !19329)
!19334 = !DILocation(line: 4606, column: 8, scope: !19329)
!19335 = !DILocation(line: 4606, column: 11, scope: !19329)
!19336 = !DILocation(line: 4607, column: 17, scope: !19329)
!19337 = !DILocation(line: 4607, column: 23, scope: !19329)
!19338 = !DILocation(line: 4607, column: 16, scope: !19329)
!19339 = !DILocation(line: 4607, column: 14, scope: !19329)
!19340 = !DILocation(line: 4608, column: 13, scope: !19329)
!19341 = !DILocation(line: 4608, column: 8, scope: !19329)
!19342 = !DILocation(line: 4608, column: 11, scope: !19329)
!19343 = !DILocation(line: 4609, column: 17, scope: !19329)
!19344 = !DILocation(line: 4609, column: 23, scope: !19329)
!19345 = !DILocation(line: 4609, column: 16, scope: !19329)
!19346 = !DILocation(line: 4609, column: 14, scope: !19329)
!19347 = !DILocation(line: 4610, column: 13, scope: !19329)
!19348 = !DILocation(line: 4610, column: 8, scope: !19329)
!19349 = !DILocation(line: 4610, column: 11, scope: !19329)
!19350 = !DILocation(line: 4611, column: 17, scope: !19329)
!19351 = !DILocation(line: 4611, column: 23, scope: !19329)
!19352 = !DILocation(line: 4611, column: 16, scope: !19329)
!19353 = !DILocation(line: 4611, column: 14, scope: !19329)
!19354 = !DILocation(line: 4612, column: 13, scope: !19329)
!19355 = !DILocation(line: 4612, column: 8, scope: !19329)
!19356 = !DILocation(line: 4612, column: 11, scope: !19329)
!19357 = !DILocation(line: 4613, column: 15, scope: !19329)
!19358 = !DILocation(line: 4616, column: 14, scope: !19329)
!19359 = !DILocation(line: 4616, column: 20, scope: !19329)
!19360 = !DILocation(line: 4616, column: 30, scope: !19329)
!19361 = !DILocation(line: 4616, column: 39, scope: !19329)
!19362 = !DILocation(line: 4616, column: 36, scope: !19329)
!19363 = !DILocation(line: 4616, column: 27, scope: !19329)
!19364 = !DILocation(line: 4616, column: 10, scope: !19329)
!19365 = !DILocation(line: 4617, column: 12, scope: !19329)
!19366 = !DILocation(line: 4617, column: 4, scope: !19329)
!19367 = !DILocation(line: 4618, column: 4, scope: !19329)
!19368 = !DILocation(line: 4621, column: 50, scope: !19369)
!19369 = distinct !DILexicalBlock(scope: !19325, file: !3, line: 4620, column: 4)
!19370 = !DILocation(line: 4621, column: 38, scope: !19369)
!19371 = !DILocation(line: 4621, column: 26, scope: !19369)
!19372 = !DILocation(line: 4621, column: 14, scope: !19369)
!19373 = !DILocation(line: 4622, column: 13, scope: !19369)
!19374 = !DILocation(line: 4622, column: 22, scope: !19369)
!19375 = !DILocation(line: 4622, column: 31, scope: !19369)
!19376 = !DILocation(line: 4622, column: 28, scope: !19369)
!19377 = !DILocation(line: 4622, column: 19, scope: !19369)
!19378 = !DILocation(line: 4622, column: 10, scope: !19369)
!19379 = !DILocation(line: 4623, column: 12, scope: !19369)
!19380 = !DILocation(line: 4623, column: 4, scope: !19369)
!19381 = !DILocation(line: 4625, column: 16, scope: !19273)
!19382 = !DILocation(line: 4625, column: 13, scope: !19273)
!19383 = !DILocation(line: 4627, column: 7, scope: !19384)
!19384 = distinct !DILexicalBlock(scope: !19273, file: !3, line: 4627, column: 6)
!19385 = !DILocation(line: 4627, column: 16, scope: !19384)
!19386 = !DILocation(line: 4627, column: 25, scope: !19384)
!19387 = !DILocation(line: 4627, column: 29, scope: !19384)
!19388 = !DILocation(line: 4627, column: 35, scope: !19384)
!19389 = !DILocation(line: 4627, column: 6, scope: !19273)
!19390 = !DILocation(line: 4629, column: 15, scope: !19391)
!19391 = distinct !DILexicalBlock(scope: !19384, file: !3, line: 4628, column: 4)
!19392 = !DILocation(line: 4629, column: 25, scope: !19391)
!19393 = !DILocation(line: 4631, column: 8, scope: !19391)
!19394 = !DILocation(line: 4631, column: 12, scope: !19391)
!19395 = !DILocation(line: 4631, column: 17, scope: !19391)
!19396 = !DILocation(line: 4631, column: 21, scope: !19391)
!19397 = !DILocation(line: 4631, column: 26, scope: !19391)
!19398 = !DILocation(line: 4631, column: 29, scope: !19391)
!19399 = !DILocation(line: 4631, column: 39, scope: !19391)
!19400 = !DILocation(line: 4631, column: 48, scope: !19391)
!19401 = !DILocation(line: 4631, column: 54, scope: !19391)
!19402 = !DILocation(line: 4631, column: 52, scope: !19391)
!19403 = !DILocation(line: 4629, column: 4, scope: !19391)
!19404 = !DILocation(line: 4632, column: 15, scope: !19391)
!19405 = !DILocation(line: 4632, column: 25, scope: !19391)
!19406 = !DILocation(line: 4632, column: 48, scope: !19391)
!19407 = !DILocation(line: 4632, column: 4, scope: !19391)
!19408 = !DILocation(line: 4633, column: 15, scope: !19391)
!19409 = !DILocation(line: 4633, column: 25, scope: !19391)
!19410 = !DILocation(line: 4633, column: 48, scope: !19391)
!19411 = !DILocation(line: 4633, column: 4, scope: !19391)
!19412 = !DILocation(line: 4634, column: 15, scope: !19391)
!19413 = !DILocation(line: 4634, column: 25, scope: !19391)
!19414 = !DILocation(line: 4634, column: 48, scope: !19391)
!19415 = !DILocation(line: 4634, column: 4, scope: !19391)
!19416 = !DILocation(line: 4635, column: 15, scope: !19391)
!19417 = !DILocation(line: 4635, column: 25, scope: !19391)
!19418 = !DILocation(line: 4635, column: 48, scope: !19391)
!19419 = !DILocation(line: 4635, column: 4, scope: !19391)
!19420 = !DILocation(line: 4636, column: 15, scope: !19391)
!19421 = !DILocation(line: 4636, column: 25, scope: !19391)
!19422 = !DILocation(line: 4636, column: 61, scope: !19391)
!19423 = !DILocation(line: 4636, column: 73, scope: !19391)
!19424 = !DILocation(line: 4636, column: 4, scope: !19391)
!19425 = !DILocation(line: 4637, column: 4, scope: !19391)
!19426 = !DILocation(line: 4638, column: 2, scope: !19273)
!19427 = !DILocation(line: 4585, column: 29, scope: !19268)
!19428 = !DILocation(line: 4585, column: 7, scope: !19268)
!19429 = distinct !{!19429, !19271, !19430}
!19430 = !DILocation(line: 4638, column: 2, scope: !19265)
!19431 = !DILocation(line: 4639, column: 7, scope: !19247)
!19432 = !DILocation(line: 4577, column: 34, scope: !19242)
!19433 = !DILocation(line: 4577, column: 5, scope: !19242)
!19434 = distinct !{!19434, !19245, !19435}
!19435 = !DILocation(line: 4639, column: 7, scope: !19239)
!19436 = !DILocation(line: 4640, column: 5, scope: !19225)
!19437 = !DILocation(line: 4640, column: 12, scope: !19225)
!19438 = !DILocation(line: 4640, column: 23, scope: !19225)
!19439 = !DILocation(line: 4642, column: 20, scope: !19440)
!19440 = distinct !DILexicalBlock(scope: !19225, file: !3, line: 4641, column: 7)
!19441 = !DILocation(line: 4642, column: 26, scope: !19440)
!19442 = !DILocation(line: 4642, column: 19, scope: !19440)
!19443 = !DILocation(line: 4642, column: 17, scope: !19440)
!19444 = !DILocation(line: 4643, column: 16, scope: !19440)
!19445 = !DILocation(line: 4643, column: 11, scope: !19440)
!19446 = !DILocation(line: 4643, column: 14, scope: !19440)
!19447 = !DILocation(line: 4644, column: 16, scope: !19440)
!19448 = !DILocation(line: 4644, column: 22, scope: !19440)
!19449 = !DILocation(line: 4644, column: 13, scope: !19440)
!19450 = !DILocation(line: 4645, column: 18, scope: !19440)
!19451 = distinct !{!19451, !19436, !19452}
!19452 = !DILocation(line: 4646, column: 7, scope: !19225)
!19453 = !DILocation(line: 4648, column: 10, scope: !19454)
!19454 = distinct !DILexicalBlock(scope: !19225, file: !3, line: 4648, column: 9)
!19455 = !DILocation(line: 4648, column: 19, scope: !19454)
!19456 = !DILocation(line: 4648, column: 28, scope: !19454)
!19457 = !DILocation(line: 4648, column: 32, scope: !19454)
!19458 = !DILocation(line: 4648, column: 38, scope: !19454)
!19459 = !DILocation(line: 4648, column: 9, scope: !19225)
!19460 = !DILocation(line: 4650, column: 18, scope: !19461)
!19461 = distinct !DILexicalBlock(scope: !19454, file: !3, line: 4649, column: 7)
!19462 = !DILocation(line: 4650, column: 28, scope: !19461)
!19463 = !DILocation(line: 4652, column: 4, scope: !19461)
!19464 = !DILocation(line: 4652, column: 8, scope: !19461)
!19465 = !DILocation(line: 4652, column: 13, scope: !19461)
!19466 = !DILocation(line: 4652, column: 17, scope: !19461)
!19467 = !DILocation(line: 4652, column: 22, scope: !19461)
!19468 = !DILocation(line: 4652, column: 32, scope: !19461)
!19469 = !DILocation(line: 4652, column: 41, scope: !19461)
!19470 = !DILocation(line: 4652, column: 47, scope: !19461)
!19471 = !DILocation(line: 4652, column: 45, scope: !19461)
!19472 = !DILocation(line: 4650, column: 7, scope: !19461)
!19473 = !DILocation(line: 4654, column: 18, scope: !19461)
!19474 = !DILocation(line: 4654, column: 28, scope: !19461)
!19475 = !DILocation(line: 4654, column: 51, scope: !19461)
!19476 = !DILocation(line: 4654, column: 7, scope: !19461)
!19477 = !DILocation(line: 4655, column: 18, scope: !19461)
!19478 = !DILocation(line: 4655, column: 28, scope: !19461)
!19479 = !DILocation(line: 4655, column: 51, scope: !19461)
!19480 = !DILocation(line: 4655, column: 7, scope: !19461)
!19481 = !DILocation(line: 4656, column: 18, scope: !19461)
!19482 = !DILocation(line: 4656, column: 28, scope: !19461)
!19483 = !DILocation(line: 4656, column: 51, scope: !19461)
!19484 = !DILocation(line: 4656, column: 7, scope: !19461)
!19485 = !DILocation(line: 4657, column: 18, scope: !19461)
!19486 = !DILocation(line: 4657, column: 28, scope: !19461)
!19487 = !DILocation(line: 4657, column: 51, scope: !19461)
!19488 = !DILocation(line: 4657, column: 7, scope: !19461)
!19489 = !DILocation(line: 4658, column: 18, scope: !19461)
!19490 = !DILocation(line: 4658, column: 28, scope: !19461)
!19491 = !DILocation(line: 4658, column: 51, scope: !19461)
!19492 = !DILocation(line: 4658, column: 7, scope: !19461)
!19493 = !DILocation(line: 4659, column: 18, scope: !19461)
!19494 = !DILocation(line: 4659, column: 28, scope: !19461)
!19495 = !DILocation(line: 4659, column: 51, scope: !19461)
!19496 = !DILocation(line: 4659, column: 7, scope: !19461)
!19497 = !DILocation(line: 4660, column: 18, scope: !19461)
!19498 = !DILocation(line: 4660, column: 28, scope: !19461)
!19499 = !DILocation(line: 4660, column: 60, scope: !19461)
!19500 = !DILocation(line: 4660, column: 7, scope: !19461)
!19501 = !DILocation(line: 4661, column: 7, scope: !19461)
!19502 = !DILocation(line: 4663, column: 10, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19225, file: !3, line: 4663, column: 9)
!19504 = !DILocation(line: 4663, column: 19, scope: !19503)
!19505 = !DILocation(line: 4663, column: 28, scope: !19503)
!19506 = !DILocation(line: 4663, column: 32, scope: !19503)
!19507 = !DILocation(line: 4663, column: 38, scope: !19503)
!19508 = !DILocation(line: 4663, column: 9, scope: !19225)
!19509 = !DILocation(line: 4665, column: 18, scope: !19510)
!19510 = distinct !DILexicalBlock(scope: !19503, file: !3, line: 4664, column: 7)
!19511 = !DILocation(line: 4665, column: 28, scope: !19510)
!19512 = !DILocation(line: 4665, column: 7, scope: !19510)
!19513 = !DILocation(line: 4666, column: 19, scope: !19510)
!19514 = !DILocation(line: 4666, column: 29, scope: !19510)
!19515 = !DILocation(line: 4666, column: 40, scope: !19510)
!19516 = !DILocation(line: 4666, column: 53, scope: !19510)
!19517 = !DILocation(line: 4666, column: 58, scope: !19510)
!19518 = !DILocation(line: 4666, column: 7, scope: !19510)
!19519 = !DILocation(line: 4667, column: 7, scope: !19510)
!19520 = !DILocation(line: 4668, column: 5, scope: !19225)
!19521 = !DILocation(line: 4571, column: 32, scope: !19220)
!19522 = !DILocation(line: 4571, column: 3, scope: !19220)
!19523 = distinct !{!19523, !19223, !19524}
!19524 = !DILocation(line: 4668, column: 5, scope: !19217)
!19525 = !DILocation(line: 4670, column: 3, scope: !19108)
!19526 = !DILocation(line: 4671, column: 3, scope: !19108)
!19527 = distinct !DISubprogram(name: "dump_wide", scope: !3, file: !3, line: 2552, type: !19528, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!19528 = !DISubroutineType(types: !19529)
!19529 = !{!110, !470, !110, !146, !115}
!19530 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !19527, file: !3, line: 2552, type: !470)
!19531 = !DILocation(line: 2552, column: 29, scope: !19527)
!19532 = !DILocalVariable(name: "format", arg: 2, scope: !19527, file: !3, line: 2552, type: !110)
!19533 = !DILocation(line: 2552, column: 43, scope: !19527)
!19534 = !DILocalVariable(name: "dump_tag", arg: 3, scope: !19527, file: !3, line: 2552, type: !146)
!19535 = !DILocation(line: 2552, column: 57, scope: !19527)
!19536 = !DILocalVariable(name: "data", arg: 4, scope: !19527, file: !3, line: 2552, type: !115)
!19537 = !DILocation(line: 2552, column: 74, scope: !19527)
!19538 = !DILocalVariable(name: "j", scope: !19527, file: !3, line: 2554, type: !110)
!19539 = !DILocation(line: 2554, column: 7, scope: !19527)
!19540 = !DILocalVariable(name: "k", scope: !19527, file: !3, line: 2554, type: !110)
!19541 = !DILocation(line: 2554, column: 10, scope: !19527)
!19542 = !DILocalVariable(name: "dump_array", scope: !19527, file: !3, line: 2555, type: !19543)
!19543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 640, elements: !19544)
!19544 = !{!19545}
!19545 = !DISubrange(count: 80)
!19546 = !DILocation(line: 2555, column: 9, scope: !19527)
!19547 = !DILocalVariable(name: "bitset", scope: !19527, file: !3, line: 2556, type: !107)
!19548 = !DILocation(line: 2556, column: 17, scope: !19527)
!19549 = !DILocation(line: 2558, column: 7, scope: !19550)
!19550 = distinct !DILexicalBlock(scope: !19527, file: !3, line: 2558, column: 7)
!19551 = !DILocation(line: 2558, column: 16, scope: !19550)
!19552 = !DILocation(line: 2558, column: 7, scope: !19527)
!19553 = !DILocation(line: 2560, column: 5, scope: !19554)
!19554 = distinct !DILexicalBlock(scope: !19550, file: !3, line: 2559, column: 5)
!19555 = !DILocation(line: 2561, column: 5, scope: !19554)
!19556 = !DILocation(line: 2564, column: 7, scope: !19557)
!19557 = distinct !DILexicalBlock(scope: !19527, file: !3, line: 2564, column: 7)
!19558 = !DILocation(line: 2564, column: 14, scope: !19557)
!19559 = !DILocation(line: 2564, column: 7, scope: !19527)
!19560 = !DILocation(line: 2566, column: 14, scope: !19561)
!19561 = distinct !DILexicalBlock(scope: !19557, file: !3, line: 2565, column: 5)
!19562 = !DILocation(line: 2566, column: 32, scope: !19561)
!19563 = !DILocation(line: 2566, column: 5, scope: !19561)
!19564 = !DILocation(line: 2567, column: 12, scope: !19565)
!19565 = distinct !DILexicalBlock(scope: !19561, file: !3, line: 2567, column: 5)
!19566 = !DILocation(line: 2567, column: 19, scope: !19565)
!19567 = !DILocation(line: 2567, column: 10, scope: !19565)
!19568 = !DILocation(line: 2567, column: 25, scope: !19569)
!19569 = distinct !DILexicalBlock(scope: !19565, file: !3, line: 2567, column: 5)
!19570 = !DILocation(line: 2567, column: 27, scope: !19569)
!19571 = !DILocation(line: 2567, column: 5, scope: !19565)
!19572 = !DILocation(line: 2569, column: 16, scope: !19573)
!19573 = distinct !DILexicalBlock(scope: !19569, file: !3, line: 2568, column: 7)
!19574 = !DILocation(line: 2569, column: 38, scope: !19573)
!19575 = !DILocation(line: 2569, column: 35, scope: !19573)
!19576 = !DILocation(line: 2569, column: 21, scope: !19573)
!19577 = !DILocation(line: 2569, column: 14, scope: !19573)
!19578 = !DILocation(line: 2570, column: 27, scope: !19573)
!19579 = !DILocation(line: 2570, column: 16, scope: !19573)
!19580 = !DILocation(line: 2570, column: 32, scope: !19573)
!19581 = !DILocation(line: 2570, column: 31, scope: !19573)
!19582 = !DILocation(line: 2570, column: 7, scope: !19573)
!19583 = !DILocation(line: 2571, column: 12, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19573, file: !3, line: 2571, column: 11)
!19585 = !DILocation(line: 2571, column: 14, scope: !19584)
!19586 = !DILocation(line: 2571, column: 19, scope: !19584)
!19587 = !DILocation(line: 2571, column: 11, scope: !19573)
!19588 = !DILocation(line: 2572, column: 31, scope: !19584)
!19589 = !DILocation(line: 2572, column: 20, scope: !19584)
!19590 = !DILocation(line: 2572, column: 11, scope: !19584)
!19591 = !DILocation(line: 2573, column: 7, scope: !19573)
!19592 = !DILocation(line: 2567, column: 34, scope: !19569)
!19593 = !DILocation(line: 2567, column: 39, scope: !19569)
!19594 = !DILocation(line: 2567, column: 5, scope: !19569)
!19595 = distinct !{!19595, !19571, !19596}
!19596 = !DILocation(line: 2573, column: 7, scope: !19565)
!19597 = !DILocation(line: 2574, column: 5, scope: !19561)
!19598 = !DILocation(line: 2574, column: 20, scope: !19561)
!19599 = !DILocation(line: 2575, column: 14, scope: !19561)
!19600 = !DILocation(line: 2575, column: 32, scope: !19561)
!19601 = !DILocation(line: 2575, column: 5, scope: !19561)
!19602 = !DILocation(line: 2576, column: 5, scope: !19561)
!19603 = !DILocation(line: 2579, column: 18, scope: !19604)
!19604 = distinct !DILexicalBlock(scope: !19605, file: !3, line: 2579, column: 9)
!19605 = distinct !DILexicalBlock(scope: !19557, file: !3, line: 2578, column: 5)
!19606 = !DILocation(line: 2579, column: 31, scope: !19604)
!19607 = !DILocation(line: 2579, column: 10, scope: !19604)
!19608 = !DILocation(line: 2579, column: 42, scope: !19604)
!19609 = !DILocation(line: 2579, column: 9, scope: !19605)
!19610 = !DILocation(line: 2581, column: 7, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19604, file: !3, line: 2580, column: 7)
!19612 = !DILocation(line: 2582, column: 7, scope: !19611)
!19613 = !DILocation(line: 2586, column: 3, scope: !19527)
!19614 = !DILocation(line: 2587, column: 3, scope: !19527)
!19615 = distinct !DISubprogram(name: "dump_long", scope: !3, file: !3, line: 2516, type: !19616, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!19616 = !DISubroutineType(types: !19617)
!19617 = !{!110, !470, !110, !146, !105}
!19618 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !19615, file: !3, line: 2516, type: !470)
!19619 = !DILocation(line: 2516, column: 29, scope: !19615)
!19620 = !DILocalVariable(name: "format", arg: 2, scope: !19615, file: !3, line: 2516, type: !110)
!19621 = !DILocation(line: 2516, column: 43, scope: !19615)
!19622 = !DILocalVariable(name: "dump_tag", arg: 3, scope: !19615, file: !3, line: 2516, type: !146)
!19623 = !DILocation(line: 2516, column: 57, scope: !19615)
!19624 = !DILocalVariable(name: "data", arg: 4, scope: !19615, file: !3, line: 2516, type: !105)
!19625 = !DILocation(line: 2516, column: 74, scope: !19615)
!19626 = !DILocalVariable(name: "j", scope: !19615, file: !3, line: 2518, type: !110)
!19627 = !DILocation(line: 2518, column: 7, scope: !19615)
!19628 = !DILocalVariable(name: "k", scope: !19615, file: !3, line: 2518, type: !110)
!19629 = !DILocation(line: 2518, column: 10, scope: !19615)
!19630 = !DILocalVariable(name: "dump_array", scope: !19615, file: !3, line: 2519, type: !19631)
!19631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 320, elements: !19632)
!19632 = !{!19633}
!19633 = !DISubrange(count: 40)
!19634 = !DILocation(line: 2519, column: 9, scope: !19615)
!19635 = !DILocalVariable(name: "bitset", scope: !19615, file: !3, line: 2520, type: !107)
!19636 = !DILocation(line: 2520, column: 17, scope: !19615)
!19637 = !DILocation(line: 2522, column: 7, scope: !19638)
!19638 = distinct !DILexicalBlock(scope: !19615, file: !3, line: 2522, column: 7)
!19639 = !DILocation(line: 2522, column: 16, scope: !19638)
!19640 = !DILocation(line: 2522, column: 7, scope: !19615)
!19641 = !DILocation(line: 2524, column: 5, scope: !19642)
!19642 = distinct !DILexicalBlock(scope: !19638, file: !3, line: 2523, column: 5)
!19643 = !DILocation(line: 2525, column: 5, scope: !19642)
!19644 = !DILocation(line: 2528, column: 7, scope: !19645)
!19645 = distinct !DILexicalBlock(scope: !19615, file: !3, line: 2528, column: 7)
!19646 = !DILocation(line: 2528, column: 14, scope: !19645)
!19647 = !DILocation(line: 2528, column: 7, scope: !19615)
!19648 = !DILocation(line: 2530, column: 14, scope: !19649)
!19649 = distinct !DILexicalBlock(scope: !19645, file: !3, line: 2529, column: 5)
!19650 = !DILocation(line: 2530, column: 32, scope: !19649)
!19651 = !DILocation(line: 2530, column: 5, scope: !19649)
!19652 = !DILocation(line: 2531, column: 12, scope: !19653)
!19653 = distinct !DILexicalBlock(scope: !19649, file: !3, line: 2531, column: 5)
!19654 = !DILocation(line: 2531, column: 19, scope: !19653)
!19655 = !DILocation(line: 2531, column: 10, scope: !19653)
!19656 = !DILocation(line: 2531, column: 25, scope: !19657)
!19657 = distinct !DILexicalBlock(scope: !19653, file: !3, line: 2531, column: 5)
!19658 = !DILocation(line: 2531, column: 27, scope: !19657)
!19659 = !DILocation(line: 2531, column: 5, scope: !19653)
!19660 = !DILocation(line: 2533, column: 16, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19657, file: !3, line: 2532, column: 7)
!19662 = !DILocation(line: 2533, column: 38, scope: !19661)
!19663 = !DILocation(line: 2533, column: 35, scope: !19661)
!19664 = !DILocation(line: 2533, column: 21, scope: !19661)
!19665 = !DILocation(line: 2533, column: 14, scope: !19661)
!19666 = !DILocation(line: 2534, column: 27, scope: !19661)
!19667 = !DILocation(line: 2534, column: 16, scope: !19661)
!19668 = !DILocation(line: 2534, column: 32, scope: !19661)
!19669 = !DILocation(line: 2534, column: 31, scope: !19661)
!19670 = !DILocation(line: 2534, column: 7, scope: !19661)
!19671 = !DILocation(line: 2535, column: 12, scope: !19672)
!19672 = distinct !DILexicalBlock(scope: !19661, file: !3, line: 2535, column: 11)
!19673 = !DILocation(line: 2535, column: 14, scope: !19672)
!19674 = !DILocation(line: 2535, column: 19, scope: !19672)
!19675 = !DILocation(line: 2535, column: 11, scope: !19661)
!19676 = !DILocation(line: 2536, column: 31, scope: !19672)
!19677 = !DILocation(line: 2536, column: 20, scope: !19672)
!19678 = !DILocation(line: 2536, column: 11, scope: !19672)
!19679 = !DILocation(line: 2537, column: 7, scope: !19661)
!19680 = !DILocation(line: 2531, column: 34, scope: !19657)
!19681 = !DILocation(line: 2531, column: 39, scope: !19657)
!19682 = !DILocation(line: 2531, column: 5, scope: !19657)
!19683 = distinct !{!19683, !19659, !19684}
!19684 = !DILocation(line: 2537, column: 7, scope: !19653)
!19685 = !DILocation(line: 2538, column: 5, scope: !19649)
!19686 = !DILocation(line: 2538, column: 20, scope: !19649)
!19687 = !DILocation(line: 2539, column: 14, scope: !19649)
!19688 = !DILocation(line: 2539, column: 32, scope: !19649)
!19689 = !DILocation(line: 2539, column: 5, scope: !19649)
!19690 = !DILocation(line: 2540, column: 5, scope: !19649)
!19691 = !DILocation(line: 2543, column: 18, scope: !19692)
!19692 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 2543, column: 9)
!19693 = distinct !DILexicalBlock(scope: !19645, file: !3, line: 2542, column: 5)
!19694 = !DILocation(line: 2543, column: 31, scope: !19692)
!19695 = !DILocation(line: 2543, column: 10, scope: !19692)
!19696 = !DILocation(line: 2543, column: 42, scope: !19692)
!19697 = !DILocation(line: 2543, column: 9, scope: !19693)
!19698 = !DILocation(line: 2545, column: 7, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19692, file: !3, line: 2544, column: 7)
!19700 = !DILocation(line: 2546, column: 7, scope: !19699)
!19701 = !DILocation(line: 2549, column: 3, scope: !19615)
!19702 = !DILocation(line: 2550, column: 3, scope: !19615)
!19703 = distinct !DISubprogram(name: "dump_byte", scope: !3, file: !3, line: 2444, type: !19704, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!19704 = !DISubroutineType(types: !19705)
!19705 = !{!110, !470, !110, !146, !107}
!19706 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !19703, file: !3, line: 2444, type: !470)
!19707 = !DILocation(line: 2444, column: 29, scope: !19703)
!19708 = !DILocalVariable(name: "format", arg: 2, scope: !19703, file: !3, line: 2444, type: !110)
!19709 = !DILocation(line: 2444, column: 43, scope: !19703)
!19710 = !DILocalVariable(name: "dump_tag", arg: 3, scope: !19703, file: !3, line: 2444, type: !146)
!19711 = !DILocation(line: 2444, column: 57, scope: !19703)
!19712 = !DILocalVariable(name: "data", arg: 4, scope: !19703, file: !3, line: 2444, type: !107)
!19713 = !DILocation(line: 2444, column: 81, scope: !19703)
!19714 = !DILocalVariable(name: "j", scope: !19703, file: !3, line: 2446, type: !110)
!19715 = !DILocation(line: 2446, column: 7, scope: !19703)
!19716 = !DILocalVariable(name: "k", scope: !19703, file: !3, line: 2446, type: !110)
!19717 = !DILocation(line: 2446, column: 10, scope: !19703)
!19718 = !DILocalVariable(name: "dump_array", scope: !19703, file: !3, line: 2447, type: !2030)
!19719 = !DILocation(line: 2447, column: 9, scope: !19703)
!19720 = !DILocalVariable(name: "bitset", scope: !19703, file: !3, line: 2448, type: !107)
!19721 = !DILocation(line: 2448, column: 17, scope: !19703)
!19722 = !DILocation(line: 2450, column: 7, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19703, file: !3, line: 2450, column: 7)
!19724 = !DILocation(line: 2450, column: 16, scope: !19723)
!19725 = !DILocation(line: 2450, column: 7, scope: !19703)
!19726 = !DILocation(line: 2452, column: 5, scope: !19727)
!19727 = distinct !DILexicalBlock(scope: !19723, file: !3, line: 2451, column: 5)
!19728 = !DILocation(line: 2453, column: 5, scope: !19727)
!19729 = !DILocation(line: 2456, column: 7, scope: !19730)
!19730 = distinct !DILexicalBlock(scope: !19703, file: !3, line: 2456, column: 7)
!19731 = !DILocation(line: 2456, column: 14, scope: !19730)
!19732 = !DILocation(line: 2456, column: 7, scope: !19703)
!19733 = !DILocation(line: 2458, column: 14, scope: !19734)
!19734 = distinct !DILexicalBlock(scope: !19730, file: !3, line: 2457, column: 5)
!19735 = !DILocation(line: 2458, column: 32, scope: !19734)
!19736 = !DILocation(line: 2458, column: 5, scope: !19734)
!19737 = !DILocation(line: 2459, column: 12, scope: !19738)
!19738 = distinct !DILexicalBlock(scope: !19734, file: !3, line: 2459, column: 5)
!19739 = !DILocation(line: 2459, column: 19, scope: !19738)
!19740 = !DILocation(line: 2459, column: 10, scope: !19738)
!19741 = !DILocation(line: 2459, column: 24, scope: !19742)
!19742 = distinct !DILexicalBlock(scope: !19738, file: !3, line: 2459, column: 5)
!19743 = !DILocation(line: 2459, column: 26, scope: !19742)
!19744 = !DILocation(line: 2459, column: 5, scope: !19738)
!19745 = !DILocation(line: 2461, column: 16, scope: !19746)
!19746 = distinct !DILexicalBlock(scope: !19742, file: !3, line: 2460, column: 7)
!19747 = !DILocation(line: 2461, column: 45, scope: !19746)
!19748 = !DILocation(line: 2461, column: 42, scope: !19746)
!19749 = !DILocation(line: 2461, column: 21, scope: !19746)
!19750 = !DILocation(line: 2461, column: 14, scope: !19746)
!19751 = !DILocation(line: 2462, column: 27, scope: !19746)
!19752 = !DILocation(line: 2462, column: 16, scope: !19746)
!19753 = !DILocation(line: 2462, column: 32, scope: !19746)
!19754 = !DILocation(line: 2462, column: 31, scope: !19746)
!19755 = !DILocation(line: 2462, column: 7, scope: !19746)
!19756 = !DILocation(line: 2463, column: 7, scope: !19746)
!19757 = !DILocation(line: 2459, column: 32, scope: !19742)
!19758 = !DILocation(line: 2459, column: 37, scope: !19742)
!19759 = !DILocation(line: 2459, column: 5, scope: !19742)
!19760 = distinct !{!19760, !19744, !19761}
!19761 = !DILocation(line: 2463, column: 7, scope: !19738)
!19762 = !DILocation(line: 2464, column: 5, scope: !19734)
!19763 = !DILocation(line: 2464, column: 19, scope: !19734)
!19764 = !DILocation(line: 2465, column: 14, scope: !19734)
!19765 = !DILocation(line: 2465, column: 32, scope: !19734)
!19766 = !DILocation(line: 2465, column: 5, scope: !19734)
!19767 = !DILocation(line: 2466, column: 5, scope: !19734)
!19768 = !DILocation(line: 2469, column: 31, scope: !19769)
!19769 = distinct !DILexicalBlock(scope: !19770, file: !3, line: 2469, column: 9)
!19770 = distinct !DILexicalBlock(scope: !19730, file: !3, line: 2468, column: 5)
!19771 = !DILocation(line: 2469, column: 10, scope: !19769)
!19772 = !DILocation(line: 2469, column: 42, scope: !19769)
!19773 = !DILocation(line: 2469, column: 9, scope: !19770)
!19774 = !DILocation(line: 2471, column: 7, scope: !19775)
!19775 = distinct !DILexicalBlock(scope: !19769, file: !3, line: 2470, column: 7)
!19776 = !DILocation(line: 2472, column: 7, scope: !19775)
!19777 = !DILocation(line: 2476, column: 3, scope: !19703)
!19778 = !DILocation(line: 2477, column: 3, scope: !19703)
!19779 = distinct !DISubprogram(name: "dump_short", scope: !3, file: !3, line: 2479, type: !19780, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!19780 = !DISubroutineType(types: !19781)
!19781 = !{!110, !470, !110, !146, !103}
!19782 = !DILocalVariable(name: "dumpfile", arg: 1, scope: !19779, file: !3, line: 2479, type: !470)
!19783 = !DILocation(line: 2479, column: 30, scope: !19779)
!19784 = !DILocalVariable(name: "format", arg: 2, scope: !19779, file: !3, line: 2479, type: !110)
!19785 = !DILocation(line: 2479, column: 44, scope: !19779)
!19786 = !DILocalVariable(name: "dump_tag", arg: 3, scope: !19779, file: !3, line: 2479, type: !146)
!19787 = !DILocation(line: 2479, column: 58, scope: !19779)
!19788 = !DILocalVariable(name: "data", arg: 4, scope: !19779, file: !3, line: 2479, type: !103)
!19789 = !DILocation(line: 2479, column: 75, scope: !19779)
!19790 = !DILocalVariable(name: "j", scope: !19779, file: !3, line: 2481, type: !110)
!19791 = !DILocation(line: 2481, column: 7, scope: !19779)
!19792 = !DILocalVariable(name: "k", scope: !19779, file: !3, line: 2481, type: !110)
!19793 = !DILocation(line: 2481, column: 10, scope: !19779)
!19794 = !DILocalVariable(name: "dump_array", scope: !19779, file: !3, line: 2482, type: !521)
!19795 = !DILocation(line: 2482, column: 9, scope: !19779)
!19796 = !DILocalVariable(name: "bitset", scope: !19779, file: !3, line: 2483, type: !107)
!19797 = !DILocation(line: 2483, column: 17, scope: !19779)
!19798 = !DILocation(line: 2485, column: 7, scope: !19799)
!19799 = distinct !DILexicalBlock(scope: !19779, file: !3, line: 2485, column: 7)
!19800 = !DILocation(line: 2485, column: 16, scope: !19799)
!19801 = !DILocation(line: 2485, column: 7, scope: !19779)
!19802 = !DILocation(line: 2487, column: 5, scope: !19803)
!19803 = distinct !DILexicalBlock(scope: !19799, file: !3, line: 2486, column: 5)
!19804 = !DILocation(line: 2488, column: 5, scope: !19803)
!19805 = !DILocation(line: 2491, column: 7, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19779, file: !3, line: 2491, column: 7)
!19807 = !DILocation(line: 2491, column: 14, scope: !19806)
!19808 = !DILocation(line: 2491, column: 7, scope: !19779)
!19809 = !DILocation(line: 2493, column: 14, scope: !19810)
!19810 = distinct !DILexicalBlock(scope: !19806, file: !3, line: 2492, column: 5)
!19811 = !DILocation(line: 2493, column: 32, scope: !19810)
!19812 = !DILocation(line: 2493, column: 5, scope: !19810)
!19813 = !DILocation(line: 2494, column: 12, scope: !19814)
!19814 = distinct !DILexicalBlock(scope: !19810, file: !3, line: 2494, column: 5)
!19815 = !DILocation(line: 2494, column: 19, scope: !19814)
!19816 = !DILocation(line: 2494, column: 10, scope: !19814)
!19817 = !DILocation(line: 2494, column: 25, scope: !19818)
!19818 = distinct !DILexicalBlock(scope: !19814, file: !3, line: 2494, column: 5)
!19819 = !DILocation(line: 2494, column: 27, scope: !19818)
!19820 = !DILocation(line: 2494, column: 5, scope: !19814)
!19821 = !DILocation(line: 2496, column: 16, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19818, file: !3, line: 2495, column: 7)
!19823 = !DILocation(line: 2496, column: 45, scope: !19822)
!19824 = !DILocation(line: 2496, column: 42, scope: !19822)
!19825 = !DILocation(line: 2496, column: 21, scope: !19822)
!19826 = !DILocation(line: 2496, column: 14, scope: !19822)
!19827 = !DILocation(line: 2497, column: 27, scope: !19822)
!19828 = !DILocation(line: 2497, column: 16, scope: !19822)
!19829 = !DILocation(line: 2497, column: 32, scope: !19822)
!19830 = !DILocation(line: 2497, column: 31, scope: !19822)
!19831 = !DILocation(line: 2497, column: 7, scope: !19822)
!19832 = !DILocation(line: 2498, column: 12, scope: !19833)
!19833 = distinct !DILexicalBlock(scope: !19822, file: !3, line: 2498, column: 11)
!19834 = !DILocation(line: 2498, column: 14, scope: !19833)
!19835 = !DILocation(line: 2498, column: 19, scope: !19833)
!19836 = !DILocation(line: 2498, column: 11, scope: !19822)
!19837 = !DILocation(line: 2499, column: 31, scope: !19833)
!19838 = !DILocation(line: 2499, column: 20, scope: !19833)
!19839 = !DILocation(line: 2499, column: 11, scope: !19833)
!19840 = !DILocation(line: 2500, column: 7, scope: !19822)
!19841 = !DILocation(line: 2494, column: 34, scope: !19818)
!19842 = !DILocation(line: 2494, column: 39, scope: !19818)
!19843 = !DILocation(line: 2494, column: 5, scope: !19818)
!19844 = distinct !{!19844, !19820, !19845}
!19845 = !DILocation(line: 2500, column: 7, scope: !19814)
!19846 = !DILocation(line: 2501, column: 5, scope: !19810)
!19847 = !DILocation(line: 2501, column: 20, scope: !19810)
!19848 = !DILocation(line: 2502, column: 14, scope: !19810)
!19849 = !DILocation(line: 2502, column: 32, scope: !19810)
!19850 = !DILocation(line: 2502, column: 5, scope: !19810)
!19851 = !DILocation(line: 2503, column: 5, scope: !19810)
!19852 = !DILocation(line: 2506, column: 18, scope: !19853)
!19853 = distinct !DILexicalBlock(scope: !19854, file: !3, line: 2506, column: 9)
!19854 = distinct !DILexicalBlock(scope: !19806, file: !3, line: 2505, column: 5)
!19855 = !DILocation(line: 2506, column: 31, scope: !19853)
!19856 = !DILocation(line: 2506, column: 10, scope: !19853)
!19857 = !DILocation(line: 2506, column: 42, scope: !19853)
!19858 = !DILocation(line: 2506, column: 9, scope: !19854)
!19859 = !DILocation(line: 2508, column: 7, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 2507, column: 7)
!19861 = !DILocation(line: 2509, column: 7, scope: !19860)
!19862 = !DILocation(line: 2513, column: 3, scope: !19779)
!19863 = !DILocation(line: 2514, column: 3, scope: !19779)
!19864 = distinct !DISubprogram(name: "combineSeparateSamplesBytes", scope: !3, file: !3, line: 3626, type: !19865, scopeLine: 3629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!19865 = !DISubroutineType(types: !19866)
!19866 = !{!110, !571, !106, !105, !105, !103, !103, !470, !110, !110}
!19867 = !DILocalVariable(name: "srcbuffs", arg: 1, scope: !19864, file: !3, line: 3626, type: !571)
!19868 = !DILocation(line: 3626, column: 45, scope: !19864)
!19869 = !DILocalVariable(name: "out", arg: 2, scope: !19864, file: !3, line: 3626, type: !106)
!19870 = !DILocation(line: 3626, column: 72, scope: !19864)
!19871 = !DILocalVariable(name: "cols", arg: 3, scope: !19864, file: !3, line: 3627, type: !105)
!19872 = !DILocation(line: 3627, column: 37, scope: !19864)
!19873 = !DILocalVariable(name: "rows", arg: 4, scope: !19864, file: !3, line: 3627, type: !105)
!19874 = !DILocation(line: 3627, column: 50, scope: !19864)
!19875 = !DILocalVariable(name: "spp", arg: 5, scope: !19864, file: !3, line: 3627, type: !103)
!19876 = !DILocation(line: 3627, column: 63, scope: !19864)
!19877 = !DILocalVariable(name: "bps", arg: 6, scope: !19864, file: !3, line: 3627, type: !103)
!19878 = !DILocation(line: 3627, column: 75, scope: !19864)
!19879 = !DILocalVariable(name: "dumpfile", arg: 7, scope: !19864, file: !3, line: 3628, type: !470)
!19880 = !DILocation(line: 3628, column: 36, scope: !19864)
!19881 = !DILocalVariable(name: "format", arg: 8, scope: !19864, file: !3, line: 3628, type: !110)
!19882 = !DILocation(line: 3628, column: 50, scope: !19864)
!19883 = !DILocalVariable(name: "level", arg: 9, scope: !19864, file: !3, line: 3628, type: !110)
!19884 = !DILocation(line: 3628, column: 62, scope: !19864)
!19885 = !DILocalVariable(name: "i", scope: !19864, file: !3, line: 3630, type: !110)
!19886 = !DILocation(line: 3630, column: 7, scope: !19864)
!19887 = !DILocalVariable(name: "bytes_per_sample", scope: !19864, file: !3, line: 3630, type: !110)
!19888 = !DILocation(line: 3630, column: 10, scope: !19864)
!19889 = !DILocalVariable(name: "row", scope: !19864, file: !3, line: 3631, type: !105)
!19890 = !DILocation(line: 3631, column: 10, scope: !19864)
!19891 = !DILocalVariable(name: "col", scope: !19864, file: !3, line: 3631, type: !105)
!19892 = !DILocation(line: 3631, column: 15, scope: !19864)
!19893 = !DILocalVariable(name: "col_offset", scope: !19864, file: !3, line: 3631, type: !105)
!19894 = !DILocation(line: 3631, column: 20, scope: !19864)
!19895 = !DILocalVariable(name: "src_rowsize", scope: !19864, file: !3, line: 3631, type: !105)
!19896 = !DILocation(line: 3631, column: 32, scope: !19864)
!19897 = !DILocalVariable(name: "dst_rowsize", scope: !19864, file: !3, line: 3631, type: !105)
!19898 = !DILocation(line: 3631, column: 45, scope: !19864)
!19899 = !DILocalVariable(name: "row_offset", scope: !19864, file: !3, line: 3631, type: !105)
!19900 = !DILocation(line: 3631, column: 58, scope: !19864)
!19901 = !DILocalVariable(name: "src", scope: !19864, file: !3, line: 3632, type: !106)
!19902 = !DILocation(line: 3632, column: 18, scope: !19864)
!19903 = !DILocalVariable(name: "dst", scope: !19864, file: !3, line: 3633, type: !106)
!19904 = !DILocation(line: 3633, column: 18, scope: !19864)
!19905 = !DILocalVariable(name: "s", scope: !19864, file: !3, line: 3634, type: !7616)
!19906 = !DILocation(line: 3634, column: 13, scope: !19864)
!19907 = !DILocation(line: 3636, column: 9, scope: !19864)
!19908 = !DILocation(line: 3636, column: 7, scope: !19864)
!19909 = !DILocation(line: 3637, column: 9, scope: !19864)
!19910 = !DILocation(line: 3637, column: 7, scope: !19864)
!19911 = !DILocation(line: 3638, column: 8, scope: !19912)
!19912 = distinct !DILexicalBlock(scope: !19864, file: !3, line: 3638, column: 7)
!19913 = !DILocation(line: 3638, column: 12, scope: !19912)
!19914 = !DILocation(line: 3638, column: 21, scope: !19912)
!19915 = !DILocation(line: 3638, column: 25, scope: !19912)
!19916 = !DILocation(line: 3638, column: 29, scope: !19912)
!19917 = !DILocation(line: 3638, column: 7, scope: !19864)
!19918 = !DILocation(line: 3640, column: 5, scope: !19919)
!19919 = distinct !DILexicalBlock(scope: !19912, file: !3, line: 3639, column: 5)
!19920 = !DILocation(line: 3641, column: 5, scope: !19919)
!19921 = !DILocation(line: 3644, column: 23, scope: !19864)
!19922 = !DILocation(line: 3644, column: 27, scope: !19864)
!19923 = !DILocation(line: 3644, column: 32, scope: !19864)
!19924 = !DILocation(line: 3644, column: 20, scope: !19864)
!19925 = !DILocation(line: 3646, column: 19, scope: !19864)
!19926 = !DILocation(line: 3646, column: 25, scope: !19864)
!19927 = !DILocation(line: 3646, column: 23, scope: !19864)
!19928 = !DILocation(line: 3646, column: 31, scope: !19864)
!19929 = !DILocation(line: 3646, column: 36, scope: !19864)
!19930 = !DILocation(line: 3646, column: 15, scope: !19864)
!19931 = !DILocation(line: 3647, column: 19, scope: !19864)
!19932 = !DILocation(line: 3647, column: 25, scope: !19864)
!19933 = !DILocation(line: 3647, column: 23, scope: !19864)
!19934 = !DILocation(line: 3647, column: 31, scope: !19864)
!19935 = !DILocation(line: 3647, column: 29, scope: !19864)
!19936 = !DILocation(line: 3647, column: 37, scope: !19864)
!19937 = !DILocation(line: 3647, column: 42, scope: !19864)
!19938 = !DILocation(line: 3647, column: 15, scope: !19864)
!19939 = !DILocation(line: 3648, column: 12, scope: !19940)
!19940 = distinct !DILexicalBlock(scope: !19864, file: !3, line: 3648, column: 3)
!19941 = !DILocation(line: 3648, column: 8, scope: !19940)
!19942 = !DILocation(line: 3648, column: 17, scope: !19943)
!19943 = distinct !DILexicalBlock(scope: !19940, file: !3, line: 3648, column: 3)
!19944 = !DILocation(line: 3648, column: 23, scope: !19943)
!19945 = !DILocation(line: 3648, column: 21, scope: !19943)
!19946 = !DILocation(line: 3648, column: 3, scope: !19940)
!19947 = !DILocation(line: 3650, column: 10, scope: !19948)
!19948 = distinct !DILexicalBlock(scope: !19949, file: !3, line: 3650, column: 9)
!19949 = distinct !DILexicalBlock(scope: !19943, file: !3, line: 3649, column: 5)
!19950 = !DILocation(line: 3650, column: 19, scope: !19948)
!19951 = !DILocation(line: 3650, column: 28, scope: !19948)
!19952 = !DILocation(line: 3650, column: 32, scope: !19948)
!19953 = !DILocation(line: 3650, column: 38, scope: !19948)
!19954 = !DILocation(line: 3650, column: 9, scope: !19949)
!19955 = !DILocation(line: 3652, column: 14, scope: !19956)
!19956 = distinct !DILexicalBlock(scope: !19957, file: !3, line: 3652, column: 7)
!19957 = distinct !DILexicalBlock(scope: !19948, file: !3, line: 3651, column: 7)
!19958 = !DILocation(line: 3652, column: 12, scope: !19956)
!19959 = !DILocation(line: 3652, column: 19, scope: !19960)
!19960 = distinct !DILexicalBlock(scope: !19956, file: !3, line: 3652, column: 7)
!19961 = !DILocation(line: 3652, column: 23, scope: !19960)
!19962 = !DILocation(line: 3652, column: 21, scope: !19960)
!19963 = !DILocation(line: 3652, column: 7, scope: !19956)
!19964 = !DILocation(line: 3654, column: 20, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19960, file: !3, line: 3653, column: 9)
!19966 = !DILocation(line: 3654, column: 30, scope: !19965)
!19967 = !DILocation(line: 3654, column: 93, scope: !19965)
!19968 = !DILocation(line: 3654, column: 9, scope: !19965)
!19969 = !DILocation(line: 3655, column: 21, scope: !19965)
!19970 = !DILocation(line: 3655, column: 31, scope: !19965)
!19971 = !DILocation(line: 3655, column: 42, scope: !19965)
!19972 = !DILocation(line: 3655, column: 48, scope: !19965)
!19973 = !DILocation(line: 3655, column: 53, scope: !19965)
!19974 = !DILocation(line: 3655, column: 62, scope: !19965)
!19975 = !DILocation(line: 3655, column: 68, scope: !19965)
!19976 = !DILocation(line: 3655, column: 74, scope: !19965)
!19977 = !DILocation(line: 3655, column: 72, scope: !19965)
!19978 = !DILocation(line: 3655, column: 65, scope: !19965)
!19979 = !DILocation(line: 3655, column: 9, scope: !19965)
!19980 = !DILocation(line: 3656, column: 9, scope: !19965)
!19981 = !DILocation(line: 3652, column: 29, scope: !19960)
!19982 = !DILocation(line: 3652, column: 7, scope: !19960)
!19983 = distinct !{!19983, !19963, !19984}
!19984 = !DILocation(line: 3656, column: 9, scope: !19956)
!19985 = !DILocation(line: 3657, column: 7, scope: !19957)
!19986 = !DILocation(line: 3658, column: 11, scope: !19949)
!19987 = !DILocation(line: 3658, column: 18, scope: !19949)
!19988 = !DILocation(line: 3658, column: 24, scope: !19949)
!19989 = !DILocation(line: 3658, column: 22, scope: !19949)
!19990 = !DILocation(line: 3658, column: 15, scope: !19949)
!19991 = !DILocation(line: 3658, column: 9, scope: !19949)
!19992 = !DILocation(line: 3659, column: 18, scope: !19949)
!19993 = !DILocation(line: 3659, column: 24, scope: !19949)
!19994 = !DILocation(line: 3659, column: 22, scope: !19949)
!19995 = !DILocation(line: 3659, column: 16, scope: !19949)
!19996 = !DILocation(line: 3660, column: 14, scope: !19997)
!19997 = distinct !DILexicalBlock(scope: !19949, file: !3, line: 3660, column: 5)
!19998 = !DILocation(line: 3660, column: 10, scope: !19997)
!19999 = !DILocation(line: 3660, column: 19, scope: !20000)
!20000 = distinct !DILexicalBlock(scope: !19997, file: !3, line: 3660, column: 5)
!20001 = !DILocation(line: 3660, column: 25, scope: !20000)
!20002 = !DILocation(line: 3660, column: 23, scope: !20000)
!20003 = !DILocation(line: 3660, column: 5, scope: !19997)
!20004 = !DILocation(line: 3662, column: 20, scope: !20005)
!20005 = distinct !DILexicalBlock(scope: !20000, file: !3, line: 3661, column: 7)
!20006 = !DILocation(line: 3662, column: 34, scope: !20005)
!20007 = !DILocation(line: 3662, column: 41, scope: !20005)
!20008 = !DILocation(line: 3662, column: 45, scope: !20005)
!20009 = !DILocation(line: 3662, column: 38, scope: !20005)
!20010 = !DILocation(line: 3662, column: 31, scope: !20005)
!20011 = !DILocation(line: 3662, column: 18, scope: !20005)
!20012 = !DILocation(line: 3663, column: 14, scope: !20013)
!20013 = distinct !DILexicalBlock(scope: !20005, file: !3, line: 3663, column: 7)
!20014 = !DILocation(line: 3663, column: 12, scope: !20013)
!20015 = !DILocation(line: 3663, column: 20, scope: !20016)
!20016 = distinct !DILexicalBlock(scope: !20013, file: !3, line: 3663, column: 7)
!20017 = !DILocation(line: 3663, column: 24, scope: !20016)
!20018 = !DILocation(line: 3663, column: 22, scope: !20016)
!20019 = !DILocation(line: 3663, column: 29, scope: !20016)
!20020 = !DILocation(line: 3663, column: 33, scope: !20016)
!20021 = !DILocation(line: 3663, column: 35, scope: !20016)
!20022 = !DILocation(line: 0, scope: !20016)
!20023 = !DILocation(line: 3663, column: 7, scope: !20013)
!20024 = !DILocation(line: 3665, column: 15, scope: !20025)
!20025 = distinct !DILexicalBlock(scope: !20016, file: !3, line: 3664, column: 9)
!20026 = !DILocation(line: 3665, column: 24, scope: !20025)
!20027 = !DILocation(line: 3665, column: 29, scope: !20025)
!20028 = !DILocation(line: 3665, column: 27, scope: !20025)
!20029 = !DILocation(line: 3665, column: 13, scope: !20025)
!20030 = !DILocation(line: 3666, column: 16, scope: !20031)
!20031 = distinct !DILexicalBlock(scope: !20025, file: !3, line: 3666, column: 9)
!20032 = !DILocation(line: 3666, column: 14, scope: !20031)
!20033 = !DILocation(line: 3666, column: 21, scope: !20034)
!20034 = distinct !DILexicalBlock(scope: !20031, file: !3, line: 3666, column: 9)
!20035 = !DILocation(line: 3666, column: 25, scope: !20034)
!20036 = !DILocation(line: 3666, column: 23, scope: !20034)
!20037 = !DILocation(line: 3666, column: 9, scope: !20031)
!20038 = !DILocation(line: 3667, column: 26, scope: !20034)
!20039 = !DILocation(line: 3667, column: 32, scope: !20034)
!20040 = !DILocation(line: 3667, column: 30, scope: !20034)
!20041 = !DILocation(line: 3667, column: 24, scope: !20034)
!20042 = !DILocation(line: 3667, column: 13, scope: !20034)
!20043 = !DILocation(line: 3667, column: 19, scope: !20034)
!20044 = !DILocation(line: 3667, column: 17, scope: !20034)
!20045 = !DILocation(line: 3667, column: 22, scope: !20034)
!20046 = !DILocation(line: 3667, column: 11, scope: !20034)
!20047 = !DILocation(line: 3666, column: 44, scope: !20034)
!20048 = !DILocation(line: 3666, column: 9, scope: !20034)
!20049 = distinct !{!20049, !20037, !20050}
!20050 = !DILocation(line: 3667, column: 33, scope: !20031)
!20051 = !DILocation(line: 3668, column: 16, scope: !20025)
!20052 = !DILocation(line: 3668, column: 13, scope: !20025)
!20053 = !DILocation(line: 3669, column: 16, scope: !20025)
!20054 = !DILocation(line: 3669, column: 13, scope: !20025)
!20055 = !DILocation(line: 3670, column: 9, scope: !20025)
!20056 = !DILocation(line: 3663, column: 52, scope: !20016)
!20057 = !DILocation(line: 3663, column: 7, scope: !20016)
!20058 = distinct !{!20058, !20023, !20059}
!20059 = !DILocation(line: 3670, column: 9, scope: !20013)
!20060 = !DILocation(line: 3671, column: 7, scope: !20005)
!20061 = !DILocation(line: 3660, column: 34, scope: !20000)
!20062 = !DILocation(line: 3660, column: 5, scope: !20000)
!20063 = distinct !{!20063, !20003, !20064}
!20064 = !DILocation(line: 3671, column: 7, scope: !19997)
!20065 = !DILocation(line: 3673, column: 10, scope: !20066)
!20066 = distinct !DILexicalBlock(scope: !19949, file: !3, line: 3673, column: 9)
!20067 = !DILocation(line: 3673, column: 19, scope: !20066)
!20068 = !DILocation(line: 3673, column: 28, scope: !20066)
!20069 = !DILocation(line: 3673, column: 32, scope: !20066)
!20070 = !DILocation(line: 3673, column: 38, scope: !20066)
!20071 = !DILocation(line: 3673, column: 9, scope: !19949)
!20072 = !DILocation(line: 3675, column: 18, scope: !20073)
!20073 = distinct !DILexicalBlock(scope: !20066, file: !3, line: 3674, column: 7)
!20074 = !DILocation(line: 3675, column: 28, scope: !20073)
!20075 = !DILocation(line: 3675, column: 7, scope: !20073)
!20076 = !DILocation(line: 3676, column: 19, scope: !20073)
!20077 = !DILocation(line: 3676, column: 29, scope: !20073)
!20078 = !DILocation(line: 3676, column: 40, scope: !20073)
!20079 = !DILocation(line: 3676, column: 53, scope: !20073)
!20080 = !DILocation(line: 3676, column: 58, scope: !20073)
!20081 = !DILocation(line: 3676, column: 65, scope: !20073)
!20082 = !DILocation(line: 3676, column: 71, scope: !20073)
!20083 = !DILocation(line: 3676, column: 69, scope: !20073)
!20084 = !DILocation(line: 3676, column: 62, scope: !20073)
!20085 = !DILocation(line: 3676, column: 7, scope: !20073)
!20086 = !DILocation(line: 3677, column: 7, scope: !20073)
!20087 = !DILocation(line: 3678, column: 5, scope: !19949)
!20088 = !DILocation(line: 3648, column: 32, scope: !19943)
!20089 = !DILocation(line: 3648, column: 3, scope: !19943)
!20090 = distinct !{!20090, !19946, !20091}
!20091 = !DILocation(line: 3678, column: 5, scope: !19940)
!20092 = !DILocation(line: 3680, column: 3, scope: !19864)
!20093 = !DILocation(line: 3681, column: 3, scope: !19864)
!20094 = distinct !DISubprogram(name: "combineSeparateSamples8bits", scope: !3, file: !3, line: 3684, type: !20095, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!20095 = !DISubroutineType(types: !20096)
!20096 = !{!110, !18070, !116, !105, !105, !103, !103, !470, !110, !110}
!20097 = !DILocalVariable(name: "in", arg: 1, scope: !20094, file: !3, line: 3684, type: !18070)
!20098 = !DILocation(line: 3684, column: 37, scope: !20094)
!20099 = !DILocalVariable(name: "out", arg: 2, scope: !20094, file: !3, line: 3684, type: !116)
!20100 = !DILocation(line: 3684, column: 50, scope: !20094)
!20101 = !DILocalVariable(name: "cols", arg: 3, scope: !20094, file: !3, line: 3684, type: !105)
!20102 = !DILocation(line: 3684, column: 62, scope: !20094)
!20103 = !DILocalVariable(name: "rows", arg: 4, scope: !20094, file: !3, line: 3685, type: !105)
!20104 = !DILocation(line: 3685, column: 36, scope: !20094)
!20105 = !DILocalVariable(name: "spp", arg: 5, scope: !20094, file: !3, line: 3685, type: !103)
!20106 = !DILocation(line: 3685, column: 49, scope: !20094)
!20107 = !DILocalVariable(name: "bps", arg: 6, scope: !20094, file: !3, line: 3685, type: !103)
!20108 = !DILocation(line: 3685, column: 61, scope: !20094)
!20109 = !DILocalVariable(name: "dumpfile", arg: 7, scope: !20094, file: !3, line: 3686, type: !470)
!20110 = !DILocation(line: 3686, column: 29, scope: !20094)
!20111 = !DILocalVariable(name: "format", arg: 8, scope: !20094, file: !3, line: 3686, type: !110)
!20112 = !DILocation(line: 3686, column: 43, scope: !20094)
!20113 = !DILocalVariable(name: "level", arg: 9, scope: !20094, file: !3, line: 3686, type: !110)
!20114 = !DILocation(line: 3686, column: 55, scope: !20094)
!20115 = !DILocalVariable(name: "ready_bits", scope: !20094, file: !3, line: 3688, type: !110)
!20116 = !DILocation(line: 3688, column: 10, scope: !20094)
!20117 = !DILocalVariable(name: "bytes_per_sample", scope: !20094, file: !3, line: 3689, type: !110)
!20118 = !DILocation(line: 3689, column: 10, scope: !20094)
!20119 = !DILocalVariable(name: "src_rowsize", scope: !20094, file: !3, line: 3690, type: !105)
!20120 = !DILocation(line: 3690, column: 10, scope: !20094)
!20121 = !DILocalVariable(name: "dst_rowsize", scope: !20094, file: !3, line: 3690, type: !105)
!20122 = !DILocation(line: 3690, column: 23, scope: !20094)
!20123 = !DILocalVariable(name: "src_offset", scope: !20094, file: !3, line: 3690, type: !105)
!20124 = !DILocation(line: 3690, column: 36, scope: !20094)
!20125 = !DILocalVariable(name: "bit_offset", scope: !20094, file: !3, line: 3691, type: !105)
!20126 = !DILocation(line: 3691, column: 10, scope: !20094)
!20127 = !DILocalVariable(name: "row", scope: !20094, file: !3, line: 3692, type: !105)
!20128 = !DILocation(line: 3692, column: 10, scope: !20094)
!20129 = !DILocalVariable(name: "col", scope: !20094, file: !3, line: 3692, type: !105)
!20130 = !DILocation(line: 3692, column: 15, scope: !20094)
!20131 = !DILocalVariable(name: "src_byte", scope: !20094, file: !3, line: 3692, type: !105)
!20132 = !DILocation(line: 3692, column: 20, scope: !20094)
!20133 = !DILocalVariable(name: "src_bit", scope: !20094, file: !3, line: 3692, type: !105)
!20134 = !DILocation(line: 3692, column: 34, scope: !20094)
!20135 = !DILocalVariable(name: "maskbits", scope: !20094, file: !3, line: 3693, type: !114)
!20136 = !DILocation(line: 3693, column: 10, scope: !20094)
!20137 = !DILocalVariable(name: "matchbits", scope: !20094, file: !3, line: 3693, type: !114)
!20138 = !DILocation(line: 3693, column: 24, scope: !20094)
!20139 = !DILocalVariable(name: "buff1", scope: !20094, file: !3, line: 3694, type: !114)
!20140 = !DILocation(line: 3694, column: 10, scope: !20094)
!20141 = !DILocalVariable(name: "buff2", scope: !20094, file: !3, line: 3694, type: !114)
!20142 = !DILocation(line: 3694, column: 21, scope: !20094)
!20143 = !DILocalVariable(name: "s", scope: !20094, file: !3, line: 3695, type: !7616)
!20144 = !DILocation(line: 3695, column: 13, scope: !20094)
!20145 = !DILocalVariable(name: "src", scope: !20094, file: !3, line: 3696, type: !106)
!20146 = !DILocation(line: 3696, column: 18, scope: !20094)
!20147 = !DILocation(line: 3696, column: 24, scope: !20094)
!20148 = !DILocalVariable(name: "dst", scope: !20094, file: !3, line: 3697, type: !106)
!20149 = !DILocation(line: 3697, column: 18, scope: !20094)
!20150 = !DILocation(line: 3697, column: 24, scope: !20094)
!20151 = !DILocalVariable(name: "action", scope: !20094, file: !3, line: 3698, type: !18128)
!20152 = !DILocation(line: 3698, column: 18, scope: !20094)
!20153 = !DILocation(line: 3700, column: 8, scope: !20154)
!20154 = distinct !DILexicalBlock(scope: !20094, file: !3, line: 3700, column: 7)
!20155 = !DILocation(line: 3700, column: 12, scope: !20154)
!20156 = !DILocation(line: 3700, column: 21, scope: !20154)
!20157 = !DILocation(line: 3700, column: 25, scope: !20154)
!20158 = !DILocation(line: 3700, column: 29, scope: !20154)
!20159 = !DILocation(line: 3700, column: 7, scope: !20094)
!20160 = !DILocation(line: 3702, column: 5, scope: !20161)
!20161 = distinct !DILexicalBlock(scope: !20154, file: !3, line: 3701, column: 5)
!20162 = !DILocation(line: 3703, column: 5, scope: !20161)
!20163 = !DILocation(line: 3706, column: 23, scope: !20094)
!20164 = !DILocation(line: 3706, column: 27, scope: !20094)
!20165 = !DILocation(line: 3706, column: 32, scope: !20094)
!20166 = !DILocation(line: 3706, column: 20, scope: !20094)
!20167 = !DILocation(line: 3707, column: 19, scope: !20094)
!20168 = !DILocation(line: 3707, column: 25, scope: !20094)
!20169 = !DILocation(line: 3707, column: 23, scope: !20094)
!20170 = !DILocation(line: 3707, column: 31, scope: !20094)
!20171 = !DILocation(line: 3707, column: 36, scope: !20094)
!20172 = !DILocation(line: 3707, column: 15, scope: !20094)
!20173 = !DILocation(line: 3708, column: 19, scope: !20094)
!20174 = !DILocation(line: 3708, column: 25, scope: !20094)
!20175 = !DILocation(line: 3708, column: 23, scope: !20094)
!20176 = !DILocation(line: 3708, column: 32, scope: !20094)
!20177 = !DILocation(line: 3708, column: 30, scope: !20094)
!20178 = !DILocation(line: 3708, column: 37, scope: !20094)
!20179 = !DILocation(line: 3708, column: 42, scope: !20094)
!20180 = !DILocation(line: 3708, column: 15, scope: !20094)
!20181 = !DILocation(line: 3709, column: 34, scope: !20094)
!20182 = !DILocation(line: 3709, column: 32, scope: !20094)
!20183 = !DILocation(line: 3709, column: 25, scope: !20094)
!20184 = !DILocation(line: 3709, column: 15, scope: !20094)
!20185 = !DILocation(line: 3709, column: 12, scope: !20094)
!20186 = !DILocation(line: 3711, column: 12, scope: !20187)
!20187 = distinct !DILexicalBlock(scope: !20094, file: !3, line: 3711, column: 3)
!20188 = !DILocation(line: 3711, column: 8, scope: !20187)
!20189 = !DILocation(line: 3711, column: 17, scope: !20190)
!20190 = distinct !DILexicalBlock(scope: !20187, file: !3, line: 3711, column: 3)
!20191 = !DILocation(line: 3711, column: 23, scope: !20190)
!20192 = !DILocation(line: 3711, column: 21, scope: !20190)
!20193 = !DILocation(line: 3711, column: 3, scope: !20187)
!20194 = !DILocation(line: 3713, column: 16, scope: !20195)
!20195 = distinct !DILexicalBlock(scope: !20190, file: !3, line: 3712, column: 5)
!20196 = !DILocation(line: 3714, column: 19, scope: !20195)
!20197 = !DILocation(line: 3714, column: 11, scope: !20195)
!20198 = !DILocation(line: 3715, column: 11, scope: !20195)
!20199 = !DILocation(line: 3715, column: 18, scope: !20195)
!20200 = !DILocation(line: 3715, column: 24, scope: !20195)
!20201 = !DILocation(line: 3715, column: 22, scope: !20195)
!20202 = !DILocation(line: 3715, column: 15, scope: !20195)
!20203 = !DILocation(line: 3715, column: 9, scope: !20195)
!20204 = !DILocation(line: 3716, column: 18, scope: !20195)
!20205 = !DILocation(line: 3716, column: 24, scope: !20195)
!20206 = !DILocation(line: 3716, column: 22, scope: !20195)
!20207 = !DILocation(line: 3716, column: 16, scope: !20195)
!20208 = !DILocation(line: 3717, column: 14, scope: !20209)
!20209 = distinct !DILexicalBlock(scope: !20195, file: !3, line: 3717, column: 5)
!20210 = !DILocation(line: 3717, column: 10, scope: !20209)
!20211 = !DILocation(line: 3717, column: 19, scope: !20212)
!20212 = distinct !DILexicalBlock(scope: !20209, file: !3, line: 3717, column: 5)
!20213 = !DILocation(line: 3717, column: 25, scope: !20212)
!20214 = !DILocation(line: 3717, column: 23, scope: !20212)
!20215 = !DILocation(line: 3717, column: 5, scope: !20209)
!20216 = !DILocation(line: 3720, column: 20, scope: !20217)
!20217 = distinct !DILexicalBlock(scope: !20212, file: !3, line: 3718, column: 7)
!20218 = !DILocation(line: 3720, column: 26, scope: !20217)
!20219 = !DILocation(line: 3720, column: 24, scope: !20217)
!20220 = !DILocation(line: 3720, column: 18, scope: !20217)
!20221 = !DILocation(line: 3721, column: 18, scope: !20217)
!20222 = !DILocation(line: 3721, column: 29, scope: !20217)
!20223 = !DILocation(line: 3721, column: 16, scope: !20217)
!20224 = !DILocation(line: 3722, column: 18, scope: !20217)
!20225 = !DILocation(line: 3722, column: 29, scope: !20217)
!20226 = !DILocation(line: 3722, column: 16, scope: !20217)
!20227 = !DILocation(line: 3724, column: 19, scope: !20217)
!20228 = !DILocation(line: 3724, column: 36, scope: !20217)
!20229 = !DILocation(line: 3724, column: 34, scope: !20217)
!20230 = !DILocation(line: 3724, column: 46, scope: !20217)
!20231 = !DILocation(line: 3724, column: 44, scope: !20217)
!20232 = !DILocation(line: 3724, column: 28, scope: !20217)
!20233 = !DILocation(line: 3724, column: 17, scope: !20217)
!20234 = !DILocation(line: 3726, column: 14, scope: !20235)
!20235 = distinct !DILexicalBlock(scope: !20217, file: !3, line: 3726, column: 7)
!20236 = !DILocation(line: 3726, column: 12, scope: !20235)
!20237 = !DILocation(line: 3726, column: 19, scope: !20238)
!20238 = distinct !DILexicalBlock(scope: !20235, file: !3, line: 3726, column: 7)
!20239 = !DILocation(line: 3726, column: 23, scope: !20238)
!20240 = !DILocation(line: 3726, column: 21, scope: !20238)
!20241 = !DILocation(line: 3726, column: 7, scope: !20235)
!20242 = !DILocation(line: 3728, column: 8, scope: !20243)
!20243 = distinct !DILexicalBlock(scope: !20238, file: !3, line: 3727, column: 9)
!20244 = !DILocation(line: 3728, column: 11, scope: !20243)
!20245 = !DILocation(line: 3728, column: 16, scope: !20243)
!20246 = !DILocation(line: 3728, column: 14, scope: !20243)
!20247 = !DILocation(line: 3728, column: 29, scope: !20243)
!20248 = !DILocation(line: 3728, column: 27, scope: !20243)
!20249 = !DILocation(line: 3728, column: 6, scope: !20243)
!20250 = !DILocation(line: 3729, column: 20, scope: !20243)
!20251 = !DILocation(line: 3729, column: 19, scope: !20243)
!20252 = !DILocation(line: 3729, column: 18, scope: !20243)
!20253 = !DILocation(line: 3729, column: 27, scope: !20243)
!20254 = !DILocation(line: 3729, column: 25, scope: !20243)
!20255 = !DILocation(line: 3729, column: 42, scope: !20243)
!20256 = !DILocation(line: 3729, column: 38, scope: !20243)
!20257 = !DILocation(line: 3729, column: 17, scope: !20243)
!20258 = !DILocation(line: 3729, column: 15, scope: !20243)
!20259 = !DILocation(line: 3732, column: 13, scope: !20260)
!20260 = distinct !DILexicalBlock(scope: !20243, file: !3, line: 3732, column: 13)
!20261 = !DILocation(line: 3732, column: 24, scope: !20260)
!20262 = !DILocation(line: 3732, column: 13, scope: !20243)
!20263 = !DILocation(line: 3734, column: 20, scope: !20264)
!20264 = distinct !DILexicalBlock(scope: !20260, file: !3, line: 3733, column: 11)
!20265 = !DILocation(line: 3734, column: 15, scope: !20264)
!20266 = !DILocation(line: 3734, column: 18, scope: !20264)
!20267 = !DILocation(line: 3735, column: 19, scope: !20264)
!20268 = !DILocation(line: 3735, column: 17, scope: !20264)
!20269 = !DILocation(line: 3736, column: 22, scope: !20264)
!20270 = !DILocation(line: 3737, column: 19, scope: !20264)
!20271 = !DILocation(line: 3737, column: 11, scope: !20264)
!20272 = !DILocation(line: 3738, column: 11, scope: !20264)
!20273 = !DILocation(line: 3741, column: 20, scope: !20274)
!20274 = distinct !DILexicalBlock(scope: !20260, file: !3, line: 3740, column: 11)
!20275 = !DILocation(line: 3741, column: 29, scope: !20274)
!20276 = !DILocation(line: 3741, column: 38, scope: !20274)
!20277 = !DILocation(line: 3741, column: 35, scope: !20274)
!20278 = !DILocation(line: 3741, column: 26, scope: !20274)
!20279 = !DILocation(line: 3741, column: 19, scope: !20274)
!20280 = !DILocation(line: 3741, column: 17, scope: !20274)
!20281 = !DILocation(line: 3742, column: 19, scope: !20274)
!20282 = !DILocation(line: 3742, column: 11, scope: !20274)
!20283 = !DILocation(line: 3744, column: 23, scope: !20243)
!20284 = !DILocation(line: 3744, column: 20, scope: !20243)
!20285 = !DILocation(line: 3746, column: 14, scope: !20286)
!20286 = distinct !DILexicalBlock(scope: !20243, file: !3, line: 3746, column: 13)
!20287 = !DILocation(line: 3746, column: 23, scope: !20286)
!20288 = !DILocation(line: 3746, column: 32, scope: !20286)
!20289 = !DILocation(line: 3746, column: 36, scope: !20286)
!20290 = !DILocation(line: 3746, column: 42, scope: !20286)
!20291 = !DILocation(line: 3746, column: 13, scope: !20243)
!20292 = !DILocation(line: 3748, column: 22, scope: !20293)
!20293 = distinct !DILexicalBlock(scope: !20286, file: !3, line: 3747, column: 11)
!20294 = !DILocation(line: 3748, column: 32, scope: !20293)
!20295 = !DILocation(line: 3750, column: 6, scope: !20293)
!20296 = !DILocation(line: 3750, column: 10, scope: !20293)
!20297 = !DILocation(line: 3750, column: 15, scope: !20293)
!20298 = !DILocation(line: 3750, column: 19, scope: !20293)
!20299 = !DILocation(line: 3750, column: 24, scope: !20293)
!20300 = !DILocation(line: 3750, column: 27, scope: !20293)
!20301 = !DILocation(line: 3750, column: 37, scope: !20293)
!20302 = !DILocation(line: 3750, column: 46, scope: !20293)
!20303 = !DILocation(line: 3750, column: 52, scope: !20293)
!20304 = !DILocation(line: 3750, column: 50, scope: !20293)
!20305 = !DILocation(line: 3748, column: 11, scope: !20293)
!20306 = !DILocation(line: 3751, column: 22, scope: !20293)
!20307 = !DILocation(line: 3751, column: 32, scope: !20293)
!20308 = !DILocation(line: 3751, column: 54, scope: !20293)
!20309 = !DILocation(line: 3751, column: 11, scope: !20293)
!20310 = !DILocation(line: 3752, column: 22, scope: !20293)
!20311 = !DILocation(line: 3752, column: 32, scope: !20293)
!20312 = !DILocation(line: 3752, column: 55, scope: !20293)
!20313 = !DILocation(line: 3752, column: 54, scope: !20293)
!20314 = !DILocation(line: 3752, column: 11, scope: !20293)
!20315 = !DILocation(line: 3753, column: 22, scope: !20293)
!20316 = !DILocation(line: 3753, column: 32, scope: !20293)
!20317 = !DILocation(line: 3753, column: 54, scope: !20293)
!20318 = !DILocation(line: 3753, column: 11, scope: !20293)
!20319 = !DILocation(line: 3754, column: 22, scope: !20293)
!20320 = !DILocation(line: 3754, column: 32, scope: !20293)
!20321 = !DILocation(line: 3754, column: 54, scope: !20293)
!20322 = !DILocation(line: 3754, column: 11, scope: !20293)
!20323 = !DILocation(line: 3755, column: 22, scope: !20293)
!20324 = !DILocation(line: 3755, column: 32, scope: !20293)
!20325 = !DILocation(line: 3755, column: 49, scope: !20293)
!20326 = !DILocation(line: 3755, column: 11, scope: !20293)
!20327 = !DILocation(line: 3756, column: 4, scope: !20293)
!20328 = !DILocation(line: 3757, column: 9, scope: !20243)
!20329 = !DILocation(line: 3726, column: 29, scope: !20238)
!20330 = !DILocation(line: 3726, column: 7, scope: !20238)
!20331 = distinct !{!20331, !20241, !20332}
!20332 = !DILocation(line: 3757, column: 9, scope: !20235)
!20333 = !DILocation(line: 3758, column: 7, scope: !20217)
!20334 = !DILocation(line: 3717, column: 34, scope: !20212)
!20335 = !DILocation(line: 3717, column: 5, scope: !20212)
!20336 = distinct !{!20336, !20215, !20337}
!20337 = !DILocation(line: 3758, column: 7, scope: !20209)
!20338 = !DILocation(line: 3760, column: 9, scope: !20339)
!20339 = distinct !DILexicalBlock(scope: !20195, file: !3, line: 3760, column: 9)
!20340 = !DILocation(line: 3760, column: 20, scope: !20339)
!20341 = !DILocation(line: 3760, column: 9, scope: !20195)
!20342 = !DILocation(line: 3762, column: 16, scope: !20343)
!20343 = distinct !DILexicalBlock(scope: !20339, file: !3, line: 3761, column: 7)
!20344 = !DILocation(line: 3762, column: 51, scope: !20343)
!20345 = !DILocation(line: 3762, column: 49, scope: !20343)
!20346 = !DILocation(line: 3762, column: 43, scope: !20343)
!20347 = !DILocation(line: 3762, column: 22, scope: !20343)
!20348 = !DILocation(line: 3762, column: 15, scope: !20343)
!20349 = !DILocation(line: 3762, column: 13, scope: !20343)
!20350 = !DILocation(line: 3763, column: 16, scope: !20343)
!20351 = !DILocation(line: 3763, column: 11, scope: !20343)
!20352 = !DILocation(line: 3763, column: 14, scope: !20343)
!20353 = !DILocation(line: 3764, column: 12, scope: !20354)
!20354 = distinct !DILexicalBlock(scope: !20343, file: !3, line: 3764, column: 11)
!20355 = !DILocation(line: 3764, column: 21, scope: !20354)
!20356 = !DILocation(line: 3764, column: 30, scope: !20354)
!20357 = !DILocation(line: 3764, column: 34, scope: !20354)
!20358 = !DILocation(line: 3764, column: 40, scope: !20354)
!20359 = !DILocation(line: 3764, column: 11, scope: !20343)
!20360 = !DILocation(line: 3766, column: 20, scope: !20361)
!20361 = distinct !DILexicalBlock(scope: !20354, file: !3, line: 3765, column: 9)
!20362 = !DILocation(line: 3766, column: 30, scope: !20361)
!20363 = !DILocation(line: 3768, column: 11, scope: !20361)
!20364 = !DILocation(line: 3768, column: 15, scope: !20361)
!20365 = !DILocation(line: 3768, column: 20, scope: !20361)
!20366 = !DILocation(line: 3768, column: 24, scope: !20361)
!20367 = !DILocation(line: 3768, column: 29, scope: !20361)
!20368 = !DILocation(line: 3768, column: 39, scope: !20361)
!20369 = !DILocation(line: 3768, column: 48, scope: !20361)
!20370 = !DILocation(line: 3768, column: 54, scope: !20361)
!20371 = !DILocation(line: 3768, column: 52, scope: !20361)
!20372 = !DILocation(line: 3766, column: 9, scope: !20361)
!20373 = !DILocation(line: 3769, column: 29, scope: !20361)
!20374 = !DILocation(line: 3769, column: 39, scope: !20361)
!20375 = !DILocation(line: 3769, column: 61, scope: !20361)
!20376 = !DILocation(line: 3769, column: 18, scope: !20361)
!20377 = !DILocation(line: 3770, column: 9, scope: !20361)
!20378 = !DILocation(line: 3771, column: 7, scope: !20343)
!20379 = !DILocation(line: 3773, column: 10, scope: !20380)
!20380 = distinct !DILexicalBlock(scope: !20195, file: !3, line: 3773, column: 9)
!20381 = !DILocation(line: 3773, column: 19, scope: !20380)
!20382 = !DILocation(line: 3773, column: 28, scope: !20380)
!20383 = !DILocation(line: 3773, column: 32, scope: !20380)
!20384 = !DILocation(line: 3773, column: 38, scope: !20380)
!20385 = !DILocation(line: 3773, column: 9, scope: !20195)
!20386 = !DILocation(line: 3775, column: 18, scope: !20387)
!20387 = distinct !DILexicalBlock(scope: !20380, file: !3, line: 3774, column: 7)
!20388 = !DILocation(line: 3775, column: 28, scope: !20387)
!20389 = !DILocation(line: 3775, column: 7, scope: !20387)
!20390 = !DILocation(line: 3776, column: 19, scope: !20387)
!20391 = !DILocation(line: 3776, column: 29, scope: !20387)
!20392 = !DILocation(line: 3776, column: 40, scope: !20387)
!20393 = !DILocation(line: 3776, column: 53, scope: !20387)
!20394 = !DILocation(line: 3776, column: 58, scope: !20387)
!20395 = !DILocation(line: 3776, column: 65, scope: !20387)
!20396 = !DILocation(line: 3776, column: 71, scope: !20387)
!20397 = !DILocation(line: 3776, column: 69, scope: !20387)
!20398 = !DILocation(line: 3776, column: 62, scope: !20387)
!20399 = !DILocation(line: 3776, column: 7, scope: !20387)
!20400 = !DILocation(line: 3777, column: 7, scope: !20387)
!20401 = !DILocation(line: 3778, column: 5, scope: !20195)
!20402 = !DILocation(line: 3711, column: 32, scope: !20190)
!20403 = !DILocation(line: 3711, column: 3, scope: !20190)
!20404 = distinct !{!20404, !20193, !20405}
!20405 = !DILocation(line: 3778, column: 5, scope: !20187)
!20406 = !DILocation(line: 3780, column: 3, scope: !20094)
!20407 = !DILocation(line: 3781, column: 3, scope: !20094)
!20408 = distinct !DISubprogram(name: "combineSeparateSamples16bits", scope: !3, file: !3, line: 3784, type: !20095, scopeLine: 3787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!20409 = !DILocalVariable(name: "in", arg: 1, scope: !20408, file: !3, line: 3784, type: !18070)
!20410 = !DILocation(line: 3784, column: 38, scope: !20408)
!20411 = !DILocalVariable(name: "out", arg: 2, scope: !20408, file: !3, line: 3784, type: !116)
!20412 = !DILocation(line: 3784, column: 51, scope: !20408)
!20413 = !DILocalVariable(name: "cols", arg: 3, scope: !20408, file: !3, line: 3784, type: !105)
!20414 = !DILocation(line: 3784, column: 63, scope: !20408)
!20415 = !DILocalVariable(name: "rows", arg: 4, scope: !20408, file: !3, line: 3785, type: !105)
!20416 = !DILocation(line: 3785, column: 38, scope: !20408)
!20417 = !DILocalVariable(name: "spp", arg: 5, scope: !20408, file: !3, line: 3785, type: !103)
!20418 = !DILocation(line: 3785, column: 51, scope: !20408)
!20419 = !DILocalVariable(name: "bps", arg: 6, scope: !20408, file: !3, line: 3785, type: !103)
!20420 = !DILocation(line: 3785, column: 63, scope: !20408)
!20421 = !DILocalVariable(name: "dumpfile", arg: 7, scope: !20408, file: !3, line: 3786, type: !470)
!20422 = !DILocation(line: 3786, column: 31, scope: !20408)
!20423 = !DILocalVariable(name: "format", arg: 8, scope: !20408, file: !3, line: 3786, type: !110)
!20424 = !DILocation(line: 3786, column: 45, scope: !20408)
!20425 = !DILocalVariable(name: "level", arg: 9, scope: !20408, file: !3, line: 3786, type: !110)
!20426 = !DILocation(line: 3786, column: 57, scope: !20408)
!20427 = !DILocalVariable(name: "ready_bits", scope: !20408, file: !3, line: 3788, type: !110)
!20428 = !DILocation(line: 3788, column: 10, scope: !20408)
!20429 = !DILocalVariable(name: "bytes_per_sample", scope: !20408, file: !3, line: 3788, type: !110)
!20430 = !DILocation(line: 3788, column: 26, scope: !20408)
!20431 = !DILocalVariable(name: "src_rowsize", scope: !20408, file: !3, line: 3789, type: !105)
!20432 = !DILocation(line: 3789, column: 10, scope: !20408)
!20433 = !DILocalVariable(name: "dst_rowsize", scope: !20408, file: !3, line: 3789, type: !105)
!20434 = !DILocation(line: 3789, column: 23, scope: !20408)
!20435 = !DILocalVariable(name: "bit_offset", scope: !20408, file: !3, line: 3790, type: !105)
!20436 = !DILocation(line: 3790, column: 10, scope: !20408)
!20437 = !DILocalVariable(name: "src_offset", scope: !20408, file: !3, line: 3790, type: !105)
!20438 = !DILocation(line: 3790, column: 22, scope: !20408)
!20439 = !DILocalVariable(name: "row", scope: !20408, file: !3, line: 3791, type: !105)
!20440 = !DILocation(line: 3791, column: 10, scope: !20408)
!20441 = !DILocalVariable(name: "col", scope: !20408, file: !3, line: 3791, type: !105)
!20442 = !DILocation(line: 3791, column: 15, scope: !20408)
!20443 = !DILocalVariable(name: "src_byte", scope: !20408, file: !3, line: 3791, type: !105)
!20444 = !DILocation(line: 3791, column: 20, scope: !20408)
!20445 = !DILocalVariable(name: "src_bit", scope: !20408, file: !3, line: 3791, type: !105)
!20446 = !DILocation(line: 3791, column: 34, scope: !20408)
!20447 = !DILocalVariable(name: "maskbits", scope: !20408, file: !3, line: 3792, type: !103)
!20448 = !DILocation(line: 3792, column: 10, scope: !20408)
!20449 = !DILocalVariable(name: "matchbits", scope: !20408, file: !3, line: 3792, type: !103)
!20450 = !DILocation(line: 3792, column: 24, scope: !20408)
!20451 = !DILocalVariable(name: "buff1", scope: !20408, file: !3, line: 3793, type: !103)
!20452 = !DILocation(line: 3793, column: 10, scope: !20408)
!20453 = !DILocalVariable(name: "buff2", scope: !20408, file: !3, line: 3793, type: !103)
!20454 = !DILocation(line: 3793, column: 21, scope: !20408)
!20455 = !DILocalVariable(name: "bytebuff", scope: !20408, file: !3, line: 3794, type: !114)
!20456 = !DILocation(line: 3794, column: 10, scope: !20408)
!20457 = !DILocalVariable(name: "s", scope: !20408, file: !3, line: 3795, type: !7616)
!20458 = !DILocation(line: 3795, column: 13, scope: !20408)
!20459 = !DILocalVariable(name: "src", scope: !20408, file: !3, line: 3796, type: !106)
!20460 = !DILocation(line: 3796, column: 18, scope: !20408)
!20461 = !DILocation(line: 3796, column: 24, scope: !20408)
!20462 = !DILocalVariable(name: "dst", scope: !20408, file: !3, line: 3797, type: !106)
!20463 = !DILocation(line: 3797, column: 18, scope: !20408)
!20464 = !DILocation(line: 3797, column: 24, scope: !20408)
!20465 = !DILocalVariable(name: "action", scope: !20408, file: !3, line: 3798, type: !18441)
!20466 = !DILocation(line: 3798, column: 18, scope: !20408)
!20467 = !DILocation(line: 3800, column: 8, scope: !20468)
!20468 = distinct !DILexicalBlock(scope: !20408, file: !3, line: 3800, column: 7)
!20469 = !DILocation(line: 3800, column: 12, scope: !20468)
!20470 = !DILocation(line: 3800, column: 21, scope: !20468)
!20471 = !DILocation(line: 3800, column: 25, scope: !20468)
!20472 = !DILocation(line: 3800, column: 29, scope: !20468)
!20473 = !DILocation(line: 3800, column: 7, scope: !20408)
!20474 = !DILocation(line: 3802, column: 5, scope: !20475)
!20475 = distinct !DILexicalBlock(scope: !20468, file: !3, line: 3801, column: 5)
!20476 = !DILocation(line: 3803, column: 5, scope: !20475)
!20477 = !DILocation(line: 3806, column: 23, scope: !20408)
!20478 = !DILocation(line: 3806, column: 27, scope: !20408)
!20479 = !DILocation(line: 3806, column: 32, scope: !20408)
!20480 = !DILocation(line: 3806, column: 20, scope: !20408)
!20481 = !DILocation(line: 3807, column: 19, scope: !20408)
!20482 = !DILocation(line: 3807, column: 25, scope: !20408)
!20483 = !DILocation(line: 3807, column: 23, scope: !20408)
!20484 = !DILocation(line: 3807, column: 31, scope: !20408)
!20485 = !DILocation(line: 3807, column: 36, scope: !20408)
!20486 = !DILocation(line: 3807, column: 15, scope: !20408)
!20487 = !DILocation(line: 3808, column: 19, scope: !20408)
!20488 = !DILocation(line: 3808, column: 25, scope: !20408)
!20489 = !DILocation(line: 3808, column: 23, scope: !20408)
!20490 = !DILocation(line: 3808, column: 32, scope: !20408)
!20491 = !DILocation(line: 3808, column: 30, scope: !20408)
!20492 = !DILocation(line: 3808, column: 37, scope: !20408)
!20493 = !DILocation(line: 3808, column: 42, scope: !20408)
!20494 = !DILocation(line: 3808, column: 15, scope: !20408)
!20495 = !DILocation(line: 3809, column: 34, scope: !20408)
!20496 = !DILocation(line: 3809, column: 32, scope: !20408)
!20497 = !DILocation(line: 3809, column: 25, scope: !20408)
!20498 = !DILocation(line: 3809, column: 14, scope: !20408)
!20499 = !DILocation(line: 3809, column: 12, scope: !20408)
!20500 = !DILocation(line: 3811, column: 12, scope: !20501)
!20501 = distinct !DILexicalBlock(scope: !20408, file: !3, line: 3811, column: 3)
!20502 = !DILocation(line: 3811, column: 8, scope: !20501)
!20503 = !DILocation(line: 3811, column: 17, scope: !20504)
!20504 = distinct !DILexicalBlock(scope: !20501, file: !3, line: 3811, column: 3)
!20505 = !DILocation(line: 3811, column: 23, scope: !20504)
!20506 = !DILocation(line: 3811, column: 21, scope: !20504)
!20507 = !DILocation(line: 3811, column: 3, scope: !20501)
!20508 = !DILocation(line: 3813, column: 16, scope: !20509)
!20509 = distinct !DILexicalBlock(scope: !20504, file: !3, line: 3812, column: 5)
!20510 = !DILocation(line: 3814, column: 19, scope: !20509)
!20511 = !DILocation(line: 3814, column: 11, scope: !20509)
!20512 = !DILocation(line: 3815, column: 11, scope: !20509)
!20513 = !DILocation(line: 3815, column: 18, scope: !20509)
!20514 = !DILocation(line: 3815, column: 24, scope: !20509)
!20515 = !DILocation(line: 3815, column: 22, scope: !20509)
!20516 = !DILocation(line: 3815, column: 15, scope: !20509)
!20517 = !DILocation(line: 3815, column: 9, scope: !20509)
!20518 = !DILocation(line: 3816, column: 18, scope: !20509)
!20519 = !DILocation(line: 3816, column: 24, scope: !20509)
!20520 = !DILocation(line: 3816, column: 22, scope: !20509)
!20521 = !DILocation(line: 3816, column: 16, scope: !20509)
!20522 = !DILocation(line: 3817, column: 14, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20509, file: !3, line: 3817, column: 5)
!20524 = !DILocation(line: 3817, column: 10, scope: !20523)
!20525 = !DILocation(line: 3817, column: 19, scope: !20526)
!20526 = distinct !DILexicalBlock(scope: !20523, file: !3, line: 3817, column: 5)
!20527 = !DILocation(line: 3817, column: 25, scope: !20526)
!20528 = !DILocation(line: 3817, column: 23, scope: !20526)
!20529 = !DILocation(line: 3817, column: 5, scope: !20523)
!20530 = !DILocation(line: 3820, column: 20, scope: !20531)
!20531 = distinct !DILexicalBlock(scope: !20526, file: !3, line: 3818, column: 7)
!20532 = !DILocation(line: 3820, column: 26, scope: !20531)
!20533 = !DILocation(line: 3820, column: 24, scope: !20531)
!20534 = !DILocation(line: 3820, column: 18, scope: !20531)
!20535 = !DILocation(line: 3821, column: 18, scope: !20531)
!20536 = !DILocation(line: 3821, column: 29, scope: !20531)
!20537 = !DILocation(line: 3821, column: 16, scope: !20531)
!20538 = !DILocation(line: 3822, column: 18, scope: !20531)
!20539 = !DILocation(line: 3822, column: 29, scope: !20531)
!20540 = !DILocation(line: 3822, column: 16, scope: !20531)
!20541 = !DILocation(line: 3824, column: 19, scope: !20531)
!20542 = !DILocation(line: 3824, column: 37, scope: !20531)
!20543 = !DILocation(line: 3824, column: 35, scope: !20531)
!20544 = !DILocation(line: 3824, column: 47, scope: !20531)
!20545 = !DILocation(line: 3824, column: 45, scope: !20531)
!20546 = !DILocation(line: 3824, column: 28, scope: !20531)
!20547 = !DILocation(line: 3824, column: 17, scope: !20531)
!20548 = !DILocation(line: 3825, column: 14, scope: !20549)
!20549 = distinct !DILexicalBlock(scope: !20531, file: !3, line: 3825, column: 7)
!20550 = !DILocation(line: 3825, column: 12, scope: !20549)
!20551 = !DILocation(line: 3825, column: 19, scope: !20552)
!20552 = distinct !DILexicalBlock(scope: !20549, file: !3, line: 3825, column: 7)
!20553 = !DILocation(line: 3825, column: 23, scope: !20552)
!20554 = !DILocation(line: 3825, column: 21, scope: !20552)
!20555 = !DILocation(line: 3825, column: 7, scope: !20549)
!20556 = !DILocation(line: 3827, column: 8, scope: !20557)
!20557 = distinct !DILexicalBlock(scope: !20552, file: !3, line: 3826, column: 9)
!20558 = !DILocation(line: 3827, column: 11, scope: !20557)
!20559 = !DILocation(line: 3827, column: 16, scope: !20557)
!20560 = !DILocation(line: 3827, column: 14, scope: !20557)
!20561 = !DILocation(line: 3827, column: 29, scope: !20557)
!20562 = !DILocation(line: 3827, column: 27, scope: !20557)
!20563 = !DILocation(line: 3827, column: 6, scope: !20557)
!20564 = !DILocation(line: 3828, column: 13, scope: !20565)
!20565 = distinct !DILexicalBlock(scope: !20557, file: !3, line: 3828, column: 13)
!20566 = !DILocation(line: 3828, column: 13, scope: !20557)
!20567 = !DILocation(line: 3829, column: 20, scope: !20565)
!20568 = !DILocation(line: 3829, column: 27, scope: !20565)
!20569 = !DILocation(line: 3829, column: 35, scope: !20565)
!20570 = !DILocation(line: 3829, column: 33, scope: !20565)
!20571 = !DILocation(line: 3829, column: 19, scope: !20565)
!20572 = !DILocation(line: 3829, column: 17, scope: !20565)
!20573 = !DILocation(line: 3829, column: 11, scope: !20565)
!20574 = !DILocation(line: 3831, column: 20, scope: !20565)
!20575 = !DILocation(line: 3831, column: 27, scope: !20565)
!20576 = !DILocation(line: 3831, column: 35, scope: !20565)
!20577 = !DILocation(line: 3831, column: 33, scope: !20565)
!20578 = !DILocation(line: 3831, column: 19, scope: !20565)
!20579 = !DILocation(line: 3831, column: 17, scope: !20565)
!20580 = !DILocation(line: 3833, column: 11, scope: !20557)
!20581 = !DILocation(line: 3833, column: 19, scope: !20557)
!20582 = !DILocation(line: 3833, column: 17, scope: !20557)
!20583 = !DILocation(line: 3833, column: 34, scope: !20557)
!20584 = !DILocation(line: 3833, column: 30, scope: !20557)
!20585 = !DILocation(line: 3833, column: 10, scope: !20557)
!20586 = !DILocation(line: 3833, column: 8, scope: !20557)
!20587 = !DILocation(line: 3836, column: 6, scope: !20588)
!20588 = distinct !DILexicalBlock(scope: !20557, file: !3, line: 3836, column: 6)
!20589 = !DILocation(line: 3836, column: 17, scope: !20588)
!20590 = !DILocation(line: 3836, column: 6, scope: !20557)
!20591 = !DILocation(line: 3838, column: 18, scope: !20592)
!20592 = distinct !DILexicalBlock(scope: !20588, file: !3, line: 3837, column: 4)
!20593 = !DILocation(line: 3838, column: 24, scope: !20592)
!20594 = !DILocation(line: 3838, column: 17, scope: !20592)
!20595 = !DILocation(line: 3838, column: 15, scope: !20592)
!20596 = !DILocation(line: 3839, column: 15, scope: !20592)
!20597 = !DILocation(line: 3839, column: 10, scope: !20592)
!20598 = !DILocation(line: 3839, column: 13, scope: !20592)
!20599 = !DILocation(line: 3840, column: 17, scope: !20592)
!20600 = !DILocation(line: 3842, column: 16, scope: !20592)
!20601 = !DILocation(line: 3842, column: 22, scope: !20592)
!20602 = !DILocation(line: 3842, column: 31, scope: !20592)
!20603 = !DILocation(line: 3842, column: 40, scope: !20592)
!20604 = !DILocation(line: 3842, column: 37, scope: !20592)
!20605 = !DILocation(line: 3842, column: 28, scope: !20592)
!20606 = !DILocation(line: 3842, column: 14, scope: !20592)
!20607 = !DILocation(line: 3842, column: 12, scope: !20592)
!20608 = !DILocation(line: 3843, column: 14, scope: !20592)
!20609 = !DILocation(line: 3843, column: 6, scope: !20592)
!20610 = !DILocation(line: 3844, column: 4, scope: !20592)
!20611 = !DILocation(line: 3847, column: 15, scope: !20612)
!20612 = distinct !DILexicalBlock(scope: !20588, file: !3, line: 3846, column: 4)
!20613 = !DILocation(line: 3848, column: 15, scope: !20612)
!20614 = !DILocation(line: 3848, column: 24, scope: !20612)
!20615 = !DILocation(line: 3848, column: 33, scope: !20612)
!20616 = !DILocation(line: 3848, column: 30, scope: !20612)
!20617 = !DILocation(line: 3848, column: 21, scope: !20612)
!20618 = !DILocation(line: 3848, column: 14, scope: !20612)
!20619 = !DILocation(line: 3848, column: 12, scope: !20612)
!20620 = !DILocation(line: 3849, column: 14, scope: !20612)
!20621 = !DILocation(line: 3849, column: 6, scope: !20612)
!20622 = !DILocation(line: 3851, column: 16, scope: !20557)
!20623 = !DILocation(line: 3851, column: 13, scope: !20557)
!20624 = !DILocation(line: 3853, column: 7, scope: !20625)
!20625 = distinct !DILexicalBlock(scope: !20557, file: !3, line: 3853, column: 6)
!20626 = !DILocation(line: 3853, column: 16, scope: !20625)
!20627 = !DILocation(line: 3853, column: 25, scope: !20625)
!20628 = !DILocation(line: 3853, column: 29, scope: !20625)
!20629 = !DILocation(line: 3853, column: 35, scope: !20625)
!20630 = !DILocation(line: 3853, column: 6, scope: !20557)
!20631 = !DILocation(line: 3855, column: 15, scope: !20632)
!20632 = distinct !DILexicalBlock(scope: !20625, file: !3, line: 3854, column: 4)
!20633 = !DILocation(line: 3855, column: 25, scope: !20632)
!20634 = !DILocation(line: 3857, column: 10, scope: !20632)
!20635 = !DILocation(line: 3857, column: 14, scope: !20632)
!20636 = !DILocation(line: 3857, column: 19, scope: !20632)
!20637 = !DILocation(line: 3857, column: 23, scope: !20632)
!20638 = !DILocation(line: 3857, column: 28, scope: !20632)
!20639 = !DILocation(line: 3857, column: 31, scope: !20632)
!20640 = !DILocation(line: 3857, column: 41, scope: !20632)
!20641 = !DILocation(line: 3857, column: 50, scope: !20632)
!20642 = !DILocation(line: 3857, column: 56, scope: !20632)
!20643 = !DILocation(line: 3857, column: 54, scope: !20632)
!20644 = !DILocation(line: 3855, column: 4, scope: !20632)
!20645 = !DILocation(line: 3859, column: 16, scope: !20632)
!20646 = !DILocation(line: 3859, column: 26, scope: !20632)
!20647 = !DILocation(line: 3859, column: 48, scope: !20632)
!20648 = !DILocation(line: 3859, column: 4, scope: !20632)
!20649 = !DILocation(line: 3860, column: 16, scope: !20632)
!20650 = !DILocation(line: 3860, column: 26, scope: !20632)
!20651 = !DILocation(line: 3860, column: 48, scope: !20632)
!20652 = !DILocation(line: 3860, column: 4, scope: !20632)
!20653 = !DILocation(line: 3861, column: 16, scope: !20632)
!20654 = !DILocation(line: 3861, column: 26, scope: !20632)
!20655 = !DILocation(line: 3861, column: 48, scope: !20632)
!20656 = !DILocation(line: 3861, column: 4, scope: !20632)
!20657 = !DILocation(line: 3862, column: 16, scope: !20632)
!20658 = !DILocation(line: 3862, column: 26, scope: !20632)
!20659 = !DILocation(line: 3862, column: 48, scope: !20632)
!20660 = !DILocation(line: 3862, column: 4, scope: !20632)
!20661 = !DILocation(line: 3863, column: 16, scope: !20632)
!20662 = !DILocation(line: 3863, column: 26, scope: !20632)
!20663 = !DILocation(line: 3863, column: 48, scope: !20632)
!20664 = !DILocation(line: 3863, column: 4, scope: !20632)
!20665 = !DILocation(line: 3864, column: 16, scope: !20632)
!20666 = !DILocation(line: 3864, column: 26, scope: !20632)
!20667 = !DILocation(line: 3864, column: 60, scope: !20632)
!20668 = !DILocation(line: 3864, column: 72, scope: !20632)
!20669 = !DILocation(line: 3864, column: 4, scope: !20632)
!20670 = !DILocation(line: 3865, column: 4, scope: !20632)
!20671 = !DILocation(line: 3866, column: 2, scope: !20557)
!20672 = !DILocation(line: 3825, column: 29, scope: !20552)
!20673 = !DILocation(line: 3825, column: 7, scope: !20552)
!20674 = distinct !{!20674, !20555, !20675}
!20675 = !DILocation(line: 3866, column: 2, scope: !20549)
!20676 = !DILocation(line: 3867, column: 7, scope: !20531)
!20677 = !DILocation(line: 3817, column: 34, scope: !20526)
!20678 = !DILocation(line: 3817, column: 5, scope: !20526)
!20679 = distinct !{!20679, !20529, !20680}
!20680 = !DILocation(line: 3867, column: 7, scope: !20523)
!20681 = !DILocation(line: 3870, column: 9, scope: !20682)
!20682 = distinct !DILexicalBlock(scope: !20509, file: !3, line: 3870, column: 9)
!20683 = !DILocation(line: 3870, column: 20, scope: !20682)
!20684 = !DILocation(line: 3870, column: 9, scope: !20509)
!20685 = !DILocation(line: 3872, column: 19, scope: !20686)
!20686 = distinct !DILexicalBlock(scope: !20682, file: !3, line: 3871, column: 7)
!20687 = !DILocation(line: 3872, column: 25, scope: !20686)
!20688 = !DILocation(line: 3872, column: 18, scope: !20686)
!20689 = !DILocation(line: 3872, column: 16, scope: !20686)
!20690 = !DILocation(line: 3873, column: 16, scope: !20686)
!20691 = !DILocation(line: 3873, column: 11, scope: !20686)
!20692 = !DILocation(line: 3873, column: 14, scope: !20686)
!20693 = !DILocation(line: 3874, column: 12, scope: !20694)
!20694 = distinct !DILexicalBlock(scope: !20686, file: !3, line: 3874, column: 11)
!20695 = !DILocation(line: 3874, column: 21, scope: !20694)
!20696 = !DILocation(line: 3874, column: 30, scope: !20694)
!20697 = !DILocation(line: 3874, column: 34, scope: !20694)
!20698 = !DILocation(line: 3874, column: 40, scope: !20694)
!20699 = !DILocation(line: 3874, column: 11, scope: !20686)
!20700 = !DILocation(line: 3876, column: 13, scope: !20701)
!20701 = distinct !DILexicalBlock(scope: !20694, file: !3, line: 3875, column: 2)
!20702 = !DILocation(line: 3876, column: 23, scope: !20701)
!20703 = !DILocation(line: 3878, column: 10, scope: !20701)
!20704 = !DILocation(line: 3878, column: 14, scope: !20701)
!20705 = !DILocation(line: 3878, column: 19, scope: !20701)
!20706 = !DILocation(line: 3878, column: 23, scope: !20701)
!20707 = !DILocation(line: 3878, column: 28, scope: !20701)
!20708 = !DILocation(line: 3878, column: 38, scope: !20701)
!20709 = !DILocation(line: 3878, column: 47, scope: !20701)
!20710 = !DILocation(line: 3878, column: 53, scope: !20701)
!20711 = !DILocation(line: 3878, column: 51, scope: !20701)
!20712 = !DILocation(line: 3876, column: 2, scope: !20701)
!20713 = !DILocation(line: 3879, column: 13, scope: !20701)
!20714 = !DILocation(line: 3879, column: 23, scope: !20701)
!20715 = !DILocation(line: 3879, column: 45, scope: !20701)
!20716 = !DILocation(line: 3879, column: 2, scope: !20701)
!20717 = !DILocation(line: 3880, column: 2, scope: !20701)
!20718 = !DILocation(line: 3881, column: 7, scope: !20686)
!20719 = !DILocation(line: 3883, column: 10, scope: !20720)
!20720 = distinct !DILexicalBlock(scope: !20509, file: !3, line: 3883, column: 9)
!20721 = !DILocation(line: 3883, column: 19, scope: !20720)
!20722 = !DILocation(line: 3883, column: 28, scope: !20720)
!20723 = !DILocation(line: 3883, column: 32, scope: !20720)
!20724 = !DILocation(line: 3883, column: 38, scope: !20720)
!20725 = !DILocation(line: 3883, column: 9, scope: !20509)
!20726 = !DILocation(line: 3885, column: 18, scope: !20727)
!20727 = distinct !DILexicalBlock(scope: !20720, file: !3, line: 3884, column: 7)
!20728 = !DILocation(line: 3885, column: 28, scope: !20727)
!20729 = !DILocation(line: 3885, column: 7, scope: !20727)
!20730 = !DILocation(line: 3886, column: 19, scope: !20727)
!20731 = !DILocation(line: 3886, column: 29, scope: !20727)
!20732 = !DILocation(line: 3886, column: 40, scope: !20727)
!20733 = !DILocation(line: 3886, column: 53, scope: !20727)
!20734 = !DILocation(line: 3886, column: 58, scope: !20727)
!20735 = !DILocation(line: 3886, column: 65, scope: !20727)
!20736 = !DILocation(line: 3886, column: 71, scope: !20727)
!20737 = !DILocation(line: 3886, column: 69, scope: !20727)
!20738 = !DILocation(line: 3886, column: 62, scope: !20727)
!20739 = !DILocation(line: 3886, column: 7, scope: !20727)
!20740 = !DILocation(line: 3887, column: 7, scope: !20727)
!20741 = !DILocation(line: 3888, column: 5, scope: !20509)
!20742 = !DILocation(line: 3811, column: 32, scope: !20504)
!20743 = !DILocation(line: 3811, column: 3, scope: !20504)
!20744 = distinct !{!20744, !20507, !20745}
!20745 = !DILocation(line: 3888, column: 5, scope: !20501)
!20746 = !DILocation(line: 3890, column: 3, scope: !20408)
!20747 = !DILocation(line: 3891, column: 3, scope: !20408)
!20748 = distinct !DISubprogram(name: "combineSeparateSamples24bits", scope: !3, file: !3, line: 3894, type: !20095, scopeLine: 3897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!20749 = !DILocalVariable(name: "in", arg: 1, scope: !20748, file: !3, line: 3894, type: !18070)
!20750 = !DILocation(line: 3894, column: 38, scope: !20748)
!20751 = !DILocalVariable(name: "out", arg: 2, scope: !20748, file: !3, line: 3894, type: !116)
!20752 = !DILocation(line: 3894, column: 51, scope: !20748)
!20753 = !DILocalVariable(name: "cols", arg: 3, scope: !20748, file: !3, line: 3894, type: !105)
!20754 = !DILocation(line: 3894, column: 63, scope: !20748)
!20755 = !DILocalVariable(name: "rows", arg: 4, scope: !20748, file: !3, line: 3895, type: !105)
!20756 = !DILocation(line: 3895, column: 38, scope: !20748)
!20757 = !DILocalVariable(name: "spp", arg: 5, scope: !20748, file: !3, line: 3895, type: !103)
!20758 = !DILocation(line: 3895, column: 51, scope: !20748)
!20759 = !DILocalVariable(name: "bps", arg: 6, scope: !20748, file: !3, line: 3895, type: !103)
!20760 = !DILocation(line: 3895, column: 63, scope: !20748)
!20761 = !DILocalVariable(name: "dumpfile", arg: 7, scope: !20748, file: !3, line: 3896, type: !470)
!20762 = !DILocation(line: 3896, column: 30, scope: !20748)
!20763 = !DILocalVariable(name: "format", arg: 8, scope: !20748, file: !3, line: 3896, type: !110)
!20764 = !DILocation(line: 3896, column: 44, scope: !20748)
!20765 = !DILocalVariable(name: "level", arg: 9, scope: !20748, file: !3, line: 3896, type: !110)
!20766 = !DILocation(line: 3896, column: 56, scope: !20748)
!20767 = !DILocalVariable(name: "ready_bits", scope: !20748, file: !3, line: 3898, type: !110)
!20768 = !DILocation(line: 3898, column: 10, scope: !20748)
!20769 = !DILocalVariable(name: "bytes_per_sample", scope: !20748, file: !3, line: 3898, type: !110)
!20770 = !DILocation(line: 3898, column: 26, scope: !20748)
!20771 = !DILocalVariable(name: "src_rowsize", scope: !20748, file: !3, line: 3899, type: !105)
!20772 = !DILocation(line: 3899, column: 10, scope: !20748)
!20773 = !DILocalVariable(name: "dst_rowsize", scope: !20748, file: !3, line: 3899, type: !105)
!20774 = !DILocation(line: 3899, column: 23, scope: !20748)
!20775 = !DILocalVariable(name: "bit_offset", scope: !20748, file: !3, line: 3900, type: !105)
!20776 = !DILocation(line: 3900, column: 10, scope: !20748)
!20777 = !DILocalVariable(name: "src_offset", scope: !20748, file: !3, line: 3900, type: !105)
!20778 = !DILocation(line: 3900, column: 22, scope: !20748)
!20779 = !DILocalVariable(name: "row", scope: !20748, file: !3, line: 3901, type: !105)
!20780 = !DILocation(line: 3901, column: 10, scope: !20748)
!20781 = !DILocalVariable(name: "col", scope: !20748, file: !3, line: 3901, type: !105)
!20782 = !DILocation(line: 3901, column: 15, scope: !20748)
!20783 = !DILocalVariable(name: "src_byte", scope: !20748, file: !3, line: 3901, type: !105)
!20784 = !DILocation(line: 3901, column: 20, scope: !20748)
!20785 = !DILocalVariable(name: "src_bit", scope: !20748, file: !3, line: 3901, type: !105)
!20786 = !DILocation(line: 3901, column: 34, scope: !20748)
!20787 = !DILocalVariable(name: "maskbits", scope: !20748, file: !3, line: 3902, type: !105)
!20788 = !DILocation(line: 3902, column: 10, scope: !20748)
!20789 = !DILocalVariable(name: "matchbits", scope: !20748, file: !3, line: 3902, type: !105)
!20790 = !DILocation(line: 3902, column: 24, scope: !20748)
!20791 = !DILocalVariable(name: "buff1", scope: !20748, file: !3, line: 3903, type: !105)
!20792 = !DILocation(line: 3903, column: 10, scope: !20748)
!20793 = !DILocalVariable(name: "buff2", scope: !20748, file: !3, line: 3903, type: !105)
!20794 = !DILocation(line: 3903, column: 21, scope: !20748)
!20795 = !DILocalVariable(name: "bytebuff1", scope: !20748, file: !3, line: 3904, type: !114)
!20796 = !DILocation(line: 3904, column: 10, scope: !20748)
!20797 = !DILocalVariable(name: "bytebuff2", scope: !20748, file: !3, line: 3904, type: !114)
!20798 = !DILocation(line: 3904, column: 25, scope: !20748)
!20799 = !DILocalVariable(name: "s", scope: !20748, file: !3, line: 3905, type: !7616)
!20800 = !DILocation(line: 3905, column: 13, scope: !20748)
!20801 = !DILocalVariable(name: "src", scope: !20748, file: !3, line: 3906, type: !106)
!20802 = !DILocation(line: 3906, column: 18, scope: !20748)
!20803 = !DILocation(line: 3906, column: 24, scope: !20748)
!20804 = !DILocalVariable(name: "dst", scope: !20748, file: !3, line: 3907, type: !106)
!20805 = !DILocation(line: 3907, column: 18, scope: !20748)
!20806 = !DILocation(line: 3907, column: 24, scope: !20748)
!20807 = !DILocalVariable(name: "action", scope: !20748, file: !3, line: 3908, type: !18441)
!20808 = !DILocation(line: 3908, column: 18, scope: !20748)
!20809 = !DILocation(line: 3910, column: 8, scope: !20810)
!20810 = distinct !DILexicalBlock(scope: !20748, file: !3, line: 3910, column: 7)
!20811 = !DILocation(line: 3910, column: 12, scope: !20810)
!20812 = !DILocation(line: 3910, column: 21, scope: !20810)
!20813 = !DILocation(line: 3910, column: 25, scope: !20810)
!20814 = !DILocation(line: 3910, column: 29, scope: !20810)
!20815 = !DILocation(line: 3910, column: 7, scope: !20748)
!20816 = !DILocation(line: 3912, column: 5, scope: !20817)
!20817 = distinct !DILexicalBlock(scope: !20810, file: !3, line: 3911, column: 5)
!20818 = !DILocation(line: 3913, column: 5, scope: !20817)
!20819 = !DILocation(line: 3916, column: 23, scope: !20748)
!20820 = !DILocation(line: 3916, column: 27, scope: !20748)
!20821 = !DILocation(line: 3916, column: 32, scope: !20748)
!20822 = !DILocation(line: 3916, column: 20, scope: !20748)
!20823 = !DILocation(line: 3917, column: 19, scope: !20748)
!20824 = !DILocation(line: 3917, column: 25, scope: !20748)
!20825 = !DILocation(line: 3917, column: 23, scope: !20748)
!20826 = !DILocation(line: 3917, column: 31, scope: !20748)
!20827 = !DILocation(line: 3917, column: 36, scope: !20748)
!20828 = !DILocation(line: 3917, column: 15, scope: !20748)
!20829 = !DILocation(line: 3918, column: 19, scope: !20748)
!20830 = !DILocation(line: 3918, column: 25, scope: !20748)
!20831 = !DILocation(line: 3918, column: 23, scope: !20748)
!20832 = !DILocation(line: 3918, column: 32, scope: !20748)
!20833 = !DILocation(line: 3918, column: 30, scope: !20748)
!20834 = !DILocation(line: 3918, column: 37, scope: !20748)
!20835 = !DILocation(line: 3918, column: 42, scope: !20748)
!20836 = !DILocation(line: 3918, column: 15, scope: !20748)
!20837 = !DILocation(line: 3919, column: 36, scope: !20748)
!20838 = !DILocation(line: 3919, column: 34, scope: !20748)
!20839 = !DILocation(line: 3919, column: 26, scope: !20748)
!20840 = !DILocation(line: 3919, column: 12, scope: !20748)
!20841 = !DILocation(line: 3921, column: 12, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20748, file: !3, line: 3921, column: 3)
!20843 = !DILocation(line: 3921, column: 8, scope: !20842)
!20844 = !DILocation(line: 3921, column: 17, scope: !20845)
!20845 = distinct !DILexicalBlock(scope: !20842, file: !3, line: 3921, column: 3)
!20846 = !DILocation(line: 3921, column: 23, scope: !20845)
!20847 = !DILocation(line: 3921, column: 21, scope: !20845)
!20848 = !DILocation(line: 3921, column: 3, scope: !20842)
!20849 = !DILocation(line: 3923, column: 16, scope: !20850)
!20850 = distinct !DILexicalBlock(scope: !20845, file: !3, line: 3922, column: 5)
!20851 = !DILocation(line: 3924, column: 19, scope: !20850)
!20852 = !DILocation(line: 3924, column: 11, scope: !20850)
!20853 = !DILocation(line: 3925, column: 11, scope: !20850)
!20854 = !DILocation(line: 3925, column: 18, scope: !20850)
!20855 = !DILocation(line: 3925, column: 24, scope: !20850)
!20856 = !DILocation(line: 3925, column: 22, scope: !20850)
!20857 = !DILocation(line: 3925, column: 15, scope: !20850)
!20858 = !DILocation(line: 3925, column: 9, scope: !20850)
!20859 = !DILocation(line: 3926, column: 18, scope: !20850)
!20860 = !DILocation(line: 3926, column: 24, scope: !20850)
!20861 = !DILocation(line: 3926, column: 22, scope: !20850)
!20862 = !DILocation(line: 3926, column: 16, scope: !20850)
!20863 = !DILocation(line: 3927, column: 14, scope: !20864)
!20864 = distinct !DILexicalBlock(scope: !20850, file: !3, line: 3927, column: 5)
!20865 = !DILocation(line: 3927, column: 10, scope: !20864)
!20866 = !DILocation(line: 3927, column: 19, scope: !20867)
!20867 = distinct !DILexicalBlock(scope: !20864, file: !3, line: 3927, column: 5)
!20868 = !DILocation(line: 3927, column: 25, scope: !20867)
!20869 = !DILocation(line: 3927, column: 23, scope: !20867)
!20870 = !DILocation(line: 3927, column: 5, scope: !20864)
!20871 = !DILocation(line: 3930, column: 20, scope: !20872)
!20872 = distinct !DILexicalBlock(scope: !20867, file: !3, line: 3928, column: 7)
!20873 = !DILocation(line: 3930, column: 26, scope: !20872)
!20874 = !DILocation(line: 3930, column: 24, scope: !20872)
!20875 = !DILocation(line: 3930, column: 18, scope: !20872)
!20876 = !DILocation(line: 3931, column: 18, scope: !20872)
!20877 = !DILocation(line: 3931, column: 29, scope: !20872)
!20878 = !DILocation(line: 3931, column: 16, scope: !20872)
!20879 = !DILocation(line: 3932, column: 18, scope: !20872)
!20880 = !DILocation(line: 3932, column: 29, scope: !20872)
!20881 = !DILocation(line: 3932, column: 16, scope: !20872)
!20882 = !DILocation(line: 3934, column: 19, scope: !20872)
!20883 = !DILocation(line: 3934, column: 37, scope: !20872)
!20884 = !DILocation(line: 3934, column: 35, scope: !20872)
!20885 = !DILocation(line: 3934, column: 47, scope: !20872)
!20886 = !DILocation(line: 3934, column: 45, scope: !20872)
!20887 = !DILocation(line: 3934, column: 28, scope: !20872)
!20888 = !DILocation(line: 3934, column: 17, scope: !20872)
!20889 = !DILocation(line: 3935, column: 14, scope: !20890)
!20890 = distinct !DILexicalBlock(scope: !20872, file: !3, line: 3935, column: 7)
!20891 = !DILocation(line: 3935, column: 12, scope: !20890)
!20892 = !DILocation(line: 3935, column: 19, scope: !20893)
!20893 = distinct !DILexicalBlock(scope: !20890, file: !3, line: 3935, column: 7)
!20894 = !DILocation(line: 3935, column: 23, scope: !20893)
!20895 = !DILocation(line: 3935, column: 21, scope: !20893)
!20896 = !DILocation(line: 3935, column: 7, scope: !20890)
!20897 = !DILocation(line: 3937, column: 8, scope: !20898)
!20898 = distinct !DILexicalBlock(scope: !20893, file: !3, line: 3936, column: 9)
!20899 = !DILocation(line: 3937, column: 11, scope: !20898)
!20900 = !DILocation(line: 3937, column: 16, scope: !20898)
!20901 = !DILocation(line: 3937, column: 14, scope: !20898)
!20902 = !DILocation(line: 3937, column: 29, scope: !20898)
!20903 = !DILocation(line: 3937, column: 27, scope: !20898)
!20904 = !DILocation(line: 3937, column: 6, scope: !20898)
!20905 = !DILocation(line: 3938, column: 13, scope: !20906)
!20906 = distinct !DILexicalBlock(scope: !20898, file: !3, line: 3938, column: 13)
!20907 = !DILocation(line: 3938, column: 13, scope: !20898)
!20908 = !DILocation(line: 3939, column: 13, scope: !20906)
!20909 = !DILocation(line: 3939, column: 20, scope: !20906)
!20910 = !DILocation(line: 3939, column: 30, scope: !20906)
!20911 = !DILocation(line: 3939, column: 37, scope: !20906)
!20912 = !DILocation(line: 3939, column: 27, scope: !20906)
!20913 = !DILocation(line: 3939, column: 47, scope: !20906)
!20914 = !DILocation(line: 3939, column: 54, scope: !20906)
!20915 = !DILocation(line: 3939, column: 44, scope: !20906)
!20916 = !DILocation(line: 3939, column: 62, scope: !20906)
!20917 = !DILocation(line: 3939, column: 60, scope: !20906)
!20918 = !DILocation(line: 3939, column: 10, scope: !20906)
!20919 = !DILocation(line: 3939, column: 4, scope: !20906)
!20920 = !DILocation(line: 3941, column: 13, scope: !20906)
!20921 = !DILocation(line: 3941, column: 20, scope: !20906)
!20922 = !DILocation(line: 3941, column: 30, scope: !20906)
!20923 = !DILocation(line: 3941, column: 37, scope: !20906)
!20924 = !DILocation(line: 3941, column: 27, scope: !20906)
!20925 = !DILocation(line: 3941, column: 47, scope: !20906)
!20926 = !DILocation(line: 3941, column: 54, scope: !20906)
!20927 = !DILocation(line: 3941, column: 44, scope: !20906)
!20928 = !DILocation(line: 3941, column: 62, scope: !20906)
!20929 = !DILocation(line: 3941, column: 60, scope: !20906)
!20930 = !DILocation(line: 3941, column: 10, scope: !20906)
!20931 = !DILocation(line: 3942, column: 11, scope: !20898)
!20932 = !DILocation(line: 3942, column: 19, scope: !20898)
!20933 = !DILocation(line: 3942, column: 17, scope: !20898)
!20934 = !DILocation(line: 3942, column: 34, scope: !20898)
!20935 = !DILocation(line: 3942, column: 30, scope: !20898)
!20936 = !DILocation(line: 3942, column: 8, scope: !20898)
!20937 = !DILocation(line: 3945, column: 6, scope: !20938)
!20938 = distinct !DILexicalBlock(scope: !20898, file: !3, line: 3945, column: 6)
!20939 = !DILocation(line: 3945, column: 17, scope: !20938)
!20940 = !DILocation(line: 3945, column: 6, scope: !20898)
!20941 = !DILocation(line: 3947, column: 19, scope: !20942)
!20942 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 3946, column: 4)
!20943 = !DILocation(line: 3947, column: 25, scope: !20942)
!20944 = !DILocation(line: 3947, column: 18, scope: !20942)
!20945 = !DILocation(line: 3947, column: 16, scope: !20942)
!20946 = !DILocation(line: 3948, column: 15, scope: !20942)
!20947 = !DILocation(line: 3948, column: 10, scope: !20942)
!20948 = !DILocation(line: 3948, column: 13, scope: !20942)
!20949 = !DILocation(line: 3949, column: 19, scope: !20942)
!20950 = !DILocation(line: 3949, column: 25, scope: !20942)
!20951 = !DILocation(line: 3949, column: 18, scope: !20942)
!20952 = !DILocation(line: 3949, column: 16, scope: !20942)
!20953 = !DILocation(line: 3950, column: 15, scope: !20942)
!20954 = !DILocation(line: 3950, column: 10, scope: !20942)
!20955 = !DILocation(line: 3950, column: 13, scope: !20942)
!20956 = !DILocation(line: 3951, column: 17, scope: !20942)
!20957 = !DILocation(line: 3954, column: 16, scope: !20942)
!20958 = !DILocation(line: 3954, column: 22, scope: !20942)
!20959 = !DILocation(line: 3954, column: 32, scope: !20942)
!20960 = !DILocation(line: 3954, column: 41, scope: !20942)
!20961 = !DILocation(line: 3954, column: 38, scope: !20942)
!20962 = !DILocation(line: 3954, column: 29, scope: !20942)
!20963 = !DILocation(line: 3954, column: 12, scope: !20942)
!20964 = !DILocation(line: 3955, column: 14, scope: !20942)
!20965 = !DILocation(line: 3955, column: 6, scope: !20942)
!20966 = !DILocation(line: 3956, column: 4, scope: !20942)
!20967 = !DILocation(line: 3959, column: 28, scope: !20968)
!20968 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 3958, column: 4)
!20969 = !DILocation(line: 3959, column: 16, scope: !20968)
!20970 = !DILocation(line: 3960, column: 15, scope: !20968)
!20971 = !DILocation(line: 3960, column: 24, scope: !20968)
!20972 = !DILocation(line: 3960, column: 33, scope: !20968)
!20973 = !DILocation(line: 3960, column: 30, scope: !20968)
!20974 = !DILocation(line: 3960, column: 21, scope: !20968)
!20975 = !DILocation(line: 3960, column: 12, scope: !20968)
!20976 = !DILocation(line: 3961, column: 14, scope: !20968)
!20977 = !DILocation(line: 3961, column: 6, scope: !20968)
!20978 = !DILocation(line: 3963, column: 16, scope: !20898)
!20979 = !DILocation(line: 3963, column: 13, scope: !20898)
!20980 = !DILocation(line: 3965, column: 7, scope: !20981)
!20981 = distinct !DILexicalBlock(scope: !20898, file: !3, line: 3965, column: 6)
!20982 = !DILocation(line: 3965, column: 16, scope: !20981)
!20983 = !DILocation(line: 3965, column: 25, scope: !20981)
!20984 = !DILocation(line: 3965, column: 29, scope: !20981)
!20985 = !DILocation(line: 3965, column: 35, scope: !20981)
!20986 = !DILocation(line: 3965, column: 6, scope: !20898)
!20987 = !DILocation(line: 3967, column: 15, scope: !20988)
!20988 = distinct !DILexicalBlock(scope: !20981, file: !3, line: 3966, column: 4)
!20989 = !DILocation(line: 3967, column: 25, scope: !20988)
!20990 = !DILocation(line: 3969, column: 10, scope: !20988)
!20991 = !DILocation(line: 3969, column: 14, scope: !20988)
!20992 = !DILocation(line: 3969, column: 19, scope: !20988)
!20993 = !DILocation(line: 3969, column: 23, scope: !20988)
!20994 = !DILocation(line: 3969, column: 28, scope: !20988)
!20995 = !DILocation(line: 3969, column: 31, scope: !20988)
!20996 = !DILocation(line: 3969, column: 41, scope: !20988)
!20997 = !DILocation(line: 3969, column: 50, scope: !20988)
!20998 = !DILocation(line: 3969, column: 56, scope: !20988)
!20999 = !DILocation(line: 3969, column: 54, scope: !20988)
!21000 = !DILocation(line: 3967, column: 4, scope: !20988)
!21001 = !DILocation(line: 3970, column: 15, scope: !20988)
!21002 = !DILocation(line: 3970, column: 25, scope: !20988)
!21003 = !DILocation(line: 3970, column: 48, scope: !20988)
!21004 = !DILocation(line: 3970, column: 4, scope: !20988)
!21005 = !DILocation(line: 3971, column: 15, scope: !20988)
!21006 = !DILocation(line: 3971, column: 25, scope: !20988)
!21007 = !DILocation(line: 3971, column: 48, scope: !20988)
!21008 = !DILocation(line: 3971, column: 4, scope: !20988)
!21009 = !DILocation(line: 3972, column: 15, scope: !20988)
!21010 = !DILocation(line: 3972, column: 25, scope: !20988)
!21011 = !DILocation(line: 3972, column: 48, scope: !20988)
!21012 = !DILocation(line: 3972, column: 4, scope: !20988)
!21013 = !DILocation(line: 3973, column: 15, scope: !20988)
!21014 = !DILocation(line: 3973, column: 25, scope: !20988)
!21015 = !DILocation(line: 3973, column: 48, scope: !20988)
!21016 = !DILocation(line: 3973, column: 4, scope: !20988)
!21017 = !DILocation(line: 3974, column: 15, scope: !20988)
!21018 = !DILocation(line: 3974, column: 25, scope: !20988)
!21019 = !DILocation(line: 3974, column: 48, scope: !20988)
!21020 = !DILocation(line: 3974, column: 4, scope: !20988)
!21021 = !DILocation(line: 3975, column: 15, scope: !20988)
!21022 = !DILocation(line: 3975, column: 25, scope: !20988)
!21023 = !DILocation(line: 3975, column: 48, scope: !20988)
!21024 = !DILocation(line: 3975, column: 4, scope: !20988)
!21025 = !DILocation(line: 3976, column: 15, scope: !20988)
!21026 = !DILocation(line: 3976, column: 25, scope: !20988)
!21027 = !DILocation(line: 3976, column: 60, scope: !20988)
!21028 = !DILocation(line: 3976, column: 72, scope: !20988)
!21029 = !DILocation(line: 3976, column: 4, scope: !20988)
!21030 = !DILocation(line: 3977, column: 4, scope: !20988)
!21031 = !DILocation(line: 3978, column: 2, scope: !20898)
!21032 = !DILocation(line: 3935, column: 29, scope: !20893)
!21033 = !DILocation(line: 3935, column: 7, scope: !20893)
!21034 = distinct !{!21034, !20896, !21035}
!21035 = !DILocation(line: 3978, column: 2, scope: !20890)
!21036 = !DILocation(line: 3979, column: 7, scope: !20872)
!21037 = !DILocation(line: 3927, column: 34, scope: !20867)
!21038 = !DILocation(line: 3927, column: 5, scope: !20867)
!21039 = distinct !{!21039, !20870, !21040}
!21040 = !DILocation(line: 3979, column: 7, scope: !20864)
!21041 = !DILocation(line: 3982, column: 5, scope: !20850)
!21042 = !DILocation(line: 3982, column: 12, scope: !20850)
!21043 = !DILocation(line: 3982, column: 23, scope: !20850)
!21044 = !DILocation(line: 3984, column: 15, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !20850, file: !3, line: 3983, column: 7)
!21046 = !DILocation(line: 3984, column: 21, scope: !21045)
!21047 = !DILocation(line: 3984, column: 14, scope: !21045)
!21048 = !DILocation(line: 3984, column: 12, scope: !21045)
!21049 = !DILocation(line: 3985, column: 11, scope: !21045)
!21050 = !DILocation(line: 3985, column: 6, scope: !21045)
!21051 = !DILocation(line: 3985, column: 9, scope: !21045)
!21052 = !DILocation(line: 3987, column: 11, scope: !21045)
!21053 = !DILocation(line: 3987, column: 17, scope: !21045)
!21054 = !DILocation(line: 3987, column: 8, scope: !21045)
!21055 = !DILocation(line: 3988, column: 14, scope: !21045)
!21056 = !DILocation(line: 3988, column: 12, scope: !21045)
!21057 = !DILocation(line: 3989, column: 13, scope: !21045)
!21058 = distinct !{!21058, !21041, !21059}
!21059 = !DILocation(line: 3990, column: 7, scope: !20850)
!21060 = !DILocation(line: 3992, column: 10, scope: !21061)
!21061 = distinct !DILexicalBlock(scope: !20850, file: !3, line: 3992, column: 9)
!21062 = !DILocation(line: 3992, column: 19, scope: !21061)
!21063 = !DILocation(line: 3992, column: 28, scope: !21061)
!21064 = !DILocation(line: 3992, column: 32, scope: !21061)
!21065 = !DILocation(line: 3992, column: 38, scope: !21061)
!21066 = !DILocation(line: 3992, column: 9, scope: !20850)
!21067 = !DILocation(line: 3994, column: 18, scope: !21068)
!21068 = distinct !DILexicalBlock(scope: !21061, file: !3, line: 3993, column: 7)
!21069 = !DILocation(line: 3994, column: 28, scope: !21068)
!21070 = !DILocation(line: 3996, column: 6, scope: !21068)
!21071 = !DILocation(line: 3996, column: 10, scope: !21068)
!21072 = !DILocation(line: 3996, column: 15, scope: !21068)
!21073 = !DILocation(line: 3996, column: 19, scope: !21068)
!21074 = !DILocation(line: 3996, column: 24, scope: !21068)
!21075 = !DILocation(line: 3996, column: 34, scope: !21068)
!21076 = !DILocation(line: 3996, column: 43, scope: !21068)
!21077 = !DILocation(line: 3996, column: 49, scope: !21068)
!21078 = !DILocation(line: 3996, column: 47, scope: !21068)
!21079 = !DILocation(line: 3994, column: 7, scope: !21068)
!21080 = !DILocation(line: 3998, column: 18, scope: !21068)
!21081 = !DILocation(line: 3998, column: 28, scope: !21068)
!21082 = !DILocation(line: 3998, column: 51, scope: !21068)
!21083 = !DILocation(line: 3998, column: 7, scope: !21068)
!21084 = !DILocation(line: 3999, column: 18, scope: !21068)
!21085 = !DILocation(line: 3999, column: 28, scope: !21068)
!21086 = !DILocation(line: 3999, column: 51, scope: !21068)
!21087 = !DILocation(line: 3999, column: 7, scope: !21068)
!21088 = !DILocation(line: 4000, column: 18, scope: !21068)
!21089 = !DILocation(line: 4000, column: 28, scope: !21068)
!21090 = !DILocation(line: 4000, column: 51, scope: !21068)
!21091 = !DILocation(line: 4000, column: 7, scope: !21068)
!21092 = !DILocation(line: 4001, column: 18, scope: !21068)
!21093 = !DILocation(line: 4001, column: 28, scope: !21068)
!21094 = !DILocation(line: 4001, column: 51, scope: !21068)
!21095 = !DILocation(line: 4001, column: 7, scope: !21068)
!21096 = !DILocation(line: 4002, column: 18, scope: !21068)
!21097 = !DILocation(line: 4002, column: 28, scope: !21068)
!21098 = !DILocation(line: 4002, column: 51, scope: !21068)
!21099 = !DILocation(line: 4002, column: 7, scope: !21068)
!21100 = !DILocation(line: 4003, column: 18, scope: !21068)
!21101 = !DILocation(line: 4003, column: 28, scope: !21068)
!21102 = !DILocation(line: 4003, column: 51, scope: !21068)
!21103 = !DILocation(line: 4003, column: 7, scope: !21068)
!21104 = !DILocation(line: 4004, column: 18, scope: !21068)
!21105 = !DILocation(line: 4004, column: 28, scope: !21068)
!21106 = !DILocation(line: 4004, column: 60, scope: !21068)
!21107 = !DILocation(line: 4004, column: 7, scope: !21068)
!21108 = !DILocation(line: 4005, column: 7, scope: !21068)
!21109 = !DILocation(line: 4007, column: 10, scope: !21110)
!21110 = distinct !DILexicalBlock(scope: !20850, file: !3, line: 4007, column: 9)
!21111 = !DILocation(line: 4007, column: 19, scope: !21110)
!21112 = !DILocation(line: 4007, column: 28, scope: !21110)
!21113 = !DILocation(line: 4007, column: 32, scope: !21110)
!21114 = !DILocation(line: 4007, column: 38, scope: !21110)
!21115 = !DILocation(line: 4007, column: 9, scope: !20850)
!21116 = !DILocation(line: 4009, column: 18, scope: !21117)
!21117 = distinct !DILexicalBlock(scope: !21110, file: !3, line: 4008, column: 7)
!21118 = !DILocation(line: 4009, column: 28, scope: !21117)
!21119 = !DILocation(line: 4009, column: 7, scope: !21117)
!21120 = !DILocation(line: 4010, column: 19, scope: !21117)
!21121 = !DILocation(line: 4010, column: 29, scope: !21117)
!21122 = !DILocation(line: 4010, column: 40, scope: !21117)
!21123 = !DILocation(line: 4010, column: 53, scope: !21117)
!21124 = !DILocation(line: 4010, column: 58, scope: !21117)
!21125 = !DILocation(line: 4010, column: 65, scope: !21117)
!21126 = !DILocation(line: 4010, column: 71, scope: !21117)
!21127 = !DILocation(line: 4010, column: 69, scope: !21117)
!21128 = !DILocation(line: 4010, column: 62, scope: !21117)
!21129 = !DILocation(line: 4010, column: 7, scope: !21117)
!21130 = !DILocation(line: 4011, column: 7, scope: !21117)
!21131 = !DILocation(line: 4012, column: 5, scope: !20850)
!21132 = !DILocation(line: 3921, column: 32, scope: !20845)
!21133 = !DILocation(line: 3921, column: 3, scope: !20845)
!21134 = distinct !{!21134, !20848, !21135}
!21135 = !DILocation(line: 4012, column: 5, scope: !20842)
!21136 = !DILocation(line: 4014, column: 3, scope: !20748)
!21137 = !DILocation(line: 4015, column: 3, scope: !20748)
!21138 = distinct !DISubprogram(name: "combineSeparateSamples32bits", scope: !3, file: !3, line: 4018, type: !20095, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !536)
!21139 = !DILocalVariable(name: "in", arg: 1, scope: !21138, file: !3, line: 4018, type: !18070)
!21140 = !DILocation(line: 4018, column: 38, scope: !21138)
!21141 = !DILocalVariable(name: "out", arg: 2, scope: !21138, file: !3, line: 4018, type: !116)
!21142 = !DILocation(line: 4018, column: 51, scope: !21138)
!21143 = !DILocalVariable(name: "cols", arg: 3, scope: !21138, file: !3, line: 4018, type: !105)
!21144 = !DILocation(line: 4018, column: 63, scope: !21138)
!21145 = !DILocalVariable(name: "rows", arg: 4, scope: !21138, file: !3, line: 4019, type: !105)
!21146 = !DILocation(line: 4019, column: 38, scope: !21138)
!21147 = !DILocalVariable(name: "spp", arg: 5, scope: !21138, file: !3, line: 4019, type: !103)
!21148 = !DILocation(line: 4019, column: 51, scope: !21138)
!21149 = !DILocalVariable(name: "bps", arg: 6, scope: !21138, file: !3, line: 4019, type: !103)
!21150 = !DILocation(line: 4019, column: 63, scope: !21138)
!21151 = !DILocalVariable(name: "dumpfile", arg: 7, scope: !21138, file: !3, line: 4020, type: !470)
!21152 = !DILocation(line: 4020, column: 30, scope: !21138)
!21153 = !DILocalVariable(name: "format", arg: 8, scope: !21138, file: !3, line: 4020, type: !110)
!21154 = !DILocation(line: 4020, column: 44, scope: !21138)
!21155 = !DILocalVariable(name: "level", arg: 9, scope: !21138, file: !3, line: 4020, type: !110)
!21156 = !DILocation(line: 4020, column: 56, scope: !21138)
!21157 = !DILocalVariable(name: "ready_bits", scope: !21138, file: !3, line: 4022, type: !110)
!21158 = !DILocation(line: 4022, column: 10, scope: !21138)
!21159 = !DILocalVariable(name: "bytes_per_sample", scope: !21138, file: !3, line: 4022, type: !110)
!21160 = !DILocation(line: 4022, column: 26, scope: !21138)
!21161 = !DILocalVariable(name: "shift_width", scope: !21138, file: !3, line: 4022, type: !110)
!21162 = !DILocation(line: 4022, column: 48, scope: !21138)
!21163 = !DILocalVariable(name: "src_rowsize", scope: !21138, file: !3, line: 4023, type: !105)
!21164 = !DILocation(line: 4023, column: 10, scope: !21138)
!21165 = !DILocalVariable(name: "dst_rowsize", scope: !21138, file: !3, line: 4023, type: !105)
!21166 = !DILocation(line: 4023, column: 23, scope: !21138)
!21167 = !DILocalVariable(name: "bit_offset", scope: !21138, file: !3, line: 4023, type: !105)
!21168 = !DILocation(line: 4023, column: 36, scope: !21138)
!21169 = !DILocalVariable(name: "src_offset", scope: !21138, file: !3, line: 4023, type: !105)
!21170 = !DILocation(line: 4023, column: 48, scope: !21138)
!21171 = !DILocalVariable(name: "src_byte", scope: !21138, file: !3, line: 4024, type: !105)
!21172 = !DILocation(line: 4024, column: 10, scope: !21138)
!21173 = !DILocalVariable(name: "src_bit", scope: !21138, file: !3, line: 4024, type: !105)
!21174 = !DILocation(line: 4024, column: 24, scope: !21138)
!21175 = !DILocalVariable(name: "row", scope: !21138, file: !3, line: 4025, type: !105)
!21176 = !DILocation(line: 4025, column: 10, scope: !21138)
!21177 = !DILocalVariable(name: "col", scope: !21138, file: !3, line: 4025, type: !105)
!21178 = !DILocation(line: 4025, column: 15, scope: !21138)
!21179 = !DILocalVariable(name: "longbuff1", scope: !21138, file: !3, line: 4026, type: !105)
!21180 = !DILocation(line: 4026, column: 10, scope: !21138)
!21181 = !DILocalVariable(name: "longbuff2", scope: !21138, file: !3, line: 4026, type: !105)
!21182 = !DILocation(line: 4026, column: 25, scope: !21138)
!21183 = !DILocalVariable(name: "maskbits", scope: !21138, file: !3, line: 4027, type: !115)
!21184 = !DILocation(line: 4027, column: 10, scope: !21138)
!21185 = !DILocalVariable(name: "matchbits", scope: !21138, file: !3, line: 4027, type: !115)
!21186 = !DILocation(line: 4027, column: 24, scope: !21138)
!21187 = !DILocalVariable(name: "buff1", scope: !21138, file: !3, line: 4028, type: !115)
!21188 = !DILocation(line: 4028, column: 10, scope: !21138)
!21189 = !DILocalVariable(name: "buff2", scope: !21138, file: !3, line: 4028, type: !115)
!21190 = !DILocation(line: 4028, column: 21, scope: !21138)
!21191 = !DILocalVariable(name: "buff3", scope: !21138, file: !3, line: 4028, type: !115)
!21192 = !DILocation(line: 4028, column: 32, scope: !21138)
!21193 = !DILocalVariable(name: "bytebuff1", scope: !21138, file: !3, line: 4029, type: !114)
!21194 = !DILocation(line: 4029, column: 10, scope: !21138)
!21195 = !DILocalVariable(name: "bytebuff2", scope: !21138, file: !3, line: 4029, type: !114)
!21196 = !DILocation(line: 4029, column: 25, scope: !21138)
!21197 = !DILocalVariable(name: "bytebuff3", scope: !21138, file: !3, line: 4029, type: !114)
!21198 = !DILocation(line: 4029, column: 40, scope: !21138)
!21199 = !DILocalVariable(name: "bytebuff4", scope: !21138, file: !3, line: 4029, type: !114)
!21200 = !DILocation(line: 4029, column: 55, scope: !21138)
!21201 = !DILocalVariable(name: "s", scope: !21138, file: !3, line: 4030, type: !7616)
!21202 = !DILocation(line: 4030, column: 13, scope: !21138)
!21203 = !DILocalVariable(name: "src", scope: !21138, file: !3, line: 4031, type: !106)
!21204 = !DILocation(line: 4031, column: 18, scope: !21138)
!21205 = !DILocation(line: 4031, column: 24, scope: !21138)
!21206 = !DILocalVariable(name: "dst", scope: !21138, file: !3, line: 4032, type: !106)
!21207 = !DILocation(line: 4032, column: 18, scope: !21138)
!21208 = !DILocation(line: 4032, column: 24, scope: !21138)
!21209 = !DILocalVariable(name: "action", scope: !21138, file: !3, line: 4033, type: !18441)
!21210 = !DILocation(line: 4033, column: 18, scope: !21138)
!21211 = !DILocation(line: 4035, column: 8, scope: !21212)
!21212 = distinct !DILexicalBlock(scope: !21138, file: !3, line: 4035, column: 7)
!21213 = !DILocation(line: 4035, column: 12, scope: !21212)
!21214 = !DILocation(line: 4035, column: 21, scope: !21212)
!21215 = !DILocation(line: 4035, column: 25, scope: !21212)
!21216 = !DILocation(line: 4035, column: 29, scope: !21212)
!21217 = !DILocation(line: 4035, column: 7, scope: !21138)
!21218 = !DILocation(line: 4037, column: 5, scope: !21219)
!21219 = distinct !DILexicalBlock(scope: !21212, file: !3, line: 4036, column: 5)
!21220 = !DILocation(line: 4038, column: 5, scope: !21219)
!21221 = !DILocation(line: 4041, column: 23, scope: !21138)
!21222 = !DILocation(line: 4041, column: 27, scope: !21138)
!21223 = !DILocation(line: 4041, column: 32, scope: !21138)
!21224 = !DILocation(line: 4041, column: 20, scope: !21138)
!21225 = !DILocation(line: 4042, column: 19, scope: !21138)
!21226 = !DILocation(line: 4042, column: 25, scope: !21138)
!21227 = !DILocation(line: 4042, column: 23, scope: !21138)
!21228 = !DILocation(line: 4042, column: 31, scope: !21138)
!21229 = !DILocation(line: 4042, column: 36, scope: !21138)
!21230 = !DILocation(line: 4042, column: 15, scope: !21138)
!21231 = !DILocation(line: 4043, column: 19, scope: !21138)
!21232 = !DILocation(line: 4043, column: 25, scope: !21138)
!21233 = !DILocation(line: 4043, column: 23, scope: !21138)
!21234 = !DILocation(line: 4043, column: 32, scope: !21138)
!21235 = !DILocation(line: 4043, column: 30, scope: !21138)
!21236 = !DILocation(line: 4043, column: 37, scope: !21138)
!21237 = !DILocation(line: 4043, column: 42, scope: !21138)
!21238 = !DILocation(line: 4043, column: 15, scope: !21138)
!21239 = !DILocation(line: 4044, column: 36, scope: !21138)
!21240 = !DILocation(line: 4044, column: 34, scope: !21138)
!21241 = !DILocation(line: 4044, column: 26, scope: !21138)
!21242 = !DILocation(line: 4044, column: 12, scope: !21138)
!21243 = !DILocation(line: 4045, column: 19, scope: !21138)
!21244 = !DILocation(line: 4045, column: 23, scope: !21138)
!21245 = !DILocation(line: 4045, column: 28, scope: !21138)
!21246 = !DILocation(line: 4045, column: 33, scope: !21138)
!21247 = !DILocation(line: 4045, column: 15, scope: !21138)
!21248 = !DILocation(line: 4047, column: 12, scope: !21249)
!21249 = distinct !DILexicalBlock(scope: !21138, file: !3, line: 4047, column: 3)
!21250 = !DILocation(line: 4047, column: 8, scope: !21249)
!21251 = !DILocation(line: 4047, column: 17, scope: !21252)
!21252 = distinct !DILexicalBlock(scope: !21249, file: !3, line: 4047, column: 3)
!21253 = !DILocation(line: 4047, column: 23, scope: !21252)
!21254 = !DILocation(line: 4047, column: 21, scope: !21252)
!21255 = !DILocation(line: 4047, column: 3, scope: !21249)
!21256 = !DILocation(line: 4049, column: 16, scope: !21257)
!21257 = distinct !DILexicalBlock(scope: !21252, file: !3, line: 4048, column: 5)
!21258 = !DILocation(line: 4050, column: 19, scope: !21257)
!21259 = !DILocation(line: 4050, column: 11, scope: !21257)
!21260 = !DILocation(line: 4051, column: 11, scope: !21257)
!21261 = !DILocation(line: 4051, column: 18, scope: !21257)
!21262 = !DILocation(line: 4051, column: 24, scope: !21257)
!21263 = !DILocation(line: 4051, column: 22, scope: !21257)
!21264 = !DILocation(line: 4051, column: 15, scope: !21257)
!21265 = !DILocation(line: 4051, column: 9, scope: !21257)
!21266 = !DILocation(line: 4052, column: 18, scope: !21257)
!21267 = !DILocation(line: 4052, column: 24, scope: !21257)
!21268 = !DILocation(line: 4052, column: 22, scope: !21257)
!21269 = !DILocation(line: 4052, column: 16, scope: !21257)
!21270 = !DILocation(line: 4053, column: 14, scope: !21271)
!21271 = distinct !DILexicalBlock(scope: !21257, file: !3, line: 4053, column: 5)
!21272 = !DILocation(line: 4053, column: 10, scope: !21271)
!21273 = !DILocation(line: 4053, column: 19, scope: !21274)
!21274 = distinct !DILexicalBlock(scope: !21271, file: !3, line: 4053, column: 5)
!21275 = !DILocation(line: 4053, column: 25, scope: !21274)
!21276 = !DILocation(line: 4053, column: 23, scope: !21274)
!21277 = !DILocation(line: 4053, column: 5, scope: !21271)
!21278 = !DILocation(line: 4056, column: 20, scope: !21279)
!21279 = distinct !DILexicalBlock(scope: !21274, file: !3, line: 4054, column: 7)
!21280 = !DILocation(line: 4056, column: 26, scope: !21279)
!21281 = !DILocation(line: 4056, column: 24, scope: !21279)
!21282 = !DILocation(line: 4056, column: 18, scope: !21279)
!21283 = !DILocation(line: 4057, column: 18, scope: !21279)
!21284 = !DILocation(line: 4057, column: 29, scope: !21279)
!21285 = !DILocation(line: 4057, column: 16, scope: !21279)
!21286 = !DILocation(line: 4058, column: 18, scope: !21279)
!21287 = !DILocation(line: 4058, column: 29, scope: !21279)
!21288 = !DILocation(line: 4058, column: 16, scope: !21279)
!21289 = !DILocation(line: 4060, column: 19, scope: !21279)
!21290 = !DILocation(line: 4060, column: 37, scope: !21279)
!21291 = !DILocation(line: 4060, column: 35, scope: !21279)
!21292 = !DILocation(line: 4060, column: 47, scope: !21279)
!21293 = !DILocation(line: 4060, column: 45, scope: !21279)
!21294 = !DILocation(line: 4060, column: 28, scope: !21279)
!21295 = !DILocation(line: 4060, column: 17, scope: !21279)
!21296 = !DILocation(line: 4061, column: 14, scope: !21297)
!21297 = distinct !DILexicalBlock(scope: !21279, file: !3, line: 4061, column: 7)
!21298 = !DILocation(line: 4061, column: 12, scope: !21297)
!21299 = !DILocation(line: 4061, column: 19, scope: !21300)
!21300 = distinct !DILexicalBlock(scope: !21297, file: !3, line: 4061, column: 7)
!21301 = !DILocation(line: 4061, column: 23, scope: !21300)
!21302 = !DILocation(line: 4061, column: 21, scope: !21300)
!21303 = !DILocation(line: 4061, column: 7, scope: !21297)
!21304 = !DILocation(line: 4063, column: 8, scope: !21305)
!21305 = distinct !DILexicalBlock(scope: !21300, file: !3, line: 4062, column: 2)
!21306 = !DILocation(line: 4063, column: 11, scope: !21305)
!21307 = !DILocation(line: 4063, column: 16, scope: !21305)
!21308 = !DILocation(line: 4063, column: 14, scope: !21305)
!21309 = !DILocation(line: 4063, column: 29, scope: !21305)
!21310 = !DILocation(line: 4063, column: 27, scope: !21305)
!21311 = !DILocation(line: 4063, column: 6, scope: !21305)
!21312 = !DILocation(line: 4064, column: 6, scope: !21313)
!21313 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 4064, column: 6)
!21314 = !DILocation(line: 4064, column: 6, scope: !21305)
!21315 = !DILocation(line: 4066, column: 17, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21313, file: !3, line: 4065, column: 4)
!21317 = !DILocation(line: 4066, column: 24, scope: !21316)
!21318 = !DILocation(line: 4066, column: 34, scope: !21316)
!21319 = !DILocation(line: 4066, column: 41, scope: !21316)
!21320 = !DILocation(line: 4066, column: 31, scope: !21316)
!21321 = !DILocation(line: 4066, column: 51, scope: !21316)
!21322 = !DILocation(line: 4066, column: 58, scope: !21316)
!21323 = !DILocation(line: 4066, column: 48, scope: !21316)
!21324 = !DILocation(line: 4066, column: 66, scope: !21316)
!21325 = !DILocation(line: 4066, column: 64, scope: !21316)
!21326 = !DILocation(line: 4066, column: 14, scope: !21316)
!21327 = !DILocation(line: 4067, column: 23, scope: !21316)
!21328 = !DILocation(line: 4067, column: 21, scope: !21316)
!21329 = !DILocation(line: 4068, column: 4, scope: !21316)
!21330 = !DILocation(line: 4071, column: 17, scope: !21331)
!21331 = distinct !DILexicalBlock(scope: !21313, file: !3, line: 4070, column: 4)
!21332 = !DILocation(line: 4071, column: 24, scope: !21331)
!21333 = !DILocation(line: 4071, column: 34, scope: !21331)
!21334 = !DILocation(line: 4071, column: 41, scope: !21331)
!21335 = !DILocation(line: 4071, column: 31, scope: !21331)
!21336 = !DILocation(line: 4071, column: 51, scope: !21331)
!21337 = !DILocation(line: 4071, column: 58, scope: !21331)
!21338 = !DILocation(line: 4071, column: 48, scope: !21331)
!21339 = !DILocation(line: 4071, column: 66, scope: !21331)
!21340 = !DILocation(line: 4071, column: 64, scope: !21331)
!21341 = !DILocation(line: 4071, column: 14, scope: !21331)
!21342 = !DILocation(line: 4072, column: 23, scope: !21331)
!21343 = !DILocation(line: 4072, column: 21, scope: !21331)
!21344 = !DILocation(line: 4074, column: 19, scope: !21305)
!21345 = !DILocation(line: 4074, column: 11, scope: !21305)
!21346 = !DILocation(line: 4074, column: 29, scope: !21305)
!21347 = !DILocation(line: 4074, column: 38, scope: !21305)
!21348 = !DILocation(line: 4074, column: 36, scope: !21305)
!21349 = !DILocation(line: 4074, column: 8, scope: !21305)
!21350 = !DILocation(line: 4075, column: 11, scope: !21305)
!21351 = !DILocation(line: 4075, column: 19, scope: !21305)
!21352 = !DILocation(line: 4075, column: 17, scope: !21305)
!21353 = !DILocation(line: 4075, column: 34, scope: !21305)
!21354 = !DILocation(line: 4075, column: 30, scope: !21305)
!21355 = !DILocation(line: 4075, column: 8, scope: !21305)
!21356 = !DILocation(line: 4078, column: 6, scope: !21357)
!21357 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 4078, column: 6)
!21358 = !DILocation(line: 4078, column: 17, scope: !21357)
!21359 = !DILocation(line: 4078, column: 6, scope: !21305)
!21360 = !DILocation(line: 4080, column: 17, scope: !21361)
!21361 = distinct !DILexicalBlock(scope: !21357, file: !3, line: 4079, column: 4)
!21362 = !DILocation(line: 4080, column: 23, scope: !21361)
!21363 = !DILocation(line: 4080, column: 16, scope: !21361)
!21364 = !DILocation(line: 4080, column: 14, scope: !21361)
!21365 = !DILocation(line: 4081, column: 13, scope: !21361)
!21366 = !DILocation(line: 4081, column: 8, scope: !21361)
!21367 = !DILocation(line: 4081, column: 11, scope: !21361)
!21368 = !DILocation(line: 4082, column: 17, scope: !21361)
!21369 = !DILocation(line: 4082, column: 23, scope: !21361)
!21370 = !DILocation(line: 4082, column: 16, scope: !21361)
!21371 = !DILocation(line: 4082, column: 14, scope: !21361)
!21372 = !DILocation(line: 4083, column: 13, scope: !21361)
!21373 = !DILocation(line: 4083, column: 8, scope: !21361)
!21374 = !DILocation(line: 4083, column: 11, scope: !21361)
!21375 = !DILocation(line: 4084, column: 17, scope: !21361)
!21376 = !DILocation(line: 4084, column: 23, scope: !21361)
!21377 = !DILocation(line: 4084, column: 16, scope: !21361)
!21378 = !DILocation(line: 4084, column: 14, scope: !21361)
!21379 = !DILocation(line: 4085, column: 13, scope: !21361)
!21380 = !DILocation(line: 4085, column: 8, scope: !21361)
!21381 = !DILocation(line: 4085, column: 11, scope: !21361)
!21382 = !DILocation(line: 4086, column: 17, scope: !21361)
!21383 = !DILocation(line: 4086, column: 23, scope: !21361)
!21384 = !DILocation(line: 4086, column: 16, scope: !21361)
!21385 = !DILocation(line: 4086, column: 14, scope: !21361)
!21386 = !DILocation(line: 4087, column: 13, scope: !21361)
!21387 = !DILocation(line: 4087, column: 8, scope: !21361)
!21388 = !DILocation(line: 4087, column: 11, scope: !21361)
!21389 = !DILocation(line: 4088, column: 15, scope: !21361)
!21390 = !DILocation(line: 4091, column: 14, scope: !21361)
!21391 = !DILocation(line: 4091, column: 20, scope: !21361)
!21392 = !DILocation(line: 4091, column: 30, scope: !21361)
!21393 = !DILocation(line: 4091, column: 39, scope: !21361)
!21394 = !DILocation(line: 4091, column: 36, scope: !21361)
!21395 = !DILocation(line: 4091, column: 27, scope: !21361)
!21396 = !DILocation(line: 4091, column: 10, scope: !21361)
!21397 = !DILocation(line: 4092, column: 12, scope: !21361)
!21398 = !DILocation(line: 4092, column: 4, scope: !21361)
!21399 = !DILocation(line: 4093, column: 4, scope: !21361)
!21400 = !DILocation(line: 4096, column: 50, scope: !21401)
!21401 = distinct !DILexicalBlock(scope: !21357, file: !3, line: 4095, column: 4)
!21402 = !DILocation(line: 4096, column: 38, scope: !21401)
!21403 = !DILocation(line: 4096, column: 26, scope: !21401)
!21404 = !DILocation(line: 4096, column: 14, scope: !21401)
!21405 = !DILocation(line: 4097, column: 13, scope: !21401)
!21406 = !DILocation(line: 4097, column: 22, scope: !21401)
!21407 = !DILocation(line: 4097, column: 31, scope: !21401)
!21408 = !DILocation(line: 4097, column: 28, scope: !21401)
!21409 = !DILocation(line: 4097, column: 19, scope: !21401)
!21410 = !DILocation(line: 4097, column: 10, scope: !21401)
!21411 = !DILocation(line: 4098, column: 12, scope: !21401)
!21412 = !DILocation(line: 4098, column: 4, scope: !21401)
!21413 = !DILocation(line: 4100, column: 16, scope: !21305)
!21414 = !DILocation(line: 4100, column: 13, scope: !21305)
!21415 = !DILocation(line: 4102, column: 7, scope: !21416)
!21416 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 4102, column: 6)
!21417 = !DILocation(line: 4102, column: 16, scope: !21416)
!21418 = !DILocation(line: 4102, column: 25, scope: !21416)
!21419 = !DILocation(line: 4102, column: 29, scope: !21416)
!21420 = !DILocation(line: 4102, column: 35, scope: !21416)
!21421 = !DILocation(line: 4102, column: 6, scope: !21305)
!21422 = !DILocation(line: 4104, column: 15, scope: !21423)
!21423 = distinct !DILexicalBlock(scope: !21416, file: !3, line: 4103, column: 4)
!21424 = !DILocation(line: 4104, column: 25, scope: !21423)
!21425 = !DILocation(line: 4106, column: 8, scope: !21423)
!21426 = !DILocation(line: 4106, column: 12, scope: !21423)
!21427 = !DILocation(line: 4106, column: 17, scope: !21423)
!21428 = !DILocation(line: 4106, column: 21, scope: !21423)
!21429 = !DILocation(line: 4106, column: 26, scope: !21423)
!21430 = !DILocation(line: 4106, column: 29, scope: !21423)
!21431 = !DILocation(line: 4106, column: 39, scope: !21423)
!21432 = !DILocation(line: 4106, column: 48, scope: !21423)
!21433 = !DILocation(line: 4106, column: 54, scope: !21423)
!21434 = !DILocation(line: 4106, column: 52, scope: !21423)
!21435 = !DILocation(line: 4104, column: 4, scope: !21423)
!21436 = !DILocation(line: 4107, column: 15, scope: !21423)
!21437 = !DILocation(line: 4107, column: 25, scope: !21423)
!21438 = !DILocation(line: 4107, column: 48, scope: !21423)
!21439 = !DILocation(line: 4107, column: 4, scope: !21423)
!21440 = !DILocation(line: 4108, column: 15, scope: !21423)
!21441 = !DILocation(line: 4108, column: 25, scope: !21423)
!21442 = !DILocation(line: 4108, column: 48, scope: !21423)
!21443 = !DILocation(line: 4108, column: 4, scope: !21423)
!21444 = !DILocation(line: 4109, column: 15, scope: !21423)
!21445 = !DILocation(line: 4109, column: 25, scope: !21423)
!21446 = !DILocation(line: 4109, column: 48, scope: !21423)
!21447 = !DILocation(line: 4109, column: 4, scope: !21423)
!21448 = !DILocation(line: 4110, column: 15, scope: !21423)
!21449 = !DILocation(line: 4110, column: 25, scope: !21423)
!21450 = !DILocation(line: 4110, column: 48, scope: !21423)
!21451 = !DILocation(line: 4110, column: 4, scope: !21423)
!21452 = !DILocation(line: 4111, column: 15, scope: !21423)
!21453 = !DILocation(line: 4111, column: 25, scope: !21423)
!21454 = !DILocation(line: 4111, column: 61, scope: !21423)
!21455 = !DILocation(line: 4111, column: 73, scope: !21423)
!21456 = !DILocation(line: 4111, column: 4, scope: !21423)
!21457 = !DILocation(line: 4112, column: 4, scope: !21423)
!21458 = !DILocation(line: 4113, column: 2, scope: !21305)
!21459 = !DILocation(line: 4061, column: 29, scope: !21300)
!21460 = !DILocation(line: 4061, column: 7, scope: !21300)
!21461 = distinct !{!21461, !21303, !21462}
!21462 = !DILocation(line: 4113, column: 2, scope: !21297)
!21463 = !DILocation(line: 4114, column: 7, scope: !21279)
!21464 = !DILocation(line: 4053, column: 34, scope: !21274)
!21465 = !DILocation(line: 4053, column: 5, scope: !21274)
!21466 = distinct !{!21466, !21277, !21467}
!21467 = !DILocation(line: 4114, column: 7, scope: !21271)
!21468 = !DILocation(line: 4115, column: 5, scope: !21257)
!21469 = !DILocation(line: 4115, column: 12, scope: !21257)
!21470 = !DILocation(line: 4115, column: 23, scope: !21257)
!21471 = !DILocation(line: 4117, column: 20, scope: !21472)
!21472 = distinct !DILexicalBlock(scope: !21257, file: !3, line: 4116, column: 7)
!21473 = !DILocation(line: 4117, column: 26, scope: !21472)
!21474 = !DILocation(line: 4117, column: 19, scope: !21472)
!21475 = !DILocation(line: 4117, column: 17, scope: !21472)
!21476 = !DILocation(line: 4118, column: 16, scope: !21472)
!21477 = !DILocation(line: 4118, column: 11, scope: !21472)
!21478 = !DILocation(line: 4118, column: 14, scope: !21472)
!21479 = !DILocation(line: 4119, column: 16, scope: !21472)
!21480 = !DILocation(line: 4119, column: 22, scope: !21472)
!21481 = !DILocation(line: 4119, column: 13, scope: !21472)
!21482 = !DILocation(line: 4120, column: 18, scope: !21472)
!21483 = distinct !{!21483, !21468, !21484}
!21484 = !DILocation(line: 4121, column: 7, scope: !21257)
!21485 = !DILocation(line: 4123, column: 10, scope: !21486)
!21486 = distinct !DILexicalBlock(scope: !21257, file: !3, line: 4123, column: 9)
!21487 = !DILocation(line: 4123, column: 19, scope: !21486)
!21488 = !DILocation(line: 4123, column: 28, scope: !21486)
!21489 = !DILocation(line: 4123, column: 32, scope: !21486)
!21490 = !DILocation(line: 4123, column: 38, scope: !21486)
!21491 = !DILocation(line: 4123, column: 9, scope: !21257)
!21492 = !DILocation(line: 4125, column: 18, scope: !21493)
!21493 = distinct !DILexicalBlock(scope: !21486, file: !3, line: 4124, column: 7)
!21494 = !DILocation(line: 4125, column: 28, scope: !21493)
!21495 = !DILocation(line: 4127, column: 4, scope: !21493)
!21496 = !DILocation(line: 4127, column: 8, scope: !21493)
!21497 = !DILocation(line: 4127, column: 13, scope: !21493)
!21498 = !DILocation(line: 4127, column: 17, scope: !21493)
!21499 = !DILocation(line: 4127, column: 22, scope: !21493)
!21500 = !DILocation(line: 4127, column: 32, scope: !21493)
!21501 = !DILocation(line: 4127, column: 41, scope: !21493)
!21502 = !DILocation(line: 4127, column: 47, scope: !21493)
!21503 = !DILocation(line: 4127, column: 45, scope: !21493)
!21504 = !DILocation(line: 4125, column: 7, scope: !21493)
!21505 = !DILocation(line: 4129, column: 18, scope: !21493)
!21506 = !DILocation(line: 4129, column: 28, scope: !21493)
!21507 = !DILocation(line: 4129, column: 51, scope: !21493)
!21508 = !DILocation(line: 4129, column: 7, scope: !21493)
!21509 = !DILocation(line: 4130, column: 18, scope: !21493)
!21510 = !DILocation(line: 4130, column: 28, scope: !21493)
!21511 = !DILocation(line: 4130, column: 51, scope: !21493)
!21512 = !DILocation(line: 4130, column: 7, scope: !21493)
!21513 = !DILocation(line: 4131, column: 18, scope: !21493)
!21514 = !DILocation(line: 4131, column: 28, scope: !21493)
!21515 = !DILocation(line: 4131, column: 51, scope: !21493)
!21516 = !DILocation(line: 4131, column: 7, scope: !21493)
!21517 = !DILocation(line: 4132, column: 18, scope: !21493)
!21518 = !DILocation(line: 4132, column: 28, scope: !21493)
!21519 = !DILocation(line: 4132, column: 51, scope: !21493)
!21520 = !DILocation(line: 4132, column: 7, scope: !21493)
!21521 = !DILocation(line: 4133, column: 18, scope: !21493)
!21522 = !DILocation(line: 4133, column: 28, scope: !21493)
!21523 = !DILocation(line: 4133, column: 51, scope: !21493)
!21524 = !DILocation(line: 4133, column: 7, scope: !21493)
!21525 = !DILocation(line: 4134, column: 18, scope: !21493)
!21526 = !DILocation(line: 4134, column: 28, scope: !21493)
!21527 = !DILocation(line: 4134, column: 51, scope: !21493)
!21528 = !DILocation(line: 4134, column: 7, scope: !21493)
!21529 = !DILocation(line: 4135, column: 18, scope: !21493)
!21530 = !DILocation(line: 4135, column: 28, scope: !21493)
!21531 = !DILocation(line: 4135, column: 60, scope: !21493)
!21532 = !DILocation(line: 4135, column: 7, scope: !21493)
!21533 = !DILocation(line: 4136, column: 7, scope: !21493)
!21534 = !DILocation(line: 4138, column: 10, scope: !21535)
!21535 = distinct !DILexicalBlock(scope: !21257, file: !3, line: 4138, column: 9)
!21536 = !DILocation(line: 4138, column: 19, scope: !21535)
!21537 = !DILocation(line: 4138, column: 28, scope: !21535)
!21538 = !DILocation(line: 4138, column: 32, scope: !21535)
!21539 = !DILocation(line: 4138, column: 38, scope: !21535)
!21540 = !DILocation(line: 4138, column: 9, scope: !21257)
!21541 = !DILocation(line: 4140, column: 18, scope: !21542)
!21542 = distinct !DILexicalBlock(scope: !21535, file: !3, line: 4139, column: 7)
!21543 = !DILocation(line: 4140, column: 28, scope: !21542)
!21544 = !DILocation(line: 4140, column: 7, scope: !21542)
!21545 = !DILocation(line: 4141, column: 19, scope: !21542)
!21546 = !DILocation(line: 4141, column: 29, scope: !21542)
!21547 = !DILocation(line: 4141, column: 40, scope: !21542)
!21548 = !DILocation(line: 4141, column: 53, scope: !21542)
!21549 = !DILocation(line: 4141, column: 58, scope: !21542)
!21550 = !DILocation(line: 4141, column: 7, scope: !21542)
!21551 = !DILocation(line: 4142, column: 7, scope: !21542)
!21552 = !DILocation(line: 4143, column: 5, scope: !21257)
!21553 = !DILocation(line: 4047, column: 32, scope: !21252)
!21554 = !DILocation(line: 4047, column: 3, scope: !21252)
!21555 = distinct !{!21555, !21255, !21556}
!21556 = !DILocation(line: 4143, column: 5, scope: !21249)
!21557 = !DILocation(line: 4145, column: 3, scope: !21138)
!21558 = !DILocation(line: 4146, column: 3, scope: !21138)
